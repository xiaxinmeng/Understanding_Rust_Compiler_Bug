{"sha": "9a4610284d04ad1a9a26d52e117e67ee6ef70c8d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE0NjEwMjg0ZDA0YWQxYTlhMjZkNTJlMTE3ZTY3ZWU2ZWY3MGM4ZA==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2009-04-22T21:54:54Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2009-04-22T21:54:54Z"}, "message": "linux-unwind.h (get_regs): Remove type puns.\n\n\t* config/rs6000/linux-unwind.h (get_regs): Remove type\n\tpuns. Change the type of `pc' to an array of unsigned ints and\n\tupdate all users.  Constify frame24.\n\nFrom-SVN: r146615", "tree": {"sha": "b17af8bc15dd72895015c9d2f27f9e5d7955b384", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b17af8bc15dd72895015c9d2f27f9e5d7955b384"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a4610284d04ad1a9a26d52e117e67ee6ef70c8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a4610284d04ad1a9a26d52e117e67ee6ef70c8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a4610284d04ad1a9a26d52e117e67ee6ef70c8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a4610284d04ad1a9a26d52e117e67ee6ef70c8d/comments", "author": null, "committer": null, "parents": [{"sha": "653e2568d981fcc3fd6fc4e0920e3eb4a1f58f3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/653e2568d981fcc3fd6fc4e0920e3eb4a1f58f3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/653e2568d981fcc3fd6fc4e0920e3eb4a1f58f3a"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "34f808119117f69cca59e338a2105602208fe560", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4610284d04ad1a9a26d52e117e67ee6ef70c8d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4610284d04ad1a9a26d52e117e67ee6ef70c8d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a4610284d04ad1a9a26d52e117e67ee6ef70c8d", "patch": "@@ -1,3 +1,9 @@\n+2009-04-23  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* config/rs6000/linux-unwind.h (get_regs): Remove type\n+\tpuns. Change the type of `pc' to an array of unsigned ints and\n+\tupdate all users.  Constify frame24.\n+\n 2009-04-22  DJ Delorie  <dj@redhat.com>\n \n \t* config/m32c/m32c.c (m32c_special_page_vector_p): Move"}, {"sha": "a16df97e97ea2934f01e486204f7348730b1467b", "filename": "gcc/config/rs6000/linux-unwind.h", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a4610284d04ad1a9a26d52e117e67ee6ef70c8d/gcc%2Fconfig%2Frs6000%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a4610284d04ad1a9a26d52e117e67ee6ef70c8d/gcc%2Fconfig%2Frs6000%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux-unwind.h?ref=9a4610284d04ad1a9a26d52e117e67ee6ef70c8d", "patch": "@@ -91,14 +91,13 @@ enum { SIGNAL_FRAMESIZE = 128 };\n static struct gcc_regs *\n get_regs (struct _Unwind_Context *context)\n {\n-  const unsigned char *pc = context->ra;\n+  const unsigned int *pc = context->ra;\n \n   /* addi r1, r1, 128; li r0, 0x0077; sc  (sigreturn) */\n   /* addi r1, r1, 128; li r0, 0x00AC; sc  (rt_sigreturn) */\n-  if (*(unsigned int *) (pc + 0) != 0x38210000 + SIGNAL_FRAMESIZE\n-      || *(unsigned int *) (pc + 8) != 0x44000002)\n+  if (pc[0] != 0x38210000 + SIGNAL_FRAMESIZE || pc[2] != 0x44000002)\n     return NULL;\n-  if (*(unsigned int *) (pc + 4) == 0x38000077)\n+  if (pc[1] == 0x38000077)\n     {\n       struct sigframe {\n \tchar gap[SIGNAL_FRAMESIZE];\n@@ -107,17 +106,17 @@ get_regs (struct _Unwind_Context *context)\n       } *frame = (struct sigframe *) context->cfa;\n       return frame->regs;\n     }\n-  else if (*(unsigned int *) (pc + 4) == 0x380000AC)\n+  else if (pc[1] == 0x380000AC)\n     {\n       /* This works for 2.4 kernels, but not for 2.6 kernels with vdso\n \t because pc isn't pointing into the stack.  Can be removed when\n \t no one is running 2.4.19 or 2.4.20, the first two ppc64\n \t kernels released.  */\n-      struct rt_sigframe_24 {\n+      const struct rt_sigframe_24 {\n \tint tramp[6];\n \tvoid *pinfo;\n \tstruct gcc_ucontext *puc;\n-      } *frame24 = (struct rt_sigframe_24 *) pc;\n+      } *frame24 = (const struct rt_sigframe_24 *) context->ra;\n \n       /* Test for magic value in *puc of vdso.  */\n       if ((long) frame24->puc != -21 * 8)\n@@ -146,16 +145,15 @@ enum { SIGNAL_FRAMESIZE = 64 };\n static struct gcc_regs *\n get_regs (struct _Unwind_Context *context)\n {\n-  const unsigned char *pc = context->ra;\n+  const unsigned int *pc = context->ra;\n \n   /* li r0, 0x7777; sc  (sigreturn old)  */\n   /* li r0, 0x0077; sc  (sigreturn new)  */\n   /* li r0, 0x6666; sc  (rt_sigreturn old)  */\n   /* li r0, 0x00AC; sc  (rt_sigreturn new)  */\n-  if (*(const unsigned int *) (pc + 4) != 0x44000002)\n+  if (pc[1] != 0x44000002)\n     return NULL;\n-  if (*(const unsigned int *) (pc + 0) == 0x38007777\n-      || *(const unsigned int *) (pc + 0) == 0x38000077)\n+  if (pc[0] == 0x38007777 || pc[0] == 0x38000077)\n     {\n       struct sigframe {\n \tchar gap[SIGNAL_FRAMESIZE];\n@@ -164,8 +162,7 @@ get_regs (struct _Unwind_Context *context)\n       } *frame = (struct sigframe *) context->cfa;\n       return frame->regs;\n     }\n-  else if (*(const unsigned int *) (pc + 0) == 0x38006666\n-\t   || *(const unsigned int *) (pc + 0) == 0x380000AC)\n+  else if (pc[0] == 0x38006666 || pc[0] == 0x380000AC)\n     {\n       struct rt_sigframe {\n \tchar gap[SIGNAL_FRAMESIZE + 16];"}]}