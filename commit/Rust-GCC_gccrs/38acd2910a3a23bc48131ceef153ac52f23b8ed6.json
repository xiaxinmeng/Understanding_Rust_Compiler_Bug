{"sha": "38acd2910a3a23bc48131ceef153ac52f23b8ed6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhhY2QyOTEwYTNhMjNiYzQ4MTMxY2VlZjE1M2FjNTJmMjNiOGVkNg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-08-21T16:19:14Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-08-21T16:19:14Z"}, "message": "i386.md (any_div): Remove.\n\n\t* config/i386/i386.md (any_div): Remove.\n\t(sgnprefix): Update for removal.\n\t(u): Ditto.\n\nFrom-SVN: r177941", "tree": {"sha": "e4c101e26671e0c0bd395bc7588dcfbeb7d00711", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4c101e26671e0c0bd395bc7588dcfbeb7d00711"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38acd2910a3a23bc48131ceef153ac52f23b8ed6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38acd2910a3a23bc48131ceef153ac52f23b8ed6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38acd2910a3a23bc48131ceef153ac52f23b8ed6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38acd2910a3a23bc48131ceef153ac52f23b8ed6/comments", "author": null, "committer": null, "parents": [{"sha": "2d27cb4477b945b1b836a357a0440fd7d8d6ca28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d27cb4477b945b1b836a357a0440fd7d8d6ca28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d27cb4477b945b1b836a357a0440fd7d8d6ca28"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "b277da601fa3309be0eea4b068feb9fe08635046", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38acd2910a3a23bc48131ceef153ac52f23b8ed6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38acd2910a3a23bc48131ceef153ac52f23b8ed6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=38acd2910a3a23bc48131ceef153ac52f23b8ed6", "patch": "@@ -1,3 +1,9 @@\n+2011-08-21  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (any_div): Remove.\n+\t(sgnprefix): Update for removal.\n+\t(u): Ditto.\n+\n 2011-08-20  Vladimir Makarov  <vmakarov@redhat.com>\n \n \t* ira-lives.c (mark_pseudo_regno_subword_live): Use allocno class\n@@ -8,7 +14,7 @@\n 2011-08-20  Richard Henderson  <rth@redhat.com>\n \n \t* config/c6x/eqd.c, config/c6x/eqf.c, config/c6x/ged.c,\n-\tconfig/c6x/gef.c, config/c6x/gtd.c, config/c6x/gtf.c, \n+\tconfig/c6x/gef.c, config/c6x/gtd.c, config/c6x/gtf.c,\n \tconfig/c6x/led.c, config/c6x/lef.c, config/c6x/ltd.c,\n \tconfig/c6x/ltf.c: Adjust include path for soft-fp.\n "}, {"sha": "b73d46f573ea8066cae24409206901ac37b02c80", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38acd2910a3a23bc48131ceef153ac52f23b8ed6/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38acd2910a3a23bc48131ceef153ac52f23b8ed6/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=38acd2910a3a23bc48131ceef153ac52f23b8ed6", "patch": "@@ -778,17 +778,12 @@\n ;; Used in signed and unsigned widening multiplications.\n (define_code_iterator any_extend [sign_extend zero_extend])\n \n-;; Various insn prefixes for signed and unsigned operations.\n-(define_code_attr u [(sign_extend \"\") (zero_extend \"u\")\n-\t\t     (div \"\") (udiv \"u\")])\n-(define_code_attr s [(sign_extend \"s\") (zero_extend \"u\")])\n-\n-;; Used in signed and unsigned divisions.\n-(define_code_iterator any_div [div udiv])\n+;; Prefix for insn menmonic.\n+(define_code_attr sgnprefix [(sign_extend \"i\") (zero_extend \"\")])\n \n-;; Instruction prefix for signed and unsigned operations.\n-(define_code_attr sgnprefix [(sign_extend \"i\") (zero_extend \"\")\n-\t\t\t     (div \"i\") (udiv \"\")])\n+;; Prefix for define_insn\n+(define_code_attr u [(sign_extend \"\") (zero_extend \"u\")])\n+(define_code_attr s [(sign_extend \"s\") (zero_extend \"u\")])\n \n ;; All integer modes.\n (define_mode_iterator SWI1248x [QI HI SI DI])"}]}