{"sha": "8d53f1939b7e74bc8a0f2366c39e6cb015892b39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ1M2YxOTM5YjdlNzRiYzhhMGYyMzY2YzM5ZTZjYjAxNTg5MmIzOQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-05-14T22:25:44Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-05-14T22:25:44Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r980", "tree": {"sha": "c1253e781c76914b1299836dc48982d003f60e36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1253e781c76914b1299836dc48982d003f60e36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d53f1939b7e74bc8a0f2366c39e6cb015892b39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d53f1939b7e74bc8a0f2366c39e6cb015892b39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d53f1939b7e74bc8a0f2366c39e6cb015892b39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d53f1939b7e74bc8a0f2366c39e6cb015892b39/comments", "author": null, "committer": null, "parents": [{"sha": "b7a091350e9895124553f7d5109776f985e693b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7a091350e9895124553f7d5109776f985e693b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7a091350e9895124553f7d5109776f985e693b7"}], "stats": {"total": 54, "additions": 0, "deletions": 54}, "files": [{"sha": "8214a980fb88e0e4ab8ce22bbad78a411a8213fe", "filename": "gcc/config/sparc/sysv4.h", "status": "modified", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d53f1939b7e74bc8a0f2366c39e6cb015892b39/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d53f1939b7e74bc8a0f2366c39e6cb015892b39/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsysv4.h?ref=8d53f1939b7e74bc8a0f2366c39e6cb015892b39", "patch": "@@ -47,8 +47,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #undef COMMON_ASM_OP\n #undef SKIP_ASM_OP\n #undef DEF_ASM_OP\t/* Has no equivalent.  See ASM_OUTPUT_DEF below.  */\n-#undef ASM_GENERATE_INTERNAL_LABEL\n-#undef ASM_OUTPUT_INTERNAL_LABEL\n \n /* Provide a set of pre-definitions and pre-assertions appropriate for\n    the Sparc running svr4.  __svr4__ is our extension.  */\n@@ -115,58 +113,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \tfprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n   } while (0)\n \n-/* Generate the special assembly code needed to align the start of a jump\n-   tables.  Under svr4, jump tables go into the .rodata section.  Other\n-   things (e.g. constants) may be put into the .rodata section too, and\n-   those other things may end on odd (i.e. unaligned) boundaries, so we\n-   need to get re-aligned just before we output each jump table.  */\n-\n-#define ASM_OUTPUT_ALIGN_JUMP_TABLE(FILE) ASM_OUTPUT_ALIGN ((FILE), 2)\n-\n-/* This is how to output an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.\n-\n-   If the NUM argument is negative, we don't use it when generating the\n-   label.\n-\n-   For most svr4 systems, the convention is that any symbol which begins\n-   with a period is not put into the linker symbol table by the assembler,\n-   however the current Sparc/svr4 assembler is brain-dammaged and it needs\n-   to see `.L' at the start of a symbol or else it will be put into the\n-   linker symbol table.\n-*/\n-\n-#define ASM_OUTPUT_INTERNAL_LABEL(FILE, PREFIX, NUM)\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  if ((int) (NUM) >= 0)\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \".L%s%d:\\n\", PREFIX, NUM);\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \".L%s:\\n\", PREFIX);\t\t\t\t\t\\\n-} while (0)\n-\n-/* This is how to store into the string LABEL\n-   the symbol_ref name of an internal numbered label where\n-   PREFIX is the class of label and NUM is the number within the class.\n-   This is suitable for output with `assemble_name'.\n-\n-   If the NUM argument is negative, we don't use it when generating the\n-   label.\n-\n-   For most svr4 systems, the convention is that any symbol which begins\n-   with a period is not put into the linker symbol table by the assembler,\n-   however the current Sparc/svr4 assembler is brain-dammaged and it needs\n-   to see `.L' at the start of a symbol or else it will be put into the\n-   linker symbol table.\n-*/\n-\n-#define ASM_GENERATE_INTERNAL_LABEL(LABEL, PREFIX, NUM)\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  if ((int) (NUM) >= 0)\t\t\t\t\t\t\t\\\n-    sprintf (LABEL, \"*.L%s%d\", PREFIX, NUM);\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    sprintf (LABEL, \"*.L%s\", PREFIX);\t\t\t\t\t\\\n-} while (0)\n-\n /* Define how the Sparc registers should be numbered for Dwarf output.\n    The numbering provided here should be compatible with the native\n    svr4 SDB debugger in the Sparc/svr4 reference port.  The numbering"}]}