{"sha": "3dcde5efcd2ead7eee8864a46e1cc0e1fa459318", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RjZGU1ZWZjZDJlYWQ3ZWVlODg2NGE0NmUxY2MwZTFmYTQ1OTMxOA==", "commit": {"author": {"name": "Prasad Ghangal", "email": "prasad.ghangal@gmail.com", "date": "2017-02-10T12:47:05Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-02-10T12:47:05Z"}, "message": "gimple-parser.c (c_parser_gimple_binary_expression): Avoid building IL when arguments are error_mark_node.\n\n2017-02-10  Prasad Ghangal  <prasad.ghangal@gmail.com>\n\tRichard Biener  <rguenther@suse.de>\n\n\t* gimple-parser.c (c_parser_gimple_binary_expression): Avoid\n\tbuilding IL when arguments are error_mark_node.\n\t(c_parser_gimple_unary_expression): Likewise.\n\t(c_parser_gimple_if_stmt): Likewise.\n\t(c_parser_gimple_switch_stmt): Likewise.\n\t(c_parser_gimple_return_stmt): Likewise.\n\t(c_parser_parse_ssa_name): When name lookup fails do not build\n\tan SSA name.  Use undeclared rather than not declared in error\n\treporting.\n\n\t* gcc.dg/gimplefe-error-1.c: New testcase.\n\t* gcc.dg/gimplefe-error-2.c: New testcase.\n\t* gcc.dg/gimplefe-error-3.c: New testcase.\n\nCo-Authored-By: Richard Biener <rguenther@suse.de>\n\nFrom-SVN: r245326", "tree": {"sha": "cf76d3c77f76b388d6e610eac2a03eb64d5251d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf76d3c77f76b388d6e610eac2a03eb64d5251d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3dcde5efcd2ead7eee8864a46e1cc0e1fa459318", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dcde5efcd2ead7eee8864a46e1cc0e1fa459318", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dcde5efcd2ead7eee8864a46e1cc0e1fa459318", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dcde5efcd2ead7eee8864a46e1cc0e1fa459318/comments", "author": {"login": "PrasadG193", "id": 7098659, "node_id": "MDQ6VXNlcjcwOTg2NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/7098659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PrasadG193", "html_url": "https://github.com/PrasadG193", "followers_url": "https://api.github.com/users/PrasadG193/followers", "following_url": "https://api.github.com/users/PrasadG193/following{/other_user}", "gists_url": "https://api.github.com/users/PrasadG193/gists{/gist_id}", "starred_url": "https://api.github.com/users/PrasadG193/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PrasadG193/subscriptions", "organizations_url": "https://api.github.com/users/PrasadG193/orgs", "repos_url": "https://api.github.com/users/PrasadG193/repos", "events_url": "https://api.github.com/users/PrasadG193/events{/privacy}", "received_events_url": "https://api.github.com/users/PrasadG193/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6139a3b76c3f149f17d7415d84633cbe617ed72b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6139a3b76c3f149f17d7415d84633cbe617ed72b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6139a3b76c3f149f17d7415d84633cbe617ed72b"}], "stats": {"total": 107, "additions": 92, "deletions": 15}, "files": [{"sha": "fdf5046118179fd4d512778ef1f9a8fdfda18228", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dcde5efcd2ead7eee8864a46e1cc0e1fa459318/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dcde5efcd2ead7eee8864a46e1cc0e1fa459318/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=3dcde5efcd2ead7eee8864a46e1cc0e1fa459318", "patch": "@@ -1,3 +1,16 @@\n+2017-02-10  Prasad Ghangal  <prasad.ghangal@gmail.com>\n+\tRichard Biener  <rguenther@suse.de>\n+\n+\t* gimple-parser.c (c_parser_gimple_binary_expression): Avoid\n+\tbuilding IL when arguments are error_mark_node.\n+\t(c_parser_gimple_unary_expression): Likewise.\n+\t(c_parser_gimple_if_stmt): Likewise.\n+\t(c_parser_gimple_switch_stmt): Likewise.\n+\t(c_parser_gimple_return_stmt): Likewise.\n+\t(c_parser_parse_ssa_name): When name lookup fails do not build\n+\tan SSA name.  Use undeclared rather than not declared in error\n+\treporting.\n+\n 2017-02-09  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/79428"}, {"sha": "afa2e52b7a83a6808b5811f8a7b55c1c790bdea3", "filename": "gcc/c/gimple-parser.c", "status": "modified", "additions": 23, "deletions": 15, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dcde5efcd2ead7eee8864a46e1cc0e1fa459318/gcc%2Fc%2Fgimple-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dcde5efcd2ead7eee8864a46e1cc0e1fa459318/gcc%2Fc%2Fgimple-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fgimple-parser.c?ref=3dcde5efcd2ead7eee8864a46e1cc0e1fa459318", "patch": "@@ -524,9 +524,8 @@ c_parser_gimple_binary_expression (c_parser *parser)\n   location_t ret_loc = c_parser_peek_token (parser)->location;\n   c_parser_consume_token (parser);\n   rhs = c_parser_gimple_postfix_expression (parser);\n-  if (c_parser_error (parser))\n-    return ret;\n-  ret.value = build2_loc (ret_loc, code, ret_type, lhs.value, rhs.value);\n+  if (lhs.value != error_mark_node && rhs.value != error_mark_node)\n+    ret.value = build2_loc (ret_loc, code, ret_type, lhs.value, rhs.value);\n   return ret;\n }\n \n@@ -560,6 +559,8 @@ c_parser_gimple_unary_expression (c_parser *parser)\n       {\n \tc_parser_consume_token (parser);\n \top = c_parser_gimple_postfix_expression (parser);\n+\tif (op.value == error_mark_node)\n+\t  return ret;\n \tfinish = op.get_finish ();\n \tlocation_t combined_loc = make_location (op_loc, op_loc, finish);\n \tret.value = build_simple_mem_ref_loc (combined_loc, op.value);\n@@ -643,7 +644,7 @@ c_parser_parse_ssa_name (c_parser *parser,\n \t{\n \t  if (! type)\n \t    {\n-\t      c_parser_error (parser, \"SSA name not declared\"); \n+\t      c_parser_error (parser, \"SSA name undeclared\"); \n \t      return error_mark_node;\n \t    }\n \t  name = make_ssa_name_fn (cfun, type, NULL, version);\n@@ -663,9 +664,9 @@ c_parser_parse_ssa_name (c_parser *parser,\n \t  id = get_identifier (var_name);\n \t  tree parent = lookup_name (id);\n \t  XDELETEVEC (var_name);\n-\t  if (! parent)\n+\t  if (! parent || parent == error_mark_node)\n \t    {\n-\t      c_parser_error (parser, \"base variable or SSA name not declared\"); \n+\t      c_parser_error (parser, \"base variable or SSA name undeclared\"); \n \t      return error_mark_node;\n \t    }\n \t  if (VECTOR_TYPE_P (TREE_TYPE (parent))\n@@ -1300,8 +1301,9 @@ c_parser_gimple_if_stmt (c_parser *parser, gimple_seq *seq)\n       return;\n     }\n \n-  gimple_seq_add_stmt (seq, gimple_build_cond_from_tree (cond, t_label,\n-\t\t\t\t\t\t\t f_label));\n+  if (cond != error_mark_node)\n+    gimple_seq_add_stmt (seq, gimple_build_cond_from_tree (cond, t_label,\n+\t\t\t\t\t\t\t   f_label));\n }\n \n /* Parse gimple switch-statement.\n@@ -1441,10 +1443,13 @@ c_parser_gimple_switch_stmt (c_parser *parser, gimple_seq *seq)\n     }\n   if (! c_parser_require (parser, CPP_CLOSE_BRACE, \"expected %<}%>\"))\n     return;\n-  gimple_seq_add_stmt (seq, gimple_build_switch (cond_expr.value,\n-\t\t\t\t\t\t default_label, labels));\n-  gimple_seq_add_seq (seq, switch_body);\n-  labels.release();\n+\n+  if (cond_expr.value != error_mark_node)\n+    {\n+      gimple_seq_add_stmt (seq, gimple_build_switch (cond_expr.value,\n+\t\t\t\t\t\t     default_label, labels));\n+      gimple_seq_add_seq (seq, switch_body);\n+    }\n }\n \n /* Parse gimple return statement.  */\n@@ -1465,9 +1470,12 @@ c_parser_gimple_return_stmt (c_parser *parser, gimple_seq *seq)\n     {\n       location_t xloc = c_parser_peek_token (parser)->location;\n       c_expr expr = c_parser_gimple_unary_expression (parser);\n-      c_finish_gimple_return (xloc, expr.value);\n-      ret = gimple_build_return (expr.value);\n-      gimple_seq_add_stmt (seq, ret);\n+      if (expr.value != error_mark_node)\n+\t{\n+\t  c_finish_gimple_return (xloc, expr.value);\n+\t  ret = gimple_build_return (expr.value);\n+\t  gimple_seq_add_stmt (seq, ret);\n+\t}\n     }\n }\n "}, {"sha": "3cf1cb245746f936d20f90213ac29a5837423650", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dcde5efcd2ead7eee8864a46e1cc0e1fa459318/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dcde5efcd2ead7eee8864a46e1cc0e1fa459318/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3dcde5efcd2ead7eee8864a46e1cc0e1fa459318", "patch": "@@ -1,3 +1,10 @@\n+2017-02-10  Prasad Ghangal  <prasad.ghangal@gmail.com>\n+\tRichard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/gimplefe-error-1.c: New testcase.\n+\t* gcc.dg/gimplefe-error-2.c: New testcase.\n+\t* gcc.dg/gimplefe-error-3.c: New testcase.\n+\n 2017-02-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/79411"}, {"sha": "5b870f14a319bf1871dca9cedea25021c8675d29", "filename": "gcc/testsuite/gcc.dg/gimplefe-error-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dcde5efcd2ead7eee8864a46e1cc0e1fa459318/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-error-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dcde5efcd2ead7eee8864a46e1cc0e1fa459318/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-error-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-error-1.c?ref=3dcde5efcd2ead7eee8864a46e1cc0e1fa459318", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fgimple\" } */\n+\n+void __GIMPLE () foo (int a)\n+{\n+bb_2:\n+  a = *b; /* { dg-error \"undeclared\" } */\n+\n+bb_3:\n+  return;\n+}"}, {"sha": "216623e6d0f9b0f3a0596444f8fad86200d12b93", "filename": "gcc/testsuite/gcc.dg/gimplefe-error-2.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dcde5efcd2ead7eee8864a46e1cc0e1fa459318/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-error-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dcde5efcd2ead7eee8864a46e1cc0e1fa459318/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-error-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-error-2.c?ref=3dcde5efcd2ead7eee8864a46e1cc0e1fa459318", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fgimple\" } */\n+\n+int __GIMPLE ()\n+main (int argc, char * * argv)\n+{\n+\n+bb_2:\n+  switch (a) {default: L2; case 1: L0; case 2: L1; } /* { dg-error \"undeclared\" } */\n+\n+L0:\n+  a = 0;\n+  goto bb_6;\n+\n+L1:\n+  a = 3;\n+  goto L2;\n+\n+L2:\n+  return a;\n+}"}, {"sha": "9209bbaeb7d8d5047cba66a973e8126eeaac2108", "filename": "gcc/testsuite/gcc.dg/gimplefe-error-3.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dcde5efcd2ead7eee8864a46e1cc0e1fa459318/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-error-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dcde5efcd2ead7eee8864a46e1cc0e1fa459318/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-error-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-error-3.c?ref=3dcde5efcd2ead7eee8864a46e1cc0e1fa459318", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fgimple\" } */\n+\n+int __GIMPLE foo()\n+{\n+  if (a != 2) /* { dg-error \"undeclared\" } */\n+    goto bb1;\n+  else\n+    goto bb2;\n+\n+bb1:\n+  a_1 = 10; /* { dg-error \"undeclared\" } */\n+  return a_1;\n+\n+bb2:\n+  return 1;\n+}"}]}