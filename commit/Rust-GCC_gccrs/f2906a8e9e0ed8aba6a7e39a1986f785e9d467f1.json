{"sha": "f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI5MDZhOGU5ZTBlZDhhYmE2YTdlMzlhMTk4NmY3ODVlOWQ0NjdmMQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-11-08T15:16:22Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-11-08T15:16:22Z"}, "message": "re PR tree-optimization/51012 (ICE: in fold_convert_loc, at fold-const.c:1897 with -fno-early-inlining and passing incompatible function ptr)\n\n2011-11-08  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/51012\n\t* ipa-prop.c (update_indirect_edges_after_inlining): Fixup\n\tnon-inlinable state.\n\t* cgraph.c (cgraph_make_edge_direct): Likewise.\n\n\t* gcc.dg/pr51012-1.c: New testcase.\n\t* gcc.dg/pr51012-2.c: Likewise.\n\nFrom-SVN: r181166", "tree": {"sha": "c00e0356ac03d362aa0c47b542073da126813776", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c00e0356ac03d362aa0c47b542073da126813776"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a59526334d3f36a43f94cdd29ac661eb59260bc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a59526334d3f36a43f94cdd29ac661eb59260bc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a59526334d3f36a43f94cdd29ac661eb59260bc6"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "7db3a37a4422eb0eb2433ef5ecdb91e26f9864f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1", "patch": "@@ -1,3 +1,10 @@\n+2011-11-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/51012\n+\t* ipa-prop.c (update_indirect_edges_after_inlining): Fixup\n+\tnon-inlinable state.\n+\t* cgraph.c (cgraph_make_edge_direct): Likewise.\n+\n 2011-11-08  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR rtl-optimization/47698"}, {"sha": "44a950ca7430ec456a293ccd6b7bf6ea298e4519", "filename": "gcc/cgraph.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1", "patch": "@@ -1184,6 +1184,13 @@ cgraph_make_edge_direct (struct cgraph_edge *edge, struct cgraph_node *callee)\n   /* Insert to callers list of the new callee.  */\n   cgraph_set_edge_callee (edge, callee);\n \n+  if (edge->call_stmt\n+      && !gimple_check_call_matching_types (edge->call_stmt, callee->decl))\n+    {\n+      gimple_call_set_cannot_inline (edge->call_stmt, true);\n+      edge->call_stmt_cannot_inline_p = true;\n+    }\n+\n   /* We need to re-determine the inlining status of the edge.  */\n   initialize_inline_failed (edge);\n }"}, {"sha": "69f0453ee4f58d951cb80c699a71ab454c5cb9a7", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1", "patch": "@@ -1905,6 +1905,13 @@ update_indirect_edges_after_inlining (struct cgraph_edge *cs,\n       if (new_direct_edge)\n \t{\n \t  new_direct_edge->indirect_inlining_edge = 1;\n+\t  if (new_direct_edge->call_stmt\n+\t      && !gimple_check_call_matching_types (new_direct_edge->call_stmt,\n+\t\t\t\t\t\t    new_direct_edge->callee->decl))\n+\t    {\n+\t      gimple_call_set_cannot_inline (new_direct_edge->call_stmt, true);\n+\t      new_direct_edge->call_stmt_cannot_inline_p = true;\n+\t    }\n \t  if (new_edges)\n \t    {\n \t      VEC_safe_push (cgraph_edge_p, heap, *new_edges,"}, {"sha": "1a7528a74e291fa1d33033df84fdfb70678a7d11", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1", "patch": "@@ -1,3 +1,9 @@\n+2011-11-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/51012\n+\t* gcc.dg/pr51012-1.c: New testcase.\n+\t* gcc.dg/pr51012-2.c: Likewise.\n+\n 2011-11-08  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/51010"}, {"sha": "36c788bd5266411ee2f47726b4f0fa91db1922d2", "filename": "gcc/testsuite/gcc.dg/pr51012-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51012-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51012-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51012-1.c?ref=f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile }  */\n+/* { dg-options \"-O2 -fno-early-inlining -fno-ipa-cp\" } */\n+\n+float baz (void)\n+{\n+  return 0;\n+}\n+\n+static inline int bar (int (*ibaz) (void))\n+{\n+  return ibaz ();\n+}\n+\n+void foo (void)\n+{\n+  bar((int (*)(void))baz);\n+}"}, {"sha": "fcc8cea7b3a04b9f7f02e04cef1ecbcf8a21b93c", "filename": "gcc/testsuite/gcc.dg/pr51012-2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51012-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51012-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51012-2.c?ref=f2906a8e9e0ed8aba6a7e39a1986f785e9d467f1", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile }  */\n+/* { dg-options \"-O2 -fno-early-inlining\" } */\n+\n+float baz (void)\n+{\n+  return 0;\n+}\n+\n+static inline int bar (int (*ibaz) (void))\n+{\n+  return ibaz ();\n+}\n+\n+void foo (void)\n+{\n+  bar((int (*)(void))baz);\n+}"}]}