{"sha": "de097a2d7d044caf6841fa395bb322d4ef8ba841", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUwOTdhMmQ3ZDA0NGNhZjY4NDFmYTM5NWJiMzIyZDRlZjhiYTg0MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2002-01-15T22:27:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-01-15T22:27:07Z"}, "message": "c-common.def (FILE_STMT): New code.\n\n        * c-common.def (FILE_STMT): New code.\n        * c-common.c (statement_code_p): It's a statement.\n        * c-common.h (stmt_tree_s): Add x_last_filename.\n        (FILE_STMT_FILENAME_NODE, FILE_STMT_FILENAME): New macros.\n        (last_expr_filename): New macro.\n        * c-semantics.c (begin_stmt_tree): Initialize it.\n        (add_stmt): If the filename changed, also insert a\n        FILE_STMT.\n        (expand_stmt): Handle seeing one.\n\nFrom-SVN: r48881", "tree": {"sha": "9dec30bd55dcecc61d1bc99e776548971a77e3dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9dec30bd55dcecc61d1bc99e776548971a77e3dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de097a2d7d044caf6841fa395bb322d4ef8ba841", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de097a2d7d044caf6841fa395bb322d4ef8ba841", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de097a2d7d044caf6841fa395bb322d4ef8ba841", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de097a2d7d044caf6841fa395bb322d4ef8ba841/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "93e9a9924741c257172f3384ae199b45b5364886", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93e9a9924741c257172f3384ae199b45b5364886", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93e9a9924741c257172f3384ae199b45b5364886"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "2ae5a60871d853a8a10c384db86a690ef6152b5f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de097a2d7d044caf6841fa395bb322d4ef8ba841/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de097a2d7d044caf6841fa395bb322d4ef8ba841/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de097a2d7d044caf6841fa395bb322d4ef8ba841", "patch": "@@ -1,3 +1,15 @@\n+2002-01-15  Jason Merrill  <jason@redhat.com>\n+\n+\t* c-common.def (FILE_STMT): New code.\n+\t* c-common.c (statement_code_p): It's a statement.\n+\t* c-common.h (stmt_tree_s): Add x_last_filename.\n+\t(FILE_STMT_FILENAME_NODE, FILE_STMT_FILENAME): New macros.\n+\t(last_expr_filename): New macro.\n+\t* c-semantics.c (begin_stmt_tree): Initialize it.\n+\t(add_stmt): If the filename changed, also insert a\n+\tFILE_STMT.\n+\t(expand_stmt): Handle seeing one.\n+\n 2002-01-15  Eric Christopher  <echristo@redhat.com>\n \n \t* flow.c (propagate_one_insn): Add error message and print out"}, {"sha": "bbccf4a5092da7ee00b1995046a1b1ba74e476b3", "filename": "gcc/c-common.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de097a2d7d044caf6841fa395bb322d4ef8ba841/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de097a2d7d044caf6841fa395bb322d4ef8ba841/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=de097a2d7d044caf6841fa395bb322d4ef8ba841", "patch": "@@ -3111,6 +3111,7 @@ statement_code_p (code)\n     case GOTO_STMT:\n     case LABEL_STMT:\n     case ASM_STMT:\n+    case FILE_STMT:\n     case CASE_LABEL:\n       return 1;\n "}, {"sha": "d59a151680ea7add3890a0598ab645eff667c9dc", "filename": "gcc/c-common.def", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de097a2d7d044caf6841fa395bb322d4ef8ba841/gcc%2Fc-common.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de097a2d7d044caf6841fa395bb322d4ef8ba841/gcc%2Fc-common.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.def?ref=de097a2d7d044caf6841fa395bb322d4ef8ba841", "patch": "@@ -92,6 +92,10 @@ DEFTREECODE (ASM_STMT, \"asm_stmt\", 'e', 5)\n    variables declared in this scope.  */\n DEFTREECODE (SCOPE_STMT, \"scope_stmt\", 'e', 1)\n \n+/* A FILE_STMT marks the spot where a function changes files.  It has no\n+   other semantics.  FILE_STMT_FILENAME gives the name.  */\n+DEFTREECODE (FILE_STMT, \"file_stmt\", 'e', 1)\n+\n /* Used to represent a CASE_LABEL. The operands are CASE_LOW and\n    CASE_HIGH, respectively. If CASE_LOW is NULL_TREE, the label is a\n    'default' label. If CASE_HIGH is NULL_TREE, the label is a normal case\n@@ -108,3 +112,9 @@ DEFTREECODE (STMT_EXPR, \"stmt_expr\", 'e', 1)\n    the DECL_INITIAL of that decl is the CONSTRUCTOR that initializes\n    the compound literal.  */\n DEFTREECODE (COMPOUND_LITERAL_EXPR, \"compound_literal_expr\", 'e', 1)\n+\n+/*\n+Local variables:\n+mode:c\n+End:\n+*/"}, {"sha": "3aaa513ed66d2fee2939c6795cde8c26ae1565b0", "filename": "gcc/c-common.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de097a2d7d044caf6841fa395bb322d4ef8ba841/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de097a2d7d044caf6841fa395bb322d4ef8ba841/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=de097a2d7d044caf6841fa395bb322d4ef8ba841", "patch": "@@ -257,6 +257,8 @@ struct stmt_tree_s {\n   /* The type of the last expression statement.  (This information is\n      needed to implement the statement-expression extension.)  */\n   tree x_last_expr_type;\n+  /* The last filename we recorded.  */\n+  const char *x_last_expr_filename;\n   /* In C++, Non-zero if we should treat statements as full\n      expressions.  In particular, this variable is no-zero if at the\n      end of a statement we should destroy any temporaries created\n@@ -296,6 +298,10 @@ struct language_function {\n \n #define last_expr_type (current_stmt_tree ()->x_last_expr_type)\n \n+/* The name of the last file we have seen.  */\n+\n+#define last_expr_filename (current_stmt_tree ()->x_last_expr_filename)\n+\n /* LAST_TREE contains the last statement parsed.  These are chained\n    together through the TREE_CHAIN field, but often need to be\n    re-organized since the parse is performed bottom-up.  This macro\n@@ -688,6 +694,12 @@ extern tree strip_array_types                   PARAMS ((tree));\n #define ASM_VOLATILE_P(NODE)\t\t\t\\\n   (ASM_CV_QUAL (ASM_STMT_CHECK (NODE)) != NULL_TREE)\n \n+/* The filename we are changing to as of this FILE_STMT.  */\n+#define FILE_STMT_FILENAME_NODE(NODE) \\\n+  (TREE_OPERAND (FILE_STMT_CHECK (NODE), 0))\n+#define FILE_STMT_FILENAME(NODE) \\\n+  (IDENTIFIER_POINTER (FILE_STMT_FILENAME_NODE (NODE)))\n+\n /* The line-number at which a statement began.  But if\n    STMT_LINENO_FOR_FN_P does holds, then this macro gives the\n    line number for the end of the current function instead.  */"}, {"sha": "682943f17c29f957e2f65b9dd912b4d2b21e3923", "filename": "gcc/c-semantics.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de097a2d7d044caf6841fa395bb322d4ef8ba841/gcc%2Fc-semantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de097a2d7d044caf6841fa395bb322d4ef8ba841/gcc%2Fc-semantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-semantics.c?ref=de097a2d7d044caf6841fa395bb322d4ef8ba841", "patch": "@@ -60,6 +60,7 @@ begin_stmt_tree (t)\n   *t = build_nt (EXPR_STMT, void_zero_node);\n   last_tree = *t;\n   last_expr_type = NULL_TREE;\n+  last_expr_filename = input_filename;\n }\n \n /* T is a statement.  Add it to the statement-tree.  */\n@@ -68,6 +69,19 @@ tree\n add_stmt (t)\n      tree t;\n {\n+  if (input_filename != last_expr_filename)\n+    {\n+      /* If the filename has changed, also add in a FILE_STMT.  Do a string\n+\t compare first, though, as it might be an equivalent string.  */\n+      int add = (strcmp (input_filename, last_expr_filename) != 0);\n+      last_expr_filename = input_filename;\n+      if (add)\n+\t{\n+\t  tree pos = build_nt (FILE_STMT, get_identifier (input_filename));\n+\t  add_stmt (pos);\n+\t}\n+    }\n+\n   /* Add T to the statement-tree.  */\n   TREE_CHAIN (last_tree) = t;\n   last_tree = t;\n@@ -760,6 +774,10 @@ expand_stmt (t)\n \n       switch (TREE_CODE (t))\n \t{\n+\tcase FILE_STMT:\n+\t  input_filename = FILE_STMT_FILENAME (t);\n+\t  break;\n+\n \tcase RETURN_STMT:\n \t  genrtl_return_stmt (t);\n \t  break;\n@@ -845,4 +863,3 @@ expand_stmt (t)\n       t = TREE_CHAIN (t);\n     }\n }\n-"}]}