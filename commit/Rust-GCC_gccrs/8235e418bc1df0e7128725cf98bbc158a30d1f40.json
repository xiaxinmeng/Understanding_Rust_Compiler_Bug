{"sha": "8235e418bc1df0e7128725cf98bbc158a30d1f40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIzNWU0MThiYzFkZjBlNzEyODcyNWNmOThiYmMxNThhMzBkMWY0MA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-03-16T13:40:47Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-03-16T13:40:47Z"}, "message": "(__objc_block_return): New function.\n\n(__objc_word_return, __objc_double_return): New functions.\n(__objc_init_install_dtable): Call appropriate return function\nbased upon method type.\n\nFrom-SVN: r13715", "tree": {"sha": "5038c0789cfc2f31026625e0bf0aef5be2272f9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5038c0789cfc2f31026625e0bf0aef5be2272f9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8235e418bc1df0e7128725cf98bbc158a30d1f40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8235e418bc1df0e7128725cf98bbc158a30d1f40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8235e418bc1df0e7128725cf98bbc158a30d1f40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8235e418bc1df0e7128725cf98bbc158a30d1f40/comments", "author": null, "committer": null, "parents": [{"sha": "74775c7ae27f5f347dd873c2a1c9205003dc1fb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74775c7ae27f5f347dd873c2a1c9205003dc1fb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74775c7ae27f5f347dd873c2a1c9205003dc1fb8"}], "stats": {"total": 53, "additions": 48, "deletions": 5}, "files": [{"sha": "0a2640a4fd9fb9040747033739fd7015d8f00bfe", "filename": "gcc/objc/sendmsg.c", "status": "modified", "additions": 48, "deletions": 5, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8235e418bc1df0e7128725cf98bbc158a30d1f40/gcc%2Fobjc%2Fsendmsg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8235e418bc1df0e7128725cf98bbc158a30d1f40/gcc%2Fobjc%2Fsendmsg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fsendmsg.c?ref=8235e418bc1df0e7128725cf98bbc158a30d1f40", "patch": "@@ -166,6 +166,46 @@ void __objc_init_dispatch_tables()\n     = sarray_new(200, __objc_init_install_dtable);\n }\n \n+/* Various return functions that are used based upon the\n+   return type for the selector.\n+   __objc_block_return for structures.\n+   __objc_double_return for floats/doubles.\n+   __objc_word_return for pointers or types that fit in registers.\n+   */\n+#if INVISIBLE_STRUCT_RETURN\n+static __big\n+#else\n+static id\n+#endif\n+__objc_block_return(IMP imp, void * args)\n+{\n+  void * result = __builtin_apply((apply_t)imp, args, 96);\n+  if (result)\n+    __builtin_return (result);\n+  else\n+    return;\n+}\n+\n+static id\n+__objc_word_return(IMP imp, void * args)\n+{\n+  void * result = __builtin_apply((apply_t)imp, args, 96);\n+  if (result)\n+    __builtin_return (result);\n+  else\n+    return;\n+}\n+ \n+static double\n+__objc_double_return(IMP imp, void * args)\n+{\n+  void * result = __builtin_apply((apply_t)imp, args, 96);\n+  if (result)\n+    __builtin_return (result);\n+  else\n+    return;\n+}\n+\n /* This one is a bit hairy.  This function is installed in the \n    premature dispatch table, and thus called once for each class,\n    namely when the very first message is send to it.  */\n@@ -176,6 +216,7 @@ static void __objc_init_install_dtable(id receiver, SEL op)\n   IMP imp;\n   void* args;\n   void* result;\n+  const char *t;\n \n   /* This may happen, if the programmer has taken the address of a \n      method before the dtable was initialized... too bad for him! */\n@@ -217,13 +258,15 @@ static void __objc_init_install_dtable(id receiver, SEL op)\n   /* Get real method for this in newly installed dtable */\n   imp = get_imp(receiver->class_pointer, op);\n \n+  /* Perform the appropriate return based upon the method return type */\n   args = __builtin_apply_args();\n-  result = __builtin_apply((apply_t)imp, args, 96);\n-  if (result)\n-    __builtin_return (result);\n+  t = op->sel_types;\n+  if (t && (*t == '[' || *t == '(' || *t == '{'))\n+    ((id(*)())__objc_block_return)(imp, args);\n+  else if (t && (*t == 'f' || *t == 'd'))\n+    ((id(*)())__objc_double_return)(imp, args);\n   else\n-    return;\n-  \n+    __objc_word_return(imp, args);\n }\n \n /* Install dummy table for class which causes the first message to"}]}