{"sha": "cf0a011c2be57cd7454650c3a411aca0362719ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YwYTAxMWMyYmU1N2NkNzQ1NDY1MGMzYTQxMWFjYTAzNjI3MTlhZA==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-03-17T20:10:18Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-11T09:53:50Z"}, "message": "[Ada] Update SPARK RM rule numbers after removing a redundant rule\n\n2020-06-11  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch4.adb, sem_ch6.adb, sem_res.adb, sem_util.ads: Fix\n\treferences to SPARK RM 7.1.3 rule numbers.", "tree": {"sha": "d62030e3f79c2fbede33015893143edc03abca99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d62030e3f79c2fbede33015893143edc03abca99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf0a011c2be57cd7454650c3a411aca0362719ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf0a011c2be57cd7454650c3a411aca0362719ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf0a011c2be57cd7454650c3a411aca0362719ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf0a011c2be57cd7454650c3a411aca0362719ad/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb85899d605dcfc4519bf764959d92672f0f0749", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb85899d605dcfc4519bf764959d92672f0f0749", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb85899d605dcfc4519bf764959d92672f0f0749"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "bb0017ed7beac6db84e947fb8860d7d18b25a941", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf0a011c2be57cd7454650c3a411aca0362719ad/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf0a011c2be57cd7454650c3a411aca0362719ad/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=cf0a011c2be57cd7454650c3a411aca0362719ad", "patch": "@@ -665,7 +665,7 @@ package body Sem_Ch4 is\n                --  that outside of spec expressions, otherwise the declaration\n                --  cannot be inserted and analyzed. In such a case, GNATprove\n                --  later rejects the allocator as it is not used here in\n-               --  a non-interfering context (SPARK 4.8(2) and 7.1.3(12)).\n+               --  a non-interfering context (SPARK 4.8(2) and 7.1.3(10)).\n \n                if Expander_Active\n                  or else (GNATprove_Mode and then not In_Spec_Expression)"}, {"sha": "e4374453efca4b918532f984b470a1630f94d568", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf0a011c2be57cd7454650c3a411aca0362719ad/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf0a011c2be57cd7454650c3a411aca0362719ad/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=cf0a011c2be57cd7454650c3a411aca0362719ad", "patch": "@@ -11889,7 +11889,7 @@ package body Sem_Ch6 is\n \n             --  A procedure cannot have an effectively volatile formal\n             --  parameter of mode IN because it behaves as a constant\n-            --  (SPARK RM 7.1.3(6)). -- ??? maybe 7.1.3(4)\n+            --  (SPARK RM 7.1.3(4)).\n \n             elsif Ekind (Scope (Formal)) = E_Procedure\n               and then Ekind (Formal) = E_In_Parameter"}, {"sha": "acc997871a4ea9c5387a9e56e78ae71ae92e8642", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf0a011c2be57cd7454650c3a411aca0362719ad/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf0a011c2be57cd7454650c3a411aca0362719ad/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=cf0a011c2be57cd7454650c3a411aca0362719ad", "patch": "@@ -3328,7 +3328,7 @@ package body Sem_Res is\n \n       procedure Flag_Effectively_Volatile_Objects (Expr : Node_Id);\n       --  Emit an error concerning the illegal usage of an effectively volatile\n-      --  object in interfering context (SPARK RM 7.1.3(12)).\n+      --  object in interfering context (SPARK RM 7.1.3(10)).\n \n       procedure Insert_Default;\n       --  If the actual is missing in a call, insert in the actuals list\n@@ -3613,7 +3613,7 @@ package body Sem_Res is\n                then\n                   Error_Msg_N\n                     (\"volatile object cannot appear in this context (SPARK \"\n-                     & \"RM 7.1.3(11))\", N);\n+                     & \"RM 7.1.3(10))\", N);\n                   return Skip;\n                end if;\n             end if;\n@@ -4739,7 +4739,7 @@ package body Sem_Res is\n \n                --  An effectively volatile object may act as an actual when the\n                --  corresponding formal is of a non-scalar effectively volatile\n-               --  type (SPARK RM 7.1.3(11)).\n+               --  type (SPARK RM 7.1.3(10)).\n \n                if not Is_Scalar_Type (Etype (F))\n                  and then Is_Effectively_Volatile (Etype (F))\n@@ -4748,7 +4748,7 @@ package body Sem_Res is\n \n                --  An effectively volatile object may act as an actual in a\n                --  call to an instance of Unchecked_Conversion.\n-               --  (SPARK RM 7.1.3(11)).\n+               --  (SPARK RM 7.1.3(10)).\n \n                elsif Is_Unchecked_Conversion_Instance (Nam) then\n                   null;\n@@ -4758,7 +4758,7 @@ package body Sem_Res is\n                elsif Is_Effectively_Volatile_Object (A) then\n                   Error_Msg_N\n                     (\"volatile object cannot act as actual in a call (SPARK \"\n-                     & \"RM 7.1.3(11))\", A);\n+                     & \"RM 7.1.3(10))\", A);\n \n                --  Otherwise the actual denotes an expression. Inspect the\n                --  expression and flag each effectively volatile object with\n@@ -7544,7 +7544,7 @@ package body Sem_Res is\n \n             --  An effectively volatile object subject to enabled properties\n             --  Async_Writers or Effective_Reads must appear in non-interfering\n-            --  context (SPARK RM 7.1.3(12)).\n+            --  context (SPARK RM 7.1.3(10)).\n \n             if Is_Object (E)\n               and then Is_Effectively_Volatile (E)\n@@ -7554,7 +7554,7 @@ package body Sem_Res is\n             then\n                SPARK_Msg_N\n                  (\"volatile object cannot appear in this context \"\n-                  & \"(SPARK RM 7.1.3(12))\", N);\n+                  & \"(SPARK RM 7.1.3(10))\", N);\n             end if;\n \n             --  Check for possible elaboration issues with respect to reads of"}, {"sha": "34379f9405f713df440ab7166d0e5762280472e8", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf0a011c2be57cd7454650c3a411aca0362719ad/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf0a011c2be57cd7454650c3a411aca0362719ad/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=cf0a011c2be57cd7454650c3a411aca0362719ad", "patch": "@@ -1919,7 +1919,7 @@ package Sem_Util is\n      (Context : Node_Id;\n       Obj_Ref : Node_Id) return Boolean;\n    --  Determine whether node Context denotes a \"non-interfering context\" (as\n-   --  defined in SPARK RM 7.1.3(12)) where volatile reference Obj_Ref can\n+   --  defined in SPARK RM 7.1.3(10)) where volatile reference Obj_Ref can\n    --  safely reside.\n \n    function Is_Package_Contract_Annotation (Item : Node_Id) return Boolean;"}]}