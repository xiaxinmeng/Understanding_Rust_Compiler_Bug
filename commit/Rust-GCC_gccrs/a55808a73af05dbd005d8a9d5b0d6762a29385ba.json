{"sha": "a55808a73af05dbd005d8a9d5b0d6762a29385ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU1ODA4YTczYWYwNWRiZDAwNWQ4YTlkNWIwZDY3NjJhMjkzODViYQ==", "commit": {"author": {"name": "David Ung", "email": "davidu@mips.com", "date": "2006-11-03T17:32:39Z"}, "committer": {"name": "David Ung", "email": "davidu@gcc.gnu.org", "date": "2006-11-03T17:32:39Z"}, "message": "mips.h (processor_type): Removed PROCESSOR_24K, add PROCESSOR_24KC and PROCESSOR_24KF.\n\n* config/mips/mips.h (processor_type): Removed PROCESSOR_24K, add\nPROCESSOR_24KC and PROCESSOR_24KF.\n* config/mips/mips.c (mips_cpu_info_table): Add processor names\nand aliases for 4kec/4kem/4kep/24kec/24kef/24kex/34kc/34kf/34kx.\n(mips_rtx_cost_data): Add costs for the 24kc.\n* config/mips/mips.md (\"cpu\"): Remove 24k, add 24kc and 24kf.\n* config/mips/24k.md: Remove references to 24k and replace with\nuses of 24kc/24kf in the appropriate reservations.\n* doc/invoke.texi (MIPS Options): Updated.\n\nFrom-SVN: r118459", "tree": {"sha": "88d8baab97630742f384812354ea1a3b5af357f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88d8baab97630742f384812354ea1a3b5af357f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a55808a73af05dbd005d8a9d5b0d6762a29385ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a55808a73af05dbd005d8a9d5b0d6762a29385ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a55808a73af05dbd005d8a9d5b0d6762a29385ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a55808a73af05dbd005d8a9d5b0d6762a29385ba/comments", "author": null, "committer": null, "parents": [{"sha": "78d310c2c138f824e912f84eb0f6718e335238eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78d310c2c138f824e912f84eb0f6718e335238eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78d310c2c138f824e912f84eb0f6718e335238eb"}], "stats": {"total": 109, "additions": 71, "deletions": 38}, "files": [{"sha": "5297f5f1cd8d50b6fe52b8abc362213b24ae04a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a55808a73af05dbd005d8a9d5b0d6762a29385ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a55808a73af05dbd005d8a9d5b0d6762a29385ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a55808a73af05dbd005d8a9d5b0d6762a29385ba", "patch": "@@ -1,3 +1,15 @@\n+2006-11-03  David Ung  <davidung@mips.com>\n+\t\n+\t* config/mips/mips.h (processor_type): Removed PROCESSOR_24K, add\n+\tPROCESSOR_24KC and PROCESSOR_24KF.\n+\t* config/mips/mips.c (mips_cpu_info_table): Add processor names\n+\tand aliases for 4kec/4kem/4kep/24kec/24kef/24kex/34kc/34kf/34kx.\n+\t(mips_rtx_cost_data): Add costs for the 24kc.\n+\t* config/mips/mips.md (\"cpu\"): Remove 24k, add 24kc and 24kf.\n+\t* config/mips/24k.md: Remove references to 24k and replace with\n+\tuses of 24kc/24kf in the appropriate reservations.\n+\t* doc/invoke.texi (MIPS Options): Updated. \n+\t\n 2006-11-03  J\"orn Rennecke  <joern.rennecke@st.com>\n \n \t* config/sh/crt1.asm: Fix #ifdef indent."}, {"sha": "1012677d100be433310de6b9edea9adc91a950b2", "filename": "gcc/config/mips/24k.md", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a55808a73af05dbd005d8a9d5b0d6762a29385ba/gcc%2Fconfig%2Fmips%2F24k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a55808a73af05dbd005d8a9d5b0d6762a29385ba/gcc%2Fconfig%2Fmips%2F24k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F24k.md?ref=a55808a73af05dbd005d8a9d5b0d6762a29385ba", "patch": "@@ -42,7 +42,7 @@\n \n ;; 1. Loads: lb, lbu, lh, lhu, ll, lw, lwl, lwr, lwpc, lwxs\n (define_insn_reservation \"r24k_int_load\" 2\n-  (and (eq_attr \"cpu\" \"24k,24kx\")\n+  (and (eq_attr \"cpu\" \"24kc,24kf,24kx\")\n        (eq_attr \"type\" \"load\"))\n   \"r24k_iss+r24k_ixu_arith\")\n \n@@ -54,60 +54,60 @@\n ;; (movn/movz is not matched, we'll need to split condmov to\n ;;  differentiate between integer/float moves)\n (define_insn_reservation \"r24k_int_arith\" 1\n-  (and (eq_attr \"cpu\" \"24k,24kx\")\n+  (and (eq_attr \"cpu\" \"24kc,24kf,24kx\")\n        (eq_attr \"type\" \"arith,const,nop,shift,slt\"))\n   \"r24k_iss+r24k_ixu_arith\")\n \n \n ;; 3. Links: bgezal, bgezall, bltzal, bltzall, jal, jalr, jalx\n ;; 3a. jr/jalr consumer\n (define_insn_reservation \"r24k_int_jump\" 1\n-  (and (eq_attr \"cpu\" \"24k,24kx\")\n+  (and (eq_attr \"cpu\" \"24kc,24kf,24kx\")\n        (eq_attr \"type\" \"call,jump\"))\n   \"r24k_iss+r24k_ixu_arith\")\n \n ;; 3b. branch consumer\n (define_insn_reservation \"r24k_int_branch\" 1\n-  (and (eq_attr \"cpu\" \"24k,24kx\")\n+  (and (eq_attr \"cpu\" \"24kc,24kf,24kx\")\n        (eq_attr \"type\" \"branch\"))\n   \"r24k_iss+r24k_ixu_arith\")\n \n \n ;; 4. MDU: fully pipelined multiplier\n ;; mult - delivers result to hi/lo in 1 cycle (pipelined)\n (define_insn_reservation \"r24k_int_mult\" 1\n-  (and (eq_attr \"cpu\" \"24k,24kx\")\n+  (and (eq_attr \"cpu\" \"24kc,24kf,24kx\")\n        (eq_attr \"type\" \"imul\"))\n   \"r24k_iss+(r24k_mul3a|r24k_mul3b|r24k_mul3c)\")\n \n ;; madd, msub - delivers result to hi/lo in 1 cycle (pipelined)\n (define_insn_reservation \"r24k_int_madd\" 1\n-  (and (eq_attr \"cpu\" \"24k,24kx\")\n+  (and (eq_attr \"cpu\" \"24kc,24kf,24kx\")\n        (eq_attr \"type\" \"imadd\"))\n   \"r24k_iss+(r24k_mul3a|r24k_mul3b|r24k_mul3c)\")\n \n ;; mul - delivers result to gpr in 5 cycles\n (define_insn_reservation \"r24k_int_mul3\" 5\n-  (and (eq_attr \"cpu\" \"24k,24kx\")\n+  (and (eq_attr \"cpu\" \"24kc,24kf,24kx\")\n        (eq_attr \"type\" \"imul3\"))\n   \"r24k_iss+(r24k_mul3a|r24k_mul3b|r24k_mul3c)*5\")\n \n ;; mfhi, mflo, mflhxu - deliver result to gpr in 5 cycles\n (define_insn_reservation \"r24k_int_mfhilo\" 5\n-  (and (eq_attr \"cpu\" \"24k,24kx\")\n+  (and (eq_attr \"cpu\" \"24kc,24kf,24kx\")\n        (eq_attr \"type\" \"mfhilo\"))\n   \"r24k_iss+(r24k_mul3a|r24k_mul3b|r24k_mul3c)\")\n \n ;; mthi, mtlo, mtlhx - deliver result to hi/lo, thence madd, handled as bypass\n (define_insn_reservation \"r24k_int_mthilo\" 1\n-  (and (eq_attr \"cpu\" \"24k,24kx\")\n+  (and (eq_attr \"cpu\" \"24kc,24kf,24kx\")\n        (eq_attr \"type\" \"mthilo\"))\n   \"r24k_iss+(r24k_mul3a|r24k_mul3b|r24k_mul3c)\")\n \n ;; div - default to 36 cycles for 32bit operands.  Faster for 24bit, 16bit and\n ;; 8bit, but is tricky to identify.\n (define_insn_reservation \"r24k_int_div\" 36\n-  (and (eq_attr \"cpu\" \"24k,24kx\")\n+  (and (eq_attr \"cpu\" \"24kc,24kf,24kx\")\n        (eq_attr \"type\" \"idiv\"))\n   \"r24k_iss+(r24k_mul3a+r24k_mul3b+r24k_mul3c)*36\")\n \n@@ -122,7 +122,7 @@\n \n ;; 6. Store\n (define_insn_reservation \"r24k_int_store\" 1\n-  (and (eq_attr \"cpu\" \"24k,24kx\")\n+  (and (eq_attr \"cpu\" \"24kc,24kf,24kx\")\n        (and (eq_attr \"type\" \"store\")\n \t    (eq_attr \"mode\" \"!unknown\")))\n   \"r24k_iss+r24k_ixu_arith\")\n@@ -132,15 +132,15 @@\n ;;     against store_data_bypass_p, which would then fail because cprestore\n ;;     does not have a normal SET pattern.\n (define_insn_reservation \"r24k_unknown_store\" 1\n-  (and (eq_attr \"cpu\" \"24k,24kx\")\n+  (and (eq_attr \"cpu\" \"24kc,24kf,24kx\")\n        (and (eq_attr \"type\" \"store\")\n \t    (eq_attr \"mode\" \"unknown\")))\n   \"r24k_iss+r24k_ixu_arith\")\n \n \n ;; 7. Multiple instructions\n (define_insn_reservation \"r24k_int_multi\" 1\n-  (and (eq_attr \"cpu\" \"24k,24kx\")\n+  (and (eq_attr \"cpu\" \"24kc,24kf,24kx\")\n        (eq_attr \"type\" \"multi\"))\n   \"r24k_iss+r24k_ixu_arith+r24k_fpu_arith+(r24k_mul3a+r24k_mul3b+r24k_mul3c)\")\n \n@@ -149,14 +149,14 @@\n ;;    rtls. They do not really affect scheduling latency, (blockage affects\n ;;    scheduling via log links, but not used here).\n (define_insn_reservation \"r24k_int_unknown\" 0\n-  (and (eq_attr \"cpu\" \"24k,24kx\")\n+  (and (eq_attr \"cpu\" \"24kc,24kf,24kx\")\n        (eq_attr \"type\" \"unknown\"))\n   \"r24k_iss\")\n \n \n ;; 9. Prefetch\n (define_insn_reservation \"r24k_int_prefetch\" 1\n-  (and (eq_attr \"cpu\" \"24k,24kx\")\n+  (and (eq_attr \"cpu\" \"24kc,24kf,24kx\")\n        (eq_attr \"type\" \"prefetch,prefetchx\"))\n   \"r24k_iss+r24k_ixu_arith\")\n \n@@ -230,65 +230,65 @@\n \n ;; fadd, fabs, fneg\n (define_insn_reservation \"r24k_fadd\" 8\n-  (and (eq_attr \"cpu\" \"24k\")\n+  (and (eq_attr \"cpu\" \"24kf\")\n        (eq_attr \"type\" \"fadd,fabs,fneg\"))\n   \"r24k_fpu_iss\")\n \n ;; fmove, fcmove\n (define_insn_reservation \"r24k_fmove\" 8\n-  (and (eq_attr \"cpu\" \"24k\")\n+  (and (eq_attr \"cpu\" \"24kf\")\n        (eq_attr \"type\" \"fmove,condmove\"))\n   \"r24k_fpu_iss\")\n \n ;; fload\n (define_insn_reservation \"r24k_fload\" 6\n-  (and (eq_attr \"cpu\" \"24k\")\n+  (and (eq_attr \"cpu\" \"24kf\")\n        (eq_attr \"type\" \"fpload,fpidxload\"))\n   \"r24k_fpu_iss\")\n \n ;; fstore\n (define_insn_reservation \"r24k_fstore\" 2\n-  (and (eq_attr \"cpu\" \"24k\")\n+  (and (eq_attr \"cpu\" \"24kf\")\n        (eq_attr \"type\" \"fpstore\"))\n   \"r24k_fpu_iss\")\n \n ;; fmul, fmadd\n (define_insn_reservation \"r24k_fmul_sf\" 8\n-  (and (eq_attr \"cpu\" \"24k\")\n+  (and (eq_attr \"cpu\" \"24kf\")\n        (and (eq_attr \"type\" \"fmul,fmadd\")\n \t    (eq_attr \"mode\" \"SF\")))\n   \"r24k_fpu_iss\")\n \n (define_insn_reservation \"r24k_fmul_df\" 10\n-  (and (eq_attr \"cpu\" \"24k\")\n+  (and (eq_attr \"cpu\" \"24kf\")\n        (and (eq_attr \"type\" \"fmul,fmadd\")\n \t    (eq_attr \"mode\" \"DF\")))\n   \"r24k_fpu_iss,(r24k_fpu_arith*2)\")\n \n \n ;; fdiv, fsqrt, frsqrt\n (define_insn_reservation \"r24k_fdiv_sf\" 34\n-  (and (eq_attr \"cpu\" \"24k\")\n+  (and (eq_attr \"cpu\" \"24kf\")\n        (and (eq_attr \"type\" \"fdiv,fsqrt,frsqrt\")\n \t    (eq_attr \"mode\" \"SF\")))\n   \"r24k_fpu_iss,(r24k_fpu_arith*26)\")\n \n (define_insn_reservation \"r24k_fdiv_df\" 64\n-  (and (eq_attr \"cpu\" \"24k\")\n+  (and (eq_attr \"cpu\" \"24kf\")\n        (and (eq_attr \"type\" \"fdiv,fsqrt\")\n \t    (eq_attr \"mode\" \"DF\")))\n   \"r24k_fpu_iss,(r24k_fpu_arith*56)\")\n \n ;; frsqrt\n (define_insn_reservation \"r24k_frsqrt_df\" 70\n-  (and (eq_attr \"cpu\" \"24k\")\n+  (and (eq_attr \"cpu\" \"24kf\")\n        (and (eq_attr \"type\" \"frsqrt\")\n \t    (eq_attr \"mode\" \"DF\")))\n   \"r24k_fpu_iss,(r24k_fpu_arith*60)\")\n \n ;; fcmp\n (define_insn_reservation \"r24k_fcmp\" 4\n-  (and (eq_attr \"cpu\" \"24k\")\n+  (and (eq_attr \"cpu\" \"24kf\")\n        (eq_attr \"type\" \"fcmp\"))\n   \"r24k_fpu_iss\")\n \n@@ -297,28 +297,28 @@\n \n ;; fcvt (cvt.d.s, cvt.[sd].[wl])\n (define_insn_reservation \"r24k_fcvt_i2f_s2d\" 8\n-  (and (eq_attr \"cpu\" \"24k\")\n+  (and (eq_attr \"cpu\" \"24kf\")\n        (and (eq_attr \"type\" \"fcvt\")\n \t    (eq_attr \"cnv_mode\" \"I2S,I2D,S2D\")))\n   \"r24k_fpu_iss\")\n \n ;; fcvt (cvt.s.d)\n (define_insn_reservation \"r24k_fcvt_s2d\" 12\n-  (and (eq_attr \"cpu\" \"24k\")\n+  (and (eq_attr \"cpu\" \"24kf\")\n        (and (eq_attr \"type\" \"fcvt\")\n \t    (eq_attr \"cnv_mode\" \"D2S\")))\n   \"r24k_fpu_iss\")\n \n ;; fcvt (cvt.[wl].[sd], etc)\n (define_insn_reservation \"r24k_fcvt_f2i\" 10\n-  (and (eq_attr \"cpu\" \"24k\")\n+  (and (eq_attr \"cpu\" \"24kf\")\n        (and (eq_attr \"type\" \"fcvt\")\n \t    (eq_attr \"cnv_mode\" \"S2I,D2I\")))\n   \"r24k_fpu_iss\")\n \n ;; fxfer (mfc1, mfhc1, mtc1, mthc1)\n (define_insn_reservation \"r24k_fxfer\" 4\n-  (and (eq_attr \"cpu\" \"24k\")\n+  (and (eq_attr \"cpu\" \"24kf\")\n        (eq_attr \"type\" \"xfer\"))\n   \"r24k_fpu_iss\")\n "}, {"sha": "6706b83e99b3ea9626311a711423377ee9361484", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a55808a73af05dbd005d8a9d5b0d6762a29385ba/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a55808a73af05dbd005d8a9d5b0d6762a29385ba/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=a55808a73af05dbd005d8a9d5b0d6762a29385ba", "patch": "@@ -749,10 +749,18 @@ const struct mips_cpu_info mips_cpu_info_table[] = {\n \n   /* MIPS32 Release 2 */\n   { \"m4k\", PROCESSOR_M4K, 33 },\n-  { \"24k\", PROCESSOR_24K, 33 },\n-  { \"24kc\", PROCESSOR_24K, 33 },  /* 24K  no FPU */\n-  { \"24kf\", PROCESSOR_24K, 33 },  /* 24K 1:2 FPU */\n-  { \"24kx\", PROCESSOR_24KX, 33 }, /* 24K 1:1 FPU */\n+  { \"4kec\", PROCESSOR_4KC, 33 },\n+  { \"4kem\", PROCESSOR_4KC, 33 },\n+  { \"4kep\", PROCESSOR_4KP, 33 },\n+  { \"24kc\", PROCESSOR_24KC, 33 },  /* 24K  no FPU */\n+  { \"24kf\", PROCESSOR_24KF, 33 },  /* 24K 1:2 FPU */\n+  { \"24kx\", PROCESSOR_24KX, 33 },  /* 24K 1:1 FPU */\n+  { \"24kec\", PROCESSOR_24KC, 33 }, /* 24K with DSP */\n+  { \"24kef\", PROCESSOR_24KF, 33 },\n+  { \"24kex\", PROCESSOR_24KX, 33 },\n+  { \"34kc\", PROCESSOR_24KC, 33 },  /* 34K with MT/DSP */\n+  { \"34kf\", PROCESSOR_24KF, 33 },\n+  { \"34kx\", PROCESSOR_24KX, 33 },\n \n   /* MIPS64 */\n   { \"5kc\", PROCESSOR_5KC, 64 },\n@@ -847,7 +855,16 @@ static struct mips_rtx_cost_data const mips_rtx_cost_data[PROCESSOR_MAX] =\n     { /* 20KC */\n       DEFAULT_COSTS\n     },\n-    { /* 24k */\n+    { /* 24KC */\n+      SOFT_FP_COSTS,\n+      COSTS_N_INSNS (5),            /* int_mult_si */\n+      COSTS_N_INSNS (5),            /* int_mult_di */\n+      COSTS_N_INSNS (41),           /* int_div_si */\n+      COSTS_N_INSNS (41),           /* int_div_di */\n+                       1,           /* branch_cost */\n+                       4            /* memory_latency */\n+    },\n+    { /* 24KF */\n       COSTS_N_INSNS (8),            /* fp_add */\n       COSTS_N_INSNS (8),            /* fp_mult_sf */\n       COSTS_N_INSNS (10),           /* fp_mult_df */\n@@ -860,7 +877,7 @@ static struct mips_rtx_cost_data const mips_rtx_cost_data[PROCESSOR_MAX] =\n                        1,           /* branch_cost */\n                        4            /* memory_latency */\n     },\n-    { /* 24kx */\n+    { /* 24KX */\n       COSTS_N_INSNS (4),            /* fp_add */\n       COSTS_N_INSNS (4),            /* fp_mult_sf */\n       COSTS_N_INSNS (5),            /* fp_mult_df */"}, {"sha": "981a8d1eaa710a3992924b33a78f604f8d6416f4", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a55808a73af05dbd005d8a9d5b0d6762a29385ba/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a55808a73af05dbd005d8a9d5b0d6762a29385ba/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=a55808a73af05dbd005d8a9d5b0d6762a29385ba", "patch": "@@ -38,7 +38,8 @@ enum processor_type {\n   PROCESSOR_5KC,\n   PROCESSOR_5KF,\n   PROCESSOR_20KC,\n-  PROCESSOR_24K,\n+  PROCESSOR_24KC,\n+  PROCESSOR_24KF,\n   PROCESSOR_24KX,\n   PROCESSOR_M4K,\n   PROCESSOR_R3900,"}, {"sha": "dfa82f159a759fd820592ae4a08cbc56f7726a9f", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a55808a73af05dbd005d8a9d5b0d6762a29385ba/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a55808a73af05dbd005d8a9d5b0d6762a29385ba/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=a55808a73af05dbd005d8a9d5b0d6762a29385ba", "patch": "@@ -341,7 +341,7 @@\n ;; Attribute describing the processor.  This attribute must match exactly\n ;; with the processor_type enumeration in mips.h.\n (define_attr \"cpu\"\n-  \"r3000,4kc,4kp,5kc,5kf,20kc,24k,24kx,m4k,r3900,r6000,r4000,r4100,r4111,r4120,r4130,r4300,r4600,r4650,r5000,r5400,r5500,r7000,r8000,r9000,sb1,sb1a,sr71000\"\n+  \"r3000,4kc,4kp,5kc,5kf,20kc,24kc,24kf,24kx,m4k,r3900,r6000,r4000,r4100,r4111,r4120,r4130,r4300,r4600,r4650,r5000,r5400,r5500,r7000,r8000,r9000,sb1,sb1a,sr71000\"\n   (const (symbol_ref \"mips_tune\")))\n \n ;; The type of hardware hazard associated with this instruction."}, {"sha": "5bbbfc536641452d2ae58508069a3bb334e90805", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a55808a73af05dbd005d8a9d5b0d6762a29385ba/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a55808a73af05dbd005d8a9d5b0d6762a29385ba/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=a55808a73af05dbd005d8a9d5b0d6762a29385ba", "patch": "@@ -10480,9 +10480,12 @@ The ISA names are:\n @samp{mips32}, @samp{mips32r2}, and @samp{mips64}.\n The processor names are:\n @samp{4kc}, @samp{4km}, @samp{4kp},\n+@samp{4kec}, @samp{4kem}, @samp{4kep},\n @samp{5kc}, @samp{5kf},\n @samp{20kc},\n-@samp{24k}, @samp{24kc}, @samp{24kf}, @samp{24kx},\n+@samp{24kc}, @samp{24kf}, @samp{24kx},\n+@samp{24kec}, @samp{24kef}, @samp{24kex},\n+@samp{34kc}, @samp{34kf}, @samp{34kx},\n @samp{m4k},\n @samp{orion},\n @samp{r2000}, @samp{r3000}, @samp{r3900}, @samp{r4000}, @samp{r4400},"}]}