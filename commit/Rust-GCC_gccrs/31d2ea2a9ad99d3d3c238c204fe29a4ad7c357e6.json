{"sha": "31d2ea2a9ad99d3d3c238c204fe29a4ad7c357e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFkMmVhMmE5YWQ5OWQzZDNjMjM4YzIwNGZlMjlhNGFkN2MzNTdlNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-07-06T04:20:39Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-07-06T04:20:39Z"}, "message": "re PR c++/48157 (Unable to match function call to member function template)\n\n\tPR c++/48157\n\t* pt.c (tsubst_qualified_id): Preserve TEMPLATE_ID_EXPR in\n\tpartial instantiation.\n\nFrom-SVN: r175904", "tree": {"sha": "016694ab6c5d728c91f5e97d931cbabfb9bad5c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/016694ab6c5d728c91f5e97d931cbabfb9bad5c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31d2ea2a9ad99d3d3c238c204fe29a4ad7c357e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31d2ea2a9ad99d3d3c238c204fe29a4ad7c357e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31d2ea2a9ad99d3d3c238c204fe29a4ad7c357e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31d2ea2a9ad99d3d3c238c204fe29a4ad7c357e6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b935c718045e6f9b7408ffd1a049c7b297aa2235", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b935c718045e6f9b7408ffd1a049c7b297aa2235", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b935c718045e6f9b7408ffd1a049c7b297aa2235"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "ed94e066f44f1b4fdb89c2f669a6550e33a5c6fd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31d2ea2a9ad99d3d3c238c204fe29a4ad7c357e6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31d2ea2a9ad99d3d3c238c204fe29a4ad7c357e6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=31d2ea2a9ad99d3d3c238c204fe29a4ad7c357e6", "patch": "@@ -1,5 +1,9 @@\n 2011-07-05  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/48157\n+\t* pt.c (tsubst_qualified_id): Preserve TEMPLATE_ID_EXPR in\n+\tpartial instantiation.\n+\n \tPR c++/49598\n \t* semantics.c (finish_id_expression): convert_from_reference.\n "}, {"sha": "17ca44cde0d0e32d826f222678feda6a25198d2c", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31d2ea2a9ad99d3d3c238c204fe29a4ad7c357e6/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31d2ea2a9ad99d3d3c238c204fe29a4ad7c357e6/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=31d2ea2a9ad99d3d3c238c204fe29a4ad7c357e6", "patch": "@@ -11287,8 +11287,12 @@ tsubst_qualified_id (tree qualified_id, tree args,\n     expr = name;\n \n   if (dependent_scope_p (scope))\n-    return build_qualified_name (NULL_TREE, scope, expr,\n-\t\t\t\t QUALIFIED_NAME_IS_TEMPLATE (qualified_id));\n+    {\n+      if (is_template)\n+\texpr = build_min_nt (TEMPLATE_ID_EXPR, expr, template_args);\n+      return build_qualified_name (NULL_TREE, scope, expr,\n+\t\t\t\t   QUALIFIED_NAME_IS_TEMPLATE (qualified_id));\n+    }\n \n   if (!BASELINK_P (name) && !DECL_P (expr))\n     {"}, {"sha": "072bf15cd10fa61f9c2da0d65b84a80fd3d13c13", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31d2ea2a9ad99d3d3c238c204fe29a4ad7c357e6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31d2ea2a9ad99d3d3c238c204fe29a4ad7c357e6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=31d2ea2a9ad99d3d3c238c204fe29a4ad7c357e6", "patch": "@@ -1,3 +1,8 @@\n+2011-07-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/48157\n+\t* g++.dg/template/template-id-4.C: New.\n+\n 2011-07-05  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* gcc.dg/pr44023.c: Add dg-require-effective-target int32plus"}, {"sha": "26f4809bc96c8948fc74990ad1e672268c141be8", "filename": "gcc/testsuite/g++.dg/template/template-id-4.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31d2ea2a9ad99d3d3c238c204fe29a4ad7c357e6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftemplate-id-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31d2ea2a9ad99d3d3c238c204fe29a4ad7c357e6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftemplate-id-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftemplate-id-4.C?ref=31d2ea2a9ad99d3d3c238c204fe29a4ad7c357e6", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/48157\n+\n+struct AType\n+{\n+  template<class AA>\n+  void SomeFuncTemplate()\n+  { }\n+};\n+\n+template < class T >\n+struct TTest2\n+{\n+  template<T> struct helper;\n+\n+  template<class U>\n+  static void check(helper<&U::template SomeFuncTemplate<int> > *);\n+};\n+\n+int main()\n+{\n+  TTest2< void (AType::*)() >::check<AType>(0);\n+}"}]}