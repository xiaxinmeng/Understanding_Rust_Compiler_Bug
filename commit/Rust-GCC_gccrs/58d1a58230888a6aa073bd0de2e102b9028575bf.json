{"sha": "58d1a58230888a6aa073bd0de2e102b9028575bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThkMWE1ODIzMDg4OGE2YWEwNzNiZDBkZTJlMTAyYjkwMjg1NzViZg==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1996-12-14T00:45:54Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1996-12-14T00:45:54Z"}, "message": "remove accidental change\n\nFrom-SVN: r13310", "tree": {"sha": "757a999db4f245581b9dc81c8e6a8e995ae71785", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/757a999db4f245581b9dc81c8e6a8e995ae71785"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58d1a58230888a6aa073bd0de2e102b9028575bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58d1a58230888a6aa073bd0de2e102b9028575bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58d1a58230888a6aa073bd0de2e102b9028575bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58d1a58230888a6aa073bd0de2e102b9028575bf/comments", "author": null, "committer": null, "parents": [{"sha": "444a059e63d451801cd1715068e8064fda46a153", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/444a059e63d451801cd1715068e8064fda46a153", "html_url": "https://github.com/Rust-GCC/gccrs/commit/444a059e63d451801cd1715068e8064fda46a153"}], "stats": {"total": 55, "additions": 0, "deletions": 55}, "files": [{"sha": "7ddde13ac27a3b7e930f1a44b96921ddc882fd50", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58d1a58230888a6aa073bd0de2e102b9028575bf/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58d1a58230888a6aa073bd0de2e102b9028575bf/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=58d1a58230888a6aa073bd0de2e102b9028575bf", "patch": "@@ -4384,58 +4384,3 @@ debug_undef (lineno, buffer)\n     dwarf2out_undef (lineno, buffer);\n #endif /* DWARF2_DEBUGGING_INFO */\n }\n-\n-/* Record the relative location of the current stack frame at the PC value\n-   indicated by LABEL if specified, or at the beginning of the function\n-   if LABEL is NULL.  RTL is either:\n-\n-   a REG:  The frame is at 0(REG).\n-   a PLUS of a REG and a CONST_INT:  The frame is at CONST(REG).  */\n-\n-void\n-debug_frame (label, rtl)\n-     char *label;\n-     rtx rtl;\n-{\n-#ifdef DWARF2_DEBUGGING_INFO\n-  if (write_symbols == DWARF2_DEBUG)\n-    dwarf2out_def_cfa (label, rtl);\n-#endif\n-}\n-\n-/* Record that REGNO, a callee-saved register, has been saved somewhere.\n-   LABEL is as for debug_frame.  RTL is either:\n-\n-   a REG:  The register is saved in REG.\n-   a CONST_INT:  The register is saved at an offset of CONST\n-     from the frame.  */\n-\n-void\n-debug_reg_save (label, regno, rtl)\n-     char *label;\n-     unsigned regno;\n-     rtx rtl;\n-{\n-#ifdef DWARF2_DEBUGGING_INFO\n-  if (write_symbols == DWARF2_DEBUG)\n-    dwarf2out_reg_save (label, regno, rtl);\n-#endif\n-}\n-\n-/* Record the location of the return address for the current frame.\n-   LABEL is as for debug_frame.  RTL is either:\n-\n-   a REG:  The return address is saved in REG.\n-   a CONST_INT:  The return address is saved at an offset of CONST\n-     from the frame.  */\n-\n-void\n-debug_return_save (label, rtl)\n-     char *label;\n-     rtx rtl;\n-{\n-#ifdef DWARF2_DEBUGGING_INFO\n-  if (write_symbols == DWARF2_DEBUG)\n-    dwarf2out_return_save (label, rtl);\n-#endif\n-}"}]}