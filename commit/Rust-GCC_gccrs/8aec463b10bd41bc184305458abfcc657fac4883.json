{"sha": "8aec463b10bd41bc184305458abfcc657fac4883", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFlYzQ2M2IxMGJkNDFiYzE4NDMwNTQ1OGFiZmNjNjU3ZmFjNDg4Mw==", "commit": {"author": {"name": "Maxim Kuvyrkov", "email": "maxim.kuvyrkov@gmail.com", "date": "2014-10-24T08:22:37Z"}, "committer": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@gcc.gnu.org", "date": "2014-10-24T08:22:37Z"}, "message": "Remove cached_first_cycle_multipass_dfa_lookahead and cached_issue_rate\n\n\t* haifa-sched.c (cached_first_cycle_multipass_dfa_lookahead,)\n\t(cached_issue_rate): Remove.  Use dfa_lookahead and issue_rate instead.\n\t(max_issue, choose_ready, sched_init): Update.\n\nFrom-SVN: r216622", "tree": {"sha": "2dd7c339f64a26b3aa525fa7ef40f0eb2fbe0ffe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2dd7c339f64a26b3aa525fa7ef40f0eb2fbe0ffe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8aec463b10bd41bc184305458abfcc657fac4883", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aec463b10bd41bc184305458abfcc657fac4883", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8aec463b10bd41bc184305458abfcc657fac4883", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8aec463b10bd41bc184305458abfcc657fac4883/comments", "author": {"login": "maxim-kuvyrkov", "id": 12545699, "node_id": "MDQ6VXNlcjEyNTQ1Njk5", "avatar_url": "https://avatars.githubusercontent.com/u/12545699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxim-kuvyrkov", "html_url": "https://github.com/maxim-kuvyrkov", "followers_url": "https://api.github.com/users/maxim-kuvyrkov/followers", "following_url": "https://api.github.com/users/maxim-kuvyrkov/following{/other_user}", "gists_url": "https://api.github.com/users/maxim-kuvyrkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxim-kuvyrkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxim-kuvyrkov/subscriptions", "organizations_url": "https://api.github.com/users/maxim-kuvyrkov/orgs", "repos_url": "https://api.github.com/users/maxim-kuvyrkov/repos", "events_url": "https://api.github.com/users/maxim-kuvyrkov/events{/privacy}", "received_events_url": "https://api.github.com/users/maxim-kuvyrkov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b75ae7f422bc0c477422faae20d2195ffdeeb5df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b75ae7f422bc0c477422faae20d2195ffdeeb5df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b75ae7f422bc0c477422faae20d2195ffdeeb5df"}], "stats": {"total": 36, "additions": 11, "deletions": 25}, "files": [{"sha": "ac5f97baeba66a00e6fc8f483d2296b5f24d1fb0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aec463b10bd41bc184305458abfcc657fac4883/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aec463b10bd41bc184305458abfcc657fac4883/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8aec463b10bd41bc184305458abfcc657fac4883", "patch": "@@ -1,3 +1,9 @@\n+2014-10-24  Maxim Kuvyrkov  <maxim.kuvyrkov@gmail.com>\n+\n+        * haifa-sched.c (cached_first_cycle_multipass_dfa_lookahead,)\n+        (cached_issue_rate): Remove.  Use dfa_lookahead and issue_rate instead.\n+        (max_issue, choose_ready, sched_init): Update.\n+\n 2014-10-24  Maxim Kuvyrkov  <maxim.kuvyrkov@gmail.com>\n \n \t* sched-int.h (struct _haifa_insn_data:last_rfs_win): New field."}, {"sha": "b78d6972fe1eeaadaff88f77d0178b69036eb5de", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 5, "deletions": 25, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8aec463b10bd41bc184305458abfcc657fac4883/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8aec463b10bd41bc184305458abfcc657fac4883/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=8aec463b10bd41bc184305458abfcc657fac4883", "patch": "@@ -5471,15 +5471,6 @@ int dfa_lookahead;\n    could achieve DFA_LOOKAHEAD ** N , where N is the queue length.  */\n static int max_lookahead_tries;\n \n-/* The following value is value of hook\n-   `first_cycle_multipass_dfa_lookahead' at the last call of\n-   `max_issue'.  */\n-static int cached_first_cycle_multipass_dfa_lookahead = 0;\n-\n-/* The following value is value of `issue_rate' at the last call of\n-   `sched_init'.  */\n-static int cached_issue_rate = 0;\n-\n /* The following function returns maximal (or close to maximal) number\n    of insns which can be issued on the same cycle and one of which\n    insns is insns with the best rank (the first insn in READY).  To\n@@ -5508,9 +5499,8 @@ max_issue (struct ready_list *ready, int privileged_n, state_t state,\n \t      && privileged_n <= n_ready);\n \n   /* Init MAX_LOOKAHEAD_TRIES.  */\n-  if (cached_first_cycle_multipass_dfa_lookahead != dfa_lookahead)\n+  if (max_lookahead_tries == 0)\n     {\n-      cached_first_cycle_multipass_dfa_lookahead = dfa_lookahead;\n       max_lookahead_tries = 100;\n       for (i = 0; i < issue_rate; i++)\n \tmax_lookahead_tries *= dfa_lookahead;\n@@ -5673,8 +5663,6 @@ static int\n choose_ready (struct ready_list *ready, bool first_cycle_insn_p,\n \t      rtx_insn **insn_ptr)\n {\n-  int lookahead;\n-\n   if (dbg_cnt (sched_insn) == false)\n     {\n       if (nonscheduled_insns_begin == NULL_RTX)\n@@ -5695,11 +5683,7 @@ choose_ready (struct ready_list *ready, bool first_cycle_insn_p,\n       return -1;\n     }\n \n-  lookahead = 0;\n-\n-  if (targetm.sched.first_cycle_multipass_dfa_lookahead)\n-    lookahead = targetm.sched.first_cycle_multipass_dfa_lookahead ();\n-  if (lookahead <= 0 || SCHED_GROUP_P (ready_element (ready, 0))\n+  if (dfa_lookahead <= 0 || SCHED_GROUP_P (ready_element (ready, 0))\n       || DEBUG_INSN_P (ready_element (ready, 0)))\n     {\n       if (targetm.sched.dispatch (NULL, IS_DISPATCH_ON))\n@@ -6879,18 +6863,14 @@ sched_init (void)\n   else\n     issue_rate = 1;\n \n-  if (cached_issue_rate != issue_rate)\n-    {\n-      cached_issue_rate = issue_rate;\n-      /* To invalidate max_lookahead_tries:  */\n-      cached_first_cycle_multipass_dfa_lookahead = 0;\n-    }\n-\n   if (targetm.sched.first_cycle_multipass_dfa_lookahead)\n     dfa_lookahead = targetm.sched.first_cycle_multipass_dfa_lookahead ();\n   else\n     dfa_lookahead = 0;\n \n+  /* Set to \"0\" so that we recalculate.  */\n+  max_lookahead_tries = 0;\n+\n   if (targetm.sched.init_dfa_pre_cycle_insn)\n     targetm.sched.init_dfa_pre_cycle_insn ();\n "}]}