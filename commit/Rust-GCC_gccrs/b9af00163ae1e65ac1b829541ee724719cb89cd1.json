{"sha": "b9af00163ae1e65ac1b829541ee724719cb89cd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjlhZjAwMTYzYWUxZTY1YWMxYjgyOTU0MWVlNzI0NzE5Y2I4OWNkMQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2004-11-04T10:10:29Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-11-04T10:10:29Z"}, "message": "predict.c (propagate_freq): Make bitno unsigned.\n\n\t* predict.c (propagate_freq): Make bitno unsigned. Move\n\tnpredecessors update out of loop.\n\nFrom-SVN: r90056", "tree": {"sha": "5f983c4b095bb851169f7e8ad2f512f5f73641cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f983c4b095bb851169f7e8ad2f512f5f73641cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9af00163ae1e65ac1b829541ee724719cb89cd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9af00163ae1e65ac1b829541ee724719cb89cd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9af00163ae1e65ac1b829541ee724719cb89cd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9af00163ae1e65ac1b829541ee724719cb89cd1/comments", "author": null, "committer": null, "parents": [{"sha": "e90ea8cbc473c83541176cc513cfac9775f099fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e90ea8cbc473c83541176cc513cfac9775f099fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e90ea8cbc473c83541176cc513cfac9775f099fb"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "7e1c1a1c2da0aaa2add9da65418175d41c710e44", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9af00163ae1e65ac1b829541ee724719cb89cd1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9af00163ae1e65ac1b829541ee724719cb89cd1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9af00163ae1e65ac1b829541ee724719cb89cd1", "patch": "@@ -1,5 +1,8 @@\n 2004-11-04  Nathan Sidwell  <nathan@codesourcery.com>\n \n+\t* predict.c (propagate_freq): Make bitno unsigned. Move\n+\tnpredecessors update out of loop.\n+\n \t* bitmap.h (bitmap_iterator): Remove word_bit and bit\n \tfields. Rename others.\n \t(bmp_iter_common_next_1, bmp_iter_single_next_1,"}, {"sha": "7be6b90fc3b807c95a4f27be997c42b0281af064", "filename": "gcc/predict.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9af00163ae1e65ac1b829541ee724719cb89cd1/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9af00163ae1e65ac1b829541ee724719cb89cd1/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=b9af00163ae1e65ac1b829541ee724719cb89cd1", "patch": "@@ -1557,7 +1557,7 @@ propagate_freq (struct loop *loop, bitmap tovisit)\n   basic_block head = loop->header;\n   basic_block bb;\n   basic_block last;\n-  int i;\n+  unsigned i;\n   edge e;\n   basic_block nextbb;\n   bitmap_iterator bi;\n@@ -1569,15 +1569,15 @@ propagate_freq (struct loop *loop, bitmap tovisit)\n       edge_iterator ei;\n       int count = 0;\n \n-      /* The outermost \"loop\" includes the exit block, which we can not\n-\t look up via BASIC_BLOCK.  Detect this and use EXIT_BLOCK_PTR\n-\t directly.  Do the same for the entry block just to be safe.  */\n-      if (i == ENTRY_BLOCK)\n-\tbb = ENTRY_BLOCK_PTR;\n-      else if (i == EXIT_BLOCK)\n-\tbb = EXIT_BLOCK_PTR;\n-      else\n-\tbb = BASIC_BLOCK (i);\n+       /* The outermost \"loop\" includes the exit block, which we can not\n+\t  look up via BASIC_BLOCK.  Detect this and use EXIT_BLOCK_PTR\n+\t  directly.  Do the same for the entry block.  */\n+     if (i == (unsigned)ENTRY_BLOCK)\n+       bb = ENTRY_BLOCK_PTR;\n+     else if (i == (unsigned)EXIT_BLOCK)\n+       bb = EXIT_BLOCK_PTR;\n+     else\n+       bb = BASIC_BLOCK (i);\n \n       FOR_EACH_EDGE (e, ei, bb->preds)\n \t{\n@@ -1589,8 +1589,8 @@ propagate_freq (struct loop *loop, bitmap tovisit)\n \t    fprintf (dump_file,\n \t\t     \"Irreducible region hit, ignoring edge to %i->%i\\n\",\n \t\t     e->src->index, bb->index);\n-\t  BLOCK_INFO (bb)->npredecessors = count;\n \t}\n+      BLOCK_INFO (bb)->npredecessors = count;\n     }\n \n   memcpy (&BLOCK_INFO (head)->frequency, &real_one, sizeof (real_one));"}]}