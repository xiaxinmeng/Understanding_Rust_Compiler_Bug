{"sha": "c76a1f1838c73fdf4caa61e776bfcdc9afabb408", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc2YTFmMTgzOGM3M2ZkZjRjYWE2MWU3NzZiZmNkYzlhZmFiYjQwOA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-08-21T16:15:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-08-21T16:15:08Z"}, "message": "tree-ssa-ccp.c (ccp_fold): Fold VIEW_CONVERT_EXPRs of constants.\n\n2008-08-21  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-ccp.c (ccp_fold): Fold VIEW_CONVERT_EXPRs of constants.\n\n\t* gcc.dg/vect/vect-fold-1.c: Scan ccp1 dump instead of dom1.\n\nFrom-SVN: r139398", "tree": {"sha": "1ade2292fbb0e32211932a86c3ef59a327851403", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ade2292fbb0e32211932a86c3ef59a327851403"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c76a1f1838c73fdf4caa61e776bfcdc9afabb408", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c76a1f1838c73fdf4caa61e776bfcdc9afabb408", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c76a1f1838c73fdf4caa61e776bfcdc9afabb408", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c76a1f1838c73fdf4caa61e776bfcdc9afabb408/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c7c6340790771cf22e77dc2be248ecd03aa722fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7c6340790771cf22e77dc2be248ecd03aa722fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7c6340790771cf22e77dc2be248ecd03aa722fe"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "d29b385e39a42f3e66c851c0221a4b0f8fd6ef27", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c76a1f1838c73fdf4caa61e776bfcdc9afabb408/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c76a1f1838c73fdf4caa61e776bfcdc9afabb408/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c76a1f1838c73fdf4caa61e776bfcdc9afabb408", "patch": "@@ -1,3 +1,7 @@\n+2008-08-21  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-ccp.c (ccp_fold): Fold VIEW_CONVERT_EXPRs of constants.\n+\n 2008-08-21  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraph.c (first_cgraph_function_insertion_hook): New variable."}, {"sha": "74ed9f9a2bbc422609dde37e81cf11492438d698", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c76a1f1838c73fdf4caa61e776bfcdc9afabb408/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c76a1f1838c73fdf4caa61e776bfcdc9afabb408/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c76a1f1838c73fdf4caa61e776bfcdc9afabb408", "patch": "@@ -1,3 +1,7 @@\n+2008-08-21  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.dg/vect/vect-fold-1.c: Scan ccp1 dump instead of dom1.\n+\n 2008-08-21  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/36817"}, {"sha": "8aca1e42063d712756c323925f39c752ea7289b8", "filename": "gcc/testsuite/gcc.dg/vect/vect-fold-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c76a1f1838c73fdf4caa61e776bfcdc9afabb408/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-fold-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c76a1f1838c73fdf4caa61e776bfcdc9afabb408/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-fold-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-fold-1.c?ref=c76a1f1838c73fdf4caa61e776bfcdc9afabb408", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-dom1\" } */\n+/* { dg-options \"-O2 -fdump-tree-ccp1\" } */\n \n typedef unsigned char v4qi __attribute__ ((vector_size (4)));\n \n@@ -12,5 +12,5 @@ void foo()\n   c = a + b;\n }\n \n-/* { dg-final { scan-tree-dump-times \"c = { 6, 8, 10, 12 }\" 1 \"dom1\" } } */\n-/* { dg-final { cleanup-tree-dump \"dom1\" } } */\n+/* { dg-final { scan-tree-dump-times \"c =.* { 6, 8, 10, 12 }\" 1 \"ccp1\" } } */\n+/* { dg-final { cleanup-tree-dump \"ccp1\" } } */"}, {"sha": "57aa473481c7a0c6ad3c98ca03862ea02a516446", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c76a1f1838c73fdf4caa61e776bfcdc9afabb408/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c76a1f1838c73fdf4caa61e776bfcdc9afabb408/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=c76a1f1838c73fdf4caa61e776bfcdc9afabb408", "patch": "@@ -961,7 +961,17 @@ ccp_fold (gimple stmt)\n                 }\n \n               if (kind == tcc_reference)\n-                return fold_const_aggregate_ref (rhs);\n+\t\t{\n+\t\t  if (TREE_CODE (rhs) == VIEW_CONVERT_EXPR\n+\t\t      && TREE_CODE (TREE_OPERAND (rhs, 0)) == SSA_NAME)\n+\t\t    {\n+\t\t      prop_value_t *val = get_value (TREE_OPERAND (rhs, 0));\n+\t\t      if (val->lattice_val == CONSTANT)\n+\t\t\treturn fold_unary (VIEW_CONVERT_EXPR,\n+\t\t\t\t\t   TREE_TYPE (rhs), val->value);\n+\t\t    }\n+\t\t  return fold_const_aggregate_ref (rhs);\n+\t\t}\n               else if (kind == tcc_declaration)\n                 return get_symbol_constant_value (rhs);\n               return rhs;"}]}