{"sha": "54069e595976eb556b22c231951cb2703e523a22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQwNjllNTk1OTc2ZWI1NTZiMjJjMjMxOTUxY2IyNzAzZTUyM2EyMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-05-09T20:37:44Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-05-09T20:37:44Z"}, "message": "PR c++/66297, DR 1684 - literal class and constexpr member fns\n\n\t* constexpr.c (is_valid_constexpr_fn): Only complain about\n\tnon-literal enclosing class in C++11.\n\t* class.c (finalize_literal_type_property): Likewise.\n\nFrom-SVN: r247813", "tree": {"sha": "b327c9852bc468cfe651509559b443ca822580d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b327c9852bc468cfe651509559b443ca822580d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54069e595976eb556b22c231951cb2703e523a22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54069e595976eb556b22c231951cb2703e523a22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54069e595976eb556b22c231951cb2703e523a22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54069e595976eb556b22c231951cb2703e523a22/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8ef2b9a7b59418d9f5e644badbc0aade7f83414f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ef2b9a7b59418d9f5e644badbc0aade7f83414f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ef2b9a7b59418d9f5e644badbc0aade7f83414f"}], "stats": {"total": 58, "additions": 37, "deletions": 21}, "files": [{"sha": "521b7d9dade6a3abc3c6d2a640ff759a0e122458", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54069e595976eb556b22c231951cb2703e523a22/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54069e595976eb556b22c231951cb2703e523a22/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=54069e595976eb556b22c231951cb2703e523a22", "patch": "@@ -1,3 +1,10 @@\n+2017-05-09  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/66297, DR 1684 - literal class and constexpr member fns\n+\t* constexpr.c (is_valid_constexpr_fn): Only complain about\n+\tnon-literal enclosing class in C++11.\n+\t* class.c (finalize_literal_type_property): Likewise.\n+\n 2017-05-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/80186"}, {"sha": "89fa8220150a41577622f347eb6c4f402fb3fb75", "filename": "gcc/cp/class.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54069e595976eb556b22c231951cb2703e523a22/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54069e595976eb556b22c231951cb2703e523a22/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=54069e595976eb556b22c231951cb2703e523a22", "patch": "@@ -5757,20 +5757,21 @@ finalize_literal_type_property (tree t)\n \t   && !TYPE_HAS_CONSTEXPR_CTOR (t))\n     CLASSTYPE_LITERAL_P (t) = false;\n \n-  if (!CLASSTYPE_LITERAL_P (t))\n+  /* C++14 DR 1684 removed this restriction.  */\n+  if (cxx_dialect < cxx14\n+      && !CLASSTYPE_LITERAL_P (t) && !LAMBDA_TYPE_P (t))\n     for (fn = TYPE_METHODS (t); fn; fn = DECL_CHAIN (fn))\n       if (DECL_DECLARED_CONSTEXPR_P (fn)\n \t  && TREE_CODE (fn) != TEMPLATE_DECL\n \t  && DECL_NONSTATIC_MEMBER_FUNCTION_P (fn)\n \t  && !DECL_CONSTRUCTOR_P (fn))\n \t{\n \t  DECL_DECLARED_CONSTEXPR_P (fn) = false;\n-\t  if (!DECL_GENERATED_P (fn) && !LAMBDA_TYPE_P (t))\n-\t    {\n-\t      error (\"enclosing class of constexpr non-static member \"\n-\t\t     \"function %q+#D is not a literal type\", fn);\n-\t      explain_non_literal_class (t);\n-\t    }\n+\t  if (!DECL_GENERATED_P (fn)\n+\t      && pedwarn (DECL_SOURCE_LOCATION (fn), OPT_Wpedantic,\n+\t\t\t  \"enclosing class of constexpr non-static member \"\n+\t\t\t  \"function %q+#D is not a literal type\", fn))\n+\t    explain_non_literal_class (t);\n \t}\n }\n "}, {"sha": "157b20d76d3348c544f2afa83ebb5ddb1b89ae4f", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54069e595976eb556b22c231951cb2703e523a22/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54069e595976eb556b22c231951cb2703e523a22/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=54069e595976eb556b22c231951cb2703e523a22", "patch": "@@ -210,16 +210,17 @@ is_valid_constexpr_fn (tree fun, bool complain)\n \t    }\n \t}\n \n-      if (DECL_NONSTATIC_MEMBER_FUNCTION_P (fun)\n+      /* C++14 DR 1684 removed this restriction.  */\n+      if (cxx_dialect < cxx14\n+\t  && DECL_NONSTATIC_MEMBER_FUNCTION_P (fun)\n \t  && !CLASSTYPE_LITERAL_P (DECL_CONTEXT (fun)))\n \t{\n \t  ret = false;\n-\t  if (complain)\n-\t    {\n-\t      error (\"enclosing class of constexpr non-static member \"\n-\t\t     \"function %q+#D is not a literal type\", fun);\n-\t      explain_non_literal_class (DECL_CONTEXT (fun));\n-\t    }\n+\t  if (complain\n+\t      && pedwarn (DECL_SOURCE_LOCATION (fun), OPT_Wpedantic,\n+\t\t\t  \"enclosing class of constexpr non-static member \"\n+\t\t\t  \"function %q+#D is not a literal type\", fun))\n+\t    explain_non_literal_class (DECL_CONTEXT (fun));\n \t}\n     }\n   else if (CLASSTYPE_VBASECLASSES (DECL_CONTEXT (fun)))"}, {"sha": "9078533d732731675b4d7e2b283f58e24e03f00f", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-data1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54069e595976eb556b22c231951cb2703e523a22/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-data1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54069e595976eb556b22c231951cb2703e523a22/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-data1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-data1.C?ref=54069e595976eb556b22c231951cb2703e523a22", "patch": "@@ -36,7 +36,7 @@ class debug_flag\n {\n public:\n    explicit debug_flag(bool);\n-   constexpr bool is_on(); // { dg-error \"enclosing class .* not a literal type\" }\n+   constexpr bool is_on(); // { dg-error \"enclosing class .* not a literal type\" \"\" { target c++11_only } }\n private:\n    bool flag;\n };"}, {"sha": "450a0b5f9d4705eeeb0c6210c6ad1acd193255b8", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-diag1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54069e595976eb556b22c231951cb2703e523a22/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54069e595976eb556b22c231951cb2703e523a22/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag1.C?ref=54069e595976eb556b22c231951cb2703e523a22", "patch": "@@ -5,15 +5,15 @@ template <class T>\n struct A\n {\n   T t;\n-  constexpr int f() const { return 42; } // { dg-error \"enclosing class\" }\n+  constexpr int f() const { return 42; } // { dg-error \"enclosing class\" \"\" { target c++11_only } }\n };\n \n struct B { B(); operator int(); };\n \n constexpr A<int> ai = { 42 };\n constexpr int i = ai.f();\n \n-constexpr int b = A<B>().f();\t// { dg-error \"non-constexpr function\" }\n+constexpr int b = A<B>().f();\t// { dg-error \"\" }\n \n template <class T>\n constexpr int f (T t) { return 42; } // { dg-error \"parameter\" }"}, {"sha": "27aad93e6c3cedafc606c4ebf07c2e03aaad4b58", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-diag3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54069e595976eb556b22c231951cb2703e523a22/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54069e595976eb556b22c231951cb2703e523a22/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-diag3.C?ref=54069e595976eb556b22c231951cb2703e523a22", "patch": "@@ -16,7 +16,7 @@ int main()\n struct complex \t\t\t// { dg-message \"no constexpr constructor\" }\n {\n   complex(double r, double i) : re(r), im(i) { }\n-  constexpr double real() const { return re; } // { dg-error \"not a literal type\" }\n+  constexpr double real() const { return re; } // { dg-error \"not a literal type\" \"\" { target c++11_only } }\n   double imag() const { return im; }\n \n private:\n@@ -25,7 +25,7 @@ private:\n };\n \n constexpr complex co1(0, 1);\t   // { dg-error \"not literal\" }\n-constexpr double dd2 = co1.real(); // { dg-error \"non-constexpr function\" }\n+constexpr double dd2 = co1.real(); // { dg-error \"\" }\n \n // --------------------\n "}, {"sha": "d59f465715db6f2ce44bca7d6738ba8fc36a6a11", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-memfn1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54069e595976eb556b22c231951cb2703e523a22/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-memfn1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54069e595976eb556b22c231951cb2703e523a22/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-memfn1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-memfn1.C?ref=54069e595976eb556b22c231951cb2703e523a22", "patch": "@@ -13,6 +13,6 @@ constexpr X X::g(X x) { return x; }\n struct Y\n {\n   Y() { }\n-  constexpr Y f(Y y);\t\t// { dg-error \"not a literal type\" }\n+  constexpr Y f(Y y) {}\t\t// { dg-error \"constexpr\" }\n   static constexpr Y g(Y y) {}\t// { dg-error \"constexpr\" }\n };"}, {"sha": "9c832b14cbcc64c5411b0e2c2c94d33a68557dea", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-neg1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54069e595976eb556b22c231951cb2703e523a22/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-neg1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54069e595976eb556b22c231951cb2703e523a22/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-neg1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-neg1.C?ref=54069e595976eb556b22c231951cb2703e523a22", "patch": "@@ -45,7 +45,7 @@ constexpr int g(int x, int n) {\n class debug_flag {\n public:\n   explicit debug_flag(bool);\n-  constexpr bool is_on();\t// { dg-error \"not a literal type\" } debug_flag not literal type\n+  constexpr bool is_on(); // { dg-error \"not a literal type\" \"\" { target c++11_only } } debug_flag not literal type\n private:\n   bool flag;\n };"}, {"sha": "04ffcfd8ebd58a268d0fbaa602aa5243f654b524", "filename": "gcc/testsuite/g++.dg/cpp1y/constexpr-dr1684.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54069e595976eb556b22c231951cb2703e523a22/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-dr1684.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54069e595976eb556b22c231951cb2703e523a22/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-dr1684.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-dr1684.C?ref=54069e595976eb556b22c231951cb2703e523a22", "patch": "@@ -0,0 +1,7 @@\n+// DR 1684\n+// { dg-do compile { target c++11 } }\n+\n+struct A {\n+  A(int);\n+  constexpr int foo() { return 0; } // { dg-error \"literal\" \"\" { target c++11_only } }\n+};"}]}