{"sha": "368dbb23c5efaf86b2b18945508d379713c0d12c", "node_id": "C_kwDOANBUbNoAKDM2OGRiYjIzYzVlZmFmODZiMmIxODk0NTUwOGQzNzk3MTNjMGQxMmM", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2022-08-30T06:48:21Z"}, "committer": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2022-08-30T06:48:21Z"}, "message": "middle-end: intialize regnum in store_bit_field_1\n\nThis initializes regnum to 0 for when undefined_p.\n0 is the right default as it's supposed to get the lowpart\nwhen undefined.\n\ngcc/ChangeLog:\n\n\t* expmed.cc (store_bit_field_1): Initialize regnum to 0.", "tree": {"sha": "8f86795a98b4410de7c3203affbc54050a69357b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f86795a98b4410de7c3203affbc54050a69357b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/368dbb23c5efaf86b2b18945508d379713c0d12c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/368dbb23c5efaf86b2b18945508d379713c0d12c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/368dbb23c5efaf86b2b18945508d379713c0d12c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/368dbb23c5efaf86b2b18945508d379713c0d12c/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b47752e7e5169370c84eb30016b3aeac06ddc5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b47752e7e5169370c84eb30016b3aeac06ddc5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b47752e7e5169370c84eb30016b3aeac06ddc5e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "cdc0adb389202a5cab79a8d89056ddc347fb28cb", "filename": "gcc/expmed.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/368dbb23c5efaf86b2b18945508d379713c0d12c/gcc%2Fexpmed.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/368dbb23c5efaf86b2b18945508d379713c0d12c/gcc%2Fexpmed.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.cc?ref=368dbb23c5efaf86b2b18945508d379713c0d12c", "patch": "@@ -794,7 +794,7 @@ store_bit_field_1 (rtx str_rtx, poly_uint64 bitsize, poly_uint64 bitnum,\n \t words or to cope with mode punning between equal-sized modes.\n \t In the latter case, use subreg on the rhs side, not lhs.  */\n       rtx sub;\n-      HOST_WIDE_INT regnum;\n+      HOST_WIDE_INT regnum = 0;\n       poly_uint64 regsize = REGMODE_NATURAL_SIZE (GET_MODE (op0));\n       if (known_eq (bitnum, 0U)\n \t  && known_eq (bitsize, GET_MODE_BITSIZE (GET_MODE (op0))))"}]}