{"sha": "7037d2bbd04f5b845b899e533a96334c0e2f653e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzAzN2QyYmJkMDRmNWI4NDViODk5ZTUzM2E5NjMzNGMwZTJmNjUzZQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-05-24T13:06:40Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-24T13:06:40Z"}, "message": "[Ada] Add a new Is_Activation_Record flag on IN parameters\n\n2018-05-24  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* einfo.ads, einfo.adb (Is_Activation_Record): New flag on\n\tin_parameters, used when unesting subprograms for LLVM, to indicate\n\tthat a generated parameter carries the activation record from the\n\tenclosing subprogram.\n\t* exp_unst.adb (Check_Static_Type): Handle array attributes of types\n\twhose bounds may contain up-level references that need to be added to\n\tan activation recoord.\n\t(Add_Extra_Formal): Set Is_Activation_Record on new formal.\n\nFrom-SVN: r260666", "tree": {"sha": "9461445ae2a4c5b7e6def5dc277e37d24bf0d313", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9461445ae2a4c5b7e6def5dc277e37d24bf0d313"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7037d2bbd04f5b845b899e533a96334c0e2f653e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7037d2bbd04f5b845b899e533a96334c0e2f653e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7037d2bbd04f5b845b899e533a96334c0e2f653e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7037d2bbd04f5b845b899e533a96334c0e2f653e/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d72ba19f9940286ba9e297fe45b9b2d802aee549", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d72ba19f9940286ba9e297fe45b9b2d802aee549", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d72ba19f9940286ba9e297fe45b9b2d802aee549"}], "stats": {"total": 59, "additions": 51, "deletions": 8}, "files": [{"sha": "bf4645437dd54727aa519e37129901b8e25b21da", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7037d2bbd04f5b845b899e533a96334c0e2f653e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7037d2bbd04f5b845b899e533a96334c0e2f653e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7037d2bbd04f5b845b899e533a96334c0e2f653e", "patch": "@@ -1,3 +1,14 @@\n+2018-05-24  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* einfo.ads, einfo.adb (Is_Activation_Record): New flag on\n+\tin_parameters, used when unesting subprograms for LLVM, to indicate\n+\tthat a generated parameter carries the activation record from the\n+\tenclosing subprogram.\n+\t* exp_unst.adb (Check_Static_Type): Handle array attributes of types\n+\twhose bounds may contain up-level references that need to be added to\n+\tan activation recoord.\n+\t(Add_Extra_Formal): Set Is_Activation_Record on new formal.\n+\n 2018-05-24  Yannick Moy  <moy@adacore.com>\n \n \t* pprint.adb (Expression_Image): Improve the printing of expressions,"}, {"sha": "77e1eb32ef9051e98318c7c245b1e2cc7c21222a", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7037d2bbd04f5b845b899e533a96334c0e2f653e/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7037d2bbd04f5b845b899e533a96334c0e2f653e/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=7037d2bbd04f5b845b899e533a96334c0e2f653e", "patch": "@@ -630,8 +630,8 @@ package body Einfo is\n    --    Is_Initial_Condition_Procedure  Flag302\n    --    Suppress_Elaboration_Warnings   Flag303\n    --    Is_Elaboration_Warnings_OK_Id   Flag304\n+   --    Is_Activation_Record            Flag305\n \n-   --    (unused)                        Flag305\n    --    (unused)                        Flag306\n    --    (unused)                        Flag307\n    --    (unused)                        Flag308\n@@ -2100,6 +2100,12 @@ package body Einfo is\n       return Flag69 (Id);\n    end Is_Access_Constant;\n \n+   function Is_Activation_Record (Id : E) return B is\n+   begin\n+      pragma Assert (Ekind (Id) = E_In_Parameter);\n+      return Flag305 (Id);\n+   end Is_Activation_Record;\n+\n    function Is_Actual_Subtype (Id : E) return B is\n    begin\n       pragma Assert (Is_Type (Id));\n@@ -5304,6 +5310,12 @@ package body Einfo is\n       Set_Flag69 (Id, V);\n    end Set_Is_Access_Constant;\n \n+   procedure Set_Is_Activation_Record (Id : E; V : B := True) is\n+   begin\n+      pragma Assert (Ekind (Id) = E_In_Parameter);\n+      Set_Flag305 (Id, V);\n+   end Set_Is_Activation_Record;\n+\n    procedure Set_Is_Actual_Subtype (Id : E; V : B := True) is\n    begin\n       pragma Assert (Is_Type (Id));"}, {"sha": "cd2875458427d5735031575df0fa493140073228", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7037d2bbd04f5b845b899e533a96334c0e2f653e/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7037d2bbd04f5b845b899e533a96334c0e2f653e/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=7037d2bbd04f5b845b899e533a96334c0e2f653e", "patch": "@@ -2302,6 +2302,11 @@ package Einfo is\n --    Is_Access_Type (synthesized)\n --       Applies to all entities, true for access types and subtypes\n \n+--    Is_Activation_Record (Flag305)\n+--       Applies to In_Parameters generated in Exp_Unst for nested\n+--       subprograms, to mark the added formal that carries the activation\n+--       record created in the enclosing subprogram.\n+\n --    Is_Actual_Subtype (Flag293)\n --       Defined on all types, true for the generated constrained subtypes\n --       that are built for unconstrained composite actuals.\n@@ -6275,6 +6280,7 @@ package Einfo is\n    --    Is_Only_Out_Parameter               (Flag226)\n    --    Low_Bound_Tested                    (Flag205)\n    --    Is_Return_Object                    (Flag209)\n+   --    Is_Activation_Record                (Flag305)\n    --    Parameter_Mode                      (synth)\n \n    --  E_Label\n@@ -7264,6 +7270,7 @@ package Einfo is\n    function Is_Abstract_Subprogram              (Id : E) return B;\n    function Is_Abstract_Type                    (Id : E) return B;\n    function Is_Access_Constant                  (Id : E) return B;\n+   function Is_Activation_Record                (Id : E) return B;\n    function Is_Actual_Subtype                   (Id : E) return B;\n    function Is_Ada_2005_Only                    (Id : E) return B;\n    function Is_Ada_2012_Only                    (Id : E) return B;\n@@ -7963,6 +7970,7 @@ package Einfo is\n    procedure Set_Is_Abstract_Subprogram          (Id : E; V : B := True);\n    procedure Set_Is_Abstract_Type                (Id : E; V : B := True);\n    procedure Set_Is_Access_Constant              (Id : E; V : B := True);\n+   procedure Set_Is_Activation_Record            (Id : E; V : B := True);\n    procedure Set_Is_Actual_Subtype               (Id : E; V : B := True);\n    procedure Set_Is_Ada_2005_Only                (Id : E; V : B := True);\n    procedure Set_Is_Ada_2012_Only                (Id : E; V : B := True);\n@@ -8789,6 +8797,7 @@ package Einfo is\n    pragma Inline (Is_Abstract_Subprogram);\n    pragma Inline (Is_Abstract_Type);\n    pragma Inline (Is_Access_Constant);\n+   pragma Inline (Is_Activation_Record);\n    pragma Inline (Is_Actual_Subtype);\n    pragma Inline (Is_Access_Protected_Subprogram_Type);\n    pragma Inline (Is_Access_Subprogram_Type);\n@@ -9325,6 +9334,7 @@ package Einfo is\n    pragma Inline (Set_Is_Abstract_Subprogram);\n    pragma Inline (Set_Is_Abstract_Type);\n    pragma Inline (Set_Is_Access_Constant);\n+   pragma Inline (Set_Is_Activation_Record);\n    pragma Inline (Set_Is_Actual_Subtype);\n    pragma Inline (Set_Is_Ada_2005_Only);\n    pragma Inline (Set_Is_Ada_2012_Only);"}, {"sha": "0e60c4998b547b20c9fdcee9a387c2fa4490f171", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7037d2bbd04f5b845b899e533a96334c0e2f653e/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7037d2bbd04f5b845b899e533a96334c0e2f653e/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=7037d2bbd04f5b845b899e533a96334c0e2f653e", "patch": "@@ -612,6 +612,15 @@ package body Exp_Unst is\n                               end if;\n                            end if;\n                         end if;\n+                     when Attribute_First\n+                        | Attribute_Last\n+                        | Attribute_Length\n+                     =>\n+                        declare\n+                           DT : Boolean := False;\n+                        begin\n+                           Check_Static_Type (Etype (Prefix (N)), DT);\n+                        end;\n \n                      when others =>\n                         null;\n@@ -1178,13 +1187,14 @@ package body Exp_Unst is\n                   begin\n                      --  Decorate the new formal entity\n \n-                     Set_Scope               (Form, STJ.Ent);\n-                     Set_Ekind               (Form, E_In_Parameter);\n-                     Set_Etype               (Form, STJE.ARECnPT);\n-                     Set_Mechanism           (Form, By_Copy);\n-                     Set_Never_Set_In_Source (Form, True);\n-                     Set_Analyzed            (Form, True);\n-                     Set_Comes_From_Source   (Form, False);\n+                     Set_Scope                (Form, STJ.Ent);\n+                     Set_Ekind                (Form, E_In_Parameter);\n+                     Set_Etype                (Form, STJE.ARECnPT);\n+                     Set_Mechanism            (Form, By_Copy);\n+                     Set_Never_Set_In_Source  (Form, True);\n+                     Set_Analyzed             (Form, True);\n+                     Set_Comes_From_Source    (Form, False);\n+                     Set_Is_Activation_Record (Form, True);\n \n                      --  Case of only body present\n "}]}