{"sha": "abd0cdc9c07c92d6cab15afc4fd38945d536751b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJkMGNkYzljMDdjOTJkNmNhYjE1YWZjNGZkMzg5NDVkNTM2NzUxYg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2015-04-17T12:58:07Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2015-04-17T12:58:07Z"}, "message": "Hide __cpu_indicator_init/__cpu_model from linker\n\nWe shouldn't call external function, __cpu_indicator_init, while an object\nis being relocated since its .got.plt section hasn't been updated.  It\nworks for non-PIE since no update on .got.plt section is required.  This\npatch creates libgcc.so as a linker script, hides __cpu_indicator_init\nand __cpu_model in libgcc.so.1 from linker, forces linker to resolve\n__cpu_indicator_init and __cpu_model to their hidden definitions in\nlibgcc.a while providing backward binary compatibility.\n\ngcc/testsuite/\n\n\tPR target/65612\n\t* g++.dg/ext/mv18.C: New test.\n\t* g++.dg/ext/mv19.C: Likewise.\n\t* g++.dg/ext/mv20.C: Likewise.\n\t* g++.dg/ext/mv21.C: Likewise.\n\t* g++.dg/ext/mv22.C: Likewise.\n\t* g++.dg/ext/mv23.C: Likewise.\n\nlibgcc/\n\n\tPR target/65612\n\t* config.host (tmake_file): Add t-slibgcc-libgcc for Linux/x86.\n\t* config/i386/cpuinfo.c (__cpu_model): Initialize.\n\t(__cpu_indicator_init@GCC_4.8.0): New.\n\t(__cpu_model@GCC_4.8.0): Likewise.\n\t* config/i386/t-linux (HOST_LIBGCC2_CFLAGS): Add\n\t-DUSE_ELF_SYMVER.\n\nFrom-SVN: r222178", "tree": {"sha": "65719a14085bffae4c5e478b099f6bf4f54ba60d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65719a14085bffae4c5e478b099f6bf4f54ba60d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abd0cdc9c07c92d6cab15afc4fd38945d536751b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abd0cdc9c07c92d6cab15afc4fd38945d536751b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abd0cdc9c07c92d6cab15afc4fd38945d536751b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abd0cdc9c07c92d6cab15afc4fd38945d536751b/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "05b1fb220b74c1a00ff7657e00f9a1e7a798acdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05b1fb220b74c1a00ff7657e00f9a1e7a798acdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05b1fb220b74c1a00ff7657e00f9a1e7a798acdf"}], "stats": {"total": 73, "additions": 70, "deletions": 3}, "files": [{"sha": "e7b30489c7f2a912025e2df849c2c80fdbfe49d8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abd0cdc9c07c92d6cab15afc4fd38945d536751b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abd0cdc9c07c92d6cab15afc4fd38945d536751b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=abd0cdc9c07c92d6cab15afc4fd38945d536751b", "patch": "@@ -1,3 +1,13 @@\n+2015-04-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/65612\n+\t* g++.dg/ext/mv18.C: New test.\n+\t* g++.dg/ext/mv19.C: Likewise.\n+\t* g++.dg/ext/mv20.C: Likewise.\n+\t* g++.dg/ext/mv21.C: Likewise.\n+\t* g++.dg/ext/mv22.C: Likewise.\n+\t* g++.dg/ext/mv23.C: Likewise.\n+\n 2015-04-17  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \tPR c++/64527"}, {"sha": "1f024de9b955c116386f2c6ce5dd7bcf6f696a25", "filename": "gcc/testsuite/g++.dg/ext/mv18.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abd0cdc9c07c92d6cab15afc4fd38945d536751b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abd0cdc9c07c92d6cab15afc4fd38945d536751b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv18.C?ref=abd0cdc9c07c92d6cab15afc4fd38945d536751b", "patch": "@@ -0,0 +1,7 @@\n+/* Test case to check if Multiversioning works.  */\n+/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-ifunc \"\" }  */\n+/* { dg-require-effective-target pie } */\n+/* { dg-options \"-O2 -fPIE -pie\" } */\n+\n+#include \"mv1.C\""}, {"sha": "d1ea788745fbb91aa0b269fd0cdd6754c0489a02", "filename": "gcc/testsuite/g++.dg/ext/mv19.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abd0cdc9c07c92d6cab15afc4fd38945d536751b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abd0cdc9c07c92d6cab15afc4fd38945d536751b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv19.C?ref=abd0cdc9c07c92d6cab15afc4fd38945d536751b", "patch": "@@ -0,0 +1,7 @@\n+/* Test case to check if Multiversioning works.  */\n+/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-ifunc \"\" }  */\n+/* { dg-require-effective-target pie } */\n+/* { dg-options \"-O2 -fPIE -pie -march=x86-64\" } */\n+\n+#include \"mv14.C\""}, {"sha": "98f7408e1fcb9982da0fb1afed9389553dc0afc0", "filename": "gcc/testsuite/g++.dg/ext/mv20.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abd0cdc9c07c92d6cab15afc4fd38945d536751b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abd0cdc9c07c92d6cab15afc4fd38945d536751b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv20.C?ref=abd0cdc9c07c92d6cab15afc4fd38945d536751b", "patch": "@@ -0,0 +1,7 @@\n+/* Test case to check if Multiversioning works.  */\n+/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-ifunc \"\" }  */\n+/* { dg-require-effective-target pie } */\n+/* { dg-options \"-O2 -fPIE -pie -march=x86-64\" } */\n+\n+#include \"mv15.C\""}, {"sha": "9708ad95019b4bfd696b046f3d3e8356c84beb8b", "filename": "gcc/testsuite/g++.dg/ext/mv21.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abd0cdc9c07c92d6cab15afc4fd38945d536751b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abd0cdc9c07c92d6cab15afc4fd38945d536751b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv21.C?ref=abd0cdc9c07c92d6cab15afc4fd38945d536751b", "patch": "@@ -0,0 +1,7 @@\n+/* Test case to check if Multiversioning works.  */\n+/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-ifunc \"\" }  */\n+/* { dg-require-effective-target static } */\n+/* { dg-options \"-O2 -static\" } */\n+\n+#include \"mv1.C\""}, {"sha": "2550136fdacc10d30123a6f76bc77c02ced2cd2c", "filename": "gcc/testsuite/g++.dg/ext/mv22.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abd0cdc9c07c92d6cab15afc4fd38945d536751b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abd0cdc9c07c92d6cab15afc4fd38945d536751b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv22.C?ref=abd0cdc9c07c92d6cab15afc4fd38945d536751b", "patch": "@@ -0,0 +1,7 @@\n+/* Test case to check if Multiversioning works.  */\n+/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-ifunc \"\" }  */\n+/* { dg-require-effective-target static } */\n+/* { dg-options \"-O2 -static -march=x86-64\" } */\n+\n+#include \"mv14.C\""}, {"sha": "f00afb01f157f4a977c268575c3234f5c302b704", "filename": "gcc/testsuite/g++.dg/ext/mv23.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abd0cdc9c07c92d6cab15afc4fd38945d536751b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abd0cdc9c07c92d6cab15afc4fd38945d536751b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv23.C?ref=abd0cdc9c07c92d6cab15afc4fd38945d536751b", "patch": "@@ -0,0 +1,7 @@\n+/* Test case to check if Multiversioning works.  */\n+/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-ifunc \"\" }  */\n+/* { dg-require-effective-target static } */\n+/* { dg-options \"-O2 -static -march=x86-64\" } */\n+\n+#include \"mv15.C\""}, {"sha": "862608f6380a47e290d457bd337b7e93b5aa95a4", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abd0cdc9c07c92d6cab15afc4fd38945d536751b/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abd0cdc9c07c92d6cab15afc4fd38945d536751b/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=abd0cdc9c07c92d6cab15afc4fd38945d536751b", "patch": "@@ -1,3 +1,13 @@\n+2015-04-17  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/65612\n+\t* config.host (tmake_file): Add t-slibgcc-libgcc for Linux/x86.\n+\t* config/i386/cpuinfo.c (__cpu_model): Initialize.\n+\t(__cpu_indicator_init@GCC_4.8.0): New.\n+\t(__cpu_model@GCC_4.8.0): Likewise.\n+\t* config/i386/t-linux (HOST_LIBGCC2_CFLAGS): Add\n+\t-DUSE_ELF_SYMVER.\n+\n 2015-04-16  Nick Clifton  <nickc@redhat.com>\n \n \t* config/rl78/divmodhi.S: Add G14 and G13 versions of the __divhi3"}, {"sha": "ce14b9ee6254a9b77c664f8d93824e6d9f22fb50", "filename": "libgcc/config.host", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abd0cdc9c07c92d6cab15afc4fd38945d536751b/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abd0cdc9c07c92d6cab15afc4fd38945d536751b/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=abd0cdc9c07c92d6cab15afc4fd38945d536751b", "patch": "@@ -1306,7 +1306,7 @@ i[34567]86-*-linux* | x86_64-*-linux* | \\\n   i[34567]86-*-kfreebsd*-gnu | x86_64-*-kfreebsd*-gnu | \\\n   i[34567]86-*-knetbsd*-gnu | \\\n   i[34567]86-*-gnu*)\n-\ttmake_file=\"${tmake_file} t-tls i386/t-linux\"\n+\ttmake_file=\"${tmake_file} t-tls i386/t-linux t-slibgcc-libgcc\"\n \tif test \"$libgcc_cv_cfi\" = \"yes\"; then\n \t\ttmake_file=\"${tmake_file} t-stack i386/t-stack-i386\"\n \tfi"}, {"sha": "f6f91ddce6a3704097cd0a0b3b4ebc52b0a8abab", "filename": "libgcc/config/i386/cpuinfo.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abd0cdc9c07c92d6cab15afc4fd38945d536751b/libgcc%2Fconfig%2Fi386%2Fcpuinfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abd0cdc9c07c92d6cab15afc4fd38945d536751b/libgcc%2Fconfig%2Fi386%2Fcpuinfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fcpuinfo.c?ref=abd0cdc9c07c92d6cab15afc4fd38945d536751b", "patch": "@@ -109,7 +109,7 @@ struct __processor_model\n   unsigned int __cpu_type;\n   unsigned int __cpu_subtype;\n   unsigned int __cpu_features[1];\n-} __cpu_model;\n+} __cpu_model = { };\n \n \n /* Get the specific type of AMD CPU.  */\n@@ -424,3 +424,8 @@ __cpu_indicator_init (void)\n \n   return 0;\n }\n+\n+#if defined SHARED && defined USE_ELF_SYMVER\n+__asm__ (\".symver __cpu_indicator_init, __cpu_indicator_init@GCC_4.8.0\");\n+__asm__ (\".symver __cpu_model, __cpu_model@GCC_4.8.0\");\n+#endif"}, {"sha": "11bb46e0ee4f8e5555c69c6cd6b31b51ce7345f2", "filename": "libgcc/config/i386/t-linux", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abd0cdc9c07c92d6cab15afc4fd38945d536751b/libgcc%2Fconfig%2Fi386%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abd0cdc9c07c92d6cab15afc4fd38945d536751b/libgcc%2Fconfig%2Fi386%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-linux?ref=abd0cdc9c07c92d6cab15afc4fd38945d536751b", "patch": "@@ -3,4 +3,4 @@\n # t-slibgcc-elf-ver and t-linux\n SHLIB_MAPFILES = libgcc-std.ver $(srcdir)/config/i386/libgcc-glibc.ver\n \n-HOST_LIBGCC2_CFLAGS += -mlong-double-80\n+HOST_LIBGCC2_CFLAGS += -mlong-double-80 -DUSE_ELF_SYMVER"}]}