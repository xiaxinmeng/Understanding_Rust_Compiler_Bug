{"sha": "8fbe1b18ed090a026d08f0b0e5f8cd56d652125d", "node_id": "C_kwDOANBUbNoAKDhmYmUxYjE4ZWQwOTBhMDI2ZDA4ZjBiMGU1ZjhjZDU2ZDY1MjEyNWQ", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-10-03T12:25:11Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-10-03T12:27:02Z"}, "message": "options: check for CL_OPTIMIZATION only for cl_options.\n\ngcc/ChangeLog:\n\n\t* toplev.c (toplev::main): Check opt_index if it is a part\n\tof cl_options.", "tree": {"sha": "404d112cfd85680c528ee2b8dddb67f77fe27ce5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/404d112cfd85680c528ee2b8dddb67f77fe27ce5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fbe1b18ed090a026d08f0b0e5f8cd56d652125d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fbe1b18ed090a026d08f0b0e5f8cd56d652125d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fbe1b18ed090a026d08f0b0e5f8cd56d652125d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fbe1b18ed090a026d08f0b0e5f8cd56d652125d/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3e07b8955f176753c425c6ca52f77088616b0ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3e07b8955f176753c425c6ca52f77088616b0ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3e07b8955f176753c425c6ca52f77088616b0ea"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "ec9f998a49bb60ac5cbcfe390a407d160fd946e9", "filename": "gcc/toplev.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fbe1b18ed090a026d08f0b0e5f8cd56d652125d/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fbe1b18ed090a026d08f0b0e5f8cd56d652125d/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=8fbe1b18ed090a026d08f0b0e5f8cd56d652125d", "patch": "@@ -2339,7 +2339,8 @@ toplev::main (int argc, char **argv)\n \n   /* Save Optimization decoded options.  */\n   for (unsigned i = 1; i < save_decoded_options_count; ++i)\n-    if (cl_options[save_decoded_options[i].opt_index].flags & CL_OPTIMIZATION)\n+    if (save_decoded_options[i].opt_index < cl_options_count\n+\t&& cl_options[save_decoded_options[i].opt_index].flags & CL_OPTIMIZATION)\n       save_opt_decoded_options.safe_push (save_decoded_options[i]);\n \n   /* Perform language-specific options initialization.  */"}]}