{"sha": "3cd383fd6d32752db39734c5fd084e0ca7c08aed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NkMzgzZmQ2ZDMyNzUyZGIzOTczNGM1ZmQwODRlMGNhN2MwOGFlZA==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-11-13T09:08:18Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-11-13T09:08:18Z"}, "message": "target-supports.exp (error_h): New check.\n\ngcc/testsuite/\n\t* lib/target-supports.exp (error_h): New check.\n\t(libc_has_complex_functions): Ditto.\n\t(tgmath_h): Ditto.\n\t* gcc.dg/builtins-59.c: Add libc_has_complex_functions check.\n\t* gcc.dg/builtins-61.c: Likewise.\n\t* gcc.dg/builtins-67.c: Disable test for Bionic.\n\t* gcc.dg/strlenopt-14g.c: Likewise.\n\t* gcc.dg/strlenopt-14gf.c: Likewise.\n\t* gcc.dg/c99-tgmath-1.c: Add tgmath_h check.\n\t* gcc.dg/c99-tgmath-2.c: Likewise.\n\t* gcc.dg/c99-tgmath-3.c: Likewise.\n\t* gcc.dg/c99-tgmath-4.c: Likewise.\n\t* gcc.dg/dfp/convert-dfp-round-thread.c: Add error_h check.\n\nFrom-SVN: r217467", "tree": {"sha": "d1252b8e8604cdec06a02dd6cb82ec0a52ad3635", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1252b8e8604cdec06a02dd6cb82ec0a52ad3635"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cd383fd6d32752db39734c5fd084e0ca7c08aed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cd383fd6d32752db39734c5fd084e0ca7c08aed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cd383fd6d32752db39734c5fd084e0ca7c08aed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cd383fd6d32752db39734c5fd084e0ca7c08aed/comments", "author": null, "committer": null, "parents": [{"sha": "96994de0451510e3c9904668e79b554bd9163e89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96994de0451510e3c9904668e79b554bd9163e89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96994de0451510e3c9904668e79b554bd9163e89"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "5376ce19432324dd7c547754bbdb8dc870bd2fcc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3cd383fd6d32752db39734c5fd084e0ca7c08aed", "patch": "@@ -1,3 +1,19 @@\n+2014-11-12  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\n+\t* lib/target-supports.exp (error_h): New check.\n+\t(libc_has_complex_functions): Ditto.\n+\t(tgmath_h): Ditto.\n+\t* gcc.dg/builtins-59.c: Add libc_has_complex_functions check.\n+\t* gcc.dg/builtins-61.c: Likewise.\n+\t* gcc.dg/builtins-67.c: Disable test for Bionic.\n+\t* gcc.dg/strlenopt-14g.c: Likewise.\n+\t* gcc.dg/strlenopt-14gf.c: Likewise.\n+\t* gcc.dg/c99-tgmath-1.c: Add tgmath_h check.\n+\t* gcc.dg/c99-tgmath-2.c: Likewise.\n+\t* gcc.dg/c99-tgmath-3.c: Likewise.\n+\t* gcc.dg/c99-tgmath-4.c: Likewise.\n+\t* gcc.dg/dfp/convert-dfp-round-thread.c: Add error_h check.\n+\n 2014-11-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR ipa/63838"}, {"sha": "f5c1803d5df85f008b674655a6e42c1544813283", "filename": "gcc/testsuite/gcc.dg/builtins-59.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-59.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-59.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-59.c?ref=3cd383fd6d32752db39734c5fd084e0ca7c08aed", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-fdump-tree-gimple\" } */\n /* { dg-require-effective-target c99_runtime } */\n+/* { dg-require-effective-target libc_has_complex_functions } */\n \n double test (double x)\n {"}, {"sha": "a3310afbac2f19b130492120841ac99816e92cc2", "filename": "gcc/testsuite/gcc.dg/builtins-61.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-61.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-61.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-61.c?ref=3cd383fd6d32752db39734c5fd084e0ca7c08aed", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O -ffast-math -fdump-tree-optimized\" } */\n /* { dg-require-effective-target c99_runtime } */\n+/* { dg-require-effective-target libc_has_complex_functions } */\n \n double test1 (double x)\n {"}, {"sha": "0992fe1597f6e49b10961077fa4ca39235b6cd27", "filename": "gcc/testsuite/gcc.dg/builtins-67.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-67.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-67.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-67.c?ref=3cd383fd6d32752db39734c5fd084e0ca7c08aed", "patch": "@@ -3,6 +3,8 @@\n /* { dg-do link } */\n /* { dg-options \"-ffast-math -lm\" }  */\n /* { dg-add-options c99_runtime } */\n+/* Bionic doesn't have rintl */\n+/* { dg-require-effective-target non_bionic } */\n \n #include \"builtins-config.h\"\n "}, {"sha": "cfa02a91d33f1672625fc4c7f47c1436eb7a48a5", "filename": "gcc/testsuite/gcc.dg/c99-tgmath-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-1.c?ref=3cd383fd6d32752db39734c5fd084e0ca7c08aed", "patch": "@@ -3,6 +3,7 @@\n /* { dg-do preprocess { target c99_runtime } } */\n /* { dg-options \"-std=iso9899:1999\" } */\n /* { dg-add-options c99_runtime } */\n+/* { dg-require-effective-target tgmath_h } */\n \n /* Test that tgmath defines the macros it's supposed to. */\n #include <tgmath.h>"}, {"sha": "1a1153cc6eaeab1e0d6086b58e91b0bae18bb7ee", "filename": "gcc/testsuite/gcc.dg/c99-tgmath-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-2.c?ref=3cd383fd6d32752db39734c5fd084e0ca7c08aed", "patch": "@@ -3,6 +3,7 @@\n /* { dg-do compile { target c99_runtime } } */\n /* { dg-options \"-std=iso9899:1999\" } */\n /* { dg-add-options c99_runtime } */\n+/* { dg-require-effective-target tgmath_h } */\n \n /* Test that invoking type-generic sin on a float invokes sinf. */\n #include <tgmath.h>"}, {"sha": "a595cf68559a28f0ea13893f643fe78dcdf4ff3f", "filename": "gcc/testsuite/gcc.dg/c99-tgmath-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-3.c?ref=3cd383fd6d32752db39734c5fd084e0ca7c08aed", "patch": "@@ -3,6 +3,7 @@\n /* { dg-do compile { target c99_runtime } } */\n /* { dg-options \"-std=iso9899:1999\" } */\n /* { dg-add-options c99_runtime } */\n+/* { dg-require-effective-target tgmath_h } */\n \n /* Test that invoking type-generic exp on a complex invokes cexp. */\n #include <tgmath.h>"}, {"sha": "c05a1c59ebcaacb8b59095cf66c5dc60a096f6f8", "filename": "gcc/testsuite/gcc.dg/c99-tgmath-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-tgmath-4.c?ref=3cd383fd6d32752db39734c5fd084e0ca7c08aed", "patch": "@@ -3,6 +3,7 @@\n /* { dg-do compile { target c99_runtime } } */\n /* { dg-options \"-std=iso9899:1999\" } */\n /* { dg-add-options c99_runtime } */\n+/* { dg-require-effective-target tgmath_h } */\n \n /* Test that invoking type-generic pow on complex float invokes cpowf. */\n #include <tgmath.h>"}, {"sha": "59d9569b84f8de90a6f0f25292fc84cc2148af37", "filename": "gcc/testsuite/gcc.dg/dfp/convert-dfp-round-thread.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-dfp-round-thread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-dfp-round-thread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-dfp-round-thread.c?ref=3cd383fd6d32752db39734c5fd084e0ca7c08aed", "patch": "@@ -1,5 +1,7 @@\n /* { dg-options \"-std=gnu99 -D_GNU_SOURCE -pthread\" } */\n /* { dg-do run { target i?86-*-linux* i?86-*-gnu* x86_64-*-linux* } } */\n+/* { dg-require-effective-target error_h } */\n+\n \n /* N1150 5.2: Conversions among decimal floating types and between\n    decimal floating types and generic floating types."}, {"sha": "8bc47903be17f520b0aa55e6ce7342accd34f8a1", "filename": "gcc/testsuite/gcc.dg/strlenopt-14g.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-14g.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-14g.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-14g.c?ref=3cd383fd6d32752db39734c5fd084e0ca7c08aed", "patch": "@@ -1,6 +1,8 @@\n /* This test needs runtime that provides stpcpy and mempcpy functions.  */\n /* { dg-do run { target *-*-linux* *-*-gnu* } } */\n /* { dg-options \"-O2 -fdump-tree-strlen\" } */\n+/* Bionic targets don't have mempcpy */\n+/* { dg-require-effective-target non_bionic } */\n \n #define USE_GNU\n #include \"strlenopt.h\""}, {"sha": "54bb3a1b06555946e0c19fb8033c9b92c746a80d", "filename": "gcc/testsuite/gcc.dg/strlenopt-14gf.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-14gf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-14gf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-14gf.c?ref=3cd383fd6d32752db39734c5fd084e0ca7c08aed", "patch": "@@ -2,6 +2,8 @@\n    functions.  */\n /* { dg-do run { target *-*-linux* *-*-gnu* } } */\n /* { dg-options \"-O2 -fdump-tree-strlen\" } */\n+/* Bionic targets don't have mempcpy */\n+/* { dg-require-effective-target non_bionic } */\n \n #define FORTIFY_SOURCE 2\n #include \"strlenopt-14g.c\""}, {"sha": "02b2b778418ee9ceb9c4c0526f5d37f80dc70749", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd383fd6d32752db39734c5fd084e0ca7c08aed/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=3cd383fd6d32752db39734c5fd084e0ca7c08aed", "patch": "@@ -5124,6 +5124,30 @@ proc check_effective_target_non_bionic {} {\n     }]\n }\n \n+# Return true if this target has error.h header.\n+\n+proc check_effective_target_error_h {} {\n+    return [check_no_compiler_messages error_h object {\n+ #include <error.h>\n+    }]\n+}\n+\n+# Return true if this target has tgmath.h header.\n+\n+proc check_effective_target_tgmath_h {} {\n+    return [check_no_compiler_messages tgmath_h object {\n+ #include <tgmath.h>\n+    }]\n+}\n+\n+# Return true if target's libc supports complex functions.\n+\n+proc check_effective_target_libc_has_complex_functions {} {\n+    return [check_no_compiler_messages libc_has_complex_functions object {\n+ #include <complex.h>\n+    }]\n+}\n+\n # Return 1 if\n #   (a) an error of a few ULP is expected in string to floating-point\n #       conversion functions; and"}]}