{"sha": "88b17d450602da928cabdfcbb324de8e76c4e8c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhiMTdkNDUwNjAyZGE5MjhjYWJkZmNiYjMyNGRlOGU3NmM0ZThjNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-22T08:40:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-22T08:40:51Z"}, "message": "[multiple changes]\n\n2010-06-22  Ed Schonberg  <schonberg@adacore.com>\n\n\t* uintp.adb: Fix scope error in operator call.\n\n2010-06-22  Vincent Celier  <celier@adacore.com>\n\n\t* makeutl.adb (Executable_Prefix_Path): on VMS, return \"/gnu/\".\n\t* prj-conf.adb (Get_Or_Create_Configuration_File): On VMS, if\n\tautoconfiguration is needed, fail indicating that no config project\n\tfile can be found, as there is no autoconfiguration on VMS.\n\n2010-06-22  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_res.adb (Make_Call_Into_Operator): Diagnose an incorrect scope\n\tfor an operator in a functional notation, when operands are universal.\n\nFrom-SVN: r161147", "tree": {"sha": "df1b05a1f1519cf3236f73c1b27614894acb0ace", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df1b05a1f1519cf3236f73c1b27614894acb0ace"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88b17d450602da928cabdfcbb324de8e76c4e8c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88b17d450602da928cabdfcbb324de8e76c4e8c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88b17d450602da928cabdfcbb324de8e76c4e8c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88b17d450602da928cabdfcbb324de8e76c4e8c4/comments", "author": null, "committer": null, "parents": [{"sha": "29214696c8b7a2582378107a26a8d4fd8fe67f28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29214696c8b7a2582378107a26a8d4fd8fe67f28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29214696c8b7a2582378107a26a8d4fd8fe67f28"}], "stats": {"total": 71, "additions": 65, "deletions": 6}, "files": [{"sha": "c33f44cf52e2345070be5468517223faf335509b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88b17d450602da928cabdfcbb324de8e76c4e8c4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88b17d450602da928cabdfcbb324de8e76c4e8c4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=88b17d450602da928cabdfcbb324de8e76c4e8c4", "patch": "@@ -1,3 +1,19 @@\n+2010-06-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* uintp.adb: Fix scope error in operator call.\n+\n+2010-06-22  Vincent Celier  <celier@adacore.com>\n+\n+\t* makeutl.adb (Executable_Prefix_Path): on VMS, return \"/gnu/\".\n+\t* prj-conf.adb (Get_Or_Create_Configuration_File): On VMS, if\n+\tautoconfiguration is needed, fail indicating that no config project\n+\tfile can be found, as there is no autoconfiguration on VMS.\n+\n+2010-06-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb (Make_Call_Into_Operator): Diagnose an incorrect scope\n+\tfor an operator in a functional notation, when operands are universal.\n+\n 2010-06-22  Arnaud Charlet  <charlet@adacore.com>\n \n \t* gcc-interface/Make-lang.in: Update dependencies."}, {"sha": "49d64af1125023f8d87aa658e27a5c19bec1b192", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88b17d450602da928cabdfcbb324de8e76c4e8c4/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88b17d450602da928cabdfcbb324de8e76c4e8c4/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=88b17d450602da928cabdfcbb324de8e76c4e8c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,6 +26,7 @@\n with ALI;      use ALI;\n with Debug;\n with Fname;\n+with Hostparm;\n with Osint;    use Osint;\n with Output;   use Output;\n with Opt;      use Opt;\n@@ -378,6 +379,12 @@ package body Makeutl is\n    --  Beginning of Executable_Prefix_Path\n \n    begin\n+      --  For VMS, the path returned is always /gnu/\n+\n+      if Hostparm.OpenVMS then\n+         return \"/gnu/\";\n+      end if;\n+\n       --  First determine if a path prefix was placed in front of the\n       --  executable name.\n "}, {"sha": "757d547deeb291e3e725e878e1b8da9eb69c75b2", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88b17d450602da928cabdfcbb324de8e76c4e8c4/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88b17d450602da928cabdfcbb324de8e76c4e8c4/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=88b17d450602da928cabdfcbb324de8e76c4e8c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---            Copyright (C) 2006-2009, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2006-2010, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,6 +25,7 @@\n \n with Ada.Directories;  use Ada.Directories;\n with GNAT.HTable;      use GNAT.HTable;\n+with Hostparm;\n with Makeutl;          use Makeutl;\n with MLib.Tgt;\n with Opt;              use Opt;\n@@ -889,8 +890,18 @@ package body Prj.Conf is\n       <<Process_Config_File>>\n \n       if Automatically_Generated then\n-         --  This might raise an Invalid_Config exception\n-         Do_Autoconf;\n+         if Hostparm.OpenVMS then\n+\n+            --  There is no gprconfig on VMS\n+\n+            raise Invalid_Config\n+              with \"could not locate any configuration project file\";\n+\n+         else\n+            --  This might raise an Invalid_Config exception\n+\n+            Do_Autoconf;\n+         end if;\n       end if;\n \n       --  Parse the configuration file"}, {"sha": "c9f3c5784150c1a11c4d93cef654dfbcd002b009", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88b17d450602da928cabdfcbb324de8e76c4e8c4/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88b17d450602da928cabdfcbb324de8e76c4e8c4/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=88b17d450602da928cabdfcbb324de8e76c4e8c4", "patch": "@@ -1422,6 +1422,31 @@ package body Sem_Res is\n               (\"& not declared in&\", N, Selector_Name (Name (N)));\n             Set_Etype (N, Any_Type);\n             return;\n+\n+         --  Detect a mismatch between the context type and the result type\n+         --  in the named package, which is otherwise not detected if the\n+         --  operands are universal. Check is only needed if source entity is\n+         --  an operator, not a function that renames an operator.\n+\n+         elsif Nkind (Parent (N)) /= N_Type_Conversion\n+           and then Ekind (Entity (Name (N))) = E_Operator\n+           and then Is_Numeric_Type (Typ)\n+           and then not Is_Universal_Numeric_Type (Typ)\n+           and then Scope (Base_Type (Typ)) /= Pack\n+           and then not In_Instance\n+         then\n+            if Is_Fixed_Point_Type (Typ)\n+              and then (Op_Name = Name_Op_Multiply\n+                          or else\n+                        Op_Name = Name_Op_Divide)\n+            then\n+               --  Already checked above\n+\n+               null;\n+\n+            else\n+               Error_Msg_NE (\"expect type&\", N, Typ);\n+            end if;\n          end if;\n       end if;\n "}, {"sha": "b84ae5a13d0b64afaf6416a75b1cf6e6454c430b", "filename": "gcc/ada/uintp.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88b17d450602da928cabdfcbb324de8e76c4e8c4/gcc%2Fada%2Fuintp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88b17d450602da928cabdfcbb324de8e76c4e8c4/gcc%2Fada%2Fuintp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fuintp.adb?ref=88b17d450602da928cabdfcbb324de8e76c4e8c4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -239,7 +239,7 @@ package body Uintp is\n \n    function Hash_Num (F : Int) return Hnum is\n    begin\n-      return Standard.\"mod\" (F, Hnum'Range_Length);\n+      return Types.\"mod\" (F, Hnum'Range_Length);\n    end Hash_Num;\n \n    ---------------"}]}