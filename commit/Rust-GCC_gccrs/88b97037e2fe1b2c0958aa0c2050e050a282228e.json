{"sha": "88b97037e2fe1b2c0958aa0c2050e050a282228e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhiOTcwMzdlMmZlMWIyYzA5NThhYTBjMjA1MGUwNTBhMjgyMjI4ZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-03-17T19:01:36Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-03-17T19:01:36Z"}, "message": "alpha.c (TARGET_LRA_P): New define.\n\n\t* config/alpha/alpha.c (TARGET_LRA_P): New define.\n\nFrom-SVN: r196756", "tree": {"sha": "230c53aef21572ae3c72b9612148336966b1a954", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/230c53aef21572ae3c72b9612148336966b1a954"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88b97037e2fe1b2c0958aa0c2050e050a282228e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88b97037e2fe1b2c0958aa0c2050e050a282228e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88b97037e2fe1b2c0958aa0c2050e050a282228e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88b97037e2fe1b2c0958aa0c2050e050a282228e/comments", "author": null, "committer": null, "parents": [{"sha": "b4904956fad37473e178ef573049536ba87c4462", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4904956fad37473e178ef573049536ba87c4462", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4904956fad37473e178ef573049536ba87c4462"}], "stats": {"total": 92, "additions": 47, "deletions": 45}, "files": [{"sha": "382ea6de17d69e6a854ff96eef52c4b826f27eb7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 44, "deletions": 45, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88b97037e2fe1b2c0958aa0c2050e050a282228e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88b97037e2fe1b2c0958aa0c2050e050a282228e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88b97037e2fe1b2c0958aa0c2050e050a282228e", "patch": "@@ -1,3 +1,7 @@\n+2013-03-17  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/alpha/alpha.c (TARGET_LRA_P): New define.\n+\n 2013-03-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/56640\n@@ -34,38 +38,40 @@\n \n \t* configure.ac: Add MicroBlaze TLS support detection.\n \t* configure: Regenerate.\n-\t* config/microblaze/microblaze-protos.h: (microblaze_cannot_force_const_mem,\n-\tmicroblaze_tls_referenced_p, symbol_mentioned_p, label_mentioned_p): \n-\tAdd prototypes.\n-\t* config/microblaze/microblaze.c (microblaze_address_type): Add ADDRESS_TLS\n-\tand tls_reloc address types.\n+\t* config/microblaze/microblaze-protos.h\n+\t(microblaze_cannot_force_const_mem, microblaze_tls_referenced_p,\n+\tsymbol_mentioned_p, label_mentioned_p): Add prototypes.\n+\t* config/microblaze/microblaze.c (microblaze_address_type): Add\n+\tADDRESS_TLS and tls_reloc address types.\n \t(microblaze_address_info): Add tls_reloc.\n \t(TARGET_HAVE_TLS): Define.\n \t(get_tls_get_addr, microblaze_tls_symbol_p, microblaze_tls_operand_p_1,\n \t microblaze_tls_referenced_p, microblaze_cannot_force_const_mem,\n-\t symbol_mentioned_p, label_mentioned_p, tls_mentioned_p, load_tls_operand,\n-\t microblaze_call_tls_get_addr, microblaze_legitimize_tls_address): New functions.\n+\t symbol_mentioned_p, label_mentioned_p, tls_mentioned_p,\n+\tload_tls_operand,  microblaze_call_tls_get_addr,\n+\tmicroblaze_legitimize_tls_address): New functions.\n \t(microblaze_classify_unspec): Handle UNSPEC_TLS.\n \t(get_base_reg): Use microblaze_tls_symbol_p.\n \t(microblaze_classify_address): Handle TLS.\n-\t(microblaze_legitimate_pic_operand): Use symbol_mentioned_p, label_mentioned_p\n-\tand microblaze_tls_referenced_p.\n+\t(microblaze_legitimate_pic_operand): Use symbol_mentioned_p,\n+\tlabel_mentioned_p and microblaze_tls_referenced_p.\n \t(microblaze_legitimize_address): Handle TLS.\n \t(microblaze_address_insns): Handle ADDRESS_TLS.\n \t(pic_address_needs_scratch): Handle TLS.\n \t(print_operand_address): Handle TLS.\n \t(microblaze_expand_prologue): Check TLS_NEEDS_GOT.\n \t(microblaze_expand_move): Handle TLS.\n-\t(microblaze_legitimate_constant_p): Check microblaze_cannot_force_const_mem\n-\tand microblaze_tls_symbol_p.\n+\t(microblaze_legitimate_constant_p): Check\n+\tmicroblaze_cannot_force_const_mem and microblaze_tls_symbol_p.\n \t(TARGET_CANNOT_FORCE_CONST_MEM): Define.\n \t* config/microblaze/microblaze.h (TLS_NEEDS_GOT): Define\n \t(PIC_OFFSET_TABLE_REGNUM): Set.\n \t* config/microblaze/linux.h (TLS_NEEDS_GOT): Define.\n \t* config/microblaze/microblaze.md (UNSPEC_TLS): Define.\n \t(addsi3, movsi_internal2, movdf_internal): Update constraints\n \t* config/microblaze/predicates.md (arith_plus_operand): Define\n-\t(move_operand): Redefine as move_src_operand, check microblaze_tls_referenced_p.\n+\t(move_operand): Redefine as move_src_operand,\n+\tcheck microblaze_tls_referenced_p.\n \n 2013-03-14  Ian Bolton  <ian.bolton@arm.com>\n \n@@ -163,7 +169,7 @@\n \tPR target/56591\n \t* config/avr/avr.c (avr_print_operand): Add space after '%c' in\n \toutput_operand_lossage message.\n-\t\n+\n 2013-03-11  Richard Earnshaw  <rearnsha@arm.com>\n \n \tPR target/56470\n@@ -508,9 +514,9 @@\n \n 2013-03-04  David Holsgrove  <david.holsgrove@xilinx.com>\n \n-\t* config/microblaze/microblaze.c (microblaze_valid_pic_const): New \n+\t* config/microblaze/microblaze.c (microblaze_valid_pic_const): New\n \t(microblaze_legitimate_pic_operand): Likewise\n-\t* config/microblaze/microblaze.h (LEGITIMATE_PIC_OPERAND_P): calls \n+\t* config/microblaze/microblaze.h (LEGITIMATE_PIC_OPERAND_P): calls\n \tnew function microblaze_legitimate_pic_operand\n \t* config/microblaze/microblaze-protos.h\n \t(microblaze_legitimate_pic_operand): Declare.\n@@ -562,8 +568,8 @@\n \tDRIVER_SELF_SPECS.\n \t* config/microblaze/microblaze.md: New bswapsi2 and bswaphi2.\n \tinstructions emitted if TARGET_REORDER.\n-\t* config/microblaze/microblaze.opt: New option -mxl-reorder set to 1 \n-\tor 0 for -m/-mno case, but initialises as 2 to detect default use case \n+\t* config/microblaze/microblaze.opt: New option -mxl-reorder set to 1\n+\tor 0 for -m/-mno case, but initialises as 2 to detect default use case\n \tseparately.\n \n 2013-03-01  Xinliang David Li  <davidxl@google.com>\n@@ -733,8 +739,7 @@\n \tpointer_set_destroy on not_executed_last_iteration.\n \n \tPR middle-end/56461\n-\t* tree-vect-loop.c (vectorizable_reduction): Release vect_defs\n-\tvector.\n+\t* tree-vect-loop.c (vectorizable_reduction): Release vect_defs vector.\n \n \tPR middle-end/56461\n \t* ipa-pure-const.c (propagate): Use FOR_EACH_FUNCTION instead of\n@@ -850,8 +855,7 @@\n 2013-02-26  Marek Polacek  <polacek@redhat.com>\n \n \tPR tree-optimization/56426\n-\t* tree-ssa-loop.c (tree_ssa_loop_init): Always call\n-\tscev_initialize.\n+\t* tree-ssa-loop.c (tree_ssa_loop_init): Always call scev_initialize.\n \n 2013-02-26  Richard Biener  <rguenther@suse.de>\n \n@@ -895,8 +899,9 @@\n \t    Iain Sandoe  <iain@codesourcery.com>\n \t    Nathan Froyd  <froydnj@codesourcery.com>\n \t    Chao-ying Fu  <fu@mips.com>\n+\n \t* doc/extend.texi: (micromips, nomicromips, nocompression):\n-\tDocument new function attributes. \n+\tDocument new function attributes.\n \t* doc/invoke.texi (minterlink-compressed, mmicromips,\n \tm14k, m14ke, m14kec): Document new options.\n \t(minterlink-mips16): Update documentation.\n@@ -1046,7 +1051,7 @@\n \t    Chao-ying Fu  <fu@mips.com>\n \n \t* doc/extend.texi: (micromips, nomicromips, nocompression):\n-\tDocument new function attributes. \n+\tDocument new function attributes.\n \t* doc/invoke.texi (minterlink-compressed, mmicromips,\n \tm14k, m14ke, m14kec): Document new options.\n \t(minterlink-mips16): Update documentation.\n@@ -1281,8 +1286,8 @@\n 2013-02-20  Jan Hubicka  <jh@suse.cz>\n \n \tPR tree-optimization/56265\n-\t* ipa-prop.c (ipa_make_edge_direct_to_target): Fixup callgraph when target is\n-\treferenced for firs ttime.\n+\t* ipa-prop.c (ipa_make_edge_direct_to_target): Fixup callgraph\n+\twhen target is referenced for first time.\n \n 2013-02-20  Richard Biener  <rguenther@suse.de>\n \n@@ -1293,8 +1298,7 @@\n \tnot return anything.\n \t(rename_ssa_copies): Do not remove unused locals.\n \t* tree-ssa-ccp.c (do_ssa_ccp): Likewise.\n-\t* tree-ssanames.c (pass_release_ssa_names): Remove unused\n-\tlocals first.\n+\t* tree-ssanames.c (pass_release_ssa_names): Remove unused locals first.\n \t* passes.c (execute_function_todo): Do not schedule unused locals\n \tremoval if cleanup_tree_cfg did something.\n \t* tree-ssa-live.c (remove_unused_locals): Dump statistics\n@@ -1303,8 +1307,7 @@\n 2013-02-20  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/56398\n-\t* tree-vect-loop-manip.c (adjust_debug_stmts): Skip\n-\tSSA default defs.\n+\t* tree-vect-loop-manip.c (adjust_debug_stmts): Skip SSA default defs.\n \n 2013-02-20  Martin Jambor  <mjambor@suse.cz>\n \n@@ -1313,7 +1316,7 @@\n \trestricted pointers to arrays.\n \n 2013-02-20  Richard Biener  <rguenther@suse.de>\n-\tJakub Jelinek  <jakub@redhat.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/56396\n \t* tree-ssa-ccp.c (n_const_val): New static variable.\n@@ -1350,7 +1353,7 @@\n \n \t* config/microblaze/microblaze.c: microblaze_has_clz = 0\n \tAdd version check for v8.10.a to enable microblaze_has_clz\n-\t* config/microblaze/microblaze.h: Add TARGET_HAS_CLZ as combined \n+\t* config/microblaze/microblaze.h: Add TARGET_HAS_CLZ as combined\n \tversion and TARGET_PATTERN_COMPARE check\n \t* config/microblaze/microblaze.md: New clzsi2 instruction\n \n@@ -1368,11 +1371,10 @@\n 2012-02-19  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR middle-end/55889\n-\n \t* sel-sched.c: Include ira.h.\n \t(implicit_clobber_conflict_p): New function.\n \t(moveup_expr): Use it.\n-\t* Makefile.in (sel-sched.o): Depend on ira.h. \n+\t* Makefile.in (sel-sched.o): Depend on ira.h.\n \n 2013-02-19  Richard Biener  <rguenther@suse.de>\n \n@@ -1403,8 +1405,7 @@\n \t* genopinit.c (raw_optab_handler): Use this_fn_optabs.\n \t(swap_optab_enable): Same.\n \t(init_all_optabs): Use argument instead of global.\n-\t* tree.h (struct tree_optimization_option): New field\n-\ttarget_optabs.\n+\t* tree.h (struct tree_optimization_option): New field target_optabs.\n \t* expr.h (init_all_optabs): Add argument to prototype.\n \t(TREE_OPTIMIZATION_OPTABS): New.\n \t(save_optabs_if_changed): Protoize.\n@@ -1428,8 +1429,8 @@\n \n \tPR target/56214\n \t* config/pa/predicates.md (base14_operand): Except for BLKmode, QImode\n-\tand HImode, require all displacements to be an integer multiple of their\n-\tmode size.\n+\tand HImode, require all displacements to be an integer multiple of\n+\ttheir mode size.\n \t* config/pa/pa.c (pa_legitimate_address_p): For REG+BASE addresses,\n \tonly allow QImode and HImode when reload is in progress and strict is\n \ttrue.  Likewise for symbolic addresses.  Use base14_operand to check\n@@ -1470,18 +1471,17 @@\n \n 2013-02-16  Edgar E. Iglesias  <edgar.iglesias@gmail.com>\n \n-\t* config/microblaze/microblaze.c (microblaze_asm_trampoline_template): \n+\t* config/microblaze/microblaze.c (microblaze_asm_trampoline_template):\n \tReplace with a microblaze version.\n \t(microblaze_trampoline_init): Adapt for microblaze.\n-\t* gcc/config/microblaze/microblaze.h (TRAMPOLINE_SIZE): Adapt for \n+\t* gcc/config/microblaze/microblaze.h (TRAMPOLINE_SIZE): Adapt for\n \tmicroblaze.\n \n 2013-02-16  Jakub Jelinek  <jakub@redhat.com>\n \t    Dodji Seketeli  <dodji@redhat.com>\n \n \tPR asan/56330\n-\t* asan.c (get_mem_refs_of_builtin_call): White space and style\n-\tcleanup.\n+\t* asan.c (get_mem_refs_of_builtin_call): White space and style cleanup.\n \t(instrument_mem_region_access): Do not forget to always put\n \tinstrumentation of the of 'base' and 'base + len' in a \"if (len !=\n \t0) statement, even for cases where either 'base' or 'base + len'\n@@ -1571,13 +1571,12 @@\n \tre-initializing preserved loops.\n \t* loop-unswitch.c (unswitch_single_loop): Return whether\n \twe unswitched the loop.  Do not verify loop state here.\n-\t(unswitch_loops): When we unswitched a loop discover new\n-\tloops.\n+\t(unswitch_loops): When we unswitched a loop discover new loops.\n \n 2013-02-13  Kostya Serebryany  <kcc@google.com>\n \n-\t* config/i386/i386.c: Use 0x7fff8000 as asan_shadow_offset on x86_64\n-\tlinux.\n+\t* config/i386/i386.c: Use 0x7fff8000 as asan_shadow_offset\n+\ton x86_64 linux.\n \t* sanitizer.def: Rename __asan_init to __asan_init_v1.\n \n 2013-02-12  Dodji Seketeli  <dodji@redhat.com>"}, {"sha": "15cfd5ea86651403634c62de358e63051b2a7246", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88b97037e2fe1b2c0958aa0c2050e050a282228e/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88b97037e2fe1b2c0958aa0c2050e050a282228e/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=88b97037e2fe1b2c0958aa0c2050e050a282228e", "patch": "@@ -9872,6 +9872,9 @@ alpha_canonicalize_comparison (int *code, rtx *op0, rtx *op1,\n #undef TARGET_LEGITIMATE_ADDRESS_P\n #define TARGET_LEGITIMATE_ADDRESS_P alpha_legitimate_address_p\n \n+#undef TARGET_LRA_P\n+#define TARGET_LRA_P hook_bool_void_true\n+\n #undef TARGET_CONDITIONAL_REGISTER_USAGE\n #define TARGET_CONDITIONAL_REGISTER_USAGE alpha_conditional_register_usage\n "}]}