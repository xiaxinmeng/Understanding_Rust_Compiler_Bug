{"sha": "6871351bb0a13e548c66a27926076d20e06e6fd7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg3MTM1MWJiMGExM2U1NDhjNjZhMjc5MjYwNzZkMjBlMDZlNmZkNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-15T18:31:12Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-15T18:31:12Z"}, "message": "pt.c (value_dependent_expression_p): Don't check value_dependent_expression_p on the operand.\n\n\t* pt.c (value_dependent_expression_p) [NOEXCEPT_EXPR]: Don't\n\tcheck value_dependent_expression_p on the operand.\n\nFrom-SVN: r171013", "tree": {"sha": "6940a244d98b4cb9d56feff06a8039dfd875eb03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6940a244d98b4cb9d56feff06a8039dfd875eb03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6871351bb0a13e548c66a27926076d20e06e6fd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6871351bb0a13e548c66a27926076d20e06e6fd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6871351bb0a13e548c66a27926076d20e06e6fd7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6871351bb0a13e548c66a27926076d20e06e6fd7/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "17bc631c6806974d84c81360c6f8b3196b70d4e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17bc631c6806974d84c81360c6f8b3196b70d4e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17bc631c6806974d84c81360c6f8b3196b70d4e3"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "f8249dfca096be9dcf70bee6830f0c4bc003927e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6871351bb0a13e548c66a27926076d20e06e6fd7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6871351bb0a13e548c66a27926076d20e06e6fd7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6871351bb0a13e548c66a27926076d20e06e6fd7", "patch": "@@ -1,5 +1,9 @@\n 2011-03-15  Jason Merrill  <jason@redhat.com>\n \n+\tCore 1074\n+\t* pt.c (value_dependent_expression_p) [NOEXCEPT_EXPR]: Don't\n+\tcheck value_dependent_expression_p on the operand.\n+\n \t* semantics.c (push_cx_call_context): Return bool.\n \t(cxx_eval_call_expression): Handle excess depth.\n "}, {"sha": "c8c1010182022f733e554fc5c7c86ddad68c3408", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6871351bb0a13e548c66a27926076d20e06e6fd7/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6871351bb0a13e548c66a27926076d20e06e6fd7/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=6871351bb0a13e548c66a27926076d20e06e6fd7", "patch": "@@ -18143,9 +18143,7 @@ value_dependent_expression_p (tree expression)\n \n     case NOEXCEPT_EXPR:\n       expression = TREE_OPERAND (expression, 0);\n-      /* FIXME why check value-dependency?  */\n-      return (type_dependent_expression_p (expression)\n-\t      || value_dependent_expression_p (expression));\n+      return type_dependent_expression_p (expression);\n \n     case SCOPE_REF:\n       {"}]}