{"sha": "620db4ca608987ed3e386fad2fd80fa3886e8154", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIwZGI0Y2E2MDg5ODdlZDNlMzg2ZmFkMmZkODBmYTM4ODZlODE1NA==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-09-28T15:55:04Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-09-28T15:55:04Z"}, "message": "libstdc++: Reduce the size of a subrange with empty sentinel type\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/ranges_util.h (subrange::_M_end): Give it\n\t[[no_unique_address]].\n\t* testsuite/std/ranges/subrange/sizeof.cc: New test.", "tree": {"sha": "3fae948a6c4b248dc46969b1b327a99c8ceaa996", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fae948a6c4b248dc46969b1b327a99c8ceaa996"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/620db4ca608987ed3e386fad2fd80fa3886e8154", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/620db4ca608987ed3e386fad2fd80fa3886e8154", "html_url": "https://github.com/Rust-GCC/gccrs/commit/620db4ca608987ed3e386fad2fd80fa3886e8154", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/620db4ca608987ed3e386fad2fd80fa3886e8154/comments", "author": null, "committer": null, "parents": [{"sha": "623443357e6092067b4cf98cc6c0aeff7560b98d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/623443357e6092067b4cf98cc6c0aeff7560b98d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/623443357e6092067b4cf98cc6c0aeff7560b98d"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "a98658ff5c85c2c09ffe0ffc520178c3b3b72c6c", "filename": "libstdc++-v3/include/bits/ranges_util.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/620db4ca608987ed3e386fad2fd80fa3886e8154/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_util.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/620db4ca608987ed3e386fad2fd80fa3886e8154/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_util.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Franges_util.h?ref=620db4ca608987ed3e386fad2fd80fa3886e8154", "patch": "@@ -208,7 +208,7 @@ namespace ranges\n \t= _Kind == subrange_kind::sized && !sized_sentinel_for<_Sent, _It>;\n \n       _It _M_begin = _It();\n-      _Sent _M_end = _Sent();\n+      [[no_unique_address]] _Sent _M_end = _Sent();\n \n       template<typename, bool = _S_store_size>\n \tstruct _Size"}, {"sha": "7e95e196c6c120be22ef77e44e3cde1ee992dd9f", "filename": "libstdc++-v3/testsuite/std/ranges/subrange/sizeof.cc", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/620db4ca608987ed3e386fad2fd80fa3886e8154/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fsubrange%2Fsizeof.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/620db4ca608987ed3e386fad2fd80fa3886e8154/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fsubrange%2Fsizeof.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fsubrange%2Fsizeof.cc?ref=620db4ca608987ed3e386fad2fd80fa3886e8154", "patch": "@@ -0,0 +1,28 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <iterator>\n+#include <ranges>\n+\n+// Verify we optimize away the 'end' data member of a subrange with an empty\n+// sentinel type.\n+static_assert(sizeof(std::ranges::subrange<std::counted_iterator<int*>,\n+\t\t\t\t\t   std::default_sentinel_t>)\n+\t      == sizeof(std::counted_iterator<int*>));"}]}