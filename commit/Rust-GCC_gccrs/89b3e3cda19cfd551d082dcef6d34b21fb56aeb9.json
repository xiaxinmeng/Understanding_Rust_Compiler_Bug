{"sha": "89b3e3cda19cfd551d082dcef6d34b21fb56aeb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODliM2UzY2RhMTljZmQ1NTFkMDgyZGNlZjZkMzRiMjFmYjU2YWViOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2006-08-17T07:58:02Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2006-08-17T07:58:02Z"}, "message": "re PR libgomp/28725 (Case Sensitive OpenMP environment variables and patch)\n\n\tPR libgomp/28725\n\t* env.c: Include ctype.h.\n\t(parse_schedule, parse_unsigned_long, parse_boolean): Allow\n\tleading and/or trailing whitespace and compare strings case\n\tinsensitively.\n\nFrom-SVN: r116209", "tree": {"sha": "ec6bcf1b1e13120fdc20fa06cbabd9ff42389db6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec6bcf1b1e13120fdc20fa06cbabd9ff42389db6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89b3e3cda19cfd551d082dcef6d34b21fb56aeb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b3e3cda19cfd551d082dcef6d34b21fb56aeb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89b3e3cda19cfd551d082dcef6d34b21fb56aeb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b3e3cda19cfd551d082dcef6d34b21fb56aeb9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6d4d7b0eed1846e13f5dd75765696b2b6854af44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d4d7b0eed1846e13f5dd75765696b2b6854af44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d4d7b0eed1846e13f5dd75765696b2b6854af44"}], "stats": {"total": 57, "additions": 42, "deletions": 15}, "files": [{"sha": "3b9ff829c10197292ee20e7eac7c3c4db6667ba1", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b3e3cda19cfd551d082dcef6d34b21fb56aeb9/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b3e3cda19cfd551d082dcef6d34b21fb56aeb9/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=89b3e3cda19cfd551d082dcef6d34b21fb56aeb9", "patch": "@@ -1,3 +1,11 @@\n+2006-08-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libgomp/28725\n+\t* env.c: Include ctype.h.\n+\t(parse_schedule, parse_unsigned_long, parse_boolean): Allow\n+\tleading and/or trailing whitespace and compare strings case\n+\tinsensitively.\n+\n 2006-07-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/28390"}, {"sha": "0a80b87c5f5397af7fead658b5260a63531f288f", "filename": "libgomp/env.c", "status": "modified", "additions": 34, "deletions": 15, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89b3e3cda19cfd551d082dcef6d34b21fb56aeb9/libgomp%2Fenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89b3e3cda19cfd551d082dcef6d34b21fb56aeb9/libgomp%2Fenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fenv.c?ref=89b3e3cda19cfd551d082dcef6d34b21fb56aeb9", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2005 Free Software Foundation, Inc.\n+/* Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n    Contributed by Richard Henderson <rth@redhat.com>.\n \n    This file is part of the GNU OpenMP Library (libgomp).\n@@ -30,6 +30,7 @@\n \n #include \"libgomp.h\"\n #include \"libgomp_f.h\"\n+#include <ctype.h>\n #include <stdlib.h>\n #include <string.h>\n #include <limits.h>\n@@ -53,38 +54,40 @@ parse_schedule (void)\n   if (env == NULL)\n     return;\n \n-  if (strncmp (env, \"static\", 6) == 0)\n+  while (isspace ((unsigned char) *env))\n+    ++env;\n+  if (strncasecmp (env, \"static\", 6) == 0)\n     {\n       gomp_run_sched_var = GFS_STATIC;\n       env += 6;\n     }\n-  else if (strncmp (env, \"dynamic\", 7) == 0)\n+  else if (strncasecmp (env, \"dynamic\", 7) == 0)\n     {\n       gomp_run_sched_var = GFS_DYNAMIC;\n       env += 7;\n     }\n-  else if (strncmp (env, \"guided\", 6) == 0)\n+  else if (strncasecmp (env, \"guided\", 6) == 0)\n     {\n       gomp_run_sched_var = GFS_GUIDED;\n       env += 6;\n     }\n   else\n     goto unknown;\n \n+  while (isspace ((unsigned char) *env))\n+    ++env;\n   if (*env == '\\0')\n     return;\n-  if (*env != ' ' && *env != ',')\n+  if (*env++ != ',')\n     goto unknown;\n-  while (*env == ' ')\n-    env++;\n+  while (isspace ((unsigned char) *env))\n+    ++env;\n   if (*env == '\\0')\n-    return;\n-  if (*env != ',')\n-    goto unknown;\n-  if (*++env == '\\0')\n     goto invalid;\n \n   gomp_run_sched_chunk = strtoul (env, &end, 10);\n+  while (isspace ((unsigned char) *end))\n+    ++end;\n   if (*end != '\\0')\n     goto invalid;\n   return;\n@@ -113,10 +116,14 @@ parse_unsigned_long (const char *name, unsigned long *pvalue)\n   if (env == NULL)\n     return false;\n \n+  while (isspace ((unsigned char) *env))\n+    ++env;\n   if (*env == '\\0')\n     goto invalid;\n \n   value = strtoul (env, &end, 10);\n+  while (isspace ((unsigned char) *end))\n+    ++end;\n   if (*end != '\\0')\n     goto invalid;\n \n@@ -140,11 +147,23 @@ parse_boolean (const char *name, bool *value)\n   if (env == NULL)\n     return;\n \n-  if (strcmp (env, \"true\") == 0)\n-    *value = true;\n-  else if (strcmp (env, \"false\") == 0)\n-    *value = false;\n+  while (isspace ((unsigned char) *env))\n+    ++env;\n+  if (strncasecmp (env, \"true\", 4) == 0)\n+    {\n+      *value = true;\n+      env += 4;\n+    }\n+  else if (strncasecmp (env, \"false\", 5) == 0)\n+    {\n+      *value = false;\n+      env += 5;\n+    }\n   else\n+    env = \"X\";\n+  while (isspace ((unsigned char) *env))\n+    ++env;\n+  if (*env != '\\0')\n     gomp_error (\"Invalid value for environment variable %s\", name);\n }\n "}]}