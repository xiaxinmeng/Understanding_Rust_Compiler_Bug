{"sha": "5660465a0bc5f6e820e56e650822e8316a6ee99c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY2MDQ2NWEwYmM1ZjZlODIwZTU2ZTY1MDgyMmU4MzE2YTZlZTk5Yw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2001-09-07T17:55:47Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2001-09-07T17:55:47Z"}, "message": "h8300-protos.h (general_operand_dst_push): Remove.\n\n\n        * h8300-protos.h (general_operand_dst_push): Remove.\n        * h8300.c (general_operand_dst_push): Likewise.\n        * h8300.h (OK_FOR_T): Likewise.\n        (EXTRA_CONSTRAINTS): Do not use OK_FOR_T.\n        * h8300.md (pushqi_h8300): New.\n        (pushqi_h8300hs): Likewise.\n        (pushqi): Likewise.\n        (pushhi_h8300): Likewise.\n        (pushhi_h8300hs): Likewise.\n        (pushhi): Likewise.\n\nFrom-SVN: r45470", "tree": {"sha": "129e4ee29dccedb572926cc3dd3377b188ba2b1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/129e4ee29dccedb572926cc3dd3377b188ba2b1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5660465a0bc5f6e820e56e650822e8316a6ee99c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5660465a0bc5f6e820e56e650822e8316a6ee99c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5660465a0bc5f6e820e56e650822e8316a6ee99c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5660465a0bc5f6e820e56e650822e8316a6ee99c/comments", "author": null, "committer": null, "parents": [{"sha": "7b9e1fcf2d1bf421389b08bbf99bb477da478592", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b9e1fcf2d1bf421389b08bbf99bb477da478592", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b9e1fcf2d1bf421389b08bbf99bb477da478592"}], "stats": {"total": 134, "additions": 89, "deletions": 45}, "files": [{"sha": "0403c8f71374fefdd840cedf1b315ce5ea05a9be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5660465a0bc5f6e820e56e650822e8316a6ee99c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5660465a0bc5f6e820e56e650822e8316a6ee99c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5660465a0bc5f6e820e56e650822e8316a6ee99c", "patch": "@@ -1,3 +1,16 @@\n+Fri Sep  7 11:52:30 2001   Kazu Hirata  <kazu@hxi.com>\n+\n+\t* h8300-protos.h (general_operand_dst_push): Remove.\n+\t* h8300.c (general_operand_dst_push): Likewise.\n+\t* h8300.h (OK_FOR_T): Likewise.\n+\t(EXTRA_CONSTRAINTS): Do not use OK_FOR_T.\n+\t* h8300.md (pushqi_h8300): New.\n+\t(pushqi_h8300hs): Likewise.\n+\t(pushqi): Likewise.\n+\t(pushhi_h8300): Likewise.\n+\t(pushhi_h8300hs): Likewise.\n+\t(pushhi): Likewise.\n+\n Fri Sep  7 12:56:26 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* genattrtab.c (attr_printf): First arg is unsigned."}, {"sha": "f4efd7d65680c82e40755c98edfefa3d96c9df4b", "filename": "gcc/config/h8300/h8300-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5660465a0bc5f6e820e56e650822e8316a6ee99c/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5660465a0bc5f6e820e56e650822e8316a6ee99c/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h?ref=5660465a0bc5f6e820e56e650822e8316a6ee99c", "patch": "@@ -46,7 +46,6 @@ extern void split_adds_subs PARAMS ((enum machine_mode, rtx[]));\n \n extern int general_operand_src PARAMS ((rtx, enum machine_mode));\n extern int general_operand_dst PARAMS ((rtx, enum machine_mode));\n-extern int general_operand_dst_push PARAMS ((rtx, enum machine_mode mode));\n extern int o_operand PARAMS ((rtx, enum machine_mode));\n extern int p_operand PARAMS ((rtx, enum machine_mode));\n extern int call_insn_operand PARAMS ((rtx, enum machine_mode));"}, {"sha": "c998ac225682204a4934b5ab392b6fd57b33b000", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5660465a0bc5f6e820e56e650822e8316a6ee99c/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5660465a0bc5f6e820e56e650822e8316a6ee99c/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=5660465a0bc5f6e820e56e650822e8316a6ee99c", "patch": "@@ -538,7 +538,7 @@ general_operand_src (op, mode)\n }\n \n /* Return true if OP is a valid destination operand for an integer move\n-   instruction, excluding those involving pre_modify.  */\n+   instruction.  */\n \n int\n general_operand_dst (op, mode)\n@@ -550,20 +550,6 @@ general_operand_dst (op, mode)\n   return general_operand (op, mode);\n }\n \n-/* Return true if OP is a valid destination operand for an integer move\n-   instruction, including those involving pre_modify.  */\n-\n-int\n-general_operand_dst_push (op, mode)\n-     rtx op;\n-     enum machine_mode mode;\n-{\n-  if (push_operand (op, mode))\n-    return 1;\n-\n-  return general_operand_dst (op, mode);\n-}\n-\n /* Return true if OP is a const valid for a bit clear instruction.  */\n \n int"}, {"sha": "f30563d94a7410e94b59d0f591580fe1bc79f490", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5660465a0bc5f6e820e56e650822e8316a6ee99c/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5660465a0bc5f6e820e56e650822e8316a6ee99c/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=5660465a0bc5f6e820e56e650822e8316a6ee99c", "patch": "@@ -871,16 +871,6 @@ struct cum_arg\n   (GET_CODE (X) == CONST_INT && TARGET_H8300H\t\t\\\n    && 0xffff00 <= INTVAL (X) && INTVAL (X) <= 0xffffff)\n \n-/* 'T' if valid for a push destination using pre_modify.  */\n-#define OK_FOR_T(OP)\t\t\t\t\t\t\t      \\\n-  (GET_CODE (OP) == MEM\t\t\t\t\t\t\t      \\\n-   && GET_CODE (XEXP (OP, 0)) == PRE_MODIFY\t\t\t\t      \\\n-   && GET_CODE (XEXP (XEXP (OP, 0), 1)) == PLUS\t\t\t\t      \\\n-   && XEXP (XEXP (XEXP (OP, 0), 1), 0) == XEXP (XEXP (OP, 0), 0)\t      \\\n-   && GET_CODE (XEXP (XEXP (XEXP (OP, 0), 1), 1)) == CONST_INT\t\t      \\\n-   && INTVAL (XEXP (XEXP (XEXP (OP, 0), 1), 1)) == - (int) STACK_BOUNDARY / 8 \\\n-   && XEXP (XEXP (OP, 0), 0) == stack_pointer_rtx)\n-\n /* 'U' if valid for a bset destination;\n    i.e. a register, register indirect, or the eightbit memory region\n    (a SYMBOL_REF with an SYMBOL_REF_FLAG set).\n@@ -903,8 +893,7 @@ struct cum_arg\n        && GET_CODE (XEXP (OP, 0)) == CONST_INT))\n \n #define EXTRA_CONSTRAINT(OP, C)\t\t\t\\\n-  ((C) == 'T' ? OK_FOR_T (OP) :\t\t\t\\\n-   (C) == 'U' ? OK_FOR_U (OP) :\t\t\t\\\n+  ((C) == 'U' ? OK_FOR_U (OP) :\t\t\t\\\n    0)\n \f\n /* GO_IF_LEGITIMATE_ADDRESS recognizes an RTL expression"}, {"sha": "8b6b39ad1d79d2247c3ec09f1a10e34967eedbce", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 74, "deletions": 17, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5660465a0bc5f6e820e56e650822e8316a6ee99c/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5660465a0bc5f6e820e56e650822e8316a6ee99c/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=5660465a0bc5f6e820e56e650822e8316a6ee99c", "patch": "@@ -106,26 +106,57 @@\n \n ;; movqi\n \n+(define_insn \"pushqi1_h8300\"\n+  [(parallel [(set (reg:HI 7)\n+                   (plus:HI (reg:HI 7) (const_int -2)))\n+              (set (mem:QI (plus:HI (reg:HI 7) (const_int -1)))\n+                   (match_operand:QI 0 \"register_operand\" \"r\"))])]\n+  \"TARGET_H8300\"\n+  \"mov.w       %T0,@-r7\"\n+  [(set_attr \"length\" \"2\")\n+   (set_attr \"cc\" \"clobber\")])\n+\n+(define_insn \"pushqi1_h8300hs\"\n+  [(parallel [(set (reg:SI 7)\n+                   (plus:SI (reg:SI 7) (const_int -4)))\n+              (set (mem:QI (plus:SI (reg:SI 7) (const_int -3)))\n+                   (match_operand:QI 0 \"register_operand\" \"r\"))])]\n+  \"TARGET_H8300H || TARGET_H8300S\"\n+  \"mov.l       %S0,@-er7\"\n+  [(set_attr \"length\" \"4\")\n+   (set_attr \"cc\" \"clobber\")])\n+\n+(define_expand \"pushqi1\"\n+  [(use (match_operand:QI 0 \"register_operand\" \"r\"))]\n+  \"\"\n+  \"\n+{\n+  if (TARGET_H8300)\n+    emit_insn (gen_pushqi1_h8300 (operands[0]));\n+  else\n+    emit_insn (gen_pushqi1_h8300hs (operands[0]));\n+  DONE;\n+}\")\n+\n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"general_operand_dst_push\" \"=r,r ,<,T,r,r,m\")\n-\t(match_operand:QI 1 \"general_operand_src\"      \" I,r>,r,r,n,m,r\"))]\n+  [(set (match_operand:QI 0 \"general_operand_dst\" \"=r,r ,<,r,r,m\")\n+\t(match_operand:QI 1 \"general_operand_src\"      \" I,r>,r,n,m,r\"))]\n   \"TARGET_H8300\n    && (register_operand (operands[0],QImode)\n        || register_operand (operands[1], QImode))\"\n   \"@\n    sub.b\t%X0,%X0\n    mov.b\t%R1,%X0\n    mov.b\t%X1,%R0\n-   mov.w\t%T1,@-r7\n    mov.b\t%R1,%X0\n    mov.b\t%R1,%X0\n    mov.b\t%X1,%R0\"\n-  [(set_attr \"length\" \"2,2,2,2,2,4,4\")\n-   (set_attr \"cc\" \"set_zn,set_znv,set_znv,clobber,set_znv,set_znv,set_znv\")])\n+  [(set_attr \"length\" \"2,2,2,2,4,4\")\n+   (set_attr \"cc\" \"set_zn,set_znv,set_znv,set_znv,set_znv,set_znv\")])\n \n (define_insn \"\"\n-  [(set (match_operand:QI 0 \"general_operand_dst_push\" \"=r,r ,<,r,T,r,m\")\n-\t(match_operand:QI 1 \"general_operand_src\"      \" I,r>,r,n,r,m,r\"))]\n+  [(set (match_operand:QI 0 \"general_operand_dst\" \"=r,r ,<,r,r,m\")\n+\t(match_operand:QI 1 \"general_operand_src\"      \" I,r>,r,n,m,r\"))]\n   \"(TARGET_H8300H || TARGET_H8300S)\n    && (register_operand (operands[0],QImode)\n        || register_operand (operands[1], QImode))\"\n@@ -134,14 +165,13 @@\n    mov.b\t%R1,%X0\n    mov.b\t%X1,%R0\n    mov.b\t%R1,%X0\n-   mov.l\t%S1,@-er7\n    mov.b\t%R1,%X0\n    mov.b\t%X1,%R0\"\n-  [(set_attr \"length\" \"2,2,2,2,4,8,8\")\n-   (set_attr \"cc\" \"set_zn,set_znv,set_znv,clobber,set_znv,set_znv,set_znv\")])\n+  [(set_attr \"length\" \"2,2,2,2,8,8\")\n+   (set_attr \"cc\" \"set_zn,set_znv,set_znv,clobber,set_znv,set_znv\")])\n \n (define_expand \"movqi\"\n-  [(set (match_operand:QI 0 \"general_operand_dst_push\" \"\")\n+  [(set (match_operand:QI 0 \"general_operand_dst\" \"\")\n \t(match_operand:QI 1 \"general_operand_src\" \"\"))]\n   \"\"\n   \"\n@@ -170,6 +200,34 @@\n \n ;; movhi\n \n+(define_expand \"pushhi1_h8300\"\n+  [(set (mem:QI (pre_dec:HI (reg:HI 7)))\n+        (match_operand:QI 0 \"register_operand\" \"r\"))]\n+  \"TARGET_H8300\"\n+  \"\")\n+\n+(define_insn \"pushhi1_h8300hs\"\n+  [(parallel [(set (reg:SI 7)\n+                   (plus:SI (reg:SI 7) (const_int -4)))\n+              (set (mem:HI (plus:SI (reg:SI 7) (const_int -2)))\n+                   (match_operand:HI 0 \"register_operand\" \"r\"))])]\n+  \"TARGET_H8300H || TARGET_H8300S\"\n+  \"mov.l       %S0,@-er7\"\n+  [(set_attr \"length\" \"4\")\n+   (set_attr \"cc\" \"clobber\")])\n+\n+(define_expand \"pushhi1\"\n+  [(use (match_operand:QI 0 \"register_operand\" \"r\"))]\n+  \"\"\n+  \"\n+{\n+  if (TARGET_H8300)\n+    emit_insn (gen_pushhi1_h8300 (operands[0]));\n+  else\n+    emit_insn (gen_pushhi1_h8300hs (operands[0]));\n+  DONE;\n+}\")\n+\n (define_insn \"\"\n   [(set (match_operand:HI 0 \"general_operand_dst\" \"=r,r,<,r,r,m\")\n \t(match_operand:HI 1 \"general_operand_src\" \"I,r>,r,i,m,r\"))]\n@@ -192,24 +250,23 @@\n    (set_attr \"cc\" \"set_zn,set_znv,set_znv,set_znv,set_znv,set_znv\")])\n \n (define_insn \"\"\n-  [(set (match_operand:HI 0 \"general_operand_dst_push\" \"=r,r,<,T,r,r,m\")\n-\t(match_operand:HI 1 \"general_operand_src\" \"I,r>,r,r,i,m,r\"))]\n+  [(set (match_operand:HI 0 \"general_operand_dst\" \"=r,r,<,r,r,m\")\n+\t(match_operand:HI 1 \"general_operand_src\" \"I,r>,r,i,m,r\"))]\n   \"(TARGET_H8300H || TARGET_H8300S)\n    && (register_operand (operands[0],HImode)\n        || register_operand (operands[1], HImode))\"\n   \"@\n    sub.w\t%T0,%T0\n    mov.w\t%T1,%T0\n    mov.w\t%T1,%T0\n-   mov.l\t%S1,@-er7\n    mov.w\t%T1,%T0\n    mov.w\t%T1,%T0\n    mov.w\t%T1,%T0\"\n-  [(set_attr \"length\" \"2,2,2,4,4,8,8\")\n-   (set_attr \"cc\" \"set_zn,set_znv,set_znv,clobber,set_znv,set_znv,set_znv\")])\n+  [(set_attr \"length\" \"2,2,2,4,8,8\")\n+   (set_attr \"cc\" \"set_zn,set_znv,set_znv,set_znv,set_znv,set_znv\")])\n \n (define_expand \"movhi\"\n-  [(set (match_operand:HI 0 \"general_operand_dst_push\" \"\")\n+  [(set (match_operand:HI 0 \"general_operand_dst\" \"\")\n \t(match_operand:HI 1 \"general_operand_src\" \"\"))]\n   \"\"\n   \""}]}