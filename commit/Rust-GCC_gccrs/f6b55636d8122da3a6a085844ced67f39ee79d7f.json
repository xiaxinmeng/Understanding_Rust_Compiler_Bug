{"sha": "f6b55636d8122da3a6a085844ced67f39ee79d7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZiNTU2MzZkODEyMmRhM2E2YTA4NTg0NGNlZDY3ZjM5ZWU3OWQ3Zg==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2007-07-02T16:21:37Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2007-07-02T16:21:37Z"}, "message": "Forgot to delete these during yesterdays commit.\n\n2007-07-02  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\tPR fortran/32239\n\t* generated/pow_r*_i4.c: Removed.\n\nFrom-SVN: r126215", "tree": {"sha": "ea153f8b34bc3bc23375685e2e0a2d54a1854678", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea153f8b34bc3bc23375685e2e0a2d54a1854678"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6b55636d8122da3a6a085844ced67f39ee79d7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6b55636d8122da3a6a085844ced67f39ee79d7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6b55636d8122da3a6a085844ced67f39ee79d7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6b55636d8122da3a6a085844ced67f39ee79d7f/comments", "author": null, "committer": null, "parents": [{"sha": "312360e86e03744b5ececcb550c039e473ae906e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/312360e86e03744b5ececcb550c039e473ae906e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/312360e86e03744b5ececcb550c039e473ae906e"}], "stats": {"total": 325, "additions": 5, "deletions": 320}, "files": [{"sha": "e1bdb0548ae777f5c51e73e70971543f9b1293f0", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6b55636d8122da3a6a085844ced67f39ee79d7f/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6b55636d8122da3a6a085844ced67f39ee79d7f/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=f6b55636d8122da3a6a085844ced67f39ee79d7f", "patch": "@@ -1,3 +1,8 @@\n+2007-07-02  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/32239\n+\t* generated/pow_r*_i4.c: Removed.\n+\n 2007-07-01  Christopher D. Rickett  <crickett@lanl.gov>\n \n \t* Makefile.in: Add support for iso_c_generated_procs.c and"}, {"sha": "d21869b5d2c730371a5550c2e405575dcd75e597", "filename": "libgfortran/generated/pow_r10_i4.c", "status": "removed", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312360e86e03744b5ececcb550c039e473ae906e/libgfortran%2Fgenerated%2Fpow_r10_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312360e86e03744b5ececcb550c039e473ae906e/libgfortran%2Fgenerated%2Fpow_r10_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpow_r10_i4.c?ref=312360e86e03744b5ececcb550c039e473ae906e", "patch": "@@ -1,80 +0,0 @@\n-/* Support routines for the intrinsic power (**) operator.\n-   Copyright 2004 Free Software Foundation, Inc.\n-   Contributed by Paul Brook\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 2 of the License, or (at your option) any later version.\n-\n-In addition to the permissions in the GNU General Public License, the\n-Free Software Foundation gives you unlimited permission to link the\n-compiled version of this file into combinations with other programs,\n-and to distribute those combinations without any restriction coming\n-from the use of this file.  (The General Public License restrictions\n-do apply in other respects; for example, they cover modification of\n-the file, and distribution when not linked into a combine\n-executable.)\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public\n-License along with libgfortran; see the file COPYING.  If not,\n-write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-\n-#include \"config.h\"\n-#include \"libgfortran.h\"\n-\n-/* Use Binary Method to calculate the powi. This is not an optimal but\n-   a simple and reasonable arithmetic. See section 4.6.3, \"Evaluation of\n-   Powers\" of Donald E. Knuth, \"Seminumerical Algorithms\", Vol. 2, \"The Art\n-   of Computer Programming\", 3rd Edition, 1998.  */\n-\n-#if defined (HAVE_GFC_REAL_10) && defined (HAVE_GFC_INTEGER_4)\n-\n-GFC_REAL_10 pow_r10_i4 (GFC_REAL_10 a, GFC_INTEGER_4 b);\n-export_proto(pow_r10_i4);\n-\n-GFC_REAL_10\n-pow_r10_i4 (GFC_REAL_10 a, GFC_INTEGER_4 b)\n-{\n-  GFC_REAL_10 pow, x;\n-  GFC_INTEGER_4 n;\n-  GFC_UINTEGER_4 u;\n-  \n-  n = b;\n-  x = a;\n-  pow = 1;\n-  if (n != 0)\n-    {\n-      if (n < 0)\n-\t{\n-\n-\t  u = -n;\n-\t  x = pow / x;\n-\t}\n-      else\n-\t{\n-\t   u = n;\n-\t}\n-      for (;;)\n-\t{\n-\t  if (u & 1)\n-\t    pow *= x;\n-\t  u >>= 1;\n-\t  if (u)\n-\t    x *= x;\n-\t  else\n-\t    break;\n-\t}\n-    }\n-  return pow;\n-}\n-\n-#endif"}, {"sha": "3901577ecc72a8c67c6ffb130e23e8ea75637d0d", "filename": "libgfortran/generated/pow_r16_i4.c", "status": "removed", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312360e86e03744b5ececcb550c039e473ae906e/libgfortran%2Fgenerated%2Fpow_r16_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312360e86e03744b5ececcb550c039e473ae906e/libgfortran%2Fgenerated%2Fpow_r16_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpow_r16_i4.c?ref=312360e86e03744b5ececcb550c039e473ae906e", "patch": "@@ -1,80 +0,0 @@\n-/* Support routines for the intrinsic power (**) operator.\n-   Copyright 2004 Free Software Foundation, Inc.\n-   Contributed by Paul Brook\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 2 of the License, or (at your option) any later version.\n-\n-In addition to the permissions in the GNU General Public License, the\n-Free Software Foundation gives you unlimited permission to link the\n-compiled version of this file into combinations with other programs,\n-and to distribute those combinations without any restriction coming\n-from the use of this file.  (The General Public License restrictions\n-do apply in other respects; for example, they cover modification of\n-the file, and distribution when not linked into a combine\n-executable.)\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public\n-License along with libgfortran; see the file COPYING.  If not,\n-write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-\n-#include \"config.h\"\n-#include \"libgfortran.h\"\n-\n-/* Use Binary Method to calculate the powi. This is not an optimal but\n-   a simple and reasonable arithmetic. See section 4.6.3, \"Evaluation of\n-   Powers\" of Donald E. Knuth, \"Seminumerical Algorithms\", Vol. 2, \"The Art\n-   of Computer Programming\", 3rd Edition, 1998.  */\n-\n-#if defined (HAVE_GFC_REAL_16) && defined (HAVE_GFC_INTEGER_4)\n-\n-GFC_REAL_16 pow_r16_i4 (GFC_REAL_16 a, GFC_INTEGER_4 b);\n-export_proto(pow_r16_i4);\n-\n-GFC_REAL_16\n-pow_r16_i4 (GFC_REAL_16 a, GFC_INTEGER_4 b)\n-{\n-  GFC_REAL_16 pow, x;\n-  GFC_INTEGER_4 n;\n-  GFC_UINTEGER_4 u;\n-  \n-  n = b;\n-  x = a;\n-  pow = 1;\n-  if (n != 0)\n-    {\n-      if (n < 0)\n-\t{\n-\n-\t  u = -n;\n-\t  x = pow / x;\n-\t}\n-      else\n-\t{\n-\t   u = n;\n-\t}\n-      for (;;)\n-\t{\n-\t  if (u & 1)\n-\t    pow *= x;\n-\t  u >>= 1;\n-\t  if (u)\n-\t    x *= x;\n-\t  else\n-\t    break;\n-\t}\n-    }\n-  return pow;\n-}\n-\n-#endif"}, {"sha": "5baa4b17f681ee3ea3b1267b0ac13a0b735ac8d9", "filename": "libgfortran/generated/pow_r4_i4.c", "status": "removed", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312360e86e03744b5ececcb550c039e473ae906e/libgfortran%2Fgenerated%2Fpow_r4_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312360e86e03744b5ececcb550c039e473ae906e/libgfortran%2Fgenerated%2Fpow_r4_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpow_r4_i4.c?ref=312360e86e03744b5ececcb550c039e473ae906e", "patch": "@@ -1,80 +0,0 @@\n-/* Support routines for the intrinsic power (**) operator.\n-   Copyright 2004 Free Software Foundation, Inc.\n-   Contributed by Paul Brook\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 2 of the License, or (at your option) any later version.\n-\n-In addition to the permissions in the GNU General Public License, the\n-Free Software Foundation gives you unlimited permission to link the\n-compiled version of this file into combinations with other programs,\n-and to distribute those combinations without any restriction coming\n-from the use of this file.  (The General Public License restrictions\n-do apply in other respects; for example, they cover modification of\n-the file, and distribution when not linked into a combine\n-executable.)\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public\n-License along with libgfortran; see the file COPYING.  If not,\n-write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-\n-#include \"config.h\"\n-#include \"libgfortran.h\"\n-\n-/* Use Binary Method to calculate the powi. This is not an optimal but\n-   a simple and reasonable arithmetic. See section 4.6.3, \"Evaluation of\n-   Powers\" of Donald E. Knuth, \"Seminumerical Algorithms\", Vol. 2, \"The Art\n-   of Computer Programming\", 3rd Edition, 1998.  */\n-\n-#if defined (HAVE_GFC_REAL_4) && defined (HAVE_GFC_INTEGER_4)\n-\n-GFC_REAL_4 pow_r4_i4 (GFC_REAL_4 a, GFC_INTEGER_4 b);\n-export_proto(pow_r4_i4);\n-\n-GFC_REAL_4\n-pow_r4_i4 (GFC_REAL_4 a, GFC_INTEGER_4 b)\n-{\n-  GFC_REAL_4 pow, x;\n-  GFC_INTEGER_4 n;\n-  GFC_UINTEGER_4 u;\n-  \n-  n = b;\n-  x = a;\n-  pow = 1;\n-  if (n != 0)\n-    {\n-      if (n < 0)\n-\t{\n-\n-\t  u = -n;\n-\t  x = pow / x;\n-\t}\n-      else\n-\t{\n-\t   u = n;\n-\t}\n-      for (;;)\n-\t{\n-\t  if (u & 1)\n-\t    pow *= x;\n-\t  u >>= 1;\n-\t  if (u)\n-\t    x *= x;\n-\t  else\n-\t    break;\n-\t}\n-    }\n-  return pow;\n-}\n-\n-#endif"}, {"sha": "8da3b81fdff85e1e7defc2a091e27babefedd7d8", "filename": "libgfortran/generated/pow_r8_i4.c", "status": "removed", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312360e86e03744b5ececcb550c039e473ae906e/libgfortran%2Fgenerated%2Fpow_r8_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312360e86e03744b5ececcb550c039e473ae906e/libgfortran%2Fgenerated%2Fpow_r8_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fpow_r8_i4.c?ref=312360e86e03744b5ececcb550c039e473ae906e", "patch": "@@ -1,80 +0,0 @@\n-/* Support routines for the intrinsic power (**) operator.\n-   Copyright 2004 Free Software Foundation, Inc.\n-   Contributed by Paul Brook\n-\n-This file is part of the GNU Fortran 95 runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 2 of the License, or (at your option) any later version.\n-\n-In addition to the permissions in the GNU General Public License, the\n-Free Software Foundation gives you unlimited permission to link the\n-compiled version of this file into combinations with other programs,\n-and to distribute those combinations without any restriction coming\n-from the use of this file.  (The General Public License restrictions\n-do apply in other respects; for example, they cover modification of\n-the file, and distribution when not linked into a combine\n-executable.)\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public\n-License along with libgfortran; see the file COPYING.  If not,\n-write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n-Boston, MA 02110-1301, USA.  */\n-\n-#include \"config.h\"\n-#include \"libgfortran.h\"\n-\n-/* Use Binary Method to calculate the powi. This is not an optimal but\n-   a simple and reasonable arithmetic. See section 4.6.3, \"Evaluation of\n-   Powers\" of Donald E. Knuth, \"Seminumerical Algorithms\", Vol. 2, \"The Art\n-   of Computer Programming\", 3rd Edition, 1998.  */\n-\n-#if defined (HAVE_GFC_REAL_8) && defined (HAVE_GFC_INTEGER_4)\n-\n-GFC_REAL_8 pow_r8_i4 (GFC_REAL_8 a, GFC_INTEGER_4 b);\n-export_proto(pow_r8_i4);\n-\n-GFC_REAL_8\n-pow_r8_i4 (GFC_REAL_8 a, GFC_INTEGER_4 b)\n-{\n-  GFC_REAL_8 pow, x;\n-  GFC_INTEGER_4 n;\n-  GFC_UINTEGER_4 u;\n-  \n-  n = b;\n-  x = a;\n-  pow = 1;\n-  if (n != 0)\n-    {\n-      if (n < 0)\n-\t{\n-\n-\t  u = -n;\n-\t  x = pow / x;\n-\t}\n-      else\n-\t{\n-\t   u = n;\n-\t}\n-      for (;;)\n-\t{\n-\t  if (u & 1)\n-\t    pow *= x;\n-\t  u >>= 1;\n-\t  if (u)\n-\t    x *= x;\n-\t  else\n-\t    break;\n-\t}\n-    }\n-  return pow;\n-}\n-\n-#endif"}]}