{"sha": "b94097dc6f7ed9086e1c9577cbd4948173b0d847", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk0MDk3ZGM2ZjdlZDkwODZlMWM5NTc3Y2JkNDk0ODE3M2IwZDg0Nw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2015-02-27T19:05:30Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2015-02-27T19:05:30Z"}, "message": "Fix missing condition in symbol_compare_hashmap_traits.\n\n\t* ipa-icf.h (struct symbol_compare_hashmap_traits): Add missing\n\tvector length condition.\n\nFrom-SVN: r221069", "tree": {"sha": "5f583d0f72d00ba78c38532bb9fe89fc02aa2ae1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f583d0f72d00ba78c38532bb9fe89fc02aa2ae1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b94097dc6f7ed9086e1c9577cbd4948173b0d847", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b94097dc6f7ed9086e1c9577cbd4948173b0d847", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b94097dc6f7ed9086e1c9577cbd4948173b0d847", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b94097dc6f7ed9086e1c9577cbd4948173b0d847/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8eba66e88067ee0773d2e245c111703de56540d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eba66e88067ee0773d2e245c111703de56540d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eba66e88067ee0773d2e245c111703de56540d3"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "0fe78df4fd2a304d14327de0370e384355ec8448", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b94097dc6f7ed9086e1c9577cbd4948173b0d847/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b94097dc6f7ed9086e1c9577cbd4948173b0d847/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b94097dc6f7ed9086e1c9577cbd4948173b0d847", "patch": "@@ -1,3 +1,8 @@\n+2015-02-27  Martin Liska  <mliska@suse.cz>\n+\n+\t* ipa-icf.h (struct symbol_compare_hashmap_traits): Add missing\n+\tvector length condition.\n+\n 2015-02-27  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* doc/extend.texi (x86 transactional memory intrinsics):"}, {"sha": "077267ce087ffebc1fe35be8846013674bec8888", "filename": "gcc/ipa-icf.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b94097dc6f7ed9086e1c9577cbd4948173b0d847/gcc%2Fipa-icf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b94097dc6f7ed9086e1c9577cbd4948173b0d847/gcc%2Fipa-icf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.h?ref=b94097dc6f7ed9086e1c9577cbd4948173b0d847", "patch": "@@ -110,7 +110,8 @@ struct symbol_compare_hashmap_traits: default_hashmap_traits\n   equal_keys (const symbol_compare_collection *a,\n \t      const symbol_compare_collection *b)\n   {\n-    if (a->m_references.length () != b->m_references.length ())\n+    if (a->m_references.length () != b->m_references.length ()\n+\t|| a->m_interposables.length () != b->m_interposables.length ())\n       return false;\n \n     for (unsigned i = 0; i < a->m_references.length (); i++)"}]}