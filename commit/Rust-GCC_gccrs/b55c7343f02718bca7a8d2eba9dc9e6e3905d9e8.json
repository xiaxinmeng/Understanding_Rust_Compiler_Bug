{"sha": "b55c7343f02718bca7a8d2eba9dc9e6e3905d9e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU1YzczNDNmMDI3MThiY2E3YThkMmViYTlkYzllNmUzOTA1ZDllOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-09-27T14:19:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-09-27T14:19:57Z"}, "message": "re PR c++/82159 (ICE: in assign_temp, at function.c:961)\n\n\tPR c++/82159\n\t* gimplify.c (gimplify_modify_expr): Don't optimize away zero sized\n\tlhs from calls if the lhs has addressable type.\n\n\t* g++.dg/opt/pr82159.C: New test.\n\nFrom-SVN: r253230", "tree": {"sha": "f1786b6bc23f822bbf3b6abba22114c8876894cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1786b6bc23f822bbf3b6abba22114c8876894cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b55c7343f02718bca7a8d2eba9dc9e6e3905d9e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b55c7343f02718bca7a8d2eba9dc9e6e3905d9e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b55c7343f02718bca7a8d2eba9dc9e6e3905d9e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b55c7343f02718bca7a8d2eba9dc9e6e3905d9e8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "99124c31f9afaa8e713f3e1335d8e53c2ee61bc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99124c31f9afaa8e713f3e1335d8e53c2ee61bc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99124c31f9afaa8e713f3e1335d8e53c2ee61bc1"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "44783aab64b8e31df4f2afa28b9795fc7c51d698", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55c7343f02718bca7a8d2eba9dc9e6e3905d9e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55c7343f02718bca7a8d2eba9dc9e6e3905d9e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b55c7343f02718bca7a8d2eba9dc9e6e3905d9e8", "patch": "@@ -1,3 +1,9 @@\n+2017-09-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/82159\n+\t* gimplify.c (gimplify_modify_expr): Don't optimize away zero sized\n+\tlhs from calls if the lhs has addressable type.\n+\n 2017-09-27  Richard Biener  <rguenther@suse.de>\n \n \t* graphite.h (scop::max_alias_set): New member."}, {"sha": "c3fd6ace84e6d4f7329bab53efe6f92493a7791f", "filename": "gcc/gimplify.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55c7343f02718bca7a8d2eba9dc9e6e3905d9e8/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55c7343f02718bca7a8d2eba9dc9e6e3905d9e8/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=b55c7343f02718bca7a8d2eba9dc9e6e3905d9e8", "patch": "@@ -5479,7 +5479,12 @@ gimplify_modify_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p,\n      side as statements and throw away the assignment.  Do this after\n      gimplify_modify_expr_rhs so we handle TARGET_EXPRs of addressable\n      types properly.  */\n-  if (zero_sized_type (TREE_TYPE (*from_p)) && !want_value)\n+  if (zero_sized_type (TREE_TYPE (*from_p))\n+      && !want_value\n+      /* Don't do this for calls that return addressable types, expand_call\n+\t relies on those having a lhs.  */\n+      && !(TREE_ADDRESSABLE (TREE_TYPE (*from_p))\n+\t   && TREE_CODE (*from_p) == CALL_EXPR))\n     {\n       gimplify_stmt (from_p, pre_p);\n       gimplify_stmt (to_p, pre_p);"}, {"sha": "39682ce725965e2d2f46d0cc637744f1d649d540", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55c7343f02718bca7a8d2eba9dc9e6e3905d9e8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55c7343f02718bca7a8d2eba9dc9e6e3905d9e8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b55c7343f02718bca7a8d2eba9dc9e6e3905d9e8", "patch": "@@ -1,3 +1,8 @@\n+2017-09-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/82159\n+\t* g++.dg/opt/pr82159.C: New test.\n+\n 2017-09-27  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* gcc.dg/vect/pr65947-9.c: Use signed char explicitly."}, {"sha": "e39dbc353fc139162b6805dbebbf5a4645b595e3", "filename": "gcc/testsuite/g++.dg/opt/pr82159.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b55c7343f02718bca7a8d2eba9dc9e6e3905d9e8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr82159.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b55c7343f02718bca7a8d2eba9dc9e6e3905d9e8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr82159.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr82159.C?ref=b55c7343f02718bca7a8d2eba9dc9e6e3905d9e8", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/82159\n+// { dg-do compile }\n+// { dg-options \"\" }\n+\n+template<int N>\n+struct S\n+{\n+  ~S () {}\n+  template<int M> S<M> foo () { return S<M> (); }\n+  unsigned char data[N];\n+};\n+\n+int\n+main ()\n+{\n+  S<16> d;\n+  S<0> t = d.foo<0> ();\n+}"}]}