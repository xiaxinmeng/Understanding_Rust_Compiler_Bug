{"sha": "4a7dec25ac919dda5b36e15e54116ba17b42e834", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE3ZGVjMjVhYzkxOWRkYTViMzZlMTVlNTQxMTZiYTE3YjQyZTgzNA==", "commit": {"author": {"name": "Dominik Vogt", "email": "vogt@linux.vnet.ibm.com", "date": "2015-12-11T11:03:21Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2015-12-11T11:03:21Z"}, "message": "S/390: Fix warnings in \"*setmem_long...\" patterns.\n\ngcc/ChangeLog\n\n\t* config/s390/s390.md (\"movstr\", \"*movstr\"): Fix warning.\n\t(\"movstr<P:mode>\"): New indirect expanders used by \"movstr\".\n\ngcc/testsuite/ChangeLog\n\n\t* gcc.target/s390/md/movstr-1.c: New test.\n\t* gcc.target/s390/s390.exp: Add subdir md.\n\tDo not run hotpatch tests twice.\n\nFrom-SVN: r231557", "tree": {"sha": "0f5ec677452bd3be2fea19545bf3fb2fbc01c3b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f5ec677452bd3be2fea19545bf3fb2fbc01c3b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a7dec25ac919dda5b36e15e54116ba17b42e834", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a7dec25ac919dda5b36e15e54116ba17b42e834", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a7dec25ac919dda5b36e15e54116ba17b42e834", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a7dec25ac919dda5b36e15e54116ba17b42e834/comments", "author": {"login": "vogtd", "id": 9690100, "node_id": "MDQ6VXNlcjk2OTAxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/9690100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vogtd", "html_url": "https://github.com/vogtd", "followers_url": "https://api.github.com/users/vogtd/followers", "following_url": "https://api.github.com/users/vogtd/following{/other_user}", "gists_url": "https://api.github.com/users/vogtd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vogtd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vogtd/subscriptions", "organizations_url": "https://api.github.com/users/vogtd/orgs", "repos_url": "https://api.github.com/users/vogtd/repos", "events_url": "https://api.github.com/users/vogtd/events{/privacy}", "received_events_url": "https://api.github.com/users/vogtd/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "11b9b5a445074aaef7a8b8961dcfb62f79168777", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11b9b5a445074aaef7a8b8961dcfb62f79168777", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11b9b5a445074aaef7a8b8961dcfb62f79168777"}], "stats": {"total": 80, "additions": 71, "deletions": 9}, "files": [{"sha": "91690698cbdce22c3ecae1e27e648ec693b62716", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a7dec25ac919dda5b36e15e54116ba17b42e834/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a7dec25ac919dda5b36e15e54116ba17b42e834/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a7dec25ac919dda5b36e15e54116ba17b42e834", "patch": "@@ -1,5 +1,9 @@\n-2015-12-11  Martin Liska  <mliska@suse.cz>\n+2015-12-11  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n+\n+\t* config/s390/s390.md (\"movstr\", \"*movstr\"): Fix warning.\n+\t(\"movstr<P:mode>\"): New indirect expanders used by \"movstr\".\n \n+2015-12-11  Martin Liska  <mliska@suse.cz>\n \t    Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/67484"}, {"sha": "bc24a3665fb9f20474304bbbc4fbeb73708ff90e", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a7dec25ac919dda5b36e15e54116ba17b42e834/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a7dec25ac919dda5b36e15e54116ba17b42e834/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=4a7dec25ac919dda5b36e15e54116ba17b42e834", "patch": "@@ -2910,13 +2910,26 @@\n ;\n \n (define_expand \"movstr\"\n+  [(match_operand 0 \"register_operand\" \"\")\n+   (match_operand 1 \"memory_operand\" \"\")\n+   (match_operand 2 \"memory_operand\" \"\")]\n+  \"\"\n+{\n+  if (TARGET_64BIT)\n+    emit_insn (gen_movstrdi (operands[0], operands[1], operands[2]));\n+  else\n+    emit_insn (gen_movstrsi (operands[0], operands[1], operands[2]));\n+  DONE;\n+})\n+\n+(define_expand \"movstr<P:mode>\"\n   [(set (reg:SI 0) (const_int 0))\n    (parallel\n     [(clobber (match_dup 3))\n      (set (match_operand:BLK 1 \"memory_operand\" \"\")\n \t  (match_operand:BLK 2 \"memory_operand\" \"\"))\n-     (set (match_operand 0 \"register_operand\" \"\")\n-\t  (unspec [(match_dup 1)\n+     (set (match_operand:P 0 \"register_operand\" \"\")\n+\t  (unspec:P [(match_dup 1)\n \t\t   (match_dup 2)\n \t\t   (reg:SI 0)] UNSPEC_MVST))\n      (clobber (reg:CC CC_REGNUM))])]\n@@ -2937,7 +2950,7 @@\n    (set (mem:BLK (match_operand:P 1 \"register_operand\" \"0\"))\n \t(mem:BLK (match_operand:P 3 \"register_operand\" \"2\")))\n    (set (match_operand:P 0 \"register_operand\" \"=d\")\n-\t(unspec [(mem:BLK (match_dup 1))\n+\t(unspec:P [(mem:BLK (match_dup 1))\n \t\t (mem:BLK (match_dup 3))\n \t\t (reg:SI 0)] UNSPEC_MVST))\n    (clobber (reg:CC CC_REGNUM))]"}, {"sha": "36132762600f59fc84703a0ba430e4563554bdb0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a7dec25ac919dda5b36e15e54116ba17b42e834/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a7dec25ac919dda5b36e15e54116ba17b42e834/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4a7dec25ac919dda5b36e15e54116ba17b42e834", "patch": "@@ -1,3 +1,9 @@\n+2015-12-11  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n+\n+\t* gcc.target/s390/md/movstr-1.c: New test.\n+\t* gcc.target/s390/s390.exp: Add subdir md.\n+\tDo not run hotpatch tests twice.\n+\n 2015-12-11  Ilya Enkovich  <enkovich.gnu@gmail.com>\n \n \t* gcc.dg/vect/vect-32-chars.c: New test."}, {"sha": "7da749b988d002a1afe06ac6cccd2295834980b1", "filename": "gcc/testsuite/gcc.target/s390/md/movstr-1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a7dec25ac919dda5b36e15e54116ba17b42e834/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fmovstr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a7dec25ac919dda5b36e15e54116ba17b42e834/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fmovstr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fmd%2Fmovstr-1.c?ref=4a7dec25ac919dda5b36e15e54116ba17b42e834", "patch": "@@ -0,0 +1,24 @@\n+/* Machine description pattern tests.  */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-dP -save-temps\" } */\n+\n+__attribute__ ((noinline))\n+void test(char *dest, const char *src)\n+{\n+  __builtin_stpcpy (dest, src);\n+}\n+\n+/* { dg-final { scan-assembler-times {{[*]movstr}} 1 } } */\n+\n+#define LEN 200\n+char buf[LEN];\n+\n+int main(void)\n+{\n+  __builtin_memset(buf, 0, LEN);\n+  test(buf, \"hello world!\");\n+  if (__builtin_strcmp(buf, \"hello world!\") != 0)\n+    __builtin_abort();\n+  return 0;\n+}"}, {"sha": "728b8113a90f0c4eefdef6d64e3b309f062fe8aa", "filename": "gcc/testsuite/gcc.target/s390/s390.exp", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a7dec25ac919dda5b36e15e54116ba17b42e834/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fs390.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a7dec25ac919dda5b36e15e54116ba17b42e834/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fs390.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fs390.exp?ref=4a7dec25ac919dda5b36e15e54116ba17b42e834", "patch": "@@ -76,23 +76,38 @@ if ![info exists DEFAULT_CFLAGS] then {\n # Initialize `dg'.\n dg-init\n \n-set hotpatch_tests $srcdir/$subdir/hotpatch-\\[0-9\\]*.c\n+set md_tests $srcdir/$subdir/md/*.c\n \n # Main loop.\n dg-runtest [lsort [prune [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]] \\\n-\t\t\t $hotpatch_tests]] \"\" $DEFAULT_CFLAGS\n+\t\t\t $md_tests]] \"\" $DEFAULT_CFLAGS\n \n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*vector*/*.\\[cS\\]]] \\\n \t\"\" $DEFAULT_CFLAGS\n \n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/target-attribute/*.\\[cS\\]]] \\\n \t\"\" $DEFAULT_CFLAGS\n \n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/md/*.\\[cS\\]]] \\\n+\t\"\" $DEFAULT_CFLAGS\n+\n # Additional hotpatch torture tests.\n torture-init\n-set HOTPATCH_TEST_OPTS [list -Os -O0 -O1 -O2 -O3]\n-set-torture-options $HOTPATCH_TEST_OPTS\n-gcc-dg-runtest [lsort [glob -nocomplain $hotpatch_tests]] \"\" $DEFAULT_CFLAGS\n+set-torture-options [list -Os -O0 -O1 -O2 -O3]\n+gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/hotpatch-\\[0-9\\]*.c]] \\\n+\t\"\" $DEFAULT_CFLAGS\n+torture-finish\n+\n+# Additional md torture tests.\n+torture-init\n+set MD_TEST_OPTS [list \\\n+\t{-Os -march=z900} {-Os -march=z13} \\\n+\t{-O0 -march=z900} {-O0 -march=z13} \\\n+\t{-O1 -march=z900} {-O1 -march=z13} \\\n+\t{-O2 -march=z900} {-O2 -march=z13} \\\n+\t{-O3 -march=z900} {-O3 -march=z13}]\n+set-torture-options $MD_TEST_OPTS\n+gcc-dg-runtest [lsort [glob -nocomplain $md_tests]] \"\" $DEFAULT_CFLAGS\n torture-finish\n \n # All done."}]}