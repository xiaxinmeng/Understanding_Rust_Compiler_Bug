{"sha": "55d1bd59572283e06cd7662dbbf0450b5fc98753", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVkMWJkNTk1NzIyODNlMDZjZDc2NjJkYmJmMDQ1MGI1ZmM5ODc1Mw==", "commit": {"author": {"name": "Roman Gareev", "email": "gareevroman@gmail.com", "date": "2014-07-20T09:44:36Z"}, "committer": {"name": "Roman Gareev", "email": "romangareev@gcc.gnu.org", "date": "2014-07-20T09:44:36Z"}, "message": "graphite-isl-ast-to-gimple.c: Add using of build_nonstandard_integer_type instead of int128_integer_type_node.\n\n\n\tgcc/\n\t* graphite-isl-ast-to-gimple.c:\n\tAdd using of build_nonstandard_integer_type instead of\n\tint128_integer_type_node.\n\nFrom-SVN: r212863", "tree": {"sha": "32d4683fa3b8a47ce9f7036fe1e8834d3539aa1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32d4683fa3b8a47ce9f7036fe1e8834d3539aa1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55d1bd59572283e06cd7662dbbf0450b5fc98753", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55d1bd59572283e06cd7662dbbf0450b5fc98753", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55d1bd59572283e06cd7662dbbf0450b5fc98753", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55d1bd59572283e06cd7662dbbf0450b5fc98753/comments", "author": {"login": "gareevroman", "id": 6114710, "node_id": "MDQ6VXNlcjYxMTQ3MTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6114710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gareevroman", "html_url": "https://github.com/gareevroman", "followers_url": "https://api.github.com/users/gareevroman/followers", "following_url": "https://api.github.com/users/gareevroman/following{/other_user}", "gists_url": "https://api.github.com/users/gareevroman/gists{/gist_id}", "starred_url": "https://api.github.com/users/gareevroman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gareevroman/subscriptions", "organizations_url": "https://api.github.com/users/gareevroman/orgs", "repos_url": "https://api.github.com/users/gareevroman/repos", "events_url": "https://api.github.com/users/gareevroman/events{/privacy}", "received_events_url": "https://api.github.com/users/gareevroman/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1c2afaca8911c5fef5c7bfa2df8f71bb0c529d37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c2afaca8911c5fef5c7bfa2df8f71bb0c529d37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c2afaca8911c5fef5c7bfa2df8f71bb0c529d37"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "3909a88f5e1e2f9bd14061e7a900fdc2eeb6f31c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55d1bd59572283e06cd7662dbbf0450b5fc98753/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55d1bd59572283e06cd7662dbbf0450b5fc98753/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=55d1bd59572283e06cd7662dbbf0450b5fc98753", "patch": "@@ -1,3 +1,9 @@\n+2014-07-20  Roman Gareev  <gareevroman@gmail.com>\n+\n+\t* graphite-isl-ast-to-gimple.c:\n+\tAdd using of build_nonstandard_integer_type instead of\n+\tint128_integer_type_node\n+\n 2014-07-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* toplev.c (output_stack_usage): Adjust the location of the warning."}, {"sha": "7fe158a21bf07fbadae0c0679dacec99ee22adbd", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55d1bd59572283e06cd7662dbbf0450b5fc98753/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55d1bd59572283e06cd7662dbbf0450b5fc98753/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=55d1bd59572283e06cd7662dbbf0450b5fc98753", "patch": "@@ -62,10 +62,14 @@ extern \"C\" {\n \n static bool graphite_regenerate_error;\n \n-/* We always use signed 128, until isl is able to give information about\n-types  */\n+/* We always try to use signed 128 bit types, but fall back to smaller types\n+   in case a platform does not provide types of these sizes. In the future we\n+   should use isl to derive the optimal type for each subexpression.  */\n \n-static tree *graphite_expression_size_type = &int128_integer_type_node;\n+static int max_mode_int_precision =\n+  GET_MODE_PRECISION (mode_for_size (MAX_FIXED_MODE_SIZE, MODE_INT, 0));\n+static int graphite_expression_type_precision = 128 <= max_mode_int_precision ?\n+\t\t\t\t\t\t128 : max_mode_int_precision;\n \n /* Converts a GMP constant VAL to a tree and returns it.  */\n \n@@ -494,7 +498,8 @@ graphite_create_new_loop_guard (edge entry_edge,\n   tree cond_expr;\n   edge exit_edge;\n \n-  *type = *graphite_expression_size_type;\n+  *type =\n+    build_nonstandard_integer_type (graphite_expression_type_precision, 0);\n   isl_ast_expr *for_init = isl_ast_node_for_get_init (node_for);\n   *lb = gcc_expression_from_isl_expression (*type, for_init, ip);\n   isl_ast_expr *upper_bound = get_upper_bound (node_for);"}]}