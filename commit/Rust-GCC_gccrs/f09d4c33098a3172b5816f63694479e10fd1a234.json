{"sha": "f09d4c33098a3172b5816f63694479e10fd1a234", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjA5ZDRjMzMwOThhMzE3MmI1ODE2ZjYzNjk0NDc5ZTEwZmQxYTIzNA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-10-03T15:49:16Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-10-03T15:49:16Z"}, "message": "(RETURN_ADDR_RTX): Remove call to copy_to_reg.\n\n(RETURN_ADDR_RTX): Remove call to copy_to_reg.  Offset to return\naddress is 4 when !TARGET_64BIT and v4_call_p, 8 otherwise.\n\nFrom-SVN: r10419", "tree": {"sha": "76bc0e7604398500acdc52601fd0f723899c87a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76bc0e7604398500acdc52601fd0f723899c87a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f09d4c33098a3172b5816f63694479e10fd1a234", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f09d4c33098a3172b5816f63694479e10fd1a234", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f09d4c33098a3172b5816f63694479e10fd1a234", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f09d4c33098a3172b5816f63694479e10fd1a234/comments", "author": null, "committer": null, "parents": [{"sha": "2bbf216f5ecb8c1fed98a09778541778fca672d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bbf216f5ecb8c1fed98a09778541778fca672d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bbf216f5ecb8c1fed98a09778541778fca672d7"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "5e7a6e67275fe567e23e96ac4ae98df44a521c2c", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f09d4c33098a3172b5816f63694479e10fd1a234/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f09d4c33098a3172b5816f63694479e10fd1a234/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=f09d4c33098a3172b5816f63694479e10fd1a234", "patch": "@@ -1246,17 +1246,21 @@ typedef struct rs6000_args\n    taken care of one additional fetch will be necessary in RETURN_ADDR_RTX.\n    (mrs) */\n /* #define RETURN_ADDR_IN_PREVIOUS_FRAME */\n+\n+/* Number of bytes into the frame return addresses can be found.  */\n+#define RETURN_ADDRESS_OFFSET (v4_call_p ? (TARGET_64BIT ? 8 : 4) : 8)\n+\n /* The current return address is in link register (65).  The return address\n    of anything farther back is accessed normally at an offset of 8 from the\n    frame pointer.  */\n #define RETURN_ADDR_RTX(count, frame)\t\t\t\\\n   ((count == -1)\t\t\t\t\t\\\n    ? gen_rtx (REG, Pmode, 65)\t\t\t\t\\\n-   : copy_to_reg (gen_rtx (MEM, Pmode,\t\t\t\\\n-\t\t\t   memory_address (Pmode, \t\\\n-\t\t\t\t\t   plus_constant (copy_to_reg (gen_rtx (MEM, Pmode, \\\n-\t\t\t\t\t\t\t\t\t\tmemory_address (Pmode, frame))), \\\n-\t\t\t\t\t\t\t  8)))))\n+   : gen_rtx (MEM, Pmode,\t\t\t\t\\\n+\t      memory_address (Pmode, \t\t\t\\\n+\t\t\t      plus_constant (copy_to_reg (gen_rtx (MEM, Pmode, \\\n+\t\t\t\t\t\t\t\t   memory_address (Pmode, frame))), \\\n+\t\t\t\t\t     RETURN_ADDRESS_OFFSET))))\n \f\n /* Definitions for register eliminations.\n "}]}