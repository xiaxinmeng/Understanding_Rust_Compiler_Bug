{"sha": "e56e519de8211b657741d6e7bd5fae0db71405c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU2ZTUxOWRlODIxMWI2NTc3NDFkNmU3YmQ1ZmFlMGRiNzE0MDVjOQ==", "commit": {"author": {"name": "Dave Brolley", "email": "brolley@cygnus.com", "date": "1998-04-08T23:29:09Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-04-08T23:29:09Z"}, "message": "c-lex.c (finput): New global.\n\n        * c-lex.c (finput): New global.\n        (init_parse): Always included.  Handle !USE_CPPLIB using\n        code originally in compile_file.\n        (finish_parse): Update for CPPLIB.\n        * toplev.c (init_parse, finish_parse): Declare.\n        (finput): Delete variable.  Now in front-ends.\n        (compile_file): Remove code which is now handled by init_parse\n        which is unconditionally called.  Similarly for finish_parse.\n\nFrom-SVN: r19063", "tree": {"sha": "095aa1b478270aae0c9b79838f76864799d3f0a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/095aa1b478270aae0c9b79838f76864799d3f0a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e56e519de8211b657741d6e7bd5fae0db71405c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e56e519de8211b657741d6e7bd5fae0db71405c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e56e519de8211b657741d6e7bd5fae0db71405c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e56e519de8211b657741d6e7bd5fae0db71405c9/comments", "author": null, "committer": null, "parents": [{"sha": "62db76ee5fc19a98d765c1954387373e3d4fee04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62db76ee5fc19a98d765c1954387373e3d4fee04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62db76ee5fc19a98d765c1954387373e3d4fee04"}], "stats": {"total": 74, "additions": 41, "deletions": 33}, "files": [{"sha": "9849095bc7bdcdc38fed9abc40cdd5f5c6c5cc09", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56e519de8211b657741d6e7bd5fae0db71405c9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56e519de8211b657741d6e7bd5fae0db71405c9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e56e519de8211b657741d6e7bd5fae0db71405c9", "patch": "@@ -1,3 +1,14 @@\n+Thu Apr  9 00:18:44 1998  Dave Brolley  (brolley@cygnus.com)\n+\n+\t* c-lex.c (finput): New global.\n+\t(init_parse): Always included.  Handle !USE_CPPLIB using\n+\tcode originally in compile_file.\n+\t(finish_parse): Update for CPPLIB.\n+\t* toplev.c (init_parse, finish_parse): Declare.\n+\t(finput): Delete variable.  Now in front-ends.\n+\t(compile_file): Remove code which is now handled by init_parse\n+\twhich is unconditionally called.  Similarly for finish_parse.\n+\n Wed Apr  8 23:13:50 1998  Gavin Koch  <gavin@cygnus.com>\n \n \t* config/mips/r3900.h (ASM_OUTPUT_DEF,SUPPORTS_WEAK,"}, {"sha": "3a2eb0a7cc067d3c7b576e1a54296c10ce39d27f", "filename": "gcc/c-lex.c", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56e519de8211b657741d6e7bd5fae0db71405c9/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56e519de8211b657741d6e7bd5fae0db71405c9/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=e56e519de8211b657741d6e7bd5fae0db71405c9", "patch": "@@ -47,6 +47,9 @@ Boston, MA 02111-1307, USA.  */\n cpp_reader parse_in;\n cpp_options parse_options;\n static enum cpp_token cpp_token;\n+#else\n+/* Stream for reading from the input file.  */\n+FILE *finput;\n #endif\n \n /* The elements of `ridpointers' are identifier nodes\n@@ -182,12 +185,30 @@ remember_protocol_qualifiers ()\n       wordlist[i].name = \"oneway\";   \n }\n \f\n-#if USE_CPPLIB\n void\n init_parse (filename)\n      char *filename;\n {\n+#if !USE_CPPLIB\n+  /* Open input file.  */\n+  if (filename == 0 || !strcmp (filename, \"-\"))\n+    {\n+      finput = stdin;\n+      filename = \"stdin\";\n+    }\n+  else\n+    finput = fopen (filename, \"r\");\n+  if (finput == 0)\n+    pfatal_with_name (filename);\n+\n+#ifdef IO_BUFFER_SIZE\n+  setvbuf (finput, (char *) xmalloc (IO_BUFFER_SIZE), _IOFBF, IO_BUFFER_SIZE);\n+#endif\n+#endif /* !USE_CPPLIB */\n+\n   init_lex ();\n+\n+#if USE_CPPLIB\n   yy_cur = \"\\n\";\n   yy_lim = yy_cur+1;\n \n@@ -198,14 +219,18 @@ init_parse (filename)\n   parse_in.show_column = 1;\n   if (! cpp_start_read (&parse_in, filename))\n     abort ();\n+#endif\n }\n \n void\n finish_parse ()\n {\n+#if USE_CPPLIB\n   cpp_finish (&parse_in);\n-}\n+#else\n+  fclose (finput);\n #endif\n+}\n \n void\n init_lex ()"}, {"sha": "90cc6f46e65d0f08bea6b4c1a1f3ae15b1c467a3", "filename": "gcc/toplev.c", "status": "modified", "additions": 3, "deletions": 31, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56e519de8211b657741d6e7bd5fae0db71405c9/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56e519de8211b657741d6e7bd5fae0db71405c9/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=e56e519de8211b657741d6e7bd5fae0db71405c9", "patch": "@@ -132,6 +132,8 @@ extern int size_directive_output;\n extern tree last_assemble_variable_decl;\n \n extern void init_lex ();\n+extern void init_parse PVPROTO((char *));\n+extern void finish_parse ();\n extern void init_decl_processing ();\n extern void init_obstacks ();\n extern void init_tree_codes ();\n@@ -200,11 +202,6 @@ char *input_filename;\n \n char *main_input_filename;\n \n-#if !USE_CPPLIB\n-/* Stream for reading from the input file.  */\n-FILE *finput;\n-#endif\n-\n /* Current line number in real source file.  */\n \n int lineno;\n@@ -2273,33 +2270,11 @@ compile_file (name)\n   symout_time = 0;\n   dump_time = 0;\n \n-#if !USE_CPPLIB\n-  /* Open input file.  */\n-\n-  if (name == 0 || !strcmp (name, \"-\"))\n-    {\n-      finput = stdin;\n-      name = \"stdin\";\n-    }\n-  else\n-    finput = fopen (name, \"r\");\n-  if (finput == 0)\n-    pfatal_with_name (name);\n-\n-#ifdef IO_BUFFER_SIZE\n-  setvbuf (finput, (char *) xmalloc (IO_BUFFER_SIZE), _IOFBF, IO_BUFFER_SIZE);\n-#endif\n-#endif /* !USE_CPPLIB */\n-\n   /* Initialize data in various passes.  */\n \n   init_obstacks ();\n   init_tree_codes ();\n-#if USE_CPPLIB\n   init_parse (name);\n-#else\n-  init_lex ();\n-#endif\n   init_rtl ();\n   init_emit_once (debug_info_level == DINFO_LEVEL_NORMAL\n \t\t  || debug_info_level == DINFO_LEVEL_VERBOSE\n@@ -2827,11 +2802,8 @@ compile_file (name)\n      whether fclose returns an error, since the pages might still be on the\n      buffer chain while the file is open.  */\n \n-#if USE_CPPLIB\n   finish_parse ();\n-#else\n-  fclose (finput);\n-#endif\n+\n   if (ferror (asm_out_file) != 0 || fclose (asm_out_file) != 0)\n     fatal_io_error (asm_file_name);\n "}]}