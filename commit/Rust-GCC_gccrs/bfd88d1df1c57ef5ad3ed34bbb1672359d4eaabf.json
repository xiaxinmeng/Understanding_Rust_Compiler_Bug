{"sha": "bfd88d1df1c57ef5ad3ed34bbb1672359d4eaabf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZkODhkMWRmMWM1N2VmNWFkM2VkMzRiYmIxNjcyMzU5ZDRlYWFiZg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-06-07T15:43:54Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-06-07T15:43:54Z"}, "message": "Add C++17 deduction guide for std::basic_regex (P0433R2, partial)\n\n\t* include/bits/regex.h (basic_regex): Add deduction guide from P0433.\n\t* testsuite/28_regex/basic_regex/ctors/deduction.cc: New.\n\nFrom-SVN: r248990", "tree": {"sha": "a594a0868225358bcc6ff9f4604556ca49b1696b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a594a0868225358bcc6ff9f4604556ca49b1696b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfd88d1df1c57ef5ad3ed34bbb1672359d4eaabf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfd88d1df1c57ef5ad3ed34bbb1672359d4eaabf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfd88d1df1c57ef5ad3ed34bbb1672359d4eaabf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfd88d1df1c57ef5ad3ed34bbb1672359d4eaabf/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d840779ff4ea300b162c4ab45ff6c81ea7303bce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d840779ff4ea300b162c4ab45ff6c81ea7303bce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d840779ff4ea300b162c4ab45ff6c81ea7303bce"}], "stats": {"total": 71, "additions": 71, "deletions": 0}, "files": [{"sha": "a53c1ece09abbd4cf3e8989e42d9c0861d8692b8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd88d1df1c57ef5ad3ed34bbb1672359d4eaabf/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd88d1df1c57ef5ad3ed34bbb1672359d4eaabf/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bfd88d1df1c57ef5ad3ed34bbb1672359d4eaabf", "patch": "@@ -1,5 +1,8 @@\n 2017-06-07  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/regex.h (basic_regex): Add deduction guide from P0433.\n+\t* testsuite/28_regex/basic_regex/ctors/deduction.cc: New.\n+\n \tPR libstdc++/81002\n \t* include/bits/regex.h (basic_regex): Adjust call to __compile_nfa\n \tso iterator type is deduced."}, {"sha": "0bb88cb6afb24b988a10f737fba1bd955d47573e", "filename": "libstdc++-v3/include/bits/regex.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd88d1df1c57ef5ad3ed34bbb1672359d4eaabf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd88d1df1c57ef5ad3ed34bbb1672359d4eaabf/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h?ref=bfd88d1df1c57ef5ad3ed34bbb1672359d4eaabf", "patch": "@@ -787,6 +787,13 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       _AutomatonPtr          _M_automaton;\n     };\n \n+#if __cpp_deduction_guides >= 201606\n+  template<typename _ForwardIterator>\n+    basic_regex(_ForwardIterator, _ForwardIterator,\n+\t\tregex_constants::syntax_option_type = {})\n+      -> basic_regex<typename iterator_traits<_ForwardIterator>::value_type>;\n+#endif\n+\n   /** @brief Standard regular expressions. */\n   typedef basic_regex<char>    regex;\n "}, {"sha": "63b3f67f5c9c8c17ac811a725b6d6af0aa730729", "filename": "libstdc++-v3/testsuite/28_regex/basic_regex/ctors/deduction.cc", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd88d1df1c57ef5ad3ed34bbb1672359d4eaabf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2Fctors%2Fdeduction.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd88d1df1c57ef5ad3ed34bbb1672359d4eaabf/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2Fctors%2Fdeduction.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2Fctors%2Fdeduction.cc?ref=bfd88d1df1c57ef5ad3ed34bbb1672359d4eaabf", "patch": "@@ -0,0 +1,61 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile { target c++1z } }\n+\n+#include <regex>\n+#include <testsuite_iterators.h>\n+\n+template<typename T, typename U> struct require_same;\n+template<typename T> struct require_same<T, T> { using type = void; };\n+\n+template<typename T, typename U>\n+  typename require_same<T, U>::type\n+  check_type(U&) { }\n+\n+void\n+test01()\n+{\n+  std::basic_regex x(\"\");\n+  check_type<std::basic_regex<char>>(x);\n+  char s[1] = {};\n+  std::basic_regex x2(s);\n+  check_type<std::basic_regex<char>>(x2);\n+  std::basic_regex x3(U\"\");\n+  check_type<std::basic_regex<char32_t>>(x3);\n+  std::basic_regex x4(U\"\", std::regex_constants::grep);\n+  check_type<std::basic_regex<char32_t>>(x4);\n+\n+  // Test explicit guide:\n+  std::basic_regex x5(s, s+1);\n+  check_type<std::basic_regex<char>>(x5);\n+  std::basic_regex x6((const char*)s, (const char*)s+1);\n+  check_type<std::basic_regex<char>>(x6);\n+  std::basic_regex x7(s, s+1, std::regex_constants::grep);\n+  check_type<std::basic_regex<char>>(x7);\n+  __gnu_test::test_container<char, __gnu_test::forward_iterator_wrapper> f(s);\n+  std::basic_regex x8(f.begin(), f.end());\n+  check_type<std::basic_regex<char>>(x8);\n+  std::basic_regex x9(f.begin(), f.end(), std::regex_constants::grep);\n+  check_type<std::basic_regex<char>>(x9);\n+\n+  std::basic_regex copy = x;\n+  check_type<std::basic_regex<char>>(copy);\n+  std::basic_regex move = std::move(x);\n+  check_type<std::basic_regex<char>>(move);\n+}"}]}