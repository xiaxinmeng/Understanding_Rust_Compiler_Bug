{"sha": "70ce04ca353bb0cda8321b91a77c2477e26d339b", "node_id": "C_kwDOANBUbNoAKDcwY2UwNGNhMzUzYmIwY2RhODMyMWI5MWE3N2MyNDc3ZTI2ZDMzOWI", "commit": {"author": {"name": "Takayuki 'January June' Suwa", "email": "jjsuwa_sys3175@yahoo.co.jp", "date": "2021-05-27T10:04:12Z"}, "committer": {"name": "Max Filippov", "email": "jcmvbkbc@gmail.com", "date": "2022-06-14T00:25:48Z"}, "message": "xtensa: Make use of BALL/BNALL instructions\n\nIn Xtensa ISA, there is no single machine instruction that calculates unary\nbitwise negation, but a few similar fused instructions are exist:\n\n  \"BALL  Ax, Ay, label\"  // if ((~Ax & Ay) == 0) goto label;\n  \"BNALL Ax, Ay, label\"  // if ((~Ax & Ay) != 0) goto label;\n\nThese instructions have never been emitted before, but it seems no reason not\nto make use of them.\n\ngcc/ChangeLog:\n\n\t* config/xtensa/xtensa.md (*masktrue_bitcmpl): New insn pattern.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/xtensa/BALL-BNALL.c: New.", "tree": {"sha": "024ec5354e8f68d1928e3d3ea97b3f044ac24d26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/024ec5354e8f68d1928e3d3ea97b3f044ac24d26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70ce04ca353bb0cda8321b91a77c2477e26d339b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70ce04ca353bb0cda8321b91a77c2477e26d339b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70ce04ca353bb0cda8321b91a77c2477e26d339b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70ce04ca353bb0cda8321b91a77c2477e26d339b/comments", "author": {"login": "jjsuwa-sys3175", "id": 73290592, "node_id": "MDQ6VXNlcjczMjkwNTky", "avatar_url": "https://avatars.githubusercontent.com/u/73290592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjsuwa-sys3175", "html_url": "https://github.com/jjsuwa-sys3175", "followers_url": "https://api.github.com/users/jjsuwa-sys3175/followers", "following_url": "https://api.github.com/users/jjsuwa-sys3175/following{/other_user}", "gists_url": "https://api.github.com/users/jjsuwa-sys3175/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjsuwa-sys3175/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjsuwa-sys3175/subscriptions", "organizations_url": "https://api.github.com/users/jjsuwa-sys3175/orgs", "repos_url": "https://api.github.com/users/jjsuwa-sys3175/repos", "events_url": "https://api.github.com/users/jjsuwa-sys3175/events{/privacy}", "received_events_url": "https://api.github.com/users/jjsuwa-sys3175/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jcmvbkbc", "id": 166731, "node_id": "MDQ6VXNlcjE2NjczMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmvbkbc", "html_url": "https://github.com/jcmvbkbc", "followers_url": "https://api.github.com/users/jcmvbkbc/followers", "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}", "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions", "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs", "repos_url": "https://api.github.com/users/jcmvbkbc/repos", "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1b193c1cce3a975a9ed60dd0f30182fe0255d7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1b193c1cce3a975a9ed60dd0f30182fe0255d7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1b193c1cce3a975a9ed60dd0f30182fe0255d7c"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "a4477e2207ec10e8eff4f9f71df39e305faee7dd", "filename": "gcc/config/xtensa/xtensa.md", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70ce04ca353bb0cda8321b91a77c2477e26d339b/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70ce04ca353bb0cda8321b91a77c2477e26d339b/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.md?ref=70ce04ca353bb0cda8321b91a77c2477e26d339b", "patch": "@@ -1628,6 +1628,27 @@\n    (set_attr \"mode\"\t\"none\")\n    (set_attr \"length\"\t\"3\")])\n \n+(define_insn \"*masktrue_bitcmpl\"\n+  [(set (pc)\n+\t(if_then_else (match_operator 3 \"boolean_operator\"\n+\t\t\t[(and:SI (not:SI (match_operand:SI 0 \"register_operand\" \"r\"))\n+\t\t\t\t (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t\t\t (const_int 0)])\n+\t\t      (label_ref (match_operand 2 \"\" \"\"))\n+\t\t      (pc)))]\n+  \"\"\n+{\n+  switch (GET_CODE (operands[3]))\n+    {\n+    case EQ:\treturn \"ball\\t%0, %1, %2\";\n+    case NE:\treturn \"bnall\\t%0, %1, %2\";\n+    default:\tgcc_unreachable ();\n+    }\n+}\n+  [(set_attr \"type\"\t\"jump\")\n+   (set_attr \"mode\"\t\"none\")\n+   (set_attr \"length\"\t\"3\")])\n+\n \n ;; Zero-overhead looping support.\n "}, {"sha": "ba61c6f371b6e2bf7d790862b341fbf408d05bc6", "filename": "gcc/testsuite/gcc.target/xtensa/BALL-BNALL.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70ce04ca353bb0cda8321b91a77c2477e26d339b/gcc%2Ftestsuite%2Fgcc.target%2Fxtensa%2FBALL-BNALL.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70ce04ca353bb0cda8321b91a77c2477e26d339b/gcc%2Ftestsuite%2Fgcc.target%2Fxtensa%2FBALL-BNALL.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fxtensa%2FBALL-BNALL.c?ref=70ce04ca353bb0cda8321b91a77c2477e26d339b", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O\" } */\n+\n+extern void foo(void);\n+\n+void BNONE_test(int a, int b)\n+{\n+  if (a & b)\n+    foo();\n+}\n+\n+void BANY_test(int a, int b)\n+{\n+  if (!(a & b))\n+    foo();\n+}\n+\n+void BALL_test(int a, int b)\n+{\n+  if (~a & b)\n+    foo();\n+}\n+\n+void BNALL_test(int a, int b)\n+{\n+  if (!(~a & b))\n+    foo();\n+}\n+\n+/* { dg-final { scan-assembler-times \"bnone\" 1 } } */\n+/* { dg-final { scan-assembler-times \"bany\" 1 } } */\n+/* { dg-final { scan-assembler-times \"ball\" 1 } } */\n+/* { dg-final { scan-assembler-times \"bnall\" 1 } } */"}]}