{"sha": "fa6b20f32c28aa34efc3c0ab609303d8371b57dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE2YjIwZjMyYzI4YWEzNGVmYzNjMGFiNjA5MzAzZDgzNzFiNTdkZA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2018-10-17T12:31:58Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2018-10-17T12:31:58Z"}, "message": "wide-int-range.h (wide_int_range_shift_undefined_p): Adjust to use sign as argument.\n\n\t* wide-int-range.h (wide_int_range_shift_undefined_p): Adjust to\n\tuse sign as argument.\n\t* tree-vrp.c (extract_range_from_binary_expr_1): Pass sign to\n\twide_int_range_shift_undefined_p.\n\nFrom-SVN: r265237", "tree": {"sha": "e8781870b88d8bbf90c3f28bcc688cbb94665b04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8781870b88d8bbf90c3f28bcc688cbb94665b04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa6b20f32c28aa34efc3c0ab609303d8371b57dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa6b20f32c28aa34efc3c0ab609303d8371b57dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa6b20f32c28aa34efc3c0ab609303d8371b57dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa6b20f32c28aa34efc3c0ab609303d8371b57dd/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd1e244a1ced255fb0a5651bdab443fa254d9472", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd1e244a1ced255fb0a5651bdab443fa254d9472", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd1e244a1ced255fb0a5651bdab443fa254d9472"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "4768b9635f8538c931d7db8fe7e2207a3b88db1b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa6b20f32c28aa34efc3c0ab609303d8371b57dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa6b20f32c28aa34efc3c0ab609303d8371b57dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa6b20f32c28aa34efc3c0ab609303d8371b57dd", "patch": "@@ -1,3 +1,10 @@\n+2018-10-17  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* wide-int-range.h (wide_int_range_shift_undefined_p): Adjust to\n+\tuse sign as argument.\n+\t* tree-vrp.c (extract_range_from_binary_expr_1): Pass sign to\n+\twide_int_range_shift_undefined_p.\n+\n 2018-10-16  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64.md (despeculate_copy<ALLI_TI:mode>):"}, {"sha": "c519613bb28308e9e6ef2256c315bb9706889f1b", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa6b20f32c28aa34efc3c0ab609303d8371b57dd/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa6b20f32c28aa34efc3c0ab609303d8371b57dd/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=fa6b20f32c28aa34efc3c0ab609303d8371b57dd", "patch": "@@ -1521,7 +1521,8 @@ extract_range_from_binary_expr_1 (value_range *vr,\n \t   || code == LSHIFT_EXPR)\n     {\n       if (range_int_cst_p (&vr1)\n-\t  && !wide_int_range_shift_undefined_p (prec,\n+\t  && !wide_int_range_shift_undefined_p (TYPE_SIGN (TREE_TYPE (vr1.min)),\n+\t\t\t\t\t\tprec,\n \t\t\t\t\t\twi::to_wide (vr1.min),\n \t\t\t\t\t\twi::to_wide (vr1.max)))\n \t{"}, {"sha": "0b2dd223987dff235620136746ae91883aa0680c", "filename": "gcc/wide-int-range.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa6b20f32c28aa34efc3c0ab609303d8371b57dd/gcc%2Fwide-int-range.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa6b20f32c28aa34efc3c0ab609303d8371b57dd/gcc%2Fwide-int-range.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fwide-int-range.h?ref=fa6b20f32c28aa34efc3c0ab609303d8371b57dd", "patch": "@@ -128,10 +128,11 @@ extern bool wide_int_range_div (wide_int &wmin, wide_int &wmax,\n \t\t\t\tbool &extra_range_p,\n \t\t\t\twide_int &extra_min, wide_int &extra_max);\n \n-/* Return TRUE if shifting by range [MIN, MAX] is undefined behavior.  */\n+/* Return TRUE if shifting by range [MIN, MAX] is undefined behavior,\n+   interpreting MIN and MAX according to SIGN.  */\n \n inline bool\n-wide_int_range_shift_undefined_p (unsigned prec,\n+wide_int_range_shift_undefined_p (signop sign, unsigned prec,\n \t\t\t\t  const wide_int &min, const wide_int &max)\n {\n   /* ?? Note: The original comment said this only applied to\n@@ -142,7 +143,7 @@ wide_int_range_shift_undefined_p (unsigned prec,\n      behavior from the shift operation.  We cannot even trust\n      SHIFT_COUNT_TRUNCATED at this stage, because that applies to rtl\n      shifts, and the operation at the tree level may be widened.  */\n-  return wi::sign_mask (min) || wi::ge_p (max, prec, UNSIGNED);\n+  return wi::lt_p (min, 0, sign) || wi::ge_p (max, prec, sign);\n }\n \n /* Calculate MIN/MAX_EXPR of two ranges and store the result in [MIN, MAX].  */"}]}