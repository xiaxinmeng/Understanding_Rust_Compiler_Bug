{"sha": "3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZlY2Y0OWMxYWRjNjA0Y2ZhMGU0ZDdmYTBjYTczOGJiZGNlY2MwNg==", "commit": {"author": {"name": "Ziemowit Laski", "email": "zlaski@apple.com", "date": "2001-08-01T08:15:11Z"}, "committer": {"name": "Stan Shebs", "email": "shebs@gcc.gnu.org", "date": "2001-08-01T08:15:11Z"}, "message": "fwd-proto-1.m: New.\n\n2001-08-01  Ziemowit Laski  <zlaski@apple.com>\n\n\t* objc.dg/fwd-proto-1.m: New.\n\t* objc.dg/local-decl-1.m: New.\n\t* objc.dg/naming-1.m: New.\n\t* objc.dg/naming-2.m: New.\n\t* objc.dg/proto-hier-1.m: New.\n\nFrom-SVN: r44537", "tree": {"sha": "7ad9d90cb75c991b4d326396418343acc8f611b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ad9d90cb75c991b4d326396418343acc8f611b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06/comments", "author": null, "committer": null, "parents": [{"sha": "f2e6e5307bece75988f49a2d69d56f2e83c35dda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2e6e5307bece75988f49a2d69d56f2e83c35dda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2e6e5307bece75988f49a2d69d56f2e83c35dda"}], "stats": {"total": 149, "additions": 149, "deletions": 0}, "files": [{"sha": "3123415c8fe0c9652e5cec8448654e2b3e2711c9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06", "patch": "@@ -1,3 +1,11 @@\n+2001-08-01  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* objc.dg/fwd-proto-1.m: New.\n+\t* objc.dg/local-decl-1.m: New.\n+\t* objc.dg/naming-1.m: New.\n+\t* objc.dg/naming-2.m: New.\n+\t* objc.dg/proto-hier-1.m: New.\n+\n 2001-07-31  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* gcc.dg/c99-scope-2.c: Don't generally assume adding more"}, {"sha": "fd887802ada62546b350940a8989b0ea5468f076", "filename": "gcc/testsuite/objc.dg/fwd-proto-1.m", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06/gcc%2Ftestsuite%2Fobjc.dg%2Ffwd-proto-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06/gcc%2Ftestsuite%2Fobjc.dg%2Ffwd-proto-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ffwd-proto-1.m?ref=3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06", "patch": "@@ -0,0 +1,29 @@\n+/* Test forward-decls for @protocols.  */\n+/* Author: Ziemowit Laski <zlaski@apple.com>.  */\n+/* { dg-do compile } */\n+\n+/* One-line substitute for objc/objc.h */\n+typedef struct objc_object { struct objc_class *class_pointer; } *id;\n+\n+@protocol Bar;\n+@protocol Boo;\n+\n+@protocol Foo \n+- (id <Bar>)someMethod;\n+- (id <Baz>)anotherMethod; /* { dg-error \"Cannot find protocol declaration\" } */\n+@end\n+\n+@protocol Bar <Boo>\n+- (id <Foo>)someOtherMethod;\n+- (id <Baz>)anotherMethod; /* { dg-error \"Cannot find protocol declaration\" } */\n+- (id <Boo>)yetAnotherMethod;\n+@end\n+\n+/* The following worthy test is stubbed out until we can get the\n+   harness to match correctly on the \"compilation terminated\" message\n+   when running on GNU/Linux.  sts 2001-08-01 */\n+#if 0\n+@protocol Boo <Bar>   /* { /*dg*/-error \"has circular dependency\" } */\n+@end\n+#endif\n+"}, {"sha": "4a4bfdffe7e5ba63b374bad879001153e6701639", "filename": "gcc/testsuite/objc.dg/local-decl-1.m", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06/gcc%2Ftestsuite%2Fobjc.dg%2Flocal-decl-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06/gcc%2Ftestsuite%2Fobjc.dg%2Flocal-decl-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Flocal-decl-1.m?ref=3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06", "patch": "@@ -0,0 +1,25 @@\n+/* Test for hiding of ivars by local variables.  */\n+/* Author: Ziemowit Laski <zlaski@apple.com>.  */\n+/* { dg-do compile } */\n+\n+@interface Sprite {\n+  int a;\n+}\n+@end\n+\n+Sprite *glob;\n+\n+@interface blah \n+{\n+  Sprite* sprite;\n+}\n+@end\n+\n+@implementation blah\n+- (Sprite *)load\n+{\n+    Sprite *sprite = 0;\n+    Sprite *glob = 0;    /* ok */\n+    return sprite;       /* { dg-warning \"hides instance variable\" } */\n+}\n+@end"}, {"sha": "f49c73678f9be042bd91950fb6ba82a1e217366c", "filename": "gcc/testsuite/objc.dg/naming-1.m", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06/gcc%2Ftestsuite%2Fobjc.dg%2Fnaming-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06/gcc%2Ftestsuite%2Fobjc.dg%2Fnaming-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fnaming-1.m?ref=3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06", "patch": "@@ -0,0 +1,21 @@\n+/* Test for obscuring of @interfaces with local vars.  */\n+/* Author: Ziemowit Laski <zlaski@apple.com>.  */\n+/* { dg-do compile } */\n+\n+@interface View\n+@end\n+\n+void foo(void)\n+{\n+        int View;\t/* ok */\n+        View = 1;\t/* ok */\n+\tView *view;\t/* { dg-error \"`view' undeclared\" } */\n+\t/* { dg-error \"is reported only once\" \"\" { target *-*-* } 12 } */\n+\t/* { dg-error \"function it appears in\" \"\" { target *-*-* } 12 } */\n+}\n+\n+void bar(void)\n+{\n+\tView *view;\t/* ok */\n+\tView = 1;\t/* { dg-error \"parse error\" } */\n+}"}, {"sha": "2d15ae61074e134d900a1394d92cd03333e343c8", "filename": "gcc/testsuite/objc.dg/naming-2.m", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06/gcc%2Ftestsuite%2Fobjc.dg%2Fnaming-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06/gcc%2Ftestsuite%2Fobjc.dg%2Fnaming-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fnaming-2.m?ref=3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06", "patch": "@@ -0,0 +1,12 @@\n+/* Test for collision of @interfaces with global vars.  */\n+/* Author: Ziemowit Laski <zlaski@apple.com>.  */\n+/* { dg-do compile } */\n+\n+@interface Foo\n+@end\n+float Foo;  /* { dg-error \"parse error before\" } */\n+\n+double Bar;\n+@interface Bar\n+@end  /* { dg-error \"redeclared as different kind of symbol\" } */\n+/* { dg-error \"previous declaration of\" \"\" { target *-*-* } 9 } */"}, {"sha": "17ea72e8db1d44c5fc604f3b47472b94d20edd24", "filename": "gcc/testsuite/objc.dg/proto-hier-1.m", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-hier-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-hier-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-hier-1.m?ref=3fecf49c1adc604cfa0e4d7fa0ca738bbdcecc06", "patch": "@@ -0,0 +1,54 @@\n+/* Test for handling of protocol hierarchies.  */\n+/* Author: Ziemowit Laski <zlaski@apple.com>.  */\n+/* { dg-do compile } */\n+\n+/* One-line substitute for objc/objc.h */\n+typedef struct objc_object { struct objc_class *class_pointer; } *id;\n+\n+@protocol NSObj \n+- (void)someMethod;\n+@end\n+\n+@protocol NSCopying \n+- (void)someOtherMethod;\n+@end\n+\n+@interface NSObject <NSObj>\n+- (void)someMethod; \n+@end\n+\n+@implementation NSObject\n+- (void)someMethod {}\n+@end\n+\n+@protocol Booing <NSObj>\n+- (void)boo;\n+@end\n+\n+@interface Boo: NSObject <Booing>  // protocol has only one parent\n+@end\n+\n+@implementation Boo\n+- (void)boo {}\n+@end\n+\n+@protocol Fooing <NSCopying, NSObj>  // Fooing has two parent protocols\n+- (void)foo;\n+@end\n+\n+@interface Foo: NSObject <Fooing>\n+@end\n+\n+@implementation Foo\n+- (void)foo {}\n+- (void)someOtherMethod {}\n+@end\n+\n+int foo(void) {\n+  id<Booing, Fooing> stupidVar;\n+  [stupidVar boo];\n+  [stupidVar foo];\n+  [stupidVar anotherMsg]; /* { dg-warning \"not implemented by protocol\" } */\n+  /* { dg-warning \"return type defaults to id\" \"\" { target *-*-* } 51 } */\n+  return 0;\n+}"}]}