{"sha": "ee78df47b1543f412622ae05601f7ee6f6862820", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU3OGRmNDdiMTU0M2Y0MTI2MjJhZTA1NjAxZjdlZTZmNjg2MjgyMA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-11-09T15:55:56Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-11-09T15:55:56Z"}, "message": "[AArch64][cleanup] Remove uses of CONST_DOUBLE_HIGH, CONST_DOUBLE_LOW\n\n\t* config/aarch64/aarch64.c (aarch64_simd_valid_immediate):\n\tRemove integer CONST_DOUBLE handling.  It should never occur.\n\nFrom-SVN: r230030", "tree": {"sha": "a54f90a5295188c9bd76daa1dd0679c5c886001d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a54f90a5295188c9bd76daa1dd0679c5c886001d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee78df47b1543f412622ae05601f7ee6f6862820", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee78df47b1543f412622ae05601f7ee6f6862820", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee78df47b1543f412622ae05601f7ee6f6862820", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee78df47b1543f412622ae05601f7ee6f6862820/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2ca5b4303bd5ff0a01888dce671eb7f33eb99850", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ca5b4303bd5ff0a01888dce671eb7f33eb99850", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ca5b4303bd5ff0a01888dce671eb7f33eb99850"}], "stats": {"total": 37, "additions": 13, "deletions": 24}, "files": [{"sha": "ebd537cbcae428b7f2ca6fcd1b0845a602bb5e26", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee78df47b1543f412622ae05601f7ee6f6862820/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee78df47b1543f412622ae05601f7ee6f6862820/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee78df47b1543f412622ae05601f7ee6f6862820", "patch": "@@ -1,3 +1,8 @@\n+2015-11-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_simd_valid_immediate):\n+\tRemove integer CONST_DOUBLE handling.  It should never occur.\n+\n 2015-11-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR target/68129"}, {"sha": "a4d824b2151570110ec32e3f8ca89b30bf7384b5", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 8, "deletions": 24, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee78df47b1543f412622ae05601f7ee6f6862820/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee78df47b1543f412622ae05601f7ee6f6862820/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=ee78df47b1543f412622ae05601f7ee6f6862820", "patch": "@@ -10158,32 +10158,16 @@ aarch64_simd_valid_immediate (rtx op, machine_mode mode, bool inverse,\n          it must be laid out in the vector register in reverse order.  */\n       rtx el = CONST_VECTOR_ELT (op, BYTES_BIG_ENDIAN ? (n_elts - 1 - i) : i);\n       unsigned HOST_WIDE_INT elpart;\n-      unsigned int part, parts;\n \n-      if (CONST_INT_P (el))\n-        {\n-          elpart = INTVAL (el);\n-          parts = 1;\n-        }\n-      else if (GET_CODE (el) == CONST_DOUBLE)\n-        {\n-          elpart = CONST_DOUBLE_LOW (el);\n-          parts = 2;\n-        }\n-      else\n-        gcc_unreachable ();\n+      gcc_assert (CONST_INT_P (el));\n+      elpart = INTVAL (el);\n+\n+      for (unsigned int byte = 0; byte < innersize; byte++)\n+\t{\n+\t  bytes[idx++] = (elpart & 0xff) ^ invmask;\n+\t  elpart >>= BITS_PER_UNIT;\n+\t}\n \n-      for (part = 0; part < parts; part++)\n-        {\n-          unsigned int byte;\n-          for (byte = 0; byte < innersize; byte++)\n-            {\n-              bytes[idx++] = (elpart & 0xff) ^ invmask;\n-              elpart >>= BITS_PER_UNIT;\n-            }\n-          if (GET_CODE (el) == CONST_DOUBLE)\n-            elpart = CONST_DOUBLE_HIGH (el);\n-        }\n     }\n \n   /* Sanity check.  */"}]}