{"sha": "bea993f903e27a266ee22fbc7dd627fd1cbe1e1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVhOTkzZjkwM2UyN2EyNjZlZTIyZmJjN2RkNjI3ZmQxY2JlMWUxZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-25T08:36:28Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-25T08:36:28Z"}, "message": "[multiple changes]\n\n2009-06-25  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_attr.adb (Expand_N_Attribute_Reference, case 'Access and\n\tUnchecked_Access): If the context is an interface type, and the prefix\n\tis of the corresponding class-wide type, do not insert a conversion\n\tbecause the pointer displacement has already taken place, and we must\n\tretain the class-wide type in a dispatching context.\n\n2009-06-25  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-nmsc.adb, prj-env.adb (Override_Kind): Unset the unit field of\n\tthe previous source file.\n\t(Create_Mapping): Iterate on sources rather than on units.\n\nFrom-SVN: r148932", "tree": {"sha": "9a85d5b640c111e7c7c0b22fa44fe2534b148ab8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a85d5b640c111e7c7c0b22fa44fe2534b148ab8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bea993f903e27a266ee22fbc7dd627fd1cbe1e1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bea993f903e27a266ee22fbc7dd627fd1cbe1e1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bea993f903e27a266ee22fbc7dd627fd1cbe1e1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bea993f903e27a266ee22fbc7dd627fd1cbe1e1d/comments", "author": null, "committer": null, "parents": [{"sha": "cabadd1ce33412c70d2c910ae49c4341fe39d3b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cabadd1ce33412c70d2c910ae49c4341fe39d3b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cabadd1ce33412c70d2c910ae49c4341fe39d3b6"}], "stats": {"total": 86, "additions": 57, "deletions": 29}, "files": [{"sha": "f9f110b9ef41b1dd3ac450d59ce5f4efbbe4a067", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bea993f903e27a266ee22fbc7dd627fd1cbe1e1d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bea993f903e27a266ee22fbc7dd627fd1cbe1e1d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bea993f903e27a266ee22fbc7dd627fd1cbe1e1d", "patch": "@@ -1,3 +1,17 @@\n+2009-06-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_attr.adb (Expand_N_Attribute_Reference, case 'Access and\n+\tUnchecked_Access): If the context is an interface type, and the prefix\n+\tis of the corresponding class-wide type, do not insert a conversion\n+\tbecause the pointer displacement has already taken place, and we must\n+\tretain the class-wide type in a dispatching context.\n+\n+2009-06-25  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-nmsc.adb, prj-env.adb (Override_Kind): Unset the unit field of\n+\tthe previous source file.\n+\t(Create_Mapping): Iterate on sources rather than on units.\n+\n 2009-06-25  Emmanuel Briot  <briot@adacore.com>\n \n \t* gnatcmd.adb, make.adb, mlib-prj.adb, prj.adb, prj.ads, prj-nmsc.adb,"}, {"sha": "897b9e1a87dd7a5aefecb62ca05dd48822445982", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bea993f903e27a266ee22fbc7dd627fd1cbe1e1d/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bea993f903e27a266ee22fbc7dd627fd1cbe1e1d/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=bea993f903e27a266ee22fbc7dd627fd1cbe1e1d", "patch": "@@ -907,9 +907,19 @@ package body Exp_Attr is\n             then\n                if Nkind (Ref_Object) /= N_Explicit_Dereference then\n \n-                  --  No implicit conversion required if types match\n+                  --  No implicit conversion required if types match, or if\n+                  --  the prefix is the class_wide_type of the interface. In\n+                  --  either case passing an object of the interface type has\n+                  --  already set the pointer correctly.\n+\n+                  if Btyp_DDT = Etype (Ref_Object)\n+                    or else (Is_Class_Wide_Type (Etype (Ref_Object))\n+                              and then\n+                               Class_Wide_Type (Btyp_DDT) = Etype (Ref_Object))\n+                  then\n+                     null;\n \n-                  if Btyp_DDT /= Etype (Ref_Object) then\n+                  else\n                      Rewrite (Prefix (N),\n                        Convert_To (Btyp_DDT,\n                          New_Copy_Tree (Prefix (N))));"}, {"sha": "d728b050ed53f2d9694f41b294ccb16867345c75", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 26, "deletions": 21, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bea993f903e27a266ee22fbc7dd627fd1cbe1e1d/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bea993f903e27a266ee22fbc7dd627fd1cbe1e1d/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=bea993f903e27a266ee22fbc7dd627fd1cbe1e1d", "patch": "@@ -743,34 +743,33 @@ package body Prj.Env is\n    --------------------\n \n    procedure Create_Mapping (In_Tree : Project_Tree_Ref) is\n-      Unit : Unit_Index;\n       Data : Source_Id;\n+      Iter : Source_Iterator;\n \n    begin\n       Fmap.Reset_Tables;\n \n-      --  ??? Shouldn't we iterate on source files instead ?\n+      Iter := For_Each_Source (In_Tree);\n+      loop\n+         Data := Element (Iter);\n+         exit when Data = No_Source;\n \n-      Unit := Units_Htable.Get_First (In_Tree.Units_HT);\n-      while Unit /= No_Unit_Index loop\n-         for S in Spec_Or_Body loop\n-            Data := Unit.File_Names (S);\n-\n-            --  If there is a spec put it in the mapping\n-\n-            if Data /= null then\n-               if Data.Locally_Removed then\n-                  Fmap.Add_Forbidden_File_Name (Data.File);\n-               else\n-                  Fmap.Add_To_File_Map\n-                    (Unit_Name => Unit_Name_Type (Unit.Name),\n-                     File_Name => Data.File,\n-                     Path_Name => File_Name_Type (Data.Path.Name));\n-               end if;\n+         if Data.Unit /= No_Unit_Index then\n+            if Data.Locally_Removed then\n+               Fmap.Add_Forbidden_File_Name (Data.File);\n+            else\n+               --  Put back the file in case it was excluded in an extended\n+               --  project\n+               Fmap.Remove_Forbidden_File_Name (Data.File);\n+\n+               Fmap.Add_To_File_Map\n+                 (Unit_Name => Unit_Name_Type (Data.Unit.Name),\n+                  File_Name => Data.File,\n+                  Path_Name => File_Name_Type (Data.Path.Name));\n             end if;\n-         end loop;\n+         end if;\n \n-         Unit := Units_Htable.Get_Next (In_Tree.Units_HT);\n+         Next (Iter);\n       end loop;\n    end Create_Mapping;\n \n@@ -853,7 +852,13 @@ package body Prj.Env is\n \n          --  Line with the path name\n \n-         Get_Name_String (Data.Path.Name);\n+         if Data.Locally_Removed then\n+            Name_Len := 1;\n+            Name_Buffer (1 .. Name_Len) := \"/\";\n+         else\n+            Get_Name_String (Data.Path.Name);\n+         end if;\n+\n          Put_Name_Buffer;\n       end Put_Data;\n "}, {"sha": "9b345b4beec5633025e82db82031e9ffb9a1e408", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bea993f903e27a266ee22fbc7dd627fd1cbe1e1d/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bea993f903e27a266ee22fbc7dd627fd1cbe1e1d/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=bea993f903e27a266ee22fbc7dd627fd1cbe1e1d", "patch": "@@ -7324,13 +7324,16 @@ package body Prj.Nmsc is\n    -------------------\n \n    procedure Override_Kind (Source : Source_Id; Kind : Source_Kind) is\n+      Unit : constant Unit_Index := Source.Unit;\n    begin\n       --  Remove reference in the unit, if necessary\n \n-      if Source.Unit /= null\n+      if Unit /= null\n         and then Source.Kind in Spec_Or_Body\n+        and then Unit.File_Names (Source.Kind) /= null\n       then\n-         Source.Unit.File_Names (Source.Kind) := null;\n+         Unit.File_Names (Source.Kind).Unit := No_Unit_Index;\n+         Unit.File_Names (Source.Kind) := null;\n       end if;\n \n       Source.Kind := Kind;\n@@ -7821,10 +7824,6 @@ package body Prj.Nmsc is\n                   then\n                      OK := True;\n                      Source.Locally_Removed := True;\n-\n-                     Name_Len := 1;\n-                     Name_Buffer (1 .. Name_Len) := \"/\";\n-                     Source.Path.Name := Name_Find;\n                      Source.In_Interfaces := False;\n \n                      if Current_Verbosity = High then"}]}