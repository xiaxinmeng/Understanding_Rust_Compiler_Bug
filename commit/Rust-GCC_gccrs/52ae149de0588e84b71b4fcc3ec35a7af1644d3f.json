{"sha": "52ae149de0588e84b71b4fcc3ec35a7af1644d3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJhZTE0OWRlMDU4OGU4NGI3MWI0ZmNjM2VjMzVhN2FmMTY0NGQzZg==", "commit": {"author": {"name": "Anthony Green", "email": "green@moxielogic.com", "date": "2010-11-21T03:29:27Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2010-11-21T03:29:27Z"}, "message": "Fix build regression\n\nFrom-SVN: r166996", "tree": {"sha": "7625e9f4f605273dbfaade38b25a5e50f37d323f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7625e9f4f605273dbfaade38b25a5e50f37d323f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52ae149de0588e84b71b4fcc3ec35a7af1644d3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52ae149de0588e84b71b4fcc3ec35a7af1644d3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52ae149de0588e84b71b4fcc3ec35a7af1644d3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52ae149de0588e84b71b4fcc3ec35a7af1644d3f/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4de7c19456b4ca18e9054c746b145dc6094fa0e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4de7c19456b4ca18e9054c746b145dc6094fa0e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4de7c19456b4ca18e9054c746b145dc6094fa0e3"}], "stats": {"total": 54, "additions": 15, "deletions": 39}, "files": [{"sha": "37d97868c6c3959dffb88813eca1fa81edb5725d", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52ae149de0588e84b71b4fcc3ec35a7af1644d3f/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52ae149de0588e84b71b4fcc3ec35a7af1644d3f/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=52ae149de0588e84b71b4fcc3ec35a7af1644d3f", "patch": "@@ -1,3 +1,11 @@\n+2010-11-20  Anthony Green  <green@moxielogic.com>\n+\n+\t* configure.ac: Turn PR_SET_NAME link test into a test for\n+\tsys/prctl.h.\n+\t* configure, config.in: Rebuilt.\n+\t* setproctitle.c: Test for HAVE_SYS_PRCTL_H.\n+\t(setproctitle) Test for PR_SET_NAME definition.\n+\n 2010-11-20  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \tPR other/46202"}, {"sha": "e4f1f1620e19be55112d0cf1b765314b09867f4a", "filename": "libiberty/config.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52ae149de0588e84b71b4fcc3ec35a7af1644d3f/libiberty%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52ae149de0588e84b71b4fcc3ec35a7af1644d3f/libiberty%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfig.in?ref=52ae149de0588e84b71b4fcc3ec35a7af1644d3f", "patch": "@@ -169,9 +169,6 @@\n /* Define to 1 if you have the `on_exit' function. */\n #undef HAVE_ON_EXIT\n \n-/* Define if you have prctl PR_SET_NAME */\n-#undef HAVE_PRCTL_SET_NAME\n-\n /* Define to 1 if you have the <process.h> header file. */\n #undef HAVE_PROCESS_H\n \n@@ -304,6 +301,9 @@\n /* Define to 1 if you have the <sys/param.h> header file. */\n #undef HAVE_SYS_PARAM_H\n \n+/* Define to 1 if you have the <sys/prctl.h> header file. */\n+#undef HAVE_SYS_PRCTL_H\n+\n /* Define to 1 if you have the <sys/pstat.h> header file. */\n #undef HAVE_SYS_PSTAT_H\n "}, {"sha": "bdabe8d1a3546e570c3e4cc38bd789de4c36a6b5", "filename": "libiberty/configure", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52ae149de0588e84b71b4fcc3ec35a7af1644d3f/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52ae149de0588e84b71b4fcc3ec35a7af1644d3f/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=52ae149de0588e84b71b4fcc3ec35a7af1644d3f", "patch": "@@ -4895,7 +4895,7 @@ host_makefile_frag=${frag}\n # It's OK to check for header files.  Although the compiler may not be\n # able to link anything, it had better be able to at least compile\n # something.\n-for ac_header in sys/file.h sys/param.h limits.h stdlib.h malloc.h string.h unistd.h strings.h sys/time.h time.h sys/resource.h sys/stat.h sys/mman.h fcntl.h alloca.h sys/pstat.h sys/sysmp.h sys/sysinfo.h machine/hal_sysinfo.h sys/table.h sys/sysctl.h sys/systemcfg.h stdint.h stdio_ext.h process.h\n+for ac_header in sys/file.h sys/param.h limits.h stdlib.h malloc.h string.h unistd.h strings.h sys/time.h time.h sys/resource.h sys/stat.h sys/mman.h fcntl.h alloca.h sys/pstat.h sys/sysmp.h sys/sysinfo.h machine/hal_sysinfo.h sys/table.h sys/sysctl.h sys/systemcfg.h stdint.h stdio_ext.h process.h sys/prctl.h\n do :\n   as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n ac_fn_c_check_header_preproc \"$LINENO\" \"$ac_header\" \"$as_ac_Header\"\n@@ -5719,28 +5719,6 @@ fi\n \n \n \n-# check for prctl PR_SET_NAME\n-if test x$gcc_no_link = xyes; then\n-  as_fn_error \"Link tests are not allowed after GCC_NO_EXECUTABLES.\" \"$LINENO\" 5\n-fi\n-cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-\n-#include <sys/prctl.h>\n-int main()\n-{\n-  return (prctl(PR_SET_NAME, \"foo\") == 0) ? 0 : 1;\n-}\n-\n-_ACEOF\n-if ac_fn_c_try_link \"$LINENO\"; then :\n-\n-$as_echo \"#define HAVE_PRCTL_SET_NAME 1\" >>confdefs.h\n-\n-fi\n-rm -f core conftest.err conftest.$ac_objext \\\n-    conftest$ac_exeext conftest.$ac_ext\n-\n case \"${host}\" in\n   *-*-cygwin* | *-*-mingw*)\n     $as_echo \"#define HAVE_SYS_ERRLIST 1\" >>confdefs.h"}, {"sha": "9f1ff04938ec28cf81e69b0990e0c3831684e2f9", "filename": "libiberty/configure.ac", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52ae149de0588e84b71b4fcc3ec35a7af1644d3f/libiberty%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52ae149de0588e84b71b4fcc3ec35a7af1644d3f/libiberty%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.ac?ref=52ae149de0588e84b71b4fcc3ec35a7af1644d3f", "patch": "@@ -246,7 +246,7 @@ AC_SUBST_FILE(host_makefile_frag)\n # It's OK to check for header files.  Although the compiler may not be\n # able to link anything, it had better be able to at least compile\n # something.\n-AC_CHECK_HEADERS(sys/file.h sys/param.h limits.h stdlib.h malloc.h string.h unistd.h strings.h sys/time.h time.h sys/resource.h sys/stat.h sys/mman.h fcntl.h alloca.h sys/pstat.h sys/sysmp.h sys/sysinfo.h machine/hal_sysinfo.h sys/table.h sys/sysctl.h sys/systemcfg.h stdint.h stdio_ext.h process.h)\n+AC_CHECK_HEADERS(sys/file.h sys/param.h limits.h stdlib.h malloc.h string.h unistd.h strings.h sys/time.h time.h sys/resource.h sys/stat.h sys/mman.h fcntl.h alloca.h sys/pstat.h sys/sysmp.h sys/sysinfo.h machine/hal_sysinfo.h sys/table.h sys/sysctl.h sys/systemcfg.h stdint.h stdio_ext.h process.h sys/prctl.h)\n AC_HEADER_SYS_WAIT\n AC_HEADER_TIME\n \n@@ -538,16 +538,6 @@ fi\n AC_SUBST(CHECK)\n AC_SUBST(target_header_dir)\n \n-# check for prctl PR_SET_NAME\n-AC_LINK_IFELSE([AC_LANG_SOURCE([[\n-#include <sys/prctl.h>\n-int main()\n-{\n-  return (prctl(PR_SET_NAME, \"foo\") == 0) ? 0 : 1;\n-}\n-]])], AC_DEFINE(HAVE_PRCTL_SET_NAME, 1,\n-\t[Define if you have prctl PR_SET_NAME]))\n-\n case \"${host}\" in\n   *-*-cygwin* | *-*-mingw*)\n     AC_DEFINE(HAVE_SYS_ERRLIST)"}, {"sha": "ceb0a3894cce33ddfd033ba83d823794e2c2d083", "filename": "libiberty/setproctitle.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52ae149de0588e84b71b4fcc3ec35a7af1644d3f/libiberty%2Fsetproctitle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52ae149de0588e84b71b4fcc3ec35a7af1644d3f/libiberty%2Fsetproctitle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fsetproctitle.c?ref=52ae149de0588e84b71b4fcc3ec35a7af1644d3f", "patch": "@@ -20,7 +20,7 @@ Boston, MA 02110-1301, USA.  */\n #ifdef HAVE_CONFIG_H\n #include \"config.h\"\n #endif\n-#ifdef HAVE_PRCTL_SET_NAME\n+#ifdef HAVE_SYS_PRCTL_H\n #include <sys/prctl.h>\n #endif\n #include \"ansidecl.h\"\n@@ -39,7 +39,7 @@ but defined for compatibility with BSD.\n void\n setproctitle (const char *name ATTRIBUTE_UNUSED, ...)\n {\n-#ifdef HAVE_PRCTL_SET_NAME\n+#ifdef PR_SET_NAME\n   /* On Linux this sets the top visible \"comm\", but not necessarily\n      the name visible in ps. */\n   prctl (PR_SET_NAME, name);"}]}