{"sha": "3a664f16010a60d417017eccad4450f737e301bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E2NjRmMTYwMTBhNjBkNDE3MDE3ZWNjYWQ0NDUwZjczN2UzMDFiZA==", "commit": {"author": {"name": "Brad Garcia", "email": "bgarcia@laurelnetworks.com", "date": "2000-09-07T21:08:59Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-09-07T21:08:59Z"}, "message": "stl_tree.h: Make operators !=, == type safe for map, set.\n\n\n2000-09-07  Brad Garcia  <bgarcia@laurelnetworks.com>\n\n\t* bits/stl_tree.h: Make operators !=, == type safe for map, set.\n\t* testsuite/23_containers/set_operators.cc: New file. Should not\n\tcompile.\n\t* testsuite/23_containers/map_operators.cc: New file. Ditto.\n\nFrom-SVN: r36247", "tree": {"sha": "d02e17d3f8cf6b3668c3dd41145cdd588ec787b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d02e17d3f8cf6b3668c3dd41145cdd588ec787b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a664f16010a60d417017eccad4450f737e301bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a664f16010a60d417017eccad4450f737e301bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a664f16010a60d417017eccad4450f737e301bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a664f16010a60d417017eccad4450f737e301bd/comments", "author": null, "committer": null, "parents": [{"sha": "3eea1aed40a62c7ba810521ce76282d8964de5e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eea1aed40a62c7ba810521ce76282d8964de5e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3eea1aed40a62c7ba810521ce76282d8964de5e2"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "119f88236ad8e854223a4cf4a02188fa53d66de7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a664f16010a60d417017eccad4450f737e301bd/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a664f16010a60d417017eccad4450f737e301bd/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3a664f16010a60d417017eccad4450f737e301bd", "patch": "@@ -1,3 +1,10 @@\n+2000-09-07  Brad Garcia  <bgarcia@laurelnetworks.com>\n+\n+\t* bits/stl_tree.h: Make operators !=, == type safe for map, set.\n+\t* testsuite/23_containers/set_operators.cc: New file. Should not\n+\tcompile.  \n+\t* testsuite/23_containers/map_operators.cc: New file. Ditto.\n+\t\n 2000-09-06  Richard Henderson  <rth@cygnus.com>\n \t    Benjamin Kosnik  <bkoz@cygnus.com>\n "}, {"sha": "1c78fd2aa45eb3067d1991b08ab37a51d85ca72a", "filename": "libstdc++-v3/bits/stl_tree.h", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a664f16010a60d417017eccad4450f737e301bd/libstdc%2B%2B-v3%2Fbits%2Fstl_tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a664f16010a60d417017eccad4450f737e301bd/libstdc%2B%2B-v3%2Fbits%2Fstl_tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fstl_tree.h?ref=3a664f16010a60d417017eccad4450f737e301bd", "patch": "@@ -184,13 +184,15 @@ struct _Rb_tree_iterator : public _Rb_tree_base_iterator\n   }\n };\n \n-inline bool operator==(const _Rb_tree_base_iterator& __x,\n-                       const _Rb_tree_base_iterator& __y) {\n+template <class _Value, class _Ref, class _Ptr>\n+inline bool operator==(const _Rb_tree_iterator<_Value, _Ref, _Ptr>& __x,\n+\t\t       const _Rb_tree_iterator<_Value, _Ref, _Ptr>& __y) {\n   return __x._M_node == __y._M_node;\n }\n \n-inline bool operator!=(const _Rb_tree_base_iterator& __x,\n-                       const _Rb_tree_base_iterator& __y) {\n+template <class _Value, class _Ref, class _Ptr>\n+inline bool operator!=(const _Rb_tree_iterator<_Value, _Ref, _Ptr>& __x,\n+\t\t       const _Rb_tree_iterator<_Value, _Ref, _Ptr>& __y) {\n   return __x._M_node != __y._M_node;\n }\n "}]}