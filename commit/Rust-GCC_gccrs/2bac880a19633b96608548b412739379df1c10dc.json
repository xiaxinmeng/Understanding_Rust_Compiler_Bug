{"sha": "2bac880a19633b96608548b412739379df1c10dc", "node_id": "C_kwDOANBUbNoAKDJiYWM4ODBhMTk2MzNiOTY2MDg1NDhiNDEyNzM5Mzc5ZGYxYzEwZGM", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2022-08-30T14:43:46Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2022-08-30T14:43:46Z"}, "message": "Make graphds_scc pass the node order back to callers\n\nAs a side-effect, graphds_scc constructs a vector in which all\nnodes in an SCC are listed consecutively.  This can be useful\ninformation, so that the patch adds an optional pass-back parameter\nfor it.  The interface is similar to the one for graphds_dfs.\n\ngcc/\n\t* graphds.cc (graphds_scc): Add a pass-back parameter for the\n\tfinal node order.\n\t* graphds.h (graphds_scc): Update prototype accordingly.", "tree": {"sha": "f3a194c64159c35b2cd9abdcf24cfd304cf2867c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3a194c64159c35b2cd9abdcf24cfd304cf2867c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bac880a19633b96608548b412739379df1c10dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bac880a19633b96608548b412739379df1c10dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bac880a19633b96608548b412739379df1c10dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bac880a19633b96608548b412739379df1c10dc/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5551501e84dd51b569801c0e52b24f9e30124166", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5551501e84dd51b569801c0e52b24f9e30124166", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5551501e84dd51b569801c0e52b24f9e30124166"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "2a108fd475f759db408c369a6868afdda501ae06", "filename": "gcc/graphds.cc", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bac880a19633b96608548b412739379df1c10dc/gcc%2Fgraphds.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bac880a19633b96608548b412739379df1c10dc/gcc%2Fgraphds.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphds.cc?ref=2bac880a19633b96608548b412739379df1c10dc", "patch": "@@ -281,15 +281,22 @@ graphds_dfs (struct graph *g, int *qs, int nq, vec<int> *qt,\n    numbers assigned by the previous pass.  If SUBGRAPH is not NULL, it\n    specifies the subgraph of G whose strongly connected components we want\n    to determine.  If SKIP_EDGE_P is not NULL, it points to a callback function.\n-   Edge E will be skipped if callback function returns true.\n+   Edge E will be skipped if callback function returns true.  If SCC_GROUPING\n+   is not null, the nodes will be added to it in the following order:\n+\n+   - If SCC A is a direct or indirect predecessor of SCC B in the SCC dag,\n+     A's nodes come before B's nodes.\n+\n+   - All of an SCC's nodes are listed consecutively, although the order\n+     of the nodes within an SCC is not really meaningful.\n \n    After running this function, v->component is the number of the strongly\n    connected component for each vertex of G.  Returns the number of the\n    sccs of G.  */\n \n int\n graphds_scc (struct graph *g, bitmap subgraph,\n-\t     skip_edge_callback skip_edge_p)\n+\t     skip_edge_callback skip_edge_p, vec<int> *scc_grouping)\n {\n   int *queue = XNEWVEC (int, g->n_vertices);\n   vec<int> postorder = vNULL;\n@@ -317,7 +324,7 @@ graphds_scc (struct graph *g, bitmap subgraph,\n \n   for (i = 0; i < nq; i++)\n     queue[i] = postorder[nq - i - 1];\n-  comp = graphds_dfs (g, queue, nq, NULL, true, subgraph, skip_edge_p);\n+  comp = graphds_dfs (g, queue, nq, scc_grouping, true, subgraph, skip_edge_p);\n \n   free (queue);\n   postorder.release ();"}, {"sha": "e0e4d802cbbc9a2dcc50b8a7f6f0c31b6ee66e50", "filename": "gcc/graphds.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bac880a19633b96608548b412739379df1c10dc/gcc%2Fgraphds.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bac880a19633b96608548b412739379df1c10dc/gcc%2Fgraphds.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphds.h?ref=2bac880a19633b96608548b412739379df1c10dc", "patch": "@@ -58,7 +58,8 @@ void identify_vertices (struct graph *, int, int);\n typedef bool (*skip_edge_callback) (struct graph_edge *);\n int graphds_dfs (struct graph *, int *, int,\n \t\t vec<int> *, bool, bitmap, skip_edge_callback = NULL);\n-int graphds_scc (struct graph *, bitmap, skip_edge_callback = NULL);\n+int graphds_scc (struct graph *, bitmap, skip_edge_callback = NULL,\n+\t\t vec<int> * = NULL);\n void graphds_domtree (struct graph *, int, int *, int *, int *);\n typedef void (*graphds_edge_callback) (struct graph *,\n \t\t\t\t       struct graph_edge *, void *);"}]}