{"sha": "37db829b936aa6483eff60a7522e34ad6dcecb79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdkYjgyOWI5MzZhYTY0ODNlZmY2MGE3NTIyZTM0YWQ2ZGNlY2I3OQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-03-02T13:50:04Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-03-02T13:50:04Z"}, "message": "2003-03-02  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/DatagramSocket.java\n\t(closed): New member variable.\n\t(close): Use closed variable.\n\t(getInetAddress): No need to call isConnected().\n\t(getPort): No need to call isConnected().\n\t(disconnect): Reset remoteAddress and remotePort, fixed typo.\n\t(isClosed): Reimplemented.\n\nFrom-SVN: r63662", "tree": {"sha": "2ae3db7de7caf56b5219765da4466addb984cb74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ae3db7de7caf56b5219765da4466addb984cb74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37db829b936aa6483eff60a7522e34ad6dcecb79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37db829b936aa6483eff60a7522e34ad6dcecb79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37db829b936aa6483eff60a7522e34ad6dcecb79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37db829b936aa6483eff60a7522e34ad6dcecb79/comments", "author": null, "committer": null, "parents": [{"sha": "c0daa902837561b1c114bdee9e8cee5f8797e610", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0daa902837561b1c114bdee9e8cee5f8797e610", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0daa902837561b1c114bdee9e8cee5f8797e610"}], "stats": {"total": 44, "additions": 29, "deletions": 15}, "files": [{"sha": "6d91983d0ad8c08477673b70038c3d2ceaf14578", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37db829b936aa6483eff60a7522e34ad6dcecb79/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37db829b936aa6483eff60a7522e34ad6dcecb79/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=37db829b936aa6483eff60a7522e34ad6dcecb79", "patch": "@@ -1,3 +1,13 @@\n+2003-03-02  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/DatagramSocket.java\n+\t(closed): New member variable.\n+\t(close): Use closed variable.\n+\t(getInetAddress): No need to call isConnected().\n+\t(getPort): No need to call isConnected().\n+\t(disconnect): Reset remoteAddress and remotePort, fixed typo.\n+\t(isClosed): Reimplemented.\n+\t\n 2003-03-02  Michael Koch  <konqueror@gmx.de>\n \n \t* configure.in: Added check for memory mapping of files."}, {"sha": "091ebf98d1abc5eb121c87363004ed275c9af83f", "filename": "libjava/java/net/DatagramSocket.java", "status": "modified", "additions": 19, "deletions": 15, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37db829b936aa6483eff60a7522e34ad6dcecb79/libjava%2Fjava%2Fnet%2FDatagramSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37db829b936aa6483eff60a7522e34ad6dcecb79/libjava%2Fjava%2Fnet%2FDatagramSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FDatagramSocket.java?ref=37db829b936aa6483eff60a7522e34ad6dcecb79", "patch": "@@ -88,6 +88,11 @@\n    */\n   private int remotePort = -1;\n \n+  /**\n+   * Indicates when the socket is closed.\n+   */\n+  private boolean closed = false;\n+\n   /**\n    * Creates a DatagramSocket from a specified DatagramSocketImpl instance\n    *\n@@ -201,9 +206,13 @@ public DatagramSocket (SocketAddress address) throws SocketException\n    */\n   public void close()\n   {\n-    impl.close();\n-    remoteAddress = null;\n-    remotePort = -1;\n+    if (!closed)\n+      {\n+        impl.close();\n+        remoteAddress = null;\n+        remotePort = -1;\n+        closed = true;\n+      }\n   }\n \n   /**\n@@ -217,9 +226,6 @@ public void close()\n    */\n   public InetAddress getInetAddress()\n   {\n-    if (!isConnected ())\n-      return null;\n-\n     return remoteAddress;\n   }\n \n@@ -234,9 +240,6 @@ public InetAddress getInetAddress()\n    */\n   public int getPort()\n   {\n-    if (!isConnected ())\n-      return -1;\n-    \n     return remotePort;\n   }\n \n@@ -265,20 +268,19 @@ public InetAddress getLocalAddress()\n     //   s.checkConnect(\"localhost\", -1);\n     try\n       {\n-\treturn (InetAddress)impl.getOption(SocketOptions.SO_BINDADDR);\n+        return (InetAddress)impl.getOption(SocketOptions.SO_BINDADDR);\n       }\n     catch (SocketException ex)\n       {\n       }\n \n     try\n       {\n-\treturn InetAddress.getLocalHost();\n+        return InetAddress.getLocalHost();\n       }\n     catch (UnknownHostException ex)\n       {\n-\t// FIXME: This should never happen, so how can we avoid this construct?\n-\treturn null;\n+        return null;\n       }\n   }\n \n@@ -469,14 +471,16 @@ public void connect(InetAddress address, int port)\n \n   /**\n    * This method disconnects this socket from the address/port it was\n-   * conencted to.  If the socket was not connected in the first place,\n+   * connected to.  If the socket was not connected in the first place,\n    * this method does nothing.\n    * \n    * @since 1.2\n    */\n   public void disconnect()\n   {\n     impl.disconnect();\n+    remoteAddress = null;\n+    remotePort = -1;\n   }\n \n   /**\n@@ -596,7 +600,7 @@ public void bind (SocketAddress address)\n    */\n   public boolean isClosed()\n   {\n-    return !impl.getFileDescriptor().valid();\n+    return closed;\n   }\n \n   /**"}]}