{"sha": "dd9c642a8bbbc0b75be122f98a08ab992755dedd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ5YzY0MmE4YmJiYzBiNzViZTEyMmY5OGEwOGFiOTkyNzU1ZGVkZA==", "commit": {"author": {"name": "Samuel Tardieu", "email": "sam@rfc1149.net", "date": "2007-12-02T18:29:04Z"}, "committer": {"name": "Samuel Tardieu", "email": "sam@gcc.gnu.org", "date": "2007-12-02T18:29:04Z"}, "message": "Makefile.in: Add support for sh4-linux.\n\n    gcc/ada/\n\t* Makefile.in: Add support for sh4-linux.\n\n\t* system-linux-sh4.ads: New file.\n\nFrom-SVN: r130572", "tree": {"sha": "64e2b3ac21b7a283b379de7d83af64247140ec41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64e2b3ac21b7a283b379de7d83af64247140ec41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd9c642a8bbbc0b75be122f98a08ab992755dedd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd9c642a8bbbc0b75be122f98a08ab992755dedd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd9c642a8bbbc0b75be122f98a08ab992755dedd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd9c642a8bbbc0b75be122f98a08ab992755dedd/comments", "author": {"login": "samueltardieu", "id": 44656, "node_id": "MDQ6VXNlcjQ0NjU2", "avatar_url": "https://avatars.githubusercontent.com/u/44656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samueltardieu", "html_url": "https://github.com/samueltardieu", "followers_url": "https://api.github.com/users/samueltardieu/followers", "following_url": "https://api.github.com/users/samueltardieu/following{/other_user}", "gists_url": "https://api.github.com/users/samueltardieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/samueltardieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samueltardieu/subscriptions", "organizations_url": "https://api.github.com/users/samueltardieu/orgs", "repos_url": "https://api.github.com/users/samueltardieu/repos", "events_url": "https://api.github.com/users/samueltardieu/events{/privacy}", "received_events_url": "https://api.github.com/users/samueltardieu/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0bcb4d2a2a4bfef930492a60fb6ede51f3b5a0c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bcb4d2a2a4bfef930492a60fb6ede51f3b5a0c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bcb4d2a2a4bfef930492a60fb6ede51f3b5a0c9"}], "stats": {"total": 183, "additions": 183, "deletions": 0}, "files": [{"sha": "4d1fa5b2e2bc752d7cde3347e931fa4ffa77f8fa", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd9c642a8bbbc0b75be122f98a08ab992755dedd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd9c642a8bbbc0b75be122f98a08ab992755dedd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=dd9c642a8bbbc0b75be122f98a08ab992755dedd", "patch": "@@ -3,6 +3,10 @@\n \t* clean.adb (Clean_Library_Directory): Use Empty_String'Access intead\n \tof Empty_String'Unchecked_Access.\n \n+\t* Makefile.in: Add support for sh4-linux.\n+\n+\t* system-linux-sh4.ads: New file.\n+\n 2007-12-01  Kostik Belousov  <kostikbel@ukr.net>\n \n \tPR ada/33722"}, {"sha": "db65816b877935903f05b9aeacebba7eec9d891a", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd9c642a8bbbc0b75be122f98a08ab992755dedd/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd9c642a8bbbc0b75be122f98a08ab992755dedd/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=dd9c642a8bbbc0b75be122f98a08ab992755dedd", "patch": "@@ -1394,6 +1394,32 @@ ifeq ($(strip $(filter-out hppa% linux%,$(arch) $(osys))),)\n   LIBRARY_VERSION := $(LIB_VERSION)\n endif\n \n+ifeq ($(strip $(filter-out sh4% linux%,$(arch) $(osys))),)\n+  LIBGNAT_TARGET_PAIRS = \\\n+  a-intnam.ads<a-intnam-linux.ads \\\n+  s-inmaop.adb<s-inmaop-posix.adb \\\n+  s-intman.adb<s-intman-posix.adb \\\n+  s-osinte.adb<s-osinte-posix.adb \\\n+  s-osinte.ads<s-osinte-linux.ads \\\n+  s-osprim.adb<s-osprim-posix.adb \\\n+  s-taprop.adb<s-taprop-linux.adb \\\n+  s-taspri.ads<s-taspri-posix.ads \\\n+  s-tpopsp.adb<s-tpopsp-posix-foreign.adb \\\n+  system.ads<system-linux-sh4.ads\n+\n+  TOOLS_TARGET_PAIRS =  \\\n+    mlib-tgt.adb<mlib-tgt-linux.adb \\\n+    indepsw.adb<indepsw-linux.adb\n+\n+  EH_MECHANISM=-gcc\n+  MISCLIB=\n+  THREADSLIB = -lpthread\n+  GNATLIB_SHARED = gnatlib-shared-dual\n+  GMEM_LIB = gmemlib\n+  PREFIX_OBJS = $(PREFIX_REAL_OBJS)\n+  LIBRARY_VERSION := $(LIB_VERSION)\n+endif\n+\n ifeq ($(strip $(filter-out %ia64 linux%,$(arch) $(osys))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   a-intnam.ads<a-intnam-linux.ads \\"}, {"sha": "8bbbb22b45c36fa7faf3b1c01a823ff63201f9e2", "filename": "gcc/ada/system-linux-sh4.ads", "status": "added", "additions": 153, "deletions": 0, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd9c642a8bbbc0b75be122f98a08ab992755dedd/gcc%2Fada%2Fsystem-linux-sh4.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd9c642a8bbbc0b75be122f98a08ab992755dedd/gcc%2Fada%2Fsystem-linux-sh4.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-sh4.ads?ref=dd9c642a8bbbc0b75be122f98a08ab992755dedd", "patch": "@@ -0,0 +1,153 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                         (GNU-Linux/sh4 Version)                          --\n+--                                                                          --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 0.000_001;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   pragma Preelaborable_Initialization (Address);\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 32;\n+   Memory_Size  : constant := 2 ** 32;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n+   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   --  0 .. 98 corresponds to the system priority range 1 .. 99.\n+   --\n+   --  If the scheduling policy is SCHED_FIFO or SCHED_RR the runtime makes use\n+   --  of the entire range provided by the system.\n+   --\n+   --  If the scheduling policy is SCHED_OTHER the only valid system priority\n+   --  is 1 and other values are simply ignored.\n+\n+   Max_Priority           : constant Positive := 97;\n+   Max_Interrupt_Priority : constant Positive := 98;\n+\n+   subtype Any_Priority       is Integer      range  0 .. 98;\n+   subtype Priority           is Any_Priority range  0 .. 97;\n+   subtype Interrupt_Priority is Any_Priority range 98 .. 98;\n+\n+   Default_Priority : constant Priority := 48;\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   Preallocated_Stacks       : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := False;\n+   Support_64_Bit_Divides    : constant Boolean := True;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := True;\n+   GCC_ZCX_Support           : constant Boolean := True;\n+\n+end System;"}]}