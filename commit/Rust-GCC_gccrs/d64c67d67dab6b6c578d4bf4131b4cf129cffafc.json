{"sha": "d64c67d67dab6b6c578d4bf4131b4cf129cffafc", "node_id": "C_kwDOANBUbNoAKGQ2NGM2N2Q2N2RhYjZiNmM1NzhkNGJmNDEzMWI0Y2YxMjljZmZhZmM", "commit": {"author": {"name": "Etienne Servais", "email": "servais@adacore.com", "date": "2021-09-21T15:38:27Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-11T13:38:11Z"}, "message": "[Ada] Find an interpretation for membership test with a singleton value\n\ngcc/ada/\n\n\t* sem_ch4.adb (Analyze_Membership_Op): Finds interpretation for\n\tthe case of a membership test with a singleton value in case of\n\toverloading.", "tree": {"sha": "b1fc7c01394f865489b53a2a020f5ca4da390d4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1fc7c01394f865489b53a2a020f5ca4da390d4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d64c67d67dab6b6c578d4bf4131b4cf129cffafc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d64c67d67dab6b6c578d4bf4131b4cf129cffafc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d64c67d67dab6b6c578d4bf4131b4cf129cffafc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d64c67d67dab6b6c578d4bf4131b4cf129cffafc/comments", "author": {"login": "vser1", "id": 8308457, "node_id": "MDQ6VXNlcjgzMDg0NTc=", "avatar_url": "https://avatars.githubusercontent.com/u/8308457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vser1", "html_url": "https://github.com/vser1", "followers_url": "https://api.github.com/users/vser1/followers", "following_url": "https://api.github.com/users/vser1/following{/other_user}", "gists_url": "https://api.github.com/users/vser1/gists{/gist_id}", "starred_url": "https://api.github.com/users/vser1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vser1/subscriptions", "organizations_url": "https://api.github.com/users/vser1/orgs", "repos_url": "https://api.github.com/users/vser1/repos", "events_url": "https://api.github.com/users/vser1/events{/privacy}", "received_events_url": "https://api.github.com/users/vser1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d615a4b6e8b9e0cf1cd862a69d6ad1a7788f396", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d615a4b6e8b9e0cf1cd862a69d6ad1a7788f396", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d615a4b6e8b9e0cf1cd862a69d6ad1a7788f396"}], "stats": {"total": 42, "additions": 33, "deletions": 9}, "files": [{"sha": "dda244c956fec112dbae29feef5909e9cbb11fa6", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 33, "deletions": 9, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d64c67d67dab6b6c578d4bf4131b4cf129cffafc/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d64c67d67dab6b6c578d4bf4131b4cf129cffafc/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=d64c67d67dab6b6c578d4bf4131b4cf129cffafc", "patch": "@@ -2960,6 +2960,13 @@ package body Sem_Ch4 is\n       --  If a set of alternatives is present, analyze each and find the\n       --  common type to which they must all resolve.\n \n+      procedure Find_Interpretation;\n+      function Find_Interpretation return Boolean;\n+      --  Routine and wrapper to find a matching interpretation in case\n+      --  of overloading. The wrapper returns True iff a matching\n+      --  interpretation is found. Beware, in absence of overloading,\n+      --  using this function will break gnat's bootstrapping.\n+\n       procedure Try_One_Interp (T1 : Entity_Id);\n       --  Routine to try one proposed interpretation. Note that the context\n       --  of the operation plays no role in resolving the arguments, so that\n@@ -3064,6 +3071,26 @@ package body Sem_Ch4 is\n          end if;\n       end Analyze_Set_Membership;\n \n+      -------------------------\n+      -- Find_Interpretation --\n+      -------------------------\n+\n+      procedure Find_Interpretation is\n+      begin\n+         Get_First_Interp (L, Index, It);\n+         while Present (It.Typ) loop\n+            Try_One_Interp (It.Typ);\n+            Get_Next_Interp (Index, It);\n+         end loop;\n+      end Find_Interpretation;\n+\n+      function Find_Interpretation return Boolean is\n+      begin\n+         Find_Interpretation;\n+\n+         return Found;\n+      end Find_Interpretation;\n+\n       --------------------\n       -- Try_One_Interp --\n       --------------------\n@@ -3119,11 +3146,7 @@ package body Sem_Ch4 is\n             Try_One_Interp (Etype (L));\n \n          else\n-            Get_First_Interp (L, Index, It);\n-            while Present (It.Typ) loop\n-               Try_One_Interp (It.Typ);\n-               Get_Next_Interp (Index, It);\n-            end loop;\n+            Find_Interpretation;\n          end if;\n \n       --  If not a range, it can be a subtype mark, or else it is a degenerate\n@@ -3139,13 +3162,14 @@ package body Sem_Ch4 is\n             Find_Type (R);\n             Check_Fully_Declared (Entity (R), R);\n \n-         elsif Ada_Version >= Ada_2012\n-           and then Has_Compatible_Type (R, Etype (L))\n+         elsif Ada_Version >= Ada_2012 and then\n+           ((Is_Overloaded (L) and then Find_Interpretation) or else\n+           (not Is_Overloaded (L) and then Has_Compatible_Type (R, Etype (L))))\n          then\n             if Nkind (N) = N_In then\n-               Op := Make_Op_Eq (Loc, Left_Opnd  => L, Right_Opnd => R);\n+               Op := Make_Op_Eq (Loc, Left_Opnd => L, Right_Opnd => R);\n             else\n-               Op := Make_Op_Ne (Loc, Left_Opnd  => L, Right_Opnd => R);\n+               Op := Make_Op_Ne (Loc, Left_Opnd => L, Right_Opnd => R);\n             end if;\n \n             if Is_Record_Or_Limited_Type (Etype (L)) then"}]}