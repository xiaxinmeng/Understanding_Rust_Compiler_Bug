{"sha": "e350dbbd73b6e76f8c4e32307c759d978038c6dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM1MGRiYmQ3M2I2ZTc2ZjhjNGUzMjMwN2M3NTlkOTc4MDM4YzZkYw==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2009-02-03T16:26:28Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2009-02-03T16:26:28Z"}, "message": "re PR c++/36897 (ICE with function pointer template parameter)\n\ngcc/cp:\n2009-02-03  Paolo Bonzini  <bonzini@gnu.org>\n\n\tPR c++/36897\n\t* pt.c (convert_nontype_argument_function): Expect expr to be an\n\tADDR_EXPR.\n\n\tPR c++/37314\n\t* typeck.c (merge_types): Call resolve_typename_type if only\n\tone type is a typename.\n\ngcc/testsuite:\n2009-02-03  Paolo Bonzini  <bonzini@gnu.org>\n\n\tPR c++/36897\n\t* g++.dg/template/func2.C: New test.\n\n\tPR c++/37314\n\t* g++.dg/template/typename15.C: New.\n\t* g++.dg/template/typename16.C: New.\n\nFrom-SVN: r143898", "tree": {"sha": "7693fb58c0b4076ed465a4e52b148bae94b43711", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7693fb58c0b4076ed465a4e52b148bae94b43711"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e350dbbd73b6e76f8c4e32307c759d978038c6dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e350dbbd73b6e76f8c4e32307c759d978038c6dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e350dbbd73b6e76f8c4e32307c759d978038c6dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e350dbbd73b6e76f8c4e32307c759d978038c6dc/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aa2bb640389ccc571935cc1c2b72ff9d1f237c41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa2bb640389ccc571935cc1c2b72ff9d1f237c41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa2bb640389ccc571935cc1c2b72ff9d1f237c41"}], "stats": {"total": 89, "additions": 89, "deletions": 0}, "files": [{"sha": "39a5eb855a22c0043280acbf1158d5403f275dfd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e350dbbd73b6e76f8c4e32307c759d978038c6dc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e350dbbd73b6e76f8c4e32307c759d978038c6dc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e350dbbd73b6e76f8c4e32307c759d978038c6dc", "patch": "@@ -1,3 +1,13 @@\n+2009-02-03  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR c++/36897\n+\t* pt.c (convert_nontype_argument_function): Expect expr to be an\n+\tADDR_EXPR.\n+\n+\tPR c++/37314\n+\t* typeck.c (merge_types): Call resolve_typename_type if only\n+\tone type is a typename.\n+\n 2009-02-02  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/39054"}, {"sha": "c5b675faa1640d56d990fae42c6010503c23eeba", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e350dbbd73b6e76f8c4e32307c759d978038c6dc/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e350dbbd73b6e76f8c4e32307c759d978038c6dc/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=e350dbbd73b6e76f8c4e32307c759d978038c6dc", "patch": "@@ -4566,6 +4566,13 @@ convert_nontype_argument (tree type, tree expr)\n       expr = convert_nontype_argument_function (type, expr);\n       if (!expr || expr == error_mark_node)\n \treturn expr;\n+\n+      if (TREE_CODE (expr) != ADDR_EXPR)\n+\t{\n+\t  error (\"%qE is not a valid template argument for type %qT\", expr, type);\n+\t  error (\"it must be the address of a function with external linkage\");\n+\t  return NULL_TREE;\n+\t}\n     }\n   /* [temp.arg.nontype]/5, bullet 5\n "}, {"sha": "1c7df31c9bb2d29d0f6ebb67db640ab2c527f946", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e350dbbd73b6e76f8c4e32307c759d978038c6dc/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e350dbbd73b6e76f8c4e32307c759d978038c6dc/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=e350dbbd73b6e76f8c4e32307c759d978038c6dc", "patch": "@@ -637,6 +637,20 @@ merge_types (tree t1, tree t2)\n \n   code1 = TREE_CODE (t1);\n   code2 = TREE_CODE (t2);\n+  if (code1 != code2)\n+    {\n+      gcc_assert (code1 == TYPENAME_TYPE || code2 == TYPENAME_TYPE);\n+      if (code1 == TYPENAME_TYPE)\n+\t{\n+          t1 = resolve_typename_type (t1, /*only_current_p=*/true);\n+\t  code1 = TREE_CODE (t1);\n+\t}\n+      else\n+\t{\n+          t2 = resolve_typename_type (t2, /*only_current_p=*/true);\n+\t  code2 = TREE_CODE (t2);\n+\t}\n+    }\n \n   switch (code1)\n     {"}, {"sha": "ba77486a3e7846eb3c106188f59044aa110184d1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e350dbbd73b6e76f8c4e32307c759d978038c6dc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e350dbbd73b6e76f8c4e32307c759d978038c6dc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e350dbbd73b6e76f8c4e32307c759d978038c6dc", "patch": "@@ -1,3 +1,12 @@\n+2009-02-03  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR c++/36897\n+\t* g++.dg/template/func2.C: New test.\n+\n+\tPR c++/37314\n+\t* g++.dg/template/typename15.C: New.\n+\t* g++.dg/template/typename16.C: New.\n+\n 2009-02-03  Janis Johnson  <janis187@us.ibm.com>\n \t    Ben Elliston  <bje@au.ibm.com>\n "}, {"sha": "b0f691d242b9f8ac0b226cdc56fb13278219e8fb", "filename": "gcc/testsuite/g++.dg/template/func2.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e350dbbd73b6e76f8c4e32307c759d978038c6dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffunc2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e350dbbd73b6e76f8c4e32307c759d978038c6dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffunc2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffunc2.C?ref=e350dbbd73b6e76f8c4e32307c759d978038c6dc", "patch": "@@ -0,0 +1,12 @@\n+// { dg-do compile }\n+\n+typedef void (*fptr)();\n+fptr zeroptr = 0;\n+template<typename T, fptr F> struct foo { };\n+template<typename T> struct foo<T,zeroptr> { };\n+// { dg-error \"not a valid template argument\" \"not valid\" { target *-*-* } 6 } \n+// { dg-error \"must be the address\" \"must be the address \" { target *-*-* } 6 }\n+\n+// The rest is needed to trigger the ICE in 4.0 to 4.3:\n+void f() { }\n+foo<int,&f> m_foo;"}, {"sha": "fece885ea78b2edb9dfe2bc488188c8973f58a71", "filename": "gcc/testsuite/g++.dg/template/typename15.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e350dbbd73b6e76f8c4e32307c759d978038c6dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e350dbbd73b6e76f8c4e32307c759d978038c6dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename15.C?ref=e350dbbd73b6e76f8c4e32307c759d978038c6dc", "patch": "@@ -0,0 +1,12 @@\n+// PR37314 ice-on-valid-code, from w.doeringer\n+template <typename T>\n+class Cdeque {\n+    typedef T *pointer;\n+    class iterator {\n+        typedef typename Cdeque<T>::pointer pointer;\n+        pointer operator->();\n+    };\n+};\n+template <typename T> T* Cdeque<T>::iterator::operator->() { }\n+\n+"}, {"sha": "45da11162dbdbebd6ab6a7804da4572832d0034c", "filename": "gcc/testsuite/g++.dg/template/typename16.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e350dbbd73b6e76f8c4e32307c759d978038c6dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e350dbbd73b6e76f8c4e32307c759d978038c6dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename16.C?ref=e350dbbd73b6e76f8c4e32307c759d978038c6dc", "patch": "@@ -0,0 +1,25 @@\n+// PR37314 rejects-valid, from w.doeringer\n+template <typename T>\n+struct A {\n+  typedef __PTRDIFF_TYPE__ difference_type;\n+  struct B {\n+    typedef typename A<T>::difference_type difference_type;\n+    difference_type operator-(B const&) const; \n+    T t;\n+  };\n+};\n+// \n+\n+template <typename T>\n+typename A<T>::B::difference_type A<T>::B::operator-(B const&) const {\n+  return -1;\n+} \n+\n+//\n+int main() {\n+  A<int>::B i;\n+  ++i.t;\n+  return 0;\n+}\n+\n+"}]}