{"sha": "508a909eca536f7f6a60af9bd7ecea761bd2e8f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA4YTkwOWVjYTUzNmY3ZjZhNjBhZjliZDdlY2VhNzYxYmQyZThmMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2018-09-20T12:58:16Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-09-20T12:58:16Z"}, "message": "Add missing alignment checks in epilogue loop vectorisation (PR 86877)\n\nEpilogue loop vectorisation skips vect_enhance_data_refs_alignment\nsince it doesn't make sense to version or peel the epilogue loop\n(that will already have happened for the main loop).  But this means\nthat it also fails to check whether the accesses are suitably aligned\nfor the new vector subarch.\n\nWe don't seem to carry alignment information from the (potentially\npeeled or versioned) main loop to the epilogue loop, which would be\ngood to fix at some point.  I think we want this patch regardless,\nsince there's no guarantee that the alignment requirements are the\nsame for every subarch.\n\n2018-09-20  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\tPR tree-optimization/86877\n\t* tree-vect-loop.c (vect_analyze_loop_2): Call\n\tvect_verify_datarefs_alignment.\n\ngcc/testsuite/\n\tPR tree-optimization/86877\n\t* gfortran.dg/vect/vect-8-epilogue.F90: New test.\n\nFrom-SVN: r264439", "tree": {"sha": "7a689b08a7547223d500131fe82abd0fef4ebbfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a689b08a7547223d500131fe82abd0fef4ebbfc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/508a909eca536f7f6a60af9bd7ecea761bd2e8f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/508a909eca536f7f6a60af9bd7ecea761bd2e8f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/508a909eca536f7f6a60af9bd7ecea761bd2e8f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/508a909eca536f7f6a60af9bd7ecea761bd2e8f1/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a599af84b2170d8d66385674ef59283ac7567beb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a599af84b2170d8d66385674ef59283ac7567beb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a599af84b2170d8d66385674ef59283ac7567beb"}], "stats": {"total": 38, "additions": 28, "deletions": 10}, "files": [{"sha": "af5fddf10ce8951667823df8fce2810f19509fef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/508a909eca536f7f6a60af9bd7ecea761bd2e8f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/508a909eca536f7f6a60af9bd7ecea761bd2e8f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=508a909eca536f7f6a60af9bd7ecea761bd2e8f1", "patch": "@@ -1,3 +1,9 @@\n+2018-09-20  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/86877\n+\t* tree-vect-loop.c (vect_analyze_loop_2): Call\n+\tvect_verify_datarefs_alignment.\n+\n 2018-09-19  Marek Polacek  <polacek@redhat.com>\n \n \t* doc/invoke.texi: Document -Wclass-conversion."}, {"sha": "ade95dbb5c90c33122d25656a0407672fc3737da", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/508a909eca536f7f6a60af9bd7ecea761bd2e8f1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/508a909eca536f7f6a60af9bd7ecea761bd2e8f1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=508a909eca536f7f6a60af9bd7ecea761bd2e8f1", "patch": "@@ -1,3 +1,8 @@\n+2018-09-20  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/86877\n+\t* gfortran.dg/vect/vect-8-epilogue.F90: New test.\n+\n 2018-09-19  Marek Polacek  <polacek@redhat.com>\n \n \t* g++.dg/conversion/op4.C: Add dg-warning."}, {"sha": "2a09539a510b3d0addee09f63a4d0e199e7e5c98", "filename": "gcc/testsuite/gfortran.dg/vect/vect-8-epilogue.F90", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/508a909eca536f7f6a60af9bd7ecea761bd2e8f1/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-8-epilogue.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/508a909eca536f7f6a60af9bd7ecea761bd2e8f1/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-8-epilogue.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-8-epilogue.F90?ref=508a909eca536f7f6a60af9bd7ecea761bd2e8f1", "patch": "@@ -0,0 +1,6 @@\n+! { dg-do compile }\n+! { dg-require-effective-target vect_double }\n+! { dg-additional-options \"-finline-matmul-limit=0 --param vect-epilogues-nomask=1\" }\n+! { dg-additional-options \"-mstrict-align\" { target { aarch64*-*-* } } }\n+\n+#include \"vect-8.f90\""}, {"sha": "70e9157646fd068abedba232f650c3b858b8c4ad", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/508a909eca536f7f6a60af9bd7ecea761bd2e8f1/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/508a909eca536f7f6a60af9bd7ecea761bd2e8f1/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=508a909eca536f7f6a60af9bd7ecea761bd2e8f1", "patch": "@@ -1979,20 +1979,21 @@ vect_analyze_loop_2 (loop_vec_info loop_vinfo, bool &fatal, unsigned *n_stmts)\n   if (!ok)\n     return false;\n \n-  /* Do not invoke vect_enhance_data_refs_alignment for eplilogue\n-     vectorization.  */\n+  /* Do not invoke vect_enhance_data_refs_alignment for epilogue\n+     vectorization, since we do not want to add extra peeling or\n+     add versioning for alignment.  */\n   if (!LOOP_VINFO_EPILOGUE_P (loop_vinfo))\n-    {\n     /* This pass will decide on using loop versioning and/or loop peeling in\n        order to enhance the alignment of data references in the loop.  */\n     ok = vect_enhance_data_refs_alignment (loop_vinfo);\n-    if (!ok)\n-      {\n-\tif (dump_enabled_p ())\n-\t  dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n-\t\t\t   \"bad data alignment.\\n\");\n-        return false;\n-      }\n+  else\n+    ok = vect_verify_datarefs_alignment (loop_vinfo);\n+  if (!ok)\n+    {\n+      if (dump_enabled_p ())\n+\tdump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n+\t\t\t \"bad data alignment.\\n\");\n+      return false;\n     }\n \n   if (slp)"}]}