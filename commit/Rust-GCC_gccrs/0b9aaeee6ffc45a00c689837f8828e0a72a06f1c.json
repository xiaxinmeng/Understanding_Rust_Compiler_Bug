{"sha": "0b9aaeee6ffc45a00c689837f8828e0a72a06f1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI5YWFlZWU2ZmZjNDVhMDBjNjg5ODM3Zjg4MjhlMGE3MmEwNmYxYw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2000-08-03T18:36:14Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2000-08-03T18:36:14Z"}, "message": "reg-stack.c (subst_stack_regs_pat): Use replace_reg to swap operands.\n\n\t* reg-stack.c (subst_stack_regs_pat):  Use replace_reg to swap\n\toperands.\n\n\t* i386.c (ix86_expand_branch): Mode of comparison in\n\tIF_THEN_ELSE is VOIDmode.\n\nFrom-SVN: r35458", "tree": {"sha": "33fe819a786c23be4cf8edbef115ec14ab5c7e18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33fe819a786c23be4cf8edbef115ec14ab5c7e18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b9aaeee6ffc45a00c689837f8828e0a72a06f1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b9aaeee6ffc45a00c689837f8828e0a72a06f1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b9aaeee6ffc45a00c689837f8828e0a72a06f1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b9aaeee6ffc45a00c689837f8828e0a72a06f1c/comments", "author": null, "committer": null, "parents": [{"sha": "57b59acb058f5741ddb858efebaa6b714e3da552", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57b59acb058f5741ddb858efebaa6b714e3da552", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57b59acb058f5741ddb858efebaa6b714e3da552"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "71fc42958d088449a6a58a1e61b8750399277727", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b9aaeee6ffc45a00c689837f8828e0a72a06f1c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b9aaeee6ffc45a00c689837f8828e0a72a06f1c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0b9aaeee6ffc45a00c689837f8828e0a72a06f1c", "patch": "@@ -1,3 +1,11 @@\n+Thu Aug  3 20:32:25 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n+\n+\t* reg-stack.c (subst_stack_regs_pat):  Use replace_reg to swap\n+\toperands.\n+\n+\t* i386.c (ix86_expand_branch): Mode of comparison in\n+\tIF_THEN_ELSE is VOIDmode.\n+\n Thu Aug  3 10:05:53 2000  Akiko Matsushita <matusita@sra.co.jp>\n \n \t* gengenrtl.c, rtl.c: Avoid #elif."}, {"sha": "c02dfc77346c1ded106247205ec186dcdee2e5ef", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b9aaeee6ffc45a00c689837f8828e0a72a06f1c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b9aaeee6ffc45a00c689837f8828e0a72a06f1c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=0b9aaeee6ffc45a00c689837f8828e0a72a06f1c", "patch": "@@ -4897,7 +4897,7 @@ ix86_expand_branch (code, label)\n \tcode = ix86_prepare_fp_compare_args (code, &ix86_compare_op0,\n \t\t\t\t\t     &ix86_compare_op1);\n \n-\ttmp = gen_rtx_fmt_ee (code, ix86_fp_compare_mode (code),\n+\ttmp = gen_rtx_fmt_ee (code, VOIDmode,\n \t\t\t      ix86_compare_op0, ix86_compare_op1);\n \ttmp = gen_rtx_IF_THEN_ELSE (VOIDmode, tmp,\n \t\t\t\t    gen_rtx_LABEL_REF (VOIDmode, label),"}, {"sha": "99b9eec6ba13ea1e5db006601690a0d73c70161f", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b9aaeee6ffc45a00c689837f8828e0a72a06f1c/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b9aaeee6ffc45a00c689837f8828e0a72a06f1c/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=0b9aaeee6ffc45a00c689837f8828e0a72a06f1c", "patch": "@@ -1637,9 +1637,9 @@ subst_stack_regs_pat (insn, regstack, pat)\n \t\t&& REG_P (*src1) && REG_P (*src2)\n \t\t&& REGNO (*src1) != REGNO (*dest))\n \t     {\n-\t\trtx tmp = *src1;\n-\t\t*src1 = *src2;\n-\t\t*src2 = tmp;\n+\t\tint tmp = REGNO (*src1);\n+\t\treplace_reg (src1, REGNO (*src2));\n+\t\treplace_reg (src2, tmp);\n \t     }\n \t    break;\n "}]}