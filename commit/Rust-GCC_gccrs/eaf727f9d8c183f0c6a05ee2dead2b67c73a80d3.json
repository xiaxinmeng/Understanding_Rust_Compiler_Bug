{"sha": "eaf727f9d8c183f0c6a05ee2dead2b67c73a80d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFmNzI3ZjlkOGMxODNmMGM2YTA1ZWUyZGVhZDJiNjdjNzNhODBkMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2005-04-09T00:08:58Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2005-04-09T00:08:58Z"}, "message": "re PR libstdc++/20909 (incorrect floating point format)\n\n2005-04-08  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/20909\n\t* include/bits/locale_facets.tcc (num_put<>::_M_insert_float):\n\tDon't even try to group numbers like 2e20, i.e., no decimal\n\tpoint, scientific notation.\n\t* testsuite/22_locale/num_put/put/char/20909.cc: New.\n\t* testsuite/22_locale/num_put/put/wchar_t/20909.cc: Likewise.\n\nFrom-SVN: r97873", "tree": {"sha": "21308cd93e08a946d06dcc64d13ea52053980587", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21308cd93e08a946d06dcc64d13ea52053980587"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eaf727f9d8c183f0c6a05ee2dead2b67c73a80d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaf727f9d8c183f0c6a05ee2dead2b67c73a80d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaf727f9d8c183f0c6a05ee2dead2b67c73a80d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaf727f9d8c183f0c6a05ee2dead2b67c73a80d3/comments", "author": null, "committer": null, "parents": [{"sha": "334269b9dd52a6dbd0d8df051109f919f137fd4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/334269b9dd52a6dbd0d8df051109f919f137fd4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/334269b9dd52a6dbd0d8df051109f919f137fd4e"}], "stats": {"total": 173, "additions": 172, "deletions": 1}, "files": [{"sha": "ae6ebbafe95dfc12b9adc0a703b178fe132c89e7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf727f9d8c183f0c6a05ee2dead2b67c73a80d3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf727f9d8c183f0c6a05ee2dead2b67c73a80d3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=eaf727f9d8c183f0c6a05ee2dead2b67c73a80d3", "patch": "@@ -1,3 +1,12 @@\n+2005-04-08  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/20909\n+\t* include/bits/locale_facets.tcc (num_put<>::_M_insert_float):\n+\tDon't even try to group numbers like 2e20, i.e., no decimal\n+\tpoint, scientific notation.\n+\t* testsuite/22_locale/num_put/put/char/20909.cc: New.\n+\t* testsuite/22_locale/num_put/put/wchar_t/20909.cc: Likewise.\n+\n 2005-04-08  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* acinclude.m4 (GLIBCXX_ENABLE_SYMVERS): Define _GLIBCXX_ASM_SYMVER."}, {"sha": "0301781a2c32507e42b22566e411ae687a644825", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf727f9d8c183f0c6a05ee2dead2b67c73a80d3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf727f9d8c183f0c6a05ee2dead2b67c73a80d3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=eaf727f9d8c183f0c6a05ee2dead2b67c73a80d3", "patch": "@@ -1153,7 +1153,11 @@ namespace std\n \t__ws[__p - __ws] = __dec;\n \n       // Add grouping, if necessary.\n-      if (__lc->_M_use_grouping)\n+      // N.B. Make sure to not group things like 2e20, i.e., no decimal\n+      // point, scientific notation.\n+      if (__lc->_M_use_grouping\n+\t  && (__p || __len < 3 || (__cs[1] != 'e' && __cs[2] != 'e'\n+\t\t\t\t   && __cs[1] != 'E' && __cs[2] != 'E')))\n \t{\n \t  // Grouping can add (almost) as many separators as the\n \t  // number of digits, but no more."}, {"sha": "abb2e5ced61d1bc331ecf0628af827c2ab9b7349", "filename": "libstdc++-v3/testsuite/22_locale/num_put/put/char/20909.cc", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf727f9d8c183f0c6a05ee2dead2b67c73a80d3/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F20909.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf727f9d8c183f0c6a05ee2dead2b67c73a80d3/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F20909.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fchar%2F20909.cc?ref=eaf727f9d8c183f0c6a05ee2dead2b67c73a80d3", "patch": "@@ -0,0 +1,79 @@\n+// 2005-04-08  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2005 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 22.2.2.2.1  num_put members\n+\n+#include <locale>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/20909\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  // A locale that expects grouping.\n+  locale loc_de = __gnu_test::try_named_locale(\"de_DE\");\n+\n+  const string empty;\n+  string result;\n+\n+  ostringstream oss;\n+  oss.imbue(loc_de);\n+  const num_put<char>& np = use_facet<num_put<char> >(oss.getloc()); \n+\n+  double d0 = 2e20;\n+  double d1 = -2e20;\n+\n+  oss.str(empty);\n+  oss.clear();\n+  np.put(oss.rdbuf(), oss, '*', d0);\n+  result = oss.str();\n+  VERIFY( result == \"2e+20\" );\n+\n+  oss.str(empty);\n+  oss.clear();\n+  np.put(oss.rdbuf(), oss, '*', d1);\n+  result = oss.str();\n+  VERIFY( result == \"-2e+20\" );\n+\n+  oss.str(empty);\n+  oss.clear();\n+  oss.setf(ios::uppercase);\n+  np.put(oss.rdbuf(), oss, '*', d0);\n+  result = oss.str();\n+  VERIFY( result == \"2E+20\" );\n+\n+  oss.str(empty);\n+  oss.clear();\n+  oss.setf(ios::showpos);\n+  np.put(oss.rdbuf(), oss, '*', d0);\n+  result = oss.str();\n+  VERIFY( result == \"+2E+20\" );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}\n+\n+"}, {"sha": "226971853c45b0a531d847f4a6e0e111fadcf1b4", "filename": "libstdc++-v3/testsuite/22_locale/num_put/put/wchar_t/20909.cc", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaf727f9d8c183f0c6a05ee2dead2b67c73a80d3/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F20909.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaf727f9d8c183f0c6a05ee2dead2b67c73a80d3/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F20909.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put%2Fput%2Fwchar_t%2F20909.cc?ref=eaf727f9d8c183f0c6a05ee2dead2b67c73a80d3", "patch": "@@ -0,0 +1,79 @@\n+// 2005-04-08  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2005 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 22.2.2.2.1  num_put members\n+\n+#include <locale>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/20909\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  // A locale that expects grouping.\n+  locale loc_de = __gnu_test::try_named_locale(\"de_DE\");\n+\n+  const wstring empty;\n+  wstring result;\n+\n+  wostringstream oss;\n+  oss.imbue(loc_de);\n+  const num_put<wchar_t>& np = use_facet<num_put<wchar_t> >(oss.getloc()); \n+\n+  double d0 = 2e20;\n+  double d1 = -2e20;\n+\n+  oss.str(empty);\n+  oss.clear();\n+  np.put(oss.rdbuf(), oss, L'*', d0);\n+  result = oss.str();\n+  VERIFY( result == L\"2e+20\" );\n+\n+  oss.str(empty);\n+  oss.clear();\n+  np.put(oss.rdbuf(), oss, L'*', d1);\n+  result = oss.str();\n+  VERIFY( result == L\"-2e+20\" );\n+\n+  oss.str(empty);\n+  oss.clear();\n+  oss.setf(ios::uppercase);\n+  np.put(oss.rdbuf(), oss, L'*', d0);\n+  result = oss.str();\n+  VERIFY( result == L\"2E+20\" );\n+\n+  oss.str(empty);\n+  oss.clear();\n+  oss.setf(ios::showpos);\n+  np.put(oss.rdbuf(), oss, L'*', d0);\n+  result = oss.str();\n+  VERIFY( result == L\"+2E+20\" );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}\n+\n+"}]}