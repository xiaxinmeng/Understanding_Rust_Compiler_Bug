{"sha": "41ba34dbe7e8494254b524e8e31e394a1e6c6585", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFiYTM0ZGJlN2U4NDk0MjU0YjUyNGU4ZTMxZTM5NGExZTZjNjU4NQ==", "commit": {"author": {"name": "Emmanuel Briot", "email": "briot@adacore.com", "date": "2011-08-03T15:30:38Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-03T15:30:38Z"}, "message": "prj.ads, [...] (Queue.Insert): now also inserts the \"roots\" for a main.\n\n2011-08-03  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj.ads, makeutl.adb, makeutl.ads (Queue.Insert): now also inserts\n\tthe \"roots\" for a main.\n\t(Fill_From_Project): add support for aggregate projects. Main units\n\tin aggregated projects are now automatically added in the list of\n\tfiles to build (although this fails later on in gprbuild, because\n\tthese files are not using the root proejct tree, so this needs\n\tfurther cleanup)\n\t* gcc-interface/Make-lang.in: Update dependencies.\n\nFrom-SVN: r177287", "tree": {"sha": "b1948d16356c5cde22a3e4a23b2805074f88b61d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1948d16356c5cde22a3e4a23b2805074f88b61d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41ba34dbe7e8494254b524e8e31e394a1e6c6585", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41ba34dbe7e8494254b524e8e31e394a1e6c6585", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41ba34dbe7e8494254b524e8e31e394a1e6c6585", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41ba34dbe7e8494254b524e8e31e394a1e6c6585/comments", "author": {"login": "briot", "id": 42402, "node_id": "MDQ6VXNlcjQyNDAy", "avatar_url": "https://avatars.githubusercontent.com/u/42402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briot", "html_url": "https://github.com/briot", "followers_url": "https://api.github.com/users/briot/followers", "following_url": "https://api.github.com/users/briot/following{/other_user}", "gists_url": "https://api.github.com/users/briot/gists{/gist_id}", "starred_url": "https://api.github.com/users/briot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briot/subscriptions", "organizations_url": "https://api.github.com/users/briot/orgs", "repos_url": "https://api.github.com/users/briot/repos", "events_url": "https://api.github.com/users/briot/events{/privacy}", "received_events_url": "https://api.github.com/users/briot/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fccd42a9a5dca36c6c126b0f9fa632e8dd5f30e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fccd42a9a5dca36c6c126b0f9fa632e8dd5f30e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fccd42a9a5dca36c6c126b0f9fa632e8dd5f30e7"}], "stats": {"total": 571, "additions": 435, "deletions": 136}, "files": [{"sha": "574ed80b5b76325358671ced604dff767d6fd3a3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41ba34dbe7e8494254b524e8e31e394a1e6c6585/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41ba34dbe7e8494254b524e8e31e394a1e6c6585/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=41ba34dbe7e8494254b524e8e31e394a1e6c6585", "patch": "@@ -1,3 +1,14 @@\n+2011-08-03  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj.ads, makeutl.adb, makeutl.ads (Queue.Insert): now also inserts\n+\tthe \"roots\" for a main.\n+\t(Fill_From_Project): add support for aggregate projects. Main units\n+\tin aggregated projects are now automatically added in the list of\n+\tfiles to build (although this fails later on in gprbuild, because\n+\tthese files are not using the root proejct tree, so this needs\n+\tfurther cleanup)\n+\t* gcc-interface/Make-lang.in: Update dependencies.\n+\n 2011-08-03  Yannick Moy  <moy@adacore.com>\n \n \t* sem_ch4.adb (Analyze_Conditional_Expression): only allow boolean"}, {"sha": "c418482aff064d81e5c54b7500213a6560ca2987", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 97, "deletions": 92, "changes": 189, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41ba34dbe7e8494254b524e8e31e394a1e6c6585/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41ba34dbe7e8494254b524e8e31e394a1e6c6585/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=41ba34dbe7e8494254b524e8e31e394a1e6c6585", "patch": "@@ -1297,7 +1297,10 @@ ada/a-ioexce.o : ada/ada.ads ada/a-except.ads ada/a-ioexce.ads \\\n ada/ada.o : ada/ada.ads ada/system.ads \n \n ada/alfa.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n-   ada/a-uncdea.ads ada/alfa.ads ada/alfa.adb ada/gnat.ads ada/g-table.ads \\\n+   ada/a-uncdea.ads ada/alfa.ads ada/alfa.adb ada/alloc.ads ada/atree.ads \\\n+   ada/einfo.ads ada/snames.ads ada/interfac.ads ada/namet.ads \\\n+   ada/s-conca2.ads ada/sinfo.ads ada/table.ads ada/uintp.ads \\\n+   ada/urealp.ads ada/gnat.ads ada/g-table.ads \\\n    ada/g-table.adb ada/hostparm.ads ada/output.ads ada/output.adb \\\n    ada/put_alfa.ads ada/put_alfa.adb ada/system.ads ada/s-exctab.ads \\\n    ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-soflin.ads \\\n@@ -1862,27 +1865,27 @@ ada/exp_ch13.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/eval_fat.ads ada/exp_ch11.ads ada/exp_ch13.ads ada/exp_ch13.adb \\\n    ada/exp_ch2.ads ada/exp_ch3.ads ada/exp_ch4.ads ada/exp_ch6.ads \\\n    ada/exp_imgv.ads ada/exp_pakd.ads ada/exp_tss.ads ada/exp_util.ads \\\n-   ada/expander.ads ada/fname.ads ada/freeze.ads ada/get_targ.ads \\\n-   ada/gnat.ads ada/g-htable.ads ada/hlo.ads ada/hostparm.ads \\\n-   ada/inline.ads ada/interfac.ads ada/lib.ads ada/lib-load.ads \\\n-   ada/namet.ads ada/namet.adb ada/nlists.ads ada/nlists.adb ada/nmake.ads \\\n-   ada/nmake.adb ada/opt.ads ada/output.ads ada/restrict.ads \\\n-   ada/rident.ads ada/rtsfind.ads ada/sem.ads ada/sem.adb ada/sem_attr.ads \\\n-   ada/sem_aux.ads ada/sem_ch10.ads ada/sem_ch11.ads ada/sem_ch12.ads \\\n-   ada/sem_ch13.ads ada/sem_ch2.ads ada/sem_ch3.ads ada/sem_ch4.ads \\\n-   ada/sem_ch5.ads ada/sem_ch6.ads ada/sem_ch7.ads ada/sem_ch8.ads \\\n-   ada/sem_ch9.ads ada/sem_eval.ads ada/sem_prag.ads ada/sem_res.ads \\\n-   ada/sem_util.ads ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb \\\n-   ada/sinput.ads ada/snames.ads ada/sprint.ads ada/stand.ads \\\n-   ada/system.ads ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads \\\n-   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n-   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n-   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n-   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n-   ada/targparm.ads ada/tbuild.ads ada/tree_io.ads ada/ttypes.ads \\\n-   ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/validsw.ads \\\n-   ada/widechar.ads \n+   ada/expander.ads ada/fname.ads ada/fname-uf.ads ada/freeze.ads \\\n+   ada/get_targ.ads ada/gnat.ads ada/g-htable.ads ada/hlo.ads \\\n+   ada/hostparm.ads ada/inline.ads ada/interfac.ads ada/lib.ads \\\n+   ada/lib-load.ads ada/namet.ads ada/namet.adb ada/nlists.ads \\\n+   ada/nlists.adb ada/nmake.ads ada/nmake.adb ada/opt.ads ada/output.ads \\\n+   ada/restrict.ads ada/restrict.adb ada/rident.ads ada/rtsfind.ads \\\n+   ada/sem.ads ada/sem.adb ada/sem_attr.ads ada/sem_aux.ads \\\n+   ada/sem_ch10.ads ada/sem_ch11.ads ada/sem_ch12.ads ada/sem_ch13.ads \\\n+   ada/sem_ch2.ads ada/sem_ch3.ads ada/sem_ch4.ads ada/sem_ch5.ads \\\n+   ada/sem_ch6.ads ada/sem_ch7.ads ada/sem_ch8.ads ada/sem_ch9.ads \\\n+   ada/sem_eval.ads ada/sem_prag.ads ada/sem_res.ads ada/sem_util.ads \\\n+   ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb ada/sinput.ads \\\n+   ada/snames.ads ada/sprint.ads ada/stand.ads ada/system.ads \\\n+   ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n+   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads \\\n+   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n+   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n+   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n+   ada/tbuild.ads ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n+   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n+   ada/unchdeal.ads ada/urealp.ads ada/validsw.ads ada/widechar.ads \n \n ada/exp_ch2.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -2072,34 +2075,35 @@ ada/exp_ch7.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n    ada/atree.adb ada/casing.ads ada/checks.ads ada/csets.ads ada/debug.ads \\\n    ada/debug_a.ads ada/einfo.ads ada/einfo.adb ada/elists.ads \\\n-   ada/err_vars.ads ada/errout.ads ada/errout.adb ada/erroutc.ads \\\n-   ada/erroutc.adb ada/exp_aggr.ads ada/exp_ch11.ads ada/exp_ch6.ads \\\n-   ada/exp_ch7.ads ada/exp_ch7.adb ada/exp_ch9.ads ada/exp_dbug.ads \\\n-   ada/exp_disp.ads ada/exp_dist.ads ada/exp_tss.ads ada/exp_util.ads \\\n-   ada/exp_util.adb ada/expander.ads ada/fname.ads ada/fname-uf.ads \\\n-   ada/freeze.ads ada/get_targ.ads ada/gnat.ads ada/g-hesorg.ads \\\n-   ada/g-htable.ads ada/gnatvsn.ads ada/hlo.ads ada/hostparm.ads \\\n-   ada/inline.ads ada/interfac.ads ada/itypes.ads ada/lib.ads ada/lib.adb \\\n-   ada/lib-list.adb ada/lib-load.ads ada/lib-sort.adb ada/namet.ads \\\n-   ada/namet.adb ada/nlists.ads ada/nlists.adb ada/nmake.ads ada/nmake.adb \\\n-   ada/opt.ads ada/output.ads ada/restrict.ads ada/restrict.adb \\\n-   ada/rident.ads ada/rtsfind.ads ada/rtsfind.adb ada/scans.ads \\\n-   ada/sem.ads ada/sem.adb ada/sem_attr.ads ada/sem_aux.ads \\\n-   ada/sem_aux.adb ada/sem_ch10.ads ada/sem_ch11.ads ada/sem_ch12.ads \\\n-   ada/sem_ch13.ads ada/sem_ch2.ads ada/sem_ch3.ads ada/sem_ch4.ads \\\n-   ada/sem_ch5.ads ada/sem_ch6.ads ada/sem_ch7.ads ada/sem_ch8.ads \\\n-   ada/sem_ch9.ads ada/sem_dist.ads ada/sem_eval.ads ada/sem_prag.ads \\\n-   ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads ada/sinfo.ads \\\n-   ada/sinfo.adb ada/sinput.ads ada/snames.ads ada/stand.ads \\\n-   ada/stringt.ads ada/stylesw.ads ada/system.ads ada/s-exctab.ads \\\n-   ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads \\\n-   ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads \\\n-   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n-   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n-   ada/table.ads ada/table.adb ada/targparm.ads ada/tbuild.ads \\\n-   ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n-   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n-   ada/unchdeal.ads ada/urealp.ads ada/validsw.ads ada/widechar.ads \n+   ada/elists.adb ada/err_vars.ads ada/errout.ads ada/errout.adb \\\n+   ada/erroutc.ads ada/erroutc.adb ada/exp_aggr.ads ada/exp_ch11.ads \\\n+   ada/exp_ch6.ads ada/exp_ch7.ads ada/exp_ch7.adb ada/exp_ch9.ads \\\n+   ada/exp_dbug.ads ada/exp_disp.ads ada/exp_dist.ads ada/exp_tss.ads \\\n+   ada/exp_util.ads ada/exp_util.adb ada/expander.ads ada/fname.ads \\\n+   ada/fname-uf.ads ada/freeze.ads ada/get_targ.ads ada/gnat.ads \\\n+   ada/g-hesorg.ads ada/g-htable.ads ada/gnatvsn.ads ada/hlo.ads \\\n+   ada/hostparm.ads ada/inline.ads ada/interfac.ads ada/itypes.ads \\\n+   ada/lib.ads ada/lib.adb ada/lib-list.adb ada/lib-load.ads \\\n+   ada/lib-sort.adb ada/namet.ads ada/namet.adb ada/nlists.ads \\\n+   ada/nlists.adb ada/nmake.ads ada/nmake.adb ada/opt.ads ada/output.ads \\\n+   ada/restrict.ads ada/restrict.adb ada/rident.ads ada/rtsfind.ads \\\n+   ada/rtsfind.adb ada/scans.ads ada/sem.ads ada/sem.adb ada/sem_attr.ads \\\n+   ada/sem_aux.ads ada/sem_aux.adb ada/sem_ch10.ads ada/sem_ch11.ads \\\n+   ada/sem_ch12.ads ada/sem_ch13.ads ada/sem_ch2.ads ada/sem_ch3.ads \\\n+   ada/sem_ch4.ads ada/sem_ch5.ads ada/sem_ch6.ads ada/sem_ch7.ads \\\n+   ada/sem_ch8.ads ada/sem_ch9.ads ada/sem_dist.ads ada/sem_eval.ads \\\n+   ada/sem_prag.ads ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads \\\n+   ada/sinfo.ads ada/sinfo.adb ada/sinput.ads ada/snames.ads ada/stand.ads \\\n+   ada/stringt.ads ada/stringt.adb ada/stylesw.ads ada/system.ads \\\n+   ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n+   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads \\\n+   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n+   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n+   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n+   ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads \\\n+   ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n+   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/validsw.ads \\\n+   ada/widechar.ads \n \n ada/exp_ch8.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -2122,12 +2126,13 @@ ada/exp_ch8.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/sinfo.adb ada/sinput.ads ada/snames.ads ada/stand.ads \\\n    ada/stringt.ads ada/system.ads ada/s-exctab.ads ada/s-htable.ads \\\n    ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n-   ada/s-rident.ads ada/s-secsta.ads ada/s-stalib.ads ada/s-stoele.ads \\\n-   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n-   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n-   ada/tbuild.ads ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n-   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n-   ada/unchdeal.ads ada/urealp.ads ada/validsw.ads ada/widechar.ads \n+   ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads \\\n+   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n+   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n+   ada/table.adb ada/targparm.ads ada/tbuild.ads ada/tree_io.ads \\\n+   ada/ttypes.ads ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n+   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/validsw.ads \\\n+   ada/widechar.ads \n \n ada/exp_ch9.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -4483,42 +4488,42 @@ ada/sem_res.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n    ada/atree.adb ada/casing.ads ada/checks.ads ada/checks.adb \\\n    ada/csets.ads ada/debug.ads ada/debug_a.ads ada/debug_a.adb \\\n-   ada/einfo.ads ada/einfo.adb ada/elists.ads ada/elists.adb \\\n-   ada/err_vars.ads ada/errout.ads ada/errout.adb ada/erroutc.ads \\\n-   ada/erroutc.adb ada/eval_fat.ads ada/exp_aggr.ads ada/exp_ch11.ads \\\n-   ada/exp_ch2.ads ada/exp_ch4.ads ada/exp_ch6.ads ada/exp_ch7.ads \\\n-   ada/exp_code.ads ada/exp_disp.ads ada/exp_dist.ads ada/exp_pakd.ads \\\n-   ada/exp_tss.ads ada/exp_util.ads ada/exp_util.adb ada/expander.ads \\\n-   ada/fname.ads ada/fname-uf.ads ada/freeze.ads ada/get_targ.ads \\\n-   ada/gnat.ads ada/g-hesorg.ads ada/g-htable.ads ada/gnatvsn.ads \\\n-   ada/hlo.ads ada/hostparm.ads ada/inline.ads ada/interfac.ads \\\n-   ada/itypes.ads ada/lib.ads ada/lib.adb ada/lib-list.adb \\\n-   ada/lib-load.ads ada/lib-sort.adb ada/lib-util.ads ada/lib-xref.ads \\\n-   ada/namet.ads ada/namet.adb ada/nlists.ads ada/nlists.adb ada/nmake.ads \\\n-   ada/nmake.adb ada/opt.ads ada/output.ads ada/par_sco.ads \\\n-   ada/put_alfa.ads ada/restrict.ads ada/restrict.adb ada/rident.ads \\\n-   ada/rtsfind.ads ada/rtsfind.adb ada/scans.ads ada/sem.ads ada/sem.adb \\\n-   ada/sem_aggr.ads ada/sem_attr.ads ada/sem_aux.ads ada/sem_aux.adb \\\n-   ada/sem_cat.ads ada/sem_ch10.ads ada/sem_ch11.ads ada/sem_ch12.ads \\\n-   ada/sem_ch13.ads ada/sem_ch13.adb ada/sem_ch2.ads ada/sem_ch3.ads \\\n-   ada/sem_ch4.ads ada/sem_ch5.ads ada/sem_ch6.ads ada/sem_ch7.ads \\\n-   ada/sem_ch8.ads ada/sem_ch9.ads ada/sem_disp.ads ada/sem_dist.ads \\\n-   ada/sem_elab.ads ada/sem_elim.ads ada/sem_eval.ads ada/sem_eval.adb \\\n-   ada/sem_intr.ads ada/sem_prag.ads ada/sem_res.ads ada/sem_res.adb \\\n-   ada/sem_type.ads ada/sem_util.ads ada/sem_util.adb ada/sem_warn.ads \\\n-   ada/sem_warn.adb ada/sinfo.ads ada/sinfo.adb ada/sinfo-cn.ads \\\n-   ada/sinput.ads ada/sinput.adb ada/snames.ads ada/sprint.ads \\\n-   ada/stand.ads ada/stringt.ads ada/stringt.adb ada/style.ads \\\n-   ada/styleg.ads ada/styleg.adb ada/stylesw.ads ada/system.ads \\\n-   ada/s-carun8.ads ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads \\\n-   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n-   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n-   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n-   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n-   ada/targparm.ads ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads \\\n-   ada/ttypes.ads ada/types.ads ada/types.adb ada/uintp.ads ada/uintp.adb \\\n-   ada/uname.ads ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads \\\n-   ada/urealp.adb ada/validsw.ads ada/warnsw.ads ada/widechar.ads \n+   ada/einfo.ads ada/einfo.adb ada/elists.ads ada/err_vars.ads \\\n+   ada/errout.ads ada/errout.adb ada/erroutc.ads ada/erroutc.adb \\\n+   ada/eval_fat.ads ada/exp_aggr.ads ada/exp_ch11.ads ada/exp_ch2.ads \\\n+   ada/exp_ch4.ads ada/exp_ch6.ads ada/exp_ch7.ads ada/exp_code.ads \\\n+   ada/exp_disp.ads ada/exp_dist.ads ada/exp_pakd.ads ada/exp_tss.ads \\\n+   ada/exp_util.ads ada/exp_util.adb ada/expander.ads ada/fname.ads \\\n+   ada/fname-uf.ads ada/freeze.ads ada/get_targ.ads ada/gnat.ads \\\n+   ada/g-hesorg.ads ada/g-htable.ads ada/gnatvsn.ads ada/hlo.ads \\\n+   ada/hostparm.ads ada/inline.ads ada/interfac.ads ada/itypes.ads \\\n+   ada/lib.ads ada/lib.adb ada/lib-list.adb ada/lib-load.ads \\\n+   ada/lib-sort.adb ada/lib-util.ads ada/lib-xref.ads ada/namet.ads \\\n+   ada/namet.adb ada/nlists.ads ada/nlists.adb ada/nmake.ads ada/nmake.adb \\\n+   ada/opt.ads ada/output.ads ada/par_sco.ads ada/put_alfa.ads \\\n+   ada/restrict.ads ada/restrict.adb ada/rident.ads ada/rtsfind.ads \\\n+   ada/rtsfind.adb ada/scans.ads ada/sem.ads ada/sem.adb ada/sem_aggr.ads \\\n+   ada/sem_attr.ads ada/sem_aux.ads ada/sem_aux.adb ada/sem_cat.ads \\\n+   ada/sem_ch10.ads ada/sem_ch11.ads ada/sem_ch12.ads ada/sem_ch13.ads \\\n+   ada/sem_ch13.adb ada/sem_ch2.ads ada/sem_ch3.ads ada/sem_ch4.ads \\\n+   ada/sem_ch5.ads ada/sem_ch6.ads ada/sem_ch7.ads ada/sem_ch8.ads \\\n+   ada/sem_ch9.ads ada/sem_disp.ads ada/sem_dist.ads ada/sem_elab.ads \\\n+   ada/sem_elim.ads ada/sem_eval.ads ada/sem_eval.adb ada/sem_intr.ads \\\n+   ada/sem_prag.ads ada/sem_res.ads ada/sem_res.adb ada/sem_type.ads \\\n+   ada/sem_util.ads ada/sem_util.adb ada/sem_warn.ads ada/sem_warn.adb \\\n+   ada/sinfo.ads ada/sinfo.adb ada/sinfo-cn.ads ada/sinput.ads \\\n+   ada/sinput.adb ada/snames.ads ada/sprint.ads ada/stand.ads \\\n+   ada/stringt.ads ada/stringt.adb ada/style.ads ada/styleg.ads \\\n+   ada/styleg.adb ada/stylesw.ads ada/system.ads ada/s-carun8.ads \\\n+   ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n+   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads \\\n+   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n+   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n+   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n+   ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads \\\n+   ada/types.ads ada/types.adb ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n+   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/urealp.adb \\\n+   ada/validsw.ads ada/warnsw.ads ada/widechar.ads \n \n ada/sem_scil.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\"}, {"sha": "c8c9aefdf3ca2ba4505969a400e69e5ddb0e6577", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 287, "deletions": 36, "changes": 323, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41ba34dbe7e8494254b524e8e31e394a1e6c6585/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41ba34dbe7e8494254b524e8e31e394a1e6c6585/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=41ba34dbe7e8494254b524e8e31e394a1e6c6585", "patch": "@@ -44,6 +44,7 @@ with Ada.Command_Line; use Ada.Command_Line;\n with GNAT.Case_Util;            use GNAT.Case_Util;\n with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n with GNAT.HTable;\n+with GNAT.Regexp;               use GNAT.Regexp;\n \n package body Makeutl is\n \n@@ -1230,15 +1231,18 @@ package body Makeutl is\n       procedure Add_Main\n         (Name     : String;\n          Index    : Int := 0;\n-         Location : Source_Ptr := No_Location)\n+         Location : Source_Ptr := No_Location;\n+         Project  : Project_Id := No_Project;\n+         Tree     : Project_Tree_Ref := null)\n       is\n       begin\n          Name_Len := 0;\n          Add_Str_To_Name_Buffer (Name);\n          Canonical_Case_File_Name (Name_Buffer (1 .. Name_Len));\n \n          Names.Increment_Last;\n-         Names.Table (Names.Last) := (Name_Find, Index, Location, No_Source);\n+         Names.Table (Names.Last) :=\n+           (Name_Find, Index, Location, No_Source, Project, Tree);\n       end Add_Main;\n \n       --------------------------\n@@ -1283,29 +1287,52 @@ package body Makeutl is\n \n       procedure Fill_From_Project\n         (Root_Project : Project_Id;\n-         Project_Tree : Project_Tree_Ref) is\n+         Project_Tree : Project_Tree_Ref)\n+      is\n+         procedure Add_Mains_From_Project\n+           (Project : Project_Id; Tree    : Project_Tree_Ref);\n+         --  Add the main units from this project into Mains\n+\n+         procedure Add_Mains_From_Project\n+           (Project : Project_Id;\n+            Tree    : Project_Tree_Ref)\n+         is\n+            List    : String_List_Id;\n+            Element : String_Element;\n+            Agg     : Aggregated_Project_List;\n+         begin\n+            Debug_Output (\"Add_Mains_From_Project\", Project.Name);\n+            case Project.Qualifier is\n+               when Aggregate =>\n+                  Agg := Project.Aggregated_Projects;\n+                  while Agg /= null loop\n+                     Add_Mains_From_Project (Agg.Project, Agg.Tree);\n+                     Agg := Agg.Next;\n+                  end loop;\n+\n+               when others =>\n+                  List := Project.Mains;\n+                  if List /= Prj.Nil_String then\n+                     --  The attribute Main is not an empty list.\n+                     --  Get the mains in the list\n+\n+                     while List /= Prj.Nil_String loop\n+                        Element := Tree.Shared.String_Elements.Table (List);\n+                        Debug_Output (\"Add_Main\", Element.Value);\n+                        Add_Main (Name     => Get_Name_String (Element.Value),\n+                                  Index    => Element.Index,\n+                                  Location => Element.Location,\n+                                  Project  => Project,\n+                                  Tree     => Tree);\n+                        List := Element.Next;\n+                     end loop;\n+                  end if;\n+            end case;\n+         end Add_Mains_From_Project;\n+\n       begin\n          if Number_Of_Mains = 0 then\n-            declare\n-               List    : String_List_Id := Root_Project.Mains;\n-               Element : String_Element;\n-\n-            begin\n-               if List /= Prj.Nil_String then\n-                  --  The attribute Main is not an empty list.\n-                  --  Get the mains in the list\n-\n-                  while List /= Prj.Nil_String loop\n-                     Element :=\n-                       Project_Tree.Shared.String_Elements.Table (List);\n-\n-                     Add_Main (Name     => Get_Name_String (Element.Value),\n-                               Index    => Element.Index,\n-                               Location => Element.Location);\n-                     List := Element.Next;\n-                  end loop;\n-               end if;\n-            end;\n+            Add_Mains_From_Project (Root_Project, Project_Tree);\n          end if;\n \n          --  If there are mains, check that they are sources of the main\n@@ -1314,7 +1341,7 @@ package body Makeutl is\n          if Mains.Number_Of_Mains > 0 then\n             for J in Names.First .. Names.Last loop\n                declare\n-                  File       : constant Main_Info := Names.Table (J);\n+                  File       : Main_Info := Names.Table (J);\n                   Main_Id    : File_Name_Type := File.File;\n                   Main       : constant String := Get_Name_String (Main_Id);\n                   Project    : Project_Id;\n@@ -1335,11 +1362,25 @@ package body Makeutl is\n                      end if;\n                   end if;\n \n+                  --  If no project or tree was specified for the main, it came\n+                  --  from the command line. In this case, it needs to belong\n+                  --  to the root project.\n+                  --  Note that the assignments below will not modify inside\n+                  --  the table itself.\n+\n+                  if File.Project = null then\n+                     File.Project := Root_Project;\n+                  end if;\n+\n+                  if File.Tree = null then\n+                     File.Tree := Project_Tree;\n+                  end if;\n+\n                   --  First, look for the main as specified.\n \n                   Source := Find_Source\n-                    (In_Tree   => Project_Tree,\n-                     Project   => Project,\n+                    (In_Tree   => File.Tree,\n+                     Project   => File.Project,\n                      Base_Name => File.File,\n                      Index     => File.Index);\n \n@@ -1350,11 +1391,11 @@ package body Makeutl is\n                         --  Main already has a canonical casing\n                         Main : constant String := Get_Name_String (Main_Id);\n                      begin\n-                        Project := Root_Project;\n+                        Project := File.Project;\n                         while Source = No_Source\n                           and then Project /= No_Project\n                         loop\n-                           Iter := For_Each_Source (Project_Tree, Project);\n+                           Iter := For_Each_Source (File.Tree, Project);\n                            loop\n                               Source := Prj.Element (Iter);\n                               exit when Source = No_Source;\n@@ -1387,8 +1428,10 @@ package body Makeutl is\n                   end if;\n \n                   if Source /= No_Source then\n-                     Names.Table (J).File := Source.File;\n-                     Names.Table (J).Source := Source;\n+                     Names.Table (J).File    := Source.File;\n+                     Names.Table (J).Project := File.Project;\n+                     Names.Table (J).Tree    := File.Tree;\n+                     Names.Table (J).Source  := Source;\n \n                   elsif File.Location /= No_Location then\n                      --  If the main is declared in package Builder of the\n@@ -1760,6 +1803,9 @@ package body Makeutl is\n       --  Whether S has already been processed. This marks the source as\n       --  processed, if it hasn't already been processed.\n \n+      function Insert_No_Roots (Source  : Source_Info) return Boolean;\n+      --  Insert Source, but do not look for its roots (see doc for Insert).\n+\n       -------------------\n       -- Was_Processed --\n       -------------------\n@@ -1951,12 +1997,16 @@ package body Makeutl is\n          end if;\n       end Initialize;\n \n-      ------------\n-      -- Insert --\n-      ------------\n+      ---------------------\n+      -- Insert_No_Roots --\n+      ---------------------\n \n-      function Insert (Source  : Source_Info) return Boolean is\n+      function Insert_No_Roots (Source  : Source_Info) return Boolean is\n       begin\n+         pragma Assert\n+           (Source.Format = Format_Gnatmake\n+            or else Source.Id /= No_Source);\n+\n          --  Only insert in the Q if it is not already done, to avoid\n          --  simultaneous compilations if -jnnn is used.\n \n@@ -1987,18 +2037,217 @@ package body Makeutl is\n             Write_Eol;\n          end if;\n \n+         return True;\n+      end Insert_No_Roots;\n+\n+      ------------\n+      -- Insert --\n+      ------------\n+\n+      function Insert\n+        (Source  : Source_Info; With_Roots : Boolean := False) return Boolean\n+      is\n+         Root_Arr     : Array_Element_Id;\n+         Roots        : Variable_Value;\n+         List         : String_List_Id;\n+         Elem         : String_Element;\n+         Unit_Name    : Name_Id;\n+         Pat_Root     : Boolean;\n+         Root_Pattern : Regexp;\n+         Root_Found   : Boolean;\n+         Roots_Found  : Boolean;\n+         Dummy        : Boolean;\n+         Root_Source  : Prj.Source_Id;\n+         Iter         : Source_Iterator;\n+         pragma Unreferenced (Dummy);\n+\n+      begin\n+         if not Insert_No_Roots (Source) then\n+            --  Was already in the queue\n+            return False;\n+         end if;\n+\n+         if With_Roots and then Source.Format = Format_Gprbuild then\n+            Debug_Output (\"Looking for roots of\", Name_Id (Source.Id.File));\n+\n+            Root_Arr :=\n+              Prj.Util.Value_Of\n+                (Name      => Name_Roots,\n+                 In_Arrays => Source.Id.Project.Decl.Arrays,\n+                 Shared    => Source.Tree.Shared);\n+\n+            Roots :=\n+              Prj.Util.Value_Of\n+                (Index     => Name_Id (Source.Id.File),\n+                 Src_Index => 0,\n+                 In_Array  => Root_Arr,\n+                 Shared    => Source.Tree.Shared);\n+\n+            --  If there is no roots for the specific main, try the language\n+\n+            if Roots = Nil_Variable_Value then\n+               Roots :=\n+                 Prj.Util.Value_Of\n+                   (Index                  => Source.Id.Language.Name,\n+                    Src_Index              => 0,\n+                    In_Array               => Root_Arr,\n+                    Shared                 => Source.Tree.Shared,\n+                    Force_Lower_Case_Index => True);\n+            end if;\n+\n+            --  Then try \"*\"\n+\n+            if Roots = Nil_Variable_Value then\n+               Name_Len := 1;\n+               Name_Buffer (1) := '*';\n+\n+               Roots :=\n+                 Prj.Util.Value_Of\n+                   (Index                  => Name_Find,\n+                    Src_Index              => 0,\n+                    In_Array               => Root_Arr,\n+                    Shared                 => Source.Tree.Shared,\n+                    Force_Lower_Case_Index => True);\n+            end if;\n+\n+            if Roots = Nil_Variable_Value then\n+               Debug_Output (\"   -> no roots declared\");\n+            else\n+               List := Roots.Values;\n+\n+               Pattern_Loop :\n+               while List /= Nil_String loop\n+                  Elem := Source.Tree.Shared.String_Elements.Table (List);\n+                  Get_Name_String (Elem.Value);\n+                  To_Lower (Name_Buffer (1 .. Name_Len));\n+                  Unit_Name := Name_Find;\n+\n+                  --  Check if it is a unit name or a pattern\n+\n+                  Pat_Root := False;\n+\n+                  for J in 1 .. Name_Len loop\n+                     if Name_Buffer (J) not in 'a' .. 'z'\n+                       and then Name_Buffer (J) not in '0' .. '9'\n+                       and then Name_Buffer (J) /= '_'\n+                       and then Name_Buffer (J) /= '.'\n+                     then\n+                        Pat_Root := True;\n+                        exit;\n+                     end if;\n+                  end loop;\n+\n+                  if Pat_Root then\n+                     begin\n+                        Root_Pattern :=\n+                          Compile\n+                            (Pattern => Name_Buffer (1 .. Name_Len),\n+                             Glob    => True);\n+\n+                     exception\n+                        when Error_In_Regexp =>\n+                           Err_Vars.Error_Msg_Name_1 := Unit_Name;\n+                           Errutil.Error_Msg\n+                             (\"invalid pattern %\", Roots.Location);\n+                           exit Pattern_Loop;\n+                     end;\n+                  end if;\n+\n+                  Roots_Found := False;\n+                  Iter        := For_Each_Source (Source.Tree);\n+\n+                  Source_Loop :\n+                  loop\n+                     Root_Source := Prj.Element (Iter);\n+                     exit Source_Loop when Root_Source = No_Source;\n+\n+                     Root_Found := False;\n+                     if Pat_Root then\n+                        Root_Found := Root_Source.Unit /= No_Unit_Index\n+                          and then Match\n+                            (Get_Name_String (Root_Source.Unit.Name),\n+                             Root_Pattern);\n+\n+                     else\n+                        Root_Found :=\n+                          Root_Source.Unit /= No_Unit_Index\n+                          and then Root_Source.Unit.Name = Unit_Name;\n+                     end if;\n+\n+                     if Root_Found then\n+                        case Root_Source.Kind is\n+                        when Impl =>\n+                           null;\n+\n+                        when Spec =>\n+                           Root_Found := Other_Part (Root_Source) = No_Source;\n+\n+                        when Sep =>\n+                           Root_Found := False;\n+                        end case;\n+                     end if;\n+\n+                     if Root_Found then\n+                        Roots_Found := True;\n+                        Debug_Output\n+                          (\"   -> \", Name_Id (Root_Source.Display_File));\n+                        Dummy := Queue.Insert_No_Roots\n+                          (Source => (Format => Format_Gprbuild,\n+                                      Tree   => Source.Tree,\n+                                      Id     => Root_Source));\n+\n+                        Initialize_Source_Record (Root_Source);\n+\n+                        if Other_Part (Root_Source) /= No_Source then\n+                           Initialize_Source_Record (Other_Part (Root_Source));\n+                        end if;\n+\n+                        --  Save the root for the binder.\n+\n+                        Source.Id.Roots := new Source_Roots'\n+                          (Root => Root_Source,\n+                           Next => Source.Id.Roots);\n+\n+                        exit Source_Loop when not Pat_Root;\n+                     end if;\n+\n+                     Next (Iter);\n+                  end loop Source_Loop;\n+\n+                  if not Roots_Found then\n+                     if Pat_Root then\n+                        if not Quiet_Output then\n+                           Error_Msg_Name_1 := Unit_Name;\n+                           Errutil.Error_Msg\n+                             (\"?no unit matches pattern %\", Roots.Location);\n+                        end if;\n+\n+                     else\n+                        Errutil.Error_Msg\n+                          (\"Unit \" & Get_Name_String (Unit_Name)\n+                           & \" does not exist\", Roots.Location);\n+                     end if;\n+                  end if;\n+\n+                  List := Elem.Next;\n+               end loop Pattern_Loop;\n+            end if;\n+         end if;\n+\n          return True;\n       end Insert;\n \n       ------------\n       -- Insert --\n       ------------\n \n-      procedure Insert (Source : Source_Info) is\n+      procedure Insert\n+        (Source  : Source_Info; With_Roots : Boolean := False)\n+      is\n          Discard : Boolean;\n          pragma Unreferenced (Discard);\n       begin\n-         Discard := Insert (Source);\n+         Discard := Insert (Source, With_Roots);\n       end Insert;\n \n       --------------\n@@ -2136,6 +2385,7 @@ package body Makeutl is\n                   then\n                      Queue.Insert\n                        (Source => (Format => Format_Gprbuild,\n+                                   Tree   => Project_Tree,\n                                    Id     => Source));\n                   end if;\n                end if;\n@@ -2221,6 +2471,7 @@ package body Makeutl is\n                   then\n                      Queue.Insert\n                        (Source => (Format => Format_Gprbuild,\n+                                   Tree   => Project_Tree,\n                                    Id     => Src_Id));\n                   end if;\n                end if;"}, {"sha": "43f82e20c59f8b10ab8ed36cd9173a6786d668fe", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41ba34dbe7e8494254b524e8e31e394a1e6c6585/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41ba34dbe7e8494254b524e8e31e394a1e6c6585/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=41ba34dbe7e8494254b524e8e31e394a1e6c6585", "patch": "@@ -245,22 +245,32 @@ package Makeutl is\n       File      : File_Name_Type;  --  Always canonical casing\n       Index     : Int := 0;\n       Location  : Source_Ptr := No_Location;\n+\n       Source    : Prj.Source_Id := No_Source;\n+      Project   : Project_Id;\n+      Tree      : Project_Tree_Ref;\n    end record;\n-   No_Main_Info : constant Main_Info := (No_File, 0, No_Location, No_Source);\n+   No_Main_Info : constant Main_Info :=\n+     (No_File, 0, No_Location, No_Source, No_Project, null);\n \n    package Mains is\n       procedure Add_Main\n         (Name     : String;\n          Index    : Int := 0;\n-         Location : Source_Ptr := No_Location);\n+         Location : Source_Ptr := No_Location;\n+         Project  : Project_Id := No_Project;\n+         Tree     : Project_Tree_Ref := null);\n       --  Add one main to the table.\n       --  This is in general used to add the main files specified on the\n       --  command line.\n       --  Index is used for multi-unit source files, and indicates which unit\n       --  within the source is concerned.\n       --  Location is the location within the project file (if a project file\n       --  is used).\n+      --  Project and Tree indicate to which project the main should belong.\n+      --  In particular, for aggregate projects, this isn't necessarily the\n+      --  main project tree. These can be set to No_Project and null when not\n+      --  using projects.\n \n       procedure Delete;\n       --  Empty the table\n@@ -290,8 +300,7 @@ package Makeutl is\n          Project_Tree : Project_Tree_Ref);\n       --  If no main was already added (presumably from the command line), add\n       --  the main units from root_project (or in the case of an aggregate\n-      --  project from all the\n-      --  aggregated projects).\n+      --  project from all the aggregated projects).\n       --\n       --  If some main units were already added from the command line, check\n       --  that they all belong to the root project, and that they are full\n@@ -314,7 +323,8 @@ package Makeutl is\n          record\n             case Format is\n             when Format_Gprbuild =>\n-               Id : Source_Id := null;\n+               Tree : Project_Tree_Ref := null;\n+               Id   : Source_Id := null;\n \n             when Format_Gnatmake =>\n                File      : File_Name_Type := No_File;\n@@ -352,11 +362,18 @@ package Makeutl is\n       --  Returns True if the queue is empty or if all object directories are\n       --  busy.\n \n-      procedure Insert (Source  : Source_Info);\n-      function Insert (Source  : Source_Info) return Boolean;\n+      procedure Insert (Source  : Source_Info; With_Roots : Boolean := False);\n+      function Insert\n+        (Source  : Source_Info; With_Roots : Boolean := False) return Boolean;\n       --  Insert source in the queue.\n       --  The second version returns False if the Source was already marked in\n       --  the queue.\n+      --  If With_Roots is True and the source is in Format_Gprbuild mode (ie\n+      --  with a project), this procedure also includes the \"Roots\" for this\n+      --  main, ie all the other files that must be included in the library or\n+      --  binary (in particular to combine Ada and C files connected through\n+      --  pragma Export/Import). When the roots are computed, they are also\n+      --  stored in the corresponding Source_Id for later reuse by the binder.\n \n       procedure Insert_Project_Sources\n         (Project      : Project_Id;"}, {"sha": "578faf2659b1934eb70b47d5096a63663f79d365", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41ba34dbe7e8494254b524e8e31e394a1e6c6585/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41ba34dbe7e8494254b524e8e31e394a1e6c6585/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=41ba34dbe7e8494254b524e8e31e394a1e6c6585", "patch": "@@ -660,6 +660,17 @@ package Prj is\n    No_Unit_Index : constant Unit_Index := null;\n    --  Used to indicate a null entry for no unit\n \n+   type Source_Roots;\n+   type Roots_Access is access Source_Roots;\n+   type Source_Roots is record\n+      Root : Source_Id;\n+      Next : Roots_Access;\n+   end record;\n+   --  A list to store the roots associated with a main unit. These are the\n+   --  files that need to linked along with the main (for instance a C file\n+   --  corresponding to an Ada file). In general, these are dependencies that\n+   --  cannot be computed automatically by the builder.\n+\n    --  Structure to define source data\n \n    type Source_Data is record\n@@ -784,6 +795,9 @@ package Prj is\n       Next_With_File_Name : Source_Id := No_Source;\n       --  Link to another source with the same base file name\n \n+      Roots : Roots_Access := null;\n+      --  The roots for a main unit\n+\n    end record;\n \n    No_Source_Data : constant Source_Data :=\n@@ -821,7 +835,8 @@ package Prj is\n                        Naming_Exception       => False,\n                        Duplicate_Unit         => False,\n                        Next_In_Lang           => No_Source,\n-                       Next_With_File_Name    => No_Source);\n+                       Next_With_File_Name    => No_Source,\n+                       Roots                  => null);\n \n    package Source_Files_Htable is new Simple_HTable\n      (Header_Num => Header_Num,"}]}