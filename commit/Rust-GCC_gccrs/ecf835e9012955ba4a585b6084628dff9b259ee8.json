{"sha": "ecf835e9012955ba4a585b6084628dff9b259ee8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNmODM1ZTkwMTI5NTViYTRhNTg1YjYwODQ2MjhkZmY5YjI1OWVlOA==", "commit": {"author": {"name": "Kelvin Nilsen", "email": "kelvin@gcc.gnu.org", "date": "2016-02-16T23:12:19Z"}, "committer": {"name": "Kelvin Nilsen", "email": "kelvin@gcc.gnu.org", "date": "2016-02-16T23:12:19Z"}, "message": "re PR target/48344 (powerpc ICE with -fstack-limit-register=r2)\n\n[gcc]\n\n2016-02-16  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n\n\tPR Target/48344\n\t* opts-global.c (handle_common_deferred_options): Introduce and\n\tinitialize two global variables to remember command-line options\n\tspecifying a stack-limiting register.\n\t* opts.h: Add extern declarations of the two new global variables. \n\t* emit-rtl.c (init_emit_once): Initialize the stack_limit_rtx\n\tvariable based on the values of the two new global variables.\n\n[gcc/testsuite]\n\n2016-02-16  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n\n\tPR Target/48344\n\t* gcc.target/powerpc/pr48344-1.c: New test.\n\nFrom-SVN: r233477", "tree": {"sha": "e34511db2ac74e790ae8e1c9ff5065727eae8674", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e34511db2ac74e790ae8e1c9ff5065727eae8674"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecf835e9012955ba4a585b6084628dff9b259ee8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecf835e9012955ba4a585b6084628dff9b259ee8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecf835e9012955ba4a585b6084628dff9b259ee8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecf835e9012955ba4a585b6084628dff9b259ee8/comments", "author": null, "committer": null, "parents": [{"sha": "49a1164ae39421767ad9c4e755509bc82f30be09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49a1164ae39421767ad9c4e755509bc82f30be09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49a1164ae39421767ad9c4e755509bc82f30be09"}], "stats": {"total": 49, "additions": 47, "deletions": 2}, "files": [{"sha": "aec472c9532266b47429f6a199c99b538f1f7254", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf835e9012955ba4a585b6084628dff9b259ee8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf835e9012955ba4a585b6084628dff9b259ee8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ecf835e9012955ba4a585b6084628dff9b259ee8", "patch": "@@ -1,3 +1,13 @@\n+2016-02-16  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n+\n+\tPR Target/48344\n+\t* opts-global.c (handle_common_deferred_options): Introduce and\n+\tinitialize two global variables to remember command-line options\n+\tspecifying a stack-limiting register.\n+\t* opts.h: Add extern declarations of the two new global variables. \n+\t* emit-rtl.c (init_emit_once): Initialize the stack_limit_rtx\n+\tvariable based on the values of the two new global variables.\n+\n 2016-02-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/69835"}, {"sha": "0fcd9d95e5b412d3a1bd3758591794bb2ed2e78c", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf835e9012955ba4a585b6084628dff9b259ee8/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf835e9012955ba4a585b6084628dff9b259ee8/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=ecf835e9012955ba4a585b6084628dff9b259ee8", "patch": "@@ -57,6 +57,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"builtins.h\"\n #include \"rtl-iter.h\"\n #include \"stor-layout.h\"\n+#include \"opts.h\"\n \n struct target_rtl default_target_rtl;\n #if SWITCHABLE_TARGET\n@@ -5895,6 +5896,13 @@ init_emit_once (void)\n \n   /* Create the unique rtx's for certain rtx codes and operand values.  */\n \n+  /* Process stack-limiting command-line options.  */\n+  if (opt_fstack_limit_symbol_arg != NULL)\n+    stack_limit_rtx \n+      = gen_rtx_SYMBOL_REF (Pmode, ggc_strdup (opt_fstack_limit_symbol_arg));\n+  if (opt_fstack_limit_register_no >= 0)\n+    stack_limit_rtx = gen_rtx_REG (Pmode, opt_fstack_limit_register_no);\n+\n   /* Don't use gen_rtx_CONST_INT here since gen_rtx_CONST_INT in this case\n      tries to use these variables.  */\n   for (i = - MAX_SAVED_CONST_INT; i <= MAX_SAVED_CONST_INT; i++)"}, {"sha": "b7e52323a21fb0e84c54bb52cc87587788c8fba4", "filename": "gcc/opts-global.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf835e9012955ba4a585b6084628dff9b259ee8/gcc%2Fopts-global.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf835e9012955ba4a585b6084628dff9b259ee8/gcc%2Fopts-global.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-global.c?ref=ecf835e9012955ba4a585b6084628dff9b259ee8", "patch": "@@ -310,6 +310,10 @@ decode_options (struct gcc_options *opts, struct gcc_options *opts_set,\n   finish_options (opts, opts_set, loc);\n }\n \n+/* Hold command-line options associated with stack limitation.  */\n+const char *opt_fstack_limit_symbol_arg = NULL;\n+int opt_fstack_limit_register_no = -1;\n+\n /* Process common options that have been deferred until after the\n    handlers have been called for all options.  */\n \n@@ -417,12 +421,18 @@ handle_common_deferred_options (void)\n \t    if (reg < 0)\n \t      error (\"unrecognized register name %qs\", opt->arg);\n \t    else\n-\t      stack_limit_rtx = gen_rtx_REG (Pmode, reg);\n+\t      {\n+\t\t/* Deactivate previous OPT_fstack_limit_symbol_ options.  */\n+\t\topt_fstack_limit_symbol_arg = NULL;\n+\t\topt_fstack_limit_register_no = reg;\n+\t      }\n \t  }\n \t  break;\n \n \tcase OPT_fstack_limit_symbol_:\n-\t  stack_limit_rtx = gen_rtx_SYMBOL_REF (Pmode, ggc_strdup (opt->arg));\n+\t  /* Deactivate previous OPT_fstack_limit_register_ options.  */\n+\t  opt_fstack_limit_register_no = -1;\n+\t  opt_fstack_limit_symbol_arg = opt->arg;\n \t  break;\n \n \tcase OPT_fasan_shadow_offset_:"}, {"sha": "1b5cf448a2969cb23a487ed94f1f6bed395be2ff", "filename": "gcc/opts.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf835e9012955ba4a585b6084628dff9b259ee8/gcc%2Fopts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf835e9012955ba4a585b6084628dff9b259ee8/gcc%2Fopts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.h?ref=ecf835e9012955ba4a585b6084628dff9b259ee8", "patch": "@@ -296,6 +296,10 @@ struct cl_option_handlers\n   struct cl_option_handler_func handlers[3];\n };\n \n+/* Hold command-line options associated with stack limitation.  */\n+extern const char *opt_fstack_limit_symbol_arg;\n+extern int opt_fstack_limit_register_no;\n+\n /* Input file names.  */\n \n extern const char **in_fnames;"}, {"sha": "df83072ae35050f85b488b1d5d4aca59be70605c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf835e9012955ba4a585b6084628dff9b259ee8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf835e9012955ba4a585b6084628dff9b259ee8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ecf835e9012955ba4a585b6084628dff9b259ee8", "patch": "@@ -1,3 +1,8 @@\n+2016-02-16  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n+\n+\tPR Target/48344\n+\t* gcc.target/powerpc/pr48344-1.c: New test.\n+\n 2015-02-16  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/69742"}, {"sha": "22f30702ba392f81f747f5cb91a7cc4f662c0913", "filename": "gcc/testsuite/gcc.target/powerpc/pr48344-1.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecf835e9012955ba4a585b6084628dff9b259ee8/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr48344-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecf835e9012955ba4a585b6084628dff9b259ee8/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr48344-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr48344-1.c?ref=ecf835e9012955ba4a585b6084628dff9b259ee8", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fstack-limit-register=r2\" } */\n+void foo ()\n+{\n+  int N = 2;\n+  int slots[N];\n+\n+}"}]}