{"sha": "ba1a57076d0e998f84cda58f51e3cf867ae6aafc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmExYTU3MDc2ZDBlOTk4Zjg0Y2RhNThmNTFlM2NmODY3YWU2YWFmYw==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "1998-06-30T10:20:04Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "1998-06-30T10:20:04Z"}, "message": "[multiple changes]\n\nTue Jun 30 13:11:42 1998  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n        * rs6000/sysv4.h (asm output): add tabs for asm directives.\nTue Jun 30 13:11:42 1998  David Edelsohn <edelsohn@mhpcc.edu>\n        * Makefile.in (FLAGS_TO_PASS): Set AR_FLAGS to AR_FOR_TARGET_FLAGS.\n\nFrom-SVN: r20824", "tree": {"sha": "fdd02d90bfed70c3bef988d667cf9d9fd50d62e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fdd02d90bfed70c3bef988d667cf9d9fd50d62e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba1a57076d0e998f84cda58f51e3cf867ae6aafc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba1a57076d0e998f84cda58f51e3cf867ae6aafc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba1a57076d0e998f84cda58f51e3cf867ae6aafc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba1a57076d0e998f84cda58f51e3cf867ae6aafc/comments", "author": null, "committer": null, "parents": [{"sha": "ca9cde6b448b66f36a9942dd85f0787d3676de8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca9cde6b448b66f36a9942dd85f0787d3676de8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca9cde6b448b66f36a9942dd85f0787d3676de8c"}], "stats": {"total": 34, "additions": 21, "deletions": 13}, "files": [{"sha": "7eeaabf52e19811e12d7f5ccf112a6a1006d623f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba1a57076d0e998f84cda58f51e3cf867ae6aafc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba1a57076d0e998f84cda58f51e3cf867ae6aafc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ba1a57076d0e998f84cda58f51e3cf867ae6aafc", "patch": "@@ -1,3 +1,11 @@\n+Tue Jun 30 13:11:42 1998  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\n+\t* rs6000/sysv4.h (asm output): add tabs for asm directives.\n+\n+Tue Jun 30 13:11:42 1998  David Edelsohn <edelsohn@mhpcc.edu>\n+\n+\t* Makefile.in (FLAGS_TO_PASS): Set AR_FLAGS to AR_FOR_TARGET_FLAGS.\n+\n Tue Jun 30 08:59:15 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gansidecl.h (ATTRIBUTE_UNUSED): Use __unused__ not `unused'."}, {"sha": "8ffc3a20bb513fbfc0ef4ad693bfd3ff14a9c1c1", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba1a57076d0e998f84cda58f51e3cf867ae6aafc/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba1a57076d0e998f84cda58f51e3cf867ae6aafc/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=ba1a57076d0e998f84cda58f51e3cf867ae6aafc", "patch": "@@ -590,7 +590,7 @@ LANG_EXTRA_HEADERS = @all_headers@\n # subdirectories.\n # ??? The choices here will need some experimenting with.\n FLAGS_TO_PASS = \\\n-\t\"AR_FLAGS=$(AR_FLAGS)\" \\\n+\t\"AR_FLAGS=$(AR_FOR_TARGET_FLAGS)\" \\\n \t\"AR_FOR_TARGET=$(AR_FOR_TARGET)\" \\\n \t\"BISON=$(BISON)\" \\\n \t\"BISONFLAGS=$(BISONFLAGS)\" \\"}, {"sha": "2b7e1ed4b485351b250e3966073a6037eccdd99d", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba1a57076d0e998f84cda58f51e3cf867ae6aafc/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba1a57076d0e998f84cda58f51e3cf867ae6aafc/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=ba1a57076d0e998f84cda58f51e3cf867ae6aafc", "patch": "@@ -420,21 +420,21 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Use ELF style section commands.  */\n \n #undef TEXT_SECTION_ASM_OP\n-#define TEXT_SECTION_ASM_OP\t\"\\t.section \\\".text\\\"\"\n+#define TEXT_SECTION_ASM_OP\t\"\\t.section\\t\\\".text\\\"\"\n \n #undef DATA_SECTION_ASM_OP\n-#define DATA_SECTION_ASM_OP\t\"\\t.section \\\".data\\\"\"\n+#define DATA_SECTION_ASM_OP\t\"\\t.section\\t\\\".data\\\"\"\n \n #undef BSS_SECTION_ASM_OP\n-#define BSS_SECTION_ASM_OP\t\"\\t.section \\\".bss\\\"\"\n+#define BSS_SECTION_ASM_OP\t\"\\t.section\\t\\\".bss\\\"\"\n \n #undef INIT_SECTION_ASM_OP\n-#define INIT_SECTION_ASM_OP \"\\t.section \\\".init\\\",\\\"ax\\\"\"\n+#define INIT_SECTION_ASM_OP \"\\t.section\\t\\\".init\\\",\\\"ax\\\"\"\n \n #undef FINI_SECTION_ASM_OP\n-#define FINI_SECTION_ASM_OP \"\\t.section \\\".fini\\\",\\\"ax\\\"\"\n+#define FINI_SECTION_ASM_OP \"\\t.section\\t\\\".fini\\\",\\\"ax\\\"\"\n \n-#define TOC_SECTION_ASM_OP \"\\t.section \\\".got\\\",\\\"aw\\\"\"\n+#define TOC_SECTION_ASM_OP \"\\t.section\\t\\\".got\\\",\\\"aw\\\"\"\n \n /* Put PC relative got entries in .got2 */\n #define MINIMAL_TOC_SECTION_ASM_OP \\\n@@ -446,10 +446,10 @@ do {\t\t\t\t\t\t\t\t\t\\\n   ((TARGET_RELOCATABLE || flag_pic) ? \"\\t.section\\t\\\".data\\\"\\t# .rodata\" : \"\\t.section\\t\\\".rodata\\\"\")\n \n \n-#define SDATA_SECTION_ASM_OP \"\\t.section \\\".sdata\\\",\\\"aw\\\"\"\n-#define SDATA2_SECTION_ASM_OP \"\\t.section \\\".sdata2\\\",\\\"a\\\"\"\n+#define SDATA_SECTION_ASM_OP \"\\t.section\\t\\\".sdata\\\",\\\"aw\\\"\"\n+#define SDATA2_SECTION_ASM_OP \"\\t.section\\t\\\".sdata2\\\",\\\"a\\\"\"\n #define SBSS_SECTION_ASM_OP \\\n-  ((DEFAULT_ABI == ABI_SOLARIS) ? \"\\t.section \\\".sbss\\\",\\\"aw\\\"\" : \"\\t.section \\\".sbss\\\",\\\"aw\\\",@nobits\")\n+  ((DEFAULT_ABI == ABI_SOLARIS) ? \"\\t.section\\t\\\".sbss\\\",\\\"aw\\\"\" : \"\\t.section\\t\\\".sbss\\\",\\\"aw\\\",@nobits\")\n \n \n /* Besides the usual ELF sections, we need a toc section.  */\n@@ -782,7 +782,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n       fprintf (FILE, \"\\t.long (\");\t\t\t\t\t\\\n       output_addr_const (FILE, (VALUE));\t\t\t\t\\\n       fprintf (FILE, \")@fixup\\n\");\t\t\t\t\t\\\n-      fprintf (FILE, \"\\t.section \\\".fixup\\\",\\\"aw\\\"\\n\");\t\t\t\\\n+      fprintf (FILE, \"\\t.section\\t\\\".fixup\\\",\\\"aw\\\"\\n\");\t\t\t\\\n       ASM_OUTPUT_ALIGN (FILE, 2);\t\t\t\t\t\\\n       fprintf (FILE, \"\\t.long\\t%s\\n\", p);\t\t\t\t\\\n       fprintf (FILE, \"\\t.previous\\n\");\t\t\t\t\t\\\n@@ -903,14 +903,14 @@ do {\t\t\t\t\t\t\t\t\t\\\n       s->type = type;\t\t\t\t\t\t\t\\\n       s->next = sections;\t\t\t\t\t\t\\\n       sections = s;\t\t\t\t\t\t\t\\\n-      fprintf (FILE, \".section\\t%s,\\\"%s\\\"\\n\", NAME, mode);\t\t\\\n+      fprintf (FILE, \"\\t.section\\t\\\"%s\\\",\\\"%s\\\"\\n\", NAME, mode);\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       if (DECL && s->type != type)\t\t\t\t\t\\\n \terror_with_decl (DECL, \"%s causes a section type conflict\");\t\\\n \t\t\t\t\t\t\t\t\t\\\n-      fprintf (FILE, \".section\\t%s\\n\", NAME);\t\t\t\t\\\n+      fprintf (FILE, \"\\t.section\\t\\\"%s\\\"\\n\", NAME);\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n } while (0)\n "}]}