{"sha": "d10ac88059a7574f60e25af7b8f1022b25100fdd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDEwYWM4ODA1OWE3NTc0ZjYwZTI1YWY3YjhmMTAyMmIyNTEwMGZkZA==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2018-02-06T11:20:55Z"}, "committer": {"name": "Tamar Christina", "email": "tnfchris@gcc.gnu.org", "date": "2018-02-06T11:20:55Z"}, "message": "re PR target/82641 (Unable to enable crc32 for a certain function with target attribute on ARM (aarch32))\n\n2018-02-06  Tamar Christina  <tamar.christina@arm.com>\n\n\tPR target/82641\n\t* config/arm/arm.c (arm_print_asm_arch_directives): Record already\n\temitted arch directives.\n\t* config/arm/arm-c.c (arm_cpu_builtins): Undefine __ARM_ARCH and\n\t__ARM_FEATURE_COPROC before changing architectures.\n\ngcc/testsuite\n2018-02-06  Tamar Christina  <tamar.christina@arm.com>\n\n\tPR target/82641\n\t* gcc.target/arm/pragma_arch_switch_2.c: New.\n\nFrom-SVN: r257410", "tree": {"sha": "a1d490fb48256cb3cad22305a804c9a41a6b76de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1d490fb48256cb3cad22305a804c9a41a6b76de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d10ac88059a7574f60e25af7b8f1022b25100fdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d10ac88059a7574f60e25af7b8f1022b25100fdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d10ac88059a7574f60e25af7b8f1022b25100fdd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d10ac88059a7574f60e25af7b8f1022b25100fdd/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "40fdc3ec7a53f2bc60b656bf6289497135601630", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40fdc3ec7a53f2bc60b656bf6289497135601630", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40fdc3ec7a53f2bc60b656bf6289497135601630"}], "stats": {"total": 55, "additions": 46, "deletions": 9}, "files": [{"sha": "b52060946e0c105222ef0dca203393bf4a30d89f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d10ac88059a7574f60e25af7b8f1022b25100fdd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d10ac88059a7574f60e25af7b8f1022b25100fdd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d10ac88059a7574f60e25af7b8f1022b25100fdd", "patch": "@@ -1,3 +1,11 @@\n+2018-02-06  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR target/82641\n+\t* config/arm/arm.c (arm_print_asm_arch_directives): Record already\n+\temitted arch directives.\n+\t* config/arm/arm-c.c (arm_cpu_builtins): Undefine __ARM_ARCH and\n+\t__ARM_FEATURE_COPROC before changing architectures.\n+\n 2018-02-06  Richard Biener  <rguenther@suse.de>\n \n \t* config/i386/i386.c (print_reg): Fix typo."}, {"sha": "9a16172f1d8af1a2fb3f24b758650e16ff6e810a", "filename": "gcc/config/arm/arm-c.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d10ac88059a7574f60e25af7b8f1022b25100fdd/gcc%2Fconfig%2Farm%2Farm-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d10ac88059a7574f60e25af7b8f1022b25100fdd/gcc%2Fconfig%2Farm%2Farm-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-c.c?ref=d10ac88059a7574f60e25af7b8f1022b25100fdd", "patch": "@@ -113,7 +113,10 @@ arm_cpu_builtins (struct cpp_reader* pfile)\n      consistency with armcc.  */\n   builtin_define (\"__arm__\");\n   if (TARGET_ARM_ARCH)\n-    builtin_define_with_int_value (\"__ARM_ARCH\", TARGET_ARM_ARCH);\n+    {\n+      cpp_undef (pfile, \"__ARM_ARCH\");\n+      builtin_define_with_int_value (\"__ARM_ARCH\", TARGET_ARM_ARCH);\n+    }\n   if (arm_arch_notm)\n     builtin_define (\"__ARM_ARCH_ISA_ARM\");\n   builtin_define (\"__APCS_32__\");\n@@ -204,6 +207,7 @@ arm_cpu_builtins (struct cpp_reader* pfile)\n \n   def_or_undef_macro (pfile, \"__ARM_ASM_SYNTAX_UNIFIED__\", inline_asm_unified);\n \n+  cpp_undef (pfile, \"__ARM_FEATURE_COPROC\");\n   if (TARGET_32BIT && arm_arch4 && !(arm_arch8 && arm_arch_notm))\n     {\n       int coproc_level = 0x1;\n@@ -217,8 +221,6 @@ arm_cpu_builtins (struct cpp_reader* pfile)\n \n       builtin_define_with_int_value (\"__ARM_FEATURE_COPROC\", coproc_level);\n     }\n-  else\n-      cpp_undef (pfile, \"__ARM_FEATURE_COPROC\");\n }\n \n void"}, {"sha": "17feba46619c2ff729ec81520b516fb616ffcb11", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d10ac88059a7574f60e25af7b8f1022b25100fdd/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d10ac88059a7574f60e25af7b8f1022b25100fdd/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=d10ac88059a7574f60e25af7b8f1022b25100fdd", "patch": "@@ -78,6 +78,10 @@\n typedef struct minipool_node    Mnode;\n typedef struct minipool_fixup   Mfix;\n \n+/* The last .arch and .fpu assembly strings that we printed.  */\n+static std::string arm_last_printed_arch_string;\n+static std::string arm_last_printed_fpu_string;\n+\n void (*arm_lang_output_object_attributes_hook)(void);\n \n struct four_ints\n@@ -26390,6 +26394,7 @@ arm_print_asm_arch_directives ()\n   gcc_assert (arch);\n \n   asm_fprintf (asm_out_file, \"\\t.arch %s\\n\", arm_active_target.arch_name);\n+  arm_last_printed_arch_string = arm_active_target.arch_name;\n   if (!arch->common.extensions)\n     return;\n \n@@ -26437,13 +26442,17 @@ arm_file_start (void)\n \t      asm_fprintf (asm_out_file, \"\\t.arch_extension idiv\\n\");\n \t      asm_fprintf (asm_out_file, \"\\t.arch_extension sec\\n\");\n \t      asm_fprintf (asm_out_file, \"\\t.arch_extension mp\\n\");\n+\t      arm_last_printed_arch_string = \"armv7ve\";\n \t    }\n \t  else\n \t    arm_print_asm_arch_directives ();\n \t}\n       else if (strncmp (arm_active_target.core_name, \"generic\", 7) == 0)\n-\tasm_fprintf (asm_out_file, \"\\t.arch %s\\n\",\n-\t\t     arm_active_target.core_name + 8);\n+\t{\n+\t  asm_fprintf (asm_out_file, \"\\t.arch %s\\n\",\n+\t\t       arm_active_target.core_name + 8);\n+\t  arm_last_printed_arch_string = arm_active_target.core_name + 8;\n+\t}\n       else\n \t{\n \t  const char* truncated_name\n@@ -30934,10 +30943,6 @@ arm_identify_fpu_from_isa (sbitmap isa)\n   gcc_unreachable ();\n }\n \n-/* The last .arch and .fpu assembly strings that we printed.  */\n-static std::string arm_last_printed_arch_string;\n-static std::string arm_last_printed_fpu_string;\n-\n /* Implement ASM_DECLARE_FUNCTION_NAME.  Output the ISA features used\n    by the function fndecl.  */\n void"}, {"sha": "bdec47bb9612e7e4d2781f07f21d9558986578b7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d10ac88059a7574f60e25af7b8f1022b25100fdd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d10ac88059a7574f60e25af7b8f1022b25100fdd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d10ac88059a7574f60e25af7b8f1022b25100fdd", "patch": "@@ -1,3 +1,8 @@\n+2018-02-06  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR target/82641\n+\t* gcc.target/arm/pragma_arch_switch_2.c: New.\n+\n 2018-02-06  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR target/79975"}, {"sha": "fe52191c32c037fe4096c1884e1f6397318bd6a3", "filename": "gcc/testsuite/gcc.target/arm/pragma_arch_switch_2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d10ac88059a7574f60e25af7b8f1022b25100fdd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpragma_arch_switch_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d10ac88059a7574f60e25af7b8f1022b25100fdd/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpragma_arch_switch_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpragma_arch_switch_2.c?ref=d10ac88059a7574f60e25af7b8f1022b25100fdd", "patch": "@@ -0,0 +1,17 @@\n+/* Test for switching architectures during compilation.  */\n+/* { dg-skip-if \"instruction not valid on thumb\" { *-*-* } { \"-mthumb\" } { \"\" } } */\n+/* { dg-do assemble } */\n+/* { dg-require-effective-target arm_arm_ok } */\n+/* { dg-additional-options \"-Wall -O2 -march=armv4t -std=gnu99 -marm\" } */\n+\n+#pragma GCC target (\"arch=armv5te\")\n+void cpu_has_iwmmxt (void)\n+{\n+   int lo;\n+   int hi;\n+   __asm__ __volatile__ (\n+      \"mcrr   p0, 0, %2, %3, c0\\n\"\n+      : \"=r\" (lo), \"=r\" (hi)\n+      : \"r\" (0), \"r\" (0x100));\n+}\n+"}]}