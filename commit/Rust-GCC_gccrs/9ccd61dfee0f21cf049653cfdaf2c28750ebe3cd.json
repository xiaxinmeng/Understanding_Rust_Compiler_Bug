{"sha": "9ccd61dfee0f21cf049653cfdaf2c28750ebe3cd", "node_id": "C_kwDOANBUbNoAKDljY2Q2MWRmZWUwZjIxY2YwNDk2NTNjZmRhZjJjMjg3NTBlYmUzY2Q", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-09-05T13:12:42Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-12T08:16:52Z"}, "message": "[Ada] Special-case printing of SPARK_Mode in error messages\n\nFor error messages with inserted names that include acronyms like SPARK\nor CPP, we want to preserve the casing. The list of special-cased named\nis currently the same as in gnatpp.\n\ngcc/ada/\n\n\t* erroutc.adb (Set_Msg_Insertion_Name): Special-case printing with\n\tacronyms.", "tree": {"sha": "1a98ef3bdef558861d70cfd04474cf1a0825f279", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a98ef3bdef558861d70cfd04474cf1a0825f279"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ccd61dfee0f21cf049653cfdaf2c28750ebe3cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ccd61dfee0f21cf049653cfdaf2c28750ebe3cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ccd61dfee0f21cf049653cfdaf2c28750ebe3cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ccd61dfee0f21cf049653cfdaf2c28750ebe3cd/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f244e994b5ff5b6499a30171b4716f1a6983d6d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f244e994b5ff5b6499a30171b4716f1a6983d6d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f244e994b5ff5b6499a30171b4716f1a6983d6d8"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "d0cbe9fdff11759e81be513ec3cffb68ff8bb685", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccd61dfee0f21cf049653cfdaf2c28750ebe3cd/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccd61dfee0f21cf049653cfdaf2c28750ebe3cd/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=9ccd61dfee0f21cf049653cfdaf2c28750ebe3cd", "patch": "@@ -1317,8 +1317,8 @@ package body Erroutc is\n             Name_Len := Name_Len - 1;\n          end if;\n \n-         --  If operator name or character literal name, just print it as is\n-         --  Also print as is if it ends in a right paren (case of x'val(nnn))\n+         --  If operator name or character literal name, just print it as is.\n+         --  Also print as is if it ends in a right paren (case of x'val(nnn)).\n \n          if Name_Buffer (1) = '\"'\n            or else Name_Buffer (1) = '''\n@@ -1534,6 +1534,32 @@ package body Erroutc is\n       elsif Text = \"_TYPE_INVARIANT\" then\n          Set_Msg_Str (\"TYPE_INVARIANT'CLASS\");\n \n+      --  Preserve casing for names that include acronyms\n+\n+      elsif Text = \"Cpp_Class\" then\n+         Set_Msg_Str (\"CPP_Class\");\n+\n+      elsif Text = \"Cpp_Constructor\" then\n+         Set_Msg_Str (\"CPP_Constructor\");\n+\n+      elsif Text = \"Cpp_Virtual\" then\n+         Set_Msg_Str (\"CPP_Virtual\");\n+\n+      elsif Text = \"Cpp_Vtable\" then\n+         Set_Msg_Str (\"CPP_Vtable\");\n+\n+      elsif Text = \"Persistent_Bss\" then\n+         Set_Msg_Str (\"Persistent_BSS\");\n+\n+      elsif Text = \"Spark_Mode\" then\n+         Set_Msg_Str (\"SPARK_Mode\");\n+\n+      elsif Text = \"Use_Vads_Size\" then\n+         Set_Msg_Str (\"Use_VADS_Size\");\n+\n+      elsif Text = \"Vads_Size\" then\n+         Set_Msg_Str (\"VADS_size\");\n+\n       --  Normal case with no replacement\n \n       else"}]}