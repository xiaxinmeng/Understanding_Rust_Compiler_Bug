{"sha": "447caf82a46a3f14ef475897791d11051f2f100c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ3Y2FmODJhNDZhM2YxNGVmNDc1ODk3NzkxZDExMDUxZjJmMTAwYw==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2016-05-23T20:03:35Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2016-05-23T20:03:35Z"}, "message": "2016-05-23  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n\n\t* include/debug/safe_iterator.h\n\t(_Safe_iterator<>::operator->()): Implement using underlying iterator\n\toperator ->.\n\t* include/debug/safe_local_iterator.h\n\t(_Safe_local_iterator<>::operator->()): Likewise.\n\nFrom-SVN: r236611", "tree": {"sha": "391e2293b07877b2a5d2ca788d6bfc0368724190", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/391e2293b07877b2a5d2ca788d6bfc0368724190"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/447caf82a46a3f14ef475897791d11051f2f100c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/447caf82a46a3f14ef475897791d11051f2f100c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/447caf82a46a3f14ef475897791d11051f2f100c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/447caf82a46a3f14ef475897791d11051f2f100c/comments", "author": null, "committer": null, "parents": [{"sha": "d6c9a06fcfc524fef362795cc40dbdffe1ca8b6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6c9a06fcfc524fef362795cc40dbdffe1ca8b6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6c9a06fcfc524fef362795cc40dbdffe1ca8b6c"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "30a1cc4356f7f2617dc54ff14de7d455bef20374", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/447caf82a46a3f14ef475897791d11051f2f100c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/447caf82a46a3f14ef475897791d11051f2f100c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=447caf82a46a3f14ef475897791d11051f2f100c", "patch": "@@ -1,3 +1,11 @@\n+2016-05-23  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\t* include/debug/safe_iterator.h\n+\t(_Safe_iterator<>::operator->()): Implement using underlying iterator\n+\toperator ->.\n+\t* include/debug/safe_local_iterator.h\n+\t(_Safe_local_iterator<>::operator->()): Likewise.\n+\n 2016-05-20  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* testsuite/experimental/memory_resource/1.cc: Add required argument"}, {"sha": "03c02638a13593ea09fadeffbb57c77003f16659", "filename": "libstdc++-v3/include/debug/safe_iterator.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/447caf82a46a3f14ef475897791d11051f2f100c/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/447caf82a46a3f14ef475897791d11051f2f100c/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_iterator.h?ref=447caf82a46a3f14ef475897791d11051f2f100c", "patch": "@@ -274,15 +274,14 @@ namespace __gnu_debug\n       /**\n        *  @brief Iterator dereference.\n        *  @pre iterator is dereferenceable\n-       *  @todo Make this correct w.r.t. iterators that return proxies\n        */\n       pointer\n       operator->() const _GLIBCXX_NOEXCEPT\n       {\n \t_GLIBCXX_DEBUG_VERIFY(this->_M_dereferenceable(),\n \t\t\t      _M_message(__msg_bad_deref)\n \t\t\t      ._M_iterator(*this, \"this\"));\n-\treturn std::__addressof(*base());\n+\treturn base().operator->();\n       }\n \n       // ------ Input iterator requirements ------"}, {"sha": "70e14697f178d506ea04c9307666d341fc97e55a", "filename": "libstdc++-v3/include/debug/safe_local_iterator.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/447caf82a46a3f14ef475897791d11051f2f100c/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_local_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/447caf82a46a3f14ef475897791d11051f2f100c/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_local_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fsafe_local_iterator.h?ref=447caf82a46a3f14ef475897791d11051f2f100c", "patch": "@@ -236,15 +236,14 @@ namespace __gnu_debug\n       /**\n        *  @brief Iterator dereference.\n        *  @pre iterator is dereferenceable\n-       *  @todo Make this correct w.r.t. iterators that return proxies\n        */\n       pointer\n       operator->() const\n       {\n \t_GLIBCXX_DEBUG_VERIFY(this->_M_dereferenceable(),\n \t\t\t      _M_message(__msg_bad_deref)\n \t\t\t      ._M_iterator(*this, \"this\"));\n-\treturn std::__addressof(*base());\n+\treturn base().operator->();\n       }\n \n       // ------ Input iterator requirements ------"}]}