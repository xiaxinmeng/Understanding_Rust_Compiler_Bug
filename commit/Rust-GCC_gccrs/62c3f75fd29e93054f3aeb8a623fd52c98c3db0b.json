{"sha": "62c3f75fd29e93054f3aeb8a623fd52c98c3db0b", "node_id": "C_kwDOANBUbNoAKDYyYzNmNzVmZDI5ZTkzMDU0ZjNhZWI4YTYyM2ZkNTJjOThjM2RiMGI", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2021-12-29T23:08:32Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2021-12-29T23:52:23Z"}, "message": "compiler, libgo: don't pad sparc64-linux epollevent\n\nChange the compiler to not add zero padding because of zero-sized\nfields named \"_\", since those can't be referenced anyhow.\n\nChange the sparc-linux64 epollevent struct to name the alignment\nfield \"_\", to avoid zero padding.\n\nFixes PR go/103847\n\n\tPR go/103847\n\t* godump.c (go_force_record_alignment): Name the alignment\n\tfield \"_\".\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/374914", "tree": {"sha": "d0dc1cd7f4e0d529916835e554266da48fb10940", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0dc1cd7f4e0d529916835e554266da48fb10940"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62c3f75fd29e93054f3aeb8a623fd52c98c3db0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c3f75fd29e93054f3aeb8a623fd52c98c3db0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62c3f75fd29e93054f3aeb8a623fd52c98c3db0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c3f75fd29e93054f3aeb8a623fd52c98c3db0b/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5acfcad98f3fa33e141f4e6bc06f7d7c13496e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5acfcad98f3fa33e141f4e6bc06f7d7c13496e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5acfcad98f3fa33e141f4e6bc06f7d7c13496e1"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "2d04f4b01c0d09e8286547607acb74d5cf81aab2", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c3f75fd29e93054f3aeb8a623fd52c98c3db0b/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c3f75fd29e93054f3aeb8a623fd52c98c3db0b/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=62c3f75fd29e93054f3aeb8a623fd52c98c3db0b", "patch": "@@ -1,4 +1,4 @@\n-3e9f4ee16683883ccfb8661d99318c74bb7a4bef\n+d3be41f0a1fca20e241e1db62b4b0f5262caac55\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "57c02a97ef096ee5b8eef48cfd3e6fde90416659", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c3f75fd29e93054f3aeb8a623fd52c98c3db0b/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c3f75fd29e93054f3aeb8a623fd52c98c3db0b/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=62c3f75fd29e93054f3aeb8a623fd52c98c3db0b", "patch": "@@ -6454,9 +6454,18 @@ get_backend_struct_fields(Gogo* gogo, Struct_type* type, bool use_placeholder,\n \t\t\t     ? p->type()->get_backend_placeholder(gogo)\n \t\t\t     : p->type()->get_backend(gogo));\n       (*bfields)[i].location = p->location();\n-      lastsize = gogo->backend()->type_size((*bfields)[i].btype);\n-      if (lastsize != 0)\n-        saw_nonzero = true;\n+      int64_t size = gogo->backend()->type_size((*bfields)[i].btype);\n+      if (size != 0)\n+\tsaw_nonzero = true;\n+\n+      if (size > 0 || !Gogo::is_sink_name(p->field_name()))\n+\tlastsize = size;\n+      else\n+\t{\n+\t  // There is an unreferenceable field of zero size.  This\n+\t  // doesn't affect whether we may need zero padding, so leave\n+\t  // lastsize unchanged.\n+\t}\n     }\n   go_assert(i == fields->size());\n   if (saw_nonzero && lastsize == 0 && !type->is_results_struct())"}, {"sha": "f016989c93f0b9c8bd2c565146b6c98416d06f20", "filename": "gcc/godump.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c3f75fd29e93054f3aeb8a623fd52c98c3db0b/gcc%2Fgodump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c3f75fd29e93054f3aeb8a623fd52c98c3db0b/gcc%2Fgodump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgodump.c?ref=62c3f75fd29e93054f3aeb8a623fd52c98c3db0b", "patch": "@@ -651,7 +651,7 @@ go_force_record_alignment (struct obstack *ob, const char *type_string,\n \t\t\t   unsigned int index, const char *error_string)\n {\n   index = go_append_artificial_name (ob, index);\n-  obstack_grow (ob, \"_align \", 7);\n+  obstack_grow (ob, \"_ \", 2);\n   if (type_string == NULL)\n     obstack_grow (ob, error_string, strlen (error_string));\n   else"}, {"sha": "be150905f91750b5d014848cae35d86cad82a047", "filename": "libgo/mkrsysinfo.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c3f75fd29e93054f3aeb8a623fd52c98c3db0b/libgo%2Fmkrsysinfo.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c3f75fd29e93054f3aeb8a623fd52c98c3db0b/libgo%2Fmkrsysinfo.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmkrsysinfo.sh?ref=62c3f75fd29e93054f3aeb8a623fd52c98c3db0b", "patch": "@@ -98,7 +98,7 @@ if grep '^const _epoll_data_offset ' ${OUT} >/dev/null 2>&1; then\n       echo 'type epollevent struct { events uint32; data [8]byte }' >> ${OUT}\n   elif test \"$val\" = \"8\"; then\n       if test \"$GOARCH\" = \"sparc64\" -a \"$GOOS\" = \"linux\"; then\n-          echo 'type epollevent struct { events uint32; pad [4]byte; data [8]byte; _align [0]int64 }' >> ${OUT}\n+          echo 'type epollevent struct { events uint32; pad [4]byte; data [8]byte; _ [0]int64 }' >> ${OUT}\n       else\n           echo 'type epollevent struct { events uint32; pad [4]byte; data [8]byte }' >> ${OUT}\n       fi"}]}