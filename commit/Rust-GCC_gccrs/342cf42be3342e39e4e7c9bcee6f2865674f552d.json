{"sha": "342cf42be3342e39e4e7c9bcee6f2865674f552d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQyY2Y0MmJlMzM0MmUzOWU0ZTdjOWJjZWU2ZjI4NjU2NzRmNTUyZA==", "commit": {"author": {"name": "Adrian Straetling", "email": "straetling@de.ibm.com", "date": "2005-05-09T17:07:57Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2005-05-09T17:07:57Z"}, "message": "s390.md: (\"INT\"): New mode macro.\n\n2005-05-09  Adrian Straetling  <straetling@de.ibm.com>\n\n\t* config/s390/s390.md: (\"INT\"): New mode macro.\n\t(\"one_cmpldi2\", \"one_cmplsi2\", \"one_cmplhi2\", \"one_cmplqi2\"):\n\tMerge.\n\nFrom-SVN: r99451", "tree": {"sha": "7f6ab3c34953f7887d9f1d1d385d2d3507a7d854", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f6ab3c34953f7887d9f1d1d385d2d3507a7d854"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/342cf42be3342e39e4e7c9bcee6f2865674f552d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/342cf42be3342e39e4e7c9bcee6f2865674f552d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/342cf42be3342e39e4e7c9bcee6f2865674f552d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/342cf42be3342e39e4e7c9bcee6f2865674f552d/comments", "author": null, "committer": null, "parents": [{"sha": "9db2f16da9a677bbc87ccac6f32b739bc2a50a2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9db2f16da9a677bbc87ccac6f32b739bc2a50a2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9db2f16da9a677bbc87ccac6f32b739bc2a50a2b"}], "stats": {"total": 58, "additions": 14, "deletions": 44}, "files": [{"sha": "abc2104ba2880c5e99a1de2cd9e93f60408c541a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/342cf42be3342e39e4e7c9bcee6f2865674f552d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/342cf42be3342e39e4e7c9bcee6f2865674f552d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=342cf42be3342e39e4e7c9bcee6f2865674f552d", "patch": "@@ -1,3 +1,8 @@\n+2005-05-09  Adrian Straetling  <straetling@de.ibm.com>\n+\n+\t* config/s390/s390.md: (\"INT\"): New mode macro.\n+\t(\"one_cmpldi2\", \"one_cmplsi2\", \"one_cmplhi2\", \"one_cmplqi2\"):\n+\tMerge.\n \n 2005-05-09  Adrian Straetling  <straetling@de.ibm.com>\n "}, {"sha": "5a258e499ffb45cee3dd6f0615120151f31d9840", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 9, "deletions": 44, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/342cf42be3342e39e4e7c9bcee6f2865674f552d/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/342cf42be3342e39e4e7c9bcee6f2865674f552d/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=342cf42be3342e39e4e7c9bcee6f2865674f552d", "patch": "@@ -247,6 +247,10 @@\n ;; the same template.\n (define_mode_macro HQI [HI QI])\n \n+;; This mode macro allows the integer patterns to be defined from the\n+;; same template.\n+(define_mode_macro INT [(DI \"TARGET_64BIT\") SI HI QI])\n+\n \n ;; ICM mask required to load MODE value into the highest subreg\n ;; of a SImode register.\n@@ -6582,53 +6586,14 @@\n ;;\n \n ;\n-; one_cmpldi2 instruction pattern(s).\n-;\n-\n-(define_expand \"one_cmpldi2\"\n-  [(parallel\n-    [(set (match_operand:DI 0 \"register_operand\" \"\")\n-          (xor:DI (match_operand:DI 1 \"register_operand\" \"\")\n-                  (const_int -1)))\n-     (clobber (reg:CC 33))])]\n-  \"TARGET_64BIT\"\n-  \"\")\n-\n-;\n-; one_cmplsi2 instruction pattern(s).\n-;\n-\n-(define_expand \"one_cmplsi2\"\n-  [(parallel\n-    [(set (match_operand:SI 0 \"register_operand\" \"\")\n-          (xor:SI (match_operand:SI 1 \"register_operand\" \"\")\n-                  (const_int -1)))\n-     (clobber (reg:CC 33))])]\n-  \"\"\n-  \"\")\n-\n-;\n-; one_cmplhi2 instruction pattern(s).\n-;\n-\n-(define_expand \"one_cmplhi2\"\n-  [(parallel\n-    [(set (match_operand:HI 0 \"register_operand\" \"\")\n-          (xor:HI (match_operand:HI 1 \"register_operand\" \"\")\n-                  (const_int -1)))\n-     (clobber (reg:CC 33))])]\n-  \"\"\n-  \"\")\n-\n-;\n-; one_cmplqi2 instruction pattern(s).\n+; one_cmpl(di|si|hi|qi)2 instruction pattern(s).\n ;\n \n-(define_expand \"one_cmplqi2\"\n+(define_expand \"one_cmpl<mode>2\"\n   [(parallel\n-    [(set (match_operand:QI 0 \"register_operand\" \"\")\n-          (xor:QI (match_operand:QI 1 \"register_operand\" \"\")\n-                  (const_int -1)))\n+    [(set (match_operand:INT 0 \"register_operand\" \"\")\n+          (xor:INT (match_operand:INT 1 \"register_operand\" \"\")\n+\t\t   (const_int -1)))\n      (clobber (reg:CC 33))])]\n   \"\"\n   \"\")"}]}