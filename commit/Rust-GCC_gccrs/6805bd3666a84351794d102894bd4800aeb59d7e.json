{"sha": "6805bd3666a84351794d102894bd4800aeb59d7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgwNWJkMzY2NmE4NDM1MTc5NGQxMDI4OTRiZDQ4MDBhZWI1OWQ3ZQ==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2013-04-03T09:49:44Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2013-04-03T09:49:44Z"}, "message": "re PR tree-optimization/56790 (VEC_COND_EXPR not constant folded)\n\n2013-04-03  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR tree-optimization/56790\ngcc/\n\t* fold-const.c (fold_ternary_loc) <VEC_COND_EXPR>: Add constant folding.\n\ngcc/testsuite/\n\t* g++.dg/ext/pr56790-1.C: New testcase.\n\nFrom-SVN: r197395", "tree": {"sha": "5aa8c1d2bf0947515d0adf4fdb9ba4f18effa4d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5aa8c1d2bf0947515d0adf4fdb9ba4f18effa4d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6805bd3666a84351794d102894bd4800aeb59d7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6805bd3666a84351794d102894bd4800aeb59d7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6805bd3666a84351794d102894bd4800aeb59d7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6805bd3666a84351794d102894bd4800aeb59d7e/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da694a7701bc6c2defe09cc590166de096dd26da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da694a7701bc6c2defe09cc590166de096dd26da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da694a7701bc6c2defe09cc590166de096dd26da"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "512fe4abbaacaf756a890f234f73f77b46bfae64", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6805bd3666a84351794d102894bd4800aeb59d7e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6805bd3666a84351794d102894bd4800aeb59d7e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6805bd3666a84351794d102894bd4800aeb59d7e", "patch": "@@ -1,3 +1,8 @@\n+2013-04-03  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/56790\n+\t* fold-const.c (fold_ternary_loc) <VEC_COND_EXPR>: Add constant folding.\n+\n 2013-04-03  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* simplify-rtx.c (simplify_binary_operation_1) <VEC_SELECT>:"}, {"sha": "dcf7aa0d6a5040ec24a29eb13fd154b378381a92", "filename": "gcc/fold-const.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6805bd3666a84351794d102894bd4800aeb59d7e/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6805bd3666a84351794d102894bd4800aeb59d7e/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=6805bd3666a84351794d102894bd4800aeb59d7e", "patch": "@@ -13924,6 +13924,29 @@ fold_ternary_loc (location_t loc, enum tree_code code, tree type,\n \t    return pedantic_omit_one_operand_loc (loc, type, arg1, arg2);\n \t  if (integer_zerop (arg0))\n \t    return pedantic_omit_one_operand_loc (loc, type, arg2, arg1);\n+\n+\t  if ((TREE_CODE (arg1) == VECTOR_CST\n+\t       || TREE_CODE (arg1) == CONSTRUCTOR)\n+\t      && (TREE_CODE (arg2) == VECTOR_CST\n+\t\t  || TREE_CODE (arg2) == CONSTRUCTOR))\n+\t    {\n+\t      unsigned int nelts = TYPE_VECTOR_SUBPARTS (type), i;\n+\t      unsigned char *sel = XALLOCAVEC (unsigned char, nelts);\n+\t      gcc_assert (nelts == VECTOR_CST_NELTS (arg0));\n+\t      for (i = 0; i < nelts; i++)\n+\t\t{\n+\t\t  tree val = VECTOR_CST_ELT (arg0, i);\n+\t\t  if (integer_all_onesp (val))\n+\t\t    sel[i] = i;\n+\t\t  else if (integer_zerop (val))\n+\t\t    sel[i] = nelts + i;\n+\t\t  else /* Currently unreachable.  */\n+\t\t    return NULL_TREE;\n+\t\t}\n+\t      tree t = fold_vec_perm (type, arg1, arg2, sel);\n+\t      if (t != NULL_TREE)\n+\t\treturn t;\n+\t    }\n \t}\n \n       if (operand_equal_p (arg1, op2, 0))"}, {"sha": "b147235b908e9ae3eceb04de291c0c969305a844", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6805bd3666a84351794d102894bd4800aeb59d7e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6805bd3666a84351794d102894bd4800aeb59d7e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6805bd3666a84351794d102894bd4800aeb59d7e", "patch": "@@ -1,3 +1,8 @@\n+2013-04-03  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/56790\n+\t* g++.dg/ext/pr56790-1.C: New testcase.\n+\n 2013-04-03  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* gcc.target/i386/merge-1.c: New testcase."}, {"sha": "84feca19c7dac88d36da71db9c404ae3c58ed99b", "filename": "gcc/testsuite/g++.dg/ext/pr56790-1.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6805bd3666a84351794d102894bd4800aeb59d7e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr56790-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6805bd3666a84351794d102894bd4800aeb59d7e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr56790-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr56790-1.C?ref=6805bd3666a84351794d102894bd4800aeb59d7e", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-ccp1\" } */\n+\n+typedef long vec __attribute__ ((vector_size (2 * sizeof (long))));\n+\n+vec f (void)\n+{\n+  vec a = {  5,  7 };\n+  vec b = { 11, 13 };\n+  vec m = { -1,  0 };\n+  return m ? a : b;\n+}\n+\n+/* { dg-final { scan-tree-dump \"{ 5, 13 }\" \"ccp1\" } } */\n+/* { dg-final { scan-tree-dump-not \"VEC_COND_EXPR\" \"ccp1\" } } */\n+/* { dg-final { cleanup-tree-dump \"ccp1\" } } */"}]}