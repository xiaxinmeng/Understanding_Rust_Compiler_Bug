{"sha": "57147be1b61543b6ae26836c03f7138e3121ecfe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTcxNDdiZTFiNjE1NDNiNmFlMjY4MzZjMDNmNzEzOGUzMTIxZWNmZQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2002-09-28T00:30:37Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2002-09-28T00:30:37Z"}, "message": "re PR preprocessor/8055 (PATCH: cpp0 dies with SIG11 when building FreeBSD kernel)\n\n2002-09-27  Alexander N. Kabaev <ak03@gte.com>\n\n\tPR preprocessor/8055\n\t* cppmacro.c (stringify_arg): Do not overflow the buffer\n\twith the terminating NUL when the argument to be stringified\n\thas no tokens.\n\t* testsuite/gcc.dg/cpp/20020927-1.c: New.\n\nFrom-SVN: r57599", "tree": {"sha": "e9272d171d25a90ccbdb45733b655a0414aae29c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9272d171d25a90ccbdb45733b655a0414aae29c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57147be1b61543b6ae26836c03f7138e3121ecfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57147be1b61543b6ae26836c03f7138e3121ecfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57147be1b61543b6ae26836c03f7138e3121ecfe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57147be1b61543b6ae26836c03f7138e3121ecfe/comments", "author": null, "committer": null, "parents": [{"sha": "b1af5a30a54316b085b979805a6bced0ff93a7b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1af5a30a54316b085b979805a6bced0ff93a7b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1af5a30a54316b085b979805a6bced0ff93a7b1"}], "stats": {"total": 128, "additions": 118, "deletions": 10}, "files": [{"sha": "2af02d4bb6cfc35d9b18e0ce7b89f85953629591", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57147be1b61543b6ae26836c03f7138e3121ecfe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57147be1b61543b6ae26836c03f7138e3121ecfe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=57147be1b61543b6ae26836c03f7138e3121ecfe", "patch": "@@ -1,3 +1,10 @@\n+2002-09-27  Alexander N. Kabaev <ak03@gte.com>\n+\n+\tPR preprocessor/8055\n+\t* cppmacro.c (stringify_arg): Do not overflow the buffer\n+\twith the terminating NUL when the argument to be stringified\n+\thas no tokens.\n+\n 2002-09-27  Richard Henderson  <rth@redhat.com>\n \n \t* unroll.c (simplify_cmp_and_jump_insns): New.\n@@ -74,7 +81,7 @@\n \n \t* dbxout.c (FORCE_TEXT): Switch to current_function_decl, not\n \ttext_section.\n-\t* xcoffout.h (DBX_STATIC_BLOCK_START): Remove explicit change to \n+\t* xcoffout.h (DBX_STATIC_BLOCK_START): Remove explicit change to\n \ttext section.\n \t* config/rs6000/rs6000.c (rs6000_override_options): Allow\n \tfunction-sections and data-sections functionality on AIX.\n@@ -143,12 +150,12 @@\n \n 2002-09-24  Eric Christopher  <echristo@redhat.com>\n \n-        * config/mips/elf.h: Add HANDLE_SYSV_PRAGMA.\n-        * config/mips/elf64.h: Ditto.\n+\t* config/mips/elf.h: Add HANDLE_SYSV_PRAGMA.\n+\t* config/mips/elf64.h: Ditto.\n \n 2002-09-24  Eric Christopher  <echristo@redhat.com>\n \n-        * except.c (expand_builtin_extract_return_address): Handle case\n+\t* except.c (expand_builtin_extract_return_address): Handle case\n \twhere Pmode != ptr_mode.\n \n 2002-09-26  Steve Ellcey  <sje@cup.hp.com>\n@@ -224,11 +231,11 @@\n \n 2002-09-24  Adam Nemet  <anemet@lnxw.com>\n \n-        * config/arm/arm.c (thumb_unexpanded_epilogue): Don't generate\n-        epilogue for naked functions.\n+\t* config/arm/arm.c (thumb_unexpanded_epilogue): Don't generate\n+\tepilogue for naked functions.\n \n 2002-09-24  Adam Nemet  <anemet@lnxw.com>\n-            Nick Clifton  <nickc@redhat.com>\n+\t    Nick Clifton  <nickc@redhat.com>\n \n \t* config/arm/arm.h (THUMB_FUNCTION_PROFILER): Remove.\n \t(FUNCTION_PROFILER): Only invoke THUMB_FUNCTION_PROFILER if it"}, {"sha": "113b20dac24da3c6eb262ce4348ac4f8cf2bcb8f", "filename": "gcc/cppmacro.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57147be1b61543b6ae26836c03f7138e3121ecfe/gcc%2Fcppmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57147be1b61543b6ae26836c03f7138e3121ecfe/gcc%2Fcppmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppmacro.c?ref=57147be1b61543b6ae26836c03f7138e3121ecfe", "patch": "@@ -409,6 +409,12 @@ stringify_arg (pfile, arg)\n     }\n \n   /* Commit the memory, including NUL, and return the token.  */\n+  if ((size_t) (BUFF_LIMIT (pfile->u_buff) - dest) < 1)\n+    {\n+      size_t len_so_far = dest - BUFF_FRONT (pfile->u_buff);\n+      _cpp_extend_buff (pfile, &pfile->u_buff, 1);\n+      dest = BUFF_FRONT (pfile->u_buff) + len_so_far;\n+    }\n   len = dest - BUFF_FRONT (pfile->u_buff);\n   BUFF_FRONT (pfile->u_buff) = dest + 1;\n   return new_string_token (pfile, dest - len, len);"}, {"sha": "b5bea3dc5892074bf1f079140e40d3ccf2f85b9e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57147be1b61543b6ae26836c03f7138e3121ecfe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57147be1b61543b6ae26836c03f7138e3121ecfe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=57147be1b61543b6ae26836c03f7138e3121ecfe", "patch": "@@ -1,3 +1,7 @@\n+2002-09-27  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* gcc.dg/cpp/20020927-1.c: New.\n+\n 2002-09-26  David S. Miller  <davem@redhat.com>\n \n \t* gcc.c-torture/compile/trunctfdf.c: New.\n@@ -98,7 +102,7 @@ Tue Sep 17 13:59:45 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \t* objc.dg/comp-types-3.m: New test.\n \t* objc.dg/comp-types-4.m: New test.\n \t* objc.dg/comp-types-5.m: New test.\n-\t* objc.dg/comp-types-6.m: New test.\t\n+\t* objc.dg/comp-types-6.m: New test.\n \n 2002-09-17  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n@@ -107,9 +111,9 @@ Tue Sep 17 13:59:45 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n 2002-09-16  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.dg/other/do1.C: New test.\n-\t\n+\n \t* g++.dg/template/subst1.C: New test.\n-\t\n+\n 2002-09-16  Steve Ellcey  <sje@cup.hp.com>\n \n \t* gcc.dg/20020312-2.c: Change __parisc__ to __hppa__."}, {"sha": "91f89518a22cb44de3b4b0cb59f702a1060c6690", "filename": "gcc/testsuite/gcc.dg/cpp/20020927-1.c", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57147be1b61543b6ae26836c03f7138e3121ecfe/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F20020927-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57147be1b61543b6ae26836c03f7138e3121ecfe/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F20020927-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F20020927-1.c?ref=57147be1b61543b6ae26836c03f7138e3121ecfe", "patch": "@@ -0,0 +1,91 @@\n+/* Test case for buffer overflow bug in token stringification.\n+   See PR preprocessor/8055 for details.\n+   Reported by Alexander N. Kabaev <ak03@gte.com>.\n+   Test case written by Zack Weinberg <zack@codesourcery.com>.  */\n+\n+/* { dg-do preprocess } */\n+\n+#define S(x) #x\n+\n+/* Fill up one internal buffer with data.  */\n+S(1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  1234567890123456789012345678901234567890123456789012345678901234567890\n+  12345678901234567890123456789012345678901234567890123456789012345)\n+\n+/* When stringify_arg() was called with an empty macro argument, it would\n+   advance the buffer pointer by one but fail to check for running past the\n+   end of the buffer.  We can only know where the end of the buffer is to\n+   within about eight bytes, so do this sixteen times to be sure of hitting\n+   it.  */\n+\n+S()\n+S()\n+S()\n+S()\n+S()\n+S()\n+S()\n+S()\n+S()\n+S()\n+S()\n+S()\n+S()\n+S()\n+S()\n+S()\n+\n+/* Now allocate more memory in the buffer, which should provoke a crash.  */\n+\n+S(abcdefghijklmnopqrstuvwxyz)\n+S(abcdefghijklmnopqrstuvwxyz)"}]}