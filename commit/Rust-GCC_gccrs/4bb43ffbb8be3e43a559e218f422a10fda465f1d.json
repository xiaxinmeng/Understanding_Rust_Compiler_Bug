{"sha": "4bb43ffbb8be3e43a559e218f422a10fda465f1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJiNDNmZmJiOGJlM2U0M2E1NTllMjE4ZjQyMmExMGZkYTQ2NWYxZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-04T09:05:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-04T09:05:53Z"}, "message": "[multiple changes]\n\n2012-10-04  Vincent Celier  <celier@adacore.com>\n\n\t* prj-proc.adb (Process_Package_Declaration): Use project\n\tdirectory display path name as the value of 'Project_Dir.\n\n2012-10-04  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_util.adb (Build_Allocate_Deallocate_Proc): The subpool can be\n\tgiven by an arbitrary name, so copy the tree to make the call's actual.\n\n2012-10-04  Robert Dewar  <dewar@adacore.com>\n\n\t* s-exnllf.adb, s-exnllf.ads: Minor reformatting.\n\n2012-10-04  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch6.adb: Minor reformatting.\n\n2012-10-04  Pascal Obry  <obry@adacore.com>\n\n\t* projects.texi: Use consistently @command{} when referencing\n\tcommands. Fix typos.\n\nFrom-SVN: r192068", "tree": {"sha": "e4e87a06236afd78ea95ceb3aab8fe70fa21bbad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4e87a06236afd78ea95ceb3aab8fe70fa21bbad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bb43ffbb8be3e43a559e218f422a10fda465f1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bb43ffbb8be3e43a559e218f422a10fda465f1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bb43ffbb8be3e43a559e218f422a10fda465f1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bb43ffbb8be3e43a559e218f422a10fda465f1d/comments", "author": null, "committer": null, "parents": [{"sha": "3b78de5632a6612d5b443345ae728060fed71a13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b78de5632a6612d5b443345ae728060fed71a13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b78de5632a6612d5b443345ae728060fed71a13"}], "stats": {"total": 126, "additions": 77, "deletions": 49}, "files": [{"sha": "db728dd1694bbb3aec1c61a2dc2cc319002a0909", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb43ffbb8be3e43a559e218f422a10fda465f1d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb43ffbb8be3e43a559e218f422a10fda465f1d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4bb43ffbb8be3e43a559e218f422a10fda465f1d", "patch": "@@ -1,3 +1,26 @@\n+2012-10-04  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-proc.adb (Process_Package_Declaration): Use project\n+\tdirectory display path name as the value of 'Project_Dir.\n+\n+2012-10-04  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_util.adb (Build_Allocate_Deallocate_Proc): The subpool can be\n+\tgiven by an arbitrary name, so copy the tree to make the call's actual.\n+\n+2012-10-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* s-exnllf.adb, s-exnllf.ads: Minor reformatting.\n+\n+2012-10-04  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch6.adb: Minor reformatting.\n+\n+2012-10-04  Pascal Obry  <obry@adacore.com>\n+\n+\t* projects.texi: Use consistently @command{} when referencing\n+\tcommands. Fix typos.\n+\n 2012-10-03  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch6.adb (New_Overloaded_Entity): call"}, {"sha": "8d9ef9b38dd5360bcb04d18d2d7f382efe97fb4e", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb43ffbb8be3e43a559e218f422a10fda465f1d/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb43ffbb8be3e43a559e218f422a10fda465f1d/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=4bb43ffbb8be3e43a559e218f422a10fda465f1d", "patch": "@@ -1217,8 +1217,8 @@ package body Exp_Ch6 is\n                  and then\n                    Present (Effective_Extra_Accessibility (Entity (Lhs)))\n                then\n-                  --  Copyback target is an Ada 2012 stand-alone object\n-                  --  of an anonymous access type\n+                  --  Copyback target is an Ada 2012 stand-alone object of an\n+                  --  anonymous access type.\n \n                   pragma Assert (Ada_Version >= Ada_2012);\n \n@@ -3046,7 +3046,7 @@ package body Exp_Ch6 is\n                   Set_Last_Assignment (Ent, Sav);\n                   Set_Is_Known_Valid (Ent, False);\n \n-                  --  For all other cases, just kill the current values\n+               --  For all other cases, just kill the current values\n \n                else\n                   Kill_Current_Values (Ent);\n@@ -3201,7 +3201,7 @@ package body Exp_Ch6 is\n          end;\n       end if;\n \n-      --  If we are expanding a rhs of an assignment we need to check if tag\n+      --  If we are expanding the RHS of an assignment we need to check if tag\n       --  propagation is needed. You might expect this processing to be in\n       --  Analyze_Assignment but has to be done earlier (bottom-up) because the\n       --  assignment might be transformed to a declaration for an unconstrained\n@@ -4219,9 +4219,7 @@ package body Exp_Ch6 is\n          Ret : Node_Id;\n \n       begin\n-         if Is_Entity_Name (N)\n-           and then Present (Entity (N))\n-         then\n+         if Is_Entity_Name (N) and then Present (Entity (N)) then\n             E := Entity (N);\n \n             if Is_Formal (E)"}, {"sha": "82b054adfcea3a9f36c305a542694d86ac747891", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb43ffbb8be3e43a559e218f422a10fda465f1d/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb43ffbb8be3e43a559e218f422a10fda465f1d/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=4bb43ffbb8be3e43a559e218f422a10fda465f1d", "patch": "@@ -710,8 +710,11 @@ package body Exp_Util is\n                Subpool := Subpool_Handle_Name (Expr);\n             end if;\n \n+            --  If a subpool is present it can be an arbitrary name, so make\n+            --  the actual by copying the tree.\n+\n             if Present (Subpool) then\n-               Append_To (Actuals, New_Reference_To (Entity (Subpool), Loc));\n+               Append_To (Actuals, New_Copy_Tree (Subpool, New_Sloc => Loc));\n             else\n                Append_To (Actuals, Make_Null (Loc));\n             end if;"}, {"sha": "19a92e9a8b68d114cfef18d6ca684d4ec6bc7ebd", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb43ffbb8be3e43a559e218f422a10fda465f1d/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb43ffbb8be3e43a559e218f422a10fda465f1d/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=4bb43ffbb8be3e43a559e218f422a10fda465f1d", "patch": "@@ -1588,7 +1588,7 @@ package body Prj.Proc is\n                   Add_Attributes\n                     (Project,\n                      Project.Name,\n-                     Name_Id (Project.Directory.Name),\n+                     Name_Id (Project.Directory.Display_Name),\n                      Shared,\n                      Shared.Packages.Table (New_Pkg).Decl,\n                      First_Attribute_Of"}, {"sha": "fafb1d125ded3d7c1785d796a297fc35748125a4", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 40, "deletions": 34, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb43ffbb8be3e43a559e218f422a10fda465f1d/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb43ffbb8be3e43a559e218f422a10fda465f1d/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=4bb43ffbb8be3e43a559e218f422a10fda465f1d", "patch": "@@ -1033,7 +1033,7 @@ names in lower case)\n After building an application or a library it is often required to\n install it into the development environment. This installation is\n required if the library is to be used by another application for\n-example. The @code{gprinstall} tool provide an easy way to install\n+example. The @command{gprinstall} tool provide an easy way to install\n libraries, executable or object code generated durting the build. The\n @b{Install} package can be used to change the default locations.\n \n@@ -1963,11 +1963,10 @@ included in the library.\n @c ---------------------------------------------\n \n @noindent\n-When using project files, library installation is part of the library build\n-process. Thus no further action is needed in order to make use of the\n-libraries that are built as part of the general application build. A usable\n-version of the library is installed in the directory specified by the\n-@code{Library_Dir} attribute of the library project file.\n+When using project files, a usable version of the library is created in the\n+directory specified by the @code{Library_Dir} attribute of the library\n+project file. Thus no further action is needed in order to make use of\n+the libraries that are built as part of the general application build.\n \n You may want to install a library in a context different from where the library\n is built. This situation arises with third party suppliers, who may want\n@@ -1976,6 +1975,12 @@ able to recompile the library. The simplest option in this case is to provide\n a project file slightly different from the one used to build the library, by\n using the @code{externally_built} attribute. @ref{Using Library Projects}\n \n+Another option is to use @command{gprinstall} to install the library in a\n+different context than the build location. A project to use this library is\n+generated automatically by @command{gprinstall} which also copy, in the install\n+location, the minimum set of sources needed to use the library.\n+@ref{Installation}\n+\n @c ---------------------------------------------\n @node Project Extension\n @section Project Extension\n@@ -2243,18 +2248,18 @@ Very often, modules will build their own executables (for testing\n purposes for instance), or libraries (for easier reuse in various\n contexts).\n \n-However, if you build your project through gnatmake or gprbuild, using\n-a syntax similar to\n+However, if you build your project through @command{gnatmake} or\n+@command{gprbuild}, using a syntax similar to\n \n @smallexample\n    gprbuild -PA.gpr\n @end smallexample\n \n this will only rebuild the main programs of project A, not those of the\n imported projects B and C. Therefore you have to spawn several\n-gnatmake commands, one per project, to build all executables.\n+@command{gnatmake} commands, one per project, to build all executables.\n This is a little inconvenient, but more importantly is inefficient\n-because gnatmake needs to do duplicate work to ensure that sources are\n+because @command{gnatmake} needs to do duplicate work to ensure that sources are\n up-to-date, and cannot easily compile things in parallel when using\n the -j switch.\n \n@@ -2295,14 +2300,14 @@ that are built independently from each other (but can be built in\n parallel). For instance, you have a project tree rooted at A, and\n another one (which might share some subprojects) rooted at B.\n \n-Using only gprbuild, you could do\n+Using only @command{gprbuild}, you could do\n \n @smallexample\n   gprbuild -PA.gpr\n   gprbuild -PB.gpr\n @end smallexample\n \n-to build both. But again, gprbuild has to do some duplicate work for\n+to build both. But again, @command{gprbuild} has to do some duplicate work for\n those files that are shared between the two, and cannot truly build\n things in parallel efficiently.\n \n@@ -2316,17 +2321,17 @@ sources.\n \n This scenario is particularly useful in environments like VxWorks 653\n where the applications running in the multiple partitions can be built\n-in parallel through a single gprbuild command. This also works nicely\n+in parallel through a single @command{gprbuild} command. This also works nicely\n with Annex E.\n \n @c ---------------------------------------------\n @node Define a build environment\n @subsection Define a build environment\n @c ---------------------------------------------\n \n-The environment variables at the time you launch gprbuild or gprbuild\n-will influence the view these tools have of the project (PATH to find\n-the compiler, ADA_PROJECT_PATH or GPR_PROJECT_PATH to find the\n+The environment variables at the time you launch @command{gprbuild} or\n+@command{gnatmake} will influence the view these tools have of the project\n+(PATH to find the compiler, ADA_PROJECT_PATH or GPR_PROJECT_PATH to find the\n projects, environment variables that are referenced in project files\n through the \"external\" statement,...). Several command line switches\n can be used to override those (-X or -aP), but on some systems and\n@@ -2382,19 +2387,19 @@ end MyProject;\n @subsection Performance improvements in builder\n @c --------------------------------------------\n \n-The loading of aggregate projects is optimized in gprbuild and\n-gnatmake, so that all files are searched for only once on the disk\n+The loading of aggregate projects is optimized in @command{gprbuild} and\n+@command{gnatmake}, so that all files are searched for only once on the disk\n (thus reducing the number of system calls and contributing to faster\n compilation times especially on systems with sources on remote\n-servers). As part of the loading, gprbuild and gnatmake compute how\n-and where a source file should be compiled, and even if it is found\n+servers). As part of the loading, @command{gprbuild} and @command{gnatmake}\n+compute how and where a source file should be compiled, and even if it is found\n several times in the aggregated projects it will be compiled only\n once.\n \n Since there is no ambiguity as to which switches should be used, files\n can be compiled in parallel (through the usual -j switch) and this can\n be done while maximizing the use of CPUs (compared to launching\n-multiple gprbuild and gnatmake commands in parallel).\n+multiple @command{gprbuild} and @command{gnatmake} commands in parallel).\n \n @c -------------------------------------\n @node Syntax of aggregate projects\n@@ -2577,15 +2582,15 @@ These override the value given by the attribute, so that\n users can override the value set in the (presumably shared\n with others in his team) aggregate project.\n \n-@item The -X command line switch to gprbuild and gnatmake\n+@item The -X command line switch to @command{gprbuild} and @command{gnatmake}\n \n This always takes precedence.\n \n @end itemize\n \n This attribute is only taken into account in the main aggregate\n-project (i.e. the one specified on the command line to gprbuild or\n-natmake), and ignored in other aggregate projects. It is invalid\n+project (i.e. the one specified on the command line to @command{gprbuild} or\n+@command{gnatmake}), and ignored in other aggregate projects. It is invalid\n in standard projects.\n The goal is to have a consistent value in all\n projects that are built through the aggregate, which would not\n@@ -2610,8 +2615,8 @@ are valid:\n @item @b{Switches}:\n @cindex @code{Switches}\n This attribute gives the list of switches to use for the builder\n-(gprbuild or gnatmake), depending on the language of the main file.\n-For instance,\n+(@command{gprbuild} or @command{gnatmake}), depending on the language of the\n+main file. For instance,\n \n @smallexample @c projectfile\n for Switches (\"Ada\") use (\"-d\", \"-p\");\n@@ -2995,7 +3000,7 @@ from other project or library project files.\n @item @b{library}: a library project must declare both attributes\n   @code{Library_Name} and @code{Library_Dir}.\n @item @b{configuration}: a configuration project cannot be in a project tree.\n-  It describes compilers and other tools to @code{gprbuild}.\n+  It describes compilers and other tools to @command{gprbuild}.\n @end table\n \n @c ---------------------------------------------\n@@ -3263,7 +3268,7 @@ Here are some specific examples:\n @noindent\n An external value is an expression whose value is obtained from the command\n that invoked the processing of the current project file (typically a\n-gnatmake or gprbuild command).\n+@command{gnatmake} or @command{gprbuild} command).\n \n There are two kinds of external values, one that returns a single string, and\n one that returns a string list.\n@@ -3878,11 +3883,12 @@ Follow all symbolic links when processing project files.\n \n @item ^--subdirs^/SUBDIRS^=<subdir>\n @cindex @option{^--subdirs^/SUBDIRS^=} (gnatmake and gnatclean)\n-This switch is recognized by gnatmake and gnatclean. It indicate that the real\n-directories (except the source directories) are the subdirectories <subdir>\n-of the directories specified in the project files. This applies in particular\n-to object directories, library directories and exec directories. If the\n-subdirectories do not exist, they are created automatically.\n+This switch is recognized by @command{gnatmake} and @command{gnatclean}. It\n+indicate that the real directories (except the source directories) are the\n+subdirectories <subdir> of the directories specified in the project files.\n+This applies in particular to object directories, library directories and\n+exec directories. If the subdirectories do not exist, they are created\n+automatically.\n \n @end table\n \n@@ -4592,7 +4598,7 @@ e.g.@: @code{\"wtx\"} or @code{\"vxworks\"}.\n This is an associative array attribute, whose domain is a language name. Its\n value is  string that denotes the command to be used to invoke the compiler.\n The value of @code{Compiler_Command (\"Ada\")} is expected to be compatible with\n-gnatmake, in particular in the handling of switches.\n+@command{gnatmake}, in particular in the handling of switches.\n \n @item Debugger_Command\n This is simple attribute, Its value is a string that specifies the name of"}, {"sha": "c6765e8fe9a9576f42c7027506e1ec656d16d5d1", "filename": "gcc/ada/s-exnllf.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb43ffbb8be3e43a559e218f422a10fda465f1d/gcc%2Fada%2Fs-exnllf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb43ffbb8be3e43a559e218f422a10fda465f1d/gcc%2Fada%2Fs-exnllf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-exnllf.adb?ref=4bb43ffbb8be3e43a559e218f422a10fda465f1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,8 +37,7 @@ package body System.Exn_LLF is\n \n    function Exn_Long_Long_Float\n      (Left  : Long_Long_Float;\n-      Right : Integer)\n-      return  Long_Long_Float\n+      Right : Integer) return Long_Long_Float\n    is\n       Result : Long_Long_Float := 1.0;\n       Factor : Long_Long_Float := Left;"}, {"sha": "ba2828277b70ff4d738df7e2129da40df3831cb3", "filename": "gcc/ada/s-exnllf.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb43ffbb8be3e43a559e218f422a10fda465f1d/gcc%2Fada%2Fs-exnllf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb43ffbb8be3e43a559e218f422a10fda465f1d/gcc%2Fada%2Fs-exnllf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-exnllf.ads?ref=4bb43ffbb8be3e43a559e218f422a10fda465f1d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,7 +36,6 @@ package System.Exn_LLF is\n \n    function Exn_Long_Long_Float\n      (Left  : Long_Long_Float;\n-      Right : Integer)\n-      return  Long_Long_Float;\n+      Right : Integer) return Long_Long_Float;\n \n end System.Exn_LLF;"}]}