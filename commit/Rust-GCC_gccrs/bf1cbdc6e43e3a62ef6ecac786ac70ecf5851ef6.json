{"sha": "bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmYxY2JkYzZlNDNlM2E2MmVmNmVjYWM3ODZhYzcwZWNmNTg1MWVmNg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-04-02T09:10:53Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-04-02T09:10:53Z"}, "message": "re PR middle-end/37221 (Missed early loop-unroll optimization - causes 40% degradation on SPU)\n\n2009-04-02  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/37221\n\t* tree-flow.h (degenerate_phi_result): Declare.\n\t* tree-ssa-dom.c (degenerate_phi_result): Export.\n\t* tree-scalar-evolution.c (analyze_initial_condition): If\n\tthe initial condition is defined by a degenerate PHI node\n\tuse the degenerate value.\n\n\t* gcc.c-torture/compile/20090331-1.c: New testcase.\n\nFrom-SVN: r145439", "tree": {"sha": "1a6f6d8f33ade81a49b8870ef8209f8ef2aa991e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a6f6d8f33ade81a49b8870ef8209f8ef2aa991e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4bb7dbf60ef02a1172371a21e44533aa717a533a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bb7dbf60ef02a1172371a21e44533aa717a533a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bb7dbf60ef02a1172371a21e44533aa717a533a"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "8305ab11a5574bcfdfdd7c08d15b5422b82d19b7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6", "patch": "@@ -1,3 +1,12 @@\n+2009-04-02  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/37221\n+\t* tree-flow.h (degenerate_phi_result): Declare.\n+\t* tree-ssa-dom.c (degenerate_phi_result): Export.\n+\t* tree-scalar-evolution.c (analyze_initial_condition): If\n+\tthe initial condition is defined by a degenerate PHI node\n+\tuse the degenerate value.\n+\n 2009-04-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR rtl-optimization/39588"}, {"sha": "48b2e9d3f650714dab8a47c16442396388bf555e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6", "patch": "@@ -1,3 +1,8 @@\n+2009-04-02  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/37221\n+\t* gcc.c-torture/compile/20090331-1.c: New testcase.\n+\n 2009-04-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.c-torture/compile/20090401-1.c: New test."}, {"sha": "2db2ee72ecb5302f989bab607cc55f22b6804f20", "filename": "gcc/testsuite/gcc.c-torture/compile/20090331-1.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090331-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090331-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090331-1.c?ref=bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6", "patch": "@@ -0,0 +1,26 @@\n+struct re_pattern_buffer {\n+    unsigned char *buffer;\n+    unsigned long int allocated;\n+};\n+void byte_regex_compile (struct re_pattern_buffer *bufp,\n+\t\t\t unsigned char *begalt, unsigned char *b)\n+{\n+  unsigned char *pfrom;\n+  unsigned char *pto;\n+\n+  while ((unsigned long) (b - bufp->buffer + 3) > bufp->allocated)\n+    {\n+      unsigned char *old_buffer = bufp->buffer;\n+      bufp->allocated <<= 1;\n+      if (old_buffer != bufp->buffer)\n+\t{\n+\t  int incr = bufp->buffer - old_buffer;\n+\t  b += incr;\n+\t}\n+    }\n+  pfrom = b;\n+  pto = b + 3;\n+  while (pfrom != begalt)\n+    *--pto = *--pfrom;\n+}\n+"}, {"sha": "868b762a85ccc79fc51407447957e8aa5142a130", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6", "patch": "@@ -919,6 +919,7 @@ bool simplify_stmt_using_ranges (gimple_stmt_iterator *);\n extern void dump_dominator_optimization_stats (FILE *);\n extern void debug_dominator_optimization_stats (void);\n int loop_depth_of_name (tree);\n+tree degenerate_phi_result (gimple);\n \n /* In tree-ssa-copy.c  */\n extern void merge_alias_info (tree, tree);"}, {"sha": "af959b75a3da566a6d1a8bf907973c5b92e5a772", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6", "patch": "@@ -1577,6 +1577,20 @@ analyze_initial_condition (gimple loop_phi_node)\n   if (init_cond == chrec_not_analyzed_yet)\n     init_cond = chrec_dont_know;\n \n+  /* During early loop unrolling we do not have fully constant propagated IL.\n+     Handle degenerate PHIs here to not miss important unrollings.  */\n+  if (TREE_CODE (init_cond) == SSA_NAME)\n+    {\n+      gimple def = SSA_NAME_DEF_STMT (init_cond);\n+      tree res;\n+      if (gimple_code (def) == GIMPLE_PHI\n+\t  && (res = degenerate_phi_result (def)) != NULL_TREE\n+\t  /* Only allow invariants here, otherwise we may break\n+\t     loop-closed SSA form.  */\n+\t  && is_gimple_min_invariant (res))\n+\tinit_cond = res;\n+    }\n+\n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n       fprintf (dump_file, \"  (init_cond = \");"}, {"sha": "c252a7257c429668efead9d40fd8fbeaa3deac39", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=bf1cbdc6e43e3a62ef6ecac786ac70ecf5851ef6", "patch": "@@ -2475,7 +2475,7 @@ avail_expr_eq (const void *p1, const void *p2)\n /* Given PHI, return its RHS if the PHI is a degenerate, otherwise return\n    NULL.  */\n \n-static tree\n+tree\n degenerate_phi_result (gimple phi)\n {\n   tree lhs = gimple_phi_result (phi);"}]}