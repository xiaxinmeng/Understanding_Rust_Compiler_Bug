{"sha": "48e4f473eb23e4bf95e517f9eb83272316674c16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhlNGY0NzNlYjIzZTRiZjk1ZTUxN2Y5ZWI4MzI3MjMxNjY3NGMxNg==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2015-01-26T23:56:05Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2015-01-26T23:56:05Z"}, "message": "re PR target/49263 (SH Target: underutilized \"TST #imm, R0\" instruction)\n\ngcc/\n\tPR target/49263\n\t* config/sh/sh.c (sh_split_treg_set_expr): Invoke emit_insn before\n\tremove_insn.\n\t* config/sh/sh.md (tstsi_t): Don't try to optimize constant with right\n\tshifts if it already fits into K08.\n\ngcc/testsuite/\n\tPR target/49263\n\t* gcc.target/sh/pr49263-4.c: New.\n\nFrom-SVN: r220144", "tree": {"sha": "ee29468871e63260274fe84d0ff21a1e5b303dee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee29468871e63260274fe84d0ff21a1e5b303dee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48e4f473eb23e4bf95e517f9eb83272316674c16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48e4f473eb23e4bf95e517f9eb83272316674c16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48e4f473eb23e4bf95e517f9eb83272316674c16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48e4f473eb23e4bf95e517f9eb83272316674c16/comments", "author": null, "committer": null, "parents": [{"sha": "831a3a9e343d66a4dc51c141f2b5a87df5433627", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/831a3a9e343d66a4dc51c141f2b5a87df5433627", "html_url": "https://github.com/Rust-GCC/gccrs/commit/831a3a9e343d66a4dc51c141f2b5a87df5433627"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "e44eb7360afddd1d3de88586a52532c3361ab5e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48e4f473eb23e4bf95e517f9eb83272316674c16/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48e4f473eb23e4bf95e517f9eb83272316674c16/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48e4f473eb23e4bf95e517f9eb83272316674c16", "patch": "@@ -1,3 +1,11 @@\n+2015-01-26  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/49263\n+\t* config/sh/sh.c (sh_split_treg_set_expr): Invoke emit_insn before\n+\tremove_insn.\n+\t* config/sh/sh.md (tstsi_t): Don't try to optimize constant with right\n+\tshifts if it already fits into K08.\n+\n 2015-01-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR ipa/64730"}, {"sha": "a7427f56288dcb7cf17f39ba101387032a7bae0e", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48e4f473eb23e4bf95e517f9eb83272316674c16/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48e4f473eb23e4bf95e517f9eb83272316674c16/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=48e4f473eb23e4bf95e517f9eb83272316674c16", "patch": "@@ -14466,6 +14466,8 @@ sh_split_treg_set_expr (rtx x, rtx_insn* curr_insn)\n \tfprintf (dump_file, \"trailing nott insn %d\\n\", INSN_UID (nott_insn));\n     }\n \n+  emit_insn (insnlist.first);\n+\n   if (nott_insn != NULL && append_nott)\n     {\n       if (dump_file)\n@@ -14475,8 +14477,6 @@ sh_split_treg_set_expr (rtx x, rtx_insn* curr_insn)\n       append_nott = false;\n     }\n \n-  emit_insn (insnlist.first);\n-\n   if (append_nott)\n     nott_insn = emit_insn (gen_nott (get_t_reg_rtx ()));\n "}, {"sha": "4a39e12d8db29fb070b3711d04b4334e479ca54e", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48e4f473eb23e4bf95e517f9eb83272316674c16/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48e4f473eb23e4bf95e517f9eb83272316674c16/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=48e4f473eb23e4bf95e517f9eb83272316674c16", "patch": "@@ -742,8 +742,12 @@\n      variant instead and load the constant into a reg.  For that we'd need\n      to do some analysis.  */\n \n-  if ((op1val & 0xFFFF) == 0\n-      && CONST_OK_FOR_K08 (op1val >> 16) && optimize_size)\n+  if (CONST_OK_FOR_K08 (op1val))\n+    {\n+      /* Do nothing.  */\n+    }\n+  else if ((op1val & 0xFFFF) == 0\n+\t   && CONST_OK_FOR_K08 (op1val >> 16) && optimize_size)\n     {\n       /* Use a swap.w insn to do a shift + reg copy (to R0) in one insn.  */\n       op1val = op1val >> 16;"}, {"sha": "c66df2007d6fafbd9f7ddea612a11dffb1117230", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48e4f473eb23e4bf95e517f9eb83272316674c16/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48e4f473eb23e4bf95e517f9eb83272316674c16/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=48e4f473eb23e4bf95e517f9eb83272316674c16", "patch": "@@ -1,3 +1,8 @@\n+2015-01-26  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/49263\n+\t* gcc.target/sh/pr49263-4.c: New.\n+\n 2015-01-26  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/62044"}, {"sha": "cbba68b88f0203078442527b2bc0fe12d6221a9a", "filename": "gcc/testsuite/gcc.target/sh/pr49263-4.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48e4f473eb23e4bf95e517f9eb83272316674c16/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr49263-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48e4f473eb23e4bf95e517f9eb83272316674c16/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr49263-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr49263-4.c?ref=48e4f473eb23e4bf95e517f9eb83272316674c16", "patch": "@@ -0,0 +1,10 @@\n+/* Verify that TST #imm, R0 instruction is generated if the constant\n+   allows it when compiling for -Os.  */\n+/* { dg-do compile }  */\n+/* { dg-options \"-Os\" } */\n+/* { dg-final { scan-assembler-not \"and\" } } */\n+/* { dg-final { scan-assembler-not \"extu\" } } */\n+/* { dg-final { scan-assembler-not \"exts\" } } */\n+/* { dg-final { scan-assembler-not \"shlr\" } } */\n+\n+#include \"pr49263.c\""}]}