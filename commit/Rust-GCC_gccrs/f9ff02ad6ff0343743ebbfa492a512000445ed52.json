{"sha": "f9ff02ad6ff0343743ebbfa492a512000445ed52", "node_id": "C_kwDOANBUbNoAKGY5ZmYwMmFkNmZmMDM0Mzc0M2ViYmZhNDkyYTUxMjAwMDQ0NWVkNTI", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-02-13T15:33:47Z"}, "committer": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-03-30T11:52:29Z"}, "message": "libproc_macro: Add is_available interface\n\nAdd the rust interface for the is_available function in libproc_macro.\n\nChangeLog:\n\n\t* librust/proc_macro/rust/lib.rs: Add is_available.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "e849229676825b4ab4d5ca849927a0283a986101", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e849229676825b4ab4d5ca849927a0283a986101"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9ff02ad6ff0343743ebbfa492a512000445ed52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9ff02ad6ff0343743ebbfa492a512000445ed52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9ff02ad6ff0343743ebbfa492a512000445ed52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9ff02ad6ff0343743ebbfa492a512000445ed52/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc8a92c4874730b193fbd78140a4b5486ffce752", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc8a92c4874730b193fbd78140a4b5486ffce752", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc8a92c4874730b193fbd78140a4b5486ffce752"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "65cf8eb2bce27a7ff6bebce952bc928d779feb0c", "filename": "librust/proc_macro/rust/lib.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9ff02ad6ff0343743ebbfa492a512000445ed52/librust%2Fproc_macro%2Frust%2Flib.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9ff02ad6ff0343743ebbfa492a512000445ed52/librust%2Fproc_macro%2Frust%2Flib.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/librust%2Fproc_macro%2Frust%2Flib.rs?ref=f9ff02ad6ff0343743ebbfa492a512000445ed52", "patch": "@@ -12,6 +12,17 @@ mod literal;\n mod punct;\n mod span;\n \n+/// Determines whether proc_macro has been made accessible to the currently\n+/// running program.\n+///\n+/// # Note\n+///\n+/// This function provide a non panicking way to detect whether the API is\n+/// invoked from inside of a procedural macro.\n+pub fn is_available() -> bool {\n+    todo!(\"Implement this function\")\n+}\n+\n /// A single token or a delimited sequence of token trees.\n #[derive(Clone)]\n pub enum TokenTree {"}]}