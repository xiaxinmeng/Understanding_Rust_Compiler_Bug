{"sha": "aa8bdfee1db818b9a56908ab0197ff02c54bf281", "node_id": "C_kwDOANBUbNoAKGFhOGJkZmVlMWRiODE4YjlhNTY5MDhhYjAxOTdmZjAyYzU0YmYyODE", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-05-06T13:31:06Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-05-06T13:51:35Z"}, "message": "libstdc++: Fix test that fails on Solaris [PR104731]\n\nOn Solaris the dirent::d_name member is a single char, causing this test\nto fail with warnings about buffer overflow. Change the test to use a\nunion with additional space for writing a string to the d_name member.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/104731\n\t* testsuite/27_io/filesystem/iterators/error_reporting.cc:\n\tUse a trailing char array as storage for dirent::d_name.", "tree": {"sha": "b146de66f6ef7f5ed91fdac9477cadaf46b67e46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b146de66f6ef7f5ed91fdac9477cadaf46b67e46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa8bdfee1db818b9a56908ab0197ff02c54bf281", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa8bdfee1db818b9a56908ab0197ff02c54bf281", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa8bdfee1db818b9a56908ab0197ff02c54bf281", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa8bdfee1db818b9a56908ab0197ff02c54bf281/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e112e37f2920bcc9185e53b754d9145aac912c72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e112e37f2920bcc9185e53b754d9145aac912c72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e112e37f2920bcc9185e53b754d9145aac912c72"}], "stats": {"total": 35, "additions": 22, "deletions": 13}, "files": [{"sha": "1c8ea4c9249cb948c4f7207ccd61053bf7d26dda", "filename": "libstdc++-v3/testsuite/27_io/filesystem/iterators/error_reporting.cc", "status": "modified", "additions": 22, "deletions": 13, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa8bdfee1db818b9a56908ab0197ff02c54bf281/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fiterators%2Ferror_reporting.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa8bdfee1db818b9a56908ab0197ff02c54bf281/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fiterators%2Ferror_reporting.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fiterators%2Ferror_reporting.cc?ref=aa8bdfee1db818b9a56908ab0197ff02c54bf281", "patch": "@@ -28,35 +28,44 @@\n \n int choice;\n \n-struct dirent global_dirent;\n-\n extern \"C\" struct dirent* readdir(DIR*)\n {\n+  // On some targets dirent::d_name is very small, but the OS allocates\n+  // a trailing char array after the dirent struct. Emulate that here.\n+  union State\n+  {\n+    struct dirent d;\n+    char buf[sizeof(struct dirent) + 16] = {};\n+  };\n+\n+  static State state;\n+  char* d_name = state.buf + offsetof(struct dirent, d_name);\n+\n   switch (choice)\n   {\n   case 1:\n-    global_dirent.d_ino = 999;\n+    state.d.d_ino = 999;\n #if defined _GLIBCXX_HAVE_STRUCT_DIRENT_D_TYPE && defined DT_REG\n-    global_dirent.d_type = DT_REG;\n+    state.d.d_type = DT_REG;\n #endif\n-    global_dirent.d_reclen = 0;\n-    std::char_traits<char>::copy(global_dirent.d_name, \"file\", 5);\n+    state.d.d_reclen = 0;\n+    std::char_traits<char>::copy(d_name, \"file\", 5);\n     choice = 0;\n-    return &global_dirent;\n+    return &state.d;\n   case 2:\n-    global_dirent.d_ino = 111;\n+    state.d.d_ino = 111;\n #if defined _GLIBCXX_HAVE_STRUCT_DIRENT_D_TYPE && defined DT_DIR\n-    global_dirent.d_type = DT_DIR;\n+    state.d.d_type = DT_DIR;\n #endif\n-    global_dirent.d_reclen = 60;\n-    std::char_traits<char>::copy(global_dirent.d_name, \"subdir\", 7);\n+    state.d.d_reclen = 60;\n+    std::char_traits<char>::copy(d_name, \"subdir\", 7);\n     choice = 1;\n-    return &global_dirent;\n+    return &state.d;\n   default:\n     errno = EIO;\n     return nullptr;\n   }\n-  return &global_dirent;\n+  return &state.d;\n }\n \n void"}]}