{"sha": "f5c88dbfe7040583158ad45e4ef2801401a2732d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVjODhkYmZlNzA0MDU4MzE1OGFkNDVlNGVmMjgwMTQwMWEyNzMyZA==", "commit": {"author": {"name": "Jie Zhang", "email": "jie@codesourcery.com", "date": "2010-10-26T03:22:49Z"}, "committer": {"name": "Jie Zhang", "email": "jiez@gcc.gnu.org", "date": "2010-10-26T03:22:49Z"}, "message": "stor-layout.c (layout_decl): Use the field's type to determine the mode and keep DECL_BIT_FIELD for a...\n\n\t* stor-layout.c (layout_decl): Use the field's type to\n\tdetermine the mode and keep DECL_BIT_FIELD for a volatile\n\tbit-field.\n\t* config/arm/arm.c (arm_override_options): Default to\n\t-fstrict-volatile-bitfields.\n\n\ttestsuite/\n\t* gcc.target/arm/volatile-bitfields-1.c: New test.\n\t* gcc.target/arm/volatile-bitfields-2.c: New test.\n\t* gcc.target/arm/volatile-bitfields-3.c: New test.\n\nFrom-SVN: r165934", "tree": {"sha": "e3deba847e33f104b4175dd8a3946b33f33a08d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3deba847e33f104b4175dd8a3946b33f33a08d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5c88dbfe7040583158ad45e4ef2801401a2732d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5c88dbfe7040583158ad45e4ef2801401a2732d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5c88dbfe7040583158ad45e4ef2801401a2732d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5c88dbfe7040583158ad45e4ef2801401a2732d/comments", "author": null, "committer": null, "parents": [{"sha": "7021d5df0a0c762b092f88d8274089fb12acc6ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7021d5df0a0c762b092f88d8274089fb12acc6ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7021d5df0a0c762b092f88d8274089fb12acc6ac"}], "stats": {"total": 81, "additions": 78, "deletions": 3}, "files": [{"sha": "a482314c4fef1c8d32853cab58fab55b8a16fbe9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c88dbfe7040583158ad45e4ef2801401a2732d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c88dbfe7040583158ad45e4ef2801401a2732d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f5c88dbfe7040583158ad45e4ef2801401a2732d", "patch": "@@ -1,3 +1,11 @@\n+2010-10-26  Jie Zhang  <jie@codesourcery.com>\n+\n+\t* stor-layout.c (layout_decl): Use the field's type to\n+\tdetermine the mode and keep DECL_BIT_FIELD for a volatile\n+\tbit-field.\n+\t* config/arm/arm.c (arm_override_options): Default to\n+\t-fstrict-volatile-bitfields.\n+\n 2010-10-25  Paul Koning  <ni1d@arrl.net>\n \n \t* config/pdp11/pdp11.md: Add define_constants for register"}, {"sha": "2586a272857ec728b98f040147fee3bf0ea60222", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c88dbfe7040583158ad45e4ef2801401a2732d/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c88dbfe7040583158ad45e4ef2801401a2732d/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=f5c88dbfe7040583158ad45e4ef2801401a2732d", "patch": "@@ -1971,6 +1971,10 @@ arm_option_override (void)\n \t\t\t   global_options.x_param_values,\n \t\t\t   global_options_set.x_param_values);\n \n+  /* ARM EABI defaults to strict volatile bitfields.  */\n+  if (TARGET_AAPCS_BASED && flag_strict_volatile_bitfields < 0)\n+    flag_strict_volatile_bitfields = 1;\n+\n   /* Register global variables with the garbage collector.  */\n   arm_add_gc_roots ();\n }"}, {"sha": "17e4fe54a37e8a126be479247a803fb85499f5db", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c88dbfe7040583158ad45e4ef2801401a2732d/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c88dbfe7040583158ad45e4ef2801401a2732d/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=f5c88dbfe7040583158ad45e4ef2801401a2732d", "patch": "@@ -661,11 +661,14 @@ layout_decl (tree decl, unsigned int known_align)\n \t    }\n \n \t  /* See if we can use an ordinary integer mode for a bit-field.\n-\t     Conditions are: a fixed size that is correct for another mode\n-\t     and occupying a complete byte or bytes on proper boundary.  */\n+\t     Conditions are: a fixed size that is correct for another mode,\n+\t     occupying a complete byte or bytes on proper boundary,\n+\t     and not volatile or not -fstrict-volatile-bitfields.  */\n \t  if (TYPE_SIZE (type) != 0\n \t      && TREE_CODE (TYPE_SIZE (type)) == INTEGER_CST\n-\t      && GET_MODE_CLASS (TYPE_MODE (type)) == MODE_INT)\n+\t      && GET_MODE_CLASS (TYPE_MODE (type)) == MODE_INT\n+\t      && !(TREE_THIS_VOLATILE (decl)\n+\t\t   && flag_strict_volatile_bitfields > 0))\n \t    {\n \t      enum machine_mode xmode\n \t\t= mode_for_size_tree (DECL_SIZE (decl), MODE_INT, 1);"}, {"sha": "48ab2cdea5f5d953757da9dc42eabedd7b3a5b8a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c88dbfe7040583158ad45e4ef2801401a2732d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c88dbfe7040583158ad45e4ef2801401a2732d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f5c88dbfe7040583158ad45e4ef2801401a2732d", "patch": "@@ -1,3 +1,9 @@\n+2010-10-26  Jie Zhang  <jie@codesourcery.com>\n+\n+\t* gcc.target/arm/volatile-bitfields-1.c: New test.\n+\t* gcc.target/arm/volatile-bitfields-2.c: New test.\n+\t* gcc.target/arm/volatile-bitfields-3.c: New test.\n+\n 2010-10-25  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/pointer_discr1.adb: New test."}, {"sha": "c519419ccf9412775d7acfb6a0159b26a8ede954", "filename": "gcc/testsuite/gcc.target/arm/volatile-bitfields-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c88dbfe7040583158ad45e4ef2801401a2732d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvolatile-bitfields-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c88dbfe7040583158ad45e4ef2801401a2732d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvolatile-bitfields-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvolatile-bitfields-1.c?ref=f5c88dbfe7040583158ad45e4ef2801401a2732d", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-require-effective-target arm_eabi } */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+typedef struct {\n+  char a:1;\n+  char b:7;\n+  int c;\n+} BitStruct;\n+\n+volatile BitStruct bits;\n+\n+int foo ()\n+{\n+  return bits.b;\n+}\n+\n+/* { dg-final { scan-assembler \"ldrb\\[\\\\t \\]+\\[^\\n\\]*,\\[\\\\t \\]*\\\\\\[\\[^\\n\\]*\\\\\\]\" } } */"}, {"sha": "eb0aaf7f7e6e7663bc74d918292258eedb0ee613", "filename": "gcc/testsuite/gcc.target/arm/volatile-bitfields-2.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c88dbfe7040583158ad45e4ef2801401a2732d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvolatile-bitfields-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c88dbfe7040583158ad45e4ef2801401a2732d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvolatile-bitfields-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvolatile-bitfields-2.c?ref=f5c88dbfe7040583158ad45e4ef2801401a2732d", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-require-effective-target arm_eabi } */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+typedef struct {\n+  volatile unsigned long a:8;\n+  volatile unsigned long b:8;\n+  volatile unsigned long c:16;\n+} BitStruct;\n+\n+BitStruct bits;\n+\n+unsigned long foo ()\n+{\n+  return bits.b;\n+}\n+\n+/* { dg-final { scan-assembler \"ldr\\[\\\\t \\]+\\[^\\n\\]*,\\[\\\\t \\]*\\\\\\[\\[^\\n\\]*\\\\\\]\" } } */"}, {"sha": "0f5dde08b47f5033916661c760023f199e1cc467", "filename": "gcc/testsuite/gcc.target/arm/volatile-bitfields-3.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5c88dbfe7040583158ad45e4ef2801401a2732d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvolatile-bitfields-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5c88dbfe7040583158ad45e4ef2801401a2732d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvolatile-bitfields-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvolatile-bitfields-3.c?ref=f5c88dbfe7040583158ad45e4ef2801401a2732d", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-require-effective-target arm_eabi } */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+typedef struct {\n+  volatile unsigned long a:8;\n+  volatile unsigned long b:8;\n+  volatile unsigned long c:16;\n+} BitStruct;\n+\n+BitStruct bits;\n+\n+unsigned long foo ()\n+{\n+  return bits.c;\n+}\n+\n+/* { dg-final { scan-assembler \"ldr\\[\\\\t \\]+\\[^\\n\\]*,\\[\\\\t \\]*\\\\\\[\\[^\\n\\]*\\\\\\]\" } } */"}]}