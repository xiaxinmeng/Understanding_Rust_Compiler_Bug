{"sha": "634e03d3b84e77a4ff15f6271016dcb309eb0f95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM0ZTAzZDNiODRlNzdhNGZmMTVmNjI3MTAxNmRjYjMwOWViMGY5NQ==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2013-05-24T09:08:45Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2013-05-24T09:08:45Z"}, "message": "re PR tree-optimization/57385 ([tree-ssa] Possible segfault in fully_constant_vn_reference_p)\n\ngcc/ChangeLog\n        PR tree-ssa/57385\n        * tree-ssa-sccvn.c (fully_constant_vn_reference_p): Check\n        that index is not negative.\n\ngcc/testsuite/ChangeLog\n        PR tree-ssa/57385\n        * gcc.dg/tree-ssa/pr57385.c: New test.\n\nFrom-SVN: r199282", "tree": {"sha": "a4f0295eb7ee3be44054ba1e4ed8760a40410884", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4f0295eb7ee3be44054ba1e4ed8760a40410884"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/634e03d3b84e77a4ff15f6271016dcb309eb0f95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/634e03d3b84e77a4ff15f6271016dcb309eb0f95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/634e03d3b84e77a4ff15f6271016dcb309eb0f95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/634e03d3b84e77a4ff15f6271016dcb309eb0f95/comments", "author": null, "committer": null, "parents": [{"sha": "633a3f2aea9d047c21afd1ae7fb2d5c02589e883", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/633a3f2aea9d047c21afd1ae7fb2d5c02589e883", "html_url": "https://github.com/Rust-GCC/gccrs/commit/633a3f2aea9d047c21afd1ae7fb2d5c02589e883"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "01f77cbfa87214f93a35f231c659c8cdbea584eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/634e03d3b84e77a4ff15f6271016dcb309eb0f95/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/634e03d3b84e77a4ff15f6271016dcb309eb0f95/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=634e03d3b84e77a4ff15f6271016dcb309eb0f95", "patch": "@@ -1,3 +1,9 @@\n+2013-05-24  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\n+\tPR tree-ssa/57385\n+\t* tree-ssa-sccvn.c (fully_constant_vn_reference_p): Check\n+\tthat index is not negative.\n+\n 2013-05-24  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR rtl-optimization/55177"}, {"sha": "ca359e4ef6866bf04202a8b5f0abbe55efa103ae", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/634e03d3b84e77a4ff15f6271016dcb309eb0f95/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/634e03d3b84e77a4ff15f6271016dcb309eb0f95/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=634e03d3b84e77a4ff15f6271016dcb309eb0f95", "patch": "@@ -1,3 +1,8 @@\n+2013-05-24  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\n+\tPR tree-ssa/57385\n+\t* gcc.dg/tree-ssa/pr57385.c: New test.\n+\n 2013-05-24  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/derived_type4.adb: New test."}, {"sha": "0e7a74c2a9c3d0be641600c9020cefd9ce22c8f3", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/634e03d3b84e77a4ff15f6271016dcb309eb0f95/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/634e03d3b84e77a4ff15f6271016dcb309eb0f95/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=634e03d3b84e77a4ff15f6271016dcb309eb0f95", "patch": "@@ -1294,6 +1294,7 @@ fully_constant_vn_reference_p (vn_reference_t ref)\n \t      == TYPE_MODE (TREE_TYPE (TREE_TYPE (arg0->op0))))\n \t  && GET_MODE_CLASS (TYPE_MODE (op->type)) == MODE_INT\n \t  && GET_MODE_SIZE (TYPE_MODE (op->type)) == 1\n+\t  && tree_int_cst_sgn (op->op0) >= 0\n \t  && compare_tree_int (op->op0, TREE_STRING_LENGTH (arg0->op0)) < 0)\n \treturn build_int_cst_type (op->type,\n \t\t\t\t   (TREE_STRING_POINTER (arg0->op0)"}]}