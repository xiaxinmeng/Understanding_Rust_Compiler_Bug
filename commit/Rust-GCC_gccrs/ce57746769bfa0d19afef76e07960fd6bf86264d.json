{"sha": "ce57746769bfa0d19afef76e07960fd6bf86264d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U1Nzc0Njc2OWJmYTBkMTlhZmVmNzZlMDc5NjBmZDZiZjg2MjY0ZA==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "1999-10-15T04:42:15Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "1999-10-15T04:42:15Z"}, "message": "* config/c4x/c4x.h (c4x_va_start, c4x_va_arg): Declare.\n\nFrom-SVN: r29997", "tree": {"sha": "2e3ec241bd7cf64acfcdc4e2d45107200bc988a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e3ec241bd7cf64acfcdc4e2d45107200bc988a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce57746769bfa0d19afef76e07960fd6bf86264d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce57746769bfa0d19afef76e07960fd6bf86264d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce57746769bfa0d19afef76e07960fd6bf86264d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce57746769bfa0d19afef76e07960fd6bf86264d/comments", "author": null, "committer": null, "parents": [{"sha": "f416f18c7056fb704558230cb33abc52003b8928", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f416f18c7056fb704558230cb33abc52003b8928", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f416f18c7056fb704558230cb33abc52003b8928"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "5f144b450d6df267ab06e7d4ec117b7b1e529f20", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce57746769bfa0d19afef76e07960fd6bf86264d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce57746769bfa0d19afef76e07960fd6bf86264d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce57746769bfa0d19afef76e07960fd6bf86264d", "patch": "@@ -1,3 +1,7 @@\n+Fri Oct 15 17:40:11 1999  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* config/c4x/c4x.h (c4x_va_start, c4x_va_arg): Declare.\n+\n Fri Oct 15 17:27:17 1999  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n \t* config/c4x/c4x.c (dst_operand): New."}, {"sha": "5644ee2c0754ed8b1dd5cd6e9408f1adb4ab2ec0", "filename": "gcc/config/c4x/c4x.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce57746769bfa0d19afef76e07960fd6bf86264d/gcc%2Fconfig%2Fc4x%2Fc4x.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce57746769bfa0d19afef76e07960fd6bf86264d/gcc%2Fconfig%2Fc4x%2Fc4x.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.h?ref=ce57746769bfa0d19afef76e07960fd6bf86264d", "patch": "@@ -1127,9 +1127,11 @@ extern struct rtx_def *c4x_function_arg();\n \n /* Varargs handling.  */\n \n+extern void c4x_va_start ();\n #define\tEXPAND_BUILTIN_VA_START(stdarg, valist, nextarg) \\\n   c4x_va_start (stdarg, valist, nextarg)\n \n+extern struct rtx_def *c4x_va_arg ();\n #define EXPAND_BUILTIN_VA_ARG(valist, type) \\\n   c4x_va_arg (valist, type)\n \n@@ -1142,7 +1144,9 @@ extern struct rtx_def *c4x_function_arg();\n /* Generating Code for Profiling  */\n \n /* Note that the generated assembly uses the ^ operator to load the 16\n-   MSBs of the address.  This is not supported by the TI assembler.  */\n+   MSBs of the address.  This is not supported by the TI assembler. \n+   The FUNCTION profiler needs a function mcount which gets passed\n+   a pointer to the LABELNO.  */\n \n #define FUNCTION_PROFILER(FILE, LABELNO) \t\t\t\\\n      if (! TARGET_C3X)\t\t\t\t\t\t\\\n@@ -1563,7 +1567,7 @@ extern struct rtx_def *c4x_gen_compare_reg ();\n #define HAVE_POST_MODIFY_DISP 1\n \n /* The number of insns that can be packed into a single opcode.  */\n-#define MULTIPACK_INSNS 2\n+#define PACK_INSNS 2\n \n /* Recognize any constant value that is a valid address. \n    We could allow arbitrary constant addresses in the large memory"}]}