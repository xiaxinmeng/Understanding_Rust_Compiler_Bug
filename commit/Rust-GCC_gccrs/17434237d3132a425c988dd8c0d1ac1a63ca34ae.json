{"sha": "17434237d3132a425c988dd8c0d1ac1a63ca34ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc0MzQyMzdkMzEzMmE0MjVjOTg4ZGQ4YzBkMWFjMWE2M2NhMzRhZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-04-09T20:53:31Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-04-09T20:53:31Z"}, "message": "PR c++/85262 - ICE with redundant qualification on constructor.\n\n\t* call.c (build_new_method_call_1): Move make_args_non_dependent\n\tafter A::A() handling.\n\nFrom-SVN: r259255", "tree": {"sha": "20a845286a6ac235d1f0b02933203f8eed409fec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20a845286a6ac235d1f0b02933203f8eed409fec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17434237d3132a425c988dd8c0d1ac1a63ca34ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17434237d3132a425c988dd8c0d1ac1a63ca34ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17434237d3132a425c988dd8c0d1ac1a63ca34ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17434237d3132a425c988dd8c0d1ac1a63ca34ae/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e9f59cfa4a357121c65c0911de5ac0d271bcdc59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9f59cfa4a357121c65c0911de5ac0d271bcdc59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9f59cfa4a357121c65c0911de5ac0d271bcdc59"}], "stats": {"total": 35, "additions": 27, "deletions": 8}, "files": [{"sha": "37f446feec0894434613b431b3746bf2c4400ab1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17434237d3132a425c988dd8c0d1ac1a63ca34ae/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17434237d3132a425c988dd8c0d1ac1a63ca34ae/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=17434237d3132a425c988dd8c0d1ac1a63ca34ae", "patch": "@@ -1,5 +1,9 @@\n 2018-04-09  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/85262 - ICE with redundant qualification on constructor.\n+\t* call.c (build_new_method_call_1): Move make_args_non_dependent\n+\tafter A::A() handling.\n+\n \tPR c++/85277 - ICE with invalid offsetof.\n \t* semantics.c (finish_offsetof): Avoid passing non-DECL to %qD.\n \tAdjust -Winvalid-offsetof diagnostic to say conditionally supported."}, {"sha": "f978ea73f3d70cc60d6f75f6777ebe3bbb6716ee", "filename": "gcc/cp/call.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17434237d3132a425c988dd8c0d1ac1a63ca34ae/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17434237d3132a425c988dd8c0d1ac1a63ca34ae/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=17434237d3132a425c988dd8c0d1ac1a63ca34ae", "patch": "@@ -9104,14 +9104,6 @@ build_new_method_call_1 (tree instance, tree fns, vec<tree, va_gc> **args,\n   basetype = TYPE_MAIN_VARIANT (TREE_TYPE (instance));\n   gcc_assert (CLASS_TYPE_P (basetype));\n \n-  if (processing_template_decl)\n-    {\n-      orig_args = args == NULL ? NULL : make_tree_vector_copy (*args);\n-      instance = build_non_dependent_expr (instance);\n-      if (args != NULL)\n-\tmake_args_non_dependent (*args);\n-    }\n-\n   user_args = args == NULL ? NULL : *args;\n   /* Under DR 147 A::A() is an invalid constructor call,\n      not a functional cast.  */\n@@ -9132,12 +9124,21 @@ build_new_method_call_1 (tree instance, tree fns, vec<tree, va_gc> **args,\n       return call;\n     }\n \n+  if (processing_template_decl)\n+    {\n+      orig_args = args == NULL ? NULL : make_tree_vector_copy (*args);\n+      instance = build_non_dependent_expr (instance);\n+      if (args != NULL)\n+\tmake_args_non_dependent (*args);\n+    }\n+\n   /* Process the argument list.  */\n   if (args != NULL && *args != NULL)\n     {\n       *args = resolve_args (*args, complain);\n       if (*args == NULL)\n \treturn error_mark_node;\n+      user_args = *args;\n     }\n \n   /* Consider the object argument to be used even if we end up selecting a"}, {"sha": "99d3ca8c18d782277af704444161acfec6ef56b8", "filename": "gcc/testsuite/g++.dg/parse/ctor10.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17434237d3132a425c988dd8c0d1ac1a63ca34ae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fctor10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17434237d3132a425c988dd8c0d1ac1a63ca34ae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fctor10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fctor10.C?ref=17434237d3132a425c988dd8c0d1ac1a63ca34ae", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/85262\n+// { dg-options -fpermissive }\n+\n+struct A {};\n+\n+template<int> struct B : A\n+{\n+  B()\n+  {\n+    A::A(A());\t\t\t// { dg-warning \"constructor\" }\n+  }\n+};\n+\n+B<0> b;"}]}