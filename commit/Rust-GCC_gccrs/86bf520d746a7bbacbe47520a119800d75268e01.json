{"sha": "86bf520d746a7bbacbe47520a119800d75268e01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZiZjUyMGQ3NDZhN2JiYWNiZTQ3NTIwYTExOTgwMGQ3NTI2OGUwMQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2007-07-07T13:15:40Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2007-07-07T13:15:40Z"}, "message": "decl.c, [...]: Fix comment typos.\n\n\t* decl.c, gfortran.h, interface.c, module.c, resolve.c,\n\ttrans-array.c, trans-decl.c: Fix comment typos.  Follow\n\tspelling conventions.\n\t* intrinsic.texi: Fix typos.  Follow spelling conventions.\n\nFrom-SVN: r126440", "tree": {"sha": "1626fc2ae5d875b358c586381c0d968e1b8da61c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1626fc2ae5d875b358c586381c0d968e1b8da61c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86bf520d746a7bbacbe47520a119800d75268e01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86bf520d746a7bbacbe47520a119800d75268e01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86bf520d746a7bbacbe47520a119800d75268e01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86bf520d746a7bbacbe47520a119800d75268e01/comments", "author": null, "committer": null, "parents": [{"sha": "6ed3da0066019f8902326857ca7b9cfb5dafab89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ed3da0066019f8902326857ca7b9cfb5dafab89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ed3da0066019f8902326857ca7b9cfb5dafab89"}], "stats": {"total": 43, "additions": 25, "deletions": 18}, "files": [{"sha": "bcf606276e1b16c7c7a264d9a9b6f817f03fa3d2", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86bf520d746a7bbacbe47520a119800d75268e01/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86bf520d746a7bbacbe47520a119800d75268e01/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=86bf520d746a7bbacbe47520a119800d75268e01", "patch": "@@ -1,3 +1,10 @@\n+2007-07-07  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* decl.c, gfortran.h, interface.c, module.c, resolve.c,\n+\ttrans-array.c, trans-decl.c: Fix comment typos.  Follow\n+\tspelling conventions.\n+\t* intrinsic.texi: Fix typos.  Follow spelling conventions.\n+\n 2007-05-06  Daniel Franke  <franke.daniel@gmail.com>\n \n \tPR fortran/32633"}, {"sha": "f0dbea285d87d53e55feba4f24847ccfc5a963bc", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86bf520d746a7bbacbe47520a119800d75268e01/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86bf520d746a7bbacbe47520a119800d75268e01/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=86bf520d746a7bbacbe47520a119800d75268e01", "patch": "@@ -4017,7 +4017,7 @@ gfc_match_subroutine (void)\n \n /* Match a BIND(C) specifier, with the optional 'name=' specifier if\n    given, and set the binding label in either the given symbol (if not\n-   NULL), or in the current_ts.  The symbol may be NULL becuase we may\n+   NULL), or in the current_ts.  The symbol may be NULL because we may\n    encounter the BIND(C) before the declaration itself.  Return\n    MATCH_NO if what we're looking at isn't a BIND(C) specifier,\n    MATCH_ERROR if it is a BIND(C) clause but an error was encountered,\n@@ -4915,7 +4915,7 @@ gfc_match_protected (void)\n }\n \n \n-/* The PRIVATE statement is a bit weird in that it can be a attribute\n+/* The PRIVATE statement is a bit weird in that it can be an attribute\n    declaration, but also works as a standlone statement inside of a\n    type declaration or a module.  */\n "}, {"sha": "cf2546d1491dc1bab14f0a5bcf410c6be4620b33", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86bf520d746a7bbacbe47520a119800d75268e01/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86bf520d746a7bbacbe47520a119800d75268e01/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=86bf520d746a7bbacbe47520a119800d75268e01", "patch": "@@ -297,7 +297,7 @@ typedef enum ifsrc\n }\n ifsrc;\n \n-/* Whether a SAVE attribute was set explicitly or implictly.  */\n+/* Whether a SAVE attribute was set explicitly or implicitly.  */\n typedef enum save_state\n { SAVE_NONE = 0, SAVE_EXPLICIT, SAVE_IMPLICIT\n }"}, {"sha": "c50e0bfe299a440153026c4d96325a6193aa3a92", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86bf520d746a7bbacbe47520a119800d75268e01/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86bf520d746a7bbacbe47520a119800d75268e01/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=86bf520d746a7bbacbe47520a119800d75268e01", "patch": "@@ -1972,7 +1972,7 @@ check_some_aliasing (gfc_formal_arglist *f, gfc_actual_arglist *a)\n \n \n /* Given a symbol of a formal argument list and an expression,\n-   return non-zero if their intents are compatible, zero otherwise.  */\n+   return nonzero if their intents are compatible, zero otherwise.  */\n \n static int\n compare_parameter_intent (gfc_symbol *formal, gfc_expr *actual)"}, {"sha": "8721d86fd38cbef3e8a28b690ad0e3f8ce157c31", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86bf520d746a7bbacbe47520a119800d75268e01/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86bf520d746a7bbacbe47520a119800d75268e01/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=86bf520d746a7bbacbe47520a119800d75268e01", "patch": "@@ -1845,8 +1845,8 @@ end program test_btest\n @node C_ASSOCIATED\n @section @code{C_ASSOCIATED} --- Status of a C pointer\n @fnindex C_ASSOCIATED\n-@cindex associatation status, C pointer\n-@cindex pointer, C associatation status\n+@cindex association status, C pointer\n+@cindex pointer, C association status\n \n @table @asis\n @item @emph{Description}:\n@@ -2235,7 +2235,7 @@ Subroutine, non-elemental function\n                         specify a valid path within the file system.\n @item @var{STATUS} @tab (Optional) @code{INTEGER} status flag of the default\n                         kind.  Returns 0 on success, and a system specific\n-                        and non-zero error code otherwise.\n+                        and nonzero error code otherwise.\n @end multitable\n \n @item @emph{Example}:\n@@ -2293,11 +2293,11 @@ used as the file name.\n @code{/bin/chmod}.\n \n @item @var{STATUS} @tab (optional) scalar @code{INTEGER}, which is\n-@code{0} on success and non-zero otherwise.\n+@code{0} on success and nonzero otherwise.\n @end multitable\n \n @item @emph{Return value}:\n-In either syntax, @var{STATUS} is set to @code{0} on success and non-zero\n+In either syntax, @var{STATUS} is set to @code{0} on success and nonzero\n otherwise.\n \n @item @emph{Example}:\n@@ -4305,7 +4305,7 @@ Moves @var{UNIT} to the specified @var{OFFSET}. If @var{WHENCE}\n is set to 0, the @var{OFFSET} is taken as an absolute value @code{SEEK_SET},\n if set to 1, @var{OFFSET} is taken to be relative to the current position \n @code{SEEK_CUR}, and if set to 2 relative to the end of the file @code{SEEK_END}.\n-On error, @var{STATUS} is set to a non-zero value. If @var{STATUS} the seek \n+On error, @var{STATUS} is set to a nonzero value. If @var{STATUS} the seek \n fails silently.\n \n This intrinsic routine is not fully backwards compatible with @command{g77}. \n@@ -4684,7 +4684,7 @@ Non-elemental subroutine.\n @multitable @columnfractions .15 .70\n @item @var{CWD}    @tab The type shall be @code{CHARACTER(*)}.\n @item @var{STATUS} @tab (Optional) status flag. Returns 0 on success, \n-                        a system specific and non-zero error code otherwise.\n+                        a system specific and nonzero error code otherwise.\n @end multitable\n \n @item @emph{Example}:\n@@ -7902,7 +7902,7 @@ If @var{VECTOR} is present, the result size is that of @var{VECTOR}, the\n number of @code{TRUE} values in @var{MASK} otherwise.\n \n @item @emph{Example}:\n-Gathering non-zero elements from an array:\n+Gathering nonzero elements from an array:\n @smallexample\n PROGRAM test_pack_1\n   INTEGER :: m(6)\n@@ -7911,7 +7911,7 @@ PROGRAM test_pack_1\n END PROGRAM\n @end smallexample\n \n-Gathering non-zero elements from an array and appending elements from @var{VECTOR}:\n+Gathering nonzero elements from an array and appending elements from @var{VECTOR}:\n @smallexample\n PROGRAM test_pack_2\n   INTEGER :: m(4)\n@@ -10444,7 +10444,7 @@ F95 and later\n Elemental function\n \n @item @emph{Syntax}:\n-@code{RESULT = VERFIY(STRING, SET[, BACK])}\n+@code{RESULT = VERIFY(STRING, SET[, BACK])}\n \n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70"}, {"sha": "f48932207f2ca57ac05457eb35e05439e5e1b208", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86bf520d746a7bbacbe47520a119800d75268e01/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86bf520d746a7bbacbe47520a119800d75268e01/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=86bf520d746a7bbacbe47520a119800d75268e01", "patch": "@@ -4234,7 +4234,7 @@ sort_iso_c_rename_list (void)\n }\n \n \n-/* Import the instrinsic ISO_C_BINDING module, generating symbols in\n+/* Import the intrinsic ISO_C_BINDING module, generating symbols in\n    the current namespace for all named constants, pointer types, and\n    procedures in the module unless the only clause was used or a rename\n    list was provided.  */"}, {"sha": "16a782ad6030e7c12d52231f8f3127953f52ee18", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86bf520d746a7bbacbe47520a119800d75268e01/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86bf520d746a7bbacbe47520a119800d75268e01/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=86bf520d746a7bbacbe47520a119800d75268e01", "patch": "@@ -3849,7 +3849,7 @@ gfc_resolve_expr (gfc_expr *e)\n \t}\n \n       /* This provides the opportunity for the length of constructors with\n-\t character valued function elements to propogate the string length\n+\t character valued function elements to propagate the string length\n \t to the expression.  */\n       if (e->ts.type == BT_CHARACTER)\n \tgfc_resolve_character_array_constructor (e);"}, {"sha": "72bfd38e1669df245a23c31682f9316a55315341", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86bf520d746a7bbacbe47520a119800d75268e01/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86bf520d746a7bbacbe47520a119800d75268e01/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=86bf520d746a7bbacbe47520a119800d75268e01", "patch": "@@ -1594,7 +1594,7 @@ constant_array_constructor_loop_size (gfc_loopinfo * loop)\n \treturn NULL_TREE;\n       if (!integer_zerop (loop->from[i]))\n \t{\n-\t  /* Only allow non-zero \"from\" in one-dimensional arrays.  */\n+\t  /* Only allow nonzero \"from\" in one-dimensional arrays.  */\n \t  if (loop->dimen != 1)\n \t    return NULL_TREE;\n \t  tmp = fold_build2 (MINUS_EXPR, gfc_array_index_type,"}, {"sha": "6e960630cadf06cb13b79ef6d4b64561160ce228", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86bf520d746a7bbacbe47520a119800d75268e01/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86bf520d746a7bbacbe47520a119800d75268e01/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=86bf520d746a7bbacbe47520a119800d75268e01", "patch": "@@ -1280,7 +1280,7 @@ build_function_decl (gfc_symbol * sym)\n   if (attr.pure || attr.elemental)\n     {\n       /* TODO: check if a pure SUBROUTINE has no INTENT(OUT) arguments\n-\t including a alternate return. In that case it can also be\n+\t including an alternate return. In that case it can also be\n \t marked as PURE. See also in gfc_get_extern_function_decl().  */\n       if (attr.function && !gfc_return_by_reference (sym))\n \tDECL_IS_PURE (fndecl) = 1;"}]}