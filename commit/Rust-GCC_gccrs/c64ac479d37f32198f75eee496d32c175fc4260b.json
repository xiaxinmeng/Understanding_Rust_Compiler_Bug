{"sha": "c64ac479d37f32198f75eee496d32c175fc4260b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY0YWM0NzlkMzdmMzIxOThmNzVlZWU0OTZkMzJjMTc1ZmM0MjYwYg==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-03-05T10:46:59Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-10T13:34:58Z"}, "message": "[Ada] Fold Enum_Rep attribute in evaluation and not in expansion\n\n2020-06-10  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* exp_attr.adb (Expand_N_Attribute_Reference): Remove folding\n\tfor Enum_Rep attribute.\n\t* exp_spark.adb (Expand_SPARK_N_Attribute_Reference): Remove\n\tduplicated code for folding Enum_Rep attribute.\n\t* sem_attr.adb (Eval_Attribute): Relax condition for folding\n\tEnum_Rep attribute; previously dead code is now executed when\n\tthe attribute prefix is an enumeration literal; refine type in\n\tprocessing of Enum_Val.", "tree": {"sha": "85d00dc2b9d555ac89ace0bd3392574976a2e4f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85d00dc2b9d555ac89ace0bd3392574976a2e4f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c64ac479d37f32198f75eee496d32c175fc4260b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c64ac479d37f32198f75eee496d32c175fc4260b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c64ac479d37f32198f75eee496d32c175fc4260b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c64ac479d37f32198f75eee496d32c175fc4260b/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4322f3d99b7e5875de59c04939c4a4def1ffde5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4322f3d99b7e5875de59c04939c4a4def1ffde5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4322f3d99b7e5875de59c04939c4a4def1ffde5c"}], "stats": {"total": 46, "additions": 9, "deletions": 37}, "files": [{"sha": "356d3dbd069868ef8b97061795768aaf356d86d4", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c64ac479d37f32198f75eee496d32c175fc4260b/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c64ac479d37f32198f75eee496d32c175fc4260b/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=c64ac479d37f32198f75eee496d32c175fc4260b", "patch": "@@ -3159,17 +3159,8 @@ package body Exp_Attr is\n             Expr := Pref;\n          end if;\n \n-         --  If the expression is an enumeration literal, it is replaced by the\n-         --  literal value.\n-\n-         if Nkind (Expr) in N_Has_Entity\n-           and then Ekind (Entity (Expr)) = E_Enumeration_Literal\n-         then\n-            Rewrite (N,\n-              Make_Integer_Literal (Loc, Enumeration_Rep (Entity (Expr))));\n-\n-         --  If not constant-folded above, Enum_Type'Enum_Rep (X) or\n-         --  X'Enum_Rep expands to\n+         --  If not constant-folded, Enum_Type'Enum_Rep (X) or X'Enum_Rep\n+         --  expands to\n \n          --    target-type (X)\n \n@@ -3185,7 +3176,7 @@ package body Exp_Attr is\n          --  first convert to a small signed integer type in order not to lose\n          --  the size information.\n \n-         elsif Is_Enumeration_Type (Ptyp) then\n+         if Is_Enumeration_Type (Ptyp) then\n             Psiz := RM_Size (Base_Type (Ptyp));\n \n             if Psiz < 8 then"}, {"sha": "cab48f49b5cba2407f6e8c8ab24412c9b4a4b152", "filename": "gcc/ada/exp_spark.adb", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c64ac479d37f32198f75eee496d32c175fc4260b/gcc%2Fada%2Fexp_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c64ac479d37f32198f75eee496d32c175fc4260b/gcc%2Fada%2Fexp_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_spark.adb?ref=c64ac479d37f32198f75eee496d32c175fc4260b", "patch": "@@ -199,29 +199,6 @@ package body Exp_SPARK is\n              Parameter_Associations => New_List (Expr)));\n          Analyze_And_Resolve (N, Typ);\n \n-      --  Whenever possible, replace a prefix which is an enumeration literal\n-      --  by the corresponding literal value, just like it happens in the GNAT\n-      --  expander.\n-\n-      elsif Attr_Id = Attribute_Enum_Rep then\n-         declare\n-            Exprs : constant List_Id := Expressions (N);\n-         begin\n-            if Is_Non_Empty_List (Exprs) then\n-               Expr := First (Exprs);\n-            else\n-               Expr := Prefix (N);\n-            end if;\n-\n-            --  If the argument is a literal, expand it\n-\n-            if Nkind (Expr) in N_Has_Entity\n-              and then Ekind (Entity (Expr)) = E_Enumeration_Literal\n-            then\n-               Exp_Attr.Expand_N_Attribute_Reference (N);\n-            end if;\n-         end;\n-\n       elsif Attr_Id = Attribute_Object_Size\n         or else Attr_Id = Attribute_Size\n         or else Attr_Id = Attribute_Value_Size"}, {"sha": "d2ac4c77298e6b710e86c83c357bd5dbdb4663cd", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c64ac479d37f32198f75eee496d32c175fc4260b/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c64ac479d37f32198f75eee496d32c175fc4260b/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=c64ac479d37f32198f75eee496d32c175fc4260b", "patch": "@@ -7719,7 +7719,11 @@ package body Sem_Attr is\n       --  purpose, a string literal counts as an object (attributes of string\n       --  literals can only appear in generated code).\n \n-      if Is_Object_Reference (P) or else Nkind (P) = N_String_Literal then\n+      if Is_Object_Reference (P)\n+        or else Nkind (P) = N_String_Literal\n+        or else (Is_Entity_Name (P)\n+                 and then Ekind (Entity (P)) = E_Enumeration_Literal)\n+      then\n \n          --  For Component_Size, the prefix is an array object, and we apply\n          --  the attribute to the type of the object. This is allowed for both\n@@ -8533,7 +8537,7 @@ package body Sem_Attr is\n       --------------\n \n       when Attribute_Enum_Val => Enum_Val : declare\n-         Lit : Node_Id;\n+         Lit : Entity_Id;\n \n       begin\n          --  We have something like Enum_Type'Enum_Val (23), so search for a"}]}