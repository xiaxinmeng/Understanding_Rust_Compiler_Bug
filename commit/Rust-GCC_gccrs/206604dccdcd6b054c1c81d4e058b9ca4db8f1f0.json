{"sha": "206604dccdcd6b054c1c81d4e058b9ca4db8f1f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA2NjA0ZGNjZGNkNmIwNTRjMWM4MWQ0ZTA1OGI5Y2E0ZGI4ZjFmMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-11-20T08:38:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-11-20T08:38:11Z"}, "message": "re PR debug/55094 (ICE in maybe_record_trace_start, at dwarf2cfi.c:2224)\n\n\tPR middle-end/55094\n\t* builtins.c (expand_builtin_trap): Add REG_ARGS_SIZE note\n\ton the trap insn for !ACCUMULATE_OUTGOING_ARGS.\n\t* cfgcleanup.c (outgoing_edges_match): Don't look at debug insns\n\ton the first old_insns_match_p call.  For !ACCUMULATE_OUTGOING_ARGS\n\tfail if the last real insn doesn't have REG_ARGS_SIZE note.\n\n\t* gcc.dg/pr55094.c: New test.\n\nFrom-SVN: r193649", "tree": {"sha": "3f976d8db947ec504470f76bc3ab56713f7f77aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f976d8db947ec504470f76bc3ab56713f7f77aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/206604dccdcd6b054c1c81d4e058b9ca4db8f1f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/206604dccdcd6b054c1c81d4e058b9ca4db8f1f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/206604dccdcd6b054c1c81d4e058b9ca4db8f1f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/206604dccdcd6b054c1c81d4e058b9ca4db8f1f0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b845c6e70049828a6732f60e2eb03042cc6ff1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b845c6e70049828a6732f60e2eb03042cc6ff1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b845c6e70049828a6732f60e2eb03042cc6ff1b"}], "stats": {"total": 92, "additions": 88, "deletions": 4}, "files": [{"sha": "9041558ff5f18533c64923983032864740d14d3d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/206604dccdcd6b054c1c81d4e058b9ca4db8f1f0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/206604dccdcd6b054c1c81d4e058b9ca4db8f1f0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=206604dccdcd6b054c1c81d4e058b9ca4db8f1f0", "patch": "@@ -1,5 +1,12 @@\n 2012-11-20  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/55094\n+\t* builtins.c (expand_builtin_trap): Add REG_ARGS_SIZE note\n+\ton the trap insn for !ACCUMULATE_OUTGOING_ARGS.\n+\t* cfgcleanup.c (outgoing_edges_match): Don't look at debug insns\n+\ton the first old_insns_match_p call.  For !ACCUMULATE_OUTGOING_ARGS\n+\tfail if the last real insn doesn't have REG_ARGS_SIZE note.\n+\n \tPR rtl-optimization/54921\n \t* cselib.h (fp_setter_insn): New prototype.\n \t* cselib.c (fp_setter_insn): New function."}, {"sha": "b0cab51556ef9436f755874a0852194a5e77d58f", "filename": "gcc/builtins.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/206604dccdcd6b054c1c81d4e058b9ca4db8f1f0/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/206604dccdcd6b054c1c81d4e058b9ca4db8f1f0/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=206604dccdcd6b054c1c81d4e058b9ca4db8f1f0", "patch": "@@ -4666,7 +4666,14 @@ expand_builtin_trap (void)\n {\n #ifdef HAVE_trap\n   if (HAVE_trap)\n-    emit_insn (gen_trap ());\n+    {\n+      rtx insn = emit_insn (gen_trap ());\n+      /* For trap insns when not accumulating outgoing args force\n+\t REG_ARGS_SIZE note to prevent crossjumping of calls with\n+\t different args sizes.  */\n+      if (!ACCUMULATE_OUTGOING_ARGS)\n+\tadd_reg_note (insn, REG_ARGS_SIZE, GEN_INT (stack_pointer_delta));\n+    }\n   else\n #endif\n     emit_library_call (abort_libfunc, LCT_NORETURN, VOIDmode, 0);"}, {"sha": "94267b6e15da0816d5a4197db13e357fa623dc6f", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/206604dccdcd6b054c1c81d4e058b9ca4db8f1f0/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/206604dccdcd6b054c1c81d4e058b9ca4db8f1f0/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=206604dccdcd6b054c1c81d4e058b9ca4db8f1f0", "patch": "@@ -1,7 +1,7 @@\n /* Control flow optimization code for GNU compiler.\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2010, 2011\n-   Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2010, 2011,\n+   2012 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -1702,9 +1702,15 @@ outgoing_edges_match (int mode, basic_block bb1, basic_block bb2)\n \t}\n     }\n \n+  rtx last1 = BB_END (bb1);\n+  rtx last2 = BB_END (bb2);\n+  if (DEBUG_INSN_P (last1))\n+    last1 = prev_nondebug_insn (last1);\n+  if (DEBUG_INSN_P (last2))\n+    last2 = prev_nondebug_insn (last2);\n   /* First ensure that the instructions match.  There may be many outgoing\n      edges so this test is generally cheaper.  */\n-  if (old_insns_match_p (mode, BB_END (bb1), BB_END (bb2)) != dir_both)\n+  if (old_insns_match_p (mode, last1, last2) != dir_both)\n     return false;\n \n   /* Search the outgoing edges, ensure that the counts do match, find possible\n@@ -1713,10 +1719,14 @@ outgoing_edges_match (int mode, basic_block bb1, basic_block bb2)\n   if (EDGE_COUNT (bb1->succs) != EDGE_COUNT (bb2->succs))\n     return false;\n \n+  bool nonfakeedges = false;\n   FOR_EACH_EDGE (e1, ei, bb1->succs)\n     {\n       e2 = EDGE_SUCC (bb2, ei.index);\n \n+      if ((e1->flags & EDGE_FAKE) == 0)\n+\tnonfakeedges = true;\n+\n       if (e1->flags & EDGE_EH)\n \tnehedges1++;\n \n@@ -1734,6 +1744,18 @@ outgoing_edges_match (int mode, basic_block bb1, basic_block bb2)\n       || (fallthru1 != 0) != (fallthru2 != 0))\n     return false;\n \n+  /* If !ACCUMULATE_OUTGOING_ARGS, bb1 (and bb2) have no successors\n+     and the last real insn doesn't have REG_ARGS_SIZE note, don't\n+     attempt to optimize, as the two basic blocks might have different\n+     REG_ARGS_SIZE depths.  For noreturn calls and unconditional\n+     traps there should be REG_ARG_SIZE notes, they could be missing\n+     for __builtin_unreachable () uses though.  */\n+  if (!nonfakeedges\n+      && !ACCUMULATE_OUTGOING_ARGS\n+      && (!INSN_P (last1)\n+          || !find_reg_note (last1, REG_ARGS_SIZE, NULL)))\n+    return false;\n+\n   /* fallthru edges must be forwarded to the same destination.  */\n   if (fallthru1)\n     {"}, {"sha": "86659e9a4db7a5681bf6c5ee971c4b136ea4a10f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/206604dccdcd6b054c1c81d4e058b9ca4db8f1f0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/206604dccdcd6b054c1c81d4e058b9ca4db8f1f0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=206604dccdcd6b054c1c81d4e058b9ca4db8f1f0", "patch": "@@ -1,5 +1,8 @@\n 2012-11-20  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/55094\n+\t* gcc.dg/pr55094.c: New test.\n+\n \tPR rtl-optimization/54921\n \t* gcc.dg/pr54921.c: New test.\n "}, {"sha": "c445b1a8649206c0fb849ebd093814e9b86ff3a8", "filename": "gcc/testsuite/gcc.dg/pr55094.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/206604dccdcd6b054c1c81d4e058b9ca4db8f1f0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55094.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/206604dccdcd6b054c1c81d4e058b9ca4db8f1f0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55094.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr55094.c?ref=206604dccdcd6b054c1c81d4e058b9ca4db8f1f0", "patch": "@@ -0,0 +1,45 @@\n+/* PR middle-end/55094 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fcompare-debug -Os\" } */\n+/* { dg-additional-options \"-fomit-frame-pointer -fno-asynchronous-unwind-tables -mpreferred-stack-boundary=2\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n+\n+extern int fn (long);\n+int v;\n+\n+int\n+foo (int x, long *y)\n+{\n+  if (x)\n+    {\n+      fn (y[0]);\n+      __builtin_trap ();\n+    }\n+  __builtin_trap ();\n+}\n+\n+int\n+bar (int x, long *y)\n+{\n+  if (x)\n+    {\n+      fn (y[0]);\n+      v = 1;\n+      __builtin_unreachable ();\n+    }\n+  v = 1;\n+  __builtin_unreachable ();\n+}\n+\n+int\n+baz (int x, long *y)\n+{\n+  if (x)\n+    {\n+      fn (y[0]);\n+      v = 1;\n+      __builtin_unreachable ();\n+    }\n+  v = 1;\n+  int w = 1;\n+  __builtin_unreachable ();\n+}"}]}