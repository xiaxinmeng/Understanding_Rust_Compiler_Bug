{"sha": "f2bc4e4800590aa59b0ac126676786dd4ce77867", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJiYzRlNDgwMDU5MGFhNTliMGFjMTI2Njc2Nzg2ZGQ0Y2U3Nzg2Nw==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2016-09-04T20:00:48Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2016-09-04T20:00:48Z"}, "message": "re PR fortran/77391 (gfortran allows CHARACTER(LEN=:),PARAMETER:: STRING='constant'   buts does not report it as an extension)\n\n2016-09-04  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/77391\n\t* resolve.c (deferred_requirements): New function to check F2008:C402.\n\t(resolve_fl_variable,resolve_fl_parameter): Use it.\n \n2016-09-04  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/77391\n\t* gfortran.dg/pr77391.f90: New test.\n\nFrom-SVN: r239982", "tree": {"sha": "aa692a2f3cd5fb4c8444351757e8c9277c8bd5da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa692a2f3cd5fb4c8444351757e8c9277c8bd5da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2bc4e4800590aa59b0ac126676786dd4ce77867", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2bc4e4800590aa59b0ac126676786dd4ce77867", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2bc4e4800590aa59b0ac126676786dd4ce77867", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2bc4e4800590aa59b0ac126676786dd4ce77867/comments", "author": null, "committer": null, "parents": [{"sha": "aa9cdb975501bf1019d390b41df6fe6ddea040b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa9cdb975501bf1019d390b41df6fe6ddea040b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa9cdb975501bf1019d390b41df6fe6ddea040b7"}], "stats": {"total": 56, "additions": 45, "deletions": 11}, "files": [{"sha": "8e525dc5fd60883402e51312f7d31456e7a6302c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2bc4e4800590aa59b0ac126676786dd4ce77867/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2bc4e4800590aa59b0ac126676786dd4ce77867/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f2bc4e4800590aa59b0ac126676786dd4ce77867", "patch": "@@ -1,3 +1,9 @@\n+2016-09-04  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/77391\n+\t* resolve.c (deferred_requirements): New function to check F2008:C402.\n+\t(resolve_fl_variable,resolve_fl_parameter): Use it.\n+ \n 2016-09-04  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/77460"}, {"sha": "f8ba00bab82ccabccae6e183400d4c089e6c9b4a", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 27, "deletions": 11, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2bc4e4800590aa59b0ac126676786dd4ce77867/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2bc4e4800590aa59b0ac126676786dd4ce77867/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=f2bc4e4800590aa59b0ac126676786dd4ce77867", "patch": "@@ -11488,6 +11488,27 @@ resolve_fl_variable_derived (gfc_symbol *sym, int no_init_flag)\n }\n \n \n+/* F2008, C402 (R401):  A colon shall not be used as a type-param-value\n+   except in the declaration of an entity or component that has the POINTER\n+   or ALLOCATABLE attribute.  */\n+\n+static bool\n+deferred_requirements (gfc_symbol *sym)\n+{\n+  if (sym->ts.deferred\n+      && !(sym->attr.pointer\n+\t   || sym->attr.allocatable\n+\t   || sym->attr.omp_udr_artificial_var))\n+    {\n+      gfc_error (\"Entity %qs at %L has a deferred type parameter and \"\n+\t\t \"requires either the POINTER or ALLOCATABLE attribute\",\n+\t\t sym->name, &sym->declared_at);\n+      return false;\n+    }\n+  return true;\n+}\n+\n+\n /* Resolve symbols with flavor variable.  */\n \n static bool\n@@ -11527,17 +11548,8 @@ resolve_fl_variable (gfc_symbol *sym, int mp_flag)\n     }\n \n   /* Constraints on deferred type parameter.  */\n-  if (sym->ts.deferred\n-      && !(sym->attr.pointer\n-\t   || sym->attr.allocatable\n-\t   || sym->attr.omp_udr_artificial_var))\n-    {\n-      gfc_error (\"Entity %qs at %L has a deferred type parameter and \"\n-\t\t \"requires either the pointer or allocatable attribute\",\n-\t\t     sym->name, &sym->declared_at);\n-      specification_expr = saved_specification_expr;\n-      return false;\n-    }\n+  if (!deferred_requirements (sym))\n+    return false;\n \n   if (sym->ts.type == BT_CHARACTER)\n     {\n@@ -13682,6 +13694,10 @@ resolve_fl_parameter (gfc_symbol *sym)\n       return false;\n     }\n \n+  /* Constraints on deferred type parameter.  */\n+  if (!deferred_requirements (sym))\n+    return false;\n+\n   /* Make sure a parameter that has been implicitly typed still\n      matches the implicit type, since PARAMETER statements can precede\n      IMPLICIT statements.  */"}, {"sha": "79ef275a01dfb8cfcc226c86b0b9c491cc8e6392", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2bc4e4800590aa59b0ac126676786dd4ce77867/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2bc4e4800590aa59b0ac126676786dd4ce77867/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f2bc4e4800590aa59b0ac126676786dd4ce77867", "patch": "@@ -1,3 +1,8 @@\n+2016-09-04  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/77391\n+\t* gfortran.dg/pr77391.f90: New test.\n+\n 2016-09-04  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/77460"}, {"sha": "b3a455aa719753c66ba239f37e63f4063eff9818", "filename": "gcc/testsuite/gfortran.dg/pr77391.f90", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2bc4e4800590aa59b0ac126676786dd4ce77867/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77391.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2bc4e4800590aa59b0ac126676786dd4ce77867/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77391.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr77391.f90?ref=f2bc4e4800590aa59b0ac126676786dd4ce77867", "patch": "@@ -0,0 +1,7 @@\n+! { dg-do compile }\n+program picky\n+character(len=:), parameter :: a=\"whoops\" ! { dg-error \"POINTER or ALLOCATABLE\" }\n+character(len=:) :: b=\"whoops\" ! { dg-error \"POINTER or ALLOCATABLE\" }\n+character(len=:) :: good\n+pointer good\n+end program picky"}]}