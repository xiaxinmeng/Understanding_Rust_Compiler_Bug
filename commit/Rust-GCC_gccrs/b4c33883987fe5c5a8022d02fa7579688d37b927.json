{"sha": "b4c33883987fe5c5a8022d02fa7579688d37b927", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRjMzM4ODM5ODdmZTVjNWE4MDIyZDAyZmE3NTc5Njg4ZDM3YjkyNw==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2005-01-18T17:52:33Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-01-18T17:52:33Z"}, "message": "re PR c/19472 (compiler internal error: in var_ann, at tree-flow-inline.h:34)\n\n2005-01-18  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR c/19472\n        * semantics.c (finish_asm_stmt): Strip nops off\n        input memory operands.\n\n2005-01-18  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR C/19472\n        * c-typeck.c (build_asm_expr): Strip nops off\n        input memory operands.\n\n2005-01-18  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR C/19472\n        * gcc.dg/asm-a.c: New test.\n\nFrom-SVN: r93840", "tree": {"sha": "40a09ff51423bf68a0d6f2772f26d18edcd6a83a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40a09ff51423bf68a0d6f2772f26d18edcd6a83a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4c33883987fe5c5a8022d02fa7579688d37b927", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4c33883987fe5c5a8022d02fa7579688d37b927", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4c33883987fe5c5a8022d02fa7579688d37b927", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4c33883987fe5c5a8022d02fa7579688d37b927/comments", "author": null, "committer": null, "parents": [{"sha": "56015ceeb5303ecc35444b1d3d5efbaa79e5f030", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56015ceeb5303ecc35444b1d3d5efbaa79e5f030", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56015ceeb5303ecc35444b1d3d5efbaa79e5f030"}], "stats": {"total": 51, "additions": 47, "deletions": 4}, "files": [{"sha": "0ca0d444afba3a122be1ab6996144f6ffd9ceee7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c33883987fe5c5a8022d02fa7579688d37b927/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c33883987fe5c5a8022d02fa7579688d37b927/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4c33883987fe5c5a8022d02fa7579688d37b927", "patch": "@@ -1,3 +1,9 @@\n+2005-01-18  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR C/19472\n+\t* c-typeck.c (build_asm_expr): Strip nops off\n+\tinput memory operands.\n+\n 2005-01-18  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/aix43.h (CPLUSPLUS_CPP_SPEC): Delete"}, {"sha": "f26e3868813479416a92a384a0c0ac30ce828ede", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c33883987fe5c5a8022d02fa7579688d37b927/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c33883987fe5c5a8022d02fa7579688d37b927/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=b4c33883987fe5c5a8022d02fa7579688d37b927", "patch": "@@ -6335,8 +6335,14 @@ build_asm_expr (tree string, tree outputs, tree inputs, tree clobbers,\n \t{\n \t  /* If the operand is going to end up in memory,\n \t     mark it addressable.  */\n-\t  if (!allows_reg && allows_mem && !c_mark_addressable (input))\n-\t    input = error_mark_node;\n+\t  if (!allows_reg && allows_mem)\n+\t    {\n+\t      /* Strip the nops as we allow this case.  FIXME, this really\n+\t\t should be rejected or made deprecated.  */\n+\t      STRIP_NOPS (input);\n+\t      if (!c_mark_addressable (input))\n+\t\tinput = error_mark_node;\n+\t  }\n \t}\n       else\n \tinput = error_mark_node;"}, {"sha": "76e41b5e305061e9a81f1445dfc653562e9e1804", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c33883987fe5c5a8022d02fa7579688d37b927/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c33883987fe5c5a8022d02fa7579688d37b927/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b4c33883987fe5c5a8022d02fa7579688d37b927", "patch": "@@ -1,3 +1,9 @@\n+2005-01-18  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR c/19472\n+\t* semantics.c (finish_asm_stmt): Strip nops off\n+\tinput memory operands.\n+\n 2005-01-18  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* Make-lang.in, call.c, cvt.c, init.c, rtti.c, tree.c,"}, {"sha": "2dc0cbb9ff023d7ede33eae4700e9587b6f896ec", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c33883987fe5c5a8022d02fa7579688d37b927/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c33883987fe5c5a8022d02fa7579688d37b927/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=b4c33883987fe5c5a8022d02fa7579688d37b927", "patch": "@@ -1206,8 +1206,14 @@ finish_asm_stmt (int volatile_p, tree string, tree output_operands,\n \t    {\n \t      /* If the operand is going to end up in memory,\n \t\t mark it addressable.  */\n-\t      if (!allows_reg && allows_mem && !cxx_mark_addressable (operand))\n-\t\toperand = error_mark_node;\n+\t      if (!allows_reg && allows_mem)\n+\t\t{\n+\t\t  /* Strip the nops as we allow this case.  FIXME, this really\n+\t\t     should be rejected or made deprecated.  */\n+\t\t  STRIP_NOPS (operand);\n+\t\t  if (!cxx_mark_addressable (operand))\n+\t\t    operand = error_mark_node;\n+\t\t}\n \t    }\n \t  else\n \t    operand = error_mark_node;"}, {"sha": "aef18d056f69f2d0e67107b01548907b0a85201a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c33883987fe5c5a8022d02fa7579688d37b927/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c33883987fe5c5a8022d02fa7579688d37b927/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b4c33883987fe5c5a8022d02fa7579688d37b927", "patch": "@@ -1,3 +1,8 @@\n+2005-01-18  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR c/19472\n+\t* gcc.dg/asm-a.c: New test.\n+\n 2005-01-18  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* gcc.dg/sh-relax.c: Add prototype for abort."}, {"sha": "aca2d4e59af1b79fa50b6fcccedff45054d47787", "filename": "gcc/testsuite/gcc.dg/asm-a.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c33883987fe5c5a8022d02fa7579688d37b927/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c33883987fe5c5a8022d02fa7579688d37b927/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-a.c?ref=b4c33883987fe5c5a8022d02fa7579688d37b927", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-require-effective-target ilp32 } */\n+/* { dg-options \"-O2\" } */\n+\n+/* The problem was we were not striping the long cast here.\n+   Note this really should be invalid code but not for the\n+   current release (4.0) as we have people using it.  */\n+\n+void blockCopy_MMX2(int*);\n+void postProcess_MMX2()\n+{\n+  int c, x,y, width;\n+  asm( \"\" :: \"m\" ((long)x));\n+  blockCopy_MMX2(&c);\n+}"}]}