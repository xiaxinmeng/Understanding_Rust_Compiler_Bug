{"sha": "7e5c75472136ea01f63c10c7aab8a4888eaea6d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U1Yzc1NDcyMTM2ZWEwMWY2M2MxMGM3YWFiOGE0ODg4ZWFlYTZkMA==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2015-08-27T14:08:19Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2015-08-27T14:08:19Z"}, "message": "configure.ac: Remove [disable-shared] argument to LT_INIT.\n\n\t* configure.ac: Remove [disable-shared] argument to LT_INIT.\n\tRemove setting PIC_FLAG when building as target library.\n\t* configure: Regenerate.\n\nFrom-SVN: r227261", "tree": {"sha": "5a25e11b01f3ce405e23d1f4f1b1c08c2d07e555", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a25e11b01f3ce405e23d1f4f1b1c08c2d07e555"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e5c75472136ea01f63c10c7aab8a4888eaea6d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e5c75472136ea01f63c10c7aab8a4888eaea6d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e5c75472136ea01f63c10c7aab8a4888eaea6d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e5c75472136ea01f63c10c7aab8a4888eaea6d0/comments", "author": null, "committer": null, "parents": [{"sha": "353e462df7eea26f1df8343d8b8f92dfe97757dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/353e462df7eea26f1df8343d8b8f92dfe97757dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/353e462df7eea26f1df8343d8b8f92dfe97757dc"}], "stats": {"total": 79, "additions": 26, "deletions": 53}, "files": [{"sha": "48d402901f9554b6dca9c0bf320321b02f4a5fc2", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e5c75472136ea01f63c10c7aab8a4888eaea6d0/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e5c75472136ea01f63c10c7aab8a4888eaea6d0/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=7e5c75472136ea01f63c10c7aab8a4888eaea6d0", "patch": "@@ -1,3 +1,9 @@\n+2015-08-27  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\t* configure.ac: Remove [disable-shared] argument to LT_INIT.\n+\tRemove setting PIC_FLAG when building as target library.\n+\t* configure: Regenerate.\n+\n 2015-08-26  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* configure.ac: Only compile with -fPIC if the target"}, {"sha": "d34a6bfe61e0269201b1ffffc6da0b3cd562e868", "filename": "libbacktrace/configure", "status": "modified", "additions": 17, "deletions": 39, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e5c75472136ea01f63c10c7aab8a4888eaea6d0/libbacktrace%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e5c75472136ea01f63c10c7aab8a4888eaea6d0/libbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure?ref=7e5c75472136ea01f63c10c7aab8a4888eaea6d0", "patch": "@@ -1366,7 +1366,7 @@ Optional Features:\n   --enable-multilib       build many library versions (default)\n   --enable-maintainer-mode  enable make rules and dependencies not useful\n \t\t\t  (and sometimes confusing) to the casual installer\n-  --enable-shared[=PKGS]  build shared libraries [default=no]\n+  --enable-shared[=PKGS]  build shared libraries [default=yes]\n   --enable-static[=PKGS]  build static libraries [default=yes]\n   --enable-fast-install[=PKGS]\n                           optimize for fast installation [default=yes]\n@@ -7658,7 +7658,16 @@ done\n \n \n # Set options\n-# Check whether --enable-shared was given.\n+\n+\n+\n+        enable_dlopen=no\n+\n+\n+  enable_win32_dll=no\n+\n+\n+            # Check whether --enable-shared was given.\n if test \"${enable_shared+set}\" = set; then :\n   enableval=$enable_shared; p=${PACKAGE-default}\n     case $enableval in\n@@ -7678,7 +7687,7 @@ if test \"${enable_shared+set}\" = set; then :\n       ;;\n     esac\n else\n-  enable_shared=no\n+  enable_shared=yes\n fi\n \n \n@@ -7689,14 +7698,6 @@ fi\n \n \n \n-\n-        enable_dlopen=no\n-\n-\n-  enable_win32_dll=no\n-\n-\n-\n   # Check whether --enable-static was given.\n if test \"${enable_static+set}\" = set; then :\n   enableval=$enable_static; p=${PACKAGE-default}\n@@ -11130,7 +11131,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11133 \"configure\"\n+#line 11134 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11236,7 +11237,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11239 \"configure\"\n+#line 11240 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11708,35 +11709,12 @@ $as_echo \"#define HAVE_GETIPINFO 1\" >>confdefs.h\n   fi\n fi\n \n-# When building as a target library, shared libraries may want to link\n-# this in.  We don't want to provide another shared library to\n-# complicate dependencies.  Instead, we just compile with -fPIC, if\n-# the target supports compiling with that option.\n-PIC_FLAG=\n-if test -n \"${with_target_subdir}\"; then\n-  ac_save_CFLAGS=\"$CFLAGS\"\n-  CFLAGS=\"$CFLAGS -fPIC\"\n-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-\n-int\n-main ()\n-{\n-\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_compile \"$LINENO\"; then :\n-  PIC_FLAG=-fPIC\n-fi\n-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n-  CFLAGS=\"$ac_save_CFLAGS\"\n-fi\n-# Similarly, use -fPIC with --enable-host-shared:\n+# Enable --enable-host-shared.\n # Check whether --enable-host-shared was given.\n if test \"${enable_host_shared+set}\" = set; then :\n   enableval=$enable_host_shared; PIC_FLAG=-fPIC\n+else\n+  PIC_FLAG=\n fi\n \n "}, {"sha": "01284bd82cbb2727c19978e9f67ea3101fd0df19", "filename": "libbacktrace/configure.ac", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e5c75472136ea01f63c10c7aab8a4888eaea6d0/libbacktrace%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e5c75472136ea01f63c10c7aab8a4888eaea6d0/libbacktrace%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure.ac?ref=7e5c75472136ea01f63c10c7aab8a4888eaea6d0", "patch": "@@ -79,7 +79,7 @@ case \"$AWK\" in\n \"\") AC_MSG_ERROR([can't build without awk]) ;;\n esac\n \n-LT_INIT([disable-shared])\n+LT_INIT\n AM_PROG_LIBTOOL\n \n backtrace_supported=yes\n@@ -161,22 +161,11 @@ else\n   fi\n fi\n \n-# When building as a target library, shared libraries may want to link\n-# this in.  We don't want to provide another shared library to\n-# complicate dependencies.  Instead, we just compile with -fPIC, if\n-# the target supports compiling with that option.\n-PIC_FLAG=\n-if test -n \"${with_target_subdir}\"; then\n-  ac_save_CFLAGS=\"$CFLAGS\"\n-  CFLAGS=\"$CFLAGS -fPIC\"\n-  AC_TRY_COMPILE([], [], [PIC_FLAG=-fPIC])\n-  CFLAGS=\"$ac_save_CFLAGS\"\n-fi\n-# Similarly, use -fPIC with --enable-host-shared:\n+# Enable --enable-host-shared.\n AC_ARG_ENABLE(host-shared,\n [AS_HELP_STRING([--enable-host-shared],\n \t\t[build host code as shared libraries])],\n-[PIC_FLAG=-fPIC], [])\n+[PIC_FLAG=-fPIC], [PIC_FLAG=])\n AC_SUBST(PIC_FLAG)\n \n # Test for __sync support."}]}