{"sha": "15256e28a5351f788b66e574bf1ad53a23fbdda1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTUyNTZlMjhhNTM1MWY3ODhiNjZlNTc0YmYxYWQ1M2EyM2ZiZGRhMQ==", "commit": {"author": {"name": "Aditya Kumar", "email": "aditya.k7@samsung.com", "date": "2015-12-04T21:36:55Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2015-12-04T21:36:55Z"}, "message": "fix PR68693: Check for loop structure when extending the SCoP\n\nThe check for dominance while extending the scop assumed that\nmultiple successors meant a loop which is not true in case of\nconditionals around the loop.\n\nImproved pretty printers for better debugging.\n\n\tPR tree-optimization/68693\n        * graphite-scop-detection.c (dot_all_sese): New\n        (dot_all_scops_1): Renamed to dot_all_sese.\n        (dot_all_scops): Removed.\n        (dot_sese): New.\n        (dot_cfg): New.\n        (scop_detection::get_nearest_dom_with_single_entry): Check that preds are from different loop levels.\n        (scop_detection::get_nearest_pdom_with_single_exit): Check that succs are from different loop levels.\n        (scop_detection::print_sese): Inlined.\n        (scop_detection::print_edge): New.\n        (scop_detection::merge_sese): Added dumps.\n        * graphite.h: Add declarations.\n\ngcc/testsuite/ChangeLog:\n\n        * gfortran.dg/graphite/pr68693.f90: New test.\n\nCo-Authored-By: Sebastian Pop <s.pop@samsung.com>\n\nFrom-SVN: r231309", "tree": {"sha": "d513c64fdac4af127f0b0f73928de02267d28fe3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d513c64fdac4af127f0b0f73928de02267d28fe3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15256e28a5351f788b66e574bf1ad53a23fbdda1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15256e28a5351f788b66e574bf1ad53a23fbdda1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15256e28a5351f788b66e574bf1ad53a23fbdda1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15256e28a5351f788b66e574bf1ad53a23fbdda1/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdf5848047f719389f64bcd2a6dda081adafa9aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdf5848047f719389f64bcd2a6dda081adafa9aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdf5848047f719389f64bcd2a6dda081adafa9aa"}], "stats": {"total": 218, "additions": 134, "deletions": 84}, "files": [{"sha": "4223a1ecb5bf6dd8b1a2675364315ab0df71497e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15256e28a5351f788b66e574bf1ad53a23fbdda1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15256e28a5351f788b66e574bf1ad53a23fbdda1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=15256e28a5351f788b66e574bf1ad53a23fbdda1", "patch": "@@ -1,3 +1,21 @@\n+2015-12-04  Aditya Kumar  <aditya.k7@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n+\n+\tPR tree-optimization/68693\n+\t* graphite-scop-detection.c (dot_all_sese): New\n+\t(dot_all_scops_1): Renamed to dot_all_sese.\n+\t(dot_all_scops): Removed.\n+\t(dot_sese): New.\n+\t(dot_cfg): New.\n+\t(scop_detection::get_nearest_dom_with_single_entry): Check that\n+\tpreds are from different loop levels.\n+\t(scop_detection::get_nearest_pdom_with_single_exit): Check that\n+\tsuccs are from different loop levels.\n+\t(scop_detection::print_sese): Inlined.\n+\t(scop_detection::print_edge): New.\n+\t(scop_detection::merge_sese): Added dumps.\n+\t* graphite.h: Add declarations.\n+\n 2015-12-04  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/aarch64.md (add<mode>3_pluslong): Add register"}, {"sha": "729a5fd5588e7f501edabeb8c04caf16e44a5970", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 72, "deletions": 81, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15256e28a5351f788b66e574bf1ad53a23fbdda1/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15256e28a5351f788b66e574bf1ad53a23fbdda1/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=15256e28a5351f788b66e574bf1ad53a23fbdda1", "patch": "@@ -98,22 +98,16 @@ class debug_printer\n    - \"()\" around the node number denotes the entry or the\n      exit nodes of the SCOP.  These are not part of SCoP.  */\n \n-static void\n-dot_all_scops_1 (FILE *file, vec<scop_p> scops)\n+DEBUG_FUNCTION void\n+dot_all_sese (FILE *file, vec<sese_l>& scops)\n {\n-  basic_block bb;\n-  edge e;\n-  edge_iterator ei;\n-  scop_p scop;\n-  const char *color;\n-  int i;\n-\n   /* Disable debugging while printing graph.  */\n   int tmp_dump_flags = dump_flags;\n   dump_flags = 0;\n \n   fprintf (file, \"digraph all {\\n\");\n \n+  basic_block bb;\n   FOR_ALL_BB_FN (bb, cfun)\n     {\n       int part_of_scop = false;\n@@ -126,12 +120,15 @@ dot_all_scops_1 (FILE *file, vec<scop_p> scops)\n       fprintf (file, \"CELLSPACING=\\\"0\\\">\\n\");\n \n       /* Select color for SCoP.  */\n-      FOR_EACH_VEC_ELT (scops, i, scop)\n+      sese_l *region;\n+      int i;\n+      FOR_EACH_VEC_ELT (scops, i, region)\n \t{\n-\t  sese_l region = scop->scop_info->region;\n-\t  if (bb_in_sese_p (bb, region) || (region.exit->dest == bb)\n-\t      || (region.entry->dest == bb))\n+\t  bool sese_in_region = bb_in_sese_p (bb, *region);\n+\t  if (sese_in_region || (region->exit->dest == bb)\n+\t      || (region->entry->dest == bb))\n \t    {\n+\t      const char *color;\n \t      switch (i % 17)\n \t\t{\n \t\tcase 0: /* red */\n@@ -192,21 +189,21 @@ dot_all_scops_1 (FILE *file, vec<scop_p> scops)\n \t      fprintf (file, \"    <TR><TD WIDTH=\\\"50\\\" BGCOLOR=\\\"%s\\\">\",\n \t\t       color);\n \n-\t      if (!bb_in_sese_p (bb, region))\n+\t      if (!sese_in_region)\n \t\tfprintf (file, \" (\");\n \n-\t      if (bb == region.entry->dest && bb == region.exit->dest)\n+\t      if (bb == region->entry->dest && bb == region->exit->dest)\n \t\tfprintf (file, \" %d*# \", bb->index);\n-\t      else if (bb == region.entry->dest)\n+\t      else if (bb == region->entry->dest)\n \t\tfprintf (file, \" %d* \", bb->index);\n-\t      else if (bb == region.exit->dest)\n+\t      else if (bb == region->exit->dest)\n \t\tfprintf (file, \" %d# \", bb->index);\n \t      else\n \t\tfprintf (file, \" %d \", bb->index);\n \n \t      fprintf (file, \"{lp_%d}\", bb->loop_father->num);\n \n-\t      if (!bb_in_sese_p (bb, region))\n+\t      if (!sese_in_region)\n \t\tfprintf (file, \")\");\n \n \t      fprintf (file, \"</TD></TR>\\n\");\n@@ -225,6 +222,8 @@ dot_all_scops_1 (FILE *file, vec<scop_p> scops)\n \n     FOR_ALL_BB_FN (bb, cfun)\n       {\n+\tedge e;\n+\tedge_iterator ei;\n \tFOR_EACH_EDGE (e, ei, bb->succs)\n \t  fprintf (file, \"%d -> %d;\\n\", bb->index, e->dest->index);\n       }\n@@ -235,52 +234,29 @@ dot_all_scops_1 (FILE *file, vec<scop_p> scops)\n   dump_flags = tmp_dump_flags;\n }\n \n-/* Display all SCoPs using dotty.  */\n-\n-DEBUG_FUNCTION void\n-dot_all_scops (vec<scop_p> scops)\n-{\n-  /* When debugging, enable the following code.  This cannot be used\n-     in production compilers because it calls \"system\".  */\n-#if 0\n-  int x;\n-  FILE *stream = fopen (\"/tmp/allscops.dot\", \"w\");\n-  gcc_assert (stream);\n-\n-  dot_all_scops_1 (stream, scops);\n-  fclose (stream);\n-\n-  x = system (\"dotty /tmp/allscops.dot &\");\n-#else\n-  dot_all_scops_1 (stderr, scops);\n-#endif\n-}\n-\n-/* Display all SCoPs using dotty.  */\n+/* Display SCoP on stderr.  */\n \n DEBUG_FUNCTION void\n-dot_scop (scop_p scop)\n+dot_sese (sese_l& scop)\n {\n-  auto_vec<scop_p, 1> scops;\n+  vec<sese_l> scops;\n+  scops.create (1);\n \n   if (scop)\n     scops.safe_push (scop);\n \n-  /* When debugging, enable the following code.  This cannot be used\n-     in production compilers because it calls \"system\".  */\n-#if 0\n-  {\n-    int x;\n-    FILE *stream = fopen (\"/tmp/allscops.dot\", \"w\");\n-    gcc_assert (stream);\n+  dot_all_sese (stderr, scops);\n \n-    dot_all_scops_1 (stream, scops);\n-    fclose (stream);\n-    x = system (\"dotty /tmp/allscops.dot &\");\n-  }\n-#else\n-  dot_all_scops_1 (stderr, scops);\n-#endif\n+  scops.release ();\n+}\n+\n+DEBUG_FUNCTION void\n+dot_cfg ()\n+{\n+  vec<sese_l> scops;\n+  scops.create (1);\n+  dot_all_sese (stderr, scops);\n+  scops.release ();\n }\n \n /* Return true if BB is empty, contains only DEBUG_INSNs.  */\n@@ -552,9 +528,20 @@ class scop_detection\n \n   static edge get_nearest_pdom_with_single_exit (basic_block dom);\n \n-  /* Print S to FILE.  */\n \n-  static void print_sese (FILE *file, sese_l s);\n+  /* Pretty printers.  */\n+\n+  static void print_edge (FILE *file, const_edge e)\n+  {\n+    fprintf (file, \"edge (bb_%d, bb_%d)\", e->src->index, e->dest->index);\n+  }\n+\n+  static void print_sese (FILE *file, sese_l s)\n+  {\n+    fprintf (file, \"(entry_\"); print_edge (file, s.entry);\n+    fprintf (file, \", exit_\"); print_edge (file, s.exit);\n+    fprintf (file, \")\\n\");\n+  }\n \n   /* Merge scops at same loop depth and returns the new sese.\n      Returns a new SESE when merge was successful, INVALID_SESE otherwise.  */\n@@ -717,9 +704,14 @@ scop_detection::get_nearest_dom_with_single_entry (basic_block dom)\n     {\n       edge e1 = (*dom->preds)[0];\n       edge e2 = (*dom->preds)[1];\n-      if (dominated_by_p (CDI_DOMINATORS, e2->src, e1->src))\n+      loop_p l = dom->loop_father;\n+      loop_p l1 = e1->src->loop_father;\n+      loop_p l2 = e2->src->loop_father;\n+      if (l != l1\n+\t  && dominated_by_p (CDI_DOMINATORS, e2->src, e1->src))\n \treturn e1;\n-      if (dominated_by_p (CDI_DOMINATORS, e1->src, e2->src))\n+      if (l != l2\n+\t  && dominated_by_p (CDI_DOMINATORS, e1->src, e2->src))\n \treturn e2;\n     }\n \n@@ -738,39 +730,35 @@ scop_detection::get_nearest_dom_with_single_entry (basic_block dom)\n    back-loop the back-edge is not counted.  */\n \n edge\n-scop_detection::get_nearest_pdom_with_single_exit (basic_block dom)\n+scop_detection::get_nearest_pdom_with_single_exit (basic_block pdom)\n {\n-  if (!dom->succs)\n+  if (!pdom->succs)\n     return NULL;\n-  if (dom->succs->length () == 2)\n+  if (pdom->succs->length () == 2)\n     {\n-      edge e1 = (*dom->succs)[0];\n-      edge e2 = (*dom->succs)[1];\n-      if (dominated_by_p (CDI_POST_DOMINATORS, e2->dest, e1->dest))\n+      edge e1 = (*pdom->succs)[0];\n+      edge e2 = (*pdom->succs)[1];\n+      loop_p l = pdom->loop_father;\n+      loop_p l1 = e1->dest->loop_father;\n+      loop_p l2 = e2->dest->loop_father;\n+      if (l != l1\n+\t  && dominated_by_p (CDI_POST_DOMINATORS, e2->dest, e1->dest))\n \treturn e1;\n-      if (dominated_by_p (CDI_POST_DOMINATORS, e1->dest, e2->dest))\n+      if (l != l2\n+\t  && dominated_by_p (CDI_POST_DOMINATORS, e1->dest, e2->dest))\n \treturn e2;\n     }\n \n-  while (dom->succs->length () != 1)\n+  while (pdom->succs->length () != 1)\n     {\n-      if (dom->succs->length () < 1)\n+      if (pdom->succs->length () < 1)\n \treturn NULL;\n-      dom = get_immediate_dominator (CDI_POST_DOMINATORS, dom);\n-      if (!dom->succs)\n+      pdom = get_immediate_dominator (CDI_POST_DOMINATORS, pdom);\n+      if (!pdom->succs)\n \treturn NULL;\n     }\n-  return (*dom->succs)[0];\n-}\n-\n-/* Print S to FILE.  */\n \n-void\n-scop_detection::print_sese (FILE *file, sese_l s)\n-{\n-  fprintf (file, \"(entry_edge (bb_%d, bb_%d), exit_edge (bb_%d, bb_%d))\\n\",\n-           s.entry->src->index, s.entry->dest->index,\n-           s.exit->src->index, s.exit->dest->index);\n+  return (*pdom->succs)[0];\n }\n \n /* Merge scops at same loop depth and returns the new sese.\n@@ -815,6 +803,9 @@ scop_detection::merge_sese (sese_l first, sese_l second) const\n \n   sese_l combined (entry, exit);\n \n+  DEBUG_PRINT (dp << \"checking combined sese: \";\n+\t       print_sese (dump_file, combined));\n+\n   /* FIXME: We could iterate to find the dom which dominates pdom, and pdom\n      which post-dominates dom, until it stabilizes.  Also, ENTRY->SRC and\n      EXIT->DEST should be in the same loop nest.  */"}, {"sha": "c7589baef4fa282dc5e56fb418009012203e53f6", "filename": "gcc/graphite.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15256e28a5351f788b66e574bf1ad53a23fbdda1/gcc%2Fgraphite.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15256e28a5351f788b66e574bf1ad53a23fbdda1/gcc%2Fgraphite.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.h?ref=15256e28a5351f788b66e574bf1ad53a23fbdda1", "patch": "@@ -465,7 +465,7 @@ extern bool build_poly_scop (scop_p);\n extern bool graphite_regenerate_ast_isl (scop_p);\n \n extern void build_scops (vec<scop_p> *);\n-extern void dot_all_scops (vec<scop_p>);\n-extern void dot_scop (scop_p);\n-\n+extern void dot_all_sese (FILE *, vec<sese_l> &);\n+extern void dot_sese (sese_l &);\n+extern void dot_cfg ();\n #endif"}, {"sha": "312224800bed39eb47cb9a0c9f54099986ef38b0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15256e28a5351f788b66e574bf1ad53a23fbdda1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15256e28a5351f788b66e574bf1ad53a23fbdda1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=15256e28a5351f788b66e574bf1ad53a23fbdda1", "patch": "@@ -1,3 +1,9 @@\n+2015-12-04  Aditya Kumar  <aditya.k7@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n+\n+\tPR tree-optimization/68693\n+\t* gfortran.dg/graphite/pr68693.f90: New test.\n+\n 2015-12-04  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* gcc.c-torture/compile/20151204.c: New."}, {"sha": "24b85e3b0d63be6c5b239ae25246d5ba0f893d48", "filename": "gcc/testsuite/gfortran.dg/graphite/pr68693.f90", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15256e28a5351f788b66e574bf1ad53a23fbdda1/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr68693.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15256e28a5351f788b66e574bf1ad53a23fbdda1/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr68693.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr68693.f90?ref=15256e28a5351f788b66e574bf1ad53a23fbdda1", "patch": "@@ -0,0 +1,35 @@\n+! { dg-options \"-floop-nest-optimize -O2\" }\n+MODULE dbcsr_index_operations\n+  INTERFACE dbcsr_build_row_index\n+  END INTERFACE\n+CONTAINS\n+  SUBROUTINE merge_index_arrays (new_row_i, new_col_i, new_blk_p, new_size,&\n+       old_row_i, old_col_i, old_blk_p, old_size,&\n+       add_ip, add_size, new_blk_d, old_blk_d,&\n+       added_size_offset, added_sizes, added_size, added_nblks, error)\n+    INTEGER, DIMENSION(new_size), &\n+      INTENT(OUT)                            :: new_blk_p, new_col_i, &\n+                                                new_row_i\n+    INTEGER, INTENT(IN)                      :: old_size\n+    INTEGER, DIMENSION(old_size), INTENT(IN) :: old_blk_p, old_col_i, &\n+                                                old_row_i\n+    INTEGER, DIMENSION(new_size), &\n+      INTENT(OUT), OPTIONAL                  :: new_blk_d\n+    INTEGER, DIMENSION(old_size), &\n+      INTENT(IN), OPTIONAL                   :: old_blk_d\n+    INTEGER, DIMENSION(:), INTENT(IN), &\n+      OPTIONAL                               :: added_sizes\n+    INTEGER, INTENT(OUT), OPTIONAL           :: added_size, added_nblks\n+    LOGICAL                                  :: multidata\n+    IF (add_size .GT. 0) THEN\n+       IF (old_size .EQ. 0) THEN\n+          IF (PRESENT (added_size)) added_size = SUM (added_sizes)\n+       ENDIF\n+    ELSE\n+       new_row_i(1:old_size) = old_row_i(1:old_size)\n+       new_col_i(1:old_size) = old_col_i(1:old_size)\n+       new_blk_p(1:old_size) = old_blk_p(1:old_size)\n+       IF (multidata) new_blk_d(1:old_size) = old_blk_d(1:old_size)\n+    ENDIF\n+  END SUBROUTINE merge_index_arrays\n+END MODULE dbcsr_index_operations"}]}