{"sha": "82971d968b02eedf8e21bda681a27c9e5a3547fe", "node_id": "C_kwDOANBUbNoAKDgyOTcxZDk2OGIwMmVlZGY4ZTIxYmRhNjgxYTI3YzllNWEzNTQ3ZmU", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-10-06T09:11:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-06T09:11:43Z"}, "message": "Merge #1563\n\n1563: ast: dump assignment and if expressions r=CohenArthur a=dafaust\n\n\n\nCo-authored-by: David Faust <david.faust@oracle.com>", "tree": {"sha": "12a1ae474caaefc7df006e253ee62a46fa8743db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12a1ae474caaefc7df006e253ee62a46fa8743db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82971d968b02eedf8e21bda681a27c9e5a3547fe", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjPpvPCRBK7hj4Ov3rIwAArosIAHJ+uGOcekAHWDFkwK2Zsda+\nXKWe73BHn6uCX0bAh4KXVnYhPQ/Brc2VmIQCkuRqbNtO/AmSzEYXzxpXxq226ZUG\nM+RA7WTjLkRBA+3ngW47kLT4qKoo40UJ8kj9nDnHDUalPthzJ+T7eZU4PjAJw8j/\nQU2QimIGnB6K93rMmnQ7YVn1FiszdViv1nufiRW+zZGMJs3pJoroxDyDE6ISInYv\n/2Uljl3/Ce0zFV9ymPftI3eqC/hgYJBFMExhMeaTlvgAlnVocnon9SeM9lH7nbjo\nhf1gloMmeLgbDc2yrAKjJ95MfsTTO7pfnv/gYFQfNENZOnA0eSWhxcqIakOOXds=\n=KVcG\n-----END PGP SIGNATURE-----\n", "payload": "tree 12a1ae474caaefc7df006e253ee62a46fa8743db\nparent 8ff035ddc55079161d24941785114aa0f5056260\nparent e9e5288a303df10829d1f34e3d2ebff793a74ea0\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1665047503 +0000\ncommitter GitHub <noreply@github.com> 1665047503 +0000\n\nMerge #1563\n\n1563: ast: dump assignment and if expressions r=CohenArthur a=dafaust\n\n\n\nCo-authored-by: David Faust <david.faust@oracle.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82971d968b02eedf8e21bda681a27c9e5a3547fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82971d968b02eedf8e21bda681a27c9e5a3547fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82971d968b02eedf8e21bda681a27c9e5a3547fe/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ff035ddc55079161d24941785114aa0f5056260", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ff035ddc55079161d24941785114aa0f5056260", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ff035ddc55079161d24941785114aa0f5056260"}, {"sha": "e9e5288a303df10829d1f34e3d2ebff793a74ea0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9e5288a303df10829d1f34e3d2ebff793a74ea0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9e5288a303df10829d1f34e3d2ebff793a74ea0"}], "stats": {"total": 78, "additions": 73, "deletions": 5}, "files": [{"sha": "48497b7e330fbb683d935bc440b84180bb25fd04", "filename": "gcc/rust/ast/rust-ast-dump.cc", "status": "modified", "additions": 73, "deletions": 5, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82971d968b02eedf8e21bda681a27c9e5a3547fe/gcc%2Frust%2Fast%2Frust-ast-dump.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82971d968b02eedf8e21bda681a27c9e5a3547fe/gcc%2Frust%2Fast%2Frust-ast-dump.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-ast-dump.cc?ref=82971d968b02eedf8e21bda681a27c9e5a3547fe", "patch": "@@ -281,11 +281,63 @@ Dump::visit (TypeCastExpr &expr)\n \n void\n Dump::visit (AssignmentExpr &expr)\n-{}\n+{\n+  expr.visit_lhs (*this);\n+  stream << \" = \";\n+  expr.visit_rhs (*this);\n+}\n \n void\n Dump::visit (CompoundAssignmentExpr &expr)\n-{}\n+{\n+  auto op = \"\";\n+  switch (expr.get_expr_type ())\n+    {\n+    case CompoundAssignmentOperator::ADD:\n+      op = \"+\";\n+      break;\n+\n+    case CompoundAssignmentOperator::SUBTRACT:\n+      op = \"-\";\n+      break;\n+\n+    case CompoundAssignmentOperator::MULTIPLY:\n+      op = \"*\";\n+      break;\n+\n+    case CompoundAssignmentOperator::DIVIDE:\n+      op = \"/\";\n+      break;\n+\n+    case CompoundAssignmentOperator::MODULUS:\n+      op = \"%\";\n+      break;\n+\n+    case CompoundAssignmentOperator::BITWISE_AND:\n+      op = \"&\";\n+      break;\n+\n+    case CompoundAssignmentOperator::BITWISE_OR:\n+      op = \"|\";\n+      break;\n+\n+    case CompoundAssignmentOperator::BITWISE_XOR:\n+      op = \"^\";\n+      break;\n+\n+    case CompoundAssignmentOperator::LEFT_SHIFT:\n+      op = \"<<\";\n+      break;\n+\n+    case CompoundAssignmentOperator::RIGHT_SHIFT:\n+      op = \">>\";\n+      break;\n+    }\n+\n+  expr.get_left_expr ()->accept_vis (*this);\n+  stream << \" \" << op << \"= \";\n+  expr.get_right_expr ()->accept_vis (*this);\n+}\n \n void\n Dump::visit (GroupedExpr &expr)\n@@ -457,15 +509,31 @@ Dump::visit (ForLoopExpr &expr)\n \n void\n Dump::visit (IfExpr &expr)\n-{}\n+{\n+  stream << \"if \";\n+  expr.vis_if_condition (*this);\n+  expr.vis_if_block (*this);\n+}\n \n void\n Dump::visit (IfExprConseqElse &expr)\n-{}\n+{\n+  stream << \"if \";\n+  expr.vis_if_condition (*this);\n+  expr.vis_if_block (*this);\n+  stream << indentation << \"else \";\n+  expr.vis_else_block (*this);\n+}\n \n void\n Dump::visit (IfExprConseqIf &expr)\n-{}\n+{\n+  stream << \"if \";\n+  expr.vis_if_condition (*this);\n+  expr.vis_if_block (*this);\n+  stream << indentation << \"else if \";\n+  expr.vis_conseq_if_expr (*this);\n+}\n \n void\n Dump::visit (IfExprConseqIfLet &expr)"}]}