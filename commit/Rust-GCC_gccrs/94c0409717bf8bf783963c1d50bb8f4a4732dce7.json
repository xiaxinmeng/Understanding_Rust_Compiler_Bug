{"sha": "94c0409717bf8bf783963c1d50bb8f4a4732dce7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRjMDQwOTcxN2JmOGJmNzgzOTYzYzFkNTBiYjhmNGE0NzMyZGNlNw==", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2020-05-23T07:30:58Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2020-05-25T01:57:04Z"}, "message": "Add missing expander for vector float_extend and float_truncate.\n\n2020-05-25  Hongtao Liu  <hongtao.liu@intel.com>\n\ngcc/ChangeLog\n\tPR target/95125\n\t* config/i386/sse.md (sf2dfmode_lower): New mode attribute.\n\t(trunc<mode><sf2dfmode_lower>2) New expander.\n\t(extend<sf2dfmode_lower><mode>2): Ditto.\n\ngcc/testsuite/ChangeLog\n\t* gcc.target/i386/pr95125-avx.c: New test.\n\t* gcc.target/i386/pr95125-avx512f.c: Ditto.", "tree": {"sha": "0dd047e2699dbe97fec48d3cd2c47554044811c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dd047e2699dbe97fec48d3cd2c47554044811c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94c0409717bf8bf783963c1d50bb8f4a4732dce7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94c0409717bf8bf783963c1d50bb8f4a4732dce7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94c0409717bf8bf783963c1d50bb8f4a4732dce7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94c0409717bf8bf783963c1d50bb8f4a4732dce7/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7fe89194ce481aebacb4a2619e42eec243a1920", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7fe89194ce481aebacb4a2619e42eec243a1920", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7fe89194ce481aebacb4a2619e42eec243a1920"}], "stats": {"total": 90, "additions": 90, "deletions": 0}, "files": [{"sha": "1a808b710e76bbaa24b13c9438c5fe1ebdcf1583", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94c0409717bf8bf783963c1d50bb8f4a4732dce7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94c0409717bf8bf783963c1d50bb8f4a4732dce7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94c0409717bf8bf783963c1d50bb8f4a4732dce7", "patch": "@@ -1,3 +1,10 @@\n+2020-05-25  Hongtao Liu  <hongtao.liu@intel.com>\n+\n+\tPR target/95125\n+\t* config/i386/sse.md (sf2dfmode_lower): New mode attribute.\n+\t(trunc<mode><sf2dfmode_lower>2) New expander.\n+\t(extend<sf2dfmode_lower><mode>2): Ditto.\n+\n 2020-05-23 Iain Sandoe <iain@sandoe.co.uk>\n \n \t* config/darwin.h (ASM_GENERATE_INTERNAL_LABEL): Make"}, {"sha": "cee2b2890a5d396ce66a22c1f23a85e6b9548d6b", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94c0409717bf8bf783963c1d50bb8f4a4732dce7/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94c0409717bf8bf783963c1d50bb8f4a4732dce7/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=94c0409717bf8bf783963c1d50bb8f4a4732dce7", "patch": "@@ -6552,6 +6552,20 @@\n ;; For <sse2_avx_avx512f>_cvtps2pd<avxsizesuffix> insn pattern\n (define_mode_attr sf2dfmode\n   [(V8DF \"V8SF\") (V4DF \"V4SF\")])\n+(define_mode_attr sf2dfmode_lower\n+  [(V8DF \"v8sf\") (V4DF \"v4sf\")])\n+\n+(define_expand \"trunc<mode><sf2dfmode_lower>2\"\n+  [(set (match_operand:<sf2dfmode> 0 \"register_operand\")\n+\t(float_truncate:<sf2dfmode>\n+\t  (match_operand:VF2_512_256 1 \"vector_operand\")))]\n+  \"TARGET_AVX\")\n+\n+(define_expand \"extend<sf2dfmode_lower><mode>2\"\n+  [(set (match_operand:VF2_512_256 0 \"register_operand\")\n+\t(float_extend:VF2_512_256\n+\t  (match_operand:<sf2dfmode> 1 \"vector_operand\")))]\n+  \"TARGET_AVX\")\n \n (define_insn \"<sse2_avx_avx512f>_cvtps2pd<avxsizesuffix><mask_name><round_saeonly_name>\"\n   [(set (match_operand:VF2_512_256 0 \"register_operand\" \"=v\")"}, {"sha": "f12bc694d49686923ccf5eea702a2b9a3dae6e21", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94c0409717bf8bf783963c1d50bb8f4a4732dce7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94c0409717bf8bf783963c1d50bb8f4a4732dce7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=94c0409717bf8bf783963c1d50bb8f4a4732dce7", "patch": "@@ -1,3 +1,8 @@\n+2020-05-25  Hongtao Liu  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/pr95125-avx.c: New test.\n+\t* gcc.target/i386/pr95125-avx512f.c: Ditto.\n+\n 2020-05-24  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/95106"}, {"sha": "3cd1a08e5ed60600b2c3eab82f9046b6bf44b837", "filename": "gcc/testsuite/gcc.target/i386/pr95125-avx.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94c0409717bf8bf783963c1d50bb8f4a4732dce7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95125-avx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94c0409717bf8bf783963c1d50bb8f4a4732dce7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95125-avx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95125-avx.c?ref=94c0409717bf8bf783963c1d50bb8f4a4732dce7", "patch": "@@ -0,0 +1,27 @@\n+/* PR target/92125 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-vectorize -mavx\" } */\n+\n+extern float f[4];\n+extern double d[4];\n+\n+void\n+float_truncate_256 (void)\n+{\n+  f[0] = d[0];\n+  f[1] = d[1];\n+  f[2] = d[2];\n+  f[3] = d[3];\n+}\n+\n+void\n+float_extend_256 (void)\n+{\n+  d[0] = f[0];\n+  d[1] = f[1];\n+  d[2] = f[2];\n+  d[3] = f[3];\n+}\n+\n+/* { dg-final { scan-assembler-times \"vcvtps2pd\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vcvtpd2ps\" 1 } } */"}, {"sha": "109278ccf2157825223dc1f874c36340d8dd19f5", "filename": "gcc/testsuite/gcc.target/i386/pr95125-avx512f.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94c0409717bf8bf783963c1d50bb8f4a4732dce7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95125-avx512f.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94c0409717bf8bf783963c1d50bb8f4a4732dce7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95125-avx512f.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95125-avx512f.c?ref=94c0409717bf8bf783963c1d50bb8f4a4732dce7", "patch": "@@ -0,0 +1,37 @@\n+/* PR target/95125 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-vectorize -mavx512f -mprefer-vector-width=512 \" } */\n+\n+extern float f[8];\n+extern double d[8];\n+\n+void\n+float_truncate_512 (void)\n+{\n+  f[0] = d[0];\n+  f[1] = d[1];\n+  f[2] = d[2];\n+  f[3] = d[3];\n+  f[4] = d[4];\n+  f[5] = d[5];\n+  f[6] = d[6];\n+  f[7] = d[7];\n+}\n+\n+void\n+float_extend_512 (void)\n+{\n+  d[0] = f[0];\n+  d[1] = f[1];\n+  d[2] = f[2];\n+  d[3] = f[3];\n+  d[4] = f[4];\n+  d[5] = f[5];\n+  d[6] = f[6];\n+  d[7] = f[7];\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times \"vcvtps2pd\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vcvtpd2ps\" 1 } } */"}]}