{"sha": "f30c84c9668a1b7e5d7cde91bb9f240ac2a995b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjMwYzg0Yzk2NjhhMWI3ZTVkN2NkZTkxYmI5ZjI0MGFjMmE5OTViMg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-05-28T00:20:07Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-05-28T00:20:07Z"}, "message": "decl.c (lookup_namespace_name): Handle getting a TEMPLATE_ID_EXPR.\n\n\t* decl.c (lookup_namespace_name): Handle getting a\n\tTEMPLATE_ID_EXPR.\n\t(expand_static_init): Don't call pushdecl for implicitly declared\n\t`atexit' used to register destructors.\n\nFrom-SVN: r27207", "tree": {"sha": "d1c816cc0aaeebf4e5d1ab28dbb3754530ed32da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1c816cc0aaeebf4e5d1ab28dbb3754530ed32da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f30c84c9668a1b7e5d7cde91bb9f240ac2a995b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f30c84c9668a1b7e5d7cde91bb9f240ac2a995b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f30c84c9668a1b7e5d7cde91bb9f240ac2a995b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f30c84c9668a1b7e5d7cde91bb9f240ac2a995b2/comments", "author": null, "committer": null, "parents": [{"sha": "6f82ce7097e73aae0154ee1d1af286c63246c4a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f82ce7097e73aae0154ee1d1af286c63246c4a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f82ce7097e73aae0154ee1d1af286c63246c4a8"}], "stats": {"total": 96, "additions": 92, "deletions": 4}, "files": [{"sha": "301199a38bc4d6c30a2331aaef8b2611f00d70b6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f30c84c9668a1b7e5d7cde91bb9f240ac2a995b2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f30c84c9668a1b7e5d7cde91bb9f240ac2a995b2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f30c84c9668a1b7e5d7cde91bb9f240ac2a995b2", "patch": "@@ -1,3 +1,10 @@\n+1999-05-28  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* decl.c (lookup_namespace_name): Handle getting a\n+\tTEMPLATE_ID_EXPR.\n+\t(expand_static_init): Don't call pushdecl for implicitly declared\n+\t`atexit' used to register destructors.\n+\n 1999-05-25  Mark Mitchell  <mark@codesourcery.com>\n \n \t* class.c (finish_vtbls): Copy BINFO_VIRTUALs before using it to"}, {"sha": "0b2d58881cf0007957e060de9fcfbd7d847ea247", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 40, "deletions": 4, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f30c84c9668a1b7e5d7cde91bb9f240ac2a995b2/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f30c84c9668a1b7e5d7cde91bb9f240ac2a995b2/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=f30c84c9668a1b7e5d7cde91bb9f240ac2a995b2", "patch": "@@ -5326,6 +5326,7 @@ lookup_namespace_name (namespace, name)\n {\n   struct tree_binding _b;\n   tree val;\n+  tree template_id = NULL_TREE;\n \n   my_friendly_assert (TREE_CODE (namespace) == NAMESPACE_DECL, 370);\n \n@@ -5342,6 +5343,16 @@ lookup_namespace_name (namespace, name)\n \n   namespace = ORIGINAL_NAMESPACE (namespace);\n \n+  if (TREE_CODE (name) == TEMPLATE_ID_EXPR)\n+    {\n+      template_id = name;\n+      name = TREE_OPERAND (name, 0);\n+      if (TREE_CODE (name) == OVERLOAD)\n+\tname = DECL_NAME (OVL_CURRENT (name));\n+      else if (TREE_CODE_CLASS (TREE_CODE (name)) == 'd')\n+\tname = DECL_NAME (name);\n+    }\n+\n   my_friendly_assert (TREE_CODE (name) == IDENTIFIER_NODE, 373);\n   \n   val = binding_init (&_b);\n@@ -5352,6 +5363,26 @@ lookup_namespace_name (namespace, name)\n     {\n       val = BINDING_VALUE (val);\n \n+      if (template_id)\n+\t{\n+\t  if (DECL_CLASS_TEMPLATE_P (val))\n+\t    val = lookup_template_class (val, \n+\t\t\t\t\t TREE_OPERAND (template_id, 1),\n+\t\t\t\t\t /*in_decl=*/NULL_TREE,\n+\t\t\t\t\t /*context=*/NULL_TREE,\n+\t\t\t\t\t /*entering_scope=*/0);\n+\t  else if (DECL_FUNCTION_TEMPLATE_P (val)\n+\t\t   || TREE_CODE (val) == OVERLOAD)\n+\t    val = lookup_template_function (val, \n+\t\t\t\t\t    TREE_OPERAND (template_id, 1));\n+\t  else\n+\t    {\n+\t      cp_error (\"`%D::%D' is not a template\",\n+\t\t\tnamespace, name);\n+\t      return error_mark_node;\n+\t    }\n+\t}\n+\n       /* If we have a single function from a using decl, pull it out.  */\n       if (TREE_CODE (val) == OVERLOAD && ! really_overloaded_fn (val))\n \tval = OVL_FUNCTION (val);\n@@ -8479,11 +8510,16 @@ expand_static_init (decl, init)\n \t      pfvlist = tree_cons (NULL_TREE, PFV, void_list_node);\n \n \t      push_lang_context (lang_name_c);\n+\t      /* Note that we do not call pushdecl for this function;\n+\t\t there's no reason that this declaration should be\n+\t\t accessible to anyone.  */\n \t      atexit_fndecl\n-\t\t= builtin_function (\"atexit\",\n-\t\t\t\t    build_function_type (void_type_node,\n-\t\t\t\t\t\t\t pfvlist),\n-\t\t\t\t    NOT_BUILT_IN, NULL_PTR);\n+\t\t= define_function (\"atexit\",\n+\t\t\t\t   build_function_type (void_type_node,\n+\t\t\t\t\t\t\tpfvlist),\n+\t\t\t\t   NOT_BUILT_IN, \n+\t\t\t\t   /*pfn=*/0,\n+\t\t\t\t   NULL_PTR);\n \t      mark_used (atexit_fndecl);\n \t      Atexit = default_conversion (atexit_fndecl);\n \t      pop_lang_context ();"}, {"sha": "709844eae64b10c97d6033c40f566db1d664060f", "filename": "gcc/testsuite/g++.old-deja/g++.ns/template10.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f30c84c9668a1b7e5d7cde91bb9f240ac2a995b2/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Ftemplate10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f30c84c9668a1b7e5d7cde91bb9f240ac2a995b2/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Ftemplate10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Ftemplate10.C?ref=f30c84c9668a1b7e5d7cde91bb9f240ac2a995b2", "patch": "@@ -0,0 +1,7 @@\n+// Build don't link:\n+// Origin: Manuel Menezes de Sequeira <mms@torga.iscte.pt>\n+\n+namespace N {\n+  template <class T> void g() {}\n+}\n+void (*pf)() = N::g<int>;"}, {"sha": "d1c8cf78b922fb9f595a1ddc5562fcf3f8e7ebb8", "filename": "gcc/testsuite/g++.old-deja/g++.other/debug3.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f30c84c9668a1b7e5d7cde91bb9f240ac2a995b2/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdebug3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f30c84c9668a1b7e5d7cde91bb9f240ac2a995b2/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdebug3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdebug3.C?ref=f30c84c9668a1b7e5d7cde91bb9f240ac2a995b2", "patch": "@@ -0,0 +1,22 @@\n+// Build don't link:\n+// Origin: Mark Mitchell <mark@codesourcery.com>\n+// Special g++ Options: -O2\n+\n+struct S\n+{\n+  ~S();\n+};\n+\n+inline void f()\n+{\n+  static S s;\n+}\n+\n+typedef void (*fn_t)();\n+\n+fn_t g()\n+{\n+  return &f;\n+}\n+\n+"}, {"sha": "aedecf22b7477ba5d6a44721a1bbe93b1dc79405", "filename": "gcc/testsuite/g++.old-deja/g++.other/static5.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f30c84c9668a1b7e5d7cde91bb9f240ac2a995b2/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstatic5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f30c84c9668a1b7e5d7cde91bb9f240ac2a995b2/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstatic5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstatic5.C?ref=f30c84c9668a1b7e5d7cde91bb9f240ac2a995b2", "patch": "@@ -0,0 +1,16 @@\n+// Build don't link:\n+// Origin: Mark Mitchell <mark@codesourcery.com>\n+\n+struct S\n+{\n+  ~S();\n+};\n+\n+inline void f()\n+{\n+  static S s;\n+  atexit (0); // ERROR - implicit declaration\n+}\n+\n+\n+"}]}