{"sha": "59482fa1e7243bd905c7e27c92ae2b89c79fff87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk0ODJmYTFlNzI0M2JkOTA1YzdlMjdjOTJhZTJiODljNzlmZmY4Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-15T08:51:28Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-15T08:51:28Z"}, "message": "i386: Make -march=x86-64-v[234] behave more like other -march= options\n\nIf somebody has -march=x86-64-v2 (or -v3 or -v4) in $CFLAGS, $CXXFLAGS etc.,\nthen -m32 or -mabi=ms stops working.\nWhat is worse, if one configures gcc --with-arch-64=x86-64-v2 (or -v3 or -v4),\nthen -mabi=ms stops working.\n\nI think that is a nightmare user experience.  It is ok that x86-64-v[234]\nbehave slightly different from other -march= options (in that they imply\nunless overridden -mtune=generic rather then -mtune= equal to the -march\nargument), but the error when one mixes it with -mabi=ms, or -m32 doesn't\nimprove anything.\nIt is true that the exact option set is only defined in the x86-64 psABI\n(IMHO that is a mistake too, we should copy that into the GCC documentation\nlike we document it for any other -march= option), but there is no reason\nwhy that exact set of CPU features can't be used for other ABIs, it is just\na set of CPU features.  If we add micro-architecture levels to the 32-bit\nABI (I doubt anyone wants to do that, but just hypothetically), then those\nmicro-architecture levels wouldn't certainly be called x86-64-v* but perhaps\ni386-v*.\nIn the tests, __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16 can't be expected on -m32\nnot because the CPU feature wouldn't be set, but because the instruction\nis 64-bit only and 32-bit code doesn't have __int128 etc. support.\n\n2020-12-15  Jakub Jelinek  <jakub@redhat.com>\n\n\t* config/i386/i386-options.c (ix86_option_override_internal): Don't\n\terror on -march=x86-64-v[234] with -m32 or -mabi=ms.\n\t* config.gcc: Don't reject --with-arch=x86-64-v[234] or\n\t--with-arch_32=x86-64-v[234].\n\t* doc/invoke.texi (-march=x86-64-v[234]): Document what the option\n\tdoes for other ABIs.\n\n\t* gcc.target/i386/x86-64-v2.c: Don't expect\n\t__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16 to be defined with -m32.\n\t* gcc.target/i386/x86-64-v2-other.c: New test.\n\t* gcc.target/i386/x86-64-v2-msabi.c: New test.\n\t* gcc.target/i386/x86-64-v3.c: Fix a comment pasto.  Don't expect\n\t__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16 to be defined with -m32.\n\t* gcc.target/i386/x86-64-v3-other.c: New test.\n\t* gcc.target/i386/x86-64-v3-msabi.c: New test.\n\t* gcc.target/i386/x86-64-v4.c:Don't expect\n\t__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16 to be defined with -m32.\n\t* gcc.target/i386/x86-64-v4-other.c: New test.\n\t* gcc.target/i386/x86-64-v4-msabi.c: New test.", "tree": {"sha": "0e905ede32d70838708111398fd7190b22936920", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e905ede32d70838708111398fd7190b22936920"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59482fa1e7243bd905c7e27c92ae2b89c79fff87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59482fa1e7243bd905c7e27c92ae2b89c79fff87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59482fa1e7243bd905c7e27c92ae2b89c79fff87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59482fa1e7243bd905c7e27c92ae2b89c79fff87/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efd08ad579a1dea6409bd280cb5c263ed0849839", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efd08ad579a1dea6409bd280cb5c263ed0849839", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efd08ad579a1dea6409bd280cb5c263ed0849839"}], "stats": {"total": 70, "additions": 47, "deletions": 23}, "files": [{"sha": "81b552383fba523d780afd43b9e9074bdc6adc7c", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=59482fa1e7243bd905c7e27c92ae2b89c79fff87", "patch": "@@ -4519,10 +4519,8 @@ case \"${target}\" in\n \t\t\t\t\tcase \" $x86_64_archs \" in\n \t\t\t\t\t*\" ${val} \"*)\n \t\t\t\t\t\t# Disallow x86-64-v* for --with-cpu=/--with-tune=\n-\t\t\t\t\t\t# or --with-arch= or --with-arch_32=\n-\t\t\t\t\t\t# It can be only specified in --with-arch_64=\n \t\t\t\t\t\tcase \"x$which$val\" in\n-\t\t\t\t\t\txcpu*x86-64-v*|xtune*x86-64-v*|xarchx86-64-v*|xarch_32x86-64-v*)\n+\t\t\t\t\t\txcpu*x86-64-v*|xtune*x86-64-v*)\n \t\t\t\t\t\t\techo \"Unknown CPU given in --with-$which=$val.\" 1>&2\n \t\t\t\t\t\t\texit 1\n \t\t\t\t\t\t\t;;"}, {"sha": "86bbb24606d1e63c39bd6ff1ac8dc57469fa897f", "filename": "gcc/config/i386/i386-options.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Fconfig%2Fi386%2Fi386-options.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Fconfig%2Fi386%2Fi386-options.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-options.c?ref=59482fa1e7243bd905c7e27c92ae2b89c79fff87", "patch": "@@ -2084,17 +2084,6 @@ ix86_option_override_internal (bool main_args_p,\n \t    return false;\n \t  }\n \n-\t/* The feature-only micro-architecture levels that use\n-\t   PTA_NO_TUNE are only defined for the x86-64 psABI.  */\n-\tif ((processor_alias_table[i].flags & PTA_NO_TUNE) != 0\n-\t    && (!TARGET_64BIT_P (opts->x_ix86_isa_flags)\n-\t\t|| opts->x_ix86_abi != SYSV_ABI))\n-\t  {\n-\t    error (G_(\"%qs architecture level is only defined\"\n-\t\t      \" for the x86-64 psABI\"), opts->x_ix86_arch_string);\n-\t    return false;\n-\t  }\n-\n \tix86_schedule = processor_alias_table[i].schedule;\n \tix86_arch = processor_alias_table[i].processor;\n "}, {"sha": "b06ebbad847bbabc3cef24aa44137b0462ca5170", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=59482fa1e7243bd905c7e27c92ae2b89c79fff87", "patch": "@@ -29778,8 +29778,9 @@ A generic CPU with 64-bit extensions.\n @itemx x86-64-v3\n @itemx x86-64-v4\n These choices for @var{cpu-type} select the corresponding\n-micro-architecture level from the x86-64 psABI.  They are only available\n-when compiling for an x86-64 target that uses the System V psABI@.\n+micro-architecture level from the x86-64 psABI.  On ABIs other than\n+the x86-64 psABI they select the same CPU features as the x86-64 psABI\n+documents for the particular micro-architecture level.\n \n Since these @var{cpu-type} values do not have a corresponding\n @option{-mtune} setting, using @option{-march} with these values enables"}, {"sha": "109589b03c39e5b199dad13efd26e8b22aeb5f05", "filename": "gcc/testsuite/gcc.target/i386/x86-64-v2-msabi.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v2-msabi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v2-msabi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v2-msabi.c?ref=59482fa1e7243bd905c7e27c92ae2b89c79fff87", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-mabi=ms -march=x86-64-v2\" } */\n+\n+/* Verify -march=x86-64-v2 works even with -mabi=ms.  */\n+#include \"x86-64-v2.c\""}, {"sha": "1750b7bc23ac0f30d1b9862a7654f4ae858f7be7", "filename": "gcc/testsuite/gcc.target/i386/x86-64-v2-other.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v2-other.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v2-other.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v2-other.c?ref=59482fa1e7243bd905c7e27c92ae2b89c79fff87", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=x86-64-v2\" } */\n+\n+/* Verify -march=x86-64-v2 works even with -m32 or -mabi=ms.  */\n+#include \"x86-64-v2.c\""}, {"sha": "e4b7e886edd3899f0cc9083c74ec83946089ad67", "filename": "gcc/testsuite/gcc.target/i386/x86-64-v2.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v2.c?ref=59482fa1e7243bd905c7e27c92ae2b89c79fff87", "patch": "@@ -12,8 +12,10 @@\n #ifndef __SSE2__\n # error __SSE2__ not defined\n #endif\n-#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16\n-# error __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16 not defined\n+#ifdef __x86_64__\n+# ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16\n+#  error __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16 not defined\n+# endif\n #endif\n #ifndef __LAHF_SAHF__\n # error __LAHF_SAHF__ not defined"}, {"sha": "dcf7cb07294dde5fd48b751f4ae792d1d83c2b61", "filename": "gcc/testsuite/gcc.target/i386/x86-64-v3-msabi.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v3-msabi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v3-msabi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v3-msabi.c?ref=59482fa1e7243bd905c7e27c92ae2b89c79fff87", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-mabi=ms -march=x86-64-v3\" } */\n+\n+/* Verify -march=x86-64-v3 works even with -mabi=ms.  */\n+#include \"x86-64-v3.c\""}, {"sha": "d80ac1bcda892744fb88c97f81c175324b3a2f73", "filename": "gcc/testsuite/gcc.target/i386/x86-64-v3-other.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v3-other.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v3-other.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v3-other.c?ref=59482fa1e7243bd905c7e27c92ae2b89c79fff87", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=x86-64-v3\" } */\n+\n+/* Verify -march=x86-64-v3 works even with -m32 or -mabi=ms.  */\n+#include \"x86-64-v3.c\""}, {"sha": "5357720481626feded1879d50d3f09be8e88a9ec", "filename": "gcc/testsuite/gcc.target/i386/x86-64-v3.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v3.c?ref=59482fa1e7243bd905c7e27c92ae2b89c79fff87", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target { ! ia32 } } } */\n /* { dg-options \"-mabi=sysv -march=x86-64-v3\" } */\n \n-/* Verify that the CPU features required by x86-64-v4 are enabled.  */\n+/* Verify that the CPU features required by x86-64-v3 are enabled.  */\n \n #ifndef __MMX__\n # error __MMX__ not defined\n@@ -12,8 +12,10 @@\n #ifndef __SSE2__\n # error __SSE2__ not defined\n #endif\n-#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16\n-# error __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16 not defined\n+#ifdef __x86_64__\n+# ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16\n+#  error __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16 not defined\n+# endif\n #endif\n #ifndef __LAHF_SAHF__\n # error __LAHF_SAHF__ not defined"}, {"sha": "fe8565fda4f40d4496aea8da81bed0c717fa41ab", "filename": "gcc/testsuite/gcc.target/i386/x86-64-v4-msabi.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v4-msabi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v4-msabi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v4-msabi.c?ref=59482fa1e7243bd905c7e27c92ae2b89c79fff87", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-mabi=ms -march=x86-64-v4\" } */\n+\n+/* Verify -march=x86-64-v4 works even with -mabi=ms.  */\n+#include \"x86-64-v4.c\""}, {"sha": "0e1a28404d642a4af10a4d6970fe99b903d455f1", "filename": "gcc/testsuite/gcc.target/i386/x86-64-v4-other.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v4-other.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v4-other.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v4-other.c?ref=59482fa1e7243bd905c7e27c92ae2b89c79fff87", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=x86-64-v4\" } */\n+\n+/* Verify -march=x86-64-v4 works even with -m32 or -mabi=ms.  */\n+#include \"x86-64-v4.c\""}, {"sha": "718b1a18c1df79172d4f76bfa2968ce58a8c1977", "filename": "gcc/testsuite/gcc.target/i386/x86-64-v4.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59482fa1e7243bd905c7e27c92ae2b89c79fff87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fx86-64-v4.c?ref=59482fa1e7243bd905c7e27c92ae2b89c79fff87", "patch": "@@ -12,8 +12,10 @@\n #ifndef __SSE2__\n # error __SSE2__ not defined\n #endif\n-#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16\n-# error __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16 not defined\n+#ifdef __x86_64__\n+# ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16\n+#  error __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16 not defined\n+# endif\n #endif\n #ifndef __LAHF_SAHF__\n # error __LAHF_SAHF__ not defined"}]}