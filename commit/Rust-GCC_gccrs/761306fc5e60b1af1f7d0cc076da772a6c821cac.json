{"sha": "761306fc5e60b1af1f7d0cc076da772a6c821cac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzYxMzA2ZmM1ZTYwYjFhZjFmN2QwY2MwNzZkYTc3MmE2YzgyMWNhYw==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-06-07T14:37:25Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-06-07T14:39:39Z"}, "message": "d: Merge upstream dmd 1831b24ff.\n\nConverts some global and param fields from pointers to value types.\n\nReviewed-on: https://github.com/dlang/dmd/pull/11245\n\ngcc/d/ChangeLog:\n\n\t* dmd/MERGE: Merge upstream dmd 1831b24ff.\n\t* d-lang.cc (d_init_options): Remove initialization of updated fields.\n\t(d_handle_option): Adjust for new field types.", "tree": {"sha": "043f252a3fda44a67b6c1927fb1083e89c16a9a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/043f252a3fda44a67b6c1927fb1083e89c16a9a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/761306fc5e60b1af1f7d0cc076da772a6c821cac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/761306fc5e60b1af1f7d0cc076da772a6c821cac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/761306fc5e60b1af1f7d0cc076da772a6c821cac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/761306fc5e60b1af1f7d0cc076da772a6c821cac/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b342cfd648e6658363c7c8fef83af8f59dba1795", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b342cfd648e6658363c7c8fef83af8f59dba1795", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b342cfd648e6658363c7c8fef83af8f59dba1795"}], "stats": {"total": 32, "additions": 13, "deletions": 19}, "files": [{"sha": "41921934fdd4f281c55a43f97d42c063fdbc6307", "filename": "gcc/d/d-lang.cc", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/761306fc5e60b1af1f7d0cc076da772a6c821cac/gcc%2Fd%2Fd-lang.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/761306fc5e60b1af1f7d0cc076da772a6c821cac/gcc%2Fd%2Fd-lang.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-lang.cc?ref=761306fc5e60b1af1f7d0cc076da772a6c821cac", "patch": "@@ -297,18 +297,12 @@ d_init_options (unsigned int, cl_decoded_option *decoded_options)\n   /* Default extern(C++) mangling to C++14.  */\n   global.params.cplusplus = CppStdRevisionCpp14;\n \n-  global.params.linkswitches = new Strings ();\n-  global.params.libfiles = new Strings ();\n-  global.params.objfiles = new Strings ();\n-  global.params.ddocfiles = new Strings ();\n-\n   /* Warnings and deprecations are disabled by default.  */\n   global.params.useDeprecated = DIAGNOSTICoff;\n   global.params.warnings = DIAGNOSTICoff;\n \n   global.params.imppath = new Strings ();\n   global.params.fileImppath = new Strings ();\n-  global.params.modFileAliasStrings = new Strings ();\n \n   /* Extra GDC-specific options.  */\n   d_option.fonly = NULL;\n@@ -474,7 +468,7 @@ d_handle_option (size_t scode, const char *arg, HOST_WIDE_INT value,\n       break;\n \n     case OPT_fdoc_inc_:\n-      global.params.ddocfiles->push (arg);\n+      global.params.ddocfiles.push (arg);\n       break;\n \n     case OPT_fdruntime:\n@@ -502,7 +496,7 @@ d_handle_option (size_t scode, const char *arg, HOST_WIDE_INT value,\n       break;\n \n     case OPT_fmodule_file_:\n-      global.params.modFileAliasStrings->push (arg);\n+      global.params.modFileAliasStrings.push (arg);\n       if (!strchr (arg, '='))\n \terror (\"bad argument for %<-fmodule-file%>: %qs\", arg);\n       break;"}, {"sha": "56a47bb61a3a0cebc1f8cd9a59dd81f6f3333cc2", "filename": "gcc/d/dmd/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/761306fc5e60b1af1f7d0cc076da772a6c821cac/gcc%2Fd%2Fdmd%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/761306fc5e60b1af1f7d0cc076da772a6c821cac/gcc%2Fd%2Fdmd%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FMERGE?ref=761306fc5e60b1af1f7d0cc076da772a6c821cac", "patch": "@@ -1,4 +1,4 @@\n-cef1e7991121a22f50e9966ea407805015922bc7\n+1831b24fffe35fd0e332c194fdf8723ba3c930a5\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/dmd repository."}, {"sha": "5bb544746ecaaada0c46c2fe035d7a6b59affd2c", "filename": "gcc/d/dmd/dmodule.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/761306fc5e60b1af1f7d0cc076da772a6c821cac/gcc%2Fd%2Fdmd%2Fdmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/761306fc5e60b1af1f7d0cc076da772a6c821cac/gcc%2Fd%2Fdmd%2Fdmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdmodule.c?ref=761306fc5e60b1af1f7d0cc076da772a6c821cac", "patch": "@@ -228,7 +228,7 @@ Module *Module::load(Loc loc, Identifiers *packages, Identifier *ident)\n     {\n         OutBuffer buf;\n         OutBuffer dotmods;\n-        Array<const char *> *ms = global.params.modFileAliasStrings;\n+        Array<const char *> *ms = &global.params.modFileAliasStrings;\n         const size_t msdim = ms ? ms->length : 0;\n \n         for (size_t i = 0; i < packages->length; i++)"}, {"sha": "e0bf94086d9db9e0782a2df0e5d62bdb43af560d", "filename": "gcc/d/dmd/doc.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/761306fc5e60b1af1f7d0cc076da772a6c821cac/gcc%2Fd%2Fdmd%2Fdoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/761306fc5e60b1af1f7d0cc076da772a6c821cac/gcc%2Fd%2Fdmd%2Fdoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdoc.c?ref=761306fc5e60b1af1f7d0cc076da772a6c821cac", "patch": "@@ -351,12 +351,12 @@ void gendocfile(Module *m)\n         // Override with DDOCFILE specified in the sc.ini file\n         char *p = getenv(\"DDOCFILE\");\n         if (p)\n-            global.params.ddocfiles->shift(p);\n+            global.params.ddocfiles.shift(p);\n \n         // Override with the ddoc macro files from the command line\n-        for (size_t i = 0; i < global.params.ddocfiles->length; i++)\n+        for (size_t i = 0; i < global.params.ddocfiles.length; i++)\n         {\n-            FileName f((*global.params.ddocfiles)[i]);\n+            FileName f(global.params.ddocfiles[i]);\n             File file(&f);\n             readFile(m->loc, &file);\n             // BUG: convert file contents to UTF-8 before use"}, {"sha": "8a2ffdc2a56d672f955f231b2d3e0dac0969f17f", "filename": "gcc/d/dmd/globals.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/761306fc5e60b1af1f7d0cc076da772a6c821cac/gcc%2Fd%2Fdmd%2Fglobals.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/761306fc5e60b1af1f7d0cc076da772a6c821cac/gcc%2Fd%2Fdmd%2Fglobals.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fglobals.h?ref=761306fc5e60b1af1f7d0cc076da772a6c821cac", "patch": "@@ -145,7 +145,7 @@ struct Param\n     CHECKACTION checkAction;       // action to take when bounds, asserts or switch defaults are violated\n \n     DString  argv0;    // program name\n-    Array<const char *> *modFileAliasStrings; // array of char*'s of -I module filename alias strings\n+    Array<const char *> modFileAliasStrings; // array of char*'s of -I module filename alias strings\n     Array<const char *> *imppath;     // array of char*'s of where to look for import modules\n     Array<const char *> *fileImppath; // array of char*'s of where to look for file import modules\n     DString objdir;    // .obj/.lib file output directory\n@@ -155,7 +155,7 @@ struct Param\n     bool doDocComments;  // process embedded documentation comments\n     DString docdir;      // write documentation file to docdir directory\n     DString docname;     // write documentation file to docname\n-    Array<const char *> *ddocfiles;  // macro include files for Ddoc\n+    Array<const char *> ddocfiles;  // macro include files for Ddoc\n \n     bool doHdrGeneration;  // process embedded documentation comments\n     DString hdrdir;        // write 'header' file to docdir directory\n@@ -190,10 +190,10 @@ struct Param\n     Strings runargs;    // arguments for executable\n \n     // Linker stuff\n-    Array<const char *> *objfiles;\n-    Array<const char *> *linkswitches;\n-    Array<const char *> *libfiles;\n-    Array<const char *> *dllfiles;\n+    Array<const char *> objfiles;\n+    Array<const char *> linkswitches;\n+    Array<const char *> libfiles;\n+    Array<const char *> dllfiles;\n     DString deffile;\n     DString resfile;\n     DString exefile;"}]}