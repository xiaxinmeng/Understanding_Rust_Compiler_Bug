{"sha": "07108a9ebe4776610bb23f684b3a346d28511bed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDcxMDhhOWViZTQ3NzY2MTBiYjIzZjY4NGIzYTM0NmQyODUxMWJlZA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-08-15T08:57:29Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-08-15T08:57:29Z"}, "message": "[AArch64] Fix predicate alignment for fixed-length SVE\n\naarch64_simd_vector_alignment was only giving predicates 16-bit\nalignment in VLA mode, not VLS mode.  I think the problem is latent\nbecause we can't yet create an ABI predicate type, but it seemed worth\nfixing in a standalone patch rather than as part of the main ACLE series.\n\nThe ACLE patches have tests for this.\n\n2019-08-15  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* config/aarch64/aarch64.c (aarch64_simd_vector_alignment): Return\n\t16 for SVE predicates even if they are fixed-length.\n\nFrom-SVN: r274522", "tree": {"sha": "17a9c85ec343f419a5305da7288f58a2c25f8207", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17a9c85ec343f419a5305da7288f58a2c25f8207"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07108a9ebe4776610bb23f684b3a346d28511bed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07108a9ebe4776610bb23f684b3a346d28511bed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07108a9ebe4776610bb23f684b3a346d28511bed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07108a9ebe4776610bb23f684b3a346d28511bed/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2d2388f82f2e7f2fd1da063192ba98be45f099d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d2388f82f2e7f2fd1da063192ba98be45f099d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d2388f82f2e7f2fd1da063192ba98be45f099d2"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "c5dbcf0aeaadab54584ce960612317013f611f73", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07108a9ebe4776610bb23f684b3a346d28511bed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07108a9ebe4776610bb23f684b3a346d28511bed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=07108a9ebe4776610bb23f684b3a346d28511bed", "patch": "@@ -1,3 +1,8 @@\n+2019-08-15  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_simd_vector_alignment): Return\n+\t16 for SVE predicates even if they are fixed-length.\n+\n 2019-08-15  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/aarch64/aarch64-sve.md (and<PRED_ALL:mode>3): Make the"}, {"sha": "77794582fbc966a3b49eddedf11fb742f21a2065", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07108a9ebe4776610bb23f684b3a346d28511bed/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07108a9ebe4776610bb23f684b3a346d28511bed/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=07108a9ebe4776610bb23f684b3a346d28511bed", "patch": "@@ -15915,11 +15915,13 @@ aarch64_simd_attr_length_rglist (machine_mode mode)\n static HOST_WIDE_INT\n aarch64_simd_vector_alignment (const_tree type)\n {\n+  /* ??? Checking the mode isn't ideal, but VECTOR_BOOLEAN_TYPE_P can\n+     be set for non-predicate vectors of booleans.  Modes are the most\n+     direct way we have of identifying real SVE predicate types.  */\n+  if (GET_MODE_CLASS (TYPE_MODE (type)) == MODE_VECTOR_BOOL)\n+    return 16;\n   if (TREE_CODE (TYPE_SIZE (type)) != INTEGER_CST)\n-    /* ??? Checking the mode isn't ideal, but VECTOR_BOOLEAN_TYPE_P can\n-       be set for non-predicate vectors of booleans.  Modes are the most\n-       direct way we have of identifying real SVE predicate types.  */\n-    return GET_MODE_CLASS (TYPE_MODE (type)) == MODE_VECTOR_BOOL ? 16 : 128;\n+    return 128;\n   return wi::umin (wi::to_wide (TYPE_SIZE (type)), 128).to_uhwi ();\n }\n "}]}