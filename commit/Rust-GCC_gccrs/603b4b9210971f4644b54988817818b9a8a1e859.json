{"sha": "603b4b9210971f4644b54988817818b9a8a1e859", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAzYjRiOTIxMDk3MWY0NjQ0YjU0OTg4ODE3ODE4YjlhOGExZTg1OQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2002-06-11T16:49:14Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2002-06-11T16:49:14Z"}, "message": "* loop.c (loop_regs_scan): Avoid useless generation of REG objects.\n\nFrom-SVN: r54513", "tree": {"sha": "36408176fcfdbcba2983d5cdbacc2dc70a3b3715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36408176fcfdbcba2983d5cdbacc2dc70a3b3715"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/603b4b9210971f4644b54988817818b9a8a1e859", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/603b4b9210971f4644b54988817818b9a8a1e859", "html_url": "https://github.com/Rust-GCC/gccrs/commit/603b4b9210971f4644b54988817818b9a8a1e859", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/603b4b9210971f4644b54988817818b9a8a1e859/comments", "author": null, "committer": null, "parents": [{"sha": "1bb1f121fe33654ac3971a5cf0b8eb9bafc471c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bb1f121fe33654ac3971a5cf0b8eb9bafc471c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bb1f121fe33654ac3971a5cf0b8eb9bafc471c0"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "e5c647985e37ad6bd5fd58a205946313f813ce33", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603b4b9210971f4644b54988817818b9a8a1e859/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603b4b9210971f4644b54988817818b9a8a1e859/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=603b4b9210971f4644b54988817818b9a8a1e859", "patch": "@@ -5,6 +5,8 @@\n \n 2002-06-11  Jeffrey Law <law@redhat.com>\n \n+\t* loop.c (loop_regs_scan): Avoid useless generation of REG objects.\n+\n \t* mips.c (function_arg_advance): gen_ashldi3 returns an INSN now,\n \tnot the pattern.  So extract the pattern from the insn.\n "}, {"sha": "85c9c9fef10388612fb621b6e24ea9374dbf1de1", "filename": "gcc/loop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603b4b9210971f4644b54988817818b9a8a1e859/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603b4b9210971f4644b54988817818b9a8a1e859/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=603b4b9210971f4644b54988817818b9a8a1e859", "patch": "@@ -9661,7 +9661,7 @@ loop_regs_scan (loop, extra_size)\n   if (LOOP_INFO (loop)->has_call)\n     for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n       if (TEST_HARD_REG_BIT (regs_invalidated_by_call, i)\n-\t  && rtx_varies_p (gen_rtx_REG (Pmode, i), /*for_alias=*/1))\n+\t  && rtx_varies_p (regno_reg_rtx[i], 1))\n \t{\n \t  regs->array[i].may_not_optimize = 1;\n \t  regs->array[i].set_in_loop = 1;"}]}