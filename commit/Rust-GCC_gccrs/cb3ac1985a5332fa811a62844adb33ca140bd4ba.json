{"sha": "cb3ac1985a5332fa811a62844adb33ca140bd4ba", "node_id": "C_kwDOANBUbNoAKGNiM2FjMTk4NWE1MzMyZmE4MTFhNjI4NDRhZGIzM2NhMTQwYmQ0YmE", "commit": {"author": {"name": "Navid Rahimi", "email": "navidrahimi@microsoft.com", "date": "2022-01-28T22:11:30Z"}, "committer": {"name": "Jeff Law", "email": "jeffreyalaw@gmail.com", "date": "2022-01-28T22:13:08Z"}, "message": "tree-optimization/103514 Missing XOR-EQ-AND Optimization\n\nThis patch will add the missed pattern described in bug 103514 [1] to the match.pd. [1] includes proof of correctness for the patch too.\n\n1) https://gcc.gnu.org/bugzilla/show_bug.cgi?id=103514\n\ngcc/\n\tPR tree-optimization/103514\n\t* match.pd (a & b) ^ (a == b) -> !(a | b): New optimization.\n\t(a & b) == (a ^ b) -> !(a | b): New optimization.\n\ngcc/testsuite\n\t* gcc.dg/tree-ssa/pr103514.c: Testcase for this optimization.", "tree": {"sha": "e8b109bf7cac75e22a362e7c3550d0b66e898f58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8b109bf7cac75e22a362e7c3550d0b66e898f58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb3ac1985a5332fa811a62844adb33ca140bd4ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb3ac1985a5332fa811a62844adb33ca140bd4ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb3ac1985a5332fa811a62844adb33ca140bd4ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb3ac1985a5332fa811a62844adb33ca140bd4ba/comments", "author": {"login": "navidR", "id": 3811601, "node_id": "MDQ6VXNlcjM4MTE2MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/3811601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/navidR", "html_url": "https://github.com/navidR", "followers_url": "https://api.github.com/users/navidR/followers", "following_url": "https://api.github.com/users/navidR/following{/other_user}", "gists_url": "https://api.github.com/users/navidR/gists{/gist_id}", "starred_url": "https://api.github.com/users/navidR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/navidR/subscriptions", "organizations_url": "https://api.github.com/users/navidR/orgs", "repos_url": "https://api.github.com/users/navidR/repos", "events_url": "https://api.github.com/users/navidR/events{/privacy}", "received_events_url": "https://api.github.com/users/navidR/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JeffreyALaw", "id": 14062506, "node_id": "MDQ6VXNlcjE0MDYyNTA2", "avatar_url": "https://avatars.githubusercontent.com/u/14062506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeffreyALaw", "html_url": "https://github.com/JeffreyALaw", "followers_url": "https://api.github.com/users/JeffreyALaw/followers", "following_url": "https://api.github.com/users/JeffreyALaw/following{/other_user}", "gists_url": "https://api.github.com/users/JeffreyALaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeffreyALaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeffreyALaw/subscriptions", "organizations_url": "https://api.github.com/users/JeffreyALaw/orgs", "repos_url": "https://api.github.com/users/JeffreyALaw/repos", "events_url": "https://api.github.com/users/JeffreyALaw/events{/privacy}", "received_events_url": "https://api.github.com/users/JeffreyALaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d8b422818714737bd61d1667461efce96687073", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d8b422818714737bd61d1667461efce96687073", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d8b422818714737bd61d1667461efce96687073"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "0544ddd91b375420b5452ff245252096ba1d64eb", "filename": "gcc/match.pd", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3ac1985a5332fa811a62844adb33ca140bd4ba/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3ac1985a5332fa811a62844adb33ca140bd4ba/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=cb3ac1985a5332fa811a62844adb33ca140bd4ba", "patch": "@@ -1784,6 +1784,14 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n  (negate (nop_convert? (bit_not @0)))\n  (plus (view_convert @0) { build_each_one_cst (type); }))\n \n+/* (a & b) ^ (a == b) -> !(a | b) */\n+/* (a & b) == (a ^ b) -> !(a | b) */\n+(for first_op (bit_xor eq)\n+     second_op (eq bit_xor)\n+ (simplify\n+  (first_op:c (bit_and:c truth_valued_p@0 truth_valued_p@1) (second_op:c @0 @1))\n+    (bit_not (bit_ior @0 @1))))\n+\n /* Convert ~ (A - 1) or ~ (A + -1) to -A.  */\n (simplify\n  (bit_not (convert? (minus @0 integer_each_onep)))"}, {"sha": "de3709ce3961d2554d31116671fd0c94c46e8064", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr103514.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3ac1985a5332fa811a62844adb33ca140bd4ba/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr103514.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3ac1985a5332fa811a62844adb33ca140bd4ba/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr103514.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr103514.c?ref=cb3ac1985a5332fa811a62844adb33ca140bd4ba", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-optimized\" } */\n+#include <stdbool.h>\n+\n+bool\n+i (bool a, bool b)\n+{\n+     return (a & b) ^ (a == b);\n+}\n+\n+bool\n+j (bool a, bool b)\n+{\n+     return (a & b) == (a ^ b);\n+}\n+\n+bool\n+g (bool a, bool b)\n+{\n+    return (a && b) == (a ^ b); \n+}\n+\n+bool\n+h (bool a, bool b)\n+{\n+     return (a && b) ^ (a == b);\n+}\n+\n+\n+/* Make sure we have removed \"==\" and \"^\" and \"&\". */\n+/* { dg-final { scan-tree-dump-not \"&\" \"optimized\"} } */\n+/* { dg-final { scan-tree-dump-not \"\\\\^\"  \"optimized\"} } */\n+/* { dg-final { scan-tree-dump-not \"==\" \"optimized\"} } */\n\\ No newline at end of file"}]}