{"sha": "10231958fcfb13bc4847729eba21470c101b4a88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAyMzE5NThmY2ZiMTNiYzQ4NDc3MjllYmEyMTQ3MGMxMDFiNGE4OA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-07-31T06:41:56Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-07-31T10:05:26Z"}, "message": "middle-end/96369 - fix missed short-circuiting during range folding\n\nThis makes the special case of constant evaluated LHS for a\nshort-circuiting or/and explicit rather than doing range\nmerging and eventually exposing a side-effect that shouldn't be\nevaluated.\n\n2020-07-31  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/96369\n\t* fold-const.c (fold_range_test): Special-case constant\n\tLHS for short-circuiting operations.\n\n\t* c-c++-common/pr96369.c: New testcase.", "tree": {"sha": "638d05239bb3e8ccb0f2bee286029e9c58b31315", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/638d05239bb3e8ccb0f2bee286029e9c58b31315"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10231958fcfb13bc4847729eba21470c101b4a88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10231958fcfb13bc4847729eba21470c101b4a88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10231958fcfb13bc4847729eba21470c101b4a88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10231958fcfb13bc4847729eba21470c101b4a88/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc2b1a232b1825b421a1aaa21a0865b2d1e4e08c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc2b1a232b1825b421a1aaa21a0865b2d1e4e08c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc2b1a232b1825b421a1aaa21a0865b2d1e4e08c"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "1324a194995a60e8795548b39b8044771decee6f", "filename": "gcc/fold-const.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10231958fcfb13bc4847729eba21470c101b4a88/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10231958fcfb13bc4847729eba21470c101b4a88/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=10231958fcfb13bc4847729eba21470c101b4a88", "patch": "@@ -5931,6 +5931,13 @@ fold_range_test (location_t loc, enum tree_code code, tree type,\n     return 0;\n \n   lhs = make_range (op0, &in0_p, &low0, &high0, &strict_overflow_p);\n+  /* If op0 is known true or false and this is a short-circuiting\n+     operation we must not merge with op1 since that makes side-effects\n+     unconditional.  So special-case this.  */\n+  if (!lhs\n+      && ((code == TRUTH_ORIF_EXPR && in0_p)\n+\t  || (code == TRUTH_ANDIF_EXPR && !in0_p)))\n+    return op0;\n   rhs = make_range (op1, &in1_p, &low1, &high1, &strict_overflow_p);\n \n   /* If this is an OR operation, invert both sides; we will invert"}, {"sha": "8c468d9fec2f1a32467ecb4950a3a02ad395d73c", "filename": "gcc/testsuite/c-c++-common/pr96369.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10231958fcfb13bc4847729eba21470c101b4a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr96369.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10231958fcfb13bc4847729eba21470c101b4a88/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr96369.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr96369.c?ref=10231958fcfb13bc4847729eba21470c101b4a88", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O\" } */\n+\n+int main()\n+{\n+  const long ONE = 1L;\n+  long y = 0L;\n+  long x = ((long) (ONE || (y = 1L)) % 8L);\n+  if (y != 0)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}