{"sha": "23e6d4a5bed6ce5b14b60816ebd5bda2749c9af6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNlNmQ0YTViZWQ2Y2U1YjE0YjYwODE2ZWJkNWJkYTI3NDljOWFmNg==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2011-02-24T14:51:17Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2011-02-24T14:51:17Z"}, "message": "PR 47802 Test for POSIX getpwuid_r\n\nFrom-SVN: r170471", "tree": {"sha": "b6bfedfb8d2db2dd774d60a8096f1fcf3d2a6419", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6bfedfb8d2db2dd774d60a8096f1fcf3d2a6419"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23e6d4a5bed6ce5b14b60816ebd5bda2749c9af6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23e6d4a5bed6ce5b14b60816ebd5bda2749c9af6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23e6d4a5bed6ce5b14b60816ebd5bda2749c9af6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23e6d4a5bed6ce5b14b60816ebd5bda2749c9af6/comments", "author": null, "committer": null, "parents": [{"sha": "e3d590afea1e84a02f4f9a02929b2a9003fa764e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3d590afea1e84a02f4f9a02929b2a9003fa764e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3d590afea1e84a02f4f9a02929b2a9003fa764e"}], "stats": {"total": 86, "additions": 84, "deletions": 2}, "files": [{"sha": "0b0a27e9c8e6b874cdba11fcb28c6d1b22c9b1ab", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23e6d4a5bed6ce5b14b60816ebd5bda2749c9af6/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23e6d4a5bed6ce5b14b60816ebd5bda2749c9af6/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=23e6d4a5bed6ce5b14b60816ebd5bda2749c9af6", "patch": "@@ -1,3 +1,12 @@\n+2011-02-24  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libfortran/47802\n+\t* configure.ac: Add test for POSIX getpwuid_r.\n+\t* intrinsics/getlog.c (getlog): CPP test for\n+\tHAVE_POSIX_GETPWUID_R.\n+\t* config.h.in: Regenerated.\n+\t* configure: Regenerated.\n+\n 2011-02-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/47567"}, {"sha": "67fb5f075a70b75f84a0ebe945987473b0eb2521", "filename": "libgfortran/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23e6d4a5bed6ce5b14b60816ebd5bda2749c9af6/libgfortran%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23e6d4a5bed6ce5b14b60816ebd5bda2749c9af6/libgfortran%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig.h.in?ref=23e6d4a5bed6ce5b14b60816ebd5bda2749c9af6", "patch": "@@ -624,6 +624,9 @@\n /* Define to 1 if you have the `pipe' function. */\n #undef HAVE_PIPE\n \n+/* Define to 1 if we have POSIX getpwuid_r which takes 5 arguments. */\n+#undef HAVE_POSIX_GETPWUID_R\n+\n /* libm includes pow */\n #undef HAVE_POW\n "}, {"sha": "834bd8c51be185ed9481b422cd71391e0bec3ac4", "filename": "libgfortran/configure", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23e6d4a5bed6ce5b14b60816ebd5bda2749c9af6/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23e6d4a5bed6ce5b14b60816ebd5bda2749c9af6/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=23e6d4a5bed6ce5b14b60816ebd5bda2749c9af6", "patch": "@@ -25428,6 +25428,56 @@ FPU_HOST_HEADER=config/${fpu_host}.h\n IEEE_FLAGS=\"${ieee_flags}\"\n \n \n+\n+# Check for POSIX getpwuid_r\n+#\n+# There are two versions of getpwuid_r, the POSIX one with 5\n+# arguments, and another one with 4 arguments used by at least HP-UX\n+# 10.2.\n+if test \"$ac_cv_func_getpwuid_r\" = \"yes\"; then\n+   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking POSIX version of getpwuid_r with 5 arguments\" >&5\n+$as_echo_n \"checking POSIX version of getpwuid_r with 5 arguments... \" >&6; }\n+if test \"${libgfor_cv_posix_getpwuid_r+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+   if test x$gcc_no_link = xyes; then\n+  as_fn_error \"Link tests are not allowed after GCC_NO_EXECUTABLES.\" \"$LINENO\" 5\n+fi\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+#include <stdio.h>\n+#include <sys/types.h>\n+#include <pwd.h>\n+int\n+main ()\n+{\n+\n+    getpwuid_r(0, NULL, NULL, 0, NULL);\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  libgfor_cv_posix_getpwuid_r=\"yes\"\n+else\n+  libgfor_cv_posix_getpwuid_r=\"no\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $libgfor_cv_posix_getpwuid_r\" >&5\n+$as_echo \"$libgfor_cv_posix_getpwuid_r\" >&6; }\n+fi\n+if test \"$libgfor_cv_posix_getpwuid_r\" = \"yes\"; then\n+\n+$as_echo \"#define HAVE_POSIX_GETPWUID_R 1\" >>confdefs.h\n+\n+fi\n+\n+\n # Check out attribute support.\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the target supports hidden visibility\" >&5"}, {"sha": "d25a067e127b59657ff04ef7fcabb90412d3f447", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23e6d4a5bed6ce5b14b60816ebd5bda2749c9af6/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23e6d4a5bed6ce5b14b60816ebd5bda2749c9af6/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=23e6d4a5bed6ce5b14b60816ebd5bda2749c9af6", "patch": "@@ -513,6 +513,26 @@ AC_SUBST(FPU_HOST_HEADER)\n IEEE_FLAGS=\"${ieee_flags}\"\n AC_SUBST(IEEE_FLAGS)\n \n+\n+# Check for POSIX getpwuid_r \n+#\n+# There are two versions of getpwuid_r, the POSIX one with 5\n+# arguments, and another one with 4 arguments used by at least HP-UX\n+# 10.2.\n+if test \"$ac_cv_func_getpwuid_r\" = \"yes\"; then\n+   AC_CACHE_CHECK([POSIX version of getpwuid_r with 5 arguments], libgfor_cv_posix_getpwuid_r, [\n+   AC_LINK_IFELSE([AC_LANG_PROGRAM([\n+#include <stdio.h>\n+#include <sys/types.h>\n+#include <pwd.h>], [\n+    getpwuid_r(0, NULL, NULL, 0, NULL);\n+    ])],  [libgfor_cv_posix_getpwuid_r=\"yes\"], [libgfor_cv_posix_getpwuid_r=\"no\"])])\n+fi\n+if test \"$libgfor_cv_posix_getpwuid_r\" = \"yes\"; then\n+    AC_DEFINE([HAVE_POSIX_GETPWUID_R], [1], [Define to 1 if we have POSIX getpwuid_r which takes 5 arguments.])\n+fi\n+\n+\n # Check out attribute support.\n LIBGFOR_CHECK_ATTRIBUTE_VISIBILITY\n LIBGFOR_CHECK_ATTRIBUTE_DLLEXPORT"}, {"sha": "9e5c8de4677463175d82f05197b2effd6684cb99", "filename": "libgfortran/intrinsics/getlog.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23e6d4a5bed6ce5b14b60816ebd5bda2749c9af6/libgfortran%2Fintrinsics%2Fgetlog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23e6d4a5bed6ce5b14b60816ebd5bda2749c9af6/libgfortran%2Fintrinsics%2Fgetlog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fgetlog.c?ref=23e6d4a5bed6ce5b14b60816ebd5bda2749c9af6", "patch": "@@ -75,7 +75,7 @@ PREFIX(getlog) (char * login, gfc_charlen_type login_len)\n \n   memset (login, ' ', login_len); /* Blank the string.  */\n \n-#if defined(HAVE_GETPWUID_R) && defined(HAVE_GETEUID)\n+#if defined(HAVE_POSIX_GETPWUID_R) && defined(HAVE_GETEUID)\n   struct passwd pwd;\n   struct passwd *result;\n   char *buf;\n@@ -113,7 +113,7 @@ PREFIX(getlog) (char * login, gfc_charlen_type login_len)\n   memcpy (login, p, p_len);\n \n  cleanup:\n-#ifdef HAVE_GETPWUID_R\n+#if defined (HAVE_POSIX_GETPWUID_R) && defined(HAVE_GETEUID)\n   free (buf);\n #else\n   ;"}]}