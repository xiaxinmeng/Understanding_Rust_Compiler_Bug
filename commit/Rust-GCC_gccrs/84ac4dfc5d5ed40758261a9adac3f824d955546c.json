{"sha": "84ac4dfc5d5ed40758261a9adac3f824d955546c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRhYzRkZmM1ZDVlZDQwNzU4MjYxYTlhZGFjM2Y4MjRkOTU1NTQ2Yw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-08-23T19:33:08Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-08-23T19:33:08Z"}, "message": "cp-tree.h (print_search_statistics, [...]): Don't declare.\n\n\t* cp-tree.h (print_search_statistics,\n\treinit_search_statistics): Don't declare.\n\t* search.c (n_fields_searched, n_calls_lookup_field,\n\tn_calls_lookup_field_1, n_calls_lookup_fnfields,\n\tn_calls_lookup_fnfields_1, n_calls_get_base_type,\n\tn_outer_fields_searched, n_contexts_saved): Delete.\n\t(lookup_field_1, lookup_member,\n\tlookup_fnfields_slot_nolazy): Remove stat gathering.\n\t(print_search_statistics, reinit_search_statistics): Delete.\n\t* tree.c (cxx_print_statistics): Don't print search stats.\n\nFrom-SVN: r251315", "tree": {"sha": "4537662d80c1d9e92be43577066fe955f226fae1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4537662d80c1d9e92be43577066fe955f226fae1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84ac4dfc5d5ed40758261a9adac3f824d955546c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84ac4dfc5d5ed40758261a9adac3f824d955546c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84ac4dfc5d5ed40758261a9adac3f824d955546c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84ac4dfc5d5ed40758261a9adac3f824d955546c/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "397ecd0556e5a480b90d9ffdf57bad9a18e57431", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/397ecd0556e5a480b90d9ffdf57bad9a18e57431", "html_url": "https://github.com/Rust-GCC/gccrs/commit/397ecd0556e5a480b90d9ffdf57bad9a18e57431"}], "stats": {"total": 72, "additions": 13, "deletions": 59}, "files": [{"sha": "7b82a61b13cf93047b1b86a0fcfde4d4947887ab", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84ac4dfc5d5ed40758261a9adac3f824d955546c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84ac4dfc5d5ed40758261a9adac3f824d955546c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=84ac4dfc5d5ed40758261a9adac3f824d955546c", "patch": "@@ -1,3 +1,16 @@\n+2017-08-23  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* cp-tree.h (print_search_statistics,\n+\treinit_search_statistics): Don't declare.\n+\t* search.c (n_fields_searched, n_calls_lookup_field,\n+\tn_calls_lookup_field_1, n_calls_lookup_fnfields,\n+\tn_calls_lookup_fnfields_1, n_calls_get_base_type,\n+\tn_outer_fields_searched, n_contexts_saved): Delete.\n+\t(lookup_field_1, lookup_member,\n+\tlookup_fnfields_slot_nolazy): Remove stat gathering.\n+\t(print_search_statistics, reinit_search_statistics): Delete.\n+\t* tree.c (cxx_print_statistics): Don't print search stats.\n+\n 2017-08-21  Nathan Sidwell  <nathan@acm.org>\n \n \t* search.c (lookup_field_r): Remove obsolete code for type-named"}, {"sha": "fb9dadef34b6c90781bccc25d0cb54dc964bafd1", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84ac4dfc5d5ed40758261a9adac3f824d955546c/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84ac4dfc5d5ed40758261a9adac3f824d955546c/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=84ac4dfc5d5ed40758261a9adac3f824d955546c", "patch": "@@ -6577,8 +6577,6 @@ extern int look_for_overrides\t\t\t(tree, tree);\n extern void get_pure_virtuals\t\t\t(tree);\n extern void maybe_suppress_debug_info\t\t(tree);\n extern void note_debug_info_needed\t\t(tree);\n-extern void print_search_statistics\t\t(void);\n-extern void reinit_search_statistics\t\t(void);\n extern tree current_scope\t\t\t(void);\n extern int at_function_scope_p\t\t\t(void);\n extern bool at_class_scope_p\t\t\t(void);"}, {"sha": "bb2219fb0408f4ec05620b7319cb611d6dd8472c", "filename": "gcc/cp/search.c", "status": "modified", "additions": 0, "deletions": 56, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84ac4dfc5d5ed40758261a9adac3f824d955546c/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84ac4dfc5d5ed40758261a9adac3f824d955546c/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=84ac4dfc5d5ed40758261a9adac3f824d955546c", "patch": "@@ -51,15 +51,6 @@ static tree dfs_access_in_type (tree, void *);\n static access_kind access_in_type (tree, tree);\n static tree dfs_get_pure_virtuals (tree, void *);\n \n-\f\n-/* Variables for gathering statistics.  */\n-static int n_fields_searched;\n-static int n_calls_lookup_field, n_calls_lookup_field_1;\n-static int n_calls_lookup_fnfields, n_calls_lookup_fnfields_1;\n-static int n_calls_get_base_type;\n-static int n_outer_fields_searched;\n-static int n_contexts_saved;\n-\n \f\n /* Data for lookup_base and its workers.  */\n \n@@ -383,9 +374,6 @@ lookup_field_1 (tree type, tree name, bool want_type)\n \t{\n \t  i = (lo + hi) / 2;\n \n-\t  if (GATHER_STATISTICS)\n-\t    n_fields_searched++;\n-\n \t  if (DECL_NAME (fields[i]) > name)\n \t    hi = i;\n \t  else if (DECL_NAME (fields[i]) < name)\n@@ -428,9 +416,6 @@ lookup_field_1 (tree type, tree name, bool want_type)\n \n   field = TYPE_FIELDS (type);\n \n-  if (GATHER_STATISTICS)\n-    n_calls_lookup_field_1++;\n-\n   for (field = TYPE_FIELDS (type); field; field = DECL_CHAIN (field))\n     {\n       tree decl = field;\n@@ -439,9 +424,6 @@ lookup_field_1 (tree type, tree name, bool want_type)\n \t/* Functions are kep separately, at the moment.  */\n \tcontinue;\n \n-      if (GATHER_STATISTICS)\n-\tn_fields_searched++;\n-\n       gcc_assert (DECL_P (field));\n       if (DECL_NAME (field) == NULL_TREE\n \t  && ANON_AGGR_TYPE_P (TREE_TYPE (field)))\n@@ -1262,9 +1244,6 @@ lookup_member (tree xbasetype, tree name, int protect, bool want_type,\n   if (!basetype_path)\n     return NULL_TREE;\n \n-  if (GATHER_STATISTICS)\n-    n_calls_lookup_field++;\n-\n   memset (&lfi, 0, sizeof (lfi));\n   lfi.type = type;\n   lfi.name = name;\n@@ -1523,9 +1502,6 @@ lookup_fnfields_slot_nolazy (tree type, tree name)\n   if (!method_vec)\n     return NULL_TREE;\n \n-  if (GATHER_STATISTICS)\n-    n_calls_lookup_fnfields_1++;\n-\n   if (IDENTIFIER_CONV_OP_P (name))\n     return lookup_conversion_operator (type, TREE_TYPE (name));\n \n@@ -1550,9 +1526,6 @@ lookup_fnfields_slot_nolazy (tree type, tree name)\n \t{\n \t  i = (lo + hi) / 2;\n \n-\t  if (GATHER_STATISTICS)\n-\t    n_outer_fields_searched++;\n-\n \t  fns = (*method_vec)[i];\n \t  tree fn_name = OVL_NAME (fns);\n \t  if (fn_name > name)\n@@ -1566,8 +1539,6 @@ lookup_fnfields_slot_nolazy (tree type, tree name)\n   else\n     for (; vec_safe_iterate (method_vec, i, &fns); ++i)\n       {\n-\tif (GATHER_STATISTICS)\n-\t  n_outer_fields_searched++;\n \tif (OVL_NAME (fns) == name)\n \t  return fns;\n       }\n@@ -2501,33 +2472,6 @@ note_debug_info_needed (tree type)\n   dfs_walk_all (TYPE_BINFO (type), dfs_debug_mark, NULL, 0);\n }\n \f\n-void\n-print_search_statistics (void)\n-{\n-  if (! GATHER_STATISTICS)\n-    {\n-      fprintf (stderr, \"no search statistics\\n\");\n-      return;\n-    }\n-\n-  fprintf (stderr, \"%d fields searched in %d[%d] calls to lookup_field[_1]\\n\",\n-\t   n_fields_searched, n_calls_lookup_field, n_calls_lookup_field_1);\n-  fprintf (stderr, \"%d fnfields searched in %d calls to lookup_fnfields\\n\",\n-\t   n_outer_fields_searched, n_calls_lookup_fnfields);\n-  fprintf (stderr, \"%d calls to get_base_type\\n\", n_calls_get_base_type);\n-}\n-\n-void\n-reinit_search_statistics (void)\n-{\n-  n_fields_searched = 0;\n-  n_calls_lookup_field = 0, n_calls_lookup_field_1 = 0;\n-  n_calls_lookup_fnfields = 0, n_calls_lookup_fnfields_1 = 0;\n-  n_calls_get_base_type = 0;\n-  n_outer_fields_searched = 0;\n-  n_contexts_saved = 0;\n-}\n-\n /* Helper for lookup_conversions_r.  TO_TYPE is the type converted to\n    by a conversion op in base BINFO.  VIRTUAL_DEPTH is nonzero if\n    BINFO is morally virtual, and VIRTUALNESS is nonzero if virtual"}, {"sha": "dbac7f3c550161e8b246c3d6c6dda7efdb34c67f", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84ac4dfc5d5ed40758261a9adac3f824d955546c/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84ac4dfc5d5ed40758261a9adac3f824d955546c/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=84ac4dfc5d5ed40758261a9adac3f824d955546c", "patch": "@@ -2818,7 +2818,6 @@ extern int depth_reached;\n void\n cxx_print_statistics (void)\n {\n-  print_search_statistics ();\n   print_class_statistics ();\n   print_template_statistics ();\n   if (GATHER_STATISTICS)"}]}