{"sha": "070856cc13576073d3cc33ba60c2453a6be35351", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDcwODU2Y2MxMzU3NjA3M2QzY2MzM2JhNjBjMjQ1M2E2YmUzNTM1MQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2015-12-22T22:27:45Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2015-12-22T22:27:45Z"}, "message": "PR c/68473: sanitize source range-printing within certain macro expansions\n\ngcc/ChangeLog:\n\tPR c/68473\n\t* diagnostic-show-locus.c (layout::layout): Make loc_range const.\n\tSanitize the layout_range against ranges that finish before they\n\tstart.\n\ngcc/testsuite/ChangeLog:\n\tPR c/68473\n\t* gcc.dg/plugin/diagnostic-test-expressions-1.c (fminl): New decl.\n\t(TEST_EQ): New macro.\n\t(test_macro): New function.\n\t* gcc.target/i386/pr68473-1.c: New test case.\n\nFrom-SVN: r231919", "tree": {"sha": "9fd9e89b95791c5e7485bf3333fe0566fa41274c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fd9e89b95791c5e7485bf3333fe0566fa41274c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/070856cc13576073d3cc33ba60c2453a6be35351", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/070856cc13576073d3cc33ba60c2453a6be35351", "html_url": "https://github.com/Rust-GCC/gccrs/commit/070856cc13576073d3cc33ba60c2453a6be35351", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/070856cc13576073d3cc33ba60c2453a6be35351/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "329590d70441f5300eafa7340845a65359b1c46b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/329590d70441f5300eafa7340845a65359b1c46b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/329590d70441f5300eafa7340845a65359b1c46b"}], "stats": {"total": 90, "additions": 84, "deletions": 6}, "files": [{"sha": "032e2da59951a2eb4a25118c457f1d7da4a01311", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/070856cc13576073d3cc33ba60c2453a6be35351/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/070856cc13576073d3cc33ba60c2453a6be35351/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=070856cc13576073d3cc33ba60c2453a6be35351", "patch": "@@ -1,3 +1,10 @@\n+2015-12-22  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c/68473\n+\t* diagnostic-show-locus.c (layout::layout): Make loc_range const.\n+\tSanitize the layout_range against ranges that finish before they\n+\tstart.\n+\n 2015-12-22  Jeff Law  <law@redhat.com>\n \n \t* gimple-ssa-split-paths.c (split_paths): Avoid unnecessary block"}, {"sha": "968b3cbae01a9e177cfec47f5feb1649f423c086", "filename": "gcc/diagnostic-show-locus.c", "status": "modified", "additions": 28, "deletions": 6, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/070856cc13576073d3cc33ba60c2453a6be35351/gcc%2Fdiagnostic-show-locus.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/070856cc13576073d3cc33ba60c2453a6be35351/gcc%2Fdiagnostic-show-locus.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic-show-locus.c?ref=070856cc13576073d3cc33ba60c2453a6be35351", "patch": "@@ -444,7 +444,7 @@ layout::layout (diagnostic_context * context,\n     {\n       /* This diagnostic printer can only cope with \"sufficiently sane\" ranges.\n \t Ignore any ranges that are awkward to handle.  */\n-      location_range *loc_range = richloc->get_range (idx);\n+      const location_range *loc_range = richloc->get_range (idx);\n \n       /* If any part of the range isn't in the same file as the primary\n \t location of this diagnostic, ignore the range.  */\n@@ -456,16 +456,38 @@ layout::layout (diagnostic_context * context,\n \tif (loc_range->m_caret.file != m_exploc.file)\n \t  continue;\n \n+      /* Everything is now known to be in the correct source file,\n+\t but it may require further sanitization.  */\n+      layout_range ri (loc_range);\n+\n+      /* If we have a range that finishes before it starts (perhaps\n+\t from something built via macro expansion), printing the\n+\t range is likely to be nonsensical.  Also, attempting to do so\n+\t breaks assumptions within the printing code  (PR c/68473).  */\n+      if (loc_range->m_start.line > loc_range->m_finish.line)\n+\t{\n+\t  /* Is this the primary location?  */\n+\t  if (m_layout_ranges.length () == 0)\n+\t    {\n+\t      /* We want to print the caret for the primary location, but\n+\t\t we must sanitize away m_start and m_finish.  */\n+\t      ri.m_start = ri.m_caret;\n+\t      ri.m_finish = ri.m_caret;\n+\t    }\n+\t  else\n+\t    /* This is a non-primary range; ignore it.  */\n+\t    continue;\n+\t}\n+\n       /* Passed all the tests; add the range to m_layout_ranges so that\n \t it will be printed.  */\n-      layout_range ri (loc_range);\n       m_layout_ranges.safe_push (ri);\n \n       /* Update m_first_line/m_last_line if necessary.  */\n-      if (loc_range->m_start.line < m_first_line)\n-\tm_first_line = loc_range->m_start.line;\n-      if (loc_range->m_finish.line > m_last_line)\n-\tm_last_line = loc_range->m_finish.line;\n+      if (ri.m_start.m_line < m_first_line)\n+\tm_first_line = ri.m_start.m_line;\n+      if (ri.m_finish.m_line > m_last_line)\n+\tm_last_line = ri.m_finish.m_line;\n     }\n \n   /* Adjust m_x_offset."}, {"sha": "1ee6af033e6d449512c76652c8e5076cd3cc7570", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/070856cc13576073d3cc33ba60c2453a6be35351/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/070856cc13576073d3cc33ba60c2453a6be35351/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=070856cc13576073d3cc33ba60c2453a6be35351", "patch": "@@ -1,3 +1,11 @@\n+2015-12-22  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c/68473\n+\t* gcc.dg/plugin/diagnostic-test-expressions-1.c (fminl): New decl.\n+\t(TEST_EQ): New macro.\n+\t(test_macro): New function.\n+\t* gcc.target/i386/pr68473-1.c: New test case.\n+\n 2015-12-22  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/67376"}, {"sha": "97426f6e96b5924a65247d7922127de698ee4bca", "filename": "gcc/testsuite/gcc.dg/plugin/diagnostic-test-expressions-1.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/070856cc13576073d3cc33ba60c2453a6be35351/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-expressions-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/070856cc13576073d3cc33ba60c2453a6be35351/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-expressions-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-expressions-1.c?ref=070856cc13576073d3cc33ba60c2453a6be35351", "patch": "@@ -618,3 +618,20 @@ void test_quadratic (double a, double b, double c)\n    { dg-end-multiline-output \"\" } */\n \n }\n+\n+/* Reproducer for PR c/68473.  */\n+\n+extern long double fminl (long double __x, long double __y);\n+#define TEST_EQ(FUNC) FUNC##l(xl,xl)\n+void test_macro (long double xl)\n+{\n+  __emit_expression_range (0, TEST_EQ (fmin) ); /* { dg-warning \"range\" } */\n+/* { dg-begin-multiline-output \"\" }\n+   __emit_expression_range (0, TEST_EQ (fmin) );\n+                                        ^\n+   { dg-end-multiline-output \"\" } */\n+/* { dg-begin-multiline-output \"\" }\n+ #define TEST_EQ(FUNC) FUNC##l(xl,xl)\n+                       ^~~~\n+   { dg-end-multiline-output \"\" } */\n+}"}, {"sha": "ffffaa7239f442aacda45999118bcbe73e7d477c", "filename": "gcc/testsuite/gcc.target/i386/pr68473-1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/070856cc13576073d3cc33ba60c2453a6be35351/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68473-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/070856cc13576073d3cc33ba60c2453a6be35351/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68473-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68473-1.c?ref=070856cc13576073d3cc33ba60c2453a6be35351", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-options \"-fdiagnostics-show-caret -mno-fp-ret-in-387\" } */\n+\n+extern long double fminl (long double __x, long double __y);\n+\n+#define TEST_EQ(FUNC) do { \\\n+  if ((long)FUNC##l(xl,xl) != (long)xl) \\\n+    return; \\\n+  } while (0)\n+\n+void\n+foo (long double xl)\n+{\n+  TEST_EQ (fmin); /* { dg-error \"x87 register return with x87 disabled\" } */\n+}\n+\n+/* { dg-begin-multiline-output \"\" }\n+   TEST_EQ (fmin);\n+            ^\n+   { dg-end-multiline-output \"\" } */\n+\n+/* { dg-begin-multiline-output \"\" }\n+   if ((long)FUNC##l(xl,xl) != (long)xl) \\\n+             ^~~~\n+   { dg-end-multiline-output \"\" } */"}]}