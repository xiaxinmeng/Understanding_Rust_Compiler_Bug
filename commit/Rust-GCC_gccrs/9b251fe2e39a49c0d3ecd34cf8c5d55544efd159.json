{"sha": "9b251fe2e39a49c0d3ecd34cf8c5d55544efd159", "node_id": "C_kwDOANBUbNoAKDliMjUxZmUyZTM5YTQ5YzBkM2VjZDM0Y2Y4YzVkNTU1NDRlZmQxNTk", "commit": {"author": {"name": "Takayuki 'January June' Suwa", "email": "jjsuwa_sys3175@yahoo.co.jp", "date": "2022-05-13T13:27:36Z"}, "committer": {"name": "Max Filippov", "email": "jcmvbkbc@gmail.com", "date": "2022-05-26T16:40:28Z"}, "message": "xtensa: Make use of IN_RANGE macro where appropriate\n\nNo functional changes.\n\ngcc/ChangeLog:\n\n\t* config/xtensa/constraints.md (M, O): Use the macro.\n\t* config/xtensa/predicates.md (addsubx_operand, extui_fldsz_operand,\n\tsext_fldsz_operand): Ditto.\n\t* config/xtensa/xtensa.cc (xtensa_simm8, xtensa_simm8x256,\n\txtensa_simm12b, xtensa_uimm8, xtensa_uimm8x2, xtensa_uimm8x4,\n\txtensa_mask_immediate, smalloffset_mem_p, printx, xtensa_call_save_reg,\n\txtensa_expand_prologue): Ditto.\n\t* config/xtensa/xtensa.h (FUNCTION_ARG_REGNO_P): Ditto.", "tree": {"sha": "91b9481d56feee73b03ff16be059c04d6df27275", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91b9481d56feee73b03ff16be059c04d6df27275"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b251fe2e39a49c0d3ecd34cf8c5d55544efd159", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b251fe2e39a49c0d3ecd34cf8c5d55544efd159", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b251fe2e39a49c0d3ecd34cf8c5d55544efd159", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b251fe2e39a49c0d3ecd34cf8c5d55544efd159/comments", "author": {"login": "jjsuwa-sys3175", "id": 73290592, "node_id": "MDQ6VXNlcjczMjkwNTky", "avatar_url": "https://avatars.githubusercontent.com/u/73290592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjsuwa-sys3175", "html_url": "https://github.com/jjsuwa-sys3175", "followers_url": "https://api.github.com/users/jjsuwa-sys3175/followers", "following_url": "https://api.github.com/users/jjsuwa-sys3175/following{/other_user}", "gists_url": "https://api.github.com/users/jjsuwa-sys3175/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjsuwa-sys3175/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjsuwa-sys3175/subscriptions", "organizations_url": "https://api.github.com/users/jjsuwa-sys3175/orgs", "repos_url": "https://api.github.com/users/jjsuwa-sys3175/repos", "events_url": "https://api.github.com/users/jjsuwa-sys3175/events{/privacy}", "received_events_url": "https://api.github.com/users/jjsuwa-sys3175/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jcmvbkbc", "id": 166731, "node_id": "MDQ6VXNlcjE2NjczMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmvbkbc", "html_url": "https://github.com/jcmvbkbc", "followers_url": "https://api.github.com/users/jcmvbkbc/followers", "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}", "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions", "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs", "repos_url": "https://api.github.com/users/jcmvbkbc/repos", "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b753405a5f0d45eea97f4cc7df2c2089401b08bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b753405a5f0d45eea97f4cc7df2c2089401b08bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b753405a5f0d45eea97f4cc7df2c2089401b08bf"}], "stats": {"total": 31, "additions": 15, "deletions": 16}, "files": [{"sha": "e7ac8dbfebf8a82b875fd7d497a8d6619a583832", "filename": "gcc/config/xtensa/constraints.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b251fe2e39a49c0d3ecd34cf8c5d55544efd159/gcc%2Fconfig%2Fxtensa%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b251fe2e39a49c0d3ecd34cf8c5d55544efd159/gcc%2Fconfig%2Fxtensa%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fconstraints.md?ref=9b251fe2e39a49c0d3ecd34cf8c5d55544efd159", "patch": "@@ -92,7 +92,7 @@\n  \"An integer constant in the range @minus{}32-95 for use with MOVI.N\n   instructions.\"\n  (and (match_code \"const_int\")\n-      (match_test \"ival >= -32 && ival <= 95\")))\n+      (match_test \"IN_RANGE (ival, -32, 95)\")))\n \n (define_constraint \"N\"\n  \"An unsigned 8-bit integer constant shifted left by 8 bits for use\n@@ -103,7 +103,7 @@\n (define_constraint \"O\"\n  \"An integer constant that can be used in ADDI.N instructions.\"\n  (and (match_code \"const_int\")\n-      (match_test \"ival == -1 || (ival >= 1 && ival <= 15)\")))\n+      (match_test \"ival == -1 || IN_RANGE (ival, 1, 15)\")))\n \n (define_constraint \"P\"\n  \"An integer constant that can be used as a mask value in an EXTUI"}, {"sha": "a912e6d8bb2cc06d0c1348461888a41128e00380", "filename": "gcc/config/xtensa/predicates.md", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b251fe2e39a49c0d3ecd34cf8c5d55544efd159/gcc%2Fconfig%2Fxtensa%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b251fe2e39a49c0d3ecd34cf8c5d55544efd159/gcc%2Fconfig%2Fxtensa%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fpredicates.md?ref=9b251fe2e39a49c0d3ecd34cf8c5d55544efd159", "patch": "@@ -25,8 +25,7 @@\n \n (define_predicate \"addsubx_operand\"\n   (and (match_code \"const_int\")\n-       (match_test \"INTVAL (op) >= 1\n-\t\t    && INTVAL (op) <= 3\")))\n+       (match_test \"IN_RANGE (INTVAL (op), 1, 3)\")))\n \n (define_predicate \"arith_operand\"\n   (ior (and (match_code \"const_int\")\n@@ -64,7 +63,7 @@\n \n (define_predicate \"sext_fldsz_operand\"\n   (and (match_code \"const_int\")\n-       (match_test \"INTVAL (op) >= 8 && INTVAL (op) <= 23\")))\n+       (match_test \"IN_RANGE (INTVAL (op), 8, 23)\")))\n \n (define_predicate \"lsbitnum_operand\"\n   (and (match_code \"const_int\")"}, {"sha": "c5518ff954960cedc1c6a658fec1fa2135c382af", "filename": "gcc/config/xtensa/xtensa.cc", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b251fe2e39a49c0d3ecd34cf8c5d55544efd159/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b251fe2e39a49c0d3ecd34cf8c5d55544efd159/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc?ref=9b251fe2e39a49c0d3ecd34cf8c5d55544efd159", "patch": "@@ -351,42 +351,42 @@ struct gcc_target targetm = TARGET_INITIALIZER;\n bool\n xtensa_simm8 (HOST_WIDE_INT v)\n {\n-  return v >= -128 && v <= 127;\n+  return IN_RANGE (v, -128, 127);\n }\n \n \n bool\n xtensa_simm8x256 (HOST_WIDE_INT v)\n {\n-  return (v & 255) == 0 && (v >= -32768 && v <= 32512);\n+  return (v & 255) == 0 && IN_RANGE (v, -32768, 32512);\n }\n \n \n bool\n xtensa_simm12b (HOST_WIDE_INT v)\n {\n-  return v >= -2048 && v <= 2047;\n+  return IN_RANGE (v, -2048, 2047);\n }\n \n \n static bool\n xtensa_uimm8 (HOST_WIDE_INT v)\n {\n-  return v >= 0 && v <= 255;\n+  return IN_RANGE (v, 0, 255);\n }\n \n \n static bool\n xtensa_uimm8x2 (HOST_WIDE_INT v)\n {\n-  return (v & 1) == 0 && (v >= 0 && v <= 510);\n+  return (v & 1) == 0 && IN_RANGE (v, 0, 510);\n }\n \n \n static bool\n xtensa_uimm8x4 (HOST_WIDE_INT v)\n {\n-  return (v & 3) == 0 && (v >= 0 && v <= 1020);\n+  return (v & 3) == 0 && IN_RANGE (v, 0, 1020);\n }\n \n \n@@ -537,7 +537,7 @@ smalloffset_mem_p (rtx op)\n \t    return FALSE;\n \n \t  val = INTVAL (offset);\n-\t  return (val & 3) == 0 && (val >= 0 && val <= 60);\n+\t  return (val & 3) == 0 && IN_RANGE (val, 0, 60);\n \t}\n     }\n   return FALSE;\n@@ -2367,7 +2367,7 @@ static void\n printx (FILE *file, signed int val)\n {\n   /* Print a hexadecimal value in a nice way.  */\n-  if ((val > -0xa) && (val < 0xa))\n+  if (IN_RANGE (val, -9, 9))\n     fprintf (file, \"%d\", val);\n   else if (val < 0)\n     fprintf (file, \"-0x%x\", -val);\n@@ -2697,7 +2697,7 @@ xtensa_call_save_reg(int regno)\n     return crtl->profile || !crtl->is_leaf || crtl->calls_eh_return ||\n       df_regs_ever_live_p (regno);\n \n-  if (crtl->calls_eh_return && regno >= 2 && regno < 4)\n+  if (crtl->calls_eh_return && IN_RANGE (regno, 2, 3))\n     return true;\n \n   return !call_used_or_fixed_reg_p (regno) && df_regs_ever_live_p (regno);\n@@ -2817,7 +2817,7 @@ xtensa_expand_prologue (void)\n       int callee_save_size = cfun->machine->callee_save_size;\n \n       /* -128 is a limit of single addi instruction. */\n-      if (total_size > 0 && total_size <= 128)\n+      if (IN_RANGE (total_size, 1, 128))\n \t{\n \t  insn = emit_insn (gen_addsi3 (stack_pointer_rtx, stack_pointer_rtx,\n \t\t\t\t\tGEN_INT (-total_size)));"}, {"sha": "d027a777227963f8d1808a3817b8a21dfb1f8b0f", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b251fe2e39a49c0d3ecd34cf8c5d55544efd159/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b251fe2e39a49c0d3ecd34cf8c5d55544efd159/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=9b251fe2e39a49c0d3ecd34cf8c5d55544efd159", "patch": "@@ -504,7 +504,7 @@ enum reg_class\n    used for this purpose since all function arguments are pushed on\n    the stack.  */\n #define FUNCTION_ARG_REGNO_P(N)\t\t\t\t\t\t\\\n-  ((N) >= GP_OUTGOING_ARG_FIRST && (N) <= GP_OUTGOING_ARG_LAST)\n+  IN_RANGE ((N), GP_OUTGOING_ARG_FIRST, GP_OUTGOING_ARG_LAST)\n \n /* Record the number of argument words seen so far, along with a flag to\n    indicate whether these are incoming arguments.  (FUNCTION_INCOMING_ARG"}]}