{"sha": "37060e78fa4490c38254d37d7e7af8bcade0409d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzcwNjBlNzhmYTQ0OTBjMzgyNTRkMzdkN2U3YWY4YmNhZGUwNDA5ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-01-29T23:15:24Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-01-29T23:15:24Z"}, "message": "cselib.c (cselib_record_sets): Use IF_THEN_ELSE result in cselib_lookup.\n\n\t* cselib.c (cselib_record_sets): Use IF_THEN_ELSE result\n\tin cselib_lookup.\n\n\t* gcc.c-torture/execute/20020129-1.c: New test.\n\nFrom-SVN: r49333", "tree": {"sha": "a839186093b45f6f58e3a5073b6a2109df7c62e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a839186093b45f6f58e3a5073b6a2109df7c62e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37060e78fa4490c38254d37d7e7af8bcade0409d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37060e78fa4490c38254d37d7e7af8bcade0409d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37060e78fa4490c38254d37d7e7af8bcade0409d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37060e78fa4490c38254d37d7e7af8bcade0409d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "003b9f787228c9757501eebc4a51142b89d021d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/003b9f787228c9757501eebc4a51142b89d021d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/003b9f787228c9757501eebc4a51142b89d021d6"}], "stats": {"total": 62, "additions": 61, "deletions": 1}, "files": [{"sha": "629d1d84f4138f33fec53515ec93cede79d2c947", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37060e78fa4490c38254d37d7e7af8bcade0409d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37060e78fa4490c38254d37d7e7af8bcade0409d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37060e78fa4490c38254d37d7e7af8bcade0409d", "patch": "@@ -1,3 +1,8 @@\n+2002-01-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* cselib.c (cselib_record_sets): Use IF_THEN_ELSE result\n+\tin cselib_lookup.\n+\n 2002-01-29  Aldy Hernandez  <aldyh@redhat.com>\n \n         * rs6000.md (\"*call_value_local32\"): Remove constraints."}, {"sha": "64eb8a5752adb46e51576a15340ab21663fec090", "filename": "gcc/cselib.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37060e78fa4490c38254d37d7e7af8bcade0409d/gcc%2Fcselib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37060e78fa4490c38254d37d7e7af8bcade0409d/gcc%2Fcselib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.c?ref=37060e78fa4490c38254d37d7e7af8bcade0409d", "patch": "@@ -1238,7 +1238,7 @@ cselib_record_sets (insn)\n \t  rtx src = sets[i].src;\n \t  if (cond)\n \t    src = gen_rtx_IF_THEN_ELSE (GET_MODE (src), cond, src, dest);\n-\t  sets[i].src_elt = cselib_lookup (sets[i].src, GET_MODE (dest), 1);\n+\t  sets[i].src_elt = cselib_lookup (src, GET_MODE (dest), 1);\n \t  if (GET_CODE (dest) == MEM)\n \t    sets[i].dest_addr_elt = cselib_lookup (XEXP (dest, 0), Pmode, 1);\n \t  else"}, {"sha": "b3217f11e3211a9c881db1e8c3c465c63b2c7ec4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37060e78fa4490c38254d37d7e7af8bcade0409d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37060e78fa4490c38254d37d7e7af8bcade0409d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=37060e78fa4490c38254d37d7e7af8bcade0409d", "patch": "@@ -1,3 +1,7 @@\n+2002-01-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.c-torture/execute/20020129-1.c: New test.\n+\n 2002-01-29  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* gcc.c-torture/compile/20000224-1.c: Update."}, {"sha": "6430c4c1c2f810d70d8d05d7bd6f8654cea6ec5a", "filename": "gcc/testsuite/gcc.c-torture/execute/20020129-1.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37060e78fa4490c38254d37d7e7af8bcade0409d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020129-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37060e78fa4490c38254d37d7e7af8bcade0409d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020129-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20020129-1.c?ref=37060e78fa4490c38254d37d7e7af8bcade0409d", "patch": "@@ -0,0 +1,51 @@\n+/* This testcase failed at -O2 on IA-64, because scheduling did not take\n+   into account conditional execution when using cselib for alias\n+   analysis.  */\n+\n+struct D { int d1; struct D *d2; };\n+struct C { struct D c1; long c2, c3, c4, c5, c6; };\n+struct A { struct A *a1; struct C *a2; };\n+struct B { struct C b1; struct A *b2; };\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+void\n+foo (struct B *x, struct B *y)\n+{\n+  if (x->b2 == 0)\n+    {\n+      struct A *a;\n+\n+      x->b2 = a = y->b2;\n+      y->b2 = 0;\n+      for (; a; a = a->a1)\n+\ta->a2 = &x->b1;\n+    }\n+\n+  if (y->b2 != 0)\n+    abort ();\n+\n+  if (x->b1.c3 == -1)\n+    {\n+      x->b1.c3 = y->b1.c3;\n+      x->b1.c4 = y->b1.c4;\n+      y->b1.c3 = -1;\n+      y->b1.c4 = 0;\n+    }\n+\n+  if (y->b1.c3 != -1)\n+    abort ();\n+}\n+\n+struct B x, y;\n+\n+int main ()\n+{\n+  y.b1.c1.d1 = 6;\n+  y.b1.c3 = 145;\n+  y.b1.c4 = 2448;\n+  x.b1.c3 = -1;\n+  foo (&x, &y);\n+  exit (0);\n+}"}]}