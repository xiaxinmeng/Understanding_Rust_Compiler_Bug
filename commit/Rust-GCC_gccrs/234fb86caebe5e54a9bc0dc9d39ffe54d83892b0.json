{"sha": "234fb86caebe5e54a9bc0dc9d39ffe54d83892b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM0ZmI4NmNhZWJlNWU1NGE5YmMwZGM5ZDM5ZmZlNTRkODM4OTJiMA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2001-01-03T20:34:44Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-01-03T20:34:44Z"}, "message": "ScrollPane.java (setBlockIncrement): Throw error.\n\n\t* java/awt/ScrollPane.java (setBlockIncrement): Throw error.\n\t(getViewportSize): Insets include scrollbar size.\n\t(doLayout): Finished.\n\t(getScrollPosition): Wrote.\n\t* java/awt/peer/ScrollPanePeer.java (setBlockIncrement): Removed.\n\nFrom-SVN: r38670", "tree": {"sha": "2223af0e5c6d30c4d38f4c9c3990b194320cbe3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2223af0e5c6d30c4d38f4c9c3990b194320cbe3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/234fb86caebe5e54a9bc0dc9d39ffe54d83892b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/234fb86caebe5e54a9bc0dc9d39ffe54d83892b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/234fb86caebe5e54a9bc0dc9d39ffe54d83892b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/234fb86caebe5e54a9bc0dc9d39ffe54d83892b0/comments", "author": null, "committer": null, "parents": [{"sha": "6bfa3dac7441079857a8b171803c7520adeaf6d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bfa3dac7441079857a8b171803c7520adeaf6d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bfa3dac7441079857a8b171803c7520adeaf6d5"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "10976fb28b82944570d837a90f6b6ed851ddf5bf", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/234fb86caebe5e54a9bc0dc9d39ffe54d83892b0/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/234fb86caebe5e54a9bc0dc9d39ffe54d83892b0/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=234fb86caebe5e54a9bc0dc9d39ffe54d83892b0", "patch": "@@ -1,3 +1,11 @@\n+2001-01-03  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/awt/ScrollPane.java (setBlockIncrement): Throw error.\n+\t(getViewportSize): Insets include scrollbar size.\n+\t(doLayout): Finished.\n+\t(getScrollPosition): Wrote.\n+\t* java/awt/peer/ScrollPanePeer.java (setBlockIncrement): Removed.\n+\n 2001-01-02  Tom Tromey  <tromey@redhat.com>\n \n \t* java/awt/ScrollPane.java: Wrote."}, {"sha": "dd657ac19968ea1eb37cd17d0df158e497b5bf7e", "filename": "libjava/java/awt/ScrollPane.java", "status": "modified", "additions": 13, "deletions": 20, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/234fb86caebe5e54a9bc0dc9d39ffe54d83892b0/libjava%2Fjava%2Fawt%2FScrollPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/234fb86caebe5e54a9bc0dc9d39ffe54d83892b0/libjava%2Fjava%2Fawt%2FScrollPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FScrollPane.java?ref=234fb86caebe5e54a9bc0dc9d39ffe54d83892b0", "patch": "@@ -15,9 +15,6 @@\n  * scrollbars as well as a single child which is scrolled by them.\n  * @author Tom Tromey <tromey@redhat.com>\n  * @date December 31, 2000\n- * Status: Unfinished.  The Adjustables are probably wrong (there\n- * isn't a mechanism for scrollbar events to affect them), and also\n- * doLayout() is not finished.\n  */\n public class ScrollPane extends Container\n {\n@@ -90,7 +87,8 @@ public void doLayout ()\n     Dimension c = component[0].getPreferredSize ();\n     component[0].setSize (c.width, c.height);\n     spp.childResized (c.width, c.height);\n-    // FIXME\n+    // Update the scrollbar position to the closest valid value.\n+    setScrollPosition (hscroll.getValue (), vscroll.getValue ());\n   }\n \n   /** Returns an Adjustable representing the horizontal scrollbar.\n@@ -121,8 +119,7 @@ public int getScrollbarDisplayPolicy ()\n   /** Returns the viewport's scroll position.  */\n   public Point getScrollPosition ()\n   {\n-    // FIXME\n-    return null;\n+    return new Point (hscroll.getValue (), vscroll.getValue ());\n   }\n \n   /** Returns an Adjustable representing the vertical scrollbar.\n@@ -138,6 +135,9 @@ public Adjustable getVAdjustable ()\n   /** Returns the size of the viewport.  */\n   public Dimension getViewportSize ()\n   {\n+    // Note: according to the online docs, the Insets are\n+    // automatically updated by the peer to include the scrollbar\n+    // sizes.\n     Insets ins = getInsets ();\n     int myw = width - ins.left - ins.right;\n     int myh = height - ins.top - ins.bottom;\n@@ -148,14 +148,6 @@ public Dimension getViewportSize ()\n     else\n       cs = new Dimension (myw, myh);\n \n-    if (policy == SCROLLBARS_ALWAYS\n-\t|| (policy == SCROLLBARS_AS_NEEDED && myw < cs.width))\n-      myw -= getVScrollbarWidth ();\n-\n-    if (policy == SCROLLBARS_ALWAYS\n-\t|| (policy == SCROLLBARS_AS_NEEDED && myh < cs.height))\n-      myh -= getHScrollbarHeight ();\n-\n     // A little optimization -- reuse the Dimension.\n     cs.setSize (myw, myh);\n     return cs;\n@@ -228,6 +220,12 @@ public void setScrollPosition (Point p)\n     setScrollPosition (p.x, p.y);\n   }\n \n+  // This implements the Adjustable for each scrollbar.  The\n+  // expectation is that the peer will look at these objects directly\n+  // and modify the values in them when the user manipulates the\n+  // scrollbars.  This has to be done from CNI to bypass Java\n+  // protection rules.  The peer should also take care of calling the\n+  // adjustment listeners.\n   class ScrollPaneAdjustable implements Adjustable\n   {\n     AdjustmentListener listeners;\n@@ -295,12 +293,7 @@ public void removeAdjustmentListener (AdjustmentListener l)\n \n     public void setBlockIncrement (int b)\n     {\n-      block = b;\n-      if (peer != null)\n-\t{\n-\t  ScrollPanePeer spp = (ScrollPanePeer) peer;\n-\t  spp.setBlockIncrement (this, b);\n-\t}\n+      throw new AWTError (\"can't use setBlockIncrement on this Adjustable\");\n     }\n \n     public void setMaximum (int max)"}, {"sha": "fe300e423c8b04b9949d4e08cd184a42113b99f2", "filename": "libjava/java/awt/peer/ScrollPanePeer.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/234fb86caebe5e54a9bc0dc9d39ffe54d83892b0/libjava%2Fjava%2Fawt%2Fpeer%2FScrollPanePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/234fb86caebe5e54a9bc0dc9d39ffe54d83892b0/libjava%2Fjava%2Fawt%2Fpeer%2FScrollPanePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2Fpeer%2FScrollPanePeer.java?ref=234fb86caebe5e54a9bc0dc9d39ffe54d83892b0", "patch": "@@ -17,6 +17,5 @@ public interface ScrollPanePeer extends ContainerPeer\n   int getVScrollbarWidth();\n   void setScrollPosition(int x, int y);\n   void setUnitIncrement(Adjustable adj, int increment);\n-  void setBlockIncrement(Adjustable adj, int increment);\n   void setValue(Adjustable adj, int value);\n }"}]}