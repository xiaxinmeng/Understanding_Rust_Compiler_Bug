{"sha": "7fa4db39b6bcd207bd2bffff52023ff6b155bd15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZhNGRiMzliNmJjZDIwN2JkMmJmZmZmNTIwMjNmZjZiMTU1YmQxNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-06-06T17:37:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-06-06T17:37:06Z"}, "message": "openmp: Call c_omp_adjust_map_clauses even for combined target [PR100902]\n\nWhen looking at in_reduction support for target, I've noticed that\nc_omp_adjust_map_clauses is not called for the combined target case.\n\nThe following patch fixes it.\n\nUnfortunately, there are other issues.\n\nOne is (also mentioned in the PR) that currently the pointer attachment\nstuff seems to be clause ordering dependent (the standard says that clause\nordering on the same construct does not matter), the baz and qux cases\nin the PR are rejected while when swapped it is accepted.\nNote, the order of clauses in GCC really is treated as insignificant\ninitially and only later on the compiler can adjust the ordering (e.g. when\nwe sort map clauses based on what they refer to etc.) and in particular,\nclauses from parsing is reverse of the order in user code, while\nc_omp_split_clauses performed for combined/composite constructs typically\nreverses that ordering, i.e. makes it follow the user code ordering.\n\nAnd another one is I'm slightly afraid c_omp_adjust_map_clauses might\nmisbehave in templates, though haven't tried to verify it with testcases.\nWhen processing_template_decl, the non-dependent clauses will be handled\nusually the same as when not in a template, but dependent clauses aren't\nprocessed or only limited processing is done there, and rest is deferred\ntill later.  From quick skimming of c_omp_adjust_map_clauses, it seems\nit might not be very happy about non-processed map clauses that might\nstill have the TREE_LIST representation of array sections, or might\nnot have finalized decls or base decls etc.\nSo, for this I wonder if cp_parser_omp_target (and other cp/parser.c\ncallers of c_omp_adjust_map_clauses) shouldn't call it only\nif (!processing_template_decl) - perhaps you could add\ncp_omp_adjust_map_clauses wrapper that would be\nif (!processing_template_decl)\n  c_omp_adjust_map_clauses (...);\n- and call c_omp_adjust_map_clauses from within pt.c after the clauses\nare tsubsted and finish_omp_clauses is called again.\n\n2021-06-06  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c/100902\n\t* c-parser.c (c_parser_omp_target): Call c_omp_adjust_map_clauses\n\teven when target is combined with other constructs.\n\n\t* parser.c (cp_parser_omp_target): Call c_omp_adjust_map_clauses\n\teven when target is combined with other constructs.\n\n\t* c-c++-common/gomp/pr100902-1.c: New test.", "tree": {"sha": "53ac96651338ebcd44946ce376f9fcced39dd09c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53ac96651338ebcd44946ce376f9fcced39dd09c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fa4db39b6bcd207bd2bffff52023ff6b155bd15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fa4db39b6bcd207bd2bffff52023ff6b155bd15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fa4db39b6bcd207bd2bffff52023ff6b155bd15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fa4db39b6bcd207bd2bffff52023ff6b155bd15/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fcbbf786aeb7f0d5cf8ab138b61944439dfc046b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcbbf786aeb7f0d5cf8ab138b61944439dfc046b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcbbf786aeb7f0d5cf8ab138b61944439dfc046b"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "add33532a608b22b24711181b9b7582649a97b80", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fa4db39b6bcd207bd2bffff52023ff6b155bd15/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fa4db39b6bcd207bd2bffff52023ff6b155bd15/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=7fa4db39b6bcd207bd2bffff52023ff6b155bd15", "patch": "@@ -20133,6 +20133,7 @@ c_parser_omp_target (c_parser *parser, enum pragma_context context, bool *if_p)\n \t  tree stmt = make_node (OMP_TARGET);\n \t  TREE_TYPE (stmt) = void_type_node;\n \t  OMP_TARGET_CLAUSES (stmt) = cclauses[C_OMP_CLAUSE_SPLIT_TARGET];\n+\t  c_omp_adjust_map_clauses (OMP_TARGET_CLAUSES (stmt), true);\n \t  OMP_TARGET_BODY (stmt) = block;\n \t  OMP_TARGET_COMBINED (stmt) = 1;\n \t  SET_EXPR_LOCATION (stmt, loc);"}, {"sha": "0649bf9a75787fd80c056960632eb845013ab8c0", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fa4db39b6bcd207bd2bffff52023ff6b155bd15/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fa4db39b6bcd207bd2bffff52023ff6b155bd15/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=7fa4db39b6bcd207bd2bffff52023ff6b155bd15", "patch": "@@ -42233,6 +42233,7 @@ cp_parser_omp_target (cp_parser *parser, cp_token *pragma_tok,\n \t  tree stmt = make_node (OMP_TARGET);\n \t  TREE_TYPE (stmt) = void_type_node;\n \t  OMP_TARGET_CLAUSES (stmt) = cclauses[C_OMP_CLAUSE_SPLIT_TARGET];\n+\t  c_omp_adjust_map_clauses (OMP_TARGET_CLAUSES (stmt), true);\n \t  OMP_TARGET_BODY (stmt) = body;\n \t  OMP_TARGET_COMBINED (stmt) = 1;\n \t  SET_EXPR_LOCATION (stmt, pragma_tok->location);"}, {"sha": "babd01aa6f76f554449a31468a9eea8d6bc9d3c7", "filename": "gcc/testsuite/c-c++-common/gomp/pr100902-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fa4db39b6bcd207bd2bffff52023ff6b155bd15/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr100902-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fa4db39b6bcd207bd2bffff52023ff6b155bd15/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr100902-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fpr100902-1.c?ref=7fa4db39b6bcd207bd2bffff52023ff6b155bd15", "patch": "@@ -0,0 +1,17 @@\n+/* PR c/100902 */\n+\n+void\n+foo (int *ptr)\n+{\n+  #pragma omp target map (ptr, ptr[:4])\n+  #pragma omp parallel master\n+  ptr[0] = 1;\n+}\n+\n+void\n+bar (int *ptr)\n+{\n+  #pragma omp target parallel map (ptr[:4], ptr)\n+  #pragma omp master\n+  ptr[0] = 1;\n+}"}]}