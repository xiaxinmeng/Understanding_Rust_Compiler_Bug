{"sha": "7a003d8e2e5f20fab390c2e2988e1c630cbb3ba9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2EwMDNkOGUyZTVmMjBmYWIzOTBjMmUyOTg4ZTFjNjMwY2JiM2JhOQ==", "commit": {"author": {"name": "Canqun Yang", "email": "canqun@nudt.edu.cn", "date": "2004-10-30T14:18:34Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-10-30T14:18:34Z"}, "message": "check.c (gfc_check_rand): Allow missing optional argument.\n\n2004-10-30  Canqun Yang  <canqun@nudt.edu.cn>\n\n\t* check.c (gfc_check_rand): Allow missing optional argument.\n\t(gfc_check_irand): Ditto.\n\t* intrinsic.c (add_functions): Set arg optional flag for {i,}rand.\nlibgfortran/\n\t* intrinsics/rand.c (irand): Handle NULL argument.\n\nFrom-SVN: r89886", "tree": {"sha": "7000c863d0f16b0b8e5755c5819227f439868d5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7000c863d0f16b0b8e5755c5819227f439868d5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a003d8e2e5f20fab390c2e2988e1c630cbb3ba9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a003d8e2e5f20fab390c2e2988e1c630cbb3ba9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a003d8e2e5f20fab390c2e2988e1c630cbb3ba9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a003d8e2e5f20fab390c2e2988e1c630cbb3ba9/comments", "author": null, "committer": null, "parents": [{"sha": "cbb1cada36cb9831e9a20629e1f5c555c2a84590", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbb1cada36cb9831e9a20629e1f5c555c2a84590", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbb1cada36cb9831e9a20629e1f5c555c2a84590"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "c950f8c1920c50efa7b191a05fbee9c3c264c92a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a003d8e2e5f20fab390c2e2988e1c630cbb3ba9/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a003d8e2e5f20fab390c2e2988e1c630cbb3ba9/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7a003d8e2e5f20fab390c2e2988e1c630cbb3ba9", "patch": "@@ -1,9 +1,15 @@\n+2004-10-30  Canqun Yang  <canqun@nudt.edu.cn>\n+\n+\t* check.c (gfc_check_rand): Allow missing optional argument. \n+\t(gfc_check_irand): Ditto.\n+\t* intrinsic.c (add_functions): Set arg optional flag for {i,}rand.\n+\n 2004-10-28  Scott Robert Ladd  <scott.ladd@coyotegulch.com>\n \n \tPR fortran/13490, PR fortran/17912\n \t* gcc/fortran/gfortran.h: Added pedantic_min_int to gfc_integer_info\n \t* gcc/fortran/gfortran.h: Added ARITH_ASYMMETRIC to arith\n- \t* gcc/fortran/arith.c: Added support for an \"asymmetric integer\"\n+\t* gcc/fortran/arith.c: Added support for an \"asymmetric integer\"\n \twarning when compiling with pedantic.\n \t* gcc/fortran/arith.c: Set minimum integer values to reflect\n \trealities of two's complement signed integers. Added"}, {"sha": "b8ed5e9f5a7b2be48ae5f5fe82030c2f83b70a6d", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a003d8e2e5f20fab390c2e2988e1c630cbb3ba9/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a003d8e2e5f20fab390c2e2988e1c630cbb3ba9/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=7a003d8e2e5f20fab390c2e2988e1c630cbb3ba9", "patch": "@@ -2001,6 +2001,9 @@ gfc_check_system_clock (gfc_expr * count, gfc_expr * count_rate,\n try\n gfc_check_irand (gfc_expr * x)\n {\n+  if (x == NULL)\n+    return SUCCESS;\n+\n   if (scalar_check (x, 0) == FAILURE)\n     return FAILURE;\n \n@@ -2016,6 +2019,9 @@ gfc_check_irand (gfc_expr * x)\n try\n gfc_check_rand (gfc_expr * x)\n {\n+  if (x == NULL)\n+    return SUCCESS;\n+\n   if (scalar_check (x, 0) == FAILURE)\n     return FAILURE;\n "}, {"sha": "bc69f54cb2cb1213531e95c6797749460d3b0a7d", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a003d8e2e5f20fab390c2e2988e1c630cbb3ba9/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a003d8e2e5f20fab390c2e2988e1c630cbb3ba9/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=7a003d8e2e5f20fab390c2e2988e1c630cbb3ba9", "patch": "@@ -1307,7 +1307,7 @@ add_functions (void)\n   /* The following function is for G77 compatibility.  */\n   add_sym_1 (\"irand\", 0, 1, BT_INTEGER, 4,\n              gfc_check_irand, NULL, NULL,\n-             i, BT_INTEGER, 4, 0);\n+             i, BT_INTEGER, 4, 1);\n \n   make_generic (\"irand\", GFC_ISYM_IRAND);\n \n@@ -1602,7 +1602,7 @@ add_functions (void)\n   /* The following function is for G77 compatibility.  */\n   add_sym_1 (\"rand\", 0, 1, BT_REAL, 4,\n              gfc_check_rand, NULL, NULL,\n-             i, BT_INTEGER, 4, 0);\n+             i, BT_INTEGER, 4, 1);\n \n   /* Compatibility with HP FORTRAN 77/iX Reference.  Note, rand() and \n      ran() use slightly different shoddy multiplicative congruential "}, {"sha": "e2057a1f2f5bc6785f6af6948c40185936f46dda", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a003d8e2e5f20fab390c2e2988e1c630cbb3ba9/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a003d8e2e5f20fab390c2e2988e1c630cbb3ba9/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=7a003d8e2e5f20fab390c2e2988e1c630cbb3ba9", "patch": "@@ -1,3 +1,7 @@\n+2004-10-30  Canqun Yang  <canqun@nudt.edu.cn>\n+\n+\t* intrinsics/rand.c (irand): Handle NULL argument.\n+\n 2004-10-07  Paul Brook  <paul@codesourcery.com>\n \n \t* io/transfer.c (finalize_transfer): Free internal streams."}, {"sha": "f4e78d0470e2eeb0d8e16f5ae682652cba7ce8f6", "filename": "libgfortran/intrinsics/rand.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a003d8e2e5f20fab390c2e2988e1c630cbb3ba9/libgfortran%2Fintrinsics%2Frand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a003d8e2e5f20fab390c2e2988e1c630cbb3ba9/libgfortran%2Fintrinsics%2Frand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Frand.c?ref=7a003d8e2e5f20fab390c2e2988e1c630cbb3ba9", "patch": "@@ -51,7 +51,11 @@ GFC_INTEGER_4\n prefix(irand) (GFC_INTEGER_4 *i)\n {\n   \n-  GFC_INTEGER_4 j = *i;\n+  GFC_INTEGER_4 j;\n+  if (i)\n+    j = *i;\n+  else\n+    j = 0;\n \n   switch (j)\n   {"}]}