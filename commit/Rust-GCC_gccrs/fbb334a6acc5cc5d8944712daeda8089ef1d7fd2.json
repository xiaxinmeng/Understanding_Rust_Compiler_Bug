{"sha": "fbb334a6acc5cc5d8944712daeda8089ef1d7fd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJiMzM0YTZhY2M1Y2M1ZDg5NDQ3MTJkYWVkYTgwODllZjFkN2ZkMg==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-08-23T16:27:25Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-09-01T18:34:07Z"}, "message": "libiberty, configure, Darwin: Avoid detecting deprecated sbrk.\n\nDarwin provides an implementation of sbrk, which is detected by\nthe configuration process.  However, it is deprecated which leads\nto build warnings.  The malloc-based implementation is more\nsuitable.  This patch removes sbrk from the functions searched\nfor Darwin.\n\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\nlibiberty/ChangeLog:\n\n\t* configure: Regenerate.\n\t* configure.ac: Do not search for sbrk on Darwin.\n\t* xmalloc.c: Do not declare sbrk unless it has been found\n\tby configure.", "tree": {"sha": "e9fa8e16ccad424124429afa63a3a352e2044d2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9fa8e16ccad424124429afa63a3a352e2044d2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbb334a6acc5cc5d8944712daeda8089ef1d7fd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbb334a6acc5cc5d8944712daeda8089ef1d7fd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbb334a6acc5cc5d8944712daeda8089ef1d7fd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbb334a6acc5cc5d8944712daeda8089ef1d7fd2/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a88280cff3436d0b6ab454514e5a3b97a543e9a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a88280cff3436d0b6ab454514e5a3b97a543e9a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a88280cff3436d0b6ab454514e5a3b97a543e9a5"}], "stats": {"total": 60, "additions": 35, "deletions": 25}, "files": [{"sha": "3c7e588b16b56e23a3cf0d18bf4edb20dd73a01d", "filename": "libiberty/configure", "status": "modified", "additions": 20, "deletions": 23, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbb334a6acc5cc5d8944712daeda8089ef1d7fd2/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbb334a6acc5cc5d8944712daeda8089ef1d7fd2/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=fbb334a6acc5cc5d8944712daeda8089ef1d7fd2", "patch": "@@ -681,7 +681,6 @@ infodir\n docdir\n oldincludedir\n includedir\n-runstatedir\n localstatedir\n sharedstatedir\n sysconfdir\n@@ -761,7 +760,6 @@ datadir='${datarootdir}'\n sysconfdir='${prefix}/etc'\n sharedstatedir='${prefix}/com'\n localstatedir='${prefix}/var'\n-runstatedir='${localstatedir}/run'\n includedir='${prefix}/include'\n oldincludedir='/usr/include'\n docdir='${datarootdir}/doc/${PACKAGE}'\n@@ -1014,15 +1012,6 @@ do\n   | -silent | --silent | --silen | --sile | --sil)\n     silent=yes ;;\n \n-  -runstatedir | --runstatedir | --runstatedi | --runstated \\\n-  | --runstate | --runstat | --runsta | --runst | --runs \\\n-  | --run | --ru | --r)\n-    ac_prev=runstatedir ;;\n-  -runstatedir=* | --runstatedir=* | --runstatedi=* | --runstated=* \\\n-  | --runstate=* | --runstat=* | --runsta=* | --runst=* | --runs=* \\\n-  | --run=* | --ru=* | --r=*)\n-    runstatedir=$ac_optarg ;;\n-\n   -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)\n     ac_prev=sbindir ;;\n   -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \\\n@@ -1160,7 +1149,7 @@ fi\n for ac_var in\texec_prefix prefix bindir sbindir libexecdir datarootdir \\\n \t\tdatadir sysconfdir sharedstatedir localstatedir includedir \\\n \t\toldincludedir docdir infodir htmldir dvidir pdfdir psdir \\\n-\t\tlibdir localedir mandir runstatedir\n+\t\tlibdir localedir mandir\n do\n   eval ac_val=\\$$ac_var\n   # Remove trailing slashes.\n@@ -1313,7 +1302,6 @@ Fine tuning of the installation directories:\n   --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]\n   --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]\n   --localstatedir=DIR     modifiable single-machine data [PREFIX/var]\n-  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]\n   --libdir=DIR            object code libraries [EPREFIX/lib]\n   --includedir=DIR        C header files [PREFIX/include]\n   --oldincludedir=DIR     C header files for non-gcc [/usr/include]\n@@ -4295,7 +4283,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n+#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -4341,7 +4329,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n+#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -4365,7 +4353,7 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n+#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -4410,7 +4398,7 @@ else\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n+#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -4434,7 +4422,7 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n     We can't simply define LARGE_OFF_T to be 9223372036854775807,\n     since some C++ compilers masquerading as C compilers\n     incorrectly reject 9223372036854775807.  */\n-#define LARGE_OFF_T ((((off_t) 1 << 31) << 31) - 1 + (((off_t) 1 << 31) << 31))\n+#define LARGE_OFF_T (((off_t) 1 << 62) - 1 + ((off_t) 1 << 62))\n   int off_t_is_large[(LARGE_OFF_T % 2147483629 == 721\n \t\t       && LARGE_OFF_T % 2147483647 == 1)\n \t\t      ? 1 : -1];\n@@ -6029,9 +6017,16 @@ vars=\"sys_errlist sys_nerr sys_siglist\"\n \n checkfuncs=\"__fsetlocking canonicalize_file_name dup3 getrlimit getrusage \\\n  getsysinfo gettimeofday on_exit pipe2 psignal pstat_getdynamic pstat_getstatic \\\n- realpath setrlimit sbrk spawnve spawnvpe strerror strsignal sysconf sysctl \\\n+ realpath setrlimit spawnve spawnvpe strerror strsignal sysconf sysctl \\\n  sysmp table times wait3 wait4\"\n \n+#\u00a0Darwin has sbrk, but it is deprecated and that produces build-time warnings\n+#\u00a0so do not check for it.\n+case \"${host}\" in\n+  *-*-darwin*) ;;\n+  *) checkfuncs=\"$checkfuncs sbrk\"\n+esac\n+\n # These are neither executed nor required, but they help keep\n # autoheader happy without adding a bunch of text to acconfig.h.\n if test \"x\" = \"y\"; then\n@@ -7260,7 +7255,10 @@ fi\n cat >>confdefs.h <<_ACEOF\n #define HAVE_DECL_REALLOC $ac_have_decl\n _ACEOF\n-ac_fn_c_check_decl \"$LINENO\" \"sbrk\" \"ac_cv_have_decl_sbrk\" \"$ac_includes_default\"\n+\n+  case \"${host}\" in\n+      *-*-darwin*) ;; # Darwin's sbrk implementation is deprecated.\n+      *) ac_fn_c_check_decl \"$LINENO\" \"sbrk\" \"ac_cv_have_decl_sbrk\" \"$ac_includes_default\"\n if test \"x$ac_cv_have_decl_sbrk\" = xyes; then :\n   ac_have_decl=1\n else\n@@ -7270,7 +7268,8 @@ fi\n cat >>confdefs.h <<_ACEOF\n #define HAVE_DECL_SBRK $ac_have_decl\n _ACEOF\n-\n+;;\n+  esac\n   ac_fn_c_check_decl \"$LINENO\" \"strtol\" \"ac_cv_have_decl_strtol\" \"$ac_includes_default\"\n if test \"x$ac_cv_have_decl_strtol\" = xyes; then :\n   ac_have_decl=1\n@@ -7575,8 +7574,6 @@ main ()\n     if (*(data + i) != *(data3 + i))\n       return 14;\n   close (fd);\n-  free (data);\n-  free (data3);\n   return 0;\n }\n _ACEOF"}, {"sha": "4b78c1830c76f2c93864d60ff0d78f279d4bb273", "filename": "libiberty/configure.ac", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbb334a6acc5cc5d8944712daeda8089ef1d7fd2/libiberty%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbb334a6acc5cc5d8944712daeda8089ef1d7fd2/libiberty%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.ac?ref=fbb334a6acc5cc5d8944712daeda8089ef1d7fd2", "patch": "@@ -395,9 +395,16 @@ vars=\"sys_errlist sys_nerr sys_siglist\"\n \n checkfuncs=\"__fsetlocking canonicalize_file_name dup3 getrlimit getrusage \\\n  getsysinfo gettimeofday on_exit pipe2 psignal pstat_getdynamic pstat_getstatic \\\n- realpath setrlimit sbrk spawnve spawnvpe strerror strsignal sysconf sysctl \\\n+ realpath setrlimit spawnve spawnvpe strerror strsignal sysconf sysctl \\\n  sysmp table times wait3 wait4\"\n \n+#\u00a0Darwin has sbrk, but it is deprecated and that produces build-time warnings\n+#\u00a0so do not check for it.\n+case \"${host}\" in\n+  *-*-darwin*) ;;\n+  *) checkfuncs=\"$checkfuncs sbrk\"\n+esac\n+\n # These are neither executed nor required, but they help keep\n # autoheader happy without adding a bunch of text to acconfig.h.\n if test \"x\" = \"y\"; then\n@@ -695,7 +702,11 @@ if test -z \"${setobjs}\"; then\n \n   AC_CHECK_FUNCS($checkfuncs)\n   AC_CHECK_DECLS([basename(char *), ffs, asprintf, vasprintf, snprintf, vsnprintf])\n-  AC_CHECK_DECLS([calloc, getenv, getopt, malloc, realloc, sbrk])\n+  AC_CHECK_DECLS([calloc, getenv, getopt, malloc, realloc])\n+  case \"${host}\" in\n+      *-*-darwin*) ;; # Darwin's sbrk implementation is deprecated.\n+      *) AC_CHECK_DECLS([sbrk]);;\n+  esac\n   AC_CHECK_DECLS([strtol, strtoul, strtoll, strtoull])\n   AC_CHECK_DECLS([strverscmp])\n   AC_CHECK_DECLS([strnlen])"}, {"sha": "b9e23c38643663c6398cf9e6c143b009e970c211", "filename": "libiberty/xmalloc.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbb334a6acc5cc5d8944712daeda8089ef1d7fd2/libiberty%2Fxmalloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbb334a6acc5cc5d8944712daeda8089ef1d7fd2/libiberty%2Fxmalloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fxmalloc.c?ref=fbb334a6acc5cc5d8944712daeda8089ef1d7fd2", "patch": "@@ -87,7 +87,9 @@ extern \"C\" {\n void *malloc (size_t);\n void *realloc (void *, size_t);\n void *calloc (size_t, size_t);\n+#ifdef HAVE_SBRK\n void *sbrk (ptrdiff_t);\n+#endif\n #    ifdef __cplusplus\n }\n #    endif /* __cplusplus */"}]}