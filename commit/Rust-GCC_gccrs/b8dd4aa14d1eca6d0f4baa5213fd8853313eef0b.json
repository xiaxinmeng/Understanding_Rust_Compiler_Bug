{"sha": "b8dd4aa14d1eca6d0f4baa5213fd8853313eef0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhkZDRhYTE0ZDFlY2E2ZDBmNGJhYTUyMTNmZDg4NTMzMTNlZWYwYg==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-11-03T22:33:53Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2019-11-03T22:33:53Z"}, "message": "re PR fortran/92113 (r276673 causes segfault in gfortran.dg/pr51434.f90)\n\n2019-11-03  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n    PR fortran/92133\n    * trans-decl.c (gfc_get_symbol_decl): If __def_init actually\n    contains a value, put it into  the read-only section.\n\nFrom-SVN: r277760", "tree": {"sha": "323e8683c074f0d8205e475c626ddf1ea7ad4e96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/323e8683c074f0d8205e475c626ddf1ea7ad4e96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8dd4aa14d1eca6d0f4baa5213fd8853313eef0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8dd4aa14d1eca6d0f4baa5213fd8853313eef0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8dd4aa14d1eca6d0f4baa5213fd8853313eef0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8dd4aa14d1eca6d0f4baa5213fd8853313eef0b/comments", "author": null, "committer": null, "parents": [{"sha": "40a777e840f74dd5c19ea26c55d1248a335fd11b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40a777e840f74dd5c19ea26c55d1248a335fd11b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40a777e840f74dd5c19ea26c55d1248a335fd11b"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "620d8af68b9da8d80779c97603133d7c97abd153", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8dd4aa14d1eca6d0f4baa5213fd8853313eef0b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8dd4aa14d1eca6d0f4baa5213fd8853313eef0b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b8dd4aa14d1eca6d0f4baa5213fd8853313eef0b", "patch": "@@ -1,3 +1,9 @@\n+2019-11-03  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/92133\n+\t* trans-decl.c (gfc_get_symbol_decl): If __def_init actually\n+\tcontains a value, put it into  the read-only section.\n+\n 2019-11-01  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \t* decl.c (match_byte_typespec): New function.  Match BYTE type-spec."}, {"sha": "ffa61111316c29d423e40e9f48c2e7e0b3d698a5", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8dd4aa14d1eca6d0f4baa5213fd8853313eef0b/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8dd4aa14d1eca6d0f4baa5213fd8853313eef0b/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=b8dd4aa14d1eca6d0f4baa5213fd8853313eef0b", "patch": "@@ -1904,13 +1904,20 @@ gfc_get_symbol_decl (gfc_symbol * sym)\n   if (sym->attr.associate_var)\n     GFC_DECL_ASSOCIATE_VAR_P (decl) = 1;\n \n-  /* We no longer mark __def_init as read-only so it does not take up\n-     space in the read-only section and dan go into the BSS instead,\n-     see PR 84487.  Marking this as artificial means that OpenMP will\n-     treat this as predetermined shared.  */\n-  if (sym->attr.vtab\n-      || (sym->name[0] == '_' && gfc_str_startswith (sym->name, \"__def_init\")))\n-    DECL_ARTIFICIAL (decl) = 1;\n+  /* We only longer mark __def_init as read-only if it actually has an\n+     initializer, it does not needlessly take up space in the\n+     read-only section and can go into the BSS instead, see PR 84487.\n+     Marking this as artificial means that OpenMP will treat this as\n+     predetermined shared.  */\n+\n+  bool def_init = gfc_str_startswith (sym->name, \"__def_init\");\n+\n+  if (sym->attr.vtab || def_init)\n+    {\n+      DECL_ARTIFICIAL (decl) = 1;\n+      if (def_init && sym->value)\n+\tTREE_READONLY (decl) = 1;\n+    }\n \n   return decl;\n }"}]}