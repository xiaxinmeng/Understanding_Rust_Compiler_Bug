{"sha": "8f5c9d66594de0e717d7d559054d5bfb2f2f5246", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY1YzlkNjY1OTRkZTBlNzE3ZDdkNTU5MDU0ZDViZmIyZjJmNTI0Ng==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2011-11-29T16:40:50Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2011-11-29T16:40:50Z"}, "message": "tree-diagnostic (struct loc_t): Rename into struct loc_map_pair.\n\n2011-11-29  Dodji Seketeli  <dodji@redhat.com>\n\n        * tree-diagnostic (struct loc_t): Rename into struct loc_map_pair.\n        (maybe_unwind_expanded_macro_loc): Adjust.\n\nFrom-SVN: r181808", "tree": {"sha": "d50c8247ff1e13e9478626f7ab2b3b5418d2cb89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d50c8247ff1e13e9478626f7ab2b3b5418d2cb89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f5c9d66594de0e717d7d559054d5bfb2f2f5246", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f5c9d66594de0e717d7d559054d5bfb2f2f5246", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f5c9d66594de0e717d7d559054d5bfb2f2f5246", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f5c9d66594de0e717d7d559054d5bfb2f2f5246/comments", "author": null, "committer": null, "parents": [{"sha": "43042ea70130d9c8648a5b92c9030445ab1403d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43042ea70130d9c8648a5b92c9030445ab1403d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43042ea70130d9c8648a5b92c9030445ab1403d7"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "d2d889a461fab0073e3dfa8c1163701e7a8faf50", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f5c9d66594de0e717d7d559054d5bfb2f2f5246/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f5c9d66594de0e717d7d559054d5bfb2f2f5246/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f5c9d66594de0e717d7d559054d5bfb2f2f5246", "patch": "@@ -1,4 +1,9 @@\n-2011-11-21  David Edelsohn  <dje.gcc@gmail.com>\n+2011-11-29  Dodji Seketeli  <dodji@redhat.com>\n+\n+\t* tree-diagnostic (struct loc_t): Rename into struct loc_map_pair.\n+\t(maybe_unwind_expanded_macro_loc): Adjust.\n+\n+2011-11-29  David Edelsohn  <dje.gcc@gmail.com>\n \t    Aldy Hernandez  <aldyh@redhat.com>\n \n \t* trans-mem.c (ipa_tm_create_version_alias): Mangle new_decl"}, {"sha": "b4b60dc44f9be2a0273b6456ab51bc0dc862d276", "filename": "gcc/tree-diagnostic.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f5c9d66594de0e717d7d559054d5bfb2f2f5246/gcc%2Ftree-diagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f5c9d66594de0e717d7d559054d5bfb2f2f5246/gcc%2Ftree-diagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-diagnostic.c?ref=8f5c9d66594de0e717d7d559054d5bfb2f2f5246", "patch": "@@ -56,10 +56,10 @@ typedef struct\n {\n   const struct line_map *map;\n   source_location where;\n-} loc_t;\n+} loc_map_pair;\n \n-DEF_VEC_O (loc_t);\n-DEF_VEC_ALLOC_O (loc_t, heap);\n+DEF_VEC_O (loc_map_pair);\n+DEF_VEC_ALLOC_O (loc_map_pair, heap);\n \n /* Unwind the different macro expansions that lead to the token which\n    location is WHERE and emit diagnostics showing the resulting\n@@ -111,9 +111,9 @@ maybe_unwind_expanded_macro_loc (diagnostic_context *context,\n                                  const struct line_map **first_exp_point_map)\n {\n   const struct line_map *map;\n-  VEC(loc_t,heap) *loc_vec = NULL;\n+  VEC(loc_map_pair,heap) *loc_vec = NULL;\n   unsigned ix;\n-  loc_t loc, *iter;\n+  loc_map_pair loc, *iter;\n \n   map = linemap_lookup (line_table, where);\n   if (!linemap_macro_expansion_map_p (map))\n@@ -132,7 +132,7 @@ maybe_unwind_expanded_macro_loc (diagnostic_context *context,\n       loc.where = where;\n       loc.map = map;\n \n-      VEC_safe_push (loc_t, heap, loc_vec, &loc);\n+      VEC_safe_push (loc_map_pair, heap, loc_vec, &loc);\n \n       /* WHERE is the location of a token inside the expansion of a\n          macro.  MAP is the map holding the locations of that macro\n@@ -150,7 +150,7 @@ maybe_unwind_expanded_macro_loc (diagnostic_context *context,\n      first macro which expansion triggered this trace was expanded\n      inside a system header.  */\n   if (!LINEMAP_SYSP (map))\n-    FOR_EACH_VEC_ELT (loc_t, loc_vec, ix, iter)\n+    FOR_EACH_VEC_ELT (loc_map_pair, loc_vec, ix, iter)\n       {\n         source_location resolved_def_loc = 0, resolved_exp_loc = 0;\n         diagnostic_t saved_kind;\n@@ -203,7 +203,7 @@ maybe_unwind_expanded_macro_loc (diagnostic_context *context,\n         context->printer->prefix = saved_prefix;\n       }\n \n-  VEC_free (loc_t, heap, loc_vec);\n+  VEC_free (loc_map_pair, heap, loc_vec);\n }\n \n /*  This is a diagnostic finalizer implementation that is aware of"}]}