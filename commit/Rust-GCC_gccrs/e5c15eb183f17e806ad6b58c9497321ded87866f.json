{"sha": "e5c15eb183f17e806ad6b58c9497321ded87866f", "node_id": "C_kwDOANBUbNoAKGU1YzE1ZWIxODNmMTdlODA2YWQ2YjU4Yzk0OTczMjFkZWQ4Nzg2NmY", "commit": {"author": {"name": "Richard Purdie", "email": "richard.purdie@linuxfoundation.org", "date": "2022-11-01T19:45:08Z"}, "committer": {"name": "Jeff Law", "email": "jlaw@ventanamicro.com", "date": "2022-11-01T19:45:51Z"}, "message": "gcc/file-prefix-map: Allow remapping of relative paths\n\nRelative paths currently aren't remapped by -ffile-prefix-map and friends.\nWhen cross compiling with separate 'source' and 'build' directories, the same\nrelative paths between directories may not be available on target as compared\nto build time.\n\nIn order to be able to remap these relative build paths to paths that would\nwork on target, resolve paths within the file-prefix-map function using\nrealpath().\n\nThis does cause a change of behaviour if users were previously relying upon\nsymlinks or absolute paths not being resolved.\n\nUse basename to ensure plain filenames don't have paths added.\n\ngcc/ChangeLog:\n\n\t* file-prefix-map.cc (remap_filename): Allow remapping of relative paths.", "tree": {"sha": "724ef299f6dbfe5622af0d4571e55c54d2b593a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/724ef299f6dbfe5622af0d4571e55c54d2b593a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5c15eb183f17e806ad6b58c9497321ded87866f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5c15eb183f17e806ad6b58c9497321ded87866f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5c15eb183f17e806ad6b58c9497321ded87866f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5c15eb183f17e806ad6b58c9497321ded87866f/comments", "author": {"login": "rpurdie", "id": 1184070, "node_id": "MDQ6VXNlcjExODQwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1184070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpurdie", "html_url": "https://github.com/rpurdie", "followers_url": "https://api.github.com/users/rpurdie/followers", "following_url": "https://api.github.com/users/rpurdie/following{/other_user}", "gists_url": "https://api.github.com/users/rpurdie/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpurdie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpurdie/subscriptions", "organizations_url": "https://api.github.com/users/rpurdie/orgs", "repos_url": "https://api.github.com/users/rpurdie/repos", "events_url": "https://api.github.com/users/rpurdie/events{/privacy}", "received_events_url": "https://api.github.com/users/rpurdie/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bdf0018519c39931fdcc7aeffe9e87ba756894d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdf0018519c39931fdcc7aeffe9e87ba756894d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdf0018519c39931fdcc7aeffe9e87ba756894d7"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "439586bd2b5527a6ab368b7d3d50d3cb3e5483ee", "filename": "gcc/file-prefix-map.cc", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5c15eb183f17e806ad6b58c9497321ded87866f/gcc%2Ffile-prefix-map.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5c15eb183f17e806ad6b58c9497321ded87866f/gcc%2Ffile-prefix-map.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffile-prefix-map.cc?ref=e5c15eb183f17e806ad6b58c9497321ded87866f", "patch": "@@ -70,19 +70,29 @@ remap_filename (file_prefix_map *maps, const char *filename)\n   file_prefix_map *map;\n   char *s;\n   const char *name;\n+  char *realname;\n   size_t name_len;\n \n+  if (lbasename (filename) == filename)\n+    return filename;\n+\n+  realname = lrealpath (filename);\n+\n   for (map = maps; map; map = map->next)\n-    if (filename_ncmp (filename, map->old_prefix, map->old_len) == 0)\n+    if (filename_ncmp (realname, map->old_prefix, map->old_len) == 0)\n       break;\n   if (!map)\n-    return filename;\n-  name = filename + map->old_len;\n+    {\n+      free (realname);\n+      return filename;\n+    }\n+  name = realname + map->old_len;\n   name_len = strlen (name) + 1;\n \n   s = (char *) ggc_alloc_atomic (name_len + map->new_len);\n   memcpy (s, map->new_prefix, map->new_len);\n   memcpy (s + map->new_len, name, name_len);\n+  free (realname);\n   return s;\n }\n "}]}