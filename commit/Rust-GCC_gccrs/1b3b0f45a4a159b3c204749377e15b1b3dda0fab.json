{"sha": "1b3b0f45a4a159b3c204749377e15b1b3dda0fab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIzYjBmNDVhNGExNTliM2MyMDQ3NDkzNzdlMTViMWIzZGRhMGZhYg==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2005-09-05T07:55:41Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-09-05T07:55:41Z"}, "message": "mlib-prj.adb (Copy_Interface_Sources): Copy all interface sources, including those that are inherited.\n\n2005-09-01  Vincent Celier  <celier@adacore.com>\n\n\t* mlib-prj.adb (Copy_Interface_Sources): Copy all interface sources,\n\tincluding those that are inherited.\n\nFrom-SVN: r103872", "tree": {"sha": "29d71da17ea7b3549136f8fce076738c3f4afd18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29d71da17ea7b3549136f8fce076738c3f4afd18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b3b0f45a4a159b3c204749377e15b1b3dda0fab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b3b0f45a4a159b3c204749377e15b1b3dda0fab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b3b0f45a4a159b3c204749377e15b1b3dda0fab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b3b0f45a4a159b3c204749377e15b1b3dda0fab/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ec5b8c17167a5d831310bc80f42ae717998769a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ec5b8c17167a5d831310bc80f42ae717998769a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ec5b8c17167a5d831310bc80f42ae717998769a"}], "stats": {"total": 52, "additions": 42, "deletions": 10}, "files": [{"sha": "2a2d858e5d1f966a4ae768c065548a7c176a5e58", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 42, "deletions": 10, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b3b0f45a4a159b3c204749377e15b1b3dda0fab/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b3b0f45a4a159b3c204749377e15b1b3dda0fab/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=1b3b0f45a4a159b3c204749377e15b1b3dda0fab", "patch": "@@ -32,7 +32,6 @@ with MLib.Tgt; use MLib.Tgt;\n with MLib.Utl; use MLib.Utl;\n with Namet;    use Namet;\n with Opt;\n-with Osint;    use Osint;\n with Output;   use Output;\n with Prj.Com;  use Prj.Com;\n with Prj.Env;  use Prj.Env;\n@@ -41,13 +40,11 @@ with Sinput.P;\n with Snames;   use Snames;\n with Switch;   use Switch;\n with Table;\n-with Types;    use Types;\n \n with Ada.Characters.Handling;\n \n with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n with GNAT.HTable;\n-with GNAT.OS_Lib;               use GNAT.OS_Lib;\n with Interfaces.C_Streams;      use Interfaces.C_Streams;\n with System;                    use System;\n with System.Case_Util;          use System.Case_Util;\n@@ -940,7 +937,6 @@ package body MLib.Prj is\n \n             if First_ALI /= No_Name then\n                declare\n-                  use Types;\n                   T : Text_Buffer_Ptr;\n                   A : ALI_Id;\n \n@@ -1040,7 +1036,6 @@ package body MLib.Prj is\n \n             if First_ALI /= No_Name then\n                declare\n-                  use Types;\n                   T : Text_Buffer_Ptr;\n                   A : ALI_Id;\n \n@@ -1731,8 +1726,11 @@ package body MLib.Prj is\n       Interfaces  : Argument_List;\n       To_Dir      : Name_Id)\n    is\n-      Current  : constant Dir_Name_Str := Get_Current_Dir;\n-      Target   : constant Dir_Name_Str := Get_Name_String (To_Dir);\n+      Current : constant Dir_Name_Str := Get_Current_Dir;\n+      --  The current directory, where to return to at the end\n+\n+      Target : constant Dir_Name_Str := Get_Name_String (To_Dir);\n+      --  The directory where to copy sources\n \n       Text     : Text_Buffer_Ptr;\n       The_ALI  : ALI.ALI_Id;\n@@ -1744,10 +1742,18 @@ package body MLib.Prj is\n       Data : Unit_Data;\n \n       Copy_Subunits : Boolean := False;\n+      --  When True, indicates that subunits, if any, need to be copied too\n \n       procedure Copy (File_Name : Name_Id);\n       --  Copy one source of the project to the target directory\n \n+      function Is_Same_Or_Extension\n+        (Extending : Project_Id;\n+         Extended  : Project_Id)\n+         return Boolean;\n+      --  Return True if project Extending is equal to or extends project\n+      --  Extended.\n+\n       ----------\n       -- Copy --\n       ----------\n@@ -1762,8 +1768,11 @@ package body MLib.Prj is\n          loop\n             Data := In_Tree.Units.Table (Index);\n \n+            --  Find and copy the immediate or inherited source\n+\n             for J in Data.File_Names'Range loop\n-               if Data.File_Names (J).Project = For_Project\n+               if Is_Same_Or_Extension\n+                    (For_Project, Data.File_Names (J).Project)\n                  and then Data.File_Names (J).Name = File_Name\n                then\n                   Copy_File\n@@ -1778,7 +1787,28 @@ package body MLib.Prj is\n          end loop Unit_Loop;\n       end Copy;\n \n-      use ALI;\n+      --------------------------\n+      -- Is_Same_Or_Extension --\n+      --------------------------\n+\n+      function Is_Same_Or_Extension\n+        (Extending : Project_Id;\n+         Extended  : Project_Id)\n+         return Boolean\n+      is\n+         Ext : Project_Id := Extending;\n+\n+      begin\n+         while Ext /= No_Project loop\n+            if Ext = Extended then\n+               return True;\n+            end if;\n+\n+            Ext := In_Tree.Projects.Table (Ext).Extends;\n+         end loop;\n+\n+         return False;\n+      end Is_Same_Or_Extension;\n \n    --  Start of processing for Copy_Interface_Sources\n \n@@ -1875,7 +1905,7 @@ package body MLib.Prj is\n       Fd : FILEs;\n       --  Binder file's descriptor\n \n-      Read_Mode  : constant String := \"r\" & ASCII.Nul;\n+      Read_Mode : constant String := \"r\" & ASCII.Nul;\n       --  For fopen\n \n       Status : Interfaces.C_Streams.int;\n@@ -2013,7 +2043,9 @@ package body MLib.Prj is\n       end if;\n \n       Status := fclose (Fd);\n+\n       --  Is it really right to ignore any close error ???\n+\n    end Process_Binder_File;\n \n    ------------------"}]}