{"sha": "1da93fe012a0f34e4c50f3ccc98bd8a21ab396d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRhOTNmZTAxMmEwZjM0ZTRjNTBmM2NjYzk4YmQ4YTIxYWIzOTZkMw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-08-24T18:09:10Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-08-24T18:09:10Z"}, "message": "expr.c (store_expr): Always pass down the target, even when not doing CSE.\n\n\t* expr.c (store_expr): Always pass down the target, even when not\n\tdoing CSE.\n\nFrom-SVN: r28824", "tree": {"sha": "e7974cec15d5ca7ca1594f789d498c9a2746584e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7974cec15d5ca7ca1594f789d498c9a2746584e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1da93fe012a0f34e4c50f3ccc98bd8a21ab396d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1da93fe012a0f34e4c50f3ccc98bd8a21ab396d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1da93fe012a0f34e4c50f3ccc98bd8a21ab396d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1da93fe012a0f34e4c50f3ccc98bd8a21ab396d3/comments", "author": null, "committer": null, "parents": [{"sha": "7a846a6c88251ef8c1276c1283557f92380ed761", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a846a6c88251ef8c1276c1283557f92380ed761", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a846a6c88251ef8c1276c1283557f92380ed761"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "4681f69447e56898a5c411040bb38bc70fdf679d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1da93fe012a0f34e4c50f3ccc98bd8a21ab396d3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1da93fe012a0f34e4c50f3ccc98bd8a21ab396d3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1da93fe012a0f34e4c50f3ccc98bd8a21ab396d3", "patch": "@@ -1,3 +1,8 @@\n+Mon Aug 23 22:28:16 1999  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* expr.c (store_expr): Always pass down the target, even when not\n+\tdoing CSE.\n+\n 1999-08-24  Nick Clifton  <nickc@cygnus.com>\n \n \t* configure.in: Define target_cpu_default for v850 targets."}, {"sha": "7783bf97b80352fb10f60d053cf093a23b2c03ea", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1da93fe012a0f34e4c50f3ccc98bd8a21ab396d3/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1da93fe012a0f34e4c50f3ccc98bd8a21ab396d3/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=1da93fe012a0f34e4c50f3ccc98bd8a21ab396d3", "patch": "@@ -3578,8 +3578,7 @@ store_expr (exp, target, want_value)\n        Don't do this if TARGET is volatile because we are supposed\n        to write it and then read it.  */\n     {\n-      temp = expand_expr (exp, cse_not_expected ? NULL_RTX : target,\n-\t\t\t  GET_MODE (target), 0);\n+      temp = expand_expr (exp, target, GET_MODE (target), 0);\n       if (GET_MODE (temp) != BLKmode && GET_MODE (temp) != VOIDmode)\n \ttemp = copy_to_reg (temp);\n       dont_return_target = 1;"}]}