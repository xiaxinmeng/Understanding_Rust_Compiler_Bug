{"sha": "f3d2fbfdb83bcc60d72824daf7a470c0e5398854", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNkMmZiZmRiODNiY2M2MGQ3MjgyNGRhZjdhNDcwYzBlNTM5ODg1NA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-07-22T13:56:50Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-22T13:56:50Z"}, "message": "[Ada] Fix spurious loop warning for function with Out parameter\n\nThe compiler gives a spurious warning about a possible infinite while\nloop whose condition contains a call to a function that takes an Out or\nIn/Out parameter and whose actual is a variable that is not modified in\nthe loop, because it still thinks that functions can only have In\nparameters.\n\n2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* sem_warn.adb (Find_Var): Bail out for a function call with an\n\tOut or In/Out parameter.\n\ngcc/testsuite/\n\n\t* gnat.dg/warn23.adb: New testcase.\n\nFrom-SVN: r273673", "tree": {"sha": "ced0090a1981e3808c919aa6723cdb5351d1a48c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ced0090a1981e3808c919aa6723cdb5351d1a48c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3d2fbfdb83bcc60d72824daf7a470c0e5398854", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3d2fbfdb83bcc60d72824daf7a470c0e5398854", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3d2fbfdb83bcc60d72824daf7a470c0e5398854", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3d2fbfdb83bcc60d72824daf7a470c0e5398854/comments", "author": null, "committer": null, "parents": [{"sha": "1a79e03b8012d5094e5bd432df59abeca5c2fe18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a79e03b8012d5094e5bd432df59abeca5c2fe18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a79e03b8012d5094e5bd432df59abeca5c2fe18"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "6fc9d1c59cc69fc7d5aab75060edadc4afdf2aef", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3d2fbfdb83bcc60d72824daf7a470c0e5398854/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3d2fbfdb83bcc60d72824daf7a470c0e5398854/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f3d2fbfdb83bcc60d72824daf7a470c0e5398854", "patch": "@@ -1,3 +1,8 @@\n+2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_warn.adb (Find_Var): Bail out for a function call with an\n+\tOut or In/Out parameter.\n+\n 2019-07-22  Nicolas Roche  <roche@adacore.com>\n \n \t* terminals.c (__gnat_tty_waitpid): Support both blocking and"}, {"sha": "0e1e292bd796de0a1e3fb9d1986fd323636d5193", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3d2fbfdb83bcc60d72824daf7a470c0e5398854/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3d2fbfdb83bcc60d72824daf7a470c0e5398854/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=f3d2fbfdb83bcc60d72824daf7a470c0e5398854", "patch": "@@ -333,6 +333,11 @@ package body Sem_Warn is\n \n             elsif Has_Warnings_Off (Entity (Name (N))) then\n                return;\n+\n+            --  Forget it if the parameter is not In\n+\n+            elsif Has_Out_Or_In_Out_Parameter (Entity (Name (N))) then\n+               return;\n             end if;\n \n             --  OK, see if we have one argument"}, {"sha": "c542c626f1d6725e34fd0172bed4cd6291b557ea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3d2fbfdb83bcc60d72824daf7a470c0e5398854/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3d2fbfdb83bcc60d72824daf7a470c0e5398854/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f3d2fbfdb83bcc60d72824daf7a470c0e5398854", "patch": "@@ -1,3 +1,7 @@\n+2019-07-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/warn23.adb: New testcase.\n+\n 2019-07-22  Javier Miranda  <miranda@adacore.com>\n \n \t* gnat.dg/cpp_constructor2.adb: New testcase."}, {"sha": "63d0557c72039763ff126cffed7ea9a28fb2141b", "filename": "gcc/testsuite/gnat.dg/warn23.adb", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3d2fbfdb83bcc60d72824daf7a470c0e5398854/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn23.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3d2fbfdb83bcc60d72824daf7a470c0e5398854/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn23.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn23.adb?ref=f3d2fbfdb83bcc60d72824daf7a470c0e5398854", "patch": "@@ -0,0 +1,17 @@\n+--  { dg-do compile }\n+\n+procedure Warn23 is\n+\n+   type Enum_Type is (A, B, C);\n+\n+   function Poll (E : out Enum_Type) return Boolean\n+     with Convention => Ada,\n+          Import => True;\n+\n+   E : Enum_Type;\n+\n+begin\n+   while Poll (E) loop\n+      null;\n+   end loop;\n+end;"}]}