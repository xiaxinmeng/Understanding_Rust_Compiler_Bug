{"sha": "65e14bf592104223ad62014869b6a6795173cd8d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVlMTRiZjU5MjEwNDIyM2FkNjIwMTQ4NjliNmE2Nzk1MTczY2Q4ZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2000-04-25T12:15:25Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-04-25T12:15:25Z"}, "message": "stor-layout.c (finalize_record_size): Simplify to use existing functions.\n\n\t* stor-layout.c (finalize_record_size): Simplify to use existing\n\tfunctions.\n\t(compute_record_mode): No longer static.\n\t* tree.h (compute_record_mode): New declaration.\n\nFrom-SVN: r33412", "tree": {"sha": "7dc227f9b6803825d296a44dddf6d3f5321d5c66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7dc227f9b6803825d296a44dddf6d3f5321d5c66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65e14bf592104223ad62014869b6a6795173cd8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65e14bf592104223ad62014869b6a6795173cd8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65e14bf592104223ad62014869b6a6795173cd8d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65e14bf592104223ad62014869b6a6795173cd8d/comments", "author": null, "committer": null, "parents": [{"sha": "05183359dab76cc72b7c149b44b79012e8234b88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05183359dab76cc72b7c149b44b79012e8234b88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05183359dab76cc72b7c149b44b79012e8234b88"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "3022208044ff98c4ceecabbdd3b3da2e5c85a140", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e14bf592104223ad62014869b6a6795173cd8d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e14bf592104223ad62014869b6a6795173cd8d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=65e14bf592104223ad62014869b6a6795173cd8d", "patch": "@@ -1,3 +1,10 @@\n+Tue Apr 25 07:33:12 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* stor-layout.c (finalize_record_size): Simplify to use existing\n+\tfunctions.\n+\t(compute_record_mode): No longer static.\n+\t* tree.h (compute_record_mode): New declaration.\n+\n 2000-04-25  Neil Booth  <NeilB@earthling.net>\n \n \t* Revert my patch below until cause of build failures\n@@ -8,8 +15,6 @@\n \t* combine.c (combine_instructions): Add missing argument\n \tto try_combine.\n \n-2000-04-25  Richard Henderson  <rth@cygnus.com>\n-\n \t* toplev.c (rest_of_compilation): Delay sibcall optimization\n \tuntil after emit_eh_context.\n "}, {"sha": "3336cc8691df65fd525dbdaed4b41f3162651fff", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 13, "deletions": 19, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e14bf592104223ad62014869b6a6795173cd8d/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e14bf592104223ad62014869b6a6795173cd8d/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=65e14bf592104223ad62014869b6a6795173cd8d", "patch": "@@ -51,7 +51,6 @@ unsigned int maximum_field_alignment;\n unsigned int set_alignment = 0;\n \n static void finalize_record_size\tPARAMS ((record_layout_info));\n-static void compute_record_mode\t\tPARAMS ((tree));\n static void finalize_type_size\t\tPARAMS ((tree));\n static void place_union_field\t\tPARAMS ((record_layout_info, tree));\n \f\n@@ -890,13 +889,10 @@ finalize_record_size (rli)\n {\n   tree unpadded_size, unpadded_size_unit;\n \n-  /* Next move any full bytes of bits into the byte size.  */\n-  rli->offset\n-    = size_binop (PLUS_EXPR, rli->offset,\n-\t\t  convert (sizetype,\n-\t\t\t   size_binop (TRUNC_DIV_EXPR, rli->bitpos,\n-\t\t\t\t       bitsize_unit_node)));\n-  rli->bitpos = size_binop (TRUNC_MOD_EXPR, rli->bitpos, bitsize_unit_node);\n+  /* Now we want just byte and bit offsets, so set the offset alignment\n+     to be a byte and then normalize.  */\n+  rli->offset_align = BITS_PER_UNIT;\n+  normalize_rli (rli);\n \n   /* Determine the desired alignment.  */\n #ifdef ROUND_TYPE_ALIGN\n@@ -906,16 +902,14 @@ finalize_record_size (rli)\n   TYPE_ALIGN (rli->t) = MAX (TYPE_ALIGN (rli->t), rli->record_align);\n #endif\n \n-  unpadded_size\n-    = size_binop (PLUS_EXPR, rli->bitpos,\n-\t\t  size_binop (MULT_EXPR, convert (bitsizetype, rli->offset),\n-\t\t\t      bitsize_unit_node));\n-\n-  unpadded_size_unit\n-    = size_binop (PLUS_EXPR, rli->offset,\n-\t\t  convert (sizetype, \n-\t\t\t   size_binop (CEIL_DIV_EXPR, rli->bitpos,\n-\t\t\t\t       bitsize_unit_node)));\n+  /* Compute the size so far.  Be sure to allow for extra bits in the\n+     size in bytes.  We have guaranteed above that it will be no more\n+     than a single byte.  */\n+  unpadded_size = rli_size_so_far (rli);\n+  unpadded_size_unit = rli_size_unit_so_far (rli);\n+  if (! integer_zerop (rli->bitpos))\n+    unpadded_size_unit\n+      = size_binop (PLUS_EXPR, unpadded_size_unit, size_one_node);\n \n   /* Record the un-rounded size in the binfo node.  But first we check\n      the size of TYPE_BINFO to make sure that BINFO_SIZE is available.  */\n@@ -993,7 +987,7 @@ finalize_record_size (rli)\n \n /* Compute the TYPE_MODE for the TYPE (which is a RECORD_TYPE).  */\n \n-static void\n+void\n compute_record_mode (type)\n      tree type;\n {"}, {"sha": "189b7805c16da0289b3806aa42c6445eccdc5a59", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65e14bf592104223ad62014869b6a6795173cd8d/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65e14bf592104223ad62014869b6a6795173cd8d/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=65e14bf592104223ad62014869b6a6795173cd8d", "patch": "@@ -1800,6 +1800,7 @@ extern tree rli_size_unit_so_far\tPARAMS ((record_layout_info));\n extern tree rli_size_so_far\t\tPARAMS ((record_layout_info));\n extern void normalize_rli\t\tPARAMS ((record_layout_info));\n extern void place_field\t\t\tPARAMS ((record_layout_info, tree));\n+extern void compute_record_mode\t\tPARAMS ((tree));\n extern void finish_record_layout\tPARAMS ((record_layout_info));\n \n /* Given a hashcode and a ..._TYPE node (for which the hashcode was made),"}]}