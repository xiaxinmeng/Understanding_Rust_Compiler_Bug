{"sha": "eedd7243586d83ac84307a0c460600bca8317e56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVkZDcyNDM1ODZkODNhYzg0MzA3YTBjNDYwNjAwYmNhODMxN2U1Ng==", "commit": {"author": {"name": "Rask Ingemann Lambertsen", "email": "rask@sygehus.dk", "date": "2007-06-19T16:30:03Z"}, "committer": {"name": "Rask Ingemann Lambertsen", "email": "rask@gcc.gnu.org", "date": "2007-06-19T16:30:03Z"}, "message": "re PR target/32369 ([frv] macro \"DF_LIVE_IN\" passed 2 arguments, but takes just 1)\n\n2007-06-19  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n\n\tPR target/32369\n\t* config/frv/frv.c (frv_ifcvt_modify_tests): Dataflow merge fix.\n\t(frv_ifcvt_modify_insn): Likewise.\n\nFrom-SVN: r125851", "tree": {"sha": "4528381e5ac9044ba8adf0b0dc471f18e1715f4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4528381e5ac9044ba8adf0b0dc471f18e1715f4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eedd7243586d83ac84307a0c460600bca8317e56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eedd7243586d83ac84307a0c460600bca8317e56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eedd7243586d83ac84307a0c460600bca8317e56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eedd7243586d83ac84307a0c460600bca8317e56/comments", "author": null, "committer": null, "parents": [{"sha": "cdbbee7a4321fba5fe8371fd4d3c338850a7bbdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdbbee7a4321fba5fe8371fd4d3c338850a7bbdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdbbee7a4321fba5fe8371fd4d3c338850a7bbdb"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "3f990bd313b5b62d86f93675e2dc51a342e28010", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eedd7243586d83ac84307a0c460600bca8317e56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eedd7243586d83ac84307a0c460600bca8317e56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eedd7243586d83ac84307a0c460600bca8317e56", "patch": "@@ -1,3 +1,9 @@\n+2007-06-19  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n+\n+\tPR target/32369\n+\t* config/frv/frv.c (frv_ifcvt_modify_tests): Dataflow merge fix.\n+\t(frv_ifcvt_modify_insn): Likewise.\n+\n 2007-06-19  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-structalias.c (handle_ptr_arith): Make sure to"}, {"sha": "f9e60263ac6acac2f649bf3c5765800a3d50fcf8", "filename": "gcc/config/frv/frv.c", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eedd7243586d83ac84307a0c460600bca8317e56/gcc%2Fconfig%2Ffrv%2Ffrv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eedd7243586d83ac84307a0c460600bca8317e56/gcc%2Fconfig%2Ffrv%2Ffrv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.c?ref=eedd7243586d83ac84307a0c460600bca8317e56", "patch": "@@ -5295,15 +5295,15 @@ frv_ifcvt_modify_tests (ce_if_block_t *ce_info, rtx *p_true, rtx *p_false)\n       for (j = CC_FIRST; j <= CC_LAST; j++)\n \tif (TEST_HARD_REG_BIT (tmp_reg->regs, j))\n \t  {\n-\t    if (REGNO_REG_SET_P (DF_LIVE_IN (rtl_df, then_bb), j))\n+\t    if (REGNO_REG_SET_P (df_get_live_in (then_bb), j))\n \t      continue;\n \n \t    if (else_bb\n-\t\t&& REGNO_REG_SET_P (DF_LIVE_IN (rtl_df, else_bb), j))\n+\t\t&& REGNO_REG_SET_P (df_get_live_in (else_bb), j))\n \t      continue;\n \n \t    if (join_bb\n-\t\t&& REGNO_REG_SET_P (DF_LIVE_IN (rtl_df, join_bb), j))\n+\t\t&& REGNO_REG_SET_P (df_get_live_in (join_bb), j))\n \t      continue;\n \n \t    SET_HARD_REG_BIT (frv_ifcvt.nested_cc_ok_rewrite, j);\n@@ -5325,7 +5325,7 @@ frv_ifcvt_modify_tests (ce_if_block_t *ce_info, rtx *p_true, rtx *p_false)\n \n       /* Remove anything live at the beginning of the join block from being\n          available for allocation.  */\n-      EXECUTE_IF_SET_IN_REG_SET (DF_LIVE_IN (rtl_df, join_bb), 0, regno, rsi)\n+      EXECUTE_IF_SET_IN_REG_SET (df_get_live_in (join_bb), 0, regno, rsi)\n \t{\n \t  if (regno < FIRST_PSEUDO_REGISTER)\n \t    CLEAR_HARD_REG_BIT (tmp_reg->regs, regno);\n@@ -5369,7 +5369,7 @@ frv_ifcvt_modify_tests (ce_if_block_t *ce_info, rtx *p_true, rtx *p_false)\n \n       /* Anything live at the beginning of the block is obviously unavailable\n          for allocation.  */\n-      EXECUTE_IF_SET_IN_REG_SET (DF_LIVE_IN (rtl_df, bb[j]), 0, regno, rsi)\n+      EXECUTE_IF_SET_IN_REG_SET (df_get_live_in (bb[j]), 0, regno, rsi)\n \t{\n \t  if (regno < FIRST_PSEUDO_REGISTER)\n \t    CLEAR_HARD_REG_BIT (tmp_reg->regs, regno);\n@@ -6022,17 +6022,15 @@ frv_ifcvt_modify_insn (ce_if_block_t *ce_info,\n \t\t  limit scheduling of the combined block quite\n \t\t  severely.  */\n \t       && ce_info->join_bb\n-\t       && ! (REGNO_REG_SET_P\n-\t\t     (DF_LIVE_IN (rtl_df, ce_info->join_bb),\n-\t\t      REGNO (SET_DEST (set))))\n+\t       && ! (REGNO_REG_SET_P (df_get_live_in (ce_info->join_bb),\n+\t\t\t\t      REGNO (SET_DEST (set))))\n \t       /* Similarly, we must not unconditionally set a reg\n \t\t  used as scratch in the THEN branch if the same reg\n \t\t  is live in the ELSE branch.  */\n \t       && (! ce_info->else_bb\n \t\t   || BLOCK_FOR_INSN (insn) == ce_info->else_bb\n-\t\t   || ! (REGNO_REG_SET_P\n-\t\t\t (DF_LIVE_IN (rtl_df, ce_info->else_bb),\n-\t\t\t  REGNO (SET_DEST (set))))))\n+\t\t   || ! (REGNO_REG_SET_P (df_get_live_in (ce_info->else_bb),\n+\t\t\t\t\t  REGNO (SET_DEST (set))))))\n \tpattern = set;\n \n       else if (mode == QImode || mode == HImode || mode == SImode"}]}