{"sha": "c3efc7c4d67d26badfb33fb2bb33e7cc3193ae7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNlZmM3YzRkNjdkMjZiYWRmYjMzZmIyYmIzM2U3Y2MzMTkzYWU3YQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-10-01T22:16:34Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-10-01T22:16:34Z"}, "message": "(MD_FILE): New macro.\n\n(md): New dependency.\n(clean): Remove file md if md.pre-cpp exists.\n(distclean): Remove md.pre-cpp.\n\nFrom-SVN: r5544", "tree": {"sha": "61b6671f23c36418803ad9e3407f936ffd96eb16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61b6671f23c36418803ad9e3407f936ffd96eb16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3efc7c4d67d26badfb33fb2bb33e7cc3193ae7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3efc7c4d67d26badfb33fb2bb33e7cc3193ae7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3efc7c4d67d26badfb33fb2bb33e7cc3193ae7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3efc7c4d67d26badfb33fb2bb33e7cc3193ae7a/comments", "author": null, "committer": null, "parents": [{"sha": "15af062fc5db015208b5766dc12b8680347c982e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15af062fc5db015208b5766dc12b8680347c982e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15af062fc5db015208b5766dc12b8680347c982e"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "f7abd5914ac49b93cff4ee4b2777b672f84dc21b", "filename": "gcc/Makefile.in", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3efc7c4d67d26badfb33fb2bb33e7cc3193ae7a/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3efc7c4d67d26badfb33fb2bb33e7cc3193ae7a/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=c3efc7c4d67d26badfb33fb2bb33e7cc3193ae7a", "patch": "@@ -284,6 +284,9 @@ GCC_PARTS=$(GCC_PASSES) $(LIBGCC) $(EXTRA_PROGRAMS) $(USE_COLLECT2) $(EXTRA_PART\n # Directory to link to, when using the target `maketest'.\n DIR = ../gcc\n \n+# Guaranteed to not exist when not passing md through cpp.\n+MD_FILE = md-cpp-not-used\n+\n # Flags to use when cross-building GCC.\n # Prefix to apply to names of object files when using them\n # to run on the machine we are compiling on.\n@@ -1152,6 +1155,13 @@ stamp-output : md genoutput $(srcdir)/move-if-change\n # about the target machine.  They do depend on config.h itself,\n # since that describes the host machine.\n \n+# Pass the md file through cpp if the target requests it.\n+$(MD_FILE): $(CPP_MD)\n+\t-if [ -f md.pre-cpp ]; then \\\n+\t  rm -f md ; ./cpp $(CPP_MD_FLAGS) md.pre-cpp | sed 's/^# /; /g' > md ; \\\n+\telse true ; \\\n+\tfi\n+\n genconfig : genconfig.o $(HOST_RTL) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o genconfig \\\n \t  genconfig.o $(HOST_RTL) $(HOST_LIBS)\n@@ -1653,13 +1663,17 @@ clean: mostlyclean bytecode.clean\n # but what better way is there?\n \t-rm -f libgcc.a libgcc1.a libgcc2.a libgcc2.ready libgcc1.null\n \t-rm -f *.dvi\n+\t-if [ -f md.pre-cpp ]; then \\\n+\t  rm -f md ; \\\n+\tfi\n # Delete the include directory.\n \t-rm -rf stmp-* fixinc.ready include objc-headers\n \n # Delete all files that users would normally create\n # while building and installing GCC.\n distclean: clean bytecode.distclean\n-\t-rm -f tm.h aux-output.c config.h md config.status tconfig.h hconfig.h\n+\t-rm -f tm.h aux-output.c config.h config.status tconfig.h hconfig.h\n+\t-rm -f md md.pre-cpp\n \t-rm -f Makefile *.oaux\n \t-rm -fr stage1 stage2 stage3 stage4\n \t-rm -f cp-parse.output"}]}