{"sha": "dfc420f8d4492dbf5f45df4fecf93cb9645c0d7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZjNDIwZjhkNDQ5MmRiZjVmNDVkZjRmZWNmOTNjYjk2NDVjMGQ3Yg==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-07-16T16:34:18Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-07-30T21:44:31Z"}, "message": "d: Fix ICE in expand_intrinsic_vaarg\n\nBoth intrinsics did not handle the case where the va_list object comes\nfrom a ref parameter.\n\ngcc/d/ChangeLog:\n\n\tPR d/96140\n\t* intrinsics.cc (expand_intrinsic_vaarg): Handle ref parameters as\n\targuments to va_arg().\n\t(expand_intrinsic_vastart): Handle ref parameters as arguments to\n\tva_start().\n\ngcc/testsuite/ChangeLog:\n\n\tPR d/96140\n\t* gdc.dg/pr96140.d: New test.", "tree": {"sha": "66848001f1fae4622a5aabd3813239d8cb05a08d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66848001f1fae4622a5aabd3813239d8cb05a08d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dfc420f8d4492dbf5f45df4fecf93cb9645c0d7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfc420f8d4492dbf5f45df4fecf93cb9645c0d7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfc420f8d4492dbf5f45df4fecf93cb9645c0d7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfc420f8d4492dbf5f45df4fecf93cb9645c0d7b/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "684d6ee140af6585c18c8790f8f5bddfcc6bd153", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/684d6ee140af6585c18c8790f8f5bddfcc6bd153", "html_url": "https://github.com/Rust-GCC/gccrs/commit/684d6ee140af6585c18c8790f8f5bddfcc6bd153"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "8eec0af60eeb047ae8bc856d9ff204617727889f", "filename": "gcc/d/intrinsics.cc", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfc420f8d4492dbf5f45df4fecf93cb9645c0d7b/gcc%2Fd%2Fintrinsics.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfc420f8d4492dbf5f45df4fecf93cb9645c0d7b/gcc%2Fd%2Fintrinsics.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fintrinsics.cc?ref=dfc420f8d4492dbf5f45df4fecf93cb9645c0d7b", "patch": "@@ -549,8 +549,17 @@ expand_intrinsic_vaarg (tree callexp)\n     {\n       parmn = CALL_EXPR_ARG (callexp, 1);\n       STRIP_NOPS (parmn);\n-      gcc_assert (TREE_CODE (parmn) == ADDR_EXPR);\n-      parmn = TREE_OPERAND (parmn, 0);\n+\n+      /* The `ref' argument to va_arg is either an address or reference,\n+\t get the value of it.  */\n+      if (TREE_CODE (parmn) == PARM_DECL && POINTER_TYPE_P (TREE_TYPE (parmn)))\n+\tparmn = build_deref (parmn);\n+      else\n+\t{\n+\t  gcc_assert (TREE_CODE (parmn) == ADDR_EXPR);\n+\t  parmn = TREE_OPERAND (parmn, 0);\n+\t}\n+\n       type = TREE_TYPE (parmn);\n     }\n \n@@ -584,10 +593,16 @@ expand_intrinsic_vastart (tree callexp)\n   /* The va_list argument should already have its address taken.  The second\n      argument, however, is inout and that needs to be fixed to prevent a\n      warning.  Could be casting, so need to check type too?  */\n-  gcc_assert (TREE_CODE (ap) == ADDR_EXPR && TREE_CODE (parmn) == ADDR_EXPR);\n+  gcc_assert (TREE_CODE (ap) == ADDR_EXPR\n+\t      || (TREE_CODE (ap) == PARM_DECL\n+\t\t  && POINTER_TYPE_P (TREE_TYPE (ap))));\n \n   /* Assuming nobody tries to change the return type.  */\n-  parmn = TREE_OPERAND (parmn, 0);\n+  if (TREE_CODE (parmn) != PARM_DECL)\n+    {\n+      gcc_assert (TREE_CODE (parmn) == ADDR_EXPR);\n+      parmn = TREE_OPERAND (parmn, 0);\n+    }\n \n   return call_builtin_fn (callexp, BUILT_IN_VA_START, 2, ap, parmn);\n }"}, {"sha": "d25bb5d3360a361097721fb20b5dc1926c3d7a5a", "filename": "gcc/testsuite/gdc.dg/pr96140.d", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfc420f8d4492dbf5f45df4fecf93cb9645c0d7b/gcc%2Ftestsuite%2Fgdc.dg%2Fpr96140.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfc420f8d4492dbf5f45df4fecf93cb9645c0d7b/gcc%2Ftestsuite%2Fgdc.dg%2Fpr96140.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fpr96140.d?ref=dfc420f8d4492dbf5f45df4fecf93cb9645c0d7b", "patch": "@@ -0,0 +1,15 @@\n+// https://gcc.gnu.org/bugzilla/show_bug.cgi?id=96140\n+// { dg-do compile }\n+module pr94140;\n+\n+import core.stdc.stdarg;\n+\n+void test_va_arg(ref int a, ...)\n+{\n+    return va_arg!int(_argptr, a);\n+}\n+\n+void test_va_start(ref va_list a, ...)\n+{\n+    return va_start(a, a);\n+}"}]}