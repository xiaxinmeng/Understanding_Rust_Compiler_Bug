{"sha": "8f048d2f21ea75e65fe9000cd9f7c1cfbbb7788a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGYwNDhkMmYyMWVhNzVlNjVmZTkwMDBjZDlmN2MxY2ZiYmI3Nzg4YQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2009-08-09T15:56:27Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2009-08-09T15:56:27Z"}, "message": "tree-out-of-ssa.c (insert_value_copy_on_edge): If the source and destination have different modes...\n\ngcc/\n\t* tree-out-of-ssa.c (insert_value_copy_on_edge): If the source\n\tand destination have different modes, Use promote_mode to\n\tdetermine the signedness of the conversion.  Assert that the\n\tpromoted source mode matches the destination mode.  Don't pass\n\tthe destination and destination mode to expand_expr if the source\n\tmode is different.  Simplify conversion logic.\n\nFrom-SVN: r150592", "tree": {"sha": "d0f4701d42c84b19ff0c5a464284103a2fec956b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0f4701d42c84b19ff0c5a464284103a2fec956b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f048d2f21ea75e65fe9000cd9f7c1cfbbb7788a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f048d2f21ea75e65fe9000cd9f7c1cfbbb7788a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f048d2f21ea75e65fe9000cd9f7c1cfbbb7788a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f048d2f21ea75e65fe9000cd9f7c1cfbbb7788a/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6f4454fcabc3449f787b86186accc9a64014242e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f4454fcabc3449f787b86186accc9a64014242e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f4454fcabc3449f787b86186accc9a64014242e"}], "stats": {"total": 36, "additions": 27, "deletions": 9}, "files": [{"sha": "0be934b5755dd3b487d981d40d151d3aac22de76", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f048d2f21ea75e65fe9000cd9f7c1cfbbb7788a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f048d2f21ea75e65fe9000cd9f7c1cfbbb7788a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f048d2f21ea75e65fe9000cd9f7c1cfbbb7788a", "patch": "@@ -1,3 +1,12 @@\n+2009-08-09  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* tree-out-of-ssa.c (insert_value_copy_on_edge): If the source\n+\tand destination have different modes, Use promote_mode to\n+\tdetermine the signedness of the conversion.  Assert that the\n+\tpromoted source mode matches the destination mode.  Don't pass\n+\tthe destination and destination mode to expand_expr if the source\n+\tmode is different.  Simplify conversion logic.\n+\n 2009-08-09  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/41008"}, {"sha": "c0826e704239cf9b6a64d46af12baa8beb2b51ec", "filename": "gcc/tree-outof-ssa.c", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f048d2f21ea75e65fe9000cd9f7c1cfbbb7788a/gcc%2Ftree-outof-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f048d2f21ea75e65fe9000cd9f7c1cfbbb7788a/gcc%2Ftree-outof-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-outof-ssa.c?ref=8f048d2f21ea75e65fe9000cd9f7c1cfbbb7788a", "patch": "@@ -195,7 +195,9 @@ static void\n insert_value_copy_on_edge (edge e, int dest, tree src, source_location locus)\n {\n   rtx seq, x;\n-  enum machine_mode mode;\n+  enum machine_mode dest_mode, src_mode;\n+  int unsignedp;\n+\n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n       fprintf (dump_file,\n@@ -214,14 +216,21 @@ insert_value_copy_on_edge (edge e, int dest, tree src, source_location locus)\n     set_curr_insn_source_location (locus);\n \n   start_sequence ();\n-  mode = GET_MODE (SA.partition_to_pseudo[dest]);\n-  x = expand_expr (src, SA.partition_to_pseudo[dest], mode, EXPAND_NORMAL);\n-  if (GET_MODE (x) != VOIDmode && GET_MODE (x) != mode)\n-    x = convert_to_mode (mode, x, TYPE_UNSIGNED (TREE_TYPE (src)));\n-  if (CONSTANT_P (x) && GET_MODE (x) == VOIDmode\n-      && mode != TYPE_MODE (TREE_TYPE (src)))\n-    x = convert_modes (mode, TYPE_MODE (TREE_TYPE (src)),\n-\t\t\t  x, TYPE_UNSIGNED (TREE_TYPE (src)));\n+\n+  src_mode = TYPE_MODE (TREE_TYPE (src));\n+  unsignedp = TYPE_UNSIGNED (TREE_TYPE (src));\n+  dest_mode = promote_mode (TREE_TYPE (src), src_mode, &unsignedp);\n+  gcc_assert (dest_mode == GET_MODE (SA.partition_to_pseudo[dest]));\n+\n+  if (src_mode != dest_mode)\n+    {\n+      x = expand_expr (src, NULL, src_mode, EXPAND_NORMAL);\n+      x = convert_modes (dest_mode, src_mode, x, unsignedp);\n+    }\n+  else\n+    x = expand_expr (src, SA.partition_to_pseudo[dest],\n+\t\t     dest_mode, EXPAND_NORMAL);\n+\n   if (x != SA.partition_to_pseudo[dest])\n     emit_move_insn (SA.partition_to_pseudo[dest], x);\n   seq = get_insns ();"}]}