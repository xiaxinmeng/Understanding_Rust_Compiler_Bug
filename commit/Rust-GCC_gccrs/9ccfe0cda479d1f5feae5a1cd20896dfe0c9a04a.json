{"sha": "9ccfe0cda479d1f5feae5a1cd20896dfe0c9a04a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNjZmUwY2RhNDc5ZDFmNWZlYWU1YTFjZDIwODk2ZGZlMGM5YTA0YQ==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2006-04-08T21:50:04Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2006-04-08T21:50:04Z"}, "message": "tree.h (tree_memory_tag): Add old_used_alone.\n\n2006-04-08  Daniel Berlin  <dberlin@dberlin.org>\n\n\t* tree.h (tree_memory_tag): Add old_used_alone.\n\t(SMT_OLD_USED_ALONE): New macro.\n\t* tree-ssa-alias.c (recalculate_used_alone): Stop\n\tmarking things for renaming unnecessarily.\n\nFrom-SVN: r112789", "tree": {"sha": "32fe72df7eca620b267dafba776d6c8ce0e1432a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32fe72df7eca620b267dafba776d6c8ce0e1432a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ccfe0cda479d1f5feae5a1cd20896dfe0c9a04a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ccfe0cda479d1f5feae5a1cd20896dfe0c9a04a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ccfe0cda479d1f5feae5a1cd20896dfe0c9a04a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ccfe0cda479d1f5feae5a1cd20896dfe0c9a04a/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e0f931d27f9e0b7daee2d05a89ccf99c814f0429", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0f931d27f9e0b7daee2d05a89ccf99c814f0429", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0f931d27f9e0b7daee2d05a89ccf99c814f0429"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "e344f9eff14876af2acd464761f184af51637ddb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccfe0cda479d1f5feae5a1cd20896dfe0c9a04a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccfe0cda479d1f5feae5a1cd20896dfe0c9a04a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ccfe0cda479d1f5feae5a1cd20896dfe0c9a04a", "patch": "@@ -1,3 +1,10 @@\n+2006-04-08  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\t* tree.h (tree_memory_tag): Add old_used_alone.\n+\t(SMT_OLD_USED_ALONE): New macro.\n+\t* tree-ssa-alias.c (recalculate_used_alone): Stop\n+\tmarking things for renaming unnecessarily.\n+\n 2006-04-08  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* builtins.c, config/arm/arm.c, config/i386/cygwin.h,"}, {"sha": "3ad4b0ffe1c0e8090e67eea5cfd614296a968646", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccfe0cda479d1f5feae5a1cd20896dfe0c9a04a/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccfe0cda479d1f5feae5a1cd20896dfe0c9a04a/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=9ccfe0cda479d1f5feae5a1cd20896dfe0c9a04a", "patch": "@@ -443,7 +443,10 @@ recalculate_used_alone (void)\n   updating_used_alone = true;\n   FOR_EACH_REFERENCED_VAR (var, rvi)\n     if (TREE_CODE (var) == SYMBOL_MEMORY_TAG)\n-      SMT_USED_ALONE (var) = 0;\n+      {\n+\tSMT_OLD_USED_ALONE (var) = SMT_USED_ALONE (var);\n+\tSMT_USED_ALONE (var) = 0;\n+      }\n \n   /* Walk all the statements.\n      Calls get put into a list of statements to update, since we will\n@@ -476,7 +479,11 @@ recalculate_used_alone (void)\n \t\t      if (!SMT_USED_ALONE (svar))\n \t\t\t{\n \t\t\t  SMT_USED_ALONE (svar) = true;\n-\t\t\t  mark_sym_for_renaming (svar);\n+\n+\t\t\t  /* Only need to mark for renaming if it wasn't\n+\t\t\t     used alone before.  */\n+\t\t\t  if (!SMT_OLD_USED_ALONE (svar))\n+\t\t\t    mark_sym_for_renaming (svar);\n \t\t\t}\n \t\t    }\n \t\t}"}, {"sha": "b3bc004f4c5a4eb5ef995cf595998721d00cdcce", "filename": "gcc/tree.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccfe0cda479d1f5feae5a1cd20896dfe0c9a04a/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccfe0cda479d1f5feae5a1cd20896dfe0c9a04a/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=9ccfe0cda479d1f5feae5a1cd20896dfe0c9a04a", "patch": "@@ -2312,6 +2312,7 @@ struct tree_memory_tag GTY(())\n   struct tree_decl_minimal common;\n   unsigned int is_global:1;\n   unsigned int is_used_alone:1;\n+  unsigned int old_used_alone:1;\n };\n \n #define MTAG_GLOBAL(NODE) (TREE_MEMORY_TAG_CHECK (NODE)->mtag.is_global)\n@@ -2321,6 +2322,11 @@ struct tree_memory_tag GTY(())\n    from it.  */\n #define SMT_USED_ALONE(NODE) (SYMBOL_MEMORY_TAG_CHECK (NODE)->mtag.is_used_alone)\n \n+/* This flag is used to temporarily store the old value of the used alone\n+   flag when updating so we know whether to mark the symbol for\n+   renaming.  */\n+#define SMT_OLD_USED_ALONE(NODE) (SYMBOL_MEMORY_TAG_CHECK (NODE)->mtag.old_used_alone)\n+\n struct tree_struct_field_tag GTY(())\n {\n   struct tree_memory_tag common;"}]}