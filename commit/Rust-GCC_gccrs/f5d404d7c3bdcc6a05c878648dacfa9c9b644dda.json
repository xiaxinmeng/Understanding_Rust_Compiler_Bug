{"sha": "f5d404d7c3bdcc6a05c878648dacfa9c9b644dda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVkNDA0ZDdjM2JkY2M2YTA1Yzg3ODY0OGRhY2ZhOWM5YjY0NGRkYQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-02-29T15:11:12Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-02-29T15:11:12Z"}, "message": "sibcall-3.c (recurser_void1): Make it an extern function with __attribute__((noinline)).\n\n\t* gcc.dg/sibcall-3.c (recurser_void1): Make it an extern\n\tfunction with __attribute__((noinline)).\n\t(recurser_void2): Likewise.\n\t* gcc.dg/sibcall-4.c (recurser_void1): Likewise.\n\t(recurser_void2): Likewise.\n\nFrom-SVN: r78652", "tree": {"sha": "3d2630820373cdb4023aa539c50bae4ab2a7627d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d2630820373cdb4023aa539c50bae4ab2a7627d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5d404d7c3bdcc6a05c878648dacfa9c9b644dda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5d404d7c3bdcc6a05c878648dacfa9c9b644dda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5d404d7c3bdcc6a05c878648dacfa9c9b644dda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5d404d7c3bdcc6a05c878648dacfa9c9b644dda/comments", "author": null, "committer": null, "parents": [{"sha": "b416fab4598c5fc880844ed5f8bb5e66a91eaede", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b416fab4598c5fc880844ed5f8bb5e66a91eaede", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b416fab4598c5fc880844ed5f8bb5e66a91eaede"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "c4efeb98385cdb3294f84154f80feef75337a405", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d404d7c3bdcc6a05c878648dacfa9c9b644dda/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d404d7c3bdcc6a05c878648dacfa9c9b644dda/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f5d404d7c3bdcc6a05c878648dacfa9c9b644dda", "patch": "@@ -1,3 +1,11 @@\n+2004-02-28  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* gcc.dg/sibcall-3.c (recurser_void1): Make it an extern\n+\tfunction with __attribute__((noinline)).\n+\t(recurser_void2): Likewise.\n+\t* gcc.dg/sibcall-4.c (recurser_void1): Likewise.\n+\t(recurser_void2): Likewise.\n+\n 2004-02-29  Roger Sayle  <roger@eyesopen.com>\n \n \tPR middle-end/14203"}, {"sha": "4806e15ee897e30d5c178f54b7f209ed01cacfa9", "filename": "gcc/testsuite/gcc.dg/sibcall-3.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d404d7c3bdcc6a05c878648dacfa9c9b644dda/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d404d7c3bdcc6a05c878648dacfa9c9b644dda/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-3.c?ref=f5d404d7c3bdcc6a05c878648dacfa9c9b644dda", "patch": "@@ -13,8 +13,8 @@\n    (except targets where the test does not work due to the return address\n    not saved on the regular stack).  */\n \n-static void recurser_void1 (int);\n-static void recurser_void2 (int);\n+extern void recurser_void1 (int);\n+extern void recurser_void2 (int);\n extern void track (int);\n \n int main ()\n@@ -27,7 +27,7 @@ int main ()\n    reasonably sure is to make them have the same contents (regarding the\n    n tests).  */\n \n-static void\n+void __attribute__((noinline))\n recurser_void1 (int n)\n {\n   if (n == 0 || n == 7 || n == 8)\n@@ -39,7 +39,7 @@ recurser_void1 (int n)\n   recurser_void2 (n + 1);\n }\n \n-static void\n+void __attribute__((noinline))\n recurser_void2 (int n)\n {\n   if (n == 0 || n == 7 || n == 8)"}, {"sha": "85b18a9e3108961f9bed773e6be0dda241f8ac96", "filename": "gcc/testsuite/gcc.dg/sibcall-4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d404d7c3bdcc6a05c878648dacfa9c9b644dda/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d404d7c3bdcc6a05c878648dacfa9c9b644dda/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-4.c?ref=f5d404d7c3bdcc6a05c878648dacfa9c9b644dda", "patch": "@@ -13,8 +13,8 @@\n    (except targets where the test does not work due to the return address\n    not saved on the regular stack).  */\n \n-static void recurser_void1 (void);\n-static void recurser_void2 (void);\n+extern void recurser_void1 (void);\n+extern void recurser_void2 (void);\n extern void track (void);\n \n int n = 0;\n@@ -28,7 +28,7 @@ int main ()\n    reasonably sure is to make them have the same contents (regarding the\n    n tests).  */\n \n-static void\n+void __attribute__((noinline))\n recurser_void1 (void)\n {\n   if (n == 0 || n == 7 || n == 8)\n@@ -40,7 +40,7 @@ recurser_void1 (void)\n   recurser_void2 ();\n }\n \n-static void\n+void __attribute__((noinline))\n recurser_void2 (void)\n {\n   if (n == 0 || n == 7 || n == 8)"}]}