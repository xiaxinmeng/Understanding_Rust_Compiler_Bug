{"sha": "0d504ef06b4137a6e24507273bb11ad35f475f37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ1MDRlZjA2YjQxMzdhNmUyNDUwNzI3M2JiMTFhZDM1ZjQ3NWYzNw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "1999-04-28T03:53:54Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "1999-04-28T03:53:54Z"}, "message": "cp-tree.h (build_component_addr): Remove prototype.\n\n\t* cp-tree.h (build_component_addr): Remove prototype.\n\t* typeck.c (build_component_addr): Make static. Remove MSG\n\targument.\n\t(build_component_addr): Remove MSG parameter, clean up\n\tcomment.\n\t(build_x_function_call): Use cp_error.\n\t(build_unary_op): Adjust call of build_component_addr.\n\nFrom-SVN: r26686", "tree": {"sha": "bf81dd20d7eafd1491deead8129bb8ed6a72b994", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf81dd20d7eafd1491deead8129bb8ed6a72b994"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d504ef06b4137a6e24507273bb11ad35f475f37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d504ef06b4137a6e24507273bb11ad35f475f37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d504ef06b4137a6e24507273bb11ad35f475f37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d504ef06b4137a6e24507273bb11ad35f475f37/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9dd2b100688cd52a0e6485f12646e2f2bc2ec04c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dd2b100688cd52a0e6485f12646e2f2bc2ec04c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dd2b100688cd52a0e6485f12646e2f2bc2ec04c"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "b8b3e5dd4f9ef80e854b7cbdf5f76a68ee7e3e5d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d504ef06b4137a6e24507273bb11ad35f475f37/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d504ef06b4137a6e24507273bb11ad35f475f37/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0d504ef06b4137a6e24507273bb11ad35f475f37", "patch": "@@ -1,3 +1,13 @@\n+1999-04-28  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* cp-tree.h (build_component_addr): Remove prototype.\n+\t* typeck.c (build_component_addr): Make static. Remove MSG\n+\targument.\n+\t(build_component_addr): Remove MSG parameter, clean up\n+\tcomment.\n+\t(build_x_function_call): Use cp_error.\n+\t(build_unary_op): Adjust call of build_component_addr.\n+\t\n Wed Apr 28 11:42:22 1999  Andreas Schwab  <schwab@issan.cs.uni-dortmund.de>\n \n \t* search.c (binfo_for_vtable): Initialize bfvi.var."}, {"sha": "eb0411c457561a01270e363c43d9feefca663c7c", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d504ef06b4137a6e24507273bb11ad35f475f37/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d504ef06b4137a6e24507273bb11ad35f475f37/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=0d504ef06b4137a6e24507273bb11ad35f475f37", "patch": "@@ -3441,7 +3441,6 @@ extern tree convert_arguments\t\t\tPROTO((tree, tree, tree, int));\n extern tree build_x_binary_op\t\t\tPROTO((enum tree_code, tree, tree));\n extern tree build_binary_op\t\t\tPROTO((enum tree_code, tree, tree));\n extern tree build_binary_op_nodefault\t\tPROTO((enum tree_code, tree, tree, enum tree_code));\n-extern tree build_component_addr\t\tPROTO((tree, tree, const char *));\n extern tree build_x_unary_op\t\t\tPROTO((enum tree_code, tree));\n extern tree build_unary_op\t\t\tPROTO((enum tree_code, tree, int));\n extern tree unary_complex_lvalue\t\tPROTO((enum tree_code, tree));"}, {"sha": "c64d72c317ed1fbd4e922e5872292fdd956ade74", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d504ef06b4137a6e24507273bb11ad35f475f37/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d504ef06b4137a6e24507273bb11ad35f475f37/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=0d504ef06b4137a6e24507273bb11ad35f475f37", "patch": "@@ -55,6 +55,7 @@ static tree convert_sequence PROTO((tree, tree));\n #endif\n static tree lookup_anon_field PROTO((tree, tree));\n static tree pointer_diff PROTO((tree, tree, tree));\n+static tree build_component_addr PROTO((tree, tree));\n static tree qualify_type PROTO((tree, tree));\n static tree get_delta_difference PROTO((tree, tree, int));\n static int comp_cv_target_types PROTO((tree, tree, int));\n@@ -2687,8 +2688,7 @@ build_x_function_call (function, params, decl)\n \t{\n \t  if (current_class_type == NULL_TREE)\n \t    {\n-\t      error (\"object missing in call to method `%s'\",\n-\t\t     IDENTIFIER_POINTER (function));\n+\t      cp_error (\"object missing in call to method `%D'\", function);\n \t      return error_mark_node;\n \t    }\n \t  /* Yow: call from a static member function.  */\n@@ -4244,17 +4244,14 @@ pointer_diff (op0, op1, ptrtype)\n }\n \f\n /* Handle the case of taking the address of a COMPONENT_REF.\n-   Called by `build_unary_op' and `build_up_reference'.\n+   Called by `build_unary_op'.\n \n    ARG is the COMPONENT_REF whose address we want.\n-   ARGTYPE is the pointer type that this address should have.\n-   MSG is an error message to print if this COMPONENT_REF is not\n-   addressable (such as a bitfield).  */\n+   ARGTYPE is the pointer type that this address should have. */\n \n-tree\n-build_component_addr (arg, argtype, msg)\n+static tree\n+build_component_addr (arg, argtype)\n      tree arg, argtype;\n-     const char *msg;\n {\n   tree field = TREE_OPERAND (arg, 1);\n   tree basetype = decl_type_context (field);\n@@ -4264,7 +4261,8 @@ build_component_addr (arg, argtype, msg)\n \n   if (DECL_C_BIT_FIELD (field))\n     {\n-      error (msg, IDENTIFIER_POINTER (DECL_NAME (field)));\n+      cp_error (\"attempt to take address of bit-field structure member `%D'\",\n+                field);\n       return error_mark_node;\n     }\n \n@@ -4749,9 +4747,7 @@ build_unary_op (code, xarg, noconvert)\n \ttree addr;\n \n \tif (TREE_CODE (arg) == COMPONENT_REF)\n-\t  addr = build_component_addr\n-\t    (arg, argtype,\n-\t     \"attempt to take address of bit-field structure member `%s'\");\n+\t  addr = build_component_addr (arg, argtype);\n \telse\n \t  addr = build1 (ADDR_EXPR, argtype, arg);\n "}]}