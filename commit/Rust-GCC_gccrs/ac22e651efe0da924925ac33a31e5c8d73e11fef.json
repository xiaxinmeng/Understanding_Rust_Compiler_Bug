{"sha": "ac22e651efe0da924925ac33a31e5c8d73e11fef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWMyMmU2NTFlZmUwZGE5MjQ5MjVhYzMzYTMxZTVjOGQ3M2UxMWZlZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-06-09T14:00:43Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-06-09T14:02:09Z"}, "message": "Remove dead code\n\nThis removes dead code that was left over from the reduction\nvectorization refactoring last year.\n\n2020-06-09  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-stmts.c (vect_transform_stmt): Remove dead code.", "tree": {"sha": "e89dd5a3549313d5313c090f4b7fc98aefa4311e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e89dd5a3549313d5313c090f4b7fc98aefa4311e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac22e651efe0da924925ac33a31e5c8d73e11fef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac22e651efe0da924925ac33a31e5c8d73e11fef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac22e651efe0da924925ac33a31e5c8d73e11fef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac22e651efe0da924925ac33a31e5c8d73e11fef/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e12516e140a4e6aa75d886b165d959991e3350c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e12516e140a4e6aa75d886b165d959991e3350c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e12516e140a4e6aa75d886b165d959991e3350c3"}], "stats": {"total": 43, "additions": 0, "deletions": 43}, "files": [{"sha": "61adf7d7fa43799657f4a6ff37d159d886f35ec5", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac22e651efe0da924925ac33a31e5c8d73e11fef/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac22e651efe0da924925ac33a31e5c8d73e11fef/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=ac22e651efe0da924925ac33a31e5c8d73e11fef", "patch": "@@ -11186,12 +11186,6 @@ vect_transform_stmt (vec_info *vinfo,\n   gcc_assert (slp_node || !PURE_SLP_STMT (stmt_info));\n   stmt_vec_info old_vec_stmt_info = STMT_VINFO_VEC_STMT (stmt_info);\n \n-  loop_vec_info loop_vinfo = dyn_cast <loop_vec_info> (vinfo);\n-  bool nested_p = (loop_vinfo\n-\t\t   && nested_in_vect_loop_p\n-\t\t\t(LOOP_VINFO_LOOP (loop_vinfo), stmt_info));\n-\n-  gimple *stmt = stmt_info->stmt;\n   switch (STMT_VINFO_TYPE (stmt_info))\n     {\n     case type_demotion_vec_info_type:\n@@ -11266,13 +11260,11 @@ vect_transform_stmt (vec_info *vinfo,\n     case call_vec_info_type:\n       done = vectorizable_call (vinfo, stmt_info,\n \t\t\t\tgsi, &vec_stmt, slp_node, NULL);\n-      stmt = gsi_stmt (*gsi);\n       break;\n \n     case call_simd_clone_vec_info_type:\n       done = vectorizable_simd_clone_call (vinfo, stmt_info, gsi, &vec_stmt,\n \t\t\t\t\t   slp_node, NULL);\n-      stmt = gsi_stmt (*gsi);\n       break;\n \n     case reduc_vec_info_type:\n@@ -11310,41 +11302,6 @@ vect_transform_stmt (vec_info *vinfo,\n     gcc_assert (!vec_stmt\n \t\t&& STMT_VINFO_VEC_STMT (stmt_info) == old_vec_stmt_info);\n \n-  /* Handle inner-loop stmts whose DEF is used in the loop-nest that\n-     is being vectorized, but outside the immediately enclosing loop.  */\n-  if (vec_stmt\n-      && nested_p\n-      && STMT_VINFO_TYPE (stmt_info) != reduc_vec_info_type\n-      && (STMT_VINFO_RELEVANT (stmt_info) == vect_used_in_outer\n-          || STMT_VINFO_RELEVANT (stmt_info) ==\n-                                           vect_used_in_outer_by_reduction))\n-    {\n-      class loop *innerloop = LOOP_VINFO_LOOP (loop_vinfo)->inner;\n-      imm_use_iterator imm_iter;\n-      use_operand_p use_p;\n-      tree scalar_dest;\n-\n-      if (dump_enabled_p ())\n-        dump_printf_loc (MSG_NOTE, vect_location,\n-                         \"Record the vdef for outer-loop vectorization.\\n\");\n-\n-      /* Find the relevant loop-exit phi-node, and reord the vec_stmt there\n-        (to be used when vectorizing outer-loop stmts that use the DEF of\n-        STMT).  */\n-      if (gimple_code (stmt) == GIMPLE_PHI)\n-        scalar_dest = PHI_RESULT (stmt);\n-      else\n-        scalar_dest = gimple_get_lhs (stmt);\n-\n-      FOR_EACH_IMM_USE_FAST (use_p, imm_iter, scalar_dest)\n-\tif (!flow_bb_inside_loop_p (innerloop, gimple_bb (USE_STMT (use_p))))\n-\t  {\n-\t    stmt_vec_info exit_phi_info\n-\t      = vinfo->lookup_stmt (USE_STMT (use_p));\n-\t    STMT_VINFO_VEC_STMT (exit_phi_info) = vec_stmt;\n-\t  }\n-    }\n-\n   if (vec_stmt)\n     STMT_VINFO_VEC_STMT (stmt_info) = vec_stmt;\n "}]}