{"sha": "f1a2b9559f41a54c52fff5e1f3b98c85c5a1b3dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFhMmI5NTU5ZjQxYTU0YzUyZmZmNWUxZjNiOThjODVjNWExYjNkZA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-11T03:04:15Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-11T03:04:15Z"}, "message": "(start_init): Don't set require_constant_elements for scalar types.\n\n(convert_for_assignment): Allow silent conversion to\na pointer from an integer 0 that resulted from arithmetic.\n\nFrom-SVN: r5724", "tree": {"sha": "ff4aa76950b231fbb9a31e7a37c3ddfed7de9c45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff4aa76950b231fbb9a31e7a37c3ddfed7de9c45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1a2b9559f41a54c52fff5e1f3b98c85c5a1b3dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1a2b9559f41a54c52fff5e1f3b98c85c5a1b3dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1a2b9559f41a54c52fff5e1f3b98c85c5a1b3dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1a2b9559f41a54c52fff5e1f3b98c85c5a1b3dd/comments", "author": null, "committer": null, "parents": [{"sha": "ecbc46954235fb3cc8814f02cc65ed6b34988e8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecbc46954235fb3cc8814f02cc65ed6b34988e8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecbc46954235fb3cc8814f02cc65ed6b34988e8a"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "d201d3bf41b0f26ec01da8cd8fe9487b1272d3fa", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a2b9559f41a54c52fff5e1f3b98c85c5a1b3dd/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a2b9559f41a54c52fff5e1f3b98c85c5a1b3dd/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=f1a2b9559f41a54c52fff5e1f3b98c85c5a1b3dd", "patch": "@@ -3918,8 +3918,14 @@ convert_for_assignment (type, rhs, errtype, fundecl, funname, parmnum)\n   else if (codel == POINTER_TYPE && coder == INTEGER_TYPE)\n     {\n       /* An explicit constant 0 can convert to a pointer,\n-\t but not a 0 that results from casting or folding.  */\n-      if (! (TREE_CODE (rhs) == INTEGER_CST && integer_zerop (rhs)))\n+\t or one that results from arithmetic, even including\n+\t a cast to integer type.  */\n+      if (! (TREE_CODE (rhs) == INTEGER_CST && integer_zerop (rhs))\n+\t  &&\n+\t  ! (TREE_CODE (rhs) == NOP_EXPR\n+\t     && TREE_CODE (TREE_TYPE (rhs)) == INTEGER_TYPE\n+\t     && TREE_CODE (TREE_OPERAND (rhs, 0)) == INTEGER_CST\n+\t     && integer_zerop (TREE_OPERAND (rhs, 0))))\n \t{\n \t  warn_for_assignment (\"%s makes pointer from integer without a cast\",\n \t\t\t       get_spelling (errtype), funname, parmnum);\n@@ -4792,7 +4798,14 @@ start_init (decl, asmspec_tree, top_level)\n   if (decl != 0)\n     {\n       require_constant_value = TREE_STATIC (decl);\n-      require_constant_elements = TREE_STATIC (decl) || pedantic;\n+      require_constant_elements\n+\t= ((TREE_STATIC (decl) || pedantic)\n+\t   /* For a scalar, you can always use any value to initialize,\n+\t      even within braces.  */\n+\t   && (TREE_CODE (TREE_TYPE (decl)) == ARRAY_TYPE\n+\t       || TREE_CODE (TREE_TYPE (decl)) == RECORD_TYPE\n+\t       || TREE_CODE (TREE_TYPE (decl)) == UNION_TYPE\n+\t       || TREE_CODE (TREE_TYPE (decl)) == QUAL_UNION_TYPE));\n       locus = IDENTIFIER_POINTER (DECL_NAME (decl));\n       constructor_incremental |= TREE_STATIC (decl);\n     }"}]}