{"sha": "f211daa3d5fe727ad5efbf7dbc107123eaf68eb0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjIxMWRhYTNkNWZlNzI3YWQ1ZWZiZjdkYmMxMDcxMjNlYWY2OGViMA==", "commit": {"author": {"name": "Max Filippov", "email": "jcmvbkbc@gmail.com", "date": "2014-10-15T04:20:03Z"}, "committer": {"name": "Max Filippov", "email": "jcmvbkbc@gcc.gnu.org", "date": "2014-10-15T04:20:03Z"}, "message": "xtensa: use pre- and postincrement FP load/store when available\n\nEarlier versions of xtensa FPU used to support preincrement FP load and\nstore instructions (lsiu/ssiu). Recent FPU supports postincrement FP\nload and store instructions only (lsip/ssip). Use configuration macro to\ndecide which version is available.\n\n2014-10-14  Max Filippov  <jcmvbkbc@gmail.com>\n\ngcc/\n    * config/xtensa/xtensa.h (TARGET_HARD_FLOAT_POSTINC): new macro.\n    * config/xtensa/xtensa.md (*lsiu, *ssiu): add dependency on\n    !TARGET_HARD_FLOAT_POSTINC.\n    (*lsip, *ssip): new instructions.\n\nFrom-SVN: r216234", "tree": {"sha": "3c61f261281ee6b510b3561d91c8e41e0cb81d6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c61f261281ee6b510b3561d91c8e41e0cb81d6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f211daa3d5fe727ad5efbf7dbc107123eaf68eb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f211daa3d5fe727ad5efbf7dbc107123eaf68eb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f211daa3d5fe727ad5efbf7dbc107123eaf68eb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f211daa3d5fe727ad5efbf7dbc107123eaf68eb0/comments", "author": {"login": "jcmvbkbc", "id": 166731, "node_id": "MDQ6VXNlcjE2NjczMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmvbkbc", "html_url": "https://github.com/jcmvbkbc", "followers_url": "https://api.github.com/users/jcmvbkbc/followers", "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}", "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions", "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs", "repos_url": "https://api.github.com/users/jcmvbkbc/repos", "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cf14ea9fe3ae00ccaf543963c426da7ba3368246", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf14ea9fe3ae00ccaf543963c426da7ba3368246", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf14ea9fe3ae00ccaf543963c426da7ba3368246"}], "stats": {"total": 47, "additions": 45, "deletions": 2}, "files": [{"sha": "8aa1f9d4d9726f16838d907b2f61a12d1df82067", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f211daa3d5fe727ad5efbf7dbc107123eaf68eb0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f211daa3d5fe727ad5efbf7dbc107123eaf68eb0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f211daa3d5fe727ad5efbf7dbc107123eaf68eb0", "patch": "@@ -1,3 +1,10 @@\n+2014-10-14  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\t* config/xtensa/xtensa.h (TARGET_HARD_FLOAT_POSTINC): new macro.\n+\t* config/xtensa/xtensa.md (*lsiu, *ssiu): add dependency on\n+\t!TARGET_HARD_FLOAT_POSTINC.\n+\t(*lsip, *ssip): new instructions.\n+\n 2014-10-14  Max Filippov  <jcmvbkbc@gmail.com>\n \n \t* config/xtensa/xtensa.md (divsf3, *recipsf2, sqrtsf2, *rsqrtsf2):"}, {"sha": "54bfea44ce630fd76ca86286d69936d6af9f3b6a", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f211daa3d5fe727ad5efbf7dbc107123eaf68eb0/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f211daa3d5fe727ad5efbf7dbc107123eaf68eb0/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=f211daa3d5fe727ad5efbf7dbc107123eaf68eb0", "patch": "@@ -39,6 +39,9 @@ extern unsigned xtensa_current_frame_size;\n #ifndef XCHAL_HAVE_THREADPTR\n #define XCHAL_HAVE_THREADPTR 0\n #endif\n+#ifndef XCHAL_HAVE_FP_POSTINC\n+#define XCHAL_HAVE_FP_POSTINC 0\n+#endif\n #define TARGET_BIG_ENDIAN\tXCHAL_HAVE_BE\n #define TARGET_DENSITY\t\tXCHAL_HAVE_DENSITY\n #define TARGET_MAC16\t\tXCHAL_HAVE_MAC16\n@@ -55,6 +58,7 @@ extern unsigned xtensa_current_frame_size;\n #define TARGET_HARD_FLOAT_RECIP\tXCHAL_HAVE_FP_RECIP\n #define TARGET_HARD_FLOAT_SQRT\tXCHAL_HAVE_FP_SQRT\n #define TARGET_HARD_FLOAT_RSQRT\tXCHAL_HAVE_FP_RSQRT\n+#define TARGET_HARD_FLOAT_POSTINC XCHAL_HAVE_FP_POSTINC\n #define TARGET_ABS\t\tXCHAL_HAVE_ABS\n #define TARGET_ADDX\t\tXCHAL_HAVE_ADDX\n #define TARGET_RELEASE_SYNC\tXCHAL_HAVE_RELEASE_SYNC"}, {"sha": "b8acebb7218c9d37e3012919fa6dfe1f2415b6ac", "filename": "gcc/config/xtensa/xtensa.md", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f211daa3d5fe727ad5efbf7dbc107123eaf68eb0/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f211daa3d5fe727ad5efbf7dbc107123eaf68eb0/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.md?ref=f211daa3d5fe727ad5efbf7dbc107123eaf68eb0", "patch": "@@ -922,7 +922,7 @@\n \t\t\t (match_operand:SI 2 \"fpmem_offset_operand\" \"i\"))))\n    (set (match_dup 1)\n \t(plus:SI (match_dup 1) (match_dup 2)))]\n-  \"TARGET_HARD_FLOAT\"\n+  \"TARGET_HARD_FLOAT && !TARGET_HARD_FLOAT_POSTINC\"\n {\n   if (TARGET_SERIALIZE_VOLATILE && volatile_refs_p (PATTERN (insn)))\n     output_asm_insn (\"memw\", operands);\n@@ -938,7 +938,7 @@\n \t(match_operand:SF 2 \"register_operand\" \"f\"))\n    (set (match_dup 0)\n \t(plus:SI (match_dup 0) (match_dup 1)))]\n-  \"TARGET_HARD_FLOAT\"\n+  \"TARGET_HARD_FLOAT && !TARGET_HARD_FLOAT_POSTINC\"\n {\n   if (TARGET_SERIALIZE_VOLATILE && volatile_refs_p (PATTERN (insn)))\n     output_asm_insn (\"memw\", operands);\n@@ -948,6 +948,38 @@\n    (set_attr \"mode\"\t\"SF\")\n    (set_attr \"length\"\t\"3\")])\n \n+(define_insn \"*lsip\"\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n+\t(mem:SF (match_operand:SI 1 \"register_operand\" \"+a\")))\n+   (set (match_dup 1)\n+\t(plus:SI (match_dup 1)\n+\t\t (match_operand:SI 2 \"fpmem_offset_operand\" \"i\")))]\n+  \"TARGET_HARD_FLOAT && TARGET_HARD_FLOAT_POSTINC\"\n+{\n+  if (TARGET_SERIALIZE_VOLATILE && volatile_refs_p (PATTERN (insn)))\n+    output_asm_insn (\"memw\", operands);\n+  return \"lsip\\t%0, %1, %2\";\n+}\n+  [(set_attr \"type\"\t\"fload\")\n+   (set_attr \"mode\"\t\"SF\")\n+   (set_attr \"length\"\t\"3\")])\n+\n+(define_insn \"*ssip\"\n+  [(set (mem:SF (match_operand:SI 0 \"register_operand\" \"+a\"))\n+\t(match_operand:SF 1 \"register_operand\" \"f\"))\n+   (set (match_dup 0)\n+\t(plus:SI (match_dup 0)\n+\t\t (match_operand:SI 2 \"fpmem_offset_operand\" \"i\")))]\n+  \"TARGET_HARD_FLOAT && TARGET_HARD_FLOAT_POSTINC\"\n+{\n+  if (TARGET_SERIALIZE_VOLATILE && volatile_refs_p (PATTERN (insn)))\n+    output_asm_insn (\"memw\", operands);\n+  return \"ssip\\t%1, %0, %2\";\n+}\n+  [(set_attr \"type\"\t\"fstore\")\n+   (set_attr \"mode\"\t\"SF\")\n+   (set_attr \"length\"\t\"3\")])\n+\n ;; 64-bit floating point moves\n \n (define_expand \"movdf\""}]}