{"sha": "336fdc8ba88cf617d76d1764df033cbf972904dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM2ZmRjOGJhODhjZjYxN2Q3NmQxNzY0ZGYwMzNjYmY5NzI5MDRkZA==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-10-03T13:34:27Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-10-11T12:56:25Z"}, "message": "Darwin, Objective-C : Update meta-data linkage.\n\nNewer versions of ld64 require that some meta-data symbols are\nglobal, and that a larger set are linker-visible.\n\ngcc/ChangeLog:\n\n\t* config/darwin.c (darwin_globalize_label): Add protocol\n\tmeta-data labels to the set that are global.\n\t(darwin_label_is_anonymous_local_objc_name): Arrange for meta-\n\tdata start labels to be linker-visible.", "tree": {"sha": "5b4f80a7829d805041b9a9f29b2d140cf4436eaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b4f80a7829d805041b9a9f29b2d140cf4436eaa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/336fdc8ba88cf617d76d1764df033cbf972904dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/336fdc8ba88cf617d76d1764df033cbf972904dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/336fdc8ba88cf617d76d1764df033cbf972904dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/336fdc8ba88cf617d76d1764df033cbf972904dd/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ba0afac60e80851c01541364d8991667809cec0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ba0afac60e80851c01541364d8991667809cec0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ba0afac60e80851c01541364d8991667809cec0"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "33c6ce42c1b606065d392745b1b18c201d0c6447", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 42, "deletions": 1, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/336fdc8ba88cf617d76d1764df033cbf972904dd/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/336fdc8ba88cf617d76d1764df033cbf972904dd/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=336fdc8ba88cf617d76d1764df033cbf972904dd", "patch": "@@ -1876,6 +1876,11 @@ darwin_globalize_label (FILE *stream, const char *name)\n {\n   if (!!strncmp (name, \"_OBJC_\", 6))\n     default_globalize_label (stream, name);\n+  /* We have some Objective C cases that need to be global.  */\n+  if (!strncmp (name+6, \"LabelPro\", 8))\n+    default_globalize_label (stream, name);\n+  if (!strncmp (name+6, \"Protocol_\", 9))\n+    default_globalize_label (stream, name);\n }\n \n /* This routine returns non-zero if 'name' starts with the special objective-c\n@@ -1894,7 +1899,43 @@ darwin_label_is_anonymous_local_objc_name (const char *name)\n     while (*p >= '0' && *p <= '9')\n       p++;\n   }\n-  return (!strncmp ((const char *)p, \"_OBJC_\", 6));\n+  if (strncmp ((const char *)p, \"_OBJC_\", 6) != 0)\n+    return false;\n+  /* We need some of the objective c meta-data symbols to be visible to the\n+     linker.  FIXME: this is horrible, we need a better mechanism.  */\n+  p += 6;\n+  if (!strncmp ((const char *)p, \"ClassRef\", 8))\n+    return false;\n+  else if (!strncmp ((const char *)p, \"SelRef\", 6))\n+    return false;\n+  else if (!strncmp ((const char *)p, \"Category\", 8))\n+    {\n+      if (p[8] == '_' || p[8] == 'I' || p[8] == 'P' || p[8] == 'C' )\n+\treturn false;\n+      return true;\n+    }\n+  else if (!strncmp ((const char *)p, \"ClassMethods\", 12))\n+    return false;\n+  else if (!strncmp ((const char *)p, \"Instance\", 8))\n+    {\n+      if (p[8] == 'I' || p[8] == 'M')\n+\treturn false;\n+      return true;\n+    }\n+  else if (!strncmp ((const char *)p, \"CLASS_RO\", 8))\n+    return false;\n+  else if (!strncmp ((const char *)p, \"METACLASS_RO\", 12))\n+    return false;\n+  else if (!strncmp ((const char *)p, \"Protocol\", 8))\n+    {\n+      if (p[8] == '_' || p[8] == 'I' || p[8] == 'P'\n+\t  || p[8] == 'M' || p[8] == 'C' || p[8] == 'O')\n+\treturn false;\n+      return true;\n+    }\n+  else if (!strncmp ((const char *)p, \"LabelPro\", 8))\n+    return false;\n+  return true;\n }\n \n /* LTO support for Mach-O."}]}