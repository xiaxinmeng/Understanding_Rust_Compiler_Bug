{"sha": "803fee6995dd78d07f34d6291fd45cdd9972e6a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAzZmVlNjk5NWRkNzhkMDdmMzRkNjI5MWZkNDVjZGQ5OTcyZTZhOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-06-28T18:23:12Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-06-28T18:23:12Z"}, "message": "({MASK,TARGET}_BUILD_CONSTANTS): New macros.\n\n(TARGET_SWITCHES): New target option build-constants.\n\nFrom-SVN: r12359", "tree": {"sha": "aa4fee672e0102732e89f7e584fa3eb98a3244dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa4fee672e0102732e89f7e584fa3eb98a3244dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/803fee6995dd78d07f34d6291fd45cdd9972e6a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/803fee6995dd78d07f34d6291fd45cdd9972e6a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/803fee6995dd78d07f34d6291fd45cdd9972e6a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/803fee6995dd78d07f34d6291fd45cdd9972e6a8/comments", "author": null, "committer": null, "parents": [{"sha": "97aea203f2923d50b97d12b14fca52e8375453c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97aea203f2923d50b97d12b14fca52e8375453c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97aea203f2923d50b97d12b14fca52e8375453c3"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "1778a8e2c77241d8c185dcc6bde6be74101830aa", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/803fee6995dd78d07f34d6291fd45cdd9972e6a8/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/803fee6995dd78d07f34d6291fd45cdd9972e6a8/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=803fee6995dd78d07f34d6291fd45cdd9972e6a8", "patch": "@@ -147,9 +147,16 @@ extern enum alpha_fp_trap_mode alpha_fptm;\n #define TARGET_IEEE_WITH_INEXACT (target_flags & MASK_IEEE_WITH_INEXACT)\n \n /* This means we are compiling for Windows NT.  */\n+\n #define MASK_WINDOWS_NT\t64\n #define TARGET_WINDOWS_NT (target_flags & MASK_WINDOWS_NT)\n \n+/* This means we must construct all constants rather than emitting\n+   them as literal data.  */\n+\n+#define MASK_BUILD_CONSTANTS 128\n+#define TARGET_BUILD_CONSTANTS (target_flags & MASK_BUILD_CONSTANTS)\n+\n /* Macro to define tables used to set the flags.\n    This is a list in braces of pairs in braces,\n    each pair being { \"NAME\", VALUE }\n@@ -166,6 +173,7 @@ extern enum alpha_fp_trap_mode alpha_fptm;\n     {\"ieee-conformant\", MASK_IEEE_CONFORMANT},\t\\\n     {\"ieee\", MASK_IEEE|MASK_IEEE_CONFORMANT},\t\\\n     {\"ieee-with-inexact\", MASK_IEEE_WITH_INEXACT|MASK_IEEE_CONFORMANT}, \\\n+    {\"build-constants\", MASK_BUILD_CONSTANTS},  \\\n     {\"\", TARGET_DEFAULT | TARGET_CPU_DEFAULT} }\n \n #define TARGET_DEFAULT MASK_FP|MASK_FPREGS\n@@ -999,7 +1007,7 @@ enum reg_class { NO_REGS, GENERAL_REGS, FLOAT_REGS, ALL_REGS,\n    emitted.  If it would take more than N insns, zero is returned and no\n    insns and emitted.  */\n extern struct rtx_def *alpha_emit_set_const ();\n-\n+extern struct rtx_def *alpha_emit_set_long_const ();\n extern struct rtx_def *alpha_emit_conditional_move ();\n \n /* Generate necessary RTL for __builtin_saveregs()."}]}