{"sha": "a87819b8f1b890d36a3f05bd9de80be20e9525dd", "node_id": "C_kwDOANBUbNoAKGE4NzgxOWI4ZjFiODkwZDM2YTNmMDViZDlkZTgwYmUyMGU5NTI1ZGQ", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-10-25T19:16:47Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-10-26T13:48:45Z"}, "message": "Check if varying may also be non-negative.\n\nWhen using strict enums, we can sometimes turn varying into a better\nrange.\n\n\t* gimple-range-fold.cc (fold_using_range::fold_stmt): Check if\n\tstmt is non-negative and adjust the range.", "tree": {"sha": "34787747aca52bd9c39801b8dc0b2c50f978e134", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34787747aca52bd9c39801b8dc0b2c50f978e134"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a87819b8f1b890d36a3f05bd9de80be20e9525dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a87819b8f1b890d36a3f05bd9de80be20e9525dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a87819b8f1b890d36a3f05bd9de80be20e9525dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a87819b8f1b890d36a3f05bd9de80be20e9525dd/comments", "author": null, "committer": null, "parents": [{"sha": "d80b7744c6ae6f6d8ca1f56982a50d1888b8279f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d80b7744c6ae6f6d8ca1f56982a50d1888b8279f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d80b7744c6ae6f6d8ca1f56982a50d1888b8279f"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "a899d8260b3d0834ebece5047df2286b3c351197", "filename": "gcc/gimple-range-fold.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a87819b8f1b890d36a3f05bd9de80be20e9525dd/gcc%2Fgimple-range-fold.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a87819b8f1b890d36a3f05bd9de80be20e9525dd/gcc%2Fgimple-range-fold.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-fold.cc?ref=a87819b8f1b890d36a3f05bd9de80be20e9525dd", "patch": "@@ -494,6 +494,14 @@ fold_using_range::fold_stmt (vrange &r, gimple *s, fur_source &src, tree name)\n   else if (is_a<gassign *> (s) && gimple_assign_rhs_code (s) == COND_EXPR)\n     res = range_of_cond_expr (r, as_a<gassign *> (s), src);\n \n+  // If the result is varying, check for basic nonnegativeness.\n+  // Specifically this helps for now with strict enum in cases like\n+  // g++.dg/warn/pr33738.C.\n+  bool so_p;\n+  if (res && r.varying_p () && INTEGRAL_TYPE_P (r.type ())\n+      && gimple_stmt_nonnegative_warnv_p (s, &so_p))\n+    r.set_nonnegative (r.type ());\n+\n   if (!res)\n     {\n       // If no name specified or range is unsupported, bail."}]}