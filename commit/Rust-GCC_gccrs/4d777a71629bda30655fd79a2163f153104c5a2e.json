{"sha": "4d777a71629bda30655fd79a2163f153104c5a2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ3NzdhNzE2MjliZGEzMDY1NWZkNzlhMjE2M2YxNTMxMDRjNWEyZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-18T13:08:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-18T13:08:10Z"}, "message": "[multiple changes]\n\n2010-06-18  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_eval.adb (Eval_Conditional_Expression): Result is static if\n\tcondition and both sub-expressions are static (and result is selected\n\texpression).\n\n2010-06-18  Robert Dewar  <dewar@adacore.com>\n\n\t* g-pehage.adb: Minor reformatting\n\n2010-06-18  Pascal Obry  <obry@adacore.com>\n\n\t* prj-nmsc.adb (Search_Directories): Insert canonical filenames into\n\tsource hash table.\n\nFrom-SVN: r160988", "tree": {"sha": "da95480f46e19e23308bfee58ded17c3a9de0b42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da95480f46e19e23308bfee58ded17c3a9de0b42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d777a71629bda30655fd79a2163f153104c5a2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d777a71629bda30655fd79a2163f153104c5a2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d777a71629bda30655fd79a2163f153104c5a2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d777a71629bda30655fd79a2163f153104c5a2e/comments", "author": null, "committer": null, "parents": [{"sha": "90d28ec7acb1b585938462df0570a2c731983a31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90d28ec7acb1b585938462df0570a2c731983a31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90d28ec7acb1b585938462df0570a2c731983a31"}], "stats": {"total": 163, "additions": 127, "deletions": 36}, "files": [{"sha": "61619ff48a5d9d5107a39f7f7b157063526484a1", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d777a71629bda30655fd79a2163f153104c5a2e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d777a71629bda30655fd79a2163f153104c5a2e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4d777a71629bda30655fd79a2163f153104c5a2e", "patch": "@@ -1,3 +1,18 @@\n+2010-06-18  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_eval.adb (Eval_Conditional_Expression): Result is static if\n+\tcondition and both sub-expressions are static (and result is selected\n+\texpression).\n+\n+2010-06-18  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-pehage.adb: Minor reformatting\n+\n+2010-06-18  Pascal Obry  <obry@adacore.com>\n+\n+\t* prj-nmsc.adb (Search_Directories): Insert canonical filenames into\n+\tsource hash table.\n+\n 2010-06-18  Arnaud Charlet  <charlet@adacore.com>\n \n \t* gcc-interface/Makefile.in, gcc-interface/Make-lang.in: Update"}, {"sha": "71629a056b817587a286326f4bdff8205ff28dee", "filename": "gcc/ada/g-pehage.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d777a71629bda30655fd79a2163f153104c5a2e/gcc%2Fada%2Fg-pehage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d777a71629bda30655fd79a2163f153104c5a2e/gcc%2Fada%2Fg-pehage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-pehage.adb?ref=4d777a71629bda30655fd79a2163f153104c5a2e", "patch": "@@ -31,7 +31,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Ada.IO_Exceptions; use Ada.IO_Exceptions;\n+with Ada.IO_Exceptions;       use Ada.IO_Exceptions;\n with Ada.Characters.Handling; use Ada.Characters.Handling;\n \n with GNAT.Heap_Sort_G;\n@@ -215,8 +215,8 @@ package body GNAT.Perfect_Hash_Generators is\n    --  Output a title and a vertex table\n \n    function Ada_File_Base_Name (Pkg_Name : String) return String;\n-   --  Return the base file name (i.e. without .ads/.adb extension) for an Ada\n-   --  source file containing the named package, using the standard GNAT\n+   --  Return the base file name (i.e. without .ads/.adb extension) for an\n+   --  Ada source file containing the named package, using the standard GNAT\n    --  file-naming convention. For example, if Pkg_Name is \"Parent.Child\", we\n    --  return \"parent-child\".\n \n@@ -1495,6 +1495,7 @@ package body GNAT.Perfect_Hash_Generators is\n    begin\n \n       File := Create_File (FName, Binary);\n+\n       if File = Invalid_FD then\n          raise Program_Error with \"cannot create: \" & FName;\n       end if;\n@@ -1518,6 +1519,7 @@ package body GNAT.Perfect_Hash_Generators is\n       FName (FName'Last) := 'b';  --  Set to body file name\n \n       File := Create_File (FName, Binary);\n+\n       if File = Invalid_FD then\n          raise Program_Error with \"cannot create: \" & FName;\n       end if;"}, {"sha": "a72f0bc8c87bda1d29afbb5c5c3e4af1016a8505", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 31, "deletions": 21, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d777a71629bda30655fd79a2163f153104c5a2e/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d777a71629bda30655fd79a2163f153104c5a2e/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=4d777a71629bda30655fd79a2163f153104c5a2e", "patch": "@@ -6186,14 +6186,14 @@ package body Prj.Nmsc is\n    ------------------\n \n    procedure Find_Sources\n-     (Project   : in out Project_Processing_Data;\n-      Data      : in out Tree_Processing_Data)\n+     (Project : in out Project_Processing_Data;\n+      Data    : in out Tree_Processing_Data)\n    is\n       Sources : constant Variable_Value :=\n                   Util.Value_Of\n                     (Name_Source_Files,\n-                    Project.Project.Decl.Attributes,\n-                    Data.Tree);\n+                     Project.Project.Decl.Attributes,\n+                     Data.Tree);\n \n       Source_List_File : constant Variable_Value :=\n                            Util.Value_Of\n@@ -6888,26 +6888,36 @@ package body Prj.Nmsc is\n                         end if;\n \n                         declare\n-                           Path_Name : constant String :=\n-                                         Normalize_Pathname\n-                                           (Name (1 .. Last),\n-                                            Directory       =>\n-                                              Source_Directory\n-                                                (Source_Directory'First ..\n-                                                 Dir_Last),\n-                                            Resolve_Links   =>\n-                                              Opt.Follow_Links_For_Files,\n-                                            Case_Sensitive => True);\n-\n-                           Path : Path_Name_Type;\n-                           FF   : File_Found := Excluded_Sources_Htable.Get\n-                                                 (Project.Excluded, File_Name);\n-                           To_Remove : Boolean := False;\n+                           Path_Name    : constant String :=\n+                                            Normalize_Pathname\n+                                              (Name (1 .. Last),\n+                                               Directory       =>\n+                                                 Source_Directory\n+                                                   (Source_Directory'First ..\n+                                                    Dir_Last),\n+                                               Resolve_Links   =>\n+                                                 Opt.Follow_Links_For_Files,\n+                                               Case_Sensitive => True);\n+\n+                           Path         : Path_Name_Type;\n+                           Display_Path : Path_Name_Type;\n+                           FF           : File_Found :=\n+                                            Excluded_Sources_Htable.Get\n+                                              (Project.Excluded, File_Name);\n+                           To_Remove    : Boolean := False;\n \n                         begin\n                            Name_Len := Path_Name'Length;\n                            Name_Buffer (1 .. Name_Len) := Path_Name;\n-                           Path := Name_Find;\n+                           Display_Path := Name_Find;\n+\n+                           if Osint.File_Names_Case_Sensitive then\n+                              Path := Display_Path;\n+                           else\n+                              Canonical_Case_File_Name\n+                                (Name_Buffer (1 .. Name_Len));\n+                              Path := Name_Find;\n+                           end if;\n \n                            if FF /= No_File_Found then\n                               if not FF.Found then\n@@ -6944,7 +6954,7 @@ package body Prj.Nmsc is\n                               Source_Dir_Rank   => Num_Nod.Number,\n                               Data              => Data,\n                               Path              => Path,\n-                              Display_Path      => Name_Find,\n+                              Display_Path      => Display_Path,\n                               File_Name         => File_Name,\n                               Locally_Removed   => To_Remove,\n                               Display_File_Name => Display_File_Name,"}, {"sha": "433c025afb7efa978103b8c25acb0ac75853efd6", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 76, "deletions": 12, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d777a71629bda30655fd79a2163f153104c5a2e/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d777a71629bda30655fd79a2163f153104c5a2e/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=4d777a71629bda30655fd79a2163f153104c5a2e", "patch": "@@ -1804,17 +1804,79 @@ package body Sem_Eval is\n    -- Eval_Conditional_Expression --\n    ---------------------------------\n \n-   --  We never attempt folding of conditional expressions (and the language)\n-   --  does not require it, so the only required processing is to do the check\n-   --  for non-static context for the then and else expressions.\n+   --  We can fold to a static expression if the condition and both constituent\n+   --  expressions are static. Othewise the only required processing is to do\n+   --  the check for non-static context for the then and else expressions.\n \n    procedure Eval_Conditional_Expression (N : Node_Id) is\n-      Condition : constant Node_Id := First (Expressions (N));\n-      Then_Expr : constant Node_Id := Next (Condition);\n-      Else_Expr : constant Node_Id := Next (Then_Expr);\n+      Condition  : constant Node_Id := First (Expressions (N));\n+      Then_Expr  : constant Node_Id := Next (Condition);\n+      Else_Expr  : constant Node_Id := Next (Then_Expr);\n+      Result     : Node_Id;\n+      Non_Result : Node_Id;\n+\n+      Rstat : constant Boolean :=\n+                Is_Static_Expression (Condition)\n+                  and then\n+                Is_Static_Expression (Then_Expr)\n+                  and then\n+                Is_Static_Expression (Else_Expr);\n+\n    begin\n-      Check_Non_Static_Context (Then_Expr);\n-      Check_Non_Static_Context (Else_Expr);\n+      --  If any operand is Any_Type, just propagate to result and do not try\n+      --  to fold, this prevents cascaded errors.\n+\n+      if Etype (Condition) = Any_Type or else\n+         Etype (Then_Expr) = Any_Type or else\n+         Etype (Else_Expr) = Any_Type\n+      then\n+         Set_Etype (N, Any_Type);\n+         Set_Is_Static_Expression (N, False);\n+         return;\n+\n+      --  Static case where we can fold. Note that we don't try to fold cases\n+      --  where the condition is known at compile time, but the result is\n+      --  non-static. This avoids possible cases of infinite recursion where\n+      --  the expander puts in a redundant test and we remove it. Instead we\n+      --  deal with these cases in the expander.\n+\n+      elsif Rstat then\n+\n+         --  Select result operand\n+\n+         if Is_True (Expr_Value (Condition)) then\n+            Result := Then_Expr;\n+            Non_Result := Else_Expr;\n+         else\n+            Result := Else_Expr;\n+            Non_Result := Then_Expr;\n+         end if;\n+\n+         --  Note that it does not matter if the non-result operand raises a\n+         --  Constraint_Error, but if the result raises constraint error then\n+         --  we replace the node with a raise constraint error. This will\n+         --  properly propagate Raises_Constraint_Error since this flag is\n+         --  set in Result.\n+\n+         if Raises_Constraint_Error (Result) then\n+            Rewrite_In_Raise_CE (N, Result);\n+            Check_Non_Static_Context (Non_Result);\n+\n+         --  Otherwise the result operand replaces the original node\n+\n+         else\n+            Rewrite (N, Relocate_Node (Result));\n+         end if;\n+\n+      --  Case of condition not known at compile time\n+\n+      else\n+         Check_Non_Static_Context (Condition);\n+         Check_Non_Static_Context (Then_Expr);\n+         Check_Non_Static_Context (Else_Expr);\n+      end if;\n+\n+      Set_Is_Static_Expression (N, Rstat);\n    end Eval_Conditional_Expression;\n \n    ----------------------\n@@ -2937,9 +2999,11 @@ package body Sem_Eval is\n       Left     : constant Node_Id   := Left_Opnd (N);\n       Right    : constant Node_Id   := Right_Opnd (N);\n       Left_Int : Uint;\n-      Rstat    : constant Boolean   :=\n-                   Is_Static_Expression (Left)\n-                     and then Is_Static_Expression (Right);\n+\n+      Rstat : constant Boolean :=\n+                Is_Static_Expression (Left)\n+                  and then\n+                Is_Static_Expression (Right);\n \n    begin\n       --  Short circuit operations are never static in Ada 83\n@@ -3001,7 +3065,7 @@ package body Sem_Eval is\n \n       if (Kind = N_And_Then and then Is_False (Left_Int))\n             or else\n-         (Kind = N_Or_Else  and then Is_True (Left_Int))\n+         (Kind = N_Or_Else  and then Is_True  (Left_Int))\n       then\n          Fold_Uint (N, Left_Int, Rstat);\n          return;"}]}