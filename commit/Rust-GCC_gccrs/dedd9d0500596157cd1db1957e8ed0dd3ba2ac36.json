{"sha": "dedd9d0500596157cd1db1957e8ed0dd3ba2ac36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVkZDlkMDUwMDU5NjE1N2NkMWRiMTk1N2U4ZWQwZGQzYmEyYWMzNg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-06-20T21:42:10Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-06-20T21:42:10Z"}, "message": "re PR target/44546 (ICE in extract_insn, at recog.c:2103 with -ffast-math -Os (compiling graphviz))\n\n\tPR target/44546\n\t* config/i386/predicates.md (ix86_swapped_fp_comparsion_operator):\n\tNew predicate.\n\t* config/i386/i386.md (*fp_jcc_8<mode>_387): Use\n\tix86_swapped_fp_comparsion_operator instead of\n\tix86_fp_comparison_operator.\n\n\t(*fp_jcc_1_387): Rename from *fp_jcc_3_387.\n\t(*fp_jcc_1r_387): Rename from *fp_jcc_4_387.\n\t(*fp_jcc_2_387): Rename from *fp_jcc_5_387.\n\t(*fp_jcc_2r_387): Rename from *fp_jcc_6_387.\n\t(*fp_jcc_3_387): Rename from *fp_jcc_7_387.\n\t(*fp_jcc_4_<mode>_387): Rename from *fp_jcc_8<mode>_387.\n\ntestsuite/ChangeLog:\n\n\tPR target/44546\n\t* gcc.target/i386/pr44546.c: New test.\n\nFrom-SVN: r161055", "tree": {"sha": "c2ede7128de2a0cd3639e81ead4dcbe08f8a72e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2ede7128de2a0cd3639e81ead4dcbe08f8a72e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dedd9d0500596157cd1db1957e8ed0dd3ba2ac36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dedd9d0500596157cd1db1957e8ed0dd3ba2ac36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dedd9d0500596157cd1db1957e8ed0dd3ba2ac36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dedd9d0500596157cd1db1957e8ed0dd3ba2ac36/comments", "author": null, "committer": null, "parents": [{"sha": "b7d3d70f77cc0e428dca48fa373d242b8c4c50be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7d3d70f77cc0e428dca48fa373d242b8c4c50be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7d3d70f77cc0e428dca48fa373d242b8c4c50be"}], "stats": {"total": 163, "additions": 107, "deletions": 56}, "files": [{"sha": "b87c6342ee63a4a729bd58a492bd8a19f1359b6b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 27, "deletions": 19, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dedd9d0500596157cd1db1957e8ed0dd3ba2ac36/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dedd9d0500596157cd1db1957e8ed0dd3ba2ac36/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dedd9d0500596157cd1db1957e8ed0dd3ba2ac36", "patch": "@@ -1,3 +1,19 @@\n+2010-06-20  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/44546\n+\t* config/i386/predicates.md (ix86_swapped_fp_comparsion_operator):\n+\tNew predicate.\n+\t* config/i386/i386.md (*fp_jcc_8<mode>_387): Use\n+\tix86_swapped_fp_comparsion_operator instead of\n+\tix86_fp_comparison_operator.\n+\n+\t(*fp_jcc_1_387): Rename from *fp_jcc_3_387.\n+\t(*fp_jcc_1r_387): Rename from *fp_jcc_4_387.\n+\t(*fp_jcc_2_387): Rename from *fp_jcc_5_387.\n+\t(*fp_jcc_2r_387): Rename from *fp_jcc_6_387.\n+\t(*fp_jcc_3_387): Rename from *fp_jcc_7_387.\n+\t(*fp_jcc_4_<mode>_387): Rename from *fp_jcc_8<mode>_387.\n+\n 2010-06-20  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR other/32998\n@@ -15,8 +31,7 @@\n \tdecode_cmdline_options_to_array.  Use decoded options for -O\n \tscan.  Use integral_argument for -O parameters.  Update call to\n \tread_cmdline_options.\n-\t(enable_warning_as_error): Update handling of find_opt return\n-\tvalue.\n+\t(enable_warning_as_error): Update handling of find_opt return value.\n \t* opts.h: Update comment on unknown options.\n \t(struct cl_decoded_option): Update comments on opt_index and arg.\n \tAdd orig_option_with_args_text.\n@@ -27,11 +42,9 @@\n \t(save_decoded_options, save_decoded_options_count): New.\n \t(read_integral_parameter): Remove.\n \t(print_switch_values): Use decoded options.\n-\t(toplev_main): Don't set save_argv.  Update call to\n-\tdecode_options.\n+\t(toplev_main): Don't set save_argv.  Update call to decode_options.\n \t* toplev.h (read_integral_parameter): Remove.\n-\t* varasm.c (elf_record_gcc_switches): Don't handle holding back\n-\tnames.\n+\t* varasm.c (elf_record_gcc_switches): Don't handle holding back names.\n \n 2010-06-19  Richard Earnshaw  <rearnsha@arm.com>\n \n@@ -113,8 +126,8 @@\n 2010-06-17  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR target/43740\n-\tconfig/pa/pa.c (emit_move_sequence): Don't infer REG_POINTER flag for\n-\tSET source operand from SET destination operand.\n+\t* config/pa/pa.c (emit_move_sequence): Don't infer REG_POINTER flag\n+\tfor SET source operand from SET destination operand.\n \n 2010-06-17  Bernd Schmidt  <bernds@codesourcery.com>\n \n@@ -274,8 +287,7 @@\n \n 2010-06-16  Richard Guenther  <rguenther@suse.de>\n \n-\t* tree-inline.c (remap_gimple_op_r): Recurse using\n-\tremap_gimple_op_r.\n+\t* tree-inline.c (remap_gimple_op_r): Recurse using remap_gimple_op_r.\n \n 2010-06-16  Douglas B Rupp  <rupp@gnat.com>\n \n@@ -302,7 +314,7 @@\n \t(AT_vms_delta1, AT_vms_delta2, add_AT_vms_delta): Declare\n \tnew static functions.\n \t(dwarf_attr_name): New cases DW_AT_HP_{prologue,epilogue}.\n-\t(AT_vms_delta1, AT_vms_delta2, add_AT_vms_delta): New \n+\t(AT_vms_delta1, AT_vms_delta2, add_AT_vms_delta): New\n \tstatic functions.\n \t(print_die): New case dw_val_class_vms_delta.\n \t(attr_checksum): Likewise.\n@@ -375,8 +387,7 @@\n \t(bitset): Remove early clobber from destination.\n \t(bitset_in_memory): Likewise.\n \t(lrintsf2): Clobber the cc0 register.\n-\t* config/rx/rx.c (rx_notice_update_cc):\n-\tHandle CC_SET_ZSC.\n+\t* config/rx/rx.c (rx_notice_update_cc): Handle CC_SET_ZSC.\n \t(rx_print_operand): Handle %N.\n \n 2010-06-16  Jan Hubicka  <jh@suse.cz>\n@@ -3615,8 +3626,7 @@\n 2010-05-29  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraphunit.c (cgraph_materialize_clone): Only remove calles,\n-\trefs and body; not the whole node for masters of materialized\n-\tclones.\n+\trefs and body; not the whole node for masters of materialized clones.\n \n 2010-05-29  Mike Stump  <mikestump@comcast.net>\n \n@@ -3756,8 +3766,7 @@\n \t* gcc.c (inform, warning, inform): New functions.\n \t(fatal_ice): Rename to internal_error; change cmsgid parameter to\n \tgmsgid.  All callers changed.\n-\t(notice): Rename to fnotice; add parameter fp.  All callers\n-\tchanged.\n+\t(notice): Rename to fnotice; add parameter fp.  All callers changed.\n \t(fatal_error): Rename to fatal_signal.  All users changed.\n \t(fatal): Rename to fatal_error; change cmsgid parameter to\n \tgmsgid.  All callers changed.\n@@ -3772,8 +3781,7 @@\n \t(warning): Declare.\n \t* config/darwin-driver.c (darwin_default_min_version): Use warning\n \tinstead of fprintf for warnings.\n-\t* cppspec.c (lang_specific_driver): Use fatal_error instead of\n-\tfatal.\n+\t* cppspec.c (lang_specific_driver): Use fatal_error instead of fatal.\n \n 2010-05-28  Julian Brown  <julian@codesourcery.com>\n "}, {"sha": "777f8e77c7c8ae32cd69fbdbe0ddf68090990c97", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 39, "deletions": 36, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dedd9d0500596157cd1db1957e8ed0dd3ba2ac36/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dedd9d0500596157cd1db1957e8ed0dd3ba2ac36/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=dedd9d0500596157cd1db1957e8ed0dd3ba2ac36", "patch": "@@ -11086,7 +11086,7 @@\n ;; Define combination compare-and-branch fp compare instructions to help\n ;; combine.\n \n-(define_insn \"*fp_jcc_3_387\"\n+(define_insn \"*fp_jcc_1_387\"\n   [(set (pc)\n \t(if_then_else (match_operator 0 \"ix86_fp_comparison_operator\"\n \t\t\t[(match_operand 1 \"register_operand\" \"f\")\n@@ -11104,7 +11104,7 @@\n    && !TARGET_CMOVE\"\n   \"#\")\n \n-(define_insn \"*fp_jcc_4_387\"\n+(define_insn \"*fp_jcc_1r_387\"\n   [(set (pc)\n \t(if_then_else (match_operator 0 \"ix86_fp_comparison_operator\"\n \t\t\t[(match_operand 1 \"register_operand\" \"f\")\n@@ -11122,7 +11122,7 @@\n    && !TARGET_CMOVE\"\n   \"#\")\n \n-(define_insn \"*fp_jcc_5_387\"\n+(define_insn \"*fp_jcc_2_387\"\n   [(set (pc)\n \t(if_then_else (match_operator 0 \"ix86_fp_comparison_operator\"\n \t\t\t[(match_operand 1 \"register_operand\" \"f\")\n@@ -11137,7 +11137,7 @@\n    && !TARGET_CMOVE\"\n   \"#\")\n \n-(define_insn \"*fp_jcc_6_387\"\n+(define_insn \"*fp_jcc_2r_387\"\n   [(set (pc)\n \t(if_then_else (match_operator 0 \"ix86_fp_comparison_operator\"\n \t\t\t[(match_operand 1 \"register_operand\" \"f\")\n@@ -11152,7 +11152,7 @@\n    && !TARGET_CMOVE\"\n   \"#\")\n \n-(define_insn \"*fp_jcc_7_387\"\n+(define_insn \"*fp_jcc_3_387\"\n   [(set (pc)\n \t(if_then_else (match_operator 0 \"ix86_fp_comparison_operator\"\n \t\t\t[(match_operand 1 \"register_operand\" \"f\")\n@@ -11169,29 +11169,6 @@\n    && !TARGET_CMOVE\"\n   \"#\")\n \n-;; The order of operands in *fp_jcc_8_387 is forced by combine in\n-;; simplify_comparison () function. Float operator is treated as RTX_OBJ\n-;; with a precedence over other operators and is always put in the first\n-;; place. Swap condition and operands to match ficom instruction.\n-\n-(define_insn \"*fp_jcc_8<mode>_387\"\n-  [(set (pc)\n-\t(if_then_else (match_operator 0 \"ix86_fp_comparison_operator\"\n-\t\t\t[(match_operator 1 \"float_operator\"\n-\t\t\t   [(match_operand:X87MODEI12 2 \"nonimmediate_operand\" \"m,?r\")])\n-\t\t\t   (match_operand 3 \"register_operand\" \"f,f\")])\n-\t  (label_ref (match_operand 4 \"\" \"\"))\n-\t  (pc)))\n-   (clobber (reg:CCFP FPSR_REG))\n-   (clobber (reg:CCFP FLAGS_REG))\n-   (clobber (match_scratch:HI 5 \"=a,a\"))]\n-  \"X87_FLOAT_MODE_P (GET_MODE (operands[3]))\n-   && (TARGET_USE_<MODE>MODE_FIOP || optimize_function_for_size_p (cfun))\n-   && GET_MODE (operands[1]) == GET_MODE (operands[3])\n-   && ix86_fp_compare_mode (swap_condition (GET_CODE (operands[0]))) == CCFPmode\n-   && !TARGET_CMOVE\"\n-  \"#\")\n-\n (define_split\n   [(set (pc)\n \t(if_then_else (match_operator 0 \"ix86_fp_comparison_operator\"\n@@ -11227,12 +11204,37 @@\n   DONE;\n })\n \n+;; The order of operands in *fp_jcc_4_387 is forced by combine in\n+;; simplify_comparison () function. Float operator is treated as RTX_OBJ\n+;; with a precedence over other operators and is always put in the first\n+;; place. Swap condition and operands to match ficom instruction.\n+\n+(define_insn \"*fp_jcc_4_<mode>_387\"\n+  [(set (pc)\n+\t(if_then_else\n+\t  (match_operator 0 \"ix86_swapped_fp_comparison_operator\"\n+\t    [(match_operator 1 \"float_operator\"\n+\t      [(match_operand:X87MODEI12 2 \"nonimmediate_operand\" \"m,?r\")])\n+\t     (match_operand 3 \"register_operand\" \"f,f\")])\n+\t  (label_ref (match_operand 4 \"\" \"\"))\n+\t  (pc)))\n+   (clobber (reg:CCFP FPSR_REG))\n+   (clobber (reg:CCFP FLAGS_REG))\n+   (clobber (match_scratch:HI 5 \"=a,a\"))]\n+  \"X87_FLOAT_MODE_P (GET_MODE (operands[3]))\n+   && (TARGET_USE_<MODE>MODE_FIOP || optimize_function_for_size_p (cfun))\n+   && GET_MODE (operands[1]) == GET_MODE (operands[3])\n+   && ix86_fp_compare_mode (swap_condition (GET_CODE (operands[0]))) == CCFPmode\n+   && !TARGET_CMOVE\"\n+  \"#\")\n+\n (define_split\n   [(set (pc)\n-\t(if_then_else (match_operator 0 \"ix86_fp_comparison_operator\"\n-\t\t\t[(match_operator 1 \"float_operator\"\n-\t\t\t   [(match_operand:X87MODEI12 2 \"memory_operand\" \"\")])\n-\t\t\t   (match_operand 3 \"register_operand\" \"\")])\n+\t(if_then_else\n+\t  (match_operator 0 \"ix86_swapped_fp_comparison_operator\"\n+\t    [(match_operator 1 \"float_operator\"\n+\t      [(match_operand:X87MODEI12 2 \"memory_operand\" \"\")])\n+\t     (match_operand 3 \"register_operand\" \"\")])\n \t  (match_operand 4 \"\" \"\")\n \t  (match_operand 5 \"\" \"\")))\n    (clobber (reg:CCFP FPSR_REG))\n@@ -11252,10 +11254,11 @@\n ;; %%% Kill this when reload knows how to do it.\n (define_split\n   [(set (pc)\n-\t(if_then_else (match_operator 0 \"ix86_fp_comparison_operator\"\n-\t\t\t[(match_operator 1 \"float_operator\"\n-\t\t\t   [(match_operand:X87MODEI12 2 \"register_operand\" \"\")])\n-\t\t\t   (match_operand 3 \"register_operand\" \"\")])\n+\t(if_then_else\n+\t  (match_operator 0 \"ix86_swapped_fp_comparison_operator\"\n+\t    [(match_operator 1 \"float_operator\"\n+\t      [(match_operand:X87MODEI12 2 \"register_operand\" \"\")])\n+\t     (match_operand 3 \"register_operand\" \"\")])\n \t  (match_operand 4 \"\" \"\")\n \t  (match_operand 5 \"\" \"\")))\n    (clobber (reg:CCFP FPSR_REG))"}, {"sha": "e5fea4a29d92c282efe8ffd68f3f0780af739659", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dedd9d0500596157cd1db1957e8ed0dd3ba2ac36/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dedd9d0500596157cd1db1957e8ed0dd3ba2ac36/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=dedd9d0500596157cd1db1957e8ed0dd3ba2ac36", "patch": "@@ -1053,6 +1053,19 @@\n                (match_operand 0 \"comparison_operator\")\n                (match_operand 0 \"ix86_trivial_fp_comparison_operator\")))\n \n+;; Same as above, but for swapped comparison used in fp_jcc_4_387.\n+(define_predicate \"ix86_swapped_fp_comparison_operator\"\n+  (match_operand 0 \"comparison_operator\")\n+{\n+  enum rtx_code code = GET_CODE (op);\n+  int ret;\n+\n+  PUT_CODE (op, swap_condition (code));\n+  ret = ix86_fp_comparison_operator (op, mode);\n+  PUT_CODE (op, code);\n+  return ret;\n+})\n+\n ;; Nearly general operand, but accept any const_double, since we wish\n ;; to be able to drop them into memory rather than have them get pulled\n ;; into registers."}, {"sha": "e0c2cda6aa048a120e0083a317771571631ad4de", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dedd9d0500596157cd1db1957e8ed0dd3ba2ac36/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dedd9d0500596157cd1db1957e8ed0dd3ba2ac36/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dedd9d0500596157cd1db1957e8ed0dd3ba2ac36", "patch": "@@ -1,3 +1,8 @@\n+2010-06-20  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/44546\n+\t* gcc.target/i386/pr44546.c: New test.\n+\n 2010-06-20  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/opts-2.c: New test.\n@@ -181,7 +186,7 @@\n \n 2010-06-12  Daniel Franke  <franke.daniel@gmail.com>\n \n-        * gfortran.dg/whole_file_20.f03: New.\n+\t* gfortran.dg/whole_file_20.f03: New.\n \n 2010-06-12  Jan Hubicka  <jh@suse.cz>\n "}, {"sha": "517446fdc8fb0aecc60d3e9f152190371af5bc58", "filename": "gcc/testsuite/gcc.target/i386/pr44546.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dedd9d0500596157cd1db1957e8ed0dd3ba2ac36/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44546.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dedd9d0500596157cd1db1957e8ed0dd3ba2ac36/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44546.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44546.c?ref=dedd9d0500596157cd1db1957e8ed0dd3ba2ac36", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Os -ffast-math -mfpmath=387\" } */\n+\n+typedef __SIZE_TYPE__ size_t;\n+typedef struct\n+{\n+  float *ewgts;\n+} vtx_data;\n+\n+extern void *zmalloc (size_t);\n+extern int whatever (vtx_data *);\n+\n+float *\n+compute_apsp_artifical_weights_packed (vtx_data * graph, int n)\n+{\n+  float *weights;\n+\n+  weights = (float *) zmalloc (n * sizeof (float));\n+  weights[n] =\n+    whatever (graph) > graph[n].ewgts[n] ?\n+    whatever (graph) : graph[n].ewgts[n];\n+}"}]}