{"sha": "5ade176d5eb914bf78919ac2f610599059fba340", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFkZTE3NmQ1ZWI5MTRiZjc4OTE5YWMyZjYxMDU5OTA1OWZiYTM0MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-25T16:17:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-25T16:17:08Z"}, "message": "Core 1135\n\n\tCore 1135\n\t* method.c (defaulted_late_check): Check for exception spec mismatch.\n\t(defaultable_fn_check): Allow exception spec and virtual.\n\t* class.c (check_for_override): A virtual dtor is non-trivial.\n\nFrom-SVN: r171462", "tree": {"sha": "6d637e3253d81a75c9cb50f2011950b451eff6da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d637e3253d81a75c9cb50f2011950b451eff6da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ade176d5eb914bf78919ac2f610599059fba340", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ade176d5eb914bf78919ac2f610599059fba340", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ade176d5eb914bf78919ac2f610599059fba340", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ade176d5eb914bf78919ac2f610599059fba340/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7eda336814b5c8d3ed37b4f9055889c6651eb1bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eda336814b5c8d3ed37b4f9055889c6651eb1bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eda336814b5c8d3ed37b4f9055889c6651eb1bb"}], "stats": {"total": 80, "additions": 71, "deletions": 9}, "files": [{"sha": "7a99acd883f99e9f8c9e3720b8fb48a086694df1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ade176d5eb914bf78919ac2f610599059fba340/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ade176d5eb914bf78919ac2f610599059fba340/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5ade176d5eb914bf78919ac2f610599059fba340", "patch": "@@ -1,5 +1,10 @@\n 2011-03-25  Jason Merrill  <jason@redhat.com>\n \n+\tCore 1135\n+\t* method.c (defaulted_late_check): Check for exception spec mismatch.\n+\t(defaultable_fn_check): Allow exception spec and virtual.\n+\t* class.c (check_for_override): A virtual dtor is non-trivial.\n+\n \tPR c++/48289\n \t* pt.c (build_non_dependent_expr): Keep dereferences outside the\n \tNON_DEPENDENT_EXPR."}, {"sha": "adae51f1989ccf0a6630be1f0fea8c83bc734ae1", "filename": "gcc/cp/class.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ade176d5eb914bf78919ac2f610599059fba340/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ade176d5eb914bf78919ac2f610599059fba340/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=5ade176d5eb914bf78919ac2f610599059fba340", "patch": "@@ -2474,6 +2474,8 @@ check_for_override (tree decl, tree ctype)\n       if (!DECL_VINDEX (decl))\n \tDECL_VINDEX (decl) = error_mark_node;\n       IDENTIFIER_VIRTUAL_P (DECL_NAME (decl)) = 1;\n+      if (DECL_DESTRUCTOR_P (decl))\n+\tTYPE_HAS_NONTRIVIAL_DESTRUCTOR (ctype) = true;\n     }\n }\n "}, {"sha": "386a818ed1ba79346ced4062809e7949d4231f1c", "filename": "gcc/cp/method.c", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ade176d5eb914bf78919ac2f610599059fba340/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ade176d5eb914bf78919ac2f610599059fba340/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=5ade176d5eb914bf78919ac2f610599059fba340", "patch": "@@ -1554,6 +1554,12 @@ defaulted_late_check (tree fn)\n   if (DECL_DEFAULTED_IN_CLASS_P (fn))\n     {\n       tree eh_spec = TYPE_RAISES_EXCEPTIONS (TREE_TYPE (implicit_fn));\n+      if (TYPE_RAISES_EXCEPTIONS (TREE_TYPE (fn))\n+\t  && !comp_except_specs (TYPE_RAISES_EXCEPTIONS (TREE_TYPE (fn)),\n+\t\t\t\t eh_spec, ce_normal))\n+\terror (\"function %q+D defaulted on its first declaration \"\n+\t       \"with an exception-specification that differs from \"\n+\t       \"the implicit declaration %q#D\", fn, implicit_fn);\n       TREE_TYPE (fn) = build_exception_variant (TREE_TYPE (fn), eh_spec);\n       if (DECL_DECLARED_CONSTEXPR_P (implicit_fn))\n \t/* Hmm...should we do this for out-of-class too? Should it be OK to\n@@ -1619,14 +1625,7 @@ defaultable_fn_check (tree fn)\n \t    break;\n \t  }\n       if (TYPE_BEING_DEFINED (DECL_CONTEXT (fn)))\n-\t{\n-\t  if (TYPE_RAISES_EXCEPTIONS (TREE_TYPE (fn)))\n-\t    error (\"function %q+D defaulted on its first declaration \"\n-\t\t   \"must not have an exception-specification\", fn);\n-\t  if (DECL_VIRTUAL_P (fn))\n-\t    error (\"%qD declared virtual cannot be defaulted in the class \"\n-\t\t   \"body\", fn);\n-\t}\n+\t/* Defer checking.  */;\n       else if (!processing_template_decl)\n \tdefaulted_late_check (fn);\n "}, {"sha": "e2aab84bf6b4a1a7a0c84c1ac68539a4f46ae443", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ade176d5eb914bf78919ac2f610599059fba340/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ade176d5eb914bf78919ac2f610599059fba340/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5ade176d5eb914bf78919ac2f610599059fba340", "patch": "@@ -1,3 +1,9 @@\n+2011-03-25  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/defaulted22.C: New.\n+\t* g++.dg/cpp0x/defaulted23.C: New.\n+\t* g++.dg/cpp0x/defaulted15.C: Adjust.\n+\n 2011-03-25  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/move1.C: New."}, {"sha": "0a47c20f7786f4f543202521ff6034aa3eb78ece", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted15.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ade176d5eb914bf78919ac2f610599059fba340/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ade176d5eb914bf78919ac2f610599059fba340/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted15.C?ref=5ade176d5eb914bf78919ac2f610599059fba340", "patch": "@@ -54,5 +54,5 @@ struct G: public F\n \n struct H\n {\n-  virtual ~H() = default;\t// { dg-error \"declared virtual\" }\n+  virtual ~H() = default;\n };"}, {"sha": "61e9d32052150a509c02bb0267888b3de6b8560b", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted22.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ade176d5eb914bf78919ac2f610599059fba340/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ade176d5eb914bf78919ac2f610599059fba340/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted22.C?ref=5ade176d5eb914bf78919ac2f610599059fba340", "patch": "@@ -0,0 +1,23 @@\n+// Test that a virtual defaulted constructor is still virtual.\n+// { dg-do run }\n+// { dg-options -std=c++0x }\n+\n+int r = 1;\n+\n+struct A\n+{\n+  virtual ~A() = default;\n+};\n+\n+struct B: A\n+{\n+  ~B() noexcept { r = 0; }\n+};\n+\n+A* ap = new B();\n+\n+int main()\n+{\n+  delete ap;\n+  return r;\n+}"}, {"sha": "5b4438ddd02029555d4b8450f5fde1eb24f0fd2d", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted23.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ade176d5eb914bf78919ac2f610599059fba340/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ade176d5eb914bf78919ac2f610599059fba340/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted23.C?ref=5ade176d5eb914bf78919ac2f610599059fba340", "patch": "@@ -0,0 +1,27 @@\n+// Test for checking of exception specifications on defaulted fns\n+// { dg-options -std=c++0x }\n+\n+struct A\n+{\n+  A() noexcept = default;\n+};\n+\n+struct B\n+{\n+  B() throw (int) = default; // { dg-error \"exception-specification that differs from the implicit declaration\" }\n+};\n+\n+struct C\n+{\n+  C() throw (int) { }\n+};\n+\n+struct D: C\n+{\n+  D() throw (int) = default;\n+};\n+\n+struct E\n+{\n+  E() = default;\n+};"}]}