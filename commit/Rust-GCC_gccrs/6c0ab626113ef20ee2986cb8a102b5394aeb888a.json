{"sha": "6c0ab626113ef20ee2986cb8a102b5394aeb888a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMwYWI2MjYxMTNlZjIwZWUyOTg2Y2I4YTEwMmI1Mzk0YWViODg4YQ==", "commit": {"author": {"name": "XieZhiheng", "email": "xiezhiheng@huawei.com", "date": "2020-04-21T14:09:23Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-04-21T14:09:23Z"}, "message": "aarch64: Add an error message in large code model for ilp32 [PR94577]\n\nThe option -mabi=ilp32 should not be used in large code model. An error\nmessage is added for the option conflict.\n\n2020-04-21  Duan bo  <duanbo3@huawei.com>\n\ngcc/\n\tPR target/94577\n\t* config/aarch64/aarch64.c: Add an error message for option conflict.\n\t* doc/invoke.texi (-mcmodel=large): Mention that -mcmodel=large is\n\tincompatible with -fpic, -fPIC and -mabi=ilp32.\n\ngcc/testsuite/\n\tPR target/94577\n\t* gcc.target/aarch64/pr94577.c: New test.", "tree": {"sha": "b61cc551a97dac02c1192f41958c9fbfecf8827a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b61cc551a97dac02c1192f41958c9fbfecf8827a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c0ab626113ef20ee2986cb8a102b5394aeb888a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c0ab626113ef20ee2986cb8a102b5394aeb888a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c0ab626113ef20ee2986cb8a102b5394aeb888a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c0ab626113ef20ee2986cb8a102b5394aeb888a/comments", "author": null, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2c8be187e8eb061e44166ac41646285821be6a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2c8be187e8eb061e44166ac41646285821be6a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2c8be187e8eb061e44166ac41646285821be6a6"}], "stats": {"total": 77, "additions": 53, "deletions": 24}, "files": [{"sha": "dc831f6725b530a15c4c29728469c1dca9932e88", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0ab626113ef20ee2986cb8a102b5394aeb888a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0ab626113ef20ee2986cb8a102b5394aeb888a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c0ab626113ef20ee2986cb8a102b5394aeb888a", "patch": "@@ -1,3 +1,10 @@\n+2020-04-21  Duan bo  <duanbo3@huawei.com>\n+\n+\tPR target/94577\n+\t* config/aarch64/aarch64.c: Add an error message for option conflict.\n+\t* doc/invoke.texi (-mcmodel=large): Mention that -mcmodel=large is\n+\tincompatible with -fpic, -fPIC and -mabi=ilp32.\n+\n 2020-04-21  Frederik Harwath  <frederik@codesourcery.com>\n \n \tPR other/94629"}, {"sha": "f728ac530a4ac968de16ea59d2b724ed63b23d6f", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 28, "deletions": 23, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0ab626113ef20ee2986cb8a102b5394aeb888a/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0ab626113ef20ee2986cb8a102b5394aeb888a/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=6c0ab626113ef20ee2986cb8a102b5394aeb888a", "patch": "@@ -14777,32 +14777,37 @@ aarch64_init_expanders (void)\n static void\n initialize_aarch64_code_model (struct gcc_options *opts)\n {\n-   if (opts->x_flag_pic)\n-     {\n-       switch (opts->x_aarch64_cmodel_var)\n-\t {\n-\t case AARCH64_CMODEL_TINY:\n-\t   aarch64_cmodel = AARCH64_CMODEL_TINY_PIC;\n-\t   break;\n-\t case AARCH64_CMODEL_SMALL:\n+  aarch64_cmodel = opts->x_aarch64_cmodel_var;\n+  switch (opts->x_aarch64_cmodel_var)\n+    {\n+    case AARCH64_CMODEL_TINY:\n+      if (opts->x_flag_pic)\n+\taarch64_cmodel = AARCH64_CMODEL_TINY_PIC;\n+      break;\n+    case AARCH64_CMODEL_SMALL:\n+      if (opts->x_flag_pic)\n+\t{\n #ifdef HAVE_AS_SMALL_PIC_RELOCS\n-\t   aarch64_cmodel = (flag_pic == 2\n-\t\t\t     ? AARCH64_CMODEL_SMALL_PIC\n-\t\t\t     : AARCH64_CMODEL_SMALL_SPIC);\n+\t  aarch64_cmodel = (flag_pic == 2\n+\t\t\t    ? AARCH64_CMODEL_SMALL_PIC\n+\t\t\t    : AARCH64_CMODEL_SMALL_SPIC);\n #else\n-\t   aarch64_cmodel = AARCH64_CMODEL_SMALL_PIC;\n+\t  aarch64_cmodel = AARCH64_CMODEL_SMALL_PIC;\n #endif\n-\t   break;\n-\t case AARCH64_CMODEL_LARGE:\n-\t   sorry (\"code model %qs with %<-f%s%>\", \"large\",\n-\t\t  opts->x_flag_pic > 1 ? \"PIC\" : \"pic\");\n-\t   break;\n-\t default:\n-\t   gcc_unreachable ();\n-\t }\n-     }\n-   else\n-     aarch64_cmodel = opts->x_aarch64_cmodel_var;\n+\t}\n+      break;\n+    case AARCH64_CMODEL_LARGE:\n+      if (opts->x_flag_pic)\n+\tsorry (\"code model %qs with %<-f%s%>\", \"large\",\n+\t       opts->x_flag_pic > 1 ? \"PIC\" : \"pic\");\n+      if (opts->x_aarch64_abi == AARCH64_ABI_ILP32)\n+\tsorry (\"code model %qs not supported in ilp32 mode\", \"large\");\n+      break;\n+    case AARCH64_CMODEL_TINY_PIC:\n+    case AARCH64_CMODEL_SMALL_PIC:\n+    case AARCH64_CMODEL_SMALL_SPIC:\n+      gcc_unreachable ();\n+    }\n }\n \n /* Implement TARGET_OPTION_SAVE.  */"}, {"sha": "d47488240cfacfd3f30649cfd75102c137f6a8ea", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0ab626113ef20ee2986cb8a102b5394aeb888a/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0ab626113ef20ee2986cb8a102b5394aeb888a/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=6c0ab626113ef20ee2986cb8a102b5394aeb888a", "patch": "@@ -16759,7 +16759,9 @@ dynamically linked.  This is the default code model.\n @item -mcmodel=large\n @opindex mcmodel=large\n Generate code for the large code model.  This makes no assumptions about\n-addresses and sizes of sections.  Programs can be statically linked only.\n+addresses and sizes of sections.  Programs can be statically linked only.  The\n+@option{-mcmodel=large} option is incompatible with @option{-mabi=ilp32},\n+@option{-fpic} and @option{-fPIC}.\n \n @item -mstrict-align\n @itemx -mno-strict-align"}, {"sha": "0de5a470ec6c5bc4a401ebf12e5c15b39601f68c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0ab626113ef20ee2986cb8a102b5394aeb888a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0ab626113ef20ee2986cb8a102b5394aeb888a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6c0ab626113ef20ee2986cb8a102b5394aeb888a", "patch": "@@ -1,3 +1,8 @@\n+2020-04-21  Duan bo  <duanbo3@huawei.com>\n+\n+\tPR target/94577\n+\t* gcc.target/aarch64/pr94577.c: New test.\n+\n 2020-04-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/94686"}, {"sha": "6f2d3612c262eb6a112b0058d61055f8e089857e", "filename": "gcc/testsuite/gcc.target/aarch64/pr94577.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0ab626113ef20ee2986cb8a102b5394aeb888a/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr94577.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0ab626113ef20ee2986cb8a102b5394aeb888a/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr94577.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr94577.c?ref=6c0ab626113ef20ee2986cb8a102b5394aeb888a", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mcmodel=large -mabi=ilp32\" } */\n+\n+void\n+foo ()\n+{\n+  // Do nothing\n+}\n+\n+/* { dg-message \"sorry, unimplemented: code model 'large' not supported in ilp32 mode\"  \"\" { target *-*-* } 0 } */"}]}