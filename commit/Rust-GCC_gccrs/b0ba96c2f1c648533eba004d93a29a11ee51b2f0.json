{"sha": "b0ba96c2f1c648533eba004d93a29a11ee51b2f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBiYTk2YzJmMWM2NDg1MzNlYmEwMDRkOTNhMjlhMTFlZTUxYjJmMA==", "commit": {"author": {"name": "Kelvin Nilsen", "email": "kelvin@gcc.gnu.org", "date": "2017-03-20T18:05:00Z"}, "committer": {"name": "Kelvin Nilsen", "email": "kelvin@gcc.gnu.org", "date": "2017-03-20T18:05:00Z"}, "message": "re PR target/79963 (vec_eq_any extracts wrong CR bit when compiling with -mcpu=power9)\n\ngcc/testsuite/ChangeLog:\n\n2017-03-20  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n\n\tPR target/79963\n\t* gcc.target/powerpc/vsu/vec-any-eq-10.c: Add scan-assembler\n\tdirective to assure selection of proper bit using rlwinm insn.\n\t* gcc.target/powerpc/vsu/vec-any-eq-14.c: Likewise.\n\t* gcc.target/powerpc/vsu/vec-any-eq-7.c: Likewise.\n\t* gcc.target/powerpc/vsu/vec-any-eq-8.c: Likewise.\n\t* gcc.target/powerpc/vsu/vec-any-eq-9.c: Likewise.\n\ngcc/ChangeLog:\n\n2017-03-20  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n\n\tPR target/79963\n\t* config/rs6000/altivec.h (vec_all_ne): Under __cplusplus__ and\n\t__POWER9_VECTOR__ #ifdef control, change template definition to\n\tuse Power9-specific built-in function.\n\t(vec_any_eq): Likewise.\n\t* config/rs6000/vector.md (vector_ae_v2di_p): Change the flag used\n\tto control outcomes from this test.\n\t(vector_ae_<mode>p): For VEC_F modes, likewise.\n\nFrom-SVN: r246287", "tree": {"sha": "db79f457ccf30952440ecc5168f8b9114d3f2542", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db79f457ccf30952440ecc5168f8b9114d3f2542"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0ba96c2f1c648533eba004d93a29a11ee51b2f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0ba96c2f1c648533eba004d93a29a11ee51b2f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0ba96c2f1c648533eba004d93a29a11ee51b2f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0ba96c2f1c648533eba004d93a29a11ee51b2f0/comments", "author": null, "committer": null, "parents": [{"sha": "dd629845b0931912853a26bf8f8e05adf9f048a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd629845b0931912853a26bf8f8e05adf9f048a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd629845b0931912853a26bf8f8e05adf9f048a2"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "77952ffea1c51b524d7eef1237688292453fc5ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ba96c2f1c648533eba004d93a29a11ee51b2f0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ba96c2f1c648533eba004d93a29a11ee51b2f0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b0ba96c2f1c648533eba004d93a29a11ee51b2f0", "patch": "@@ -1,3 +1,14 @@\n+2017-03-20  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n+\n+\tPR target/79963\n+\t* config/rs6000/altivec.h (vec_all_ne): Under __cplusplus__ and\n+\t__POWER9_VECTOR__ #ifdef control, change template definition to\n+\tuse Power9-specific built-in function.\n+\t(vec_any_eq): Likewise.\n+\t* config/rs6000/vector.md (vector_ae_v2di_p): Change the flag used\n+\tto control outcomes from this test.\n+\t(vector_ae_<mode>p): For VEC_F modes, likewise.\n+\n 2017-03-20  Ian Lance Taylor  <iant@google.com>\n \n \t* config/i386/i386.c (ix86_function_regparm): Save an extra"}, {"sha": "b9de05a72f0c5ede05ee87dbd46876ec6fb47701", "filename": "gcc/config/rs6000/altivec.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ba96c2f1c648533eba004d93a29a11ee51b2f0/gcc%2Fconfig%2Frs6000%2Faltivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ba96c2f1c648533eba004d93a29a11ee51b2f0/gcc%2Fconfig%2Frs6000%2Faltivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.h?ref=b0ba96c2f1c648533eba004d93a29a11ee51b2f0", "patch": "@@ -521,9 +521,9 @@ __altivec_scalar_pred(vec_all_nez,\n __altivec_scalar_pred(vec_any_eqz,\n   __builtin_vec_vcmpnez_p (__CR6_LT_REV, a1, a2))\n __altivec_scalar_pred(vec_all_ne,\n-  __builtin_vec_allne_p (a1, a2))\n+  __builtin_vec_vcmpne_p (a1, a2))\n __altivec_scalar_pred(vec_any_eq,\n-  __builtin_vec_anyeq_p (a1, a2))\n+  __builtin_vec_vcmpae_p (a1, a2))\n #endif\n \n __altivec_scalar_pred(vec_any_ne,"}, {"sha": "e6489a861cdd4ba51290bfc720df79e1f930a0cd", "filename": "gcc/config/rs6000/vector.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ba96c2f1c648533eba004d93a29a11ee51b2f0/gcc%2Fconfig%2Frs6000%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ba96c2f1c648533eba004d93a29a11ee51b2f0/gcc%2Fconfig%2Frs6000%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvector.md?ref=b0ba96c2f1c648533eba004d93a29a11ee51b2f0", "patch": "@@ -790,7 +790,7 @@\n \t  (eq:V2DI (match_dup 1)\n \t\t   (match_dup 2)))])\n    (set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(lt:SI (reg:CC CR6_REGNO)\n+\t(eq:SI (reg:CC CR6_REGNO)\n \t       (const_int 0)))\n    (set (match_dup 0)\n \t(xor:SI (match_dup 0)\n@@ -837,7 +837,7 @@\n \t  (eq:VEC_F (match_dup 1)\n \t\t    (match_dup 2)))])\n    (set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(lt:SI (reg:CC CR6_REGNO)\n+\t(eq:SI (reg:CC CR6_REGNO)\n \t       (const_int 0)))\n    (set (match_dup 0)\n \t(xor:SI (match_dup 0)"}, {"sha": "2b6d7c6286c15a8876eab30569f7960dd2245405", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ba96c2f1c648533eba004d93a29a11ee51b2f0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ba96c2f1c648533eba004d93a29a11ee51b2f0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b0ba96c2f1c648533eba004d93a29a11ee51b2f0", "patch": "@@ -1,3 +1,13 @@\n+2017-03-20  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n+\n+\tPR target/79963\n+\t* gcc.target/powerpc/vsu/vec-any-eq-10.c: Add scan-assembler\n+\tdirective to assure selection of proper bit using rlwinm insn.\n+\t* gcc.target/powerpc/vsu/vec-any-eq-14.c: Likewise.\n+\t* gcc.target/powerpc/vsu/vec-any-eq-7.c: Likewise.\n+\t* gcc.target/powerpc/vsu/vec-any-eq-8.c: Likewise.\n+\t* gcc.target/powerpc/vsu/vec-any-eq-9.c: Likewise.\n+\n 2017-03-20  Marek Polacek  <polacek@redhat.com>\n \t    Paolo Carlini  <paolo.carlini@oracle.com>\n "}, {"sha": "4e6ca9a694a8ae091151d5de12aa023b9bd3c08c", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-any-eq-10.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ba96c2f1c648533eba004d93a29a11ee51b2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eq-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ba96c2f1c648533eba004d93a29a11ee51b2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eq-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eq-10.c?ref=b0ba96c2f1c648533eba004d93a29a11ee51b2f0", "patch": "@@ -16,3 +16,4 @@ test_any_equal (vector unsigned long long *arg1_p,\n }\n \n /* { dg-final { scan-assembler \"vcmpequd.\" } } */\n+/* { dg-final { scan-assembler \"rlwinm r?\\[0-9\\]+,r?\\[0-9\\]+,27,1\" } } */"}, {"sha": "2f319bcf2ecfb25481902d21c35cc5836f202403", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-any-eq-14.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ba96c2f1c648533eba004d93a29a11ee51b2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eq-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ba96c2f1c648533eba004d93a29a11ee51b2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eq-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eq-14.c?ref=b0ba96c2f1c648533eba004d93a29a11ee51b2f0", "patch": "@@ -15,3 +15,4 @@ test_any_equal (vector bool long long *arg1_p, vector bool long long *arg2_p)\n }\n \n /* { dg-final { scan-assembler \"vcmpequd.\" } } */\n+/* { dg-final { scan-assembler \"rlwinm r?\\[0-9\\]+,r?\\[0-9\\]+,27,1\" } } */"}, {"sha": "3693aeafedeea9fe7e770a8f0b3df23b0306896a", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-any-eq-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ba96c2f1c648533eba004d93a29a11ee51b2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eq-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ba96c2f1c648533eba004d93a29a11ee51b2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eq-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eq-7.c?ref=b0ba96c2f1c648533eba004d93a29a11ee51b2f0", "patch": "@@ -15,3 +15,4 @@ test_any_equal (vector float *arg1_p, vector float *arg2_p)\n }\n \n /* { dg-final { scan-assembler \"xvcmpeqsp.\" } } */\n+/* { dg-final { scan-assembler \"rlwinm r?\\[0-9\\]+,r?\\[0-9\\]+,27,1\" } } */"}, {"sha": "9443c75024f6c2afdb4effb12e93b4d555200af1", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-any-eq-8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ba96c2f1c648533eba004d93a29a11ee51b2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eq-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ba96c2f1c648533eba004d93a29a11ee51b2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eq-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eq-8.c?ref=b0ba96c2f1c648533eba004d93a29a11ee51b2f0", "patch": "@@ -15,3 +15,4 @@ test_any_equal (vector double *arg1_p, vector double *arg2_p)\n }\n \n /* { dg-final { scan-assembler \"xvcmpeqdp.\" } } */\n+/* { dg-final { scan-assembler \"rlwinm r?\\[0-9\\]+,r?\\[0-9\\]+,27,1\" } } */"}, {"sha": "8011a925321b3a9f097314d1e22a963e27c57e93", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-any-eq-9.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0ba96c2f1c648533eba004d93a29a11ee51b2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eq-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0ba96c2f1c648533eba004d93a29a11ee51b2f0/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eq-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eq-9.c?ref=b0ba96c2f1c648533eba004d93a29a11ee51b2f0", "patch": "@@ -15,3 +15,4 @@ test_any_equal (vector long long *arg1_p, vector long long *arg2_p)\n }\n \n /* { dg-final { scan-assembler \"vcmpequd.\" } } */\n+/* { dg-final { scan-assembler \"rlwinm r?\\[0-9\\]+,r?\\[0-9\\]+,27,1\" } } */"}]}