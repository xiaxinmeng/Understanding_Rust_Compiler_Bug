{"sha": "20305b5047e1c6ce55f47d6f4d6fa93970f752ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAzMDViNTA0N2UxYzZjZTU1ZjQ3ZDZmNGQ2ZmE5Mzk3MGY3NTJlYw==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-03-15T07:45:39Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-03-15T07:45:39Z"}, "message": "re PR libfortran/79956 (many new -Wmaybe-uninitialized warnings with bootstrap-O3)\n\n2017-03-15  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR libfortran/79956\n\t* libgfortran.h (GFC_ASSERT):  New macro.\n\t* m4/reshape.m4 (reshape_'rtype_ccode`):  Use GFC_ASSERT\n\tto specify that sdim > 0 and rdim > 0.\n\t* intrinsic/reshape_generic.c (reshape_internal):  Likweise.\n\t* generated/reshape_c10.c: Regenerated.\n\t* generated/reshape_c16.c: Regenerated.\n\t* generated/reshape_c4.c: Regenerated.\n\t* generated/reshape_c8.c: Regenerated.\n\t* generated/reshape_i16.c: Regenerated.\n\t* generated/reshape_i4.c: Regenerated.\n\t* generated/reshape_i8.c: Regenerated.\n\t* generated/reshape_r10.c: Regenerated.\n\t* generated/reshape_r16.c: Regenerated.\n\t* generated/reshape_r4.c: Regenerated.\n\t* generated/reshape_r8.c: Regenerated.\n\nFrom-SVN: r246153", "tree": {"sha": "9f77409bc00ee67483e0e197d2c38e60ff24e22a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f77409bc00ee67483e0e197d2c38e60ff24e22a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20305b5047e1c6ce55f47d6f4d6fa93970f752ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20305b5047e1c6ce55f47d6f4d6fa93970f752ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20305b5047e1c6ce55f47d6f4d6fa93970f752ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/comments", "author": null, "committer": null, "parents": [{"sha": "142b99a8888ddb6d67e74b63789983e804b5a732", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/142b99a8888ddb6d67e74b63789983e804b5a732", "html_url": "https://github.com/Rust-GCC/gccrs/commit/142b99a8888ddb6d67e74b63789983e804b5a732"}], "stats": {"total": 144, "additions": 144, "deletions": 0}, "files": [{"sha": "e6703700c4b35f3cc95e6d999549b2e123738a10", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=20305b5047e1c6ce55f47d6f4d6fa93970f752ec", "patch": "@@ -1,3 +1,22 @@\n+2017-03-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/79956\n+\t* libgfortran.h (GFC_ASSERT):  New macro.\n+\t* m4/reshape.m4 (reshape_'rtype_ccode`):  Use GFC_ASSERT\n+\tto specify that sdim > 0 and rdim > 0.\n+\t* intrinsic/reshape_generic.c (reshape_internal):  Likweise.\n+\t* generated/reshape_c10.c: Regenerated.\n+\t* generated/reshape_c16.c: Regenerated.\n+\t* generated/reshape_c4.c: Regenerated.\n+\t* generated/reshape_c8.c: Regenerated.\n+\t* generated/reshape_i16.c: Regenerated.\n+\t* generated/reshape_i4.c: Regenerated.\n+\t* generated/reshape_i8.c: Regenerated.\n+\t* generated/reshape_r10.c: Regenerated.\n+\t* generated/reshape_r16.c: Regenerated.\n+\t* generated/reshape_r4.c: Regenerated.\n+\t* generated/reshape_r8.c: Regenerated.\n+\n 2017-03-11  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/78854"}, {"sha": "af45e960ee7fae71e84fe1ade12eae4bcc306ab4", "filename": "libgfortran/generated/reshape_c10.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fgenerated%2Freshape_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fgenerated%2Freshape_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c10.c?ref=20305b5047e1c6ce55f47d6f4d6fa93970f752ec", "patch": "@@ -78,6 +78,10 @@ reshape_c10 (gfc_array_c10 * const restrict ret,\n   index_type shape_data[GFC_MAX_DIMENSIONS];\n \n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n+  /* rdim is always > 0; this lets the compiler optimize more and\n+   avoids a potential warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");\n \n@@ -232,6 +236,11 @@ reshape_c10 (gfc_array_c10 * const restrict ret,\n     }\n \n   sdim = GFC_DESCRIPTOR_RANK (source);\n+\n+  /* sdim is always > 0; this lets the compiler optimize more and\n+   avoids a warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   ssize = 1;\n   sempty = 0;\n   for (n = 0; n < sdim; n++)"}, {"sha": "977a53dbe475f1e8fd083692f666e92d6112f0a8", "filename": "libgfortran/generated/reshape_c16.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fgenerated%2Freshape_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fgenerated%2Freshape_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c16.c?ref=20305b5047e1c6ce55f47d6f4d6fa93970f752ec", "patch": "@@ -78,6 +78,10 @@ reshape_c16 (gfc_array_c16 * const restrict ret,\n   index_type shape_data[GFC_MAX_DIMENSIONS];\n \n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n+  /* rdim is always > 0; this lets the compiler optimize more and\n+   avoids a potential warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");\n \n@@ -232,6 +236,11 @@ reshape_c16 (gfc_array_c16 * const restrict ret,\n     }\n \n   sdim = GFC_DESCRIPTOR_RANK (source);\n+\n+  /* sdim is always > 0; this lets the compiler optimize more and\n+   avoids a warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   ssize = 1;\n   sempty = 0;\n   for (n = 0; n < sdim; n++)"}, {"sha": "fd94689a4c0b7d393820e70f0f5328f9a574af64", "filename": "libgfortran/generated/reshape_c4.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fgenerated%2Freshape_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fgenerated%2Freshape_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c4.c?ref=20305b5047e1c6ce55f47d6f4d6fa93970f752ec", "patch": "@@ -78,6 +78,10 @@ reshape_c4 (gfc_array_c4 * const restrict ret,\n   index_type shape_data[GFC_MAX_DIMENSIONS];\n \n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n+  /* rdim is always > 0; this lets the compiler optimize more and\n+   avoids a potential warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");\n \n@@ -232,6 +236,11 @@ reshape_c4 (gfc_array_c4 * const restrict ret,\n     }\n \n   sdim = GFC_DESCRIPTOR_RANK (source);\n+\n+  /* sdim is always > 0; this lets the compiler optimize more and\n+   avoids a warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   ssize = 1;\n   sempty = 0;\n   for (n = 0; n < sdim; n++)"}, {"sha": "6377049397b002e5527ce69da9a77ef908c84728", "filename": "libgfortran/generated/reshape_c8.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fgenerated%2Freshape_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fgenerated%2Freshape_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c8.c?ref=20305b5047e1c6ce55f47d6f4d6fa93970f752ec", "patch": "@@ -78,6 +78,10 @@ reshape_c8 (gfc_array_c8 * const restrict ret,\n   index_type shape_data[GFC_MAX_DIMENSIONS];\n \n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n+  /* rdim is always > 0; this lets the compiler optimize more and\n+   avoids a potential warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");\n \n@@ -232,6 +236,11 @@ reshape_c8 (gfc_array_c8 * const restrict ret,\n     }\n \n   sdim = GFC_DESCRIPTOR_RANK (source);\n+\n+  /* sdim is always > 0; this lets the compiler optimize more and\n+   avoids a warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   ssize = 1;\n   sempty = 0;\n   for (n = 0; n < sdim; n++)"}, {"sha": "65576a31704b118f5c6126650b72df97188ed0d8", "filename": "libgfortran/generated/reshape_i16.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fgenerated%2Freshape_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fgenerated%2Freshape_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_i16.c?ref=20305b5047e1c6ce55f47d6f4d6fa93970f752ec", "patch": "@@ -78,6 +78,10 @@ reshape_16 (gfc_array_i16 * const restrict ret,\n   index_type shape_data[GFC_MAX_DIMENSIONS];\n \n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n+  /* rdim is always > 0; this lets the compiler optimize more and\n+   avoids a potential warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");\n \n@@ -232,6 +236,11 @@ reshape_16 (gfc_array_i16 * const restrict ret,\n     }\n \n   sdim = GFC_DESCRIPTOR_RANK (source);\n+\n+  /* sdim is always > 0; this lets the compiler optimize more and\n+   avoids a warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   ssize = 1;\n   sempty = 0;\n   for (n = 0; n < sdim; n++)"}, {"sha": "d07b3a9c2d108a254794734a01a41b350dd02fa5", "filename": "libgfortran/generated/reshape_i4.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fgenerated%2Freshape_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fgenerated%2Freshape_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_i4.c?ref=20305b5047e1c6ce55f47d6f4d6fa93970f752ec", "patch": "@@ -78,6 +78,10 @@ reshape_4 (gfc_array_i4 * const restrict ret,\n   index_type shape_data[GFC_MAX_DIMENSIONS];\n \n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n+  /* rdim is always > 0; this lets the compiler optimize more and\n+   avoids a potential warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");\n \n@@ -232,6 +236,11 @@ reshape_4 (gfc_array_i4 * const restrict ret,\n     }\n \n   sdim = GFC_DESCRIPTOR_RANK (source);\n+\n+  /* sdim is always > 0; this lets the compiler optimize more and\n+   avoids a warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   ssize = 1;\n   sempty = 0;\n   for (n = 0; n < sdim; n++)"}, {"sha": "f48728d17be7ecc9ea30c9d09ed09d8db4098e8b", "filename": "libgfortran/generated/reshape_i8.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fgenerated%2Freshape_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fgenerated%2Freshape_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_i8.c?ref=20305b5047e1c6ce55f47d6f4d6fa93970f752ec", "patch": "@@ -78,6 +78,10 @@ reshape_8 (gfc_array_i8 * const restrict ret,\n   index_type shape_data[GFC_MAX_DIMENSIONS];\n \n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n+  /* rdim is always > 0; this lets the compiler optimize more and\n+   avoids a potential warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");\n \n@@ -232,6 +236,11 @@ reshape_8 (gfc_array_i8 * const restrict ret,\n     }\n \n   sdim = GFC_DESCRIPTOR_RANK (source);\n+\n+  /* sdim is always > 0; this lets the compiler optimize more and\n+   avoids a warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   ssize = 1;\n   sempty = 0;\n   for (n = 0; n < sdim; n++)"}, {"sha": "a5722d4244f69562414fb5512d857c6cb9d22a07", "filename": "libgfortran/generated/reshape_r10.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fgenerated%2Freshape_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fgenerated%2Freshape_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r10.c?ref=20305b5047e1c6ce55f47d6f4d6fa93970f752ec", "patch": "@@ -78,6 +78,10 @@ reshape_r10 (gfc_array_r10 * const restrict ret,\n   index_type shape_data[GFC_MAX_DIMENSIONS];\n \n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n+  /* rdim is always > 0; this lets the compiler optimize more and\n+   avoids a potential warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");\n \n@@ -232,6 +236,11 @@ reshape_r10 (gfc_array_r10 * const restrict ret,\n     }\n \n   sdim = GFC_DESCRIPTOR_RANK (source);\n+\n+  /* sdim is always > 0; this lets the compiler optimize more and\n+   avoids a warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   ssize = 1;\n   sempty = 0;\n   for (n = 0; n < sdim; n++)"}, {"sha": "c56b8717a839c973455e6d32abedc8a1bcc239aa", "filename": "libgfortran/generated/reshape_r16.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fgenerated%2Freshape_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fgenerated%2Freshape_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r16.c?ref=20305b5047e1c6ce55f47d6f4d6fa93970f752ec", "patch": "@@ -78,6 +78,10 @@ reshape_r16 (gfc_array_r16 * const restrict ret,\n   index_type shape_data[GFC_MAX_DIMENSIONS];\n \n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n+  /* rdim is always > 0; this lets the compiler optimize more and\n+   avoids a potential warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");\n \n@@ -232,6 +236,11 @@ reshape_r16 (gfc_array_r16 * const restrict ret,\n     }\n \n   sdim = GFC_DESCRIPTOR_RANK (source);\n+\n+  /* sdim is always > 0; this lets the compiler optimize more and\n+   avoids a warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   ssize = 1;\n   sempty = 0;\n   for (n = 0; n < sdim; n++)"}, {"sha": "889813c07ece69594551673793a69fa06ac98f77", "filename": "libgfortran/generated/reshape_r4.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fgenerated%2Freshape_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fgenerated%2Freshape_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r4.c?ref=20305b5047e1c6ce55f47d6f4d6fa93970f752ec", "patch": "@@ -78,6 +78,10 @@ reshape_r4 (gfc_array_r4 * const restrict ret,\n   index_type shape_data[GFC_MAX_DIMENSIONS];\n \n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n+  /* rdim is always > 0; this lets the compiler optimize more and\n+   avoids a potential warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");\n \n@@ -232,6 +236,11 @@ reshape_r4 (gfc_array_r4 * const restrict ret,\n     }\n \n   sdim = GFC_DESCRIPTOR_RANK (source);\n+\n+  /* sdim is always > 0; this lets the compiler optimize more and\n+   avoids a warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   ssize = 1;\n   sempty = 0;\n   for (n = 0; n < sdim; n++)"}, {"sha": "279f89dcf2cdcea627d3cc876cb6763193b80666", "filename": "libgfortran/generated/reshape_r8.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fgenerated%2Freshape_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fgenerated%2Freshape_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r8.c?ref=20305b5047e1c6ce55f47d6f4d6fa93970f752ec", "patch": "@@ -78,6 +78,10 @@ reshape_r8 (gfc_array_r8 * const restrict ret,\n   index_type shape_data[GFC_MAX_DIMENSIONS];\n \n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n+  /* rdim is always > 0; this lets the compiler optimize more and\n+   avoids a potential warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");\n \n@@ -232,6 +236,11 @@ reshape_r8 (gfc_array_r8 * const restrict ret,\n     }\n \n   sdim = GFC_DESCRIPTOR_RANK (source);\n+\n+  /* sdim is always > 0; this lets the compiler optimize more and\n+   avoids a warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   ssize = 1;\n   sempty = 0;\n   for (n = 0; n < sdim; n++)"}, {"sha": "09b0c36169bc656e2b54e40dc8f3509470220e54", "filename": "libgfortran/intrinsics/reshape_generic.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fintrinsics%2Freshape_generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fintrinsics%2Freshape_generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Freshape_generic.c?ref=20305b5047e1c6ce55f47d6f4d6fa93970f752ec", "patch": "@@ -66,6 +66,10 @@ reshape_internal (parray *ret, parray *source, shape_type *shape,\n   index_type shape_data[GFC_MAX_DIMENSIONS];\n \n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n+  /* rdim is always > 0; this lets the compiler optimize more and\n+     avoids a warning.  */\n+  GFC_ASSERT (rdim > 0);\n+  \n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");\n \n@@ -158,6 +162,10 @@ reshape_internal (parray *ret, parray *source, shape_type *shape,\n \n       source_extent = 1;\n       sdim = GFC_DESCRIPTOR_RANK (source);\n+      /* sdim is always > 0; this lets the compiler optimize more and\n+         avoids a warning.  */\n+      GFC_ASSERT(sdim>0);\n+\n       for (n = 0; n < sdim; n++)\n \t{\n \t  index_type se;\n@@ -219,6 +227,10 @@ reshape_internal (parray *ret, parray *source, shape_type *shape,\n     }\n \n   sdim = GFC_DESCRIPTOR_RANK (source);\n+  /* sdim is always > 0; this lets the compiler optimize more and\n+     avoids a warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   ssize = 1;\n   sempty = 0;\n   for (n = 0; n < sdim; n++)"}, {"sha": "cfa4fcf0edc4fcaa73ea9788fe79d12117f4cdaf", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=20305b5047e1c6ce55f47d6f4d6fa93970f752ec", "patch": "@@ -111,6 +111,11 @@ typedef off_t gfc_offset;\n #define likely(x)       __builtin_expect(!!(x), 1)\n #define unlikely(x)     __builtin_expect(!!(x), 0)\n \n+/* This macro can be used to annotate conditions which we know to\n+   be true, so that the compiler can optimize based on the condition.  */\n+\n+#define GFC_ASSERT(EXPR)                                                \\\n+  ((void)(__builtin_expect (!(EXPR), 0) ? __builtin_unreachable (), 0 : 0))\n \n /* Make sure we have ptrdiff_t. */\n #ifndef HAVE_PTRDIFF_T"}, {"sha": "5ad1f13615319cec50fd077d7780c0c3d27e3fef", "filename": "libgfortran/m4/reshape.m4", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fm4%2Freshape.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20305b5047e1c6ce55f47d6f4d6fa93970f752ec/libgfortran%2Fm4%2Freshape.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Freshape.m4?ref=20305b5047e1c6ce55f47d6f4d6fa93970f752ec", "patch": "@@ -82,6 +82,10 @@ reshape_'rtype_ccode` ('rtype` * const restrict ret,\n   index_type shape_data[GFC_MAX_DIMENSIONS];\n \n   rdim = GFC_DESCRIPTOR_EXTENT(shape,0);\n+  /* rdim is always > 0; this lets the compiler optimize more and\n+   avoids a potential warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   if (rdim != GFC_DESCRIPTOR_RANK(ret))\n     runtime_error(\"rank of return array incorrect in RESHAPE intrinsic\");\n \n@@ -236,6 +240,11 @@ reshape_'rtype_ccode` ('rtype` * const restrict ret,\n     }\n \n   sdim = GFC_DESCRIPTOR_RANK (source);\n+\n+  /* sdim is always > 0; this lets the compiler optimize more and\n+   avoids a warning.  */\n+  GFC_ASSERT(sdim>0);\n+\n   ssize = 1;\n   sempty = 0;\n   for (n = 0; n < sdim; n++)"}]}