{"sha": "3c15ff863f7160d15ff3cba22f61078082ced134", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MxNWZmODYzZjcxNjBkMTVmZjNjYmEyMmY2MTA3ODA4MmNlZDEzNA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-02-19T01:41:31Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-02-19T01:41:31Z"}, "message": "Include aix386ng.h instead of duplicating it.\n\nFrom-SVN: r3495", "tree": {"sha": "39453b789bc792d249b208bb9876f7fd1a49d3b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39453b789bc792d249b208bb9876f7fd1a49d3b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c15ff863f7160d15ff3cba22f61078082ced134", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c15ff863f7160d15ff3cba22f61078082ced134", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c15ff863f7160d15ff3cba22f61078082ced134", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c15ff863f7160d15ff3cba22f61078082ced134/comments", "author": null, "committer": null, "parents": [{"sha": "96b327f4f685128cba6193a9dfb2f591d5b4fc1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96b327f4f685128cba6193a9dfb2f591d5b4fc1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96b327f4f685128cba6193a9dfb2f591d5b4fc1a"}], "stats": {"total": 75, "additions": 2, "deletions": 73}, "files": [{"sha": "5a959d075390d0b63267e34fd2174d63d64fa0ec", "filename": "gcc/config/i386/aix386.h", "status": "modified", "additions": 2, "deletions": 73, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c15ff863f7160d15ff3cba22f61078082ced134/gcc%2Fconfig%2Fi386%2Faix386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c15ff863f7160d15ff3cba22f61078082ced134/gcc%2Fconfig%2Fi386%2Faix386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Faix386.h?ref=3c15ff863f7160d15ff3cba22f61078082ced134", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions for IBM PS2 running AIX/386.\n+/* Definitions for IBM PS2 running AIX/386 with gas.\n    From: Minh Tran-Le <TRANLE@intellicorp.com>\n    Copyright (C) 1988 Free Software Foundation, Inc.\n \n@@ -18,79 +18,8 @@ You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n+#include \"i386/aix386ng.h\"\n \n-#include \"i386/i386.h\"\n-\n-/* Get the generic definitions for system V.3.  */\n-\n-#include \"svr3.h\"\n-\n-/* Use the ATT assembler syntax.\n-   This overrides at least one macro (ASM_OUTPUT_LABELREF) from svr3.h.  */\n-\n-#include \"i386/att.h\"\n-\n-/* Use crt1.o as a startup file and crtn.o as a closing file.  */\n-\n-#define STARTFILE_SPEC  \\\n-  \"%{pg:gcrt1.o%s}%{!pg:%{p:mcrt1.o%s}%{!p:crt1.o%s}} crtbegin.o%s\"\n-\n-#define LIB_SPEC \"%{p:-L/usr/lib/libp}%{pg:-L/usr/lib/libp} -lc \\\n-  crtend.o%s crtn.o%s\"\n-\n-/* Special flags for the linker.  I don't know what they do.  */\n-\n-#define LINK_SPEC \"%{K} %{!K:-K} %{T*} %{z:-lm}\"\n-\n-/* Specify predefined symbols in preprocessor.  */\n-\n-#define CPP_PREDEFINES \"-D_I386 -Di386 -DAIX -D_AIX\"\n-\n-/* special flags for the aix assembler to generate the short form for all\n-   qualifying forward reference */\n-\n-#define ASM_SPEC \"-s2\"\n-\n-#undef ASM_FILE_START\n-#define ASM_FILE_START(FILE) \t\t\t\t\t\\\n-  do { fprintf (FILE, \"\\t.file\\t\\\"%s\\\"\\n\", dump_base_name);\t\\\n-       if (optimize)\t\t\t\t\t\t\\\n-          ASM_FILE_START_1 (FILE); \t\t\t\t\\\n-       else\t\t\t\t\t\t\t\\\n-          fprintf (FILE, \"\\t.noopt\\n\");\t\t\t\t\\\n-     } while (0)\n-\n-/* This was suggested, but it shouldn't be right for DBX output. -- RMS\n-   #define ASM_OUTPUT_SOURCE_FILENAME(FILE, NAME) */\n-\n-/* Writing `int' for a bitfield forces int alignment for the structure.  */\n-\n-#define PCC_BITFIELD_TYPE_MATTERS 1\n-\n-#if 0\n-/* Don't write a `.optim' pseudo; this assembler\n-   is said to have a bug when .optim is used.  */\n-\n-#undef ASM_FILE_START_1\n-#define ASM_FILE_START_1(FILE) fprintf (FILE, \"\\t.noopt\\n\");\n-#endif\n-\f\n-/* Output assembler code to FILE to increment profiler label # LABELNO\n-   for profiling a function entry.  */\n-\n-#undef FUNCTION_PROFILER\n-#define FUNCTION_PROFILER(FILE, LABELNO)  \\\n-   fprintf (FILE, \"\\tleal %sP%d,%%eax\\n\\tcall mcount\\n\", LPREFIX, (LABELNO));\n-\n-/* Note that using bss_section here caused errors\n-   in building shared libraries on system V.3.\n-   but AIX 1.2 does not have yet shareable libraries on PS2 */\n-#undef ASM_OUTPUT_LOCAL\n-#define ASM_OUTPUT_LOCAL(FILE, NAME, SIZE, ROUNDED)  \\\n-  (bss_section (),\t\t\t\t\t\\\n-   ASM_OUTPUT_LABEL ((FILE), (NAME)),\t\t\t\\\n-   fprintf ((FILE), \"\\t.set .,.+%u\\n\", (ROUNDED)))\n-\f\n /* Define a few machine-specific details of the implementation of\n    constructors.  */\n "}]}