{"sha": "56d04c75ef9df0e2c052c280cb8926e493edda6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZkMDRjNzVlZjlkZjBlMmMwNTJjMjgwY2I4OTI2ZTQ5M2VkZGE2Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-07-09T10:56:47Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-07-09T10:56:47Z"}, "message": "re PR c/86420 (nextafter(0x1p-1022,0) is constant folded)\n\n\tPR c/86420\n\t* real.c (real_nextafter): Return true if result is denormal.\n\n\t* gcc.dg/nextafter-1.c (TEST): Adjust the tests that expect denormals\n\tto be returned and when first argument is not 0, so that they don't do\n\tanything for NEED_EXC or NEED_ERRNO.\n\nFrom-SVN: r262517", "tree": {"sha": "ff2174ae67899267575fd8fd6deb26d63dd44cdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff2174ae67899267575fd8fd6deb26d63dd44cdd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56d04c75ef9df0e2c052c280cb8926e493edda6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56d04c75ef9df0e2c052c280cb8926e493edda6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56d04c75ef9df0e2c052c280cb8926e493edda6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56d04c75ef9df0e2c052c280cb8926e493edda6c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eccba1ac5de7ca66c8201870c8b46c972c191fa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eccba1ac5de7ca66c8201870c8b46c972c191fa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eccba1ac5de7ca66c8201870c8b46c972c191fa0"}], "stats": {"total": 66, "additions": 52, "deletions": 14}, "files": [{"sha": "e4ecd4cdd27cacf172f3adfc220c23549e9d3981", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56d04c75ef9df0e2c052c280cb8926e493edda6c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56d04c75ef9df0e2c052c280cb8926e493edda6c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=56d04c75ef9df0e2c052c280cb8926e493edda6c", "patch": "@@ -1,3 +1,8 @@\n+2018-07-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/86420\n+\t* real.c (real_nextafter): Return true if result is denormal.\n+\n 2018-07-09  Martin Liska  <mliska@suse.cz>\n \n \t* common.opt: Add back wrongly removed attribute."}, {"sha": "f822ae82d6148d3efaf4533175caf9bb9cf58ccd", "filename": "gcc/real.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56d04c75ef9df0e2c052c280cb8926e493edda6c/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56d04c75ef9df0e2c052c280cb8926e493edda6c/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=56d04c75ef9df0e2c052c280cb8926e493edda6c", "patch": "@@ -5141,7 +5141,7 @@ real_nextafter (REAL_VALUE_TYPE *r, format_helper fmt,\n       get_zero (r, x->sign);\n       return true;\n     }\n-  return r->cl == rvc_zero;\n+  return r->cl == rvc_zero || REAL_EXP (r) < fmt->emin;\n }\n \n /* Write into BUF the maximum representable finite floating-point"}, {"sha": "6b51bc6439ef6bd70f2bd0dad54b1c263d14b697", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56d04c75ef9df0e2c052c280cb8926e493edda6c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56d04c75ef9df0e2c052c280cb8926e493edda6c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=56d04c75ef9df0e2c052c280cb8926e493edda6c", "patch": "@@ -1,3 +1,10 @@\n+2018-07-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/86420\n+\t* gcc.dg/nextafter-1.c (TEST): Adjust the tests that expect denormals\n+\tto be returned and when first argument is not 0, so that they don't do\n+\tanything for NEED_EXC or NEED_ERRNO.\n+\n 2018-07-09  Tom de Vries  <tdevries@suse.de>\n \n \t* gcc.dg/guality/asm-1.c: Use relative line numbers where obvious."}, {"sha": "502e0f49b1ee5e2a9a9cd8c58b643c4ae5f3842d", "filename": "gcc/testsuite/gcc.dg/nextafter-1.c", "status": "modified", "additions": 39, "deletions": 13, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56d04c75ef9df0e2c052c280cb8926e493edda6c/gcc%2Ftestsuite%2Fgcc.dg%2Fnextafter-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56d04c75ef9df0e2c052c280cb8926e493edda6c/gcc%2Ftestsuite%2Fgcc.dg%2Fnextafter-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnextafter-1.c?ref=56d04c75ef9df0e2c052c280cb8926e493edda6c", "patch": "@@ -58,43 +58,69 @@ name (void)\t\t\t\t\t\t\t\t     \\\n     = (NEED_EXC || NEED_ERRNO) ? __builtin_inf##l1 ()\t\t\t     \\\n       : fn (MAX1, __builtin_inf ());\t\t\t\t\t     \\\n   CHECK (__builtin_isinf##l1 (m) && !__builtin_signbit (m));\t\t     \\\n-  const type n = fn (DENORM_MIN1, 12.0##L2);\t\t\t\t     \\\n+  const type n\t\t\t\t\t\t\t\t     \\\n+    = (NEED_EXC || NEED_ERRNO) ? 2.0##L1 * DENORM_MIN1\t\t\t     \\\n+      : fn (DENORM_MIN1, 12.0##L2);\t\t\t\t\t     \\\n   CHECK (n == 2.0##L1 * DENORM_MIN1);\t\t\t\t\t     \\\n-  const type o = fn (n, 24.0##L2);\t\t\t\t\t     \\\n+  const type o\t\t\t\t\t\t\t\t     \\\n+    = (NEED_EXC || NEED_ERRNO) ? 3.0##L1 * DENORM_MIN1\t\t\t     \\\n+      : fn (n, 24.0##L2);\t\t\t\t\t\t     \\\n   CHECK (o == 3.0##L1 * DENORM_MIN1);\t\t\t\t\t     \\\n-  const type p = fn (o, 132.0##L2);\t\t\t\t\t     \\\n+  const type p\t\t\t\t\t\t\t\t     \\\n+    = (NEED_EXC || NEED_ERRNO) ? 4.0##L1 * DENORM_MIN1\t\t\t     \\\n+      : fn (o, 132.0##L2);\t\t\t\t\t\t     \\\n   CHECK (p == 4.0##L1 * DENORM_MIN1);\t\t\t\t\t     \\\n-  const type q = fn (2.0##L1 * DENORM_MIN1, -__builtin_inf ());\t\t     \\\n+  const type q\t\t\t\t\t\t\t\t     \\\n+    = (NEED_EXC || NEED_ERRNO) ? DENORM_MIN1\t\t\t\t     \\\n+      : fn (2.0##L1 * DENORM_MIN1, -__builtin_inf ());\t\t\t     \\\n   CHECK (q == DENORM_MIN1);\t\t\t\t\t\t     \\\n-  const type r = fn (3.0##L1 * DENORM_MIN1, DENORM_MIN2);\t\t     \\\n+  const type r\t\t\t\t\t\t\t\t     \\\n+    = (NEED_EXC || NEED_ERRNO) ? 2.0##L1 * DENORM_MIN1\t\t\t     \\\n+      : fn (3.0##L1 * DENORM_MIN1, DENORM_MIN2);\t\t\t     \\\n   CHECK (r == 2.0##L1 * DENORM_MIN1);\t\t\t\t\t     \\\n-  const type s = fn (4.0##L1 * DENORM_MIN1, 2.0##L2 * DENORM_MIN2);\t     \\\n+  const type s\t\t\t\t\t\t\t\t     \\\n+    = (NEED_EXC || NEED_ERRNO) ? 3.0##L1 * DENORM_MIN1\t\t\t     \\\n+      : fn (4.0##L1 * DENORM_MIN1, 2.0##L2 * DENORM_MIN2);\t\t     \\\n   CHECK (s == 3.0##L1 * DENORM_MIN1);\t\t\t\t\t     \\\n-  const type t = fn (MIN1, 0.0##L2);\t\t\t\t\t     \\\n+  const type t\t\t\t\t\t\t\t\t     \\\n+    = (NEED_EXC || NEED_ERRNO) ? MIN1 - DENORM_MIN1\t\t\t     \\\n+      : fn (MIN1, 0.0##L2);\t\t\t\t\t\t     \\\n   CHECK (t == MIN1 - DENORM_MIN1);\t\t\t\t\t     \\\n-  const type u = fn (MIN1 - DENORM_MIN1, -MIN2);\t\t\t     \\\n+  const type u\t\t\t\t\t\t\t\t     \\\n+    = (NEED_EXC || NEED_ERRNO) ? MIN1 - 2.0##L1 * DENORM_MIN1\t\t     \\\n+      : fn (MIN1 - DENORM_MIN1, -MIN2);\t\t\t\t\t     \\\n   CHECK (u == MIN1 - 2.0##L1 * DENORM_MIN1);\t\t\t\t     \\\n-  const type v = fn (MIN1 - 2.0##L1 * DENORM_MIN1, 100.0##L2);\t\t     \\\n+  const type v\t\t\t\t\t\t\t\t     \\\n+    = (NEED_EXC || NEED_ERRNO) ? MIN1 - DENORM_MIN1\t\t\t     \\\n+      : fn (MIN1 - 2.0##L1 * DENORM_MIN1, 100.0##L2);\t\t\t     \\\n   CHECK (v == MIN1 - DENORM_MIN1);\t\t\t\t\t     \\\n   const type w = fn (MIN1 - DENORM_MIN1, MAX2);\t\t\t\t     \\\n   CHECK (w == MIN1);\t\t\t\t\t\t\t     \\\n   const type x = fn (MIN1, 17.0##L2);\t\t\t\t\t     \\\n   CHECK (x == MIN1 + DENORM_MIN1);\t\t\t\t\t     \\\n   const type y = fn (MIN1 + DENORM_MIN1, __builtin_inf##l2 ());\t\t     \\\n   CHECK (y == MIN1 + 2.0##L1 * DENORM_MIN1);\t\t\t\t     \\\n-  const type z = fn (MIN1 / 2.0##L1, -MIN2);\t\t\t\t     \\\n+  const type z\t\t\t\t\t\t\t\t     \\\n+    = (NEED_EXC || NEED_ERRNO) ? MIN1 / 2.0##L1 - DENORM_MIN1\t\t     \\\n+      : fn (MIN1 / 2.0##L1, -MIN2);\t\t\t\t\t     \\\n   CHECK (z == MIN1 / 2.0##L1 - DENORM_MIN1);\t\t\t\t     \\\n-  const type aa = fn (-MIN1 / 4.0##L1, MIN2);\t\t\t\t     \\\n+  const type aa\t\t\t\t\t\t\t\t     \\\n+    = (NEED_EXC || NEED_ERRNO) ? -MIN1 / 4.0##L1 + DENORM_MIN1\t\t     \\\n+      : fn (-MIN1 / 4.0##L1, MIN2);\t\t\t\t\t     \\\n   CHECK (aa == -MIN1 / 4.0##L1 + DENORM_MIN1);\t\t\t\t     \\\n   const type ab = fn (MIN1 * 2.0##L1, -MIN2);\t\t\t\t     \\\n   CHECK (ab == MIN1 * 2.0##L1 - DENORM_MIN1);\t\t\t\t     \\\n   const type ac = fn (MIN1 * 4.0##L1, MIN2);\t\t\t\t     \\\n   CHECK (ac == MIN1 * 4.0##L1 - DENORM_MIN1 * 2.0##L1);\t\t\t     \\\n   const type ad = fn (MIN1 * 64.0##L1, MIN2);\t\t\t\t     \\\n   CHECK (ad == MIN1 * 64.0##L1 - DENORM_MIN1 * 32.0##L1);\t\t     \\\n-  const type ae = fn (MIN1 / 2.0##L1 - DENORM_MIN1, 100.0##L2);\t\t     \\\n+  const type ae\t\t\t\t\t\t\t\t     \\\n+    = (NEED_EXC || NEED_ERRNO) ? MIN1 / 2.0##L1\t\t\t\t     \\\n+      : fn (MIN1 / 2.0##L1 - DENORM_MIN1, 100.0##L2);\t\t\t     \\\n   CHECK (ae == MIN1 / 2.0##L1);\t\t\t\t\t\t     \\\n-  const type af = fn (-MIN1 / 4 + DENORM_MIN1, -100.0##L2);\t\t     \\\n+  const type af\t\t\t\t\t\t\t\t     \\\n+    = (NEED_EXC || NEED_ERRNO) ? -MIN1 / 4.0##L1\t\t\t     \\\n+      : fn (-MIN1 / 4 + DENORM_MIN1, -100.0##L2);\t\t\t     \\\n   CHECK (af == -MIN1 / 4.0##L1);\t\t\t\t\t     \\\n   const type ag = fn (MIN1 * 2.0##L1 - DENORM_MIN1, 100.0##L2);\t\t     \\\n   CHECK (ag == MIN1 * 2.0##L1);\t\t\t\t\t\t     \\"}]}