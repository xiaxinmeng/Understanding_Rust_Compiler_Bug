{"sha": "57acd1e20828fabe9cfe3b741680f06a1f21251e", "node_id": "C_kwDOANBUbNoAKDU3YWNkMWUyMDgyOGZhYmU5Y2ZlM2I3NDE2ODBmMDZhMWYyMTI1MWU", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-11-05T10:38:45Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-11-05T11:12:50Z"}, "message": "Fix nullptr as the result is not setup in this case", "tree": {"sha": "7a440aaf9749d77f70d7ba3b0e99f7c60d64201d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a440aaf9749d77f70d7ba3b0e99f7c60d64201d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57acd1e20828fabe9cfe3b741680f06a1f21251e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57acd1e20828fabe9cfe3b741680f06a1f21251e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57acd1e20828fabe9cfe3b741680f06a1f21251e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57acd1e20828fabe9cfe3b741680f06a1f21251e/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9f5eddc5a9eed7e03732c9e5bc35dd4cb5f9769", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9f5eddc5a9eed7e03732c9e5bc35dd4cb5f9769", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9f5eddc5a9eed7e03732c9e5bc35dd4cb5f9769"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ca7b91b0c06e35986db425c6e08321aa13c85836", "filename": "gcc/rust/typecheck/rust-hir-type-check-type.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57acd1e20828fabe9cfe3b741680f06a1f21251e/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-type.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57acd1e20828fabe9cfe3b741680f06a1f21251e/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-type.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-type.cc?ref=57acd1e20828fabe9cfe3b741680f06a1f21251e", "patch": "@@ -95,7 +95,7 @@ TypeCheckType::visit (HIR::TypePath &path)\n \t\t     \"TypePath %s declares generic arguments but \"\n \t\t     \"the type %s does not have any\",\n \t\t     path.as_string ().c_str (),\n-\t\t     translated->as_string ().c_str ());\n+\t\t     path_type->as_string ().c_str ());\n     }\n   else\n     {"}]}