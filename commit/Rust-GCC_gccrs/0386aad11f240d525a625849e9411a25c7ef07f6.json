{"sha": "0386aad11f240d525a625849e9411a25c7ef07f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM4NmFhZDExZjI0MGQ1MjVhNjI1ODQ5ZTk0MTFhMjVjN2VmMDdmNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-24T09:08:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-24T09:08:00Z"}, "message": "[multiple changes]\n\n2009-06-24  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* ttypes.ads: Minor editing.\n\t\n2009-06-24  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch6.adb (Expand_Actuals): Use Is_Volatile, not Treat_As_Volatile\n\tin deciding to do call-by-copy code.\n\n2009-06-24  Vincent Celier  <celier@adacore.com>\n\n\t* make.adb (Gnatmake): To decide if an executable should be rebuilt,\n\tcheck if an externally built library file is more current than the\n\texecutable.\n\nFrom-SVN: r148897", "tree": {"sha": "d011bc4eeb28e350200fd1ba02a9af8507ecb5f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d011bc4eeb28e350200fd1ba02a9af8507ecb5f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0386aad11f240d525a625849e9411a25c7ef07f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0386aad11f240d525a625849e9411a25c7ef07f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0386aad11f240d525a625849e9411a25c7ef07f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0386aad11f240d525a625849e9411a25c7ef07f6/comments", "author": null, "committer": null, "parents": [{"sha": "2d8b752fff349561f600fe49c825bb0e23a93d93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d8b752fff349561f600fe49c825bb0e23a93d93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d8b752fff349561f600fe49c825bb0e23a93d93"}], "stats": {"total": 60, "additions": 55, "deletions": 5}, "files": [{"sha": "4f9fb6de066d6a7118e82b1c18f4cb846db4a5dc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0386aad11f240d525a625849e9411a25c7ef07f6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0386aad11f240d525a625849e9411a25c7ef07f6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0386aad11f240d525a625849e9411a25c7ef07f6", "patch": "@@ -1,3 +1,18 @@\n+2009-06-24  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* ttypes.ads: Minor editing.\n+\t\n+2009-06-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch6.adb (Expand_Actuals): Use Is_Volatile, not Treat_As_Volatile\n+\tin deciding to do call-by-copy code.\n+\n+2009-06-24  Vincent Celier  <celier@adacore.com>\n+\n+\t* make.adb (Gnatmake): To decide if an executable should be rebuilt,\n+\tcheck if an externally built library file is more current than the\n+\texecutable.\n+\n 2009-06-23  Olivier Hainque  <hainque@adacore.com>\n \n \t* gcc-interface/utils.c (handle_vector_size_attribute): Import from"}, {"sha": "c3947305b31c854ca8ca1302002f53123bd94779", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0386aad11f240d525a625849e9411a25c7ef07f6/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0386aad11f240d525a625849e9411a25c7ef07f6/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=0386aad11f240d525a625849e9411a25c7ef07f6", "patch": "@@ -1572,11 +1572,16 @@ package body Exp_Ch6 is\n             --  treatment, whereas the formal is not volatile, then pass\n             --  by copy unless it is a by-reference type.\n \n+            --  Note: we use Is_Volatile here rather than Treat_As_Volatile,\n+            --  because this is the enforcement of a language rule that applies\n+            --  only to \"real\" volatile variables, not e.g. to the address\n+            --  clause overlay case.\n+\n             elsif Is_Entity_Name (Actual)\n-              and then Treat_As_Volatile (Entity (Actual))\n+              and then Is_Volatile (Entity (Actual))\n               and then not Is_By_Reference_Type (Etype (Actual))\n               and then not Is_Scalar_Type (Etype (Entity (Actual)))\n-              and then not Treat_As_Volatile (E_Formal)\n+              and then not Is_Volatile (E_Formal)\n             then\n                Add_Call_By_Copy_Code;\n \n@@ -1604,8 +1609,8 @@ package body Exp_Ch6 is\n                Reset_Packed_Prefix;\n                Expand_Packed_Element_Reference (Actual);\n \n-            --  If we have a reference to a bit packed array, we copy it,\n-            --  since the actual must be byte aligned.\n+            --  If we have a reference to a bit packed array, we copy it, since\n+            --  the actual must be byte aligned.\n \n             --  Is this really necessary in all cases???\n "}, {"sha": "27489cdf99f6dc01027943441e78a44011dfabaf", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0386aad11f240d525a625849e9411a25c7ef07f6/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0386aad11f240d525a625849e9411a25c7ef07f6/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=0386aad11f240d525a625849e9411a25c7ef07f6", "patch": "@@ -5881,6 +5881,36 @@ package body Make is\n                      Executable_Obsolete := Youngest_Obj_File /= No_File;\n                   end if;\n \n+                  --  Check if any library file is more recent than the\n+                  --  executable: there may be an externally built library\n+                  --  file that has been modified.\n+\n+                  if (not Executable_Obsolete)\n+                     and then Main_Project /= No_Project\n+                  then\n+                     declare\n+                        Proj1 : Project_List;\n+                     begin\n+                        Proj1 := Project_Tree.Projects;\n+                        while Proj1 /= null loop\n+                           if Proj1.Project.Library and then\n+                              Proj1.Project.Library_TS > Executable_Stamp\n+                           then\n+                              Executable_Obsolete := True;\n+                              Youngest_Obj_Stamp := Proj1.Project.Library_TS;\n+                              Name_Len := 0;\n+                              Add_Str_To_Name_Buffer (\"library \");\n+                              Add_Str_To_Name_Buffer\n+                                (Get_Name_String (Proj1.Project.Library_Name));\n+                              Youngest_Obj_File := Name_Find;\n+                              exit;\n+                           end if;\n+\n+                           Proj1 := Proj1.Next;\n+                        end loop;\n+                     end;\n+                  end if;\n+\n                   --  Return if the executable is up to date and otherwise\n                   --  motivate the relink/rebind.\n "}, {"sha": "8b7749a50a12f80f40222a00d2694050c04e4b5c", "filename": "gcc/ada/ttypes.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0386aad11f240d525a625849e9411a25c7ef07f6/gcc%2Fada%2Fttypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0386aad11f240d525a625849e9411a25c7ef07f6/gcc%2Fada%2Fttypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fttypes.ads?ref=0386aad11f240d525a625849e9411a25c7ef07f6", "patch": "@@ -206,7 +206,7 @@ package Ttypes is\n    --  True if instructions will fail if data is misaligned\n \n    Target_Double_Float_Alignment : Nat := Get_Double_Float_Alignment;\n-   --  The default alignment of \"double\" floating-point types, i.e. floating-\n+   --  The default alignment of \"double\" floating-point types, i.e. floating\n    --  point types whose size is equal to 64 bits, or 0 if this alignment is\n    --  not specifically capped.\n "}]}