{"sha": "3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q4NTMyYWEyYTE2YTE0ZDVjYmI0NTRjZWZjZDFhM2Q5ZDM0MmZmOA==", "commit": {"author": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-11-18T15:59:48Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-11-18T15:59:48Z"}, "message": "arm.c (target_float_switch): New variable..\n\n\t* config/arm/arm.c (target_float_switch): New variable..\n\t(arm_override_options): Use TARGET_DEFAULT_FLOAT_ABI and\n\ttarget_float_switch.\n\t* config/arm/arm.h (target_float_switch): Declare.\n\t(ARM_FLAG_SOFT_FLOAT): Remove.\n\t(TARGET_SWITCHES): Remove hard-float and soft-float.\n\t(TARGET_OPTIONS): Add hard-float and soft-float.\n\t(TARGET_DEFAULT_FLOAT_ABI): Define.\n\t* config/arm/coff.h (TARGET_DEFAULT_FLOAT_ABI): Define\n\t(TARGET_DEFAULT): Don't use ARM_FLAG_SOFT_FLOAT.\n\t* config/arm/elf.h: Don't use ARM_FLAG_SOFT_FLOAT.\n\t* config/arm/netbsd-elf.h: Ditto.\n\t* config/arm/netbsd.h: Ditto.\n\t* config/arm/pe.h: Ditto.\n\t* config/arm/unknown-elf.h: Ditto.\n\t* config/arm/wince-pe.h: Ditto.\n\t* config/arm/linux-elf.h (TARGET_DEFAULT_FLOAT_ABI): Define.\n\t* config/arm/semi.h (TARGET_DEFAULT_FLOAT_ABI): Define.\n\t* config/arm/semiaof.h (TARGET_DEFAULT_FLOAT_ABI): Define.\n\nFrom-SVN: r90872", "tree": {"sha": "2f94ce61489cbc8b61b3f4668e3bf73ef12e07ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f94ce61489cbc8b61b3f4668e3bf73ef12e07ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/comments", "author": null, "committer": null, "parents": [{"sha": "94b112fb245529e3c01a033faa74bced5c897a82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94b112fb245529e3c01a033faa74bced5c897a82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94b112fb245529e3c01a033faa74bced5c897a82"}], "stats": {"total": 62, "additions": 41, "deletions": 21}, "files": [{"sha": "80f1f582a01c0e8ead7d87e7df29998243fe78fb", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8", "patch": "@@ -352,6 +352,9 @@ const char * target_fpe_name = NULL;\n /* Set by the -mfloat-abi=... option.  */\n const char * target_float_abi_name = NULL;\n \n+/* Set by the legacy -mhard-float and -msoft-float options.  */\n+const char * target_float_switch = NULL;\n+\n /* Set by the -mabi=... option.  */\n const char * target_abi_name = NULL;\n \n@@ -1078,14 +1081,16 @@ arm_override_options (void)\n \terror (\"invalid floating point abi: -mfloat-abi=%s\",\n \t       target_float_abi_name);\n     }\n-  else\n+  else if (target_float_switch)\n     {\n-      /* Use soft-float target flag.  */\n-      if (target_flags & ARM_FLAG_SOFT_FLOAT)\n-\tarm_float_abi = ARM_FLOAT_ABI_SOFT;\n-      else\n+      /* This is a bit of a hack to avoid needing target flags for these.  */\n+      if (target_float_switch[1] == 'h')\n \tarm_float_abi = ARM_FLOAT_ABI_HARD;\n+      else\n+\tarm_float_abi = ARM_FLOAT_ABI_SOFT;\n     }\n+  else\n+    arm_float_abi = TARGET_DEFAULT_FLOAT_ABI;\n \n   if (arm_float_abi == ARM_FLOAT_ABI_HARD && TARGET_VFP)\n     sorry (\"-mfloat-abi=hard and VFP\");"}, {"sha": "f8a000255bddf77571d53e45897b3f6d0c508d7f", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8", "patch": "@@ -125,6 +125,8 @@ extern const char *target_fpu_name;\n extern const char *target_fpe_name;\n /* Whether to use floating point hardware.  */\n extern const char *target_float_abi_name;\n+/* For -m{soft,hard}-float.  */\n+extern const char *target_float_switch;\n /* Which ABI to use.  */\n extern const char *target_abi_name;\n /* Define the information needed to generate branch insns.  This is\n@@ -212,9 +214,7 @@ extern GTY(()) rtx aof_pic_label;\n #define ARM_FLAG_APCS_REENT\t(1 << 6)\n \n   /* FLAG 0x0080 now spare (used to be alignment traps).  */\n-/* Nonzero if all floating point instructions are missing (and there is no\n-   emulator either).  Generate function calls for all ops in this case.  */\n-#define ARM_FLAG_SOFT_FLOAT\t(1 << 8)\n+  /* FLAG (1 << 8) is now spare (used to be soft-float).  */\n \n /* Nonzero if we should compile with BYTES_BIG_ENDIAN set to 1.  */\n #define ARM_FLAG_BIG_END\t(1 << 9)\n@@ -329,10 +329,6 @@ extern GTY(()) rtx aof_pic_label;\n   {\"apcs-reentrant\",\t\tARM_FLAG_APCS_REENT,\t\t\t\\\n    N_(\"Generate re-entrant, PIC code\") },\t\t\t\t\\\n   {\"no-apcs-reentrant\",\t       -ARM_FLAG_APCS_REENT, \"\" },\t\t\\\n-  {\"soft-float\",\t\tARM_FLAG_SOFT_FLOAT,\t\t\t\\\n-   N_(\"Use library calls to perform FP operations\") },\t\t\t\\\n-  {\"hard-float\",\t       -ARM_FLAG_SOFT_FLOAT,\t\t\t\\\n-   N_(\"Use hardware floating point instructions\") },\t\t\t\\\n   {\"big-endian\",\t\tARM_FLAG_BIG_END,\t\t\t\\\n    N_(\"Assume target CPU is configured as big endian\") },\t\t\\\n   {\"little-endian\",\t       -ARM_FLAG_BIG_END,\t\t\t\\\n@@ -397,7 +393,11 @@ extern GTY(()) rtx aof_pic_label;\n    N_(\"Specify the minimum bit alignment of structures\"), 0},\t\t\\\n   {\"pic-register=\", & arm_pic_register_string,\t\t\t\t\\\n    N_(\"Specify the register to be used for PIC addressing\"), 0},\t\\\n-  {\"abi=\", &target_abi_name, N_(\"Specify an ABI\"), 0}\t\t\t\\\n+  {\"abi=\", &target_abi_name, N_(\"Specify an ABI\"), 0},\t\t\t\\\n+  {\"soft-float\", &target_float_switch,\t\t\t\t\t\\\n+   N_(\"Alias for -mfloat-abi=soft\"), 0},\t\t\t\t\\\n+  {\"hard-float\", &target_float_switch,\t\t\t\t\t\\\n+   N_(\"Alias for -mfloat-abi=hard\"), 0}\t\t\t\t\t\\\n }\n \n /* Support for a compile-time default CPU, et cetera.  The rules are:\n@@ -481,6 +481,10 @@ enum float_abi_type\n \n extern enum float_abi_type arm_float_abi;\n \n+#ifndef TARGET_DEFAULT_FLOAT_ABI\n+#define TARGET_DEFAULT_FLOAT_ABI ARM_FLOAT_ABI_SOFT\n+#endif\n+\n /* Which ABI to use.  */\n enum arm_abi_type\n {"}, {"sha": "5ad7fb68e2f84398c38414ec8bc04154bc94ee8c", "filename": "gcc/config/arm/coff.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Fcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Fcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcoff.h?ref=3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8", "patch": "@@ -30,8 +30,11 @@\n #undef  TARGET_VERSION\n #define TARGET_VERSION fputs (\" (ARM/coff)\", stderr)\n \n+#undef  TARGET_DEFAULT_FLOAT_ABI\n+#define TARGET_DEFAULT_FLOAT_ABI ARM_FLOAT_ABI_SOFT\n+\n #undef  TARGET_DEFAULT\n-#define TARGET_DEFAULT (ARM_FLAG_SOFT_FLOAT | ARM_FLAG_APCS_FRAME)\n+#define TARGET_DEFAULT (ARM_FLAG_APCS_FRAME)\n \n #ifndef MULTILIB_DEFAULTS\n #define MULTILIB_DEFAULTS \\"}, {"sha": "a6c6102d088932153ba3e0119eb409a758752914", "filename": "gcc/config/arm/elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Felf.h?ref=3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8", "patch": "@@ -108,7 +108,7 @@\n #endif\n \n #ifndef TARGET_DEFAULT\n-#define TARGET_DEFAULT (ARM_FLAG_SOFT_FLOAT | ARM_FLAG_APCS_FRAME)\n+#define TARGET_DEFAULT (ARM_FLAG_APCS_FRAME)\n #endif\n \n #ifndef MULTILIB_DEFAULTS"}, {"sha": "e85b6d035c69038cc98ea6cc37917b3c7d963439", "filename": "gcc/config/arm/linux-elf.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Flinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Flinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-elf.h?ref=3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8", "patch": "@@ -30,6 +30,9 @@\n /* Do not assume anything about header files.  */\n #define NO_IMPLICIT_EXTERN_C\n \n+#undef  TARGET_DEFAULT_FLOAT_ABI\n+#define TARGET_DEFAULT_FLOAT_ABI ARM_FLOAT_ABI_HARD\n+\n #undef  TARGET_DEFAULT\n #define TARGET_DEFAULT (0)\n "}, {"sha": "cc69064c70fe54d35498f5dddc5754ce812d5e2b", "filename": "gcc/config/arm/netbsd-elf.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fnetbsd-elf.h?ref=3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8", "patch": "@@ -35,8 +35,7 @@\n /* Default it to use ATPCS with soft-VFP.  */\n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT\t\t\t\\\n-  (ARM_FLAG_SOFT_FLOAT\t\t\t\\\n-   | ARM_FLAG_APCS_FRAME\t\t\\\n+  (ARM_FLAG_APCS_FRAME\t\t\t\\\n    | TARGET_ENDIAN_DEFAULT)\n \n #undef ARM_DEFAULT_ABI"}, {"sha": "8b9e437a66ba43db5cd45fe4b1a6a74f808afbe4", "filename": "gcc/config/arm/netbsd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fnetbsd.h?ref=3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8", "patch": "@@ -36,7 +36,7 @@\n #define SUBTARGET_CPU_DEFAULT TARGET_CPU_arm6\n \n #undef TARGET_DEFAULT\n-#define TARGET_DEFAULT (ARM_FLAG_SOFT_FLOAT | ARM_FLAG_APCS_FRAME)\n+#define TARGET_DEFAULT (ARM_FLAG_APCS_FRAME)\n \n /* Some defines for CPP.\n    arm32 is the NetBSD port name, so we always define arm32 and __arm32__.  */"}, {"sha": "d47489574a181775ba9aae5201fe3dbf2a5e0e3d", "filename": "gcc/config/arm/pe.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Fpe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Fpe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpe.h?ref=3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8", "patch": "@@ -60,7 +60,7 @@\n { \"no-nop-fun-dllimport\",\t- TARGET_FLAG_NOP_FUN, \"\" },\n \n #undef  TARGET_DEFAULT\n-#define TARGET_DEFAULT\t(ARM_FLAG_SOFT_FLOAT | TARGET_FLAG_NOP_FUN)\n+#define TARGET_DEFAULT\t(TARGET_FLAG_NOP_FUN)\n \n #undef  MULTILIB_DEFAULTS\n #define MULTILIB_DEFAULTS \\"}, {"sha": "d12ef4bacc1f0fcaa3e7cbfdf97b83a44fb3c531", "filename": "gcc/config/arm/semi.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Fsemi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Fsemi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fsemi.h?ref=3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8", "patch": "@@ -38,6 +38,10 @@\n #define TARGET_VERSION fputs (\" (ARM/semi-hosted)\", stderr);\n #endif\n \n+#ifndef TARGET_DEFAULT_FLOAT_ABI\n+#define TARGET_DEFAULT_FLOAT_ABI ARM_FLOAT_ABI_HARD\n+#endif\n+\n #ifndef TARGET_DEFAULT\n #define TARGET_DEFAULT (ARM_FLAG_APCS_FRAME)\n #endif"}, {"sha": "acce6448a85f5dd11b0d768304a0854d3494043f", "filename": "gcc/config/arm/semiaof.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Fsemiaof.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Fsemiaof.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fsemiaof.h?ref=3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8", "patch": "@@ -32,6 +32,8 @@\n \n #define TARGET_VERSION fputs (\" (ARM/semi-hosted)\", stderr);\n \n+#define TARGET_DEFAULT_FLOAT_ABI ARM_FLOAT_ABI_HARD\n+\n #define TARGET_DEFAULT (0)\n \n /* The Norcroft C library defines size_t as \"unsigned int\".  */"}, {"sha": "775e1e9f188128f0bef944bde4279a190891b2b2", "filename": "gcc/config/arm/unknown-elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Funknown-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Funknown-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Funknown-elf.h?ref=3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8", "patch": "@@ -30,7 +30,7 @@\n \n /* Default to using software floating point.  */\n #ifndef TARGET_DEFAULT\n-#define TARGET_DEFAULT\t(ARM_FLAG_SOFT_FLOAT)\n+#define TARGET_DEFAULT\t(0)\n #endif\n \n /* Now we define the strings used to build the spec file.  */"}, {"sha": "121848b44c93be313a412dd07d6b122485719bba", "filename": "gcc/config/arm/wince-pe.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Fwince-pe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8/gcc%2Fconfig%2Farm%2Fwince-pe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fwince-pe.h?ref=3d8532aa2a16a14d5cbb454cefcd1a3d9d342ff8", "patch": "@@ -20,7 +20,7 @@\n    Boston, MA 02111-1307, USA.  */\n \n #undef  TARGET_DEFAULT\n-#define TARGET_DEFAULT\t(ARM_FLAG_SOFT_FLOAT | TARGET_FLAG_NOP_FUN)\n+#define TARGET_DEFAULT\t(TARGET_FLAG_NOP_FUN)\n \n #undef  MULTILIB_DEFAULTS\n #define MULTILIB_DEFAULTS \\"}]}