{"sha": "0d03cda4fc217fca4d93bc5dcb69c1ba84ae720d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQwM2NkYTRmYzIxN2ZjYTRkOTNiYzVkY2I2OWMxYmE4NGFlNzIwZA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-08-04T10:03:32Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-08-04T10:03:32Z"}, "message": "PR 61713: ICE when expanding single-threaded version of atomic_test_and_set.\n\n\tPR target/61713\n\t* gcc/optabs.c (expand_atomic_test_and_set): Do not try to emit\n\tmove to subtarget in serial version if result is ignored.\n\n\tPR target/61713\n\t* gcc.dg/pr61756.c: New test.\n\nFrom-SVN: r213555", "tree": {"sha": "d5db82793608239ec1d74ec7fe7d26fa56dc55f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5db82793608239ec1d74ec7fe7d26fa56dc55f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d03cda4fc217fca4d93bc5dcb69c1ba84ae720d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d03cda4fc217fca4d93bc5dcb69c1ba84ae720d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d03cda4fc217fca4d93bc5dcb69c1ba84ae720d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d03cda4fc217fca4d93bc5dcb69c1ba84ae720d/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d0b56ad0cbcc35f2e7b9cd24529a45ed1bbb865"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "f201518d3c15df47480a8bc9603b731a8fa9d5f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d03cda4fc217fca4d93bc5dcb69c1ba84ae720d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d03cda4fc217fca4d93bc5dcb69c1ba84ae720d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d03cda4fc217fca4d93bc5dcb69c1ba84ae720d", "patch": "@@ -1,3 +1,9 @@\n+2014-08-04  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/61713\n+\t* gcc/optabs.c (expand_atomic_test_and_set): Do not try to emit\n+\tmove to subtarget in serial version if result is ignored.\n+\n 2014-07-14  Ramana Radhakrishnan <ramana.radhakrishnan@arm.com>\n             Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n "}, {"sha": "65328a668ba024b10d0f9637f0a935539243abd9", "filename": "gcc/optabs.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d03cda4fc217fca4d93bc5dcb69c1ba84ae720d/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d03cda4fc217fca4d93bc5dcb69c1ba84ae720d/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=0d03cda4fc217fca4d93bc5dcb69c1ba84ae720d", "patch": "@@ -7356,7 +7356,10 @@ expand_atomic_test_and_set (rtx target, rtx mem, enum memmodel model)\n      perform the operation.  */\n   if (!ret)\n     {\n-      emit_move_insn (subtarget, mem);\n+      /* If the result is ignored skip the move to target.  */\n+      if (subtarget != const0_rtx)\n+        emit_move_insn (subtarget, mem);\n+\n       emit_move_insn (mem, trueval);\n       ret = subtarget;\n     }"}, {"sha": "e149043758a3d95370d90859fff73faec0d9178d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d03cda4fc217fca4d93bc5dcb69c1ba84ae720d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d03cda4fc217fca4d93bc5dcb69c1ba84ae720d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0d03cda4fc217fca4d93bc5dcb69c1ba84ae720d", "patch": "@@ -1,3 +1,8 @@\n+2014-08-04  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR target/61713\n+\t* gcc.dg/pr61756.c: New test.\n+\n 2014-08-04  Tom de Vries  <tom@codesourcery.com>\n \n \t* gcc.dg/cproj-fails-with-broken-glibc.c: Use xfail for broken glibc"}, {"sha": "c0212907558cd05e61dc06e60e5c54ca7971bdc2", "filename": "gcc/testsuite/gcc.dg/pr61756.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d03cda4fc217fca4d93bc5dcb69c1ba84ae720d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr61756.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d03cda4fc217fca4d93bc5dcb69c1ba84ae720d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr61756.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr61756.c?ref=0d03cda4fc217fca4d93bc5dcb69c1ba84ae720d", "patch": "@@ -0,0 +1,15 @@\n+/* PR target/61756  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -march=armv5\" { target arm*-*-*  } } */\n+\n+#include <stdatomic.h>\n+\n+static volatile atomic_flag guard = ATOMIC_FLAG_INIT;\n+\n+void\n+try_atomic_flag_test_and_set (void)\n+{\n+  atomic_flag_test_and_set (&guard);\n+}"}]}