{"sha": "0039fa5565d141f17b2517100a32694c18504802", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAzOWZhNTU2NWQxNDFmMTdiMjUxNzEwMGEzMjY5NGMxODUwNDgwMg==", "commit": {"author": {"name": "Adam Nemet", "email": "anemet@lnxw.com", "date": "2004-10-28T19:30:49Z"}, "committer": {"name": "Adam Nemet", "email": "nemet@gcc.gnu.org", "date": "2004-10-28T19:30:49Z"}, "message": "re PR middle-end/18160 (ICE on taking register variable address)\n\n\tPR middle-end/18160\n\t* c-typeck.c (c_mark_addressable): Issue error if address of a\n\tregister variable is taken.  Use \"%qD\" to print DECL_NAME.\n\nFrom-SVN: r89772", "tree": {"sha": "03d631e3469748cc661ebe96d5fa06e820f94e93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03d631e3469748cc661ebe96d5fa06e820f94e93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0039fa5565d141f17b2517100a32694c18504802", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0039fa5565d141f17b2517100a32694c18504802", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0039fa5565d141f17b2517100a32694c18504802", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0039fa5565d141f17b2517100a32694c18504802/comments", "author": null, "committer": null, "parents": [{"sha": "5c588b22b57641e0c766b2fbf77ed4b9836e9805", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c588b22b57641e0c766b2fbf77ed4b9836e9805", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c588b22b57641e0c766b2fbf77ed4b9836e9805"}], "stats": {"total": 29, "additions": 15, "deletions": 14}, "files": [{"sha": "0aa6c693104b38a7af13584a26a4bbdb1fca56cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0039fa5565d141f17b2517100a32694c18504802/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0039fa5565d141f17b2517100a32694c18504802/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0039fa5565d141f17b2517100a32694c18504802", "patch": "@@ -1,3 +1,9 @@\n+2004-10-28  Adam Nemet  <anemet@lnxw.com>\n+\n+\tPR middle-end/18160  \n+\t* c-typeck.c (c_mark_addressable): Issue error if address of a\n+\tregister variable is taken.  Use \"%qD\" to print DECL_NAME.\n+\n 2004-10-28  Diego Novillo  <dnovillo@redhat.com>\n \n \t* opts.c (decode_options): Don't run PRE at -Os."}, {"sha": "7d599bce05ca58fe12666689a8936f8bcda025a1", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0039fa5565d141f17b2517100a32694c18504802/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0039fa5565d141f17b2517100a32694c18504802/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=0039fa5565d141f17b2517100a32694c18504802", "patch": "@@ -2818,8 +2818,8 @@ c_mark_addressable (tree exp)\n       case COMPONENT_REF:\n \tif (DECL_C_BIT_FIELD (TREE_OPERAND (x, 1)))\n \t  {\n-\t    error (\"cannot take address of bit-field %qs\",\n-\t\t   IDENTIFIER_POINTER (DECL_NAME (TREE_OPERAND (x, 1))));\n+\t    error\n+\t      (\"cannot take address of bit-field %qD\", TREE_OPERAND (x, 1));\n \t    return false;\n \t  }\n \n@@ -2846,24 +2846,19 @@ c_mark_addressable (tree exp)\n \t  {\n \t    if (TREE_PUBLIC (x) || TREE_STATIC (x) || DECL_EXTERNAL (x))\n \t      {\n-\t\terror (\"global register variable %qs used in nested function\",\n-\t\t       IDENTIFIER_POINTER (DECL_NAME (x)));\n+\t\terror\n+\t\t  (\"global register variable %qD used in nested function\", x);\n \t\treturn false;\n \t      }\n-\t    pedwarn (\"register variable %qs used in nested function\",\n-\t\t     IDENTIFIER_POINTER (DECL_NAME (x)));\n+\t    pedwarn (\"register variable %qD used in nested function\", x);\n \t  }\n \telse if (C_DECL_REGISTER (x))\n \t  {\n \t    if (TREE_PUBLIC (x) || TREE_STATIC (x) || DECL_EXTERNAL (x))\n-\t      {\n-\t\terror (\"address of global register variable %qs requested\",\n-\t\t       IDENTIFIER_POINTER (DECL_NAME (x)));\n-\t\treturn false;\n-\t      }\n-\n-\t    pedwarn (\"address of register variable %qs requested\",\n-\t\t     IDENTIFIER_POINTER (DECL_NAME (x)));\n+\t      error (\"address of global register variable %qD requested\", x);\n+\t    else\n+\t      error (\"address of register variable %qD requested\", x);\n+\t    return false;\n \t  }\n \n \t/* drops in */"}]}