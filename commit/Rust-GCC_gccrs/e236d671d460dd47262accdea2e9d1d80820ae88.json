{"sha": "e236d671d460dd47262accdea2e9d1d80820ae88", "node_id": "C_kwDOANBUbNoAKGUyMzZkNjcxZDQ2MGRkNDcyNjJhY2NkZWEyZTlkMWQ4MDgyMGFlODg", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-08-15T11:03:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-08-15T12:31:27Z"}, "message": "Simplify range_on_path_entry\n\nI've noticed that range_on_path_entry does mightly complicated things\nthat don't make sense to me and the commentary might just be\nout of date.  For the sake of it I replaced it with range_on_entry\nand statistics show we thread _more_ jumps with that, so better\nnot do magic there.\n\n\t* gimple-range-path.cc (range_on_path_entry): Just\n\tcall range_on_entry.", "tree": {"sha": "d1621a75cf1c7da37986d4c9e642ba882c98de3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1621a75cf1c7da37986d4c9e642ba882c98de3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e236d671d460dd47262accdea2e9d1d80820ae88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e236d671d460dd47262accdea2e9d1d80820ae88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e236d671d460dd47262accdea2e9d1d80820ae88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e236d671d460dd47262accdea2e9d1d80820ae88/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ad200addc3eaf55fba6cc91db3d3b66eabaf3d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ad200addc3eaf55fba6cc91db3d3b66eabaf3d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ad200addc3eaf55fba6cc91db3d3b66eabaf3d0"}], "stats": {"total": 33, "additions": 1, "deletions": 32}, "files": [{"sha": "78146f5683e4ed4876f9754e7cd837f757b80f85", "filename": "gcc/gimple-range-path.cc", "status": "modified", "additions": 1, "deletions": 32, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e236d671d460dd47262accdea2e9d1d80820ae88/gcc%2Fgimple-range-path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e236d671d460dd47262accdea2e9d1d80820ae88/gcc%2Fgimple-range-path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-path.cc?ref=e236d671d460dd47262accdea2e9d1d80820ae88", "patch": "@@ -153,38 +153,7 @@ path_range_query::range_on_path_entry (vrange &r, tree name)\n {\n   gcc_checking_assert (defined_outside_path (name));\n   basic_block entry = entry_bb ();\n-\n-  // Prefer to use range_of_expr if we have a statement to look at,\n-  // since it has better caching than range_on_edge.\n-  gimple *last = last_stmt (entry);\n-  if (last)\n-    {\n-      if (m_ranger->range_of_expr (r, name, last))\n-\treturn;\n-      gcc_unreachable ();\n-    }\n-\n-  // If we have no statement, look at all the incoming ranges to the\n-  // block.  This can happen when we're querying a block with only an\n-  // outgoing edge (no statement but the fall through edge), but for\n-  // which we can determine a range on entry to the block.\n-  Value_Range tmp (TREE_TYPE (name));\n-  bool changed = false;\n-  r.set_undefined ();\n-  for (unsigned i = 0; i < EDGE_COUNT (entry->preds); ++i)\n-    {\n-      edge e = EDGE_PRED (entry, i);\n-      if (e->src != ENTRY_BLOCK_PTR_FOR_FN (cfun)\n-\t  && m_ranger->range_on_edge (tmp, e, name))\n-\t{\n-\t  r.union_ (tmp);\n-\t  changed = true;\n-\t}\n-    }\n-\n-  // Make sure we don't return UNDEFINED by mistake.\n-  if (!changed)\n-    r.set_varying (TREE_TYPE (name));\n+  m_ranger->range_on_entry (r, entry, name);\n }\n \n // Return the range of NAME at the end of the path being analyzed."}]}