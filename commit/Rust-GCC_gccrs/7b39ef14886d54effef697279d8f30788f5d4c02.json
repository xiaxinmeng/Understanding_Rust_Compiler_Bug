{"sha": "7b39ef14886d54effef697279d8f30788f5d4c02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IzOWVmMTQ4ODZkNTRlZmZlZjY5NzI3OWQ4ZjMwNzg4ZjVkNGMwMg==", "commit": {"author": {"name": "Jack Howarth", "email": "howarth@bromo.med.uc.edu", "date": "2010-05-03T22:37:50Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2010-05-03T22:37:50Z"}, "message": "re PR java/43839 (libjava incorrectly uses -liconv in testsuite, jni.exp when using --with-libiconv-prefix)\n\n\tPR 43839\n\t* testsuite/Makefile.am: Override automake for site.exp creation\n\tand add entry to set libiconv.\n\t* testsuite/Makefile.in: Regenerate.\n\t* testsuite/libjava.jni/jni.exp (gcj_jni_get_cxxflags_invocation):\n\tAdd new global variable libiconv to handle alternative libiconv\n\tlocations.\n\nFrom-SVN: r159009", "tree": {"sha": "2387c5eeb21780304270d962ecd76911de6f0191", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2387c5eeb21780304270d962ecd76911de6f0191"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b39ef14886d54effef697279d8f30788f5d4c02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b39ef14886d54effef697279d8f30788f5d4c02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b39ef14886d54effef697279d8f30788f5d4c02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b39ef14886d54effef697279d8f30788f5d4c02/comments", "author": null, "committer": null, "parents": [{"sha": "cbb4feb38e39bac728d1a0d053f14d9868d99e8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbb4feb38e39bac728d1a0d053f14d9868d99e8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbb4feb38e39bac728d1a0d053f14d9868d99e8d"}], "stats": {"total": 85, "additions": 65, "deletions": 20}, "files": [{"sha": "b1fe9cdeef288225f048f3c26a336ed18ddfbbfd", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b39ef14886d54effef697279d8f30788f5d4c02/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b39ef14886d54effef697279d8f30788f5d4c02/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=7b39ef14886d54effef697279d8f30788f5d4c02", "patch": "@@ -1,3 +1,13 @@\n+2010-05-03  Jack Howarth <howarth@bromo.med.uc.edu>\n+\n+\tPR 43839\n+\t* testsuite/Makefile.am: Override automake for site.exp creation\n+\tand add entry to set libiconv.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* testsuite/libjava.jni/jni.exp (gcj_jni_get_cxxflags_invocation):\n+\tAdd new global variable libiconv to handle alternative libiconv\n+\tlocations.\n+\n 2010-04-19  Andrew Haley  <aph@redhat.com>\n \n \tPR libgcj/40860"}, {"sha": "2aebd7c993846a200d5128e84bb4a45409bb099a", "filename": "libjava/testsuite/Makefile.am", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b39ef14886d54effef697279d8f30788f5d4c02/libjava%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b39ef14886d54effef697279d8f30788f5d4c02/libjava%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FMakefile.am?ref=7b39ef14886d54effef697279d8f30788f5d4c02", "patch": "@@ -24,6 +24,31 @@ MYGCJH = gjavah\n \n .PHONY: compile-tests\n \n+# We need more things in site.exp, but automake completely controls the\n+# creation of that file; there's no way to append to it without messing up\n+# the dependency chains.  So we overrule automake.  This rule is exactly\n+# what it would have generated, plus our own additions.\n+site.exp: Makefile\n+\t@echo 'Making a new site.exp file...'\n+\t@echo '## these variables are automatically generated by make ##' >site.tmp\n+\t@echo '# Do not edit here.  If you wish to override these values' >>site.tmp\n+\t@echo '# edit the last section' >>site.tmp\n+\t@echo 'set srcdir $(srcdir)' >>site.tmp\n+\t@echo \"set objdir `pwd`\" >>site.tmp\n+\t@echo 'set build_alias \"$(build_alias)\"' >>site.tmp\n+\t@echo 'set build_triplet $(build_triplet)' >>site.tmp\n+\t@echo 'set host_alias \"$(host_alias)\"' >>site.tmp\n+\t@echo 'set host_triplet $(host_triplet)' >>site.tmp\n+\t@echo 'set target_alias \"$(target_alias)\"' >>site.tmp\n+\t@echo 'set target_triplet $(target_triplet)' >>site.tmp\n+\t@echo 'set libiconv \"$(LIBICONV)\"' >>site.tmp\n+\t@echo '## All variables above are generated by configure. Do Not Edit ##' >>site.tmp\n+\t@test ! -f site.exp || \\\n+\t  sed '1,/^## All variables above are.*##/ d' site.exp >> site.tmp\n+\t@-rm -f site.bak\n+\t@test ! -f site.exp || mv site.exp site.bak\n+\t@mv site.tmp site.exp\n+\n check-am: compile-tests\n \n compile-tests:"}, {"sha": "a582efdd72cf9e5811b79cc0bb80db9e5a6eb6f9", "filename": "libjava/testsuite/Makefile.in", "status": "modified", "additions": 25, "deletions": 19, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b39ef14886d54effef697279d8f30788f5d4c02/libjava%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b39ef14886d54effef697279d8f30788f5d4c02/libjava%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FMakefile.in?ref=7b39ef14886d54effef697279d8f30788f5d4c02", "patch": "@@ -388,25 +388,6 @@ check-DEJAGNU: site.exp\n \telse echo \"WARNING: could not find \\`runtest'\" 1>&2; :;\\\n \tfi; \\\n \texit $$exit_status\n-site.exp: Makefile\n-\t@echo 'Making a new site.exp file...'\n-\t@echo '## these variables are automatically generated by make ##' >site.tmp\n-\t@echo '# Do not edit here.  If you wish to override these values' >>site.tmp\n-\t@echo '# edit the last section' >>site.tmp\n-\t@echo 'set srcdir $(srcdir)' >>site.tmp\n-\t@echo \"set objdir `pwd`\" >>site.tmp\n-\t@echo 'set build_alias \"$(build_alias)\"' >>site.tmp\n-\t@echo 'set build_triplet $(build_triplet)' >>site.tmp\n-\t@echo 'set host_alias \"$(host_alias)\"' >>site.tmp\n-\t@echo 'set host_triplet $(host_triplet)' >>site.tmp\n-\t@echo 'set target_alias \"$(target_alias)\"' >>site.tmp\n-\t@echo 'set target_triplet $(target_triplet)' >>site.tmp\n-\t@echo '## All variables above are generated by configure. Do Not Edit ##' >>site.tmp\n-\t@test ! -f site.exp || \\\n-\t  sed '1,/^## All variables above are.*##/ d' site.exp >> site.tmp\n-\t@-rm -f site.bak\n-\t@test ! -f site.exp || mv site.exp site.bak\n-\t@mv site.tmp site.exp\n \n distclean-DEJAGNU:\n \t-rm -f site.exp site.bak\n@@ -557,6 +538,31 @@ uninstall-am:\n \n .PHONY: compile-tests\n \n+# We need more things in site.exp, but automake completely controls the\n+# creation of that file; there's no way to append to it without messing up\n+# the dependency chains.  So we overrule automake.  This rule is exactly\n+# what it would have generated, plus our own additions.\n+site.exp: Makefile\n+\t@echo 'Making a new site.exp file...'\n+\t@echo '## these variables are automatically generated by make ##' >site.tmp\n+\t@echo '# Do not edit here.  If you wish to override these values' >>site.tmp\n+\t@echo '# edit the last section' >>site.tmp\n+\t@echo 'set srcdir $(srcdir)' >>site.tmp\n+\t@echo \"set objdir `pwd`\" >>site.tmp\n+\t@echo 'set build_alias \"$(build_alias)\"' >>site.tmp\n+\t@echo 'set build_triplet $(build_triplet)' >>site.tmp\n+\t@echo 'set host_alias \"$(host_alias)\"' >>site.tmp\n+\t@echo 'set host_triplet $(host_triplet)' >>site.tmp\n+\t@echo 'set target_alias \"$(target_alias)\"' >>site.tmp\n+\t@echo 'set target_triplet $(target_triplet)' >>site.tmp\n+\t@echo 'set libiconv \"$(LIBICONV)\"' >>site.tmp\n+\t@echo '## All variables above are generated by configure. Do Not Edit ##' >>site.tmp\n+\t@test ! -f site.exp || \\\n+\t  sed '1,/^## All variables above are.*##/ d' site.exp >> site.tmp\n+\t@-rm -f site.bak\n+\t@test ! -f site.exp || mv site.exp site.bak\n+\t@mv site.tmp site.exp\n+\n check-am: compile-tests\n \n compile-tests:"}, {"sha": "dbeced481a824858cd6092c84a6a0a7abd33b5cc", "filename": "libjava/testsuite/libjava.jni/jni.exp", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b39ef14886d54effef697279d8f30788f5d4c02/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b39ef14886d54effef697279d8f30788f5d4c02/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp?ref=7b39ef14886d54effef697279d8f30788f5d4c02", "patch": "@@ -251,7 +251,11 @@ proc gcj_jni_invocation_compile_c_to_binary {file {options {}}} {\n }\n \n proc gcj_jni_get_cxxflags_invocation {} {\n+  global libiconv\n   global LIBJAVA\n+  if {$libiconv == \"\"} {\n+      set libiconv \"-liconv\"\n+  }\n   if [info exists LIBJAVA] {\n       set libjava $LIBJAVA;\n   } else {\n@@ -267,7 +271,7 @@ proc gcj_jni_get_cxxflags_invocation {} {\n   # to just make the linker find libgcc using -L options.\n   # Similar logic applies to libgcj.\n   if { [istarget \"*-*-darwin*\"] } {\n-    lappend cxxflags -shared-libgcc -lgcj -liconv\n+    eval lappend cxxflags \"-shared-libgcc -lgcj $libiconv\"\n   }\n \n   if { [istarget \"*-*-solaris*\"] } {"}]}