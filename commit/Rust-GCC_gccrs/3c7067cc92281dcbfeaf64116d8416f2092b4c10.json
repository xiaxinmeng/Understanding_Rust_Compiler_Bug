{"sha": "3c7067cc92281dcbfeaf64116d8416f2092b4c10", "node_id": "C_kwDOANBUbNoAKDNjNzA2N2NjOTIyODFkY2JmZWFmNjQxMTZkODQxNmYyMDkyYjRjMTA", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-01-24T13:49:20Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-01-31T07:55:45Z"}, "message": "Reduce multiple_of_p uses\n\nThere are a few cases where we know we're dealing with (poly-)integer\nconstants, so remove the use of multiple_of_p in those cases to make\nthe PR100499 fix less impactful.\n\n2022-01-24  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/100499\n\t* tree-cfg.cc (verify_gimple_assign_ternary): Use multiple_p\n\ton poly-ints instead of multiple_of_p.\n\t* tree-ssa.cc (maybe_rewrite_mem_ref_base): Likewise.\n\t(non_rewritable_mem_ref_base): Likewise.\n\t(non_rewritable_lvalue_p): Likewise.\n\t(execute_update_addresses_taken): Likewise.", "tree": {"sha": "0630ee958bf6b8c0acc00340e724df04c892bb63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0630ee958bf6b8c0acc00340e724df04c892bb63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c7067cc92281dcbfeaf64116d8416f2092b4c10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c7067cc92281dcbfeaf64116d8416f2092b4c10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c7067cc92281dcbfeaf64116d8416f2092b4c10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c7067cc92281dcbfeaf64116d8416f2092b4c10/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c67ffc256d01eeb293a7598ee553828a0b1e0a28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c67ffc256d01eeb293a7598ee553828a0b1e0a28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c67ffc256d01eeb293a7598ee553828a0b1e0a28"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "260a7fb97c65779d090ef53a50f326ab41a6d3c6", "filename": "gcc/tree-cfg.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c7067cc92281dcbfeaf64116d8416f2092b4c10/gcc%2Ftree-cfg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c7067cc92281dcbfeaf64116d8416f2092b4c10/gcc%2Ftree-cfg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.cc?ref=3c7067cc92281dcbfeaf64116d8416f2092b4c10", "patch": "@@ -4410,7 +4410,8 @@ verify_gimple_assign_ternary (gassign *stmt)\n \t\t\t\t\tTREE_TYPE (rhs2_type))\n \t\t && multiple_p (TYPE_VECTOR_SUBPARTS (rhs1_type),\n \t\t\t\tTYPE_VECTOR_SUBPARTS (rhs2_type))\n-\t\t && multiple_of_p (bitsizetype, rhs3, TYPE_SIZE (rhs2_type)))))\n+\t\t && multiple_p (wi::to_poly_offset (rhs3),\n+\t\t\t\twi::to_poly_offset (TYPE_SIZE (rhs2_type))))))\n \t{\n \t  error (\"not allowed type combination in %qs\", code_name);\n \t  debug_generic_expr (rhs1_type);"}, {"sha": "8fe0682981d47e533b5686eb5fd1911a28e6df56", "filename": "gcc/tree-ssa.cc", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c7067cc92281dcbfeaf64116d8416f2092b4c10/gcc%2Ftree-ssa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c7067cc92281dcbfeaf64116d8416f2092b4c10/gcc%2Ftree-ssa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.cc?ref=3c7067cc92281dcbfeaf64116d8416f2092b4c10", "patch": "@@ -1417,8 +1417,8 @@ maybe_rewrite_mem_ref_base (tree *tp, bitmap suitable_for_renaming)\n       if (TREE_CODE (TREE_TYPE (sym)) == VECTOR_TYPE\n \t  && useless_type_conversion_p (TREE_TYPE (*tp),\n \t\t\t\t\tTREE_TYPE (TREE_TYPE (sym)))\n-\t  && multiple_of_p (sizetype, TREE_OPERAND (*tp, 1),\n-\t\t\t    TYPE_SIZE_UNIT (TREE_TYPE (*tp))))\n+\t  && multiple_p (mem_ref_offset (*tp),\n+\t\t\t wi::to_poly_offset (TYPE_SIZE_UNIT (TREE_TYPE (*tp)))))\n \t{\n \t  *tp = build3 (BIT_FIELD_REF, TREE_TYPE (*tp), sym, \n \t\t\tTYPE_SIZE (TREE_TYPE (*tp)),\n@@ -1504,8 +1504,8 @@ non_rewritable_mem_ref_base (tree ref)\n \t  && known_ge (mem_ref_offset (base), 0)\n \t  && known_gt (wi::to_poly_offset (TYPE_SIZE_UNIT (TREE_TYPE (decl))),\n \t\t       mem_ref_offset (base))\n-\t  && multiple_of_p (sizetype, TREE_OPERAND (base, 1),\n-\t\t\t    TYPE_SIZE_UNIT (TREE_TYPE (base))))\n+\t  && multiple_p (mem_ref_offset (base),\n+\t\t\t wi::to_poly_offset (TYPE_SIZE_UNIT (TREE_TYPE (base)))))\n \treturn NULL_TREE;\n       /* For same sizes and zero offset we can use a VIEW_CONVERT_EXPR.  */\n       if (integer_zerop (TREE_OPERAND (base, 1))\n@@ -1596,8 +1596,8 @@ non_rewritable_lvalue_p (tree lhs)\n \t  && known_ge (mem_ref_offset (lhs), 0)\n \t  && known_gt (wi::to_poly_offset (TYPE_SIZE_UNIT (TREE_TYPE (decl))),\n \t\t       mem_ref_offset (lhs))\n-\t  && multiple_of_p (sizetype, TREE_OPERAND (lhs, 1),\n-\t\t\t    TYPE_SIZE_UNIT (TREE_TYPE (lhs)))\n+\t  && multiple_p (mem_ref_offset (lhs),\n+\t\t\t wi::to_poly_offset (TYPE_SIZE_UNIT (TREE_TYPE (lhs))))\n \t  && known_ge (wi::to_poly_offset (TYPE_SIZE (TREE_TYPE (decl))),\n \t\t       wi::to_poly_offset (TYPE_SIZE (TREE_TYPE (lhs)))))\n \t{\n@@ -1969,9 +1969,9 @@ execute_update_addresses_taken (void)\n \t\t    && known_gt (wi::to_poly_offset\n \t\t\t\t   (TYPE_SIZE_UNIT (TREE_TYPE (sym))),\n \t\t\t\t mem_ref_offset (lhs))\n-\t\t    && multiple_of_p (sizetype,\n-\t\t\t\t      TREE_OPERAND (lhs, 1),\n-\t\t\t\t      TYPE_SIZE_UNIT (TREE_TYPE (lhs))))\n+\t\t    && multiple_p (mem_ref_offset (lhs),\n+\t\t\t\t   wi::to_poly_offset\n+\t\t\t\t     (TYPE_SIZE_UNIT (TREE_TYPE (lhs)))))\n \t\t  {\n \t\t    tree val = gimple_assign_rhs1 (stmt);\n \t\t    if (! types_compatible_p (TREE_TYPE (val),"}]}