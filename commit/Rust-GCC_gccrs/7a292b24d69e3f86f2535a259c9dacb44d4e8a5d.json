{"sha": "7a292b24d69e3f86f2535a259c9dacb44d4e8a5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2EyOTJiMjRkNjllM2Y4NmYyNTM1YTI1OWM5ZGFjYjQ0ZDRlOGE1ZA==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2007-01-16T02:05:47Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2007-01-16T02:05:47Z"}, "message": "darwin.h: Update copyright.\n\n2007-01-15  Eric Christopher  <echristo@apple.com>\n\n\t    * config/darwin.h: Update copyright.\n\t    (TARGET_OPTION_TRANSLATE_TABLE): Add umbrella.\n\t    (LINK_COMMAND_SPEC): Add -u.\n\t    (LINK_SPEC): Fix umbrella for above.\n\nFrom-SVN: r120815", "tree": {"sha": "6b2a90d546bd764f037b94d90f02d8056b47a292", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b2a90d546bd764f037b94d90f02d8056b47a292"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a292b24d69e3f86f2535a259c9dacb44d4e8a5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a292b24d69e3f86f2535a259c9dacb44d4e8a5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a292b24d69e3f86f2535a259c9dacb44d4e8a5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a292b24d69e3f86f2535a259c9dacb44d4e8a5d/comments", "author": null, "committer": null, "parents": [{"sha": "1926dfcb36798c8a1a7c051d114d5a3294960194", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1926dfcb36798c8a1a7c051d114d5a3294960194", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1926dfcb36798c8a1a7c051d114d5a3294960194"}], "stats": {"total": 30, "additions": 19, "deletions": 11}, "files": [{"sha": "aed157dc7a7312d4ad8bc6f8b0dca7902a4f2d89", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a292b24d69e3f86f2535a259c9dacb44d4e8a5d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a292b24d69e3f86f2535a259c9dacb44d4e8a5d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a292b24d69e3f86f2535a259c9dacb44d4e8a5d", "patch": "@@ -1,3 +1,10 @@\n+2007-01-15  Eric Christopher  <echristo@apple.com>\n+\n+\t* config/darwin.h: Update copyright.\n+\t(TARGET_OPTION_TRANSLATE_TABLE): Add umbrella.\n+\t(LINK_COMMAND_SPEC): Add -u.\n+\t(LINK_SPEC): Fix umbrella for above.\n+\n 2007-01-15  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* config/soft-fp/op-common.h, config/soft-fp/op-4.h: Update from\n@@ -52,10 +59,10 @@\n \t* param.h (MIN_VECT_LOOP_BOUND): New.\n \t* params.def (MIN_VECT_LOOP_BOUND): New.\n \t* tree-vectorizer.c (slpeel_tree_peel_loop_to_edge): Takes another\n-\targument - minimum threshold for number of iterations. \n+\targument - minimum threshold for number of iterations.\n \t* tree-vectorizer.h (slpeel_tree_peel_loop_to_edge): Add another\n \targument to declaration.\n-\t* tree-vect-analyze.c (vect_analyze_operations): Check value of \n+\t* tree-vect-analyze.c (vect_analyze_operations): Check value of\n \tMIN_VECT_LOOP_BOUND.\n \t* tree-vect-transform.c (vect_do_peeling_for_loop_bound): Call\n \tslpeel_tree_peel_loop_to_edge with additional argument.\n@@ -128,7 +135,7 @@\n 2007-01-12  Olga Golovanevsky  <olga@il.ibm.com>\n \n \t* builtins.def : Add BUILT_IN_FREE.\n-\t\n+\n 2007-01-12  Jan Hubicka  <jh@suse.cz>\n \n \tPR tree-optimization/30443\n@@ -645,10 +652,10 @@\n 2007-01-10  Razya Ladelsky  <razya@il.ibm.com>\n \n \t* function.c (get_last_funcdef_no): New function.\n-\t* function.h (get_last_funcdef_no): Declare. \n+\t* function.h (get_last_funcdef_no): Declare.\n \t* tree-inline.c (initialize_cfun): Add initialization.\n \t(tree_function_versioning): Cleanup.\n-\t\n+\n 2007-01-10  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-inline.c (setup_one_parameter): Do not propagate into abnormal\n@@ -735,7 +742,7 @@\n \t(fold_sign_changed_comparison): Likewise.\n \t(fold_unary): Likewise.\n \t(fold_negate_const): Likewise.\n-\t(fold_abs_const): Likewise. \n+\t(fold_abs_const): Likewise.\n \t(fold_not_const): Likewise.\n \t* c-common.c (shorten_compare): Use force_fit_type_double.\n \t* convert.c (convert_to_pointer): Likewise.\n@@ -907,9 +914,9 @@\n \t* config/score/t-score-elf (MULTILIB_OPTIONS): Change.\n \t* config/score/predicates.md (const_uimm5, sr0_operand, const_simm12,\n \tconst_simm15, const_pow2, const_npow2): Added.\n-\t* config/score/misc.md (insv, extv, extzv, movmemsi, \n+\t* config/score/misc.md (insv, extv, extzv, movmemsi,\n \tmove_lbu_a/b, mov_lhu_a/b etc): Added and fix some bug.\n-\t* config/score/score.c (score_address_cost, score_select_cc_mode): \n+\t* config/score/score.c (score_address_cost, score_select_cc_mode):\n \tAdded.\n \tChange CONST_OK_FOR_LETTER_P/EXTRA_CONSTRAINT define.\n \tUpdate score_rtx_costs for MACRO TARGET_RTX_COSTS."}, {"sha": "25405383148ae8355c6f8014398d94fab227ff2e", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a292b24d69e3f86f2535a259c9dacb44d4e8a5d/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a292b24d69e3f86f2535a259c9dacb44d4e8a5d/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=7a292b24d69e3f86f2535a259c9dacb44d4e8a5d", "patch": "@@ -130,6 +130,7 @@ extern GTY(()) int darwin_ms_struct;\n   { \"-segs_read_write_addr\", \"-Zsegs_read_write_addr\" }, \\\n   { \"-seg_addr_table\", \"-Zseg_addr_table\" }, \\\n   { \"-seg_addr_table_filename\", \"-Zfn_seg_addr_table_filename\" }, \\\n+  { \"-umbrella\", \"-Zumbrella\" }, \\\n   { \"-fapple-kext\", \"-fapple-kext -static -Wa,-static\" }, \\\n   { \"-filelist\", \"-Xlinker -filelist -Xlinker\" },  \\\n   { \"-findirect-virtual-calls\", \"-fapple-kext\" }, \\\n@@ -187,7 +188,7 @@ extern GTY(()) int darwin_ms_struct;\n    !strcmp (STR, \"segprot\") ? 3 :               \\\n    !strcmp (STR, \"sub_library\") ? 1 :           \\\n    !strcmp (STR, \"sub_umbrella\") ? 1 :          \\\n-   !strcmp (STR, \"umbrella\") ? 1 :              \\\n+   !strcmp (STR, \"Zumbrella\") ? 1 :             \\\n    !strcmp (STR, \"undefined\") ? 1 :             \\\n    !strcmp (STR, \"Zunexported_symbols_list\") ? 1 : \\\n    !strcmp (STR, \"Zweak_reference_mismatches\") ? 1 : \\\n@@ -230,7 +231,7 @@ extern GTY(()) int darwin_ms_struct;\n    linkers, and for positional arguments like libraries.  */\n #define LINK_COMMAND_SPEC \"\\\n %{!fdump=*:%{!fsyntax-only:%{!c:%{!M:%{!MM:%{!E:%{!S:\\\n-    %(linker) %l %X %{d} %{s} %{t} %{Z} \\\n+    %(linker) %l %X %{d} %{s} %{t} %{Z} %{u*} \\\n     %{A} %{e*} %{m} %{r} %{x} \\\n     %{o*}%{!o:-o a.out} \\\n     %{!A:%{!nostdlib:%{!nostartfiles:%S}}} \\\n@@ -316,7 +317,7 @@ extern GTY(()) int darwin_ms_struct;\n    %{sub_library*} %{sub_umbrella*} \\\n    \" LINK_SYSROOT_SPEC \" \\\n    %{twolevel_namespace} %{twolevel_namespace_hints} \\\n-   %{umbrella*} \\\n+   %{Zumbrella*: -umbrella %*} \\\n    %{undefined*} \\\n    %{Zunexported_symbols_list*:-unexported_symbols_list %*} \\\n    %{Zweak_reference_mismatches*:-weak_reference_mismatches %*} \\"}]}