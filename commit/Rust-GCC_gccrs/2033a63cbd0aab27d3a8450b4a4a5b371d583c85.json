{"sha": "2033a63cbd0aab27d3a8450b4a4a5b371d583c85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAzM2E2M2NiZDBhYWIyN2QzYTg0NTBiNGE0YTViMzcxZDU4M2M4NQ==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2020-09-04T11:48:36Z"}, "committer": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2020-09-04T11:48:36Z"}, "message": "arm: Improve immediate generation for thumb-1 with -mpurecode [PR96769]\n\nThis patch moves the move-immediate splitter after the regular ones so\nthat it has lower precedence, and updates its constraints.\n\nFor\nint f3 (void) { return 0x11000000; }\nint f3_2 (void) { return 0x12345678; }\n\nwe now generate:\n* with -O2 -mcpu=cortex-m0 -mpure-code:\nf3:\n\tmovs    r0, #136\n\tlsls    r0, r0, #21\n\tbx      lr\nf3_2:\n\tmovs    r0, #18\n\tlsls    r0, r0, #8\n\tadds    r0, r0, #52\n\tlsls    r0, r0, #8\n\tadds    r0, r0, #86\n\tlsls    r0, r0, #8\n\tadds    r0, r0, #121\n\tbx      lr\n\n* with -O2 -mcpu=cortex-m23 -mpure-code:\nf3:\n\tmovs    r0, #136\n\tlsls    r0, r0, #21\n\tbx      lr\nf3_2:\n\tmovw    r0, #22136\n\tmovt    r0, 4660\n\tbx      lr\n\n2020-09-04  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\tPR target/96769\n\tgcc/\n\t* config/arm/thumb1.md: Move movsi splitter for\n\tarm_disable_literal_pool after the other movsi splitters.\n\n\tgcc/testsuite/\n\t* gcc.target/arm/pure-code/pr96769.c: New test.", "tree": {"sha": "2883ceb978de91b9fea34dec02518ac7a0258ce2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2883ceb978de91b9fea34dec02518ac7a0258ce2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2033a63cbd0aab27d3a8450b4a4a5b371d583c85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2033a63cbd0aab27d3a8450b4a4a5b371d583c85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2033a63cbd0aab27d3a8450b4a4a5b371d583c85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2033a63cbd0aab27d3a8450b4a4a5b371d583c85/comments", "author": null, "committer": null, "parents": [{"sha": "c5a6c2237a1156dc43fa32c938fc32acdfc2bff9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5a6c2237a1156dc43fa32c938fc32acdfc2bff9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5a6c2237a1156dc43fa32c938fc32acdfc2bff9"}], "stats": {"total": 50, "additions": 35, "deletions": 15}, "files": [{"sha": "b5377a36785f264733622901e6952ec58cadc75a", "filename": "gcc/config/arm/thumb1.md", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2033a63cbd0aab27d3a8450b4a4a5b371d583c85/gcc%2Fconfig%2Farm%2Fthumb1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2033a63cbd0aab27d3a8450b4a4a5b371d583c85/gcc%2Fconfig%2Farm%2Fthumb1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb1.md?ref=2033a63cbd0aab27d3a8450b4a4a5b371d583c85", "patch": "@@ -64,21 +64,6 @@\n    (set_attr \"conds\" \"clob\")]\n )\n \n-(define_split\n-  [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(match_operand:SI 1 \"immediate_operand\" \"\"))]\n-  \"TARGET_THUMB1\n-   && arm_disable_literal_pool\n-   && GET_CODE (operands[1]) == CONST_INT\n-   && !TARGET_HAVE_MOVT\n-   && !satisfies_constraint_I (operands[1])\"\n-  [(clobber (const_int 0))]\n-  \"\n-    thumb1_gen_const_int (operands[0], INTVAL (operands[1]));\n-    DONE;\n-  \"\n-)\n-\n (define_insn \"*thumb1_adddi3\"\n   [(set (match_operand:DI          0 \"register_operand\" \"=l\")\n \t(plus:DI (match_operand:DI 1 \"register_operand\" \"%0\")\n@@ -832,6 +817,21 @@\n   }\"\n )\n \n+(define_split\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(match_operand:SI 1 \"const_int_operand\" \"\"))]\n+  \"TARGET_THUMB1\n+   && arm_disable_literal_pool\n+   && GET_CODE (operands[1]) == CONST_INT\n+   && !TARGET_HAVE_MOVT\n+   && !satisfies_constraint_K (operands[1])\"\n+  [(clobber (const_int 0))]\n+  \"\n+    thumb1_gen_const_int (operands[0], INTVAL (operands[1]));\n+    DONE;\n+  \"\n+)\n+\n (define_insn \"*thumb1_movhi_insn\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=l,l,m,l*r,*h,l,r\")\n \t(match_operand:HI 1 \"general_operand\"       \"l,m,l,k*h,*r,I,n\"))]"}, {"sha": "c90981fb01019f6b8befeccec955ddf5b24ea222", "filename": "gcc/testsuite/gcc.target/arm/pure-code/pr96769.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2033a63cbd0aab27d3a8450b4a4a5b371d583c85/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpure-code%2Fpr96769.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2033a63cbd0aab27d3a8450b4a4a5b371d583c85/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpure-code%2Fpr96769.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpure-code%2Fpr96769.c?ref=2033a63cbd0aab27d3a8450b4a4a5b371d583c85", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mpure-code\" } */\n+\n+int f3 (void) { return 0x11000000; }\n+int f3_2 (void) { return 0x12345678; }\n+int f3_3 (void) { return -1; }\n+int f3_4 (void) { return 511; }\n+\n+/* For cortex-m0 (thumb-1/v6m), we generate 1 lsls in f3 3 lsls in f3_2 and 1 in f3_4; 1 rsbs in f3_3.  */\n+/* { dg-final { scan-assembler-times \"lsls\" 5 { target { { ! arm_thumb1_movt_ok } && { ! arm_thumb2_ok } } } } } */\n+/* { dg-final { scan-assembler-times \"rsbs\" 1 { target { { ! arm_thumb1_movt_ok } && { ! arm_thumb2_ok } } } } } */\n+\n+/* For cortex-m23 (thumb-1/v8m.base), we generate 1 lsls in f3, and none in f3_2 nor f3_4; 1 rsbs in f3_3.  */\n+/* { dg-final { scan-assembler-times \"lsls\" 1 { target { arm_thumb1_movt_ok && { ! arm_thumb2_ok } } } } } */\n+/* { dg-final { scan-assembler-times \"rsbs\" 1 { target { arm_thumb1_movt_ok && { ! arm_thumb2_ok } } } } } */\n+\n+/* For cortex-m3 (thumb-2/v7m), we generate no lsls and no rsbs.  */\n+/* { dg-final { scan-assembler-times \"lsls\" 0 { target { arm_thumb2_ok } } } } */\n+/* { dg-final { scan-assembler-times \"rsbs\" 0 { target { arm_thumb2_ok } } } } */\n+"}]}