{"sha": "298434c916c14e8adca2cab8a746aee29038c5b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk4NDM0YzkxNmMxNGU4YWRjYTJjYWI4YTc0NmFlZTI5MDM4YzViMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-05-30T19:31:11Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-05-30T19:31:11Z"}, "message": "PR c++/85807 - ICE with call in template NSDMI.\n\n\t* init.c (get_nsdmi): Use push_to/pop_from_top_level.\n\t* tree.c (bot_manip): Don't set_flags_from_callee in a template.\n\nFrom-SVN: r260972", "tree": {"sha": "2ec8d226631111636f2272d5019a251a36d6e3c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ec8d226631111636f2272d5019a251a36d6e3c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/298434c916c14e8adca2cab8a746aee29038c5b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/298434c916c14e8adca2cab8a746aee29038c5b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/298434c916c14e8adca2cab8a746aee29038c5b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/298434c916c14e8adca2cab8a746aee29038c5b3/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fbf5c1c64c0fbfe529ea86924c789e1dbeeb4a24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbf5c1c64c0fbfe529ea86924c789e1dbeeb4a24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbf5c1c64c0fbfe529ea86924c789e1dbeeb4a24"}], "stats": {"total": 54, "additions": 51, "deletions": 3}, "files": [{"sha": "ec5ee7eb9dd13792077a724ee5163bcc45548653", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/298434c916c14e8adca2cab8a746aee29038c5b3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/298434c916c14e8adca2cab8a746aee29038c5b3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=298434c916c14e8adca2cab8a746aee29038c5b3", "patch": "@@ -1,3 +1,9 @@\n+2018-05-24  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/85807 - ICE with call in template NSDMI.\n+\t* init.c (get_nsdmi): Use push_to/pop_from_top_level.\n+\t* tree.c (bot_manip): Don't set_flags_from_callee in a template.\n+\n 2018-05-30  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/85873 - constant initializer_list array not in .rodata."}, {"sha": "acf9c9b7c32f3e79fa3b717066dbe4dd36793076", "filename": "gcc/cp/init.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/298434c916c14e8adca2cab8a746aee29038c5b3/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/298434c916c14e8adca2cab8a746aee29038c5b3/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=298434c916c14e8adca2cab8a746aee29038c5b3", "patch": "@@ -577,6 +577,16 @@ get_nsdmi (tree member, bool in_ctor, tsubst_flags_t complain)\n \n \t  DECL_INSTANTIATING_NSDMI_P (member) = 1;\n \n+\t  bool pushed = false;\n+\t  if (!currently_open_class (DECL_CONTEXT (member)))\n+\t    {\n+\t      push_to_top_level ();\n+\t      push_nested_class (DECL_CONTEXT (member));\n+\t      pushed = true;\n+\t    }\n+\n+\t  gcc_checking_assert (!processing_template_decl);\n+\n \t  inject_this_parameter (DECL_CONTEXT (member), TYPE_UNQUALIFIED);\n \n \t  start_lambda_scope (member);\n@@ -599,6 +609,12 @@ get_nsdmi (tree member, bool in_ctor, tsubst_flags_t complain)\n \t      nsdmi_inst->put (member, init);\n \t    }\n \n+\t  if (pushed)\n+\t    {\n+\t      pop_nested_class ();\n+\t      pop_from_top_level ();\n+\t    }\n+\n \t  input_location = sloc;\n \t  cp_unevaluated_operand = un;\n \t}"}, {"sha": "4bb2879dc5980897d381c90d565ecc369b442de4", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/298434c916c14e8adca2cab8a746aee29038c5b3/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/298434c916c14e8adca2cab8a746aee29038c5b3/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=298434c916c14e8adca2cab8a746aee29038c5b3", "patch": "@@ -3015,7 +3015,8 @@ bot_manip (tree* tp, int* walk_subtrees, void* data_)\n   /* Make a copy of this node.  */\n   t = copy_tree_r (tp, walk_subtrees, NULL);\n   if (TREE_CODE (*tp) == CALL_EXPR || TREE_CODE (*tp) == AGGR_INIT_EXPR)\n-    set_flags_from_callee (*tp);\n+    if (!processing_template_decl)\n+      set_flags_from_callee (*tp);\n   if (data.clear_location && EXPR_HAS_LOCATION (*tp))\n     SET_EXPR_LOCATION (*tp, input_location);\n   return t;"}, {"sha": "d386f871a2e2edd31c3fbf7f6ed93e8d95a54976", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-ice14.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/298434c916c14e8adca2cab8a746aee29038c5b3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/298434c916c14e8adca2cab8a746aee29038c5b3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-ice14.C?ref=298434c916c14e8adca2cab8a746aee29038c5b3", "patch": "@@ -8,7 +8,7 @@ template<typename R, typename... Args>\n struct function<R (Args...)>\n {\n   template<typename F>\n-  function(const F&);\n+  function(const F&) { }\n };\n \n template<typename T>"}, {"sha": "5f58991b5d40f2b4c98a0c3a3150dd9108362a47", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-nsdmi8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/298434c916c14e8adca2cab8a746aee29038c5b3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nsdmi8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/298434c916c14e8adca2cab8a746aee29038c5b3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nsdmi8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-nsdmi8.C?ref=298434c916c14e8adca2cab8a746aee29038c5b3", "patch": "@@ -6,7 +6,7 @@ class A {\n \n public:\n   template <typename _Functor, typename = _Requires<_Functor, void>>\n-  A(_Functor);\n+  A(_Functor) { }\n };\n template <class T> class B {\n   A f = [](T) {};"}, {"sha": "6a5c5e48f209eb15378c97b9be0a22e6f192120f", "filename": "gcc/testsuite/g++.dg/cpp0x/nsdmi-template17.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/298434c916c14e8adca2cab8a746aee29038c5b3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-template17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/298434c916c14e8adca2cab8a746aee29038c5b3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-template17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-template17.C?ref=298434c916c14e8adca2cab8a746aee29038c5b3", "patch": "@@ -0,0 +1,25 @@\n+// PR c++/85807\n+// { dg-do compile { target c++11 } }\n+\n+template <class T>\n+struct limits\n+{\n+  static T max();\n+};\n+\n+template< class ScalarT = double >\n+struct value_statistics_t\n+{\n+  double median = limits<double>::max();\n+};\n+\n+template< class T > // required\n+value_statistics_t<> calc()\n+{\n+  return {};\n+}\n+\n+int main()\n+{\n+  value_statistics_t<> wstats = calc<double>();\n+}"}]}