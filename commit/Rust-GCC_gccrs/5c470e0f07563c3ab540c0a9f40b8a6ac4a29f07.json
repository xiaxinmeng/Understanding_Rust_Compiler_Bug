{"sha": "5c470e0f07563c3ab540c0a9f40b8a6ac4a29f07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM0NzBlMGYwNzU2M2MzYWI1NDBjMGE5ZjQwYjhhNmFjNGEyOWYwNw==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-09-18T19:59:46Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2018-09-18T19:59:46Z"}, "message": "re PR fortran/29550 (Optimize -fexternal-blas calls for conjg())\n\n2018-09-18  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/29550\n\t* gfortran.h (gfc_expr): Add external_blas flag.\n\t* frontend-passes.c (matrix_case): Add case A2TB2T.\n\t(optimize_namespace): Handle flag_external_blas by\n\tcalling call_external_blas.\n\t(get_array_inq_function): Add argument okind. If\n\tit is nonzero, use it as the kind of argument\n\tto be used.\n\t(inline_limit_check): Remove m_case argument, add\n\tlimit argument instead.  Remove assert about m_case.\n\tSet the limit for inlining from the limit argument.\n\t(matmul_lhs_realloc): Handle case A2TB2T.\n\t(inline_matmul_assign): Handle inline limit for other cases with\n\ttwo rank-two matrices.  Remove no-op calls to inline_limit_check.\n\t(call_external_blas): New function.\n\t* trans-intrinsic.c (gfc_conv_intrinsic_funcall): Do not add\n\targument to external BLAS if external_blas is already set.\n\n2018-09-18  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/29550\n\t* gfortran.dg/inline_matmul_13.f90: Adjust count for\n\t_gfortran_matmul.\n\t* gfortran.dg/inline_matmul_16.f90: Likewise.\n\t* gfortran.dg/promotion_2.f90: Add -fblas-matmul-limit=1.  Scan\n\tfor dgemm instead of dgemm_.  Add call to random_number to make\n\tstandard conforming.\n\t* gfortran.dg/matmul_blas_1.f90: New test.\n\t* gfortran.dg/matmul_bounds_14.f: New test.\n\t* gfortran.dg/matmul_bounds_15.f: New test.\n\t* gfortran.dg/matmul_bounds_16.f: New test.\n\t* gfortran.dg/blas_gemm_routines.f: New test / additional file for\n\tpreceding tests.\n\nFrom-SVN: r264411", "tree": {"sha": "a440c9896d62a01d80696cf87942c10e3407077b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a440c9896d62a01d80696cf87942c10e3407077b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c470e0f07563c3ab540c0a9f40b8a6ac4a29f07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c470e0f07563c3ab540c0a9f40b8a6ac4a29f07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c470e0f07563c3ab540c0a9f40b8a6ac4a29f07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c470e0f07563c3ab540c0a9f40b8a6ac4a29f07/comments", "author": null, "committer": null, "parents": [{"sha": "f435162f88d89a25dfd00ba3af9b37bb5575fd5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f435162f88d89a25dfd00ba3af9b37bb5575fd5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f435162f88d89a25dfd00ba3af9b37bb5575fd5e"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "4557bc2a5c892c876a0959481e3509e742a0bd6c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c470e0f07563c3ab540c0a9f40b8a6ac4a29f07/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c470e0f07563c3ab540c0a9f40b8a6ac4a29f07/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5c470e0f07563c3ab540c0a9f40b8a6ac4a29f07", "patch": "@@ -1,3 +1,23 @@\n+2018-09-18  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/29550\n+\t* gfortran.h (gfc_expr): Add external_blas flag.\n+\t* frontend-passes.c (matrix_case): Add case A2TB2T.\n+\t(optimize_namespace): Handle flag_external_blas by\n+\tcalling call_external_blas.\n+\t(get_array_inq_function): Add argument okind. If\n+\tit is nonzero, use it as the kind of argument\n+\tto be used.\n+\t(inline_limit_check): Remove m_case argument, add\n+\tlimit argument instead.  Remove assert about m_case.\n+\tSet the limit for inlining from the limit argument.\n+\t(matmul_lhs_realloc): Handle case A2TB2T.\n+\t(inline_matmul_assign): Handle inline limit for other cases with\n+\ttwo rank-two matrices.  Remove no-op calls to inline_limit_check.\n+\t(call_external_blas): New function.\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_funcall): Do not add\n+\targument to external BLAS if external_blas is already set.\n+\n 2018-09-18  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/87239"}, {"sha": "29946077ecde80630ee700efd874b60f37361aef", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c470e0f07563c3ab540c0a9f40b8a6ac4a29f07/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c470e0f07563c3ab540c0a9f40b8a6ac4a29f07/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5c470e0f07563c3ab540c0a9f40b8a6ac4a29f07", "patch": "@@ -1,3 +1,19 @@\n+2018-09-18  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/29550\n+\t* gfortran.dg/inline_matmul_13.f90: Adjust count for\n+\t_gfortran_matmul.\n+\t* gfortran.dg/inline_matmul_16.f90: Likewise.\n+\t* gfortran.dg/promotion_2.f90: Add -fblas-matmul-limit=1.  Scan\n+\tfor dgemm instead of dgemm_.  Add call to random_number to make\n+\tstandard conforming.\n+\t* gfortran.dg/matmul_blas_1.f90: New test.\n+\t* gfortran.dg/matmul_bounds_14.f: New test.\n+\t* gfortran.dg/matmul_bounds_15.f: New test.\n+\t* gfortran.dg/matmul_bounds_16.f: New test.\n+\t* gfortran.dg/blas_gemm_routines.f: New test / additional file for\n+\tpreceding tests.\n+\n 2018-09-18  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/87239"}]}