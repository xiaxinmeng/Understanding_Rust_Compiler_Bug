{"sha": "2f8d7dfe21740d1066912f2f99b83096ebf2962b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY4ZDdkZmUyMTc0MGQxMDY2OTEyZjJmOTliODMwOTZlYmYyOTYyYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-06-20T12:25:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-06-20T12:25:44Z"}, "message": "[multiple changes]\n\n2016-06-20  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* s-regpat.adb, sem_prag.adb, pprint.adb, sem_ch13.adb: Minor\n\treformatting.\n\n2016-06-20  Tristan Gingold  <gingold@adacore.com>\n\n\t* make.adb (Check_Standard_Library): Consider system.ads\n\tif s-stalib.adb is not available.\n\t* gnatbind.adb (Add_Artificial_ALI_File): New procedure extracted from\n\tgnatbind.\n\n2016-06-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-socket.adb (Is_IP_Address): A string consisting in digits only is\n\tnot a dotted quad.\n\n2016-06-20  Arnaud Charlet  <charlet@adacore.com>\n\n\t* exp_ch7.adb (Build_Invariant_Procedure_Body):\n\tdecorate invariant procedure body with typical properties of\n\tprocedure entityes.\n\n2016-06-20  Arnaud Charlet  <charlet@adacore.com>\n\n\t* a-exetim-darwin.adb: New file.\n\nFrom-SVN: r237598", "tree": {"sha": "b5fde2e52c699b7ea7fe5aefa2230ad7902ef393", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5fde2e52c699b7ea7fe5aefa2230ad7902ef393"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f8d7dfe21740d1066912f2f99b83096ebf2962b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f8d7dfe21740d1066912f2f99b83096ebf2962b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f8d7dfe21740d1066912f2f99b83096ebf2962b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f8d7dfe21740d1066912f2f99b83096ebf2962b/comments", "author": null, "committer": null, "parents": [{"sha": "61f17a5c5a8565c5ebfcdbe78f16b56c52b285dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61f17a5c5a8565c5ebfcdbe78f16b56c52b285dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61f17a5c5a8565c5ebfcdbe78f16b56c52b285dd"}], "stats": {"total": 515, "additions": 406, "deletions": 109}, "files": [{"sha": "5f5bd60253f0b9fc9b5815640e3d996378b75252", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f8d7dfe21740d1066912f2f99b83096ebf2962b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f8d7dfe21740d1066912f2f99b83096ebf2962b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2f8d7dfe21740d1066912f2f99b83096ebf2962b", "patch": "@@ -1,3 +1,30 @@\n+2016-06-20  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* s-regpat.adb, sem_prag.adb, pprint.adb, sem_ch13.adb: Minor\n+\treformatting.\n+\n+2016-06-20  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* make.adb (Check_Standard_Library): Consider system.ads\n+\tif s-stalib.adb is not available.\n+\t* gnatbind.adb (Add_Artificial_ALI_File): New procedure extracted from\n+\tgnatbind.\n+\n+2016-06-20  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-socket.adb (Is_IP_Address): A string consisting in digits only is\n+\tnot a dotted quad.\n+\n+2016-06-20  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* exp_ch7.adb (Build_Invariant_Procedure_Body):\n+\tdecorate invariant procedure body with typical properties of\n+\tprocedure entityes.\n+\n+2016-06-20  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* a-exetim-darwin.adb: New file.\n+\n 2016-06-16  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* atree.ads, atree.adb (Elist29): New routine."}, {"sha": "36a657cadac3099c8e05a8f8c73c2d000a544923", "filename": "gcc/ada/a-exetim-darwin.adb", "status": "added", "additions": 210, "deletions": 0, "changes": 210, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f8d7dfe21740d1066912f2f99b83096ebf2962b/gcc%2Fada%2Fa-exetim-darwin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f8d7dfe21740d1066912f2f99b83096ebf2962b/gcc%2Fada%2Fa-exetim-darwin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exetim-darwin.adb?ref=2f8d7dfe21740d1066912f2f99b83096ebf2962b", "patch": "@@ -0,0 +1,210 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--                   A D A . E X E C U T I O N _ T I M E                    --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--         Copyright (C) 2007-2016, Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This is the Darwin version of this package\n+\n+with Ada.Task_Identification;  use Ada.Task_Identification;\n+with Ada.Unchecked_Conversion;\n+\n+with System.Tasking;\n+with System.OS_Interface; use System.OS_Interface;\n+with System.Task_Primitives.Operations; use System.Task_Primitives.Operations;\n+\n+with Interfaces.C; use Interfaces.C;\n+\n+package body Ada.Execution_Time is\n+\n+   ---------\n+   -- \"+\" --\n+   ---------\n+\n+   function \"+\"\n+     (Left  : CPU_Time;\n+      Right : Ada.Real_Time.Time_Span) return CPU_Time\n+   is\n+      use type Ada.Real_Time.Time;\n+   begin\n+      return CPU_Time (Ada.Real_Time.Time (Left) + Right);\n+   end \"+\";\n+\n+   function \"+\"\n+     (Left  : Ada.Real_Time.Time_Span;\n+      Right : CPU_Time) return CPU_Time\n+   is\n+      use type Ada.Real_Time.Time;\n+   begin\n+      return CPU_Time (Left + Ada.Real_Time.Time (Right));\n+   end \"+\";\n+\n+   ---------\n+   -- \"-\" --\n+   ---------\n+\n+   function \"-\"\n+     (Left  : CPU_Time;\n+      Right : Ada.Real_Time.Time_Span) return CPU_Time\n+   is\n+      use type Ada.Real_Time.Time;\n+   begin\n+      return CPU_Time (Ada.Real_Time.Time (Left) - Right);\n+   end \"-\";\n+\n+   function \"-\"\n+     (Left  : CPU_Time;\n+      Right : CPU_Time) return Ada.Real_Time.Time_Span\n+   is\n+      use type Ada.Real_Time.Time;\n+   begin\n+      return (Ada.Real_Time.Time (Left) - Ada.Real_Time.Time (Right));\n+   end \"-\";\n+\n+   -----------\n+   -- Clock --\n+   -----------\n+\n+   function Clock\n+     (T : Ada.Task_Identification.Task_Id :=\n+        Ada.Task_Identification.Current_Task) return CPU_Time\n+   is\n+      function Convert_Ids is new\n+        Ada.Unchecked_Conversion (Task_Id, System.Tasking.Task_Id);\n+\n+      function To_CPU_Time is\n+        new Ada.Unchecked_Conversion (Duration, CPU_Time);\n+      --  Time is equal to Duration (although it is a private type) and\n+      --  CPU_Time is equal to Time.\n+\n+      subtype integer_t is Interfaces.C.int;\n+      subtype mach_port_t is integer_t;\n+      --  Type definition for Mach.\n+\n+      type time_value_t is record\n+         seconds : integer_t;\n+         microseconds : integer_t;\n+      end record;\n+      pragma Convention (C, time_value_t);\n+      --  Mach time_value_t\n+\n+      type thread_basic_info_t is record\n+         user_time     : time_value_t;\n+         system_time   : time_value_t;\n+         cpu_usage     : integer_t;\n+         policy        : integer_t;\n+         run_state     : integer_t;\n+         flags         : integer_t;\n+         suspend_count : integer_t;\n+         sleep_time    : integer_t;\n+      end record;\n+      pragma Convention (C, thread_basic_info_t);\n+      --  Mach structure from thread_info.h\n+\n+      THREAD_BASIC_INFO       : constant := 3;\n+      THREAD_BASIC_INFO_COUNT : constant := 10;\n+      --  Flavors for basic info\n+\n+      function thread_info (Target : mach_port_t;\n+                            Flavor : integer_t;\n+                            Thread_Info : System.Address;\n+                            Count : System.Address) return integer_t;\n+      pragma Import (C, thread_info);\n+      --  Mach call to get info on a thread\n+\n+      function pthread_mach_thread_np (Thread : pthread_t) return mach_port_t;\n+      pragma Import (C, pthread_mach_thread_np);\n+      --  Get Mach thread from posix thread\n+\n+      Result    : Interfaces.C.int;\n+      Thread    : pthread_t;\n+      Port      : mach_port_t;\n+      Ti        : thread_basic_info_t;\n+      Count     : integer_t;\n+   begin\n+      if T = Ada.Task_Identification.Null_Task_Id then\n+         raise Program_Error;\n+      end if;\n+\n+      Thread := Get_Thread_Id (Convert_Ids (T));\n+      Port := pthread_mach_thread_np (Thread);\n+      pragma Assert (Port > 0);\n+\n+      Count := THREAD_BASIC_INFO_COUNT;\n+      Result := thread_info (Port, THREAD_BASIC_INFO,\n+                             Ti'Address, Count'Address);\n+      pragma Assert (Result = 0);\n+      pragma Assert (Count = THREAD_BASIC_INFO_COUNT);\n+\n+      return To_CPU_Time\n+        (Duration (Ti.user_time.seconds + Ti.system_time.seconds)\n+           + Duration (Ti.user_time.microseconds\n+                         + Ti.system_time.microseconds) / 1E6);\n+   end Clock;\n+\n+   --------------------------\n+   -- Clock_For_Interrupts --\n+   --------------------------\n+\n+   function Clock_For_Interrupts return CPU_Time is\n+   begin\n+      --  According to AI 0170-1, D.14(18.1/3), if Interrupt_Clocks_Supported\n+      --  is set to False the function raises Program_Error.\n+\n+      raise Program_Error;\n+      return CPU_Time_First;\n+   end Clock_For_Interrupts;\n+\n+   -----------\n+   -- Split --\n+   -----------\n+\n+   procedure Split\n+     (T  : CPU_Time;\n+      SC : out Ada.Real_Time.Seconds_Count;\n+      TS : out Ada.Real_Time.Time_Span)\n+   is\n+      use type Ada.Real_Time.Time;\n+   begin\n+      Ada.Real_Time.Split (Ada.Real_Time.Time (T), SC, TS);\n+   end Split;\n+\n+   -------------\n+   -- Time_Of --\n+   -------------\n+\n+   function Time_Of\n+     (SC : Ada.Real_Time.Seconds_Count;\n+      TS : Ada.Real_Time.Time_Span := Ada.Real_Time.Time_Span_Zero)\n+      return CPU_Time\n+   is\n+   begin\n+      return CPU_Time (Ada.Real_Time.Time_Of (SC, TS));\n+   end Time_Of;\n+\n+end Ada.Execution_Time;"}, {"sha": "c76d7af37085ffadad1c7d922a2c6863730dba81", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f8d7dfe21740d1066912f2f99b83096ebf2962b/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f8d7dfe21740d1066912f2f99b83096ebf2962b/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=2f8d7dfe21740d1066912f2f99b83096ebf2962b", "patch": "@@ -4769,6 +4769,10 @@ package body Exp_Ch7 is\n                 Statements => Stmts));\n       Proc_Body_Id := Defining_Entity (Proc_Body);\n \n+      Set_Ekind (Proc_Body_Id, E_Subprogram_Body);\n+      Set_Etype (Proc_Body_Id, Standard_Void_Type);\n+      Set_Scope (Proc_Body_Id, Scope (Typ));\n+\n       --  Link both spec and body to avoid generating duplicates\n \n       Set_Corresponding_Body (Proc_Decl, Proc_Body_Id);"}, {"sha": "a4a7d4f467d442eaac8e06a6b71d751a3a4c2e65", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 28, "deletions": 6, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f8d7dfe21740d1066912f2f99b83096ebf2962b/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f8d7dfe21740d1066912f2f99b83096ebf2962b/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=2f8d7dfe21740d1066912f2f99b83096ebf2962b", "patch": "@@ -150,7 +150,7 @@ package body GNAT.Sockets is\n    --  Output an array of inet address components in hex or decimal mode\n \n    function Is_IP_Address (Name : String) return Boolean;\n-   --  Return true when Name is an IP address in standard dot notation\n+   --  Return true when Name is an IPv4 address in dotted quad notation\n \n    procedure Netdb_Lock;\n    pragma Inline (Netdb_Lock);\n@@ -996,7 +996,8 @@ package body GNAT.Sockets is\n \n    function Get_Host_By_Name (Name : String) return Host_Entry_Type is\n    begin\n-      --  Detect IP address name and redirect to Inet_Addr\n+      --  If the given name actually is the string representation of\n+      --  an IP address, use Get_Host_By_Address instead.\n \n       if Is_IP_Address (Name) then\n          return Get_Host_By_Address (Inet_Addr (Name));\n@@ -1503,16 +1504,37 @@ package body GNAT.Sockets is\n    -------------------\n \n    function Is_IP_Address (Name : String) return Boolean is\n+      Dots : Natural := 0;\n    begin\n+      --  Perform a cursory check for a dotted quad: we must have 1 to 3\n+      --  dots, and there must be at least one digit around each.\n+\n       for J in Name'Range loop\n-         if Name (J) /= '.'\n-           and then Name (J) not in '0' .. '9'\n-         then\n+         if Name (J) = '.' then\n+\n+            --  Check that the dot is not in first or last position, and\n+            --  that it is followed by a digit. Note that we already know\n+            --  that it is preceded by a digit, or we would have returned\n+            --  earlier on.\n+\n+            if J in Name'First + 1 .. Name'Last - 1\n+              and then Name (J + 1) in '0' .. '9'\n+            then\n+               Dots := Dots + 1;\n+\n+            else\n+\n+               --  Definitely not a proper dotted quad\n+\n+               return False;\n+            end if;\n+\n+         elsif Name (J) not in '0' .. '9' then\n             return False;\n          end if;\n       end loop;\n \n-      return True;\n+      return Dots in 1 .. 3;\n    end Is_IP_Address;\n \n    -------------"}, {"sha": "1fa489a22dff2bc68ea1b6ae2d691f32252b4b3c", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 35, "deletions": 22, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f8d7dfe21740d1066912f2f99b83096ebf2962b/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f8d7dfe21740d1066912f2f99b83096ebf2962b/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=2f8d7dfe21740d1066912f2f99b83096ebf2962b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -89,6 +89,9 @@ procedure Gnatbind is\n    --  Table to record the sources in the closure, to avoid duplications. Used\n    --  only with switch -R.\n \n+   procedure Add_Artificial_ALI_File (Name : String);\n+   --  Artificially add ALI file Name in the closure.\n+\n    function Gnatbind_Supports_Auto_Init return Boolean;\n    --  Indicates if automatic initialization of elaboration procedure\n    --  through the constructor mechanism is possible on the platform.\n@@ -113,6 +116,30 @@ procedure Gnatbind is\n    function Is_Cross_Compiler return Boolean;\n    --  Returns True iff this is a cross-compiler\n \n+   -----------------------------\n+   -- Add_Artificial_ALI_File --\n+   -----------------------------\n+\n+   procedure Add_Artificial_ALI_File (Name : String) is\n+      Id : ALI_Id;\n+      pragma Warnings (Off, Id);\n+   begin\n+      Name_Len := Name'Length;\n+      Name_Buffer (1 .. Name_Len) := Name;\n+      Std_Lib_File := Name_Find;\n+      Text := Read_Library_Info (Std_Lib_File, True);\n+\n+      Id :=\n+        Scan_ALI\n+          (F             => Std_Lib_File,\n+           T             => Text,\n+           Ignore_ED     => False,\n+           Err           => False,\n+           Ignore_Errors => Debug_Flag_I);\n+\n+      Free (Text);\n+   end Add_Artificial_ALI_File;\n+\n    ---------------------------------\n    -- Gnatbind_Supports_Auto_Init --\n    ---------------------------------\n@@ -740,29 +767,15 @@ begin\n \n       --  Add System.Standard_Library to list to ensure that these files are\n       --  included in the bind, even if not directly referenced from Ada code\n-      --  This is suppressed if the appropriate targparm switch is set.\n+      --  This is suppressed if the appropriate targparm switch is set. Be sure\n+      --  in any case that System is in the closure, as it may contains linker\n+      --  options. Note that it will be automatically added if s-stalib is\n+      --  added.\n \n       if not Suppress_Standard_Library_On_Target then\n-         Name_Buffer (1 .. 12) := \"s-stalib.ali\";\n-         Name_Len := 12;\n-         Std_Lib_File := Name_Find;\n-         Text := Read_Library_Info (Std_Lib_File, True);\n-\n-         declare\n-            Id : ALI_Id;\n-            pragma Warnings (Off, Id);\n-\n-         begin\n-            Id :=\n-              Scan_ALI\n-                (F             => Std_Lib_File,\n-                 T             => Text,\n-                 Ignore_ED     => False,\n-                 Err           => False,\n-                 Ignore_Errors => Debug_Flag_I);\n-         end;\n-\n-         Free (Text);\n+         Add_Artificial_ALI_File (\"s-stalib.ali\");\n+      else\n+         Add_Artificial_ALI_File (\"system.ali\");\n       end if;\n \n       --  Load ALIs for all dependent units"}, {"sha": "c0bde7365b7c86364943a95cbbe147e6ec36ba37", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 35, "deletions": 28, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f8d7dfe21740d1066912f2f99b83096ebf2962b/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f8d7dfe21740d1066912f2f99b83096ebf2962b/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=2f8d7dfe21740d1066912f2f99b83096ebf2962b", "patch": "@@ -84,8 +84,11 @@ package body Make is\n    --  Make control characters visible\n \n    Standard_Library_Package_Body_Name : constant String := \"s-stalib.adb\";\n-   --  Every program depends on this package, that must then be checked,\n-   --  especially when -f and -a are used.\n+   System_Package_Spec_Name : constant String := \"system.ads\";\n+   --  Every program depends on one of these packages: usually the first one,\n+   --  or if Supress_Standard_Library is true on the second one. The dependency\n+   --  is not always explicit and considering it is important when -f and -a\n+   --  are used.\n \n    type Sigint_Handler is access procedure;\n    pragma Convention (C, Sigint_Handler);\n@@ -2701,39 +2704,43 @@ package body Make is\n       begin\n          Need_To_Check_Standard_Library := False;\n \n+         Name_Len := 0;\n+\n          if not Targparm.Suppress_Standard_Library_On_Target then\n-            declare\n-               Sfile  : File_Name_Type;\n-               Add_It : Boolean := True;\n+            Add_Str_To_Name_Buffer (Standard_Library_Package_Body_Name);\n+         else\n+            Add_Str_To_Name_Buffer (System_Package_Spec_Name);\n+         end if;\n \n-            begin\n-               Name_Len := 0;\n-               Add_Str_To_Name_Buffer (Standard_Library_Package_Body_Name);\n-               Sfile := Name_Enter;\n+         declare\n+            Sfile  : File_Name_Type;\n+            Add_It : Boolean := True;\n \n-               --  If we have a special runtime, we add the standard\n-               --  library only if we can find it.\n+         begin\n+            Sfile := Name_Enter;\n \n-               if RTS_Switch then\n-                  Add_It := Full_Source_Name (Sfile) /= No_File;\n-               end if;\n+            --  If we have a special runtime, we add the standard library only\n+            --  if we can find it.\n \n-               if Add_It then\n-                  if not Queue.Insert\n-                           ((Format  => Format_Gnatmake,\n-                             File    => Sfile,\n-                             Unit    => No_Unit_Name,\n-                             Project => No_Project,\n-                             Index   => 0,\n-                             Sid     => No_Source))\n-                  then\n-                     if Is_In_Obsoleted (Sfile) then\n-                        Executable_Obsolete := True;\n-                     end if;\n+            if RTS_Switch then\n+               Add_It := Full_Source_Name (Sfile) /= No_File;\n+            end if;\n+\n+            if Add_It then\n+               if not Queue.Insert\n+                        ((Format  => Format_Gnatmake,\n+                          File    => Sfile,\n+                          Unit    => No_Unit_Name,\n+                          Project => No_Project,\n+                          Index   => 0,\n+                          Sid     => No_Source))\n+               then\n+                  if Is_In_Obsoleted (Sfile) then\n+                     Executable_Obsolete := True;\n                   end if;\n                end if;\n-            end;\n-         end if;\n+            end if;\n+         end;\n       end Check_Standard_Library;\n \n       -----------------------------------"}, {"sha": "c520cf5611688086f7aff28b3f301c652a670790", "filename": "gcc/ada/pprint.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f8d7dfe21740d1066912f2f99b83096ebf2962b/gcc%2Fada%2Fpprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f8d7dfe21740d1066912f2f99b83096ebf2962b/gcc%2Fada%2Fpprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpprint.adb?ref=2f8d7dfe21740d1066912f2f99b83096ebf2962b", "patch": "@@ -555,8 +555,8 @@ package body Pprint is\n \n                if not Is_Scalar_Type (Etype (Expr))\n                  or else not Is_Scalar_Type (Etype (Expression (Expr)))\n-                 or else Is_Modular_Integer_Type (Etype (Expr))\n-                         /= Is_Modular_Integer_Type (Etype (Expression (Expr)))\n+                 or else Is_Modular_Integer_Type (Etype (Expr)) /=\n+                           Is_Modular_Integer_Type (Etype (Expression (Expr)))\n                then\n                   return Expr_Name (Subtype_Mark (Expr)) &\n                     \"(\" & Expr_Name (Expression (Expr)) & \")\";"}, {"sha": "f27639b978acc25b2f0749f7239b6fdc95ab5a9f", "filename": "gcc/ada/s-regpat.adb", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f8d7dfe21740d1066912f2f99b83096ebf2962b/gcc%2Fada%2Fs-regpat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f8d7dfe21740d1066912f2f99b83096ebf2962b/gcc%2Fada%2Fs-regpat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-regpat.adb?ref=2f8d7dfe21740d1066912f2f99b83096ebf2962b", "patch": "@@ -2614,10 +2614,15 @@ package body System.Regpat is\n                   exit State_Machine when Input_Pos /= BOL_Pos;\n \n                when EOL =>\n+\n                   --  A combination of MEOL and SEOL\n+\n                   if (Self.Flags and Multiple_Lines) = 0 then\n-                     --  single line mode\n+\n+                     --  Single line mode\n+\n                      exit State_Machine when Input_Pos <= Data'Last;\n+\n                   elsif Input_Pos <= Last_In_Data then\n                      exit State_Machine when Data (Input_Pos) /= ASCII.LF;\n                   else\n@@ -2632,9 +2637,11 @@ package body System.Regpat is\n                   end if;\n \n                when SEOL =>\n-                  --  If we have a character before Data'Last (even if\n-                  --  Last_In_Data stops before then), we can't have\n-                  --  the end of the line.\n+\n+                  --  If there is a character before Data'Last (even if\n+                  --  Last_In_Data stops before then), we can't have the\n+                  --  end of the line.\n+\n                   exit State_Machine when Input_Pos <= Data'Last;\n \n                when BOUND | NBOUND =>"}, {"sha": "009bf3235f40bee6b33e87a214049379620d23a1", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f8d7dfe21740d1066912f2f99b83096ebf2962b/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f8d7dfe21740d1066912f2f99b83096ebf2962b/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=2f8d7dfe21740d1066912f2f99b83096ebf2962b", "patch": "@@ -13721,10 +13721,10 @@ package body Sem_Ch13 is\n          declare\n             T : UC_Entry renames Unchecked_Conversions.Table (N);\n \n+            Act_Unit : constant Entity_Id  := T.Act_Unit;\n             Eloc     : constant Source_Ptr := T.Eloc;\n             Source   : constant Entity_Id  := T.Source;\n             Target   : constant Entity_Id  := T.Target;\n-            Act_Unit : constant Entity_Id  := T.Act_Unit;\n \n             Source_Siz : Uint;\n             Target_Siz : Uint;"}, {"sha": "902d1fc788573195b8d7c8a6d95ce7fac1299ddb", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 53, "deletions": 46, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f8d7dfe21740d1066912f2f99b83096ebf2962b/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f8d7dfe21740d1066912f2f99b83096ebf2962b/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=2f8d7dfe21740d1066912f2f99b83096ebf2962b", "patch": "@@ -23304,85 +23304,92 @@ package body Sem_Prag is\n      (N         : Node_Id;\n       Freeze_Id : Entity_Id := Empty)\n    is\n-      --  Local variables\n-\n-      Subp_Decl : constant Node_Id   := Find_Related_Declaration_Or_Body (N);\n-      Spec_Id   : constant Entity_Id := Unique_Defining_Entity (Subp_Decl);\n-      Expr      : constant Node_Id   := Expression (Get_Argument (N, Spec_Id));\n+      Disp_Typ : Entity_Id;\n+      --  The dispatching type of the subprogram subject to the pre- or\n+      --  postcondition.\n \n-      Save_Ghost_Mode : constant Ghost_Mode_Type := Ghost_Mode;\n-\n-      Errors        : Nat;\n-      Disp_Typ      : Entity_Id;\n-      Restore_Scope : Boolean := False;\n-\n-      function Check_References (N : Node_Id) return Traverse_Result;\n-      --  Check that the expression does not mention non-primitives of\n-      --  the type, global objects of the type, or other illegalities\n-      --  described and implied by AI12-0113.\n+      function Check_References (Nod : Node_Id) return Traverse_Result;\n+      --  Check that expression Nod does not mention non-primitives of the\n+      --  type, global objects of the type, or other illegalities described\n+      --  and implied by AI12-0113.\n \n       ----------------------\n       -- Check_References --\n       ----------------------\n \n-      function Check_References (N : Node_Id) return Traverse_Result is\n+      function Check_References (Nod : Node_Id) return Traverse_Result is\n       begin\n-         if Nkind (N) = N_Function_Call\n-           and then Is_Entity_Name (Name (N))\n+         if Nkind (Nod) = N_Function_Call\n+           and then Is_Entity_Name (Name (Nod))\n          then\n             declare\n-               Func : constant Entity_Id := Entity (Name (N));\n+               Func : constant Entity_Id := Entity (Name (Nod));\n                Form : Entity_Id;\n-            begin\n \n-               --  An operation of the type must be a primitive.\n+            begin\n+               --  An operation of the type must be a primitive\n \n                if No (Find_Dispatching_Type (Func)) then\n                   Form := First_Formal (Func);\n                   while Present (Form) loop\n                      if Etype (Form) = Disp_Typ then\n-                        Error_Msg_NE (\"operation in class-wide condition \"\n-                          & \"must be primitive of&\", N, Disp_Typ);\n+                        Error_Msg_NE\n+                          (\"operation in class-wide condition must be \"\n+                           & \"primitive of &\", Nod, Disp_Typ);\n                      end if;\n+\n                      Next_Formal (Form);\n                   end loop;\n \n-                  --  A return object of the type is illegal as well.\n+                  --  A return object of the type is illegal as well\n \n                   if Etype (Func) = Disp_Typ\n                     or else Etype (Func) = Class_Wide_Type (Disp_Typ)\n                   then\n-                     Error_Msg_NE (\"operation in class-wide condition \"\n-                       & \"must be primitive of&\", N, Disp_Typ);\n+                     Error_Msg_NE\n+                       (\"operation in class-wide condition must be primitive \"\n+                        & \"of &\", Nod, Disp_Typ);\n                   end if;\n                end if;\n             end;\n \n-         elsif Is_Entity_Name (N)\n+         elsif Is_Entity_Name (Nod)\n            and then\n-             (Etype (N) = Disp_Typ\n-               or else Etype (N) = Class_Wide_Type (Disp_Typ))\n-           and then Ekind_In (Entity (N),  E_Variable, E_Constant)\n+             (Etype (Nod) = Disp_Typ\n+               or else Etype (Nod) = Class_Wide_Type (Disp_Typ))\n+           and then Ekind_In (Entity (Nod), E_Constant, E_Variable)\n          then\n             Error_Msg_NE\n-              (\"object in class-wide condition must be formal of type&\",\n-                N, Disp_Typ);\n-\n-         elsif Nkind (N) = N_Explicit_Dereference\n-           and then (Etype (N) = Disp_Typ\n-               or else Etype (N) = Class_Wide_Type (Disp_Typ))\n-           and then (not Is_Entity_Name (Prefix (N))\n-             or else not Is_Formal (Entity (Prefix (N))))\n+              (\"object in class-wide condition must be formal of type &\",\n+                Nod, Disp_Typ);\n+\n+         elsif Nkind (Nod) = N_Explicit_Dereference\n+           and then (Etype (Nod) = Disp_Typ\n+                      or else Etype (Nod) = Class_Wide_Type (Disp_Typ))\n+           and then (not Is_Entity_Name (Prefix (Nod))\n+                      or else not Is_Formal (Entity (Prefix (Nod))))\n          then\n-            Error_Msg_NE (\"operation in class-wide condition \"\n-              & \"must be primitive of&\", N, Disp_Typ);\n+            Error_Msg_NE\n+              (\"operation in class-wide condition must be primitive of &\",\n+               Nod, Disp_Typ);\n          end if;\n \n          return OK;\n       end Check_References;\n \n-      procedure Check_Class_Wide_Condition is new\n-        Traverse_Proc (Check_References);\n+      procedure Check_Class_Wide_Condition is\n+        new Traverse_Proc (Check_References);\n+\n+      --  Local variables\n+\n+      Subp_Decl : constant Node_Id   := Find_Related_Declaration_Or_Body (N);\n+      Spec_Id   : constant Entity_Id := Unique_Defining_Entity (Subp_Decl);\n+      Expr      : constant Node_Id   := Expression (Get_Argument (N, Spec_Id));\n+\n+      Save_Ghost_Mode : constant Ghost_Mode_Type := Ghost_Mode;\n+\n+      Errors        : Nat;\n+      Restore_Scope : Boolean := False;\n \n    --  Start of processing for Analyze_Pre_Post_Condition_In_Decl_Part\n \n@@ -23451,9 +23458,9 @@ package body Sem_Prag is\n                   & \"of a tagged type\", N);\n             end if;\n \n-         else\n-            --  Remaining semantic checks require a full tree traversal.\n+         --  Remaining semantic checks require a full tree traversal\n \n+         else\n             Check_Class_Wide_Condition (Expr);\n          end if;\n \n@@ -26490,8 +26497,8 @@ package body Sem_Prag is\n             --  overridings between them.\n \n             while Present (Decl) loop\n-               if Nkind_In (Decl,\n-                  N_Subprogram_Declaration, N_Abstract_Subprogram_Declaration)\n+               if Nkind_In (Decl, N_Abstract_Subprogram_Declaration,\n+                                  N_Subprogram_Declaration)\n                then\n                   Prim := Defining_Entity (Decl);\n "}]}