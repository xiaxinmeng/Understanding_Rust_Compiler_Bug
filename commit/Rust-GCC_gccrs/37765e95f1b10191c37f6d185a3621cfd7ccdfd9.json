{"sha": "37765e95f1b10191c37f6d185a3621cfd7ccdfd9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc3NjVlOTVmMWIxMDE5MWMzN2Y2ZDE4NWEzNjIxY2ZkN2NjZGZkOQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2011-11-04T13:46:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-11-04T13:46:55Z"}, "message": "sem_prag.adb, [...]: Minor reformatting.\n\n2011-11-04  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_prag.adb, atree.ads, prj-env.adb, prj-env.ads: Minor reformatting.\n\nFrom-SVN: r180949", "tree": {"sha": "981081bd83de9b66927ef6c8b2c8d4568590f30f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/981081bd83de9b66927ef6c8b2c8d4568590f30f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37765e95f1b10191c37f6d185a3621cfd7ccdfd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37765e95f1b10191c37f6d185a3621cfd7ccdfd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37765e95f1b10191c37f6d185a3621cfd7ccdfd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37765e95f1b10191c37f6d185a3621cfd7ccdfd9/comments", "author": null, "committer": null, "parents": [{"sha": "8c18a165e2ebb82121a0cae15e50c0ac74bd33c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c18a165e2ebb82121a0cae15e50c0ac74bd33c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c18a165e2ebb82121a0cae15e50c0ac74bd33c3"}], "stats": {"total": 34, "additions": 22, "deletions": 12}, "files": [{"sha": "ba5cdd81972df130cbedc1d10a5e31a349dcc3a4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37765e95f1b10191c37f6d185a3621cfd7ccdfd9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37765e95f1b10191c37f6d185a3621cfd7ccdfd9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=37765e95f1b10191c37f6d185a3621cfd7ccdfd9", "patch": "@@ -1,3 +1,7 @@\n+2011-11-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_prag.adb, atree.ads, prj-env.adb, prj-env.ads: Minor reformatting.\n+\n 2011-11-04  Yannick Moy  <moy@adacore.com>\n \n \t* atree.adb, atree.ads (Set_Original_Node): New set procedure."}, {"sha": "736f5ca6135677b0cb48e42c665f34eb87bfcdca", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37765e95f1b10191c37f6d185a3621cfd7ccdfd9/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37765e95f1b10191c37f6d185a3621cfd7ccdfd9/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=37765e95f1b10191c37f6d185a3621cfd7ccdfd9", "patch": "@@ -763,6 +763,11 @@ package Atree is\n \n    procedure Set_Original_Node (N : Node_Id; Val : Node_Id);\n    pragma Inline (Set_Original_Node);\n+   --  Note that this routine is used only in very peculiar cases. In normal\n+   --  cases, the Original_Node link is set by calls to Rewrite. We currently\n+   --  use it in ASIS mode to manually set the link from pragma expressions\n+   --  to their aspect original source expressions, so that the original source\n+   --  expressions accessed by ASIS are also semantically analyzed.\n \n    ------------------------------\n    -- Entity Update Procedures --"}, {"sha": "898ba8dfa3535bf5f75cb90fbb5686356ceb4fb1", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37765e95f1b10191c37f6d185a3621cfd7ccdfd9/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37765e95f1b10191c37f6d185a3621cfd7ccdfd9/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=37765e95f1b10191c37f6d185a3621cfd7ccdfd9", "patch": "@@ -2062,8 +2062,10 @@ package body Prj.Env is\n    -- Find_Name_In_Path --\n    -----------------------\n \n-   function Find_Name_In_Path (Self : Project_Search_Path;\n-                               Path : String) return String_Access is\n+   function Find_Name_In_Path\n+     (Self : Project_Search_Path;\n+      Path : String) return String_Access\n+   is\n       First  : Natural;\n       Last   : Natural;\n \n@@ -2081,8 +2083,7 @@ package body Prj.Env is\n \n       else\n          --  Because we don't want to resolve symbolic links, we cannot use\n-         --  Locate_Regular_File. So, we try each possible path\n-         --  successively.\n+         --  Locate_Regular_File. So, we try each possible path successively.\n \n          First := Self.Path'First;\n          while First <= Self.Path'Last loop\n@@ -2204,8 +2205,7 @@ package body Prj.Env is\n \n          if Result = null then\n             Result := Try_Path_Name\n-              (Self,\n-               Directory & Directory_Separator & File);\n+                       (Self, Directory & Directory_Separator & File);\n          end if;\n       end if;\n "}, {"sha": "79de6464a0a879bbf20d4ecb2942f9c88b9e5bd1", "filename": "gcc/ada/prj-env.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37765e95f1b10191c37f6d185a3621cfd7ccdfd9/gcc%2Fada%2Fprj-env.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37765e95f1b10191c37f6d185a3621cfd7ccdfd9/gcc%2Fada%2Fprj-env.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.ads?ref=37765e95f1b10191c37f6d185a3621cfd7ccdfd9", "patch": "@@ -212,8 +212,9 @@ package Prj.Env is\n \n    generic\n       with function Check_Filename (Name : String) return Boolean;\n-   function Find_Name_In_Path (Self : Project_Search_Path;\n-                               Path : String) return String_Access;\n+   function Find_Name_In_Path\n+     (Self : Project_Search_Path;\n+      Path : String) return String_Access;\n    --  Find a name in the project search path of Self. Check_Filename is\n    --  the predicate to valid the search.  If Path is an absolute filename,\n    --  simply calls the predicate with Path. Otherwise, calls the predicate"}, {"sha": "df897e62ab600d05bfe6f4ab9b40e90e9f63c313", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37765e95f1b10191c37f6d185a3621cfd7ccdfd9/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37765e95f1b10191c37f6d185a3621cfd7ccdfd9/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=37765e95f1b10191c37f6d185a3621cfd7ccdfd9", "patch": "@@ -1215,7 +1215,8 @@ package body Sem_Prag is\n \n       procedure Check_Arg_Is_Static_Expression\n         (Arg : Node_Id;\n-         Typ : Entity_Id := Empty) is\n+         Typ : Entity_Id := Empty)\n+      is\n       begin\n          Check_Expr_Is_Static_Expression (Get_Pragma_Arg (Arg), Typ);\n       end Check_Arg_Is_Static_Expression;\n@@ -1456,7 +1457,8 @@ package body Sem_Prag is\n \n       procedure Check_Expr_Is_Static_Expression\n         (Argx : Node_Id;\n-         Typ  : Entity_Id := Empty) is\n+         Typ  : Entity_Id := Empty)\n+      is\n       begin\n          if Present (Typ) then\n             Analyze_And_Resolve (Argx, Typ);\n@@ -15140,7 +15142,6 @@ package body Sem_Prag is\n       --  expressions (i.e. similar to a default expression).\n \n       if Present (Arg_Req) then\n-\n          Preanalyze_Spec_Expression\n            (Get_Pragma_Arg (Arg_Req), Standard_Boolean);\n \n@@ -15156,7 +15157,6 @@ package body Sem_Prag is\n       end if;\n \n       if Present (Arg_Ens) then\n-\n          Preanalyze_Spec_Expression\n            (Get_Pragma_Arg (Arg_Ens), Standard_Boolean);\n "}]}