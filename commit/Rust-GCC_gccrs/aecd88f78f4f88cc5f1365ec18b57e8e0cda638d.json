{"sha": "aecd88f78f4f88cc5f1365ec18b57e8e0cda638d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVjZDg4Zjc4ZjRmODhjYzVmMTM2NWVjMThiNTdlOGUwY2RhNjM4ZA==", "commit": {"author": {"name": "Zhenqiang Chen", "email": "zhenqiang.chen@arm.com", "date": "2014-09-22T02:54:45Z"}, "committer": {"name": "Zhenqiang Chen", "email": "zqchen@gcc.gnu.org", "date": "2014-09-22T02:54:45Z"}, "message": "arm.c: #include \"tm-constrs.h\"\n\n2014-09-22  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n\n\t* config/arm/arm.c: #include \"tm-constrs.h\"\n\t(thumb1_size_rtx_costs): Adjust rtx costs.\n\nFrom-SVN: r215444", "tree": {"sha": "b7d729eefd3d2435e7018328c826b94ee5a6c351", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7d729eefd3d2435e7018328c826b94ee5a6c351"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aecd88f78f4f88cc5f1365ec18b57e8e0cda638d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aecd88f78f4f88cc5f1365ec18b57e8e0cda638d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aecd88f78f4f88cc5f1365ec18b57e8e0cda638d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aecd88f78f4f88cc5f1365ec18b57e8e0cda638d/comments", "author": null, "committer": null, "parents": [{"sha": "598a1586818e46033b66cd1535a84c248b9c087f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/598a1586818e46033b66cd1535a84c248b9c087f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/598a1586818e46033b66cd1535a84c248b9c087f"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "0471bba233090e41ce1f299a158e6b15b4c882b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aecd88f78f4f88cc5f1365ec18b57e8e0cda638d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aecd88f78f4f88cc5f1365ec18b57e8e0cda638d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aecd88f78f4f88cc5f1365ec18b57e8e0cda638d", "patch": "@@ -1,3 +1,8 @@\n+2014-09-22  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n+\n+\t* config/arm/arm.c: #include \"tm-constrs.h\"\n+\t(thumb1_size_rtx_costs): Adjust rtx costs.\n+\n 2014-09-22  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* configure.ac (target_header_dir): Move block defining"}, {"sha": "93b989d334f9b14d692786626cad2000c4e91248", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aecd88f78f4f88cc5f1365ec18b57e8e0cda638d/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aecd88f78f4f88cc5f1365ec18b57e8e0cda638d/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=aecd88f78f4f88cc5f1365ec18b57e8e0cda638d", "patch": "@@ -62,6 +62,7 @@\n #include \"dumpfile.h\"\n #include \"gimple-expr.h\"\n #include \"builtins.h\"\n+#include \"tm-constrs.h\"\n \n /* Forward definitions of types.  */\n typedef struct minipool_node    Mnode;\n@@ -8927,9 +8928,11 @@ thumb1_size_rtx_costs (rtx x, enum rtx_code code, enum rtx_code outer)\n       /* A SET doesn't have a mode, so let's look at the SET_DEST to get\n \t the mode.  */\n       words = ARM_NUM_INTS (GET_MODE_SIZE (GET_MODE (SET_DEST (x))));\n-      return (COSTS_N_INSNS (words)\n-              + 4 * ((MEM_P (SET_SRC (x)))\n-                     + MEM_P (SET_DEST (x))));\n+      return COSTS_N_INSNS (words)\n+\t     + COSTS_N_INSNS (1) * (satisfies_constraint_J (SET_SRC (x))\n+\t\t\t\t    || satisfies_constraint_K (SET_SRC (x))\n+\t\t\t\t       /* thumb1_movdi_insn.  */\n+\t\t\t\t    || ((words > 1) && MEM_P (SET_SRC (x))));\n \n     case CONST_INT:\n       if (outer == SET)\n@@ -8982,16 +8985,14 @@ thumb1_size_rtx_costs (rtx x, enum rtx_code code, enum rtx_code outer)\n     case AND:\n     case XOR:\n     case IOR:\n-      /* XXX guess.  */\n-      return 8;\n+      return COSTS_N_INSNS (1);\n \n     case MEM:\n-      /* XXX another guess.  */\n-      /* Memory costs quite a lot for the first word, but subsequent words\n-         load at the equivalent of a single insn each.  */\n-      return (10 + 4 * ((GET_MODE_SIZE (mode) - 1) / UNITS_PER_WORD)\n+      return (COSTS_N_INSNS (1)\n+\t      + COSTS_N_INSNS (1)\n+\t\t* ((GET_MODE_SIZE (mode) - 1) / UNITS_PER_WORD)\n               + ((GET_CODE (x) == SYMBOL_REF && CONSTANT_POOL_ADDRESS_P (x))\n-                 ? 4 : 0));\n+                 ? COSTS_N_INSNS (1) : 0));\n \n     case IF_THEN_ELSE:\n       /* XXX a guess.  */"}]}