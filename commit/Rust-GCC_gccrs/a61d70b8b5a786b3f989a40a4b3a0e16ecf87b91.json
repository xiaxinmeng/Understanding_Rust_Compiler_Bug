{"sha": "a61d70b8b5a786b3f989a40a4b3a0e16ecf87b91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYxZDcwYjhiNWE3ODZiM2Y5ODlhNDBhNGIzYTBlMTZlY2Y4N2I5MQ==", "commit": {"author": {"name": "Jim Huang", "email": "jserv@kaffe.org", "date": "2005-06-13T20:23:11Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-06-13T20:23:11Z"}, "message": "re PR libgcj/22036 (libjava/jni.cc compilation fix in cvs 2005-06-12)\n\n2005-06-13  Jim Huang  <jserv@kaffe.org>\n\n\tPR libgcj/22036:\n\t* jni.cc (_Jv_JNI_NewObjectV): Use chars() method.\n\t(_Jv_JNI_NewObject): Likewise.\n\nFrom-SVN: r100897", "tree": {"sha": "6d440f81830b53deb7d12414ac7338c5da427640", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d440f81830b53deb7d12414ac7338c5da427640"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a61d70b8b5a786b3f989a40a4b3a0e16ecf87b91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a61d70b8b5a786b3f989a40a4b3a0e16ecf87b91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a61d70b8b5a786b3f989a40a4b3a0e16ecf87b91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a61d70b8b5a786b3f989a40a4b3a0e16ecf87b91/comments", "author": {"login": "jserv", "id": 478921, "node_id": "MDQ6VXNlcjQ3ODkyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/478921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jserv", "html_url": "https://github.com/jserv", "followers_url": "https://api.github.com/users/jserv/followers", "following_url": "https://api.github.com/users/jserv/following{/other_user}", "gists_url": "https://api.github.com/users/jserv/gists{/gist_id}", "starred_url": "https://api.github.com/users/jserv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jserv/subscriptions", "organizations_url": "https://api.github.com/users/jserv/orgs", "repos_url": "https://api.github.com/users/jserv/repos", "events_url": "https://api.github.com/users/jserv/events{/privacy}", "received_events_url": "https://api.github.com/users/jserv/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "885beb81abe41d740e709e42f1d288910bfd1c73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/885beb81abe41d740e709e42f1d288910bfd1c73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/885beb81abe41d740e709e42f1d288910bfd1c73"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "6860ca89adf579b8c2e3ddd2f43817096230aed3", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a61d70b8b5a786b3f989a40a4b3a0e16ecf87b91/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a61d70b8b5a786b3f989a40a4b3a0e16ecf87b91/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a61d70b8b5a786b3f989a40a4b3a0e16ecf87b91", "patch": "@@ -1,3 +1,9 @@\n+2005-06-13  Jim Huang  <jserv@kaffe.org>\n+\n+\tPR libgcj/22036:\n+\t* jni.cc (_Jv_JNI_NewObjectV): Use chars() method.\n+\t(_Jv_JNI_NewObject): Likewise.\n+\n 2005-06-13  Tom Tromey  <tromey@redhat.com>\n \n \tPR java/21844:"}, {"sha": "59b380c1a60cb453d0c228b5b5918c459d268e4d", "filename": "libjava/jni.cc", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a61d70b8b5a786b3f989a40a4b3a0e16ecf87b91/libjava%2Fjni.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a61d70b8b5a786b3f989a40a4b3a0e16ecf87b91/libjava%2Fjni.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni.cc?ref=a61d70b8b5a786b3f989a40a4b3a0e16ecf87b91", "patch": "@@ -1112,10 +1112,10 @@ _Jv_JNI_NewObjectV (JNIEnv *env, jclass klass,\n \t\t    jmethodID id, va_list args)\n {\n   JvAssert (klass && ! klass->isArray ());\n-  JvAssert (! strcmp (id->name->data, \"<init>\")\n-\t    && id->signature->length > 2\n-\t    && id->signature->data[0] == '('\n-\t    && ! strcmp (&id->signature->data[id->signature->length - 2],\n+  JvAssert (! strcmp (id->name->chars(), \"<init>\")\n+\t    && id->signature->len() > 2\n+\t    && id->signature->chars()[0] == '('\n+\t    && ! strcmp (&id->signature->chars()[id->signature->len() - 2],\n \t\t\t \")V\"));\n \n   return _Jv_JNI_CallAnyMethodV<jobject, constructor> (env, NULL, klass,\n@@ -1126,10 +1126,10 @@ static jobject JNICALL\n _Jv_JNI_NewObject (JNIEnv *env, jclass klass, jmethodID id, ...)\n {\n   JvAssert (klass && ! klass->isArray ());\n-  JvAssert (! strcmp (id->name->data, \"<init>\")\n-\t    && id->signature->length > 2\n-\t    && id->signature->data[0] == '('\n-\t    && ! strcmp (&id->signature->data[id->signature->length - 2],\n+  JvAssert (! strcmp (id->name->chars(), \"<init>\")\n+\t    && id->signature->len() > 2\n+\t    && id->signature->chars()[0] == '('\n+\t    && ! strcmp (&id->signature->chars()[id->signature->len() - 2],\n \t\t\t \")V\"));\n \n   va_list args;\n@@ -1148,10 +1148,10 @@ _Jv_JNI_NewObjectA (JNIEnv *env, jclass klass, jmethodID id,\n \t\t    jvalue *args)\n {\n   JvAssert (klass && ! klass->isArray ());\n-  JvAssert (! strcmp (id->name->data, \"<init>\")\n-\t    && id->signature->length > 2\n-\t    && id->signature->data[0] == '('\n-\t    && ! strcmp (&id->signature->data[id->signature->length - 2],\n+  JvAssert (! strcmp (id->name->chars(), \"<init>\")\n+\t    && id->signature->len() > 2\n+\t    && id->signature->chars()[0] == '('\n+\t    && ! strcmp (&id->signature->chars()[id->signature->len() - 2],\n \t\t\t \")V\"));\n \n   return _Jv_JNI_CallAnyMethodA<jobject, constructor> (env, NULL, klass,"}]}