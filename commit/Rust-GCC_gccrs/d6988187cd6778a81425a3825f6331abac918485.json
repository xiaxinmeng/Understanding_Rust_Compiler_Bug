{"sha": "d6988187cd6778a81425a3825f6331abac918485", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY5ODgxODdjZDY3NzhhODE0MjVhMzgyNWY2MzMxYWJhYzkxODQ4NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-02-19T21:50:10Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-02-19T21:50:10Z"}, "message": "re PR libquadmath/56379 (libquadmath: Wrong result for strtoflt128.c if compiled with -O0)\n\n\tPR libquadmath/56379\n\t* strtod/strtod_l.c (mpn_lshift_1): Rewritten as function-like\n\tmacro.\n\nFrom-SVN: r196155", "tree": {"sha": "0a56eeaa86b23e2a68e438f912be999cf85d9fb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a56eeaa86b23e2a68e438f912be999cf85d9fb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6988187cd6778a81425a3825f6331abac918485", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6988187cd6778a81425a3825f6331abac918485", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6988187cd6778a81425a3825f6331abac918485", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6988187cd6778a81425a3825f6331abac918485/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "406defcb58e60a2c7093700fbc27ae13a9b32d86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/406defcb58e60a2c7093700fbc27ae13a9b32d86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/406defcb58e60a2c7093700fbc27ae13a9b32d86"}], "stats": {"total": 50, "additions": 29, "deletions": 21}, "files": [{"sha": "15c0739319d3720a94ec57bd8bac9de903289890", "filename": "libquadmath/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6988187cd6778a81425a3825f6331abac918485/libquadmath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6988187cd6778a81425a3825f6331abac918485/libquadmath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2FChangeLog?ref=d6988187cd6778a81425a3825f6331abac918485", "patch": "@@ -1,3 +1,9 @@\n+2013-02-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libquadmath/56379\n+\t* strtod/strtod_l.c (mpn_lshift_1): Rewritten as function-like\n+\tmacro.\n+\n 2013-02-17  Tobias Burnus  <burnus@net-b.de>\n \n \t* math/cacoshq.c (cacoshq): Call signbitq instead of signbit."}, {"sha": "0b0e85a3cf7071e74197bfe275a92d48ca1c94c5", "filename": "libquadmath/strtod/strtod_l.c", "status": "modified", "additions": 23, "deletions": 21, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6988187cd6778a81425a3825f6331abac918485/libquadmath%2Fstrtod%2Fstrtod_l.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6988187cd6778a81425a3825f6331abac918485/libquadmath%2Fstrtod%2Fstrtod_l.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fstrtod%2Fstrtod_l.c?ref=d6988187cd6778a81425a3825f6331abac918485", "patch": "@@ -421,28 +421,30 @@ str_to_mpn (const STRING_TYPE *str, int digcnt, mp_limb_t *n, mp_size_t *nsize,\n /* Shift {PTR, SIZE} COUNT bits to the left, and fill the vacated bits\n    with the COUNT most significant bits of LIMB.\n \n-   Tege doesn't like this function so I have to write it here myself. :)\n+   Implemented as a macro, so that __builtin_constant_p works even at -O0.\n+\n+   Tege doesn't like this macro so I have to write it here myself. :)\n    --drepper */\n-static inline void\n-__attribute ((always_inline))\n-mpn_lshift_1 (mp_limb_t *ptr, mp_size_t size, unsigned int count,\n-\t      mp_limb_t limb)\n-{\n-  if (__builtin_constant_p (count) && count == BITS_PER_MP_LIMB)\n-    {\n-      /* Optimize the case of shifting by exactly a word:\n-\t just copy words, with no actual bit-shifting.  */\n-      mp_size_t i;\n-      for (i = size - 1; i > 0; --i)\n-\tptr[i] = ptr[i - 1];\n-      ptr[0] = limb;\n-    }\n-  else\n-    {\n-      (void) mpn_lshift (ptr, ptr, size, count);\n-      ptr[0] |= limb >> (BITS_PER_MP_LIMB - count);\n-    }\n-}\n+#define mpn_lshift_1(ptr, size, count, limb) \\\n+  do\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      mp_limb_t *__ptr = (ptr);\t\t\t\t\t\t\\\n+      if (__builtin_constant_p (count) && count == BITS_PER_MP_LIMB)\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  mp_size_t i;\t\t\t\t\t\t\t\\\n+\t  for (i = (size) - 1; i > 0; --i)\t\t\t\t\\\n+\t    __ptr[i] = __ptr[i - 1];\t\t\t\t\t\\\n+\t  __ptr[0] = (limb);\t\t\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+      else\t\t\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  /* We assume count > 0 && count < BITS_PER_MP_LIMB here.  */\t\\\n+\t  unsigned int __count = (count);\t\t\t\t\\\n+\t  (void) mpn_lshift (__ptr, __ptr, size, __count);\t\t\\\n+\t  __ptr[0] |= (limb) >> (BITS_PER_MP_LIMB - __count);\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  while (0)\n \n \n #define INTERNAL(x) INTERNAL1(x)"}]}