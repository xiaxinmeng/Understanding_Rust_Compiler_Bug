{"sha": "a4320483fb1108583197844f82c822f564db05f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQzMjA0ODNmYjExMDg1ODMxOTc4NDRmODJjODIyZjU2NGRiMDVmNA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-07T18:03:56Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-07T18:03:56Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1498", "tree": {"sha": "08871789fddbf1cbd2afc73b692441b274598a1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08871789fddbf1cbd2afc73b692441b274598a1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4320483fb1108583197844f82c822f564db05f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4320483fb1108583197844f82c822f564db05f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4320483fb1108583197844f82c822f564db05f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4320483fb1108583197844f82c822f564db05f4/comments", "author": null, "committer": null, "parents": [{"sha": "effeb5cc51177aa22122753f6e73211b6a7ae71f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/effeb5cc51177aa22122753f6e73211b6a7ae71f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/effeb5cc51177aa22122753f6e73211b6a7ae71f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "7f480f3d0d37538da174fa336da25622196c07f3", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4320483fb1108583197844f82c822f564db05f4/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4320483fb1108583197844f82c822f564db05f4/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=a4320483fb1108583197844f82c822f564db05f4", "patch": "@@ -1358,7 +1358,7 @@ emit_move_insn (x, y)\n   /* This will handle any multi-word mode that lacks a move_insn pattern.\n      However, you will get better code if you define such patterns,\n      even if they must turn into multiple assembler instructions.  */\n-  else if (GET_MODE_SIZE (mode) >= UNITS_PER_WORD)\n+  else if (GET_MODE_SIZE (mode) > UNITS_PER_WORD)\n     {\n       rtx last_insn = 0;\n "}]}