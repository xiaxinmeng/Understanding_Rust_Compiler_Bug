{"sha": "7abec5bec95f2ef1222f269036b5f47f865c196c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FiZWM1YmVjOTVmMmVmMTIyMmYyNjkwMzZiNWY0N2Y4NjVjMTk2Yw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-01-31T06:53:07Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-01-31T06:53:07Z"}, "message": "* expr.c (store_expr): Promote all MEM intermediates to regs.\n\nFrom-SVN: r62173", "tree": {"sha": "99e6ba7364dd8f5dd30f4ec7cfe162ed473a75a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99e6ba7364dd8f5dd30f4ec7cfe162ed473a75a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7abec5bec95f2ef1222f269036b5f47f865c196c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7abec5bec95f2ef1222f269036b5f47f865c196c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7abec5bec95f2ef1222f269036b5f47f865c196c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7abec5bec95f2ef1222f269036b5f47f865c196c/comments", "author": null, "committer": null, "parents": [{"sha": "cdd1f01b226e72952c62b46cabd487e930b1cd8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdd1f01b226e72952c62b46cabd487e930b1cd8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdd1f01b226e72952c62b46cabd487e930b1cd8f"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "8d1fd4d4d1d788f1602ac829f92b2a2a58515d9c", "filename": "gcc/expr.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abec5bec95f2ef1222f269036b5f47f865c196c/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abec5bec95f2ef1222f269036b5f47f865c196c/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=7abec5bec95f2ef1222f269036b5f47f865c196c", "patch": "@@ -4398,12 +4398,12 @@ store_expr (exp, target, want_value)\n \n       temp = expand_expr (exp, inner_target, VOIDmode, 0);\n \n-      /* If TEMP is a volatile MEM and we want a result value, make\n-\t the access now so it gets done only once.  Likewise if\n-\t it contains TARGET.  */\n-      if (GET_CODE (temp) == MEM && want_value\n-\t  && (MEM_VOLATILE_P (temp)\n-\t      || reg_mentioned_p (SUBREG_REG (target), XEXP (temp, 0))))\n+      /* If TEMP is a MEM and we want a result value, make the access\n+\t now so it gets done only once.  Strictly speaking, this is \n+\t only necessary if the MEM is volatile, or if the address \n+\t overlaps TARGET.  But not performing the load twice also\n+\t reduces the amount of rtl we generate and then have to CSE.  */\n+      if (GET_CODE (temp) == MEM && want_value)\n \ttemp = copy_to_reg (temp);\n \n       /* If TEMP is a VOIDmode constant, use convert_modes to make"}]}