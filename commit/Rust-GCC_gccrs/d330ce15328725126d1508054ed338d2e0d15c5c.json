{"sha": "d330ce15328725126d1508054ed338d2e0d15c5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMzMGNlMTUzMjg3MjUxMjZkMTUwODA1NGVkMzM4ZDJlMGQxNWM1Yw==", "commit": {"author": {"name": "Josef Zlomek", "email": "zlomekj@suse.cz", "date": "2003-01-10T13:44:28Z"}, "committer": {"name": "Josef Zlomek", "email": "zlomek@gcc.gnu.org", "date": "2003-01-10T13:44:28Z"}, "message": "jump.c (next_nonnote_insn_in_loop): New function.\n\n\t* jump.c (next_nonnote_insn_in_loop): New function.\n\t(copy_loop_headers): Use next_nonnote_insn_in_loop instead of\n\tnext_nonnote_insn.\n\t(duplicate_loop_exit_test). Likewise.\n\nFrom-SVN: r61150", "tree": {"sha": "53fd513f5c34fb00b4320fb156d29ed071b3a1ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53fd513f5c34fb00b4320fb156d29ed071b3a1ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d330ce15328725126d1508054ed338d2e0d15c5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d330ce15328725126d1508054ed338d2e0d15c5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d330ce15328725126d1508054ed338d2e0d15c5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d330ce15328725126d1508054ed338d2e0d15c5c/comments", "author": null, "committer": null, "parents": [{"sha": "ca3b9033724fee912ed2c491fa566402c00a35ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca3b9033724fee912ed2c491fa566402c00a35ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca3b9033724fee912ed2c491fa566402c00a35ac"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "799f9baadbca65960ff51253b6e116e3c6fa4c92", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d330ce15328725126d1508054ed338d2e0d15c5c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d330ce15328725126d1508054ed338d2e0d15c5c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d330ce15328725126d1508054ed338d2e0d15c5c", "patch": "@@ -1,3 +1,10 @@\n+2003-01-10  Josef Zlomek  <zlomekj@suse.cz>\n+\n+\t* jump.c (next_nonnote_insn_in_loop): New function.\n+\t(copy_loop_headers): Use next_nonnote_insn_in_loop instead of\n+\tnext_nonnote_insn.\n+\t(duplicate_loop_exit_test). Likewise.\n+\n 2003-01-09  Geoffrey Keating  <geoffk@apple.com>\n \n \tMerge from pch-branch:"}, {"sha": "2e9119b46535916c16c37609f75cd5bba1fed454", "filename": "gcc/jump.c", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d330ce15328725126d1508054ed338d2e0d15c5c/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d330ce15328725126d1508054ed338d2e0d15c5c/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=d330ce15328725126d1508054ed338d2e0d15c5c", "patch": "@@ -1,6 +1,6 @@\n /* Optimize jump instructions, for GNU compiler.\n    Copyright (C) 1987, 1988, 1989, 1991, 1992, 1993, 1994, 1995, 1996, 1997\n-   1998, 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   1998, 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -61,6 +61,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n    or even change what is live at any point.\n    So perhaps let combiner do it.  */\n \n+static rtx next_nonnote_insn_in_loop\tPARAMS ((rtx));\n static void init_label_info\t\tPARAMS ((rtx));\n static void mark_all_labels\t\tPARAMS ((rtx));\n static int duplicate_loop_exit_test\tPARAMS ((rtx));\n@@ -119,6 +120,27 @@ cleanup_barriers ()\n     }\n }\n \f\n+/* Return the next insn after INSN that is not a NOTE and is in the loop,\n+   i.e. when there is no such INSN before NOTE_INSN_LOOP_END return NULL_RTX.\n+   This routine does not look inside SEQUENCEs.  */\n+\n+static rtx\n+next_nonnote_insn_in_loop (insn)\n+     rtx insn;\n+{\n+  while (insn)\n+    {\n+      insn = NEXT_INSN (insn);\n+      if (insn == 0 || GET_CODE (insn) != NOTE)\n+\tbreak;\n+      if (GET_CODE (insn) == NOTE\n+\t  && NOTE_LINE_NUMBER (insn) == NOTE_INSN_LOOP_END)\n+\treturn NULL_RTX;\n+    }\n+\n+  return insn;\n+}\n+\n void\n copy_loop_headers (f)\n      rtx f;\n@@ -137,7 +159,7 @@ copy_loop_headers (f)\n \t the values of regno_first_uid and regno_last_uid.  */\n       if (GET_CODE (insn) == NOTE\n \t  && NOTE_LINE_NUMBER (insn) == NOTE_INSN_LOOP_BEG\n-\t  && (temp1 = next_nonnote_insn (insn)) != 0\n+\t  && (temp1 = next_nonnote_insn_in_loop (insn)) != 0\n \t  && any_uncondjump_p (temp1) && onlyjump_p (temp1))\n \t{\n \t  temp = PREV_INSN (insn);\n@@ -286,7 +308,8 @@ duplicate_loop_exit_test (loop_start)\n   rtx insn, set, reg, p, link;\n   rtx copy = 0, first_copy = 0;\n   int num_insns = 0;\n-  rtx exitcode = NEXT_INSN (JUMP_LABEL (next_nonnote_insn (loop_start)));\n+  rtx exitcode\n+    = NEXT_INSN (JUMP_LABEL (next_nonnote_insn_in_loop (loop_start)));\n   rtx lastexit;\n   int max_reg = max_reg_num ();\n   rtx *reg_map = 0;"}]}