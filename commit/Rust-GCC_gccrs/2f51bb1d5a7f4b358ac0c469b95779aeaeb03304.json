{"sha": "2f51bb1d5a7f4b358ac0c469b95779aeaeb03304", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY1MWJiMWQ1YTdmNGIzNThhYzBjNDY5Yjk1Nzc5YWVhZWIwMzMwNA==", "commit": {"author": {"name": "Matt Austern", "email": "austern@apple.com", "date": "2003-02-19T05:39:06Z"}, "committer": {"name": "Matt Austern", "email": "austern@gcc.gnu.org", "date": "2003-02-19T05:39:06Z"}, "message": "toplev.c, [...]: Move write_global_declarations from toplev.c to langhooks.c.\n\n\n\t* toplev.c, langhooks.c, langhooks-def.h: Move\n\twrite_global_declarations from toplev.c to langhooks.c.\n\nFrom-SVN: r63094", "tree": {"sha": "7e08f1322b9d5b1d9d1838dc1d6c7f36cc47d1bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e08f1322b9d5b1d9d1838dc1d6c7f36cc47d1bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f51bb1d5a7f4b358ac0c469b95779aeaeb03304", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f51bb1d5a7f4b358ac0c469b95779aeaeb03304", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f51bb1d5a7f4b358ac0c469b95779aeaeb03304", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f51bb1d5a7f4b358ac0c469b95779aeaeb03304/comments", "author": null, "committer": null, "parents": [{"sha": "ff6e1a2f26fb152187508cc3102bc10fb7b71b23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff6e1a2f26fb152187508cc3102bc10fb7b71b23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff6e1a2f26fb152187508cc3102bc10fb7b71b23"}], "stats": {"total": 65, "additions": 33, "deletions": 32}, "files": [{"sha": "22d70924a92dd5a2465a4917b46a9e469e44c51d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f51bb1d5a7f4b358ac0c469b95779aeaeb03304/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f51bb1d5a7f4b358ac0c469b95779aeaeb03304/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f51bb1d5a7f4b358ac0c469b95779aeaeb03304", "patch": "@@ -1,3 +1,7 @@\n+2003-02-18  Matt Austern <austern@apple.com>\n+\t* toplev.c, langhooks.c, langhooks-def.h: Move\n+\twrite_global_declarations from toplev.c to langhooks.c. \n+\t\n 2003-02-18  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.c (general_operand_src): Always check"}, {"sha": "8834e787457dcb614ea9dd94a9b706d95b848ead", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f51bb1d5a7f4b358ac0c469b95779aeaeb03304/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f51bb1d5a7f4b358ac0c469b95779aeaeb03304/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=2f51bb1d5a7f4b358ac0c469b95779aeaeb03304", "patch": "@@ -82,7 +82,6 @@ int lhd_tree_inlining_start_inlining\t\tPARAMS ((tree));\n void lhd_tree_inlining_end_inlining\t\tPARAMS ((tree));\n tree lhd_tree_inlining_convert_parm_for_inlining PARAMS ((tree, tree, tree));\n \n-/* In toplev.c */\n void write_global_declarations PARAMS ((void));\n \n #define LANG_HOOKS_NAME\t\t\t\"GNU unknown\""}, {"sha": "045a5e4bebd03ef7b2188a0455f80133dbaeacd3", "filename": "gcc/langhooks.c", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f51bb1d5a7f4b358ac0c469b95779aeaeb03304/gcc%2Flanghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f51bb1d5a7f4b358ac0c469b95779aeaeb03304/gcc%2Flanghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.c?ref=2f51bb1d5a7f4b358ac0c469b95779aeaeb03304", "patch": "@@ -448,3 +448,32 @@ lhd_expr_size (exp)\n   else\n     return size_in_bytes (TREE_TYPE (exp));\n }\n+\n+/* lang_hooks.decls.final_write_globals: perform final processing on\n+   global variables. */\n+void\n+write_global_declarations ()\n+{\n+  /* Really define vars that have had only a tentative definition.\n+     Really output inline functions that must actually be callable\n+     and have not been output so far.  */\n+\n+  tree globals = (*lang_hooks.decls.getdecls) ();\n+  int len = list_length (globals);\n+  tree *vec = (tree *) xmalloc (sizeof (tree) * len);\n+  int i;\n+  tree decl;\n+\n+  /* Process the decls in reverse order--earliest first.\n+     Put them into VEC from back to front, then take out from front.  */\n+\n+  for (i = 0, decl = globals; i < len; i++, decl = TREE_CHAIN (decl))\n+    vec[len - i - 1] = decl;\n+\n+  wrapup_global_declarations (vec, len);\n+\n+  check_global_declarations (vec, len);\n+\n+    /* Clean up.  */\n+  free (vec);\n+}"}, {"sha": "9322f4fecf35d94e24d3356eef1ee520b8b6a0d8", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f51bb1d5a7f4b358ac0c469b95779aeaeb03304/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f51bb1d5a7f4b358ac0c469b95779aeaeb03304/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=2f51bb1d5a7f4b358ac0c469b95779aeaeb03304", "patch": "@@ -72,7 +72,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"debug.h\"\n #include \"target.h\"\n #include \"langhooks.h\"\n-#include \"langhooks-def.h\"\n #include \"cfglayout.h\"\n #include \"cfgloop.h\"\n #include \"hosthooks.h\"\n@@ -2225,36 +2224,6 @@ compile_file ()\n       timevar_pop (TV_DUMP);\n     }\n }\n-\n-/* Default for lang_hooks.decls.final_write_globals */\n-void write_global_declarations ()\n-{\n-  tree globals = (*lang_hooks.decls.getdecls) ();\n-\n-  /* Really define vars that have had only a tentative definition.\n-     Really output inline functions that must actually be callable\n-     and have not been output so far.  */\n-\n-  {\n-    int len = list_length (globals);\n-    tree *vec = (tree *) xmalloc (sizeof (tree) * len);\n-    int i;\n-    tree decl;\n-\n-    /* Process the decls in reverse order--earliest first.\n-       Put them into VEC from back to front, then take out from front.  */\n-\n-    for (i = 0, decl = globals; i < len; i++, decl = TREE_CHAIN (decl))\n-      vec[len - i - 1] = decl;\n-\n-    wrapup_global_declarations (vec, len);\n-\n-    check_global_declarations (vec, len);\n-\n-    /* Clean up.  */\n-    free (vec);\n-  }\n-}\n \f\n /* This is called from various places for FUNCTION_DECL, VAR_DECL,\n    and TYPE_DECL nodes."}]}