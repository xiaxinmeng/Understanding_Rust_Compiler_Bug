{"sha": "4e5821d340ebed01d6b9ca26e801c9d9b6153cb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU1ODIxZDM0MGViZWQwMWQ2YjljYTI2ZTgwMWM5ZDliNjE1M2NiMQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-10-02T07:41:32Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-10-02T07:41:32Z"}, "message": "ChangeLog: Fix whitespace.\n\n\t* ChangeLog: Fix whitespace.\n\t* testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r140829", "tree": {"sha": "d80e4ca2340ee67592b90ea9b2eda41d7bc1ec61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d80e4ca2340ee67592b90ea9b2eda41d7bc1ec61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e5821d340ebed01d6b9ca26e801c9d9b6153cb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e5821d340ebed01d6b9ca26e801c9d9b6153cb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e5821d340ebed01d6b9ca26e801c9d9b6153cb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e5821d340ebed01d6b9ca26e801c9d9b6153cb1/comments", "author": null, "committer": null, "parents": [{"sha": "7f6caa850eadeb256b71d154cb59c9335fbdf4ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f6caa850eadeb256b71d154cb59c9335fbdf4ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f6caa850eadeb256b71d154cb59c9335fbdf4ed"}], "stats": {"total": 54, "additions": 29, "deletions": 25}, "files": [{"sha": "c3de3d1d744189ed7950a18062de739dccc59a9d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 21, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e5821d340ebed01d6b9ca26e801c9d9b6153cb1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e5821d340ebed01d6b9ca26e801c9d9b6153cb1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e5821d340ebed01d6b9ca26e801c9d9b6153cb1", "patch": "@@ -216,8 +216,8 @@\n \n 2008-09-29  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n-\t* graphite.c (dot_all_scops_1): Remove unused checks. SCoPs always have\n-\texit and entry.\n+\t* graphite.c (dot_all_scops_1): Remove unused checks. SCoPs always\n+\thave exit and entry.\n \t(new_scop): Take entry and exit edge to define new SCoP.\n \t(sd_region_p): New structure used during SCoP detection.\n \t(move_scops): Delete.\n@@ -257,7 +257,7 @@\n \tfor SHmedia.\n \n 2008-09-28  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n-            Kaushal Kantawala  <kaushal_kantawala@playstation.sony.com>\n+\t    Kaushal Kantawala  <kaushal_kantawala@playstation.sony.com>\n \n \tPR tree-opt/36891\n \t* tree-ssa-loop-im.c (rewrite_reciprocal): Set DECL_GIMPLE_REG_P on\n@@ -310,7 +310,7 @@\n \tCL_SAVE as first argument.\n \n 2008-09-26  Peter O'Gorman  <pogma@thewrittenword.com>\n-            Steve Ellcey  <sje@cup.hp.com>\n+\t    Steve Ellcey  <sje@cup.hp.com>\n \n \t* configure: Regenerate for new libtool.\n \t* aclocal.m4: Ditto.\n@@ -809,11 +809,12 @@\n \t(xtensa_legitimize_address): Handle TLS symbols.\n \t(xtensa_tls_referenced_p_1): New.\n \t(xtensa_tls_referenced_p): New.\n-\t(xtensa_output_addr_const_extra): Handle UNSPEC_TPOFF and UNSPEC_DTPOFF.\n+\t(xtensa_output_addr_const_extra): Handle UNSPEC_TPOFF and\n+\tUNSPEC_DTPOFF.\n \t(XTENSA_BUILTIN_THREAD_POINTER): New.\n \t(XTENSA_BUILTIN_SET_THREAD_POINTER): New.\n-\t(xtensa_init_builtins): Set NOTHROW and READONLY for umulsidi3 builtin.\n-\tAdd declarations for __builtin_thread_pointer and\n+\t(xtensa_init_builtins): Set NOTHROW and READONLY for umulsidi3\n+\tbuiltin.  Add declarations for __builtin_thread_pointer and\n \t__builtin_set_thread_pointer.\n \t(xtensa_fold_builtin): Recognize new builtins.\n \t(xtensa_expand_builtin): Expand new builtins.\n@@ -864,10 +865,11 @@\n \t(get_reference_vars_info): ... this one, use cgraph uids.\n \t(get_local_reference_vars_info, get_global_reference_vars_info):\n \tUse cgraph instead of decl.\n-\t(ipa_reference_get_read_local, ipa_reference_get_written_local): Remove.\n+\t(ipa_reference_get_read_local, ipa_reference_get_written_local):\n+\tRemove.\n \t(ipa_reference_get_read_global, ipa_reference_get_not_read_global\n-\tipa_reference_get_written_global, ipa_reference_get_not_written_global): Use\n-\tcgraph argument.\n+\tipa_reference_get_written_global,\n+\tipa_reference_get_not_written_global): Use cgraph argument.\n \t(check_call): Simplify avail check.\n \t(scan_stmt_for_static_refs): Update.\n \t(propagate_bits): Update.\n@@ -887,8 +889,8 @@\n \t(ipa_reference_get_read_local, ipa_reference_get_written_local):\n \tRemove.\n \t(ipa_reference_get_read_global, ipa_reference_get_written_global,\n-\tipa_reference_get_not_read_global, ipa_reference_get_not_written_global):\n-\tUpdate prototype.\n+\tipa_reference_get_not_read_global,\n+\tipa_reference_get_not_written_global): Update prototype.\n \t* ipa-pure-const.c (funct_state_vec): Turn into VECtor.\n \t(init_state): Remove.\n \t(node_duplication_hook_holder, node_removal_hook_holder): New.\n@@ -897,14 +899,15 @@\n \t(add_new_function): Likewise.\n \t(duplicate_node_data, remove_node_data): New.\n \t(generate_summary): Register hooks; do not care about clones.\n-\t(propafate): Do not care about clones; recursive functions are not looping.\n+\t(propafate): Do not care about clones; recursive functions are\n+\tnot looping.\n \t* ipa-utils.c (searchc, ipa_utils_reduced_inorder): Do not skip clones.\n \t* ipa-prop.c (edge_removal_hook_holder, node_removal_hook_holder,\n \t* edge_duplication_hook_holder, node_duplication_hook_holder): Make\n \tstatic.\n \t* tree-flow.h (function_ann_d): Remove reference_vars_info.\n-\t* tree-ssa-opreands.c (add_call_clobber_ops, add_call_read_ops): Update call of\n-\tipa-reference accesors.\n+\t* tree-ssa-opreands.c (add_call_clobber_ops, add_call_read_ops):\n+\tUpdate call of ipa-reference accesors.\n \n 2008-09-18  Simon Baldwin  <simonb@google.com>\n \n@@ -1628,12 +1631,12 @@\n 2008-09-10  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/37385\n-\t* tree-vect-transform.c (vect_create_data_ref_ptr): Add a new argument,\n-\tand use it as a vector type if not NULL.\n+\t* tree-vect-transform.c (vect_create_data_ref_ptr): Add a new\n+\targument, and use it as a vector type if not NULL.\n \t(vectorizable_store): Call vect_create_data_ref_ptr with the type of\n \tvectorized rhs.\n-\t(vect_setup_realignment): Call vect_create_data_ref_ptr with additional\n-\targument.\n+\t(vect_setup_realignment): Call vect_create_data_ref_ptr with\n+\tadditional argument.\n \t(vectorizable_load): Likewise.\n \n 2008-09-10  Jakub Jelinek  <jakub@redhat.com>\n@@ -1682,8 +1685,8 @@\n \t(update_call_notes_after_inlining): Likewise.  Push new indirect edge\n \tto *new_edges instead of new_edges.  Reread IPA_EDGE_REF after\n \tipa_check_create_edge_args.\n-\t* ipa-inline.c (cgraph_decide_recursive_inlining): Change last argument\n-\tto pointer to vector pointer.\n+\t* ipa-inline.c (cgraph_decide_recursive_inlining): Change last\n+\targument to pointer to vector pointer.\n \t(cgraph_decide_inlining_of_small_function): Adjust\n \tcgraph_decide_recursive_inlining and ipa_propagate_indirect_call_infos\n \tcalls."}, {"sha": "f661afde3da6c9db8780041ec3fd40fd3b6ad393", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e5821d340ebed01d6b9ca26e801c9d9b6153cb1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e5821d340ebed01d6b9ca26e801c9d9b6153cb1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4e5821d340ebed01d6b9ca26e801c9d9b6153cb1", "patch": "@@ -13,7 +13,8 @@\n \n 2008-10-01  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n-\t* gcc.target/powerpc/altivec_check.h (altivec_cell_check): New function.\n+\t* gcc.target/powerpc/altivec_check.h (altivec_cell_check):\n+\tNew function.\n \t* gcc.target/powerpc/altivec-cell-6.c: New test.\n \t* gcc.target/powerpc/altivec-cell-7.c: New test.\n \t* gcc.target/powerpc/altivec-cell-8.c: New test.\n@@ -82,7 +83,7 @@\n \taddresses of non zero offset works.\n \n 2008-09-28  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n-            Kaushal Kantawala  <kaushal_kantawala@playstation.sony.com>\n+\t    Kaushal Kantawala  <kaushal_kantawala@playstation.sony.com>\n \n \tPR tree-opt/36891\n \t* gcc.dg/torture/pr36891.c: New testcase.\n@@ -542,8 +543,8 @@\n \t* g++.old-deja/g++.robertl/eb44.C: Ditto.\n \t* g++.old-deja/g++.robertl/eb4.C: Ditto.\n \t* g++.old-deja/g++.robertl/eb69.C: Ditto.\n-\t* g++.dg/parse/constructor1.C: Remove \"error\" from dg-error, preserving\n-\tcolumn number.\n+\t* g++.dg/parse/constructor1.C: Remove \"error\" from dg-error,\n+\tpreserving column number.\n \t* g++.dg/parse/error10.C: Ditto.\n \t* g++.dg/parse/error13.C: Ditto.\n \t* g++.dg/parse/error14.C: Ditto."}]}