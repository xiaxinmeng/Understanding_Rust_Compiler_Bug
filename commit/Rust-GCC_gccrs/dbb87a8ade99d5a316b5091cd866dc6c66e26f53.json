{"sha": "dbb87a8ade99d5a316b5091cd866dc6c66e26f53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJiODdhOGFkZTk5ZDVhMzE2YjUwOTFjZDg2NmRjNmM2NmUyNmY1Mw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2006-09-07T21:06:28Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2006-09-07T21:06:28Z"}, "message": "re PR c++/26957 (ICE in make_decl_rtl, at varasm.c:871)\n\n        PR c++/26957\n        * method.c (use_thunk): Clear DECL_HAS_VALUE_EXPR_P on copied\n        parms.\n\nFrom-SVN: r116760", "tree": {"sha": "85dc230c70ec0a8d0a37e73ede8d2eac2c6481ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85dc230c70ec0a8d0a37e73ede8d2eac2c6481ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbb87a8ade99d5a316b5091cd866dc6c66e26f53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb87a8ade99d5a316b5091cd866dc6c66e26f53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbb87a8ade99d5a316b5091cd866dc6c66e26f53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb87a8ade99d5a316b5091cd866dc6c66e26f53/comments", "author": null, "committer": null, "parents": [{"sha": "94fbfc650b2837bd3f24e786fbe88ad9d73e216c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94fbfc650b2837bd3f24e786fbe88ad9d73e216c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94fbfc650b2837bd3f24e786fbe88ad9d73e216c"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "06e5fec236f1c5e822ce6b199fd14be9f56e9689", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb87a8ade99d5a316b5091cd866dc6c66e26f53/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb87a8ade99d5a316b5091cd866dc6c66e26f53/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=dbb87a8ade99d5a316b5091cd866dc6c66e26f53", "patch": "@@ -1,8 +1,14 @@\n+2006-09-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/26957\n+\t* method.c (use_thunk): Clear DECL_HAS_VALUE_EXPR_P on copied\n+\tparms.\n+\n 2006-09-07  Simon Martin  <simartin@users.sourceforge.net>\n \n \tPR c++/28284\n-\t* pt.c (fold_non_dependent_expr): Make sure expr is not dereferenced if it\n-\tis NULL.\n+\t* pt.c (fold_non_dependent_expr): Make sure expr is not\n+\tdereferenced if it is NULL.\n \n 2006-09-06  Zak Kipling  <zak@transversal.com>\n "}, {"sha": "e2106fff55c26d697c06f6d04091339081eb0b92", "filename": "gcc/cp/method.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb87a8ade99d5a316b5091cd866dc6c66e26f53/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb87a8ade99d5a316b5091cd866dc6c66e26f53/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=dbb87a8ade99d5a316b5091cd866dc6c66e26f53", "patch": "@@ -419,6 +419,7 @@ use_thunk (tree thunk_fndecl, bool emit_p)\n       TREE_CHAIN (x) = t;\n       DECL_CONTEXT (x) = thunk_fndecl;\n       SET_DECL_RTL (x, NULL_RTX);\n+      DECL_HAS_VALUE_EXPR_P (x) = 0;\n       t = x;\n     }\n   a = nreverse (t);"}, {"sha": "b8e316d087b6a663878964b3832549fccc77cc89", "filename": "gcc/testsuite/g++.dg/inherit/thunk6.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb87a8ade99d5a316b5091cd866dc6c66e26f53/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fthunk6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb87a8ade99d5a316b5091cd866dc6c66e26f53/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fthunk6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fthunk6.C?ref=dbb87a8ade99d5a316b5091cd866dc6c66e26f53", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/26957\n+\n+struct LongDouble {\n+    char ld[16];\n+};\n+\n+struct DynAny  {\n+    virtual void insert_longdouble(LongDouble value) = 0;\n+};\n+\n+struct TAO_DynCommon : public virtual DynAny {\n+    virtual void insert_longdouble (LongDouble value);\n+};\n+\n+void TAO_DynCommon::insert_longdouble (LongDouble value) { }\n+"}]}