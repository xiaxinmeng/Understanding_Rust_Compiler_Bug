{"sha": "1631cbcfb904f8d3cfb81dde88163248b8f006f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTYzMWNiY2ZiOTA0ZjhkM2NmYjgxZGRlODgxNjMyNDhiOGYwMDZmOQ==", "commit": {"author": {"name": "Simon Martin", "email": "simartin@users.sourceforge.net", "date": "2007-02-22T20:57:12Z"}, "committer": {"name": "Simon Martin", "email": "simartin@gcc.gnu.org", "date": "2007-02-22T20:57:12Z"}, "message": "3.cc: Fixed type mismatches in explicit instantiations.\n\n2007-02-22  Simon Martin  <simartin@users.sourceforge.net>\n\n\t* testsuite/27_io/basic_ios/cons/char/3.cc: Fixed type mismatches in\n\texplicit instantiations.\n\t* testsuite/27_io/basic_istream/extractors_other/pod/3983-3.cc: Likewise.\n\t* testsuite/27_io/basic_istream/extractors_arithmetic/pod/3983-1.cc:\n\tLikewise.\n\t* testsuite/27_io/basic_istream/extractors_character/pod/3983-2.cc:\n\tLikewise.\n\t* testsuite/27_io/basic_istream/sentry/pod/1.cc: Likewise.\n\t* testsuite/27_io/basic_ostream/sentry/pod/1.cc: Likewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/pod/10081-in.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/inserters_extractors/pod/10081-out.cc:\n\tLikewise.\n\t* testsuite/21_strings/basic_string/capacity/1.cc: Likewise.\n\nFrom-SVN: r122237", "tree": {"sha": "54ed9633cb27174955bd8ff2a63a7b38d4649516", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54ed9633cb27174955bd8ff2a63a7b38d4649516"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1631cbcfb904f8d3cfb81dde88163248b8f006f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1631cbcfb904f8d3cfb81dde88163248b8f006f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1631cbcfb904f8d3cfb81dde88163248b8f006f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1631cbcfb904f8d3cfb81dde88163248b8f006f9/comments", "author": {"login": "simartin", "id": 935202, "node_id": "MDQ6VXNlcjkzNTIwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/935202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simartin", "html_url": "https://github.com/simartin", "followers_url": "https://api.github.com/users/simartin/followers", "following_url": "https://api.github.com/users/simartin/following{/other_user}", "gists_url": "https://api.github.com/users/simartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/simartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simartin/subscriptions", "organizations_url": "https://api.github.com/users/simartin/orgs", "repos_url": "https://api.github.com/users/simartin/repos", "events_url": "https://api.github.com/users/simartin/events{/privacy}", "received_events_url": "https://api.github.com/users/simartin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c2143cc185c4f6940677ff8da2d04410ea36869b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2143cc185c4f6940677ff8da2d04410ea36869b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2143cc185c4f6940677ff8da2d04410ea36869b"}], "stats": {"total": 53, "additions": 35, "deletions": 18}, "files": [{"sha": "8956610c3e2ac44dc2ade10a2b2b2108949f128b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1631cbcfb904f8d3cfb81dde88163248b8f006f9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1631cbcfb904f8d3cfb81dde88163248b8f006f9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1631cbcfb904f8d3cfb81dde88163248b8f006f9", "patch": "@@ -1,3 +1,20 @@\n+2007-02-22  Simon Martin  <simartin@users.sourceforge.net>\n+\n+\t* testsuite/27_io/basic_ios/cons/char/3.cc: Fixed type mismatches in\n+\texplicit instantiations.\n+\t* testsuite/27_io/basic_istream/extractors_other/pod/3983-3.cc: Likewise.\n+\t* testsuite/27_io/basic_istream/extractors_arithmetic/pod/3983-1.cc:\n+\tLikewise.\n+\t* testsuite/27_io/basic_istream/extractors_character/pod/3983-2.cc:\n+\tLikewise.\n+\t* testsuite/27_io/basic_istream/sentry/pod/1.cc: Likewise.\n+\t* testsuite/27_io/basic_ostream/sentry/pod/1.cc: Likewise.\n+\t* testsuite/21_strings/basic_string/inserters_extractors/pod/10081-in.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/inserters_extractors/pod/10081-out.cc:\n+\tLikewise.\n+\t* testsuite/21_strings/basic_string/capacity/1.cc: Likewise.\n+\n 2007-02-22  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/unordered_map (class __unordered_map,"}, {"sha": "70b25ed862417e5f548581372cad0ca94c5ffc35", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/capacity/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1631cbcfb904f8d3cfb81dde88163248b8f006f9/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1631cbcfb904f8d3cfb81dde88163248b8f006f9/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2F1.cc?ref=1631cbcfb904f8d3cfb81dde88163248b8f006f9", "patch": "@@ -184,11 +184,11 @@ void test01()\n #if !__GXX_WEAK__\n // Explicitly instantiate for systems with no COMDAT or weak support.\n template \n-  std::basic_string< A<B> >::size_type \n+  const std::basic_string< A<B> >::size_type \n   std::basic_string< A<B> >::_Rep::_S_max_size;\n \n template \n-  A<B>\n+  const A<B>\n   std::basic_string< A<B> >::_Rep::_S_terminal;\n #endif\n "}, {"sha": "1e5d4fe79bd6232b08ce60898a4bc4bf974b78b3", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/inserters_extractors/pod/10081-in.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1631cbcfb904f8d3cfb81dde88163248b8f006f9/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fpod%2F10081-in.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1631cbcfb904f8d3cfb81dde88163248b8f006f9/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fpod%2F10081-in.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fpod%2F10081-in.cc?ref=1631cbcfb904f8d3cfb81dde88163248b8f006f9", "patch": "@@ -76,11 +76,11 @@ void test01()\n #if !__GXX_WEAK__\n // Explicitly instantiate for systems with no COMDAT or weak support.\n template \n-  std::basic_string<__gnu_test::pod_ushort>::size_type \n+  const std::basic_string<__gnu_test::pod_ushort>::size_type \n   std::basic_string<__gnu_test::pod_ushort>::_Rep::_S_max_size;\n \n template \n-  __gnu_test::pod_ushort\n+  const __gnu_test::pod_ushort\n   std::basic_string<__gnu_test::pod_ushort>::_Rep::_S_terminal;\n #endif\n "}, {"sha": "83d320a9d0d9d436b78c5b3b15c72582a53124a0", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/inserters_extractors/pod/10081-out.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1631cbcfb904f8d3cfb81dde88163248b8f006f9/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fpod%2F10081-out.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1631cbcfb904f8d3cfb81dde88163248b8f006f9/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fpod%2F10081-out.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fpod%2F10081-out.cc?ref=1631cbcfb904f8d3cfb81dde88163248b8f006f9", "patch": "@@ -76,11 +76,11 @@ void test01()\n #if !__GXX_WEAK__\n // Explicitly instantiate for systems with no COMDAT or weak support.\n template \n-  std::basic_string<__gnu_test::pod_ushort>::size_type \n+  const std::basic_string<__gnu_test::pod_ushort>::size_type \n   std::basic_string<__gnu_test::pod_ushort>::_Rep::_S_max_size;\n \n template \n-  __gnu_test::pod_ushort\n+  const __gnu_test::pod_ushort\n   std::basic_string<__gnu_test::pod_ushort>::_Rep::_S_terminal;\n #endif\n "}, {"sha": "39f69e5217a47c6aba1bef3d2e470a34ecb4b31d", "filename": "libstdc++-v3/testsuite/27_io/basic_ios/cons/char/3.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1631cbcfb904f8d3cfb81dde88163248b8f006f9/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ios%2Fcons%2Fchar%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1631cbcfb904f8d3cfb81dde88163248b8f006f9/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ios%2Fcons%2Fchar%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ios%2Fcons%2Fchar%2F3.cc?ref=1631cbcfb904f8d3cfb81dde88163248b8f006f9", "patch": "@@ -160,11 +160,11 @@ void test02()\n #if !__GXX_WEAK__\n // Explicitly instantiate for systems with no COMDAT or weak support.\n template \n-  std::basic_string<unsigned short>::size_type \n+  const std::basic_string<unsigned short>::size_type \n   std::basic_string<unsigned short>::_Rep::_S_max_size;\n \n template \n-  unsigned short\n+  const unsigned short\n   std::basic_string<unsigned short>::_Rep::_S_terminal;\n #endif\n "}, {"sha": "6c3f4f8b307b25d23bd37e86b9be356553164ad2", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_arithmetic/pod/3983-1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1631cbcfb904f8d3cfb81dde88163248b8f006f9/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fpod%2F3983-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1631cbcfb904f8d3cfb81dde88163248b8f006f9/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fpod%2F3983-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_arithmetic%2Fpod%2F3983-1.cc?ref=1631cbcfb904f8d3cfb81dde88163248b8f006f9", "patch": "@@ -62,11 +62,11 @@ void test03()\n #if !__GXX_WEAK__\n // Explicitly instantiate for systems with no COMDAT or weak support.\n template \n-  std::basic_string<__gnu_test::pod_ushort>::size_type \n+  const std::basic_string<__gnu_test::pod_ushort>::size_type \n   std::basic_string<__gnu_test::pod_ushort>::_Rep::_S_max_size;\n \n template \n-  __gnu_test::pod_ushort\n+  const __gnu_test::pod_ushort\n   std::basic_string<__gnu_test::pod_ushort>::_Rep::_S_terminal;\n #endif\n "}, {"sha": "7a979be7d38f21a24f4325d857b7c2026c81c8aa", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_character/pod/3983-2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1631cbcfb904f8d3cfb81dde88163248b8f006f9/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_character%2Fpod%2F3983-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1631cbcfb904f8d3cfb81dde88163248b8f006f9/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_character%2Fpod%2F3983-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_character%2Fpod%2F3983-2.cc?ref=1631cbcfb904f8d3cfb81dde88163248b8f006f9", "patch": "@@ -66,11 +66,11 @@ void test03()\n #if !__GXX_WEAK__\n // Explicitly instantiate for systems with no COMDAT or weak support.\n template \n-  std::basic_string<__gnu_test::pod_ushort>::size_type \n+  const std::basic_string<__gnu_test::pod_ushort>::size_type \n   std::basic_string<__gnu_test::pod_ushort>::_Rep::_S_max_size;\n \n template \n-  __gnu_test::pod_ushort\n+  const __gnu_test::pod_ushort\n   std::basic_string<__gnu_test::pod_ushort>::_Rep::_S_terminal;\n #endif\n "}, {"sha": "b39f51730af0acc735aaca344eb46f7297e71620", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_other/pod/3983-3.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1631cbcfb904f8d3cfb81dde88163248b8f006f9/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fpod%2F3983-3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1631cbcfb904f8d3cfb81dde88163248b8f006f9/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fpod%2F3983-3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_other%2Fpod%2F3983-3.cc?ref=1631cbcfb904f8d3cfb81dde88163248b8f006f9", "patch": "@@ -61,11 +61,11 @@ void test03()\n #if !__GXX_WEAK__\n // Explicitly instantiate for systems with no COMDAT or weak support.\n template \n-  std::basic_string<__gnu_test::pod_ushort>::size_type \n+  const std::basic_string<__gnu_test::pod_ushort>::size_type \n   std::basic_string<__gnu_test::pod_ushort>::_Rep::_S_max_size;\n \n template \n-  __gnu_test::pod_ushort\n+  const __gnu_test::pod_ushort\n   std::basic_string<__gnu_test::pod_ushort>::_Rep::_S_terminal;\n #endif\n "}, {"sha": "21c51d12ec810704941f88384bfe2dd4e85519f3", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/sentry/pod/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1631cbcfb904f8d3cfb81dde88163248b8f006f9/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fpod%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1631cbcfb904f8d3cfb81dde88163248b8f006f9/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fpod%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fpod%2F1.cc?ref=1631cbcfb904f8d3cfb81dde88163248b8f006f9", "patch": "@@ -158,11 +158,11 @@ void test01()\n #if !__GXX_WEAK__\n // Explicitly instantiate for systems with no COMDAT or weak support.\n template \n-  std::basic_string<__gnu_test::pod_ushort>::size_type \n+  const std::basic_string<__gnu_test::pod_ushort>::size_type \n   std::basic_string<__gnu_test::pod_ushort>::_Rep::_S_max_size;\n \n template \n-  __gnu_test::pod_ushort\n+  const __gnu_test::pod_ushort\n   std::basic_string<__gnu_test::pod_ushort>::_Rep::_S_terminal;\n #endif\n "}, {"sha": "b3f4a7e8aa7f3b16d1029f640f126ba113583ad0", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/sentry/pod/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1631cbcfb904f8d3cfb81dde88163248b8f006f9/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Fsentry%2Fpod%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1631cbcfb904f8d3cfb81dde88163248b8f006f9/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Fsentry%2Fpod%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Fsentry%2Fpod%2F1.cc?ref=1631cbcfb904f8d3cfb81dde88163248b8f006f9", "patch": "@@ -114,11 +114,11 @@ void test01()\n #if !__GXX_WEAK__\n // Explicitly instantiate for systems with no COMDAT or weak support.\n template \n-  std::basic_string<__gnu_test::pod_ushort>::size_type \n+  const std::basic_string<__gnu_test::pod_ushort>::size_type \n   std::basic_string<__gnu_test::pod_ushort>::_Rep::_S_max_size;\n \n template \n-  __gnu_test::pod_ushort\n+  const __gnu_test::pod_ushort\n   std::basic_string<__gnu_test::pod_ushort>::_Rep::_S_terminal;\n #endif\n "}]}