{"sha": "246bbdaa5f536b7a199dda9860c473137f40d622", "node_id": "C_kwDOANBUbNoAKDI0NmJiZGFhNWY1MzZiN2ExOTlkZGE5ODYwYzQ3MzEzN2Y0MGQ2MjI", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-11-16T14:27:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-11-16T16:07:39Z"}, "message": "tree-optimization/107686 - fix bitfield ref through vec_unpack optimization\n\nThe following propely restricts the bitfield access to integral types\nwhen we look through VEC_UNPACK with the intent to emit a widening\nconversion.\n\n\tPR tree-optimization/107686\n\t* tree-ssa-forwprop.cc (optimize_vector_load): Restrict\n\tVEC_UNPACK support to integral typed bitfield refs.\n\n\t* gcc.dg/pr107686.c: New testcase.", "tree": {"sha": "90dec2ce88b255a9e5bbfd65ebe68e353a977c85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90dec2ce88b255a9e5bbfd65ebe68e353a977c85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/246bbdaa5f536b7a199dda9860c473137f40d622", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/246bbdaa5f536b7a199dda9860c473137f40d622", "html_url": "https://github.com/Rust-GCC/gccrs/commit/246bbdaa5f536b7a199dda9860c473137f40d622", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/246bbdaa5f536b7a199dda9860c473137f40d622/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a5f3663f8de45b7030dfe7ce962783dc1a19885", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a5f3663f8de45b7030dfe7ce962783dc1a19885", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a5f3663f8de45b7030dfe7ce962783dc1a19885"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "2378103c5553d645ba7833f09bcefe9d7417b20a", "filename": "gcc/testsuite/gcc.dg/pr107686.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/246bbdaa5f536b7a199dda9860c473137f40d622/gcc%2Ftestsuite%2Fgcc.dg%2Fpr107686.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/246bbdaa5f536b7a199dda9860c473137f40d622/gcc%2Ftestsuite%2Fgcc.dg%2Fpr107686.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr107686.c?ref=246bbdaa5f536b7a199dda9860c473137f40d622", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile { target { dfp && longlong64 } } } */\n+/* { dg-options \"-O\" } */\n+/* { dg-additional-options \"-mavx2\" { target x86_64-*-* i?86-*-* } } */\n+\n+typedef _Decimal64 __attribute__((__vector_size__ (64))) D;\n+typedef __INT32_TYPE__ __attribute__((__vector_size__ (32))) U;\n+typedef __INT64_TYPE__ __attribute__((__vector_size__ (64))) V;\n+\n+U u;\n+D d;\n+\n+void\n+foo (void)\n+{\n+  d = d < (D) __builtin_convertvector (u, V);\n+}"}, {"sha": "429f77f199c44b1325dce7736d0368698ecfdc7e", "filename": "gcc/tree-ssa-forwprop.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/246bbdaa5f536b7a199dda9860c473137f40d622/gcc%2Ftree-ssa-forwprop.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/246bbdaa5f536b7a199dda9860c473137f40d622/gcc%2Ftree-ssa-forwprop.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.cc?ref=246bbdaa5f536b7a199dda9860c473137f40d622", "patch": "@@ -3162,7 +3162,11 @@ optimize_vector_load (gimple_stmt_iterator *gsi)\n \t      && (def == lhs\n \t\t  || (known_eq (bit_field_size (use_rhs), def_eltsize)\n \t\t      && constant_multiple_p (bit_field_offset (use_rhs),\n-\t\t\t\t\t      def_eltsize))))\n+\t\t\t\t\t      def_eltsize)\n+\t\t      /* We can simulate the VEC_UNPACK_{HI,LO}_EXPR\n+\t\t\t via a NOP_EXPR only for integral types.\n+\t\t\t ???  Support VEC_UNPACK_FLOAT_{HI,LO}_EXPR.  */\n+\t\t      && INTEGRAL_TYPE_P (TREE_TYPE (use_rhs)))))\n \t    {\n \t      bf_stmts.safe_push (use_stmt);\n \t      continue;"}]}