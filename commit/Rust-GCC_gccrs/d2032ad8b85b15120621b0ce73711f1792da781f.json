{"sha": "d2032ad8b85b15120621b0ce73711f1792da781f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIwMzJhZDhiODViMTUxMjA2MjFiMGNlNzM3MTFmMTc5MmRhNzgxZg==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2004-05-19T22:27:12Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-05-19T22:27:12Z"}, "message": "reg-stack.c (nan): Rename to ...\n\n2004-05-19  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        * reg-stack.c (nan): Rename to ...\n        (not_a_num): Here.\n        (reg_to_stack): Rename nan to not_a_num.\n        (subst_stack_regs_pat): Likewise.\n        (convert_regs_entry): Likewise.\n        (convert_regs_1): Likewise.\n\nFrom-SVN: r82039", "tree": {"sha": "3712b765eadc9e4a760c4618a168ee3a86723792", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3712b765eadc9e4a760c4618a168ee3a86723792"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2032ad8b85b15120621b0ce73711f1792da781f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2032ad8b85b15120621b0ce73711f1792da781f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2032ad8b85b15120621b0ce73711f1792da781f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2032ad8b85b15120621b0ce73711f1792da781f/comments", "author": null, "committer": null, "parents": [{"sha": "a6845d137a4deddc939dc367f17080fe5fe4e258", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6845d137a4deddc939dc367f17080fe5fe4e258", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6845d137a4deddc939dc367f17080fe5fe4e258"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "4bb13bfdd78c1c6e988e9048e4b5d713b0ecbfef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2032ad8b85b15120621b0ce73711f1792da781f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2032ad8b85b15120621b0ce73711f1792da781f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d2032ad8b85b15120621b0ce73711f1792da781f", "patch": "@@ -1,5 +1,12 @@\n 2004-05-19  Andrew Pinski  <pinskia@physics.uc.edu>\n \n+\t* reg-stack.c (nan): Rename to ...\n+\t(not_a_num): Here.\n+\t(reg_to_stack): Rename nan to not_a_num.\n+\t(subst_stack_regs_pat): Likewise.\n+\t(convert_regs_entry): Likewise.\n+\t(convert_regs_1): Likewise.\n+\n \t* tree-cfg.c (find_case_label_for_value): Replace call to\n \tsimple_cst_equal with tree_int_cst_equal.\n "}, {"sha": "5b28f0ea11c16ed3702eb206468dae31f1a71d28", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2032ad8b85b15120621b0ce73711f1792da781f/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2032ad8b85b15120621b0ce73711f1792da781f/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=d2032ad8b85b15120621b0ce73711f1792da781f", "patch": "@@ -232,7 +232,7 @@ static rtx\n   (FP_mode_reg[(regno)-FIRST_STACK_REG][(int) (mode)])\n \n /* Used to initialize uninitialized registers.  */\n-static rtx nan;\n+static rtx not_a_num;\n \n /* Forward declarations */\n \n@@ -472,11 +472,11 @@ reg_to_stack (FILE *file)\n      on zero, which we can get from `ldz'.  */\n \n   if (flag_pic)\n-    nan = CONST0_RTX (SFmode);\n+    not_a_num = CONST0_RTX (SFmode);\n   else\n     {\n-      nan = gen_lowpart (SFmode, GEN_INT (0x7fc00000));\n-      nan = force_const_mem (SFmode, nan);\n+      not_a_num = gen_lowpart (SFmode, GEN_INT (0x7fc00000));\n+      not_a_num = force_const_mem (SFmode, not_a_num);\n     }\n \n   /* Allocate a cache for stack_regs_mentioned.  */\n@@ -1499,7 +1499,7 @@ subst_stack_regs_pat (rtx insn, stack regstack, rtx pat)\n \t\t  {\n \t\t    pat = gen_rtx_SET (VOIDmode,\n \t\t\t\t       FP_MODE_REG (REGNO (*dest), SFmode),\n-\t\t\t\t       nan);\n+\t\t\t\t       not_a_num);\n \t\t    PATTERN (insn) = pat;\n \t\t    control_flow_insn_deleted |= move_for_stack_reg (insn, regstack, pat);\n \t\t  }\n@@ -1508,7 +1508,7 @@ subst_stack_regs_pat (rtx insn, stack regstack, rtx pat)\n \t\t  {\n \t\t    pat = gen_rtx_SET (VOIDmode,\n \t\t\t\t       FP_MODE_REG (REGNO (*dest) + 1, SFmode),\n-\t\t\t\t       nan);\n+\t\t\t\t       not_a_num);\n \t\t    PATTERN (insn) = pat;\n \t\t    control_flow_insn_deleted |= move_for_stack_reg (insn, regstack, pat);\n \t\t  }\n@@ -2597,7 +2597,7 @@ convert_regs_entry (void)\n \n \t    init = gen_rtx_SET (VOIDmode,\n \t\t\t\tFP_MODE_REG (FIRST_STACK_REG, SFmode),\n-\t\t\t\tnan);\n+\t\t\t\tnot_a_num);\n \t    insert_insn_on_edge (init, e);\n \t    inserted = 1;\n \t  }\n@@ -2915,7 +2915,7 @@ convert_regs_1 (FILE *file, basic_block block)\n \t    }\n \n \t  set = gen_rtx_SET (VOIDmode, FP_MODE_REG (reg, SFmode),\n-\t\t\t     nan);\n+\t\t\t     not_a_num);\n \t  insn = emit_insn_after (set, insn);\n \t  control_flow_insn_deleted |= subst_stack_regs (insn, &regstack);\n \t}"}]}