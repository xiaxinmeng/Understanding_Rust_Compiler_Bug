{"sha": "f742cf901dd37dfeb116e7dc099461b1291389e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc0MmNmOTAxZGQzN2RmZWIxMTZlN2RjMDk5NDYxYjEyOTEzODllOA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2014-02-03T15:06:31Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2014-02-03T15:06:31Z"}, "message": "Check if mode is OK first\n\n\tPR rtl-optimization/60024\n\t* sel-sched.c (init_regs_for_mode): Check if mode is OK first.\n\nFrom-SVN: r207427", "tree": {"sha": "551ae48976df67b73976cc8d577747ca14e60aa8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/551ae48976df67b73976cc8d577747ca14e60aa8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f742cf901dd37dfeb116e7dc099461b1291389e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f742cf901dd37dfeb116e7dc099461b1291389e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f742cf901dd37dfeb116e7dc099461b1291389e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f742cf901dd37dfeb116e7dc099461b1291389e8/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f36fd301702fdfe96b23ba0656903262dd74c30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f36fd301702fdfe96b23ba0656903262dd74c30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f36fd301702fdfe96b23ba0656903262dd74c30"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "e6df43b80f5771d5d513d38d0c26b91c17ff27df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f742cf901dd37dfeb116e7dc099461b1291389e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f742cf901dd37dfeb116e7dc099461b1291389e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f742cf901dd37dfeb116e7dc099461b1291389e8", "patch": "@@ -1,3 +1,8 @@\n+2014-02-03  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR rtl-optimization/60024\n+\t* sel-sched.c (init_regs_for_mode): Check if mode is OK first.\n+\n 2014-02-03  Markus Trippelsdorf  <markus@trippelsdorf.de>\n \n \t* doc/invoke.texi: (fprofile-reorder-functions): Fix typo."}, {"sha": "490f3610aea2886fa599364b984909291043464e", "filename": "gcc/sel-sched.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f742cf901dd37dfeb116e7dc099461b1291389e8/gcc%2Fsel-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f742cf901dd37dfeb116e7dc099461b1291389e8/gcc%2Fsel-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched.c?ref=f742cf901dd37dfeb116e7dc099461b1291389e8", "patch": "@@ -1116,9 +1116,16 @@ init_regs_for_mode (enum machine_mode mode)\n \n   for (cur_reg = 0; cur_reg < FIRST_PSEUDO_REGISTER; cur_reg++)\n     {\n-      int nregs = hard_regno_nregs[cur_reg][mode];\n+      int nregs;\n       int i;\n \n+      /* See whether it accepts all modes that occur in\n+         original insns.  */\n+      if (! HARD_REGNO_MODE_OK (cur_reg, mode))\n+        continue;\n+\n+      nregs = hard_regno_nregs[cur_reg][mode];\n+\n       for (i = nregs - 1; i >= 0; --i)\n         if (fixed_regs[cur_reg + i]\n                 || global_regs[cur_reg + i]\n@@ -1140,11 +1147,6 @@ init_regs_for_mode (enum machine_mode mode)\n       if (i >= 0)\n         continue;\n \n-      /* See whether it accepts all modes that occur in\n-         original insns.  */\n-      if (! HARD_REGNO_MODE_OK (cur_reg, mode))\n-        continue;\n-\n       if (HARD_REGNO_CALL_PART_CLOBBERED (cur_reg, mode))\n         SET_HARD_REG_BIT (sel_hrd.regs_for_call_clobbered[mode],\n                           cur_reg);"}]}