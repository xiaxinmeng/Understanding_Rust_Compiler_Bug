{"sha": "ce6923c53da68bc3e0eabb1d071217402a104148", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U2OTIzYzUzZGE2OGJjM2UwZWFiYjFkMDcxMjE3NDAyYTEwNDE0OA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2013-09-18T10:01:40Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2013-09-18T10:01:40Z"}, "message": "re PR sanitizer/58411 (no_sanitize_undefined function attribute)\n\n2013-09-18  Marek Polacek  <polacek@redhat.com>\n\n\tPR sanitizer/58411\n\t* doc/extend.texi: Document no_sanitize_undefined attribute.\n\t* builtins.c (fold_builtin_0): Don't sanitize function if it has the\n\tno_sanitize_undefined attribute.\n\nFrom-SVN: r202682", "tree": {"sha": "03f7c27c5287577987f7b1ef007495fd35f4beb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03f7c27c5287577987f7b1ef007495fd35f4beb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce6923c53da68bc3e0eabb1d071217402a104148", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce6923c53da68bc3e0eabb1d071217402a104148", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce6923c53da68bc3e0eabb1d071217402a104148", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce6923c53da68bc3e0eabb1d071217402a104148/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d30d00a2f1851cf6e6fe3b392a90b10e54388c20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d30d00a2f1851cf6e6fe3b392a90b10e54388c20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d30d00a2f1851cf6e6fe3b392a90b10e54388c20"}], "stats": {"total": 101, "additions": 100, "deletions": 1}, "files": [{"sha": "8460d0afd6422d89453bc7d8a58b7be449538b6a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6923c53da68bc3e0eabb1d071217402a104148/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6923c53da68bc3e0eabb1d071217402a104148/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce6923c53da68bc3e0eabb1d071217402a104148", "patch": "@@ -1,3 +1,10 @@\n+2013-09-18  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/58411\n+\t* doc/extend.texi: Document no_sanitize_undefined attribute.\n+\t* builtins.c (fold_builtin_0): Don't sanitize function if it has the\n+\tno_sanitize_undefined attribute.\n+\n 2013-09-18  Nick Clifton  <nickc@redhat.com>\n \n \t* config/msp430/msp430.h (ASM_SPEC): Pass -md on to the assembler."}, {"sha": "d19ca68baba7fd6c1bc4170f3595c4c09baef1e8", "filename": "gcc/builtins.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6923c53da68bc3e0eabb1d071217402a104148/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6923c53da68bc3e0eabb1d071217402a104148/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=ce6923c53da68bc3e0eabb1d071217402a104148", "patch": "@@ -10313,7 +10313,10 @@ fold_builtin_0 (location_t loc, tree fndecl, bool ignore ATTRIBUTE_UNUSED)\n       return fold_builtin_classify_type (NULL_TREE);\n \n     case BUILT_IN_UNREACHABLE:\n-      if (flag_sanitize & SANITIZE_UNREACHABLE)\n+      if (flag_sanitize & SANITIZE_UNREACHABLE\n+\t  && (current_function_decl == NULL\n+\t      || !lookup_attribute (\"no_sanitize_undefined\",\n+\t\t\t\t    DECL_ATTRIBUTES (current_function_decl))))\n \treturn ubsan_instrument_unreachable (loc);\n       break;\n "}, {"sha": "1772ba56b490604dd09963cbac3d3bb62acf3d46", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6923c53da68bc3e0eabb1d071217402a104148/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6923c53da68bc3e0eabb1d071217402a104148/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=ce6923c53da68bc3e0eabb1d071217402a104148", "patch": "@@ -1,3 +1,10 @@\n+2013-09-18  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/58411\n+\t* c-common.c (handle_no_sanitize_undefined_attribute): New function.\n+\tDeclare it.\n+\t(struct attribute_spec c_common_att): Add no_sanitize_undefined.\n+\n 2013-09-14  Iain Sandoe  <iain@codesourcery.com>\n \n \tPR target/48094"}, {"sha": "8ecb70cfa7cc320f06b83bb892daf15a986a6d4a", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6923c53da68bc3e0eabb1d071217402a104148/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6923c53da68bc3e0eabb1d071217402a104148/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=ce6923c53da68bc3e0eabb1d071217402a104148", "patch": "@@ -311,6 +311,8 @@ static tree handle_no_sanitize_address_attribute (tree *, tree, tree,\n \t\t\t\t\t\t  int, bool *);\n static tree handle_no_address_safety_analysis_attribute (tree *, tree, tree,\n \t\t\t\t\t\t\t int, bool *);\n+static tree handle_no_sanitize_undefined_attribute (tree *, tree, tree, int,\n+\t\t\t\t\t\t    bool *);\n static tree handle_noinline_attribute (tree *, tree, tree, int, bool *);\n static tree handle_noclone_attribute (tree *, tree, tree, int, bool *);\n static tree handle_leaf_attribute (tree *, tree, tree, int, bool *);\n@@ -722,6 +724,9 @@ const struct attribute_spec c_common_attribute_table[] =\n   { \"no_sanitize_address\",    0, 0, true, false, false,\n \t\t\t      handle_no_sanitize_address_attribute,\n \t\t\t      false },\n+  { \"no_sanitize_undefined\",  0, 0, true, false, false,\n+\t\t\t      handle_no_sanitize_undefined_attribute,\n+\t\t\t      false },\n   { \"warning\",\t\t      1, 1, true,  false, false,\n \t\t\t      handle_error_attribute, false },\n   { \"error\",\t\t      1, 1, true,  false, false,\n@@ -6575,6 +6580,22 @@ handle_no_address_safety_analysis_attribute (tree *node, tree name, tree, int,\n   return NULL_TREE;\n }\n \n+/* Handle a \"no_sanitize_undefined\" attribute; arguments as in\n+   struct attribute_spec.handler.  */\n+\n+static tree\n+handle_no_sanitize_undefined_attribute (tree *node, tree name, tree, int,\n+\t\t\t\t      bool *no_add_attrs)\n+{\n+  if (TREE_CODE (*node) != FUNCTION_DECL)\n+    {\n+      warning (OPT_Wattributes, \"%qE attribute ignored\", name);\n+      *no_add_attrs = true;\n+    }\n+\n+  return NULL_TREE;\n+}\n+\n /* Handle a \"noinline\" attribute; arguments as in\n    struct attribute_spec.handler.  */\n "}, {"sha": "59b71aa0e9d7dbab8272ac693849f787c95b6c9e", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6923c53da68bc3e0eabb1d071217402a104148/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6923c53da68bc3e0eabb1d071217402a104148/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=ce6923c53da68bc3e0eabb1d071217402a104148", "patch": "@@ -1,3 +1,9 @@\n+2013-09-18  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/58411\n+\t* c-typeck.c (build_binary_op): Don't sanitize function if it has the\n+\tno_sanitize_undefined attribute.\n+\n 2013-09-13  Kai Tietz  <ktietz@redhat.com>\n \n \tPR target/57848"}, {"sha": "7dc5527fc7c63d6fe81e3bb356841f946cf4f98c", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6923c53da68bc3e0eabb1d071217402a104148/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6923c53da68bc3e0eabb1d071217402a104148/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=ce6923c53da68bc3e0eabb1d071217402a104148", "patch": "@@ -10498,6 +10498,8 @@ build_binary_op (location_t location, enum tree_code code,\n \n   if (flag_sanitize & SANITIZE_UNDEFINED\n       && current_function_decl != 0\n+      && !lookup_attribute (\"no_sanitize_undefined\",\n+\t\t\t    DECL_ATTRIBUTES (current_function_decl))\n       && (doing_div_or_mod || doing_shift))\n     {\n       /* OP0 and/or OP1 might have side-effects.  */"}, {"sha": "c16d682459da2ac7aeddf2794ce2591322dbde9a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6923c53da68bc3e0eabb1d071217402a104148/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6923c53da68bc3e0eabb1d071217402a104148/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ce6923c53da68bc3e0eabb1d071217402a104148", "patch": "@@ -1,3 +1,9 @@\n+2013-09-18  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/58411\n+\t* typeck.c (cp_build_binary_op): Don't sanitize function if it has the\n+\tno_sanitize_undefined attribute.\n+\n 2013-09-17  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/58435"}, {"sha": "f7d6208022fd73416d2775b27f05ec3426df60c2", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6923c53da68bc3e0eabb1d071217402a104148/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6923c53da68bc3e0eabb1d071217402a104148/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=ce6923c53da68bc3e0eabb1d071217402a104148", "patch": "@@ -4887,6 +4887,8 @@ cp_build_binary_op (location_t location,\n   if ((flag_sanitize & SANITIZE_UNDEFINED)\n       && !processing_template_decl\n       && current_function_decl != 0\n+      && !lookup_attribute (\"no_sanitize_undefined\",\n+\t\t\t    DECL_ATTRIBUTES (current_function_decl))\n       && (doing_div_or_mod || doing_shift))\n     {\n       /* OP0 and/or OP1 might have side-effects.  */"}, {"sha": "1d0dfbe985d4a860df8cbc2e0666d3fb46369bfb", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6923c53da68bc3e0eabb1d071217402a104148/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6923c53da68bc3e0eabb1d071217402a104148/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=ce6923c53da68bc3e0eabb1d071217402a104148", "patch": "@@ -2136,6 +2136,7 @@ attributes are currently defined for functions on all targets:\n @code{warn_unused_result}, @code{nonnull}, @code{gnu_inline},\n @code{externally_visible}, @code{hot}, @code{cold}, @code{artificial},\n @code{no_sanitize_address}, @code{no_address_safety_analysis},\n+@code{no_sanitize_undefined},\n @code{error} and @code{warning}.\n Several other attributes are defined for functions on particular\n target systems.  Other attributes, including @code{section} are\n@@ -3500,6 +3501,12 @@ The @code{no_address_safety_analysis} is a deprecated alias of the\n @code{no_sanitize_address} attribute, new code should use\n @code{no_sanitize_address}.\n \n+@item no_sanitize_undefined\n+@cindex @code{no_sanitize_undefined} function attribute\n+The @code{no_sanitize_undefined} attribute on functions is used\n+to inform the compiler that it should not check for undefined behavior\n+in the function when compiling with the @option{-fsanitize=undefined} option.\n+\n @item regparm (@var{number})\n @cindex @code{regparm} attribute\n @cindex functions that are passed arguments in registers on the 386"}, {"sha": "2b1cad23bc8ec9f0c77374748bddc219332ec707", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6923c53da68bc3e0eabb1d071217402a104148/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6923c53da68bc3e0eabb1d071217402a104148/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ce6923c53da68bc3e0eabb1d071217402a104148", "patch": "@@ -1,3 +1,8 @@\n+2013-09-18  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/58411\n+\t* c-c++-common/ubsan/attrib-1.c: New test.\n+\n 2013-09-17  Cong Hou  <congh@google.com>\n \n \t* gcc.dg/vect/vect-reduc-dot-s16c.c: Add a test case with dot product "}, {"sha": "2e9141ca04001e22992468c24917bf9a449064df", "filename": "gcc/testsuite/c-c++-common/ubsan/attrib-1.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6923c53da68bc3e0eabb1d071217402a104148/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fattrib-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6923c53da68bc3e0eabb1d071217402a104148/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fattrib-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fattrib-1.c?ref=ce6923c53da68bc3e0eabb1d071217402a104148", "patch": "@@ -0,0 +1,33 @@\n+/* PR sanitizer/58411 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize=undefined -w\" } */\n+\n+__attribute__((no_sanitize_undefined)) int\n+f1 (int i)\n+{\n+  return 16 << i;\n+}\n+\n+int f2 (int i);\n+int f2 (int i) __attribute__((no_sanitize_undefined));\n+int f2 (int i) __attribute__((no_sanitize_undefined));\n+int f2 (int i);\n+\n+int\n+f2 (int i)\n+{\n+  return 1 / i;\n+}\n+\n+void f3 (void);\n+__typeof (f3) f3  __attribute__((__no_sanitize_undefined__));\n+\n+void\n+f3 (void)\n+{\n+  __builtin_unreachable ();\n+}\n+\n+/* { dg-final { scan-assembler-not \"__ubsan_handle_shift_out_of_bounds\" } } */\n+/* { dg-final { scan-assembler-not \"__ubsan_handle_divrem_overflow\" } } */\n+/* { dg-final { scan-assembler-not \"__ubsan_handle_builtin_unreachable\" } } */"}]}