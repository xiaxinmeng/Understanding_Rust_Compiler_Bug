{"sha": "e4bbeea27ee88bca0261978ad389f2aff9a6b7fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRiYmVlYTI3ZWU4OGJjYTAyNjE5NzhhZDM4OWYyYWZmOWE2YjdmYg==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2018-07-27T17:06:44Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2018-07-27T17:06:44Z"}, "message": "PR tree-optimization/86696 - ICE in handle_char_store at gcc/tree-ssa-strlen.c:3332\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/86696\n\t* tree-ssa-strlen.c (get_min_string_length): Handle all integer\n\ttypes, including enums.\n\t(handle_char_store): Be prepared for the above function to fail.\n\ngcc/testsuite/ChangeLog:\n\n\tPR tree-optimization/86696\n\t* gcc.dg/pr86696.C: New test.\n\nFrom-SVN: r263032", "tree": {"sha": "f125c9ab7545a42ce51f366b544cb0f0564585c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f125c9ab7545a42ce51f366b544cb0f0564585c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4bbeea27ee88bca0261978ad389f2aff9a6b7fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4bbeea27ee88bca0261978ad389f2aff9a6b7fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4bbeea27ee88bca0261978ad389f2aff9a6b7fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4bbeea27ee88bca0261978ad389f2aff9a6b7fb/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "254c23d3f40c2832670c90de179630e903755252", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/254c23d3f40c2832670c90de179630e903755252", "html_url": "https://github.com/Rust-GCC/gccrs/commit/254c23d3f40c2832670c90de179630e903755252"}], "stats": {"total": 57, "additions": 53, "deletions": 4}, "files": [{"sha": "377ea6cf84da76df36dad4cfba5c648a33eb5499", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4bbeea27ee88bca0261978ad389f2aff9a6b7fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4bbeea27ee88bca0261978ad389f2aff9a6b7fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e4bbeea27ee88bca0261978ad389f2aff9a6b7fb", "patch": "@@ -1,3 +1,10 @@\n+2018-07-27  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/86696\n+\t* tree-ssa-strlen.c (get_min_string_length): Handle all integer\n+\ttypes, including enums.\n+\t(handle_char_store): Be prepared for the above function to fail.\n+\n 2018-07-26  Qing Zhao  <qing.zhao@oracle.com>\n \n \t* builtins.c (inline_expand_builtin_string_cmp): Disable inlining"}, {"sha": "3850aaa0ebdcca562a8162e1afca80b550c4cf51", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4bbeea27ee88bca0261978ad389f2aff9a6b7fb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4bbeea27ee88bca0261978ad389f2aff9a6b7fb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e4bbeea27ee88bca0261978ad389f2aff9a6b7fb", "patch": "@@ -1,3 +1,8 @@\n+2018-07-27  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/86696\n+\t* g++.dg/pr86696.C: New test.\n+\n 2018-07-27  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR tree-optimization/86636"}, {"sha": "c7ce17c80da84e5183f39f5a5db950997eae6327", "filename": "gcc/testsuite/g++.dg/pr86696.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4bbeea27ee88bca0261978ad389f2aff9a6b7fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr86696.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4bbeea27ee88bca0261978ad389f2aff9a6b7fb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr86696.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr86696.C?ref=e4bbeea27ee88bca0261978ad389f2aff9a6b7fb", "patch": "@@ -0,0 +1,30 @@\n+/* PR tree-optimization/86696 - ICE in handle_char_store at\n+   gcc/tree-ssa-strlen.c\n+   { dg-do compile }\n+   { dg-options \"-O2 -Wall -std=c++11\" } */\n+\n+typedef char a;\n+template <typename b> struct c {\n+  int d;\n+  b e;\n+};\n+struct f;\n+class g {\n+public:\n+  void h(c<f>);\n+};\n+enum i {};\n+enum j : a { k, l };\n+struct f {\n+  i m;\n+  a n;\n+  a o;\n+  a p;\n+  j family;\n+};\n+void fn1() {\n+  i format{};\n+  f info{format, a(), 0, 4, l};\n+  g dest;\n+  dest.h({format, info});\n+}"}, {"sha": "1eaa9c505655fc108b4ddbc9abf772d92db59ed5", "filename": "gcc/tree-ssa-strlen.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4bbeea27ee88bca0261978ad389f2aff9a6b7fb/gcc%2Ftree-ssa-strlen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4bbeea27ee88bca0261978ad389f2aff9a6b7fb/gcc%2Ftree-ssa-strlen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-strlen.c?ref=e4bbeea27ee88bca0261978ad389f2aff9a6b7fb", "patch": "@@ -3150,7 +3150,7 @@ handle_pointer_plus (gimple_stmt_iterator *gsi)\n static HOST_WIDE_INT\n get_min_string_length (tree rhs, bool *full_string_p)\n {\n-  if (TREE_CODE (TREE_TYPE (rhs)) == INTEGER_TYPE)\n+  if (INTEGRAL_TYPE_P (TREE_TYPE (rhs)))\n     {\n       if (tree_expr_nonzero_p (rhs))\n \t{\n@@ -3315,9 +3315,16 @@ handle_char_store (gimple_stmt_iterator *gsi)\n \t     Otherwise, we're storing an unknown value at offset OFFSET,\n \t     so need to clip the nonzero_chars to OFFSET.  */\n \t  bool full_string_p = storing_all_zeros_p;\n-\t  HOST_WIDE_INT len = (storing_nonzero_p\n-\t\t\t       ? get_min_string_length (rhs, &full_string_p)\n-\t\t\t       : 1);\n+\t  HOST_WIDE_INT len = 1;\n+\t  if (storing_nonzero_p)\n+\t    {\n+\t      /* Try to get the minimum length of the string (or\n+\t\t individual character) being stored.  If it fails,\n+\t\t STORING_NONZERO_P guarantees it's at least 1.  */\n+\t      len = get_min_string_length (rhs, &full_string_p);\n+\t      if (len < 0)\n+\t\tlen = 1;\n+\t    }\n \n \t  location_t loc = gimple_location (stmt);\n \t  tree oldlen = si->nonzero_chars;"}]}