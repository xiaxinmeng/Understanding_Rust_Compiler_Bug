{"sha": "cf2758e3d4b726640ddc27628506700ffa623009", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YyNzU4ZTNkNGI3MjY2NDBkZGMyNzYyODUwNjcwMGZmYTYyMzAwOQ==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2008-04-29T20:10:18Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2008-04-29T20:10:18Z"}, "message": "avr.md (*sbrx_branch, [...]): Add mode to zero_extract.\n\n\t* config/avr/avr.md (*sbrx_branch, *sbix_branch, *sbix_branch_tmp):\n\tAdd mode to zero_extract.\n\t(sign bit tests peepholes): (Ditto.).\n\nFrom-SVN: r134809", "tree": {"sha": "c243c5562e2946fe318ad8660fb2fe5fb872b4c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c243c5562e2946fe318ad8660fb2fe5fb872b4c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf2758e3d4b726640ddc27628506700ffa623009", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf2758e3d4b726640ddc27628506700ffa623009", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf2758e3d4b726640ddc27628506700ffa623009", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf2758e3d4b726640ddc27628506700ffa623009/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f318ff0a6fda0434e3fc62b77dd921af34cf5162", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f318ff0a6fda0434e3fc62b77dd921af34cf5162", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f318ff0a6fda0434e3fc62b77dd921af34cf5162"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "2e29305b423f341640f51131d297496f414e19cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf2758e3d4b726640ddc27628506700ffa623009/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf2758e3d4b726640ddc27628506700ffa623009/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf2758e3d4b726640ddc27628506700ffa623009", "patch": "@@ -1,3 +1,9 @@\n+2008-04-29  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* config/avr/avr.md (*sbrx_branch, *sbix_branch, *sbix_branch_tmp):\n+\tAdd mode to zero_extract.\n+\t(sign bit tests peepholes): (Ditto.).\n+\n 2008-04-29  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386.c (ix86_builtins): Replace Prescott New"}, {"sha": "adaeb0ecd1553ad3837745213abcc807dcbb4b27", "filename": "gcc/config/avr/avr.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf2758e3d4b726640ddc27628506700ffa623009/gcc%2Fconfig%2Favr%2Favr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf2758e3d4b726640ddc27628506700ffa623009/gcc%2Fconfig%2Favr%2Favr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.md?ref=cf2758e3d4b726640ddc27628506700ffa623009", "patch": "@@ -2056,7 +2056,7 @@\n   [(set (pc)\n         (if_then_else\n \t (match_operator 0 \"eqne_operator\"\n-\t\t\t [(zero_extract\n+\t\t\t [(zero_extract:QI\n \t\t\t   (match_operand:QI 1 \"register_operand\" \"r\")\n \t\t\t   (const_int 1)\n \t\t\t   (match_operand 2 \"const_int_operand\" \"n\"))\n@@ -2123,9 +2123,9 @@\n \t\t\t   (label_ref (match_operand 1 \"\" \"\"))\n \t\t\t   (pc)))]\n   \"\"\n-  [(set (pc) (if_then_else (eq (zero_extract (match_dup 0)\n-\t\t\t\t\t     (const_int 1)\n-\t\t\t\t\t     (const_int 7))\n+  [(set (pc) (if_then_else (eq (zero_extract:QI (match_dup 0)\n+\t\t\t\t\t\t(const_int 1)\n+\t\t\t\t\t\t(const_int 7))\n \t\t\t       (const_int 0))\n \t\t\t   (label_ref (match_dup 1))\n \t\t\t   (pc)))]\n@@ -2137,9 +2137,9 @@\n \t\t\t   (label_ref (match_operand 1 \"\" \"\"))\n \t\t\t   (pc)))]\n   \"\"\n-  [(set (pc) (if_then_else (ne (zero_extract (match_dup 0)\n-\t\t\t\t\t     (const_int 1)\n-\t\t\t\t\t     (const_int 7))\n+  [(set (pc) (if_then_else (ne (zero_extract:QI (match_dup 0)\n+\t\t\t\t\t\t(const_int 1)\n+\t\t\t\t\t\t(const_int 7))\n \t\t\t       (const_int 0))\n \t\t\t   (label_ref (match_dup 1))\n \t\t\t   (pc)))]\n@@ -2518,7 +2518,7 @@\n   [(set (pc)\n \t(if_then_else\n \t (match_operator 0 \"eqne_operator\"\n-\t\t\t [(zero_extract\n+\t\t\t [(zero_extract:QI\n \t\t\t   (mem:QI (match_operand 1 \"low_io_address_operand\" \"n\"))\n \t\t\t   (const_int 1)\n \t\t\t   (match_operand 2 \"const_int_operand\" \"n\"))\n@@ -2565,7 +2565,7 @@\n   [(set (pc)\n \t(if_then_else\n \t (match_operator 0 \"eqne_operator\"\n-\t\t\t [(zero_extract\n+\t\t\t [(zero_extract:QI\n \t\t\t   (mem:QI (match_operand 1 \"high_io_address_operand\" \"n\"))\n \t\t\t   (const_int 1)\n \t\t\t   (match_operand 2 \"const_int_operand\" \"n\"))"}]}