{"sha": "42fd2cd932384288914174f4af7974a060972bff", "node_id": "C_kwDOANBUbNoAKDQyZmQyY2Q5MzIzODQyODg5MTQxNzRmNGFmNzk3NGEwNjA5NzJiZmY", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-05-28T06:30:47Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-05-28T06:30:47Z"}, "message": "libgomp: Don't define GOMP_HAVE_EFFICIENT_ALIGNED_ALLOC for _aligned_malloc [PR105745]\n\nsince apparently _aligned_malloc requires freeing with _aligned_free and:\n /* Defined if gomp_aligned_alloc doesn't use fallback version\n    and free can be used instead of gomp_aligned_free.  */\n #define GOMP_HAVE_EFFICIENT_ALIGNED_ALLOC 1\nso the second condition isn't satisfied.  For uses inside of the OpenMP\nallocators we can still use _aligned_malloc but we need to call _aligned_free\nin gomp_aligned_free.\n\n2022-05-28  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR libgomp/105745\n\t* libgomp.h (GOMP_HAVE_EFFICIENT_ALIGNED_ALLOC): Don't define for\n\tdefined(HAVE__ALIGNED_MALLOC) case.\n\t* alloc.c (gomp_aligned_alloc): Move defined(HAVE__ALIGNED_MALLOC)\n\thandling as last option before fallback instead of first.\n\t(gomp_aligned_free): For defined(HAVE__ALIGNED_MALLOC) call\n\t_aligned_free.", "tree": {"sha": "c75407921fbb7f736115c8f6e2ce4b32ddaeaa2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c75407921fbb7f736115c8f6e2ce4b32ddaeaa2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42fd2cd932384288914174f4af7974a060972bff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42fd2cd932384288914174f4af7974a060972bff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42fd2cd932384288914174f4af7974a060972bff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42fd2cd932384288914174f4af7974a060972bff/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "931249276acb4bdab778fe2bf4e81a1a31a78e6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/931249276acb4bdab778fe2bf4e81a1a31a78e6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/931249276acb4bdab778fe2bf4e81a1a31a78e6c"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "c1bd72db6f12232bf363ce9f45f0ef8a25a5a9b4", "filename": "libgomp/alloc.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42fd2cd932384288914174f4af7974a060972bff/libgomp%2Falloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42fd2cd932384288914174f4af7974a060972bff/libgomp%2Falloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Falloc.c?ref=42fd2cd932384288914174f4af7974a060972bff", "patch": "@@ -65,9 +65,7 @@ gomp_aligned_alloc (size_t al, size_t size)\n   void *ret;\n   if (al < sizeof (void *))\n     al = sizeof (void *);\n-#ifdef HAVE__ALIGNED_MALLOC\n-  ret = _aligned_malloc (size, al);\n-#elif defined(HAVE_MEMALIGN)\n+#ifdef HAVE_MEMALIGN\n   {\n     extern void *memalign (size_t, size_t);\n     ret = memalign (al, size);\n@@ -83,6 +81,8 @@ gomp_aligned_alloc (size_t al, size_t size)\n     else\n       ret = NULL;\n   }\n+#elif defined(HAVE__ALIGNED_MALLOC)\n+  ret = _aligned_malloc (size, al);\n #else\n   ret = NULL;\n   if ((al & (al - 1)) == 0 && size)\n@@ -106,6 +106,8 @@ gomp_aligned_free (void *ptr)\n {\n #ifdef GOMP_HAVE_EFFICIENT_ALIGNED_ALLOC\n   free (ptr);\n+#elif defined(HAVE__ALIGNED_MALLOC)\n+  _aligned_free (ptr);\n #else\n   if (ptr)\n     free (((void **) ptr)[-1]);"}, {"sha": "c243c4d6cf40d2660db243e0fd6c320d818c9dc4", "filename": "libgomp/libgomp.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42fd2cd932384288914174f4af7974a060972bff/libgomp%2Flibgomp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42fd2cd932384288914174f4af7974a060972bff/libgomp%2Flibgomp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.h?ref=42fd2cd932384288914174f4af7974a060972bff", "patch": "@@ -87,7 +87,6 @@ enum memmodel\n /* alloc.c */\n \n #if defined(HAVE_ALIGNED_ALLOC) \\\n-    || defined(HAVE__ALIGNED_MALLOC) \\\n     || defined(HAVE_POSIX_MEMALIGN) \\\n     || defined(HAVE_MEMALIGN)\n /* Defined if gomp_aligned_alloc doesn't use fallback version"}]}