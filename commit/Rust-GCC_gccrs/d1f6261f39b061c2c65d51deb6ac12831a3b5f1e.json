{"sha": "d1f6261f39b061c2c65d51deb6ac12831a3b5f1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFmNjI2MWYzOWIwNjFjMmM2NWQ1MWRlYjZhYzEyODMxYTNiNWYxZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-09-19T21:49:28Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-09-19T21:49:28Z"}, "message": "re PR lto/44246 (ICE with -fwhopr/-flto when using strlen and strcat without previous declaration)\n\n\n\tPR lto/44246\n\t* lto-cgraph.c (input_cgraph_1, input_varpool_1): Avoid\n\tprocessing same node twice.\n\t* gcc.c-torture/compile/pr44246.c:New file.\n\nFrom-SVN: r164425", "tree": {"sha": "75c8d4d95f109a7be0aedf92cf29859e14f9b78a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75c8d4d95f109a7be0aedf92cf29859e14f9b78a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1f6261f39b061c2c65d51deb6ac12831a3b5f1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1f6261f39b061c2c65d51deb6ac12831a3b5f1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1f6261f39b061c2c65d51deb6ac12831a3b5f1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1f6261f39b061c2c65d51deb6ac12831a3b5f1e/comments", "author": null, "committer": null, "parents": [{"sha": "a963da4d4891794686c982ed3c84691dcea487fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a963da4d4891794686c982ed3c84691dcea487fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a963da4d4891794686c982ed3c84691dcea487fb"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "00504ddc6c27047e11388d19c16ad374d1164d2c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1f6261f39b061c2c65d51deb6ac12831a3b5f1e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1f6261f39b061c2c65d51deb6ac12831a3b5f1e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d1f6261f39b061c2c65d51deb6ac12831a3b5f1e", "patch": "@@ -1,3 +1,9 @@\n+2010-09-19  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR lto/44246\n+\t* lto-cgraph.c (input_cgraph_1, input_varpool_1): Avoid\n+\tprocessing same node twice.\n+\n 2010-09-19  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/bfin/bfin.h (CLASS_LIKELY_SPILLED_P): Remove."}, {"sha": "22b35ee27ab0b183800c03287ef1495d1a6a4e97", "filename": "gcc/lto-cgraph.c", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1f6261f39b061c2c65d51deb6ac12831a3b5f1e/gcc%2Flto-cgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1f6261f39b061c2c65d51deb6ac12831a3b5f1e/gcc%2Flto-cgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-cgraph.c?ref=d1f6261f39b061c2c65d51deb6ac12831a3b5f1e", "patch": "@@ -1292,11 +1292,20 @@ input_cgraph_1 (struct lto_file_decl_data *file_data,\n \n       len = lto_input_uleb128 (ib);\n     }\n-\n+  /* AUX pointers should be all non-zero for nodes read from the stream.  */\n+#ifdef ENABLE_CHECKING\n+  FOR_EACH_VEC_ELT (cgraph_node_ptr, nodes, i, node)\n+    gcc_assert (node->aux);\n+#endif\n   FOR_EACH_VEC_ELT (cgraph_node_ptr, nodes, i, node)\n     {\n       int ref = (int) (intptr_t) node->global.inlined_to;\n \n+      /* We share declaration of builtins, so we may read same node twice.  */\n+      if (!node->aux)\n+\tcontinue;\n+      node->aux = NULL;\n+\n       /* Fixup inlined_to from reference to pointer.  */\n       if (ref != LCC_NOT_FOUND)\n \tnode->global.inlined_to = VEC_index (cgraph_node_ptr, nodes, ref);\n@@ -1311,6 +1320,8 @@ input_cgraph_1 (struct lto_file_decl_data *file_data,\n       else\n \tnode->same_comdat_group = NULL;\n     }\n+  FOR_EACH_VEC_ELT (cgraph_node_ptr, nodes, i, node)\n+    node->aux = (void *)1;\n   return nodes;\n }\n \n@@ -1332,16 +1343,26 @@ input_varpool_1 (struct lto_file_decl_data *file_data,\n \t\t     input_varpool_node (file_data, ib));\n       len--;\n     }\n+#ifdef ENABLE_CHECKING\n+  FOR_EACH_VEC_ELT (varpool_node_ptr, varpool, i, node)\n+    gcc_assert (!node->aux);\n+#endif\n   FOR_EACH_VEC_ELT (varpool_node_ptr, varpool, i, node)\n     {\n       int ref = (int) (intptr_t) node->same_comdat_group;\n+      /* We share declaration of builtins, so we may read same node twice.  */\n+      if (node->aux)\n+\tcontinue;\n+      node->aux = (void *)1;\n \n       /* Fixup same_comdat_group from reference to pointer.  */\n       if (ref != LCC_NOT_FOUND)\n \tnode->same_comdat_group = VEC_index (varpool_node_ptr, varpool, ref);\n       else\n \tnode->same_comdat_group = NULL;\n     }\n+  FOR_EACH_VEC_ELT (varpool_node_ptr, varpool, i, node)\n+    node->aux = NULL;\n   return varpool;\n }\n "}, {"sha": "bf288668993e6887d0cbf60fd84c7b76347670ab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1f6261f39b061c2c65d51deb6ac12831a3b5f1e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1f6261f39b061c2c65d51deb6ac12831a3b5f1e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d1f6261f39b061c2c65d51deb6ac12831a3b5f1e", "patch": "@@ -1,3 +1,8 @@\n+2010-09-19  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR lto/44246\n+\t* gcc.c-torture/compile/pr44246.c:New file.\n+\n 2010-09-19  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/45714"}, {"sha": "6e478690351cbc9e2e70e9a9f6f85a6fba53b32e", "filename": "gcc/testsuite/gcc.c-torture/compile/pr44246.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1f6261f39b061c2c65d51deb6ac12831a3b5f1e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr44246.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1f6261f39b061c2c65d51deb6ac12831a3b5f1e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr44246.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr44246.c?ref=d1f6261f39b061c2c65d51deb6ac12831a3b5f1e", "patch": "@@ -0,0 +1,5 @@\n+int main(int argc, char *argv[])\n+{\n+  strcat(argv[0], \"X\");\n+  return strlen(argv[0]);\n+}"}]}