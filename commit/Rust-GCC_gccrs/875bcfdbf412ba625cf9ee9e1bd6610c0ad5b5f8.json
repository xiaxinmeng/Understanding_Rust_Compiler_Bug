{"sha": "875bcfdbf412ba625cf9ee9e1bd6610c0ad5b5f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc1YmNmZGJmNDEyYmE2MjVjZjllZTllMWJkNjYxMGMwYWQ1YjVmOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-10-19T22:29:15Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-10-19T22:29:15Z"}, "message": "re PR c++/50793 (G++ doesn't value-initialize all members of non-trivial type in default argument)\n\n\tPR c++/50793\n\t* tree.c (bot_manip): Propagate AGGR_INIT_ZERO_FIRST.\n\nFrom-SVN: r180227", "tree": {"sha": "4c9775c1197e68fdedd21754444fa1abc3c19c9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c9775c1197e68fdedd21754444fa1abc3c19c9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/875bcfdbf412ba625cf9ee9e1bd6610c0ad5b5f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/875bcfdbf412ba625cf9ee9e1bd6610c0ad5b5f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/875bcfdbf412ba625cf9ee9e1bd6610c0ad5b5f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/875bcfdbf412ba625cf9ee9e1bd6610c0ad5b5f8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f33fa066984c6f29eee20db130133354a5ec995c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f33fa066984c6f29eee20db130133354a5ec995c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f33fa066984c6f29eee20db130133354a5ec995c"}], "stats": {"total": 50, "additions": 48, "deletions": 2}, "files": [{"sha": "8e9bb4a841df9b7a6922e20ac185f858d71a8b62", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/875bcfdbf412ba625cf9ee9e1bd6610c0ad5b5f8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/875bcfdbf412ba625cf9ee9e1bd6610c0ad5b5f8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=875bcfdbf412ba625cf9ee9e1bd6610c0ad5b5f8", "patch": "@@ -1,3 +1,8 @@\n+2011-10-19  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/50793\n+\t* tree.c (bot_manip): Propagate AGGR_INIT_ZERO_FIRST.\n+\n 2011-10-19  Roland Stigge  <stigge@antcom.de>\n \n \tPR translation/49704"}, {"sha": "d023eb86cb8d648f1542589642323c40363aa51e", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/875bcfdbf412ba625cf9ee9e1bd6610c0ad5b5f8/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/875bcfdbf412ba625cf9ee9e1bd6610c0ad5b5f8/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=875bcfdbf412ba625cf9ee9e1bd6610c0ad5b5f8", "patch": "@@ -1879,8 +1879,12 @@ bot_manip (tree* tp, int* walk_subtrees, void* data)\n       tree u;\n \n       if (TREE_CODE (TREE_OPERAND (t, 1)) == AGGR_INIT_EXPR)\n-\tu = build_cplus_new (TREE_TYPE (t), TREE_OPERAND (t, 1),\n-\t\t\t     tf_warning_or_error);\n+\t{\n+\t  u = build_cplus_new (TREE_TYPE (t), TREE_OPERAND (t, 1),\n+\t\t\t       tf_warning_or_error);\n+\t  if (AGGR_INIT_ZERO_FIRST (TREE_OPERAND (t, 1)))\n+\t    AGGR_INIT_ZERO_FIRST (TREE_OPERAND (u, 1)) = true;\n+\t}\n       else\n \tu = build_target_expr_with_type (TREE_OPERAND (t, 1), TREE_TYPE (t),\n \t\t\t\t\t tf_warning_or_error);"}, {"sha": "173f195f2766821092ac7f4f4a3fbf6b5e05a4b5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/875bcfdbf412ba625cf9ee9e1bd6610c0ad5b5f8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/875bcfdbf412ba625cf9ee9e1bd6610c0ad5b5f8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=875bcfdbf412ba625cf9ee9e1bd6610c0ad5b5f8", "patch": "@@ -1,3 +1,8 @@\n+2011-10-19  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/50793\n+\t* g++.dg/init/value9.C: New.\n+\n 2011-10-19  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/torture/vshuf-32.inc: Add interleave permutations."}, {"sha": "4899bd81001af029199e24062a4546378643a2a5", "filename": "gcc/testsuite/g++.dg/init/value9.C", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/875bcfdbf412ba625cf9ee9e1bd6610c0ad5b5f8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fvalue9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/875bcfdbf412ba625cf9ee9e1bd6610c0ad5b5f8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fvalue9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fvalue9.C?ref=875bcfdbf412ba625cf9ee9e1bd6610c0ad5b5f8", "patch": "@@ -0,0 +1,32 @@\n+// PR c++/50793\n+// { dg-do run }\n+\n+struct NonTrivial\n+{\n+  NonTrivial() { }\n+};\n+\n+struct S\n+{\n+  NonTrivial nt;\n+  int i;\n+};\n+\n+int f(S s)\n+{\n+  s.i = 0xdeadbeef;\n+  return s.i;\n+}\n+\n+int g(S s = S())\n+{\n+  return s.i;\n+}\n+\n+int main()\n+{\n+  f(S());  // make stack dirty\n+\n+  if ( g() )\n+    __builtin_abort();\n+}"}]}