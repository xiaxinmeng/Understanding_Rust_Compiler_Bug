{"sha": "ed03b55bb0841bd2a7e1ea5138bbe5c8fdcf4955", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQwM2I1NWJiMDg0MWJkMmE3ZTFlYTUxMzhiYmU1YzhmZGNmNDk1NQ==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2000-07-23T16:28:30Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-07-23T16:28:30Z"}, "message": "c-lex.c (init_lex): Keep the \"inline\" keyword in C99 mode.\n\n\t* c-lex.c (init_lex): Keep the \"inline\" keyword in C99 mode.\n\t(yylex): Don't pedwarn for \"inline\" in C99 mode.\n\nFrom-SVN: r35202", "tree": {"sha": "ee275a09ddc4a4c9076ebf8deb8c7fc73bd556fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee275a09ddc4a4c9076ebf8deb8c7fc73bd556fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed03b55bb0841bd2a7e1ea5138bbe5c8fdcf4955", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed03b55bb0841bd2a7e1ea5138bbe5c8fdcf4955", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed03b55bb0841bd2a7e1ea5138bbe5c8fdcf4955", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed03b55bb0841bd2a7e1ea5138bbe5c8fdcf4955/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "683eb0e99a52c56e400f690a62236cf66ab4d981", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/683eb0e99a52c56e400f690a62236cf66ab4d981", "html_url": "https://github.com/Rust-GCC/gccrs/commit/683eb0e99a52c56e400f690a62236cf66ab4d981"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "4b289373d36f706e5dab42ab36e84bbcb802bfe7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed03b55bb0841bd2a7e1ea5138bbe5c8fdcf4955/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed03b55bb0841bd2a7e1ea5138bbe5c8fdcf4955/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed03b55bb0841bd2a7e1ea5138bbe5c8fdcf4955", "patch": "@@ -1,5 +1,8 @@\n 2000-07-23  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n+\t* c-lex.c (init_lex): Keep the \"inline\" keyword in C99 mode.\n+\t(yylex): Don't pedwarn for \"inline\" in C99 mode.\n+\n \t* bitmap.c (debug_bitmap_file): Cast pointers to PTR for printing\n \twith %p.\n \t* ggc-page.c (debug_print_page_list, alloc_page, free_page,"}, {"sha": "9ceb2bfcc62c50984f38784938ffa94e1cf8b99b", "filename": "gcc/c-lex.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed03b55bb0841bd2a7e1ea5138bbe5c8fdcf4955/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed03b55bb0841bd2a7e1ea5138bbe5c8fdcf4955/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=ed03b55bb0841bd2a7e1ea5138bbe5c8fdcf4955", "patch": "@@ -338,7 +338,8 @@ init_lex ()\n     {\n       UNSET_RESERVED_WORD (\"asm\");\n       UNSET_RESERVED_WORD (\"typeof\");\n-      UNSET_RESERVED_WORD (\"inline\");\n+      if (! flag_isoc99)\n+\tUNSET_RESERVED_WORD (\"inline\");\n       UNSET_RESERVED_WORD (\"iterator\");\n       UNSET_RESERVED_WORD (\"complex\");\n     }\n@@ -1402,7 +1403,7 @@ yylex ()\n \t    /* Even if we decided to recognize asm, still perhaps warn.  */\n \t    if (pedantic\n \t\t&& (value == ASM_KEYWORD || value == TYPEOF\n-\t\t    || ptr->rid == RID_INLINE)\n+\t\t    || (ptr->rid == RID_INLINE && ! flag_isoc99))\n \t\t&& token_buffer[0] != '_')\n \t      pedwarn (\"ANSI does not permit the keyword `%s'\",\n \t\t       token_buffer);"}]}