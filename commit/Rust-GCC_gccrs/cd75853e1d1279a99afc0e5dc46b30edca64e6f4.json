{"sha": "cd75853e1d1279a99afc0e5dc46b30edca64e6f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q3NTg1M2UxZDEyNzlhOTlhZmMwZTVkYzQ2YjMwZWRjYTY0ZTZmNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2006-06-09T21:18:42Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2006-06-09T21:18:42Z"}, "message": "re PR fortran/27916 (Problem with allocatable arrays inside OpenMP do loop)\n\n\tPR fortran/27916\n\t* trans-openmp.c (gfc_omp_clause_default_ctor): New function.\n\t* trans.h (gfc_omp_clause_default_ctor): New prototype.\n\t* f95-lang.c (LANG_HOOKS_OMP_CLAUSE_DEFAULT_CTOR): Define.\n\n\t* testsuite/libgomp.fortran/pr27916-1.f90: New test.\n\t* testsuite/libgomp.fortran/pr27916-2.f90: New test.\n\nFrom-SVN: r114520", "tree": {"sha": "530c2e857eb28361de2db9d88b30a1ef04da4efb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/530c2e857eb28361de2db9d88b30a1ef04da4efb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd75853e1d1279a99afc0e5dc46b30edca64e6f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd75853e1d1279a99afc0e5dc46b30edca64e6f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd75853e1d1279a99afc0e5dc46b30edca64e6f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd75853e1d1279a99afc0e5dc46b30edca64e6f4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1c90c6f9c03360da9f6b01ef0ec28e309a0bb892", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c90c6f9c03360da9f6b01ef0ec28e309a0bb892", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c90c6f9c03360da9f6b01ef0ec28e309a0bb892"}], "stats": {"total": 91, "additions": 91, "deletions": 0}, "files": [{"sha": "a576a2e35dd64dded910d8337497f89b119802dc", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd75853e1d1279a99afc0e5dc46b30edca64e6f4/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd75853e1d1279a99afc0e5dc46b30edca64e6f4/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cd75853e1d1279a99afc0e5dc46b30edca64e6f4", "patch": "@@ -1,3 +1,10 @@\n+2006-06-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/27916\n+\t* trans-openmp.c (gfc_omp_clause_default_ctor): New function.\n+\t* trans.h (gfc_omp_clause_default_ctor): New prototype.\n+\t* f95-lang.c (LANG_HOOKS_OMP_CLAUSE_DEFAULT_CTOR): Define.\n+\n 2006-06-08  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR fortran/27958"}, {"sha": "6dc00da63a3782d2ac03b017755facc24f812fe7", "filename": "gcc/fortran/f95-lang.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd75853e1d1279a99afc0e5dc46b30edca64e6f4/gcc%2Ffortran%2Ff95-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd75853e1d1279a99afc0e5dc46b30edca64e6f4/gcc%2Ffortran%2Ff95-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ff95-lang.c?ref=cd75853e1d1279a99afc0e5dc46b30edca64e6f4", "patch": "@@ -120,6 +120,7 @@ static HOST_WIDE_INT gfc_get_alias_set (tree);\n #undef LANG_HOOKS_GET_ALIAS_SET\n #undef LANG_HOOKS_OMP_PRIVATIZE_BY_REFERENCE\n #undef LANG_HOOKS_OMP_PREDETERMINED_SHARING\n+#undef LANG_HOOKS_OMP_CLAUSE_DEFAULT_CTOR\n #undef LANG_HOOKS_OMP_DISREGARD_VALUE_EXPR\n #undef LANG_HOOKS_OMP_PRIVATE_DEBUG_CLAUSE\n #undef LANG_HOOKS_OMP_FIRSTPRIVATIZE_TYPE_SIZES\n@@ -144,6 +145,7 @@ static HOST_WIDE_INT gfc_get_alias_set (tree);\n #define LANG_HOOKS_GET_ALIAS_SET\t   gfc_get_alias_set\n #define LANG_HOOKS_OMP_PRIVATIZE_BY_REFERENCE\tgfc_omp_privatize_by_reference\n #define LANG_HOOKS_OMP_PREDETERMINED_SHARING\tgfc_omp_predetermined_sharing\n+#define LANG_HOOKS_OMP_CLAUSE_DEFAULT_CTOR\tgfc_omp_clause_default_ctor\n #define LANG_HOOKS_OMP_DISREGARD_VALUE_EXPR\tgfc_omp_disregard_value_expr\n #define LANG_HOOKS_OMP_PRIVATE_DEBUG_CLAUSE\tgfc_omp_private_debug_clause\n #define LANG_HOOKS_OMP_FIRSTPRIVATIZE_TYPE_SIZES \\"}, {"sha": "76124acfc302b3fb7e10eacebf64de14ed4e5ab2", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd75853e1d1279a99afc0e5dc46b30edca64e6f4/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd75853e1d1279a99afc0e5dc46b30edca64e6f4/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=cd75853e1d1279a99afc0e5dc46b30edca64e6f4", "patch": "@@ -94,6 +94,29 @@ gfc_omp_predetermined_sharing (tree decl)\n   return OMP_CLAUSE_DEFAULT_UNSPECIFIED;\n }\n \n+\n+/* Return code to initialize DECL with its default constructor, or\n+   NULL if there's nothing to do.  */\n+\n+tree\n+gfc_omp_clause_default_ctor (tree clause ATTRIBUTE_UNUSED, tree decl)\n+{\n+  tree type = TREE_TYPE (decl);\n+  stmtblock_t block;\n+\n+  if (! GFC_DESCRIPTOR_TYPE_P (type))\n+    return NULL;\n+\n+  /* Allocatable arrays in PRIVATE clauses need to be set to\n+     \"not currently allocated\" allocation status.  */\n+  gfc_init_block (&block);\n+\n+  gfc_conv_descriptor_data_set (&block, decl, null_pointer_node);\n+\n+  return gfc_finish_block (&block);\n+}\n+\n+\n /* Return true if DECL's DECL_VALUE_EXPR (if any) should be\n    disregarded in OpenMP construct, because it is going to be\n    remapped during OpenMP lowering.  SHARED is true if DECL"}, {"sha": "ce997932bf683f837a57e485a7d3b48d1ef9b591", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd75853e1d1279a99afc0e5dc46b30edca64e6f4/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd75853e1d1279a99afc0e5dc46b30edca64e6f4/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=cd75853e1d1279a99afc0e5dc46b30edca64e6f4", "patch": "@@ -451,6 +451,7 @@ tree builtin_function (const char *, tree, int, enum built_in_class,\n /* In trans-openmp.c */\n bool gfc_omp_privatize_by_reference (tree);\n enum omp_clause_default_kind gfc_omp_predetermined_sharing (tree);\n+tree gfc_omp_clause_default_ctor (tree, tree);\n bool gfc_omp_disregard_value_expr (tree, bool);\n bool gfc_omp_private_debug_clause (tree, bool);\n struct gimplify_omp_ctx;"}, {"sha": "07d0ff3376dc25c97ff5831ceaa1904bf0ddffa2", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd75853e1d1279a99afc0e5dc46b30edca64e6f4/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd75853e1d1279a99afc0e5dc46b30edca64e6f4/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=cd75853e1d1279a99afc0e5dc46b30edca64e6f4", "patch": "@@ -1,3 +1,9 @@\n+2006-06-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/27916\n+\t* testsuite/libgomp.fortran/pr27916-1.f90: New test.\n+\t* testsuite/libgomp.fortran/pr27916-2.f90: New test.\n+\n 2006-06-06  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \t* config/mingw32/time.c: New file."}, {"sha": "7f6b51d0892d4519e32581ef4a65cf8c69c9c32d", "filename": "libgomp/testsuite/libgomp.fortran/pr27916-1.f90", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd75853e1d1279a99afc0e5dc46b30edca64e6f4/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27916-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd75853e1d1279a99afc0e5dc46b30edca64e6f4/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27916-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27916-1.f90?ref=cd75853e1d1279a99afc0e5dc46b30edca64e6f4", "patch": "@@ -0,0 +1,26 @@\n+! PR fortran/27916\n+! Test whether allocatable privatized arrays has \"not currently allocated\"\n+! status at the start of OpenMP constructs.\n+! { dg-do run }\n+\n+program pr27916\n+  integer :: n, i\n+  logical :: r\n+  integer, dimension(:), allocatable :: a\n+\n+  r = .false.\n+!$omp parallel do num_threads (4) private (n, a, i) &\n+!$omp & reduction (.or.: r) schedule (static)\n+  do n = 1, 16\n+    r = r .or. allocated (a)\n+    allocate (a (16))\n+    r = r .or. .not. allocated (a)\n+    do i = 1, 16\n+      a (i) = i\n+    end do\n+    deallocate (a)\n+    r = r .or. allocated (a)\n+  end do\n+ !$omp end parallel do\n+  if (r) call abort\n+end program pr27916"}, {"sha": "aa8bb0aec6291f0d611355f206298acca2093c3c", "filename": "libgomp/testsuite/libgomp.fortran/pr27916-2.f90", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd75853e1d1279a99afc0e5dc46b30edca64e6f4/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27916-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd75853e1d1279a99afc0e5dc46b30edca64e6f4/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27916-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr27916-2.f90?ref=cd75853e1d1279a99afc0e5dc46b30edca64e6f4", "patch": "@@ -0,0 +1,26 @@\n+! PR fortran/27916\n+! Test whether allocatable privatized arrays has \"not currently allocated\"\n+! status at the start of OpenMP constructs.\n+! { dg-do run }\n+\n+program pr27916\n+  integer :: n, i\n+  logical :: r\n+  integer, dimension(:), allocatable :: a\n+\n+  r = .false.\n+!$omp parallel do num_threads (4) default (private) &\n+!$omp & reduction (.or.: r) schedule (static)\n+  do n = 1, 16\n+    r = r .or. allocated (a)\n+    allocate (a (16))\n+    r = r .or. .not. allocated (a)\n+    do i = 1, 16\n+      a (i) = i\n+    end do\n+    deallocate (a)\n+    r = r .or. allocated (a)\n+  end do\n+ !$omp end parallel do\n+  if (r) call abort\n+end program pr27916"}]}