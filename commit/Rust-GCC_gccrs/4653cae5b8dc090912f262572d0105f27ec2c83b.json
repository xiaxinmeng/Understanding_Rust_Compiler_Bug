{"sha": "4653cae5b8dc090912f262572d0105f27ec2c83b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY1M2NhZTViOGRjMDkwOTEyZjI2MjU3MmQwMTA1ZjI3ZWMyYzgzYg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-06-11T18:19:28Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-06-11T18:19:28Z"}, "message": "alias.c (get_alias_set): Use the element alias-set for arrays.\n\n2008-06-11  Richard Guenther  <rguenther@suse.de>\n\n\t* alias.c (get_alias_set): Use the element alias-set for arrays.\n\t(record_component_aliases): For arrays and vectors do nothing.\n\t* c-common.c (strict_aliasing_warning): Handle the cases\n\tof alias set zero explicitly.\n\t* Makefile.in (dfp.o-warn): Add -Wno-error.\n\nFrom-SVN: r136679", "tree": {"sha": "7589856308b10e4f1fc7740be354b769d8e54ff6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7589856308b10e4f1fc7740be354b769d8e54ff6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4653cae5b8dc090912f262572d0105f27ec2c83b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4653cae5b8dc090912f262572d0105f27ec2c83b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4653cae5b8dc090912f262572d0105f27ec2c83b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4653cae5b8dc090912f262572d0105f27ec2c83b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8981c15b8cbb3a7e129c7bcf85823eff3db9c6a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8981c15b8cbb3a7e129c7bcf85823eff3db9c6a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8981c15b8cbb3a7e129c7bcf85823eff3db9c6a7"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "95a86b0d398cf4db490d7eab5d85543ddac5e601", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4653cae5b8dc090912f262572d0105f27ec2c83b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4653cae5b8dc090912f262572d0105f27ec2c83b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4653cae5b8dc090912f262572d0105f27ec2c83b", "patch": "@@ -1,3 +1,11 @@\n+2008-06-11  Richard Guenther  <rguenther@suse.de>\n+\n+\t* alias.c (get_alias_set): Use the element alias-set for arrays.\n+\t(record_component_aliases): For arrays and vectors do nothing.\n+\t* c-common.c (strict_aliasing_warning): Handle the cases\n+\tof alias set zero explicitly.\n+\t* Makefile.in (dfp.o-warn): Add -Wno-error.\n+\n 2008-06-11  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config.gcc (all_defaults): Add arch_32 arch_64 cpu_32 cpu_64"}, {"sha": "47a45a1f4a2ec07dd67ead54b5eb7fd45a464101", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4653cae5b8dc090912f262572d0105f27ec2c83b/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4653cae5b8dc090912f262572d0105f27ec2c83b/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=4653cae5b8dc090912f262572d0105f27ec2c83b", "patch": "@@ -187,6 +187,8 @@ GCC_WARN_CFLAGS = $(LOOSE_WARN) $($(@D)-warn) $(NOCOMMON_FLAG) $($@-warn)\n build/gengtype-lex.o-warn = -Wno-error\n # SYSCALLS.c misses prototypes\n SYSCALLS.c.X-warn = -Wno-strict-prototypes -Wno-error\n+# dfp.c contains alias violations\n+dfp.o-warn = -Wno-error\n \n # All warnings have to be shut off in stage1 if the compiler used then\n # isn't gcc; configure determines that.  WARN_CFLAGS will be either"}, {"sha": "ec2d053362c3828b31d1d0e9b796b1baf338295a", "filename": "gcc/alias.c", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4653cae5b8dc090912f262572d0105f27ec2c83b/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4653cae5b8dc090912f262572d0105f27ec2c83b/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=4653cae5b8dc090912f262572d0105f27ec2c83b", "patch": "@@ -640,6 +640,18 @@ get_alias_set (tree t)\n   else if (TREE_CODE (t) == VECTOR_TYPE)\n     set = get_alias_set (TREE_TYPE (t));\n \n+  /* Unless the language specifies otherwise, treat array types the\n+     same as their components.  This avoids the asymmetry we get\n+     through recording the components.  Consider accessing a\n+     character(kind=1) through a reference to a character(kind=1)[1:1].\n+     Or consider if we want to assign integer(kind=4)[0:D.1387] and\n+     integer(kind=4)[4] the same alias set or not.\n+     Just be pragmatic here and make sure the array and its element\n+     type get the same alias set assigned.  */\n+  else if (TREE_CODE (t) == ARRAY_TYPE\n+\t   && !TYPE_NONALIASED_COMPONENT (t))\n+    set = get_alias_set (TREE_TYPE (t));\n+\n   else\n     /* Otherwise make a new alias set for this type.  */\n     set = new_alias_set ();\n@@ -747,11 +759,6 @@ record_component_aliases (tree type)\n \n   switch (TREE_CODE (type))\n     {\n-    case ARRAY_TYPE:\n-      if (!TYPE_NONALIASED_COMPONENT (type))\n-\trecord_alias_subset (superset, get_alias_set (TREE_TYPE (type)));\n-      break;\n-\n     case RECORD_TYPE:\n     case UNION_TYPE:\n     case QUAL_UNION_TYPE:\n@@ -775,6 +782,9 @@ record_component_aliases (tree type)\n       record_alias_subset (superset, get_alias_set (TREE_TYPE (type)));\n       break;\n \n+    /* VECTOR_TYPE and ARRAY_TYPE share the alias set with their\n+       element type.  */\n+\n     default:\n       break;\n     }"}, {"sha": "b783c5340123a9d65a43b2b5a4d1c4940b253422", "filename": "gcc/c-common.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4653cae5b8dc090912f262572d0105f27ec2c83b/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4653cae5b8dc090912f262572d0105f27ec2c83b/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=4653cae5b8dc090912f262572d0105f27ec2c83b", "patch": "@@ -1093,7 +1093,8 @@ strict_aliasing_warning (tree otype, tree type, tree expr)\n \t    get_alias_set (TREE_TYPE (TREE_OPERAND (expr, 0)));\n           alias_set_type set2 = get_alias_set (TREE_TYPE (type));\n \n-          if (!alias_sets_conflict_p (set1, set2))\n+          if (set1 != set2 && set2 != 0\n+\t      && (set1 == 0 || !alias_sets_conflict_p (set1, set2)))\n \t    {\n \t      warning (OPT_Wstrict_aliasing, \"dereferencing type-punned \"\n \t\t       \"pointer will break strict-aliasing rules\");"}]}