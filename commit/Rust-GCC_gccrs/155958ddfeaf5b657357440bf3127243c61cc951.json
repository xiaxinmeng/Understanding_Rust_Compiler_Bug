{"sha": "155958ddfeaf5b657357440bf3127243c61cc951", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU1OTU4ZGRmZWFmNWI2NTczNTc0NDBiZjMxMjcyNDNjNjFjYzk1MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-03-06T09:23:36Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-03-06T09:23:36Z"}, "message": "re PR inline-asm/84683 (internal compiler error: in move_for_stack_reg, at reg-stack.c:1173)\n\n\tPR inline-asm/84683\n\t* reg-stack.c (move_for_stack_reg): If any_malformed_asm, avoid\n\tassertion failure.\n\n\t* g++.dg/ext/pr84683.C: New test.\n\nFrom-SVN: r258273", "tree": {"sha": "4201cc602172f62726bb625852f2daa36ccdb74e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4201cc602172f62726bb625852f2daa36ccdb74e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/155958ddfeaf5b657357440bf3127243c61cc951", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/155958ddfeaf5b657357440bf3127243c61cc951", "html_url": "https://github.com/Rust-GCC/gccrs/commit/155958ddfeaf5b657357440bf3127243c61cc951", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/155958ddfeaf5b657357440bf3127243c61cc951/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16ef0a8cb7c913a09bfe5487688d45d42dae26ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16ef0a8cb7c913a09bfe5487688d45d42dae26ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16ef0a8cb7c913a09bfe5487688d45d42dae26ac"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "14cf229315ceecbe402f05cc576492fea8f12be8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/155958ddfeaf5b657357440bf3127243c61cc951/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/155958ddfeaf5b657357440bf3127243c61cc951/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=155958ddfeaf5b657357440bf3127243c61cc951", "patch": "@@ -1,5 +1,9 @@\n 2018-03-06  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR inline-asm/84683\n+\t* reg-stack.c (move_for_stack_reg): If any_malformed_asm, avoid\n+\tassertion failure.\n+\n \tPR tree-optimization/84687\n \t* omp-simd-clone.c (simd_clone_create): Clear DECL_BUILT_IN_CLASS\n \ton new_node->decl."}, {"sha": "82feb5d84a02eafcf1cd7b1801dcfd62873990e2", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/155958ddfeaf5b657357440bf3127243c61cc951/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/155958ddfeaf5b657357440bf3127243c61cc951/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=155958ddfeaf5b657357440bf3127243c61cc951", "patch": "@@ -1170,7 +1170,8 @@ move_for_stack_reg (rtx_insn *insn, stack_ptr regstack, rtx pat)\n \t  && XINT (SET_SRC (XVECEXP (pat, 0, 1)), 1) == UNSPEC_TAN)\n \temit_swap_insn (insn, regstack, dest);\n       else\n-\tgcc_assert (get_hard_regnum (regstack, dest) < FIRST_STACK_REG);\n+\tgcc_assert (get_hard_regnum (regstack, dest) < FIRST_STACK_REG\n+\t\t    || any_malformed_asm);\n \n       gcc_assert (regstack->top < REG_STACK_SIZE);\n "}, {"sha": "edce5a57c50c83ad1328ceafa4fe735223d4b771", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/155958ddfeaf5b657357440bf3127243c61cc951/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/155958ddfeaf5b657357440bf3127243c61cc951/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=155958ddfeaf5b657357440bf3127243c61cc951", "patch": "@@ -1,5 +1,8 @@\n 2018-03-06  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR inline-asm/84683\n+\t* g++.dg/ext/pr84683.C: New test.\n+\n \tPR tree-optimization/84687\n \t* gcc.dg/pr84687.c: New test.\n "}, {"sha": "3c66bcf59ba286a4430e1243d592ee839390e9fe", "filename": "gcc/testsuite/g++.dg/ext/pr84683.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/155958ddfeaf5b657357440bf3127243c61cc951/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr84683.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/155958ddfeaf5b657357440bf3127243c61cc951/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr84683.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr84683.C?ref=155958ddfeaf5b657357440bf3127243c61cc951", "patch": "@@ -0,0 +1,13 @@\n+// PR inline-asm/84683\n+// { dg-do compile { target i?86-*-* x86_64-*-* } }\n+// { dg-options \"-O2\" }\n+\n+void\n+foo (float b, double c)\n+{\n+  for (int e = 0; e < 2; e++)\n+    {\n+      asm volatile (\"\" : \"+f\" (c));\t// { dg-error \"must specify a single register\" }\n+      asm (\"\" : \"+rm\" (c = b));\n+    }\n+}"}]}