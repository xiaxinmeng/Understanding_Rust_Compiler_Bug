{"sha": "dca74793cd42ce4c5319943a516cc5ea7265b6f7", "node_id": "C_kwDOANBUbNoAKGRjYTc0NzkzY2Q0MmNlNGM1MzE5OTQzYTUxNmNjNWVhNzI2NWI2Zjc", "commit": {"author": {"name": "Takayuki 'January June' Suwa", "email": "jjsuwa_sys3175@yahoo.co.jp", "date": "2022-08-17T19:31:16Z"}, "committer": {"name": "Max Filippov", "email": "jcmvbkbc@gmail.com", "date": "2022-08-18T00:45:48Z"}, "message": "xtensa: Optimize stack pointer updates in function pro/epilogue under certain conditions\n\nThis patch enforces the use of \"addmi\" machine instruction instead of\naddition/subtraction with two source registers for adjusting the stack\npointer, if the adjustment fits into a signed 16-bit and is also a multiple\nof 256.\n\n    /* example */\n    void test(void) {\n      char buffer[4096];\n      __asm__(\"\"::\"m\"(buffer));\n    }\n\n    ;; before\n    test:\n\tmovi.n\ta9, 1\n\tslli\ta9, a9, 12\n\tsub\tsp, sp, a9\n\tmovi.n\ta9, 1\n\tslli\ta9, a9, 12\n\tadd.n\tsp, sp, a9\n\taddi\tsp, sp, 0\n\tret.n\n\n    ;; after\n    test:\n\taddmi\tsp, sp, -0x1000\n\taddmi\tsp, sp, 0x1000\n\tret.n\n\ngcc/ChangeLog:\n\n\t* config/xtensa/xtensa.cc (xtensa_expand_prologue):\n\tUse an \"addmi\" machine instruction for updating the stack pointer\n\trather than addition/subtraction via hard register A9, if the amount\n\tof change satisfies the literal value conditions of that instruction\n\twhen the CALL0 ABI is used.\n\t(xtensa_expand_epilogue): Ditto.\n\tAnd also inhibit the stack pointer addition of constant zero.", "tree": {"sha": "a26b28c43f824b234f51c8ec3e57296a37c6de91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a26b28c43f824b234f51c8ec3e57296a37c6de91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dca74793cd42ce4c5319943a516cc5ea7265b6f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dca74793cd42ce4c5319943a516cc5ea7265b6f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dca74793cd42ce4c5319943a516cc5ea7265b6f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dca74793cd42ce4c5319943a516cc5ea7265b6f7/comments", "author": {"login": "jjsuwa-sys3175", "id": 73290592, "node_id": "MDQ6VXNlcjczMjkwNTky", "avatar_url": "https://avatars.githubusercontent.com/u/73290592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjsuwa-sys3175", "html_url": "https://github.com/jjsuwa-sys3175", "followers_url": "https://api.github.com/users/jjsuwa-sys3175/followers", "following_url": "https://api.github.com/users/jjsuwa-sys3175/following{/other_user}", "gists_url": "https://api.github.com/users/jjsuwa-sys3175/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjsuwa-sys3175/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjsuwa-sys3175/subscriptions", "organizations_url": "https://api.github.com/users/jjsuwa-sys3175/orgs", "repos_url": "https://api.github.com/users/jjsuwa-sys3175/repos", "events_url": "https://api.github.com/users/jjsuwa-sys3175/events{/privacy}", "received_events_url": "https://api.github.com/users/jjsuwa-sys3175/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jcmvbkbc", "id": 166731, "node_id": "MDQ6VXNlcjE2NjczMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmvbkbc", "html_url": "https://github.com/jcmvbkbc", "followers_url": "https://api.github.com/users/jcmvbkbc/followers", "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}", "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions", "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs", "repos_url": "https://api.github.com/users/jcmvbkbc/repos", "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0342f034adc677aa93e9a4587eb0b1e9dff9eab7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0342f034adc677aa93e9a4587eb0b1e9dff9eab7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0342f034adc677aa93e9a4587eb0b1e9dff9eab7"}], "stats": {"total": 79, "additions": 54, "deletions": 25}, "files": [{"sha": "b673b6764dadde5f8ca5fd0a7187e380dfc74cf1", "filename": "gcc/config/xtensa/xtensa.cc", "status": "modified", "additions": 54, "deletions": 25, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dca74793cd42ce4c5319943a516cc5ea7265b6f7/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dca74793cd42ce4c5319943a516cc5ea7265b6f7/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.cc?ref=dca74793cd42ce4c5319943a516cc5ea7265b6f7", "patch": "@@ -3150,7 +3150,6 @@ xtensa_expand_prologue (void)\n   rtx_insn *insn = NULL;\n   rtx note_rtx;\n \n-\n   total_size = compute_frame_size (get_frame_size ());\n \n   if (flag_stack_usage_info)\n@@ -3206,10 +3205,17 @@ xtensa_expand_prologue (void)\n \t    }\n \t  else\n \t    {\n-\t      rtx tmp_reg = gen_rtx_REG (Pmode, A9_REG);\n-\t      emit_move_insn (tmp_reg, GEN_INT (total_size));\n-\t      insn = emit_insn (gen_subsi3 (stack_pointer_rtx,\n-\t\t\t\t\t    stack_pointer_rtx, tmp_reg));\n+\t      if (xtensa_simm8x256 (-total_size))\n+\t\tinsn = emit_insn (gen_addsi3 (stack_pointer_rtx,\n+\t\t\t\t\t      stack_pointer_rtx,\n+\t\t\t\t\t      GEN_INT (-total_size)));\n+\t      else\n+\t\t{\n+\t\t  rtx tmp_reg = gen_rtx_REG (Pmode, A9_REG);\n+\t\t  emit_move_insn (tmp_reg, GEN_INT (total_size));\n+\t\t  insn = emit_insn (gen_subsi3 (stack_pointer_rtx,\n+\t\t\t\t\t\tstack_pointer_rtx, tmp_reg));\n+\t\t}\n \t      RTX_FRAME_RELATED_P (insn) = 1;\n \t      note_rtx = gen_rtx_SET (stack_pointer_rtx,\n \t\t\t\t      plus_constant (Pmode, stack_pointer_rtx,\n@@ -3237,11 +3243,19 @@ xtensa_expand_prologue (void)\n       if (total_size > 1024\n \t  || (!callee_save_size && total_size > 128))\n \t{\n-\t  rtx tmp_reg = gen_rtx_REG (Pmode, A9_REG);\n-\t  emit_move_insn (tmp_reg, GEN_INT (total_size -\n-\t\t\t\t\t    callee_save_size));\n-\t  insn = emit_insn (gen_subsi3 (stack_pointer_rtx,\n-\t\t\t\t\tstack_pointer_rtx, tmp_reg));\n+\t  if (xtensa_simm8x256 (callee_save_size - total_size))\n+\t    insn = emit_insn (gen_addsi3 (stack_pointer_rtx,\n+\t\t\t\t\t  stack_pointer_rtx,\n+\t\t\t\t\t  GEN_INT (callee_save_size -\n+\t\t\t\t\t\t   total_size)));\n+\t  else\n+\t    {\n+\t      rtx tmp_reg = gen_rtx_REG (Pmode, A9_REG);\n+\t      emit_move_insn (tmp_reg, GEN_INT (total_size -\n+\t\t\t\t\t\tcallee_save_size));\n+\t      insn = emit_insn (gen_subsi3 (stack_pointer_rtx,\n+\t\t\t\t\t    stack_pointer_rtx, tmp_reg));\n+\t    }\n \t  RTX_FRAME_RELATED_P (insn) = 1;\n \t  note_rtx = gen_rtx_SET (stack_pointer_rtx,\n \t\t\t\t  plus_constant (Pmode, stack_pointer_rtx,\n@@ -3315,12 +3329,21 @@ xtensa_expand_epilogue (bool sibcall_p)\n \n       if (cfun->machine->current_frame_size > (frame_pointer_needed ? 127 : 1024))\n \t{\n-\t  rtx tmp_reg = gen_rtx_REG (Pmode, A9_REG);\n-\t  emit_move_insn (tmp_reg, GEN_INT (cfun->machine->current_frame_size -\n-\t\t\t\t\t    cfun->machine->callee_save_size));\n-\t  emit_insn (gen_addsi3 (stack_pointer_rtx, frame_pointer_needed ?\n-\t\t\t\t hard_frame_pointer_rtx : stack_pointer_rtx,\n-\t\t\t\t tmp_reg));\n+\t  if (xtensa_simm8x256 (cfun->machine->current_frame_size -\n+\t\t\t\tcfun->machine->callee_save_size))\n+\t    emit_insn (gen_addsi3 (stack_pointer_rtx, frame_pointer_needed ?\n+\t\t\t\t   hard_frame_pointer_rtx : stack_pointer_rtx,\n+\t\t\t\t   GEN_INT (cfun->machine->current_frame_size -\n+\t\t\t\t\t    cfun->machine->callee_save_size)));\n+\t  else\n+\t    {\n+\t      rtx tmp_reg = gen_rtx_REG (Pmode, A9_REG);\n+\t      emit_move_insn (tmp_reg, GEN_INT (cfun->machine->current_frame_size -\n+\t\t\t\t\t\tcfun->machine->callee_save_size));\n+\t      emit_insn (gen_addsi3 (stack_pointer_rtx, frame_pointer_needed ?\n+\t\t\t\t     hard_frame_pointer_rtx : stack_pointer_rtx,\n+\t\t\t\t     tmp_reg));\n+\t    }\n \t  offset = cfun->machine->callee_save_size - UNITS_PER_WORD;\n \t}\n       else\n@@ -3360,18 +3383,24 @@ xtensa_expand_epilogue (bool sibcall_p)\n \t\toffset = cfun->machine->current_frame_size;\n \t      else\n \t\toffset = cfun->machine->callee_save_size;\n-\n-\t      emit_insn (gen_addsi3 (stack_pointer_rtx,\n-\t\t\t\t     stack_pointer_rtx,\n-\t\t\t\t     GEN_INT (offset)));\n+\t      if (offset)\n+\t\temit_insn (gen_addsi3 (stack_pointer_rtx,\n+\t\t\t\t       stack_pointer_rtx,\n+\t\t\t\t       GEN_INT (offset)));\n \t    }\n \t  else\n \t    {\n-\t      rtx tmp_reg = gen_rtx_REG (Pmode, A9_REG);\n-\t      emit_move_insn (tmp_reg,\n-\t\t\t      GEN_INT (cfun->machine->current_frame_size));\n-\t      emit_insn (gen_addsi3 (stack_pointer_rtx, stack_pointer_rtx,\n-\t\t\t\t     tmp_reg));\n+\t      if (xtensa_simm8x256 (cfun->machine->current_frame_size))\n+\t\temit_insn (gen_addsi3 (stack_pointer_rtx, stack_pointer_rtx,\n+\t\t\t\t       GEN_INT (cfun->machine->current_frame_size)));\n+\t      else\n+\t\t{\n+\t\t  rtx tmp_reg = gen_rtx_REG (Pmode, A9_REG);\n+\t\t  emit_move_insn (tmp_reg,\n+\t\t\t\t  GEN_INT (cfun->machine->current_frame_size));\n+\t\t  emit_insn (gen_addsi3 (stack_pointer_rtx, stack_pointer_rtx,\n+\t\t\t\t\t tmp_reg));\n+\t\t}\n \t    }\n \t}\n "}]}