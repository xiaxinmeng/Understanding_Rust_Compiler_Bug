{"sha": "0e9e0a218b8986711a627c3249d9cab17b9dc429", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU5ZTBhMjE4Yjg5ODY3MTFhNjI3YzMyNDlkOWNhYjE3YjlkYzQyOQ==", "commit": {"author": {"name": "Felix Yang", "email": "felix.yang@huawei.com", "date": "2014-09-25T16:34:03Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2014-09-25T16:34:03Z"}, "message": "lra.c (lra_set_insn_recog_data): Fix typo in comment.\n\n        * lra.c (lra_set_insn_recog_data): Fix typo in comment.\n        * genautomata.c (merge_states): Ditto.\n\nFrom-SVN: r215610", "tree": {"sha": "512461dc746fb0333eae58daf7e1aa6a0239b40f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/512461dc746fb0333eae58daf7e1aa6a0239b40f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e9e0a218b8986711a627c3249d9cab17b9dc429", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e9e0a218b8986711a627c3249d9cab17b9dc429", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e9e0a218b8986711a627c3249d9cab17b9dc429", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e9e0a218b8986711a627c3249d9cab17b9dc429/comments", "author": null, "committer": null, "parents": [{"sha": "ad19968eae4ddce82bd4ef4c0e0340ad9b5aaf5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad19968eae4ddce82bd4ef4c0e0340ad9b5aaf5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad19968eae4ddce82bd4ef4c0e0340ad9b5aaf5d"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "3bf52a6801c9a675bfe64b4b2dee192251391207", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e9e0a218b8986711a627c3249d9cab17b9dc429/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e9e0a218b8986711a627c3249d9cab17b9dc429/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0e9e0a218b8986711a627c3249d9cab17b9dc429", "patch": "@@ -1,3 +1,8 @@\n+2014-09-25  Felix Yang  <felix.yang@huawei.com>\n+\n+\t* lra.c (lra_set_insn_recog_data): Fix typo in comment.\n+\t* genautomata.c (merge_states): Ditto.\n+\n 2014-09-25  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/62218"}, {"sha": "8d0d87d10c295868d7851ec53e03b5b8a4015df7", "filename": "gcc/genautomata.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e9e0a218b8986711a627c3249d9cab17b9dc429/gcc%2Fgenautomata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e9e0a218b8986711a627c3249d9cab17b9dc429/gcc%2Fgenautomata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenautomata.c?ref=0e9e0a218b8986711a627c3249d9cab17b9dc429", "patch": "@@ -6178,7 +6178,7 @@ merge_states (automaton_t automaton, vec<state_t> equiv_classes)\n \t\t    alt_states = new_alt_state;\n \t\t  }\n \t    }\n-\t  /* Its is important that alt states were sorted before and\n+\t  /* It is important that alt states were sorted before and\n \t     after merging to have the same querying results.  */\n \t  new_state->component_states = uniq_sort_alt_states (alt_states);\n \t}"}, {"sha": "e9194bbd8b6cf36877177ea7afafb036a3924d9c", "filename": "gcc/lra.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e9e0a218b8986711a627c3249d9cab17b9dc429/gcc%2Flra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e9e0a218b8986711a627c3249d9cab17b9dc429/gcc%2Flra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra.c?ref=0e9e0a218b8986711a627c3249d9cab17b9dc429", "patch": "@@ -933,7 +933,7 @@ lra_set_insn_recog_data (rtx_insn *insn)\n       nalt = 1;\n       if (nop < 0)\n \t{\n-\t  /* Its is a special insn like USE or CLOBBER.  We should\n+\t  /* It is a special insn like USE or CLOBBER.  We should\n \t     recognize any regular insn otherwise LRA can do nothing\n \t     with this insn.  */\n \t  gcc_assert (GET_CODE (PATTERN (insn)) == USE"}]}