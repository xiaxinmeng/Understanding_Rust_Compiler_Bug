{"sha": "c0c5d392eba482f455615a4b9b74bb50c46a39ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBjNWQzOTJlYmE0ODJmNDU1NjE1YTRiOWI3NGJiNTBjNDZhMzljYQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2006-04-25T21:34:48Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2006-04-25T21:34:48Z"}, "message": "re PR rtl-optimization/26725 (ICE in check_reg_live, at haifa-sched.c:4645 with -O2 on ia64)\n\ngcc/\n\tPR rtl-optimization/26725\n\t* cfgrtl.c (rtl_redirect_edge_and_branch_force): Set the source\n\tblock's BB_DIRTY flag.\n\ngcc/testsuite/\n\t* gcc.c-torture/compile/pr26725.c: New test.\n\nFrom-SVN: r113257", "tree": {"sha": "88d5cda8d344900920984288dbed68fef548c553", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88d5cda8d344900920984288dbed68fef548c553"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0c5d392eba482f455615a4b9b74bb50c46a39ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0c5d392eba482f455615a4b9b74bb50c46a39ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0c5d392eba482f455615a4b9b74bb50c46a39ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0c5d392eba482f455615a4b9b74bb50c46a39ca/comments", "author": null, "committer": null, "parents": [{"sha": "60e1758f60c2be0682dcbac7ea270b90e78ec526", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60e1758f60c2be0682dcbac7ea270b90e78ec526", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60e1758f60c2be0682dcbac7ea270b90e78ec526"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "9c6499e89732a99b7de18167dcfef37da7035a22", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0c5d392eba482f455615a4b9b74bb50c46a39ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0c5d392eba482f455615a4b9b74bb50c46a39ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c0c5d392eba482f455615a4b9b74bb50c46a39ca", "patch": "@@ -1,3 +1,9 @@\n+2006-04-25  Richard Sandiford  <richard@codesourcery.com>\n+\n+\tPR rtl-optimization/26725\n+\t* cfgrtl.c (rtl_redirect_edge_and_branch_force): Set the source\n+\tblock's BB_DIRTY flag.\n+\n 2006-04-25  Geoffrey Keating  <geoffk@apple.com>\n \n \t* dwarf2asm.c (dw2_asm_output_data): Don't generate RTL just"}, {"sha": "54f355e6dfd9dd7a48c04202da12f499ca90171a", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0c5d392eba482f455615a4b9b74bb50c46a39ca/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0c5d392eba482f455615a4b9b74bb50c46a39ca/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=c0c5d392eba482f455615a4b9b74bb50c46a39ca", "patch": "@@ -1170,6 +1170,7 @@ rtl_redirect_edge_and_branch_force (edge e, basic_block target)\n \n   /* In case the edge redirection failed, try to force it to be non-fallthru\n      and redirect newly created simplejump.  */\n+  e->src->flags |= BB_DIRTY;\n   return force_nonfallthru_and_redirect (e, target);\n }\n "}, {"sha": "4f4944eff2fe4cb88e73d40452f39e171995e7a4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0c5d392eba482f455615a4b9b74bb50c46a39ca/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0c5d392eba482f455615a4b9b74bb50c46a39ca/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c0c5d392eba482f455615a4b9b74bb50c46a39ca", "patch": "@@ -1,3 +1,8 @@\n+2006-04-25  Richard Sandiford  <richard@codesourcery.com>\n+\n+\tPR rtl-optimization/26725\n+\t* gcc.c-torture/compile/pr26725.c: New test.\n+\n 2006-04-25  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/tree-prof/val-prof-2.c: Check for n + ffff rather  "}, {"sha": "934042a5241b3004e56ae4dd710b6050a40d82a4", "filename": "gcc/testsuite/gcc.c-torture/compile/pr26725.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0c5d392eba482f455615a4b9b74bb50c46a39ca/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr26725.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0c5d392eba482f455615a4b9b74bb50c46a39ca/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr26725.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr26725.c?ref=c0c5d392eba482f455615a4b9b74bb50c46a39ca", "patch": "@@ -0,0 +1,15 @@\n+struct { unsigned int num; } *numptr;\n+void notice (int);\n+void doit (unsigned int *);\n+\n+void\n+rewrite_finalize_block (int x)\n+{\n+  unsigned int *tmp;\n+  while (tmp = (numptr ? &numptr->num : 0), (tmp ? *tmp : 0) > 0)\n+    {\n+      tmp = (numptr ? &numptr->num : 0);\n+      (void) (*tmp ? 0 : notice (x));\n+      doit (tmp);\n+    }\n+}"}]}