{"sha": "7d4c4fde0e89b87d4b449504e4790e1f49262772", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q0YzRmZGUwZTg5Yjg3ZDRiNDQ5NTA0ZTQ3OTBlMWY0OTI2Mjc3Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-11-18T10:23:05Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-11-18T10:23:05Z"}, "message": "[multiple changes]\n\n2015-11-18  Arnaud Charlet  <charlet@adacore.com>\n\n\t* switch-c.adb (Scan_Front_End_Switches): Add a check requiring\n\t-gnatc with -gnateg.\n\n2015-11-18  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch7.adb (Uninstall_Declarations): Before swapping private\n\tand full views, ensure that the potential use visbility of the\n\ttwo views is consistent.\n\n2015-11-18  Doug Rupp  <rupp@adacore.com>\n\n\t* s-parame-vxworks.adb: Increase default stack size for targets\n\tusing stack limit checking.\n\n2015-11-18  Jose Ruiz  <ruiz@adacore.com>\n\n\t* a-interr.adb, a-interr.ads (Ada.Interrupts.Get_CPU): Add this\n\tfunction that was added to Ada 2005 returning the processor where\n\tinterrupt handlers execute.\n\n2015-11-18  Tristan Gingold  <gingold@adacore.com>\n\n\t* exp_ch9.adb (Is_Pure_Barrier): Handle expanded component\n\tdeclaration of a protected definition.\n\nFrom-SVN: r230529", "tree": {"sha": "b090ab9f9a5f139484150ad4357701fa093f8525", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b090ab9f9a5f139484150ad4357701fa093f8525"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d4c4fde0e89b87d4b449504e4790e1f49262772", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d4c4fde0e89b87d4b449504e4790e1f49262772", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d4c4fde0e89b87d4b449504e4790e1f49262772", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d4c4fde0e89b87d4b449504e4790e1f49262772/comments", "author": null, "committer": null, "parents": [{"sha": "3a2b145788192c62c629bc7d7c3d14c2b2b21b36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a2b145788192c62c629bc7d7c3d14c2b2b21b36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a2b145788192c62c629bc7d7c3d14c2b2b21b36"}], "stats": {"total": 80, "additions": 74, "deletions": 6}, "files": [{"sha": "6127fd5dc77b901c509dcaf3bc5f556b18bbe639", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d4c4fde0e89b87d4b449504e4790e1f49262772/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d4c4fde0e89b87d4b449504e4790e1f49262772/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7d4c4fde0e89b87d4b449504e4790e1f49262772", "patch": "@@ -1,3 +1,30 @@\n+2015-11-18  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* switch-c.adb (Scan_Front_End_Switches): Add a check requiring\n+\t-gnatc with -gnateg.\n+\n+2015-11-18  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch7.adb (Uninstall_Declarations): Before swapping private\n+\tand full views, ensure that the potential use visbility of the\n+\ttwo views is consistent.\n+\n+2015-11-18  Doug Rupp  <rupp@adacore.com>\n+\n+\t* s-parame-vxworks.adb: Increase default stack size for targets\n+\tusing stack limit checking.\n+\n+2015-11-18  Jose Ruiz  <ruiz@adacore.com>\n+\n+\t* a-interr.adb, a-interr.ads (Ada.Interrupts.Get_CPU): Add this\n+\tfunction that was added to Ada 2005 returning the processor where\n+\tinterrupt handlers execute.\n+\n+2015-11-18  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* exp_ch9.adb (Is_Pure_Barrier): Handle expanded component\n+\tdeclaration of a protected definition.\n+\n 2015-11-18  Ed Falis  <falis@adacore.com>\n \n \t* s-soflin.adb, s-stchop-vxworks.adb: Code clean ups."}, {"sha": "f01ac1ae49da7c614ab185c1b59685227c3c1bfd", "filename": "gcc/ada/a-interr.adb", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d4c4fde0e89b87d4b449504e4790e1f49262772/gcc%2Fada%2Fa-interr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d4c4fde0e89b87d4b449504e4790e1f49262772/gcc%2Fada%2Fa-interr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-interr.adb?ref=7d4c4fde0e89b87d4b449504e4790e1f49262772", "patch": "@@ -7,7 +7,7 @@\n --                                  B o d y                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---                     Copyright (C) 1995-2010, AdaCore                     --\n+--                     Copyright (C) 1995-2015, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -93,6 +93,22 @@ package body Ada.Interrupts is\n       Old_Handler := To_Ada (H);\n    end Exchange_Handler;\n \n+   -------------\n+   -- Get_CPU --\n+   -------------\n+\n+   function Get_CPU\n+     (Interrupt : Interrupt_ID) return System.Multiprocessors.CPU_Range\n+   is\n+      pragma Unreferenced (Interrupt);\n+\n+   begin\n+      --  The underlying operating system does not indicate the processor on\n+      --  which the handler for Interrupt is executed.\n+\n+      return System.Multiprocessors.Not_A_Specific_CPU;\n+   end Get_CPU;\n+\n    -----------------\n    -- Is_Attached --\n    -----------------"}, {"sha": "309e88e07ac277cd83b1d724173bb6bbf0f79eb5", "filename": "gcc/ada/a-interr.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d4c4fde0e89b87d4b449504e4790e1f49262772/gcc%2Fada%2Fa-interr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d4c4fde0e89b87d4b449504e4790e1f49262772/gcc%2Fada%2Fa-interr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-interr.ads?ref=7d4c4fde0e89b87d4b449504e4790e1f49262772", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -34,6 +34,7 @@\n ------------------------------------------------------------------------------\n \n with System.Interrupts;\n+with System.Multiprocessors;\n with Ada.Task_Identification;\n \n package Ada.Interrupts is\n@@ -81,11 +82,15 @@ package Ada.Interrupts is\n      SPARK_Mode => Off,\n      Global     => null;\n \n+   function Get_CPU\n+     (Interrupt : Interrupt_ID) return System.Multiprocessors.CPU_Range;\n+\n private\n    pragma Inline (Is_Reserved);\n    pragma Inline (Is_Attached);\n    pragma Inline (Current_Handler);\n    pragma Inline (Attach_Handler);\n    pragma Inline (Detach_Handler);\n    pragma Inline (Exchange_Handler);\n+   pragma Inline (Get_CPU);\n end Ada.Interrupts;"}, {"sha": "0c9419e24e4604b9ee48752b5c52392891eb2901", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d4c4fde0e89b87d4b449504e4790e1f49262772/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d4c4fde0e89b87d4b449504e4790e1f49262772/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=7d4c4fde0e89b87d4b449504e4790e1f49262772", "patch": "@@ -6419,7 +6419,12 @@ package body Exp_Ch9 is\n                        E_Enumeration_Literal =>\n                      return OK;\n \n-                  when E_Variable =>\n+                  when E_Component |\n+                       E_Variable  =>\n+\n+                     --  A variable in the protected type is expanded as a\n+                     --  component.\n+\n                      if Is_Simple_Barrier_Name (N) then\n                         return OK;\n                      end if;"}, {"sha": "d023c8c5276c34690000bce62017865d95bed4f9", "filename": "gcc/ada/s-parame-vxworks.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d4c4fde0e89b87d4b449504e4790e1f49262772/gcc%2Fada%2Fs-parame-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d4c4fde0e89b87d4b449504e4790e1f49262772/gcc%2Fada%2Fs-parame-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vxworks.adb?ref=7d4c4fde0e89b87d4b449504e4790e1f49262772", "patch": "@@ -57,7 +57,12 @@ package body System.Parameters is\n       pragma Import (C, Default_Stack_Size, \"__gl_default_stack_size\");\n    begin\n       if Default_Stack_Size = -1 then\n-         return 20 * 1024;\n+         if Stack_Check_Limits then\n+            return 60 * 1024;\n+            --  Extra stack to allow for 12K exception area.\n+         else\n+            return 20 * 1024;\n+         end if;\n       else\n          return Size_Type (Default_Stack_Size);\n       end if;"}, {"sha": "7de1c6f924f52398fb6a1aa519189852d3cd9d2b", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d4c4fde0e89b87d4b449504e4790e1f49262772/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d4c4fde0e89b87d4b449504e4790e1f49262772/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=7d4c4fde0e89b87d4b449504e4790e1f49262772", "patch": "@@ -2675,10 +2675,13 @@ package body Sem_Ch7 is\n          --  If this is a private type with a full view (for example a local\n          --  subtype of a private type declared elsewhere), ensure that the\n          --  full view is also removed from visibility: it may be exposed when\n-         --  swapping views in an instantiation.\n+         --  swapping views in an instantiation. Similarly, ensure that the\n+         --  use-visibility is properly set on both views.\n \n          if Is_Type (Id) and then Present (Full_View (Id)) then\n-            Set_Is_Immediately_Visible (Full_View (Id), False);\n+            Set_Is_Immediately_Visible     (Full_View (Id), False);\n+            Set_Is_Potentially_Use_Visible (Full_View (Id),\n+              Is_Potentially_Use_Visible (Id));\n          end if;\n \n          if Is_Tagged_Type (Id) and then Ekind (Id) = E_Record_Type then"}, {"sha": "4ded20b7f2ff4885fc809ee5c883a152fe97dda7", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d4c4fde0e89b87d4b449504e4790e1f49262772/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d4c4fde0e89b87d4b449504e4790e1f49262772/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=7d4c4fde0e89b87d4b449504e4790e1f49262772", "patch": "@@ -579,6 +579,13 @@ package body Switch.C is\n                   --  -gnateg (generate C code)\n \n                   when 'g' =>\n+                     --  Special check, -gnateg must occur after -gnatc\n+\n+                     if Operating_Mode /= Check_Semantics then\n+                        Osint.Fail\n+                          (\"gnateg requires previous occurrence of -gnatc\");\n+                     end if;\n+\n                      Generate_C_Code := True;\n                      Ptr := Ptr + 1;\n "}]}