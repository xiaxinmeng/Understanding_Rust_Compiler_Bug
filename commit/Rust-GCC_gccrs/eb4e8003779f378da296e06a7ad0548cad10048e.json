{"sha": "eb4e8003779f378da296e06a7ad0548cad10048e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI0ZTgwMDM3NzlmMzc4ZGEyOTZlMDZhN2FkMDU0OGNhZDEwMDQ4ZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-09-01T22:41:28Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-09-01T22:41:28Z"}, "message": "(input_operand): Allow \"easy\" FP constants.\n\nFrom-SVN: r5241", "tree": {"sha": "5de247fc4cc2a44a1bd8dd0270b4739b02f1c5d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5de247fc4cc2a44a1bd8dd0270b4739b02f1c5d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb4e8003779f378da296e06a7ad0548cad10048e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb4e8003779f378da296e06a7ad0548cad10048e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb4e8003779f378da296e06a7ad0548cad10048e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb4e8003779f378da296e06a7ad0548cad10048e/comments", "author": null, "committer": null, "parents": [{"sha": "87935f601efe35aa8fbefbd4cb53c92864148b14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87935f601efe35aa8fbefbd4cb53c92864148b14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87935f601efe35aa8fbefbd4cb53c92864148b14"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "56cc6cdbb56243e1ac1d0687f82c6374fcd98a9f", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4e8003779f378da296e06a7ad0548cad10048e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4e8003779f378da296e06a7ad0548cad10048e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=eb4e8003779f378da296e06a7ad0548cad10048e", "patch": "@@ -405,14 +405,21 @@ input_operand (op, mode)\n      register rtx op;\n      enum machine_mode mode;\n {\n+  /* Memory is always valid.  */\n   if (memory_operand (op, mode))\n     return 1;\n \n-  /* For floating-point or multi-word mode, only register or memory\n-     is valid.  */\n+  /* For floating-point, easy constants are valid.  */\n+  if (GET_MODE_CLASS (mode) == MODE_FLOAT\n+      && CONSTANT_P (op)\n+      && easy_fp_constant (op, mode))\n+    return 1;\n+\n+  /* For floating-point or multi-word mode, the only remaining valid type\n+     is a register.  */\n   if (GET_MODE_CLASS (mode) == MODE_FLOAT\n       || GET_MODE_SIZE (mode) > UNITS_PER_WORD)\n-    return gpc_reg_operand (op, mode);\n+    return register_operand (op, mode);\n \n   /* The only cases left are integral modes one word or smaller (we\n      do not get called for MODE_CC values).  These can be in any"}]}