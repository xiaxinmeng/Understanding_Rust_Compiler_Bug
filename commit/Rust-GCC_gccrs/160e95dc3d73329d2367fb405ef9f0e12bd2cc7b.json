{"sha": "160e95dc3d73329d2367fb405ef9f0e12bd2cc7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTYwZTk1ZGMzZDczMzI5ZDIzNjdmYjQwNWVmOWYwZTEyYmQyY2M3Yg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-01-09T16:50:51Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2020-01-09T16:50:51Z"}, "message": "libstdc++: Fix undefined behaviour in random dist serialization (PR93205)\n\nThe deserialization functions for random number distributions fail to\ncheck the stream state before using the extracted values. In some cases\nthis leads to using indeterminate values to resize a vector, and then\nfilling that vector with indeterminate values.\n\nNo values that affect control flow should be used without checking that a\ngood value was read from the stream.\n\nAdditionally, where reasonable to do so, defer modifying any state in\nthe distribution until all values have been successfully read, to avoid\nmodifying some of the distribution's parameters and leaving others\nunchanged.\n\n\tPR libstdc++/93205\n\t* include/bits/random.h (operator>>): Check stream operation succeeds.\n\t* include/bits/random.tcc (operator<<): Remove redundant __ostream_type\n\ttypedefs.\n\t(operator>>): Remove redundant __istream_type typedefs. Check stream\n\toperations succeed.\n\t(__extract_params): New function to fill a vector from a stream.\n\t* testsuite/26_numerics/random/pr60037-neg.cc: Adjust dg-error line.\n\nFrom-SVN: r280061", "tree": {"sha": "b67caf76937c772c71eb95f3a3aac5f2452ad054", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b67caf76937c772c71eb95f3a3aac5f2452ad054"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/160e95dc3d73329d2367fb405ef9f0e12bd2cc7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/160e95dc3d73329d2367fb405ef9f0e12bd2cc7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/160e95dc3d73329d2367fb405ef9f0e12bd2cc7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/160e95dc3d73329d2367fb405ef9f0e12bd2cc7b/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a09a9483825233f16e5b26bb0ffee76752339fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a09a9483825233f16e5b26bb0ffee76752339fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a09a9483825233f16e5b26bb0ffee76752339fc"}], "stats": {"total": 374, "additions": 172, "deletions": 202}, "files": [{"sha": "c4a98f809d0d8e4794f63c9c3c712e94ec30a88e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/160e95dc3d73329d2367fb405ef9f0e12bd2cc7b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/160e95dc3d73329d2367fb405ef9f0e12bd2cc7b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=160e95dc3d73329d2367fb405ef9f0e12bd2cc7b", "patch": "@@ -1,5 +1,14 @@\n 2020-01-09  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/93205\n+\t* include/bits/random.h (operator>>): Check stream operation succeeds.\n+\t* include/bits/random.tcc (operator<<): Remove redundant __ostream_type\n+\ttypedefs.\n+\t(operator>>): Remove redundant __istream_type typedefs. Check stream\n+\toperations succeed.\n+\t(__extract_params): New function to fill a vector from a stream.\n+\t* testsuite/26_numerics/random/pr60037-neg.cc: Adjust dg-error line.\n+\n \tPR libstdc++/93208\n \t* config/abi/pre/gnu.ver: Add new exports.\n \t* include/std/memory_resource (memory_resource::~memory_resource()):"}, {"sha": "3eefdefc96f9ccc9aefe5a849f5c53b2a24fc9d4", "filename": "libstdc++-v3/include/bits/random.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/160e95dc3d73329d2367fb405ef9f0e12bd2cc7b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/160e95dc3d73329d2367fb405ef9f0e12bd2cc7b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h?ref=160e95dc3d73329d2367fb405ef9f0e12bd2cc7b", "patch": "@@ -3720,13 +3720,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    * @returns The input stream with @p __x extracted or in an error state.\n    */\n   template<typename _CharT, typename _Traits>\n-    std::basic_istream<_CharT, _Traits>&\n+    inline std::basic_istream<_CharT, _Traits>&\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       std::bernoulli_distribution& __x)\n     {\n       double __p;\n-      __is >> __p;\n-      __x.param(bernoulli_distribution::param_type(__p));\n+      if (__is >> __p)\n+\t__x.param(bernoulli_distribution::param_type(__p));\n       return __is;\n     }\n "}, {"sha": "f67b2fe48f44373f8d8a0848cecc8a99b20b06e8", "filename": "libstdc++-v3/include/bits/random.tcc", "status": "modified", "additions": 159, "deletions": 198, "changes": 357, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/160e95dc3d73329d2367fb405ef9f0e12bd2cc7b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/160e95dc3d73329d2367fb405ef9f0e12bd2cc7b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc?ref=160e95dc3d73329d2367fb405ef9f0e12bd2cc7b", "patch": "@@ -155,8 +155,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t       const linear_congruential_engine<_UIntType,\n \t\t\t\t\t\t__a, __c, __m>& __lcr)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -176,8 +175,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       linear_congruential_engine<_UIntType, __a, __c, __m>& __lcr)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::dec);\n@@ -477,8 +475,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t       const mersenne_twister_engine<_UIntType, __w, __n, __m,\n \t       __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -505,8 +502,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t       mersenne_twister_engine<_UIntType, __w, __n, __m,\n \t       __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>& __x)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::dec | __ios_base::skipws);\n@@ -633,8 +629,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t       const subtract_with_carry_engine<_UIntType,\n \t\t\t\t\t\t__w, __s, __r>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -657,8 +652,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       subtract_with_carry_engine<_UIntType, __w, __s, __r>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::dec | __ios_base::skipws);\n@@ -703,8 +697,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t       const discard_block_engine<_RandomNumberEngine,\n \t       __p, __r>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -725,8 +718,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       discard_block_engine<_RandomNumberEngine, __p, __r>& __x)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::dec | __ios_base::skipws);\n@@ -831,8 +823,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t       const shuffle_order_engine<_RandomNumberEngine, __k>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -856,8 +847,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       shuffle_order_engine<_RandomNumberEngine, __k>& __x)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::dec | __ios_base::skipws);\n@@ -877,8 +867,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t       const uniform_int_distribution<_IntType>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -898,16 +887,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       uniform_int_distribution<_IntType>& __x)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using param_type\n+\t= typename uniform_int_distribution<_IntType>::param_type;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::dec | __ios_base::skipws);\n \n       _IntType __a, __b;\n-      __is >> __a >> __b;\n-      __x.param(typename uniform_int_distribution<_IntType>::\n-\t\tparam_type(__a, __b));\n+      if (__is >> __a >> __b)\n+\t__x.param(param_type(__a, __b));\n \n       __is.flags(__flags);\n       return __is;\n@@ -936,8 +925,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t       const uniform_real_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -960,16 +948,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       uniform_real_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using param_type\n+\t= typename uniform_real_distribution<_RealType>::param_type;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::skipws);\n \n       _RealType __a, __b;\n-      __is >> __a >> __b;\n-      __x.param(typename uniform_real_distribution<_RealType>::\n-\t\tparam_type(__a, __b));\n+      if (__is >> __a >> __b)\n+\t__x.param(param_type(__a, __b));\n \n       __is.flags(__flags);\n       return __is;\n@@ -998,8 +986,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t       const bernoulli_distribution& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -1080,8 +1067,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t       const geometric_distribution<_IntType>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -1104,15 +1090,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       geometric_distribution<_IntType>& __x)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using param_type = typename geometric_distribution<_IntType>::param_type;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::skipws);\n \n       double __p;\n-      __is >> __p;\n-      __x.param(typename geometric_distribution<_IntType>::param_type(__p));\n+      if (__is >> __p)\n+\t__x.param(param_type(__p));\n \n       __is.flags(__flags);\n       return __is;\n@@ -1195,8 +1181,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t       const negative_binomial_distribution<_IntType>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -1220,17 +1205,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       negative_binomial_distribution<_IntType>& __x)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using param_type\n+\t= typename negative_binomial_distribution<_IntType>::param_type;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::skipws);\n \n       _IntType __k;\n       double __p;\n-      __is >> __k >> __p >> __x._M_gd;\n-      __x.param(typename negative_binomial_distribution<_IntType>::\n-\t\tparam_type(__k, __p));\n+      if (__is >> __k >> __p >> __x._M_gd)\n+\t__x.param(param_type(__k, __p));\n \n       __is.flags(__flags);\n       return __is;\n@@ -1406,8 +1391,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t       const poisson_distribution<_IntType>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -1431,15 +1415,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       poisson_distribution<_IntType>& __x)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using param_type = typename poisson_distribution<_IntType>::param_type;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::skipws);\n \n       double __mean;\n-      __is >> __mean >> __x._M_nd;\n-      __x.param(typename poisson_distribution<_IntType>::param_type(__mean));\n+      if (__is >> __mean >> __x._M_nd)\n+\t__x.param(param_type(__mean));\n \n       __is.flags(__flags);\n       return __is;\n@@ -1673,8 +1657,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t       const binomial_distribution<_IntType>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -1699,17 +1682,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       binomial_distribution<_IntType>& __x)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using param_type = typename binomial_distribution<_IntType>::param_type;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::dec | __ios_base::skipws);\n \n       _IntType __t;\n       double __p;\n-      __is >> __t >> __p >> __x._M_nd;\n-      __x.param(typename binomial_distribution<_IntType>::\n-\t\tparam_type(__t, __p));\n+      if (__is >> __t >> __p >> __x._M_nd)\n+\t__x.param(param_type(__t, __p));\n \n       __is.flags(__flags);\n       return __is;\n@@ -1737,8 +1719,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t       const exponential_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -1760,16 +1741,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       exponential_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using param_type\n+\t= typename exponential_distribution<_RealType>::param_type;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::dec | __ios_base::skipws);\n \n       _RealType __lambda;\n-      __is >> __lambda;\n-      __x.param(typename exponential_distribution<_RealType>::\n-\t\tparam_type(__lambda));\n+      if (__is >> __lambda)\n+\t__x.param(param_type(__lambda));\n \n       __is.flags(__flags);\n       return __is;\n@@ -1904,8 +1885,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t       const normal_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -1931,19 +1911,22 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       normal_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using param_type = typename normal_distribution<_RealType>::param_type;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::dec | __ios_base::skipws);\n \n       double __mean, __stddev;\n-      __is >> __mean >> __stddev\n-\t   >> __x._M_saved_available;\n-      if (__x._M_saved_available)\n-\t__is >> __x._M_saved;\n-      __x.param(typename normal_distribution<_RealType>::\n-\t\tparam_type(__mean, __stddev));\n+      bool __saved_avail;\n+      if (__is >> __mean >> __stddev >> __saved_avail)\n+\t{\n+\t  if (__saved_avail && (__is >> __x._M_saved))\n+\t    {\n+\t      __x._M_saved_available = __saved_avail;\n+\t      __x.param(param_type(__mean, __stddev));\n+\t    }\n+\t}\n \n       __is.flags(__flags);\n       return __is;\n@@ -1969,8 +1952,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t       const lognormal_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -1994,16 +1976,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       lognormal_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using param_type\n+\t= typename lognormal_distribution<_RealType>::param_type;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::dec | __ios_base::skipws);\n \n       _RealType __m, __s;\n-      __is >> __m >> __s >> __x._M_nd;\n-      __x.param(typename lognormal_distribution<_RealType>::\n-\t\tparam_type(__m, __s));\n+      if (__is >> __m >> __s >> __x._M_nd)\n+\t__x.param(param_type(__m, __s));\n \n       __is.flags(__flags);\n       return __is;\n@@ -2042,8 +2024,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t       const chi_squared_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -2066,16 +2047,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       chi_squared_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using param_type\n+\t= typename chi_squared_distribution<_RealType>::param_type;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::dec | __ios_base::skipws);\n \n       _RealType __n;\n-      __is >> __n >> __x._M_gd;\n-      __x.param(typename chi_squared_distribution<_RealType>::\n-\t\tparam_type(__n));\n+      if (__is >> __n >> __x._M_gd)\n+\t__x.param(param_type(__n));\n \n       __is.flags(__flags);\n       return __is;\n@@ -2129,8 +2110,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t       const cauchy_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -2153,16 +2133,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       cauchy_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using param_type = typename cauchy_distribution<_RealType>::param_type;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::dec | __ios_base::skipws);\n \n       _RealType __a, __b;\n-      __is >> __a >> __b;\n-      __x.param(typename cauchy_distribution<_RealType>::\n-\t\tparam_type(__a, __b));\n+      if (__is >> __a >> __b)\n+\t__x.param(param_type(__a, __b));\n \n       __is.flags(__flags);\n       return __is;\n@@ -2206,8 +2185,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t       const fisher_f_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -2231,16 +2209,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       fisher_f_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using param_type\n+\t= typename fisher_f_distribution<_RealType>::param_type;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::dec | __ios_base::skipws);\n \n       _RealType __m, __n;\n-      __is >> __m >> __n >> __x._M_gd_x >> __x._M_gd_y;\n-      __x.param(typename fisher_f_distribution<_RealType>::\n-\t\tparam_type(__m, __n));\n+      if (__is >> __m >> __n >> __x._M_gd_x >> __x._M_gd_y)\n+\t__x.param(param_type(__m, __n));\n \n       __is.flags(__flags);\n       return __is;\n@@ -2281,8 +2259,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t       const student_t_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -2305,15 +2282,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       student_t_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using param_type\n+\t= typename student_t_distribution<_RealType>::param_type;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::dec | __ios_base::skipws);\n \n       _RealType __n;\n-      __is >> __n >> __x._M_nd >> __x._M_gd;\n-      __x.param(typename student_t_distribution<_RealType>::param_type(__n));\n+      if (__is >> __n >> __x._M_nd >> __x._M_gd)\n+\t__x.param(param_type(__n));\n \n       __is.flags(__flags);\n       return __is;\n@@ -2450,8 +2428,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t       const gamma_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -2475,16 +2452,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       gamma_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using param_type = typename gamma_distribution<_RealType>::param_type;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::dec | __ios_base::skipws);\n \n       _RealType __alpha_val, __beta_val;\n-      __is >> __alpha_val >> __beta_val >> __x._M_nd;\n-      __x.param(typename gamma_distribution<_RealType>::\n-\t\tparam_type(__alpha_val, __beta_val));\n+      if (__is >> __alpha_val >> __beta_val >> __x._M_nd)\n+\t__x.param(param_type(__alpha_val, __beta_val));\n \n       __is.flags(__flags);\n       return __is;\n@@ -2528,8 +2504,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t       const weibull_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -2552,16 +2527,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       weibull_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using param_type = typename weibull_distribution<_RealType>::param_type;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::dec | __ios_base::skipws);\n \n       _RealType __a, __b;\n-      __is >> __a >> __b;\n-      __x.param(typename weibull_distribution<_RealType>::\n-\t\tparam_type(__a, __b));\n+      if (__is >> __a >> __b)\n+\t__x.param(param_type(__a, __b));\n \n       __is.flags(__flags);\n       return __is;\n@@ -2604,8 +2578,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t       const extreme_value_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -2628,16 +2601,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       extreme_value_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using param_type\n+\t= typename extreme_value_distribution<_RealType>::param_type;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::dec | __ios_base::skipws);\n \n       _RealType __a, __b;\n-      __is >> __a >> __b;\n-      __x.param(typename extreme_value_distribution<_RealType>::\n-\t\tparam_type(__a, __b));\n+      if (__is >> __a >> __b)\n+\t__x.param(param_type(__a, __b));\n \n       __is.flags(__flags);\n       return __is;\n@@ -2740,8 +2713,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t       const discrete_distribution<_IntType>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -2762,32 +2734,44 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       return __os;\n     }\n \n+namespace __detail\n+{\n+  template<typename _ValT, typename _CharT, typename _Traits>\n+    basic_istream<_CharT, _Traits>&\n+    __extract_params(basic_istream<_CharT, _Traits>& __is,\n+\t\t     vector<_ValT>& __vals, size_t __n)\n+    {\n+      __vals.reserve(__n);\n+      while (__n--)\n+\t{\n+\t  _ValT __val;\n+\t  if (__is >> __val)\n+\t    __vals.push_back(__val);\n+\t  else\n+\t    break;\n+\t}\n+      return __is;\n+    }\n+} // namespace __detail\n+\n   template<typename _IntType, typename _CharT, typename _Traits>\n     std::basic_istream<_CharT, _Traits>&\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       discrete_distribution<_IntType>& __x)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::dec | __ios_base::skipws);\n \n       size_t __n;\n-      __is >> __n;\n-\n-      std::vector<double> __prob_vec;\n-      __prob_vec.reserve(__n);\n-      for (; __n != 0; --__n)\n+      if (__is >> __n)\n \t{\n-\t  double __prob;\n-\t  __is >> __prob;\n-\t  __prob_vec.push_back(__prob);\n+\t  std::vector<double> __prob_vec;\n+\t  if (__detail::__extract_params(__is, __prob_vec, __n))\n+\t    __x.param({__prob_vec.begin(), __prob_vec.end()});\n \t}\n \n-      __x.param(typename discrete_distribution<_IntType>::\n-\t\tparam_type(__prob_vec.begin(), __prob_vec.end()));\n-\n       __is.flags(__flags);\n       return __is;\n     }\n@@ -2950,8 +2934,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t       const piecewise_constant_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -2982,36 +2965,26 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       piecewise_constant_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::dec | __ios_base::skipws);\n \n       size_t __n;\n-      __is >> __n;\n-\n-      std::vector<_RealType> __int_vec;\n-      __int_vec.reserve(__n + 1);\n-      for (size_t __i = 0; __i <= __n; ++__i)\n-\t{\n-\t  _RealType __int;\n-\t  __is >> __int;\n-\t  __int_vec.push_back(__int);\n-\t}\n-\n-      std::vector<double> __den_vec;\n-      __den_vec.reserve(__n);\n-      for (size_t __i = 0; __i < __n; ++__i)\n+      if (__is >> __n)\n \t{\n-\t  double __den;\n-\t  __is >> __den;\n-\t  __den_vec.push_back(__den);\n+\t  std::vector<_RealType> __int_vec;\n+\t  if (__detail::__extract_params(__is, __int_vec, __n + 1))\n+\t    {\n+\t      std::vector<double> __den_vec;\n+\t      if (__detail::__extract_params(__is, __den_vec, __n))\n+\t\t{\n+\t\t  __x.param({ __int_vec.begin(), __int_vec.end(),\n+\t\t\t      __den_vec.begin() });\n+\t\t}\n+\t    }\n \t}\n \n-      __x.param(typename piecewise_constant_distribution<_RealType>::\n-\t  param_type(__int_vec.begin(), __int_vec.end(), __den_vec.begin()));\n-\n       __is.flags(__flags);\n       return __is;\n     }\n@@ -3166,8 +3139,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator<<(std::basic_ostream<_CharT, _Traits>& __os,\n \t       const piecewise_linear_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;\n-      typedef typename __ostream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_ostream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __os.flags();\n       const _CharT __fill = __os.fill();\n@@ -3198,36 +3170,25 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     operator>>(std::basic_istream<_CharT, _Traits>& __is,\n \t       piecewise_linear_distribution<_RealType>& __x)\n     {\n-      typedef std::basic_istream<_CharT, _Traits>  __istream_type;\n-      typedef typename __istream_type::ios_base    __ios_base;\n+      using __ios_base = typename basic_istream<_CharT, _Traits>::ios_base;\n \n       const typename __ios_base::fmtflags __flags = __is.flags();\n       __is.flags(__ios_base::dec | __ios_base::skipws);\n \n       size_t __n;\n-      __is >> __n;\n-\n-      std::vector<_RealType> __int_vec;\n-      __int_vec.reserve(__n + 1);\n-      for (size_t __i = 0; __i <= __n; ++__i)\n+      if (__is >> __n)\n \t{\n-\t  _RealType __int;\n-\t  __is >> __int;\n-\t  __int_vec.push_back(__int);\n-\t}\n-\n-      std::vector<double> __den_vec;\n-      __den_vec.reserve(__n + 1);\n-      for (size_t __i = 0; __i <= __n; ++__i)\n-\t{\n-\t  double __den;\n-\t  __is >> __den;\n-\t  __den_vec.push_back(__den);\n+\t  vector<_RealType> __int_vec;\n+\t  if (__detail::__extract_params(__is, __int_vec, __n + 1))\n+\t    {\n+\t      vector<double> __den_vec;\n+\t      if (__detail::__extract_params(__is, __den_vec, __n + 1))\n+\t\t{\n+\t\t  __x.param({ __int_vec.begin(), __int_vec.end(),\n+\t\t\t      __den_vec.begin() });\n+\t\t}\n+\t    }\n \t}\n-\n-      __x.param(typename piecewise_linear_distribution<_RealType>::\n-\t  param_type(__int_vec.begin(), __int_vec.end(), __den_vec.begin()));\n-\n       __is.flags(__flags);\n       return __is;\n     }"}, {"sha": "201b87e9c52b5d2e9c68cb6a60a9acabde5659a7", "filename": "libstdc++-v3/testsuite/26_numerics/random/pr60037-neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/160e95dc3d73329d2367fb405ef9f0e12bd2cc7b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpr60037-neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/160e95dc3d73329d2367fb405ef9f0e12bd2cc7b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpr60037-neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fpr60037-neg.cc?ref=160e95dc3d73329d2367fb405ef9f0e12bd2cc7b", "patch": "@@ -12,4 +12,4 @@ auto x = std::generate_canonical<std::size_t,\n \n // { dg-error \"static assertion failed: template argument must be a floating point type\" \"\" { target *-*-* } 171 }\n \n-// { dg-error \"static assertion failed: template argument must be a floating point type\" \"\" { target *-*-* } 3320 }\n+// { dg-error \"static assertion failed: template argument must be a floating point type\" \"\" { target *-*-* } 3281 }"}]}