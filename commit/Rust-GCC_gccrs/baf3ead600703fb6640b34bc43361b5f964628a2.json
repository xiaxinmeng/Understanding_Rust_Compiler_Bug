{"sha": "baf3ead600703fb6640b34bc43361b5f964628a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFmM2VhZDYwMDcwM2ZiNjY0MGIzNGJjNDMzNjFiNWY5NjQ2MjhhMg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-11-01T23:44:35Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-11-01T23:44:35Z"}, "message": "alpha.h (WORD_SWITCH_TAKES_ARG): Remove.\n\n\t* config/alpha/alpha.h (WORD_SWITCH_TAKES_ARG): Remove.\n\t* config/cris/cris.h (WORD_SWITCH_TAKES_ARG): Remove.\n\t(CC1_SPEC): Don't handle -target.\n\t* config/darwin.h (WORD_SWITCH_TAKES_ARG): Remove single-argument\n\toptions.\n\t* config/darwin.opt (Zallowable_client, Zbundle_loader,\n\tZdylib_file, Zexported_symbols_list, Zfn_seg_addr_table_filename,\n\tZimage_base, Zinit, Zinstall_name, Zmultiply_defined,\n\tZmultiplydefinedunused, Zseg_addr_table, Zsegs_read_only_addr,\n\tZsegs_read_write_addr, Zumbrella, Zunexported_symbols_list,\n\tZweak_reference_mismatches, client_name, compatibility_version,\n\tcurrent_version, dylinker_install_name, pagezero_size,\n\tread_only_relocs, seg1addr, segs_read_only_addr,\n\tsegs_read_write_addr, sub_library, sub_umbrella): New.\n\t* config/freebsd-spec.h (BSD_WORD_SWITCH_TAKES_ARG): Remove.\n\t* config/freebsd.h (WORD_SWITCH_TAKES_ARG): Remove.\n\t* config/freebsd.opt: New.\n\t* config/interix.h (WORD_SWITCH_TAKES_ARG): Remove.\n\t* config/mips/iris6.h (WORD_SWITCH_TAKES_ARG): Remove.\n\t* config/rpath.opt: New.\n\t* config.gcc (*-*-freebsd*): Use rpath.opt and freebsd.opt.\n\t(alpha*-dec-osf5.1*, i[34567]86-*-interix3*, mips-sgi-irix6.5*):\n\tUse rpath.opt.\n\nFrom-SVN: r166156", "tree": {"sha": "baab8efbfd13ebfebeb8f47b71216ea988044443", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/baab8efbfd13ebfebeb8f47b71216ea988044443"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/baf3ead600703fb6640b34bc43361b5f964628a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baf3ead600703fb6640b34bc43361b5f964628a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baf3ead600703fb6640b34bc43361b5f964628a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baf3ead600703fb6640b34bc43361b5f964628a2/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d721f6786362871895a36e4f26f09ded82d55ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d721f6786362871895a36e4f26f09ded82d55ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d721f6786362871895a36e4f26f09ded82d55ec"}], "stats": {"total": 248, "additions": 180, "deletions": 68}, "files": [{"sha": "1ca5b0be2461ca129c4a327703521bbf6a51bd9f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=baf3ead600703fb6640b34bc43361b5f964628a2", "patch": "@@ -1,3 +1,29 @@\n+2010-11-01  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/alpha/alpha.h (WORD_SWITCH_TAKES_ARG): Remove.\n+\t* config/cris/cris.h (WORD_SWITCH_TAKES_ARG): Remove.\n+\t(CC1_SPEC): Don't handle -target.\n+\t* config/darwin.h (WORD_SWITCH_TAKES_ARG): Remove single-argument\n+\toptions.\n+\t* config/darwin.opt (Zallowable_client, Zbundle_loader,\n+\tZdylib_file, Zexported_symbols_list, Zfn_seg_addr_table_filename,\n+\tZimage_base, Zinit, Zinstall_name, Zmultiply_defined,\n+\tZmultiplydefinedunused, Zseg_addr_table, Zsegs_read_only_addr,\n+\tZsegs_read_write_addr, Zumbrella, Zunexported_symbols_list,\n+\tZweak_reference_mismatches, client_name, compatibility_version,\n+\tcurrent_version, dylinker_install_name, pagezero_size,\n+\tread_only_relocs, seg1addr, segs_read_only_addr,\n+\tsegs_read_write_addr, sub_library, sub_umbrella): New.\n+\t* config/freebsd-spec.h (BSD_WORD_SWITCH_TAKES_ARG): Remove.\n+\t* config/freebsd.h (WORD_SWITCH_TAKES_ARG): Remove.\n+\t* config/freebsd.opt: New.\n+\t* config/interix.h (WORD_SWITCH_TAKES_ARG): Remove.\n+\t* config/mips/iris6.h (WORD_SWITCH_TAKES_ARG): Remove.\n+\t* config/rpath.opt: New.\n+\t* config.gcc (*-*-freebsd*): Use rpath.opt and freebsd.opt.\n+\t(alpha*-dec-osf5.1*, i[34567]86-*-interix3*, mips-sgi-irix6.5*):\n+\tUse rpath.opt.\n+\n 2010-11-01  Joseph Myers  <joseph@codesourcery.com>\n \n \t* common.opt (R, T, Tbss, Tdata, Ttext, h, z): New."}, {"sha": "64eaaefa3d2b3c62cb39af8278bbcc8d186f453e", "filename": "gcc/config.gcc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=baf3ead600703fb6640b34bc43361b5f964628a2", "patch": "@@ -528,6 +528,7 @@ case ${target} in\n       ;;\n   esac\n   fbsd_tm_file=\"${fbsd_tm_file} freebsd-spec.h freebsd.h freebsd-stdint.h\"\n+  extra_options=\"$extra_options rpath.opt freebsd.opt\"\n   case ${target} in\n     *-*-freebsd[345].*)\n       :;;\n@@ -727,6 +728,7 @@ alpha*-dec-osf5.1*)\n \ttmake_file=\"alpha/t-alpha alpha/t-ieee alpha/t-crtfm alpha/t-osf5\"\n \ttm_file=\"${tm_file} alpha/osf5.h\"\n \ttm_defines=\"${tm_defines} TARGET_SUPPORT_ARCH=1\"\n+\textra_options=\"${extra_options} rpath.opt\"\n \textra_headers=va_list.h\n \tuse_gcc_stdint=provide\n \tcase ${enable_threads} in\n@@ -1518,6 +1520,7 @@ i[34567]86-*-mingw* | x86_64-*-mingw*)\n i[34567]86-*-interix3*)\n \ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h i386/i386-interix.h i386/i386-interix3.h interix.h interix3.h\"\n \ttmake_file=\"${tmake_file} i386/t-interix\"\n+\textra_options=\"${extra_options} rpath.opt\"\n \textra_objs=winnt.o\n \ttarget_gtfiles=\"\\$(srcdir)/config/i386/winnt.c\"\n \tif test x$enable_threads = xyes ; then\n@@ -1784,6 +1787,7 @@ microblaze*-*-*)\n mips-sgi-irix6.5*)\n \ttm_file=\"elfos.h ${tm_file} mips/iris6.h\"\n \ttmake_file=\"mips/t-iris mips/t-iris6 mips/t-slibgcc-irix\"\n+\textra_options=\"${extra_options} rpath.opt\"\n \ttarget_cpu_default=\"MASK_ABICALLS\"\n \ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=3 MIPS_ABI_DEFAULT=ABI_N32\"\n \t# Only IRIX Development Foundation 1.3 for IRIX 6.5 provides stdint.h."}, {"sha": "5426a6414ecf4163856daa13759a65ef1e1097ac", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=baf3ead600703fb6640b34bc43361b5f964628a2", "patch": "@@ -96,9 +96,6 @@ along with GCC; see the file COPYING3.  If not see\n   while (0)\n #endif\n \n-#define WORD_SWITCH_TAKES_ARG(STR)\t\t\\\n- (!strcmp (STR, \"rpath\") || DEFAULT_WORD_SWITCH_TAKES_ARG(STR))\n-\n /* Print subsidiary information on the compiler version in use.  */\n #define TARGET_VERSION\n "}, {"sha": "a7b7e4d1e6291998ab8416843a90ad41e6d531b2", "filename": "gcc/config/cris/cris.h", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2Fconfig%2Fcris%2Fcris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2Fconfig%2Fcris%2Fcris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.h?ref=baf3ead600703fb6640b34bc43361b5f964628a2", "patch": "@@ -96,14 +96,6 @@ extern int cris_cpu_version;\n \n /* Node: Driver */\n \n-/* When using make with defaults.mak for Sun this will handily remove\n-   any \"-target sun*\" switches.  */\n-/* We need to override any previous definitions (linux.h) */\n-#undef WORD_SWITCH_TAKES_ARG\n-#define WORD_SWITCH_TAKES_ARG(STR)\t\t\\\n- (DEFAULT_WORD_SWITCH_TAKES_ARG (STR)\t\t\\\n-  || !strcmp (STR, \"target\"))\n-\n /* Also provide canonical vN definitions when user specifies an alias.\n    Note that -melf overrides -maout.  */\n \n@@ -168,12 +160,10 @@ extern int cris_cpu_version;\n     \" -D__CRIS_arch_tune=\" CRIS_DEFAULT_TUNE \"}}}}}\"\\\n  CRIS_ARCH_CPP_DEFAULT\n \n-/* Remove those Sun-make \"target\" switches.  */\n /* Override previous definitions (linux.h).  */\n #undef CC1_SPEC\n #define CC1_SPEC \\\n- \"%{target*:}\\\n-  %{metrax4:-march=v3}\\\n+ \"%{metrax4:-march=v3}\\\n   %{metrax100:-march=v8}\\\n   %(cc1_subtarget)\"\n "}, {"sha": "c488db221030848974b9a6328f98dde87ffb9ff5", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=baf3ead600703fb6640b34bc43361b5f964628a2", "patch": "@@ -198,43 +198,13 @@ extern GTY(()) int darwin_ms_struct;\n #undef  WORD_SWITCH_TAKES_ARG\n #define WORD_SWITCH_TAKES_ARG(STR)              \\\n   (DEFAULT_WORD_SWITCH_TAKES_ARG (STR) ? 1 :    \\\n-   !strcmp (STR, \"Zallowable_client\") ? 1 :     \\\n-   !strcmp (STR, \"arch\") ? 1 :                  \\\n-   !strcmp (STR, \"arch_only\") ? 1 :             \\\n-   !strcmp (STR, \"Zbundle_loader\") ? 1 :        \\\n-   !strcmp (STR, \"client_name\") ? 1 :           \\\n-   !strcmp (STR, \"compatibility_version\") ? 1 : \\\n-   !strcmp (STR, \"current_version\") ? 1 :       \\\n-   !strcmp (STR, \"Zdylib_file\") ? 1 :           \\\n-   !strcmp (STR, \"Zexported_symbols_list\") ? 1 : \\\n-   !strcmp (STR, \"Zimage_base\") ? 1 :           \\\n-   !strcmp (STR, \"Zinit\") ? 1 :                 \\\n-   !strcmp (STR, \"Zinstall_name\") ? 1 :         \\\n-   !strcmp (STR, \"Zmultiplydefinedunused\") ? 1 : \\\n-   !strcmp (STR, \"Zmultiply_defined\") ? 1 :     \\\n-   !strcmp (STR, \"precomp-trustfile\") ? 1 :     \\\n-   !strcmp (STR, \"read_only_relocs\") ? 1 :      \\\n    !strcmp (STR, \"sectcreate\") ? 3 :            \\\n    !strcmp (STR, \"sectorder\") ? 3 :             \\\n    !strcmp (STR, \"Zsegaddr\") ? 2 :              \\\n-   !strcmp (STR, \"Zsegs_read_only_addr\") ? 1 :  \\\n-   !strcmp (STR, \"Zsegs_read_write_addr\") ? 1 : \\\n-   !strcmp (STR, \"Zseg_addr_table\") ? 1 :       \\\n-   !strcmp (STR, \"Zfn_seg_addr_table_filename\") ? 1 :\\\n-   !strcmp (STR, \"seg1addr\") ? 1 :              \\\n    !strcmp (STR, \"segprot\") ? 3 :               \\\n-   !strcmp (STR, \"sub_library\") ? 1 :           \\\n-   !strcmp (STR, \"sub_umbrella\") ? 1 :          \\\n-   !strcmp (STR, \"Zumbrella\") ? 1 :             \\\n-   !strcmp (STR, \"Zunexported_symbols_list\") ? 1 : \\\n-   !strcmp (STR, \"Zweak_reference_mismatches\") ? 1 : \\\n-   !strcmp (STR, \"pagezero_size\") ? 1 :         \\\n-   !strcmp (STR, \"segs_read_only_addr\") ? 1 :   \\\n-   !strcmp (STR, \"segs_read_write_addr\") ? 1 :  \\\n    !strcmp (STR, \"sectalign\") ? 3 :             \\\n    !strcmp (STR, \"sectobjectsymbols\") ? 2 :     \\\n    !strcmp (STR, \"segcreate\") ? 3 :             \\\n-   !strcmp (STR, \"dylinker_install_name\") ? 1 : \\\n    0)\n \n #define SUBTARGET_C_COMMON_OVERRIDE_OPTIONS do {                        \\"}, {"sha": "4435fea09870cd1a56403147fd5083ec88c06a6a", "filename": "gcc/config/darwin.opt", "status": "modified", "additions": 82, "deletions": 1, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2Fconfig%2Fdarwin.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2Fconfig%2Fdarwin.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.opt?ref=baf3ead600703fb6640b34bc43361b5f964628a2", "patch": "@@ -1,6 +1,6 @@\n ; Processor-independent options for Darwin.\n \n-; Copyright (C) 2005, 2007 Free Software Foundation, Inc.\n+; Copyright (C) 2005, 2007, 2010 Free Software Foundation, Inc.\n ;\n ; This file is part of GCC.\n ;\n@@ -54,5 +54,86 @@ iframework\n Target RejectNegative C ObjC C++ ObjC++ Joined Separate \n -iframework <dir>\tAdd <dir> to the end of the system framework include path\n \n+Zallowable_client\n+Driver Separate\n+\n+Zbundle_loader\n+Driver Separate\n+\n+Zdylib_file\n+Driver Separate\n+\n+Zexported_symbols_list\n+Driver Separate\n+\n+Zfn_seg_addr_table_filename\n+Driver Separate\n+\n+Zimage_base\n+Driver Separate\n+\n+Zinit\n+Driver Separate\n+\n+Zinstall_name\n+Driver Separate\n+\n+Zmultiply_defined\n+Driver Separate\n+\n+Zmultiplydefinedunused\n+Driver Separate\n+\n+Zseg_addr_table\n+Driver Separate\n+\n+Zsegs_read_only_addr\n+Driver Separate\n+\n+Zsegs_read_write_addr\n+Driver Separate\n+\n+Zumbrella\n+Driver Separate\n+\n+Zunexported_symbols_list\n+Driver Separate\n+\n+Zweak_reference_mismatches\n+Driver Separate\n+\n+client_name\n+Driver Separate\n+\n+compatibility_version\n+Driver Separate\n+\n+current_version\n+Driver Separate\n+\n+dylinker_install_name\n+Driver Separate\n+\n+pagezero_size\n+Driver Separate\n+\n+read_only_relocs\n+Driver Separate\n+\n+seg1addr\n+Driver Separate\n+\n+segs_read_only_addr\n+Driver Separate\n+\n+segs_read_write_addr\n+Driver Separate\n+\n+sub_library\n+Driver Separate\n+\n+sub_umbrella\n+Driver Separate\n+\n undefined\n Driver Separate"}, {"sha": "00b7407b1f4920e781eaed6766da0c2019b9937f", "filename": "gcc/config/freebsd-spec.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2Fconfig%2Ffreebsd-spec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2Fconfig%2Ffreebsd-spec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffreebsd-spec.h?ref=baf3ead600703fb6640b34bc43361b5f964628a2", "patch": "@@ -34,14 +34,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n /* In case we need to know.  */\n #define USING_CONFIG_FREEBSD_SPEC 1\n \n-/* This defines which multi-letter switches take arguments.  */\n-\n-#define FBSD_WORD_SWITCH_TAKES_ARG(STR)\t\t\t\t\t\\\n-  (DEFAULT_WORD_SWITCH_TAKES_ARG (STR)\t\t\t\t\t\\\n-   || !strcmp ((STR), \"rpath\") || !strcmp ((STR), \"rpath-link\")\t\t\\\n-   || !strcmp ((STR), \"soname\") || !strcmp ((STR), \"defsym\") \t\t\\\n-   || !strcmp ((STR), \"assert\") || !strcmp ((STR), \"dynamic-linker\"))\n-\n #define FBSD_TARGET_OS_CPP_BUILTINS()\t\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\"}, {"sha": "1a7dac9630d7f5ff0bf0060aae68226250f7885e", "filename": "gcc/config/freebsd.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2Fconfig%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2Fconfig%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffreebsd.h?ref=baf3ead600703fb6640b34bc43361b5f964628a2", "patch": "@@ -30,12 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n /* In case we need to know.  */\n #define USING_CONFIG_FREEBSD 1\n \n-/* This defines which switch words take arguments.\n-   We have --assert etc.  */\n-\n-#undef  WORD_SWITCH_TAKES_ARG\n-#define WORD_SWITCH_TAKES_ARG(STR) (FBSD_WORD_SWITCH_TAKES_ARG(STR))\n-\n #undef  TARGET_OS_CPP_BUILTINS\n #define TARGET_OS_CPP_BUILTINS() FBSD_TARGET_OS_CPP_BUILTINS()\n "}, {"sha": "26dc9dfdaa51afce61e568818b04262811e3c85e", "filename": "gcc/config/freebsd.opt", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2Fconfig%2Ffreebsd.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2Fconfig%2Ffreebsd.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffreebsd.opt?ref=baf3ead600703fb6640b34bc43361b5f964628a2", "patch": "@@ -0,0 +1,38 @@\n+; FreeBSD options.\n+\n+; Copyright (C) 2010\n+; Free Software Foundation, Inc.\n+;\n+; This file is part of GCC.\n+;\n+; GCC is free software; you can redistribute it and/or modify it under\n+; the terms of the GNU General Public License as published by the Free\n+; Software Foundation; either version 3, or (at your option) any later\n+; version.\n+;\n+; GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+; WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+; FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+; for more details.\n+;\n+; You should have received a copy of the GNU General Public License\n+; along with GCC; see the file COPYING3.  If not see\n+; <http://www.gnu.org/licenses/>.\n+\n+; See the GCC internals manual (options.texi) for a description of this file's format.\n+\n+; Please try to keep this file in ASCII collating order.\n+\n+assert\n+Driver Separate\n+\n+defsym\n+Driver Separate\n+\n+rpath-link\n+Driver Separate\n+\n+soname\n+Driver Separate\n+\n+; This comment is to ensure we retain the blank line above."}, {"sha": "658c534277a00d122e2cb16504a498d164ff7748", "filename": "gcc/config/interix.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2Fconfig%2Finterix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2Fconfig%2Finterix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Finterix.h?ref=baf3ead600703fb6640b34bc43361b5f964628a2", "patch": "@@ -58,11 +58,6 @@ for windows/multi thread */\n #define STARTFILE_SPEC  \\\n   \"%{!shared:%{pg:gcrt0%O%s}%{!pg:%{p:mcrt0%O%s}%{!p:crt0%O%s}}} %{shared:crti%O%s}\"\n \n-#undef WORD_SWITCH_TAKES_ARG\n-#define WORD_SWITCH_TAKES_ARG(STR)\t\t\\\n- (DEFAULT_WORD_SWITCH_TAKES_ARG (STR)\t\t\\\n-  || !strcmp(STR, \"rpath\"))\n-\n \n #define STDC_0_IN_SYSTEM_HEADERS 1\n "}, {"sha": "dd8eb1158af706bc840c1649a86fe92191567363", "filename": "gcc/config/mips/iris6.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2Fconfig%2Fmips%2Firis6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2Fconfig%2Fmips%2Firis6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis6.h?ref=baf3ead600703fb6640b34bc43361b5f964628a2", "patch": "@@ -146,10 +146,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef DEFAULT_SIGNED_CHAR\n #define DEFAULT_SIGNED_CHAR 0\n \n-#define WORD_SWITCH_TAKES_ARG(STR)\t\t\t\\\n-  (DEFAULT_WORD_SWITCH_TAKES_ARG (STR)\t\t\t\\\n-   || strcmp (STR, \"rpath\") == 0)\n-\n #define TARGET_OS_CPP_BUILTINS()\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\"}, {"sha": "c76e2fc598c11ee10c716854c5766ccaeefbf01c", "filename": "gcc/config/rpath.opt", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2Fconfig%2Frpath.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf3ead600703fb6640b34bc43361b5f964628a2/gcc%2Fconfig%2Frpath.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frpath.opt?ref=baf3ead600703fb6640b34bc43361b5f964628a2", "patch": "@@ -0,0 +1,29 @@\n+; -rpath option to the driver.\n+\n+; Copyright (C) 2010\n+; Free Software Foundation, Inc.\n+;\n+; This file is part of GCC.\n+;\n+; GCC is free software; you can redistribute it and/or modify it under\n+; the terms of the GNU General Public License as published by the Free\n+; Software Foundation; either version 3, or (at your option) any later\n+; version.\n+;\n+; GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+; WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+; FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+; for more details.\n+;\n+; You should have received a copy of the GNU General Public License\n+; along with GCC; see the file COPYING3.  If not see\n+; <http://www.gnu.org/licenses/>.\n+\n+; See the GCC internals manual (options.texi) for a description of this file's format.\n+\n+; Please try to keep this file in ASCII collating order.\n+\n+rpath\n+Driver Separate\n+\n+; This comment is to ensure we retain the blank line above."}]}