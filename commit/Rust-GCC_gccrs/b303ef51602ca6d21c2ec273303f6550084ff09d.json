{"sha": "b303ef51602ca6d21c2ec273303f6550084ff09d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjMwM2VmNTE2MDJjYTZkMjFjMmVjMjczMzAzZjY1NTAwODRmZjA5ZA==", "commit": {"author": {"name": "Douglas B Rupp", "email": "rupp@gnat.com", "date": "2009-07-27T17:20:32Z"}, "committer": {"name": "Douglas Rupp", "email": "rupp@gcc.gnu.org", "date": "2009-07-27T17:20:32Z"}, "message": "pex-unix.c (vfork): Remove VMS specific definition (get from header file instead).\n\n\n\t* pex-unix.c (vfork): Remove VMS specific definition (get from header\n\tfile instead).\n\t(to_ptr32): New function.\n\t(pex_unix_exec_child): Use it.\n\nFrom-SVN: r150130", "tree": {"sha": "831a8f2945ea5c84b01155eff333403462045de5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/831a8f2945ea5c84b01155eff333403462045de5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b303ef51602ca6d21c2ec273303f6550084ff09d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b303ef51602ca6d21c2ec273303f6550084ff09d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b303ef51602ca6d21c2ec273303f6550084ff09d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b303ef51602ca6d21c2ec273303f6550084ff09d/comments", "author": null, "committer": null, "parents": [{"sha": "5823ade173ca373e8af782cc3100ff67449f8016", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5823ade173ca373e8af782cc3100ff67449f8016", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5823ade173ca373e8af782cc3100ff67449f8016"}], "stats": {"total": 50, "additions": 43, "deletions": 7}, "files": [{"sha": "25c6cd1b77bd9c9d7db4a59f568e823de1f4b5f4", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b303ef51602ca6d21c2ec273303f6550084ff09d/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b303ef51602ca6d21c2ec273303f6550084ff09d/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=b303ef51602ca6d21c2ec273303f6550084ff09d", "patch": "@@ -1,3 +1,10 @@\n+2009-07-27  Douglas B Rupp  <rupp@gnat.com>\n+\n+\t* pex-unix.c (vfork): Remove VMS specific definition (get from header\n+\tfile instead).\n+\t(to_ptr32): New function.\n+\t(pex_unix_exec_child): Use it.\n+\n 2009-07-24  Ian Lance Taylor  <iant@google.com>\n \n \tPR bootstrap/40854"}, {"sha": "baf2bb4995be60b835eaf2fc057c794c86f2293b", "filename": "libiberty/pex-unix.c", "status": "modified", "additions": 36, "deletions": 7, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b303ef51602ca6d21c2ec273303f6550084ff09d/libiberty%2Fpex-unix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b303ef51602ca6d21c2ec273303f6550084ff09d/libiberty%2Fpex-unix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpex-unix.c?ref=b303ef51602ca6d21c2ec273303f6550084ff09d", "patch": "@@ -1,7 +1,7 @@\n /* Utilities to execute a program in a subprocess (possibly linked by pipes\n    with other subprocesses), and wait for it.  Generic Unix version\n    (also used for UWIN and VMS).\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2009\n    Free Software Foundation, Inc.\n \n This file is part of the libiberty library.\n@@ -65,11 +65,40 @@ extern int errno;\n #ifdef HAVE_VFORK_H\n #include <vfork.h>\n #endif\n-#ifdef VMS\n-#define vfork() (decc$$alloc_vfork_blocks() >= 0 ? \\\n-               lib$get_current_invo_context(decc$$get_vfork_jmpbuf()) : -1)\n-#endif /* VMS */\n+#if defined(VMS) && defined (__LONG_POINTERS)\n+#ifndef __CHAR_PTR32\n+typedef char * __char_ptr32\n+__attribute__ ((mode (SI)));\n+#endif\n+\n+typedef __char_ptr32 *__char_ptr_char_ptr32\n+__attribute__ ((mode (SI)));\n+\n+/* Return a 32 bit pointer to an array of 32 bit pointers \n+   given a 64 bit pointer to an array of 64 bit pointers.  */\n+\n+static __char_ptr_char_ptr32\n+to_ptr32 (char **ptr64)\n+{\n+  int argc;\n+  __char_ptr_char_ptr32 short_argv;\n+\n+  for (argc=0; ptr64[argc]; argc++);\n \n+  /* Reallocate argv with 32 bit pointers.  */\n+  short_argv = (__char_ptr_char_ptr32) decc$malloc\n+    (sizeof (__char_ptr32) * (argc + 1));\n+\n+  for (argc=0; ptr64[argc]; argc++)\n+    short_argv[argc] = (__char_ptr32) decc$strdup (ptr64[argc]);\n+\n+  short_argv[argc] = (__char_ptr32) 0;\n+  return short_argv;\n+\n+}\n+#else\n+#define to_ptr32(argv) argv\n+#endif\n \n /* File mode to use for private and world-readable files.  */\n \n@@ -425,12 +454,12 @@ pex_unix_exec_child (struct pex_obj *obj, int flags, const char *executable,\n \n       if ((flags & PEX_SEARCH) != 0)\n \t{\n-\t  execvp (executable, argv);\n+\t  execvp (executable, to_ptr32 (argv));\n \t  pex_child_error (obj, executable, \"execvp\", errno);\n \t}\n       else\n \t{\n-\t  execv (executable, argv);\n+\t  execv (executable, to_ptr32 (argv));\n \t  pex_child_error (obj, executable, \"execv\", errno);\n \t}\n "}]}