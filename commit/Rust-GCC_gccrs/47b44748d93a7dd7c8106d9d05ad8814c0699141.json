{"sha": "47b44748d93a7dd7c8106d9d05ad8814c0699141", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdiNDQ3NDhkOTNhN2RkN2M4MTA2ZDlkMDVhZDg4MTRjMDY5OTE0MQ==", "commit": {"author": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2005-04-20T05:53:53Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2005-04-20T05:53:53Z"}, "message": "[multiple changes]\n\n2005-04-20  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/beans/IntrospectionIncubator.java:\n\tFixed HTML tags in javadocs.\n\n2005-04-20  Jeroen Frijters  <jeroen@frijters.net>\n\n\t* gnu/java/beans/IntrospectionIncubator.java\n\t(addToPropertyHash, addToListenerHash): Don't confuse get(),\n\tset(), is(), add() and remove() with properties or events.\n\nFrom-SVN: r98441", "tree": {"sha": "f16d80fa9b9c8f7de8ac1348f260fd531fd0f33c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f16d80fa9b9c8f7de8ac1348f260fd531fd0f33c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47b44748d93a7dd7c8106d9d05ad8814c0699141", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47b44748d93a7dd7c8106d9d05ad8814c0699141", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47b44748d93a7dd7c8106d9d05ad8814c0699141", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47b44748d93a7dd7c8106d9d05ad8814c0699141/comments", "author": null, "committer": null, "parents": [{"sha": "57d1e8b0e84b6b4dcd0c5a44253459cb4e01a4b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57d1e8b0e84b6b4dcd0c5a44253459cb4e01a4b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57d1e8b0e84b6b4dcd0c5a44253459cb4e01a4b7"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "eb0b52429201824ce59814a9d601f1ce41e8a392", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b44748d93a7dd7c8106d9d05ad8814c0699141/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b44748d93a7dd7c8106d9d05ad8814c0699141/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=47b44748d93a7dd7c8106d9d05ad8814c0699141", "patch": "@@ -1,3 +1,14 @@\n+2005-04-20  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/beans/IntrospectionIncubator.java:\n+\tFixed HTML tags in javadocs.\n+\n+2005-04-20  Jeroen Frijters  <jeroen@frijters.net>\n+\n+\t* gnu/java/beans/IntrospectionIncubator.java\n+\t(addToPropertyHash, addToListenerHash): Don't confuse get(),\n+\tset(), is(), add() and remove() with properties or events.\n+\n 2005-04-20  Michael Koch  <konqueror@gmx.de>\n \n \t* gnu/java/awt/image/XBMDecoder.java:"}, {"sha": "9c2a652c3ed558ff4b99082e9b29871ace2e6449", "filename": "libjava/gnu/java/beans/IntrospectionIncubator.java", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47b44748d93a7dd7c8106d9d05ad8814c0699141/libjava%2Fgnu%2Fjava%2Fbeans%2FIntrospectionIncubator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47b44748d93a7dd7c8106d9d05ad8814c0699141/libjava%2Fgnu%2Fjava%2Fbeans%2FIntrospectionIncubator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fbeans%2FIntrospectionIncubator.java?ref=47b44748d93a7dd7c8106d9d05ad8814c0699141", "patch": "@@ -82,14 +82,14 @@ public IntrospectionIncubator() {\n \n \t/** Examines the given method and files it in a suitable collection.\n \t * It files the method as a property method if it finds:\n-\t * <lu>\n+\t * <ul>\n \t * <li>boolean \"is\" getter</li>\n \t * <li>\"get\" style getter</li>\n \t * <li>single argument setter</li>\n \t * <li>indiced setter and getter</li> \n \t * </ul>\n \t * It files the method as a listener method if all of these rules apply:\n-\t * <lu>\n+\t * <ul>\n \t * <li>the method name starts with \"add\" or \"remove\"</li>\n \t * <li>there is only a single argument</li>\n \t * <li>the argument type is a subclass of <code>java.util.EventListener</code></li>\n@@ -323,6 +323,8 @@ void addToPropertyHash(String name, Method method, int funcType) {\n \t\t\t\treturn;\n \t\t}\n \t\tnewName = capitalize(newName);\n+\t\tif (newName.length() == 0)\n+\t\t\treturn;\n \n \t\tDoubleKey k = new DoubleKey(type,newName);\n \t\tMethod[] methods = (Method[])propertyMethods.get(k);\n@@ -350,6 +352,8 @@ void addToListenerHash(String name, Method method, int funcType) {\n \t\t\t\treturn;\n \t\t}\n \t\tnewName = capitalize(newName);\n+\t\tif (newName.length() == 0)\n+\t\t\treturn;\n \n \t\tDoubleKey k = new DoubleKey(type,newName);\n \t\tMethod[] methods = (Method[])listenerMethods.get(k);"}]}