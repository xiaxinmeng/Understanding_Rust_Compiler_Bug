{"sha": "f8e1c0c01823b6d0b20f44c0f218e1798c2ff3b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhlMWMwYzAxODIzYjZkMGIyMGY0NGMwZjIxOGUxNzk4YzJmZjNiNA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-15T10:34:12Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-15T10:34:27Z"}, "message": "Fix clang [-Wmisleading-indentation] in hsa-gen.c.\n\n\t* hsa-gen.c (get_symbol_for_decl): Fix misleading indentation\n\twarning.", "tree": {"sha": "c4335ca10043a35e3d767660416eda5d92ef987e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4335ca10043a35e3d767660416eda5d92ef987e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8e1c0c01823b6d0b20f44c0f218e1798c2ff3b4", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl6+cD8ACgkQTcGC3A+n\nN4UwcAgAqGgs8fsOuJLZ2f0RKnnrEqN3vOvph62VGjrxCCdlCEaL1cGG6yf+gNZe\nrdGuDhttLQpQtm9vwyKAchXrsg+1mO+VpXQEQK9yDOw8gegn/Ls0Uy0XfNUsvypH\nWGdg4HvW1yE1ruUOsQ2lqT4qOj6wpgq8EpgVT4jQkXhFYKjyZyUDJtM3p1K6YBFN\nQgeQpGaRjO9cCArfIDijfzld7Scdt6r4A2bh7Fo+vxDHUw5BlAFtYPwYc+VTbY+b\nZ9XHzNY5xHghG2gR4qPdR12hWXOHaFxsQI86FaYHW7R7hSRlDe1RnS+vFiLjntND\nWMU8jvT42rSJfGt4ARu3ry3APbLh7g==\n=CvN4\n-----END PGP SIGNATURE-----", "payload": "tree c4335ca10043a35e3d767660416eda5d92ef987e\nparent b8db70e1f1cea312888470e1911c7b5e32333c61\nauthor Martin Liska <mliska@suse.cz> 1589538852 +0200\ncommitter Martin Liska <mliska@suse.cz> 1589538867 +0200\n\nFix clang [-Wmisleading-indentation] in hsa-gen.c.\n\n\t* hsa-gen.c (get_symbol_for_decl): Fix misleading indentation\n\twarning.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8e1c0c01823b6d0b20f44c0f218e1798c2ff3b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8e1c0c01823b6d0b20f44c0f218e1798c2ff3b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8e1c0c01823b6d0b20f44c0f218e1798c2ff3b4/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8db70e1f1cea312888470e1911c7b5e32333c61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8db70e1f1cea312888470e1911c7b5e32333c61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8db70e1f1cea312888470e1911c7b5e32333c61"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "cc761f2c6b61273ee3c18a2248dbe3cbf1ccc160", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e1c0c01823b6d0b20f44c0f218e1798c2ff3b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e1c0c01823b6d0b20f44c0f218e1798c2ff3b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8e1c0c01823b6d0b20f44c0f218e1798c2ff3b4", "patch": "@@ -1,3 +1,8 @@\n+2020-05-15  Martin Liska  <mliska@suse.cz>\n+\n+\t* hsa-gen.c (get_symbol_for_decl): Fix misleading indentation\n+\twarning.\n+\n 2020-05-15  Andrew Stubbs  <ams@codesourcery.com>\n \n \t* config/gcn/gcn-valu.md (v<expander><mode>3): Fix unsignedp."}, {"sha": "43baa2e82c8ab65875408d2f3cad84af16fc0f20", "filename": "gcc/hsa-gen.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8e1c0c01823b6d0b20f44c0f218e1798c2ff3b4/gcc%2Fhsa-gen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8e1c0c01823b6d0b20f44c0f218e1798c2ff3b4/gcc%2Fhsa-gen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa-gen.c?ref=f8e1c0c01823b6d0b20f44c0f218e1798c2ff3b4", "patch": "@@ -882,13 +882,13 @@ get_symbol_for_decl (tree decl)\n \n \t Iterate elements whether a symbol is already in m_global_symbols\n \t of not.  */\n-        if (is_in_global_vars && !sym->m_emitted_to_brig)\n-\t  {\n-\t    for (unsigned i = 0; i < hsa_cfun->m_global_symbols.length (); i++)\n-\t      if (hsa_cfun->m_global_symbols[i] == sym)\n-\t\treturn *slot;\n-\t    hsa_cfun->m_global_symbols.safe_push (sym);\n-\t  }\n+      if (is_in_global_vars && !sym->m_emitted_to_brig)\n+\t{\n+\t  for (unsigned i = 0; i < hsa_cfun->m_global_symbols.length (); i++)\n+\t    if (hsa_cfun->m_global_symbols[i] == sym)\n+\t      return *slot;\n+\t  hsa_cfun->m_global_symbols.safe_push (sym);\n+\t}\n \n       return *slot;\n     }"}]}