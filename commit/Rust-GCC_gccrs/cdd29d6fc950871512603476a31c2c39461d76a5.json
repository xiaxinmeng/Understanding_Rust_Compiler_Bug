{"sha": "cdd29d6fc950871512603476a31c2c39461d76a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RkMjlkNmZjOTUwODcxNTEyNjAzNDc2YTMxYzJjMzk0NjFkNzZhNQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-02-21T22:04:24Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-02-21T22:04:24Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r355", "tree": {"sha": "defcb109803218d3d7e75541b161a98a41629c98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/defcb109803218d3d7e75541b161a98a41629c98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cdd29d6fc950871512603476a31c2c39461d76a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdd29d6fc950871512603476a31c2c39461d76a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdd29d6fc950871512603476a31c2c39461d76a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdd29d6fc950871512603476a31c2c39461d76a5/comments", "author": null, "committer": null, "parents": [{"sha": "4f5a1f77343b3c32468044c087a9d8475c7e4d04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f5a1f77343b3c32468044c087a9d8475c7e4d04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f5a1f77343b3c32468044c087a9d8475c7e4d04"}], "stats": {"total": 102, "additions": 43, "deletions": 59}, "files": [{"sha": "09fafdc0fe036021e24597f32cf56f079f598a8b", "filename": "gcc/config/mips/osfrose.h", "status": "modified", "additions": 43, "deletions": 59, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdd29d6fc950871512603476a31c2c39461d76a5/gcc%2Fconfig%2Fmips%2Fosfrose.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdd29d6fc950871512603476a31c2c39461d76a5/gcc%2Fconfig%2Fmips%2Fosfrose.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fosfrose.h?ref=cdd29d6fc950871512603476a31c2c39461d76a5", "patch": "@@ -20,55 +20,49 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #define DECSTATION\n #define OSF_OS\n \n+#include \"halfpic.h\"\n+\n #define CPP_PREDEFINES \"-DOSF -DOSF1 -Dbsd4_2 -DMIPSEL -Dhost_mips -Dmips -Dunix -DR3000 -DSYSTYPE_BSD\"\n \n-#define ASM_SPEC\t\"%{mmips-as:\t\t\t\t\t\\\n-\t\t\t\t%{pipe:%e:-pipe not supported}\t\t\\\n-\t\t\t\t%{EL} %{!EL:-EL}\t\t\t\\\n-\t\t\t\t%{EB: %e-EB not supported}\t\t\\\n-\t\t\t\t%{!mrnames: -nocpp}\t\t\t\\\n-\t\t\t\t%{O:-O2} %{O1:-O2} %{O2:-O2} %{O3:-O3}\t\\\n-\t\t\t\t%{g} %{g0} %{g1} %{g2} %{g3}\t\t\\\n-\t\t\t\t%{K} %{Q}}\t\t\t\t\\\n-\t\t \t %{v*: -v}\t\t\t\t\t\\\n-\t\t\t %{G*}\"\n-\n-#define ASM_FINAL_SPEC \"%{mmips-as: %{!mno-mips-tfile:\t\t\t\\\n-\t\t\t\t\\n mips-tfile %{v*: -v} %{d*}\t\t\\\n-\t\t\t\t\t%{K: -I %b.o~} \t\t\t\\\n-\t\t\t\t\t%{!K: %{save-temps: -I %b.o~}}\t\\\n-\t\t\t\t\t%{c:%W{o*}%{!o*:-o %b.o}}%{!c:-o %b.o} \\\n-\t\t\t\t\t%{.s:%i} %{!.s:%g.s}}}\"\n-\n-#define CPP_SPEC\t\"%{.S:\t-D__LANGUAGE_ASSEMBLY__\t\t\t\\\n-\t\t\t\t-D_LANGUAGE_ASSEMBLY\t\t\t\\\n-\t\t\t\t%{!ansi:-DLANGUAGE_ASSEMBLY}}\t\t\\\n-\t\t\t %{.cc:\t-D__LANGUAGE_C_PLUS_PLUS__\t\t\\\n-\t\t\t\t-D_LANGUAGE_C_PLUS_PLUS\t\t\t\\\n-\t\t\t\t%{!ansi:-DLANGUAGE_C_PLUS_PLUS}}\t\\\n-\t\t\t %{.cxx:-D__LANGUAGE_C_PLUS_PLUS__\t\t\\\n-\t\t\t\t-D_LANGUAGE_C_PLUS_PLUS\t\t\t\\\n-\t\t\t\t%{!ansi:-DLANGUAGE_C_PLUS_PLUS}}\t\\\n-\t\t\t %{.C:\t-D__LANGUAGE_C_PLUS_PLUS__\t\t\\\n-\t\t\t\t-D_LANGUAGE_C_PLUS_PLUS\t\t\t\\\n-\t\t\t\t%{!ansi:-DLANGUAGE_C_PLUS_PLUS}}\t\\\n-\t\t\t %{.m:\t-D__LANGUAGE_OBJECTIVE_C__\t\t\\\n-\t\t\t\t-D_LANGUAGE_OBJECTIVE_C\t\t\t\\\n-\t\t\t\t%{!ansi:-DLANGUAGE_OBJECTIVE_C}}\t\\\n-\t\t\t %{!.S:\t-D__LANGUAGE_C__\t\t\t\\\n-\t\t\t\t-D_LANGUAGE_C\t\t\t\t\\\n-\t\t\t\t%{!ansi:-DLANGUAGE_C}}\"\n-\n-#define LINK_SPEC\t\"%{G*}\t\t\t\t\t\t\\\n-\t\t\t %{mmips-as:\t\t\t\t\t\\\n-\t\t\t\t%{EL} %{!EL: -EL}\t\t\t\\\n-\t\t\t\t%{EB: %e-EB not supported}\t\t\\\n-\t\t\t\t%{bestGnum}}\t\t\t\t\\\n-\t\t\t %{!mmips-as:\t\t\t\t\t\\\n-\t\t\t \t%{v*: -v}\t\t\t\t\\\n-\t\t\t\t%{pic-none: -noshrlib} %{noshrlib}\t\\\n-\t\t\t\t%{!pic-none: -warn_nopic}\t\t\\\n-\t\t\t\t%{nostdlib} %{glue}}\"\n+#define ASM_SPEC\t\"\\\n+%{mmips-as: \\\n+\t%{pipe:%e:-pipe not supported} \\\n+\t%{EL} %{!EL:-EL} \\\n+\t%{EB: %e-EB not supported} \\\n+\t%{!mrnames: -nocpp} \\\n+\t%{O:-O2} %{O1:-O2} %{O2:-O2} %{O3:-O3} \\\n+\t%{g} %{g0} %{g1} %{g2} %{g3} \\\n+\t%{K} %{Q}} \\\n+\t%{v*: -v} \\\n+\t%{G*}\"\n+\n+#define ASM_FINAL_SPEC \"\\\n+%{mmips-as: %{!mno-mips-tfile: \\\n+\t\\n mips-tfile %{v*: -v} %{d*} \\\n+\t\t\t%{K: -I %b.o~} \\\n+\t\t\t%{!K: %{save-temps: -I %b.o~}} \\\n+\t\t\t%{c:%W{o*}%{!o*:-o %b.o}}%{!c:-o %b.o} \\\n+\t\t\t%{.s:%i} %{!.s:%g.s}}}\"\n+\n+#define CPP_SPEC \"\\\n+%{.S:\t-D__LANGUAGE_ASSEMBLY %{!ansi:-DLANGUAGE_ASSEMBLY}} \\\n+%{.cc:\t-D__LANGUAGE_C_PLUS_PLUS} \\\n+%{.cxx:\t-D__LANGUAGE_C_PLUS_PLUS} \\\n+%{.C:\t-D__LANGUAGE_C_PLUS_PLUS} \\\n+%{.m:\t-D__LANGUAGE_OBJECTIVE_C} \\\n+%{!.S:\t-D__LANGUAGE_C %{!ansi:-DLANGUAGE_C}}\"\n+\n+#define LINK_SPEC \"\\\n+%{G*} \\\n+%{mmips-as: \\\n+\t%{EL} %{!EL: -EL} \\\n+\t%{EB: %e-EB not supported} \\\n+\t%{bestGnum}} \\\n+%{!mmips-as: \\\n+ \t%{v*: -v} \\\n+\t%{pic-none: -noshrlib} %{noshrlib} \\\n+\t%{!pic-none: -warn_nopic} \\\n+\t%{nostdlib} %{glue}}\"\n \n /* For now, force static libraries instead of shared, but do so that\n    does not use -noshrlib, since the old linker does not provide it.  */\n@@ -88,8 +82,8 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n /* Specify size_t, ptrdiff_t, and wchar_t types.  */\n #define SIZE_TYPE\t\"long unsigned int\"\n-#define PTRDIFF_TYPE\t\"long int\"\n-#define WCHAR_TYPE\t\"long unsigned int\"\n+#define PTRDIFF_TYPE\t\"int\"\n+#define WCHAR_TYPE\t\"unsigned int\"\n #define WCHAR_TYPE_SIZE BITS_PER_WORD\n \n #if 0\n@@ -112,14 +106,4 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    our own exit function.  */\n #define HAVE_ATEXIT\n \n-/* If defined, a C string constant for the assembler operation to\n-   identify the following data as initialization code.  If not\n-   defined, GNU CC will assume such a section does not exist.\n-\n-   OSF/rose doesn't presently have an init section, but this macro\n-   also controls whether or not __main is called from main, collect\n-   will however build an initialization section directly.  */\n-\n-#define INIT_SECTION_ASM_OP \".init\"\n-\n #include \"mips.h\""}]}