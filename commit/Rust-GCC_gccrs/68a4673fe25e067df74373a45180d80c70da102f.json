{"sha": "68a4673fe25e067df74373a45180d80c70da102f", "node_id": "C_kwDOANBUbNoAKDY4YTQ2NzNmZTI1ZTA2N2RmNzQzNzNhNDUxODBkODBjNzBkYTEwMmY", "commit": {"author": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2022-03-28T10:50:44Z"}, "committer": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2022-04-28T18:46:49Z"}, "message": "gcov: Make gcov_seek() static\n\nThis function is only used by gcov_write_length() in the gcov-io.cc file.\n\ngcc/\n\n\t* gcov-io.cc (gcov_seek): Make it static.\n\t* gcov-io.h (struct gcov_summary): Do not mention gcov_seek().\n\nlibgcc/\n\n\t* libgcov.h (gcov_seek): Remove define and declaration.", "tree": {"sha": "3807c804f3cfb9e1bb5ed144e711890aebf7aa73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3807c804f3cfb9e1bb5ed144e711890aebf7aa73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68a4673fe25e067df74373a45180d80c70da102f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a4673fe25e067df74373a45180d80c70da102f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68a4673fe25e067df74373a45180d80c70da102f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a4673fe25e067df74373a45180d80c70da102f/comments", "author": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a6314b040877842ac71e6d9d786fe7a452e51e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a6314b040877842ac71e6d9d786fe7a452e51e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a6314b040877842ac71e6d9d786fe7a452e51e2"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "fee3130f94ad3926c8b628b1c96c0ac7d1d9e20f", "filename": "gcc/gcov-io.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a4673fe25e067df74373a45180d80c70da102f/gcc%2Fgcov-io.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a4673fe25e067df74373a45180d80c70da102f/gcc%2Fgcov-io.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-io.cc?ref=68a4673fe25e067df74373a45180d80c70da102f", "patch": "@@ -294,17 +294,15 @@ gcov_write_filename (const char *filename)\n \n   gcov_write_string (filename);\n }\n-#endif\n \n /* Move to a given position in a gcov file.  */\n \n-GCOV_LINKAGE void\n+static void\n gcov_seek (gcov_position_t base)\n {\n   fseek (gcov_var.file, base, SEEK_SET);\n }\n \n-#if !IN_LIBGCOV\n /* Write a tag TAG and reserve space for the record length. Return a\n    value to be used for gcov_write_length.  */\n "}, {"sha": "204ae0ccf7fc3e0064117fe73c336ce6bfbecde0", "filename": "gcc/gcov-io.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a4673fe25e067df74373a45180d80c70da102f/gcc%2Fgcov-io.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a4673fe25e067df74373a45180d80c70da102f/gcc%2Fgcov-io.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-io.h?ref=68a4673fe25e067df74373a45180d80c70da102f", "patch": "@@ -340,9 +340,9 @@ struct gcov_summary\n /* Functions for reading and writing gcov files. In libgcov you can\n    open the file for reading then writing. Elsewhere you can open the\n    file either for reading or for writing. When reading a file you may\n-   use the gcov_read_* functions, gcov_sync, gcov_position, &\n-   gcov_error. When writing a file you may use the gcov_write\n-   functions, gcov_seek & gcov_error. When a file is to be rewritten\n+   use the gcov_read_* functions, gcov_sync, gcov_position, and\n+   gcov_error. When writing a file you may use the gcov_write*\n+   functions and gcov_error. When a file is to be rewritten\n    you use the functions for reading, then gcov_rewrite then the\n    functions for writing.  Your file may become corrupted if you break\n    these invariants.  */"}, {"sha": "487bd1464cd8e6f9ae4dc1ca25a68b0c8d836a74", "filename": "libgcc/libgcov.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a4673fe25e067df74373a45180d80c70da102f/libgcc%2Flibgcov.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a4673fe25e067df74373a45180d80c70da102f/libgcc%2Flibgcov.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov.h?ref=68a4673fe25e067df74373a45180d80c70da102f", "patch": "@@ -115,7 +115,6 @@ typedef unsigned gcov_type_unsigned __attribute__ ((mode (QI)));\n #define gcov_open __gcov_open\n #define gcov_close __gcov_close\n #define gcov_position __gcov_position\n-#define gcov_seek __gcov_seek\n #define gcov_rewrite __gcov_rewrite\n #define gcov_is_error __gcov_is_error\n #define gcov_write_unsigned __gcov_write_unsigned\n@@ -346,7 +345,6 @@ extern int __gcov_execve (const char *, char  *const [], char *const [])\n GCOV_LINKAGE void gcov_write_summary (gcov_unsigned_t /*tag*/,\n                                       const struct gcov_summary *)\n     ATTRIBUTE_HIDDEN;\n-GCOV_LINKAGE void gcov_seek (gcov_position_t /*position*/) ATTRIBUTE_HIDDEN;\n GCOV_LINKAGE void gcov_rewrite (void) ATTRIBUTE_HIDDEN;\n \n /* \"Counts\" stored in gcda files can be a real counter value, or"}]}