{"sha": "eee335102e36d60367366895729a48b1a24fb23c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVlMzM1MTAyZTM2ZDYwMzY3MzY2ODk1NzI5YTQ4YjFhMjRmYjIzYw==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2015-06-25T16:27:12Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "2015-06-25T16:27:12Z"}, "message": "alias.h (alias_set_type): Move typedef.\n\n\n2015-06-25  Andrew Macleod  <amacleod@redhat.com>\n\n\t* alias.h (alias_set_type): Move typedef.\n\t* coretypes.h (alias_set_type): Relocate typedef here.\n\t* rtl.h: Don't include alias.h.\n\t* jit/jit-common.h: Likewise\n\nFrom-SVN: r224948", "tree": {"sha": "0f8cc4a758ef15235687b6a9e7e151d2b21786d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f8cc4a758ef15235687b6a9e7e151d2b21786d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eee335102e36d60367366895729a48b1a24fb23c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eee335102e36d60367366895729a48b1a24fb23c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eee335102e36d60367366895729a48b1a24fb23c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eee335102e36d60367366895729a48b1a24fb23c/comments", "author": null, "committer": null, "parents": [{"sha": "62f9079a9372e04d7610098c57e7c320d922459b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62f9079a9372e04d7610098c57e7c320d922459b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62f9079a9372e04d7610098c57e7c320d922459b"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "679a0aa7bacf65c2d4477c4ce29937d75a60eb72", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eee335102e36d60367366895729a48b1a24fb23c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eee335102e36d60367366895729a48b1a24fb23c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eee335102e36d60367366895729a48b1a24fb23c", "patch": "@@ -1,3 +1,10 @@\n+2015-06-25  Andrew Macleod  <amacleod@redhat.com>\n+\n+\t* alias.h (alias_set_type): Move typedef.\n+\t* coretypes.h (alias_set_type): Relocate typedef here.\n+\t* rtl.h: Don't include alias.h.\n+\t* jit/jit-common.h: Likewise\n+\n 2015-06-25  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* cgraph.h (cgraph_rtl_info): Move to rtl.h"}, {"sha": "8762effe2f2a707ece840d875923ccc4ccf16e87", "filename": "gcc/alias.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eee335102e36d60367366895729a48b1a24fb23c/gcc%2Falias.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eee335102e36d60367366895729a48b1a24fb23c/gcc%2Falias.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.h?ref=eee335102e36d60367366895729a48b1a24fb23c", "patch": "@@ -20,14 +20,6 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_ALIAS_H\n #define GCC_ALIAS_H\n \n-/* The type of an alias set.  Code currently assumes that variables of\n-   this type can take the values 0 (the alias set which aliases\n-   everything) and -1 (sometimes indicating that the alias set is\n-   unknown, sometimes indicating a memory barrier) and -2 (indicating\n-   that the alias set should be set to a unique value but has not been\n-   set yet).  */\n-typedef int alias_set_type;\n-\n extern alias_set_type new_alias_set (void);\n extern alias_set_type get_alias_set (tree);\n extern alias_set_type get_deref_alias_set (tree);"}, {"sha": "e3cec01f4d8a246fc8b087b423241a07618350d1", "filename": "gcc/coretypes.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eee335102e36d60367366895729a48b1a24fb23c/gcc%2Fcoretypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eee335102e36d60367366895729a48b1a24fb23c/gcc%2Fcoretypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoretypes.h?ref=eee335102e36d60367366895729a48b1a24fb23c", "patch": "@@ -210,6 +210,13 @@ enum var_init_status\n   VAR_INIT_STATUS_INITIALIZED\n };\n \n+/* The type of an alias set.  Code currently assumes that variables of\n+   this type can take the values 0 (the alias set which aliases\n+   everything) and -1 (sometimes indicating that the alias set is\n+   unknown, sometimes indicating a memory barrier) and -2 (indicating\n+   that the alias set should be set to a unique value but has not been\n+   set yet).  */\n+typedef int alias_set_type;\n \n struct edge_def;\n typedef struct edge_def *edge;"}, {"sha": "e5e1a1e688ac71a22eace0f7583cd893702fe243", "filename": "gcc/jit/jit-common.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eee335102e36d60367366895729a48b1a24fb23c/gcc%2Fjit%2Fjit-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eee335102e36d60367366895729a48b1a24fb23c/gcc%2Fjit%2Fjit-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fjit-common.h?ref=eee335102e36d60367366895729a48b1a24fb23c", "patch": "@@ -24,7 +24,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"libgccjit.h\"\n \n #include \"vec.h\"\n-#include \"alias.h\"\n #include \"flags.h\"\n #include \"symtab.h\"\n #include \"inchash.h\""}, {"sha": "37ec7d4c6bf9c1f198e150128295640ee64118bd", "filename": "gcc/rtl.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eee335102e36d60367366895729a48b1a24fb23c/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eee335102e36d60367366895729a48b1a24fb23c/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=eee335102e36d60367366895729a48b1a24fb23c", "patch": "@@ -38,7 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"is-a.h\"\n #endif  /* GENERATOR_FILE */\n \n-#include \"alias.h\"\n #include \"flags.h\"\n \n /* Value used by some passes to \"recognize\" noop moves as valid"}]}