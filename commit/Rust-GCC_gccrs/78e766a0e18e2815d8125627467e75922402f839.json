{"sha": "78e766a0e18e2815d8125627467e75922402f839", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhlNzY2YTBlMThlMjgxNWQ4MTI1NjI3NDY3ZTc1OTIyNDAyZjgzOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-04-04T02:06:24Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-04-04T02:06:24Z"}, "message": "configure.in (gcc_cv_as_leb128): Reject gas before 2.11.\n\n        * configure.in (gcc_cv_as_leb128): Reject gas before 2.11.\n        * configure: Rebuild.\n\nFrom-SVN: r41073", "tree": {"sha": "e0e26ecf95c62055711475e427bb206718ef4b6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0e26ecf95c62055711475e427bb206718ef4b6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78e766a0e18e2815d8125627467e75922402f839", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78e766a0e18e2815d8125627467e75922402f839", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78e766a0e18e2815d8125627467e75922402f839", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78e766a0e18e2815d8125627467e75922402f839/comments", "author": null, "committer": null, "parents": [{"sha": "127644626f2d3fe441486566c2790a159f88654c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/127644626f2d3fe441486566c2790a159f88654c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/127644626f2d3fe441486566c2790a159f88654c"}], "stats": {"total": 65, "additions": 45, "deletions": 20}, "files": [{"sha": "61eafd1693a2398d592cb13962846ca9921ba6ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78e766a0e18e2815d8125627467e75922402f839/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78e766a0e18e2815d8125627467e75922402f839/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78e766a0e18e2815d8125627467e75922402f839", "patch": "@@ -1,3 +1,8 @@\n+2001-04-03  Richard Henderson  <rth@redhat.com>\n+\n+\t* configure.in (gcc_cv_as_leb128): Reject gas before 2.11.\n+\t* configure: Rebuild.\n+\n 2001-04-03  Richard Henderson  <rth@redhat.com>\n \n \t* rtl.h (LCT_THROW): New."}, {"sha": "d89c0e3c529c5dd79034539858c0dce63f8d97c1", "filename": "gcc/configure", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78e766a0e18e2815d8125627467e75922402f839/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78e766a0e18e2815d8125627467e75922402f839/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=78e766a0e18e2815d8125627467e75922402f839", "patch": "@@ -2018,7 +2018,7 @@ EOF\n fi\n \n # Find some useful tools\n-for ac_prog in mawk gawk nawk awk\n+for ac_prog in gawk mawk nawk awk\n do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -6543,12 +6543,21 @@ L1:\n L2:\n EOF\n \tif $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1; then\n-\t\t# GAS versions numbered 2.10.90 do not support uleb128, despite\n-\t\t# appearing to.\n-\t\tif $gcc_cv_as --version | fgrep 2.10.90 > /dev/null; then\n-\t\t\t:\n-\t\telse\n-\t\t\tgcc_cv_as_leb128=\"yes\"\n+\t\tgcc_cv_as_leb128=\"yes\"\n+\n+\t\t# GAS versions before 2.11 do not support uleb128,\n+\t\t# despite appearing to.\n+\t\t# ??? There exists an elf-specific test that will crash\n+\t\t# the assembler.  Perhaps it's better to figure out whether\n+\t\t# arbitrary sections are supported and try the test.\n+\t\tas_ver=`$gcc_cv_as --version 2>/dev/null | head -1`\n+\t\tif echo \"$as_ver\" | grep GNU > /dev/null; then\n+\t\t\tas_ver=`echo $as_ver | sed -e 's/.* //'`\n+\t\t\tas_major=`echo $as_ver | sed 's/\\..*//'`\n+\t\t\tas_minor=`echo $as_ver | sed 's/[^.]*.\\([^.]*\\).*/\\1/'`\n+\t\t\tif test $as_major -eq 2 -a $as_minor -lt 11; then\n+\t\t\t\tgcc_cv_as_leb128=\"no\"\n+\t\t\tfi\n \t\tfi\n \tfi\n \trm -f conftest.s conftest.o conftest.nm1 conftest.nm2\n@@ -6564,7 +6573,7 @@ echo \"$ac_t\"\"$gcc_cv_as_leb128\" 1>&6\n case \"$target\" in \n   sparc*-*-*)\n     echo $ac_n \"checking assembler .register pseudo-op support\"\"... $ac_c\" 1>&6\n-echo \"configure:6568: checking assembler .register pseudo-op support\" >&5\n+echo \"configure:6577: checking assembler .register pseudo-op support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_register_pseudo_op'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -6592,7 +6601,7 @@ EOF\n     fi\n \n     echo $ac_n \"checking assembler supports -relax\"\"... $ac_c\" 1>&6\n-echo \"configure:6596: checking assembler supports -relax\" >&5\n+echo \"configure:6605: checking assembler supports -relax\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_relax_opt'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -6622,7 +6631,7 @@ EOF\n     case \"$tm_file\" in\n     *64*)\n \techo $ac_n \"checking for 64 bit support in assembler ($gcc_cv_as)\"\"... $ac_c\" 1>&6\n-echo \"configure:6626: checking for 64 bit support in assembler ($gcc_cv_as)\" >&5\n+echo \"configure:6635: checking for 64 bit support in assembler ($gcc_cv_as)\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_flags64'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -6667,7 +6676,7 @@ EOF\n \n     if test \"x$gcc_cv_as_flags64\" != xno; then\n \techo $ac_n \"checking for assembler offsetable %lo() support\"\"... $ac_c\" 1>&6\n-echo \"configure:6671: checking for assembler offsetable %lo() support\" >&5\n+echo \"configure:6680: checking for assembler offsetable %lo() support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_offsetable_lo10'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -6706,7 +6715,7 @@ EOF\n \n   i[34567]86-*-*)\n     echo $ac_n \"checking assembler instructions\"\"... $ac_c\" 1>&6\n-echo \"configure:6710: checking assembler instructions\" >&5\n+echo \"configure:6719: checking assembler instructions\" >&5\n     gcc_cv_as_instructions=\n     if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n       if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 9 -o \"$gcc_cv_gas_major_version\" -gt 2; then\n@@ -6735,7 +6744,7 @@ EOF\n esac\n \n echo $ac_n \"checking assembler dwarf2 debug_line support\"\"... $ac_c\" 1>&6\n-echo \"configure:6739: checking assembler dwarf2 debug_line support\" >&5\n+echo \"configure:6748: checking assembler dwarf2 debug_line support\" >&5\n gcc_cv_as_dwarf2_debug_line=no\n # ??? Not all targets support dwarf2 debug_line, even within a version\n # of gas.  Moreover, we need to emit a valid instruction to trigger any\n@@ -6925,7 +6934,7 @@ EOF\n \n \n echo $ac_n \"checking whether to enable maintainer-specific portions of Makefiles\"\"... $ac_c\" 1>&6\n-echo \"configure:6929: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n+echo \"configure:6938: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n     # Check whether --enable-maintainer-mode or --disable-maintainer-mode was given.\n if test \"${enable_maintainer_mode+set}\" = set; then\n   enableval=\"$enable_maintainer_mode\""}, {"sha": "fbde2e6e556d31a9ebf60b01b7478f39dbcbb5d4", "filename": "gcc/configure.in", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78e766a0e18e2815d8125627467e75922402f839/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78e766a0e18e2815d8125627467e75922402f839/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=78e766a0e18e2815d8125627467e75922402f839", "patch": "@@ -1325,12 +1325,23 @@ L1:\n L2:\n EOF\n \tif $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1; then\n-\t\t# GAS versions numbered 2.10.90 do not support uleb128, despite\n-\t\t# appearing to.\n-\t\tif $gcc_cv_as --version | fgrep 2.10.90 > /dev/null; then\n-\t\t\t:\n-\t\telse\n-\t\t\tgcc_cv_as_leb128=\"yes\"\n+\t\tgcc_cv_as_leb128=\"yes\"\n+\n+\t\t# GAS versions before 2.11 do not support uleb128,\n+\t\t# despite appearing to.\n+\t\t# ??? There exists an elf-specific test that will crash\n+\t\t# the assembler.  Perhaps it's better to figure out whether\n+\t\t# arbitrary sections are supported and try the test.\n+\t\tas_ver=`$gcc_cv_as --version 2>/dev/null | head -1`\n+\t\tif echo \"$as_ver\" | grep GNU > /dev/null; then\n+\t\t\tas_ver=`echo $as_ver | sed -e 's/.* //'`\n+\t\t\tas_major=`echo $as_ver | sed 's/\\..*//'`\n+changequote(,)dnl\n+\t\t\tas_minor=`echo $as_ver | sed 's/[^.]*.\\([^.]*\\).*/\\1/'`\n+changequote([,])dnl\n+\t\t\tif test $as_major -eq 2 -a $as_minor -lt 11; then\n+\t\t\t\tgcc_cv_as_leb128=\"no\"\n+\t\t\tfi\n \t\tfi\n \tfi\n \trm -f conftest.s conftest.o conftest.nm1 conftest.nm2"}]}