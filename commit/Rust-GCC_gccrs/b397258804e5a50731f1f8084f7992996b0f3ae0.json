{"sha": "b397258804e5a50731f1f8084f7992996b0f3ae0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM5NzI1ODgwNGU1YTUwNzMxZjFmODA4NGY3OTkyOTk2YjBmM2FlMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-10-06T12:17:53Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-10-06T12:17:53Z"}, "message": "re PR tree-optimization/77855 (wrong code at -O3 on x86_64-linux-gnu (in both 32-bit and 64-bit modes))\n\n2016-10-06  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/77855\n\t* tree-ssa-pre.c (prune_clobbered_mems): Queue exprs to remove\n\tinstead of removing the current item while iterating over the set\n\twhich is not safe.\n\n\t* gcc.dg/torture/pr77855.c: New testcase.\n\nFrom-SVN: r240832", "tree": {"sha": "649109b6e87828a4f4ec949e7392f4ede2ff966f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/649109b6e87828a4f4ec949e7392f4ede2ff966f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b397258804e5a50731f1f8084f7992996b0f3ae0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b397258804e5a50731f1f8084f7992996b0f3ae0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b397258804e5a50731f1f8084f7992996b0f3ae0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b397258804e5a50731f1f8084f7992996b0f3ae0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "139dc3c65114ff2497a0391ca7698992eb57f6cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/139dc3c65114ff2497a0391ca7698992eb57f6cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/139dc3c65114ff2497a0391ca7698992eb57f6cd"}], "stats": {"total": 76, "additions": 74, "deletions": 2}, "files": [{"sha": "cf7505c41c1f78a4ba1ed637f6a9d0748b93f4cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b397258804e5a50731f1f8084f7992996b0f3ae0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b397258804e5a50731f1f8084f7992996b0f3ae0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b397258804e5a50731f1f8084f7992996b0f3ae0", "patch": "@@ -1,3 +1,10 @@\n+2016-10-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/77855\n+\t* tree-ssa-pre.c (prune_clobbered_mems): Queue exprs to remove\n+\tinstead of removing the current item while iterating over the set\n+\twhich is not safe.\n+\n 2016-10-06  James Clarke  <jrtc27@jrtc27.com>\n             Eric Botcazou  <ebotcazou@adacore.com>\n "}, {"sha": "e180375cd7cd8b76f4dc7d6c5fcb7addab2ace4b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b397258804e5a50731f1f8084f7992996b0f3ae0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b397258804e5a50731f1f8084f7992996b0f3ae0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b397258804e5a50731f1f8084f7992996b0f3ae0", "patch": "@@ -1,3 +1,8 @@\n+2016-10-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/77855\n+\t* gcc.dg/torture/pr77855.c: New testcase.\n+\n 2016-10-06  James Clarke  <jrtc27@jrtc27.com>\n             Eric Botcazou  <ebotcazou@adacore.com>\n "}, {"sha": "bec5af320134bd8b7984238eda57797a06b0dc2f", "filename": "gcc/testsuite/gcc.dg/torture/pr77855.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b397258804e5a50731f1f8084f7992996b0f3ae0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr77855.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b397258804e5a50731f1f8084f7992996b0f3ae0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr77855.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr77855.c?ref=b397258804e5a50731f1f8084f7992996b0f3ae0", "patch": "@@ -0,0 +1,48 @@\n+/* { dg-do run } */\n+\n+int a, b = 1, c, e, f, g, k, m, n, o;\n+char d, h, i, j, l; \n+char res[2];\n+\n+void __attribute__ ((noinline,noclone)) fn2 ()\n+{\n+  d = 2;\n+}\n+\n+void fn3 ()\n+{\n+  for (;;)\n+    {\n+      for (; b; b--)\n+\t{\n+\t  fn2 ();  \n+\t  if (e)\n+\t    j = 1;\n+\t  if (f)\n+\t    L1:\n+\t\tk = j | (a & l);\n+\t  for (;;)\n+\t    {\n+\t      __builtin_snprintf (res, 2, \"%d\\n\", d);\n+\t      if (d)\n+\t\tbreak;\n+\t      for (; o; o--)\n+\t\tfor (; n;)\n+\t\t  for (; m; m++)\n+\t\t    ;\n+\t      goto L1;\n+\t    }\n+\t}\n+      g = h;\n+      c = i;\n+      break;\n+    }\n+}\n+\n+int main ()\n+{\n+  fn3 ();\n+  if (res[0] != '2')\n+    __builtin_abort ();\n+  return 0; \n+}"}, {"sha": "4f172005f2633af2e40a0b44d9f3aacd4cbd7309", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b397258804e5a50731f1f8084f7992996b0f3ae0/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b397258804e5a50731f1f8084f7992996b0f3ae0/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=b397258804e5a50731f1f8084f7992996b0f3ae0", "patch": "@@ -2025,9 +2025,17 @@ prune_clobbered_mems (bitmap_set_t set, basic_block block)\n {\n   bitmap_iterator bi;\n   unsigned i;\n+  pre_expr to_remove = NULL;\n \n   FOR_EACH_EXPR_ID_IN_SET (set, i, bi)\n     {\n+      /* Remove queued expr.  */\n+      if (to_remove)\n+\t{\n+\t  bitmap_remove_from_set (set, to_remove);\n+\t  to_remove = NULL;\n+\t}\n+\n       pre_expr expr = expression_for_id (i);\n       if (expr->kind == REFERENCE)\n \t{\n@@ -2041,7 +2049,7 @@ prune_clobbered_mems (bitmap_set_t set, basic_block block)\n \t\t\t\t\t   block, gimple_bb (def_stmt)))\n \t\t      || (gimple_bb (def_stmt) == block\n \t\t\t  && value_dies_in_block_x (expr, block))))\n-\t\tbitmap_remove_from_set (set, expr);\n+\t\tto_remove = expr;\n \t    }\n \t}\n       else if (expr->kind == NARY)\n@@ -2053,9 +2061,13 @@ prune_clobbered_mems (bitmap_set_t set, basic_block block)\n \t     as the available expression might be after the exit point.  */\n \t  if (BB_MAY_NOTRETURN (block)\n \t      && vn_nary_may_trap (nary))\n-\t    bitmap_remove_from_set (set, expr);\n+\t    to_remove = expr;\n \t}\n     }\n+\n+  /* Remove queued expr.  */\n+  if (to_remove)\n+    bitmap_remove_from_set (set, to_remove);\n }\n \n static sbitmap has_abnormal_preds;"}]}