{"sha": "66f49f07d85b002777c45e8f3d1c529ecb65c1cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZmNDlmMDdkODViMDAyNzc3YzQ1ZThmM2QxYzUyOWVjYjY1YzFjZg==", "commit": {"author": {"name": "Mike Frysinger", "email": "vapier@gentoo.org", "date": "2016-01-05T20:23:30Z"}, "committer": {"name": "Mike Frysinger", "email": "vapier@gcc.gnu.org", "date": "2016-01-05T20:23:30Z"}, "message": "libiberty: {count,dup,write}argv: constify argv input slightly\n\nWould be more useful if we could use \"const char * const *\", but there's\na long standing bug where gcc warns about incompatible pointers when you\ntry to pass in \"char **\".  We can at least constify the array itself as\ngcc will not warn in that case.\n\nFrom-SVN: r232089", "tree": {"sha": "e33cdcaa1dabbad9bd07bef692c837f46907a560", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e33cdcaa1dabbad9bd07bef692c837f46907a560"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66f49f07d85b002777c45e8f3d1c529ecb65c1cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66f49f07d85b002777c45e8f3d1c529ecb65c1cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66f49f07d85b002777c45e8f3d1c529ecb65c1cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66f49f07d85b002777c45e8f3d1c529ecb65c1cf/comments", "author": {"login": "vapier", "id": 176950, "node_id": "MDQ6VXNlcjE3Njk1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vapier", "html_url": "https://github.com/vapier", "followers_url": "https://api.github.com/users/vapier/followers", "following_url": "https://api.github.com/users/vapier/following{/other_user}", "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vapier/subscriptions", "organizations_url": "https://api.github.com/users/vapier/orgs", "repos_url": "https://api.github.com/users/vapier/repos", "events_url": "https://api.github.com/users/vapier/events{/privacy}", "received_events_url": "https://api.github.com/users/vapier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "acf93f1edc9c6148ff34499975acf2f4a7cc9e75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acf93f1edc9c6148ff34499975acf2f4a7cc9e75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acf93f1edc9c6148ff34499975acf2f4a7cc9e75"}], "stats": {"total": 35, "additions": 23, "deletions": 12}, "files": [{"sha": "6d1264845b5ebb35264313ace814c4034d915995", "filename": "include/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66f49f07d85b002777c45e8f3d1c529ecb65c1cf/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66f49f07d85b002777c45e8f3d1c529ecb65c1cf/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=66f49f07d85b002777c45e8f3d1c529ecb65c1cf", "patch": "@@ -1,3 +1,8 @@\n+2016-01-05  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* libiberty.h (dupargv): Change arg to char * const *.\n+\t(writeargv, countargv): Likewise.\n+\n 2015-11-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* vtv-change-permission.h (VTV_PAGE_SIZE) [__sun__ && __svr4__ &&"}, {"sha": "a9c885fc67042fdc4e169fc48d6f788f1d62e6d9", "filename": "include/libiberty.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66f49f07d85b002777c45e8f3d1c529ecb65c1cf/include%2Flibiberty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66f49f07d85b002777c45e8f3d1c529ecb65c1cf/include%2Flibiberty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Flibiberty.h?ref=66f49f07d85b002777c45e8f3d1c529ecb65c1cf", "patch": "@@ -80,19 +80,19 @@ extern void freeargv (char **);\n /* Duplicate an argument vector. Allocates memory using malloc.  Use\n    freeargv to free the vector.  */\n \n-extern char **dupargv (char **) ATTRIBUTE_MALLOC;\n+extern char **dupargv (char * const *) ATTRIBUTE_MALLOC;\n \n /* Expand \"@file\" arguments in argv.  */\n \n extern void expandargv (int *, char ***);\n \n /* Write argv to an @-file, inserting necessary quoting.  */\n \n-extern int writeargv (char **, FILE *);\n+extern int writeargv (char * const *, FILE *);\n \n /* Return the number of elements in argv.  */\n \n-extern int countargv (char**);\n+extern int countargv (char * const *);\n \n /* Return the last component of a path name.  Note that we can't use a\n    prototype here because the parameter is declared inconsistently"}, {"sha": "1d2ee4ca4f5ea5400469ba8b227ff36fa174848c", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66f49f07d85b002777c45e8f3d1c529ecb65c1cf/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66f49f07d85b002777c45e8f3d1c529ecb65c1cf/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=66f49f07d85b002777c45e8f3d1c529ecb65c1cf", "patch": "@@ -1,3 +1,9 @@\n+2016-01-05  Mike Frysinger  <vapier@gentoo.org>\n+\n+\t* argv.c (dupargv): Change arg to char * const *.  Update comment.\n+\t(writeargv, countargv): Likewise.\n+\t* functions.texi (dupargv, writeargv, countargv): Likewise.\n+\n 2016-01-05  Mike Frysinger  <vapier@gentoo.org>\n \n \t* argv.c (dupargv): Replace strlen/xmalloc/strcpy with xstrdup."}, {"sha": "994dd3531c00952f79dbdabf4341cbea85ac22c8", "filename": "libiberty/argv.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66f49f07d85b002777c45e8f3d1c529ecb65c1cf/libiberty%2Fargv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66f49f07d85b002777c45e8f3d1c529ecb65c1cf/libiberty%2Fargv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fargv.c?ref=66f49f07d85b002777c45e8f3d1c529ecb65c1cf", "patch": "@@ -49,7 +49,7 @@ Boston, MA 02110-1301, USA.  */\n \n /*\n \n-@deftypefn Extension char** dupargv (char **@var{vector})\n+@deftypefn Extension char** dupargv (char * const *@var{vector})\n \n Duplicate an argument vector.  Simply scans through @var{vector},\n duplicating each argument until the terminating @code{NULL} is found.\n@@ -62,7 +62,7 @@ argument vector.\n */\n \n char **\n-dupargv (char **argv)\n+dupargv (char * const *argv)\n {\n   int argc;\n   char **copy;\n@@ -279,7 +279,7 @@ char **buildargv (const char *input)\n \n /*\n \n-@deftypefn Extension int writeargv (const char **@var{argv}, FILE *@var{file})\n+@deftypefn Extension int writeargv (char * const *@var{argv}, FILE *@var{file})\n \n Write each member of ARGV, handling all necessary quoting, to the file\n named by FILE, separated by whitespace.  Return 0 on success, non-zero\n@@ -290,7 +290,7 @@ if an error occurred while writing to FILE.\n */\n \n int\n-writeargv (char **argv, FILE *f)\n+writeargv (char * const *argv, FILE *f)\n {\n   int status = 0;\n \n@@ -463,7 +463,7 @@ expandargv (int *argcp, char ***argvp)\n \n /*\n \n-@deftypefn Extension int countargv (char **@var{argv})\n+@deftypefn Extension int countargv (char * const *@var{argv})\n \n Return the number of elements in @var{argv}.\n Returns zero if @var{argv} is NULL.\n@@ -473,7 +473,7 @@ Returns zero if @var{argv} is NULL.\n */\n \n int\n-countargv (char **argv)\n+countargv (char * const *argv)\n {\n   int argc;\n "}, {"sha": "24dcc373ac044eb1fe736f735f06a1311db65ab4", "filename": "libiberty/functions.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66f49f07d85b002777c45e8f3d1c529ecb65c1cf/libiberty%2Ffunctions.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66f49f07d85b002777c45e8f3d1c529ecb65c1cf/libiberty%2Ffunctions.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ffunctions.texi?ref=66f49f07d85b002777c45e8f3d1c529ecb65c1cf", "patch": "@@ -176,7 +176,7 @@ Concatenate zero or more of strings and return the result in freshly\n @end deftypefn\n \n @c argv.c:470\n-@deftypefn Extension int countargv (char **@var{argv})\n+@deftypefn Extension int countargv (char * const *@var{argv})\n \n Return the number of elements in @var{argv}.\n Returns zero if @var{argv} is NULL.\n@@ -213,7 +213,7 @@ make it easy to compose the values of multiple blocks.\n @end deftypefn\n \n @c argv.c:52\n-@deftypefn Extension char** dupargv (char **@var{vector})\n+@deftypefn Extension char** dupargv (char * const *@var{vector})\n \n Duplicate an argument vector.  Simply scans through @var{vector},\n duplicating each argument until the terminating @code{NULL} is found.\n@@ -1915,7 +1915,7 @@ does the return value.  The third argument is unused in @libib{}.\n @end deftypefn\n \n @c argv.c:286\n-@deftypefn Extension int writeargv (const char **@var{argv}, FILE *@var{file})\n+@deftypefn Extension int writeargv (char * const *@var{argv}, FILE *@var{file})\n \n Write each member of ARGV, handling all necessary quoting, to the file\n named by FILE, separated by whitespace.  Return 0 on success, non-zero"}]}