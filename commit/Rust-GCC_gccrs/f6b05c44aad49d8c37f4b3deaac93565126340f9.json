{"sha": "f6b05c44aad49d8c37f4b3deaac93565126340f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZiMDVjNDRhYWQ0OWQ4YzM3ZjRiM2RlYWFjOTM1NjUxMjYzNDBmOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-09-20T13:24:45Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-09-20T13:24:45Z"}, "message": "PR libstdc++/82262 fix std::hash<std::optional<const T>>\n\n\tPR libstdc++/82262\n\t* include/std/optional (__optional_hash_call_base): Add template\n\tparameter for remove_const_t<_Tp> and use it consistently.\n\t* testsuite/20_util/optional/hash.cc: Test optional<const T>.\n\nFrom-SVN: r253010", "tree": {"sha": "ad4f0a07abad59d603a2d3a532ece3c58c21f801", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad4f0a07abad59d603a2d3a532ece3c58c21f801"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6b05c44aad49d8c37f4b3deaac93565126340f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6b05c44aad49d8c37f4b3deaac93565126340f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6b05c44aad49d8c37f4b3deaac93565126340f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6b05c44aad49d8c37f4b3deaac93565126340f9/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c16e99cf7731729290b96af4ec3b4fe6c68b63a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c16e99cf7731729290b96af4ec3b4fe6c68b63a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c16e99cf7731729290b96af4ec3b4fe6c68b63a"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "6c92731ae6a9aaa71cfa3a9ce82e5061478819e0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6b05c44aad49d8c37f4b3deaac93565126340f9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6b05c44aad49d8c37f4b3deaac93565126340f9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f6b05c44aad49d8c37f4b3deaac93565126340f9", "patch": "@@ -1,3 +1,10 @@\n+2017-09-20  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/82262\n+\t* include/std/optional (__optional_hash_call_base): Add template\n+\tparameter for remove_const_t<_Tp> and use it consistently.\n+\t* testsuite/20_util/optional/hash.cc: Test optional<const T>.\n+\n 2017-09-19  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/71500"}, {"sha": "2df9b5443efdb6c4b7c084ca1e1b3360e57c3938", "filename": "libstdc++-v3/include/std/optional", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6b05c44aad49d8c37f4b3deaac93565126340f9/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6b05c44aad49d8c37f4b3deaac93565126340f9/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional?ref=f6b05c44aad49d8c37f4b3deaac93565126340f9", "patch": "@@ -1005,23 +1005,23 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   // Hash.\n \n-  template<typename _Tp, bool\n-           = __poison_hash<remove_const_t<_Tp>>::__enable_hash_call>\n+  template<typename _Tp, typename _Up = remove_const_t<_Tp>,\n+           bool = __poison_hash<_Up>::__enable_hash_call>\n     struct __optional_hash_call_base\n     {\n       size_t\n       operator()(const optional<_Tp>& __t) const\n-      noexcept(noexcept(hash<_Tp> {}(*__t)))\n+      noexcept(noexcept(hash<_Up>{}(*__t)))\n       {\n         // We pick an arbitrary hash for disengaged optionals which hopefully\n         // usual values of _Tp won't typically hash to.\n         constexpr size_t __magic_disengaged_hash = static_cast<size_t>(-3333);\n-        return __t ? hash<_Tp> {}(*__t) : __magic_disengaged_hash;\n+        return __t ? hash<_Up>{}(*__t) : __magic_disengaged_hash;\n       }\n     };\n \n-  template<typename _Tp>\n-    struct __optional_hash_call_base<_Tp, false> {};\n+  template<typename _Tp, typename _Up>\n+    struct __optional_hash_call_base<_Tp, _Up, false> {};\n \n   template<typename _Tp>\n     struct hash<optional<_Tp>>"}, {"sha": "35ae51b947a8155c17277fa8016ce6d666986475", "filename": "libstdc++-v3/testsuite/20_util/optional/hash.cc", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6b05c44aad49d8c37f4b3deaac93565126340f9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fhash.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6b05c44aad49d8c37f4b3deaac93565126340f9/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fhash.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fhash.cc?ref=f6b05c44aad49d8c37f4b3deaac93565126340f9", "patch": "@@ -29,14 +29,23 @@ template<class T>\n auto f(...) -> decltype(std::false_type());\n \n static_assert(!decltype(f<S>(0))::value, \"\");\n-static_assert(!std::is_invocable_v<\n-    std::hash<std::optional<S>>&, std::optional<S> const&> );\n-static_assert(std::is_invocable_v<\n-    std::hash<std::optional<int>>&, std::optional<int> const&> );\n+\n+template<typename T>\n+constexpr bool hashable()\n+{ return std::is_invocable_v<std::hash<T>&, const T&>; }\n+\n+static_assert(!hashable<std::optional<S>>());\n+static_assert(!hashable<std::optional<const S>>());\n+static_assert(hashable<std::optional<int>>());\n+static_assert(hashable<std::optional<const int>>());\n \n int main()\n {\n   int x = 42;\n   std::optional<int> x2 = 42;\n   VERIFY(std::hash<int>()(x) == std::hash<std::optional<int>>()(x2));\n+\n+  // PR libstdc++/82262\n+  std::optional<const int> x3 = x2;\n+  VERIFY(std::hash<int>()(x) == std::hash<std::optional<const int>>()(x3));\n }"}]}