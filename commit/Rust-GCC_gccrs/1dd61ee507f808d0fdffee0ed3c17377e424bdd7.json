{"sha": "1dd61ee507f808d0fdffee0ed3c17377e424bdd7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRkNjFlZTUwN2Y4MDhkMGZkZmZlZTBlZDNjMTczNzdlNDI0YmRkNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-09-29T10:38:19Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-09-29T10:38:19Z"}, "message": "guality.exp (gdb-test): New proc for use in dg-final.\n\n\t* gcc.dg/guality/guality.exp (gdb-test): New proc for use in dg-final.\n\t* gcc.dg/guality/pr41353-1.c: New test.\n\nFrom-SVN: r152271", "tree": {"sha": "f9cd28a3263479ce74ac83618db228398b55fb40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9cd28a3263479ce74ac83618db228398b55fb40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1dd61ee507f808d0fdffee0ed3c17377e424bdd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dd61ee507f808d0fdffee0ed3c17377e424bdd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dd61ee507f808d0fdffee0ed3c17377e424bdd7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dd61ee507f808d0fdffee0ed3c17377e424bdd7/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c7ac4fb53d99bc86133fec643cf010685623382c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7ac4fb53d99bc86133fec643cf010685623382c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7ac4fb53d99bc86133fec643cf010685623382c"}], "stats": {"total": 152, "additions": 152, "deletions": 0}, "files": [{"sha": "1894032299d4cb12ec33465e771a56a3d23d6f91", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dd61ee507f808d0fdffee0ed3c17377e424bdd7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dd61ee507f808d0fdffee0ed3c17377e424bdd7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1dd61ee507f808d0fdffee0ed3c17377e424bdd7", "patch": "@@ -1,3 +1,8 @@\n+2009-09-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/guality/guality.exp (gdb-test): New proc for use in dg-final.\n+\t* gcc.dg/guality/pr41353-1.c: New test.\n+\n 2009-09-29  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/39626"}, {"sha": "b3f3319b102f3f49ed33217e9d9f32ad287fa8b1", "filename": "gcc/testsuite/gcc.dg/guality/guality.exp", "status": "modified", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dd61ee507f808d0fdffee0ed3c17377e424bdd7/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fguality.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dd61ee507f808d0fdffee0ed3c17377e424bdd7/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fguality.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fguality.exp?ref=1dd61ee507f808d0fdffee0ed3c17377e424bdd7", "patch": "@@ -15,8 +15,94 @@ proc check_guality {args} {\n     return $ret\n }\n \n+# Utility for testing variable values using gdb, invoked via dg-final.\n+# Call pass if variable has the desired value, otherwise fail.\n+#\n+# Argument 0 is the line number on which to put a breakpoint\n+# Argument 1 is the name of the variable to be checked\n+# Argument 2 is the expected value of the variable\n+# Argument 3 handles expected failures and the like\n+proc gdb-test { args } {\n+    if { ![isnative] || [is_remote target] } { return }\n+\n+    if { [llength $args] >= 4 } {\n+\tswitch [dg-process-target [lindex $args 3]] {\n+\t    \"S\" { }\n+\t    \"N\" { return }\n+\t    \"F\" { setup_xfail \"*-*-*\" }\n+\t    \"P\" { }\n+\t}\n+    }\n+\n+    # This assumes that we are three frames down from dg-test, and that\n+    # it still stores the filename of the testcase in a local variable \"name\".\n+    # A cleaner solution would require a new DejaGnu release.\n+    upvar 2 name testcase\n+    upvar 2 prog prog\n+\n+    set gdb_name $::env(GUALITY_GDB_NAME)\n+    set testname \"$testcase line [lindex $args 0] [lindex $args 1] == [lindex $args 2]\"\n+    set output_file \"[file rootname [file tail $prog]].exe\"\n+    set cmd_file \"[file rootname [file tail $prog]].gdb\"\n+\n+    set fd [open $cmd_file \"w\"]\n+    puts $fd \"break [lindex $args 0]\"\n+    puts $fd \"run\"\n+    puts $fd \"print [lindex $args 1]\"\n+    puts $fd \"print [lindex $args 2]\"\n+    puts $fd \"quit\"\n+    close $fd\n+\n+    send_log \"Spawning: $gdb_name -nx -nw -quiet -x $cmd_file ./$output_file\\n\"\n+    set res [remote_spawn target \"$gdb_name -nx -nw -quiet -x $cmd_file ./$output_file\"]\n+    if { $res < 0 || $res == \"\" } {\n+\tunsupported \"$testname\"\n+\treturn\n+    }\n+\n+    remote_expect target [timeout_value] {\n+\t-re {[\\n\\r]\\$1 = ([^\\n\\r]*)[\\n\\r]+\\$2 = ([^\\n\\r]*)[\\n\\r]} {\n+\t    set first $expect_out(1,string)\n+\t    set second $expect_out(2,string)\n+\t    if { $first == $second } {\n+\t\tpass \"$testname\"\n+\t    } else {\n+\t\tsend_log \"$first != $second\\n\"\n+\t\tfail \"$testname\"\n+\t    }\n+\t    remote_close target\n+\t    return\n+\t}\n+\t# Too old GDB\n+\t-re \"Unhandled dwarf expression|Error in sourced command file\" {\n+\t    unsupported \"$testname\"\n+\t    remote_close target\n+\t    return\n+\t}\n+\ttimeout {\n+\t    unsupported \"$testname\"\n+\t    remote_close target\n+\t    return\n+\t}\n+    }\n+\n+    remote_close target\n+    unsupported \"$testname\"\n+    return\n+}\n+\n dg-init\n \n+global GDB\n+if ![info exists ::env(GUALITY_GDB_NAME)] {\n+    if [info exists GDB] {\n+\tset guality_gdb_name \"$GDB\"\n+    } else {\n+\tset guality_gdb_name \"[transform gdb]\"\n+    }\n+    setenv GUALITY_GDB_NAME \"$guality_gdb_name\"\n+}\n+\n if {[check_guality \"\n   #include \\\"$srcdir/$subdir/guality.h\\\"\n   volatile long int varl = 6;\n@@ -28,4 +114,9 @@ if {[check_guality \"\n \"]} {\n   gcc-dg-runtest [lsort [glob $srcdir/$subdir/*.c]] \"\"\n }\n+\n+if [info exists guality_gdb_name] {\n+    unsetenv GUALITY_GDB_NAME\n+}\n+\n dg-finish"}, {"sha": "29ba7351677f06d048115c79af42169690a8b415", "filename": "gcc/testsuite/gcc.dg/guality/pr41353-1.c", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dd61ee507f808d0fdffee0ed3c17377e424bdd7/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr41353-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dd61ee507f808d0fdffee0ed3c17377e424bdd7/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr41353-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr41353-1.c?ref=1dd61ee507f808d0fdffee0ed3c17377e424bdd7", "patch": "@@ -0,0 +1,56 @@\n+/* PR debug/41353 */\n+/* { dg-do run } */\n+/* { dg-options \"-g\" } */\n+\n+int vari = 17, varj;\n+\n+__attribute__((noinline)) int\n+f1 (void)\n+{\n+  /* { dg-final { gdb-test 17 \"vari\" \"17\" } } */\n+  int vari1 = 2 * vari; /* { dg-final { gdb-test 17 \"vari1\" \"2 * 17\" } } */\n+  int vari2 = 3 * vari; /* { dg-final { gdb-test 17 \"vari2\" \"3 * 17\" } } */\n+  int vari3 = 2 * vari; /* { dg-final { gdb-test 17 \"vari3\" \"2 * 17\" } } */\n+  int vari4 = 3 * vari; /* { dg-final { gdb-test 17 \"vari4\" \"3 * 17\" } } */\n+  int vari5 = 4 * vari; /* { dg-final { gdb-test 17 \"vari5\" \"4 * 17\" } } */\n+  int vari6 = 5 * vari; /* { dg-final { gdb-test 17 \"vari6\" \"5 * 17\" } } */\n+  return varj;\n+}\n+\n+__attribute__((noinline)) int\n+f2 (int i, int j)\n+{\n+  j += i;\n+  /* { dg-final { gdb-test 28 \"i\" \"37\" } } */\n+  /* { dg-final { gdb-test 28 \"j\" \"28 + 37\" { xfail *-*-* } } } */\n+  int i1 = 2 * i; /* { dg-final { gdb-test 28 \"i1\" \"2 * 37\" } } */\n+  int i2 = 3 * i; /* { dg-final { gdb-test 28 \"i2\" \"3 * 37\" } } */\n+  return j;\n+}\n+\n+__attribute__((noinline)) int\n+f3 (int i)\n+{\n+  asm volatile (\"\" : \"+r\" (i));\n+  /* { dg-final { gdb-test 39 \"i\" \"12\" } } */\n+  int i1 = 2 * i; /* { dg-final { gdb-test 39 \"i1\" \"2 * 12\" } } */\n+  int i2 = 2 * i; /* { dg-final { gdb-test 39 \"i2\" \"2 * 12\" } } */\n+  int i3 = 3 * i; /* { dg-final { gdb-test 39 \"i3\" \"3 * 12\" } } */\n+  return i;\n+}\n+\n+int (*volatile fnp1) (void) = f1;\n+int (*volatile fnp2) (int, int) = f2;\n+int (*volatile fnp3) (int) = f3;\n+\n+int\n+main (int argc, char *argv[])\n+{\n+  asm volatile (\"\" : : \"r\" (&fnp1) : \"memory\");\n+  asm volatile (\"\" : : \"r\" (&fnp2) : \"memory\");\n+  asm volatile (\"\" : : \"r\" (&fnp3) : \"memory\");\n+  fnp1 ();\n+  fnp2 (37, 28);\n+  fnp3 (12);\n+  return 0;\n+}"}]}