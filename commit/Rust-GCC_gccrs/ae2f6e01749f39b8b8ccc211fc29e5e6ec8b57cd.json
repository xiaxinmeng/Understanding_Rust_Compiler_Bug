{"sha": "ae2f6e01749f39b8b8ccc211fc29e5e6ec8b57cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUyZjZlMDE3NDlmMzliOGI4Y2NjMjExZmMyOWU1ZTZlYzhiNTdjZA==", "commit": {"author": {"name": "Thomas Rodgers", "email": "rodgert@twrodgers.com", "date": "2021-04-22T01:12:03Z"}, "committer": {"name": "Thomas Rodgers", "email": "rodgert@twrodgers.com", "date": "2021-04-22T14:34:02Z"}, "message": "libstdc++: Fix \"bare\" notifications dropped by waiters check\n\nFor types that track whether or not there extant waiters (e.g.\nsemaphore) internally, the __atomic_notify_address_bare() call was\nintroduced to avoid the overhead of loading the atomic count of\nwaiters. For platforms that don't have Futex, however, there was\nstill a check for waiters, and seeing that there are none (because\nin the bare case, the count is not incremented), the notification\nis dropped. This commit addresses that case.\n\nlibstdc++-v3/ChangeLog:\n\t* include/bits/atomic_wait.h: Always notify waiters in the\n\tcase of 'bare' address notification.", "tree": {"sha": "faa679184d18d0f257388228947b4347d7757b00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/faa679184d18d0f257388228947b4347d7757b00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae2f6e01749f39b8b8ccc211fc29e5e6ec8b57cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae2f6e01749f39b8b8ccc211fc29e5e6ec8b57cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae2f6e01749f39b8b8ccc211fc29e5e6ec8b57cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae2f6e01749f39b8b8ccc211fc29e5e6ec8b57cd/comments", "author": {"login": "rodgert", "id": 120839, "node_id": "MDQ6VXNlcjEyMDgzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/120839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodgert", "html_url": "https://github.com/rodgert", "followers_url": "https://api.github.com/users/rodgert/followers", "following_url": "https://api.github.com/users/rodgert/following{/other_user}", "gists_url": "https://api.github.com/users/rodgert/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodgert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodgert/subscriptions", "organizations_url": "https://api.github.com/users/rodgert/orgs", "repos_url": "https://api.github.com/users/rodgert/repos", "events_url": "https://api.github.com/users/rodgert/events{/privacy}", "received_events_url": "https://api.github.com/users/rodgert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rodgert", "id": 120839, "node_id": "MDQ6VXNlcjEyMDgzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/120839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodgert", "html_url": "https://github.com/rodgert", "followers_url": "https://api.github.com/users/rodgert/followers", "following_url": "https://api.github.com/users/rodgert/following{/other_user}", "gists_url": "https://api.github.com/users/rodgert/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodgert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodgert/subscriptions", "organizations_url": "https://api.github.com/users/rodgert/orgs", "repos_url": "https://api.github.com/users/rodgert/repos", "events_url": "https://api.github.com/users/rodgert/events{/privacy}", "received_events_url": "https://api.github.com/users/rodgert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cda606d08d6196b76524c7b6ad51d87fed0d54b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cda606d08d6196b76524c7b6ad51d87fed0d54b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cda606d08d6196b76524c7b6ad51d87fed0d54b"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "984ed70f16c986b504572de58823d8f2f8f4233e", "filename": "libstdc++-v3/include/bits/atomic_wait.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae2f6e01749f39b8b8ccc211fc29e5e6ec8b57cd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_wait.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae2f6e01749f39b8b8ccc211fc29e5e6ec8b57cd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_wait.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fatomic_wait.h?ref=ae2f6e01749f39b8b8ccc211fc29e5e6ec8b57cd", "patch": "@@ -226,9 +226,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       }\n \n       void\n-      _M_notify(const __platform_wait_t* __addr, bool __all) noexcept\n+      _M_notify(const __platform_wait_t* __addr, bool __all, bool __bare) noexcept\n       {\n-\tif (!_M_waiting())\n+\tif (!(__bare || _M_waiting()))\n \t  return;\n \n #ifdef _GLIBCXX_HAVE_PLATFORM_WAIT\n@@ -304,11 +304,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  }\n \n \tvoid\n-\t_M_notify(bool __all)\n+\t_M_notify(bool __all, bool __bare = false)\n \t{\n \t  if (_M_addr == &_M_w._M_ver)\n \t    __atomic_fetch_add(_M_addr, 1, __ATOMIC_ACQ_REL);\n-\t  _M_w._M_notify(_M_addr, __all);\n+\t  _M_w._M_notify(_M_addr, __all, __bare);\n \t}\n \n \ttemplate<typename _Up, typename _ValFn,\n@@ -452,7 +452,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     __atomic_notify_address(const _Tp* __addr, bool __all) noexcept\n     {\n       __detail::__bare_wait __w(__addr);\n-      __w._M_notify(__all);\n+      __w._M_notify(__all, true);\n     }\n \n   // This call is to be used by atomic types which track contention externally\n@@ -464,7 +464,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     __detail::__platform_notify(__addr, __all);\n #else\n     __detail::__bare_wait __w(__addr);\n-    __w._M_notify(__all);\n+    __w._M_notify(__all, true);\n #endif\n   }\n _GLIBCXX_END_NAMESPACE_VERSION"}]}