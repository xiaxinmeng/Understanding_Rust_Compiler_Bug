{"sha": "4dfa69619aac0e073659414c99bbbc2793b2e922", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRmYTY5NjE5YWFjMGUwNzM2NTk0MTRjOTliYmJjMjc5M2IyZTkyMg==", "commit": {"author": {"name": "Mumit Khan", "email": "khan@xraylith.wisc.edu", "date": "1998-01-17T21:37:48Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-17T21:37:48Z"}, "message": "configure.in (NON_UNIX_STDIO): Define if MINGW32.\n\n        * configure.in (NON_UNIX_STDIO): Define if MINGW32.\n        (NON_ANSI_RW_MODE): Do not define for CYGWIN32 or MINGW32.\n        * libI77/rawio.h: Don't providing conflicting declarations for\n        read() and write(). MINGW32 header files use \"const\" quals.\n        * libF77/s_paus.c: _WIN32 does not have pause().\n\nFrom-SVN: r17397", "tree": {"sha": "80d890652dd271f5af6631f44a96367159df50cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80d890652dd271f5af6631f44a96367159df50cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4dfa69619aac0e073659414c99bbbc2793b2e922", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dfa69619aac0e073659414c99bbbc2793b2e922", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dfa69619aac0e073659414c99bbbc2793b2e922", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dfa69619aac0e073659414c99bbbc2793b2e922/comments", "author": null, "committer": null, "parents": [{"sha": "a3105a8956f319e63594d92be80f10d87f3b23c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3105a8956f319e63594d92be80f10d87f3b23c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3105a8956f319e63594d92be80f10d87f3b23c7"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "47e86f466c09dcf1f331519360702d17c5448637", "filename": "gcc/f/runtime/ChangeLog.egcs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dfa69619aac0e073659414c99bbbc2793b2e922/gcc%2Ff%2Fruntime%2FChangeLog.egcs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dfa69619aac0e073659414c99bbbc2793b2e922/gcc%2Ff%2Fruntime%2FChangeLog.egcs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FChangeLog.egcs?ref=4dfa69619aac0e073659414c99bbbc2793b2e922", "patch": "@@ -1,3 +1,13 @@\n+Sat Jan 17 22:40:31 1998  Mumit Khan <khan@xraylith.wisc.edu>\n+       \n+\t* configure.in (NON_UNIX_STDIO): Define if MINGW32.\n+\t(NON_ANSI_RW_MODE): Do not define for CYGWIN32 or MINGW32.\n+\n+\t* libI77/rawio.h: Don't providing conflicting declarations for\n+\tread() and write(). MINGW32 header files use \"const\" quals.\n+\n+\t* libF77/s_paus.c: _WIN32 does not have pause().\n+\n Tue Nov 18 09:49:04 1997  Mumit Khan   (khan@xraylith.wisc.edu)\n \n \t* libI77/close.c (f_exit): Reset f__init so that f_clos does not"}, {"sha": "f216731e04a745e754c2b6e68a41f7c6854e0068", "filename": "gcc/f/runtime/configure.in", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dfa69619aac0e073659414c99bbbc2793b2e922/gcc%2Ff%2Fruntime%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dfa69619aac0e073659414c99bbbc2793b2e922/gcc%2Ff%2Fruntime%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2Fconfigure.in?ref=4dfa69619aac0e073659414c99bbbc2793b2e922", "patch": "@@ -118,6 +118,19 @@ AC_CACHE_VAL(g77_cv_sys_cygwin32,\n   g77_cv_sys_cygwin32=no))\n AC_MSG_RESULT($g77_cv_sys_cygwin32)\n \n+# ditto for mingw32.\n+AC_MSG_CHECKING([for mingw32])\n+AC_CACHE_VAL(g77_cv_sys_mingw32,\n+  AC_EGREP_CPP(yes,\n+  [#ifdef __MINGW32__\n+  yes\n+#endif\n+],\n+  g77_cv_sys_mingw32=yes,\n+  g77_cv_sys_mingw32=no))\n+AC_MSG_RESULT($g77_cv_sys_mingw32)\n+\n+\n AC_CHECK_HEADER(fcntl.h,\n    test $g77_cv_header_posix = yes && AC_DEFINE(_POSIX_SOURCE),\n    AC_DEFINE(NO_FCNTL) AC_DEFINE(OPEN_DECL))\n@@ -141,10 +154,12 @@ fi\n \n # This should always succeed on unix.\n # Apparently positive result on cygwin loses re. NON_UNIX_STDIO\n-# (as of cygwin b18).\n+# (as of cygwin b18). Likewise on mingw.\n AC_CHECK_FUNC(fstat)\n AC_MSG_CHECKING([need for NON_UNIX_STDIO])\n-if test $g77_cv_sys_cygwin32 = yes || test $ac_cv_func_fstat = no; then\n+if test $g77_cv_sys_cygwin32 = yes \\\n+  || test $g77_cv_sys_mingw32 = yes \\\n+  || test $ac_cv_func_fstat = no; then\n   AC_MSG_RESULT(yes)\n   AC_DEFINE(NON_UNIX_STDIO)\n else\n@@ -215,7 +230,7 @@ AC_EGREP_CPP(yes,\n   yes\n #endif\n ], is_unix=yes, is_unix=no)\n-if test $g77_cv_sys_cygwin32 = yes; then\n+if test $g77_cv_sys_cygwin32 = yes || test $g77_cv_sys_mingw32 = yes; then\n   AC_MSG_RESULT(no)\n else\n   if test $is_unix = yes; then"}, {"sha": "ee2a0ee6bf5aaa5d33f15b118e4777ddc1e9d93b", "filename": "gcc/f/runtime/libF77/s_paus.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dfa69619aac0e073659414c99bbbc2793b2e922/gcc%2Ff%2Fruntime%2FlibF77%2Fs_paus.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dfa69619aac0e073659414c99bbbc2793b2e922/gcc%2Ff%2Fruntime%2FlibF77%2Fs_paus.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FlibF77%2Fs_paus.c?ref=4dfa69619aac0e073659414c99bbbc2793b2e922", "patch": "@@ -60,7 +60,7 @@ s_paus(char *s, ftnlen n)\n \tif( isatty(fileno(stdin)) )\n \t\ts_1paus(stdin);\n \telse {\n-#if (defined (MSDOS) && !defined (GO32)) || defined(__CYGWIN32__)\n+#if (defined (MSDOS) && !defined (GO32)) || defined (_WIN32)\n \t\tFILE *fin;\n \t\tfin = fopen(\"con\", \"r\");\n \t\tif (!fin) {"}, {"sha": "1c16545849468e014bb2c5681b503196f7637439", "filename": "gcc/f/runtime/libI77/rawio.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dfa69619aac0e073659414c99bbbc2793b2e922/gcc%2Ff%2Fruntime%2FlibI77%2Frawio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dfa69619aac0e073659414c99bbbc2793b2e922/gcc%2Ff%2Fruntime%2FlibI77%2Frawio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fruntime%2FlibI77%2Frawio.h?ref=4dfa69619aac0e073659414c99bbbc2793b2e922", "patch": "@@ -19,7 +19,9 @@ extern \"C\" {\n extern int creat(const char*,int), open(const char*,int);\n #endif\n extern int close(int);\n+#if !(defined(_WIN32) && !defined(__CYGWIN32__))\n extern int read(int,void*,size_t), write(int,void*,size_t);\n+#endif\n extern int unlink(const char*);\n #ifndef _POSIX_SOURCE\n #ifndef NON_UNIX_STDIO"}]}