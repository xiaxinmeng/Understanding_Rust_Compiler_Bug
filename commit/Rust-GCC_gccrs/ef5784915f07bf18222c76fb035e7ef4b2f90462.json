{"sha": "ef5784915f07bf18222c76fb035e7ef4b2f90462", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY1Nzg0OTE1ZjA3YmYxODIyMmM3NmZiMDM1ZTdlZjRiMmY5MDQ2Mg==", "commit": {"author": {"name": "Matthew Gretton-Dann", "email": "matthew.gretton-dann@arm.com", "date": "2011-11-30T13:51:35Z"}, "committer": {"name": "Matthew Gretton-Dann", "email": "mgretton@gcc.gnu.org", "date": "2011-11-30T13:51:35Z"}, "message": "arm.c (arm_issue_rate): Cortex-A15 can triple issue.\n\n\t* gcc/config/arm/arm.c (arm_issue_rate): Cortex-A15 can triple issue.\n\t* gcc/config/arm/arm.md (mul64): New attribute.\n\t(generic_sched): Cortex-A15 is not scheduled generically.\n\t(cortex-a15.md): Include.\n\t* gcc/config/arm/cortex-a15.md: New machine description.\n\t* gcc/config/arm/t-arm (MD_INCLUDES): Add cortex-a15.md.\n\nFrom-SVN: r181843", "tree": {"sha": "231db9739cf93bbd5f25110e6cc37709bb003cd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/231db9739cf93bbd5f25110e6cc37709bb003cd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef5784915f07bf18222c76fb035e7ef4b2f90462", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef5784915f07bf18222c76fb035e7ef4b2f90462", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef5784915f07bf18222c76fb035e7ef4b2f90462", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef5784915f07bf18222c76fb035e7ef4b2f90462/comments", "author": {"login": "matt-gretton-dann", "id": 53790742, "node_id": "MDQ6VXNlcjUzNzkwNzQy", "avatar_url": "https://avatars.githubusercontent.com/u/53790742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matt-gretton-dann", "html_url": "https://github.com/matt-gretton-dann", "followers_url": "https://api.github.com/users/matt-gretton-dann/followers", "following_url": "https://api.github.com/users/matt-gretton-dann/following{/other_user}", "gists_url": "https://api.github.com/users/matt-gretton-dann/gists{/gist_id}", "starred_url": "https://api.github.com/users/matt-gretton-dann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matt-gretton-dann/subscriptions", "organizations_url": "https://api.github.com/users/matt-gretton-dann/orgs", "repos_url": "https://api.github.com/users/matt-gretton-dann/repos", "events_url": "https://api.github.com/users/matt-gretton-dann/events{/privacy}", "received_events_url": "https://api.github.com/users/matt-gretton-dann/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c819d921c9b0ccb6d29fb3a6c5cb6cd12b77d2f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c819d921c9b0ccb6d29fb3a6c5cb6cd12b77d2f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c819d921c9b0ccb6d29fb3a6c5cb6cd12b77d2f6"}], "stats": {"total": 209, "additions": 208, "deletions": 1}, "files": [{"sha": "606cbe9dbbf9f12639287cafd792cb6c3e85b307", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef5784915f07bf18222c76fb035e7ef4b2f90462/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef5784915f07bf18222c76fb035e7ef4b2f90462/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef5784915f07bf18222c76fb035e7ef4b2f90462", "patch": "@@ -1,3 +1,12 @@\n+2011-11-30  Matthew Gretton-Dann  <matthew.gretton-dann@arm.com>\n+\n+\t* config/arm/arm.c (arm_issue_rate): Cortex-A15 can triple issue.\n+\t* config/arm/arm.md (mul64): New attribute.\n+\t(generic_sched): Cortex-A15 is not scheduled generically.\n+\t(cortex-a15.md): Include.\n+\t* config/arm/cortex-a15.md: New machine description.\n+\t* config/arm/t-arm (MD_INCLUDES): Add cortex-a15.md.\n+\n 2011-11-30  Matthew Gretton-Dann  <matthew.gretton-dann@arm.com>\n \n \t* config/arm/t-arm (MD_INCLUDES): Ensure all md files are listed."}, {"sha": "a57494c4c3eb9af0f7606bf65787f7d46a248a78", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef5784915f07bf18222c76fb035e7ef4b2f90462/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef5784915f07bf18222c76fb035e7ef4b2f90462/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=ef5784915f07bf18222c76fb035e7ef4b2f90462", "patch": "@@ -24127,6 +24127,9 @@ arm_issue_rate (void)\n {\n   switch (arm_tune)\n     {\n+    case cortexa15:\n+      return 3;\n+\n     case cortexr4:\n     case cortexr4f:\n     case cortexr5:"}, {"sha": "8ec9b2288bba6c9398fed06ae09e08bb1e4f8d7d", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef5784915f07bf18222c76fb035e7ef4b2f90462/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef5784915f07bf18222c76fb035e7ef4b2f90462/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=ef5784915f07bf18222c76fb035e7ef4b2f90462", "patch": "@@ -355,6 +355,13 @@\n \t (const_string \"mult\")\n \t (const_string \"alu\")))\n \n+; Is this an (integer side) multiply with a 64-bit result?\n+(define_attr \"mul64\" \"no,yes\"\n+\t     (if_then_else\n+\t       (eq_attr \"insn\" \"smlalxy,umull,umulls,umlal,umlals,smull,smulls,smlal,smlals\")\n+\t       (const_string \"yes\")\n+\t       (const_string \"no\")))\n+\n ; Load scheduling, set from the arm_ld_sched variable\n ; initialized by arm_option_override()\n (define_attr \"ldsched\" \"no,yes\" (const (symbol_ref \"arm_ld_sched\")))\n@@ -518,7 +525,7 @@\n \n (define_attr \"generic_sched\" \"yes,no\"\n   (const (if_then_else\n-          (ior (eq_attr \"tune\" \"fa526,fa626,fa606te,fa626te,fmp626,fa726te,arm926ejs,arm1020e,arm1026ejs,arm1136js,arm1136jfs,cortexa5,cortexa8,cortexa9,cortexm4\")\n+          (ior (eq_attr \"tune\" \"fa526,fa626,fa606te,fa626te,fmp626,fa726te,arm926ejs,arm1020e,arm1026ejs,arm1136js,arm1136jfs,cortexa5,cortexa8,cortexa9,cortexa15,cortexm4\")\n \t       (eq_attr \"tune_cortexr4\" \"yes\"))\n           (const_string \"no\")\n           (const_string \"yes\"))))\n@@ -544,6 +551,7 @@\n (include \"cortex-a5.md\")\n (include \"cortex-a8.md\")\n (include \"cortex-a9.md\")\n+(include \"cortex-a15.md\")\n (include \"cortex-r4.md\")\n (include \"cortex-r4f.md\")\n (include \"cortex-m4.md\")"}, {"sha": "ccab7cbe90621459ad7356074d1543be59d5d929", "filename": "gcc/config/arm/cortex-a15.md", "status": "added", "additions": 186, "deletions": 0, "changes": 186, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef5784915f07bf18222c76fb035e7ef4b2f90462/gcc%2Fconfig%2Farm%2Fcortex-a15.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef5784915f07bf18222c76fb035e7ef4b2f90462/gcc%2Fconfig%2Farm%2Fcortex-a15.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a15.md?ref=ef5784915f07bf18222c76fb035e7ef4b2f90462", "patch": "@@ -0,0 +1,186 @@\n+;; ARM Cortex-A15 pipeline description\n+;; Copyright (C) 2011 Free Software Foundation, Inc.\n+;;\n+;; Written by Matthew Gretton-Dann <matthew.gretton-dann@arm.com>\n+\n+;; This file is part of GCC.\n+;;\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published by\n+;; the Free Software Foundation; either version 3, or (at your option)\n+;; any later version.\n+;;\n+;; GCC is distributed in the hope that it will be useful, but\n+;; WITHOUT ANY WARRANTY; without even the implied warranty of\n+;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+;; General Public License for more details.\n+;;\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+(define_automaton \"cortex_a15\")\n+\n+;; The Cortex-A15 core is modelled as a triple issue pipeline that has\n+;; the following dispatch units.\n+;; 1. Two pipelines for simple integer operations: SX1, SX2\n+;; 2. Two pipelines for Neon and FP data-processing operations: CX1, CX2\n+;; 3. One pipeline for branch operations: BX\n+;; 4. One pipeline for integer multiply and divide operations: MX\n+;; 5. Two pipelines for load and store operations: LS1, LS2\n+;;\n+;; We can issue into three pipelines per-cycle.\n+;;\n+;; We assume that where we have unit pairs xx1 is always filled before xx2.\n+\n+;; The three issue units\n+(define_cpu_unit \"ca15_i0, ca15_i1, ca15_i2\" \"cortex_a15\")\n+\n+(define_reservation \"ca15_issue1\" \"(ca15_i0|ca15_i1|ca15_i2)\")\n+(define_reservation \"ca15_issue2\" \"((ca15_i0+ca15_i1)|(ca15_i1+ca15_i2))\")\n+(define_reservation \"ca15_issue3\" \"(ca15_i0+ca15_i1+ca15_i2)\")\n+(final_presence_set \"ca15_i1\" \"ca15_i0\")\n+(final_presence_set \"ca15_i2\" \"ca15_i1\")\n+\n+;; The main dispatch units\n+(define_cpu_unit \"ca15_sx1, ca15_sx2\" \"cortex_a15\")\n+(define_cpu_unit \"ca15_cx1, ca15_cx2\" \"cortex_a15\")\n+(define_cpu_unit \"ca15_ls1, ca15_ls2\" \"cortex_a15\")\n+(define_cpu_unit \"ca15_bx, ca15_mx\" \"cortex_a15\")\n+\n+(define_reservation \"ca15_ls\" \"(ca15_ls1|ca15_ls2)\")\n+\n+;; The extended load-store pipeline\n+(define_cpu_unit \"ca15_ldr, ca15_str\" \"cortex_a15\")\n+\n+;; The extended ALU pipeline\n+(define_cpu_unit \"ca15_sx1_alu, ca15_sx1_shf, ca15_sx1_sat\" \"cortex_a15\")\n+(define_cpu_unit \"ca15_sx2_alu, ca15_sx2_shf, ca15_sx2_sat\" \"cortex_a15\")\n+\n+;; Simple Execution Unit:\n+;;\n+;; Simple ALU without shift\n+(define_insn_reservation \"cortex_a15_alu\" 2\n+  (and (eq_attr \"tune\" \"cortexa15\")\n+       (and (eq_attr \"type\" \"alu\")\n+            (eq_attr \"neon_type\" \"none\")))\n+  \"ca15_issue1,(ca15_sx1,ca15_sx1_alu)|(ca15_sx2,ca15_sx2_alu)\")\n+\n+;; ALU ops with immediate shift\n+(define_insn_reservation \"cortex_a15_alu_shift\" 3\n+  (and (eq_attr \"tune\" \"cortexa15\")\n+       (and (eq_attr \"type\" \"alu_shift\")\n+            (eq_attr \"neon_type\" \"none\")))\n+  \"ca15_issue1,(ca15_sx1,ca15_sx1+ca15_sx1_shf,ca15_sx1_alu)\\\n+\t       |(ca15_sx2,ca15_sx2+ca15_sx2_shf,ca15_sx2_alu)\")\n+\n+;; ALU ops with register controlled shift\n+(define_insn_reservation \"cortex_a15_alu_shift_reg\" 3\n+  (and (eq_attr \"tune\" \"cortexa15\")\n+       (and (eq_attr \"type\" \"alu_shift_reg\")\n+\t    (eq_attr \"neon_type\" \"none\")))\n+  \"(ca15_issue2,ca15_sx1+ca15_sx2,ca15_sx1_shf,ca15_sx2_alu)\\\n+   |(ca15_issue1,(ca15_issue1+ca15_sx2,ca15_sx1+ca15_sx2_shf)\\\n+   |(ca15_issue1+ca15_sx1,ca15_sx1+ca15_sx1_shf),ca15_sx1_alu)\")\n+\n+;; Multiply Execution Unit:\n+;;\n+;; 32-bit multiplies\n+(define_insn_reservation \"cortex_a15_mult32\" 3\n+  (and (eq_attr \"tune\" \"cortexa15\")\n+       (and (eq_attr \"type\" \"mult\")\n+\t    (and (eq_attr \"neon_type\" \"none\")\n+\t\t (eq_attr \"mul64\" \"no\"))))\n+  \"ca15_issue1,ca15_mx\")\n+\n+;; 64-bit multiplies\n+(define_insn_reservation \"cortex_a15_mult64\" 4\n+  (and (eq_attr \"tune\" \"cortexa15\")\n+       (and (eq_attr \"type\" \"mult\")\n+\t    (and (eq_attr \"neon_type\" \"none\")\n+\t\t (eq_attr \"mul64\" \"yes\"))))\n+  \"ca15_issue1,ca15_mx*2\")\n+\n+;; Integer divide\n+(define_insn_reservation \"cortex_a15_udiv\" 9\n+  (and (eq_attr \"tune\" \"cortexa15\")\n+       (eq_attr \"insn\" \"udiv\"))\n+  \"ca15_issue1,ca15_mx\")\n+\n+(define_insn_reservation \"cortex_a15_sdiv\" 10\n+  (and (eq_attr \"tune\" \"cortexa15\")\n+       (eq_attr \"insn\" \"sdiv\"))\n+  \"ca15_issue1,ca15_mx\")\n+\n+;; Block all issue pipes for a cycle\n+(define_insn_reservation \"cortex_a15_block\" 1\n+  (and (eq_attr \"tune\" \"cortexa15\")\n+       (and (eq_attr \"type\" \"block\")\n+\t    (eq_attr \"neon_type\" \"none\")))\n+  \"ca15_issue3\")\n+\n+;; Branch execution Unit\n+;;\n+;; Branches take one issue slot.\n+;; No latency as there is no result\n+(define_insn_reservation \"cortex_a15_branch\" 0\n+  (and (eq_attr \"tune\" \"cortexa15\")\n+       (and (eq_attr \"type\" \"branch\")\n+\t    (eq_attr \"neon_type\" \"none\")))\n+  \"ca15_issue1,ca15_bx\")\n+\n+\n+;; We lie with calls.  They take up all issue slots, and form a block in the\n+;; pipeline.  The result however is available the next cycle.\n+;;\n+;; Addition of new units requires this to be updated.\n+(define_insn_reservation \"cortex_a15_call\" 1\n+  (and (eq_attr \"tune\" \"cortexa15\")\n+       (and (eq_attr \"type\" \"call\")\n+\t    (eq_attr \"neon_type\" \"none\")))\n+  \"ca15_issue3,\\\n+   ca15_sx1+ca15_sx2+ca15_bx+ca15_mx+ca15_cx1+ca15_cx2+ca15_ls1+ca15_ls2,\\\n+   ca15_sx1_alu+ca15_sx1_shf+ca15_sx1_sat+ca15_sx2_alu+ca15_sx2_shf\\\n+    +ca15_sx2_sat+ca15_ldr+ca15_str\")\n+\n+;; Load-store execution Unit\n+;;\n+;; Loads of up to two words.\n+(define_insn_reservation \"cortex_a15_load1\" 4\n+  (and (eq_attr \"tune\" \"cortexa15\")\n+       (and (eq_attr \"type\" \"load_byte,load1,load2\")\n+\t    (eq_attr \"neon_type\" \"none\")))\n+  \"ca15_issue1,ca15_ls,ca15_ldr,nothing\")\n+\n+;; Loads of three or four words.\n+(define_insn_reservation \"cortex_a15_load3\" 5\n+  (and (eq_attr \"tune\" \"cortexa15\")\n+       (and (eq_attr \"type\" \"load3,load4\")\n+\t    (eq_attr \"neon_type\" \"none\")))\n+  \"ca15_issue2,ca15_ls1+ca15_ls2,ca15_ldr,ca15_ldr,nothing\")\n+\n+;; Stores of up to two words.\n+(define_insn_reservation \"cortex_a15_store1\" 0\n+  (and (eq_attr \"tune\" \"cortexa15\")\n+       (and (eq_attr \"type\" \"store1,store2\")\n+\t    (eq_attr \"neon_type\" \"none\")))\n+  \"ca15_issue1,ca15_ls,ca15_str\")\n+\n+;; Stores of three or four words.\n+(define_insn_reservation \"cortex_a15_store3\" 0\n+  (and (eq_attr \"tune\" \"cortexa15\")\n+       (and (eq_attr \"type\" \"store3,store4\")\n+\t    (eq_attr \"neon_type\" \"none\")))\n+  \"ca15_issue2,ca15_ls1+ca15_ls2,ca15_str,ca15_str\")\n+\n+;; Simple execution unit bypasses\n+(define_bypass 1 \"cortex_a15_alu\"\n+\t       \"cortex_a15_alu,cortex_a15_alu_shift,cortex_a15_alu_shift_reg\")\n+(define_bypass 2 \"cortex_a15_alu_shift\"\n+\t       \"cortex_a15_alu,cortex_a15_alu_shift,cortex_a15_alu_shift_reg\")\n+(define_bypass 2 \"cortex_a15_alu_shift_reg\"\n+\t       \"cortex_a15_alu,cortex_a15_alu_shift,cortex_a15_alu_shift_reg\")\n+(define_bypass 1 \"cortex_a15_alu\" \"cortex_a15_load1,cortex_a15_load3\")\n+(define_bypass 2 \"cortex_a15_alu_shift\" \"cortex_a15_load1,cortex_a15_load3\")\n+(define_bypass 2 \"cortex_a15_alu_shift_reg\"\n+\t       \"cortex_a15_load1,cortex_a15_load3\")"}, {"sha": "1128d1904b0df1447dfd6c9f22306d535c7746cd", "filename": "gcc/config/arm/t-arm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef5784915f07bf18222c76fb035e7ef4b2f90462/gcc%2Fconfig%2Farm%2Ft-arm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef5784915f07bf18222c76fb035e7ef4b2f90462/gcc%2Fconfig%2Farm%2Ft-arm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-arm?ref=ef5784915f07bf18222c76fb035e7ef4b2f90462", "patch": "@@ -31,6 +31,7 @@ MD_INCLUDES=\t$(srcdir)/config/arm/arm1020e.md \\\n \t\t$(srcdir)/config/arm/arm-tune.md \\\n \t\t$(srcdir)/config/arm/cirrus.md \\\n \t\t$(srcdir)/config/arm/constraints.md \\\n+\t\t$(srcdir)/config/arm/cortex-a15.md \\\n \t\t$(srcdir)/config/arm/cortex-a5.md \\\n \t\t$(srcdir)/config/arm/cortex-a8.md \\\n \t\t$(srcdir)/config/arm/cortex-a8-neon.md \\"}]}