{"sha": "430b2815a3ef5f81bc860582f2f32eebbd4ee9cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMwYjI4MTVhM2VmNWY4MWJjODYwNTgyZjJmMzJlZWJiZDRlZTljYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2008-05-23T14:35:05Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-23T14:35:05Z"}, "message": "* gnat.dg/addr_slice.adb: New test.\n\nFrom-SVN: r135814", "tree": {"sha": "7dabb5042a33ad028a9000bfcb24f6468427898c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7dabb5042a33ad028a9000bfcb24f6468427898c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/430b2815a3ef5f81bc860582f2f32eebbd4ee9cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/430b2815a3ef5f81bc860582f2f32eebbd4ee9cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/430b2815a3ef5f81bc860582f2f32eebbd4ee9cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/430b2815a3ef5f81bc860582f2f32eebbd4ee9cb/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d1ba4e42b6b82cae6c192a00bcc674daad6b4c96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1ba4e42b6b82cae6c192a00bcc674daad6b4c96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1ba4e42b6b82cae6c192a00bcc674daad6b4c96"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "7fedaf1ea12a17331a82306e707ea9723d0d718e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/430b2815a3ef5f81bc860582f2f32eebbd4ee9cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/430b2815a3ef5f81bc860582f2f32eebbd4ee9cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=430b2815a3ef5f81bc860582f2f32eebbd4ee9cb", "patch": "@@ -1,3 +1,7 @@\n+2008-05-23  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnat.dg/addr_slice.adb: New test.\n+\n 2008-05-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/36237"}, {"sha": "2506148089ef0dddc9eac4d2b1b600479f0c648f", "filename": "gcc/testsuite/gnat.dg/addr_slice.adb", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/430b2815a3ef5f81bc860582f2f32eebbd4ee9cb/gcc%2Ftestsuite%2Fgnat.dg%2Faddr_slice.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/430b2815a3ef5f81bc860582f2f32eebbd4ee9cb/gcc%2Ftestsuite%2Fgnat.dg%2Faddr_slice.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faddr_slice.adb?ref=430b2815a3ef5f81bc860582f2f32eebbd4ee9cb", "patch": "@@ -0,0 +1,19 @@\n+--  { dg-do compile }\n+--  { dg-options \"-gnatws\" }\n+\n+procedure Addr_Slice is\n+   type Item_Type is record\n+      I : Integer;\n+   end record;\n+\n+   type Index_Type is (A, B);\n+   for Index_Type use (A => 1, B => 10);\n+\n+   Item_Array : constant array (Index_Type) of Item_Type\n+     := (A => (I => 10), B => (I => 22));\n+\n+   Item : Item_Type;\n+   for Item'Address use Item_Array(Index_Type)'Address;\n+begin\n+   null;\n+end;"}]}