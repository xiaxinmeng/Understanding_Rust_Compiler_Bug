{"sha": "1f7c7f6f8c1fe8f6500d9c5149c02574be04745d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY3YzdmNmY4YzFmZThmNjUwMGQ5YzUxNDljMDI1NzRiZTA0NzQ1ZA==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "1999-10-16T00:15:44Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "1999-10-16T00:15:44Z"}, "message": "c4x.md (parallel instruction patterns): Rework constraints to keep reload happy.\n\n\t* config/c4x/c4x.md (parallel instruction patterns): Rework\n\tconstraints to keep reload happy.\n\nFrom-SVN: r30030", "tree": {"sha": "d2008cab9d297e2ac07d266df5c66928eb9adb88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2008cab9d297e2ac07d266df5c66928eb9adb88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f7c7f6f8c1fe8f6500d9c5149c02574be04745d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f7c7f6f8c1fe8f6500d9c5149c02574be04745d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f7c7f6f8c1fe8f6500d9c5149c02574be04745d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f7c7f6f8c1fe8f6500d9c5149c02574be04745d/comments", "author": null, "committer": null, "parents": [{"sha": "57e5bce85b92f0109549f2012e56818384f1a461", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57e5bce85b92f0109549f2012e56818384f1a461", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57e5bce85b92f0109549f2012e56818384f1a461"}], "stats": {"total": 175, "additions": 90, "deletions": 85}, "files": [{"sha": "d17c41ba1ad3759642e57849dcb2639c4b8a842a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f7c7f6f8c1fe8f6500d9c5149c02574be04745d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f7c7f6f8c1fe8f6500d9c5149c02574be04745d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f7c7f6f8c1fe8f6500d9c5149c02574be04745d", "patch": "@@ -1,3 +1,8 @@\n+Sat Oct 16 13:13:15 1999  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* config/c4x/c4x.md (parallel instruction patterns): Rework\n+\tconstraints to keep reload happy.\n+\n Sat Oct 16 13:03:16 1999  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n \t* config/c4x/c4x.md (*absqi2_noclobber, *negqi2_noclobber,"}, {"sha": "30eb83c76586f752ac4d37fb8bc0c8f383b034ab", "filename": "gcc/config/c4x/c4x.md", "status": "modified", "additions": 85, "deletions": 85, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f7c7f6f8c1fe8f6500d9c5149c02574be04745d/gcc%2Fconfig%2Fc4x%2Fc4x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f7c7f6f8c1fe8f6500d9c5149c02574be04745d/gcc%2Fconfig%2Fc4x%2Fc4x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.md?ref=1f7c7f6f8c1fe8f6500d9c5149c02574be04745d", "patch": "@@ -1417,11 +1417,11 @@\n \n \n (define_insn \"movqi_parallel\"\n-  [(set (match_operand:QI 0 \"parallel_operand\" \"=q,S<>,q,S<>\")\n-        (match_operand:QI 1 \"parallel_operand\" \"S<>,q,S<>,q\"))\n-   (set (match_operand:QI 2 \"parallel_operand\" \"=q,S<>,S<>,q\")\n-        (match_operand:QI 3 \"parallel_operand\" \"S<>,q,q,S<>\"))]\n-  \"valid_parallel_load_store (operands, QImode)\"\n+  [(set (match_operand:QI 0 \"parallel_operand\" \"=q,S<>!V,q,S<>!V\")\n+        (match_operand:QI 1 \"parallel_operand\" \"S<>!V,q,S<>!V,q\"))\n+   (set (match_operand:QI 2 \"parallel_operand\" \"=q,S<>!V,S<>!V,q\")\n+        (match_operand:QI 3 \"parallel_operand\" \"S<>!V,q,q,S<>!V\"))]\n+  \"TARGET_PARALLEL && valid_parallel_load_store (operands, QImode)\"\n   \"@\n    ldi1\\\\t%1,%0\\\\n||\\\\tldi2\\\\t%3,%2\n    sti1\\\\t%1,%0\\\\n||\\\\tsti2\\\\t%3,%2\n@@ -3493,11 +3493,11 @@\n \n \n (define_insn \"*movqf_parallel\"\n- [(set (match_operand:QF 0 \"parallel_operand\" \"=q,S<>,q,S<>\")\n-       (match_operand:QF 1 \"parallel_operand\" \"S<>,q,S<>,q\"))\n-  (set (match_operand:QF 2 \"parallel_operand\" \"=q,S<>,S<>,q\")\n-       (match_operand:QF 3 \"parallel_operand\" \"S<>,q,q,S<>\"))]\n- \"valid_parallel_load_store (operands, QFmode)\"\n+ [(set (match_operand:QF 0 \"parallel_operand\" \"=q,S<>!V,q,S<>!V\")\n+       (match_operand:QF 1 \"parallel_operand\" \"S<>!V,q,S<>!V,q\"))\n+  (set (match_operand:QF 2 \"parallel_operand\" \"=q,S<>!V,S<>!V,q\")\n+       (match_operand:QF 3 \"parallel_operand\" \"S<>!V,q,q,S<>!V\"))]\n+ \"TARGET_PARALLEL && valid_parallel_load_store (operands, QFmode)\"\n  \"@\n   ldf1\\\\t%1,%0\\\\n||\\\\tldf2\\\\t%3,%2\n   stf1\\\\t%1,%0\\\\n||\\\\tstf2\\\\t%3,%2\n@@ -4355,15 +4355,15 @@\n ;\n \n (define_insn \"*addqf3_movqf_clobber\"\n-  [(set (match_operand:QF 0 \"ext_low_reg_operand\" \"=q\")\n-        (plus:QF (match_operand:QF 1 \"parallel_operand\" \"%q\")\n-                 (match_operand:QF 2 \"parallel_operand\" \"S<>\")))\n-   (set (match_operand:QF 3 \"par_ind_operand\" \"=S<>\")\n-        (match_operand:QF 4 \"ext_low_reg_operand\" \"q\"))\n+  [(set (match_operand:QF 0 \"ext_low_reg_operand\" \"=q,q\")\n+        (plus:QF (match_operand:QF 1 \"parallel_operand\" \"%q,S<>\")\n+                 (match_operand:QF 2 \"parallel_operand\" \"S<>,q\")))\n+   (set (match_operand:QF 3 \"par_ind_operand\" \"=S<>,S<>\")\n+        (match_operand:QF 4 \"ext_low_reg_operand\" \"q,q\"))\n    (clobber (reg:CC 21))]\n   \"TARGET_PARALLEL && valid_parallel_operands_5 (operands, QFmode)\"\n   \"addf3\\\\t%2,%1,%0\\\\n||\\\\tstf\\\\t%4,%3\"\n-  [(set_attr \"type\" \"binarycc\")])\n+  [(set_attr \"type\" \"binarycc,binarycc\")])\n \n ;\n ; FLOAT/STF\n@@ -4384,56 +4384,56 @@\n ;\n \n (define_insn \"*mulqf3_addqf3_clobber\"\n-  [(set (match_operand:QF 0 \"r0r1_reg_operand\" \"=t\")\n-        (mult:QF (match_operand:QF 1 \"parallel_operand\" \"%S<>q\")\n-                 (match_operand:QF 2 \"parallel_operand\" \"S<>q\")))\n-   (set (match_operand:QF 3 \"r2r3_reg_operand\" \"=u\")\n-        (plus:QF (match_operand:QF 4 \"parallel_operand\" \"%S<>q\")\n-                 (match_operand:QF 5 \"parallel_operand\" \"S<>q\")))\n-   (clobber (reg:CC 21))]\n+  [(set (match_operand:QF 0 \"r0r1_reg_operand\" \"=t,t,t,t\")\n+        (mult:QF (match_operand:QF 1 \"parallel_operand\" \"%S<>!V,q,S<>!V,q\")\n+                 (match_operand:QF 2 \"parallel_operand\" \"q,S<>!V,S<>!V,q\")))\n+   (set (match_operand:QF 3 \"r2r3_reg_operand\" \"=u,u,u,u\")\n+        (plus:QF (match_operand:QF 4 \"parallel_operand\" \"%S<>!V,q,q,S<>!V\")\n+                 (match_operand:QF 5 \"parallel_operand\" \"q,S<>!V,q,S<>!V\")))\n+   (clobber (reg:CC_NOOV 21))]\n   \"TARGET_PARALLEL_MPY && valid_parallel_operands_6 (operands, QFmode)\"\n   \"mpyf3\\\\t%2,%1,%0\\\\n||\\\\taddf3\\\\t%5,%4,%3\"\n-  [(set_attr \"type\" \"binarycc\")])\n+  [(set_attr \"type\" \"binarycc,binarycc,binarycc,binarycc\")])\n \n \n ;\n ; MPYF/STF\n ;\n \n (define_insn \"*mulqf3_movqf_clobber\"\n-  [(set (match_operand:QF 0 \"ext_low_reg_operand\" \"=q\")\n-        (mult:QF (match_operand:QF 1 \"parallel_operand\" \"%q\")\n-                 (match_operand:QF 2 \"parallel_operand\" \"S<>\")))\n-   (set (match_operand:QF 3 \"par_ind_operand\" \"=S<>\")\n-        (match_operand:QF 4 \"ext_low_reg_operand\" \"q\"))\n+  [(set (match_operand:QF 0 \"ext_low_reg_operand\" \"=q,q\")\n+        (mult:QF (match_operand:QF 1 \"parallel_operand\" \"%q,S<>\")\n+                 (match_operand:QF 2 \"parallel_operand\" \"S<>,q\")))\n+   (set (match_operand:QF 3 \"par_ind_operand\" \"=S<>,S<>\")\n+        (match_operand:QF 4 \"ext_low_reg_operand\" \"q,q\"))\n    (clobber (reg:CC 21))]\n   \"TARGET_PARALLEL && valid_parallel_operands_5 (operands, QFmode)\"\n   \"mpyf3\\\\t%2,%1,%0\\\\n||\\\\tstf\\\\t%4,%3\"\n-  [(set_attr \"type\" \"binarycc\")])\n+  [(set_attr \"type\" \"binarycc,binarycc\")])\n \n ;\n ; MPYF/SUBF\n ;\n \n (define_insn \"*mulqf3_subqf3_clobber\"\n-  [(set (match_operand:QF 0 \"r0r1_reg_operand\" \"=t\")\n-        (mult:QF (match_operand:QF 1 \"parallel_operand\" \"S<>q\")\n-                 (match_operand:QF 2 \"parallel_operand\" \"S<>q\")))\n-   (set (match_operand:QF 3 \"r2r3_reg_operand\" \"=u\")\n-        (minus:QF (match_operand:QF 4 \"parallel_operand\" \"S<>q\")\n-                  (match_operand:QF 5 \"parallel_operand\" \"S<>q\")))\n+  [(set (match_operand:QF 0 \"r0r1_reg_operand\" \"=t,t\")\n+        (mult:QF (match_operand:QF 1 \"parallel_operand\" \"S<>,q\")\n+                 (match_operand:QF 2 \"parallel_operand\" \"q,S<>\")))\n+   (set (match_operand:QF 3 \"r2r3_reg_operand\" \"=u,u\")\n+        (minus:QF (match_operand:QF 4 \"parallel_operand\" \"S<>,q\")\n+                  (match_operand:QF 5 \"parallel_operand\" \"q,S<>\")))\n    (clobber (reg:CC 21))]\n   \"TARGET_PARALLEL_MPY && valid_parallel_operands_6 (operands, QFmode)\"\n   \"mpyf3\\\\t%2,%1,%0\\\\n||\\\\tsubf3\\\\t%5,%4,%3\"\n-  [(set_attr \"type\" \"binarycc\")])\n+  [(set_attr \"type\" \"binarycc,binarycc\")])\n \n ;\n ; MPYF/LDF 0\n ;\n \n (define_insn \"*mulqf3_clrqf_clobber\"\n   [(set (match_operand:QF 0 \"r0r1_reg_operand\" \"=t\")\n-        (mult:QF (match_operand:QF 1 \"par_ind_operand\" \"S<>\")\n+        (mult:QF (match_operand:QF 1 \"par_ind_operand\" \"%S<>\")\n                  (match_operand:QF 2 \"par_ind_operand\" \"S<>\")))\n    (set (match_operand:QF 3 \"r2r3_reg_operand\" \"=u\")\n         (match_operand:QF 4 \"fp_zero_operand\" \"G\"))\n@@ -4494,30 +4494,30 @@\n ;\n \n (define_insn \"*addqi3_movqi_clobber\"\n-  [(set (match_operand:QI 0 \"ext_low_reg_operand\" \"=q\")\n-        (plus:QI (match_operand:QI 1 \"parallel_operand\" \"%q\")\n-                 (match_operand:QI 2 \"parallel_operand\" \"S<>\")))\n-   (set (match_operand:QI 3 \"par_ind_operand\" \"=S<>\")\n-        (match_operand:QI 4 \"ext_low_reg_operand\" \"q\"))\n+  [(set (match_operand:QI 0 \"ext_low_reg_operand\" \"=q,q\")\n+        (plus:QI (match_operand:QI 1 \"parallel_operand\" \"%q,S<>\")\n+                 (match_operand:QI 2 \"parallel_operand\" \"S<>,q\")))\n+   (set (match_operand:QI 3 \"par_ind_operand\" \"=S<>,S<>\")\n+        (match_operand:QI 4 \"ext_low_reg_operand\" \"q,q\"))\n    (clobber (reg:CC 21))]\n   \"TARGET_PARALLEL && valid_parallel_operands_5 (operands, QImode)\"\n   \"addi3\\\\t%2,%1,%0\\\\n||\\\\tsti\\\\t%4,%3\"\n-  [(set_attr \"type\" \"binarycc\")])\n+  [(set_attr \"type\" \"binarycc,binarycc\")])\n \n ;\n ; AND/STI\n ;\n \n (define_insn \"*andqi3_movqi_clobber\"\n-  [(set (match_operand:QI 0 \"ext_low_reg_operand\" \"=q\")\n-        (and:QI (match_operand:QI 1 \"parallel_operand\" \"%q\")\n-                (match_operand:QI 2 \"parallel_operand\" \"S<>\")))\n-   (set (match_operand:QI 3 \"par_ind_operand\" \"=S<>\")\n-        (match_operand:QI 4 \"ext_low_reg_operand\" \"q\"))\n+  [(set (match_operand:QI 0 \"ext_low_reg_operand\" \"=q,q\")\n+        (and:QI (match_operand:QI 1 \"parallel_operand\" \"%q,S<>\")\n+                (match_operand:QI 2 \"parallel_operand\" \"S<>,q\")))\n+   (set (match_operand:QI 3 \"par_ind_operand\" \"=S<>,S<>\")\n+        (match_operand:QI 4 \"ext_low_reg_operand\" \"q,q\"))\n    (clobber (reg:CC 21))]\n   \"TARGET_PARALLEL && valid_parallel_operands_5 (operands, QImode)\"\n   \"and3\\\\t%2,%1,%0\\\\n||\\\\tsti\\\\t%4,%3\"\n-  [(set_attr \"type\" \"binarycc\")])\n+  [(set_attr \"type\" \"binarycc,binarycc\")])\n \n ;\n ; ASH(left)/STI \n@@ -4583,59 +4583,59 @@\n ;\n \n (define_insn \"*mulqi3_addqi3_clobber\"\n-  [(set (match_operand:QI 0 \"r0r1_reg_operand\" \"=t\")\n-        (mult:QI (match_operand:QI 1 \"parallel_operand\" \"S<>q\")\n-                 (match_operand:QI 2 \"parallel_operand\" \"S<>q\")))\n-   (set (match_operand:QI 3 \"r2r3_reg_operand\" \"=u\")\n-        (plus:QI (match_operand:QI 4 \"parallel_operand\" \"S<>q\")\n-                 (match_operand:QI 5 \"parallel_operand\" \"S<>q\")))\n+  [(set (match_operand:QI 0 \"r0r1_reg_operand\" \"=t,t,t,t\")\n+        (mult:QI (match_operand:QI 1 \"parallel_operand\" \"%S<>!V,q,S<>!V,q\")\n+                 (match_operand:QI 2 \"parallel_operand\" \"q,S<>!V,S<>!V,q\")))\n+   (set (match_operand:QI 3 \"r2r3_reg_operand\" \"=u,u,u,u\")\n+        (plus:QI (match_operand:QI 4 \"parallel_operand\" \"%S<>!V,q,q,S<>!V\")\n+                 (match_operand:QI 5 \"parallel_operand\" \"q,S<>!V,q,S<>!V\")))\n    (clobber (reg:CC 21))]\n   \"TARGET_PARALLEL_MPY && TARGET_MPYI \n    && valid_parallel_operands_6 (operands, QImode)\"\n   \"mpyi3\\\\t%2,%1,%0\\\\n||\\\\taddi3\\\\t%5,%4,%3\"\n-  [(set_attr \"type\" \"binarycc\")])\n+  [(set_attr \"type\" \"binarycc,binarycc,binarycc,binarycc\")])\n \n \n ;\n ; MPYI/STI\n ;\n \n (define_insn \"*mulqi3_movqi_clobber\"\n-  [(set (match_operand:QI 0 \"ext_low_reg_operand\" \"=q\")\n-        (mult:QI (match_operand:QI 1 \"parallel_operand\" \"%q\")\n-                 (match_operand:QI 2 \"parallel_operand\" \"S<>\")))\n-   (set (match_operand:QI 3 \"par_ind_operand\" \"=S<>\")\n-        (match_operand:QI 4 \"ext_low_reg_operand\" \"q\"))\n+  [(set (match_operand:QI 0 \"ext_low_reg_operand\" \"=q,q\")\n+        (mult:QI (match_operand:QI 1 \"parallel_operand\" \"%q,S<>\")\n+                 (match_operand:QI 2 \"parallel_operand\" \"S<>,q\")))\n+   (set (match_operand:QI 3 \"par_ind_operand\" \"=S<>,S<>\")\n+        (match_operand:QI 4 \"ext_low_reg_operand\" \"q,q\"))\n    (clobber (reg:CC 21))]\n   \"TARGET_PARALLEL && TARGET_MPYI\n    && valid_parallel_operands_5 (operands, QImode)\"\n   \"mpyi3\\\\t%2,%1,%0\\\\n||\\\\tsti\\\\t%4,%3\"\n-  [(set_attr \"type\" \"binarycc\")])\n+  [(set_attr \"type\" \"binarycc,binarycc\")])\n \n ;\n ; MPYI/SUBI\n ;\n \n (define_insn \"*mulqi3_subqi3_clobber\"\n-  [(set (match_operand:QI 0 \"r0r1_reg_operand\" \"=t\")\n-        (mult:QI (match_operand:QI 1 \"parallel_operand\" \"S<>q\")\n-                 (match_operand:QI 2 \"parallel_operand\" \"S<>q\")))\n-   (set (match_operand:QI 3 \"r2r3_reg_operand\" \"=u\")\n-        (minus:QI (match_operand:QI 4 \"parallel_operand\" \"S<>q\")\n-                  (match_operand:QI 5 \"parallel_operand\" \"S<>q\")))\n+  [(set (match_operand:QI 0 \"r0r1_reg_operand\" \"=t,t\")\n+        (mult:QI (match_operand:QI 1 \"parallel_operand\" \"S<>,q\")\n+                 (match_operand:QI 2 \"parallel_operand\" \"q,S<>\")))\n+   (set (match_operand:QI 3 \"r2r3_reg_operand\" \"=u,u\")\n+        (minus:QI (match_operand:QI 4 \"parallel_operand\" \"S<>,q\")\n+                  (match_operand:QI 5 \"parallel_operand\" \"q,S<>\")))\n    (clobber (reg:CC 21))]\n   \"TARGET_PARALLEL_MPY && TARGET_MPYI\n    && valid_parallel_operands_6 (operands, QImode)\"\n   \"mpyi3\\\\t%2,%1,%0\\\\n||\\\\tsubi3\\\\t%5,%4,%3\"\n-  [(set_attr \"type\" \"binarycc\")])\n+  [(set_attr \"type\" \"binarycc,binarycc\")])\n \n ;\n ; MPYI/LDI 0\n ;\n \n (define_insn \"*mulqi3_clrqi_clobber\"\n   [(set (match_operand:QI 0 \"r0r1_reg_operand\" \"=t\")\n-        (mult:QI (match_operand:QI 1 \"par_ind_operand\" \"S<>\")\n+        (mult:QI (match_operand:QI 1 \"par_ind_operand\" \"%S<>\")\n                  (match_operand:QI 2 \"par_ind_operand\" \"S<>\")))\n    (set (match_operand:QI 3 \"r2r3_reg_operand\" \"=u\")\n \t(const_int 0))\n@@ -4677,24 +4677,24 @@\n ;\n \n (define_insn \"*iorqi3_movqi_clobber\"\n-  [(set (match_operand:QI 0 \"ext_low_reg_operand\" \"=q\")\n-        (ior:QI (match_operand:QI 1 \"parallel_operand\" \"%q\")\n-                (match_operand:QI 2 \"parallel_operand\" \"S<>\")))\n-   (set (match_operand:QI 3 \"par_ind_operand\" \"=S<>\")\n-        (match_operand:QI 4 \"ext_low_reg_operand\" \"q\"))\n+  [(set (match_operand:QI 0 \"ext_low_reg_operand\" \"=q,q\")\n+        (ior:QI (match_operand:QI 1 \"parallel_operand\" \"%q,S<>\")\n+                (match_operand:QI 2 \"parallel_operand\" \"S<>,q\")))\n+   (set (match_operand:QI 3 \"par_ind_operand\" \"=S<>,S<>\")\n+        (match_operand:QI 4 \"ext_low_reg_operand\" \"q,q\"))\n    (clobber (reg:CC 21))]\n   \"TARGET_PARALLEL && valid_parallel_operands_5 (operands, QImode)\"\n   \"or3\\\\t%2,%1,%0\\\\n||\\\\tsti\\\\t%4,%3\"\n-  [(set_attr \"type\" \"binarycc\")])\n+  [(set_attr \"type\" \"binarycc,binarycc\")])\n \n ;\n ; SUBI/STI\n ;\n \n (define_insn \"*subqi3_movqi_clobber\"\n   [(set (match_operand:QI 0 \"ext_low_reg_operand\" \"=q\")\n-        (minus:QI (match_operand:QI 1 \"ext_low_reg_operand\" \"q\")\n-                  (match_operand:QI 2 \"par_ind_operand\" \"S<>\")))\n+        (minus:QI (match_operand:QI 1 \"par_ind_operand\" \"S<>\")\n+                  (match_operand:QI 2 \"ext_low_reg_operand\" \"q\")))\n    (set (match_operand:QI 3 \"par_ind_operand\" \"=S<>\")\n         (match_operand:QI 4 \"ext_low_reg_operand\" \"q\"))\n    (clobber (reg:CC 21))]\n@@ -4707,15 +4707,15 @@\n ;\n \n (define_insn \"*xorqi3_movqi_clobber\"\n-  [(set (match_operand:QI 0 \"ext_low_reg_operand\" \"=q\")\n-        (xor:QI (match_operand:QI 1 \"parallel_operand\" \"%q\")\n-                (match_operand:QI 2 \"parallel_operand\" \"S<>\")))\n-   (set (match_operand:QI 3 \"par_ind_operand\" \"=S<>\")\n-        (match_operand:QI 4 \"ext_low_reg_operand\" \"q\"))\n+  [(set (match_operand:QI 0 \"ext_low_reg_operand\" \"=q,q\")\n+        (xor:QI (match_operand:QI 1 \"parallel_operand\" \"%q,S<>\")\n+                (match_operand:QI 2 \"parallel_operand\" \"S<>,q\")))\n+   (set (match_operand:QI 3 \"par_ind_operand\" \"=S<>,S<>\")\n+        (match_operand:QI 4 \"ext_low_reg_operand\" \"q,q\"))\n    (clobber (reg:CC 21))]\n   \"TARGET_PARALLEL && valid_parallel_operands_5 (operands, QImode)\"\n   \"xor3\\\\t%2,%1,%0\\\\n||\\\\tsti\\\\t%4,%3\"\n-  [(set_attr \"type\" \"binarycc\")])\n+  [(set_attr \"type\" \"binarycc,binarycc\")])\n \n ;\n ; BRANCH/CALL INSTRUCTIONS"}]}