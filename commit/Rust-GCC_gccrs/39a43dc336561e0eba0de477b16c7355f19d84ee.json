{"sha": "39a43dc336561e0eba0de477b16c7355f19d84ee", "node_id": "C_kwDOANBUbNoAKDM5YTQzZGMzMzY1NjFlMGViYTBkZTQ3N2IxNmM3MzU1ZjE5ZDg0ZWU", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-03-28T08:56:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-03-28T08:56:44Z"}, "message": "sanopt: Return TODO_cleanup_cfg if any .{UB,HWA,A}SAN_* calls were lowered [PR106190]\n\nThe following testcase ICEs, because without optimization eh lowering\ndecides not to duplicate finally block of try/finally and so we end up\nwith variable guarded cleanup.  The sanopt pass creates a cfg that ought\nto be cleaned up (some IFN_UBSAN_* functions are lowered in this case with\nconstant conditions in gcond and when not allowing recovery some bbs which\nend with noreturn calls actually have successor edges), but the cfg cleanup\nis actually (it is -O0) done only during the optimized pass.  We notice\nthere that the d[1][a] = 0; statement which has an EH edge is unreachable\n(because ubsan would always abort on the out of bounds d[1] access), remove\nthe EH landing pad and block, but because that block just sets a variable\nand jumps to another one which tests that variable and that one is reachable\nfrom normal control flow, the __builtin_eh_pointer (1) later in there is\nkept in the IL and we ICE during expansion of that statement because the\nEH region has been removed.\n\nThe following patch fixes it by doing the cfg cleanup already during\nsanopt pass if we create something that might need it, while the EH\nlanding pad is then removed already during sanopt pass, there is ehcleanup\nlater and we don't ICE anymore.\n\n2023-03-28  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/106190\n\t* sanopt.cc (pass_sanopt::execute): Return TODO_cleanup_cfg if any\n\tof the IFN_{UB,HWA,A}SAN_* internal fns are lowered.\n\n\t* gcc.dg/asan/pr106190.c: New test.", "tree": {"sha": "33859750c0aea1c3eb09bcf08536b6d8a5098300", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33859750c0aea1c3eb09bcf08536b6d8a5098300"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39a43dc336561e0eba0de477b16c7355f19d84ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39a43dc336561e0eba0de477b16c7355f19d84ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39a43dc336561e0eba0de477b16c7355f19d84ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39a43dc336561e0eba0de477b16c7355f19d84ee/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccaee0d2c994ada5be6bcaae1ce3e43ca56fc617", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccaee0d2c994ada5be6bcaae1ce3e43ca56fc617", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccaee0d2c994ada5be6bcaae1ce3e43ca56fc617"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "85489739507e43fc3b8fe463f14cc1f7a6ee9e96", "filename": "gcc/sanopt.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39a43dc336561e0eba0de477b16c7355f19d84ee/gcc%2Fsanopt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39a43dc336561e0eba0de477b16c7355f19d84ee/gcc%2Fsanopt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsanopt.cc?ref=39a43dc336561e0eba0de477b16c7355f19d84ee", "patch": "@@ -1300,6 +1300,7 @@ pass_sanopt::execute (function *fun)\n   basic_block bb;\n   int asan_num_accesses = 0;\n   bool contains_asan_mark = false;\n+  int ret = 0;\n \n   /* Try to remove redundant checks.  */\n   if (optimize\n@@ -1352,6 +1353,7 @@ pass_sanopt::execute (function *fun)\n \t  if (gimple_call_internal_p (stmt))\n \t    {\n \t      enum internal_fn ifn = gimple_call_internal_fn (stmt);\n+\t      int this_ret = TODO_cleanup_cfg;\n \t      switch (ifn)\n \t\t{\n \t\tcase IFN_UBSAN_NULL:\n@@ -1387,8 +1389,10 @@ pass_sanopt::execute (function *fun)\n \t\t  no_next = hwasan_expand_mark_ifn (&gsi);\n \t\t  break;\n \t\tdefault:\n+\t\t  this_ret = 0;\n \t\t  break;\n \t\t}\n+\t      ret |= this_ret;\n \t    }\n \t  else if (gimple_call_builtin_p (stmt, BUILT_IN_NORMAL))\n \t    {\n@@ -1418,7 +1422,7 @@ pass_sanopt::execute (function *fun)\n   if (need_commit_edge_insert)\n     gsi_commit_edge_inserts ();\n \n-  return 0;\n+  return ret;\n }\n \n } // anon namespace"}, {"sha": "10eb2789a490f709d1c1021565cea450cce193c7", "filename": "gcc/testsuite/gcc.dg/asan/pr106190.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39a43dc336561e0eba0de477b16c7355f19d84ee/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr106190.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39a43dc336561e0eba0de477b16c7355f19d84ee/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr106190.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr106190.c?ref=39a43dc336561e0eba0de477b16c7355f19d84ee", "patch": "@@ -0,0 +1,15 @@\n+/* PR middle-end/106190 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fnon-call-exceptions -fsanitize=address,undefined -fno-sanitize-recover=all\" } */\n+\n+int\n+main ()\n+{\n+  int a;\n+  int *b[1];\n+  int c[10];\n+  int d[1][1];\n+  for (a = 0; a < 1; a++)\n+    d[1][a] = 0;\n+  return 0;\n+}"}]}