{"sha": "af94026524eafbe1270e28e5142e5958a4dadf07", "node_id": "C_kwDOANBUbNoAKGFmOTQwMjY1MjRlYWZiZTEyNzBlMjhlNTE0MmU1OTU4YTRkYWRmMDc", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2022-11-23T07:56:45Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-24T10:11:25Z"}, "message": "ada: Spurious error on Lock_Free protected type with discriminants\n\nThis patch corrects an issue in the compiler whereby unprefixed discriminants\nappearing in protected subprograms were unable to be properly resolved -\nleading to spurious resolution errors.\n\ngcc/ada/\n\n\t* sem_ch8.adb\n\t(Find_Direct_Name): Remove bypass to reanalyze incorrectly\n\tanalyzed discriminals.\n\t(Set_Entity_Or_Discriminal): Avoid resetting the entity field of a\n\tdiscriminant reference to be the internally generated renaming\n\twhen we are in strict preanalysis mode.", "tree": {"sha": "2c55cd027b0bbd4ca8173daa9baaf17cd281ba92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c55cd027b0bbd4ca8173daa9baaf17cd281ba92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af94026524eafbe1270e28e5142e5958a4dadf07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af94026524eafbe1270e28e5142e5958a4dadf07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af94026524eafbe1270e28e5142e5958a4dadf07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af94026524eafbe1270e28e5142e5958a4dadf07/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a42e39a7b974645d2820931357e99411fdb0beb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a42e39a7b974645d2820931357e99411fdb0beb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a42e39a7b974645d2820931357e99411fdb0beb6"}], "stats": {"total": 29, "additions": 12, "deletions": 17}, "files": [{"sha": "841076bbd01d52ea350a66502c41201f311fdd56", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 12, "deletions": 17, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af94026524eafbe1270e28e5142e5958a4dadf07/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af94026524eafbe1270e28e5142e5958a4dadf07/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=af94026524eafbe1270e28e5142e5958a4dadf07", "patch": "@@ -4891,6 +4891,18 @@ package body Sem_Ch8 is\n          then\n             null;\n \n+         --  Don't replace the discriminant in strict preanalysis mode since\n+         --  it can lead to errors during full analysis when the discriminant\n+         --  gets referenced later.\n+\n+         --  This can occur in situations where a protected type contains\n+         --  an expression function which references a discriminant.\n+\n+         elsif Preanalysis_Active\n+           and then Inside_Preanalysis_Without_Freezing = 0\n+         then\n+            null;\n+\n          else\n             Set_Entity (N, Discriminal (E));\n          end if;\n@@ -6048,21 +6060,6 @@ package body Sem_Ch8 is\n          if Is_Type (Entity (N)) then\n             Set_Etype (N, Entity (N));\n \n-         --  The exception to this general rule are constants associated with\n-         --  discriminals of protected types because for each protected op\n-         --  a new set of discriminals is internally created by the frontend\n-         --  (see Exp_Ch9.Set_Discriminals), and the current decoration of the\n-         --  entity pointer may have been set as part of a preanalysis, where\n-         --  discriminals still reference the first subprogram or entry to be\n-         --  expanded (see Expand_Protected_Body_Declarations).\n-\n-         elsif Full_Analysis\n-           and then Ekind (Entity (N)) = E_Constant\n-           and then Present (Discriminal_Link (Entity (N)))\n-           and then Is_Protected_Type (Scope (Discriminal_Link (Entity (N))))\n-         then\n-            goto Find_Name;\n-\n          else\n             declare\n                Entyp : constant Entity_Id := Etype (Entity (N));\n@@ -6102,8 +6099,6 @@ package body Sem_Ch8 is\n          return;\n       end if;\n \n-      <<Find_Name>>\n-\n       --  Preserve relevant elaboration-related attributes of the context which\n       --  are no longer available or very expensive to recompute once analysis,\n       --  resolution, and expansion are over."}]}