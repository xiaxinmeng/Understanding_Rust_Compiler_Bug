{"sha": "87557722c87bd2ef0905ff061e7b0f990626ec5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc1NTc3MjJjODdiZDJlZjA5MDVmZjA2MWU3YjBmOTkwNjI2ZWM1ZQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-06-24T22:56:21Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-06-24T22:56:21Z"}, "message": "re PR libfortran/32456 (IO error message should show Unit/Filename)\n\n2007-06-24  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/32456\n\t* runtime/error.c (show_locus): Update to emit the unit number\n\tand file name involved with the error.  Use new function\n\tfilename_from_unit.\n\t* libgfortran.h (filename_from_unit): Declare new function.\n\t* io/unit.c (init_units): Set the unit file name for stdin, stdout,\n\tand stderr for use later in error reporting.\n\t(filename_from_unit): Add this new function.\n\nFrom-SVN: r125989", "tree": {"sha": "02b1685a81931b1ab370a868e2b201861e6a069c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02b1685a81931b1ab370a868e2b201861e6a069c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87557722c87bd2ef0905ff061e7b0f990626ec5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87557722c87bd2ef0905ff061e7b0f990626ec5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87557722c87bd2ef0905ff061e7b0f990626ec5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87557722c87bd2ef0905ff061e7b0f990626ec5e/comments", "author": null, "committer": null, "parents": [{"sha": "a49c5793d5df1c90f00aa0419b1f218bb4983fd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a49c5793d5df1c90f00aa0419b1f218bb4983fd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a49c5793d5df1c90f00aa0419b1f218bb4983fd9"}], "stats": {"total": 67, "additions": 67, "deletions": 0}, "files": [{"sha": "55fe2e5f188a8f55df03f30ef80d01a7b6ab0dfa", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87557722c87bd2ef0905ff061e7b0f990626ec5e/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87557722c87bd2ef0905ff061e7b0f990626ec5e/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=87557722c87bd2ef0905ff061e7b0f990626ec5e", "patch": "@@ -1,3 +1,14 @@\n+2007-06-24  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/32456\n+\t* runtime/error.c (show_locus): Update to emit the unit number\n+\tand file name involved with the error.  Use new function\n+\tfilename_from_unit.\n+\t* libgfortran.h (filename_from_unit): Declare new function.\n+\t* io/unit.c (init_units): Set the unit file name for stdin, stdout,\n+\tand stderr for use later in error reporting.\n+\t(filename_from_unit): Add this new function.\n+\n 2007-06-24  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/32446"}, {"sha": "9297af0852138650755542c828e43f96fdf65e58", "filename": "libgfortran/io/unit.c", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87557722c87bd2ef0905ff061e7b0f990626ec5e/libgfortran%2Fio%2Funit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87557722c87bd2ef0905ff061e7b0f990626ec5e/libgfortran%2Fio%2Funit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funit.c?ref=87557722c87bd2ef0905ff061e7b0f990626ec5e", "patch": "@@ -84,6 +84,12 @@ __gthread_mutex_t unit_lock = __GTHREAD_MUTEX_INIT;\n __gthread_mutex_t unit_lock;\n #endif\n \n+/* We use these filenames for error reporting.  */\n+\n+static char stdin_name[] = \"stdin\";\n+static char stdout_name[] = \"stdout\";\n+static char stderr_name[] = \"stderr\";\n+\n /* This implementation is based on Stefan Nilsson's article in the\n  * July 1997 Doctor Dobb's Journal, \"Treaps in Java\". */\n \n@@ -506,6 +512,10 @@ init_units (void)\n       u->recl = options.default_recl;\n       u->endfile = NO_ENDFILE;\n \n+      u->file_len = strlen (stdin_name);\n+      u->file = get_mem (u->file_len);\n+      memmove (u->file, stdin_name, u->file_len);\n+    \n       __gthread_mutex_unlock (&u->lock);\n     }\n \n@@ -524,6 +534,10 @@ init_units (void)\n \n       u->recl = options.default_recl;\n       u->endfile = AT_ENDFILE;\n+    \n+      u->file_len = strlen (stdout_name);\n+      u->file = get_mem (u->file_len);\n+      memmove (u->file, stdout_name, u->file_len);\n \n       __gthread_mutex_unlock (&u->lock);\n     }\n@@ -544,6 +558,10 @@ init_units (void)\n       u->recl = options.default_recl;\n       u->endfile = AT_ENDFILE;\n \n+      u->file_len = strlen (stderr_name);\n+      u->file = get_mem (u->file_len);\n+      memmove (u->file, stderr_name, u->file_len);\n+\n       __gthread_mutex_unlock (&u->lock);\n     }\n \n@@ -665,3 +683,24 @@ update_position (gfc_unit *u)\n   else\n     u->flags.position = POSITION_ASIS;\n }\n+\n+\n+/* filename_from_unit()-- If the unit_number exists, return a pointer to the\n+   name of the associated file, otherwise return the empty string.  The caller\n+   must free memory allocated for the filename string.  */\n+\n+char *\n+filename_from_unit (int unit_number)\n+{\n+  char *filename;\n+  gfc_unit *u = NULL;\n+  u = find_unit (unit_number);\n+  if (u != NULL)\n+    {\n+      filename = (char *) get_mem (u->file_len + 1);\n+      unpack_filename (filename, u->file, u->file_len);\n+      return filename;\n+    }\n+  else\n+    return (char *) NULL;\n+}\n\\ No newline at end of file"}, {"sha": "e0801a14d1635d157809b9155de4dd533523cc67", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87557722c87bd2ef0905ff061e7b0f990626ec5e/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87557722c87bd2ef0905ff061e7b0f990626ec5e/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=87557722c87bd2ef0905ff061e7b0f990626ec5e", "patch": "@@ -683,6 +683,9 @@ extern int st_printf (const char *, ...)\n   __attribute__ ((format (printf, 1, 2)));\n internal_proto(st_printf);\n \n+extern char * filename_from_unit (int);\n+internal_proto(filename_from_unit);\n+\n /* stop.c */\n \n extern void stop_numeric (GFC_INTEGER_4) __attribute__ ((noreturn));"}, {"sha": "959a44b97d129446fb61d72fcc9277e76873af5b", "filename": "libgfortran/runtime/error.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87557722c87bd2ef0905ff061e7b0f990626ec5e/libgfortran%2Fruntime%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87557722c87bd2ef0905ff061e7b0f990626ec5e/libgfortran%2Fruntime%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Ferror.c?ref=87557722c87bd2ef0905ff061e7b0f990626ec5e", "patch": "@@ -248,8 +248,22 @@ st_sprintf (char *buffer, const char *format, ...)\n void\n show_locus (st_parameter_common *cmp)\n {\n+  static char *filename;\n+\n   if (!options.locus || cmp == NULL || cmp->filename == NULL)\n     return;\n+  \n+  if (cmp->unit > 0)\n+    {\n+      filename = filename_from_unit (cmp->unit);\n+      if (filename != NULL)\n+\t{\n+\t  st_printf (\"At line %d of file %s (unit = %d, file = '%s')\\n\",\n+\t\t   (int) cmp->line, cmp->filename, cmp->unit, filename);\n+\t  free_mem (filename);\n+\t}\n+      return;\n+    }\n \n   st_printf (\"At line %d of file %s\\n\", (int) cmp->line, cmp->filename);\n }"}]}