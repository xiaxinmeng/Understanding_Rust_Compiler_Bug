{"sha": "a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdkYWZhMjA2ODhlZjVkNjBkODIxMmNlOWVmNmRkNzRkN2JiMmU5YQ==", "commit": {"author": {"name": "Laurent GUERBY", "email": "laurent@guerby.net", "date": "2008-07-30T06:45:39Z"}, "committer": {"name": "Laurent Guerby", "email": "guerby@gcc.gnu.org", "date": "2008-07-30T06:45:39Z"}, "message": "re PR ada/5911 (Support for multilib in Ada)\n\ngcc/ChangeLog\n2008-07-29  Laurent Guerby <laurent@guerby.net>\n\n        PR ada/5911\n        * gnattools/Makefile.in: Replace stamp-gnatlib by\n        stamp-gnatlib-rts.\n\ngcc/ada/ChangeLog\n2008-07-29  Laurent Guerby <laurent@guerby.net>\n\n        PR ada/5911\n        * gcc-interface/Makefile.in (MULTISUBDIR, RTSDIR): New variables.\n        Pass MULTISUBDIR to recursive make. Use $(RTSDIR) instead of rts.\n        Replace stamp-gnatlib* by stamp-gnatlib*-rts.\n        * gcc-interface/Make-lang.in: Replace stamp-gnatlib2\n        by stamp-gnatlib2-rts.\n\nFrom-SVN: r138294", "tree": {"sha": "783c75ec16d92bdcca2138686dcbaf6502ca9d50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/783c75ec16d92bdcca2138686dcbaf6502ca9d50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a/comments", "author": {"login": "guerby", "id": 6659329, "node_id": "MDQ6VXNlcjY2NTkzMjk=", "avatar_url": "https://avatars.githubusercontent.com/u/6659329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guerby", "html_url": "https://github.com/guerby", "followers_url": "https://api.github.com/users/guerby/followers", "following_url": "https://api.github.com/users/guerby/following{/other_user}", "gists_url": "https://api.github.com/users/guerby/gists{/gist_id}", "starred_url": "https://api.github.com/users/guerby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guerby/subscriptions", "organizations_url": "https://api.github.com/users/guerby/orgs", "repos_url": "https://api.github.com/users/guerby/repos", "events_url": "https://api.github.com/users/guerby/events{/privacy}", "received_events_url": "https://api.github.com/users/guerby/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "70b1e3763115ba960003375325844418d0eb0eaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70b1e3763115ba960003375325844418d0eb0eaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70b1e3763115ba960003375325844418d0eb0eaa"}], "stats": {"total": 212, "additions": 121, "deletions": 91}, "files": [{"sha": "a3efe937a23a08499e11ff676aae72b9174491df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a", "patch": "@@ -1,3 +1,9 @@\n+2008-07-30  Laurent Guerby  <laurent@guerby.net>\n+\n+        PR ada/5911\n+        * gnattools/Makefile.in: Replace stamp-gnatlib by\n+        stamp-gnatlib-rts.\n+\t\n 2008-07-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* doc/cpp.texi: Update to GFDL 1.2."}, {"sha": "ec532ca66c04dd3f6c81a7c9c8120544739883c2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a", "patch": "@@ -1,3 +1,12 @@\n+2008-07-30  Laurent Guerby  <laurent@guerby.net>\n+\n+        PR ada/5911\n+        * gcc-interface/Makefile.in (MULTISUBDIR, RTSDIR): New variables.\n+        Pass MULTISUBDIR to recursive make. Use $(RTSDIR) instead of rts.\n+        Replace stamp-gnatlib* by stamp-gnatlib*-rts.\n+        * gcc-interface/Make-lang.in: Replace stamp-gnatlib2\n+        by stamp-gnatlib2-rts.\n+\t\n 2008-07-30  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \tPR documentation/15479"}, {"sha": "a0dadffc90f0937c0d0a2370cc6b20dcc7f11c40", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a", "patch": "@@ -302,7 +302,7 @@ TARGET_ADA_SRCS =\n #  stamp target in the parent directory whenever gnat1 is rebuilt\n gnat1$(exeext): $(TARGET_ADA_SRCS) $(GNAT1_OBJS) $(ADA_BACKEND) $(LIBDEPS)\n \t$(GCC_LINK) -o $@ $(GNAT1_OBJS) $(ADA_BACKEND) $(LIBS) $(SYSLIBS) $(GMPLIBS)\n-\t$(RM) stamp-gnatlib2 stamp-tools\n+\t$(RM) stamp-gnatlib2-rts stamp-tools\n \n gnatbind$(exeext): ada/b_gnatb.o $(CONFIG_H) $(GNATBIND_OBJS)\n \t$(GCC_LINK) -o $@ ada/b_gnatb.o $(GNATBIND_OBJS) $(ALL_CFLAGS) $(LIBS) $(SYSLIBS)"}, {"sha": "1fbfeb51ccb19b96bfc0b3087dbddb41a11457ae", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 101, "deletions": 86, "changes": 187, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a", "patch": "@@ -193,6 +193,10 @@ TARGET_ADA_SRCS =\n # Type of tools build we are doing; default is not compiling tools.\n TOOLSCASE =\n \n+# Multilib handling\n+MULTISUBDIR = \n+RTSDIR = rts$(subst /,_,$(MULTISUBDIR))\n+\n # End of variables for you to override.\n \n all: all.indirect\n@@ -1753,17 +1757,17 @@ ADA_INCLUDE_SRCS =\\\n  a-[a-o]*.adb a-[p-z]*.adb a-[a-o]*.ads a-[p-z]*.ads g-*.ad? i-*.ad? \\\n  s-[a-o]*.adb s-[p-z]*.adb s-[a-o]*.ads s-[p-z]*.ads\n \n-LIBGNAT=../rts/libgnat.a\n+LIBGNAT=../$(RTSDIR)/libgnat.a\n \n GCC_LINK=$(CC) -static-libgcc $(ADA_INCLUDES)\n \n # when compiling the tools, the runtime has to be first on the path so that\n # it hides the runtime files lying with the rest of the sources\n ifeq ($(TOOLSCASE),native)\n-  vpath %.ads ../rts ../\n-  vpath %.adb ../rts ../\n-  vpath %.c   ../rts ../\n-  vpath %.h   ../rts ../\n+  vpath %.ads ../$(RTSDIR) ../\n+  vpath %.adb ../$(RTSDIR) ../\n+  vpath %.c   ../$(RTSDIR) ../\n+  vpath %.h   ../$(RTSDIR) ../\n endif\n \n # in the cross tools case, everything is compiled with the native\n@@ -1843,16 +1847,16 @@ gnatlink-re:  link.o targext.o\n \t$(GCC_LINK) $(ALL_CFLAGS) $(LDFLAGS) -o $@ b_gnatl.o $(GNATLINK_OBJS) \\\n \t\t    $(TOOLS_LIBS)\n \n-../stamp-gnatlib:\n-\t@if [ ! -f stamp-gnatlib ] ; \\\n+../stamp-gnatlib-$(RTSDIR):\n+\t@if [ ! -f stamp-gnatlib-$(RTSDIR) ] ; \\\n \tthen \\\n \t  $(ECHO) You must first build the GNAT library: make gnatlib; \\\n \t  false; \\\n \telse \\\n \t  true; \\\n \tfi\n \n-install-gnatlib: ../stamp-gnatlib\n+install-gnatlib: ../stamp-gnatlib-$(RTSDIR)\n #\tCreate the directory before deleting it, in case the directory is\n #\ta list of directories (as it may be on VMS). This ensures we are\n #\tdeleting the right one.\n@@ -1862,49 +1866,49 @@ install-gnatlib: ../stamp-gnatlib\n \t$(RMDIR) $(DESTDIR)$(ADA_INCLUDE_DIR)\n \t-$(MKDIR) $(DESTDIR)$(ADA_RTL_OBJ_DIR)\n \t-$(MKDIR) $(DESTDIR)$(ADA_INCLUDE_DIR)\n-\tfor file in rts/*.ali; do \\\n+\tfor file in $(RTSDIR)/*.ali; do \\\n \t    $(INSTALL_DATA_DATE) $$file $(DESTDIR)$(ADA_RTL_OBJ_DIR); \\\n \tdone\n-\t-$(INSTALL_DATA) rts/g-trasym$(objext) $(DESTDIR)$(ADA_RTL_OBJ_DIR)\n-\t-cd rts; for file in *$(arext);do \\\n+\t-$(INSTALL_DATA) $(RTSDIR)/g-trasym$(objext) $(DESTDIR)$(ADA_RTL_OBJ_DIR)\n+\t-cd $(RTSDIR); for file in *$(arext);do \\\n \t    $(INSTALL_DATA) $$file $(DESTDIR)$(ADA_RTL_OBJ_DIR); \\\n \t    $(RANLIB_FOR_TARGET) $(DESTDIR)$(ADA_RTL_OBJ_DIR)/$$file; \\\n \tdone\n \t-$(foreach file, $(EXTRA_ADALIB_FILES), \\\n-\t    $(INSTALL_DATA_DATE) rts/$(file) $(DESTDIR)$(ADA_RTL_OBJ_DIR) && \\\n+\t    $(INSTALL_DATA_DATE) $(RTSDIR)/$(file) $(DESTDIR)$(ADA_RTL_OBJ_DIR) && \\\n \t) true\n #     Install the shared libraries, if any, using $(INSTALL) instead\n #     of $(INSTALL_DATA). The latter may force a mode inappropriate\n #     for shared libraries on some targets, e.g. on HP-UX where the x\n #     permission is required.\n \tfor file in gnat gnarl; do \\\n-\t   if [ -f rts/lib$${file}$(hyphen)$(LIBRARY_VERSION)$(soext) ]; then \\\n-\t      $(INSTALL) rts/lib$${file}$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n+\t   if [ -f $(RTSDIR)/lib$${file}$(hyphen)$(LIBRARY_VERSION)$(soext) ]; then \\\n+\t      $(INSTALL) $(RTSDIR)/lib$${file}$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t\t $(DESTDIR)$(ADA_RTL_OBJ_DIR); \\\n \t   fi; \\\n-\t   if [ -f rts/lib$${file}$(soext) ]; then \\\n+\t   if [ -f $(RTSDIR)/lib$${file}$(soext) ]; then \\\n \t      $(LN_S) lib$${file}$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t      $(DESTDIR)$(ADA_RTL_OBJ_DIR)/lib$${file}$(soext); \\\n \t   fi; \\\n \tdone\n # This copy must be done preserving the date on the original file.\n-\tfor file in rts/*.ad?; do \\\n+\tfor file in $(RTSDIR)/*.ad?; do \\\n \t    $(INSTALL_DATA_DATE) $$file $(DESTDIR)$(ADA_INCLUDE_DIR); \\\n \tdone\n \tcd $(DESTDIR)$(ADA_INCLUDE_DIR); $(CHMOD) a-wx *.adb\n \tcd $(DESTDIR)$(ADA_INCLUDE_DIR); $(CHMOD) a-wx *.ads\n \n-../stamp-gnatlib2:\n-\t$(RM) rts/s-*.ali\n-\t$(RM) rts/s-*$(objext)\n-\t$(RM) rts/a-*.ali\n-\t$(RM) rts/a-*$(objext)\n-\t$(RM) rts/*.ali\n-\t$(RM) rts/*$(objext)\n-\t$(RM) rts/*$(arext)\n-\t$(RM) rts/*$(soext)\n-\ttouch ../stamp-gnatlib2\n-\t$(RM) ../stamp-gnatlib\n+../stamp-gnatlib2-$(RTSDIR):\n+\t$(RM) $(RTSDIR)/s-*.ali\n+\t$(RM) $(RTSDIR)/s-*$(objext)\n+\t$(RM) $(RTSDIR)/a-*.ali\n+\t$(RM) $(RTSDIR)/a-*$(objext)\n+\t$(RM) $(RTSDIR)/*.ali\n+\t$(RM) $(RTSDIR)/*$(objext)\n+\t$(RM) $(RTSDIR)/*$(arext)\n+\t$(RM) $(RTSDIR)/*$(soext)\n+\ttouch ../stamp-gnatlib2-$(RTSDIR)\n+\t$(RM) ../stamp-gnatlib-$(RTSDIR)\n \n # NOTE: The $(foreach ...) commands assume \";\" is the valid separator between\n #       successive target commands. Although the Gnu make documentation\n@@ -1915,42 +1919,42 @@ install-gnatlib: ../stamp-gnatlib\n \n # GNULLI Begin ###########################################################\n \n-../stamp-gnatlib1: Makefile ../stamp-gnatlib2\n-\t$(RMDIR) rts\n-\t$(MKDIR) rts\n-\t$(CHMOD) u+w rts\n+../stamp-gnatlib1-$(RTSDIR): Makefile ../stamp-gnatlib2-$(RTSDIR)\n+\t$(RMDIR) $(RTSDIR)\n+\t$(MKDIR) $(RTSDIR)\n+\t$(CHMOD) u+w $(RTSDIR)\n # Copy target independent sources\n \t$(foreach f,$(ADA_INCLUDE_SRCS) $(LIBGNAT_SRCS), \\\n-\t  $(LN_S) $(fsrcpfx)$(f) rts ;) true\n+\t  $(LN_S) $(fsrcpfx)$(f) $(RTSDIR) ;) true\n # Remove files to be replaced by target dependent sources\n \t$(RM) $(foreach PAIR,$(LIBGNAT_TARGET_PAIRS), \\\n-\t                rts/$(word 1,$(subst <, ,$(PAIR))))\n-\t$(RM) rts/*-*-*.ads rts/*-*-*.adb\n+\t                $(RTSDIR)/$(word 1,$(subst <, ,$(PAIR))))\n+\t$(RM) $(RTSDIR)/*-*-*.ads $(RTSDIR)/*-*-*.adb\n # Copy new target dependent sources\n \t$(foreach PAIR,$(LIBGNAT_TARGET_PAIRS), \\\n \t          $(LN_S) $(fsrcpfx)$(word 2,$(subst <, ,$(PAIR))) \\\n-\t                rts/$(word 1,$(subst <, ,$(PAIR)));)\n-\t$(RM) ../stamp-gnatlib\n-\ttouch ../stamp-gnatlib1\n+\t                $(RTSDIR)/$(word 1,$(subst <, ,$(PAIR)));)\n+\t$(RM) ../stamp-gnatlib-$(RTSDIR)\n+\ttouch ../stamp-gnatlib1-$(RTSDIR)\n \n # GNULLI End #############################################################\n \n # Don't use semicolon separated shell commands that involve list expansions.\n # The semicolon triggers a call to DCL on VMS and DCL can't handle command\n # line lengths in excess of 256 characters.\n-# Example: cd rts; ar rc libfoo.a $(LONG_LIST_OF_OBJS)\n+# Example: cd $(RTSDIR); ar rc libfoo.a $(LONG_LIST_OF_OBJS)\n # is guaranteed to overflow the buffer.\n \n-gnatlib: ../stamp-gnatlib1 ../stamp-gnatlib2\n-\t$(MAKE) -C rts \\\n+gnatlib: ../stamp-gnatlib1-$(RTSDIR) ../stamp-gnatlib2-$(RTSDIR)\n+\t$(MAKE) -C $(RTSDIR) \\\n \t\tCC=\"`echo \\\"$(GCC_FOR_TARGET)\\\" \\\n \t\t| sed -e 's,^\\./xgcc,../../xgcc,' -e 's,-B\\./,-B../../,'`\" \\\n \t        INCLUDES=\"$(INCLUDES_FOR_SUBDIR) -I./../..\" \\\n                 CFLAGS=\"$(GNATLIBCFLAGS_FOR_C)\" \\\n \t        FORCE_DEBUG_ADAFLAGS=\"$(FORCE_DEBUG_ADAFLAGS)\" \\\n \t\tsrcdir=$(fsrcdir) \\\n \t        -f ../Makefile $(LIBGNAT_OBJS)\n-\t$(MAKE) -C rts \\\n+\t$(MAKE) -C $(RTSDIR) \\\n \t\tCC=\"`echo \\\"$(GCC_FOR_TARGET)\\\" \\\n \t\t| sed -e 's,^\\./xgcc,../../xgcc,' -e 's,-B\\./,-B../../,'`\" \\\n \t        ADA_INCLUDES=\"\" \\\n@@ -1960,83 +1964,88 @@ gnatlib: ../stamp-gnatlib1 ../stamp-gnatlib2\n \t\tsrcdir=$(fsrcdir) \\\n \t        -f ../Makefile \\\n \t        $(GNATRTL_OBJS)\n-\t$(RM) rts/libgnat$(arext) rts/libgnarl$(arext)\n-\t$(AR_FOR_TARGET) $(AR_FLAGS) rts/libgnat$(arext) \\\n-\t   $(addprefix rts/,$(GNATRTL_NONTASKING_OBJS) $(LIBGNAT_OBJS))\n+\t$(RM) $(RTSDIR)/libgnat$(arext) $(RTSDIR)/libgnarl$(arext)\n+\t$(AR_FOR_TARGET) $(AR_FLAGS) $(RTSDIR)/libgnat$(arext) \\\n+\t   $(addprefix $(RTSDIR)/,$(GNATRTL_NONTASKING_OBJS) $(LIBGNAT_OBJS))\n         ifneq ($(PREFIX_OBJS),)\n-\t\t$(AR_FOR_TARGET) $(AR_FLAGS) rts/libgccprefix$(arext) \\\n+\t\t$(AR_FOR_TARGET) $(AR_FLAGS) $(RTSDIR)/libgccprefix$(arext) \\\n \t\t  $(PREFIX_OBJS);\n-\t\t$(RANLIB_FOR_TARGET) rts/libgccprefix$(arext)\n+\t\t$(RANLIB_FOR_TARGET) $(RTSDIR)/libgccprefix$(arext)\n         endif\n-\t$(RANLIB_FOR_TARGET) rts/libgnat$(arext)\n-\t$(AR_FOR_TARGET) $(AR_FLAGS) rts/libgnarl$(arext) \\\n-\t   $(addprefix rts/,$(GNATRTL_TASKING_OBJS))\n-\t$(RANLIB_FOR_TARGET) rts/libgnarl$(arext)\n-\t$(AR_FOR_TARGET) $(AR_FLAGS) rts/libgnala$(arext) \\\n-\t   $(addprefix rts/,$(GNATRTL_LINEARALGEBRA_OBJS))\n-\t$(RANLIB_FOR_TARGET) rts/libgnala$(arext)\n+\t$(RANLIB_FOR_TARGET) $(RTSDIR)/libgnat$(arext)\n+\t$(AR_FOR_TARGET) $(AR_FLAGS) $(RTSDIR)/libgnarl$(arext) \\\n+\t   $(addprefix $(RTSDIR)/,$(GNATRTL_TASKING_OBJS))\n+\t$(RANLIB_FOR_TARGET) $(RTSDIR)/libgnarl$(arext)\n+\t$(AR_FOR_TARGET) $(AR_FLAGS) $(RTSDIR)/libgnala$(arext) \\\n+\t   $(addprefix $(RTSDIR)/,$(GNATRTL_LINEARALGEBRA_OBJS))\n+\t$(RANLIB_FOR_TARGET) $(RTSDIR)/libgnala$(arext)\n         ifeq ($(GMEM_LIB),gmemlib)\n-\t\t$(AR_FOR_TARGET) $(AR_FLAGS) rts/libgmem$(arext) \\\n-\t\t  rts/memtrack.o\n-\t\t$(RANLIB_FOR_TARGET) rts/libgmem$(arext)\n+\t\t$(AR_FOR_TARGET) $(AR_FLAGS) $(RTSDIR)/libgmem$(arext) \\\n+\t\t  $(RTSDIR)/memtrack.o\n+\t\t$(RANLIB_FOR_TARGET) $(RTSDIR)/libgmem$(arext)\n         endif\n-\t$(CHMOD) a-wx rts/*.ali\n-\ttouch ../stamp-gnatlib\n+\t$(CHMOD) a-wx $(RTSDIR)/*.ali\n+\ttouch ../stamp-gnatlib-$(RTSDIR)\n \n # Warning: this target assumes that LIBRARY_VERSION has been set correctly.\n gnatlib-shared-default:\n \t$(MAKE) $(FLAGS_TO_PASS) \\\n              GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n \t     GNATLIBCFLAGS=\"$(GNATLIBCFLAGS) $(TARGET_LIBGCC2_CFLAGS)\" \\\n+\t     MULTISUBDIR=\"$(MULTISUBDIR)\" \\\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n              gnatlib\n-\t$(RM) rts/libgna*$(soext)\n-\tcd rts; ../../xgcc -B../../ -shared $(GNATLIBCFLAGS) \\\n+\t$(RM) $(RTSDIR)/libgna*$(soext)\n+\tcd $(RTSDIR); ../../xgcc -B../../ -shared $(GNATLIBCFLAGS) \\\n \t\t$(TARGET_LIBGCC2_CFLAGS) \\\n \t\t-o libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(GNATRTL_NONTASKING_OBJS) $(LIBGNAT_OBJS) \\\n \t\t$(SO_OPTS)libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(MISCLIB) -lm\n-\tcd rts; ../../xgcc -B../../ -shared $(GNATLIBCFLAGS) \\\n+\tcd $(RTSDIR); ../../xgcc -B../../ -shared $(GNATLIBCFLAGS) \\\n \t\t$(TARGET_LIBGCC2_CFLAGS) \\\n \t\t-o libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(GNATRTL_TASKING_OBJS) \\\n \t\t$(SO_OPTS)libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(THREADSLIB)\n-\tcd rts; $(LN_S) libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n+\tcd $(RTSDIR); $(LN_S) libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\tlibgnat$(soext)\n-\tcd rts; $(LN_S) libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n+\tcd $(RTSDIR); $(LN_S) libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\tlibgnarl$(soext)\n \n gnatlib-shared-dual:\n \t$(MAKE) $(FLAGS_TO_PASS) \\\n              GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n \t     GNATLIBCFLAGS=\"$(GNATLIBCFLAGS)\" \\\n+\t     MULTISUBDIR=\"$(MULTISUBDIR)\" \\\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n              gnatlib-shared-default\n-\t$(MV) rts/libgna*$(soext) .\n-\t$(RM) ../stamp-gnatlib2\n+\t$(MV) $(RTSDIR)/libgna*$(soext) .\n+\t$(RM) ../stamp-gnatlib2-$(RTSDIR)\n \t$(MAKE) $(FLAGS_TO_PASS) \\\n              GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n \t     GNATLIBCFLAGS=\"$(GNATLIBCFLAGS)\" \\\n+\t     MULTISUBDIR=\"$(MULTISUBDIR)\" \\\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n              gnatlib\n-\t$(MV) libgna*$(soext) rts\n+\t$(MV) libgna*$(soext) $(RTSDIR)\n \n gnatlib-shared-dual-win32:\n \t$(MAKE) $(FLAGS_TO_PASS) \\\n              GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n \t     GNATLIBCFLAGS=\"$(GNATLIBCFLAGS) $(TARGET_LIBGCC2_CFLAGS)\" \\\n+\t     MULTISUBDIR=\"$(MULTISUBDIR)\" \\\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n              gnatlib-shared-win32\n-\t$(MV) rts/libgna*$(soext) .\n-\t$(RM) ../stamp-gnatlib2\n+\t$(MV) $(RTSDIR)/libgna*$(soext) .\n+\t$(RM) ../stamp-gnatlib2-$(RTSDIR)\n \t$(MAKE) $(FLAGS_TO_PASS) \\\n              GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n \t     GNATLIBCFLAGS=\"$(GNATLIBCFLAGS)\" \\\n+\t     MULTISUBDIR=\"$(MULTISUBDIR)\" \\\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n              gnatlib\n-\t$(MV) libgna*$(soext) rts\n+\t$(MV) libgna*$(soext) $(RTSDIR)\n \n # ??? we need to add the option to support auto-import of arrays/records to\n # the GNATLIBFLAGS when this will be supported by GNAT. At this point we will\n@@ -2046,14 +2055,15 @@ gnatlib-shared-win32:\n \t$(MAKE) $(FLAGS_TO_PASS) \\\n              GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n \t     GNATLIBCFLAGS=\"$(GNATLIBCFLAGS) $(TARGET_LIBGCC2_CFLAGS)\" \\\n+\t     MULTISUBDIR=\"$(MULTISUBDIR)\" \\\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n              gnatlib\n-\t$(RM) rts/libgna*$(soext)\n-\tcd rts; ../../xgcc -B../../ -shared $(TARGET_LIBGCC2_CFLAGS) \\\n+\t$(RM) $(RTSDIR)/libgna*$(soext)\n+\tcd $(RTSDIR); ../../xgcc -B../../ -shared $(TARGET_LIBGCC2_CFLAGS) \\\n \t\t-o libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(GNATRTL_NONTASKING_OBJS) $(LIBGNAT_OBJS) \\\n \t\t$(SO_OPTS)libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) $(MISCLIB)\n-\tcd rts; ../../xgcc -B../../ -shared $(TARGET_LIBGCC2_CFLAGS) \\\n+\tcd $(RTSDIR); ../../xgcc -B../../ -shared $(TARGET_LIBGCC2_CFLAGS) \\\n \t\t-o libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(GNATRTL_TASKING_OBJS) \\\n \t\t$(SO_OPTS)libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n@@ -2064,32 +2074,34 @@ gnatlib-shared-darwin:\n \t     GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n \t     GNATLIBCFLAGS=\"$(GNATLIBCFLAGS) $(TARGET_LIBGCC2_CFLAGS) \\\n \t                    -fno-common\" \\\n+\t     MULTISUBDIR=\"$(MULTISUBDIR)\" \\\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n \t     gnatlib\n-\t$(RM) rts/libgnat$(soext) rts/libgnarl$(soext)\n-\tcd rts; ../../xgcc -B../../ -dynamiclib $(TARGET_LIBGCC2_CFLAGS) \\\n+\t$(RM) $(RTSDIR)/libgnat$(soext) $(RTSDIR)/libgnarl$(soext)\n+\tcd $(RTSDIR); ../../xgcc -B../../ -dynamiclib $(TARGET_LIBGCC2_CFLAGS) \\\n \t\t-o libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(GNATRTL_NONTASKING_OBJS) $(LIBGNAT_OBJS) \\\n \t\t$(SO_OPTS) \\\n \t\t$(MISCLIB) -lm\n-\tcd rts; ../../xgcc -B../../ -dynamiclib $(TARGET_LIBGCC2_CFLAGS) \\\n+\tcd $(RTSDIR); ../../xgcc -B../../ -dynamiclib $(TARGET_LIBGCC2_CFLAGS) \\\n \t\t-o libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t$(GNATRTL_TASKING_OBJS) \\\n \t\t$(SO_OPTS) \\\n \t\t$(THREADSLIB) -Wl,libgnat$(hyphen)$(LIBRARY_VERSION)$(soext)\n-\tcd rts; $(LN_S) libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n+\tcd $(RTSDIR); $(LN_S) libgnat$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\tlibgnat$(soext)\n-\tcd rts; $(LN_S) libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n+\tcd $(RTSDIR); $(LN_S) libgnarl$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\tlibgnarl$(soext)\n \n gnatlib-shared-vms:\n \t$(MAKE) $(FLAGS_TO_PASS) \\\n              GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n \t     GNATLIBCFLAGS=\"$(GNATLIBCFLAGS)\" \\\n+\t     MULTISUBDIR=\"$(MULTISUBDIR)\" \\\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n              gnatlib\n-\t$(RM) rts/libgna*$(soext)\n-\tcd rts && \\\n+\t$(RM) $(RTSDIR)/libgna*$(soext)\n+\tcd $(RTSDIR) && \\\n \t../../gnatsym -s SYMVEC_$$$$.opt \\\n \t$(LIBGNAT_OBJS) $(GNATRTL_NONTASKING_OBJS) && \\\n \t../../xgcc -g -B../../ -shared -shared-libgcc \\\n@@ -2098,7 +2110,7 @@ gnatlib-shared-vms:\n \t   --for-linker=/noinform \\\n \t   --for-linker=SYMVEC_$$$$.opt \\\n \t   --for-linker=gsmatch=equal,$(GSMATCH_VERSION)\n-\tcd rts && \\\n+\tcd $(RTSDIR) && \\\n \t../../gnatsym -s SYMVEC_$$$$.opt \\\n \t$(GNATRTL_TASKING_OBJS) && \\\n \t../../xgcc -g -B../../ -shared -shared-libgcc \\\n@@ -2113,29 +2125,32 @@ gnatlib-shared:\n \t$(MAKE) $(FLAGS_TO_PASS) \\\n              GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n \t     GNATLIBCFLAGS=\"$(GNATLIBCFLAGS)\" \\\n+\t     MULTISUBDIR=\"$(MULTISUBDIR)\" \\\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n \t     TARGET_LIBGCC2_CFLAGS=\"$(TARGET_LIBGCC2_CFLAGS)\" \\\n              $(GNATLIB_SHARED)\n \n gnatlib-sjlj:\n-\t$(MAKE) $(FLAGS_TO_PASS) EH_MECHANISM=\"\" ../stamp-gnatlib1\n-\tsed -e 's/ZCX_By_Default.*/ZCX_By_Default            : constant Boolean := False;/' rts/system.ads > rts/s.ads\n-\t$(MV) rts/s.ads rts/system.ads\n+\t$(MAKE) $(FLAGS_TO_PASS) EH_MECHANISM=\"\" ../stamp-gnatlib1-$(RTSDIR)\n+\tsed -e 's/ZCX_By_Default.*/ZCX_By_Default            : constant Boolean := False;/' $(RTSDIR)/system.ads > $(RTSDIR)/s.ads\n+\t$(MV) $(RTSDIR)/s.ads $(RTSDIR)/system.ads\n \t$(MAKE) $(FLAGS_TO_PASS) \\\n \t     EH_MECHANISM=\"\" \\\n \t     GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n \t     GNATLIBCFLAGS=\"$(GNATLIBCFLAGS)\" \\\n+\t     MULTISUBDIR=\"$(MULTISUBDIR)\" \\\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n \t     TARGET_LIBGCC2_CFLAGS=\"$(TARGET_LIBGCC2_CFLAGS)\" gnatlib\n \n gnatlib-zcx:\n-\t$(MAKE) $(FLAGS_TO_PASS) EH_MECHANISM=\"-gcc\" ../stamp-gnatlib1\n-\tsed -e 's/ZCX_By_Default.*/ZCX_By_Default            : constant Boolean := True;/' rts/system.ads > rts/s.ads\n-\t$(MV) rts/s.ads rts/system.ads\n+\t$(MAKE) $(FLAGS_TO_PASS) EH_MECHANISM=\"-gcc\" ../stamp-gnatlib1-$(RTSDIR)\n+\tsed -e 's/ZCX_By_Default.*/ZCX_By_Default            : constant Boolean := True;/' $(RTSDIR)/system.ads > $(RTSDIR)/s.ads\n+\t$(MV) $(RTSDIR)/s.ads $(RTSDIR)/system.ads\n \t$(MAKE) $(FLAGS_TO_PASS) \\\n \t     EH_MECHANISM=\"-gcc\" \\\n \t     GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n \t     GNATLIBCFLAGS=\"$(GNATLIBCFLAGS)\" \\\n+\t     MULTISUBDIR=\"$(MULTISUBDIR)\" \\\n \t     THREAD_KIND=\"$(THREAD_KIND)\" \\\n \t     TARGET_LIBGCC2_CFLAGS=\"$(TARGET_LIBGCC2_CFLAGS)\" gnatlib\n "}, {"sha": "de0f6e35feb8299040a696a5ece1a6f2608b7237", "filename": "gnattools/Makefile.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a/gnattools%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a/gnattools%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gnattools%2FMakefile.in?ref=a7dafa20688ef5d60d8212ce9ef6dd74d7bb2e9a", "patch": "@@ -153,8 +153,8 @@ TOOLS_TARGET_PAIRS = @TOOLS_TARGET_PAIRS@\n gnattools: @default_gnattools_target@\n \n # Sanity check\n-$(GCC_DIR)/stamp-gnatlib:\n-\t@if [ ! -f $(GCC_DIR)/stamp-gnatlib ] ; \\\n+$(GCC_DIR)/stamp-gnatlib-rts:\n+\t@if [ ! -f $(GCC_DIR)/stamp-gnatlib-rts ] ; \\\n         then \\\n           echo \"Cannot build gnattools while gnatlib is out of date or unbuilt\" ; \\\n           false; \\\n@@ -183,7 +183,7 @@ $(GCC_DIR)/stamp-tools:\n # to be able to build gnatmake without a version of gnatmake around. Once \n # everything has been compiled once, gnatmake can be recompiled with itself \n # (see target regnattools) \n-gnattools-native: $(GCC_DIR)/stamp-tools $(GCC_DIR)/stamp-gnatlib\n+gnattools-native: $(GCC_DIR)/stamp-tools $(GCC_DIR)/stamp-gnatlib-rts\n \t# gnattools1\n \t$(MAKE) -C $(GCC_DIR)/ada/tools -f ../Makefile \\\n \t  $(TOOLS_FLAGS_TO_PASS_1) \\\n@@ -195,7 +195,7 @@ gnattools-native: $(GCC_DIR)/stamp-tools $(GCC_DIR)/stamp-gnatlib\n # gnatmake/link can be built with recent gnatmake/link if they are available.\n # This is especially convenient for building cross tools or for rebuilding\n # the tools when the original bootstrap has already be done.\n-regnattools: $(GCC_DIR)/stamp-gnatlib\n+regnattools: $(GCC_DIR)/stamp-gnatlib-rts\n \t# gnattools1-re\n \t$(MAKE) -C $(GCC_DIR)/ada/tools -f ../Makefile \\\n \t  $(TOOLS_FLAGS_TO_PASS_1re) \\"}]}