{"sha": "af85ad891703db220b25e7847f10d0bbec4becf4", "node_id": "C_kwDOANBUbNoAKGFmODVhZDg5MTcwM2RiMjIwYjI1ZTc4NDdmMTBkMGJiZWM0YmVjZjQ", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-09-23T22:21:11Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-09-26T22:47:37Z"}, "message": "libstdc++: Use new built-ins for std::is_convertible traits\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/type_traits (is_convertible, is_convertible_v):\n\tDefine using new built-in.\n\t(is_nothrow_convertible is_nothrow_convertible_v): Likewise.", "tree": {"sha": "0c900d2064203665af12a9a9671381e6dd3b6ec0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c900d2064203665af12a9a9671381e6dd3b6ec0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af85ad891703db220b25e7847f10d0bbec4becf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af85ad891703db220b25e7847f10d0bbec4becf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af85ad891703db220b25e7847f10d0bbec4becf4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af85ad891703db220b25e7847f10d0bbec4becf4/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7701ea4a70a5a5c0fd977da90a30ffc4f3f87617", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7701ea4a70a5a5c0fd977da90a30ffc4f3f87617", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7701ea4a70a5a5c0fd977da90a30ffc4f3f87617"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "1ac805152d4132aaa39f78528b0834e3950db588", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af85ad891703db220b25e7847f10d0bbec4becf4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af85ad891703db220b25e7847f10d0bbec4becf4/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=af85ad891703db220b25e7847f10d0bbec4becf4", "patch": "@@ -1381,6 +1381,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     : public integral_constant<bool, __is_base_of(_Base, _Derived)>\n     { };\n \n+#if __has_builtin(__is_convertible)\n+  template<typename _From, typename _To>\n+    struct is_convertible\n+    : public __bool_constant<__is_convertible(_From, _To)>\n+    { };\n+#else\n   template<typename _From, typename _To,\n            bool = __or_<is_void<_From>, is_function<_To>,\n                         is_array<_To>>::value>\n@@ -1416,12 +1422,28 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     struct is_convertible\n     : public __is_convertible_helper<_From, _To>::type\n     { };\n+#endif\n \n   // helper trait for unique_ptr<T[]>, shared_ptr<T[]>, and span<T, N>\n   template<typename _ToElementType, typename _FromElementType>\n     using __is_array_convertible\n       = is_convertible<_FromElementType(*)[], _ToElementType(*)[]>;\n \n+#if __cplusplus >= 202002L\n+#define __cpp_lib_is_nothrow_convertible 201806L\n+\n+#if __has_builtin(__is_nothrow_convertible)\n+  /// is_nothrow_convertible_v\n+  template<typename _From, typename _To>\n+    inline constexpr bool is_nothrow_convertible_v\n+      = __is_nothrow_convertible(_From, _To);\n+\n+  /// is_nothrow_convertible\n+  template<typename _From, typename _To>\n+    struct is_nothrow_convertible\n+    : public bool_constant<is_nothrow_convertible_v<_From, _To>>\n+    { };\n+#else\n   template<typename _From, typename _To,\n            bool = __or_<is_void<_From>, is_function<_To>,\n                         is_array<_To>>::value>\n@@ -1451,8 +1473,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     };\n #pragma GCC diagnostic pop\n \n-#if __cplusplus > 201703L\n-#define __cpp_lib_is_nothrow_convertible 201806L\n   /// is_nothrow_convertible\n   template<typename _From, typename _To>\n     struct is_nothrow_convertible\n@@ -1463,6 +1483,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _From, typename _To>\n     inline constexpr bool is_nothrow_convertible_v\n       = is_nothrow_convertible<_From, _To>::value;\n+#endif\n #endif // C++2a\n \n   // Const-volatile modifications.\n@@ -3265,7 +3286,7 @@ template <typename _Tp>\n template <typename _Base, typename _Derived>\n   inline constexpr bool is_base_of_v = __is_base_of(_Base, _Derived);\n template <typename _From, typename _To>\n-  inline constexpr bool is_convertible_v = is_convertible<_From, _To>::value;\n+  inline constexpr bool is_convertible_v = __is_convertible(_From, _To);\n template<typename _Fn, typename... _Args>\n   inline constexpr bool is_invocable_v = is_invocable<_Fn, _Args...>::value;\n template<typename _Fn, typename... _Args>"}]}