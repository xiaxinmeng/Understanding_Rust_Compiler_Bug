{"sha": "424945258d1778617b5d3d5273f6e1c10e718f80", "node_id": "C_kwDOANBUbNoAKDQyNDk0NTI1OGQxNzc4NjE3YjVkM2Q1MjczZjZlMWMxMGU3MThmODA", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-10-20T06:38:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-10-20T06:38:58Z"}, "message": "c++: Fix up push_local_extern_decl_alias error recovery [PR102642]\n\nMy recent push_local_extern_decl_alias change broke error-recovery,\ndo_pushdecl can return error_mark_node and set_decl_tls_model can't be\ncalled on that.  There are other code paths that store error_mark_node\ninto DECL_LOCAL_DECL_ALIAS, with the intent to differentiate the cases\nwhere we haven't yet tried to push it into the namespace scope (NULL)\nand one where we have tried it but it failed (error_mark_node), but looking\naround, there are other spots where we call functions or do processing\nwhich doesn't tolerate error_mark_node.\n\nSo, the first hunk with the testcase fixes the testcase, the others\nfix what I've spotted and the fix was easy to figure out (there are I think\n3 other spots mainly for function multiversioning).\n\n2021-10-20  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/102642\n\t* name-lookup.c (push_local_extern_decl_alias): Don't call\n\tset_decl_tls_model on error_mark_node.\n\t* decl.c (make_rtl_for_nonlocal_decl): Don't call\n\tset_user_assembler_name on error_mark_node.\n\t* parser.c (cp_parser_oacc_declare): Ignore DECL_LOCAL_DECL_ALIAS\n\tif it is error_mark_node.\n\t(cp_parser_omp_declare_target): Likewise.\n\n\t* g++.dg/tls/pr102642.C: New test.", "tree": {"sha": "99a26d12e244655ae21bb66b3caee304dcf08411", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99a26d12e244655ae21bb66b3caee304dcf08411"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/424945258d1778617b5d3d5273f6e1c10e718f80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/424945258d1778617b5d3d5273f6e1c10e718f80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/424945258d1778617b5d3d5273f6e1c10e718f80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/424945258d1778617b5d3d5273f6e1c10e718f80/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8edfadfc7a9795b65177a50ce44fd348858e844", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8edfadfc7a9795b65177a50ce44fd348858e844", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8edfadfc7a9795b65177a50ce44fd348858e844"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "8a45411c995d047aa9e13bf34076a1b0ff77e22c", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/424945258d1778617b5d3d5273f6e1c10e718f80/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/424945258d1778617b5d3d5273f6e1c10e718f80/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=424945258d1778617b5d3d5273f6e1c10e718f80", "patch": "@@ -7373,7 +7373,8 @@ make_rtl_for_nonlocal_decl (tree decl, tree init, const char* asmspec)\n \t\t This is horrible, as we're affecting a\n \t\t possibly-shared decl.  Again, a one-true-decl\n \t\t model breaks down.  */\n-\t      set_user_assembler_name (ns_decl, asmspec);\n+\t      if (ns_decl != error_mark_node)\n+\t\tset_user_assembler_name (ns_decl, asmspec);\n \t}\n     }\n "}, {"sha": "035bcf51278cb99f357c8c72d3305f7ae83bfeaf", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/424945258d1778617b5d3d5273f6e1c10e718f80/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/424945258d1778617b5d3d5273f6e1c10e718f80/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=424945258d1778617b5d3d5273f6e1c10e718f80", "patch": "@@ -3474,7 +3474,9 @@ push_local_extern_decl_alias (tree decl)\n \t  push_nested_namespace (ns);\n \t  alias = do_pushdecl (alias, /* hiding= */true);\n \t  pop_nested_namespace (ns);\n-\t  if (VAR_P (decl) && CP_DECL_THREAD_LOCAL_P (decl))\n+\t  if (VAR_P (decl)\n+\t      && CP_DECL_THREAD_LOCAL_P (decl)\n+\t      && alias != error_mark_node)\n \t    set_decl_tls_model (alias, DECL_TLS_MODEL (decl));\n \t}\n     }"}, {"sha": "9c7ed65f55c8a6388bd00d83d9ca745fe415092f", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/424945258d1778617b5d3d5273f6e1c10e718f80/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/424945258d1778617b5d3d5273f6e1c10e718f80/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=424945258d1778617b5d3d5273f6e1c10e718f80", "patch": "@@ -44437,7 +44437,8 @@ cp_parser_oacc_declare (cp_parser *parser, cp_token *pragma_tok)\n \t       dependent local extern variable decls are as rare as\n \t       hen's teeth.  */\n \t    if (auto alias = DECL_LOCAL_DECL_ALIAS (decl))\n-\t      decl = alias;\n+\t      if (alias != error_mark_node)\n+\t\tdecl = alias;\n \n \t  if (OMP_CLAUSE_MAP_KIND (t) == GOMP_MAP_LINK)\n \t    id = get_identifier (\"omp declare target link\");\n@@ -45665,7 +45666,8 @@ cp_parser_omp_declare_target (cp_parser *parser, cp_token *pragma_tok)\n       if (VAR_OR_FUNCTION_DECL_P (t)\n \t  && DECL_LOCAL_DECL_P (t)\n \t  && DECL_LANG_SPECIFIC (t)\n-\t  && DECL_LOCAL_DECL_ALIAS (t))\n+\t  && DECL_LOCAL_DECL_ALIAS (t)\n+\t  && DECL_LOCAL_DECL_ALIAS (t) != error_mark_node)\n \thandle_omp_declare_target_clause (c, DECL_LOCAL_DECL_ALIAS (t),\n \t\t\t\t\t  device_type);\n     }"}, {"sha": "e3236d3dfdb9589d430e8861ece646bee86bd35c", "filename": "gcc/testsuite/g++.dg/tls/pr102642.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/424945258d1778617b5d3d5273f6e1c10e718f80/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fpr102642.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/424945258d1778617b5d3d5273f6e1c10e718f80/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fpr102642.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftls%2Fpr102642.C?ref=424945258d1778617b5d3d5273f6e1c10e718f80", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/102642\n+// { dg-do compile { target c++11 } }\n+\n+thread_local int *z;\t\t// { dg-message \"previous declaration\" }\n+\n+void\n+foo ()\n+{\n+  extern thread_local int z;\t// { dg-error \"conflicting declaration\" }\n+}"}]}