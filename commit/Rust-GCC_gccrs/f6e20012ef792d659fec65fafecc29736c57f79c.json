{"sha": "f6e20012ef792d659fec65fafecc29736c57f79c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZlMjAwMTJlZjc5MmQ2NTlmZWM2NWZhZmVjYzI5NzM2YzU3Zjc5Yw==", "commit": {"author": {"name": "Kwok Cheung Yeung", "email": "kcy@codesourcery.com", "date": "2019-11-15T14:48:15Z"}, "committer": {"name": "Kwok Cheung Yeung", "email": "kcy@gcc.gnu.org", "date": "2019-11-15T14:48:15Z"}, "message": "[amdgcn] Use first lane of v1 for zero offset\n\nUse v1 instead of v0 when a zero-valued VGPR is needed.  This frees up\nv0 for other purposes.\n\n2019-11-15  Kwok Cheung Yeung  <kcy@codesourcery.com>\n\n\tgcc/\n\t* config/gcn/gcn.c (gcn_expand_prologue): Remove initialization and\n\tprologue use of v0.\n\t(print_operand_address): Use v1 for zero vector offset.\n\nFrom-SVN: r278297", "tree": {"sha": "423613b3c217c910b07eb5c2a293724665759c9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/423613b3c217c910b07eb5c2a293724665759c9f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6e20012ef792d659fec65fafecc29736c57f79c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6e20012ef792d659fec65fafecc29736c57f79c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6e20012ef792d659fec65fafecc29736c57f79c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6e20012ef792d659fec65fafecc29736c57f79c/comments", "author": {"login": "k-yeung", "id": 16960193, "node_id": "MDQ6VXNlcjE2OTYwMTkz", "avatar_url": "https://avatars.githubusercontent.com/u/16960193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k-yeung", "html_url": "https://github.com/k-yeung", "followers_url": "https://api.github.com/users/k-yeung/followers", "following_url": "https://api.github.com/users/k-yeung/following{/other_user}", "gists_url": "https://api.github.com/users/k-yeung/gists{/gist_id}", "starred_url": "https://api.github.com/users/k-yeung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k-yeung/subscriptions", "organizations_url": "https://api.github.com/users/k-yeung/orgs", "repos_url": "https://api.github.com/users/k-yeung/repos", "events_url": "https://api.github.com/users/k-yeung/events{/privacy}", "received_events_url": "https://api.github.com/users/k-yeung/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a0e1dcd44f9c0ee22f56b73660f36072633adb69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0e1dcd44f9c0ee22f56b73660f36072633adb69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0e1dcd44f9c0ee22f56b73660f36072633adb69"}], "stats": {"total": 24, "additions": 10, "deletions": 14}, "files": [{"sha": "1e32d49e9eb161fb4352df6a920076f02d804aff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6e20012ef792d659fec65fafecc29736c57f79c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6e20012ef792d659fec65fafecc29736c57f79c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6e20012ef792d659fec65fafecc29736c57f79c", "patch": "@@ -1,3 +1,10 @@\n+2019-11-15  Kwok Cheung Yeung  <kcy@codesourcery.com>\n+\n+\tgcc/\n+\t* config/gcn/gcn.c (gcn_expand_prologue): Remove initialization and\n+\tprologue use of v0.\n+\t(print_operand_address): Use v1 for zero vector offset.\n+\n 2019-11-15  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR tree-optimization/92515"}, {"sha": "4f72758e28544e65afa0fc4b0d951e55f0430322", "filename": "gcc/config/gcn/gcn.c", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6e20012ef792d659fec65fafecc29736c57f79c/gcc%2Fconfig%2Fgcn%2Fgcn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6e20012ef792d659fec65fafecc29736c57f79c/gcc%2Fconfig%2Fgcn%2Fgcn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.c?ref=f6e20012ef792d659fec65fafecc29736c57f79c", "patch": "@@ -2803,15 +2803,6 @@ gcn_expand_prologue ()\n \t\t\t\t     cfun->machine->args.\n \t\t\t\t     reg[PRIVATE_SEGMENT_WAVE_OFFSET_ARG]);\n \n-      if (TARGET_GCN5_PLUS)\n-\t{\n-\t  /* v0 is reserved for constant zero so that \"global\"\n-\t     memory instructions can have a nul-offset without\n-\t     causing reloads.  */\n-\t  emit_insn (gen_vec_duplicatev64si\n-\t\t     (gen_rtx_REG (V64SImode, VGPR_REGNO (0)), const0_rtx));\n-\t}\n-\n       if (cfun->machine->args.requested & (1 << FLAT_SCRATCH_INIT_ARG))\n \t{\n \t  rtx fs_init_lo =\n@@ -2870,8 +2861,6 @@ gcn_expand_prologue ()\n \t\t  gen_int_mode (LDS_SIZE, SImode));\n \n   emit_insn (gen_prologue_use (gen_rtx_REG (SImode, M0_REG)));\n-  if (TARGET_GCN5_PLUS)\n-    emit_insn (gen_prologue_use (gen_rtx_REG (SImode, VGPR_REGNO (0))));\n \n   if (cfun && cfun->machine && !cfun->machine->normal_function && flag_openmp)\n     {\n@@ -5327,9 +5316,9 @@ print_operand_address (FILE *file, rtx mem)\n \t      /* The assembler requires a 64-bit VGPR pair here, even though\n \t         the offset should be only 32-bit.  */\n \t      if (vgpr_offset == NULL_RTX)\n-\t\t/* In this case, the vector offset is zero, so we use v0,\n-\t\t   which is initialized by the kernel prologue to zero.  */\n-\t\tfprintf (file, \"v[0:1]\");\n+\t\t/* In this case, the vector offset is zero, so we use the first\n+\t\t   lane of v1, which is initialized to zero.  */\n+\t\tfprintf (file, \"v[1:2]\");\n \t      else if (REG_P (vgpr_offset)\n \t\t       && VGPR_REGNO_P (REGNO (vgpr_offset)))\n \t\t{"}]}