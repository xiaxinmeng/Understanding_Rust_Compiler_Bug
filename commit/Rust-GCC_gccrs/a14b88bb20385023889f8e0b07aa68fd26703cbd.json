{"sha": "a14b88bb20385023889f8e0b07aa68fd26703cbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE0Yjg4YmIyMDM4NTAyMzg4OWY4ZTBiMDdhYTY4ZmQyNjcwM2NiZA==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2005-07-30T00:11:27Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2005-07-30T00:11:27Z"}, "message": "arm-protos.h (arm_canonicalize_comparison): Update prototype.\n\n2005-07-30  Paul Brook  <paul@codesourcery.com>\n\n\t* config/arm/arm-protos.h (arm_canonicalize_comparison): Update\n\tprototype.\n\t* config/arm/arm.c (arm_canonicalize_comparison): Use correct limit\n\tvalue for mode.\n\t* config/arm/arm.h (CANONICALIZE_COMPARISON): Pass mode argument.\n\nFrom-SVN: r102574", "tree": {"sha": "b5f47f29c88277b7c837cf957bdd69723bcb88fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5f47f29c88277b7c837cf957bdd69723bcb88fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a14b88bb20385023889f8e0b07aa68fd26703cbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a14b88bb20385023889f8e0b07aa68fd26703cbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a14b88bb20385023889f8e0b07aa68fd26703cbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a14b88bb20385023889f8e0b07aa68fd26703cbd/comments", "author": null, "committer": null, "parents": [{"sha": "7c47d6e984423f92f6f7d40e37026ae9402d579a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c47d6e984423f92f6f7d40e37026ae9402d579a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c47d6e984423f92f6f7d40e37026ae9402d579a"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "23c841fba7a0bc2cce2209378ed0a01ec2d25d2a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a14b88bb20385023889f8e0b07aa68fd26703cbd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a14b88bb20385023889f8e0b07aa68fd26703cbd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a14b88bb20385023889f8e0b07aa68fd26703cbd", "patch": "@@ -1,3 +1,11 @@\n+2005-07-30  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/arm/arm-protos.h (arm_canonicalize_comparison): Update\n+\tprototype.\n+\t* config/arm/arm.c (arm_canonicalize_comparison): Use correct limit\n+\tvalue for mode.\n+\t* config/arm/arm.h (CANONICALIZE_COMPARISON): Pass mode argument.\n+\n 2005-07-29  Joseph S. Myers  <joseph@codesourcery.com>\n \n \tPR c/529"}, {"sha": "b03f765704421a58f7d7813ad7b71303284e187b", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a14b88bb20385023889f8e0b07aa68fd26703cbd/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a14b88bb20385023889f8e0b07aa68fd26703cbd/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=a14b88bb20385023889f8e0b07aa68fd26703cbd", "patch": "@@ -52,7 +52,8 @@ extern int arm_hard_regno_mode_ok (unsigned int, enum machine_mode);\n extern int const_ok_for_arm (HOST_WIDE_INT);\n extern int arm_split_constant (RTX_CODE, enum machine_mode, rtx,\n \t\t\t       HOST_WIDE_INT, rtx, rtx, int);\n-extern RTX_CODE arm_canonicalize_comparison (RTX_CODE, rtx *);\n+extern RTX_CODE arm_canonicalize_comparison (RTX_CODE, enum machine_mode,\n+\t\t\t\t\t     rtx *);\n extern int legitimate_pic_operand_p (rtx);\n extern rtx legitimize_pic_address (rtx, enum machine_mode, rtx);\n extern int arm_legitimate_address_p  (enum machine_mode, rtx, RTX_CODE, int);"}, {"sha": "33b2e32e4c462b4db2c6d00e28a7936d3741b765", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a14b88bb20385023889f8e0b07aa68fd26703cbd/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a14b88bb20385023889f8e0b07aa68fd26703cbd/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=a14b88bb20385023889f8e0b07aa68fd26703cbd", "patch": "@@ -2328,9 +2328,12 @@ arm_gen_constant (enum rtx_code code, enum machine_mode mode, rtx cond,\n    immediate value easier to load.  */\n \n enum rtx_code\n-arm_canonicalize_comparison (enum rtx_code code, rtx * op1)\n+arm_canonicalize_comparison (enum rtx_code code, enum machine_mode mode,\n+\t\t\t     rtx * op1)\n {\n   unsigned HOST_WIDE_INT i = INTVAL (*op1);\n+  unsigned HOST_WIDE_INT maxval;\n+  maxval = (((unsigned HOST_WIDE_INT) 1) << (GET_MODE_BITSIZE(mode) - 1)) - 1;\n \n   switch (code)\n     {\n@@ -2340,7 +2343,7 @@ arm_canonicalize_comparison (enum rtx_code code, rtx * op1)\n \n     case GT:\n     case LE:\n-      if (i != ((((unsigned HOST_WIDE_INT) 1) << (HOST_BITS_PER_WIDE_INT - 1)) - 1)\n+      if (i != maxval\n \t  && (const_ok_for_arm (i + 1) || const_ok_for_arm (-(i + 1))))\n \t{\n \t  *op1 = GEN_INT (i + 1);\n@@ -2350,7 +2353,7 @@ arm_canonicalize_comparison (enum rtx_code code, rtx * op1)\n \n     case GE:\n     case LT:\n-      if (i != (((unsigned HOST_WIDE_INT) 1) << (HOST_BITS_PER_WIDE_INT - 1))\n+      if (i != ~maxval\n \t  && (const_ok_for_arm (i - 1) || const_ok_for_arm (-(i - 1))))\n \t{\n \t  *op1 = GEN_INT (i - 1);"}, {"sha": "3c4803f51627bd6613946241b49c7a8f74f8f3ee", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a14b88bb20385023889f8e0b07aa68fd26703cbd/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a14b88bb20385023889f8e0b07aa68fd26703cbd/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=a14b88bb20385023889f8e0b07aa68fd26703cbd", "patch": "@@ -2243,7 +2243,8 @@ extern int making_const_table;\n \t        || (const_ok_for_arm (- INTVAL (OP1)))))\t\t\\\n         {\t\t\t\t\t\t\t\t\\\n           rtx const_op = OP1;\t\t\t\t\t\t\\\n-          CODE = arm_canonicalize_comparison ((CODE), &const_op);\t\\\n+          CODE = arm_canonicalize_comparison ((CODE), GET_MODE (OP0),\t\\\n+\t\t\t\t\t      &const_op);\t\t\\\n           OP1 = const_op;\t\t\t\t\t\t\\\n         }\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\"}]}