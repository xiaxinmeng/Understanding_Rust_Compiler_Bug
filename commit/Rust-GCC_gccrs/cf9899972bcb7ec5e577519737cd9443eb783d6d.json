{"sha": "cf9899972bcb7ec5e577519737cd9443eb783d6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y5ODk5OTcyYmNiN2VjNWU1Nzc1MTk3MzdjZDk0NDNlYjc4M2Q2ZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-10-06T17:12:28Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-10-06T17:12:28Z"}, "message": "Rework vector shuffle tests.\n\nTest vector sizes 8, 16, and 32.  Test most data types for each size.\n\nFrom-SVN: r179623", "tree": {"sha": "7fe87a97315915deca8ba09f98a4f15f8d3f3d32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7fe87a97315915deca8ba09f98a4f15f8d3f3d32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf9899972bcb7ec5e577519737cd9443eb783d6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf9899972bcb7ec5e577519737cd9443eb783d6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf9899972bcb7ec5e577519737cd9443eb783d6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf9899972bcb7ec5e577519737cd9443eb783d6d/comments", "author": null, "committer": null, "parents": [{"sha": "8864db874baf1ad3e4604394ec49047f78dce6bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8864db874baf1ad3e4604394ec49047f78dce6bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8864db874baf1ad3e4604394ec49047f78dce6bb"}], "stats": {"total": 986, "additions": 526, "deletions": 460}, "files": [{"sha": "4adb775570221d1a8c1e03aa2a0ac8748d6319cf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cf9899972bcb7ec5e577519737cd9443eb783d6d", "patch": "@@ -1,3 +1,32 @@\n+2011-10-06  Richard Henderson  <rth@redhat.com>\n+\n+\t* gcc.c-torture/execute/vect-shuffle-1.c: Remove.\n+\t* gcc.c-torture/execute/vect-shuffle-2.c: Remove.\n+\t* gcc.c-torture/execute/vect-shuffle-3.c: Remove.\n+\t* gcc.c-torture/execute/vect-shuffle-4.c: Remove.\n+\t* gcc.c-torture/execute/vect-shuffle-5.c: Remove.\n+\t* gcc.c-torture/execute/vect-shuffle-6.c: Remove.\n+\t* gcc.c-torture/execute/vect-shuffle-7.c: Remove.\n+\t* gcc.c-torture/execute/vect-shuffle-8.c: Remove.\n+\t* gcc.c-torture/execute/vshuf-16.inc: New file.\n+\t* gcc.c-torture/execute/vshuf-2.inc: New file.\n+\t* gcc.c-torture/execute/vshuf-4.inc: New file.\n+\t* gcc.c-torture/execute/vshuf-8.inc: New file.\n+\t* gcc.c-torture/execute/vshuf-main.inc: New file.\n+\t* gcc.c-torture/execute/vshuf-v16qi.c: New test.\n+\t* gcc.c-torture/execute/vshuf-v2df.c: New test.\n+\t* gcc.c-torture/execute/vshuf-v2di.c: New test.\n+\t* gcc.c-torture/execute/vshuf-v2sf.c: New test.\n+\t* gcc.c-torture/execute/vshuf-v2si.c: New test.\n+\t* gcc.c-torture/execute/vshuf-v4df.c: New test.\n+\t* gcc.c-torture/execute/vshuf-v4di.c: New test.\n+\t* gcc.c-torture/execute/vshuf-v4hi.c: New test.\n+\t* gcc.c-torture/execute/vshuf-v4sf.c: New test.\n+\t* gcc.c-torture/execute/vshuf-v4si.c: New test.\n+\t* gcc.c-torture/execute/vshuf-v8hi.c: New test.\n+\t* gcc.c-torture/execute/vshuf-v8qi.c: New test.\n+\t* gcc.c-torture/execute/vshuf-v8si.c: New test.\n+\n 2011-10-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/49279"}, {"sha": "3b836362003bb221c4a0eae60a66256a16c4bf48", "filename": "gcc/testsuite/gcc.c-torture/execute/vect-shuffle-1.c", "status": "removed", "additions": 0, "deletions": 68, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8864db874baf1ad3e4604394ec49047f78dce6bb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvect-shuffle-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8864db874baf1ad3e4604394ec49047f78dce6bb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvect-shuffle-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvect-shuffle-1.c?ref=8864db874baf1ad3e4604394ec49047f78dce6bb", "patch": "@@ -1,68 +0,0 @@\n-#if __SIZEOF_INT__ == 4\n-typedef unsigned int V __attribute__((vector_size(16), may_alias));\n-\n-struct S\n-{\n-  V in, mask, out;\n-};\n-\n-struct S tests[] = {\n-  {\n-    { 0x11111111, 0x22222222, 0x33333333, 0x44444444 },\n-    { 0, 1, 2, 3 },\n-    { 0x11111111, 0x22222222, 0x33333333, 0x44444444 },\n-  },\n-  {\n-    { 0x11111111, 0x22222222, 0x33333333, 0x44444444 },\n-    { 0+1*4, 1+2*4, 2+3*4, 3+4*4 },\n-    { 0x11111111, 0x22222222, 0x33333333, 0x44444444 },\n-  },\n-  {\n-    { 0x11111111, 0x22222222, 0x33333333, 0x44444444 },\n-    { 3, 2, 1, 0 },\n-    { 0x44444444, 0x33333333, 0x22222222, 0x11111111 },\n-  },\n-  {\n-    { 0x11111111, 0x22222222, 0x33333333, 0x44444444 },\n-    { 0, 3, 2, 1 },\n-    { 0x11111111, 0x44444444, 0x33333333, 0x22222222 },\n-  },\n-  {\n-    { 0x11111111, 0x22222222, 0x33333333, 0x44444444 },\n-    { 0, 2, 1, 3 },\n-    { 0x11111111, 0x33333333, 0x22222222, 0x44444444 },\n-  },\n-  {\n-    { 0x11223344, 0x55667788, 0x99aabbcc, 0xddeeff00 },\n-    { 3, 1, 2, 0 },\n-    { 0xddeeff00, 0x55667788, 0x99aabbcc, 0x11223344 },\n-  },\n-  {\n-    { 0x11223344, 0x55667788, 0x99aabbcc, 0xddeeff00 },\n-    { 0, 0, 0, 0 },\n-    { 0x11223344, 0x11223344, 0x11223344, 0x11223344 },\n-  },\n-  {\n-    { 0x11223344, 0x55667788, 0x99aabbcc, 0xddeeff00 },\n-    { 1, 2, 1, 2 },\n-    { 0x55667788, 0x99aabbcc, 0x55667788, 0x99aabbcc },\n-  }\n-};\n-\n-extern void abort(void);\n-\n-int main()\n-{\n-  int i;\n-\n-  for (i = 0; i < sizeof(tests)/sizeof(tests[0]); ++i)\n-    {\n-      V r = __builtin_shuffle(tests[i].in, tests[i].mask);\n-      if (__builtin_memcmp(&r, &tests[i].out, sizeof(V)) != 0)\n-\tabort();\n-    }\n-\n-  return 0;\n-}\n-\n-#endif /* SIZEOF_INT */"}, {"sha": "68ae2256f15a3be74cd1f193c73652d9f67bb2ef", "filename": "gcc/testsuite/gcc.c-torture/execute/vect-shuffle-2.c", "status": "removed", "additions": 0, "deletions": 68, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8864db874baf1ad3e4604394ec49047f78dce6bb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvect-shuffle-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8864db874baf1ad3e4604394ec49047f78dce6bb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvect-shuffle-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvect-shuffle-2.c?ref=8864db874baf1ad3e4604394ec49047f78dce6bb", "patch": "@@ -1,68 +0,0 @@\n-#if __SIZEOF_SHORT__ == 2\n-typedef unsigned short V __attribute__((vector_size(16), may_alias));\n-\n-struct S\n-{\n-  V in, mask, out;\n-};\n-\n-struct S tests[] = {\n-  {\n-    { 0x1111, 0x2222, 0x3333, 0x4444, 0x5555, 0x6666, 0x7777, 0x8888 },\n-    { 0, 1, 2, 3, 4, 5, 6, 7 },\n-    { 0x1111, 0x2222, 0x3333, 0x4444, 0x5555, 0x6666, 0x7777, 0x8888 },\n-  },\n-  {\n-    { 0x1111, 0x2222, 0x3333, 0x4444, 0x5555, 0x6666, 0x7777, 0x8888 },\n-    { 0x10, 0x21, 0x32, 0x43, 0x54, 0x65, 0x76, 0x87 },\n-    { 0x1111, 0x2222, 0x3333, 0x4444, 0x5555, 0x6666, 0x7777, 0x8888 },\n-  },\n-  {\n-    { 0x1111, 0x2222, 0x3333, 0x4444, 0x5555, 0x6666, 0x7777, 0x8888 },\n-    { 7, 6, 5, 4, 3, 2, 1, 0 },\n-    { 0x8888, 0x7777, 0x6666, 0x5555, 0x4444, 0x3333, 0x2222, 0x1111 },\n-  },\n-  {\n-    { 0x1111, 0x2222, 0x3333, 0x4444, 0x5555, 0x6666, 0x7777, 0x8888 },\n-    { 7, 0, 5, 3, 2, 4, 1, 6 },\n-    { 0x8888, 0x1111, 0x6666, 0x4444, 0x3333, 0x5555, 0x2222, 0x7777 },\n-  },\n-  {\n-    { 0x1111, 0x2222, 0x3333, 0x4444, 0x5555, 0x6666, 0x7777, 0x8888 },\n-    { 0, 2, 1, 3, 4, 6, 5, 7 },\n-    { 0x1111, 0x3333, 0x2222, 0x4444, 0x5555, 0x7777, 0x6666, 0x8888 },\n-  },\n-  {\n-    { 0x1122, 0x3344, 0x5566, 0x7788, 0x99aa, 0xbbcc, 0xddee, 0xff00 },\n-    { 3, 1, 2, 0, 7, 5, 6, 4 },\n-    { 0x7788, 0x3344, 0x5566, 0x1122, 0xff00, 0xbbcc, 0xddee, 0x99aa },\n-  },\n-  {\n-    { 0x1122, 0x3344, 0x5566, 0x7788, 0x99aa, 0xbbcc, 0xddee, 0xff00 },\n-    { 0, 0, 0, 0 },\n-    { 0x1122, 0x1122, 0x1122, 0x1122, 0x1122, 0x1122, 0x1122, 0x1122 },\n-  },\n-  {\n-    { 0x1122, 0x3344, 0x5566, 0x7788, 0x99aa, 0xbbcc, 0xddee, 0xff00 },\n-    { 1, 6, 1, 6, 1, 6, 1, 6 }, \n-    { 0x3344, 0xddee, 0x3344, 0xddee, 0x3344, 0xddee, 0x3344, 0xddee },\n-  }\n-};\n-\n-extern void abort(void);\n-\n-int main()\n-{\n-  int i;\n-\n-  for (i = 0; i < sizeof(tests)/sizeof(tests[0]); ++i)\n-    {\n-      V r = __builtin_shuffle(tests[i].in, tests[i].mask);\n-      if (memcmp(&r, &tests[i].out, sizeof(V)) != 0)\n-\tabort();\n-    }\n-\n-  return 0;\n-}\n-\n-#endif /* SIZEOF_SHORT */"}, {"sha": "96aee6509948f3dc9ef104730c3528783589d473", "filename": "gcc/testsuite/gcc.c-torture/execute/vect-shuffle-3.c", "status": "removed", "additions": 0, "deletions": 58, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8864db874baf1ad3e4604394ec49047f78dce6bb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvect-shuffle-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8864db874baf1ad3e4604394ec49047f78dce6bb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvect-shuffle-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvect-shuffle-3.c?ref=8864db874baf1ad3e4604394ec49047f78dce6bb", "patch": "@@ -1,58 +0,0 @@\n-#if __SIZEOF_LONG_LONG__ == 8\n-typedef unsigned long long V __attribute__((vector_size(16), may_alias));\n-\n-struct S\n-{\n-  V in, mask, out;\n-};\n-\n-struct S tests[] = {\n-  {\n-    { 0x1111111111111111, 0x2222222222222222 },\n-    { 0, 1 },\n-    { 0x1111111111111111, 0x2222222222222222 },\n-  },\n-  {\n-    { 0x1111111111111111, 0x2222222222222222 },\n-    { 0x0102030405060700, 0xffeeddccbbaa99f1 },\n-    { 0x1111111111111111, 0x2222222222222222 },\n-  },\n-  {\n-    { 0x1111111111111111, 0x2222222222222222 },\n-    { 1, 0 },\n-    { 0x2222222222222222, 0x1111111111111111 },\n-  },\n-  {\n-    { 0x1111111111111111, 0x2222222222222222 },\n-    { 0, 0 },\n-    { 0x1111111111111111, 0x1111111111111111 },\n-  },\n-  {\n-    { 0x1122334455667788, 0x99aabbccddeeff00 },\n-    { 1, 1 },\n-    { 0x99aabbccddeeff00, 0x99aabbccddeeff00 },\n-  },\n-  {\n-    { 0x1122334455667788, 0x99aabbccddeeff00 },\n-    { 1, 0 },\n-    { 0x99aabbccddeeff00, 0x1122334455667788 },\n-  },\n-};\n-\n-extern void abort(void);\n-\n-int main()\n-{\n-  int i;\n-\n-  for (i = 0; i < sizeof(tests)/sizeof(tests[0]); ++i)\n-    {\n-      V r = __builtin_shuffle(tests[i].in, tests[i].mask);\n-      if (__builtin_memcmp(&r, &tests[i].out, sizeof(V)) != 0)\n-\tabort();\n-    }\n-\n-  return 0;\n-}\n-\n-#endif /* SIZEOF_LONG_LONG */"}, {"sha": "fa036eb0093dfa722e42528aa21de40feb867c12", "filename": "gcc/testsuite/gcc.c-torture/execute/vect-shuffle-4.c", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8864db874baf1ad3e4604394ec49047f78dce6bb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvect-shuffle-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8864db874baf1ad3e4604394ec49047f78dce6bb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvect-shuffle-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvect-shuffle-4.c?ref=8864db874baf1ad3e4604394ec49047f78dce6bb", "patch": "@@ -1,51 +0,0 @@\n-typedef unsigned char V __attribute__((vector_size(16), may_alias));\n-\n-struct S\n-{\n-  V in, mask, out;\n-};\n-\n-struct S tests[] = {\n-  {\n-    { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 },\n-    { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, },\n-    { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 },\n-  },\n-  {\n-    { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 },\n-    { 0x10, 0x21, 0x32, 0x43, 0x54, 0x65, 0x76, 0x87,\n-      0x98, 0xa9, 0xba, 0xcb, 0xdc, 0xed, 0xfe, 0xff },\n-    { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 },\n-  },\n-  {\n-    { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 },\n-    { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 },\n-    { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 },\n-  },\n-  {\n-    { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 },\n-    { 0, 2, 4, 6, 8, 10, 12, 14, 1, 3, 5, 7, 9, 11, 13, 15 },\n-    { 1, 3, 5, 7, 9, 11, 13, 15, 2, 4, 6, 8, 10, 12, 14, 16 },\n-  },\n-  {\n-    { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 },\n-    { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 }, \n-    { 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4 }, \n-  },\n-};\n-\n-extern void abort(void);\n-\n-int main()\n-{\n-  int i;\n-\n-  for (i = 0; i < sizeof(tests)/sizeof(tests[0]); ++i)\n-    {\n-      V r = __builtin_shuffle(tests[i].in, tests[i].mask);\n-      if (memcmp(&r, &tests[i].out, sizeof(V)) != 0)\n-\tabort();\n-    }\n-\n-  return 0;\n-}"}, {"sha": "f07025d567ea33069b7141b258a15ea8d41ceb76", "filename": "gcc/testsuite/gcc.c-torture/execute/vect-shuffle-5.c", "status": "removed", "additions": 0, "deletions": 64, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8864db874baf1ad3e4604394ec49047f78dce6bb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvect-shuffle-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8864db874baf1ad3e4604394ec49047f78dce6bb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvect-shuffle-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvect-shuffle-5.c?ref=8864db874baf1ad3e4604394ec49047f78dce6bb", "patch": "@@ -1,64 +0,0 @@\n-#if __SIZEOF_INT__ == 4\n-typedef unsigned int V __attribute__((vector_size(16), may_alias));\n-\n-struct S\n-{\n-  V in1, in2, mask, out;\n-};\n-\n-struct S tests[] = {\n-  {\n-    { 0x11111111, 0x22222222, 0x33333333, 0x44444444 },\n-    { 0x55555555, 0x66666666, 0x77777777, 0x88888888 },\n-    { 0, 1, 2, 3 },\n-    { 0x11111111, 0x22222222, 0x33333333, 0x44444444 },\n-  },\n-  {\n-    { 0x11111111, 0x22222222, 0x33333333, 0x44444444 },\n-    { 0x55555555, 0x66666666, 0x77777777, 0x88888888 },\n-    { 4, 5, 6, 7 },\n-    { 0x55555555, 0x66666666, 0x77777777, 0x88888888 },\n-  },\n-  {\n-    { 0x11111111, 0x22222222, 0x33333333, 0x44444444 },\n-    { 0x55555555, 0x66666666, 0x77777777, 0x88888888 },\n-    { 0, 4, 1, 5 },\n-    { 0x11111111, 0x55555555, 0x22222222, 0x66666666 },\n-  },\n-  {\n-    { 0x11111111, 0x22222222, 0x33333333, 0x44444444 },\n-    { 0x55555555, 0x66666666, 0x77777777, 0x88888888 },\n-    { 0, 7, 4, 3 },\n-    { 0x11111111, 0x88888888, 0x55555555, 0x44444444 },\n-  },\n-  {\n-    { 0x11111111, 0x22222222, 0x33333333, 0x44444444 },\n-    { 0x55555555, 0x66666666, 0x77777777, 0x88888888 },\n-    { 0, 0, 0, 0 },\n-    { 0x11111111, 0x11111111, 0x11111111, 0x11111111 },\n-  },\n-  {\n-    { 0x11111111, 0x22222222, 0x33333333, 0x44444444 },\n-    { 0x55555555, 0x66666666, 0x77777777, 0x88888888 },\n-    { 7, 7, 7, 7 },\n-    { 0x88888888, 0x88888888, 0x88888888, 0x88888888 },\n-  },\n-};\n-\n-extern void abort(void);\n-\n-int main()\n-{\n-  int i;\n-\n-  for (i = 0; i < sizeof(tests)/sizeof(tests[0]); ++i)\n-    {\n-      V r = __builtin_shuffle(tests[i].in1, tests[i].in2, tests[i].mask);\n-      if (__builtin_memcmp(&r, &tests[i].out, sizeof(V)) != 0)\n-\tabort();\n-    }\n-\n-  return 0;\n-}\n-\n-#endif /* SIZEOF_INT */"}, {"sha": "63eaf96900e3618f9e728b2053ba840b65986ab6", "filename": "gcc/testsuite/gcc.c-torture/execute/vect-shuffle-6.c", "status": "removed", "additions": 0, "deletions": 64, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8864db874baf1ad3e4604394ec49047f78dce6bb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvect-shuffle-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8864db874baf1ad3e4604394ec49047f78dce6bb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvect-shuffle-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvect-shuffle-6.c?ref=8864db874baf1ad3e4604394ec49047f78dce6bb", "patch": "@@ -1,64 +0,0 @@\n-#if __SIZEOF_SHORT__ == 2\n-typedef unsigned short V __attribute__((vector_size(16), may_alias));\n-\n-struct S\n-{\n-  V in1, in2, mask, out;\n-};\n-\n-struct S tests[] = {\n-  {\n-    { 0x1010, 0x2121, 0x3232, 0x4343, 0x5454, 0x6565, 0x7676, 0x8787 },\n-    { 0x9898, 0xa9a9, 0xbaba, 0xcbcb, 0xdcdc, 0xeded, 0xfefe, 0x0f0f },\n-    { 0, 1, 2, 3, 4, 5, 6, 7 },\n-    { 0x1010, 0x2121, 0x3232, 0x4343, 0x5454, 0x6565, 0x7676, 0x8787 },\n-  },\n-  {\n-    { 0x1010, 0x2121, 0x3232, 0x4343, 0x5454, 0x6565, 0x7676, 0x8787 },\n-    { 0x9898, 0xa9a9, 0xbaba, 0xcbcb, 0xdcdc, 0xeded, 0xfefe, 0x0f0f },\n-    { 8, 9, 10, 11, 12, 13, 14, 15 },\n-    { 0x9898, 0xa9a9, 0xbaba, 0xcbcb, 0xdcdc, 0xeded, 0xfefe, 0x0f0f },\n-  },\n-  {\n-    { 0x1010, 0x2121, 0x3232, 0x4343, 0x5454, 0x6565, 0x7676, 0x8787 },\n-    { 0x9898, 0xa9a9, 0xbaba, 0xcbcb, 0xdcdc, 0xeded, 0xfefe, 0x0f0f },\n-    { 0, 8, 1, 9, 2, 10, 3, 11 },\n-    { 0x1010, 0x9898, 0x2121, 0xa9a9, 0x3232, 0xbaba, 0x4343, 0xcbcb },\n-  },\n-  {\n-    { 0x1010, 0x2121, 0x3232, 0x4343, 0x5454, 0x6565, 0x7676, 0x8787 },\n-    { 0x9898, 0xa9a9, 0xbaba, 0xcbcb, 0xdcdc, 0xeded, 0xfefe, 0x0f0f },\n-    { 0, 15, 4, 11, 12, 3, 7, 8 },\n-    { 0x1010, 0x0f0f, 0x5454, 0xcbcb, 0xdcdc, 0x4343, 0x8787, 0x9898 },\n-  },\n-  {\n-    { 0x1010, 0x2121, 0x3232, 0x4343, 0x5454, 0x6565, 0x7676, 0x8787 },\n-    { 0x9898, 0xa9a9, 0xbaba, 0xcbcb, 0xdcdc, 0xeded, 0xfefe, 0x0f0f },\n-    { 0, 0, 0, 0, 0, 0, 0, 0 },\n-    { 0x1010, 0x1010, 0x1010, 0x1010, 0x1010, 0x1010, 0x1010, 0x1010 },\n-  },\n-  {\n-    { 0x1010, 0x2121, 0x3232, 0x4343, 0x5454, 0x6565, 0x7676, 0x8787 },\n-    { 0x9898, 0xa9a9, 0xbaba, 0xcbcb, 0xdcdc, 0xeded, 0xfefe, 0x0f0f },\n-    { 14, 14, 14, 14, 14, 14, 14, 14 },\n-    { 0xfefe, 0xfefe, 0xfefe, 0xfefe, 0xfefe, 0xfefe, 0xfefe, 0xfefe },\n-  },\n-};\n-\n-extern void abort(void);\n-\n-int main()\n-{\n-  int i;\n-\n-  for (i = 0; i < sizeof(tests)/sizeof(tests[0]); ++i)\n-    {\n-      V r = __builtin_shuffle(tests[i].in1, tests[i].in2, tests[i].mask);\n-      if (__builtin_memcmp(&r, &tests[i].out, sizeof(V)) != 0)\n-\tabort();\n-    }\n-\n-  return 0;\n-}\n-\n-#endif /* SIZEOF_SHORT */"}, {"sha": "3336c6f7bd590a4cfe6412ca14e122a66ded9591", "filename": "gcc/testsuite/gcc.c-torture/execute/vect-shuffle-7.c", "status": "removed", "additions": 0, "deletions": 70, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8864db874baf1ad3e4604394ec49047f78dce6bb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvect-shuffle-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8864db874baf1ad3e4604394ec49047f78dce6bb/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvect-shuffle-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvect-shuffle-7.c?ref=8864db874baf1ad3e4604394ec49047f78dce6bb", "patch": "@@ -1,70 +0,0 @@\n-#if __SIZEOF_LONG_LONG__ == 8\n-typedef unsigned long long V __attribute__((vector_size(16), may_alias));\n-\n-struct S\n-{\n-  V in1, in2, mask, out;\n-};\n-\n-struct S tests[] = {\n-  {\n-    { 0x1112131415161718, 0x2122232425262728 },\n-    { 0x3132333435363738, 0x4142434445464748 },\n-    { 0, 1 },\n-    { 0x1112131415161718, 0x2122232425262728 },\n-  },\n-  {\n-    { 0x1112131415161718, 0x2122232425262728 },\n-    { 0x3132333435363738, 0x4142434445464748 },\n-    { 2, 3 },\n-    { 0x3132333435363738, 0x4142434445464748 },\n-  },\n-  {\n-    { 0x1112131415161718, 0x2122232425262728 },\n-    { 0x3132333435363738, 0x4142434445464748 },\n-    { 0, 2 },\n-    { 0x1112131415161718, 0x3132333435363738 },\n-  },\n-  {\n-    { 0x1112131415161718, 0x2122232425262728 },\n-    { 0x3132333435363738, 0x4142434445464748 },\n-    { 2, 1 },\n-    { 0x3132333435363738, 0x2122232425262728 },\n-  },\n-  {\n-    { 0x1112131415161718, 0x2122232425262728 },\n-    { 0x3132333435363738, 0x4142434445464748 },\n-    { 3, 0 },\n-    { 0x4142434445464748, 0x1112131415161718 },\n-  },\n-  {\n-    { 0x1112131415161718, 0x2122232425262728 },\n-    { 0x3132333435363738, 0x4142434445464748 },\n-    { 0, 0 },\n-    { 0x1112131415161718, 0x1112131415161718 },\n-  },\n-  {\n-    { 0x1112131415161718, 0x2122232425262728 },\n-    { 0x3132333435363738, 0x4142434445464748 },\n-    { 3, 3 },\n-    { 0x4142434445464748, 0x4142434445464748 },\n-  },\n-};\n-\n-extern void abort(void);\n-\n-int main()\n-{\n-  int i;\n-\n-  for (i = 0; i < sizeof(tests)/sizeof(tests[0]); ++i)\n-    {\n-      V r = __builtin_shuffle(tests[i].in1, tests[i].in2, tests[i].mask);\n-      if (__builtin_memcmp(&r, &tests[i].out, sizeof(V)) != 0)\n-\tabort();\n-    }\n-\n-  return 0;\n-}\n-\n-#endif /* SIZEOF_LONG_LONG */"}, {"sha": "68f2646d8605139d315107dfc7b2a6389e5af6ef", "filename": "gcc/testsuite/gcc.c-torture/execute/vshuf-16.inc", "status": "renamed", "additions": 43, "deletions": 17, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-16.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-16.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-16.inc?ref=cf9899972bcb7ec5e577519737cd9443eb783d6d", "patch": "@@ -1,11 +1,51 @@\n-typedef unsigned char V __attribute__((vector_size(16), may_alias));\n+/* Test fragment for vectors with 16 elements.  */\n+\n+#ifndef UNSUPPORTED\n \n struct S\n {\n-  V in1, in2, mask, out;\n+  V in;\n+  VI mask;\n+  V out;\n };\n \n struct S tests[] = {\n+  {\n+    { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 },\n+    { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, },\n+    { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 },\n+  },\n+  {\n+    { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 },\n+    { 0x10, 0x21, 0x32, 0x43, 0x54, 0x65, 0x76, 0x87,\n+      0x98, 0xa9, 0xba, 0xcb, 0xdc, 0xed, 0xfe, 0xff },\n+    { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 },\n+  },\n+  {\n+    { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 },\n+    { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 },\n+    { 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 },\n+  },\n+  {\n+    { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 },\n+    { 0, 2, 4, 6, 8, 10, 12, 14, 1, 3, 5, 7, 9, 11, 13, 15 },\n+    { 1, 3, 5, 7, 9, 11, 13, 15, 2, 4, 6, 8, 10, 12, 14, 16 },\n+  },\n+  {\n+    { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 },\n+    { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3 }, \n+    { 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4 }, \n+  },\n+};\n+\n+struct S2\n+{\n+  V in1, in2;\n+  VI mask;\n+  V out;\n+};\n+\n+struct S2 tests2[] = {\n   {\n     { 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 },\n     { 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 },\n@@ -38,18 +78,4 @@ struct S tests[] = {\n   },\n };\n \n-extern void abort(void);\n-\n-int main()\n-{\n-  int i;\n-\n-  for (i = 0; i < sizeof(tests)/sizeof(tests[0]); ++i)\n-    {\n-      V r = __builtin_shuffle(tests[i].in1, tests[i].in2, tests[i].mask);\n-      if (__builtin_memcmp(&r, &tests[i].out, sizeof(V)) != 0)\n-\tabort();\n-    }\n-\n-  return 0;\n-}\n+#endif", "previous_filename": "gcc/testsuite/gcc.c-torture/execute/vect-shuffle-8.c"}, {"sha": "ef778e59418c82765878fcabeeb18c2da1a61c1f", "filename": "gcc/testsuite/gcc.c-torture/execute/vshuf-2.inc", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-2.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-2.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-2.inc?ref=cf9899972bcb7ec5e577519737cd9443eb783d6d", "patch": "@@ -0,0 +1,38 @@\n+/* Test fragment for vectors of 2 elements.  */\n+\n+#ifndef UNSUPPORTED\n+\n+struct S\n+{\n+  V in;\n+  VI mask;\n+  V out;\n+};\n+\n+struct S tests[] = {\n+  { { A, B }, { 0, 1 }, { A, B } },\n+  { { A, B }, { -16, -1 }, { A, B } },\n+  { { A, B }, { 1, 0 }, { B, A } },\n+  { { A, B }, { 0, 0 }, { A, A } },\n+  { { X, Y }, { 1, 1 }, { Y, Y } },\n+  { { X, Y }, { 1, 0 }, { Y, X } },\n+};\n+\n+struct S2\n+{\n+  V in1, in2;\n+  VI mask;\n+  V out;\n+};\n+\n+struct S2 tests2[] = {\n+  { { A, B }, { X, Y }, { 0, 1 }, { A, B } },\n+  { { A, B }, { X, Y }, { 2, 3 }, { X, Y } },\n+  { { A, B }, { X, Y }, { 0, 2 }, { A, X } },\n+  { { A, B }, { X, Y }, { 2, 1 }, { X, B } },\n+  { { A, B }, { X, Y }, { 3, 0 }, { Y, A } },\n+  { { A, B }, { X, Y }, { 0, 0 }, { A, A } },\n+  { { A, B }, { X, Y }, { 3, 3 }, { Y, Y } },\n+};\n+\n+#endif"}, {"sha": "d6e6e1022959781000ff642a7a802db8fd13952c", "filename": "gcc/testsuite/gcc.c-torture/execute/vshuf-4.inc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-4.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-4.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-4.inc?ref=cf9899972bcb7ec5e577519737cd9443eb783d6d", "patch": "@@ -0,0 +1,39 @@\n+/* Test fragment for vectors of 4 elements.  */\n+\n+#ifndef UNSUPPORTED\n+\n+struct S\n+{\n+  V in;\n+  VI mask;\n+  V out;\n+};\n+\n+struct S tests[] = {\n+  { { A, B, C, D }, { 0, 1, 2, 3 }, { A, B, C, D }, },\n+  { { A, B, C, D }, { 0+1*4, 1+2*4, 2+3*4, 3+4*4 }, { A, B, C, D } },\n+  { { A, B, C, D }, { 3, 2, 1, 0 }, { D, C, B, A } },\n+  { { A, B, C, D }, { 0, 3, 2, 1 }, { A, D, C, B } },\n+  { { A, B, C, D }, { 0, 2, 1, 3 }, { A, C, B, D } },\n+  { { W, X, Y, Z }, { 3, 1, 2, 0 }, { Z, X, Y, W } },\n+  { { W, X, Y, Z }, { 0, 0, 0, 0 }, { W, W, W, W } },\n+  { { W, X, Y, Z }, { 1, 2, 1, 2 }, { X, Y, X, Y } },\n+};\n+\n+struct S2\n+{\n+  V in1, in2;\n+  VI mask;\n+  V out;\n+};\n+\n+struct S2 tests2[] = {\n+  { { A, B, C, D }, { W, X, Y, Z }, { 0, 1, 2, 3 }, { A, B, C, D } },\n+  { { A, B, C, D }, { W, X, Y, Z }, { 4, 5, 6, 7 }, { W, X, Y, Z } },\n+  { { A, B, C, D }, { W, X, Y, Z }, { 0, 4, 1, 5 }, { A, W, B, X } },\n+  { { A, B, C, D }, { W, X, Y, Z }, { 0, 7, 4, 3 }, { A, Z, W, D } },\n+  { { A, B, C, D }, { W, X, Y, Z }, { 0, 0, 0, 0 }, { A, A, A, A } },\n+  { { A, B, C, D }, { W, X, Y, Z }, { 7, 7, 7, 7 }, { Z, Z, Z, Z } },\n+};\n+\n+#endif"}, {"sha": "e6475226a1132ad7a8b175c053c58a91609b41f4", "filename": "gcc/testsuite/gcc.c-torture/execute/vshuf-8.inc", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-8.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-8.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-8.inc?ref=cf9899972bcb7ec5e577519737cd9443eb783d6d", "patch": "@@ -0,0 +1,101 @@\n+/* Test fragment for vectors of 8 elements.  */\n+\n+#ifndef UNSUPPORTED\n+\n+struct S\n+{\n+  V in;\n+  VI mask;\n+  V out;\n+};\n+\n+struct S tests[] = {\n+  {\n+    { A1, B1, C1, D1, E1, F1, G1, H1 },\n+    {  0,  1,  2,  3,  4,  5,  6,  7 },\n+    { A1, B1, C1, D1, E1, F1, G1, H1 },\n+  },\n+  {\n+    { A1, B1, C1, D1, E1, F1, G1, H1 },\n+    { 0x10, 0x21, 0x32, 0x43, 0x54, 0x65, 0x76, 0x87 },\n+    { A1, B1, C1, D1, E1, F1, G1, H1 },\n+  },\n+  {\n+    { A1, B1, C1, D1, E1, F1, G1, H1 },\n+    {  7,  6,  5,  4,  3,  2,  1,  0 },\n+    { H1, G1, F1, E1, D1, C1, B1, A1 },\n+  },\n+  {\n+    { A1, B1, C1, D1, E1, F1, G1, H1 },\n+    {  7,  0,  5,  3,  2,  4,  1,  6 },\n+    { H1, A1, F1, D1, C1, E1, B1, G1 },\n+  },\n+  {\n+    { A1, B1, C1, D1, E1, F1, G1, H1 },\n+    {  0,  2,  1,  3,  4,  6,  5,  7 },\n+    { A1, C1, B1, D1, E1, G1, F1, H1 },\n+  },\n+  {\n+    { A2, B2, C2, D2, E2, F2, G2, H2 },\n+    {  3,  1,  2,  0,  7,  5,  6,  4 },\n+    { D2, B2, C2, A2, H2, F2, G2, E2 },\n+  },\n+  {\n+    { A2, B2, C2, D2, E2, F2, G2, H2 },\n+    { 0, 0, 0, 0 },\n+    { A2, A2, A2, A2, A2, A2, A2, A2 },\n+  },\n+  {\n+    { A2, B2, C2, D2, E2, F2, G2, H2 },\n+    {  1,  6,  1,  6,  1,  6,  1,  6 }, \n+    { B2, G2, B2, G2, B2, G2, B2, G2 },\n+  }\n+};\n+\n+struct S2\n+{\n+  V in1, in2;\n+  VI mask;\n+  V out;\n+};\n+\n+struct S2 tests2[] = {\n+  {\n+    { A1, B1, C1, D1, E1, F1, G1, H1 },\n+    { A2, B2, C2, D2, E2, F2, G2, H2 },\n+    { 0, 1, 2, 3, 4, 5, 6, 7 },\n+    { A1, B1, C1, D1, E1, F1, G1, H1 },\n+  },\n+  {\n+    { A1, B1, C1, D1, E1, F1, G1, H1 },\n+    { A2, B2, C2, D2, E2, F2, G2, H2 },\n+    {  8,  9, 10, 11, 12, 13, 14, 15 },\n+    { A2, B2, C2, D2, E2, F2, G2, H2 },\n+  },\n+  {\n+    { A1, B1, C1, D1, E1, F1, G1, H1 },\n+    { A2, B2, C2, D2, E2, F2, G2, H2 },\n+    {  0,  8,  1,  9,  2, 10,  3, 11 },\n+    { A1, A2, B1, B2, C1, C2, D1, D2 },\n+  },\n+  {\n+    { A1, B1, C1, D1, E1, F1, G1, H1 },\n+    { A2, B2, C2, D2, E2, F2, G2, H2 },\n+    {  0, 15,  4, 11, 12,  3,  7,  8 },\n+    { A1, H2, E1, D2, E2, D1, H1, A2 },\n+  },\n+  {\n+    { A1, B1, C1, D1, E1, F1, G1, H1 },\n+    { A2, B2, C2, D2, E2, F2, G2, H2 },\n+    {  0,  0,  0,  0,  0,  0,  0,  0 },\n+    { A1, A1, A1, A1, A1, A1, A1, A1 }, \n+  },\n+  {\n+    { A1, B1, C1, D1, E1, F1, G1, H1 },\n+    { A2, B2, C2, D2, E2, F2, G2, H2 },\n+    { 0x1e, 0x2e, 0x3e, 0x4e, 0x5e, 0x6e, 0x7e, 0x8e },\n+    { G2, G2, G2, G2, G2, G2, G2, G2 },\n+  },\n+};\n+\n+#endif"}, {"sha": "8487131b12d416ece5e6d7d2668e868b0f97526a", "filename": "gcc/testsuite/gcc.c-torture/execute/vshuf-main.inc", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-main.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-main.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-main.inc?ref=cf9899972bcb7ec5e577519737cd9443eb783d6d", "patch": "@@ -0,0 +1,26 @@\n+/* Driver fragment for __builtin_shuffle of any vector shape.  */\n+\n+extern void abort(void);\n+\n+int main()\n+{\n+#ifndef UNSUPPORTED\n+  int i;\n+\n+  for (i = 0; i < sizeof(tests)/sizeof(tests[0]); ++i)\n+    {\n+      V r = __builtin_shuffle(tests[i].in, tests[i].mask);\n+      if (__builtin_memcmp(&r, &tests[i].out, sizeof(V)) != 0)\n+\tabort();\n+    }\n+\n+  for (i = 0; i < sizeof(tests2)/sizeof(tests2[0]); ++i)\n+    {\n+      V r = __builtin_shuffle(tests2[i].in1, tests2[i].in2, tests2[i].mask);\n+      if (__builtin_memcmp(&r, &tests2[i].out, sizeof(V)) != 0)\n+\tabort();\n+    }\n+#endif\n+\n+  return 0;\n+}"}, {"sha": "dcd1de1e646e1da1813839046aa76baec90e52a4", "filename": "gcc/testsuite/gcc.c-torture/execute/vshuf-v16qi.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v16qi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v16qi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v16qi.c?ref=cf9899972bcb7ec5e577519737cd9443eb783d6d", "patch": "@@ -0,0 +1,5 @@\n+typedef unsigned char V __attribute__((vector_size(16)));\n+typedef V VI;\n+\n+#include \"vshuf-16.inc\"\n+#include \"vshuf-main.inc\""}, {"sha": "e88ec08ddf65003e5a41764c10ef891461775166", "filename": "gcc/testsuite/gcc.c-torture/execute/vshuf-v2df.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v2df.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v2df.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v2df.c?ref=cf9899972bcb7ec5e577519737cd9443eb783d6d", "patch": "@@ -0,0 +1,15 @@\n+#if __SIZEOF_DOUBLE__ == 8 && __SIZEOF_LONG_LONG__ == 8\n+typedef double V __attribute__((vector_size(16)));\n+typedef unsigned long long VI __attribute__((vector_size(16)));\n+#else\n+#define UNSUPPORTED\n+#endif\n+\n+#define A\t0.69314718055994530942\n+#define B\t2.7182818284590452354\n+\n+#define X\t3.14159265358979323846\n+#define Y\t1.41421356237309504880\n+\n+#include \"vshuf-2.inc\"\n+#include \"vshuf-main.inc\""}, {"sha": "0985a0de02a2bffb11991a55b597af2bc496f95b", "filename": "gcc/testsuite/gcc.c-torture/execute/vshuf-v2di.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v2di.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v2di.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v2di.c?ref=cf9899972bcb7ec5e577519737cd9443eb783d6d", "patch": "@@ -0,0 +1,15 @@\n+#if __SIZEOF_LONG_LONG__ == 8\n+typedef unsigned long long V __attribute__((vector_size(16)));\n+typedef V VI;\n+#else\n+#define UNSUPPORTED\n+#endif\n+\n+#define A\t0x1112131415161718\n+#define B\t0x2122232425262728\n+\n+#define X\t0xc1c2c3c4c5c6c7c8\n+#define Y\t0xd1d2d3d4d5d6d7d8\n+\n+#include \"vshuf-2.inc\"\n+#include \"vshuf-main.inc\""}, {"sha": "f9c40b2239135a95181675e6d92bf3cb7188c091", "filename": "gcc/testsuite/gcc.c-torture/execute/vshuf-v2sf.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v2sf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v2sf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v2sf.c?ref=cf9899972bcb7ec5e577519737cd9443eb783d6d", "patch": "@@ -0,0 +1,21 @@\n+#if __SIZEOF_FLOAT__ == 4\n+typedef float V __attribute__((vector_size(8)));\n+# if __SIZEOF_INT__ == 4\n+typedef unsigned int VI __attribute__((vector_size(8)));\n+# elif __SIZEOF_LONG__ == 4\n+typedef unsigned long VI __attribute__((vector_size(8)));\n+# else\n+#  define UNSUPPORTED\n+# endif\n+#else\n+# define UNSUPPORTED\n+#endif\n+\n+#define A\t0.69314718055994530942f\n+#define B\t2.7182818284590452354f\n+\n+#define X\t3.14159265358979323846f\n+#define Y\t1.41421356237309504880f\n+\n+#include \"vshuf-2.inc\"\n+#include \"vshuf-main.inc\""}, {"sha": "414743c892f806ec67576fb6fb54093c73c8729e", "filename": "gcc/testsuite/gcc.c-torture/execute/vshuf-v2si.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v2si.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v2si.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v2si.c?ref=cf9899972bcb7ec5e577519737cd9443eb783d6d", "patch": "@@ -0,0 +1,18 @@\n+#if __SIZEOF_INT__ == 4\n+typedef unsigned int V __attribute__((vector_size(8)));\n+typedef V VI;\n+#elif __SIZEOF_LONG__ == 4\n+typedef unsigned long V __attribute__((vector_size(8)));\n+typedef V VI;\n+#else\n+#define UNSUPPORTED\n+#endif\n+\n+#define A\t0x11121314\n+#define B\t0x21222324\n+\n+#define X\t0xd1d2d3d4\n+#define Y\t0xe1e2e3e4\n+\n+#include \"vshuf-2.inc\"\n+#include \"vshuf-main.inc\""}, {"sha": "c4030a7dbabc08386c7f9c21c6d8d3b58c99c245", "filename": "gcc/testsuite/gcc.c-torture/execute/vshuf-v4df.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v4df.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v4df.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v4df.c?ref=cf9899972bcb7ec5e577519737cd9443eb783d6d", "patch": "@@ -0,0 +1,19 @@\n+#if __SIZEOF_DOUBLE__ == 8 && __SIZEOF_LONG_LONG__ == 8\n+typedef double V __attribute__((vector_size(32)));\n+typedef unsigned long long VI __attribute__((vector_size(32)));\n+#else\n+#define UNSUPPORTED\n+#endif\n+\n+#define A\t0.69314718055994530942\n+#define B\t2.7182818284590452354\n+#define C\t2.30258509299404568402\n+#define D\t1.4426950408889634074\n+\n+#define W\t0.31830988618379067154\n+#define X\t3.14159265358979323846\n+#define Y\t1.41421356237309504880\n+#define Z\t0.70710678118654752440\n+\n+#include \"vshuf-4.inc\"\n+#include \"vshuf-main.inc\""}, {"sha": "a84aebefb6d7d0ce08f02534541d64ee93491f1b", "filename": "gcc/testsuite/gcc.c-torture/execute/vshuf-v4di.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v4di.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v4di.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v4di.c?ref=cf9899972bcb7ec5e577519737cd9443eb783d6d", "patch": "@@ -0,0 +1,19 @@\n+#if __SIZEOF_LONG_LONG__ == 8\n+typedef unsigned long long V __attribute__((vector_size(32)));\n+typedef V VI;\n+#else\n+#define UNSUPPORTED\n+#endif\n+\n+#define A\t0x1112131415161718\n+#define B\t0x2122232425262728\n+#define C\t0x3132333435363738\n+#define D\t0x4142434445464748\n+\n+#define W\t0xc1c2c3c4c5c6c7c8\n+#define X\t0xd1d2d3d4d5d6d7d8\n+#define Y\t0xe1e2e3e4e5e6e7e8\n+#define Z\t0xf1f2f3f4f5f6f7f8\n+\n+#include \"vshuf-4.inc\"\n+#include \"vshuf-main.inc\""}, {"sha": "64a2bb4ac8275e935e80dba43f69cc6b08bab1ea", "filename": "gcc/testsuite/gcc.c-torture/execute/vshuf-v4hi.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v4hi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v4hi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v4hi.c?ref=cf9899972bcb7ec5e577519737cd9443eb783d6d", "patch": "@@ -0,0 +1,15 @@\n+typedef unsigned short V __attribute__((vector_size(8)));\n+typedef V VI;\n+\n+#define A\t0x1112\n+#define B\t0x2122\n+#define C\t0x3132\n+#define D\t0x4142\n+\n+#define W\t0xc1c2\n+#define X\t0xd1d2\n+#define Y\t0xe1e2\n+#define Z\t0xf1f2\n+\n+#include \"vshuf-4.inc\"\n+#include \"vshuf-main.inc\""}, {"sha": "283672560a3c12474f65eee2b6942baaf74eb405", "filename": "gcc/testsuite/gcc.c-torture/execute/vshuf-v4sf.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v4sf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v4sf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v4sf.c?ref=cf9899972bcb7ec5e577519737cd9443eb783d6d", "patch": "@@ -0,0 +1,25 @@\n+#if __SIZEOF_FLOAT__ == 4\n+typedef float V __attribute__((vector_size(16)));\n+# if __SIZEOF_INT__ == 4\n+typedef unsigned int VI __attribute__((vector_size(16)));\n+# elif __SIZEOF_LONG__ == 4\n+typedef unsigned long VI __attribute__((vector_size(16)));\n+# else\n+#  define UNSUPPORTED\n+# endif\n+#else\n+# define UNSUPPORTED\n+#endif\n+\n+#define A\t0.69314718055994530942f\n+#define B\t2.7182818284590452354f\n+#define C\t2.30258509299404568402f\n+#define D\t1.4426950408889634074f\n+\n+#define W\t0.31830988618379067154f\n+#define X\t3.14159265358979323846f\n+#define Y\t1.41421356237309504880f\n+#define Z\t0.70710678118654752440f\n+\n+#include \"vshuf-4.inc\"\n+#include \"vshuf-main.inc\""}, {"sha": "289ec1b5016eebbe02320777b6b4272180a4430c", "filename": "gcc/testsuite/gcc.c-torture/execute/vshuf-v4si.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v4si.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v4si.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v4si.c?ref=cf9899972bcb7ec5e577519737cd9443eb783d6d", "patch": "@@ -0,0 +1,22 @@\n+#if __SIZEOF_INT__ == 4\n+typedef unsigned int V __attribute__((vector_size(16)));\n+typedef V VI;\n+#elif __SIZEOF_LONG__ == 4\n+typedef unsigned long V __attribute__((vector_size(16)));\n+typedef V VI;\n+#else\n+# define UNSUPPORTED\n+#endif\n+\n+#define A\t0x11121314\n+#define B\t0x21222324\n+#define C\t0x31323334\n+#define D\t0x41424344\n+\n+#define W\t0xc1c2c3c4\n+#define X\t0xd1d2d3d4\n+#define Y\t0xe1e2e3e4\n+#define Z\t0xf1f2f3f4\n+\n+#include \"vshuf-4.inc\"\n+#include \"vshuf-main.inc\""}, {"sha": "ce442c5d995179785d96168779cc27238193dd85", "filename": "gcc/testsuite/gcc.c-torture/execute/vshuf-v8hi.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v8hi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v8hi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v8hi.c?ref=cf9899972bcb7ec5e577519737cd9443eb783d6d", "patch": "@@ -0,0 +1,23 @@\n+typedef unsigned short V __attribute__((vector_size(16)));\n+typedef V VI;\n+\n+#define A1\t0x1112\n+#define B1\t0x2122\n+#define C1\t0x3132\n+#define D1\t0x4142\n+#define E1\t0x5152\n+#define F1\t0x6162\n+#define G1\t0x7172\n+#define H1\t0x8182\n+\n+#define A2\t0x9192\n+#define B2\t0xa1a2\n+#define C2\t0xb1b2\n+#define D2\t0xc1c2\n+#define E2\t0xd1d2\n+#define F2\t0xe1e2\n+#define G2\t0xf1f2\n+#define H2\t0x0102\n+\n+#include \"vshuf-8.inc\"\n+#include \"vshuf-main.inc\""}, {"sha": "349ec6db6998dafb8c48e9c5373d37a973333dd3", "filename": "gcc/testsuite/gcc.c-torture/execute/vshuf-v8qi.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v8qi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v8qi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v8qi.c?ref=cf9899972bcb7ec5e577519737cd9443eb783d6d", "patch": "@@ -0,0 +1,23 @@\n+typedef unsigned char V __attribute__((vector_size(8)));\n+typedef V VI;\n+\n+#define A1\t0x11\n+#define B1\t0x12\n+#define C1\t0x13\n+#define D1\t0x14\n+#define E1\t0x15\n+#define F1\t0x16\n+#define G1\t0x17\n+#define H1\t0x18\n+\n+#define A2\t0xf1\n+#define B2\t0xf2\n+#define C2\t0xf3\n+#define D2\t0xf4\n+#define E2\t0xf5\n+#define F2\t0xf6\n+#define G2\t0xf7\n+#define H2\t0xf8\n+\n+#include \"vshuf-8.inc\"\n+#include \"vshuf-main.inc\""}, {"sha": "5b0a2c33e2ca33ec0bc557b668f0fd443f61876d", "filename": "gcc/testsuite/gcc.c-torture/execute/vshuf-v8si.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v8si.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9899972bcb7ec5e577519737cd9443eb783d6d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v8si.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvshuf-v8si.c?ref=cf9899972bcb7ec5e577519737cd9443eb783d6d", "patch": "@@ -0,0 +1,30 @@\n+#if __SIZEOF_INT__ == 4\n+typedef unsigned int V __attribute__((vector_size(32)));\n+typedef V VI;\n+#elif __SIZEOF_LONG__ == 4\n+typedef unsigned long V __attribute__((vector_size(32)));\n+typedef V VI;\n+#else\n+# define UNSUPPORTED\n+#endif\n+\n+#define A1\t0x11121314\n+#define B1\t0x21222324\n+#define C1\t0x31323334\n+#define D1\t0x41424344\n+#define E1\t0x51525354\n+#define F1\t0x61626364\n+#define G1\t0x71727374\n+#define H1\t0x81828384\n+\n+#define A2\t0x91929394\n+#define B2\t0xa1a2a3a4\n+#define C2\t0xb1b2b3b4\n+#define D2\t0xc1c2c3c4\n+#define E2\t0xd1d2d3d4\n+#define F2\t0xe1e2e3e4\n+#define G2\t0xf1f2f3f4\n+#define H2\t0x01020304\n+\n+#include \"vshuf-8.inc\"\n+#include \"vshuf-main.inc\""}]}