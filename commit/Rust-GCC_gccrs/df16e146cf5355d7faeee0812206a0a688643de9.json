{"sha": "df16e146cf5355d7faeee0812206a0a688643de9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYxNmUxNDZjZjUzNTVkN2ZhZWVlMDgxMjIwNmEwYTY4ODY0M2RlOQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2012-04-26T23:32:14Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2012-04-26T23:32:14Z"}, "message": "re PR c++/53096 ([DR 1333] [c++11] should be possible to default a copy ctor that takes non-const arg)\n\n/cp\n2012-04-26  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/53096\n\t* class.c (check_bases_and_members): Implement core/1333, do not\n\tdisallow defaulted in the class body non-const ref special members.\n\n/testsuite\n2012-04-26  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/53096\n\t* g++.dg/cpp0x/defaulted35.C: New.\n\t* g++.dg/cpp0x/defaulted15.C: Adjust.\n\nFrom-SVN: r186888", "tree": {"sha": "dcf120c2e03b88960b03842a63d33845340766ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcf120c2e03b88960b03842a63d33845340766ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df16e146cf5355d7faeee0812206a0a688643de9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df16e146cf5355d7faeee0812206a0a688643de9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df16e146cf5355d7faeee0812206a0a688643de9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df16e146cf5355d7faeee0812206a0a688643de9/comments", "author": null, "committer": null, "parents": [{"sha": "fd59643c209efc38aeda606675357ea3f0afe0b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd59643c209efc38aeda606675357ea3f0afe0b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd59643c209efc38aeda606675357ea3f0afe0b8"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "db8bf7270e134f379234c65205d7b41ae1952f3c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df16e146cf5355d7faeee0812206a0a688643de9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df16e146cf5355d7faeee0812206a0a688643de9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=df16e146cf5355d7faeee0812206a0a688643de9", "patch": "@@ -1,3 +1,9 @@\n+2012-04-26  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/53096\n+\t* class.c (check_bases_and_members): Implement core/1333, do not\n+\tdisallow defaulted in the class body non-const ref special members.\n+\n 2012-04-24  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/52363"}, {"sha": "00aeefd5d48724518a4e306772fa30ba70055cbf", "filename": "gcc/cp/class.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df16e146cf5355d7faeee0812206a0a688643de9/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df16e146cf5355d7faeee0812206a0a688643de9/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=df16e146cf5355d7faeee0812206a0a688643de9", "patch": "@@ -1,6 +1,7 @@\n /* Functions related to building classes and their related objects.\n    Copyright (C) 1987, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010, 2011\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010, 2011,\n+   2012\n    Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com)\n \n@@ -5144,9 +5145,6 @@ check_bases_and_members (tree t)\n \t\t give the synthesis error.  */\n \t      error (\"%q+D declared to take const reference, but implicit \"\n \t\t     \"declaration would take non-const\", fn);\n-\t    else if (imp_const_p && !fn_const_p)\n-\t      error (\"%q+D declared to take non-const reference cannot be \"\n-\t\t     \"defaulted in the class body\", fn);\n \t  }\n \tdefaulted_late_check (fn);\n       }"}, {"sha": "576c4aa17f065b471f1ded0558879d33e8d46652", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df16e146cf5355d7faeee0812206a0a688643de9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df16e146cf5355d7faeee0812206a0a688643de9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=df16e146cf5355d7faeee0812206a0a688643de9", "patch": "@@ -1,3 +1,9 @@\n+2012-04-26  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/53096\n+\t* g++.dg/cpp0x/defaulted35.C: New.\n+\t* g++.dg/cpp0x/defaulted15.C: Adjust.\n+\n 2012-04-26  Janis Johnson  <janisjo@codesourcery.com>\n \n \t* gcc.dg/bf-ms-layout.c: Adjust offsets to fit ms-bitfield"}, {"sha": "6d182df2158237c46eb9e996bde367de233746f8", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted15.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df16e146cf5355d7faeee0812206a0a688643de9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df16e146cf5355d7faeee0812206a0a688643de9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted15.C?ref=df16e146cf5355d7faeee0812206a0a688643de9", "patch": "@@ -43,7 +43,7 @@ SA(__has_trivial_copy(E));\n \n struct F\n {\n-  F(F&) = default;\t\t// { dg-error \"non-const\" }\n+  F(F&) = default;\n };\n \n struct G: public F"}, {"sha": "ca700fb784c3d35bb6a58c8ef5099147e238f251", "filename": "gcc/testsuite/g++.dg/cpp0x/defaulted35.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df16e146cf5355d7faeee0812206a0a688643de9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted35.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df16e146cf5355d7faeee0812206a0a688643de9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted35.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdefaulted35.C?ref=df16e146cf5355d7faeee0812206a0a688643de9", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/53096\n+// { dg-options -std=c++0x }\n+\n+struct foo\n+{\n+  foo(foo&) = default;\n+  foo& operator=(foo&) = default;\n+};"}]}