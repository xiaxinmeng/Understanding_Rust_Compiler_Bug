{"sha": "d6e14e8f8ad407a6fd2e8d48174c01fd73586e88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZlMTRlOGY4YWQ0MDdhNmZkMmU4ZDQ4MTc0YzAxZmQ3MzU4NmU4OA==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2005-08-01T12:34:19Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2005-08-01T12:34:19Z"}, "message": "common.opt (flag_ipa_cp): Put in right place to maintain alphabetic sort.\n\n\t* common.opt (flag_ipa_cp): Put in right place to maintain\n\talphabetic sort.\n\nFrom-SVN: r102631", "tree": {"sha": "16ad98c2787a25d0f8178c09628d42cf82bf7f0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16ad98c2787a25d0f8178c09628d42cf82bf7f0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6e14e8f8ad407a6fd2e8d48174c01fd73586e88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6e14e8f8ad407a6fd2e8d48174c01fd73586e88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6e14e8f8ad407a6fd2e8d48174c01fd73586e88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6e14e8f8ad407a6fd2e8d48174c01fd73586e88/comments", "author": null, "committer": null, "parents": [{"sha": "b15341b8efe5498ec3e5637124317c0c3ea6e94f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b15341b8efe5498ec3e5637124317c0c3ea6e94f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b15341b8efe5498ec3e5637124317c0c3ea6e94f"}], "stats": {"total": 53, "additions": 29, "deletions": 24}, "files": [{"sha": "297fca10fb1d630f2cb9cb553f297b4c8dca9a37", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 20, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6e14e8f8ad407a6fd2e8d48174c01fd73586e88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6e14e8f8ad407a6fd2e8d48174c01fd73586e88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d6e14e8f8ad407a6fd2e8d48174c01fd73586e88", "patch": "@@ -1,3 +1,8 @@\n+2005-08-01  Steven Bosscher  <stevenb@suse.de>\n+\n+\t* common.opt (flag_ipa_cp): Put in right place to maintain\n+\talphabetic sort.\n+\n 2005-08-01  Jan Hubicka  <jh@suse.cz>\n \n \t* profile.c (compute_value_histograms): Fix thinko.\n@@ -163,10 +168,10 @@\n \tnon-integral types.\n \n 2005-07-29  Wolfgang Bangerth <bangerth@dealii.org>\n- \n+\n \tPR target/22582\n \t* doc/invoke.texi: Document -rdynamic.\n- \n+\n 2005-07-30  Joseph S. Myers  <joseph@codesourcery.com>\n \n \tPR c/23143\n@@ -394,8 +399,8 @@\n 2005-07-28  Richard Henderson  <rth@redhat.com>\n \n \tPR target/17692\n-        * config/i386/i386.c (ix86_split_sse_movcc): Emit DELETED note\n-        when expanding to nothing.\n+\t* config/i386/i386.c (ix86_split_sse_movcc): Emit DELETED note\n+\twhen expanding to nothing.\n \n 2005-07-28  Josh Conner  <jconner@apple.com>\n \n@@ -435,9 +440,9 @@\n \n 2005-07-28  Jeff Law  <law@redhat.com>\n \n-        * tree-vrp.c (test_for_singularity): Extracted from  ...\n-        (simplify_cond_using_ranges): Attempt to simplify a relational\n-        test to NE_EXPR.  Dump information when a COND_EXPR is simplified.\n+\t* tree-vrp.c (test_for_singularity): Extracted from  ...\n+\t(simplify_cond_using_ranges): Attempt to simplify a relational\n+\ttest to NE_EXPR.  Dump information when a COND_EXPR is simplified.\n \n 2005-07-28  Dorit Nuzman  <dorit@il.ibm.com>\n \n@@ -522,19 +527,19 @@\n \n \t* config/frv/frv.h: Remove machine_function definition.\n \n-        * config/frv/frv.c (struct frv_io): New.\n-        (struct machine_function): Moved from frv.h.  Add has_membar_p.\n-        (frv_same_doubleword_p, frv_io_fixed_order_p, frv_io_union)\n-        (frv_extract_membar, frv_io_check_address, frv_io_handle_set)\n-        (frv_io_handle_use_1, frv_io_handle_use, frv_optimize_membar_local)\n-        (frv_optimize_membar_global, frv_optimize_membar): New functions.\n-        (frv_reorg): Call frv_optimize_membar when appropriate.\n-        (bdesc_loads, bdesc_stores): Use the membar code as the icode field.\n-        (frv_expand_builtin): Adjust calls accordingly.\n-        (frv_io_address_cookie): New function.\n-        (frv_expand_load_builtin, frv_expand_store_builtin): Emit a normal\n-        load or store rather than a special insn.  Add ccnstant address and\n-        io-type operands to the membar.\n+\t* config/frv/frv.c (struct frv_io): New.\n+\t(struct machine_function): Moved from frv.h.  Add has_membar_p.\n+\t(frv_same_doubleword_p, frv_io_fixed_order_p, frv_io_union)\n+\t(frv_extract_membar, frv_io_check_address, frv_io_handle_set)\n+\t(frv_io_handle_use_1, frv_io_handle_use, frv_optimize_membar_local)\n+\t(frv_optimize_membar_global, frv_optimize_membar): New functions.\n+\t(frv_reorg): Call frv_optimize_membar when appropriate.\n+\t(bdesc_loads, bdesc_stores): Use the membar code as the icode field.\n+\t(frv_expand_builtin): Adjust calls accordingly.\n+\t(frv_io_address_cookie): New function.\n+\t(frv_expand_load_builtin, frv_expand_store_builtin): Emit a normal\n+\tload or store rather than a special insn.  Add ccnstant address and\n+\tio-type operands to the membar.\n \t(frv_ifcvt_modify_tests): Unsign regno.\n \t(frv_ifcvt_modify_tests): Same.\n "}, {"sha": "04a8ac03a0abcf78f65a95d366b86e4b6bdd15bf", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6e14e8f8ad407a6fd2e8d48174c01fd73586e88/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6e14e8f8ad407a6fd2e8d48174c01fd73586e88/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=d6e14e8f8ad407a6fd2e8d48174c01fd73586e88", "patch": "@@ -495,6 +495,10 @@ finstrument-functions\n Common Report Var(flag_instrument_function_entry_exit)\n Instrument function entry and exit with profiling calls\n \n+fipa-cp\n+Common Report Var(flag_ipa_cp)\n+Perform Interprocedural constant propagation\n+\n fipa-pure-const\n Common Report Var(flag_ipa_pure_const) Init(0)\n Discover pure and const functions\n@@ -507,10 +511,6 @@ fipa-type-escape\n Common Report Var(flag_ipa_type_escape) Init(0)\n Type based escape and alias analysis\n \n-fipa-cp\n-Common Report Var(flag_ipa_cp)\n-Perform Interprocedural constant propagation\n-\n fivopts\n Common Report Var(flag_ivopts) Init(1)\n Optimize induction variables on trees"}]}