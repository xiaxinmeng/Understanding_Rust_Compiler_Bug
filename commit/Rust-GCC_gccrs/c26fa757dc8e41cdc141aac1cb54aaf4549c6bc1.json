{"sha": "c26fa757dc8e41cdc141aac1cb54aaf4549c6bc1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI2ZmE3NTdkYzhlNDFjZGMxNDFhYWMxY2I1NGFhZjQ1NDljNmJjMQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-04-25T12:56:41Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-04-25T12:56:41Z"}, "message": "10.cc: New.\n\n2004-04-25  Paolo Carlini  <pcarlini@suse.de>\n\n\t* testsuite/21_strings/basic_string/inserters_extractors/char/10.cc:\n\tNew.\n\t* testsuite/21_strings/basic_string/inserters_extractors/wchar_t/10.cc:\n\tLikewise.\n\t* testsuite/27_io/basic_istream/getline/char/5.cc: Likewise.\n\nFrom-SVN: r81159", "tree": {"sha": "ae45be2d1ba6559aa7376738df7a759f29b35d78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae45be2d1ba6559aa7376738df7a759f29b35d78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c26fa757dc8e41cdc141aac1cb54aaf4549c6bc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c26fa757dc8e41cdc141aac1cb54aaf4549c6bc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c26fa757dc8e41cdc141aac1cb54aaf4549c6bc1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c26fa757dc8e41cdc141aac1cb54aaf4549c6bc1/comments", "author": null, "committer": null, "parents": [{"sha": "acde5ecb011c6813c9c4c3c1b95d763ff3b0c561", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acde5ecb011c6813c9c4c3c1b95d763ff3b0c561", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acde5ecb011c6813c9c4c3c1b95d763ff3b0c561"}], "stats": {"total": 249, "additions": 249, "deletions": 0}, "files": [{"sha": "0b728ee3ff62e34b2621c5081db0a852e36d34ed", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c26fa757dc8e41cdc141aac1cb54aaf4549c6bc1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c26fa757dc8e41cdc141aac1cb54aaf4549c6bc1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c26fa757dc8e41cdc141aac1cb54aaf4549c6bc1", "patch": "@@ -1,3 +1,11 @@\n+2004-04-25  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* testsuite/21_strings/basic_string/inserters_extractors/char/10.cc:\n+\tNew.\n+\t* testsuite/21_strings/basic_string/inserters_extractors/wchar_t/10.cc:\n+\tLikewise.\n+\t* testsuite/27_io/basic_istream/getline/char/5.cc: Likewise.\n+\n 2004-04-24  Paolo Carlini  <pcarlini@suse.de>\n \t    Petur Runolfsson  <peturr02@ru.is>\n "}, {"sha": "75b7e89d2a57e35031bd1cb60523e4c05cd878be", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/inserters_extractors/char/10.cc", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c26fa757dc8e41cdc141aac1cb54aaf4549c6bc1/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fchar%2F10.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c26fa757dc8e41cdc141aac1cb54aaf4549c6bc1/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fchar%2F10.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fchar%2F10.cc?ref=c26fa757dc8e41cdc141aac1cb54aaf4549c6bc1", "patch": "@@ -0,0 +1,80 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 21.3.7.9 inserters and extractors\n+\n+#include <istream>\n+#include <string>\n+#include <fstream>\n+#include <testsuite_hooks.h>\n+\n+using namespace std;\n+\n+string prepare(string::size_type len, unsigned nchunks, char delim)\n+{\n+  string ret;\n+  for (unsigned i = 0; i < nchunks; ++i)\n+    {\n+      for (string::size_type j = 0; j < len; ++j)\n+\tret.push_back('a' + rand() % 26);\n+      len *= 2;\n+      ret.push_back(delim);\n+    }\n+  return ret;\n+}\n+\n+void check(istream& stream, const string& str, char delim)\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  string chunk;\n+  string::size_type index = 0, index_new = 0;\n+\n+  while (getline(stream, chunk, delim))\n+    {\n+      index_new = str.find(delim, index);\n+      VERIFY( !str.compare(index, index_new - index, chunk) );\n+      index = index_new + 1;\n+    }\n+  VERIFY( stream.eof() );\n+}\n+\n+// istream& getline(istream&, string&, char)\n+void test01()\n+{\n+  const char filename[] = \"inserters_extractors-2.txt\";\n+\n+  const char delim = '|';\n+  const string data = prepare(777, 10, delim);\n+\n+  ofstream ofstrm;\n+  ofstrm.open(filename);\n+  ofstrm.write(data.data(), data.size());\n+  ofstrm.close();\n+\n+  ifstream ifstrm;\n+  ifstrm.open(filename);\n+  check(ifstrm, data, delim);\n+  ifstrm.close();\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "5f1e1d77d9e57738d2d052e9859c45e35ced67ee", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/inserters_extractors/wchar_t/10.cc", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c26fa757dc8e41cdc141aac1cb54aaf4549c6bc1/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fwchar_t%2F10.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c26fa757dc8e41cdc141aac1cb54aaf4549c6bc1/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fwchar_t%2F10.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Finserters_extractors%2Fwchar_t%2F10.cc?ref=c26fa757dc8e41cdc141aac1cb54aaf4549c6bc1", "patch": "@@ -0,0 +1,80 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 21.3.7.9 inserters and extractors\n+\n+#include <istream>\n+#include <string>\n+#include <fstream>\n+#include <testsuite_hooks.h>\n+\n+using namespace std;\n+\n+wstring prepare(wstring::size_type len, unsigned nchunks, wchar_t delim)\n+{\n+  wstring ret;\n+  for (unsigned i = 0; i < nchunks; ++i)\n+    {\n+      for (wstring::size_type j = 0; j < len; ++j)\n+\tret.push_back(L'a' + rand() % 26);\n+      len *= 2;\n+      ret.push_back(delim);\n+    }\n+  return ret;\n+}\n+\n+void check(wistream& stream, const wstring& str, wchar_t delim)\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  wstring chunk;\n+  wstring::size_type index = 0, index_new = 0;\n+\n+  while (getline(stream, chunk, delim))\n+    {\n+      index_new = str.find(delim, index);\n+      VERIFY( !str.compare(index, index_new - index, chunk) );\n+      index = index_new + 1;\n+    }\n+  VERIFY( stream.eof() );\n+}\n+\n+// istream& getline(istream&, string&, char)\n+void test01()\n+{\n+  const char filename[] = \"inserters_extractors-2.txt\";\n+\n+  const wchar_t delim = L'|';\n+  const wstring data = prepare(777, 10, delim);\n+\n+  wofstream ofstrm;\n+  ofstrm.open(filename);\n+  ofstrm.write(data.data(), data.size());\n+  ofstrm.close();\n+\n+  wifstream ifstrm;\n+  ifstrm.open(filename);\n+  check(ifstrm, data, delim);\n+  ifstrm.close();\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "b2f07725c6448d2f35f55a991cf4840bd4afce18", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/getline/char/5.cc", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c26fa757dc8e41cdc141aac1cb54aaf4549c6bc1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fgetline%2Fchar%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c26fa757dc8e41cdc141aac1cb54aaf4549c6bc1/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fgetline%2Fchar%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fgetline%2Fchar%2F5.cc?ref=c26fa757dc8e41cdc141aac1cb54aaf4549c6bc1", "patch": "@@ -0,0 +1,81 @@\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.3 unformatted input functions\n+\n+#include <istream>\n+#include <string>\n+#include <fstream>\n+#include <testsuite_hooks.h>\n+\n+using namespace std;\n+\n+string prepare(string::size_type len, unsigned nchunks, char delim)\n+{\n+  string ret;\n+  for (unsigned i = 0; i < nchunks; ++i)\n+    {\n+      for (string::size_type j = 0; j < len; ++j)\n+\tret.push_back('a' + rand() % 26);\n+      len *= 2;\n+      ret.push_back(delim);\n+    }\n+  return ret;\n+}\n+\n+void check(istream& stream, const string& str, char delim)\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  char buf[1000000];\n+  string::size_type index = 0, index_new = 0;\n+\n+  while (stream.getline(buf, sizeof(buf), delim))\n+    {\n+      index_new = str.find(delim, index);\n+      VERIFY( stream.gcount() == index_new - index + 1 );\n+      VERIFY( !str.compare(index, index_new - index, buf) );\n+      index = index_new + 1;\n+    }\n+  VERIFY( stream.gcount() == 0 );\n+  VERIFY( stream.eof() );\n+}\n+\n+void test01()\n+{\n+  const char filename[] = \"istream_getline.txt\";\n+\n+  const char delim = '|';\n+  const string data = prepare(777, 10, delim);\n+\n+  ofstream ofstrm;\n+  ofstrm.open(filename);\n+  ofstrm.write(data.data(), data.size());\n+  ofstrm.close();\n+\n+  ifstream ifstrm;\n+  ifstrm.open(filename);\n+  check(ifstrm, data, delim);\n+  ifstrm.close();\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}