{"sha": "9babbf20ae7c7c9cb574cfb803eaf0437a505930", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJhYmJmMjBhZTdjN2M5Y2I1NzRjZmI4MDNlYWYwNDM3YTUwNTkzMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1997-11-13T20:01:21Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-11-13T20:01:21Z"}, "message": "removed unused parm to build_new_function_call\n\nFrom-SVN: r16464", "tree": {"sha": "43c9fadeeef5787cd80f8ce1b91cdbfaa3fa1e71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43c9fadeeef5787cd80f8ce1b91cdbfaa3fa1e71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9babbf20ae7c7c9cb574cfb803eaf0437a505930", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9babbf20ae7c7c9cb574cfb803eaf0437a505930", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9babbf20ae7c7c9cb574cfb803eaf0437a505930", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9babbf20ae7c7c9cb574cfb803eaf0437a505930/comments", "author": null, "committer": null, "parents": [{"sha": "fac138ead143cd41d51aa3f782c3bc6c104235cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fac138ead143cd41d51aa3f782c3bc6c104235cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fac138ead143cd41d51aa3f782c3bc6c104235cf"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "a94f58714b393ff90ff0521692775f7a84d91074", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9babbf20ae7c7c9cb574cfb803eaf0437a505930/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9babbf20ae7c7c9cb574cfb803eaf0437a505930/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9babbf20ae7c7c9cb574cfb803eaf0437a505930", "patch": "@@ -1,5 +1,8 @@\n Thu Nov 13 01:52:36 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n+\t* call.c (build_new_function_call): Remove unused 'obj' parm.\n+\t* cp-tree.h, typeck.c: Adjust.\n+\n \t* init.c (build_new): Make the cleanup last longer.\n \t(expand_vec_init): Call do_pending_stack_adjust.\n "}, {"sha": "c0fdef1d7622620644e3938bc8896ccff3bf281f", "filename": "gcc/cp/call.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9babbf20ae7c7c9cb574cfb803eaf0437a505930/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9babbf20ae7c7c9cb574cfb803eaf0437a505930/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=9babbf20ae7c7c9cb574cfb803eaf0437a505930", "patch": "@@ -4479,8 +4479,8 @@ resolve_args (args)\n }\n       \n tree\n-build_new_function_call (fn, args, obj)\n-     tree fn, args, obj;\n+build_new_function_call (fn, args)\n+     tree fn, args;\n {\n   struct z_candidate *candidates = 0, *cand;\n   tree explicit_targs = NULL_TREE;\n@@ -4493,7 +4493,7 @@ build_new_function_call (fn, args, obj)\n       template_only = 1;\n     }\n \n-  if (obj == NULL_TREE && really_overloaded_fn (fn))\n+  if (really_overloaded_fn (fn))\n     {\n       tree t;\n       tree templates = NULL_TREE;\n@@ -4721,7 +4721,7 @@ build_new_op (code, flags, arg1, arg2, arg3)\n \targlist = scratch_tree_cons (NULL_TREE, arg2, arg3);\n \tif (flags & LOOKUP_GLOBAL)\n \t  return build_new_function_call\n-\t    (lookup_name_nonclass (fnname), arglist, NULL_TREE);\n+\t    (lookup_name_nonclass (fnname), arglist);\n \n \t/* FIXME */\n \trval = build_method_call\n@@ -4746,7 +4746,7 @@ build_new_op (code, flags, arg1, arg2, arg3)\n \tif (flags & LOOKUP_GLOBAL)\n \t  return build_new_function_call\n \t    (lookup_name_nonclass (fnname),\n-\t     build_scratch_list (NULL_TREE, arg1), NULL_TREE);\n+\t     build_scratch_list (NULL_TREE, arg1));\n \n \targlist = scratch_tree_cons (NULL_TREE, arg1, build_scratch_list (NULL_TREE, arg2));\n "}, {"sha": "b931a5cd21bea2ca0fb39009c7503d5b27f5ed69", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9babbf20ae7c7c9cb574cfb803eaf0437a505930/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9babbf20ae7c7c9cb574cfb803eaf0437a505930/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=9babbf20ae7c7c9cb574cfb803eaf0437a505930", "patch": "@@ -1955,7 +1955,7 @@ extern tree build_overload_call\t\t\tPROTO((tree, tree, int));\n extern int null_ptr_cst_p\t\t\tPROTO((tree));\n extern tree type_decays_to\t\t\tPROTO((tree));\n extern tree build_user_type_conversion\t\tPROTO((tree, tree, int));\n-extern tree build_new_function_call\t\tPROTO((tree, tree, tree));\n+extern tree build_new_function_call\t\tPROTO((tree, tree));\n extern tree build_new_op\t\t\tPROTO((enum tree_code, int, tree, tree, tree));\n extern int can_convert\t\t\t\tPROTO((tree, tree));\n extern int can_convert_arg\t\t\tPROTO((tree, tree, tree));"}, {"sha": "39a71205b997d3983b20c9d839ea85c476052e05", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9babbf20ae7c7c9cb574cfb803eaf0437a505930/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9babbf20ae7c7c9cb574cfb803eaf0437a505930/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=9babbf20ae7c7c9cb574cfb803eaf0437a505930", "patch": "@@ -2426,7 +2426,7 @@ build_x_function_call (function, params, decl)\n \t      /* Put back explicit template arguments, if any.  */\n \t      if (template_id)\n \t\tfunction = template_id;\n-\t      return build_new_function_call (function, params, NULL_TREE);\n+\t      return build_new_function_call (function, params);\n \t    }\n \n \t  if (TREE_CODE (val) == TEMPLATE_DECL)"}]}