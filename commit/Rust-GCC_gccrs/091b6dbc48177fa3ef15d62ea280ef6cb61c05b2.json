{"sha": "091b6dbc48177fa3ef15d62ea280ef6cb61c05b2", "node_id": "C_kwDOANBUbNoAKDA5MWI2ZGJjNDgxNzdmYTNlZjE1ZDYyZWEyODBlZjZjYjYxYzA1YjI", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-11-28T10:08:32Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-11-28T10:10:31Z"}, "message": "OpenMP/Fortran: Permit end-clause on directive\n\ngcc/fortran/ChangeLog:\n\n\t* openmp.cc (OMP_DO_CLAUSES, OMP_SCOPE_CLAUSES,\n\tOMP_SECTIONS_CLAUSES): Add 'nowait'.\n\t(OMP_SINGLE_CLAUSES): Add 'nowait' and 'copyprivate'.\n\t(gfc_match_omp_distribute_parallel_do,\n\tgfc_match_omp_distribute_parallel_do_simd,\n\tgfc_match_omp_parallel_do,\n\tgfc_match_omp_parallel_do_simd,\n\tgfc_match_omp_parallel_sections,\n\tgfc_match_omp_teams_distribute_parallel_do,\n\tgfc_match_omp_teams_distribute_parallel_do_simd): Disallow 'nowait'.\n\t(gfc_match_omp_workshare): Match 'nowait' clause.\n\t(gfc_match_omp_end_single): Use clause matcher for 'nowait'.\n\t(resolve_omp_clauses): Reject 'nowait' + 'copyprivate'.\n\t* parse.cc (decode_omp_directive): Break too long line.\n\t(parse_omp_do, parse_omp_structured_block): Diagnose duplicated\n\t'nowait' clause.\n\nlibgomp/ChangeLog:\n\n\t* libgomp.texi (OpenMP 5.2): Mark end-directive as Y.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/gomp/copyprivate-1.f90: New test.\n\t* gfortran.dg/gomp/copyprivate-2.f90: New test.\n\t* gfortran.dg/gomp/nowait-2.f90: Move dg-error tests ...\n\t* gfortran.dg/gomp/nowait-4.f90: ... to this new file.\n\t* gfortran.dg/gomp/nowait-5.f90: New test.\n\t* gfortran.dg/gomp/nowait-6.f90: New test.\n\t* gfortran.dg/gomp/nowait-7.f90: New test.\n\t* gfortran.dg/gomp/nowait-8.f90: New test.", "tree": {"sha": "7c35223e5916d2a9bb840ee6ef8ab3c19b02c1b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c35223e5916d2a9bb840ee6ef8ab3c19b02c1b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dd4d2e93e3de60d4ef1068b6dfd06b6b9fff16e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dd4d2e93e3de60d4ef1068b6dfd06b6b9fff16e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dd4d2e93e3de60d4ef1068b6dfd06b6b9fff16e"}], "stats": {"total": 1051, "additions": 857, "deletions": 194}, "files": [{"sha": "862c649b0b62da981bb4b2a2c64e8a8f7e872161", "filename": "gcc/fortran/openmp.cc", "status": "modified", "additions": 27, "deletions": 30, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/gcc%2Ffortran%2Fopenmp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/gcc%2Ffortran%2Fopenmp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.cc?ref=091b6dbc48177fa3ef15d62ea280ef6cb61c05b2", "patch": "@@ -4173,17 +4173,19 @@ gfc_match_oacc_routine (void)\n   (omp_mask (OMP_CLAUSE_PRIVATE) | OMP_CLAUSE_FIRSTPRIVATE\t\t\\\n    | OMP_CLAUSE_LASTPRIVATE | OMP_CLAUSE_REDUCTION\t\t\t\\\n    | OMP_CLAUSE_SCHEDULE | OMP_CLAUSE_ORDERED | OMP_CLAUSE_COLLAPSE\t\\\n-   | OMP_CLAUSE_LINEAR | OMP_CLAUSE_ORDER | OMP_CLAUSE_ALLOCATE)\n+   | OMP_CLAUSE_LINEAR | OMP_CLAUSE_ORDER | OMP_CLAUSE_ALLOCATE\t\t\\\n+   | OMP_CLAUSE_NOWAIT)\n #define OMP_LOOP_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_BIND) | OMP_CLAUSE_COLLAPSE | OMP_CLAUSE_ORDER\t\\\n    | OMP_CLAUSE_PRIVATE | OMP_CLAUSE_LASTPRIVATE | OMP_CLAUSE_REDUCTION)\n \n #define OMP_SCOPE_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_PRIVATE) |OMP_CLAUSE_FIRSTPRIVATE\t\t\\\n-   | OMP_CLAUSE_REDUCTION | OMP_CLAUSE_ALLOCATE)\n+   | OMP_CLAUSE_REDUCTION | OMP_CLAUSE_ALLOCATE | OMP_CLAUSE_NOWAIT)\n #define OMP_SECTIONS_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_PRIVATE) | OMP_CLAUSE_FIRSTPRIVATE\t\t\\\n-   | OMP_CLAUSE_LASTPRIVATE | OMP_CLAUSE_REDUCTION | OMP_CLAUSE_ALLOCATE)\n+   | OMP_CLAUSE_LASTPRIVATE | OMP_CLAUSE_REDUCTION\t\t\t\\\n+   | OMP_CLAUSE_ALLOCATE | OMP_CLAUSE_NOWAIT)\n #define OMP_SIMD_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_PRIVATE) | OMP_CLAUSE_LASTPRIVATE\t\t\\\n    | OMP_CLAUSE_REDUCTION | OMP_CLAUSE_COLLAPSE | OMP_CLAUSE_SAFELEN\t\\\n@@ -4233,7 +4235,7 @@ gfc_match_oacc_routine (void)\n    | OMP_CLAUSE_ORDER | OMP_CLAUSE_ALLOCATE)\n #define OMP_SINGLE_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_PRIVATE) | OMP_CLAUSE_FIRSTPRIVATE\t\t\\\n-   | OMP_CLAUSE_ALLOCATE)\n+   | OMP_CLAUSE_ALLOCATE | OMP_CLAUSE_NOWAIT | OMP_CLAUSE_COPYPRIVATE)\n #define OMP_ORDERED_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_THREADS) | OMP_CLAUSE_SIMD)\n #define OMP_DECLARE_TARGET_CLAUSES \\\n@@ -4247,7 +4249,8 @@ gfc_match_oacc_routine (void)\n   (omp_mask (OMP_CLAUSE_FILTER))\n #define OMP_ERROR_CLAUSES \\\n   (omp_mask (OMP_CLAUSE_AT) | OMP_CLAUSE_MESSAGE | OMP_CLAUSE_SEVERITY)\n-\n+#define OMP_WORKSHARE_CLAUSES \\\n+  omp_mask (OMP_CLAUSE_NOWAIT)\n \n \n static match\n@@ -4458,8 +4461,8 @@ gfc_match_omp_distribute_parallel_do (void)\n   return match_omp (EXEC_OMP_DISTRIBUTE_PARALLEL_DO,\n \t\t    (OMP_DISTRIBUTE_CLAUSES | OMP_PARALLEL_CLAUSES\n \t\t     | OMP_DO_CLAUSES)\n-\t\t    & ~(omp_mask (OMP_CLAUSE_ORDERED))\n-\t\t    & ~(omp_mask (OMP_CLAUSE_LINEAR)));\n+\t\t    & ~(omp_mask (OMP_CLAUSE_ORDERED)\n+\t\t\t| OMP_CLAUSE_LINEAR | OMP_CLAUSE_NOWAIT));\n }\n \n \n@@ -4469,7 +4472,7 @@ gfc_match_omp_distribute_parallel_do_simd (void)\n   return match_omp (EXEC_OMP_DISTRIBUTE_PARALLEL_DO_SIMD,\n \t\t    (OMP_DISTRIBUTE_CLAUSES | OMP_PARALLEL_CLAUSES\n \t\t     | OMP_DO_CLAUSES | OMP_SIMD_CLAUSES)\n-\t\t    & ~(omp_mask (OMP_CLAUSE_ORDERED)));\n+\t\t    & ~(omp_mask (OMP_CLAUSE_ORDERED) | OMP_CLAUSE_NOWAIT));\n }\n \n \n@@ -5770,15 +5773,17 @@ match\n gfc_match_omp_parallel_do (void)\n {\n   return match_omp (EXEC_OMP_PARALLEL_DO,\n-\t\t    OMP_PARALLEL_CLAUSES | OMP_DO_CLAUSES);\n+\t\t    (OMP_PARALLEL_CLAUSES | OMP_DO_CLAUSES)\n+\t\t    & ~(omp_mask (OMP_CLAUSE_NOWAIT)));\n }\n \n \n match\n gfc_match_omp_parallel_do_simd (void)\n {\n   return match_omp (EXEC_OMP_PARALLEL_DO_SIMD,\n-\t\t    OMP_PARALLEL_CLAUSES | OMP_DO_CLAUSES | OMP_SIMD_CLAUSES);\n+\t\t    (OMP_PARALLEL_CLAUSES | OMP_DO_CLAUSES | OMP_SIMD_CLAUSES)\n+\t\t    & ~(omp_mask (OMP_CLAUSE_NOWAIT)));\n }\n \n \n@@ -5834,7 +5839,8 @@ match\n gfc_match_omp_parallel_sections (void)\n {\n   return match_omp (EXEC_OMP_PARALLEL_SECTIONS,\n-\t\t    OMP_PARALLEL_CLAUSES | OMP_SECTIONS_CLAUSES);\n+\t\t    (OMP_PARALLEL_CLAUSES | OMP_SECTIONS_CLAUSES)\n+\t\t    & ~(omp_mask (OMP_CLAUSE_NOWAIT)));\n }\n \n \n@@ -6320,8 +6326,8 @@ gfc_match_omp_teams_distribute_parallel_do (void)\n   return match_omp (EXEC_OMP_TEAMS_DISTRIBUTE_PARALLEL_DO,\n \t\t    (OMP_TEAMS_CLAUSES | OMP_DISTRIBUTE_CLAUSES\n \t\t     | OMP_PARALLEL_CLAUSES | OMP_DO_CLAUSES)\n-\t\t    & ~(omp_mask (OMP_CLAUSE_ORDERED))\n-\t\t    & ~(omp_mask (OMP_CLAUSE_LINEAR)));\n+\t\t    & ~(omp_mask (OMP_CLAUSE_ORDERED)\n+\t\t\t| OMP_CLAUSE_LINEAR | OMP_CLAUSE_NOWAIT));\n }\n \n \n@@ -6331,7 +6337,8 @@ gfc_match_omp_teams_distribute_parallel_do_simd (void)\n   return match_omp (EXEC_OMP_TEAMS_DISTRIBUTE_PARALLEL_DO_SIMD,\n \t\t    (OMP_TEAMS_CLAUSES | OMP_DISTRIBUTE_CLAUSES\n \t\t     | OMP_PARALLEL_CLAUSES | OMP_DO_CLAUSES\n-\t\t     | OMP_SIMD_CLAUSES) & ~(omp_mask (OMP_CLAUSE_ORDERED)));\n+\t\t     | OMP_SIMD_CLAUSES)\n+\t\t    & ~(omp_mask (OMP_CLAUSE_ORDERED) | OMP_CLAUSE_NOWAIT));\n }\n \n \n@@ -6347,14 +6354,7 @@ gfc_match_omp_teams_distribute_simd (void)\n match\n gfc_match_omp_workshare (void)\n {\n-  if (gfc_match_omp_eos () != MATCH_YES)\n-    {\n-      gfc_error (\"Unexpected junk after $OMP WORKSHARE statement at %C\");\n-      return MATCH_ERROR;\n-    }\n-  new_st.op = EXEC_OMP_WORKSHARE;\n-  new_st.ext.omp_clauses = gfc_get_omp_clauses ();\n-  return MATCH_YES;\n+  return match_omp (EXEC_OMP_WORKSHARE, OMP_WORKSHARE_CLAUSES);\n }\n \n \n@@ -6658,14 +6658,8 @@ match\n gfc_match_omp_end_single (void)\n {\n   gfc_omp_clauses *c;\n-  if (gfc_match (\"% nowait\") == MATCH_YES)\n-    {\n-      new_st.op = EXEC_OMP_END_NOWAIT;\n-      new_st.ext.omp_bool = true;\n-      return MATCH_YES;\n-    }\n-  if (gfc_match_omp_clauses (&c, omp_mask (OMP_CLAUSE_COPYPRIVATE))\n-      != MATCH_YES)\n+  if (gfc_match_omp_clauses (&c, omp_mask (OMP_CLAUSE_COPYPRIVATE)\n+\t\t\t\t\t   | OMP_CLAUSE_NOWAIT) != MATCH_YES)\n     return MATCH_ERROR;\n   new_st.op = EXEC_OMP_END_SINGLE;\n   new_st.ext.omp_clauses = c;\n@@ -7406,6 +7400,9 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n \t      }\n \t    break;\n \t  case OMP_LIST_COPYPRIVATE:\n+\t    if (omp_clauses->nowait)\n+\t      gfc_error (\"NOWAIT clause must not be used with COPYPRIVATE \"\n+\t\t\t \"clause at %L\", &n->where);\n \t    for (; n != NULL; n = n->next)\n \t      {\n \t\tif (n->sym->as && n->sym->as->type == AS_ASSUMED_SIZE)"}, {"sha": "51ff0fc6ace5ed3d5ae20e5a69172b210456535a", "filename": "gcc/fortran/parse.cc", "status": "modified", "additions": 29, "deletions": 4, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/gcc%2Ffortran%2Fparse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/gcc%2Ffortran%2Fparse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.cc?ref=091b6dbc48177fa3ef15d62ea280ef6cb61c05b2", "patch": "@@ -942,7 +942,8 @@ decode_omp_directive (void)\n       matchs (\"end ordered\", gfc_match_omp_eos_error, ST_OMP_END_ORDERED);\n       matchs (\"end parallel do simd\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_PARALLEL_DO_SIMD);\n-      matcho (\"end parallel do\", gfc_match_omp_eos_error, ST_OMP_END_PARALLEL_DO);\n+      matcho (\"end parallel do\", gfc_match_omp_eos_error,\n+\t      ST_OMP_END_PARALLEL_DO);\n       matcho (\"end parallel loop\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_PARALLEL_LOOP);\n       matcho (\"end parallel masked taskloop simd\", gfc_match_omp_eos_error,\n@@ -5305,7 +5306,13 @@ parse_omp_do (gfc_statement omp_st)\n   if (st == omp_end_st)\n     {\n       if (new_st.op == EXEC_OMP_END_NOWAIT)\n-\tcp->ext.omp_clauses->nowait |= new_st.ext.omp_bool;\n+\t{\n+\t  if (cp->ext.omp_clauses->nowait && new_st.ext.omp_bool)\n+\t    gfc_error_now (\"Duplicated NOWAIT clause on %s and %s at %C\",\n+\t\t\t   gfc_ascii_statement (omp_st),\n+\t\t\t   gfc_ascii_statement (omp_end_st));\n+\t  cp->ext.omp_clauses->nowait |= new_st.ext.omp_bool;\n+\t}\n       else\n \tgcc_assert (new_st.op == EXEC_NOP);\n       gfc_clear_new_st ();\n@@ -5745,6 +5752,10 @@ parse_omp_structured_block (gfc_statement omp_st, bool workshare_stmts_only)\n   switch (new_st.op)\n     {\n     case EXEC_OMP_END_NOWAIT:\n+      if (cp->ext.omp_clauses->nowait && new_st.ext.omp_bool)\n+\tgfc_error_now (\"Duplicated NOWAIT clause on %s and %s at %C\",\n+\t\t       gfc_ascii_statement (omp_st),\n+\t\t       gfc_ascii_statement (omp_end_st));\n       cp->ext.omp_clauses->nowait |= new_st.ext.omp_bool;\n       break;\n     case EXEC_OMP_END_CRITICAL:\n@@ -5759,8 +5770,22 @@ parse_omp_structured_block (gfc_statement omp_st, bool workshare_stmts_only)\n       new_st.ext.omp_name = NULL;\n       break;\n     case EXEC_OMP_END_SINGLE:\n-      cp->ext.omp_clauses->lists[OMP_LIST_COPYPRIVATE]\n-\t= new_st.ext.omp_clauses->lists[OMP_LIST_COPYPRIVATE];\n+      if (cp->ext.omp_clauses->nowait && new_st.ext.omp_clauses->nowait)\n+\tgfc_error_now (\"Duplicated NOWAIT clause on %s and %s at %C\",\n+\t\t       gfc_ascii_statement (omp_st),\n+\t\t       gfc_ascii_statement (omp_end_st));\n+      cp->ext.omp_clauses->nowait |= new_st.ext.omp_clauses->nowait;\n+      if (cp->ext.omp_clauses->lists[OMP_LIST_COPYPRIVATE])\n+\t{\n+\t  gfc_omp_namelist *nl;\n+\t  for (nl = cp->ext.omp_clauses->lists[OMP_LIST_COPYPRIVATE];\n+\t      nl->next; nl = nl->next);\n+\t    ;\n+\t  nl->next = new_st.ext.omp_clauses->lists[OMP_LIST_COPYPRIVATE];\n+\t}\n+      else\n+\tcp->ext.omp_clauses->lists[OMP_LIST_COPYPRIVATE]\n+\t  = new_st.ext.omp_clauses->lists[OMP_LIST_COPYPRIVATE];\n       new_st.ext.omp_clauses->lists[OMP_LIST_COPYPRIVATE] = NULL;\n       gfc_free_omp_clauses (new_st.ext.omp_clauses);\n       break;"}, {"sha": "eb2c865818e9349113c9766de6ca7258aceef113", "filename": "gcc/testsuite/gfortran.dg/gomp/copyprivate-1.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcopyprivate-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcopyprivate-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcopyprivate-1.f90?ref=091b6dbc48177fa3ef15d62ea280ef6cb61c05b2", "patch": "@@ -0,0 +1,21 @@\n+! based on pr59467.f90 but COPYPRIVATE on the directive\n+! { dg-additional-options \"-fdump-tree-original\" }\n+\n+  FUNCTION t()\n+    INTEGER :: a, b, t\n+    a = 0\n+    b = 0\n+    t = b\n+    b = 0\n+    !$OMP PARALLEL REDUCTION(+:b)\n+      !$OMP SINGLE COPYPRIVATE (b)\n+        !$OMP ATOMIC WRITE\n+        b = 6\n+      !$OMP END SINGLE\n+    !$OMP END PARALLEL\n+    t = t + b\n+  END FUNCTION\n+\n+! { dg-final { scan-tree-dump-times \"#pragma omp parallel reduction\\\\(\\\\+:b\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp single copyprivate\\\\(b\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp atomic relaxed\" 1 \"original\" } }"}, {"sha": "130f3716e1ebd1bf9a6a2a28ac76ce61dc4e820f", "filename": "gcc/testsuite/gfortran.dg/gomp/copyprivate-2.f90", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcopyprivate-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcopyprivate-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fcopyprivate-2.f90?ref=091b6dbc48177fa3ef15d62ea280ef6cb61c05b2", "patch": "@@ -0,0 +1,97 @@\n+  FUNCTION t()\n+    INTEGER :: a, b, t\n+    a = 0\n+    t = b\n+    b = 0\n+    !$OMP PARALLEL REDUCTION(+:b)\n+      !$OMP SINGLE COPYPRIVATE (b) NOWAIT  ! { dg-error \"NOWAIT clause must not be used with COPYPRIVATE clause\" }\n+        !$OMP ATOMIC WRITE\n+        b = 6\n+      !$OMP END SINGLE\n+    !$OMP END PARALLEL\n+    t = t + b\n+  END FUNCTION\n+\n+  FUNCTION t2()\n+    INTEGER :: a, b, t2\n+    a = 0\n+    t2 = b\n+    b = 0\n+    !$OMP PARALLEL REDUCTION(+:b)\n+      !$OMP SINGLE NOWAIT COPYPRIVATE (b)  ! { dg-error \"NOWAIT clause must not be used with COPYPRIVATE clause\" }\n+        !$OMP ATOMIC WRITE\n+        b = 6\n+      !$OMP END SINGLE\n+    !$OMP END PARALLEL\n+    t2 = t2 + b\n+  END FUNCTION\n+\n+  FUNCTION t3()\n+    INTEGER :: a, b, t3\n+    a = 0\n+    t3 = b\n+    b = 0\n+    !$OMP PARALLEL REDUCTION(+:b)\n+      !$OMP SINGLE COPYPRIVATE (b)  ! { dg-error \"NOWAIT clause must not be used with COPYPRIVATE clause\" }\n+        !$OMP ATOMIC WRITE\n+        b = 6\n+      !$OMP END SINGLE NOWAIT\n+    !$OMP END PARALLEL\n+    t3 = t3 + b\n+  END FUNCTION\n+\n+  FUNCTION t4()\n+    INTEGER :: a, b, t4\n+    a = 0\n+    t4 = b\n+    b = 0\n+    !$OMP PARALLEL REDUCTION(+:b)\n+      !$OMP SINGLE\n+        !$OMP ATOMIC WRITE\n+        b = 6\n+      !$OMP END SINGLE NOWAIT COPYPRIVATE (b)  ! { dg-error \"NOWAIT clause must not be used with COPYPRIVATE clause\" }\n+    !$OMP END PARALLEL\n+    t4 = t4 + b\n+  END FUNCTION\n+\n+  FUNCTION t5()\n+    INTEGER :: a, b, t5\n+    a = 0\n+    t5 = b\n+    b = 0\n+    !$OMP PARALLEL REDUCTION(+:b)\n+      !$OMP SINGLE\n+        !$OMP ATOMIC WRITE\n+        b = 6\n+      !$OMP END SINGLE COPYPRIVATE (b) NOWAIT  ! { dg-error \"NOWAIT clause must not be used with COPYPRIVATE clause\" }\n+    !$OMP END PARALLEL\n+    t5 = t5 + b\n+  END FUNCTION\n+\n+  FUNCTION t6()\n+    INTEGER :: a, b, t6\n+    a = 0\n+    t6 = b\n+    b = 0\n+    !$OMP PARALLEL REDUCTION(+:b)\n+      !$OMP SINGLE NOWAIT\n+        !$OMP ATOMIC WRITE\n+        b = 6\n+      !$OMP END SINGLE COPYPRIVATE (b) ! { dg-error \"NOWAIT clause must not be used with COPYPRIVATE clause\" }\n+    !$OMP END PARALLEL\n+    t6 = t6 + b\n+  END FUNCTION\n+\n+  FUNCTION t7()\n+    INTEGER :: a, b, t7\n+    a = 0\n+    t7 = b\n+    b = 0\n+    !$OMP PARALLEL REDUCTION(+:b)\n+      !$OMP SINGLE COPYPRIVATE (b)\n+        !$OMP ATOMIC WRITE\n+        b = 7\n+      !$OMP END SINGLE COPYPRIVATE (b) ! { dg-error \"Symbol 'b' present on multiple clauses\" }\n+    !$OMP END PARALLEL\n+    t7 = t7 + b\n+  END FUNCTION"}, {"sha": "c6881171e5d1dc0e1b7b40cdb18161e83dc8b84b", "filename": "gcc/testsuite/gfortran.dg/gomp/nowait-2.f90", "status": "modified", "additions": 0, "deletions": 159, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnowait-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnowait-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnowait-2.f90?ref=091b6dbc48177fa3ef15d62ea280ef6cb61c05b2", "patch": "@@ -154,162 +154,3 @@ subroutine bar()\n !$omp end target data\n \n end\n-\n-! invalid nowait\n-\n-subroutine foo\n-implicit none\n-integer :: i, a(5)\n-!$omp atomic write\n-i = 5\n-!$omp end atomic nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp critical\n-!$omp end critical nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp distribute\n-do i = 1, 5\n-end do\n-!$omp end distribute nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp distribute parallel do\n-do i = 1, 5\n-end do\n-!$omp end distribute parallel do nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp distribute parallel do simd\n-do i = 1, 5\n-end do\n-!$omp end distribute parallel do simd nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp parallel sections\n-  !$omp section\n-  block; end block\n-!$omp end parallel sections nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp distribute simd\n-do i = 1, 5\n-end do\n-!$omp end distribute simd nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp masked\n-!$omp end masked nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp masked taskloop\n-do i = 1, 5\n-end do\n-!$omp end masked taskloop nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp masked taskloop simd\n-do i = 1, 5\n-end do\n-!$omp end masked taskloop simd nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp master\n-!$omp end master nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp master taskloop\n-do i = 1, 5\n-end do\n-!$omp end master taskloop nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp master taskloop simd\n-do i = 1, 5\n-end do\n-!$omp end master taskloop simd nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp ordered\n-!$omp end ordered nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp parallel\n-!$omp end parallel nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp parallel workshare\n-a(:) = 5\n-!$omp end parallel workshare nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp parallel do\n-do i = 1, 5\n-end do\n-!$omp end parallel do nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp parallel do simd\n-do i = 1, 5\n-end do\n-!$omp end parallel do simd nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp parallel masked\n-!$omp end parallel masked nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp parallel masked taskloop\n-do i = 1, 5\n-end do\n-!$omp end parallel masked taskloop nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp parallel masked taskloop simd\n-do i = 1, 5\n-end do\n-!$omp end parallel masked taskloop simd nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp parallel master\n-!$omp end parallel master nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp parallel master taskloop\n-do i = 1, 5\n-end do\n-!$omp end parallel master taskloop nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp parallel master taskloop simd\n-do i = 1, 5\n-end do\n-!$omp end parallel master taskloop simd nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp simd\n-do i = 1, 5\n-end do\n-!$omp end simd nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp task\n-!$omp end task nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp taskgroup\n-!$omp end taskgroup nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp taskloop\n-do i = 1, 5\n-end do\n-!$omp end taskloop nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp taskloop simd\n-do i = 1, 5\n-end do\n-!$omp end taskloop simd nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp teams\n-!$omp end teams nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp teams distribute\n-do i = 1, 5\n-end do\n-!$omp end teams distribute nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp teams distribute parallel do\n-do i = 1, 5\n-end do\n-!$omp end teams distribute parallel do nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp teams distribute parallel do simd\n-do i = 1, 5\n-end do\n-!$omp end teams distribute parallel do simd nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp teams distribute simd\n-do i = 1, 5\n-end do\n-!$omp end teams distribute simd nowait  ! { dg-error \"Unexpected junk\" }\n-\n-!$omp target data map(tofrom:i)\n-!$omp end target data nowait  ! { dg-error \"Unexpected junk\" }\n-\n-end  ! { dg-error \"Unexpected END statement\" }\n-! { dg-prune-output \"Unexpected end of file\" }"}, {"sha": "bebb9d7fb8f2081dbf53c4311935d11ee767b301", "filename": "gcc/testsuite/gfortran.dg/gomp/nowait-4.f90", "status": "added", "additions": 158, "deletions": 0, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnowait-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnowait-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnowait-4.f90?ref=091b6dbc48177fa3ef15d62ea280ef6cb61c05b2", "patch": "@@ -0,0 +1,158 @@\n+! invalid nowait\n+\n+subroutine foo\n+implicit none\n+integer :: i, a(5)\n+!$omp atomic write\n+i = 5\n+!$omp end atomic nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp critical\n+!$omp end critical nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp distribute\n+do i = 1, 5\n+end do\n+!$omp end distribute nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp distribute parallel do\n+do i = 1, 5\n+end do\n+!$omp end distribute parallel do nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp distribute parallel do simd\n+do i = 1, 5\n+end do\n+!$omp end distribute parallel do simd nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp parallel sections\n+  !$omp section\n+  block; end block\n+!$omp end parallel sections nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp distribute simd\n+do i = 1, 5\n+end do\n+!$omp end distribute simd nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp masked\n+!$omp end masked nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp masked taskloop\n+do i = 1, 5\n+end do\n+!$omp end masked taskloop nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp masked taskloop simd\n+do i = 1, 5\n+end do\n+!$omp end masked taskloop simd nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp master\n+!$omp end master nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp master taskloop\n+do i = 1, 5\n+end do\n+!$omp end master taskloop nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp master taskloop simd\n+do i = 1, 5\n+end do\n+!$omp end master taskloop simd nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp ordered\n+!$omp end ordered nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp parallel\n+!$omp end parallel nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp parallel workshare\n+a(:) = 5\n+!$omp end parallel workshare nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp parallel do\n+do i = 1, 5\n+end do\n+!$omp end parallel do nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp parallel do simd\n+do i = 1, 5\n+end do\n+!$omp end parallel do simd nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp parallel masked\n+!$omp end parallel masked nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp parallel masked taskloop\n+do i = 1, 5\n+end do\n+!$omp end parallel masked taskloop nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp parallel masked taskloop simd\n+do i = 1, 5\n+end do\n+!$omp end parallel masked taskloop simd nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp parallel master\n+!$omp end parallel master nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp parallel master taskloop\n+do i = 1, 5\n+end do\n+!$omp end parallel master taskloop nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp parallel master taskloop simd\n+do i = 1, 5\n+end do\n+!$omp end parallel master taskloop simd nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp simd\n+do i = 1, 5\n+end do\n+!$omp end simd nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp task\n+!$omp end task nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp taskgroup\n+!$omp end taskgroup nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp taskloop\n+do i = 1, 5\n+end do\n+!$omp end taskloop nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp taskloop simd\n+do i = 1, 5\n+end do\n+!$omp end taskloop simd nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp teams\n+!$omp end teams nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp teams distribute\n+do i = 1, 5\n+end do\n+!$omp end teams distribute nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp teams distribute parallel do\n+do i = 1, 5\n+end do\n+!$omp end teams distribute parallel do nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp teams distribute parallel do simd\n+do i = 1, 5\n+end do\n+!$omp end teams distribute parallel do simd nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp teams distribute simd\n+do i = 1, 5\n+end do\n+!$omp end teams distribute simd nowait  ! { dg-error \"Unexpected junk\" }\n+\n+!$omp target data map(tofrom:i)\n+!$omp end target data nowait  ! { dg-error \"Unexpected junk\" }\n+\n+end  ! { dg-error \"Unexpected END statement\" }\n+! { dg-prune-output \"Unexpected end of file\" }"}, {"sha": "c6881171e5d1dc0e1b7b40cdb18161e83dc8b84b", "filename": "gcc/testsuite/gfortran.dg/gomp/nowait-5.f90", "status": "added", "additions": 156, "deletions": 0, "changes": 156, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnowait-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnowait-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnowait-5.f90?ref=091b6dbc48177fa3ef15d62ea280ef6cb61c05b2", "patch": "@@ -0,0 +1,156 @@\n+! Cross check that it is accepted without nowait\n+subroutine bar()\n+implicit none\n+integer :: i, a(5)\n+!$omp atomic write\n+i = 5\n+!$omp end atomic\n+\n+!$omp critical\n+!$omp end critical\n+\n+!$omp distribute\n+do i = 1, 5\n+end do\n+!$omp end distribute\n+\n+!$omp distribute parallel do\n+do i = 1, 5\n+end do\n+!$omp end distribute parallel do\n+\n+!$omp distribute parallel do simd\n+do i = 1, 5\n+end do\n+!$omp end distribute parallel do simd\n+\n+!$omp distribute simd\n+do i = 1, 5\n+end do\n+!$omp end distribute simd\n+\n+!$omp masked\n+!$omp end masked\n+\n+!$omp masked taskloop\n+do i = 1, 5\n+end do\n+!$omp end masked taskloop\n+\n+!$omp masked taskloop simd\n+do i = 1, 5\n+end do\n+!$omp end masked taskloop simd\n+\n+!$omp master\n+!$omp end master\n+\n+!$omp master taskloop\n+do i = 1, 5\n+end do\n+!$omp end master taskloop\n+\n+!$omp master taskloop simd\n+do i = 1, 5\n+end do\n+!$omp end master taskloop simd\n+\n+!$omp ordered\n+!$omp end ordered\n+\n+!$omp parallel\n+!$omp end parallel\n+\n+!$omp parallel workshare\n+a(:) = 5\n+!$omp end parallel workshare\n+\n+!$omp parallel do\n+do i = 1, 5\n+end do\n+!$omp end parallel do\n+\n+!$omp parallel do simd\n+do i = 1, 5\n+end do\n+!$omp end parallel do simd\n+\n+!$omp parallel sections\n+  !$omp section\n+  block; end block\n+!$omp end parallel sections\n+\n+!$omp parallel masked\n+!$omp end parallel masked\n+\n+!$omp parallel masked taskloop\n+do i = 1, 5\n+end do\n+!$omp end parallel masked taskloop\n+\n+!$omp parallel masked taskloop simd\n+do i = 1, 5\n+end do\n+!$omp end parallel masked taskloop simd\n+\n+!$omp parallel master\n+!$omp end parallel master\n+\n+!$omp parallel master taskloop\n+do i = 1, 5\n+end do\n+!$omp end parallel master taskloop\n+\n+!$omp parallel master taskloop simd\n+do i = 1, 5\n+end do\n+!$omp end parallel master taskloop simd\n+\n+!$omp simd\n+do i = 1, 5\n+end do\n+!$omp end simd\n+\n+!$omp task\n+!$omp end task\n+\n+!$omp taskgroup\n+!$omp end taskgroup\n+\n+!$omp taskloop\n+do i = 1, 5\n+end do\n+!$omp end taskloop\n+\n+!$omp taskloop simd\n+do i = 1, 5\n+end do\n+!$omp end taskloop simd\n+\n+!$omp teams\n+!$omp end teams\n+\n+!$omp teams distribute\n+do i = 1, 5\n+end do\n+!$omp end teams distribute\n+\n+!$omp teams distribute parallel do\n+do i = 1, 5\n+end do\n+!$omp end teams distribute parallel do\n+\n+!$omp teams distribute parallel do simd\n+do i = 1, 5\n+end do\n+!$omp end teams distribute parallel do simd\n+\n+!$omp teams distribute simd\n+do i = 1, 5\n+end do\n+!$omp end teams distribute simd\n+\n+!$omp target data map(tofrom:i)\n+!$omp end target data\n+\n+end"}, {"sha": "5fe7d38fcb7d277729518372c69f70405d840b0b", "filename": "gcc/testsuite/gfortran.dg/gomp/nowait-6.f90", "status": "added", "additions": 158, "deletions": 0, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnowait-6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnowait-6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnowait-6.f90?ref=091b6dbc48177fa3ef15d62ea280ef6cb61c05b2", "patch": "@@ -0,0 +1,158 @@\n+! invalid nowait\n+\n+subroutine foo\n+implicit none\n+integer :: i, a(5)\n+!$omp atomic write nowait  ! { dg-error \"Failed to match clause\" }\n+i = 5\n+!$omp end atomic  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp critical nowait  ! { dg-error \"Failed to match clause\" }\n+!$omp end critical  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp distribute nowait  ! { dg-error \"Failed to match clause\" }\n+do i = 1, 5\n+end do\n+!$omp end distribute  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp distribute parallel do nowait  ! { dg-error \"Failed to match clause\" }\n+do i = 1, 5\n+end do\n+!$omp end distribute parallel do  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp distribute parallel do simd nowait  ! { dg-error \"Failed to match clause\" }\n+do i = 1, 5\n+end do\n+!$omp end distribute parallel do simd  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp parallel sections nowait  ! { dg-error \"Failed to match clause\" }\n+  !$omp section  ! { dg-error \"Unexpected ..OMP SECTION statement\" }\n+  block; end block\n+!$omp end parallel sections  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp distribute simd nowait  ! { dg-error \"Failed to match clause\" }\n+do i = 1, 5\n+end do\n+!$omp end distribute simd  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp masked nowait  ! { dg-error \"Failed to match clause\" }\n+!$omp end masked  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp masked taskloop nowait  ! { dg-error \"Failed to match clause\" }\n+do i = 1, 5\n+end do\n+!$omp end masked taskloop  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp masked taskloop simd nowait  ! { dg-error \"Failed to match clause\" }\n+do i = 1, 5\n+end do\n+!$omp end masked taskloop simd  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp master nowait  ! { dg-error \"Unexpected junk\" }\n+!$omp end master  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp master taskloop nowait  ! { dg-error \"Failed to match clause\" }\n+do i = 1, 5\n+end do\n+!$omp end master taskloop  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp master taskloop simd nowait  ! { dg-error \"Failed to match clause\" }\n+do i = 1, 5\n+end do\n+!$omp end master taskloop simd  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp ordered nowait  ! { dg-error \"Failed to match clause\" }\n+!$omp end ordered  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp parallel nowait  ! { dg-error \"Failed to match clause\" }\n+!$omp end parallel  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp parallel workshare nowait  ! { dg-error \"Failed to match clause\" }\n+a(:) = 5\n+!$omp end parallel workshare  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp parallel do nowait  ! { dg-error \"Failed to match clause\" }\n+do i = 1, 5\n+end do\n+!$omp end parallel do  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp parallel do simd nowait  ! { dg-error \"Failed to match clause\" }\n+do i = 1, 5\n+end do\n+!$omp end parallel do simd  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp parallel masked nowait  ! { dg-error \"Failed to match clause\" }\n+!$omp end parallel masked  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp parallel masked taskloop nowait  ! { dg-error \"Failed to match clause\" }\n+do i = 1, 5\n+end do\n+!$omp end parallel masked taskloop  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp parallel masked taskloop simd nowait  ! { dg-error \"Failed to match clause\" }\n+do i = 1, 5\n+end do\n+!$omp end parallel masked taskloop simd  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp parallel master nowait  ! { dg-error \"Failed to match clause\" }\n+!$omp end parallel master  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp parallel master taskloop nowait  ! { dg-error \"Failed to match clause\" }\n+do i = 1, 5\n+end do\n+!$omp end parallel master taskloop  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp parallel master taskloop simd nowait  ! { dg-error \"Failed to match clause\" }\n+do i = 1, 5\n+end do\n+!$omp end parallel master taskloop simd  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp simd nowait  ! { dg-error \"Failed to match clause\" }\n+do i = 1, 5\n+end do\n+!$omp end simd  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp task nowait  ! { dg-error \"Failed to match clause\" }\n+!$omp end task  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp taskgroup nowait  ! { dg-error \"Failed to match clause\" }\n+!$omp end taskgroup  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp taskloop nowait  ! { dg-error \"Failed to match clause\" }\n+do i = 1, 5\n+end do\n+!$omp end taskloop  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp taskloop simd nowait  ! { dg-error \"Failed to match clause\" }\n+do i = 1, 5\n+end do\n+!$omp end taskloop simd  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp teams nowait  ! { dg-error \"Failed to match clause\" }\n+!$omp end teams  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp teams distribute nowait  ! { dg-error \"Failed to match clause\" }\n+do i = 1, 5\n+end do\n+!$omp end teams distribute  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp teams distribute parallel do nowait  ! { dg-error \"Failed to match clause\" }\n+do i = 1, 5\n+end do\n+!$omp end teams distribute parallel do  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp teams distribute parallel do simd nowait  ! { dg-error \"Failed to match clause\" }\n+do i = 1, 5\n+end do\n+!$omp end teams distribute parallel do simd  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp teams distribute simd nowait  ! { dg-error \"Failed to match clause\" }\n+do i = 1, 5\n+end do\n+!$omp end teams distribute simd  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+!$omp target data map(tofrom:i) nowait  ! { dg-error \"Failed to match clause\" }\n+!$omp end target data  ! { dg-error \"Unexpected ..OMP END \" }\n+\n+end\n+! { dg-prune-output \"Unexpected end of file\" }"}, {"sha": "41ead2f7eeb8e6e26c97f618bba7194eaa49eac6", "filename": "gcc/testsuite/gfortran.dg/gomp/nowait-7.f90", "status": "added", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnowait-7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnowait-7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnowait-7.f90?ref=091b6dbc48177fa3ef15d62ea280ef6cb61c05b2", "patch": "@@ -0,0 +1,118 @@\n+! { dg-additional-options \"-fdump-tree-original\" }\n+\n+subroutine foo\n+implicit none\n+integer :: i, a(5)\n+\n+!$omp do nowait\n+do i = 1, 5\n+end do\n+!$omp end do\n+\n+!$omp do simd nowait\n+do i = 1, 5\n+end do\n+!$omp end do simd\n+\n+!$omp scope nowait\n+!$omp end scope\n+\n+!$omp sections nowait\n+  !$omp section\n+  block; end block\n+!$omp end sections\n+\n+!$omp single nowait\n+!$omp end single\n+\n+!$omp target nowait\n+!$omp end target\n+\n+!$omp target parallel nowait\n+!$omp end target parallel\n+\n+!$omp target parallel do nowait\n+do i = 1, 5\n+end do\n+!$omp end target parallel do\n+\n+!$omp target parallel do simd nowait\n+do i = 1, 5\n+end do\n+!$omp end target parallel do simd\n+\n+!$omp target parallel loop nowait\n+do i = 1, 5\n+end do\n+!$omp end target parallel loop\n+\n+!$omp target teams distribute parallel do nowait\n+do i = 1, 5\n+end do\n+!$omp end target teams distribute parallel do\n+\n+!$omp target teams distribute parallel do simd nowait\n+do i = 1, 5\n+end do\n+!$omp end target teams distribute parallel do simd\n+\n+!$omp target simd nowait\n+do i = 1, 5\n+end do\n+!$omp end target simd\n+\n+!$omp target teams nowait\n+!$omp end target teams\n+\n+!$omp target teams distribute nowait\n+do i = 1, 5\n+end do\n+!$omp end target teams distribute\n+\n+!$omp target teams distribute simd nowait\n+do i = 1, 5\n+end do\n+!$omp end target teams distribute simd\n+\n+!$omp target teams loop nowait\n+do i = 1, 5\n+end do\n+!$omp end target teams loop\n+\n+!$omp workshare nowait\n+A(:) = 5\n+!$omp end workshare\n+end\n+\n+! Note: internally, for '... parallel do ...', 'nowait' is always added\n+! such that for 'omp end target parallel do nowait', 'nowait' is on both\n+! 'target' as specified in the OpenMP spec and and on 'do' due to internal usage.\n+\n+! Expected with 'nowait'\n+\n+! { dg-final { scan-tree-dump-times \"#pragma omp for nowait\" 6 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp for schedule\\\\(static\\\\) nowait\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp sections nowait\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp single nowait\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp target nowait\" 12 \"original\" } }\n+\n+! Never:\n+\n+! { dg-final { scan-tree-dump-not \"#pragma omp distribute\\[^\\n\\r]*nowait\" \"original\" } }\n+! { dg-final { scan-tree-dump-not \"#pragma omp loop\\[^\\n\\r]*nowait\" \"original\" } }\n+! { dg-final { scan-tree-dump-not \"#pragma omp parallel\\[^\\n\\r]*nowait\" \"original\" } }\n+! { dg-final { scan-tree-dump-not \"#pragma omp section\\[^s\\]\\[^\\n\\r]*nowait\" \"original\" } }\n+! { dg-final { scan-tree-dump-not \"#pragma omp simd\\[^\\n\\r]*nowait\" \"original\" } }\n+! { dg-final { scan-tree-dump-not \"#pragma omp teams\\[^\\n\\r]*nowait\" \"original\" } }\n+\n+! Sometimes or never with nowait:\n+\n+! { dg-final { scan-tree-dump-times \"#pragma omp distribute\\[\\n\\r]\" 4 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp loop\\[\\n\\r]\" 2 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp parallel\\[\\n\\r]\" 6 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp section\\[\\n\\r]\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp simd linear\\\\(i:1\\\\)\\[\\n\\r]\" 5 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp teams\\[\\n\\r]\" 6 \"original\" } }\n+\n+! { dg-final { scan-tree-dump-times \"#pragma omp target\\[\\n\\r]\" 0 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp for\\[\\n\\r]\" 0 \"original\" } }"}, {"sha": "5e666d123c5160de5d23b68499c8e3dcbd6b9d61", "filename": "gcc/testsuite/gfortran.dg/gomp/nowait-8.f90", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnowait-8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnowait-8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnowait-8.f90?ref=091b6dbc48177fa3ef15d62ea280ef6cb61c05b2", "patch": "@@ -0,0 +1,92 @@\n+subroutine foo\n+implicit none\n+integer :: i, a(5)\n+\n+!$omp do nowait nowait  ! { dg-error \"Duplicated 'nowait' clause\" }\n+do i = 1, 5\n+end do\n+\n+!$omp do\n+do i = 1, 5\n+end do\n+!$omp do nowait nowait  ! { dg-error \"Duplicated 'nowait' clause\" }\n+\n+!$omp do nowait\n+do i = 1, 5\n+end do\n+!$omp end do nowait  ! { dg-error \"Duplicated NOWAIT clause\" }\n+\n+!$omp do simd nowait\n+do i = 1, 5\n+end do\n+!$omp end do simd nowait  ! { dg-error \"Duplicated NOWAIT clause\" }\n+\n+!$omp scope nowait\n+!$omp end scope nowait  ! { dg-error \"Duplicated NOWAIT clause\" }\n+\n+!$omp sections nowait\n+  !$omp section\n+  block; end block\n+!$omp end sections nowait  ! { dg-error \"Duplicated NOWAIT clause\" }\n+\n+!$omp single nowait\n+!$omp end single nowait  ! { dg-error \"Duplicated NOWAIT clause\" }\n+\n+!$omp target nowait\n+!$omp end target nowait  ! { dg-error \"Duplicated NOWAIT clause\" }\n+\n+!$omp target parallel nowait\n+!$omp end target parallel nowait  ! { dg-error \"Duplicated NOWAIT clause\" }\n+\n+!$omp target parallel do nowait\n+do i = 1, 5\n+end do\n+!$omp end target parallel do nowait  ! { dg-error \"Duplicated NOWAIT clause\" }\n+\n+!$omp target parallel do simd nowait\n+do i = 1, 5\n+end do\n+!$omp end target parallel do simd nowait  ! { dg-error \"Duplicated NOWAIT clause\" }\n+\n+!$omp target parallel loop nowait\n+do i = 1, 5\n+end do\n+!$omp end target parallel loop nowait  ! { dg-error \"Duplicated NOWAIT clause\" }\n+\n+!$omp target teams distribute parallel do nowait\n+do i = 1, 5\n+end do\n+!$omp end target teams distribute parallel do nowait  ! { dg-error \"Duplicated NOWAIT clause\" }\n+\n+!$omp target teams distribute parallel do simd nowait\n+do i = 1, 5\n+end do\n+!$omp end target teams distribute parallel do simd nowait  ! { dg-error \"Duplicated NOWAIT clause\" }\n+\n+!$omp target simd nowait\n+do i = 1, 5\n+end do\n+!$omp end target simd nowait  ! { dg-error \"Duplicated NOWAIT clause\" }\n+\n+!$omp target teams nowait\n+!$omp end target teams nowait  ! { dg-error \"Duplicated NOWAIT clause\" }\n+\n+!$omp target teams distribute nowait\n+do i = 1, 5\n+end do\n+!$omp end target teams distribute nowait  ! { dg-error \"Duplicated NOWAIT clause\" }\n+\n+!$omp target teams distribute simd nowait\n+do i = 1, 5\n+end do\n+!$omp end target teams distribute simd nowait  ! { dg-error \"Duplicated NOWAIT clause\" }\n+\n+!$omp target teams loop nowait\n+do i = 1, 5\n+end do\n+!$omp end target teams loop nowait  ! { dg-error \"Duplicated NOWAIT clause\" }\n+\n+!$omp workshare nowait\n+A(:) = 5\n+!$omp end workshare nowait  ! { dg-error \"Duplicated NOWAIT clause\" }\n+end"}, {"sha": "85cae742cd47dd2675b10f70134a68c711092de5", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=091b6dbc48177fa3ef15d62ea280ef6cb61c05b2", "patch": "@@ -375,7 +375,7 @@ to address of matching mapped list item per 5.1, Sect. 2.21.7.2 @tab N @tab\n       a warning enabled by default and, for fixed-source code, the @code{omx}\n       sentinel is warned for with with @code{-Wsurprising} (enabled by\n       @code{-Wall}).  Unknown clauses are always rejected with an error.}\n-@item Clauses on @code{end} directive can be on directive @tab N @tab\n+@item Clauses on @code{end} directive can be on directive @tab Y @tab\n @item Deprecation of no-argument @code{destroy} clause on @code{depobj}\n       @tab N @tab\n @item @code{linear} clause syntax changes and @code{step} modifier @tab Y @tab"}]}