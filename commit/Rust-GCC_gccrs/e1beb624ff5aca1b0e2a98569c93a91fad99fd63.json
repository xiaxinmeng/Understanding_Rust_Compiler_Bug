{"sha": "e1beb624ff5aca1b0e2a98569c93a91fad99fd63", "node_id": "C_kwDOANBUbNoAKGUxYmViNjI0ZmY1YWNhMWIwZTJhOTg1NjljOTNhOTFmYWQ5OWZkNjM", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-09-27T10:34:21Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-01-31T13:16:52Z"}, "message": "gccrs: Cleanup formatting of backend expression visitor\n\ngcc/rust/ChangeLog:\n\n\t* backend/rust-compile-expr.h: Formatting.", "tree": {"sha": "e110fa65ce7fb752c58224ff3d35e7c50e88ca14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e110fa65ce7fb752c58224ff3d35e7c50e88ca14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1beb624ff5aca1b0e2a98569c93a91fad99fd63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1beb624ff5aca1b0e2a98569c93a91fad99fd63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1beb624ff5aca1b0e2a98569c93a91fad99fd63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1beb624ff5aca1b0e2a98569c93a91fad99fd63/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6c4342273a7d2cce711f292b85956a84768349e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6c4342273a7d2cce711f292b85956a84768349e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6c4342273a7d2cce711f292b85956a84768349e"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "845511f9f43f2fef2273aa35606ff1129eddeaf1", "filename": "gcc/rust/backend/rust-compile-expr.h", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1beb624ff5aca1b0e2a98569c93a91fad99fd63/gcc%2Frust%2Fbackend%2Frust-compile-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1beb624ff5aca1b0e2a98569c93a91fad99fd63/gcc%2Frust%2Fbackend%2Frust-compile-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-expr.h?ref=e1beb624ff5aca1b0e2a98569c93a91fad99fd63", "patch": "@@ -68,24 +68,31 @@ class CompileExpr : private HIRCompileBase, protected HIR::HIRExpressionVisitor\n   void visit (HIR::RangeFullExpr &expr) override;\n   void visit (HIR::RangeFromToInclExpr &expr) override;\n \n-  // Empty visit for unused Expression HIR nodes.\n+  // TODO\n   void visit (HIR::ClosureExprInner &) override {}\n   void visit (HIR::ClosureExprInnerTyped &) override {}\n-  void visit (HIR::StructExprFieldIdentifier &) override {}\n-  void visit (HIR::StructExprFieldIdentifierValue &) override {}\n-  void visit (HIR::StructExprFieldIndexValue &) override {}\n   void visit (HIR::ErrorPropagationExpr &) override {}\n   void visit (HIR::RangeToInclExpr &) override {}\n-  void visit (HIR::WhileLetLoopExpr &) override {}\n   void visit (HIR::ForLoopExpr &) override {}\n+\n+  // TODO\n+  // these need to be sugared in the HIR to if statements and a match\n+  void visit (HIR::WhileLetLoopExpr &) override {}\n   void visit (HIR::IfExprConseqIfLet &) override {}\n   void visit (HIR::IfLetExpr &) override {}\n   void visit (HIR::IfLetExprConseqElse &) override {}\n   void visit (HIR::IfLetExprConseqIf &) override {}\n   void visit (HIR::IfLetExprConseqIfLet &) override {}\n+\n+  // lets not worry about async yet....\n   void visit (HIR::AwaitExpr &) override {}\n   void visit (HIR::AsyncBlockExpr &) override {}\n \n+  // nothing to do for these\n+  void visit (HIR::StructExprFieldIdentifier &) override {}\n+  void visit (HIR::StructExprFieldIdentifierValue &) override {}\n+  void visit (HIR::StructExprFieldIndexValue &) override {}\n+\n protected:\n   tree get_fn_addr_from_dyn (const TyTy::DynamicObjectType *dyn,\n \t\t\t     TyTy::BaseType *receiver, TyTy::FnType *fntype,"}]}