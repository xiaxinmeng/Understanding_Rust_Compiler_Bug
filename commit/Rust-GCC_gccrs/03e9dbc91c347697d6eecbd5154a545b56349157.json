{"sha": "03e9dbc91c347697d6eecbd5154a545b56349157", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNlOWRiYzkxYzM0NzY5N2Q2ZWVjYmQ1MTU0YTU0NWI1NjM0OTE1Nw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@redhat.com", "date": "2002-03-14T23:31:50Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2002-03-14T23:31:50Z"}, "message": "Add --param max-unrolled-insns=<n> support\n\nFrom-SVN: r50787", "tree": {"sha": "3a30648951dcf2dfa89e7bdd5075907ab94779f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a30648951dcf2dfa89e7bdd5075907ab94779f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03e9dbc91c347697d6eecbd5154a545b56349157", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03e9dbc91c347697d6eecbd5154a545b56349157", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03e9dbc91c347697d6eecbd5154a545b56349157", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03e9dbc91c347697d6eecbd5154a545b56349157/comments", "author": null, "committer": null, "parents": [{"sha": "1224938570e27e78f1903333272707ed42d3bf54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1224938570e27e78f1903333272707ed42d3bf54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1224938570e27e78f1903333272707ed42d3bf54"}], "stats": {"total": 39, "additions": 31, "deletions": 8}, "files": [{"sha": "c4cf286bf4eb3e455d04190cc1cd122399f6c035", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03e9dbc91c347697d6eecbd5154a545b56349157/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03e9dbc91c347697d6eecbd5154a545b56349157/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=03e9dbc91c347697d6eecbd5154a545b56349157", "patch": "@@ -1,3 +1,18 @@\n+2002-03-14  Michael Meissner  <meissner@redhat.com>\n+\n+\t* params.def (PARAM_MAX_UNROLLED_INSNS): New macro, default to\n+\t100, allowing MAX_UNROLLED_INSNS to be overridden.\n+\n+\t* params.h (MAX_UNROLLED_INSNS): Define so it can be overridden by\n+\t--param.\n+\n+\t* unroll.c (params.h): Include.\n+\t(MAX_UNROLLED_INSNS): Delete, now in params.h.\n+\n+\t* doc/invoke.texi (--param max-unroll-insns): Document.\n+\n+\t* Makefile.in (unroll.o): Add $(PARAMS_H) dependency.\n+\n 2002-03-14  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.md: Fix warnings about constraints in peepholes and splits."}, {"sha": "2cb9f84a2eb7ce01ec1ee42f0c15a11a94274476", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03e9dbc91c347697d6eecbd5154a545b56349157/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03e9dbc91c347697d6eecbd5154a545b56349157/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=03e9dbc91c347697d6eecbd5154a545b56349157", "patch": "@@ -1483,7 +1483,7 @@ doloop.o : doloop.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) flags.h $(LOOP_H) \\\n    $(EXPR_H) hard-reg-set.h $(BASIC_BLOCK_H) $(TM_P_H) toplev.h\n unroll.o : unroll.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) insn-config.h function.h \\\n    $(INTEGRATE_H) $(REGS_H) $(RECOG_H) flags.h $(EXPR_H) $(LOOP_H) toplev.h \\\n-   hard-reg-set.h varray.h $(BASIC_BLOCK_H) $(TM_P_H) $(PREDICT_H)\n+   hard-reg-set.h varray.h $(BASIC_BLOCK_H) $(TM_P_H) $(PREDICT_H) $(PARAMS_H)\n flow.o : flow.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h insn-config.h \\\n    $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h toplev.h $(RECOG_H) \\\n    function.h except.h $(EXPR_H) ssa.h $(GGC_H) $(TM_P_H)"}, {"sha": "abb963852e4dba34c115ed29e8904d10ee7bad35", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03e9dbc91c347697d6eecbd5154a545b56349157/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03e9dbc91c347697d6eecbd5154a545b56349157/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=03e9dbc91c347697d6eecbd5154a545b56349157", "patch": "@@ -3851,6 +3851,11 @@ If an function contains more than this many instructions, it\n will not be inlined.  This option is precisely equivalent to\n @option{-finline-limit}.\n \n+@item max-unrolled-insns\n+The maximum number of instructions that a loop should have if that loop\n+is unrolled, and if the loop is unrolled, it determines how many times\n+the loop code is unrolled.\n+\n @end table\n @end table\n "}, {"sha": "a064ca28132e0e655c33f90bdc445dd7549559f2", "filename": "gcc/params.def", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03e9dbc91c347697d6eecbd5154a545b56349157/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03e9dbc91c347697d6eecbd5154a545b56349157/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=03e9dbc91c347697d6eecbd5154a545b56349157", "patch": "@@ -89,6 +89,13 @@ DEFPARAM(PARAM_MAX_GCSE_PASSES,\n \t\"max-gcse-passes\",\n \t\"The maximum number of passes to make when doing GCSE\",\n \t1)\n+\n+/* This parameter limits the number of insns in a loop that will be unrolled,\n+   and by how much the loop is unrolled.  */\n+DEFPARAM(PARAM_MAX_UNROLLED_INSNS,\n+\t \"max-unrolled-insns\",\n+\t \"The maximum number of instructions to consider to unroll in a loop\",\n+\t 100)\n /*\n Local variables:\n mode:c"}, {"sha": "36800af2ec45a31d3ff2793e8d5029ff0d9dd73a", "filename": "gcc/params.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03e9dbc91c347697d6eecbd5154a545b56349157/gcc%2Fparams.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03e9dbc91c347697d6eecbd5154a545b56349157/gcc%2Fparams.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.h?ref=03e9dbc91c347697d6eecbd5154a545b56349157", "patch": "@@ -96,4 +96,6 @@ typedef enum compiler_param\n   ((size_t) PARAM_VALUE (PARAM_MAX_GCSE_MEMORY))\n #define MAX_GCSE_PASSES \\\n   PARAM_VALUE (PARAM_MAX_GCSE_PASSES)\n+#define MAX_UNROLLED_INSNS \\\n+  PARAM_VALUE (PARAM_MAX_UNROLLED_INSNS)\n #endif /* ! GCC_PARAMS_H */"}, {"sha": "fc189386a390a6ef64f4388336043075183cbfa0", "filename": "gcc/unroll.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03e9dbc91c347697d6eecbd5154a545b56349157/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03e9dbc91c347697d6eecbd5154a545b56349157/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=03e9dbc91c347697d6eecbd5154a545b56349157", "patch": "@@ -147,6 +147,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"predict.h\"\n+#include \"params.h\"\n \n /* The prime factors looked for when trying to unroll a loop by some\n    number which is modulo the total number of iterations.  Just checking\n@@ -169,13 +170,6 @@ enum unroll_types\n   UNROLL_NAIVE\n };\n \n-/* This controls which loops are unrolled, and by how much we unroll\n-   them.  */\n-\n-#ifndef MAX_UNROLLED_INSNS\n-#define MAX_UNROLLED_INSNS 100\n-#endif\n-\n /* Indexed by register number, if non-zero, then it contains a pointer\n    to a struct induction for a DEST_REG giv which has been combined with\n    one of more address givs.  This is needed because whenever such a DEST_REG"}]}