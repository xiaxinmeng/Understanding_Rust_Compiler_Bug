{"sha": "45c3fea9baf7690791680ad24eacc01376b6dbd3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDVjM2ZlYTliYWY3NjkwNzkxNjgwYWQyNGVhY2MwMTM3NmI2ZGJkMw==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@codesourcery.com", "date": "2015-10-18T14:31:25Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2015-10-18T14:31:25Z"}, "message": "Darwin - Tidy mmacosx-version-min code and specs.\n\ngcc/\n\n\t* config/darwin-driver.c (darwin_default_min_version): Refactor code.\n\t(darwin_driver_init): Note a version-min when provided on the c/l.\n\t* config/darwin.h (%darwin_minversion): Remove.\n\t* config/i386/darwin.h: Likewise.\n\t* config/rs6000/darwin.h: Likewise.\n\t* config/darwin.opt (mmacosx-version-min=): Use the configured default, rather than\n\tan arbitrary constant.\n\nFrom-SVN: r228944", "tree": {"sha": "65e64d7f9e401cd163ce8b733da14a44e452cf1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65e64d7f9e401cd163ce8b733da14a44e452cf1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45c3fea9baf7690791680ad24eacc01376b6dbd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45c3fea9baf7690791680ad24eacc01376b6dbd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45c3fea9baf7690791680ad24eacc01376b6dbd3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45c3fea9baf7690791680ad24eacc01376b6dbd3/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efd40fc4161967fa7e0503f12162c8b28c85d632", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efd40fc4161967fa7e0503f12162c8b28c85d632", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efd40fc4161967fa7e0503f12162c8b28c85d632"}], "stats": {"total": 160, "additions": 68, "deletions": 92}, "files": [{"sha": "dc21d7df5cc5aef22c8aa517e3eeb668edad6d69", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45c3fea9baf7690791680ad24eacc01376b6dbd3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45c3fea9baf7690791680ad24eacc01376b6dbd3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45c3fea9baf7690791680ad24eacc01376b6dbd3", "patch": "@@ -1,3 +1,13 @@\n+2015-10-18  Iain Sandoe  <iain@codesourcery.com>\n+\n+\t* config/darwin-driver.c (darwin_default_min_version): Refactor code.\n+\t(darwin_driver_init): Note a version-min when provided on the c/l.\n+\t* config/darwin.h (%darwin_minversion): Remove.\n+\t* config/i386/darwin.h: Likewise.\n+\t* config/rs6000/darwin.h: Likewise.\n+\t* config/darwin.opt (mmacosx-version-min=): Use the configured default,\n+\trather than an arbitrary constant.\n+\n 2015-10-18  Iain Sandoe  <iain@codesourcery.com>\n \n \t* config/darwin-driver.c (darwin_driver_init): Handle '-arch' for"}, {"sha": "597e0c4d0877b01da80f904cf131c1d0589ba953", "filename": "gcc/config/darwin-driver.c", "status": "modified", "additions": 48, "deletions": 62, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45c3fea9baf7690791680ad24eacc01376b6dbd3/gcc%2Fconfig%2Fdarwin-driver.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45c3fea9baf7690791680ad24eacc01376b6dbd3/gcc%2Fconfig%2Fdarwin-driver.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-driver.c?ref=45c3fea9baf7690791680ad24eacc01376b6dbd3", "patch": "@@ -19,6 +19,7 @@ along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n #include \"config.h\"\n+#include \"libiberty.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n@@ -96,73 +97,36 @@ darwin_find_version_from_kernel (void)\n    included in tm.h).  This may be overidden by setting the flag explicitly\n    (or by the MACOSX_DEPLOYMENT_TARGET environment).  */\n \n-static void\n-darwin_default_min_version (unsigned int *decoded_options_count,\n-\t\t\t    struct cl_decoded_option **decoded_options)\n+static const char *\n+darwin_default_min_version (void)\n {\n-  const unsigned int argc = *decoded_options_count;\n-  struct cl_decoded_option *const argv = *decoded_options;\n-  unsigned int i;\n-  const char *new_flag;\n-\n-  /* If the command-line is empty, just return.  */\n-  if (argc <= 1)\n-    return;\n-  \n-  /* Don't do this if the user specified -mmacosx-version-min= or\n-     -mno-macosx-version-min.  */\n-  for (i = 1; i < argc; i++)\n-    if (argv[i].opt_index == OPT_mmacosx_version_min_)\n-      return;\n-\n-  /* Retrieve the deployment target from the environment and insert\n-     it as a flag.  */\n-  {\n-    const char * macosx_deployment_target;\n-    macosx_deployment_target = getenv (\"MACOSX_DEPLOYMENT_TARGET\");\n-    if (macosx_deployment_target\n-\t/* Apparently, an empty string for MACOSX_DEPLOYMENT_TARGET means\n-\t   \"use the default\".  Or, possibly \"use 10.1\".  We choose\n-\t   to ignore the environment variable, as if it was never set.  */\n-\t&& macosx_deployment_target[0])\n-      {\n-\t++*decoded_options_count;\n-\t*decoded_options = XNEWVEC (struct cl_decoded_option,\n-\t\t\t\t    *decoded_options_count);\n-\t(*decoded_options)[0] = argv[0];\n-\tgenerate_option (OPT_mmacosx_version_min_, macosx_deployment_target,\n-\t\t\t 1, CL_DRIVER, &(*decoded_options)[1]);\n-\tmemcpy (*decoded_options + 2, argv + 1,\n-\t\t(argc - 1) * sizeof (struct cl_decoded_option));\n-\treturn;\n-      }\n-  }\n+  /* Try to retrieve the deployment target from the environment.  */\n+  const char *new_flag = getenv (\"MACOSX_DEPLOYMENT_TARGET\");\n \n+  /* Apparently, an empty string for MACOSX_DEPLOYMENT_TARGET means\n+     \"use the default\".  Or, possibly \"use 10.1\".  We choose\n+     to ignore the environment variable, as if it was never set.  */\n+  if (new_flag == NULL || new_flag[0] == 0)\n #ifndef CROSS_DIRECTORY_STRUCTURE\n-\n-  /* Try to find the version from the kernel, if we fail - we print a message \n-     and give up.  */\n-  new_flag = darwin_find_version_from_kernel ();\n-  if (!new_flag)\n-    return;\n-\n+    /* Try to find the version from the kernel, if we fail - we print a\n+       message and give up.  */\n+    new_flag = darwin_find_version_from_kernel ();\n #else\n-\n-  /* For cross-compilers, default to the target OS version. */\n-  new_flag = DEF_MIN_OSX_VERSION;\n-\n+    /* For cross-compilers, default to a minimum version determined by\n+       the configuration. */\n+    new_flag = DEF_MIN_OSX_VERSION;\n #endif /* CROSS_DIRECTORY_STRUCTURE */\n \n-  /* Add the new flag.  */\n-  ++*decoded_options_count;\n-  *decoded_options = XNEWVEC (struct cl_decoded_option,\n-\t\t\t      *decoded_options_count);\n-  (*decoded_options)[0] = argv[0];\n-  generate_option (OPT_mmacosx_version_min_, new_flag,\n-\t\t   1, CL_DRIVER, &(*decoded_options)[1]);\n-  memcpy (*decoded_options + 2, argv + 1,\n-\t  (argc - 1) * sizeof (struct cl_decoded_option));\n-  return;\n+  if (new_flag != NULL)\n+    {\n+      size_t len = strlen (new_flag);\n+      if (len > 128) { /* Arbitrary limit, number should be like xx.yy.zz */\n+\twarning (0, \"couldn%'t understand version %s\\n\", new_flag);\n+\treturn NULL;\n+      }\n+      new_flag = xstrndup (new_flag, len);\n+    }\n+  return new_flag;\n }\n \n /* Translate -filelist and -framework options in *DECODED_OPTIONS\n@@ -187,6 +151,8 @@ darwin_driver_init (unsigned int *decoded_options_count,\n   bool seenM64 = false;\n   bool appendM32 = false;\n   bool appendM64 = false;\n+  const char *vers_string = NULL;\n+  bool seen_version_min = false;\n \n   for (i = 1; i < *decoded_options_count; i++)\n     {\n@@ -246,12 +212,15 @@ darwin_driver_init (unsigned int *decoded_options_count,\n \t\t\t   CL_DRIVER, &(*decoded_options)[i]);\n \t  break;\n \n+\tcase OPT_mmacosx_version_min_:\n+\t  seen_version_min = true;\n+\t  vers_string = xstrndup ((*decoded_options)[i].arg, 32);\n+\n \tdefault:\n \t  break;\n \t}\n     }\n \n-  darwin_default_min_version (decoded_options_count, decoded_options);\n   /* Turn -arch xxxx into the appropriate -m32/-m64 flag.\n      If the User tried to specify multiple arch flags (which is possible with\n      some Darwin compilers) warn that this mode is not supported by this\n@@ -308,4 +277,21 @@ darwin_driver_init (unsigned int *decoded_options_count,\n \t\t       &(*decoded_options)[*decoded_options_count - 1]);\n     }\n \n+  /* We will need to know the OS X version we're trying to build for here\n+     so that we can figure out the mechanism and source for the sysroot to\n+     be used.  */\n+  if (! seen_version_min && *decoded_options_count > 1)\n+    {\n+      /* Not set by the User, try to figure it out.  */\n+      vers_string = darwin_default_min_version ();\n+      if (vers_string != NULL)\n+\t{\n+\t  ++*decoded_options_count;\n+\t  *decoded_options = XRESIZEVEC (struct cl_decoded_option,\n+\t\t\t\t\t *decoded_options,\n+\t\t\t\t\t *decoded_options_count);\n+\t  generate_option (OPT_mmacosx_version_min_, vers_string, 1, CL_DRIVER,\n+\t\t\t  &(*decoded_options)[*decoded_options_count - 1]);\n+\t}\n+    }\n }"}, {"sha": "bb4451aa4412f3042dad018fc7ea69fcd97159ed", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45c3fea9baf7690791680ad24eacc01376b6dbd3/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45c3fea9baf7690791680ad24eacc01376b6dbd3/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=45c3fea9baf7690791680ad24eacc01376b6dbd3", "patch": "@@ -271,7 +271,6 @@ extern GTY(()) int darwin_ms_struct;\n    %{headerpad_max_install_names} \\\n    %{Zimage_base*:-image_base %*} \\\n    %{Zinit*:-init %*} \\\n-   %{!mmacosx-version-min=*:-macosx_version_min %(darwin_minversion)} \\\n    %{mmacosx-version-min=*:-macosx_version_min %*} \\\n    %{nomultidefs} \\\n    %{Zmulti_module:-multi_module} %{Zsingle_module:-single_module} \\\n@@ -370,8 +369,7 @@ extern GTY(()) int darwin_ms_struct;\n \n #define DARWIN_EXTRA_SPECS\t\t\t\t\t\t\\\n   { \"darwin_crt1\", DARWIN_CRT1_SPEC },\t\t\t\t\t\\\n-  { \"darwin_dylib1\", DARWIN_DYLIB1_SPEC },\t\t\t\t\\\n-  { \"darwin_minversion\", DARWIN_MINVERSION_SPEC },\n+  { \"darwin_dylib1\", DARWIN_DYLIB1_SPEC },\n \n #define DARWIN_DYLIB1_SPEC\t\t\t\t\t\t\\\n   \"%:version-compare(!> 10.5 mmacosx-version-min= -ldylib1.o)\t\t\\\n@@ -916,7 +914,9 @@ extern void darwin_driver_init (unsigned int *,struct cl_decoded_option **);\n #define SUPPORTS_INIT_PRIORITY 0\n \n /* When building cross-compilers (and native crosses) we shall default to \n-   providing an osx-version-min of this unless overridden by the User.  */\n-#define DEF_MIN_OSX_VERSION \"10.4\"\n+   providing an osx-version-min of this unless overridden by the User.\n+   10.5 is the only version that fully supports all our archs so that's the\n+   fall-back default.  */\n+#define DEF_MIN_OSX_VERSION \"10.5\"\n \n #endif /* CONFIG_DARWIN_H */"}, {"sha": "eb1afe7378646d19782a924ccfa61e65a418512e", "filename": "gcc/config/darwin.opt", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45c3fea9baf7690791680ad24eacc01376b6dbd3/gcc%2Fconfig%2Fdarwin.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45c3fea9baf7690791680ad24eacc01376b6dbd3/gcc%2Fconfig%2Fdarwin.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.opt?ref=45c3fea9baf7690791680ad24eacc01376b6dbd3", "patch": "@@ -226,10 +226,9 @@ Generate code suitable for fast turn around debugging\n ; The Init here is for the convenience of GCC developers, so that cc1\n ; and cc1plus don't crash if no -mmacosx-version-min is passed.  The\n ; driver will always pass a -mmacosx-version-min, so in normal use the\n-; Init is never used.  Useful for setting the OS on which people\n-; usually debug.\n+; Init is never used.\n mmacosx-version-min=\n-Target Joined Report Var(darwin_macosx_version_min) Init(\"10.6\")\n+Target Joined Report Var(darwin_macosx_version_min) Init(DEF_MIN_OSX_VERSION)\n The earliest MacOS X version on which this program will run\n \n mone-byte-bool"}, {"sha": "506364acc4b2fc758cde48cf7ca580da68bb2da6", "filename": "gcc/config/darwin12.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45c3fea9baf7690791680ad24eacc01376b6dbd3/gcc%2Fconfig%2Fdarwin12.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45c3fea9baf7690791680ad24eacc01376b6dbd3/gcc%2Fconfig%2Fdarwin12.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin12.h?ref=45c3fea9baf7690791680ad24eacc01376b6dbd3", "patch": "@@ -25,3 +25,6 @@ along with GCC; see the file COPYING3.  If not see\n       %:version-compare(>= 10.6 mmacosx-version-min= -lSystem) } } \\\n    %{fno-pic|fno-PIC|fno-pie|fno-PIE|fapple-kext|mkernel|static|mdynamic-no-pic: \\\n       %:version-compare(>= 10.7 mmacosx-version-min= -no_pie) } %G %L\"\n+\n+#undef DEF_MIN_OSX_VERSION\n+#define DEF_MIN_OSX_VERSION \"10.8\""}, {"sha": "2006a7500139a5fdb3b69db00da8c5982a2655a9", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45c3fea9baf7690791680ad24eacc01376b6dbd3/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45c3fea9baf7690791680ad24eacc01376b6dbd3/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=45c3fea9baf7690791680ad24eacc01376b6dbd3", "patch": "@@ -108,7 +108,6 @@ extern int darwin_emit_branch_islands;\n #undef CC1_SPEC\n #define CC1_SPEC \"%(cc1_cpu) \\\n   %{!mkernel:%{!static:%{!mdynamic-no-pic:-fPIC}}} \\\n-  %{!mmacosx-version-min=*:-mmacosx-version-min=%(darwin_minversion)} \\\n   %{g: %{!fno-eliminate-unused-debug-symbols: -feliminate-unused-debug-symbols }} \" \\\n   DARWIN_CC1_SPEC\n \n@@ -119,15 +118,6 @@ extern int darwin_emit_branch_islands;\n #define DARWIN_ARCH_SPEC \"%{m64:x86_64;:i386}\"\n #define DARWIN_SUBARCH_SPEC DARWIN_ARCH_SPEC\n \n-/* Determine a minimum version based on compiler options.  */\n-#define DARWIN_MINVERSION_SPEC\t\t\t\t\\\n- \"%{!m64|fgnu-runtime:10.4;\t\t\t\t\\\n-    ,objective-c|,objc-cpp-output:10.5;\t\t\t\\\n-    ,objective-c-header:10.5;\t\t\t\t\\\n-    ,objective-c++|,objective-c++-cpp-output:10.5;\t\\\n-    ,objective-c++-header|,objc++-cpp-output:10.5;\t\\\n-    :10.4}\"\n-\n #undef ENDFILE_SPEC\n #define ENDFILE_SPEC \\\n   \"%{Ofast|ffast-math|funsafe-math-optimizations:crtfastmath.o%s} \\"}, {"sha": "82fcad21e94d868a46e4789a78bc2a5b24f93981", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45c3fea9baf7690791680ad24eacc01376b6dbd3/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45c3fea9baf7690791680ad24eacc01376b6dbd3/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=45c3fea9baf7690791680ad24eacc01376b6dbd3", "patch": "@@ -93,7 +93,6 @@ extern int darwin_emit_branch_islands;\n   %(cc1_cpu) \\\n   %{g: %{!fno-eliminate-unused-debug-symbols: -feliminate-unused-debug-symbols }} \\\n   %{static: %{Zdynamic: %e conflicting code gen style switches are used}}\\\n-  %{!mmacosx-version-min=*:-mmacosx-version-min=%(darwin_minversion)} \\\n   %{!mkernel:%{!static:%{!mdynamic-no-pic:-fPIC}}} \\\n   %{faltivec:-maltivec -include altivec.h} %{fno-altivec:-mno-altivec} \\\n   %<faltivec %<fno-altivec \" \\\n@@ -124,17 +123,6 @@ extern int darwin_emit_branch_islands;\n #define DARWIN_CRT2_SPEC \\\n   \"%{!m64:%:version-compare(!> 10.4 mmacosx-version-min= crt2.o%s)}\"\n \n-/* Determine a minimum version based on compiler options.  */\n-#define DARWIN_MINVERSION_SPEC\t\t\t\t\t\\\n-  \"%{m64:%{fgnu-runtime:10.4;\t\t\t\t\t\\\n-\t   ,objective-c|,objc-cpp-output:10.5;\t\t\t\\\n-\t   ,objective-c-header:10.5;\t\t\t\t\\\n-\t   ,objective-c++|,objective-c++-cpp-output:10.5;\t\\\n-\t   ,objective-c++-header|,objc++-cpp-output:10.5;\t\\\n-\t   :10.4};\t\t\t\t\t\t\\\n-     shared-libgcc:10.3;\t\t\t\t\t\\\n-     :10.1}\"\n-\n #undef SUBTARGET_EXTRA_SPECS\n #define SUBTARGET_EXTRA_SPECS\t\t\t\\\n   DARWIN_EXTRA_SPECS                            \\"}]}