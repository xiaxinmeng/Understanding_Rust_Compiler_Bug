{"sha": "e97ee22ea59e2314ee8669cb2d99ab3814732376", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk3ZWUyMmVhNTllMjMxNGVlODY2OWNiMmQ5OWFiMzgxNDczMjM3Ng==", "commit": {"author": {"name": "Jerry Quinn", "email": "jlquinn@optonline.net", "date": "2003-07-01T05:38:04Z"}, "committer": {"name": "Jerry Quinn", "email": "jlquinn@gcc.gnu.org", "date": "2003-07-01T05:38:04Z"}, "message": "locale.cc (__use_cache<numpunct>): Revert previous relocation.\n\n2003-06-30  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* src/locale.cc (__use_cache<numpunct>): Revert previous relocation.\n\t* include/bits/locale_facets.tcc (__use_cache<numpunct>): Ditto.\n\nFrom-SVN: r68761", "tree": {"sha": "daf50271b1a1e0cc14b45d6a32e8b8636e167dc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/daf50271b1a1e0cc14b45d6a32e8b8636e167dc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e97ee22ea59e2314ee8669cb2d99ab3814732376", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e97ee22ea59e2314ee8669cb2d99ab3814732376", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e97ee22ea59e2314ee8669cb2d99ab3814732376", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e97ee22ea59e2314ee8669cb2d99ab3814732376/comments", "author": {"login": "jlquinn", "id": 826841, "node_id": "MDQ6VXNlcjgyNjg0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/826841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlquinn", "html_url": "https://github.com/jlquinn", "followers_url": "https://api.github.com/users/jlquinn/followers", "following_url": "https://api.github.com/users/jlquinn/following{/other_user}", "gists_url": "https://api.github.com/users/jlquinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlquinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlquinn/subscriptions", "organizations_url": "https://api.github.com/users/jlquinn/orgs", "repos_url": "https://api.github.com/users/jlquinn/repos", "events_url": "https://api.github.com/users/jlquinn/events{/privacy}", "received_events_url": "https://api.github.com/users/jlquinn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6cf9ac28580beb4c5ae891781250cf5d6744d676", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cf9ac28580beb4c5ae891781250cf5d6744d676", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cf9ac28580beb4c5ae891781250cf5d6744d676"}], "stats": {"total": 67, "additions": 41, "deletions": 26}, "files": [{"sha": "930c0d894ddbbc9dd359ffe417ed20b54672276b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e97ee22ea59e2314ee8669cb2d99ab3814732376/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e97ee22ea59e2314ee8669cb2d99ab3814732376/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e97ee22ea59e2314ee8669cb2d99ab3814732376", "patch": "@@ -1,3 +1,8 @@\n+2003-06-30  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* src/locale.cc (__use_cache<numpunct>): Revert previous relocation.\n+\t* include/bits/locale_facets.tcc (__use_cache<numpunct>): Ditto.\n+\n 2003-06-30  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* 27_io/basic_filebuf/seekoff/char/1-in.cc: New."}, {"sha": "aca0e056d6739e6d03ef78ccf83e42d8f2296d5b", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 4, "deletions": 26, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e97ee22ea59e2314ee8669cb2d99ab3814732376/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e97ee22ea59e2314ee8669cb2d99ab3814732376/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=e97ee22ea59e2314ee8669cb2d99ab3814732376", "patch": "@@ -93,35 +93,13 @@ namespace std\n     __use_cache(const locale& __loc);\n \n   template<>\n-    inline const __numpunct_cache<char>&\n-    __use_cache(const locale& __loc)\n-    {\n-      size_t __i = numpunct<char>::id._M_id();\n-      const locale::facet** __caches = __loc._M_impl->_M_caches;\n-      if (!__caches[__i])\n-\t{\n-\t  __numpunct_cache<char>* __tmp = new __numpunct_cache<char>;\n-\t  __tmp->_M_cache(__loc);\n-\t  __loc._M_impl->_M_install_cache(__tmp, __i);\n-\t}\n-      return static_cast<const __numpunct_cache<char>&>(*__caches[__i]);\n-    }\n+    const __numpunct_cache<char>&\n+    __use_cache(const locale& __loc);\n \n #ifdef _GLIBCPP_USE_WCHAR_T\n   template<>\n-    inline const __numpunct_cache<wchar_t>&\n-    __use_cache(const locale& __loc)\n-    {\n-      size_t __i = numpunct<wchar_t>::id._M_id();\n-      const locale::facet** __caches = __loc._M_impl->_M_caches;\n-      if (!__caches[__i])\n-\t{\n-\t  __numpunct_cache<wchar_t>* __tmp = new __numpunct_cache<wchar_t>;\n-\t  __tmp->_M_cache(__loc);\n-\t  __loc._M_impl->_M_install_cache(__tmp, __i);\n-\t}\n-      return static_cast<const __numpunct_cache<wchar_t>&>(*__caches[__i]);\n-    }\n+    const __numpunct_cache<wchar_t>&\n+    __use_cache(const locale& __loc);\n #endif\n \n   // Stage 1: Determine a conversion specifier."}, {"sha": "7788a58419d21d08ddb0462c21744645e04bdfad", "filename": "libstdc++-v3/src/locale.cc", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e97ee22ea59e2314ee8669cb2d99ab3814732376/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e97ee22ea59e2314ee8669cb2d99ab3814732376/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc?ref=e97ee22ea59e2314ee8669cb2d99ab3814732376", "patch": "@@ -449,6 +449,38 @@ namespace std\n   locale::facet::\n   ~facet() { }\n \n+  template<>\n+    const __numpunct_cache<char>&\n+    __use_cache(const locale& __loc)\n+    {\n+      size_t __i = numpunct<char>::id._M_id();\n+      const locale::facet** __caches = __loc._M_impl->_M_caches;\n+      if (!__caches[__i])\n+\t{\n+\t  __numpunct_cache<char>* __tmp = new __numpunct_cache<char>;\n+\t  __tmp->_M_cache(__loc);\n+\t  __loc._M_impl->_M_install_cache(__tmp, __i);\n+\t}\n+      return static_cast<const __numpunct_cache<char>&>(*__caches[__i]);\n+    }\n+\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template<>\n+    const __numpunct_cache<wchar_t>&\n+    __use_cache(const locale& __loc)\n+    {\n+      size_t __i = numpunct<wchar_t>::id._M_id();\n+      const locale::facet** __caches = __loc._M_impl->_M_caches;\n+      if (!__caches[__i])\n+\t{\n+\t  __numpunct_cache<wchar_t>* __tmp = new __numpunct_cache<wchar_t>;\n+\t  __tmp->_M_cache(__loc);\n+\t  __loc._M_impl->_M_install_cache(__tmp, __i);\n+\t}\n+      return static_cast<const __numpunct_cache<wchar_t>&>(*__caches[__i]);\n+    }\n+#endif\n+\n   // Definitions for static const data members of time_base\n   template<> \n     const char*"}]}