{"sha": "5ebdd53534db25401473db5f6a0ad30f41410241", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWViZGQ1MzUzNGRiMjU0MDE0NzNkYjVmNmEwYWQzMGY0MTQxMDI0MQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-01-14T15:28:27Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-01-14T15:29:21Z"}, "message": "i386: Resolve variable shadowing in i386-options.c [PR98671]\n\nAlso change global variable pta_size to unsigned.\n\n2021-01-14  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/\n\tPR target/98671\n\t* config/i386/i386-options.c (ix86_valid_target_attribute_inner_p):\n\tRemove declaration and initialization of shadow variable \"ret\".\n\t(ix86_option_override_internal): Remove delcaration of\n\tshadow variable \"i\".  Redeclare shadowed variable to unsigned.\n\t* common/config/i386/i386-common.c (pta_size): Redeclare to unsigned.\n\t* config/i386/i386-builtins.c (get_builtin_code_for_version):\n\tUpdate for redeclaration.\n\t* config/i386/i386.h (pta_size): Ditto.", "tree": {"sha": "35af51262f90052e3c7ac686f555466162cdd577", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35af51262f90052e3c7ac686f555466162cdd577"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ebdd53534db25401473db5f6a0ad30f41410241", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ebdd53534db25401473db5f6a0ad30f41410241", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ebdd53534db25401473db5f6a0ad30f41410241", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ebdd53534db25401473db5f6a0ad30f41410241/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2182274f510c180ea92a4f826a0f6cf5f1f55b66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2182274f510c180ea92a4f826a0f6cf5f1f55b66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2182274f510c180ea92a4f826a0f6cf5f1f55b66"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "eea8af12f484a4341b5f9370d90f134f5edc9072", "filename": "gcc/common/config/i386/i386-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ebdd53534db25401473db5f6a0ad30f41410241/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ebdd53534db25401473db5f6a0ad30f41410241/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c?ref=5ebdd53534db25401473db5f6a0ad30f41410241", "patch": "@@ -2051,7 +2051,7 @@ const pta processor_alias_table[] =\n };\n \n /* NB: processor_alias_table stops at the \"generic\" entry.  */\n-int const pta_size = ARRAY_SIZE (processor_alias_table) - 6;\n+unsigned int const pta_size = ARRAY_SIZE (processor_alias_table) - 6;\n unsigned int const num_arch_names = ARRAY_SIZE (processor_alias_table);\n \n /* Provide valid option values for -march and -mtune options.  */"}, {"sha": "4fcdf4b89ee48a14afedcfe7975e1647d36af9fb", "filename": "gcc/config/i386/i386-builtins.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ebdd53534db25401473db5f6a0ad30f41410241/gcc%2Fconfig%2Fi386%2Fi386-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ebdd53534db25401473db5f6a0ad30f41410241/gcc%2Fconfig%2Fi386%2Fi386-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtins.c?ref=5ebdd53534db25401473db5f6a0ad30f41410241", "patch": "@@ -1888,7 +1888,7 @@ get_builtin_code_for_version (tree decl, tree *predicate_list)\n       gcc_assert (new_target);\n       \n       if (new_target->arch_specified && new_target->arch > 0)\n-\tfor (i = 0; i < (unsigned int) pta_size; i++)\n+\tfor (i = 0; i < pta_size; i++)\n \t  if (processor_alias_table[i].processor == new_target->arch)\n \t    {\n \t      const pta *arch_info = &processor_alias_table[i];"}, {"sha": "6819a04238965f0ad63b10323823caa2fb8b147c", "filename": "gcc/config/i386/i386-options.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ebdd53534db25401473db5f6a0ad30f41410241/gcc%2Fconfig%2Fi386%2Fi386-options.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ebdd53534db25401473db5f6a0ad30f41410241/gcc%2Fconfig%2Fi386%2Fi386-options.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-options.c?ref=5ebdd53534db25401473db5f6a0ad30f41410241", "patch": "@@ -1088,8 +1088,6 @@ ix86_valid_target_attribute_inner_p (tree fndecl, tree args, char *p_strings[],\n   /* If this is a list, recurse to get the options.  */\n   if (TREE_CODE (args) == TREE_LIST)\n     {\n-      bool ret = true;\n-\n       for (; args; args = TREE_CHAIN (args))\n \tif (TREE_VALUE (args)\n \t    && !ix86_valid_target_attribute_inner_p (fndecl, TREE_VALUE (args),\n@@ -1782,7 +1780,7 @@ ix86_option_override_internal (bool main_args_p,\n \t\t\t       struct gcc_options *opts,\n \t\t\t       struct gcc_options *opts_set)\n {\n-  int i;\n+  unsigned int i;\n   unsigned HOST_WIDE_INT ix86_arch_mask;\n   const bool ix86_tune_specified = (opts->x_ix86_tune_string != NULL);\n \n@@ -2852,7 +2850,7 @@ ix86_option_override_internal (bool main_args_p,\n     {\n       char *p = ASTRDUP (opts->x_ix86_recip_name);\n       char *q;\n-      unsigned int mask, i;\n+      unsigned int mask;\n       bool invert;\n \n       while ((q = strtok (p, \",\")) != NULL)"}, {"sha": "272b1957b4735eca0e83c8ae0162e4931ac88587", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ebdd53534db25401473db5f6a0ad30f41410241/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ebdd53534db25401473db5f6a0ad30f41410241/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=5ebdd53534db25401473db5f6a0ad30f41410241", "patch": "@@ -2562,7 +2562,7 @@ class pta\n };\n \n extern const pta processor_alias_table[];\n-extern int const pta_size;\n+extern unsigned int const pta_size;\n extern unsigned int const num_arch_names;\n #endif\n "}]}