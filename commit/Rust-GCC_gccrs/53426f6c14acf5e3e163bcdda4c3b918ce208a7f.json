{"sha": "53426f6c14acf5e3e163bcdda4c3b918ce208a7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM0MjZmNmMxNGFjZjVlM2UxNjNiY2RkYTRjM2I5MThjZTIwOGE3Zg==", "commit": {"author": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2013-10-01T16:34:40Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2013-10-01T16:34:40Z"}, "message": "Configuration bits for ARC port:\n\ntoplevel:\n\n2013-02-25  Simon Cook  <simon.cook@embecosm.com>\n\n        Changes to build configuration to allow big endian ARC ELF toolchain\n        * configure.ac: Also add target-libgloss to noconfigdirs for arceb-*-*.\n        * configure: Regenerate.\n\ngcc:\n\n2013-04-03  Joern Rennecke  <joern.rennecke@embecosm.com>\n            Brendan Kehoe  <brendan@zen.org>\n            Simon Cook  <simon.cook@embecosm.com>\n\n         * config.gcc (arc*-*-elf*, arc*-*-linux-uclibc*): New configurations.\n\nlibstdc++-v3:\n\n2012-08-16  Joern Rennecke  <joern.rennecke@embecosm.com>\n\n        * acinclude.m4 (GLIBCXX_ENABLE_SJLJ_EXCEPTIONS): Also check for\n        _Unwind_SjLj_Register when deciding if to set enable_sjlj_exceptions.\n        * configure: Regenerate.\n\ncontrib:\n\n2013-09-05  Joern Rennecke  <joern.rennecke@embecosm.com>\n\n        * config-list.mk: Add arc configurations.\n\nFrom-SVN: r203070", "tree": {"sha": "f02b0fa9ea31ee6532aa1b081997796124851660", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f02b0fa9ea31ee6532aa1b081997796124851660"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53426f6c14acf5e3e163bcdda4c3b918ce208a7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53426f6c14acf5e3e163bcdda4c3b918ce208a7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53426f6c14acf5e3e163bcdda4c3b918ce208a7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53426f6c14acf5e3e163bcdda4c3b918ce208a7f/comments", "author": null, "committer": null, "parents": [{"sha": "1df9f5a99845ac0468a73f2d9c8226bd739a33a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1df9f5a99845ac0468a73f2d9c8226bd739a33a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1df9f5a99845ac0468a73f2d9c8226bd739a33a0"}], "stats": {"total": 110, "additions": 100, "deletions": 10}, "files": [{"sha": "55a5908149d1d76fb53036482ce88d7256fe36d5", "filename": "ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53426f6c14acf5e3e163bcdda4c3b918ce208a7f/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53426f6c14acf5e3e163bcdda4c3b918ce208a7f/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=53426f6c14acf5e3e163bcdda4c3b918ce208a7f", "patch": "@@ -1,3 +1,9 @@\n+2013-10-01  Simon Cook  <simon.cook@embecosm.com>\n+\n+\tChanges to build configuration to allow big endian ARC ELF toolchain\n+\t* configure.ac: Also add target-libgloss to noconfigdirs for arceb-*-*.\n+\t* configure: Regenerate.\n+\n 2013-09-20  Alan Modra  <amodra@gmail.com>\n \n \t* libtool.m4 (_LT_ENABLE_LOCK <ld -m flags>): Remove non-canonical"}, {"sha": "6ad3c49eaa3c69a90bfbd1b89b63f85d22dbb164", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53426f6c14acf5e3e163bcdda4c3b918ce208a7f/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53426f6c14acf5e3e163bcdda4c3b918ce208a7f/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=53426f6c14acf5e3e163bcdda4c3b918ce208a7f", "patch": "@@ -3620,7 +3620,7 @@ case \"${target}\" in\n   sh*-*-pe|mips*-*-pe|*arm-wince-pe)\n     noconfigdirs=\"$noconfigdirs tcl tk itcl libgui sim\"\n     ;;\n-  arc-*-*)\n+  arc-*-*|arceb-*-*)\n     noconfigdirs=\"$noconfigdirs target-libgloss\"\n     ;;\n   arm-*-pe*)"}, {"sha": "b5caebbaf179609a7c8f06311bd09c37b212e1c9", "filename": "configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53426f6c14acf5e3e163bcdda4c3b918ce208a7f/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53426f6c14acf5e3e163bcdda4c3b918ce208a7f/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=53426f6c14acf5e3e163bcdda4c3b918ce208a7f", "patch": "@@ -956,7 +956,7 @@ case \"${target}\" in\n   sh*-*-pe|mips*-*-pe|*arm-wince-pe)\n     noconfigdirs=\"$noconfigdirs tcl tk itcl libgui sim\"\n     ;;\n-  arc-*-*)\n+  arc-*-*|arceb-*-*)\n     noconfigdirs=\"$noconfigdirs target-libgloss\"\n     ;;\n   arm-*-pe*)"}, {"sha": "ff29b1e9ab124d8b60c874c09310c83ce583a3bd", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53426f6c14acf5e3e163bcdda4c3b918ce208a7f/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53426f6c14acf5e3e163bcdda4c3b918ce208a7f/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=53426f6c14acf5e3e163bcdda4c3b918ce208a7f", "patch": "@@ -1,3 +1,7 @@\n+2013-10-01  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\t* config-list.mk: Add arc configurations.\n+\n 2013-09-27  Diego Novillo  <dnovillo@google.com>\n \n \t* testsuite-management/x86_64-unknown-linux-gnu.xfail: Update."}, {"sha": "6ab0ca6839765b4aff6e0166682d0a7cd2119007", "filename": "contrib/config-list.mk", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53426f6c14acf5e3e163bcdda4c3b918ce208a7f/contrib%2Fconfig-list.mk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53426f6c14acf5e3e163bcdda4c3b918ce208a7f/contrib%2Fconfig-list.mk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fconfig-list.mk?ref=53426f6c14acf5e3e163bcdda4c3b918ce208a7f", "patch": "@@ -14,6 +14,8 @@ TEST=all-gcc\n LIST = aarch64-elf aarch64-linux-gnu \\\n   alpha-linux-gnu alpha-freebsd6 alpha-netbsd alpha-openbsd \\\n   alpha64-dec-vms alpha-dec-vms am33_2.0-linux \\\n+  arc-elf32OPT-with-cpu=arc600 arc-elf32OPT-with-cpu=arc700 \\\n+  arc-linux-uclibcOPT-with-cpu=arc700 arceb-linux-uclibcOPT-with-cpu=arc700 \\\n   arm-wrs-vxworks arm-netbsdelf \\\n   arm-linux-androideabi arm-uclinux_eabi arm-eabi \\\n   arm-symbianelf avr-rtems avr-elf \\"}, {"sha": "5b71a25acf2cb7fc340fdc1466269e6af3f5d674", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53426f6c14acf5e3e163bcdda4c3b918ce208a7f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53426f6c14acf5e3e163bcdda4c3b918ce208a7f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=53426f6c14acf5e3e163bcdda4c3b918ce208a7f", "patch": "@@ -1,3 +1,9 @@\n+2013-10-01  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\t    Brendan Kehoe  <brendan@zen.org>\n+\t    Simon Cook  <simon.cook@embecosm.com>\n+\n+\t* config.gcc (arc*-*-elf*, arc*-*-linux-uclibc*): New configurations.\n+\n 2013-10-01  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* tree-ssa-live.h (coalesce_ssa_name): Move Prototype to..."}, {"sha": "e6cb55d316c9b169c89e1fc7bcf20e6e8e97f750", "filename": "gcc/config.gcc", "status": "modified", "additions": 63, "deletions": 1, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53426f6c14acf5e3e163bcdda4c3b918ce208a7f/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53426f6c14acf5e3e163bcdda4c3b918ce208a7f/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=53426f6c14acf5e3e163bcdda4c3b918ce208a7f", "patch": "@@ -324,6 +324,9 @@ alpha*-*-*)\n am33_2.0-*-linux*)\n \tcpu_type=mn10300\n \t;;\n+arc*-*-*)\n+\tcpu_type=arc\n+\t;;\n arm*-*-*)\n \tcpu_type=arm\n \textra_headers=\"mmintrin.h arm_neon.h\"\n@@ -838,7 +841,7 @@ case ${target} in\n     *) echo 'Unknown thread configuration for VxWorks'; exit 1 ;;\n   esac\n   ;;\n-*-*-elf)\n+*-*-elf|arc*-*-elf*)\n   # Assume that newlib is being used and so __cxa_atexit is provided.\n   default_use_cxa_atexit=yes\n   use_gcc_stdint=wrap\n@@ -925,6 +928,54 @@ alpha*-dec-*vms*)\n \ttm_file=\"${tm_file} vms/vms.h alpha/vms.h\"\n \ttmake_file=\"${tmake_file} alpha/t-vms\"\n \t;;\n+arc*-*-elf*)\n+\textra_headers=\"arc-simd.h\"\n+\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file}\"\n+\ttmake_file=\"arc/t-arc-newlib arc/t-arc\"\n+\tcase x\"${with_cpu}\" in\n+\t  xarc600|xarc601|xarc700)\n+\t\ttarget_cpu_default=\"TARGET_CPU_$with_cpu\"\n+\t\t;;\n+\tesac\n+\tif test x${with_endian} = x; then\n+\t\tcase ${target} in\n+\t\tarc*be-*-* | arc*eb-*-*)\twith_endian=big ;;\n+\t\t*)\t\t\t\twith_endian=little ;;\n+\t\tesac\n+\tfi\n+\tcase ${with_endian} in\n+\tbig|little)\t\t;;\n+\t*)\techo \"with_endian=${with_endian} not supported.\"; exit 1 ;;\n+\tesac\n+\tcase ${with_endian} in\n+\tbig*)\ttm_defines=\"DRIVER_ENDIAN_SELF_SPECS=\\\\\\\"%{!EL:%{!mlittle-endian:-mbig-endian}}\\\\\\\" ${tm_defines}\"\n+\tesac\n+\t;;\n+arc*-*-linux-uclibc*)\n+\textra_headers=\"arc-simd.h\"\n+\ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h ${tm_file}\"\n+\ttmake_file=\"${tmake_file} arc/t-arc-uClibc arc/t-arc\"\n+\ttm_defines=\"${tm_defines} TARGET_SDATA_DEFAULT=0\"\n+\ttm_defines=\"${tm_defines} TARGET_MMEDIUM_CALLS_DEFAULT=1\"\n+\tcase x\"${with_cpu}\" in\n+\t  xarc600|xarc601|xarc700)\n+\t\ttarget_cpu_default=\"TARGET_CPU_$with_cpu\"\n+\t\t;;\n+\tesac\n+\tif test x${with_endian} = x; then\n+\t\tcase ${target} in\n+\t\tarc*be-*-* | arc*eb-*-*)\twith_endian=big ;;\n+\t\t*)\t\t\t\twith_endian=little ;;\n+\t\tesac\n+\tfi\n+\tcase ${with_endian} in\n+\tbig|little)\t\t;;\n+\t*)\techo \"with_endian=${with_endian} not supported.\"; exit 1 ;;\n+\tesac\n+\tcase ${with_endian} in\n+\tbig*)\ttm_defines=\"DRIVER_ENDIAN_SELF_SPECS=\\\\\\\"%{!EL:%{!mlittle-endian:-mbig-endian}}\\\\\\\" ${tm_defines}\"\n+\tesac\n+        ;;\n arm-wrs-vxworks)\n \ttm_file=\"elfos.h arm/elf.h arm/aout.h ${tm_file} vx-common.h vxworks.h arm/vxworks.h\"\n \textra_options=\"${extra_options} arm/vxworks.opt\"\n@@ -3338,6 +3389,17 @@ case \"${target}\" in\n \t\tdone\n \t\t;;\n \n+\tarc*-*-*) # was:\tarc*-*-linux-uclibc)\n+\t\tsupported_defaults=\"cpu\"\n+\t\tcase $with_cpu in\n+\t\t  arc600|arc601|arc700)\n+\t\t\t;;\n+\t\t  *) echo \"Unknown cpu type\"\n+\t\t\texit 1\n+\t\t\t;;\n+\t\tesac\n+\t\t;;\n+\n \tarm*-*-*)\n \t\tsupported_defaults=\"arch cpu float tune fpu abi mode tls\"\n \t\tfor which in cpu tune; do"}, {"sha": "6c50194054ff9f51947cbc622d060d07b43cd847", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53426f6c14acf5e3e163bcdda4c3b918ce208a7f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53426f6c14acf5e3e163bcdda4c3b918ce208a7f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=53426f6c14acf5e3e163bcdda4c3b918ce208a7f", "patch": "@@ -1,3 +1,9 @@\n+2013-10-01  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\t* acinclude.m4 (GLIBCXX_ENABLE_SJLJ_EXCEPTIONS): Also check for\n+\t_Unwind_SjLj_Register when deciding if to set enable_sjlj_exceptions.\n+\t* configure: Regenerate.\n+\n 2013-10-01  Tim Shen  <timshen91@gmail.com>\n \n \tPR libstdc++/58576"}, {"sha": "f9d12d0cd315afc7656ffded42a67b9c82838801", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53426f6c14acf5e3e163bcdda4c3b918ce208a7f/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53426f6c14acf5e3e163bcdda4c3b918ce208a7f/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=53426f6c14acf5e3e163bcdda4c3b918ce208a7f", "patch": "@@ -3139,6 +3139,8 @@ EOF\n     if AC_TRY_EVAL(ac_compile); then\n       if grep _Unwind_SjLj_Resume conftest.s >/dev/null 2>&1 ; then\n \tenable_sjlj_exceptions=yes\n+      elif grep _Unwind_SjLj_Register conftest.s >/dev/null 2>&1 ; then\n+\tenable_sjlj_exceptions=yes\n       elif grep _Unwind_Resume conftest.s >/dev/null 2>&1 ; then\n \tenable_sjlj_exceptions=no\n       elif grep __cxa_end_cleanup conftest.s >/dev/null 2>&1 ; then"}, {"sha": "c436cb986363a1b10afc5c4690692d1bce0e995f", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53426f6c14acf5e3e163bcdda4c3b918ce208a7f/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53426f6c14acf5e3e163bcdda4c3b918ce208a7f/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=53426f6c14acf5e3e163bcdda4c3b918ce208a7f", "patch": "@@ -15070,6 +15070,8 @@ EOF\n   test $ac_status = 0; }; then\n       if grep _Unwind_SjLj_Resume conftest.s >/dev/null 2>&1 ; then\n \tenable_sjlj_exceptions=yes\n+      elif grep _Unwind_SjLj_Register conftest.s >/dev/null 2>&1 ; then\n+\tenable_sjlj_exceptions=yes\n       elif grep _Unwind_Resume conftest.s >/dev/null 2>&1 ; then\n \tenable_sjlj_exceptions=no\n       elif grep __cxa_end_cleanup conftest.s >/dev/null 2>&1 ; then\n@@ -15402,7 +15404,7 @@ $as_echo \"$glibcxx_cv_atomic_long_long\" >&6; }\n   # Fake what AC_TRY_COMPILE does.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15405 \"configure\"\n+#line 15407 \"configure\"\n int main()\n {\n   typedef bool atomic_type;\n@@ -15437,7 +15439,7 @@ $as_echo \"$glibcxx_cv_atomic_bool\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15440 \"configure\"\n+#line 15442 \"configure\"\n int main()\n {\n   typedef short atomic_type;\n@@ -15472,7 +15474,7 @@ $as_echo \"$glibcxx_cv_atomic_short\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15475 \"configure\"\n+#line 15477 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int.\n@@ -15508,7 +15510,7 @@ $as_echo \"$glibcxx_cv_atomic_int\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15511 \"configure\"\n+#line 15513 \"configure\"\n int main()\n {\n   typedef long long atomic_type;\n@@ -15587,7 +15589,7 @@ $as_echo \"$as_me: WARNING: Performance of certain classes will degrade as a resu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15590 \"configure\"\n+#line 15592 \"configure\"\n int main()\n {\n   _Decimal32 d1;\n@@ -15629,7 +15631,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15632 \"configure\"\n+#line 15634 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -15663,7 +15665,7 @@ $as_echo \"$enable_int128\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15666 \"configure\"\n+#line 15668 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };"}]}