{"sha": "1503cb6b6d9d71b6deb9aba18ff526ce9359732d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTUwM2NiNmI2ZDlkNzFiNmRlYjlhYmExOGZmNTI2Y2U5MzU5NzMyZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-04-01T08:55:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-04-01T08:55:58Z"}, "message": "gimple.h (struct gimple_statement_base): Align subcode to 16 bits.\n\n2014-04-01  Richard Biener  <rguenther@suse.de>\n\n\t* gimple.h (struct gimple_statement_base): Align subcode to\n\t16 bits.\n\nFrom-SVN: r208978", "tree": {"sha": "72b2468cddde4e3aeb4b740f1d56e93fecf2f041", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72b2468cddde4e3aeb4b740f1d56e93fecf2f041"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1503cb6b6d9d71b6deb9aba18ff526ce9359732d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1503cb6b6d9d71b6deb9aba18ff526ce9359732d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1503cb6b6d9d71b6deb9aba18ff526ce9359732d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1503cb6b6d9d71b6deb9aba18ff526ce9359732d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cded08eab490127092ab6807c8a8f778d69e5d18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cded08eab490127092ab6807c8a8f778d69e5d18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cded08eab490127092ab6807c8a8f778d69e5d18"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "f836f21efce6d8703168345c2582d081e16c41db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1503cb6b6d9d71b6deb9aba18ff526ce9359732d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1503cb6b6d9d71b6deb9aba18ff526ce9359732d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1503cb6b6d9d71b6deb9aba18ff526ce9359732d", "patch": "@@ -1,3 +1,8 @@\n+2014-04-01  Richard Biener  <rguenther@suse.de>\n+\n+\t* gimple.h (struct gimple_statement_base): Align subcode to\n+\t16 bits.\n+\n 2014-04-01  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n \n \t* doc/invoke.texi (mapp-regs): Clarify."}, {"sha": "11959a82e62e3a0f3b304dc3925d8d806585ac89", "filename": "gcc/gimple.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1503cb6b6d9d71b6deb9aba18ff526ce9359732d/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1503cb6b6d9d71b6deb9aba18ff526ce9359732d/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=1503cb6b6d9d71b6deb9aba18ff526ce9359732d", "patch": "@@ -166,6 +166,9 @@ struct GTY((desc (\"gimple_statement_structure (&%h)\"), tag (\"GSS_BASE\"),\n   /* Nonzero if this statement contains volatile operands.  */\n   unsigned has_volatile_ops \t: 1;\n \n+  /* Padding to get subcode to 16 bit alignment.  */\n+  unsigned pad\t\t\t: 1;\n+\n   /* The SUBCODE field can be used for tuple-specific flags for tuples\n      that do not require subcodes.  Note that SUBCODE should be at\n      least as wide as tree codes, as several tuples store tree codes"}]}