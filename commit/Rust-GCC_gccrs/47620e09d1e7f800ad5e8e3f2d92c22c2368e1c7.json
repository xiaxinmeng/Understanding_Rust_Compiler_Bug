{"sha": "47620e09d1e7f800ad5e8e3f2d92c22c2368e1c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc2MjBlMDlkMWU3ZjgwMGFkNWU4ZTNmMmQ5MmMyMmMyMzY4ZTFjNw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-07-31T01:26:09Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-07-31T01:26:09Z"}, "message": "Update for label differences.\n\nFrom-SVN: r28351", "tree": {"sha": "4fcb7e7e333d3b398bc358961c028e0871d051a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fcb7e7e333d3b398bc358961c028e0871d051a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47620e09d1e7f800ad5e8e3f2d92c22c2368e1c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47620e09d1e7f800ad5e8e3f2d92c22c2368e1c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47620e09d1e7f800ad5e8e3f2d92c22c2368e1c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47620e09d1e7f800ad5e8e3f2d92c22c2368e1c7/comments", "author": null, "committer": null, "parents": [{"sha": "aac3691da5498ee2f93bae1866234ccdb9a956bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aac3691da5498ee2f93bae1866234ccdb9a956bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aac3691da5498ee2f93bae1866234ccdb9a956bd"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "89a79f563c4e88bd6cfb17de3ad8fe4149160fa5", "filename": "gcc/extend.texi", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47620e09d1e7f800ad5e8e3f2d92c22c2368e1c7/gcc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47620e09d1e7f800ad5e8e3f2d92c22c2368e1c7/gcc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fextend.texi?ref=47620e09d1e7f800ad5e8e3f2d92c22c2368e1c7", "patch": "@@ -295,11 +295,23 @@ Another use of label values is in an interpreter for threaded code.\n The labels within the interpreter function can be stored in the\n threaded code for super-fast dispatching.\n \n-You can use this mechanism to jump to code in a different function.  If\n-you do that, totally unpredictable things will happen.  The best way to\n+You may not use this mechanism to jump to code in a different function. \n+If you do that, totally unpredictable things will happen.  The best way to\n avoid this is to store the label address only in automatic variables and\n never pass it as an argument.\n \n+An alternate way to write the above example is\n+\n+@example\n+static const int array[] = @{ &&foo - &&foo, &&bar - &&foo, &&hack - &&foo @};\n+goto *(&&foo + array[i]);\n+@end example\n+\n+@noindent\n+This is more friendly to code living in shared libraries, as it reduces\n+the number of dynamic relocations that are needed, and by consequence,\n+allows the data to be read-only.\n+\n @node Nested Functions\n @section Nested Functions\n @cindex nested functions"}]}