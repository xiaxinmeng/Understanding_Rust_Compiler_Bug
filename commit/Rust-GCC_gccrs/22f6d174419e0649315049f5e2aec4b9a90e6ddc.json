{"sha": "22f6d174419e0649315049f5e2aec4b9a90e6ddc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJmNmQxNzQ0MTllMDY0OTMxNTA0OWY1ZTJhZWM0YjlhOTBlNmRkYw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-06-12T22:41:35Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-06-12T22:41:35Z"}, "message": "PR c++/66999 - 'this' captured by reference.\n\n\t* parser.c (cp_parser_lambda_introducer): Reject `&this'.  Use\n\tcp_lexer_nth_token_is instead of cp_lexer_peek_nth_token.\n\n\t* g++.dg/cpp0x/lambda/lambda-this21.C: New test.\n\nFrom-SVN: r272223", "tree": {"sha": "9f88d2baf98fe2d850f45921a783813d7575ec0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f88d2baf98fe2d850f45921a783813d7575ec0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22f6d174419e0649315049f5e2aec4b9a90e6ddc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22f6d174419e0649315049f5e2aec4b9a90e6ddc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22f6d174419e0649315049f5e2aec4b9a90e6ddc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22f6d174419e0649315049f5e2aec4b9a90e6ddc/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d0137a37fc29c1dc94bb8f8f90b5fdece6cb64b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d0137a37fc29c1dc94bb8f8f90b5fdece6cb64b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d0137a37fc29c1dc94bb8f8f90b5fdece6cb64b"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "37d2b2a3fe8f51adeb50315a4b391b702141c60a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22f6d174419e0649315049f5e2aec4b9a90e6ddc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22f6d174419e0649315049f5e2aec4b9a90e6ddc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=22f6d174419e0649315049f5e2aec4b9a90e6ddc", "patch": "@@ -1,5 +1,9 @@\n 2019-06-12  Marek Polacek  <polacek@redhat.com>\n \n+\tPR c++/66999 - 'this' captured by reference.\n+\t* parser.c (cp_parser_lambda_introducer): Reject `&this'.  Use\n+\tcp_lexer_nth_token_is instead of cp_lexer_peek_nth_token.\n+\n \tPR c++/90825 - endless recursion when evaluating sizeof.\n \tPR c++/90832 - endless recursion when evaluating sizeof.\n \t* constexpr.c (cxx_eval_constant_expression): Don't recurse on the"}, {"sha": "8f5ae84670aa01ce1709fb343e8f4f9f97c3945b", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22f6d174419e0649315049f5e2aec4b9a90e6ddc/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22f6d174419e0649315049f5e2aec4b9a90e6ddc/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=22f6d174419e0649315049f5e2aec4b9a90e6ddc", "patch": "@@ -10526,7 +10526,8 @@ cp_parser_lambda_introducer (cp_parser* parser, tree lambda_expr)\n \n   /* Record default capture mode.  \"[&\" \"[=\" \"[&,\" \"[=,\"  */\n   if (cp_lexer_next_token_is (parser->lexer, CPP_AND)\n-      && cp_lexer_peek_nth_token (parser->lexer, 2)->type != CPP_NAME)\n+      && !cp_lexer_nth_token_is (parser->lexer, 2, CPP_NAME)\n+      && !cp_lexer_nth_token_is_keyword (parser->lexer, 2, RID_THIS))\n     LAMBDA_EXPR_DEFAULT_CAPTURE_MODE (lambda_expr) = CPLD_REFERENCE;\n   else if (cp_lexer_next_token_is (parser->lexer, CPP_EQ))\n     LAMBDA_EXPR_DEFAULT_CAPTURE_MODE (lambda_expr) = CPLD_COPY;\n@@ -10609,6 +10610,17 @@ cp_parser_lambda_introducer (cp_parser* parser, tree lambda_expr)\n \t  continue;\n \t}\n \n+      /* But reject `&this'.  */\n+      if (cp_lexer_next_token_is (parser->lexer, CPP_AND)\n+\t  && cp_lexer_nth_token_is_keyword (parser->lexer, 2, RID_THIS))\n+\t{\n+\t  error_at (cp_lexer_peek_token (parser->lexer)->location,\n+\t\t    \"%<this%> cannot be captured by reference\");\n+\t  cp_lexer_consume_token (parser->lexer);\n+\t  cp_lexer_consume_token (parser->lexer);\n+\t  continue;\n+\t}\n+\n       bool init_pack_expansion = false;\n       location_t ellipsis_loc = UNKNOWN_LOCATION;\n       if (cp_lexer_next_token_is (parser->lexer, CPP_ELLIPSIS))"}, {"sha": "1c49ab9f7d5cb379e19f0c721375a6cea5cda899", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22f6d174419e0649315049f5e2aec4b9a90e6ddc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22f6d174419e0649315049f5e2aec4b9a90e6ddc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=22f6d174419e0649315049f5e2aec4b9a90e6ddc", "patch": "@@ -1,4 +1,7 @@\n-2019-06-11  Marek Polacek  <polacek@redhat.com>\n+2019-06-12  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/66999 - 'this' captured by reference.\n+\t* g++.dg/cpp0x/lambda/lambda-this21.C: New test.\n \n \tPR c++/90825 - endless recursion when evaluating sizeof.\n \tPR c++/90832 - endless recursion when evaluating sizeof."}, {"sha": "538dd375362b42b00b63134827a4b02f75e9cbba", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-this21.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22f6d174419e0649315049f5e2aec4b9a90e6ddc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22f6d174419e0649315049f5e2aec4b9a90e6ddc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this21.C?ref=22f6d174419e0649315049f5e2aec4b9a90e6ddc", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/66999 - 'this' captured by reference.\n+// { dg-do compile { target c++11 } }\n+\n+struct X {\n+  void bar (int n)\n+    {\n+      auto l1 = [&this] { }; // { dg-error \".this. cannot be captured by reference\" }\n+      auto l2 = [=, &this] { }; // { dg-error \".this. cannot be captured by reference\" }\n+    }\n+};"}]}