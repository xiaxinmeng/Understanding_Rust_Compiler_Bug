{"sha": "db778c7022cc0e5b2b4100ccc7c2e52a0eaba3c0", "node_id": "C_kwDOANBUbNoAKGRiNzc4YzcwMjJjYzBlNWIyYjQxMDBjY2M3YzJlNTJhMGVhYmEzYzA", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2021-11-03T16:06:28Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-11-10T08:57:41Z"}, "message": "[Ada] Avoid warnings regarding rep clauses in generics\n\ngcc/ada/\n\n\t* repinfo.adb (List_Common_Type_Info, List_Object_Info): Add\n\tcheck for In_Generic_Scope.\n\t(List_Component_Layout): Check for known static values.\n\t* sem_ch13.adb (Check_Record_Representation_Clause): Add check\n\tfor In_Generic_Scope.", "tree": {"sha": "68c345942d1249f4d99b4fb2678ca3c269c6d507", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68c345942d1249f4d99b4fb2678ca3c269c6d507"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db778c7022cc0e5b2b4100ccc7c2e52a0eaba3c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db778c7022cc0e5b2b4100ccc7c2e52a0eaba3c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db778c7022cc0e5b2b4100ccc7c2e52a0eaba3c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db778c7022cc0e5b2b4100ccc7c2e52a0eaba3c0/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fc6b47ac69605297ade8ff79468eaa836d707a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fc6b47ac69605297ade8ff79468eaa836d707a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fc6b47ac69605297ade8ff79468eaa836d707a0"}], "stats": {"total": 35, "additions": 26, "deletions": 9}, "files": [{"sha": "a11057a1a4921ebdf8654e2d56acc3802baff287", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db778c7022cc0e5b2b4100ccc7c2e52a0eaba3c0/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db778c7022cc0e5b2b4100ccc7c2e52a0eaba3c0/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=db778c7022cc0e5b2b4100ccc7c2e52a0eaba3c0", "patch": "@@ -38,6 +38,7 @@ with Output;         use Output;\n with Osint.C;        use Osint.C;\n with Sem_Aux;        use Sem_Aux;\n with Sem_Eval;       use Sem_Eval;\n+with Sem_Util;\n with Sinfo;          use Sinfo;\n with Sinfo.Nodes;    use Sinfo.Nodes;\n with Sinfo.Utils;    use Sinfo.Utils;\n@@ -426,11 +427,14 @@ package body Repinfo is\n          end if;\n \n       --  Alignment is not always set for task, protected, and class-wide\n-      --  types.\n+      --  types. Representation aspects are not computed for types in a\n+      --  generic unit.\n \n       else\n          pragma Assert\n-           (Is_Concurrent_Type (Ent) or else Is_Class_Wide_Type (Ent));\n+           (Is_Concurrent_Type (Ent) or else\n+              Is_Class_Wide_Type (Ent) or else\n+              Sem_Util.In_Generic_Scope (Ent));\n       end if;\n    end List_Common_Type_Info;\n \n@@ -902,6 +906,13 @@ package body Repinfo is\n \n    procedure List_Object_Info (Ent : Entity_Id) is\n    begin\n+      --  The information has not been computed in a generic unit, so don't try\n+      --  to print it.\n+\n+      if Sem_Util.In_Generic_Scope (Ent) then\n+         return;\n+      end if;\n+\n       Write_Separator;\n \n       if List_Representation_Info_To_JSON then\n@@ -1176,13 +1187,17 @@ package body Repinfo is\n             Write_Str (\" range  \");\n          end if;\n \n-         Sbit := Starting_First_Bit + Fbit;\n+         if Known_Static_Normalized_First_Bit (Ent) then\n+            Sbit := Starting_First_Bit + Fbit;\n \n-         if Sbit >= SSU then\n-            Sbit := Sbit - SSU;\n-         end if;\n+            if Sbit >= SSU then\n+               Sbit := Sbit - SSU;\n+            end if;\n \n-         UI_Write (Sbit, Decimal);\n+            UI_Write (Sbit, Decimal);\n+         else\n+            Write_Unknown_Val;\n+         end if;\n \n          if List_Representation_Info_To_JSON then\n             Write_Line (\", \");"}, {"sha": "d63d60fb385fa3561c4c702668a55b5f39449cff", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db778c7022cc0e5b2b4100ccc7c2e52a0eaba3c0/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db778c7022cc0e5b2b4100ccc7c2e52a0eaba3c0/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=db778c7022cc0e5b2b4100ccc7c2e52a0eaba3c0", "patch": "@@ -12618,9 +12618,11 @@ package body Sem_Ch13 is\n       end if;\n \n       --  Skip the following warnings if overlap was detected; programmer\n-      --  should fix the errors first.\n+      --  should fix the errors first. Also skip the warnings for types in\n+      --  generics, because their representation information is not fully\n+      --  computed.\n \n-      if not Overlap_Detected then\n+      if not Overlap_Detected and then not In_Generic_Scope (Rectype) then\n          --  Check for record holes (gaps)\n \n          if Warn_On_Record_Holes then"}]}