{"sha": "3c2f40009aaa80a066044a129ac1e552d96215a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MyZjQwMDA5YWFhODBhMDY2MDQ0YTEyOWFjMWU1NTJkOTYyMTVhMQ==", "commit": {"author": {"name": "Stephane Carrez", "email": "Stephane.Carrez@worldnet.fr", "date": "2001-05-04T21:00:37Z"}, "committer": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2001-05-04T21:00:37Z"}, "message": "m68hc11.c (m68hc11_check_z_replacement): Take into account pre/post increment decrement for 68HC12.\n\n\t* config/m68hc11/m68hc11.c (m68hc11_check_z_replacement): Take\n\tinto account pre/post increment decrement for 68HC12.\n\tFix other problems in replacement and fix call to reg_mentioned_p.\n\nFrom-SVN: r41848", "tree": {"sha": "d464d3f6691c4e862764bcd5a3ffa40ff3c90e29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d464d3f6691c4e862764bcd5a3ffa40ff3c90e29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c2f40009aaa80a066044a129ac1e552d96215a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c2f40009aaa80a066044a129ac1e552d96215a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c2f40009aaa80a066044a129ac1e552d96215a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c2f40009aaa80a066044a129ac1e552d96215a1/comments", "author": null, "committer": null, "parents": [{"sha": "c5c2ca16770716668d1bfce4e1774a469b2dcf76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5c2ca16770716668d1bfce4e1774a469b2dcf76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5c2ca16770716668d1bfce4e1774a469b2dcf76"}], "stats": {"total": 56, "additions": 50, "deletions": 6}, "files": [{"sha": "6950db40390262ed76eb145fc7e20abfe21883d0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c2f40009aaa80a066044a129ac1e552d96215a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c2f40009aaa80a066044a129ac1e552d96215a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c2f40009aaa80a066044a129ac1e552d96215a1", "patch": "@@ -1,3 +1,9 @@\n+2001-05-04  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n+\n+\t* config/m68hc11/m68hc11.c (m68hc11_check_z_replacement): Take\n+\tinto account pre/post increment decrement for 68HC12.\n+\tFix other problems in replacement and fix call to reg_mentioned_p.\n+\n 2001-05-04  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n \n \t* config/m68hc11/larith.asm (L_regs_frame): New for _.frame."}, {"sha": "8aa5095ae4e39b36d42a8009b25cf9c612e36c9f", "filename": "gcc/config/m68hc11/m68hc11.c", "status": "modified", "additions": 44, "deletions": 6, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c2f40009aaa80a066044a129ac1e552d96215a1/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c2f40009aaa80a066044a129ac1e552d96215a1/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c?ref=3c2f40009aaa80a066044a129ac1e552d96215a1", "patch": "@@ -3851,6 +3851,7 @@ m68hc11_check_z_replacement (insn, info)\n   int this_insn_uses_ix;\n   int this_insn_uses_iy;\n   int this_insn_uses_z;\n+  int this_insn_uses_z_in_dst;\n   int this_insn_uses_d;\n   rtx body;\n   int z_dies_here;\n@@ -3954,10 +3955,13 @@ m68hc11_check_z_replacement (insn, info)\n \t{\n \t  if (!reg_mentioned_p (z_reg, src))\n \t    {\n-\t      if (insn == info->first)\n+              /* Z reg is used before being set.  Treat this as\n+                 a new sequence of Z register replacement.  */\n+\t      if (insn != info->first)\n \t\t{\n-\t\t  info->must_load_z = 0;\n+                  return 0;\n \t\t}\n+              info->must_load_z = 0;\n \t    }\n \t  info->z_set_count++;\n \t  info->z_value = src;\n@@ -3977,9 +3981,23 @@ m68hc11_check_z_replacement (insn, info)\n \n       /* If z is used as an address operand (like (MEM (reg z))),\n          we can't replace it with d.  */\n-      if (this_insn_uses_z && !Z_REG_P (src))\n+      if (this_insn_uses_z && !Z_REG_P (src)\n+          && !(m68hc11_arith_operator (src, GET_MODE (src))\n+               && Z_REG_P (XEXP (src, 0))\n+               && !reg_mentioned_p (z_reg, XEXP (src, 1))\n+               && insn == info->first\n+               && dead_register_here (insn, d_reg)))\n \tinfo->can_use_d = 0;\n-      this_insn_uses_z |= reg_mentioned_p (z_reg, dst);\n+\n+      this_insn_uses_z_in_dst = reg_mentioned_p (z_reg, dst);\n+      if (TARGET_M6812 && !z_dies_here\n+          && ((this_insn_uses_z && side_effects_p (src))\n+              || (this_insn_uses_z_in_dst && side_effects_p (dst))))\n+        {\n+          info->need_save_z = 1;\n+          info->z_set_count++;\n+        }\n+      this_insn_uses_z |= this_insn_uses_z_in_dst;\n \n       if (this_insn_uses_z && this_insn_uses_ix && this_insn_uses_iy)\n \t{\n@@ -3996,6 +4014,9 @@ m68hc11_check_z_replacement (insn, info)\n \t  return 0;\n \t}\n \n+      if (this_insn_uses_ix && X_REG_P (dst) && GET_MODE (dst) == SImode)\n+        info->can_use_d = 0;\n+\n       if (info->x_used == 0 && this_insn_uses_ix)\n \t{\n \t  if (info->y_used)\n@@ -4058,7 +4079,7 @@ m68hc11_check_z_replacement (insn, info)\n \t      return 0;\n \t    }\n \t  info->x_used = 1;\n-\t  if (z_dies_here && !reg_mentioned_p (src, ix_reg)\n+\t  if (z_dies_here && !reg_mentioned_p (ix_reg, src)\n \t      && GET_CODE (dst) == REG && REGNO (dst) == HARD_X_REGNUM)\n \t    {\n \t      info->need_save_z = 0;\n@@ -4069,6 +4090,13 @@ m68hc11_check_z_replacement (insn, info)\n \t      info->must_restore_reg = 0;\n \t      return 0;\n \t    }\n+          if (rtx_equal_p (src, z_reg) && rtx_equal_p (dst, ix_reg))\n+            {\n+              info->regno = HARD_X_REGNUM;\n+              info->must_restore_reg = 0;\n+              info->must_save_reg = 0;\n+              return 0;\n+            }\n \t}\n       if (info->y_used == 0 && this_insn_uses_iy)\n \t{\n@@ -4129,7 +4157,7 @@ m68hc11_check_z_replacement (insn, info)\n \t      return 0;\n \t    }\n \t  info->y_used = 1;\n-\t  if (z_dies_here && !reg_mentioned_p (src, iy_reg)\n+\t  if (z_dies_here && !reg_mentioned_p (iy_reg, src)\n \t      && GET_CODE (dst) == REG && REGNO (dst) == HARD_Y_REGNUM)\n \t    {\n \t      info->need_save_z = 0;\n@@ -4140,6 +4168,13 @@ m68hc11_check_z_replacement (insn, info)\n \t      info->must_restore_reg = 0;\n \t      return 0;\n \t    }\n+          if (rtx_equal_p (src, z_reg) && rtx_equal_p (dst, iy_reg))\n+            {\n+              info->regno = HARD_Y_REGNUM;\n+              info->must_restore_reg = 0;\n+              info->must_save_reg = 0;\n+              return 0;\n+            }\n \t}\n       if (z_dies_here)\n \t{\n@@ -4193,6 +4228,9 @@ m68hc11_check_z_replacement (insn, info)\n \t      if (Z_REG_P (dst))\n \t\tinfo->z_set_count++;\n \t    }\n+          if (TARGET_M6812 && uses_z && side_effects_p (x))\n+            info->need_save_z = 1;\n+\n \t  if (z_clobber)\n \t    info->need_save_z = 0;\n \t}"}]}