{"sha": "9ef0b98eb62b22e291e4cca4537d64ea2b795c14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVmMGI5OGViNjJiMjJlMjkxZTRjY2E0NTM3ZDY0ZWEyYjc5NWMxNA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-06-09T12:17:17Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-06-09T12:17:17Z"}, "message": "trans.c (gfc_allocate_array_with_status): Mark error path as unlikely.\n\n2011-06-09  Richard Guenther  <rguenther@suse.de>\n\n\t* trans.c (gfc_allocate_array_with_status): Mark error path\n\tas unlikely.\n\nFrom-SVN: r174842", "tree": {"sha": "9a66317140d8580efd8ced6fabbb4349946773d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a66317140d8580efd8ced6fabbb4349946773d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ef0b98eb62b22e291e4cca4537d64ea2b795c14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef0b98eb62b22e291e4cca4537d64ea2b795c14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ef0b98eb62b22e291e4cca4537d64ea2b795c14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef0b98eb62b22e291e4cca4537d64ea2b795c14/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dd27d2fadd466c13f64ca412cf35e3691285d75e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd27d2fadd466c13f64ca412cf35e3691285d75e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd27d2fadd466c13f64ca412cf35e3691285d75e"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "dad51bf1a22ec22d9448ed490a277cc27708b308", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef0b98eb62b22e291e4cca4537d64ea2b795c14/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef0b98eb62b22e291e4cca4537d64ea2b795c14/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9ef0b98eb62b22e291e4cca4537d64ea2b795c14", "patch": "@@ -1,3 +1,8 @@\n+2011-06-09  Richard Guenther  <rguenther@suse.de>\n+\n+\t* trans.c (gfc_allocate_array_with_status): Mark error path\n+\tas unlikely.\n+\n 2011-06-08  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/18918"}, {"sha": "ee35387a7d9dd62f13d89f27882de31b7c3cdbd5", "filename": "gcc/fortran/trans.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef0b98eb62b22e291e4cca4537d64ea2b795c14/gcc%2Ffortran%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef0b98eb62b22e291e4cca4537d64ea2b795c14/gcc%2Ffortran%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.c?ref=9ef0b98eb62b22e291e4cca4537d64ea2b795c14", "patch": "@@ -697,8 +697,9 @@ gfc_allocate_array_with_status (stmtblock_t * block, tree mem, tree size,\n \n   /* Create a variable to hold the result.  */\n   res = gfc_create_var (type, NULL);\n-  null_mem = fold_build2_loc (input_location, EQ_EXPR, boolean_type_node, mem,\n-\t\t\t      build_int_cst (type, 0));\n+  null_mem = gfc_unlikely (fold_build2_loc (input_location, NE_EXPR,\n+\t\t\t\t\t    boolean_type_node, mem,\n+\t\t\t\t\t    build_int_cst (type, 0)));\n \n   /* If mem is NULL, we call gfc_allocate_with_status.  */\n   gfc_start_block (&alloc_block);\n@@ -751,7 +752,7 @@ gfc_allocate_array_with_status (stmtblock_t * block, tree mem, tree size,\n     }\n \n   tmp = fold_build3_loc (input_location, COND_EXPR, void_type_node, null_mem,\n-\t\t\t alloc, error);\n+\t\t\t error, alloc);\n   gfc_add_expr_to_block (block, tmp);\n \n   return res;"}]}