{"sha": "7e5a3c96db2383a41587d6525b4ac9ea1fafe091", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U1YTNjOTZkYjIzODNhNDE1ODdkNjUyNWI0YWM5ZWExZmFmZTA5MQ==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2016-05-23T14:54:04Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2016-05-23T14:54:04Z"}, "message": "[PR libffi/65567] libffi: Fix, and simply libffi_feature_test\n\n\tlibffi/\n\tPR libffi/65567\n\t* testsuite/lib/libffi.exp (libffi_feature_test): Fix, and simply.\n\nFrom-SVN: r236594", "tree": {"sha": "45ac92ade53e946016f64c4b5437c518e71aeede", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45ac92ade53e946016f64c4b5437c518e71aeede"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e5a3c96db2383a41587d6525b4ac9ea1fafe091", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e5a3c96db2383a41587d6525b4ac9ea1fafe091", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e5a3c96db2383a41587d6525b4ac9ea1fafe091", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e5a3c96db2383a41587d6525b4ac9ea1fafe091/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f397602394168dffc7a14cc116498549847098f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f397602394168dffc7a14cc116498549847098f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f397602394168dffc7a14cc116498549847098f9"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "8245f5b39f8a02a93eb58286a52ff9eee2727d0c", "filename": "libffi/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e5a3c96db2383a41587d6525b4ac9ea1fafe091/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e5a3c96db2383a41587d6525b4ac9ea1fafe091/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=7e5a3c96db2383a41587d6525b4ac9ea1fafe091", "patch": "@@ -1,3 +1,8 @@\n+2016-05-23  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR libffi/65567\n+\t* testsuite/lib/libffi.exp (libffi_feature_test): Fix, and simply.\n+\n 2016-03-17  Andreas Schwab  <schwab@suse.de>\n \n \t* src/aarch64/ffitarget.h (FFI_SIZEOF_JAVA_RAW) [__ILP32__]:"}, {"sha": "a0f6ab397ee8e134ed3ba82a920e4ace1fd9529d", "filename": "libffi/testsuite/lib/libffi.exp", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e5a3c96db2383a41587d6525b4ac9ea1fafe091/libffi%2Ftestsuite%2Flib%2Flibffi.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e5a3c96db2383a41587d6525b4ac9ea1fafe091/libffi%2Ftestsuite%2Flib%2Flibffi.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2Flib%2Flibffi.exp?ref=7e5a3c96db2383a41587d6525b4ac9ea1fafe091", "patch": "@@ -227,20 +227,21 @@ proc libffi_target_compile { source dest type options } {\n \n # TEST should be a preprocessor condition.  Returns true if it holds.\n proc libffi_feature_test { test } {\n-    set src \"ffitest.c\"\n+    set src \"ffitest[pid].c\"\n \n     set f [open $src \"w\"]\n     puts $f \"#include <ffi.h>\"\n     puts $f $test\n-    puts $f \"xyzzy\"\n+    puts $f \"/* OK */\"\n+    puts $f \"#else\"\n+    puts $f \"# error Failed $test\"\n     puts $f \"#endif\"\n     close $f\n \n-    set lines [libffi_target_compile $src \"\" \"preprocess\" \"\"]\n+    set lines [libffi_target_compile $src /dev/null assembly \"\"]\n     file delete $src\n \n-    set last [lindex [split $lines] end]\n-    return [regexp -- \"xyzzy\" $last]\n+    return [string match \"\" $lines]\n }\n \n # Utility routines."}]}