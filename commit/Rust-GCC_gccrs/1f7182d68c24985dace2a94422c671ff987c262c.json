{"sha": "1f7182d68c24985dace2a94422c671ff987c262c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY3MTgyZDY4YzI0OTg1ZGFjZTJhOTQ0MjJjNjcxZmY5ODdjMjYyYw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-07-14T11:25:11Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-07-15T15:25:42Z"}, "message": "libstdc++: Add noexcept to __replacement_assert [PR101429]\n\nThis results in slightly smaller code when assertions are enabled when\neither using Clang (because it adds code to call std::terminate when\npotentially-throwing functions are called in a noexcept function) or a\nfreestanding or non-verbose build (because it doesn't use printf).\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/101429\n\t* include/bits/c++config (__replacement_assert): Add noexcept.\n\t[!_GLIBCXX_VERBOSE] (__glibcxx_assert_impl): Use __builtin_trap\n\tinstead of __replacement_assert.", "tree": {"sha": "906ff18cd1947bc0f2d43d269a8257d73f4e460c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/906ff18cd1947bc0f2d43d269a8257d73f4e460c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f7182d68c24985dace2a94422c671ff987c262c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f7182d68c24985dace2a94422c671ff987c262c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f7182d68c24985dace2a94422c671ff987c262c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f7182d68c24985dace2a94422c671ff987c262c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad5f8ac1d2f2dc92d43663243b52f9e9eb3cf7c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad5f8ac1d2f2dc92d43663243b52f9e9eb3cf7c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad5f8ac1d2f2dc92d43663243b52f9e9eb3cf7c0"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "69ace386dd7af0225e59b3f3bac8bc3887500b5a", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f7182d68c24985dace2a94422c671ff987c262c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f7182d68c24985dace2a94422c671ff987c262c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=1f7182d68c24985dace2a94422c671ff987c262c", "patch": "@@ -500,6 +500,7 @@ namespace std\n // Assert.\n #if defined(_GLIBCXX_ASSERTIONS) \\\n   || defined(_GLIBCXX_PARALLEL) || defined(_GLIBCXX_PARALLEL_ASSERTIONS)\n+# if _GLIBCXX_HOSTED && _GLIBCXX_VERBOSE\n namespace std\n {\n   // Avoid the use of assert, because we're trying to keep the <cassert>\n@@ -508,6 +509,7 @@ namespace std\n   inline void\n   __replacement_assert(const char* __file, int __line,\n \t\t       const char* __function, const char* __condition)\n+  _GLIBCXX_NOEXCEPT\n   {\n     __builtin_printf(\"%s:%d: %s: Assertion '%s' failed.\\n\", __file, __line,\n \t\t     __function, __condition);\n@@ -517,10 +519,18 @@ namespace std\n #define __glibcxx_assert_impl(_Condition)\t\t\t       \\\n   if (__builtin_expect(!bool(_Condition), false))\t\t       \\\n   {\t\t\t\t\t\t\t\t       \\\n-    __glibcxx_constexpr_assert(_Condition);\t\t\t       \\\n+    __glibcxx_constexpr_assert(false);\t\t\t\t       \\\n     std::__replacement_assert(__FILE__, __LINE__, __PRETTY_FUNCTION__, \\\n \t\t\t      #_Condition);\t\t\t       \\\n   }\n+# else // ! VERBOSE\n+# define __glibcxx_assert_impl(_Condition)\t\t\\\n+  if (__builtin_expect(!bool(_Condition), false))\t\\\n+  {\t\t\t\t\t\t\t\\\n+    __glibcxx_constexpr_assert(false);\t\t\t\\\n+    __builtin_abort();\t\t\t\t\t\\\n+  }\n+#endif\n #endif\n \n #if defined(_GLIBCXX_ASSERTIONS)"}]}