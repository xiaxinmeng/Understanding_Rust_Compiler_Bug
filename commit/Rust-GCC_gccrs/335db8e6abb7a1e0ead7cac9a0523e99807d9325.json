{"sha": "335db8e6abb7a1e0ead7cac9a0523e99807d9325", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM1ZGI4ZTZhYmI3YTFlMGVhZDdjYWM5YTA1MjNlOTk4MDdkOTMyNQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2012-08-17T09:54:51Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2012-08-17T09:54:51Z"}, "message": "iq2000.md (cbranchsi4): Remove mode from comparison and label.\n\n\t* config/iq2000/iq2000.md (cbranchsi4): Remove mode from\n\tcomparison and label.\n\t(branch_zero): Likewise.\n\t(branch_zero_inverted): Likewise.\n\t(branch_equality): Likewise.\n\t(branch_equality_inverted): Likewise.\n\t(extend-and-compare): Disable until reload issues can be\n\tresolved.\n\t* config/iq2000/iq2000.c (gen_conditional_branch): Use VOIDmode\n\tfor comparison.\n\t(iq2000_function_arg_advance): Remove CONST_CAST2.\n\nFrom-SVN: r190476", "tree": {"sha": "2d9d878dd742d3549f24c06cab4427b86e6100ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d9d878dd742d3549f24c06cab4427b86e6100ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/335db8e6abb7a1e0ead7cac9a0523e99807d9325", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/335db8e6abb7a1e0ead7cac9a0523e99807d9325", "html_url": "https://github.com/Rust-GCC/gccrs/commit/335db8e6abb7a1e0ead7cac9a0523e99807d9325", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/335db8e6abb7a1e0ead7cac9a0523e99807d9325/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f9b14ffa3cefe2c35111fa9f067dab4e92dcdc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f9b14ffa3cefe2c35111fa9f067dab4e92dcdc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f9b14ffa3cefe2c35111fa9f067dab4e92dcdc8"}], "stats": {"total": 52, "additions": 32, "deletions": 20}, "files": [{"sha": "eea212fb8048de8035ae51f8186927d7517a7d8b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/335db8e6abb7a1e0ead7cac9a0523e99807d9325/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/335db8e6abb7a1e0ead7cac9a0523e99807d9325/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=335db8e6abb7a1e0ead7cac9a0523e99807d9325", "patch": "@@ -61,6 +61,18 @@\n \n 2012-08-17  Nick Clifton  <nickc@redhat.com>\n \n+\t* config/iq2000/iq2000.md (cbranchsi4): Remove mode from\n+\tcomparison and label.\n+\t(branch_zero): Likewise.\n+\t(branch_zero_inverted): Likewise.\n+\t(branch_equality): Likewise.\n+\t(branch_equality_inverted): Likewise.\n+\t(extend-and-compare): Disable until reload issues can be\n+\tresolved.\n+\t* config/iq2000/iq2000.c (gen_conditional_branch): Use VOIDmode\n+\tfor comparison.\n+\t(iq2000_function_arg_advance): Remove CONST_CAST2.\n+\n \t* config/mep/t-mep (mep-pragma.o): Use $(COMPILER) to compile\n \tmep-pragma.c.\n "}, {"sha": "ab55a154f06a197139b773a3d60d435412531b26", "filename": "gcc/config/iq2000/iq2000.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/335db8e6abb7a1e0ead7cac9a0523e99807d9325/gcc%2Fconfig%2Fiq2000%2Fiq2000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/335db8e6abb7a1e0ead7cac9a0523e99807d9325/gcc%2Fconfig%2Fiq2000%2Fiq2000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fiq2000%2Fiq2000.c?ref=335db8e6abb7a1e0ead7cac9a0523e99807d9325", "patch": "@@ -1076,7 +1076,7 @@ gen_conditional_branch (rtx operands[], enum machine_mode mode)\n   emit_jump_insn (gen_rtx_SET (VOIDmode, pc_rtx,\n \t\t\t       gen_rtx_IF_THEN_ELSE (VOIDmode,\n \t\t\t\t\t\t     gen_rtx_fmt_ee (test_code,\n-\t\t\t\t\t\t\t\t     mode,\n+\t\t\t\t\t\t\t\t     VOIDmode,\n \t\t\t\t\t\t\t\t     cmp0, cmp1),\n \t\t\t\t\t\t     label1, label2)));\n }\n@@ -1140,7 +1140,7 @@ iq2000_function_arg_advance (cumulative_args_t cum_v, enum machine_mode mode,\n \t       \"function_adv({gp reg found = %d, arg # = %2d, words = %2d}, %4s, \",\n \t       cum->gp_reg_found, cum->arg_number, cum->arg_words,\n \t       GET_MODE_NAME (mode));\n-      fprintf (stderr, \"%p\", CONST_CAST2 (void *, const_tree,  type));\n+      fprintf (stderr, \"%p\", type);\n       fprintf (stderr, \", %d )\\n\\n\", named);\n     }\n "}, {"sha": "59a97d42b0a5291eec67632c02d8702b3892aff2", "filename": "gcc/config/iq2000/iq2000.md", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/335db8e6abb7a1e0ead7cac9a0523e99807d9325/gcc%2Fconfig%2Fiq2000%2Fiq2000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/335db8e6abb7a1e0ead7cac9a0523e99807d9325/gcc%2Fconfig%2Fiq2000%2Fiq2000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fiq2000%2Fiq2000.md?ref=335db8e6abb7a1e0ead7cac9a0523e99807d9325", "patch": "@@ -1001,10 +1001,10 @@\n (define_expand \"cbranchsi4\"\n   [(set (pc)\n         (if_then_else\n-         (match_operator:SI 0 \"ordered_comparison_operator\"\n-                            [(match_operand:SI 1 \"register_operand\")\n-                             (match_operand:SI 2 \"reg_or_const_operand\")])\n-\t (label_ref (match_operand:SI 3 \"\"))\n+         (match_operator 0 \"ordered_comparison_operator\"\n+\t\t\t [(match_operand:SI 1 \"register_operand\")\n+\t\t\t  (match_operand:SI 2 \"reg_or_const_operand\")])\n+\t (label_ref (match_operand 3 \"\"))\n \t (pc)))]\n   \"\"\n   \"\n@@ -1019,9 +1019,9 @@\n (define_insn \"branch_zero\"\n   [(set (pc)\n \t(if_then_else\n-         (match_operator:SI 0 \"cmp_op\"\n-\t\t\t    [(match_operand:SI 2 \"register_operand\" \"d\")\n-\t\t\t     (const_int 0)])\n+         (match_operator 0 \"cmp_op\"\n+\t\t\t [(match_operand:SI 2 \"register_operand\" \"d\")\n+\t\t\t  (const_int 0)])\n         (label_ref (match_operand 1 \"\" \"\"))\n         (pc)))]\n   \"\"\n@@ -1040,9 +1040,9 @@\n (define_insn \"branch_zero_inverted\"\n   [(set (pc)\n \t(if_then_else\n-         (match_operator:SI 0 \"cmp_op\"\n-\t\t            [(match_operand:SI 2 \"register_operand\" \"d\")\n-\t\t\t     (const_int 0)])\n+         (match_operator 0 \"cmp_op\"\n+\t\t\t [(match_operand:SI 2 \"register_operand\" \"d\")\n+\t\t\t  (const_int 0)])\n         (pc)\n         (label_ref (match_operand 1 \"\" \"\"))))]\n   \"\"\n@@ -1063,9 +1063,9 @@\n (define_insn \"branch_equality\"\n   [(set (pc)\n \t(if_then_else\n-         (match_operator:SI 0 \"equality_op\"\n-\t\t   \t    [(match_operand:SI 2 \"register_operand\" \"d\")\n-\t\t\t     (match_operand:SI 3 \"register_operand\" \"d\")])\n+         (match_operator 0 \"equality_op\"\n+\t\t\t [(match_operand:SI 2 \"register_operand\" \"d\")\n+\t\t\t  (match_operand:SI 3 \"register_operand\" \"d\")])\n          (label_ref (match_operand 1 \"\" \"\"))\n          (pc)))]\n   \"\"\n@@ -1084,9 +1084,9 @@\n (define_insn \"branch_equality_inverted\"\n   [(set (pc)\n \t(if_then_else\n-         (match_operator:SI 0 \"equality_op\"\n-\t\t   \t    [(match_operand:SI 2 \"register_operand\" \"d\")\n-\t\t\t     (match_operand:SI 3 \"register_operand\" \"d\")])\n+         (match_operator 0 \"equality_op\"\n+\t\t\t [(match_operand:SI 2 \"register_operand\" \"d\")\n+\t\t\t  (match_operand:SI 3 \"register_operand\" \"d\")])\n          (pc)\n          (label_ref (match_operand 1 \"\" \"\"))))]\n   \"\"\n@@ -1145,7 +1145,7 @@\n \t     (const_int 0))\n \t (match_operand 2 \"pc_or_label_operand\" \"\")\n \t (match_operand 3 \"pc_or_label_operand\" \"\")))]\n-  \"\"\n+  \"0\"\n   \"bb%A2\\\\t%0(31-%1),%P2%P3\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"type\" \"branch\")])\n@@ -1159,7 +1159,7 @@\n \t     (const_int 0))\n \t (match_operand 2 \"pc_or_label_operand\" \"\")\n \t (match_operand 3 \"pc_or_label_operand\" \"\")))]\n-  \"\"\n+  \"0\"\n   \"bb%A3\\\\t%0(31-%1),%P2%P3\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"type\" \"branch\")])"}]}