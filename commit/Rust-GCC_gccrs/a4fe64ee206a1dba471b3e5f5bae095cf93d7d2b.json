{"sha": "a4fe64ee206a1dba471b3e5f5bae095cf93d7d2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRmZTY0ZWUyMDZhMWRiYTQ3MWIzZTVmNWJhZTA5NWNmOTNkN2QyYg==", "commit": {"author": {"name": "Alexander Monakov", "email": "amonakov@ispras.ru", "date": "2017-06-07T21:51:51Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2017-06-07T21:51:51Z"}, "message": "doc: update x86 -mcx16 option description\n\n\t* doc/invoke.texi (mcx16): Rewrite.\n\nFrom-SVN: r248995", "tree": {"sha": "493913ef5982297470aee5150b966d2f84367480", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/493913ef5982297470aee5150b966d2f84367480"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4fe64ee206a1dba471b3e5f5bae095cf93d7d2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4fe64ee206a1dba471b3e5f5bae095cf93d7d2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4fe64ee206a1dba471b3e5f5bae095cf93d7d2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4fe64ee206a1dba471b3e5f5bae095cf93d7d2b/comments", "author": {"login": "amonakov", "id": 1997391, "node_id": "MDQ6VXNlcjE5OTczOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1997391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amonakov", "html_url": "https://github.com/amonakov", "followers_url": "https://api.github.com/users/amonakov/followers", "following_url": "https://api.github.com/users/amonakov/following{/other_user}", "gists_url": "https://api.github.com/users/amonakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/amonakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amonakov/subscriptions", "organizations_url": "https://api.github.com/users/amonakov/orgs", "repos_url": "https://api.github.com/users/amonakov/repos", "events_url": "https://api.github.com/users/amonakov/events{/privacy}", "received_events_url": "https://api.github.com/users/amonakov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aa5493116beaa24b57cc92f0513613358103ed13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa5493116beaa24b57cc92f0513613358103ed13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa5493116beaa24b57cc92f0513613358103ed13"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "efe7d11a5e5725caebb21046ca06b328abd69db4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4fe64ee206a1dba471b3e5f5bae095cf93d7d2b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4fe64ee206a1dba471b3e5f5bae095cf93d7d2b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a4fe64ee206a1dba471b3e5f5bae095cf93d7d2b", "patch": "@@ -1,3 +1,7 @@\n+2017-06-07  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\t* doc/invoke.texi (mcx16): Rewrite.\n+\n 2017-06-07  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/predicates.md (rs6000_nonimmediate_operand): Delete."}, {"sha": "c1168823af7765d5e8dddefd86f3cc4e1ad3863b", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4fe64ee206a1dba471b3e5f5bae095cf93d7d2b/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4fe64ee206a1dba471b3e5f5bae095cf93d7d2b/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=a4fe64ee206a1dba471b3e5f5bae095cf93d7d2b", "patch": "@@ -25262,13 +25262,12 @@ This option instructs GCC to use 128-bit AVX instructions instead of\n \n @item -mcx16\n @opindex mcx16\n-This option enables GCC to generate @code{CMPXCHG16B} instructions.\n-@code{CMPXCHG16B} allows for atomic operations on 128-bit double quadword\n-(or oword) data types.  \n-This is useful for high-resolution counters that can be updated\n-by multiple processors (or cores).  This instruction is generated as part of\n-atomic built-in functions: see @ref{__sync Builtins} or\n-@ref{__atomic Builtins} for details.\n+This option enables GCC to generate @code{CMPXCHG16B} instructions in 64-bit\n+code to implement compare-and-exchange operations on 16-byte aligned 128-bit\n+objects.  This is useful for atomic updates of data structures exceeding one\n+machine word in size.  The compiler uses this instruction to implement\n+@ref{__sync Builtins}.  However, for @ref{__atomic Builtins} operating on\n+128-bit integers, a library call is always used.\n \n @item -msahf\n @opindex msahf"}]}