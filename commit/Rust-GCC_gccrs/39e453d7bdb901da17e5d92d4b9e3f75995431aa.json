{"sha": "39e453d7bdb901da17e5d92d4b9e3f75995431aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzllNDUzZDdiZGI5MDFkYTE3ZTVkOTJkNGI5ZTNmNzU5OTU0MzFhYQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2004-01-27T21:09:59Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2004-01-27T21:09:59Z"}, "message": "rs6000.md (save_stack_nonlocal): Use Pmode instead of computing wmode.\n\n        * config/rs6000/rs6000.md (save_stack_nonlocal): Use Pmode instead\n        of computing wmode.\n        (restore_stack_nonlocal): Same.\n\nFrom-SVN: r76750", "tree": {"sha": "064fae55b182a2655ebb17654b8f01cdff5275d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/064fae55b182a2655ebb17654b8f01cdff5275d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39e453d7bdb901da17e5d92d4b9e3f75995431aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39e453d7bdb901da17e5d92d4b9e3f75995431aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39e453d7bdb901da17e5d92d4b9e3f75995431aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39e453d7bdb901da17e5d92d4b9e3f75995431aa/comments", "author": null, "committer": null, "parents": [{"sha": "0b5634201af3632f5e6a575aef407093774b7f21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b5634201af3632f5e6a575aef407093774b7f21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b5634201af3632f5e6a575aef407093774b7f21"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "a56d962854c215ff3d724a5b27bddb2440b2ad80", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39e453d7bdb901da17e5d92d4b9e3f75995431aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39e453d7bdb901da17e5d92d4b9e3f75995431aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39e453d7bdb901da17e5d92d4b9e3f75995431aa", "patch": "@@ -1,3 +1,9 @@\n+2004-01-27  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.md (save_stack_nonlocal): Use Pmode instead\n+\tof computing wmode.\n+\t(restore_stack_nonlocal): Same.\n+\n 2004-01-27  Devang Patel <dpatel@apple.com>\n \t\n \t* Makefile.in (dwarf2out.o): Depend on input.h"}, {"sha": "5b6988c667e851a3a89976aebe6edc91d507ac5c", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39e453d7bdb901da17e5d92d4b9e3f75995431aa/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39e453d7bdb901da17e5d92d4b9e3f75995431aa/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=39e453d7bdb901da17e5d92d4b9e3f75995431aa", "patch": "@@ -9899,12 +9899,11 @@\n {\n   rtx temp = gen_reg_rtx (Pmode);\n   int units_per_word = (TARGET_32BIT) ? 4 : 8;\n-  enum machine_mode wmode = (TARGET_32BIT) ? SImode : word_mode;\n \n   /* Copy the backchain to the first word, sp to the second.  */\n   emit_move_insn (temp, gen_rtx_MEM (Pmode, operands[1]));\n-  emit_move_insn (adjust_address_nv (operands[0], wmode, 0), temp);\n-  emit_move_insn (adjust_address_nv (operands[0], wmode, units_per_word),\n+  emit_move_insn (adjust_address_nv (operands[0], Pmode, 0), temp);\n+  emit_move_insn (adjust_address_nv (operands[0], Pmode, units_per_word),\n \t\t  operands[1]);\n   DONE;\n }\")\n@@ -9917,13 +9916,12 @@\n {\n   rtx temp = gen_reg_rtx (Pmode);\n   int units_per_word = (TARGET_32BIT) ? 4 : 8;\n-  enum machine_mode wmode = (TARGET_32BIT) ? SImode : word_mode;\n \n   /* Restore the backchain from the first word, sp from the second.  */\n   emit_move_insn (temp,\n-\t\t  adjust_address_nv (operands[1], wmode, 0));\n+\t\t  adjust_address_nv (operands[1], Pmode, 0));\n   emit_move_insn (operands[0],\n-\t\t  adjust_address_nv (operands[1], wmode, units_per_word));\n+\t\t  adjust_address_nv (operands[1], Pmode, units_per_word));\n   emit_move_insn (gen_rtx_MEM (Pmode, operands[0]), temp);\n   DONE;\n }\")"}]}