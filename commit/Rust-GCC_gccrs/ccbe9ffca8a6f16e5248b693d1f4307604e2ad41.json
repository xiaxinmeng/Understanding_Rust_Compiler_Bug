{"sha": "ccbe9ffca8a6f16e5248b693d1f4307604e2ad41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NiZTlmZmNhOGE2ZjE2ZTUyNDhiNjkzZDFmNDMwNzYwNGUyYWQ0MQ==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-07-26T01:58:29Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-07-26T01:58:29Z"}, "message": "Oops.\n\nFrom-SVN: r12566", "tree": {"sha": "f1b744035803bd87688bd750a7b76805880a1b6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1b744035803bd87688bd750a7b76805880a1b6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccbe9ffca8a6f16e5248b693d1f4307604e2ad41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccbe9ffca8a6f16e5248b693d1f4307604e2ad41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccbe9ffca8a6f16e5248b693d1f4307604e2ad41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccbe9ffca8a6f16e5248b693d1f4307604e2ad41/comments", "author": null, "committer": null, "parents": [{"sha": "26657dcad0efe3486a135faf998fe4ca2ac47fa1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26657dcad0efe3486a135faf998fe4ca2ac47fa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26657dcad0efe3486a135faf998fe4ca2ac47fa1"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "b7753e7639d039e7a3fc2fa0b0e3eddfa8fc7c91", "filename": "gcc/except.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccbe9ffca8a6f16e5248b693d1f4307604e2ad41/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccbe9ffca8a6f16e5248b693d1f4307604e2ad41/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=ccbe9ffca8a6f16e5248b693d1f4307604e2ad41", "patch": "@@ -437,6 +437,7 @@ emit_throw ()\n #ifdef JUMP_TO_THROW\n   emit_indirect_jump (throw_libfunc);\n #else\n+  SYMBOL_REF_USED (throw_libfunc) = 1;\n   emit_library_call (throw_libfunc, 0, VOIDmode, 0);\n #endif\n   throw_used = 1;"}]}