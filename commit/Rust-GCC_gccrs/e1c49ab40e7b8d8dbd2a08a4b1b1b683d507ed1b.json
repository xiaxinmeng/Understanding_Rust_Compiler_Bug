{"sha": "e1c49ab40e7b8d8dbd2a08a4b1b1b683d507ed1b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFjNDlhYjQwZTdiOGQ4ZGJkMmEwOGE0YjFiMWI2ODNkNTA3ZWQxYg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-08-03T00:07:52Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-08-03T00:07:52Z"}, "message": "toplev.h (errorcount): Declare.\n\n\t* toplev.h (errorcount): Declare.\n\t(warningcount): Likewise.\n\t(sorrycount): Likewise.\n\t* c-lex.c (errorcount): Don't declare.\n\t* dwarf2out.c (errorcount): Don't declare.\n\nFrom-SVN: r28426", "tree": {"sha": "ef55dece2bc0db5a7a70ef8cdffe15a2454d21ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef55dece2bc0db5a7a70ef8cdffe15a2454d21ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1c49ab40e7b8d8dbd2a08a4b1b1b683d507ed1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1c49ab40e7b8d8dbd2a08a4b1b1b683d507ed1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1c49ab40e7b8d8dbd2a08a4b1b1b683d507ed1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1c49ab40e7b8d8dbd2a08a4b1b1b683d507ed1b/comments", "author": null, "committer": null, "parents": [{"sha": "7aae67a28165d6cdfc5aa106ea7b1fb0fd61b2a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7aae67a28165d6cdfc5aa106ea7b1fb0fd61b2a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7aae67a28165d6cdfc5aa106ea7b1fb0fd61b2a1"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "58d47e3ca2001aaf180eef015af182ad197bbc67", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1c49ab40e7b8d8dbd2a08a4b1b1b683d507ed1b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1c49ab40e7b8d8dbd2a08a4b1b1b683d507ed1b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e1c49ab40e7b8d8dbd2a08a4b1b1b683d507ed1b", "patch": "@@ -1,3 +1,11 @@\n+Mon Aug  2 17:10:24 1999  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* toplev.h (errorcount): Declare.\n+\t(warningcount): Likewise.\n+\t(sorrycount): Likewise.\n+\t* c-lex.c (errorcount): Don't declare.\n+\t* dwarf2out.c (errorcount): Don't declare.\n+\n Mon Aug  2 17:02:08 1999  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* config/libgloss.h: Add a note discouraging use with ELF."}, {"sha": "049d5b27404332bb180220a4374f1b9b4990d296", "filename": "gcc/c-lex.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1c49ab40e7b8d8dbd2a08a4b1b1b683d507ed1b/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1c49ab40e7b8d8dbd2a08a4b1b1b683d507ed1b/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=e1c49ab40e7b8d8dbd2a08a4b1b1b683d507ed1b", "patch": "@@ -49,7 +49,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"cpplib.h\"\n extern cpp_reader  parse_in;\n extern cpp_options parse_options;\n-extern int errorcount;\n #else\n /* Stream for reading from the input file.  */\n FILE *finput;"}, {"sha": "a1e8ead9e89e71faedb3cafb91550481693a36fb", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1c49ab40e7b8d8dbd2a08a4b1b1b683d507ed1b/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1c49ab40e7b8d8dbd2a08a4b1b1b683d507ed1b/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=e1c49ab40e7b8d8dbd2a08a4b1b1b683d507ed1b", "patch": "@@ -8374,7 +8374,6 @@ gen_subprogram_die (decl, context_die)\n \t     we should detect this case and ignore it.  For now, if we have\n \t     already reported an error, any error at all, then assume that\n \t     we got here because of a input error, not a dwarf2 bug.  */\n-\t  extern int errorcount;\n \t  if (errorcount)\n \t    return;\n \t  abort ();"}, {"sha": "49adb413cd22e95a9fc2d77d8dfd38531a2e1160", "filename": "gcc/toplev.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1c49ab40e7b8d8dbd2a08a4b1b1b683d507ed1b/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1c49ab40e7b8d8dbd2a08a4b1b1b683d507ed1b/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=e1c49ab40e7b8d8dbd2a08a4b1b1b683d507ed1b", "patch": "@@ -115,4 +115,7 @@ extern void fnotice\t\t\tPROTO ((FILE *, const char *, ...))\n extern const char *trim_filename\tPROTO ((const char *));\n extern int wrapup_global_declarations   PROTO ((union tree_node **, int));\n extern void check_global_declarations   PROTO ((union tree_node **, int));\n+extern int errorcount;\n+extern int warningcount;\n+extern int sorrycount;\n #endif /* __GCC_TOPLEV_H */"}]}