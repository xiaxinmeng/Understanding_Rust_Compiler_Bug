{"sha": "587af00955c02040f1c552f7b0381f4ec4f1c3f9", "node_id": "C_kwDOANBUbNoAKDU4N2FmMDA5NTVjMDIwNDBmMWM1NTJmN2IwMzgxZjRlYzRmMWMzZjk", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-10-07T10:42:34Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-04T13:47:25Z"}, "message": "ada: Fix various typos in node and entity description comments\n\nFix typos in units that describe GNAT abstract syntax tree.\n\ngcc/ada/\n\n\t* einfo.ads: Fix typos in comments; refill as necessary.\n\t* sinfo.ads: Likewise.", "tree": {"sha": "0bb4abd0b4f7358b7c63e9b52de7c30831380770", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bb4abd0b4f7358b7c63e9b52de7c30831380770"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/587af00955c02040f1c552f7b0381f4ec4f1c3f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/587af00955c02040f1c552f7b0381f4ec4f1c3f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/587af00955c02040f1c552f7b0381f4ec4f1c3f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/587af00955c02040f1c552f7b0381f4ec4f1c3f9/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d201131fee1d6028d36cc9b82db7dad944fa1ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d201131fee1d6028d36cc9b82db7dad944fa1ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d201131fee1d6028d36cc9b82db7dad944fa1ce"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "2a1a406850e42bd507a7446bb69eea7ccc5f0672", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/587af00955c02040f1c552f7b0381f4ec4f1c3f9/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/587af00955c02040f1c552f7b0381f4ec4f1c3f9/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=587af00955c02040f1c552f7b0381f4ec4f1c3f9", "patch": "@@ -874,7 +874,7 @@ package Einfo is\n --       are generated (subprograms, package declarations and package\n --       bodies). Defined if there are pending generic body instantiations\n --       for the corresponding entity. If this flag is set, then generation\n---       of the subprogram descriptor for the corresponding enities must\n+--       of the subprogram descriptor for the corresponding entities must\n --       be delayed, since the insertion of the generic body may add entries\n --       to the list of handlers.\n --\n@@ -2570,7 +2570,7 @@ package Einfo is\n \n --    Is_Elaboration_Checks_OK_Id\n --       Defined in elaboration targets (see terminology in Sem_Elab). Set when\n---       the target appears in a region which is subject to elabled elaboration\n+--       the target appears in a region which is subject to enabled elaboration\n --       checks. Such targets are allowed to generate run-time conditional ABE\n --       checks or guaranteed ABE failures.\n \n@@ -3114,7 +3114,7 @@ package Einfo is\n --       Defined in all entities, set in E_Package and E_Generic_Package\n --       entities to which a pragma Preelaborate is applied, and also in\n --       all entities within such packages. Note that the fact that this\n---       flag is set does not necesarily mean that no elaboration code is\n+--       flag is set does not necessarily mean that no elaboration code is\n --       generated for the package.\n \n --    Is_Primitive\n@@ -3228,7 +3228,7 @@ package Einfo is\n --       Defined in all entities, set only for a variable or constant for\n --       which the Renamed_Object field is non-empty and for which the\n --       renaming is handled by the front end, by macro substitution of\n---       a copy of the (evaluated) name tree whereever the variable is used.\n+--       a copy of the (evaluated) name tree wherever the variable is used.\n \n --    Is_Return_Object\n --       Defined in all object entities. True if the object is the return\n@@ -3964,7 +3964,8 @@ package Einfo is\n --       Present in variable entities. Contains all references to the variable\n --       when it is subject to pragma Part_Of. If the variable is a constituent\n --       of a single protected/task type, the references are examined as they\n---       must appear only within the type defintion and the corresponding body.\n+--       must appear only within the type definition and the corresponding\n+--       body.\n \n --    Partial_DIC_Procedure (synthesized)\n --       Defined in type entities. Set for a private type and its full view\n@@ -4058,7 +4059,7 @@ package Einfo is\n \n --    Prev_Entity\n --       Defined in all entities. The entities of a scope are chained, and this\n---       field is used as a backward pointer for this entity list - effectivly\n+--       field is used as a backward pointer for this entity list - effectively\n --       making the entity chain doubly-linked.\n \n --    Primitive_Operations (synthesized)"}, {"sha": "c41b0f24742d9d576b12192ebb5c7892c85e8ef5", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/587af00955c02040f1c552f7b0381f4ec4f1c3f9/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/587af00955c02040f1c552f7b0381f4ec4f1c3f9/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=587af00955c02040f1c552f7b0381f4ec4f1c3f9", "patch": "@@ -629,7 +629,7 @@ package Sinfo is\n    --  specified by means of an aspect or a pragma.\n \n    --  The following entities may be subject to a SPARK mode. Entities marked\n-   --  with * may possess two differente SPARK modes.\n+   --  with * may possess two different SPARK modes.\n \n    --     E_Entry\n    --     E_Entry_Family\n@@ -1549,7 +1549,7 @@ package Sinfo is\n \n    --  Is_Analyzed_Pragma\n    --    Present in N_Pragma nodes. Set for delayed pragmas that require a two\n-   --    step analysis. The initial step is peformed by routine Analyze_Pragma\n+   --    step analysis. The initial step is performed by routine Analyze_Pragma\n    --    and verifies the overall legality of the pragma. The second step takes\n    --    place in the various Analyze_xxx_In_Decl_Part routines which perform\n    --    full analysis. The flag prevents the reanalysis of a delayed pragma.\n@@ -1641,8 +1641,9 @@ package Sinfo is\n    --      variable reference marker\n    --\n    --    Set when the node appears within a context which allows the generation\n-   --    of run-time ABE checks. This flag detemines whether the ABE Processing\n-   --    phase generates conditional ABE checks and guaranteed ABE failures.\n+   --    of run-time ABE checks. This flag determines whether the ABE\n+   --    Processing phase generates conditional ABE checks and guaranteed ABE\n+   --    failures.\n \n    --  Is_Elaboration_Code\n    --    Present in assignment statements. Set for an assignment which updates\n@@ -5570,7 +5571,7 @@ package Sinfo is\n \n       --  The term \"return statement\" is defined in 6.5 to mean either a\n       --  SIMPLE_RETURN_STATEMENT or an EXTENDED_RETURN_STATEMENT. We avoid\n-      --  the use of this term, since it used to mean someting else in earlier\n+      --  the use of this term, since it used to mean something else in earlier\n       --  versions of Ada.\n \n       --  N_Simple_Return_Statement\n@@ -7815,7 +7816,7 @@ package Sinfo is\n       --      ABE mechanism, regardless of whether expansion took place.\n \n       --    * The call marker captures the target of the related call along\n-      --      with other attributes which are either unavailabe or expensive\n+      --      with other attributes which are either unavailable or expensive\n       --      to recompute once analysis, resolution, and expansion are over.\n \n       --    * The call marker aids the ABE Processing phase by signaling the"}]}