{"sha": "5eed4f27694914b24cec59029b57f0d7a25b0c34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVlZDRmMjc2OTQ5MTRiMjRjZWM1OTAyOWI1N2YwZDdhMjViMGMzNA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2011-05-24T17:38:34Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-05-24T17:38:34Z"}, "message": "Always add -mno-XXX for -march=native.\n\n2011-05-24  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/49128\n\t* config/i386/driver-i386.c (host_detect_local_cpu): Always\n\tadd -mno-XXX.  Handle FMA.\n\nFrom-SVN: r174126", "tree": {"sha": "23ae7a2a3a6483370cad8d436cb6db7f24572123", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23ae7a2a3a6483370cad8d436cb6db7f24572123"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5eed4f27694914b24cec59029b57f0d7a25b0c34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eed4f27694914b24cec59029b57f0d7a25b0c34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5eed4f27694914b24cec59029b57f0d7a25b0c34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eed4f27694914b24cec59029b57f0d7a25b0c34/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e857ea62d4e2c9a8485ee17c77df8a9fece13e82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e857ea62d4e2c9a8485ee17c77df8a9fece13e82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e857ea62d4e2c9a8485ee17c77df8a9fece13e82"}], "stats": {"total": 60, "additions": 28, "deletions": 32}, "files": [{"sha": "4d4aa0d85623aea155a22b4ac3dda9214d528065", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eed4f27694914b24cec59029b57f0d7a25b0c34/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eed4f27694914b24cec59029b57f0d7a25b0c34/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5eed4f27694914b24cec59029b57f0d7a25b0c34", "patch": "@@ -1,3 +1,9 @@\n+2011-05-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/49128\n+\t* config/i386/driver-i386.c (host_detect_local_cpu): Always\n+\tadd -mno-XXX.  Handle FMA.\n+\n 2011-05-24  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/48633"}, {"sha": "747122b16ecbce0d4e062d7ad42144f22609d5a4", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 22, "deletions": 32, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5eed4f27694914b24cec59029b57f0d7a25b0c34/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5eed4f27694914b24cec59029b57f0d7a25b0c34/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=5eed4f27694914b24cec59029b57f0d7a25b0c34", "patch": "@@ -395,7 +395,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n   unsigned int has_movbe = 0, has_sse4_1 = 0, has_sse4_2 = 0;\n   unsigned int has_popcnt = 0, has_aes = 0, has_avx = 0;\n   unsigned int has_pclmul = 0, has_abm = 0, has_lwp = 0;\n-  unsigned int has_fma4 = 0, has_xop = 0;\n+  unsigned int has_fma = 0, has_fma4 = 0, has_xop = 0;\n   unsigned int has_bmi = 0, has_tbm = 0;\n \n   bool arch;\n@@ -443,6 +443,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n   has_popcnt = ecx & bit_POPCNT;\n   has_aes = ecx & bit_AES;\n   has_pclmul = ecx & bit_PCLMUL;\n+  has_fma = ecx & bit_FMA;\n \n   has_cmpxchg8b = edx & bit_CMPXCHG8B;\n   has_cmov = edx & bit_CMOV;\n@@ -681,37 +682,26 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \n   if (arch)\n     {\n-      if (has_cmpxchg16b)\n-\toptions = concat (options, \" -mcx16\", NULL);\n-      if (has_lahf_lm)\n-\toptions = concat (options, \" -msahf\", NULL);\n-      if (has_movbe)\n-\toptions = concat (options, \" -mmovbe\", NULL);\n-      if (has_aes)\n-\toptions = concat (options, \" -maes\", NULL);\n-      if (has_pclmul)\n-\toptions = concat (options, \" -mpclmul\", NULL);\n-      if (has_popcnt)\n-\toptions = concat (options, \" -mpopcnt\", NULL);\n-      if (has_abm)\n-\toptions = concat (options, \" -mabm\", NULL);\n-      if (has_lwp)\n-\toptions = concat (options, \" -mlwp\", NULL);\n-      if (has_fma4)\n-\toptions = concat (options, \" -mfma4\", NULL);\n-      if (has_xop)\n-\toptions = concat (options, \" -mxop\", NULL);\n-      if (has_bmi)\n-\toptions = concat (options, \" -mbmi\", NULL);\n-      if (has_tbm)\n-\toptions = concat (options, \" -mtbm\", NULL);\n-\n-      if (has_avx)\n-\toptions = concat (options, \" -mavx\", NULL);\n-      else if (has_sse4_2)\n-\toptions = concat (options, \" -msse4.2\", NULL);\n-      else if (has_sse4_1)\n-\toptions = concat (options, \" -msse4.1\", NULL);\n+      const char *cx16 = has_cmpxchg16b ? \" -mcx16\" : \" -mno-cx16\";\n+      const char *sahf = has_lahf_lm ? \" -msahf\" : \" -mno-sahf\";\n+      const char *movbe = has_movbe ? \" -mmovbe\" : \" -mno-movbe\";\n+      const char *ase = has_aes ? \" -maes\" : \" -mno-aes\";\n+      const char *pclmul = has_pclmul ? \" -mpclmul\" : \" -mno-pclmul\";\n+      const char *popcnt = has_popcnt ? \" -mpopcnt\" : \" -mno-popcnt\";\n+      const char *abm = has_abm ? \" -mabm\" : \" -mno-abm\";\n+      const char *lwp = has_lwp ? \" -mlwp\" : \" -mno-lwp\";\n+      const char *fma = has_fma ? \" -mfma\" : \" -mno-fma\";\n+      const char *fma4 = has_fma4 ? \" -mfma4\" : \" -mno-fma4\";\n+      const char *xop = has_xop ? \" -mxop\" : \" -mno-xop\";\n+      const char *bmi = has_bmi ? \" -mbmi\" : \" -mno-bmi\";\n+      const char *tbm = has_tbm ? \" -mtbm\" : \" -mno-tbm\";\n+      const char *avx = has_avx ? \" -mavx\" : \" -mno-avx\";\n+      const char *sse4_2 = has_sse4_2 ? \" -msse4.2\" : \" -mno-msse4.2\";\n+      const char *sse4_1 = has_sse4_1 ? \" -msse4.1\" : \" -mno-sse4.1\";\n+\n+      options = concat (options, cx16, sahf, movbe, ase, pclmul,\n+\t\t\tpopcnt, abm, lwp, fma, fma4, xop, bmi, tbm,\n+\t\t\tavx, sse4_2, sse4_1, NULL);\n     }\n \n done:"}]}