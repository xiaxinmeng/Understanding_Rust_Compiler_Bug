{"sha": "6632dcdd410754a2c25a117cae5fab151b94c6b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYzMmRjZGQ0MTA3NTRhMmMyNWExMTdjYWU1ZmFiMTUxYjk0YzZiNA==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "2000-03-08T00:30:06Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2000-03-08T00:30:06Z"}, "message": "re GNATS gcj/94 (compiler allows assignment to interface constants)\n\n2000-02-22  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\n\t* parse.y (check_final_assignment): Extended to process\n\tCOMPOUND_EXPR.\n\t(patch_assignment): Have check_final_assignment called only once.\n\n(This fixes the Java PR #94:\n http://sourceware.cygnus.com/ml/java-prs/1999-q4/msg00125.html)\n\nFrom-SVN: r32396", "tree": {"sha": "852a5f51874a3500e5968554fcf9e9bbde1b07f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/852a5f51874a3500e5968554fcf9e9bbde1b07f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6632dcdd410754a2c25a117cae5fab151b94c6b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6632dcdd410754a2c25a117cae5fab151b94c6b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6632dcdd410754a2c25a117cae5fab151b94c6b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6632dcdd410754a2c25a117cae5fab151b94c6b4/comments", "author": null, "committer": null, "parents": [{"sha": "15f1a7952b44f09f409cbe01d57af82e8d9ffcf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15f1a7952b44f09f409cbe01d57af82e8d9ffcf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15f1a7952b44f09f409cbe01d57af82e8d9ffcf6"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "205e8475a84b3617970b882297b0cb90ff10a56b", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6632dcdd410754a2c25a117cae5fab151b94c6b4/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6632dcdd410754a2c25a117cae5fab151b94c6b4/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=6632dcdd410754a2c25a117cae5fab151b94c6b4", "patch": "@@ -1,3 +1,9 @@\n+2000-03-07  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* parse.y (check_final_assignment): Extended to process\n+\tCOMPOUND_EXPR.\n+\t(patch_assignment): Have check_final_assignment called only once.\n+\n 2000-03-07  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* java-tree.h (IS_INIT_CHECKED): New flag."}, {"sha": "59a1b5a5405a2f36ef25cd5a69f6e4b1d0525087", "filename": "gcc/java/parse.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6632dcdd410754a2c25a117cae5fab151b94c6b4/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6632dcdd410754a2c25a117cae5fab151b94c6b4/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=6632dcdd410754a2c25a117cae5fab151b94c6b4", "patch": "@@ -11771,6 +11771,10 @@ static int\n check_final_assignment (lvalue, wfl)\n      tree lvalue, wfl;\n {\n+  if (TREE_CODE (lvalue) == COMPOUND_EXPR \n+      && JDECL_P (TREE_OPERAND (lvalue, 1)))\n+    lvalue = TREE_OPERAND (lvalue, 1);\n+\n   if (JDECL_P (lvalue) \n       && FIELD_FINAL (lvalue) && !IS_CLINIT (current_function_decl))\n     {\n@@ -11850,7 +11854,7 @@ patch_assignment (node, wfl_op1, wfl_op2)\n   else if (TREE_CODE (wfl_op1) == EXPR_WITH_FILE_LOCATION\n \t   && resolve_expression_name (wfl_op1, &llvalue))\n     {\n-      if (check_final_assignment (llvalue, wfl_op1))\n+      if (!error_found && check_final_assignment (llvalue, wfl_op1))\n \t{\n \t  /* What we should do instead is resetting the all the flags\n \t     previously set, exchange lvalue for llvalue and continue. */\n@@ -13516,9 +13520,11 @@ patch_newarray (node)\n   for (cdim = dims; cdim; cdim = TREE_CHAIN (cdim))\n     {\n       type = array_type;\n-      array_type = build_java_array_type (type,\n-\t\t\t\t\t  TREE_CODE (cdim) == INTEGER_CST ?\n-\t\t\t\t\t  TREE_INT_CST_LOW (cdim) : -1);\n+      array_type\n+\t= build_java_array_type (type,\n+\t\t\t\t TREE_CODE (cdim) == INTEGER_CST\n+\t\t\t\t ? (HOST_WIDE_INT) TREE_INT_CST_LOW (cdim)\n+\t\t\t\t : -1);\n       array_type = promote_type (array_type);\n     }\n   dims = nreverse (dims);"}, {"sha": "1d8d68b930f422f88325d0afc04eddcf4baccca9", "filename": "gcc/java/parse.y", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6632dcdd410754a2c25a117cae5fab151b94c6b4/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6632dcdd410754a2c25a117cae5fab151b94c6b4/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=6632dcdd410754a2c25a117cae5fab151b94c6b4", "patch": "@@ -9081,6 +9081,10 @@ static int\n check_final_assignment (lvalue, wfl)\n      tree lvalue, wfl;\n {\n+  if (TREE_CODE (lvalue) == COMPOUND_EXPR \n+      && JDECL_P (TREE_OPERAND (lvalue, 1)))\n+    lvalue = TREE_OPERAND (lvalue, 1);\n+\n   if (JDECL_P (lvalue) \n       && FIELD_FINAL (lvalue) && !IS_CLINIT (current_function_decl))\n     {\n@@ -9160,7 +9164,7 @@ patch_assignment (node, wfl_op1, wfl_op2)\n   else if (TREE_CODE (wfl_op1) == EXPR_WITH_FILE_LOCATION\n \t   && resolve_expression_name (wfl_op1, &llvalue))\n     {\n-      if (check_final_assignment (llvalue, wfl_op1))\n+      if (!error_found && check_final_assignment (llvalue, wfl_op1))\n \t{\n \t  /* What we should do instead is resetting the all the flags\n \t     previously set, exchange lvalue for llvalue and continue. */"}]}