{"sha": "0839ffce2ddfe5aa3fb4b7cd8b51610f4c116bcb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDgzOWZmY2UyZGRmZTVhYTNmYjRiN2NkOGI1MTYxMGY0YzExNmJjYg==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2019-07-04T08:06:54Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-04T08:06:54Z"}, "message": "[Ada] Management of internal data structures in Sem_Elab\n\nThis patch modifies the timing of Sem_Elab's internal data structure\ncreation and destruction, and adds the concept of \"active\" elaboration\ncompiler phase.\n\nThe elaboration phase of the compiler is active after the frontend\ninitializes Sem_Elab. It is at this point that all internal data\nstructures of Sem_Elab are created and become ready to accept data.\n\nThe elaboration phase of the compiler is completed after all elaboration\nscenarios are examined, all ABE checks are intalled, and diagnostics are\nemitted. It is at this point that all internal data structures of\nSem_Elab are destroyed. Further attempts to reintroduce data into\nSem_Elab by subsequent compiler phases are cut off.\n\nCompilation using GCC unaffected.\n\n2019-07-04  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* sem_elab.adb: Add new type Elaboration_Phase_Status along with\n\ta global to keep track of the elaboration phase status.\n\tInitialize all internal data structures to Nil for services\n\tElaborated_Units, Internal_Representation, and Scenario_Storage.\n\t(Build_Call_Marker): Do not create a call marker when the\n\telaboration phase is not active.\n\t(Build_Variable_Reference_Marker): Do not create a call marker\n\twhen the elaboration phase is not active.\n\t(Check_Elaboration_Scenarios): Destroy all internal structures\n\twhen the elaboration phase does not have to run. Do not execute\n\twhen the elaboration phase is not active.\n\t(Elaboration_Phase_Active): New routine.\n\t(Finalize_All_Data_Structures): New routine.\n\t(Initialize): Initialize all internal data structures and signal\n\tthat the elaboration phase has started.\n\t(Initialize_All_Data_Structures): New routine.\n\t(Initialize_Elaborated_Units): Initialize all internal data\n\tstructures.\n\t(Initialize_Internal_Representation): Initialize all internal\n\tdata structures.\n\t(Initialize_Scenario_Storage): Initialize all internal data\n\tstructures.\n\t(Kill_Elaboration_Scenario): Do not execute when the elaboration\n\tphase is not active.\n\t(Set_Elaboration_Phase): New routine.\n\t(Update_Elaboration_Scenario): Do not execute when the\n\telaboration phase is not active.\n\nFrom-SVN: r273066", "tree": {"sha": "5a9c1732ace880f1da71de8ea3d67ad15953ea9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a9c1732ace880f1da71de8ea3d67ad15953ea9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0839ffce2ddfe5aa3fb4b7cd8b51610f4c116bcb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0839ffce2ddfe5aa3fb4b7cd8b51610f4c116bcb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0839ffce2ddfe5aa3fb4b7cd8b51610f4c116bcb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0839ffce2ddfe5aa3fb4b7cd8b51610f4c116bcb/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "901a52ba7d5c1f530e60f0b615ee16889786532a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/901a52ba7d5c1f530e60f0b615ee16889786532a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/901a52ba7d5c1f530e60f0b615ee16889786532a"}], "stats": {"total": 212, "additions": 176, "deletions": 36}, "files": [{"sha": "9d46f39912a5cc59b3a085863b54eedf30b28a28", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0839ffce2ddfe5aa3fb4b7cd8b51610f4c116bcb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0839ffce2ddfe5aa3fb4b7cd8b51610f4c116bcb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0839ffce2ddfe5aa3fb4b7cd8b51610f4c116bcb", "patch": "@@ -1,3 +1,33 @@\n+2019-07-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_elab.adb: Add new type Elaboration_Phase_Status along with\n+\ta global to keep track of the elaboration phase status.\n+\tInitialize all internal data structures to Nil for services\n+\tElaborated_Units, Internal_Representation, and Scenario_Storage.\n+\t(Build_Call_Marker): Do not create a call marker when the\n+\telaboration phase is not active.\n+\t(Build_Variable_Reference_Marker): Do not create a call marker\n+\twhen the elaboration phase is not active.\n+\t(Check_Elaboration_Scenarios): Destroy all internal structures\n+\twhen the elaboration phase does not have to run. Do not execute\n+\twhen the elaboration phase is not active.\n+\t(Elaboration_Phase_Active): New routine.\n+\t(Finalize_All_Data_Structures): New routine.\n+\t(Initialize): Initialize all internal data structures and signal\n+\tthat the elaboration phase has started.\n+\t(Initialize_All_Data_Structures): New routine.\n+\t(Initialize_Elaborated_Units): Initialize all internal data\n+\tstructures.\n+\t(Initialize_Internal_Representation): Initialize all internal\n+\tdata structures.\n+\t(Initialize_Scenario_Storage): Initialize all internal data\n+\tstructures.\n+\t(Kill_Elaboration_Scenario): Do not execute when the elaboration\n+\tphase is not active.\n+\t(Set_Elaboration_Phase): New routine.\n+\t(Update_Elaboration_Scenario): Do not execute when the\n+\telaboration phase is not active.\n+\n 2019-07-04  Gary Dismukes  <dismukes@adacore.com>\n \n \t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): The special"}, {"sha": "ce0950d2a32c9a92759e17a68bab1800732a74b1", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 146, "deletions": 36, "changes": 182, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0839ffce2ddfe5aa3fb4b7cd8b51610f4c116bcb/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0839ffce2ddfe5aa3fb4b7cd8b51610f4c116bcb/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=0839ffce2ddfe5aa3fb4b7cd8b51610f4c116bcb", "patch": "@@ -676,6 +676,22 @@ package body Sem_Elab is\n    -- Kinds --\n    -----------\n \n+   --  The following type enumerates all possible elaboration phase statutes\n+\n+   type Elaboration_Phase_Status is\n+     (Inactive,\n+      --  The elaboration phase of the compiler has not started yet\n+\n+      Active,\n+      --  The elaboration phase of the compiler is currently in progress\n+\n+      Completed);\n+      --  The elaboration phase of the compiler has finished\n+\n+   Elaboration_Phase : Elaboration_Phase_Status := Inactive;\n+   --  The status of the elaboration phase. Use routine Set_Elaboration_Phase\n+   --  to alter its value.\n+\n    --  The following type enumerates all subprogram body traversal modes\n \n    type Body_Traversal_Kind is\n@@ -1958,6 +1974,14 @@ package body Sem_Elab is\n    --  Return the type of subprogram Subp_Id's first formal parameter. If the\n    --  subprogram lacks formal parameters, return Empty.\n \n+   function Elaboration_Phase_Active return Boolean;\n+   pragma Inline (Elaboration_Phase_Active);\n+   --  Determine whether the elaboration phase of the compilation has started\n+\n+   procedure Finalize_All_Data_Structures;\n+   pragma Inline (Finalize_All_Data_Structures);\n+   --  Destroy all internal data structures\n+\n    function Has_Body (Pack_Decl : Node_Id) return Boolean;\n    pragma Inline (Has_Body);\n    --  Determine whether package declaration Pack_Decl has a corresponding body\n@@ -1984,6 +2008,10 @@ package body Sem_Elab is\n    --  context ignoring enclosing library levels. Nested_OK should be set when\n    --  the context of N1 can enclose that of N2.\n \n+   procedure Initialize_All_Data_Structures;\n+   pragma Inline (Initialize_All_Data_Structures);\n+   --  Create all internal data structures\n+\n    function Instantiated_Generic (Inst : Node_Id) return Entity_Id;\n    pragma Inline (Instantiated_Generic);\n    --  Obtain the generic instantiated by instance Inst\n@@ -2027,6 +2055,10 @@ package body Sem_Elab is\n    pragma Inline (Scenario);\n    --  Return the appropriate scenario node for scenario N\n \n+   procedure Set_Elaboration_Phase (Status : Elaboration_Phase_Status);\n+   pragma Inline (Set_Elaboration_Phase);\n+   --  Change the status of the elaboration phase of the compiler to Status\n+\n    procedure Spec_And_Body_From_Entity\n      (Id        : Node_Id;\n       Spec_Decl : out Node_Id;\n@@ -3572,6 +3604,12 @@ package body Sem_Elab is\n       elsif Preanalysis_Active then\n          return;\n \n+      --  Nothing to do when the elaboration phase of the compiler is not\n+      --  active.\n+\n+      elsif not Elaboration_Phase_Active then\n+         return;\n+\n       --  Nothing to do when the input does not denote a call or a requeue\n \n       elsif not Nkind_In (N, N_Entry_Call_Statement,\n@@ -3789,6 +3827,13 @@ package body Sem_Elab is\n    --  Start of processing for Build_Variable_Reference_Marker\n \n    begin\n+      --  Nothing to do when the elaboration phase of the compiler is not\n+      --  active.\n+\n+      if not Elaboration_Phase_Active then\n+         return;\n+      end if;\n+\n       Marker := Make_Variable_Reference_Marker (Sloc (N));\n \n       --  Inherit the attributes of the original variable reference\n@@ -3887,23 +3932,23 @@ package body Sem_Elab is\n       --  to carry out this action.\n \n       if Legacy_Elaboration_Checks then\n+         Finalize_All_Data_Structures;\n          return;\n \n       --  Nothing to do for ASIS because ABE checks and diagnostics are not\n       --  performed in this mode.\n \n       elsif ASIS_Mode then\n+         Finalize_All_Data_Structures;\n          return;\n-      end if;\n \n-      --  Create all internal data structures\n+      --  Nothing to do when the elaboration phase of the compiler is not\n+      --  active.\n \n-      Initialize_Body_Processor;\n-      Initialize_Early_Call_Region_Processor;\n-      Initialize_Elaborated_Units;\n-      Initialize_Internal_Representation;\n-      Initialize_Invocation_Graph;\n-      Initialize_Scenario_Storage;\n+      elsif not Elaboration_Phase_Active then\n+         Finalize_All_Data_Structures;\n+         return;\n+      end if;\n \n       --  Restore the original elaboration model which was in effect when the\n       --  scenarios were first recorded. The model may be specified by pragma\n@@ -3949,14 +3994,11 @@ package body Sem_Elab is\n \n       Record_Invocation_Graph;\n \n-      --  Destroy all internal data structures\n+      --  Destroy all internal data structures and complete the elaboration\n+      --  phase of the compiler.\n \n-      Finalize_Body_Processor;\n-      Finalize_Early_Call_Region_Processor;\n-      Finalize_Elaborated_Units;\n-      Finalize_Internal_Representation;\n-      Finalize_Invocation_Graph;\n-      Finalize_Scenario_Storage;\n+      Finalize_All_Data_Structures;\n+      Set_Elaboration_Phase (Completed);\n    end Check_Elaboration_Scenarios;\n \n    ---------------------\n@@ -7676,8 +7718,7 @@ package body Sem_Elab is\n       --  The following map relates an elaboration attributes of a unit to the\n       --  unit.\n \n-      Unit_To_Attributes_Map : UA_Map.Dynamic_Hash_Table :=\n-                                 UA_Map.Create (250);\n+      Unit_To_Attributes_Map : UA_Map.Dynamic_Hash_Table := UA_Map.Nil;\n \n       ------------------\n       -- Constructors --\n@@ -8519,7 +8560,7 @@ package body Sem_Elab is\n \n       procedure Initialize_Elaborated_Units is\n       begin\n-         null;\n+         Unit_To_Attributes_Map := UA_Map.Create (250);\n       end Initialize_Elaborated_Units;\n \n       ----------------------------------\n@@ -8800,6 +8841,29 @@ package body Sem_Elab is\n       end With_Clause;\n    end Elaborated_Units;\n \n+   ------------------------------\n+   -- Elaboration_Phase_Active --\n+   ------------------------------\n+\n+   function Elaboration_Phase_Active return Boolean is\n+   begin\n+      return Elaboration_Phase = Active;\n+   end Elaboration_Phase_Active;\n+\n+   ----------------------------------\n+   -- Finalize_All_Data_Structures --\n+   ----------------------------------\n+\n+   procedure Finalize_All_Data_Structures is\n+   begin\n+      Finalize_Body_Processor;\n+      Finalize_Early_Call_Region_Processor;\n+      Finalize_Elaborated_Units;\n+      Finalize_Internal_Representation;\n+      Finalize_Invocation_Graph;\n+      Finalize_Scenario_Storage;\n+   end Finalize_All_Data_Structures;\n+\n    -----------------------------\n    -- Find_Enclosing_Instance --\n    -----------------------------\n@@ -10072,8 +10136,28 @@ package body Sem_Elab is\n       --  each time it is transformed into another node.\n \n       Set_Rewriting_Proc (Update_Elaboration_Scenario'Access);\n+\n+      --  Create all internal data structures and activate the elaboration\n+      --  phase of the compiler.\n+\n+      Initialize_All_Data_Structures;\n+      Set_Elaboration_Phase (Active);\n    end Initialize;\n \n+   ------------------------------------\n+   -- Initialize_All_Data_Structures --\n+   ------------------------------------\n+\n+   procedure Initialize_All_Data_Structures is\n+   begin\n+      Initialize_Body_Processor;\n+      Initialize_Early_Call_Region_Processor;\n+      Initialize_Elaborated_Units;\n+      Initialize_Internal_Representation;\n+      Initialize_Invocation_Graph;\n+      Initialize_Scenario_Storage;\n+   end Initialize_All_Data_Structures;\n+\n    --------------------------\n    -- Instantiated_Generic --\n    --------------------------\n@@ -10201,8 +10285,7 @@ package body Sem_Elab is\n \n       --  The following map relates target representations to entities\n \n-      Entity_To_Target_Map : ETT_Map.Dynamic_Hash_Table :=\n-                               ETT_Map.Create (500);\n+      Entity_To_Target_Map : ETT_Map.Dynamic_Hash_Table := ETT_Map.Nil;\n \n       procedure Destroy (S_Id : in out Scenario_Rep_Id);\n       --  Destroy a scenario representation S_Id\n@@ -10221,8 +10304,7 @@ package body Sem_Elab is\n \n       --  The following map relates scenario representations to nodes\n \n-      Node_To_Scenario_Map : NTS_Map.Dynamic_Hash_Table :=\n-                               NTS_Map.Create (500);\n+      Node_To_Scenario_Map : NTS_Map.Dynamic_Hash_Table := NTS_Map.Nil;\n \n       --  The following table stores all scenario representations\n \n@@ -11058,7 +11140,8 @@ package body Sem_Elab is\n \n       procedure Initialize_Internal_Representation is\n       begin\n-         null;\n+         Entity_To_Target_Map := ETT_Map.Create (500);\n+         Node_To_Scenario_Map := NTS_Map.Create (500);\n       end Initialize_Internal_Representation;\n \n       -------------------------\n@@ -13422,6 +13505,12 @@ package body Sem_Elab is\n \n       if Legacy_Elaboration_Checks then\n          return;\n+\n+      --  Nothing to do when the elaboration phase of the compiler is not\n+      --  active.\n+\n+      elsif not Elaboration_Phase_Active then\n+         return;\n       end if;\n \n       --  Eliminate a recorded scenario when it appears within dead code\n@@ -13785,6 +13874,12 @@ package body Sem_Elab is\n \n       elsif Preanalysis_Active then\n          return;\n+\n+      --  Nothing to do when the elaboration phase of the compiler is not\n+      --  active.\n+\n+      elsif not Elaboration_Phase_Active then\n+         return;\n       end if;\n \n       Scen_Lvl := Find_Enclosing_Level (Scen);\n@@ -13889,16 +13984,11 @@ package body Sem_Elab is\n \n       --  The following sets store all scenarios\n \n-      Declaration_Scenarios       : NE_Set.Membership_Set :=\n-                                      NE_Set.Create (1000);\n-      Dynamic_ABE_Check_Scenarios : NE_Set.Membership_Set :=\n-                                      NE_Set.Create (500);\n-      Library_Body_Scenarios      : NE_Set.Membership_Set :=\n-                                      NE_Set.Create (1000);\n-      Library_Spec_Scenarios      : NE_Set.Membership_Set :=\n-                                      NE_Set.Create (1000);\n-      SPARK_Scenarios             : NE_Set.Membership_Set :=\n-                                      NE_Set.Create (100);\n+      Declaration_Scenarios       : NE_Set.Membership_Set := NE_Set.Nil;\n+      Dynamic_ABE_Check_Scenarios : NE_Set.Membership_Set := NE_Set.Nil;\n+      Library_Body_Scenarios      : NE_Set.Membership_Set := NE_Set.Nil;\n+      Library_Spec_Scenarios      : NE_Set.Membership_Set := NE_Set.Nil;\n+      SPARK_Scenarios             : NE_Set.Membership_Set := NE_Set.Nil;\n \n       -------------------------------\n       -- Finalize_Scenario_Storage --\n@@ -13919,7 +14009,11 @@ package body Sem_Elab is\n \n       procedure Initialize_Scenario_Storage is\n       begin\n-         null;\n+         Declaration_Scenarios       := NE_Set.Create (1000);\n+         Dynamic_ABE_Check_Scenarios := NE_Set.Create (500);\n+         Library_Body_Scenarios      := NE_Set.Create (1000);\n+         Library_Spec_Scenarios      := NE_Set.Create (1000);\n+         SPARK_Scenarios             := NE_Set.Create (100);\n       end Initialize_Scenario_Storage;\n \n       ------------------------------\n@@ -14796,6 +14890,15 @@ package body Sem_Elab is\n       end Is_Up_Level_Target;\n    end Semantics;\n \n+   ---------------------------\n+   -- Set_Elaboration_Phase --\n+   ---------------------------\n+\n+   procedure Set_Elaboration_Phase (Status : Elaboration_Phase_Status) is\n+   begin\n+      Elaboration_Phase := Status;\n+   end Set_Elaboration_Phase;\n+\n    ---------------------\n    -- SPARK_Processor --\n    ---------------------\n@@ -15700,17 +15803,24 @@ package body Sem_Elab is\n \n    procedure Update_Elaboration_Scenario (New_N : Node_Id; Old_N : Node_Id) is\n    begin\n+      --  Nothing to do when the elaboration phase of the compiler is not\n+      --  active.\n+\n+      if not Elaboration_Phase_Active then\n+         return;\n+\n       --  Nothing to do when the old and new scenarios are one and the same\n \n-      if Old_N = New_N then\n+      elsif Old_N = New_N then\n          return;\n+      end if;\n \n       --  A scenario is being transformed by Atree.Rewrite. Update all relevant\n       --  internal data structures to reflect this change. This ensures that a\n       --  potential run-time conditional ABE check or a guaranteed ABE failure\n       --  is inserted at the proper place in the tree.\n \n-      elsif Is_Scenario (Old_N) then\n+      if Is_Scenario (Old_N) then\n          Replace_Scenario (Old_N, New_N);\n       end if;\n    end Update_Elaboration_Scenario;"}]}