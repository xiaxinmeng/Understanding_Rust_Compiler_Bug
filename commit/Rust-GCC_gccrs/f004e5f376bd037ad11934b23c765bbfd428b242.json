{"sha": "f004e5f376bd037ad11934b23c765bbfd428b242", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAwNGU1ZjM3NmJkMDM3YWQxMTkzNGIyM2M3NjViYmZkNDI4YjI0Mg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2003-01-27T06:23:32Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2003-01-27T06:23:32Z"}, "message": "real.c (ibm_extended_format): Add 53 to minimum exponent.\n\n* real.c (ibm_extended_format): Add 53 to minimum exponent.\n(encode_ibm_extended): Adjust.\n\nFrom-SVN: r61875", "tree": {"sha": "43fd6b80783b3f8f586143d0614702108ec8e86c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43fd6b80783b3f8f586143d0614702108ec8e86c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f004e5f376bd037ad11934b23c765bbfd428b242", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f004e5f376bd037ad11934b23c765bbfd428b242", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f004e5f376bd037ad11934b23c765bbfd428b242", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f004e5f376bd037ad11934b23c765bbfd428b242/comments", "author": null, "committer": null, "parents": [{"sha": "58c60e52692a29961730c86e2a8eac552c6e21f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58c60e52692a29961730c86e2a8eac552c6e21f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58c60e52692a29961730c86e2a8eac552c6e21f5"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "78a6a249a5df9753137198c771ba2f8540744868", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f004e5f376bd037ad11934b23c765bbfd428b242/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f004e5f376bd037ad11934b23c765bbfd428b242/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f004e5f376bd037ad11934b23c765bbfd428b242", "patch": "@@ -1,3 +1,8 @@\n+2003-01-27  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* real.c (ibm_extended_format): Add 53 to minimum exponent.\n+\t(encode_ibm_extended): Adjust.\n+\n 2003-01-26  Gabriel Dos Reis  <gdr@soliton.integrable-solutions.net>\n \n \t* timevar.def (TV_OVERLOAD, TV_TEMPLATE_INSTANTIATION): New"}, {"sha": "369d32401fb7cc50e9df8725dfee692f726edb45", "filename": "gcc/real.c", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f004e5f376bd037ad11934b23c765bbfd428b242/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f004e5f376bd037ad11934b23c765bbfd428b242/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=f004e5f376bd037ad11934b23c765bbfd428b242", "patch": "@@ -3261,8 +3261,23 @@ encode_ibm_extended (fmt, buf, r)\n       u = *r;\n       clear_significand_below (&u, SIGNIFICAND_BITS - 53);\n \n-      /* v = remainder containing additional 53 bits of significand.  */\n-      do_add (&v, r, &u, 1);\n+      normalize (&u);\n+      /* If the upper double is zero, we have a denormal double, so\n+\t move it to the first double and leave the second as zero.  */\n+      if (u.class == rvc_zero)\n+\t{\n+\t  v = u;\n+\t  u = *r;\n+\t  normalize (&u);\n+\t}\n+      else\n+\t{\n+\t  /* v = remainder containing additional 53 bits of significand.  */\n+\t  do_add (&v, r, &u, 1);\n+\t  round_for_format (&ieee_double_format, &v);\n+\t}\n+\n+      round_for_format (&ieee_double_format, &u);\n \n       encode_ieee_double (&ieee_double_format, &buf[0], &u);\n       encode_ieee_double (&ieee_double_format, &buf[2], &v);\n@@ -3299,7 +3314,7 @@ const struct real_format ibm_extended_format =\n     2,\n     1,\n     53 + 53,\n-    -1021,\n+    -1021 + 53,\n     1024,\n     -1,\n     true,"}]}