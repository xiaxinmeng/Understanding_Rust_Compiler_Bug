{"sha": "9d377c280c96df8234eab81d5e2253ee36aa3826", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQzNzdjMjgwYzk2ZGY4MjM0ZWFiODFkNWUyMjUzZWUzNmFhMzgyNg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-09-11T21:13:52Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-09-11T21:19:04Z"}, "message": "i386: Fix array index in expander\n\nI noticed a compiler warning about out-of-bound access.  Fixed thusly.\n\n\tgcc/\n\t* config/i386/sse.md (mov<mode>): Fix operand indices.", "tree": {"sha": "4218dac02be46a3790b93db4ab6f15f6a9186a96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4218dac02be46a3790b93db4ab6f15f6a9186a96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d377c280c96df8234eab81d5e2253ee36aa3826", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d377c280c96df8234eab81d5e2253ee36aa3826", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d377c280c96df8234eab81d5e2253ee36aa3826", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d377c280c96df8234eab81d5e2253ee36aa3826/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64064678d6cb48fdc7e039fde15d471960d496d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64064678d6cb48fdc7e039fde15d471960d496d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64064678d6cb48fdc7e039fde15d471960d496d3"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "a784346a23b946bd8c7727f45ede46b7d1132305", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d377c280c96df8234eab81d5e2253ee36aa3826/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d377c280c96df8234eab81d5e2253ee36aa3826/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=9d377c280c96df8234eab81d5e2253ee36aa3826", "patch": "@@ -23491,7 +23491,7 @@\n \t(match_operand:MASK_DWI 1 \"nonimmediate_operand\"))]\n   \"TARGET_AVX512VP2INTERSECT\"\n {\n-  if (MEM_P (operands[1]) && MEM_P (operands[2]))\n+  if (MEM_P (operands[0]) && MEM_P (operands[1]))\n     operands[1] = force_reg (<MODE>mode, operands[1]);\n })\n "}]}