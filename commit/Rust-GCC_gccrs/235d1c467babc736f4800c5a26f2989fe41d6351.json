{"sha": "235d1c467babc736f4800c5a26f2989fe41d6351", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM1ZDFjNDY3YmFiYzczNmY0ODAwYzVhMjZmMjk4OWZlNDFkNjM1MQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2019-04-14T09:30:42Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2019-04-14T09:30:42Z"}, "message": "Work around lack of dlpi_tls_modid before Solaris 11.5\n\n2019-04-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\t    Iain Buclaw  <ibuclaw@gdcproject.org>\n\n\tPR d/88150\n\t* m4/druntime/os.m4 (DRUNTIME_OS_DLPI_TLS_MODID): New macro.\n\t* configure.ac: Use it.\n\tCall AC_USE_SYSTEM_EXTENSIONS.\n\t* configure: Regenerate.\n\t* Makefile.in, libdruntime/Makefile.in, src/Makefile.in,\n\ttestsuite/Makefile.in: Regenerate.\n\t* libdruntime/gcc/config.d.in (OS_Have_Dlpi_Tls_Modid): Define.\n\t* libdruntime/gcc/sections/elf_shared.d: Import gcc.config.\n\t(scanSegments) <PT_TLS> [OS_Have_Dlpi_Tls_Modid]: Use\n\tdlpi_tls_modid.\n\t[Solaris]: Use dlinfo(RTLD_DI_LINKMAP) to get rt_tlsmodid.\n\tOtherwise clear pdso._tlsMod, pdso._tlsSize.\n\t(getTLSRange) [Solaris && !OS_Have_Dlpi_Tls_Modid]: Readjust mod.\n\nCo-Authored-By: Iain Buclaw <ibuclaw@gdcproject.org>\n\nFrom-SVN: r270347", "tree": {"sha": "bc9d2ab7897e04e60705bb4981d7a7713a0c7b46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc9d2ab7897e04e60705bb4981d7a7713a0c7b46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/235d1c467babc736f4800c5a26f2989fe41d6351", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/235d1c467babc736f4800c5a26f2989fe41d6351", "html_url": "https://github.com/Rust-GCC/gccrs/commit/235d1c467babc736f4800c5a26f2989fe41d6351", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/235d1c467babc736f4800c5a26f2989fe41d6351/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ba838aa6c360912bc203068ef2161fce137fb97d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba838aa6c360912bc203068ef2161fce137fb97d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba838aa6c360912bc203068ef2161fce137fb97d"}], "stats": {"total": 6004, "additions": 3116, "deletions": 2888}, "files": [{"sha": "53332089ba17df84a111627c456753ccb4a70ad9", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/235d1c467babc736f4800c5a26f2989fe41d6351/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/235d1c467babc736f4800c5a26f2989fe41d6351/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=235d1c467babc736f4800c5a26f2989fe41d6351", "patch": "@@ -1,3 +1,21 @@\n+2019-04-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\t    Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/88150\n+\t* m4/druntime/os.m4 (DRUNTIME_OS_DLPI_TLS_MODID): New macro.\n+\t* configure.ac: Use it.\n+\tCall AC_USE_SYSTEM_EXTENSIONS.\n+\t* configure: Regenerate.\n+\t* Makefile.in, libdruntime/Makefile.in, src/Makefile.in,\n+\ttestsuite/Makefile.in: Regenerate.\n+\t* libdruntime/gcc/config.d.in (OS_Have_Dlpi_Tls_Modid): Define.\n+\t* libdruntime/gcc/sections/elf_shared.d: Import gcc.config.\n+\t(scanSegments) <PT_TLS> [OS_Have_Dlpi_Tls_Modid]: Use\n+\tdlpi_tls_modid.\n+\t[Solaris]: Use dlinfo(RTLD_DI_LINKMAP) to get rt_tlsmodid.\n+\tOtherwise clear pdso._tlsMod, pdso._tlsSize.\n+\t(getTLSRange) [Solaris && !OS_Have_Dlpi_Tls_Modid]: Readjust mod.\n+\n 2019-04-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* m4/druntime/os.m4 (DRUNTIME_OS_LINK_SPEC): New macro.\n@@ -7,6 +25,8 @@\n \ttestsuite/Makefile.in: Regenerate.\n \t* src/libgphobos.spec.in (*link): Append OS_LINK_SPEC.\n \n+2019-04-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n \tPR d/88150\n \t* libdruntime/gcc/sections/elf_shared.d [Solaris] (SharedELF): Set\n \tto true."}, {"sha": "47436bdcb11358293de0d7e29712e2bddb313420", "filename": "libphobos/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/235d1c467babc736f4800c5a26f2989fe41d6351/libphobos%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/235d1c467babc736f4800c5a26f2989fe41d6351/libphobos%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FMakefile.in?ref=235d1c467babc736f4800c5a26f2989fe41d6351", "patch": "@@ -210,6 +210,7 @@ CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DCFG_ARM_EABI_UNWINDER = @DCFG_ARM_EABI_UNWINDER@\n+DCFG_DLPI_TLS_MODID = @DCFG_DLPI_TLS_MODID@\n DCFG_HAVE_64BIT_ATOMICS = @DCFG_HAVE_64BIT_ATOMICS@\n DCFG_HAVE_ATOMIC_BUILTINS = @DCFG_HAVE_ATOMIC_BUILTINS@\n DCFG_HAVE_LIBATOMIC = @DCFG_HAVE_LIBATOMIC@"}, {"sha": "92991813bfd1b3232b63df4373a673cb0fe7988e", "filename": "libphobos/configure", "status": "modified", "additions": 3032, "deletions": 2886, "changes": 5918, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/235d1c467babc736f4800c5a26f2989fe41d6351/libphobos%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/235d1c467babc736f4800c5a26f2989fe41d6351/libphobos%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure?ref=235d1c467babc736f4800c5a26f2989fe41d6351"}, {"sha": "08e6a9282c4bd708f71ef7953c7fd4f82d4db5c9", "filename": "libphobos/configure.ac", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/235d1c467babc736f4800c5a26f2989fe41d6351/libphobos%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/235d1c467babc736f4800c5a26f2989fe41d6351/libphobos%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure.ac?ref=235d1c467babc736f4800c5a26f2989fe41d6351", "patch": "@@ -32,6 +32,7 @@ AC_CONFIG_HEADERS(config.h)\n \n AM_ENABLE_MULTILIB(, ..)\n AC_CANONICAL_SYSTEM\n+AC_USE_SYSTEM_EXTENSIONS\n \n target_alias=${target_alias-$target}\n AC_SUBST(target_alias)\n@@ -125,6 +126,7 @@ DRUNTIME_OS_SOURCES\n DRUNTIME_OS_THREAD_MODEL\n DRUNTIME_OS_ARM_EABI_UNWINDER\n DRUNTIME_OS_MINFO_BRACKETING\n+DRUNTIME_OS_DLPI_TLS_MODID\n DRUNTIME_OS_LINK_SPEC\n DRUNTIME_LIBRARIES_CLIB\n "}, {"sha": "61570468c4cb530f1480c0dfac96c6cd56335708", "filename": "libphobos/libdruntime/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/235d1c467babc736f4800c5a26f2989fe41d6351/libphobos%2Flibdruntime%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/235d1c467babc736f4800c5a26f2989fe41d6351/libphobos%2Flibdruntime%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMakefile.in?ref=235d1c467babc736f4800c5a26f2989fe41d6351", "patch": "@@ -524,6 +524,7 @@ CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DCFG_ARM_EABI_UNWINDER = @DCFG_ARM_EABI_UNWINDER@\n+DCFG_DLPI_TLS_MODID = @DCFG_DLPI_TLS_MODID@\n DCFG_HAVE_64BIT_ATOMICS = @DCFG_HAVE_64BIT_ATOMICS@\n DCFG_HAVE_ATOMIC_BUILTINS = @DCFG_HAVE_ATOMIC_BUILTINS@\n DCFG_HAVE_LIBATOMIC = @DCFG_HAVE_LIBATOMIC@"}, {"sha": "9c58af0e4f65d6edb8519f295805dd9b34d27535", "filename": "libphobos/libdruntime/gcc/config.d.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/235d1c467babc736f4800c5a26f2989fe41d6351/libphobos%2Flibdruntime%2Fgcc%2Fconfig.d.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/235d1c467babc736f4800c5a26f2989fe41d6351/libphobos%2Flibdruntime%2Fgcc%2Fconfig.d.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fgcc%2Fconfig.d.in?ref=235d1c467babc736f4800c5a26f2989fe41d6351", "patch": "@@ -35,6 +35,9 @@ enum ThreadModel\n \n enum ThreadModel GNU_Thread_Model = ThreadModel.@DCFG_THREAD_MODEL@;\n \n+// Whether struct dl_phdr_info has dlpi_tls_modid member.\n+enum OS_Have_Dlpi_Tls_Modid = @DCFG_DLPI_TLS_MODID@;\n+\n // Whether target has support for builtin atomics.\n enum GNU_Have_Atomics = @DCFG_HAVE_ATOMIC_BUILTINS@;\n "}, {"sha": "4cf5a233fc4af591239b571fc316050bbe76b42f", "filename": "libphobos/libdruntime/gcc/sections/elf_shared.d", "status": "modified", "additions": 41, "deletions": 2, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/235d1c467babc736f4800c5a26f2989fe41d6351/libphobos%2Flibdruntime%2Fgcc%2Fsections%2Felf_shared.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/235d1c467babc736f4800c5a26f2989fe41d6351/libphobos%2Flibdruntime%2Fgcc%2Fsections%2Felf_shared.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fgcc%2Fsections%2Felf_shared.d?ref=235d1c467babc736f4800c5a26f2989fe41d6351", "patch": "@@ -74,6 +74,7 @@ else\n     static assert(0, \"unimplemented\");\n }\n import core.sys.posix.pthread;\n+import gcc.config;\n import rt.deh;\n import rt.dmain2;\n import rt.minfo;\n@@ -792,8 +793,40 @@ void scanSegments(in ref dl_phdr_info info, DSO* pdso) nothrow @nogc\n \n         case PT_TLS: // TLS segment\n             safeAssert(!pdso._tlsSize, \"Multiple TLS segments in image header.\");\n-            pdso._tlsMod = info.dlpi_tls_modid;\n-            pdso._tlsSize = phdr.p_memsz;\n+            static if (OS_Have_Dlpi_Tls_Modid)\n+            {\n+                pdso._tlsMod = info.dlpi_tls_modid;\n+                pdso._tlsSize = phdr.p_memsz;\n+            }\n+            else version (Solaris)\n+            {\n+                struct Rt_map\n+                {\n+                    Link_map rt_public;\n+                    const char* rt_pathname;\n+                    c_ulong rt_padstart;\n+                    c_ulong rt_padimlen;\n+                    c_ulong rt_msize;\n+                    uint rt_flags;\n+                    uint rt_flags1;\n+                    c_ulong rt_tlsmodid;\n+                }\n+\n+                Rt_map* map;\n+                version (Shared)\n+                    dlinfo(handleForName(info.dlpi_name), RTLD_DI_LINKMAP, &map);\n+                else\n+                    dlinfo(RTLD_SELF, RTLD_DI_LINKMAP, &map);\n+                // Until Solaris 11.4, tlsmodid for the executable is 0.\n+                // Let it start at 1 as the rest of the code expects.\n+                pdso._tlsMod = map.rt_tlsmodid + 1;\n+                pdso._tlsSize = phdr.p_memsz;\n+            }\n+            else\n+            {\n+                pdso._tlsMod = 0;\n+                pdso._tlsSize = 0;\n+            }\n             break;\n \n         default:\n@@ -988,6 +1021,12 @@ void[] getTLSRange(size_t mod, size_t sz) nothrow @nogc\n     if (mod == 0)\n         return null;\n \n+    version (Solaris)\n+    {\n+        static if (!OS_Have_Dlpi_Tls_Modid)\n+            mod -= 1;\n+    }\n+\n     // base offset\n     auto ti = tls_index(mod, 0);\n     return (__tls_get_addr(&ti)-TLS_DTV_OFFSET)[0 .. sz];"}, {"sha": "b473ad5d88ea0cdb623565dd42ad1bfc7a0d6170", "filename": "libphobos/m4/druntime/os.m4", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/235d1c467babc736f4800c5a26f2989fe41d6351/libphobos%2Fm4%2Fdruntime%2Fos.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/235d1c467babc736f4800c5a26f2989fe41d6351/libphobos%2Fm4%2Fdruntime%2Fos.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fm4%2Fdruntime%2Fos.m4?ref=235d1c467babc736f4800c5a26f2989fe41d6351", "patch": "@@ -184,6 +184,20 @@ AC_DEFUN([DRUNTIME_OS_MINFO_BRACKETING],\n   AC_LANG_POP([C])\n ])\n \n+# DRUNTIME_OS_DLPI_TLS_MODID\n+# ----------------------------\n+# Check if struct dl_phdr_info includes the dlpi_tls_modid member and  \n+# substitute DCFG_DLPI_TLS_MODID.\n+AC_DEFUN([DRUNTIME_OS_DLPI_TLS_MODID],\n+[\n+  AC_LANG_PUSH([C])\n+  AC_CHECK_MEMBER([struct dl_phdr_info.dlpi_tls_modid],\n+\t\t  [DCFG_DLPI_TLS_MODID=true], [DCFG_DLPI_TLS_MODID=false],\n+\t\t  [[#include <link.h>]])\n+  AC_SUBST(DCFG_DLPI_TLS_MODID)\n+  AC_LANG_POP([C])\n+])\n+\n # DRUNTIME_OS_LINK_SPEC\n # ---------------------\n # Add target-specific link options to link_spec."}, {"sha": "5a46cb9c4bde7046169b76f7dec7d0014b656127", "filename": "libphobos/src/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/235d1c467babc736f4800c5a26f2989fe41d6351/libphobos%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/235d1c467babc736f4800c5a26f2989fe41d6351/libphobos%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2FMakefile.in?ref=235d1c467babc736f4800c5a26f2989fe41d6351", "patch": "@@ -281,6 +281,7 @@ CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DCFG_ARM_EABI_UNWINDER = @DCFG_ARM_EABI_UNWINDER@\n+DCFG_DLPI_TLS_MODID = @DCFG_DLPI_TLS_MODID@\n DCFG_HAVE_64BIT_ATOMICS = @DCFG_HAVE_64BIT_ATOMICS@\n DCFG_HAVE_ATOMIC_BUILTINS = @DCFG_HAVE_ATOMIC_BUILTINS@\n DCFG_HAVE_LIBATOMIC = @DCFG_HAVE_LIBATOMIC@"}, {"sha": "26ed875d964365517cd697548423c669dbb1ac1a", "filename": "libphobos/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/235d1c467babc736f4800c5a26f2989fe41d6351/libphobos%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/235d1c467babc736f4800c5a26f2989fe41d6351/libphobos%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Ftestsuite%2FMakefile.in?ref=235d1c467babc736f4800c5a26f2989fe41d6351", "patch": "@@ -154,6 +154,7 @@ CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DCFG_ARM_EABI_UNWINDER = @DCFG_ARM_EABI_UNWINDER@\n+DCFG_DLPI_TLS_MODID = @DCFG_DLPI_TLS_MODID@\n DCFG_HAVE_64BIT_ATOMICS = @DCFG_HAVE_64BIT_ATOMICS@\n DCFG_HAVE_ATOMIC_BUILTINS = @DCFG_HAVE_ATOMIC_BUILTINS@\n DCFG_HAVE_LIBATOMIC = @DCFG_HAVE_LIBATOMIC@"}]}