{"sha": "4f3b383cf8825197e714a4a21852eca071f8e67e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGYzYjM4M2NmODgyNTE5N2U3MTRhNGEyMTg1MmVjYTA3MWY4ZTY3ZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-07-09T09:13:11Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-07-15T05:56:08Z"}, "message": "driver/101383 - handle -gtoggle in driver\n\nThe driver amends assembler options with for example --gdwarf-5\nwhen debugging is enabled but the check for that does not consider\nthe effect of -gtoggle which is not handled in the common option\nmachinery.  The following alters debug_info_level according to\n-gtoggle mimicing what process_options later does in the compiler.\n\nThis in particular avoids changing of the cc1-checksum with every\nbootstrap (debug) cycle as we compute that from stage2 where we\nuse -g -gtoggle but with --gdwarf-5 and no debug info from the\ncompiler the assembler will fill the line table with the temporary\nassembler file names.\n\n2021-07-09  Richard Biener  <rguenther@suse.de>\n\n\tPR driver/101383\n\t* gcc.c (process_command): Process -gtoggle like process_options\n\twould after parsing options.", "tree": {"sha": "af78d0553db46b6edaf966ed0dfc69b691de8633", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af78d0553db46b6edaf966ed0dfc69b691de8633"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f3b383cf8825197e714a4a21852eca071f8e67e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f3b383cf8825197e714a4a21852eca071f8e67e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f3b383cf8825197e714a4a21852eca071f8e67e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f3b383cf8825197e714a4a21852eca071f8e67e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef3bb641e912acb59e689ffbfcb56c7bf0195fd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef3bb641e912acb59e689ffbfcb56c7bf0195fd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef3bb641e912acb59e689ffbfcb56c7bf0195fd6"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "3e98bc7973ebfc19c703c6f1df363540e3a514cf", "filename": "gcc/gcc.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f3b383cf8825197e714a4a21852eca071f8e67e/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f3b383cf8825197e714a4a21852eca071f8e67e/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=4f3b383cf8825197e714a4a21852eca071f8e67e", "patch": "@@ -4927,6 +4927,16 @@ process_command (unsigned int decoded_options_count,\n #endif\n     }\n \n+  /* Handle -gtoggle as it would later in toplev.c:process_options to\n+     make the debug-level-gt spec function work as expected.  */\n+  if (flag_gtoggle)\n+    {\n+      if (debug_info_level == DINFO_LEVEL_NONE)\n+\tdebug_info_level = DINFO_LEVEL_NORMAL;\n+      else\n+\tdebug_info_level = DINFO_LEVEL_NONE;\n+    }\n+\n   if (output_file\n       && strcmp (output_file, \"-\") != 0\n       && strcmp (output_file, HOST_BIT_BUCKET) != 0)"}]}