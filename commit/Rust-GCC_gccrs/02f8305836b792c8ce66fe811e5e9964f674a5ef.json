{"sha": "02f8305836b792c8ce66fe811e5e9964f674a5ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJmODMwNTgzNmI3OTJjOGNlNjZmZTgxMWU1ZTk5NjRmNjc0YTVlZg==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2018-10-12T03:16:10Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2018-10-12T03:16:10Z"}, "message": "extend.texi (attribute flatten): Mention interaction with noinline.\n\n\ngcc/ChangeLog:\n\n\t* doc/extend.texi (attribute flatten): Mention interaction with\n\tnoinline.\n\nFrom-SVN: r265075", "tree": {"sha": "2f6dc445d02338a270e52fd1df6fdfa719f319b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f6dc445d02338a270e52fd1df6fdfa719f319b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02f8305836b792c8ce66fe811e5e9964f674a5ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02f8305836b792c8ce66fe811e5e9964f674a5ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02f8305836b792c8ce66fe811e5e9964f674a5ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02f8305836b792c8ce66fe811e5e9964f674a5ef/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "97ae2126cac5a3aa2fbfa86954c08b463e1e3c6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97ae2126cac5a3aa2fbfa86954c08b463e1e3c6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97ae2126cac5a3aa2fbfa86954c08b463e1e3c6c"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "5aded93b4e2ace4175c65d871814450f9e4510f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02f8305836b792c8ce66fe811e5e9964f674a5ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02f8305836b792c8ce66fe811e5e9964f674a5ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=02f8305836b792c8ce66fe811e5e9964f674a5ef", "patch": "@@ -1,3 +1,8 @@\n+2018-10-11  Martin Sebor  <msebor@redhat.com>\n+\n+\t* doc/extend.texi (attribute flatten): Mention interaction with\n+\tnoinline.\n+\n 2018-10-11  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR target/87156"}, {"sha": "87021cd8e6e3e903b3fe864ce658a11d16138d79", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02f8305836b792c8ce66fe811e5e9964f674a5ef/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02f8305836b792c8ce66fe811e5e9964f674a5ef/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=02f8305836b792c8ce66fe811e5e9964f674a5ef", "patch": "@@ -2615,8 +2615,9 @@ explicit @code{externally_visible} attributes are still necessary.\n @cindex @code{flatten} function attribute\n Generally, inlining into a function is limited.  For a function marked with\n this attribute, every call inside this function is inlined, if possible.\n-Whether the function itself is considered for inlining depends on its size and\n-the current inlining parameters.\n+Functions declared with attribute @code{noinline} and similar are not\n+inlined.  Whether the function itself is considered for inlining depends\n+on its size and the current inlining parameters.\n \n @item format (@var{archetype}, @var{string-index}, @var{first-to-check})\n @cindex @code{format} function attribute"}]}