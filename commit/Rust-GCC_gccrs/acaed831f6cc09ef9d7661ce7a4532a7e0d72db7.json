{"sha": "acaed831f6cc09ef9d7661ce7a4532a7e0d72db7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNhZWQ4MzFmNmNjMDllZjlkNzY2MWNlN2E0NTMyYTdlMGQ3MmRiNw==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2010-06-10T08:06:08Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2010-06-10T08:06:08Z"}, "message": "error.c (error_print): Pre-initialize loc by NULL.\n\n2010-06-10  Kai Tietz  <kai.tietz@onevision.com>\n\n\t* error.c (error_print): Pre-initialize loc by NULL.\n\t* openmp.c (resolve_omp_clauses): Add explicit\n\tbraces to avoid ambigous else.\n\t* array.c (match_subscript): Pre-initialize m to MATCH_ERROR.\n\nFrom-SVN: r160525", "tree": {"sha": "0a3c1b7266c33fae2cdf48b04ca5172331de4581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a3c1b7266c33fae2cdf48b04ca5172331de4581"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acaed831f6cc09ef9d7661ce7a4532a7e0d72db7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acaed831f6cc09ef9d7661ce7a4532a7e0d72db7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acaed831f6cc09ef9d7661ce7a4532a7e0d72db7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acaed831f6cc09ef9d7661ce7a4532a7e0d72db7/comments", "author": null, "committer": null, "parents": [{"sha": "e4f32cb0a55eefcd56b1c42bcaf5c8aadc692ba6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4f32cb0a55eefcd56b1c42bcaf5c8aadc692ba6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4f32cb0a55eefcd56b1c42bcaf5c8aadc692ba6"}], "stats": {"total": 49, "additions": 30, "deletions": 19}, "files": [{"sha": "ae54bc552d836b8a53d50172cbed632f88421fc9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acaed831f6cc09ef9d7661ce7a4532a7e0d72db7/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acaed831f6cc09ef9d7661ce7a4532a7e0d72db7/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=acaed831f6cc09ef9d7661ce7a4532a7e0d72db7", "patch": "@@ -1,3 +1,10 @@\n+2010-06-10  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\t* error.c (error_print): Pre-initialize loc by NULL.\n+\t* openmp.c (resolve_omp_clauses): Add explicit\n+\tbraces to avoid ambigous else.\n+\t* array.c (match_subscript): Pre-initialize m to MATCH_ERROR.\n+\n 2010-06-10  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* gfc-internals.texi: Move to GFDL 1.3."}, {"sha": "64816f28abbd7517b8a2435180108696108903c3", "filename": "gcc/fortran/array.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acaed831f6cc09ef9d7661ce7a4532a7e0d72db7/gcc%2Ffortran%2Farray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acaed831f6cc09ef9d7661ce7a4532a7e0d72db7/gcc%2Ffortran%2Farray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farray.c?ref=acaed831f6cc09ef9d7661ce7a4532a7e0d72db7", "patch": "@@ -64,7 +64,7 @@ gfc_copy_array_ref (gfc_array_ref *src)\n static match\n match_subscript (gfc_array_ref *ar, int init, bool match_star)\n {\n-  match m;\n+  match m = MATCH_ERROR;\n   bool star = false;\n   int i;\n "}, {"sha": "30928286c98682ac986b47168d6654e9c2272e82", "filename": "gcc/fortran/error.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acaed831f6cc09ef9d7661ce7a4532a7e0d72db7/gcc%2Ffortran%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acaed831f6cc09ef9d7661ce7a4532a7e0d72db7/gcc%2Ffortran%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ferror.c?ref=acaed831f6cc09ef9d7661ce7a4532a7e0d72db7", "patch": "@@ -471,7 +471,7 @@ error_print (const char *type, const char *format0, va_list argp)\n   locus *l1, *l2, *loc;\n   const char *format;\n \n-  l1 = l2 = NULL;\n+  loc = l1 = l2 = NULL;\n \n   have_l1 = 0;\n   pos = -1;"}, {"sha": "0e25bf48cb39cfd200e4a9bb0efa300bdc9a7a4b", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 21, "deletions": 17, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acaed831f6cc09ef9d7661ce7a4532a7e0d72db7/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acaed831f6cc09ef9d7661ce7a4532a7e0d72db7/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=acaed831f6cc09ef9d7661ce7a4532a7e0d72db7", "patch": "@@ -845,11 +845,13 @@ resolve_omp_clauses (gfc_code *code)\n   for (list = 0; list < OMP_LIST_NUM; list++)\n     if (list != OMP_LIST_FIRSTPRIVATE && list != OMP_LIST_LASTPRIVATE)\n       for (n = omp_clauses->lists[list]; n; n = n->next)\n-\tif (n->sym->mark)\n-\t  gfc_error (\"Symbol '%s' present on multiple clauses at %L\",\n-\t\t     n->sym->name, &code->loc);\n-\telse\n-\t  n->sym->mark = 1;\n+\t{\n+\t  if (n->sym->mark)\n+\t    gfc_error (\"Symbol '%s' present on multiple clauses at %L\",\n+\t\t       n->sym->name, &code->loc);\n+\t  else\n+\t    n->sym->mark = 1;\n+\t}\n \n   gcc_assert (OMP_LIST_LASTPRIVATE == OMP_LIST_FIRSTPRIVATE + 1);\n   for (list = OMP_LIST_FIRSTPRIVATE; list <= OMP_LIST_LASTPRIVATE; list++)\n@@ -862,22 +864,24 @@ resolve_omp_clauses (gfc_code *code)\n \t}\n \n   for (n = omp_clauses->lists[OMP_LIST_FIRSTPRIVATE]; n; n = n->next)\n-    if (n->sym->mark)\n-      gfc_error (\"Symbol '%s' present on multiple clauses at %L\",\n-\t\t n->sym->name, &code->loc);\n-    else\n-      n->sym->mark = 1;\n-\n+    {\n+      if (n->sym->mark)\n+\tgfc_error (\"Symbol '%s' present on multiple clauses at %L\",\n+\t\t   n->sym->name, &code->loc);\n+      else\n+\tn->sym->mark = 1;\n+    }\n   for (n = omp_clauses->lists[OMP_LIST_LASTPRIVATE]; n; n = n->next)\n     n->sym->mark = 0;\n \n   for (n = omp_clauses->lists[OMP_LIST_LASTPRIVATE]; n; n = n->next)\n-    if (n->sym->mark)\n-      gfc_error (\"Symbol '%s' present on multiple clauses at %L\",\n-\t\t n->sym->name, &code->loc);\n-    else\n-      n->sym->mark = 1;\n-\n+    {\n+      if (n->sym->mark)\n+\tgfc_error (\"Symbol '%s' present on multiple clauses at %L\",\n+\t\t   n->sym->name, &code->loc);\n+      else\n+\tn->sym->mark = 1;\n+    }\n   for (list = 0; list < OMP_LIST_NUM; list++)\n     if ((n = omp_clauses->lists[list]) != NULL)\n       {"}]}