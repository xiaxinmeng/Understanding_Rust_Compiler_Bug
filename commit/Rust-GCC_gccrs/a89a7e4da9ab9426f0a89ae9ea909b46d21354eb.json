{"sha": "a89a7e4da9ab9426f0a89ae9ea909b46d21354eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg5YTdlNGRhOWFiOTQyNmYwYTg5YWU5ZWE5MDliNDZkMjEzNTRlYg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1993-01-06T03:12:17Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1993-01-06T03:12:17Z"}, "message": "Fix unknown symbol error when linking gen* programs.\n\nFrom-SVN: r3110", "tree": {"sha": "13c983cfe9a7fef11bbbb93c78393635dc37ad46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13c983cfe9a7fef11bbbb93c78393635dc37ad46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a89a7e4da9ab9426f0a89ae9ea909b46d21354eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a89a7e4da9ab9426f0a89ae9ea909b46d21354eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a89a7e4da9ab9426f0a89ae9ea909b46d21354eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a89a7e4da9ab9426f0a89ae9ea909b46d21354eb/comments", "author": null, "committer": null, "parents": [{"sha": "8739838dfbcbb0ffbc05cbe7839c0acea4238ca8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8739838dfbcbb0ffbc05cbe7839c0acea4238ca8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8739838dfbcbb0ffbc05cbe7839c0acea4238ca8"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "64475397a14d85b0b674941320b7f5a9ecdc45f0", "filename": "gcc/halfpic.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a89a7e4da9ab9426f0a89ae9ea909b46d21354eb/gcc%2Fhalfpic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a89a7e4da9ab9426f0a89ae9ea909b46d21354eb/gcc%2Fhalfpic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhalfpic.c?ref=a89a7e4da9ab9426f0a89ae9ea909b46d21354eb", "patch": "@@ -45,9 +45,10 @@ extern rtx eliminate_constant_term ();\n extern void assemble_name ();\n extern void output_addr_const ();\n \n-int flag_half_pic;\t\t/* Global half-pic flag.  */\n-int half_pic_number_ptrs;\t/* # distinct pointers found */\n-int half_pic_number_refs;\t/* # half-pic references */\n+int flag_half_pic\t\t= 0;\t/* Global half-pic flag.  */\n+int half_pic_number_ptrs\t= 0;\t/* # distinct pointers found */\n+int half_pic_number_refs\t= 0;\t/* # half-pic references */\n+int (*ptr_half_pic_address_p)() = half_pic_address_p;\n \n /* Obstack to hold generated pic names.  */\n static struct obstack half_pic_obstack;"}, {"sha": "777afcfbf70945e4d774087a21febc7d6c34f888", "filename": "gcc/halfpic.h", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a89a7e4da9ab9426f0a89ae9ea909b46d21354eb/gcc%2Fhalfpic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a89a7e4da9ab9426f0a89ae9ea909b46d21354eb/gcc%2Fhalfpic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhalfpic.h?ref=a89a7e4da9ab9426f0a89ae9ea909b46d21354eb", "patch": "@@ -17,7 +17,18 @@ You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n-extern int  flag_half_pic;\t\t/* Global half-pic flag.  */\n+/* Declare the variable flag_half_pic as 'int' instead of 'extern\n+   int', so that BSS variables are created (even though this is not\n+   strict ANSI).  This is because rtl.c now refers to the\n+   CONSTANT_ADDRESS_P macro, which in turn refers to flag_half_pic,\n+   and wants to call half_pic_address_p, whose address we also store\n+   in in a BSS variable.  This way, the gen* programs won't get\n+   unknown symbol errors when being linked (flag_half_pic will never\n+   be true in the gen* programs).  */\n+\n+int flag_half_pic;\t\t\t/* Global half-pic flag.  */\n+int (*ptr_half_pic_address_p) ();\t/* ptr to half_pic_address_p () */\n+\n extern int  half_pic_number_ptrs;\t/* # distinct pointers found */\n extern int  half_pic_number_refs;\t/* # half-pic references */\n extern void half_pic_encode ();\t\t/* encode whether half-pic */\n@@ -38,7 +49,7 @@ extern struct rtx_def *half_pic_ptr ();\t/* return RTX for half-pic pointer */\n #define HALF_PIC_DECLARE(NAME)\thalf_pic_declare (NAME)\n #define HALF_PIC_INIT()\t\thalf_pic_init ()\n #define HALF_PIC_FINISH(STREAM)\thalf_pic_finish (STREAM)\n-#define HALF_PIC_ADDRESS_P(X)\thalf_pic_address_p (X)\n+#define HALF_PIC_ADDRESS_P(X)\t((*ptr_half_pic_address_p) (X))\n #define HALF_PIC_PTR(X)\t\thalf_pic_ptr (X)\n \n /* Prefix for half-pic names */"}]}