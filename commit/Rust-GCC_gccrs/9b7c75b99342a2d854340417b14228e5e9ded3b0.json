{"sha": "9b7c75b99342a2d854340417b14228e5e9ded3b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI3Yzc1Yjk5MzQyYTJkODU0MzQwNDE3YjE0MjI4ZTVlOWRlZDNiMA==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2002-09-03T18:33:56Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2002-09-03T18:33:56Z"}, "message": "s390.md (\"movti\"): Add Q->Q alternative.\n\n\t* config/s390/s390.md (\"movti\"): Add Q->Q alternative.\n\t(\"*movdi_64\", \"*movdi_31\", \"*movsi\", \"movhi\", \"movqi_64\",\n\t\"movqi\", \"*movdf_64\", \"*movdf_31\", \"*movsf\"): Likewise.\n\n\t(\"*movti_ss\", \"*movdi_ss\", \"*movsi_ss\", \"*movdf_ss\",\n\t\"*movsf_ss\"): Remove.\n\nFrom-SVN: r56765", "tree": {"sha": "ed4faaf1c0d3a48ce075e54e24740cdf331213b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed4faaf1c0d3a48ce075e54e24740cdf331213b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b7c75b99342a2d854340417b14228e5e9ded3b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b7c75b99342a2d854340417b14228e5e9ded3b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b7c75b99342a2d854340417b14228e5e9ded3b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b7c75b99342a2d854340417b14228e5e9ded3b0/comments", "author": null, "committer": null, "parents": [{"sha": "710ba35f4ff503f3f31c1e43d3ed8819eedca2dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/710ba35f4ff503f3f31c1e43d3ed8819eedca2dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/710ba35f4ff503f3f31c1e43d3ed8819eedca2dc"}], "stats": {"total": 157, "additions": 68, "deletions": 89}, "files": [{"sha": "5d23406dd415eab8eeffe4dbb2fa755bfee71fed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7c75b99342a2d854340417b14228e5e9ded3b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7c75b99342a2d854340417b14228e5e9ded3b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9b7c75b99342a2d854340417b14228e5e9ded3b0", "patch": "@@ -1,3 +1,12 @@\n+2002-09-03  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.md (\"movti\"): Add Q->Q alternative.\n+\t(\"*movdi_64\", \"*movdi_31\", \"*movsi\", \"movhi\", \"movqi_64\",\n+\t\"movqi\", \"*movdf_64\", \"*movdf_31\", \"*movsf\"): Likewise.\n+\t\n+\t(\"*movti_ss\", \"*movdi_ss\", \"*movsi_ss\", \"*movdf_ss\", \n+\t\"*movsf_ss\"): Remove.\n+\n 2002-09-03  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* pa32-regs.h (CLASS_CANNOT_CHANGE_MODE, CLASS_CANNOT_CHANGE_MODE_P):"}, {"sha": "317e9a1644a538ac6cab858c6a6dd054f390ea8b", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 59, "deletions": 89, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b7c75b99342a2d854340417b14228e5e9ded3b0/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b7c75b99342a2d854340417b14228e5e9ded3b0/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=9b7c75b99342a2d854340417b14228e5e9ded3b0", "patch": "@@ -779,24 +779,17 @@\n ; movti instruction pattern(s).\n ;\n \n-(define_insn \"*movti_ss\"\n-  [(set (match_operand:TI 0 \"s_operand\" \"=Q\")\n-        (match_operand:TI 1 \"s_imm_operand\" \"Q\"))]\n-  \"\"\n-  \"mvc\\\\t%O0(16,%R0),%1\"\t\n-  [(set_attr \"op_type\" \"SS\")\n-   (set_attr \"atype\"   \"mem\")])\n-\n (define_insn \"movti\"\n-  [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=d,Q,d,m\")\n-        (match_operand:TI 1 \"general_operand\" \"Q,d,dKm,d\"))]\n+  [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=d,Q,d,m,Q\")\n+        (match_operand:TI 1 \"general_operand\" \"Q,d,dKm,d,Q\"))]\n   \"TARGET_64BIT\"\n   \"@\n    lmg\\\\t%0,%N0,%1\n    stmg\\\\t%1,%N1,%0\n    #\n-   #\"\n-  [(set_attr \"op_type\" \"RSE,RSE,NN,NN\")\n+   #\n+   mvc\\\\t%O0(16,%R0),%1\"\n+  [(set_attr \"op_type\" \"RSE,RSE,NN,NN,SS\")\n    (set_attr \"atype\"   \"mem\")])\n \n (define_split\n@@ -913,31 +906,24 @@\n     (set_attr \"atype\"   \"reg\")\n     (set_attr \"type\"    \"la\")])\n \n-(define_insn \"*movdi_ss\"\n-  [(set (match_operand:DI 0 \"s_operand\" \"=Q\")\n-        (match_operand:DI 1 \"s_imm_operand\" \"Q\"))]\n-  \"\"\n-  \"mvc\\\\t%O0(8,%R0),%1\"\t\n-  [(set_attr \"op_type\" \"SS\")\n-   (set_attr \"atype\"   \"mem\")])\n-\n (define_insn \"*movdi_64\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=d,d,m,!*f,!*f,!m\")\n-        (match_operand:DI 1 \"general_operand\" \"d,m,d,*f,m,*f\"))]\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=d,d,m,!*f,!*f,!m,Q\")\n+        (match_operand:DI 1 \"general_operand\" \"d,m,d,*f,m,*f,Q\"))]\n   \"TARGET_64BIT\"\n   \"@\n    lgr\\\\t%0,%1\n    lg\\\\t%0,%1\n    stg\\\\t%1,%0\n    ldr\\\\t%0,%1\n    ld\\\\t%0,%1\n-   std\\\\t%1,%0\"\n-  [(set_attr \"op_type\" \"RR,RXE,RXE,RR,RX,RX\")\n-   (set_attr \"atype\"   \"reg,mem,mem,reg,mem,mem\")])\n+   std\\\\t%1,%0\n+   mvc\\\\t%O0(8,%R0),%1\"\n+  [(set_attr \"op_type\" \"RR,RXE,RXE,RR,RX,RX,SS\")\n+   (set_attr \"atype\"   \"reg,mem,mem,reg,mem,mem,mem\")])\n \n (define_insn \"*movdi_31\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=d,Q,d,m,!*f,!*f,!m\")\n-        (match_operand:DI 1 \"general_operand\" \"Q,d,dKm,d,*f,m,*f\"))]\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=d,Q,d,m,!*f,!*f,!m,Q\")\n+        (match_operand:DI 1 \"general_operand\" \"Q,d,dKm,d,*f,m,*f,Q\"))]\n   \"!TARGET_64BIT\"\n   \"@\n    lm\\\\t%0,%N0,%1\n@@ -946,9 +932,10 @@\n    #\n    ldr\\\\t%0,%1\n    ld\\\\t%0,%1\n-   std\\\\t%1,%0\"\n-  [(set_attr \"op_type\" \"RS,RS,NN,NN,RR,RX,RX\")\n-   (set_attr \"atype\"   \"mem,mem,*,*,reg,mem,mem\")])\n+   std\\\\t%1,%0\n+   mvc\\\\t%O0(8,%R0),%1\"\n+  [(set_attr \"op_type\" \"RS,RS,NN,NN,RR,RX,RX,SS\")\n+   (set_attr \"atype\"   \"mem,mem,*,*,reg,mem,mem,mem\")])\n \n (define_split\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n@@ -1066,76 +1053,72 @@\n }\"\n   [(set_attr \"op_type\" \"RI\")])\n \n-(define_insn \"*movsi_ss\"\n-  [(set (match_operand:SI 0 \"s_operand\" \"=Q\")\n-        (match_operand:SI 1 \"s_imm_operand\" \"Q\"))]\n-  \"\"\n-  \"mvc\\\\t%O0(4,%R0),%1\"\t\n-  [(set_attr \"op_type\" \"SS\")\n-   (set_attr \"atype\"   \"mem\")])\n-\n (define_insn \"*movsi\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d,d,m,!*f,!*f,!m\")\n-        (match_operand:SI 1 \"general_operand\" \"d,m,d,*f,m,*f\"))]\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d,d,m,!*f,!*f,!m,Q\")\n+        (match_operand:SI 1 \"general_operand\" \"d,m,d,*f,m,*f,Q\"))]\n   \"\"\n   \"@\n    lr\\\\t%0,%1\n    l\\\\t%0,%1\n    st\\\\t%1,%0\n    ler\\\\t%0,%1\n    le\\\\t%0,%1\n-   ste\\\\t%1,%0\"\n-  [(set_attr \"op_type\" \"RR,RX,RX,RR,RX,RX\")\n-   (set_attr \"atype\"   \"reg,mem,mem,reg,mem,mem\")])\n+   ste\\\\t%1,%0\n+   mvc\\\\t%O0(4,%R0),%1\"\n+  [(set_attr \"op_type\" \"RR,RX,RX,RR,RX,RX,SS\")\n+   (set_attr \"atype\"   \"reg,mem,mem,reg,mem,mem,mem\")])\n \n \n ;\n ; movhi instruction pattern(s).\n ;\n \n (define_insn \"movhi\"\n-  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=d,d,d,m\")\n-        (match_operand:HI 1 \"general_operand\" \"d,n,m,d\"))]\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=d,d,d,m,Q\")\n+        (match_operand:HI 1 \"general_operand\" \"d,n,m,d,Q\"))]\n   \"\"\n   \"@\n    lr\\\\t%0,%1\n    lhi\\\\t%0,%h1\n    lh\\\\t%0,%1\n-   sth\\\\t%1,%0\"\n-  [(set_attr \"op_type\" \"RR,RI,RX,RX\")\n-   (set_attr \"atype\"   \"reg,reg,mem,mem\")])\n+   sth\\\\t%1,%0\n+   mvc\\\\t%O0(2,%R0),%1\"\n+  [(set_attr \"op_type\" \"RR,RI,RX,RX,SS\")\n+   (set_attr \"atype\"   \"reg,reg,mem,mem,mem\")])\n \n \n ;\n ; movqi instruction pattern(s).\n ;\n \n (define_insn \"movqi_64\"\n-  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d,d,d,m,Q\")\n-        (match_operand:QI 1 \"general_operand\" \"d,n,m,d,n\"))]\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d,d,d,m,Q,Q\")\n+        (match_operand:QI 1 \"general_operand\" \"d,n,m,d,n,Q\"))]\n   \"TARGET_64BIT\"\n   \"@\n    lr\\\\t%0,%1\n    lhi\\\\t%0,%b1\n    llgc\\\\t%0,%1\n    stc\\\\t%1,%0\n-   mvi\\\\t%0,%b1\"\n-  [(set_attr \"op_type\" \"RR,RI,RXE,RX,SI\")\n-   (set_attr \"atype\"   \"reg,reg,mem,mem,mem\")])\n+   mvi\\\\t%0,%b1\n+   mvc\\\\t%O0(1,%R0),%1\"\n+  [(set_attr \"op_type\" \"RR,RI,RXE,RX,SI,SS\")\n+   (set_attr \"atype\"   \"reg,reg,mem,mem,mem,mem\")])\n \n \n (define_insn \"movqi\"\n-  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d,d,d,m,Q\")\n-        (match_operand:QI 1 \"general_operand\" \"d,n,m,d,n\"))]\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=d,d,d,m,Q,Q\")\n+        (match_operand:QI 1 \"general_operand\" \"d,n,m,d,n,Q\"))]\n   \"\"\n   \"@\n    lr\\\\t%0,%1\n    lhi\\\\t%0,%b1\n    ic\\\\t%0,%1\n    stc\\\\t%1,%0\n-   mvi\\\\t%0,%b1\"\n-  [(set_attr \"op_type\" \"RR,RI,RX,RX,SI\")\n-   (set_attr \"atype\"   \"reg,reg,mem,mem,mem\")])\n+   mvi\\\\t%0,%b1\n+   mvc\\\\t%O0(1,%R0),%1\"\n+  [(set_attr \"op_type\" \"RR,RI,RX,RX,SI,SS\")\n+   (set_attr \"atype\"   \"reg,reg,mem,mem,mem,mem\")])\n \n \n ;\n@@ -1196,31 +1179,24 @@\n     operands[1] = force_const_mem (DFmode, operands[1]);\n }\")\n \n-(define_insn \"*movdf_ss\"\n-  [(set (match_operand:DF 0 \"s_operand\" \"=Q\")\n-        (match_operand:DF 1 \"s_imm_operand\" \"Q\"))]\n-  \"\"\n-  \"mvc\\\\t%O0(8,%R0),%1\"\t\n-  [(set_attr \"op_type\" \"SS\")\n-   (set_attr \"atype\"   \"mem\")])\n-\n (define_insn \"*movdf_64\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,f,m,d,d,m\")\n-        (match_operand:DF 1 \"general_operand\" \"f,m,f,d,m,d\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,f,m,d,d,m,Q\")\n+        (match_operand:DF 1 \"general_operand\" \"f,m,f,d,m,d,Q\"))]\n   \"TARGET_64BIT\"\n   \"@\n    ldr\\\\t%0,%1\n    ld\\\\t%0,%1\n    std\\\\t%1,%0\n    lgr\\\\t%0,%1\n    lg\\\\t%0,%1\n-   stg\\\\t%1,%0\"\n-  [(set_attr \"op_type\" \"RR,RX,RX,RR,RXE,RXE\")\n-   (set_attr \"atype\"   \"reg,mem,mem,reg,mem,mem\")])\n+   stg\\\\t%1,%0\n+   mvc\\\\t%O0(8,%R0),%1\"\n+  [(set_attr \"op_type\" \"RR,RX,RX,RR,RXE,RXE,SS\")\n+   (set_attr \"atype\"   \"reg,mem,mem,reg,mem,mem,mem\")])\n \n (define_insn \"*movdf_31\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,f,m,d,Q,d,m\")\n-        (match_operand:DF 1 \"general_operand\" \"f,m,f,Q,d,dKm,d\"))]\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,f,m,d,Q,d,m,Q\")\n+        (match_operand:DF 1 \"general_operand\" \"f,m,f,Q,d,dKm,d,Q\"))]\n   \"!TARGET_64BIT\"\n   \"@\n    ldr\\\\t%0,%1\n@@ -1229,9 +1205,10 @@\n    lm\\\\t%0,%N0,%1\n    stm\\\\t%1,%N1,%0\n    #\n-   #\"\n-  [(set_attr \"op_type\" \"RR,RX,RX,RS,RS,NN,NN\")\n-   (set_attr \"atype\"   \"reg,mem,mem,mem,mem,*,*\")])\n+   #\n+   mvc\\\\t%O0(8,%R0),%1\"\n+  [(set_attr \"op_type\" \"RR,RX,RX,RS,RS,NN,NN,SS\")\n+   (set_attr \"atype\"   \"reg,mem,mem,mem,mem,*,*,mem\")])\n \n (define_split\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"\")\n@@ -1299,27 +1276,20 @@\n     operands[1] = force_const_mem (SFmode, operands[1]);\n }\")\n \n-(define_insn \"*movsf_ss\"\n-  [(set (match_operand:SF 0 \"s_operand\" \"=Q\")\n-        (match_operand:SF 1 \"s_imm_operand\" \"Q\"))]\n-  \"\"\n-  \"mvc\\\\t%O0(4,%R0),%1\"\t\n-  [(set_attr \"op_type\" \"SS\")\n-   (set_attr \"atype\"   \"mem\")])\n-\n (define_insn \"*movsf\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=f,f,m,d,d,m\")\n-        (match_operand:SF 1 \"general_operand\" \"f,m,f,d,m,d\"))]\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=f,f,m,d,d,m,Q\")\n+        (match_operand:SF 1 \"general_operand\" \"f,m,f,d,m,d,Q\"))]\n   \"\"\n   \"@\n    ler\\\\t%0,%1\n    le\\\\t%0,%1\n    ste\\\\t%1,%0\n    lr\\\\t%0,%1\n    l\\\\t%0,%1\n-   st\\\\t%1,%0\"\n-  [(set_attr \"op_type\" \"RR,RX,RX,RR,RX,RX\")\n-   (set_attr \"atype\"   \"reg,mem,mem,reg,mem,mem\")])\n+   st\\\\t%1,%0\n+   mvc\\\\t%O0(4,%R0),%1\"\n+  [(set_attr \"op_type\" \"RR,RX,RX,RR,RX,RX,SS\")\n+   (set_attr \"atype\"   \"reg,mem,mem,reg,mem,mem,mem\")])\n \n ;\n ; load_multiple pattern(s)."}]}