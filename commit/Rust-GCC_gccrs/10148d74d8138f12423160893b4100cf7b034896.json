{"sha": "10148d74d8138f12423160893b4100cf7b034896", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAxNDhkNzRkODEzOGYxMjQyMzE2MDg5M2I0MTAwY2Y3YjAzNDg5Ng==", "commit": {"author": {"name": "Dominik Vogt", "email": "vogt@linux.vnet.ibm.com", "date": "2015-12-18T10:36:57Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2015-12-18T10:36:57Z"}, "message": "S/390: Allow to use r2 to r4 as literal pool base.\n\ngcc/ChangeLog\n\n\t* config/s390/s390.c (s390_init_frame_layout): Try r4 to r2 for the\n\tliteral pool pointer.\n\ngcc/testsuite/ChangeLog\n\n\t* gcc.target/s390/litpool-r3-1.c: New test.\n\nFrom-SVN: r231813", "tree": {"sha": "f9246c707651d4529df1ccb2af4d1096d8e797fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9246c707651d4529df1ccb2af4d1096d8e797fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10148d74d8138f12423160893b4100cf7b034896", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10148d74d8138f12423160893b4100cf7b034896", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10148d74d8138f12423160893b4100cf7b034896", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10148d74d8138f12423160893b4100cf7b034896/comments", "author": {"login": "vogtd", "id": 9690100, "node_id": "MDQ6VXNlcjk2OTAxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/9690100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vogtd", "html_url": "https://github.com/vogtd", "followers_url": "https://api.github.com/users/vogtd/followers", "following_url": "https://api.github.com/users/vogtd/following{/other_user}", "gists_url": "https://api.github.com/users/vogtd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vogtd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vogtd/subscriptions", "organizations_url": "https://api.github.com/users/vogtd/orgs", "repos_url": "https://api.github.com/users/vogtd/repos", "events_url": "https://api.github.com/users/vogtd/events{/privacy}", "received_events_url": "https://api.github.com/users/vogtd/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5c846df71f33216fa8b5ccf21e88ee64b58b678a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c846df71f33216fa8b5ccf21e88ee64b58b678a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c846df71f33216fa8b5ccf21e88ee64b58b678a"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "802c8b8fd761844d11082a42d7e91d0738601de9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10148d74d8138f12423160893b4100cf7b034896/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10148d74d8138f12423160893b4100cf7b034896/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=10148d74d8138f12423160893b4100cf7b034896", "patch": "@@ -1,3 +1,8 @@\n+2015-12-18  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n+\n+\t* config/s390/s390.c (s390_init_frame_layout): Try r4 to r2 for the\n+\tliteral pool pointer.\n+\n 2015-12-18  Yuri Rumyantsev  <ysrumyan@gmail.com>\n \n \tPR tree-optimization/68906"}, {"sha": "cba88bbb0fccfc4108b78b9471e9596a6c82bc4a", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10148d74d8138f12423160893b4100cf7b034896/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10148d74d8138f12423160893b4100cf7b034896/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=10148d74d8138f12423160893b4100cf7b034896", "patch": "@@ -9584,10 +9584,17 @@ s390_init_frame_layout (void)\n \t as base register to avoid save/restore overhead.  */\n       if (!base_used)\n \tcfun->machine->base_reg = NULL_RTX;\n-      else if (crtl->is_leaf && !df_regs_ever_live_p (5))\n-\tcfun->machine->base_reg = gen_rtx_REG (Pmode, 5);\n       else\n-\tcfun->machine->base_reg = gen_rtx_REG (Pmode, BASE_REGNUM);\n+\t{\n+\t  int br = 0;\n+\n+\t  if (crtl->is_leaf)\n+\t    /* Prefer r5 (most likely to be free).  */\n+\t    for (br = 5; br >= 2 && df_regs_ever_live_p (br); br--)\n+\t      ;\n+\t  cfun->machine->base_reg =\n+\t    gen_rtx_REG (Pmode, (br > 0) ? br : BASE_REGNUM);\n+\t}\n \n       s390_register_info ();\n       s390_frame_info ();"}, {"sha": "3053736ace68e61abb71b139647a0d7124f13073", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10148d74d8138f12423160893b4100cf7b034896/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10148d74d8138f12423160893b4100cf7b034896/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=10148d74d8138f12423160893b4100cf7b034896", "patch": "@@ -1,3 +1,7 @@\n+2015-12-18  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n+\n+\t* gcc.target/s390/litpool-r3-1.c: New test.\n+\n 2015-12-18  Yuri Rumyantsev  <ysrumyan@gmail.com>\n \n \tPR tree-optimization/68906"}, {"sha": "8ee50cf435a599994bfad51c9882ef4396a787da", "filename": "gcc/testsuite/gcc.target/s390/litpool-r3-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10148d74d8138f12423160893b4100cf7b034896/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Flitpool-r3-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10148d74d8138f12423160893b4100cf7b034896/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Flitpool-r3-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Flitpool-r3-1.c?ref=10148d74d8138f12423160893b4100cf7b034896", "patch": "@@ -0,0 +1,16 @@\n+/* Validate that r3 may be used as the literal pool pointer.  Test that only on\n+   64-bit for z900 to simplify the test.  It's not really different on 31-bit\n+   or other cpus.  */\n+\n+/* { dg-do compile { target { lp64 } } } */\n+/* { dg-options \"-march=z900 -O2\" } */\n+\n+__int128 gi;\n+const int c = 0x12345678u;\n+int foo(void)\n+{\n+\tgi += c;\n+\treturn c;\n+}\n+\n+/* { dg-final { scan-assembler-times \"\\tlarl\\t%r3,.L3\" 1 } } */"}]}