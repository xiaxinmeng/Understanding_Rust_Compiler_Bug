{"sha": "0e65fd7d19474884af3eb6f1a7a3f15d856f9cf8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU2NWZkN2QxOTQ3NDg4NGFmM2ViNmYxYTdhM2YxNWQ4NTZmOWNmOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-11-26T09:44:49Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-11-26T09:44:49Z"}, "message": "* testsuite/libgomp.c/target-35.c: New test.\n\nFrom-SVN: r230926", "tree": {"sha": "6915a5867972de621a0cb22fc4d537259dea6b82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6915a5867972de621a0cb22fc4d537259dea6b82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e65fd7d19474884af3eb6f1a7a3f15d856f9cf8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e65fd7d19474884af3eb6f1a7a3f15d856f9cf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e65fd7d19474884af3eb6f1a7a3f15d856f9cf8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e65fd7d19474884af3eb6f1a7a3f15d856f9cf8/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e82f9ef748f25bbbdc9821efcb287ab1b48dd066", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e82f9ef748f25bbbdc9821efcb287ab1b48dd066", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e82f9ef748f25bbbdc9821efcb287ab1b48dd066"}], "stats": {"total": 133, "additions": 133, "deletions": 0}, "files": [{"sha": "a56a5a037d1a3895a4a6a7991c7434ae04912eae", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e65fd7d19474884af3eb6f1a7a3f15d856f9cf8/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e65fd7d19474884af3eb6f1a7a3f15d856f9cf8/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=0e65fd7d19474884af3eb6f1a7a3f15d856f9cf8", "patch": "@@ -1,3 +1,7 @@\n+2015-11-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* testsuite/libgomp.c/target-35.c: New test.\n+\n 2015-11-22  James Norris  <jnorris@codesourcery.com>\n \t    Cesar Philippidis  <cesar@codesourcery.com>\n "}, {"sha": "6da8b2b9a54646e2f637929c158f4bedbb27c65c", "filename": "libgomp/testsuite/libgomp.c/target-35.c", "status": "added", "additions": 129, "deletions": 0, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e65fd7d19474884af3eb6f1a7a3f15d856f9cf8/libgomp%2Ftestsuite%2Flibgomp.c%2Ftarget-35.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e65fd7d19474884af3eb6f1a7a3f15d856f9cf8/libgomp%2Ftestsuite%2Flibgomp.c%2Ftarget-35.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Ftarget-35.c?ref=0e65fd7d19474884af3eb6f1a7a3f15d856f9cf8", "patch": "@@ -0,0 +1,129 @@\n+#include <omp.h>\n+#include <stdlib.h>\n+\n+#pragma omp declare target\n+__attribute__((noinline))\n+void\n+foo (int x, int y, int z, int *a, int *b)\n+{\n+  if (x == 0)\n+    {\n+      int i, j;\n+      for (i = 0; i < 64; i++)\n+\t#pragma omp parallel for shared (a, b)\n+\tfor (j = 0; j < 32; j++)\n+\t  foo (3, i, j, a, b);\n+    }\n+  else if (x == 1)\n+    {\n+      int i, j;\n+      #pragma omp distribute dist_schedule (static, 1)\n+      for (i = 0; i < 64; i++)\n+\t#pragma omp parallel for shared (a, b)\n+\tfor (j = 0; j < 32; j++)\n+\t  foo (3, i, j, a, b);\n+    }\n+  else if (x == 2)\n+    {\n+      int j;\n+      #pragma omp parallel for shared (a, b)\n+      for (j = 0; j < 32; j++)\n+\tfoo (3, y, j, a, b);\n+    }\n+  else\n+    {\n+      #pragma omp atomic\n+      b[y] += z;\n+      #pragma omp atomic\n+      *a += 1;\n+    }\n+}\n+\n+__attribute__((noinline))\n+int\n+bar (int x, int y, int z)\n+{\n+  int a, b[64], i;\n+  a = 8;\n+  for (i = 0; i < 64; i++)\n+    b[i] = i;\n+  foo (x, y, z, &a, b);\n+  if (x == 0)\n+    {\n+      if (a != 8 + 64 * 32)\n+\treturn 1;\n+      for (i = 0; i < 64; i++)\n+\tif (b[i] != i + 31 * 32 / 2)\n+\t  return 1;\n+    }\n+  else if (x == 1)\n+    {\n+      int c = omp_get_num_teams ();\n+      int d = omp_get_team_num ();\n+      int e = d;\n+      int f = 0;\n+      for (i = 0; i < 64; i++)\n+\tif (i == e)\n+\t  {\n+\t    if (b[i] != i + 31 * 32 / 2)\n+\t      return 1;\n+\t    f++;\n+\t    e = e + c;\n+\t  }\n+\telse if (b[i] != i)\n+\t  return 1;\n+      if (a < 8 || a > 8 + f * 32)\n+\treturn 1;\n+    }\n+  else if (x == 2)\n+    {\n+      if (a != 8 + 32)\n+\treturn 1;\n+      for (i = 0; i < 64; i++)\n+\tif (b[i] != i + (i == y ? 31 * 32 / 2 : 0))\n+\t  return 1;\n+    }\n+  else if (x == 3)\n+    {\n+      if (a != 8 + 1)\n+\treturn 1;\n+      for (i = 0; i < 64; i++)\n+\tif (b[i] != i + (i == y ? z : 0))\n+\t  return 1;\n+    }\n+  return 0;\n+}\n+#pragma omp end declare target\n+\n+int\n+main ()\n+{\n+  int i, j, err = 0;\n+  #pragma omp target map(tofrom:err)\n+  #pragma omp teams reduction(+:err)\n+  err += bar (0, 0, 0);\n+  if (err)\n+    abort ();\n+  #pragma omp target map(tofrom:err)\n+  #pragma omp teams reduction(+:err)\n+  err += bar (1, 0, 0);\n+  if (err)\n+    abort ();\n+  #pragma omp target map(tofrom:err)\n+  #pragma omp teams reduction(+:err)\n+  #pragma omp distribute\n+  for (i = 0; i < 64; i++)\n+    err += bar (2, i, 0);\n+  if (err)\n+    abort ();\n+  #pragma omp target map(tofrom:err)\n+  #pragma omp teams reduction(+:err)\n+  #pragma omp distribute\n+  for (i = 0; i < 64; i++)\n+  #pragma omp parallel for reduction(+:err)\n+    for (j = 0; j < 32; j++)\n+      err += bar (3, i, j);\n+  if (err)\n+    abort ();\n+  return 0;\n+}"}]}