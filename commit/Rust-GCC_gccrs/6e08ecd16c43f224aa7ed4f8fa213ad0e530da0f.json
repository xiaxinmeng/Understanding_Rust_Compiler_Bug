{"sha": "6e08ecd16c43f224aa7ed4f8fa213ad0e530da0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmUwOGVjZDE2YzQzZjIyNGFhN2VkNGY4ZmEyMTNhZDBlNTMwZGEwZg==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@apple.com", "date": "2003-10-06T01:36:13Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2003-10-06T01:36:13Z"}, "message": "darwin.c (machopic_non_lazy_ptr_name): Change strcat to memcpy and add length together.\n\n\t* config/darwin.c (machopic_non_lazy_ptr_name):\n\tChange strcat to memcpy and add length together.\n\t(machopic_stub_name): Likewise.\n\nFrom-SVN: r72129", "tree": {"sha": "9e2176053081210ecdffe34649cbcac01d0dedbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e2176053081210ecdffe34649cbcac01d0dedbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e08ecd16c43f224aa7ed4f8fa213ad0e530da0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e08ecd16c43f224aa7ed4f8fa213ad0e530da0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e08ecd16c43f224aa7ed4f8fa213ad0e530da0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e08ecd16c43f224aa7ed4f8fa213ad0e530da0f/comments", "author": null, "committer": null, "parents": [{"sha": "522d2b3fccdaea685db88d1533789e42f61511a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/522d2b3fccdaea685db88d1533789e42f61511a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/522d2b3fccdaea685db88d1533789e42f61511a6"}], "stats": {"total": 57, "additions": 44, "deletions": 13}, "files": [{"sha": "ea5a5708b55379ba84612e68ea80294b4d208181", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e08ecd16c43f224aa7ed4f8fa213ad0e530da0f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e08ecd16c43f224aa7ed4f8fa213ad0e530da0f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e08ecd16c43f224aa7ed4f8fa213ad0e530da0f", "patch": "@@ -1,3 +1,9 @@\n+2003-10-05  Andrew Pinski <apinski@apple.com>\n+\n+\t* config/darwin.c (machopic_non_lazy_ptr_name): \n+\tChange strcat to memcpy and add length together.\n+\t(machopic_stub_name): Likewise.\n+\n 2003-10-05  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/linux.h (MD_FALLBACK_FRAME_STATE_FOR): Handle new"}, {"sha": "85c00ba2523a86ac4843f37349ff394765b0dfbb", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 38, "deletions": 13, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e08ecd16c43f224aa7ed4f8fa213ad0e530da0f/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e08ecd16c43f224aa7ed4f8fa213ad0e530da0f/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=6e08ecd16c43f224aa7ed4f8fa213ad0e530da0f", "patch": "@@ -294,20 +294,28 @@ machopic_non_lazy_ptr_name (const char *name)\n \n   {\n     char *buffer;\n+    int namelen = strlen (name);\n+    int bufferlen = 0;\n     tree ptr_name;\n \n-    buffer = alloca (strlen (name) + 20);\n+    buffer = alloca (namelen + strlen(\"$non_lazy_ptr\") + 5);\n \n     strcpy (buffer, \"&L\");\n+    bufferlen = 2;\n     if (name[0] == '*')\n-      strcat (buffer, name+1);\n+      {\n+        memcpy (buffer+bufferlen, name+1, namelen-1+1);\n+        bufferlen += namelen-1;\n+      }\n     else\n       {\n-\tstrcat (buffer, \"_\");\n-\tstrcat (buffer, name);\n+\tbuffer[bufferlen] = '_';\n+\tmemcpy (buffer+bufferlen+1, name, namelen+1);\n+        bufferlen += namelen;\n       }\n \n-    strcat (buffer, \"$non_lazy_ptr\");\n+    memcpy (buffer + bufferlen, \"$non_lazy_ptr\", strlen(\"$non_lazy_ptr\")+1);\n+    bufferlen += strlen(\"$non_lazy_ptr\");\n     ptr_name = get_identifier (buffer);\n \n     machopic_non_lazy_pointers\n@@ -351,29 +359,46 @@ machopic_stub_name (const char *name)\n \n   {\n     char *buffer;\n+    int bufferlen = 0;\n+    int namelen = strlen (name);\n     tree ptr_name;\n     int needs_quotes = name_needs_quotes (name);\n \n-    buffer = alloca (strlen (name) + 20);\n+    buffer = alloca (namelen + 20);\n \n     if (needs_quotes)\n-      strcpy (buffer, \"&\\\"L\");\n+      {\n+        strcpy (buffer, \"&\\\"L\");\n+        bufferlen = strlen(\"&\\\"L\");\n+      }\n     else\n-      strcpy (buffer, \"&L\");\n+      {\n+        strcpy (buffer, \"&L\");\n+        bufferlen = strlen(\"&L\");\n+      }\n+    \n     if (name[0] == '*')\n       {\n-\tstrcat (buffer, name+1);\n+\tmemcpy (buffer + bufferlen, name+1, namelen - 1 +1);\n+        bufferlen += namelen - 1;\n       }\n     else\n       {\n-\tstrcat (buffer, \"_\");\n-\tstrcat (buffer, name);\n+\tbuffer[bufferlen] = '_';\n+\tmemcpy (buffer + bufferlen +1, name, namelen+1);\n+        bufferlen += namelen;\n       }\n \n     if (needs_quotes)\n-      strcat (buffer, \"$stub\\\"\");\n+      {\n+        memcpy (buffer + bufferlen, \"$stub\\\"\", strlen(\"$stub\\\"\"));\n+        bufferlen += strlen(\"$stub\\\"\");\n+      }\n     else\n-      strcat (buffer, \"$stub\");\n+      {\n+        memcpy (buffer + bufferlen, \"$stub\", strlen(\"$stub\"));\n+        bufferlen += strlen(\"$stub\");\n+      }\n     ptr_name = get_identifier (buffer);\n \n     machopic_stubs = tree_cons (ptr_name, ident, machopic_stubs);"}]}