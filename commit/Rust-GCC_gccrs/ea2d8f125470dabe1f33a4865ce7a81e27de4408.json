{"sha": "ea2d8f125470dabe1f33a4865ce7a81e27de4408", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWEyZDhmMTI1NDcwZGFiZTFmMzNhNDg2NWNlN2E4MWUyN2RlNDQwOA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2010-07-13T09:10:09Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2010-07-13T09:10:09Z"}, "message": "sol2-unwind.h (x86_64_fallback_frame_state): Correct explanation.\n\n\t* config/i386/sol2-unwind.h (x86_64_fallback_frame_state): Correct\n\texplanation.\n\tFind ucontext_t * on Solaris 11.\n\t(x86_fallback_frame_state): Handle Solaris 9 multi-threaded pattern.\n\tHandle new Solaris 11 __sighndlr patterns.\n\nFrom-SVN: r162129", "tree": {"sha": "62afc4b50b3ee16c7bf7d82504b2fafa892940a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62afc4b50b3ee16c7bf7d82504b2fafa892940a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea2d8f125470dabe1f33a4865ce7a81e27de4408", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea2d8f125470dabe1f33a4865ce7a81e27de4408", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea2d8f125470dabe1f33a4865ce7a81e27de4408", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea2d8f125470dabe1f33a4865ce7a81e27de4408/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2fed2012d551c7215e9a5a355d3b9bfe5a4c8545", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fed2012d551c7215e9a5a355d3b9bfe5a4c8545", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fed2012d551c7215e9a5a355d3b9bfe5a4c8545"}], "stats": {"total": 121, "additions": 105, "deletions": 16}, "files": [{"sha": "6499187f4983a5998e93a1f7afc41dfcce1f30e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea2d8f125470dabe1f33a4865ce7a81e27de4408/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea2d8f125470dabe1f33a4865ce7a81e27de4408/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea2d8f125470dabe1f33a4865ce7a81e27de4408", "patch": "@@ -1,3 +1,11 @@\n+2010-07-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/i386/sol2-unwind.h (x86_64_fallback_frame_state): Correct\n+\texplanation.\n+\tFind ucontext_t * on Solaris 11.\n+\t(x86_fallback_frame_state): Handle Solaris 9 multi-threaded pattern.\n+\tHandle new Solaris 11 __sighndlr patterns.\n+\n 2010-07-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/44901"}, {"sha": "d93b60c781cf6f737ef39df393b151afaf02e1ea", "filename": "gcc/config/i386/sol2-unwind.h", "status": "modified", "additions": 97, "deletions": 16, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea2d8f125470dabe1f33a4865ce7a81e27de4408/gcc%2Fconfig%2Fi386%2Fsol2-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea2d8f125470dabe1f33a4865ce7a81e27de4408/gcc%2Fconfig%2Fi386%2Fsol2-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2-unwind.h?ref=ea2d8f125470dabe1f33a4865ce7a81e27de4408", "patch": "@@ -1,5 +1,5 @@\n /* DWARF2 EH unwinding support for AMD x86-64 and x86.\n-   Copyright (C) 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -26,6 +26,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    state data appropriately.  See unwind-dw2.c for the structs.  */\n \n #include <ucontext.h>\n+#include <sys/frame.h>\n \n #ifdef __x86_64__\n \n@@ -39,23 +40,49 @@ x86_64_fallback_frame_state (struct _Unwind_Context *context,\n   mcontext_t *mctx;\n   long new_cfa;\n \n-  if (/* Solaris 2.10\n+  if (/* Solaris 10+\n \t------------\n \t<__sighndlr+0>:      push   %rbp\n \t<__sighndlr+1>:      mov    %rsp,%rbp\n \t<__sighndlr+4>:      callq  *%rcx\n \t<__sighndlr+6>:      leaveq           <--- PC\n \t<__sighndlr+7>:      retq  */\n       *(unsigned long *)(pc - 6) == 0xc3c9d1ffe5894855)\n-    /* We need to move up four frames (the kernel frame, the signal frame,\n-       the call_user_handler frame and the __sighndlr frame).  Two of them\n-       have the minimum stack frame size (kernel and __sighndlr frames),\n-       the signal frame has a stack frame size of 32 and there is another\n-       with a stack frame size of 112 bytes (the call_user_handler frame).\n-       The ucontext_t structure is after this offset.  */\n+\n+    /* We need to move up three frames:\n+\n+\t\t<signal handler>\t<-- context->cfa\n+\t\t__sighndlr\n+\t\tcall_user_handler\n+\t\tsigacthandler\n+\t\t<kernel>\n+\n+       context->cfa points into the frame after the saved frame pointer and\n+       saved pc (struct frame).\n+\n+       The ucontext_t structure is in the kernel frame after the signal\n+       number and a siginfo_t *.  Since the frame sizes vary even within\n+       Solaris 10 updates, we need to walk the stack to get there.  */\n     {\n-      int off = 16 + 16 + 32 + 112;\n-      mctx = &((ucontext_t *) (context->cfa + off))->uc_mcontext;\n+      struct frame *fp = (struct frame *) context->cfa - 1;\n+      struct handler_args {\n+\tint signo;\n+\tsiginfo_t *sip;\n+\tucontext_t ucontext;\n+      } *handler_args;\n+      ucontext_t *ucp;\n+\n+      /* Next frame: __sighndlr frame pointer.  */\n+      fp = (struct frame *) fp->fr_savfp;\n+      /* call_user_handler frame pointer.  */\n+      fp = (struct frame *) fp->fr_savfp;\n+      /* sigacthandler frame pointer.  */\n+      fp = (struct frame *) fp->fr_savfp;\n+\n+      /* The argument area precedes the struct frame.  */\n+      handler_args = (struct handler_args *) (fp + 1);\n+      ucp = &handler_args->ucontext;\n+      mctx = &ucp->uc_mcontext;\n     }\n   else\n     return _URC_END_OF_STACK;\n@@ -117,8 +144,8 @@ x86_fallback_frame_state (struct _Unwind_Context *context,\n   mcontext_t *mctx;\n   long new_cfa;\n \n-  if (/* Solaris 2.8 - single thread\n-\t-------------------------\n+  if (/* Solaris 8 - single-threaded\n+\t----------------------------\n \t<sigacthandler+17>:  mov    0x10(%ebp),%esi\n \t<sigacthandler+20>:  push   %esi\n \t<sigacthandler+21>:  pushl  0xc(%ebp)\n@@ -135,7 +162,7 @@ x86_fallback_frame_state (struct _Unwind_Context *context,\n        && *(unsigned long *)(pc - 4)  == 0x8814ff00\n        && *(unsigned long *)(pc - 0)  == 0x560cc483)\n \n-      || /* Solaris 2.8 - multi thread\n+      || /* Solaris 8 - multi-threaded\n \t   ---------------------------\n \t   <__sighndlr+0>:      push   %ebp\n \t   <__sighndlr+1>:      mov    %esp,%ebp\n@@ -149,8 +176,26 @@ x86_fallback_frame_state (struct _Unwind_Context *context,\n \t  && *(unsigned long *)(pc - 7)  == 0x0875ff0c\n \t  && *(unsigned long *)(pc - 3)  == 0xc91455ff)\n \n-      || /* Solaris 2.10\n-\t   ------------\n+      || /* Solaris 9 - single-threaded\n+\t   ----------------------------\n+           <sigacthandler+16>:    mov    0x244(%ebx),%ecx\n+\t   <sigacthandler+22>:    mov    0x8(%ebp),%eax\n+\t   <sigacthandler+25>:    mov    (%ecx,%eax,4),%ecx\n+\t   <sigacthandler+28>:    pushl  0x10(%ebp)\n+\t   <sigacthandler+31>:    pushl  0xc(%ebp)\n+\t   <sigacthandler+34>:    push   %eax\n+\t   <sigacthandler+35>:    call   *%ecx\n+\t   <sigacthandler+37>:    add    $0xc,%esp\t<--- PC\n+\t   <sigacthandler+40>:    pushl  0x10(%ebp) */\n+         (*(unsigned long *)(pc - 21) == 0x2448b8b\n+\t  && *(unsigned long *)(pc - 17) == 0x458b0000\n+\t  && *(unsigned long *)(pc - 13) == 0x810c8b08\n+\t  && *(unsigned long *)(pc - 9)  == 0xff1075ff\n+\t  && *(unsigned long *)(pc - 5)  == 0xff500c75\n+\t  && *(unsigned long *)(pc - 1)  == 0xcc483d1)\n+\n+      || /* Solaris 9 - multi-threaded, Solaris 10\n+\t   ---------------------------------------\n \t   <__sighndlr+0>:      push   %ebp\n \t   <__sighndlr+1>:      mov    %esp,%ebp\n \t   <__sighndlr+3>:      pushl  0x10(%ebp)\n@@ -164,7 +209,43 @@ x86_fallback_frame_state (struct _Unwind_Context *context,\n \t  && *(unsigned long *)(pc - 11) == 0x75ff1075\n \t  && *(unsigned long *)(pc - 7)  == 0x0875ff0c\n \t  && *(unsigned long *)(pc - 3)  == 0x831455ff\n-\t  && *(unsigned long *)(pc + 1)  == 0xc3c90cc4))\n+\t  && *(unsigned long *)(pc + 1)  == 0xc3c90cc4)\n+\n+      || /* Solaris 11 before snv_125\n+\t   --------------------------\n+\t  <__sighndlr+0>       \tpush   %ebp\n+\t  <__sighndlr+1>       \tmov    %esp,%ebp\n+\t  <__sighndlr+4>      \tpushl  0x10(%ebp)\n+\t  <__sighndlr+6>      \tpushl  0xc(%ebp)\n+\t  <__sighndlr+9>      \tpushl  0x8(%ebp)\n+\t  <__sighndlr+12>      \tcall   *0x14(%ebp)\n+\t  <__sighndlr+15>\tadd    $0xc,%esp\n+\t  <__sighndlr+18>      \tleave                <--- PC\n+\t  <__sighndlr+19>      \tret  */\n+\t (*(unsigned long *)(pc - 18) == 0xffec8b55\n+\t  && *(unsigned long *)(pc - 14) == 0x7fff107f\n+\t  && *(unsigned long *)(pc - 10)  == 0x0875ff0c\n+\t  && *(unsigned long *)(pc - 6)  == 0x83145fff\n+\t  && *(unsigned long *)(pc - 1)  == 0xc3c90cc4)\n+\n+      || /* Solaris 11 since snv_125\n+\t   -------------------------\n+\t  <__sighndlr+0>       \tpush   %ebp\n+\t  <__sighndlr+1>       \tmov    %esp,%ebp\n+\t  <__sighndlr+3>       \tand    $0xfffffff0,%esp\n+\t  <__sighndlr+6>       \tsub    $0x4,%esp\n+\t  <__sighndlr+9>      \tpushl  0x10(%ebp)\n+\t  <__sighndlr+12>      \tpushl  0xc(%ebp)\n+\t  <__sighndlr+15>      \tpushl  0x8(%ebp)\n+\t  <__sighndlr+18>      \tcall   *0x14(%ebp)\n+\t  <__sighndlr+21>      \tleave                <--- PC\n+\t  <__sighndlr+22>      \tret  */\n+\t (*(unsigned long *)(pc - 21) == 0x83ec8b55\n+\t  && *(unsigned long *)(pc - 17) == 0xec83f0e4\n+\t  && *(unsigned long *)(pc - 13)  == 0x1075ff04\n+\t  && *(unsigned long *)(pc - 9)  == 0xff0c75ff\n+\t  && *(unsigned long *)(pc - 5)  == 0x55ff0875\n+\t  && (*(unsigned long *)(pc - 1) & 0x00ffffff) == 0x00c3c914))\n     {\n       struct handler_args {\n \tint signo;"}]}