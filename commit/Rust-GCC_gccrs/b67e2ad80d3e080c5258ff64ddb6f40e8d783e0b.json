{"sha": "b67e2ad80d3e080c5258ff64ddb6f40e8d783e0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY3ZTJhZDgwZDNlMDgwYzUyNThmZjY0ZGRiNmY0MGU4ZDc4M2UwYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-10-11T09:17:23Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-10-11T09:17:23Z"}, "message": "decl.c (elaborate_reference_1): Specifically deal with pointer displacement.\n\n\t* gcc-interface/decl.c (elaborate_reference_1): Specifically deal with\n\tpointer displacement.\n\n\t* gcc-interface/decl.c (components_to_record): Use proper name.\n\n\t* gcc-interface/trans.c (Sloc_to_locus): Use standard types.\n\nFrom-SVN: r276874", "tree": {"sha": "f82e57c45cae6d099904521e6176eb13227303d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f82e57c45cae6d099904521e6176eb13227303d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b67e2ad80d3e080c5258ff64ddb6f40e8d783e0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b67e2ad80d3e080c5258ff64ddb6f40e8d783e0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b67e2ad80d3e080c5258ff64ddb6f40e8d783e0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b67e2ad80d3e080c5258ff64ddb6f40e8d783e0b/comments", "author": null, "committer": null, "parents": [{"sha": "75a582cd9f98b4cdea2eb8e961d53dc8d30fd462", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75a582cd9f98b4cdea2eb8e961d53dc8d30fd462", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75a582cd9f98b4cdea2eb8e961d53dc8d30fd462"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "adbfa7027cef202db6441b4c66cb25a30bee8dc5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b67e2ad80d3e080c5258ff64ddb6f40e8d783e0b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b67e2ad80d3e080c5258ff64ddb6f40e8d783e0b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b67e2ad80d3e080c5258ff64ddb6f40e8d783e0b", "patch": "@@ -1,3 +1,12 @@\n+2019-10-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (elaborate_reference_1): Specifically deal with\n+\tpointer displacement.\n+\n+\t* gcc-interface/decl.c (components_to_record): Use proper name.\n+\n+\t* gcc-interface/trans.c (Sloc_to_locus): Use standard types.\n+\n 2019-10-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_field): Adjust again the packing"}, {"sha": "29c5a8e7821ec30cda516e3bdb388a0ea649f58f", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b67e2ad80d3e080c5258ff64ddb6f40e8d783e0b/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b67e2ad80d3e080c5258ff64ddb6f40e8d783e0b/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=b67e2ad80d3e080c5258ff64ddb6f40e8d783e0b", "patch": "@@ -6782,6 +6782,15 @@ elaborate_reference_1 (tree ref, void *data)\n \t\t   elaborate_reference_1 (TREE_OPERAND (ref, 0), data),\n \t\t   TREE_OPERAND (ref, 1), NULL_TREE);\n \n+  /* If this is the displacement of a pointer, elaborate the pointer and then\n+     displace the result.  The actual purpose here is to drop the location on\n+     the expression, which may be problematic if replicated on references.  */\n+  if (TREE_CODE (ref) == POINTER_PLUS_EXPR\n+      && TREE_CODE (TREE_OPERAND (ref, 1)) == INTEGER_CST)\n+    return build2 (POINTER_PLUS_EXPR, TREE_TYPE (ref),\n+\t\t   elaborate_reference_1 (TREE_OPERAND (ref, 0), data),\n+\t\t   TREE_OPERAND (ref, 1));\n+\n   sprintf (suffix, \"EXP%d\", ++er->n);\n   return\n     elaborate_expression_1 (ref, er->entity, suffix, er->definition, false);\n@@ -7923,7 +7932,7 @@ components_to_record (Node_Id gnat_component_list, Entity_Id gnat_record_type,\n        && !(Is_Packed (gnat_record_type)\n \t    ? has_non_packed_fixed_size_field\n \t    : Optimize_Alignment_Space (gnat_record_type))\n-       && !debug__debug_flag_dot_r);\n+       && !Debug_Flag_Dot_R);\n   const bool w_reorder\n     = (Convention (gnat_record_type) == Convention_Ada\n        && Warn_On_Questionable_Layout"}, {"sha": "61e05d52a54b0a816a9aad26912587ee123ad206", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b67e2ad80d3e080c5258ff64ddb6f40e8d783e0b/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b67e2ad80d3e080c5258ff64ddb6f40e8d783e0b/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=b67e2ad80d3e080c5258ff64ddb6f40e8d783e0b", "patch": "@@ -10848,8 +10848,8 @@ Sloc_to_locus (Source_Ptr Sloc, location_t *locus, bool clear_column,\n     }\n \n   Source_File_Index file = Get_Source_File_Index (Sloc);\n-  Logical_Line_Number line = Get_Logical_Line_Number (Sloc);\n-  Column_Number column = (clear_column ? 0 : Get_Column_Number (Sloc));\n+  Line_Number_Type line = Get_Logical_Line_Number (Sloc);\n+  Column_Number_Type column = (clear_column ? 0 : Get_Column_Number (Sloc));\n   line_map_ordinary *map = LINEMAPS_ORDINARY_MAP_AT (line_table, file - 1);\n \n   /* We can have zero if pragma Source_Reference is in effect.  */"}]}