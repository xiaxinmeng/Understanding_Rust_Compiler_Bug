{"sha": "cde0ce6e71902c58da287bae01c0f77b62e8dfd0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RlMGNlNmU3MTkwMmM1OGRhMjg3YmFlMDFjMGY3N2I2MmU4ZGZkMA==", "commit": {"author": {"name": "Chris Lattner", "email": "sabre@nondot.org", "date": "2002-09-27T00:50:50Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-09-27T00:50:50Z"}, "message": "ssa.c (rename_insn_1): Handle RENAME_NO_RTX correctly when handling undefined values.\n\n        * ssa.c (rename_insn_1): Handle RENAME_NO_RTX correctly when\n        handling undefined values.\n\nFrom-SVN: r57564", "tree": {"sha": "4fa55fbde3a96a8c3c7eff32ae8b8a25f24f3cf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fa55fbde3a96a8c3c7eff32ae8b8a25f24f3cf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cde0ce6e71902c58da287bae01c0f77b62e8dfd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cde0ce6e71902c58da287bae01c0f77b62e8dfd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cde0ce6e71902c58da287bae01c0f77b62e8dfd0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cde0ce6e71902c58da287bae01c0f77b62e8dfd0/comments", "author": {"login": "lattner", "id": 15152540, "node_id": "MDQ6VXNlcjE1MTUyNTQw", "avatar_url": "https://avatars.githubusercontent.com/u/15152540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lattner", "html_url": "https://github.com/lattner", "followers_url": "https://api.github.com/users/lattner/followers", "following_url": "https://api.github.com/users/lattner/following{/other_user}", "gists_url": "https://api.github.com/users/lattner/gists{/gist_id}", "starred_url": "https://api.github.com/users/lattner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lattner/subscriptions", "organizations_url": "https://api.github.com/users/lattner/orgs", "repos_url": "https://api.github.com/users/lattner/repos", "events_url": "https://api.github.com/users/lattner/events{/privacy}", "received_events_url": "https://api.github.com/users/lattner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5fd452e8def2e0f454455760efae1f5a6d92eced", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fd452e8def2e0f454455760efae1f5a6d92eced", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fd452e8def2e0f454455760efae1f5a6d92eced"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "683f15d62167e815867ddb81c3371de112d778e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde0ce6e71902c58da287bae01c0f77b62e8dfd0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde0ce6e71902c58da287bae01c0f77b62e8dfd0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cde0ce6e71902c58da287bae01c0f77b62e8dfd0", "patch": "@@ -1,3 +1,8 @@\n+2002-09-26  Chris Lattner  <sabre@nondot.org>\n+\n+\t* ssa.c (rename_insn_1): Handle RENAME_NO_RTX correctly when\n+\thandling undefined values.\n+\n 2002-09-26  Richard Henderson  <rth@redhat.com>\n \n \tPR opt/7520"}, {"sha": "1ba8e0cd49a95b683b2bc21e77afb684f24f6dca", "filename": "gcc/ssa.c", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cde0ce6e71902c58da287bae01c0f77b62e8dfd0/gcc%2Fssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cde0ce6e71902c58da287bae01c0f77b62e8dfd0/gcc%2Fssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fssa.c?ref=cde0ce6e71902c58da287bae01c0f77b62e8dfd0", "patch": "@@ -924,20 +924,17 @@ rename_insn_1 (ptr, data)\n \t{\n \t  rtx new_reg = ssa_rename_to_lookup (x);\n \n-\t  if (new_reg != RENAME_NO_RTX)\n+\t  if (new_reg != RENAME_NO_RTX && new_reg != NULL_RTX)\n \t    {\n-\t      if (new_reg != NULL_RTX)\n-\t\t{\n-\t\t  if (GET_MODE (x) != GET_MODE (new_reg))\n-\t\t    abort ();\n-\t\t  *ptr = new_reg;\n-\t\t}\n-\t      else\n-\t\t{\n-\t\t  /* Undefined value used, rename it to a new pseudo register so\n-\t\t     that it cannot conflict with an existing register */\n-\t\t  *ptr = gen_reg_rtx (GET_MODE(x));\n-\t\t}\n+\t      if (GET_MODE (x) != GET_MODE (new_reg))\n+\t\tabort ();\n+\t      *ptr = new_reg;\n+\t    }\n+\t  else\n+\t    {\n+\t      /* Undefined value used, rename it to a new pseudo register so\n+\t\t that it cannot conflict with an existing register.  */\n+\t      *ptr = gen_reg_rtx (GET_MODE (x));\n \t    }\n \t}\n       return -1;"}]}