{"sha": "a7911cd2b4620ced3322c9dea68c926fa0ea16a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc5MTFjZDJiNDYyMGNlZDMzMjJjOWRlYTY4YzkyNmZhMGVhMTZhNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-08-26T10:56:53Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-08-26T10:56:53Z"}, "message": "(emit_reload_insns): Do nothing for SUBREG whose operand is unused subsequently.\n\n(emit_reload_insns): Do nothing for SUBREG whose operand is unused\nsubsequently.\nIn secondary reload case, if paradoxical SUBREG for output, reload thing\ninside SUBREG, just like gen_reload.\n\nFrom-SVN: r10284", "tree": {"sha": "3cce62cd492b1a367d56263c40c5907090c3f449", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cce62cd492b1a367d56263c40c5907090c3f449"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7911cd2b4620ced3322c9dea68c926fa0ea16a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7911cd2b4620ced3322c9dea68c926fa0ea16a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7911cd2b4620ced3322c9dea68c926fa0ea16a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7911cd2b4620ced3322c9dea68c926fa0ea16a7/comments", "author": null, "committer": null, "parents": [{"sha": "67340b0310b5f62fe9e6ff0316cf8cbe556278d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67340b0310b5f62fe9e6ff0316cf8cbe556278d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67340b0310b5f62fe9e6ff0316cf8cbe556278d1"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "5343e2d07a03f48ff0ded44a351b4b6fa0750cf8", "filename": "gcc/reload1.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7911cd2b4620ced3322c9dea68c926fa0ea16a7/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7911cd2b4620ced3322c9dea68c926fa0ea16a7/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=a7911cd2b4620ced3322c9dea68c926fa0ea16a7", "patch": "@@ -6259,6 +6259,16 @@ emit_reload_insns (insn)\n \t      XEXP (note, 0) = reload_reg_rtx[j];\n \t      continue;\n \t    }\n+\t  /* Likewise for a SUBREG of an operand that dies.  */\n+\t  else if (GET_CODE (old) == SUBREG\n+\t\t   && GET_CODE (SUBREG_REG (old)) == REG\n+\t\t   && 0 != (note = find_reg_note (insn, REG_UNUSED,\n+\t\t\t\t\t\t  SUBREG_REG (old))))\n+\t    {\n+\t      XEXP (note, 0) = gen_lowpart_common (GET_MODE (old),\n+\t\t\t\t\t\t   reload_reg_rtx[j]);\n+\t      continue;\n+\t    }\n \t  else if (GET_CODE (old) == SCRATCH)\n \t    /* If we aren't optimizing, there won't be a REG_UNUSED note,\n \t       but we don't want to make an output reload.  */\n@@ -6344,11 +6354,23 @@ emit_reload_insns (insn)\n \t\t\t{\n \t\t\t  rtx third_reloadreg\n \t\t\t    = reload_reg_rtx[reload_secondary_out_reload[secondary_reload]];\n+\t\t\t  rtx tem;\n \n \t\t\t  /* Copy primary reload reg to secondary reload reg.\n \t\t\t     (Note that these have been swapped above, then\n \t\t\t     secondary reload reg to OLD using our insn.  */\n \n+\t\t\t  /* If REAL_OLD is a paradoxical SUBREG, remove it\n+\t\t\t     and try to put the opposite SUBREG on\n+\t\t\t     RELOADREG.  */\n+\t\t\t  if (GET_CODE (real_old) == SUBREG\n+\t\t\t      && (GET_MODE_SIZE (GET_MODE (real_old))\n+\t\t\t\t  > GET_MODE_SIZE (GET_MODE (SUBREG_REG (real_old))))\n+\t\t\t      && 0 != (tem = gen_lowpart_common\n+\t\t\t\t       (GET_MODE (SUBREG_REG (real_old)),\n+\t\t\t\t\treloadreg)))\n+\t\t\t    real_old = SUBREG_REG (real_old), reloadreg = tem;\n+\n \t\t\t  gen_reload (reloadreg, second_reloadreg,\n \t\t\t\t      reload_opnum[j], reload_when_needed[j]);\n \t\t\t  emit_insn ((GEN_FCN (tertiary_icode)"}]}