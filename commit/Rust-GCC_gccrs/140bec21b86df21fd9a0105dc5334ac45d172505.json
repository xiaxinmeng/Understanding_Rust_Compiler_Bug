{"sha": "140bec21b86df21fd9a0105dc5334ac45d172505", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQwYmVjMjFiODZkZjIxZmQ5YTAxMDVkYzUzMzRhYzQ1ZDE3MjUwNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-02-27T18:13:24Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-02-27T18:13:24Z"}, "message": "re PR c++/56358 ([C++11] Erroneous interaction of typedef and inherited constructor declarations)\n\n\tPR c++/56358\n\tPR c++/56323\n\t* name-lookup.c (do_class_using_decl): Use ctor_identifier instead\n\tof the base name for inheriting ctors.\n\t(push_class_level_binding_1): Remove inheriting ctor handling.\n\t* pt.c (tsubst_decl) [USING_DECL]: Likewise.\n\t* class.c (add_implicitly_declared_members): Adjust.\n\nFrom-SVN: r196316", "tree": {"sha": "35dd8290aca2f22ffa98a2e2de1913fb9eb7a5c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35dd8290aca2f22ffa98a2e2de1913fb9eb7a5c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/140bec21b86df21fd9a0105dc5334ac45d172505", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/140bec21b86df21fd9a0105dc5334ac45d172505", "html_url": "https://github.com/Rust-GCC/gccrs/commit/140bec21b86df21fd9a0105dc5334ac45d172505", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/140bec21b86df21fd9a0105dc5334ac45d172505/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bbb3a9e27368ae01b96b33becb3cf662c95eba2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbb3a9e27368ae01b96b33becb3cf662c95eba2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbb3a9e27368ae01b96b33becb3cf662c95eba2a"}], "stats": {"total": 67, "additions": 44, "deletions": 23}, "files": [{"sha": "a0e7405104074a91f28a603e5cea6911c6dda9b5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/140bec21b86df21fd9a0105dc5334ac45d172505/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/140bec21b86df21fd9a0105dc5334ac45d172505/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=140bec21b86df21fd9a0105dc5334ac45d172505", "patch": "@@ -1,3 +1,13 @@\n+2013-02-27  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/56358\n+\tPR c++/56323\n+\t* name-lookup.c (do_class_using_decl): Use ctor_identifier instead\n+\tof the base name for inheriting ctors.\n+\t(push_class_level_binding_1): Remove inheriting ctor handling.\n+\t* pt.c (tsubst_decl) [USING_DECL]: Likewise.\n+\t* class.c (add_implicitly_declared_members): Adjust.\n+\n 2013-02-26  David Binderman  <dcb314@hotmail.com>\n \n \tPR c++/55632"}, {"sha": "2a0351f7c83262f5d9f87d5ab7717fa39440fa22", "filename": "gcc/cp/class.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/140bec21b86df21fd9a0105dc5334ac45d172505/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/140bec21b86df21fd9a0105dc5334ac45d172505/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=140bec21b86df21fd9a0105dc5334ac45d172505", "patch": "@@ -3010,11 +3010,10 @@ add_implicitly_declared_members (tree t, tree* access_decls,\n     {\n       tree using_decl = TREE_VALUE (*access_decls);\n       tree decl = USING_DECL_DECLS (using_decl);\n-      if (DECL_SELF_REFERENCE_P (decl))\n+      if (DECL_NAME (using_decl) == ctor_identifier)\n \t{\n \t  /* declare, then remove the decl */\n-\t  tree ctor_list = lookup_fnfields_slot (TREE_TYPE (decl),\n-\t\t\t\t\t\t ctor_identifier);\n+\t  tree ctor_list = decl;\n \t  location_t loc = input_location;\n \t  input_location = DECL_SOURCE_LOCATION (using_decl);\n \t  if (ctor_list)"}, {"sha": "2a47331ea737951375db3db16c5896afa67d2dd0", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/140bec21b86df21fd9a0105dc5334ac45d172505/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/140bec21b86df21fd9a0105dc5334ac45d172505/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=140bec21b86df21fd9a0105dc5334ac45d172505", "patch": "@@ -3027,13 +3027,6 @@ push_class_level_binding_1 (tree name, tree x)\n       && TREE_TYPE (decl) == error_mark_node)\n     decl = TREE_VALUE (decl);\n \n-  if (TREE_CODE (decl) == USING_DECL\n-      && TYPE_NAME (USING_DECL_SCOPE (decl))\n-      && DECL_NAME (decl) == TYPE_IDENTIFIER (USING_DECL_SCOPE (decl)))\n-    /* This using-declaration declares inheriting constructors; it does not\n-       redeclare the name of a template parameter.  */\n-    return true;\n-\n   if (!check_template_shadow (decl))\n     return false;\n \n@@ -3225,12 +3218,14 @@ do_class_using_decl (tree scope, tree name)\n       error (\"%<%T::%D%> names destructor\", scope, name);\n       return NULL_TREE;\n     }\n-  if (TYPE_NAME (scope) && name == TYPE_IDENTIFIER (scope))\n-    /* 3.4.3.1 says that using B::B always names the constructor even if B\n-       is a typedef; now replace the second B with the real name.  */\n-    name = TYPE_IDENTIFIER (TYPE_MAIN_VARIANT (scope));\n-  if (MAYBE_CLASS_TYPE_P (scope) && constructor_name_p (name, scope))\n-    maybe_warn_cpp0x (CPP0X_INHERITING_CTORS);\n+  /* Using T::T declares inheriting ctors, even if T is a typedef.  */\n+  if (MAYBE_CLASS_TYPE_P (scope)\n+      && ((TYPE_NAME (scope) && name == TYPE_IDENTIFIER (scope))\n+\t  || constructor_name_p (name, scope)))\n+    {\n+      maybe_warn_cpp0x (CPP0X_INHERITING_CTORS);\n+      name = ctor_identifier;\n+    }\n   if (constructor_name_p (name, current_class_type))\n     {\n       error (\"%<%T::%D%> names constructor in %qT\","}, {"sha": "eb9fc7f94c7cdf5b687b63d8e6841cdb4bdeffc2", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/140bec21b86df21fd9a0105dc5334ac45d172505/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/140bec21b86df21fd9a0105dc5334ac45d172505/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=140bec21b86df21fd9a0105dc5334ac45d172505", "patch": "@@ -10490,14 +10490,9 @@ tsubst_decl (tree t, tree args, tsubst_flags_t complain)\n       if (DECL_DEPENDENT_P (t)\n \t  || uses_template_parms (USING_DECL_SCOPE (t)))\n \t{\n-\t  tree scope = USING_DECL_SCOPE (t);\n \t  tree inst_scope = tsubst_copy (USING_DECL_SCOPE (t), args,\n \t\t\t\t\t complain, in_decl);\n \t  tree name = tsubst_copy (DECL_NAME (t), args, complain, in_decl);\n-\t  /* Handle 'using T::T'.  */\n-\t  if (TYPE_NAME (scope)\n-\t      && name == TYPE_IDENTIFIER (scope))\n-\t    name = TYPE_IDENTIFIER (inst_scope);\n \t  r = do_class_using_decl (inst_scope, name);\n \t  if (!r)\n \t    r = error_mark_node;"}, {"sha": "05735559a72ed996578786e92a423f5c12e1a15d", "filename": "gcc/testsuite/g++.dg/cpp0x/inh-ctor18.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/140bec21b86df21fd9a0105dc5334ac45d172505/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finh-ctor18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/140bec21b86df21fd9a0105dc5334ac45d172505/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finh-ctor18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finh-ctor18.C?ref=140bec21b86df21fd9a0105dc5334ac45d172505", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/56358\n+// { dg-do compile { target c++11 } }\n+\n+struct foo {\n+  explicit foo(int) {}\n+};\n+\n+template<typename T>\n+struct bar: T {\n+  using T::T;\n+\n+  // Bad\n+  explicit bar(): T(0) {}\n+\n+  void baz()\n+  {\n+    // Also bad\n+    using qux = T;\n+  }\n+};\n+\n+bar<foo> b, b2(42);"}, {"sha": "b8e51078ff932f04071939751d47c0bf640ed744", "filename": "gcc/testsuite/g++.dg/inherit/using5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/140bec21b86df21fd9a0105dc5334ac45d172505/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fusing5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/140bec21b86df21fd9a0105dc5334ac45d172505/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fusing5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fusing5.C?ref=140bec21b86df21fd9a0105dc5334ac45d172505", "patch": "@@ -6,7 +6,7 @@\n \n template<int> struct A\n {\n-  A::A; // { dg-error \"constructor\" }\n+  A::A; // { dg-error \"constructor|not a base\" }\n };\n \n struct B"}, {"sha": "3df78f0969198e68cff628191d7912119175afd2", "filename": "gcc/testsuite/g++.old-deja/g++.other/using3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/140bec21b86df21fd9a0105dc5334ac45d172505/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/140bec21b86df21fd9a0105dc5334ac45d172505/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing3.C?ref=140bec21b86df21fd9a0105dc5334ac45d172505", "patch": "@@ -8,5 +8,5 @@ typedef struct {\n } S;\n \n struct B: S{\n-  using S::S;        // { dg-error \"\" } no such field\n+  using S::S;\t       // { dg-error \"\" \"\" { target c++98 } } no such field\n };"}]}