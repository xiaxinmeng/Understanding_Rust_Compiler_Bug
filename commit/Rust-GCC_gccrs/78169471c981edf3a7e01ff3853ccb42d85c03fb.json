{"sha": "78169471c981edf3a7e01ff3853ccb42d85c03fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgxNjk0NzFjOTgxZWRmM2E3ZTAxZmYzODUzY2NiNDJkODVjMDNmYg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-07-29T11:28:57Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-07-29T11:28:57Z"}, "message": "re PR c/71574 (ICE on code with alloc_align attribute on x86_64-linux-gnu: in default_conversion, at c/c-typeck.c:2126)\n\n\tPR c/71574\n\t* c-common.c (handle_alloc_align_attribute): Also check FUNCTION_DECL.\n\n\t* c-c++-common/pr71574.c: New test.\n\nFrom-SVN: r238859", "tree": {"sha": "5eadb0c097cdb15ab59963a480b740ae2e06ef65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5eadb0c097cdb15ab59963a480b740ae2e06ef65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78169471c981edf3a7e01ff3853ccb42d85c03fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78169471c981edf3a7e01ff3853ccb42d85c03fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78169471c981edf3a7e01ff3853ccb42d85c03fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78169471c981edf3a7e01ff3853ccb42d85c03fb/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bb3aa3f830e10a2e73af21c9d67ebef56451d5d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb3aa3f830e10a2e73af21c9d67ebef56451d5d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb3aa3f830e10a2e73af21c9d67ebef56451d5d4"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "705d00cee0e29441bb2357cee0624b961d3ae8a7", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78169471c981edf3a7e01ff3853ccb42d85c03fb/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78169471c981edf3a7e01ff3853ccb42d85c03fb/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=78169471c981edf3a7e01ff3853ccb42d85c03fb", "patch": "@@ -1,3 +1,8 @@\n+2016-07-29  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/71574\n+\t* c-common.c (handle_alloc_align_attribute): Also check FUNCTION_DECL.\n+\n 2016-07-28  Martin Liska  <mliska@suse.cz>\n \n \tPR gcov-profile/68025"}, {"sha": "efd98157a629e45c72258a626451a324e9a78c0e", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78169471c981edf3a7e01ff3853ccb42d85c03fb/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78169471c981edf3a7e01ff3853ccb42d85c03fb/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=78169471c981edf3a7e01ff3853ccb42d85c03fb", "patch": "@@ -8370,7 +8370,8 @@ handle_alloc_align_attribute (tree *node, tree, tree args, int,\n {\n   unsigned arg_count = type_num_arguments (*node);\n   tree position = TREE_VALUE (args);\n-  if (position && TREE_CODE (position) != IDENTIFIER_NODE)\n+  if (position && TREE_CODE (position) != IDENTIFIER_NODE\n+      && TREE_CODE (position) != FUNCTION_DECL)\n     position = default_conversion (position);\n \n   if (!tree_fits_uhwi_p (position)"}, {"sha": "9960fb0c4ac7971a988729c04e9162c0169bf350", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78169471c981edf3a7e01ff3853ccb42d85c03fb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78169471c981edf3a7e01ff3853ccb42d85c03fb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=78169471c981edf3a7e01ff3853ccb42d85c03fb", "patch": "@@ -1,3 +1,8 @@\n+2016-07-29  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/71574\n+\t* c-c++-common/pr71574.c: New test.\n+\n 2016-07-29  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \tPR middle-end/68217"}, {"sha": "320ae3853cddb709bd849c540af812a01383ab4e", "filename": "gcc/testsuite/c-c++-common/pr71574.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78169471c981edf3a7e01ff3853ccb42d85c03fb/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr71574.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78169471c981edf3a7e01ff3853ccb42d85c03fb/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr71574.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr71574.c?ref=78169471c981edf3a7e01ff3853ccb42d85c03fb", "patch": "@@ -0,0 +1,12 @@\n+/* PR c/71574 */\n+/* { dg-do compile } */\n+\n+int fn1 (void);\n+int fn2 (void) __attribute__ ((alloc_align (fn1))); /* { dg-warning \"parameter outside range\" } */\n+int fn3 (void) __attribute__ ((alloc_size (fn1))); /* { dg-warning \"parameter outside range\" } */\n+int fn4 (void) __attribute__ ((assume_aligned (fn1))); /* { dg-warning \"not integer constant\" } */\n+int fn5 (char *, char *) __attribute__((nonnull (fn1))); /* { dg-error \"nonnull argument has invalid operand\" } */\n+int fn6 (const char *, ...) __attribute__ ((sentinel (fn1))); /* { dg-warning \"not an integer constant\" } */\n+\n+typedef int __attribute__((vector_size (fn1))) v4si; /* { dg-warning \"attribute ignored\" } */\n+typedef int T __attribute__((aligned (fn1))); /* { dg-error \"requested alignment is not\" } */"}]}