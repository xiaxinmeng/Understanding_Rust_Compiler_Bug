{"sha": "adcb167e030e016946c3dbf6fcfc81093ca6feea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRjYjE2N2UwMzBlMDE2OTQ2YzNkYmY2ZmNmYzgxMDkzY2E2ZmVlYQ==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2019-01-09T21:39:49Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2019-01-09T21:39:49Z"}, "message": "PR other/16615 [2/5]\n\n2019-01-09  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tPR other/16615 [2/5]\n\n\tinclude/\n\t* libiberty.h: Mechanically replace \"can not\" with \"cannot\".\n\t* plugin-api.h: Likewise.\n\n\tlibiberty/\n\t* cp-demangle.c: Mechanically replace \"can not\" with \"cannot\".\n\t* floatformat.c: Likewise.\n\t* strerror.c: Likewise.\n\nFrom-SVN: r267784", "tree": {"sha": "c90c5ec91814e9ef891b0d94591048b5f9f5a828", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c90c5ec91814e9ef891b0d94591048b5f9f5a828"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/adcb167e030e016946c3dbf6fcfc81093ca6feea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adcb167e030e016946c3dbf6fcfc81093ca6feea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adcb167e030e016946c3dbf6fcfc81093ca6feea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adcb167e030e016946c3dbf6fcfc81093ca6feea/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "67914693144c02e0be2e6356d9162e775fb4971d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67914693144c02e0be2e6356d9162e775fb4971d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67914693144c02e0be2e6356d9162e775fb4971d"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "8be8343a78e71d8ee7f6fc874e6debe6f592380c", "filename": "include/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcb167e030e016946c3dbf6fcfc81093ca6feea/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcb167e030e016946c3dbf6fcfc81093ca6feea/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=adcb167e030e016946c3dbf6fcfc81093ca6feea", "patch": "@@ -1,3 +1,10 @@\n+2019-01-09  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\tPR other/16615\n+\n+\t* libiberty.h: Mechanically replace \"can not\" with \"cannot\".\n+\t* plugin-api.h: Likewise.\n+\n 2019-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "574761350267b1eaa281343a11fe5dd5c737f9e5", "filename": "include/libiberty.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcb167e030e016946c3dbf6fcfc81093ca6feea/include%2Flibiberty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcb167e030e016946c3dbf6fcfc81093ca6feea/include%2Flibiberty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Flibiberty.h?ref=adcb167e030e016946c3dbf6fcfc81093ca6feea", "patch": "@@ -558,15 +558,15 @@ extern FILE *pex_input_file (struct pex_obj *obj, int flags,\n extern FILE *pex_input_pipe (struct pex_obj *obj, int binary);\n \n /* Read the standard output of the last program to be executed.\n-   pex_run can not be called after this.  BINARY should be non-zero if\n+   pex_run cannot be called after this.  BINARY should be non-zero if\n    the file should be opened in binary mode; this is ignored on Unix.\n    Returns NULL on error.  Don't call fclose on the returned FILE; it\n    will be closed by pex_free.  */\n \n extern FILE *pex_read_output (struct pex_obj *, int binary);\n \n /* Read the standard error of the last program to be executed.\n-   pex_run can not be called after this.  BINARY should be non-zero if\n+   pex_run cannot be called after this.  BINARY should be non-zero if\n    the file should be opened in binary mode; this is ignored on Unix.\n    Returns NULL on error.  Don't call fclose on the returned FILE; it\n    will be closed by pex_free.  */"}, {"sha": "2076bdaae655e23c581bc170fe10630240fab476", "filename": "include/plugin-api.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcb167e030e016946c3dbf6fcfc81093ca6feea/include%2Fplugin-api.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcb167e030e016946c3dbf6fcfc81093ca6feea/include%2Fplugin-api.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fplugin-api.h?ref=adcb167e030e016946c3dbf6fcfc81093ca6feea", "patch": "@@ -34,7 +34,7 @@\n #include <sys/types.h>\n #if !defined(HAVE_STDINT_H) && !defined(HAVE_INTTYPES_H) && \\\n     !defined(UINT64_MAX) && !defined(uint64_t)\n-#error can not find uint64_t type\n+#error cannot find uint64_t type\n #endif\n \n #ifdef __cplusplus"}, {"sha": "2206b91d3baec07767a433c908981248e779235b", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcb167e030e016946c3dbf6fcfc81093ca6feea/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcb167e030e016946c3dbf6fcfc81093ca6feea/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=adcb167e030e016946c3dbf6fcfc81093ca6feea", "patch": "@@ -1,3 +1,11 @@\n+2019-01-09  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\tPR other/16615\n+\n+\t* cp-demangle.c: Mechanically replace \"can not\" with \"cannot\".\n+\t* floatformat.c: Likewise.\n+\t* strerror.c: Likewise.\n+\n 2019-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "ddcd3be6b8f524c91a12f131d657e68cf0886100", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcb167e030e016946c3dbf6fcfc81093ca6feea/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcb167e030e016946c3dbf6fcfc81093ca6feea/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=adcb167e030e016946c3dbf6fcfc81093ca6feea", "patch": "@@ -6201,13 +6201,13 @@ cplus_demangle_init_info (const char *mangled, int options, size_t len,\n \n   di->n = mangled;\n \n-  /* We can not need more components than twice the number of chars in\n+  /* We cannot need more components than twice the number of chars in\n      the mangled string.  Most components correspond directly to\n      chars, but the ARGLIST types are exceptions.  */\n   di->num_comps = 2 * len;\n   di->next_comp = 0;\n \n-  /* Similarly, we can not need more substitutions than there are\n+  /* Similarly, we cannot need more substitutions than there are\n      chars in the mangled string.  */\n   di->num_subs = len;\n   di->next_sub = 0;"}, {"sha": "8632253b4c14f4341384c814db8dc48d9de0f683", "filename": "libiberty/floatformat.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcb167e030e016946c3dbf6fcfc81093ca6feea/libiberty%2Ffloatformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcb167e030e016946c3dbf6fcfc81093ca6feea/libiberty%2Ffloatformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ffloatformat.c?ref=adcb167e030e016946c3dbf6fcfc81093ca6feea", "patch": "@@ -489,7 +489,7 @@ floatformat_to_double (const struct floatformat *fmt,\n       int nan = mant_bits_set (fmt, ufrom);\n \n       /* On certain systems (such as GNU/Linux), the use of the\n-\t INFINITY macro below may generate a warning that can not be\n+\t INFINITY macro below may generate a warning that cannot be\n \t silenced due to a bug in GCC (PR preprocessor/11931).  The\n \t preprocessor fails to recognise the __extension__ keyword in\n \t conjunction with the GNU/C99 extension for hexadecimal"}, {"sha": "cc7692c1d6951ce7008b59d7f93766777d256547", "filename": "libiberty/strerror.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adcb167e030e016946c3dbf6fcfc81093ca6feea/libiberty%2Fstrerror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adcb167e030e016946c3dbf6fcfc81093ca6feea/libiberty%2Fstrerror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fstrerror.c?ref=adcb167e030e016946c3dbf6fcfc81093ca6feea", "patch": "@@ -299,7 +299,7 @@ static const struct error_info error_table[] =\n   ENTRY(EREMCHG, \"EREMCHG\", \"Remote address changed\"),\n #endif\n #if defined (ELIBACC)\n-  ENTRY(ELIBACC, \"ELIBACC\", \"Can not access a needed shared library\"),\n+  ENTRY(ELIBACC, \"ELIBACC\", \"Cannot access a needed shared library\"),\n #endif\n #if defined (ELIBBAD)\n   ENTRY(ELIBBAD, \"ELIBBAD\", \"Accessing a corrupted shared library\"),"}]}