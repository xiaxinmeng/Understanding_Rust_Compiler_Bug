{"sha": "885e570af17aed5736e4fd92347ca05e3d552926", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg1ZTU3MGFmMTdhZWQ1NzM2ZTRmZDkyMzQ3Y2EwNWUzZDU1MjkyNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T10:22:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T10:22:23Z"}, "message": "[multiple changes]\n\n2014-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_prag.adb: Minor reformatting.\n\t* s-regpat.adb: Minor reformatting.\n\t* sem_ch3.adb (Analyze_Object_Declaration): Do not set\n\tTreat_As_Volatile on constants.\n\n2014-08-01  Tristan Gingold  <gingold@adacore.com>\n\n\t* exp_ch9.adb (Make_Task_Create_Call): Improve error message.\n\n2014-08-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch10.adb (Analyze_Compilation_Unit): Do not place a\n\twarning on a with_clause created for the renaming of a parent\n\tunit in an explicit with_clause.\n\nFrom-SVN: r213448", "tree": {"sha": "74e080d6f5d9d9dcb2acbfc07000d7befe7fd6b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74e080d6f5d9d9dcb2acbfc07000d7befe7fd6b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/885e570af17aed5736e4fd92347ca05e3d552926", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/885e570af17aed5736e4fd92347ca05e3d552926", "html_url": "https://github.com/Rust-GCC/gccrs/commit/885e570af17aed5736e4fd92347ca05e3d552926", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/885e570af17aed5736e4fd92347ca05e3d552926/comments", "author": null, "committer": null, "parents": [{"sha": "8894aa20ff573ed8cc3d317199fbcbfbcd03c159", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8894aa20ff573ed8cc3d317199fbcbfbcd03c159", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8894aa20ff573ed8cc3d317199fbcbfbcd03c159"}], "stats": {"total": 72, "additions": 58, "deletions": 14}, "files": [{"sha": "d5606e6a248c6315129b42dd131ca7f075ebc418", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/885e570af17aed5736e4fd92347ca05e3d552926/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/885e570af17aed5736e4fd92347ca05e3d552926/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=885e570af17aed5736e4fd92347ca05e3d552926", "patch": "@@ -1,3 +1,20 @@\n+2014-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_prag.adb: Minor reformatting.\n+\t* s-regpat.adb: Minor reformatting.\n+\t* sem_ch3.adb (Analyze_Object_Declaration): Do not set\n+\tTreat_As_Volatile on constants.\n+\n+2014-08-01  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* exp_ch9.adb (Make_Task_Create_Call): Improve error message.\n+\n+2014-08-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch10.adb (Analyze_Compilation_Unit): Do not place a\n+\twarning on a with_clause created for the renaming of a parent\n+\tunit in an explicit with_clause.\n+\n 2014-08-01  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch13.adb (Analyze_Aspect_Specifications, case Aspect_Import):"}, {"sha": "3cacc77fed36df9d045eec04824bc5c04356573c", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/885e570af17aed5736e4fd92347ca05e3d552926/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/885e570af17aed5736e4fd92347ca05e3d552926/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=885e570af17aed5736e4fd92347ca05e3d552926", "patch": "@@ -14013,6 +14013,20 @@ package body Exp_Ch9 is\n       Ttyp := Corresponding_Concurrent_Type (Task_Rec);\n       Tnam := Chars (Ttyp);\n \n+      --  The sequential partition elaboration policy is supported only in the\n+      --  restricted profile.\n+\n+      --  This test should be in sem_ch9, not here ???\n+\n+      if Partition_Elaboration_Policy = 'S'\n+        and then not Restricted_Profile\n+      then\n+         Error_Msg_N\n+           (\"sequential elaboration supported only in restricted profile\",\n+            Task_Rec);\n+         return Make_Null_Statement (Loc);\n+      end if;\n+\n       --  Get task declaration. In the case of a task type declaration, this is\n       --  simply the parent of the task type entity. In the single task\n       --  declaration, this parent will be the implicit type, and we can find"}, {"sha": "add78bdb4c68ad24098a081788d9ba19015e7735", "filename": "gcc/ada/s-regpat.adb", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/885e570af17aed5736e4fd92347ca05e3d552926/gcc%2Fada%2Fs-regpat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/885e570af17aed5736e4fd92347ca05e3d552926/gcc%2Fada%2Fs-regpat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-regpat.adb?ref=885e570af17aed5736e4fd92347ca05e3d552926", "patch": "@@ -414,9 +414,9 @@ package body System.Regpat is\n          Flags         : out Expression_Flags;\n          IP            : out Pointer);\n       --  Parse regular expression, i.e. main body or parenthesized thing\n-      --  Caller must absorb opening parenthesis.\n-      --  Capturing should be set to True when we have an open parenthesis\n-      --  from which we want the user to extra text.\n+      --  Caller must absorb opening parenthesis. Capturing should be set to\n+      --  True when we have an open parenthesis from which we want the user\n+      --  to extra text.\n \n       procedure Parse_Branch\n         (Flags         : out Expression_Flags;\n@@ -920,10 +920,13 @@ package body System.Regpat is\n                Ender := Emit_Node (CLOSE);\n                Emit (Character'Val (Par_No));\n                Link_Tail (IP, Ender);\n+\n             else\n-               --  need to keep looking after the closing parenthesis\n+               --  Need to keep looking after the closing parenthesis\n+\n                null;\n             end if;\n+\n          else\n             Ender := Emit_Node (EOP);\n             Link_Tail (IP, Ender);\n@@ -1012,14 +1015,18 @@ package body System.Regpat is\n \n                begin\n                   if Parse_Pos <= Parse_End - 1\n-                     and then Expression (Parse_Pos) = '?'\n-                     and then Expression (Parse_Pos + 1) = ':'\n+                    and then Expression (Parse_Pos) = '?'\n+                    and then Expression (Parse_Pos + 1) = ':'\n                   then\n                      Parse_Pos := Parse_Pos + 2;\n-                     --  non-capturing parenthesis\n+\n+                     --  Non-capturing parenthesis\n+\n                      Parse (True, False, New_Flags, IP);\n+\n                   else\n-                     --  capturing parenthesis\n+                     --  Capturing parenthesis\n+\n                      Parse (True, True, New_Flags, IP);\n                      Expr_Flags.Has_Width :=\n                        Expr_Flags.Has_Width or else New_Flags.Has_Width;"}, {"sha": "13deef6bc492c9cf3fdfd3c987b1557cbb8b38c9", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/885e570af17aed5736e4fd92347ca05e3d552926/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/885e570af17aed5736e4fd92347ca05e3d552926/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=885e570af17aed5736e4fd92347ca05e3d552926", "patch": "@@ -242,7 +242,7 @@ package body Sem_Ch10 is\n    --  on the context. Note that in contrast with the handling of private\n    --  types, the limited view and the non-limited view of a type are treated\n    --  as separate entities, and no entity exchange needs to take place, which\n-   --  makes the implementation must simpler than could be feared.\n+   --  makes the implementation much simpler than could be feared.\n \n    ------------------------------\n    -- Analyze_Compilation_Unit --\n@@ -507,11 +507,15 @@ package body Sem_Ch10 is\n \n             --  Avoid checking implicitly generated with clauses, limited with\n             --  clauses or withs that have pragma Elaborate or Elaborate_All.\n+            --  With_clauses introduced for renamings of parent clauses are not\n+            --  marked implicit because they need to be properly installed, but\n+            --  they do not come from source and do not require warnings.\n \n             if Nkind (Clause) = N_With_Clause\n               and then not Implicit_With (Clause)\n               and then not Limited_Present (Clause)\n               and then not Elaborate_Present (Clause)\n+              and then Comes_From_Source (Clause)\n             then\n                --  Package body-to-spec check\n "}, {"sha": "adbfd5011df7bbbeac26b72ca60d10006fbccc4f", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/885e570af17aed5736e4fd92347ca05e3d552926/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/885e570af17aed5736e4fd92347ca05e3d552926/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=885e570af17aed5736e4fd92347ca05e3d552926", "patch": "@@ -3923,10 +3923,13 @@ package body Sem_Ch3 is\n \n       Set_Etype (Id, Act_T);\n \n-      --  Object is marked to be treated as volatile if type is volatile and\n-      --  we clear the Current_Value setting that may have been set above.\n+      --  Non-constant object is marked to be treated as volatile if type is\n+      --  volatile and we clear the Current_Value setting that may have been\n+      --  set above. Doing so for constants isn't required and might interfere\n+      --  with possible uses of the object as a static expression in contexts\n+      --  incompatible with volatility (e.g. as a case-statement alternative).\n \n-      if Treat_As_Volatile (Etype (Id)) then\n+      if Ekind (Id) /= E_Constant and then Treat_As_Volatile (Etype (Id)) then\n          Set_Treat_As_Volatile (Id);\n          Set_Current_Value (Id, Empty);\n       end if;"}, {"sha": "3aef37217afea2abfc46988608cd24572994f7f9", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/885e570af17aed5736e4fd92347ca05e3d552926/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/885e570af17aed5736e4fd92347ca05e3d552926/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=885e570af17aed5736e4fd92347ca05e3d552926", "patch": "@@ -7841,8 +7841,7 @@ package body Sem_Prag is\n               and then Comes_From_Source\n                          (Original_Node (Expression (Parent (Def_Id))))\n             then\n-\n-               --  Set imported flag to prevent cascaded errors.\n+               --  Set imported flag to prevent cascaded errors\n \n                Set_Is_Imported (Def_Id);\n "}]}