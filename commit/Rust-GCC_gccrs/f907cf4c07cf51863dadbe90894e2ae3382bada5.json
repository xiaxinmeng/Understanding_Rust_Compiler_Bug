{"sha": "f907cf4c07cf51863dadbe90894e2ae3382bada5", "node_id": "C_kwDOANBUbNoAKGY5MDdjZjRjMDdjZjUxODYzZGFkYmU5MDg5NGUyYWUzMzgyYmFkYTU", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2022-06-14T05:57:01Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2022-06-14T05:57:01Z"}, "message": "vect: Move suggested_unroll_factor applying [PR105940]\n\nAs PR105940 shown, when rs6000 port tries to assign\nm_suggested_unroll_factor by 4 or so, there will be ICE on:\n\n  exact_div (LOOP_VINFO_VECT_FACTOR (loop_vinfo),\n             loop_vinfo->suggested_unroll_factor);\n\nIn function vect_analyze_loop_2, the current place of\nsuggested_unroll_factor applying can't guarantee it's\napplied for all cases.  As the case shows, vectorizer\ncould retry with SLP forced off, the vf is reset by\nsaved_vectorization_factor which isn't applied with\nsuggested_unroll_factor before.  It means it can end\nup with one vf which neglects suggested_unroll_factor.\nI think it's off design, we should move the applying\nof suggested_unroll_factor after start_over.\n\n\tPR tree-optimization/105940\n\ngcc/ChangeLog:\n\n\t* tree-vect-loop.cc (vect_analyze_loop_2): Move the place of\n\tapplying suggested_unroll_factor after start_over.", "tree": {"sha": "9afc821b19f134f4909206476dc0b1edc47e46f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9afc821b19f134f4909206476dc0b1edc47e46f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f907cf4c07cf51863dadbe90894e2ae3382bada5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f907cf4c07cf51863dadbe90894e2ae3382bada5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f907cf4c07cf51863dadbe90894e2ae3382bada5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f907cf4c07cf51863dadbe90894e2ae3382bada5/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "077438933cf94f00cc5edf974338c11ba4bf7a39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/077438933cf94f00cc5edf974338c11ba4bf7a39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/077438933cf94f00cc5edf974338c11ba4bf7a39"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e05f8e87f7d1bf4590b48972ea8f0dcd9581cad6", "filename": "gcc/tree-vect-loop.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f907cf4c07cf51863dadbe90894e2ae3382bada5/gcc%2Ftree-vect-loop.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f907cf4c07cf51863dadbe90894e2ae3382bada5/gcc%2Ftree-vect-loop.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.cc?ref=f907cf4c07cf51863dadbe90894e2ae3382bada5", "patch": "@@ -2388,15 +2388,15 @@ vect_analyze_loop_2 (loop_vec_info loop_vinfo, bool &fatal,\n      set of rgroups.  */\n   gcc_assert (LOOP_VINFO_MASKS (loop_vinfo).is_empty ());\n \n+  /* This is the point where we can re-start analysis with SLP forced off.  */\n+start_over:\n+\n   /* Apply the suggested unrolling factor, this was determined by the backend\n      during finish_cost the first time we ran the analyzis for this\n      vector mode.  */\n   if (loop_vinfo->suggested_unroll_factor > 1)\n     LOOP_VINFO_VECT_FACTOR (loop_vinfo) *= loop_vinfo->suggested_unroll_factor;\n \n-  /* This is the point where we can re-start analysis with SLP forced off.  */\n-start_over:\n-\n   /* Now the vectorization factor is final.  */\n   poly_uint64 vectorization_factor = LOOP_VINFO_VECT_FACTOR (loop_vinfo);\n   gcc_assert (known_ne (vectorization_factor, 0U));"}]}