{"sha": "2043c38e8dcf438b3e3f86c6559feaab84d852ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA0M2MzOGU4ZGNmNDM4YjNlM2Y4NmM2NTU5ZmVhYWI4NGQ4NTJlZg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2002-08-09T08:51:27Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2002-08-09T08:51:27Z"}, "message": "profile.c (da_file_name): New static var.\n\n\t* profile.c (da_file_name): New static var.\n\t(init_branch_prob): Initialize it.\n\t(end_branch_prob): Remove da file.\n\n\t* Makefile.in (stage1_build): Pass empty COVERAGE_FLAGS.\n\t* configure.in (coverage_flags) default to nothing.\n\t* configure: Rebuilt.\n\nFrom-SVN: r56164", "tree": {"sha": "d1c1eab856d0d9ef923bee055c80b85f71041bdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1c1eab856d0d9ef923bee055c80b85f71041bdc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2043c38e8dcf438b3e3f86c6559feaab84d852ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2043c38e8dcf438b3e3f86c6559feaab84d852ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2043c38e8dcf438b3e3f86c6559feaab84d852ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2043c38e8dcf438b3e3f86c6559feaab84d852ef/comments", "author": null, "committer": null, "parents": [{"sha": "42127f51783a232f8fa376d079f8ea000eff6b44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42127f51783a232f8fa376d079f8ea000eff6b44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42127f51783a232f8fa376d079f8ea000eff6b44"}], "stats": {"total": 34, "additions": 22, "deletions": 12}, "files": [{"sha": "aa73454452125a9a2a36241ed11db7a9ac8830bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2043c38e8dcf438b3e3f86c6559feaab84d852ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2043c38e8dcf438b3e3f86c6559feaab84d852ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2043c38e8dcf438b3e3f86c6559feaab84d852ef", "patch": "@@ -1,3 +1,13 @@\n+2002-08-08  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* profile.c (da_file_name): New static var.\n+\t(init_branch_prob): Initialize it.\n+\t(end_branch_prob): Remove da file.\n+\n+\t* Makefile.in (stage1_build): Pass empty COVERAGE_FLAGS.\n+\t* configure.in (coverage_flags) default to nothing.\n+\t* configure: Rebuilt.\n+\n 2002-08-09  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* Makefile.in (c-opts.o): Update"}, {"sha": "d221b547ea0ccef69e04540495216648e90d0a7a", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2043c38e8dcf438b3e3f86c6559feaab84d852ef/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2043c38e8dcf438b3e3f86c6559feaab84d852ef/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=2043c38e8dcf438b3e3f86c6559feaab84d852ef", "patch": "@@ -3320,7 +3320,7 @@ STAGE2_FLAGS_TO_PASS = \\\n stage1_build:\n \t$(MAKE) CC=\"$(CC)\" libdir=$(libdir) LANGUAGES=\"$(BOOT_LANGUAGES)\" \\\n \t\tCFLAGS=\"$(STAGE1_CFLAGS)\" MAKEINFO=\"$(MAKEINFO)\" \\\n-\t\tMAKEINFOFLAGS=\"$(MAKEINFOFLAGS)\"\n+\t\tMAKEINFOFLAGS=\"$(MAKEINFOFLAGS)\" COVERAGE_FLAGS=\n \t$(STAMP) stage1_build\n \techo stage1_build > stage_last\n "}, {"sha": "94fc4b8838254bbd52574ccd981d4f1b70fb46df", "filename": "gcc/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2043c38e8dcf438b3e3f86c6559feaab84d852ef/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2043c38e8dcf438b3e3f86c6559feaab84d852ef/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=2043c38e8dcf438b3e3f86c6559feaab84d852ef", "patch": "@@ -890,7 +890,7 @@ opt)\n \t;;\n esac\n else\n-  coverage_flags=\"-O2\"\n+  coverage_flags=\"\"\n fi\n \n "}, {"sha": "e9977a638c39c45a9c5bbc7789a3f4dd83184487", "filename": "gcc/configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2043c38e8dcf438b3e3f86c6559feaab84d852ef/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2043c38e8dcf438b3e3f86c6559feaab84d852ef/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=2043c38e8dcf438b3e3f86c6559feaab84d852ef", "patch": "@@ -273,7 +273,7 @@ opt)\n \tAC_MSG_ERROR(unknown coverage setting $enableval)\n \t;;\n esac],\n-[coverage_flags=\"-O2\"])\n+[coverage_flags=\"\"])\n AC_SUBST(coverage_flags)\n \n AC_ARG_WITH(cpp_install_dir,"}, {"sha": "528fc6fedd260e39c9d855b16353198937f78860", "filename": "gcc/profile.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2043c38e8dcf438b3e3f86c6559feaab84d852ef/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2043c38e8dcf438b3e3f86c6559feaab84d852ef/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=2043c38e8dcf438b3e3f86c6559feaab84d852ef", "patch": "@@ -127,6 +127,7 @@ static FILE *bbg_file;\n /* Name and file pointer of the input file for the arc count data.  */\n \n static FILE *da_file;\n+static char *da_file_name;\n \n /* Pointer of the output file for the basic block/line number map.  */\n static FILE *bb_file;\n@@ -1185,12 +1186,11 @@ void\n init_branch_prob (filename)\n   const char *filename;\n {\n-  long len;\n+  int len = strlen (filename);\n   int i;\n \n   if (flag_test_coverage)\n     {\n-      int len = strlen (filename);\n       char *data_file, *bbg_file_name;\n \n       /* Open an output file for the basic block/line number map.  */\n@@ -1212,15 +1212,14 @@ init_branch_prob (filename)\n       last_bb_file_name = 0;\n     }\n \n+  da_file_name = (char *) xmalloc (len + 4);\n+  strcpy (da_file_name, filename);\n+  strcat (da_file_name, \".da\");\n+  \n   if (flag_branch_probabilities)\n     {\n-      char *da_file_name;\n-\n-      len = strlen (filename);\n-      da_file_name = (char *) alloca (len + 4);\n-      strcpy (da_file_name, filename);\n-      strcat (da_file_name, \".da\");\n-      if ((da_file = fopen (da_file_name, \"rb\")) == 0)\n+      da_file = fopen (da_file_name, \"rb\");\n+      if (!da_file)\n \twarning (\"file %s not found, execution counts assumed to be zero\",\n \t\t da_file_name);\n     }\n@@ -1251,6 +1250,7 @@ end_branch_prob ()\n     {\n       fclose (bb_file);\n       fclose (bbg_file);\n+      unlink (da_file_name);\n     }\n \n   if (flag_branch_probabilities && da_file)"}]}