{"sha": "3b312ef46fc9f3319b688174a105d5827dd122b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2IzMTJlZjQ2ZmM5ZjMzMTliNjg4MTc0YTEwNWQ1ODI3ZGQxMjJiMQ==", "commit": {"author": {"name": "Jason Thorpe", "email": "thorpej@wasabisystems.com", "date": "2002-11-19T04:27:13Z"}, "committer": {"name": "Jason Thorpe", "email": "thorpej@gcc.gnu.org", "date": "2002-11-19T04:27:13Z"}, "message": "duff-1.c: New test.\n\n* gcc.dg/duff-1.c: New test.\n* gcc.dg/duff-2.c: New test.\n* gcc.dg/duff-3.c: New test.\n\nFrom-SVN: r59240", "tree": {"sha": "234e4b72677896d4394c8cc46f85801a9ed648c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/234e4b72677896d4394c8cc46f85801a9ed648c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b312ef46fc9f3319b688174a105d5827dd122b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b312ef46fc9f3319b688174a105d5827dd122b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b312ef46fc9f3319b688174a105d5827dd122b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b312ef46fc9f3319b688174a105d5827dd122b1/comments", "author": null, "committer": null, "parents": [{"sha": "08c42743e01fd59d90aa6c65a92d1085c5f0ef35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08c42743e01fd59d90aa6c65a92d1085c5f0ef35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08c42743e01fd59d90aa6c65a92d1085c5f0ef35"}], "stats": {"total": 163, "additions": 163, "deletions": 0}, "files": [{"sha": "ec205b05aa4e9d37ff17d84cb5a62577fac736b1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b312ef46fc9f3319b688174a105d5827dd122b1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b312ef46fc9f3319b688174a105d5827dd122b1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3b312ef46fc9f3319b688174a105d5827dd122b1", "patch": "@@ -1,3 +1,9 @@\n+2002-11-19  Jason Thorpe  <thorpej@wasabisystems.com>\n+\n+\t* gcc.dg/duff-1.c: New test.\n+\t* gcc.dg/duff-2.c: New test.\n+\t* gcc.dg/duff-3.c: New test.\n+\n 2002-11-18  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* gcc.dg/cpp/_Pragma5.c: New test."}, {"sha": "b718f6c05e28368bdea288317c73ee12226168a8", "filename": "gcc/testsuite/gcc.dg/duff-1.c", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b312ef46fc9f3319b688174a105d5827dd122b1/gcc%2Ftestsuite%2Fgcc.dg%2Fduff-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b312ef46fc9f3319b688174a105d5827dd122b1/gcc%2Ftestsuite%2Fgcc.dg%2Fduff-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fduff-1.c?ref=3b312ef46fc9f3319b688174a105d5827dd122b1", "patch": "@@ -0,0 +1,50 @@\n+/* Duff's device is legal C; test to make sure the compiler\n+   doesn't complain about it.\n+\n+   Jason Thorpe <thorpej@wasabisystems.com>\n+   Derived from PR 3846.  */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+typedef __SIZE_TYPE__ size_t;\n+extern int memcmp (const void *, const void *, size_t);\n+\n+void\n+duffcpy (char *dst, const char *src, unsigned long size)\n+{\n+  switch (size & 3)\n+    {\n+    for (;;)\n+      {\n+\t*dst++ = *src++;\n+    case 3:\n+\t*dst++ = *src++;\n+    case 2:\n+\t*dst++ = *src++;\n+    case 1:\n+\t*dst++ = *src++;\n+    case 0:\n+\tif (size <= 3)\n+\t  break;\n+\tsize -= 4;\n+      }\n+    }\n+}\n+\n+const char testpat[] = \"The quick brown fox jumped over the lazy dog.\";\n+\n+int\n+main()\n+{\n+  char buf[64];\n+\n+  duffcpy (buf, testpat, sizeof (testpat));\n+  if (memcmp (buf, testpat, sizeof (testpat)) != 0)\n+    abort ();\n+\n+  exit (0);\n+}"}, {"sha": "8b8923eb94340b7f965b0eda4eaff30d05907b79", "filename": "gcc/testsuite/gcc.dg/duff-2.c", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b312ef46fc9f3319b688174a105d5827dd122b1/gcc%2Ftestsuite%2Fgcc.dg%2Fduff-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b312ef46fc9f3319b688174a105d5827dd122b1/gcc%2Ftestsuite%2Fgcc.dg%2Fduff-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fduff-2.c?ref=3b312ef46fc9f3319b688174a105d5827dd122b1", "patch": "@@ -0,0 +1,60 @@\n+/* Duff's device is legal C; test to make sure the compiler\n+   doesn't complain about it.\n+\n+   Jason Thorpe <thorpej@wasabisystems.com>\n+   Derived from the BSD Telnet Kerberos 4 checksum routine.\n+   See also PR 5230.  */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+#if __INT_MAX__ >= 2147483647\n+/* At least 32-bit integers. */\n+typedef int type32;\n+#else\n+typedef long type32;\n+#endif\n+\n+type32\n+cksum (const unsigned char *src, unsigned long size)\n+{\n+  type32 ck = 0;\n+\n+  switch (size & 3)\n+    {\n+    while (size > 0)\n+      {\n+    case 0:\n+\tck ^= (type32)*src++ << 24;\n+\t--size;\n+    case 3:\n+\tck ^= (type32)*src++ << 16;\n+\t--size;\n+    case 2:\n+\tck ^= (type32)*src++ << 8;\n+\t--size;\n+    case 1:\n+\tck ^= (type32)*src++;\n+\t--size;\n+      }\n+    }\n+\n+  return ck;\n+}\n+\n+const char testpat[] = \"The quick brown fox jumped over the lazy dog.\";\n+\n+int\n+main()\n+{\n+  type32 ck;\n+\n+  ck = cksum ((const unsigned char *) testpat, sizeof (testpat));\n+  if (ck != 925902908)\n+    abort ();\n+\n+  exit (0);\n+}"}, {"sha": "23cddeff9e7aaac82f719a7f089b5cfa6ec86084", "filename": "gcc/testsuite/gcc.dg/duff-3.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b312ef46fc9f3319b688174a105d5827dd122b1/gcc%2Ftestsuite%2Fgcc.dg%2Fduff-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b312ef46fc9f3319b688174a105d5827dd122b1/gcc%2Ftestsuite%2Fgcc.dg%2Fduff-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fduff-3.c?ref=3b312ef46fc9f3319b688174a105d5827dd122b1", "patch": "@@ -0,0 +1,47 @@\n+/* Duff's device is legal C; test to make sure the compiler\n+   doesn't complain about it.\n+\n+   Jason Thorpe <thorpej@wasabisystems.com>\n+   Derived from Tom Duff's original usenet message about the device.  */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+typedef __SIZE_TYPE__ size_t;\n+extern int memcmp (const void *, const void *, size_t);\n+\n+void\n+duffcpy (char *dst, const char *src, unsigned long size)\n+{\n+  unsigned long n = (size + 7) / 8;\n+\n+  switch (size % 8)\n+    {\n+    case 0:\tdo {\t*dst++ = *src++;\n+    case 7:\t\t*dst++ = *src++;\n+    case 6:\t\t*dst++ = *src++;\n+    case 5:\t\t*dst++ = *src++;\n+    case 4:\t\t*dst++ = *src++;\n+    case 3:\t\t*dst++ = *src++;\n+    case 2:\t\t*dst++ = *src++;\n+    case 1:\t\t*dst++ = *src++;\n+\t\t} while (--n > 0);\n+    }\n+}\n+\n+const char testpat[] = \"The quick brown fox jumped over the lazy dog.\";\n+\n+int\n+main()\n+{\n+  char buf[64];\n+\n+  duffcpy (buf, testpat, sizeof (testpat));\n+  if (memcmp (buf, testpat, sizeof (testpat)) != 0)\n+    abort ();\n+\n+  exit (0);\n+}"}]}