{"sha": "685f39066bb11fba9434c10d21c98a29e51d9093", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg1ZjM5MDY2YmIxMWZiYTk0MzRjMTBkMjFjOThhMjllNTFkOTA5Mw==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "1996-02-27T21:39:16Z"}, "committer": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "1996-02-27T21:39:16Z"}, "message": "DImode insv and extzv, movsf split\n\nFrom-SVN: r11356", "tree": {"sha": "b7dcaeebeef9744d7fe73b79eefc4d4645926fc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7dcaeebeef9744d7fe73b79eefc4d4645926fc2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/685f39066bb11fba9434c10d21c98a29e51d9093", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/685f39066bb11fba9434c10d21c98a29e51d9093", "html_url": "https://github.com/Rust-GCC/gccrs/commit/685f39066bb11fba9434c10d21c98a29e51d9093", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/685f39066bb11fba9434c10d21c98a29e51d9093/comments", "author": null, "committer": null, "parents": [{"sha": "92fd61996f017e94d3a3a79b743f2f3617952a52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92fd61996f017e94d3a3a79b743f2f3617952a52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92fd61996f017e94d3a3a79b743f2f3617952a52"}], "stats": {"total": 92, "additions": 89, "deletions": 3}, "files": [{"sha": "6a22c998e79ebf430699dbc091be88fbcdfba45f", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 89, "deletions": 3, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/685f39066bb11fba9434c10d21c98a29e51d9093/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/685f39066bb11fba9434c10d21c98a29e51d9093/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=685f39066bb11fba9434c10d21c98a29e51d9093", "patch": "@@ -2147,6 +2147,22 @@\n   return \\\"{rlimi|rlwimi} %0,%3,%5,%h2,%h1\\\";\n }\")\n \n+(define_insn \"\"\n+  [(set (zero_extract:DI (match_operand:DI 0 \"gpc_reg_operand\" \"+r\")\n+\t\t\t (match_operand:DI 1 \"const_int_operand\" \"i\")\n+\t\t\t (match_operand:DI 2 \"const_int_operand\" \"i\"))\n+\t(match_operand:DI 3 \"gpc_reg_operand\" \"r\"))]\n+  \"TARGET_POWERPC64\"\n+  \"*\n+{\n+  int start = INTVAL (operands[2]) & 63;\n+  int size = INTVAL (operands[1]) & 63;\n+\n+  operands[2] = gen_rtx (CONST_INT, VOIDmode, 64 - start - size);\n+  operands[1] = gen_rtx (CONST_INT, VOIDmode, start);\n+  return \\\"rldimi %0,%3,%2,%1\\\";\n+}\")\n+\n (define_expand \"extzv\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(zero_extract:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n@@ -2247,6 +2263,68 @@\n }\"\n   [(set_attr \"type\" \"delayed_compare\")])\n \n+(define_insn \"\"\n+  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n+\t(zero_extract:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n+\t\t\t (match_operand:DI 2 \"const_int_operand\" \"i\")\n+\t\t\t (match_operand:DI 3 \"const_int_operand\" \"i\")))]\n+  \"TARGET_POWERPC64\"\n+  \"*\n+{\n+  int start = INTVAL (operands[3]) & 63;\n+  int size = INTVAL (operands[2]) & 63;\n+\n+  if (start + size >= 64)\n+    operands[3] = const0_rtx;\n+  else\n+    operands[3] = gen_rtx (CONST_INT, VOIDmode, start + size);\n+  operands[2] = gen_rtx (CONST_INT, VOIDmode, 64 - size);\n+  return \\\"rldicl %0,%1,%3,%2\\\";\n+}\")\n+\n+(define_insn \"\"\n+  [(set (match_operand:CC 0 \"gpc_reg_operand\" \"=x\")\n+\t(compare:CC (zero_extract:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n+\t\t\t (match_operand:DI 2 \"const_int_operand\" \"i\")\n+\t\t\t (match_operand:DI 3 \"const_int_operand\" \"i\"))\n+\t\t    (const_int 0)))\n+   (clobber (match_scratch:DI 4 \"=r\"))]\n+  \"TARGET_POWERPC64\"\n+  \"*\n+{\n+  int start = INTVAL (operands[3]) & 63;\n+  int size = INTVAL (operands[2]) & 63;\n+\n+  if (start + size >= 64)\n+    operands[3] = const0_rtx;\n+  else\n+    operands[3] = gen_rtx (CONST_INT, VOIDmode, start + size);\n+  operands[2] = gen_rtx (CONST_INT, VOIDmode, 64 - size);\n+  return \\\"rldicl. %4,%1,%3,%2\\\";\n+}\")\n+\n+(define_insn \"\"\n+  [(set (match_operand:CC 4 \"gpc_reg_operand\" \"=x\")\n+\t(compare:CC (zero_extract:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n+\t\t\t (match_operand:DI 2 \"const_int_operand\" \"i\")\n+\t\t\t (match_operand:DI 3 \"const_int_operand\" \"i\"))\n+\t\t    (const_int 0)))\n+   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n+\t(zero_extract:DI (match_dup 1) (match_dup 2) (match_dup 3)))]\n+  \"TARGET_POWERPC64\"\n+  \"*\n+{\n+  int start = INTVAL (operands[3]) & 63;\n+  int size = INTVAL (operands[2]) & 63;\n+\n+  if (start + size >= 64)\n+    operands[3] = const0_rtx;\n+  else\n+    operands[3] = gen_rtx (CONST_INT, VOIDmode, start + size);\n+  operands[2] = gen_rtx (CONST_INT, VOIDmode, 64 - size);\n+  return \\\"rldicl. %0,%1,%3,%2\\\";\n+}\")\n+\n (define_insn \"rotlsi3\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(rotate:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")\n@@ -5102,8 +5180,16 @@\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"\")\n \t(match_operand:SF 1 \"easy_fp_constant\" \"\"))]\n   \"reload_completed && REGNO (operands[0]) <= 31\"\n-  [(set (subreg:SI (match_dup 0) 0) (subreg:SI (match_dup 1) 0))]\n-  \"\")\n+  [(set (subreg:SI (match_dup 0) 0) (match_dup 2))]\n+  \"\n+{\n+  long l;\n+  REAL_VALUE_TYPE rv;\n+\n+  REAL_VALUE_FROM_CONST_DOUBLE (rv, operands[1]);\n+  REAL_VALUE_TO_TARGET_SINGLE (rv, l);\n+  operands[2] = GEN_INT(l);\n+}\")\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"fp_reg_or_mem_operand\" \"=f,f,m\")\n@@ -5181,7 +5267,7 @@\n \n (define_split\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"\")\n-        (match_operand:DF 1 \"easy_fp_constant\" \"\"))]\n+\t(match_operand:DF 1 \"easy_fp_constant\" \"\"))]\n   \"TARGET_64BIT && reload_completed && REGNO (operands[0]) <= 31\"\n   [(set (subreg:DI (match_dup 0) 0) (subreg:DI (match_dup 1) 0))]\n   \"\")"}]}