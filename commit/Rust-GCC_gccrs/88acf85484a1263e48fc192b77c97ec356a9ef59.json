{"sha": "88acf85484a1263e48fc192b77c97ec356a9ef59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhhY2Y4NTQ4NGExMjYzZTQ4ZmMxOTJiNzdjOTdlYzM1NmE5ZWY1OQ==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2000-05-12T21:59:39Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-05-12T21:59:39Z"}, "message": "fix up some of the testing\n\nFrom-SVN: r33886", "tree": {"sha": "719f5146967fada026ae91c51fba191859cee6b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/719f5146967fada026ae91c51fba191859cee6b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88acf85484a1263e48fc192b77c97ec356a9ef59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88acf85484a1263e48fc192b77c97ec356a9ef59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88acf85484a1263e48fc192b77c97ec356a9ef59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88acf85484a1263e48fc192b77c97ec356a9ef59/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aeb4f5ef5d18088fc00cdf76f39c7f3268b3547e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeb4f5ef5d18088fc00cdf76f39c7f3268b3547e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeb4f5ef5d18088fc00cdf76f39c7f3268b3547e"}], "stats": {"total": 283, "additions": 184, "deletions": 99}, "files": [{"sha": "09153542dc43ee2e77fd7fda666ff8d071a6fc59", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88acf85484a1263e48fc192b77c97ec356a9ef59/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88acf85484a1263e48fc192b77c97ec356a9ef59/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88acf85484a1263e48fc192b77c97ec356a9ef59", "patch": "@@ -86,6 +86,12 @@ Fri May 12 19:03:58 2000  Philippe De Muyter  <phdm@macqel.be>\n 2000-05-12  Bruce Korb  <bkorb@gnu.org>\n \n \t* fixinc/fixfixes.c(format_write): buglet & relaxed rules\n+\t* fixinc/check.diff: updated\n+\t* fixinc/inclhack.def: corrected & added some test_text-s\n+\t* fixinc/genfixes: removed unneeded options to autogen invocation\n+\t* fixinc/fixincl.tpl: Specified the output file\n+\t* fixinc/fixfixes.c: visual appearance\n+\t* fixinc/fixincl.x: regenerate\n \n 2000-05-12  Zack Weinberg <zack@wolery.cumb.org>\n "}, {"sha": "da0496e57e0bc6f873f61d893b74091c49c1ac5b", "filename": "gcc/fixinc/check.diff", "status": "modified", "additions": 64, "deletions": 3, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88acf85484a1263e48fc192b77c97ec356a9ef59/gcc%2Ffixinc%2Fcheck.diff", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88acf85484a1263e48fc192b77c97ec356a9ef59/gcc%2Ffixinc%2Fcheck.diff", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Fcheck.diff?ref=88acf85484a1263e48fc192b77c97ec356a9ef59", "patch": "@@ -88,7 +88,7 @@\n --- 1,7 ----\n + #ifdef __cplusplus\n + #include <stdlib.h>\n-+ #endif\n++ #endif /* BROKEN_ASSERT_STDLIB_CHECK fix stamp */\n + #include <stdio.h>\n   \n   \n@@ -156,15 +156,20 @@\n *** inc/stdio.h\n --- res/stdio.h\n ***************\n-*** 1,7 ****\n+*** 1,12 ****\n   \n   \n   #ifndef ALPHA_GETOPT_CHECK\n ! extern int getopt(int, char *[], char *);\n   #endif  /* ALPHA_GETOPT_CHECK */\n   \n   \n---- 1,9 ----\n+  #ifndef ISC_OMITS_WITH_STDC_CHECK\n+! #if !defined(__STDC__) && !defined(_POSIX_SOURCE) /* ? ! */\n+  int foo;\n+  #endif\n+  #endif  /* ISC_OMITS_WITH_STDC_CHECK */\n+--- 1,14 ----\n + #define __need___va_list\n + #include <stdarg.h>\n   \n@@ -174,6 +179,11 @@\n   #endif  /* ALPHA_GETOPT_CHECK */\n   \n   \n+  #ifndef ISC_OMITS_WITH_STDC_CHECK\n+! #if !defined(_POSIX_SOURCE) /* ? ! */\n+  int foo;\n+  #endif\n+  #endif  /* ISC_OMITS_WITH_STDC_CHECK */\n *** inc/stdlib.h\n --- res/stdlib.h\n ***************\n@@ -246,6 +256,38 @@\n   extern int foo;\n   #endif\n   #endif  /* ALPHA_PARENS_CHECK */\n+*** inc/sys/file.h\n+--- res/sys/file.h\n+***************\n+*** 1,5 ****\n+  \n+  \n+  #ifndef HP_SYSFILE_CHECK\n+! extern void foo(...); /* HPUX_SOURCE - bad varargs */\n+  #endif  /* HP_SYSFILE_CHECK */\n+--- 1,5 ----\n+  \n+  \n+  #ifndef HP_SYSFILE_CHECK\n+! extern void foo(struct file *, ...); /* HPUX_SOURCE - bad varargs */\n+  #endif  /* HP_SYSFILE_CHECK */\n+*** inc/sys/mman.h\n+--- res/sys/mman.h\n+***************\n+*** 1,5 ****\n+--- 1,12 ----\n++ #ifdef __cplusplus\n++ extern \"C\" {\n++ #endif /* CXX_UNREADY_CHECK */\n++ \n+  \n+  \n+  #ifndef CXX_UNREADY_CHECK\n+  extern void* malloc( size_t );\n+  #endif  /* CXX_UNREADY_CHECK */\n++ #ifdef __cplusplus\n++ }\n++ #endif /* CXX_UNREADY_CHECK */\n *** inc/sys/param.h\n --- res/sys/param.h\n ***************\n@@ -290,6 +332,25 @@\n   #ifndef AIX_VOLATILE_CHECK\n ! typedef int sig_atomic_t;\n   #endif  /* AIX_VOLATILE_CHECK */\n+*** inc/sys/spinlock.h\n+--- res/sys/spinlock.h\n+***************\n+*** 1,7 ****\n+  \n+  \n+  #ifndef HP_INLINE_CHECK\n+! # include \"../machine/inline.h\"\n+  # include \"../machine/dontfix.h\"\n+! # include \"../machine/psl.h\"\n+  #endif  /* HP_INLINE_CHECK */\n+--- 1,7 ----\n+  \n+  \n+  #ifndef HP_INLINE_CHECK\n+! # include <machine/inline.h>\n+  # include \"../machine/dontfix.h\"\n+! # include <machine/psl.h>\n+  #endif  /* HP_INLINE_CHECK */\n *** inc/sys/time.h\n --- res/sys/time.h\n ***************"}, {"sha": "d254a70fe8f04289f92cf9049ae097285e0e4241", "filename": "gcc/fixinc/fixfixes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88acf85484a1263e48fc192b77c97ec356a9ef59/gcc%2Ffixinc%2Ffixfixes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88acf85484a1263e48fc192b77c97ec356a9ef59/gcc%2Ffixinc%2Ffixfixes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixfixes.c?ref=88acf85484a1263e48fc192b77c97ec356a9ef59", "patch": "@@ -69,7 +69,7 @@ typedef struct {\n   _FT_( \"format\",           format_fix ) \\\n   _FT_( \"char_macro_use\",   char_macro_use_fix ) \\\n   _FT_( \"char_macro_def\",   char_macro_def_fix ) \\\n-  _FT_( \"machine_name\",\t    machine_name_fix )\n+  _FT_( \"machine_name\",     machine_name_fix )\n \n \n #define FIX_PROC_HEAD( fix ) \\"}, {"sha": "a68dec85cac154d39b3855e6463792661ccdd70a", "filename": "gcc/fixinc/fixincl.tpl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88acf85484a1263e48fc192b77c97ec356a9ef59/gcc%2Ffixinc%2Ffixincl.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88acf85484a1263e48fc192b77c97ec356a9ef59/gcc%2Ffixinc%2Ffixincl.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.tpl?ref=88acf85484a1263e48fc192b77c97ec356a9ef59", "patch": "@@ -1,5 +1,5 @@\n [= autogen template -*- Mode: C -*-\n-x =]\n+x=fixincl.x =]\n /*\n  *  DO NOT EDIT THIS FILE - it has been generated\n  *"}, {"sha": "719fab4739de463059aee274c4675b012a74f629", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 82, "deletions": 78, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88acf85484a1263e48fc192b77c97ec356a9ef59/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88acf85484a1263e48fc192b77c97ec356a9ef59/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=88acf85484a1263e48fc192b77c97ec356a9ef59", "patch": "@@ -754,18 +754,22 @@ tSCC zAix_SyswaitList[] =\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zAix_SyswaitSelect0[] =\n+       \"^extern pid_t wait3\\\\(\\\\);\\n\";\n+tSCC zAix_SyswaitSelect1[] =\n        \"bos325,\";\n \n-#define    AIX_SYSWAIT_TEST_CT  1\n+#define    AIX_SYSWAIT_TEST_CT  2\n tTestDesc aAix_SyswaitTests[] = {\n-  { TT_EGREP,    zAix_SyswaitSelect0, (regex_t*)NULL }, };\n+  { TT_EGREP,    zAix_SyswaitSelect0, (regex_t*)NULL },\n+  { TT_EGREP,    zAix_SyswaitSelect1, (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Aix_Syswait\n  */\n-const char* apzAix_SyswaitPatch[] = { \"sed\",\n-    \"-e\", \"/^extern pid_t wait3();$/i\\\\\\n\\\n-struct rusage;\\n\",\n+const char* apzAix_SyswaitPatch[] = {\n+    \"format\",\n+    \"struct rusage;\\n\\\n+%0\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1257,7 +1261,7 @@ const char* apzBroken_Assert_StdlibPatch[] = { \"sed\",\n     \"-e\", \"1i\\\\\\n\\\n #ifdef __cplusplus\\\\\\n\\\n #include <stdlib.h>\\\\\\n\\\n-#endif\\n\",\n+#endif /* BROKEN_ASSERT_STDLIB_CHECK fix stamp */\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1466,12 +1470,12 @@ const char* apzCxx_UnreadyPatch[] = { \"sed\",\n     \"-e\", \"1i\\\\\\n\\\n #ifdef __cplusplus\\\\\\n\\\n extern \\\"C\\\" {\\\\\\n\\\n-#endif\\\\\\n\\\n+#endif /* CXX_UNREADY_CHECK */\\\\\\n\\\n \\n\",\n     \"-e\", \"$a\\\\\\n\\\n #ifdef __cplusplus\\\\\\n\\\n }\\\\\\n\\\n-#endif\\n\",\n+#endif /* CXX_UNREADY_CHECK */\\n\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1642,7 +1646,7 @@ tSCC zIsc_Omits_With_StdcList[] =\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zIsc_Omits_With_StdcSelect0[] =\n-       \"!defined(__STDC__) && !defined(_POSIX_SOURCE)\";\n+       \"!defined\\\\(__STDC__\\\\) && !defined\\\\(_POSIX_SOURCE\\\\)\";\n \n #define    ISC_OMITS_WITH_STDC_TEST_CT  1\n tTestDesc aIsc_Omits_With_StdcTests[] = {\n@@ -1657,140 +1661,140 @@ const char* apzIsc_Omits_With_StdcPatch[] = { \"sed\",\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n- *  Description of Io_Use_Quotes fix\n+ *  Description of Io_Quotes_Use fix\n  */\n-#define IO_USE_QUOTES_FIXIDX             38\n-tSCC zIo_Use_QuotesName[] =\n-     \"io_use_quotes\";\n+#define IO_QUOTES_USE_FIXIDX             38\n+tSCC zIo_Quotes_UseName[] =\n+     \"io_quotes_use\";\n \n /*\n  *  File name selection pattern\n  */\n-#define zIo_Use_QuotesList (char*)NULL\n+#define zIo_Quotes_UseList (char*)NULL\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzIo_Use_QuotesMachs (const char**)NULL\n+#define apzIo_Quotes_UseMachs (const char**)NULL\n \n /*\n  *  content selection pattern - do fix if pattern found\n  */\n-tSCC zIo_Use_QuotesSelect0[] =\n+tSCC zIo_Quotes_UseSelect0[] =\n        \"define[ \\t]+[A-Z0-9_]+[ \\t]+[A-Z0-9_]+IO[A-Z]*[ \\t]*\\\\( *[^,']\";\n \n-#define    IO_USE_QUOTES_TEST_CT  1\n-tTestDesc aIo_Use_QuotesTests[] = {\n-  { TT_EGREP,    zIo_Use_QuotesSelect0, (regex_t*)NULL }, };\n+#define    IO_QUOTES_USE_TEST_CT  1\n+tTestDesc aIo_Quotes_UseTests[] = {\n+  { TT_EGREP,    zIo_Quotes_UseSelect0, (regex_t*)NULL }, };\n \n /*\n- *  Fix Command Arguments for Io_Use_Quotes\n+ *  Fix Command Arguments for Io_Quotes_Use\n  */\n-const char* apzIo_Use_QuotesPatch[] = {\n+const char* apzIo_Quotes_UsePatch[] = {\n     \"char_macro_use\",\n     \"IO\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n- *  Description of Io_Def_Quotes fix\n+ *  Description of Io_Quotes_Def fix\n  */\n-#define IO_DEF_QUOTES_FIXIDX             39\n-tSCC zIo_Def_QuotesName[] =\n-     \"io_def_quotes\";\n+#define IO_QUOTES_DEF_FIXIDX             39\n+tSCC zIo_Quotes_DefName[] =\n+     \"io_quotes_def\";\n \n /*\n  *  File name selection pattern\n  */\n-#define zIo_Def_QuotesList (char*)NULL\n+#define zIo_Quotes_DefList (char*)NULL\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzIo_Def_QuotesMachs (const char**)NULL\n+#define apzIo_Quotes_DefMachs (const char**)NULL\n \n /*\n  *  content selection pattern - do fix if pattern found\n  */\n-tSCC zIo_Def_QuotesSelect0[] =\n+tSCC zIo_Quotes_DefSelect0[] =\n        \"define[ \\t]+[A-Z0-9_]+IO[A-Z]*\\\\(([a-zA-Z]).*'\\\\1'\";\n \n-#define    IO_DEF_QUOTES_TEST_CT  1\n-tTestDesc aIo_Def_QuotesTests[] = {\n-  { TT_EGREP,    zIo_Def_QuotesSelect0, (regex_t*)NULL }, };\n+#define    IO_QUOTES_DEF_TEST_CT  1\n+tTestDesc aIo_Quotes_DefTests[] = {\n+  { TT_EGREP,    zIo_Quotes_DefSelect0, (regex_t*)NULL }, };\n \n /*\n- *  Fix Command Arguments for Io_Def_Quotes\n+ *  Fix Command Arguments for Io_Quotes_Def\n  */\n-const char* apzIo_Def_QuotesPatch[] = {\n+const char* apzIo_Quotes_DefPatch[] = {\n     \"char_macro_def\",\n     \"IO\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n- *  Description of Ctrl_Use_Quotes fix\n+ *  Description of Ctrl_Quotes_Use fix\n  */\n-#define CTRL_USE_QUOTES_FIXIDX           40\n-tSCC zCtrl_Use_QuotesName[] =\n-     \"ctrl_use_quotes\";\n+#define CTRL_QUOTES_USE_FIXIDX           40\n+tSCC zCtrl_Quotes_UseName[] =\n+     \"ctrl_quotes_use\";\n \n /*\n  *  File name selection pattern\n  */\n-#define zCtrl_Use_QuotesList (char*)NULL\n+#define zCtrl_Quotes_UseList (char*)NULL\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzCtrl_Use_QuotesMachs (const char**)NULL\n+#define apzCtrl_Quotes_UseMachs (const char**)NULL\n \n /*\n  *  content selection pattern - do fix if pattern found\n  */\n-tSCC zCtrl_Use_QuotesSelect0[] =\n+tSCC zCtrl_Quotes_UseSelect0[] =\n        \"define[ \\t]+[A-Z0-9_]+[ \\t]+[A-Z0-9_]+CTRL[ \\t]*\\\\( *[^,']\";\n \n-#define    CTRL_USE_QUOTES_TEST_CT  1\n-tTestDesc aCtrl_Use_QuotesTests[] = {\n-  { TT_EGREP,    zCtrl_Use_QuotesSelect0, (regex_t*)NULL }, };\n+#define    CTRL_QUOTES_USE_TEST_CT  1\n+tTestDesc aCtrl_Quotes_UseTests[] = {\n+  { TT_EGREP,    zCtrl_Quotes_UseSelect0, (regex_t*)NULL }, };\n \n /*\n- *  Fix Command Arguments for Ctrl_Use_Quotes\n+ *  Fix Command Arguments for Ctrl_Quotes_Use\n  */\n-const char* apzCtrl_Use_QuotesPatch[] = {\n+const char* apzCtrl_Quotes_UsePatch[] = {\n     \"char_macro_use\",\n     \"CTRL\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n- *  Description of Ctrl_Def_Quotes fix\n+ *  Description of Ctrl_Quotes_Def fix\n  */\n-#define CTRL_DEF_QUOTES_FIXIDX           41\n-tSCC zCtrl_Def_QuotesName[] =\n-     \"ctrl_def_quotes\";\n+#define CTRL_QUOTES_DEF_FIXIDX           41\n+tSCC zCtrl_Quotes_DefName[] =\n+     \"ctrl_quotes_def\";\n \n /*\n  *  File name selection pattern\n  */\n-#define zCtrl_Def_QuotesList (char*)NULL\n+#define zCtrl_Quotes_DefList (char*)NULL\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzCtrl_Def_QuotesMachs (const char**)NULL\n+#define apzCtrl_Quotes_DefMachs (const char**)NULL\n \n /*\n  *  content selection pattern - do fix if pattern found\n  */\n-tSCC zCtrl_Def_QuotesSelect0[] =\n+tSCC zCtrl_Quotes_DefSelect0[] =\n        \"define[ \\t]+[A-Z0-9_]+CTRL\\\\(([a-zA-Z]).*'\\\\1'\";\n \n-#define    CTRL_DEF_QUOTES_TEST_CT  1\n-tTestDesc aCtrl_Def_QuotesTests[] = {\n-  { TT_EGREP,    zCtrl_Def_QuotesSelect0, (regex_t*)NULL }, };\n+#define    CTRL_QUOTES_DEF_TEST_CT  1\n+tTestDesc aCtrl_Quotes_DefTests[] = {\n+  { TT_EGREP,    zCtrl_Quotes_DefSelect0, (regex_t*)NULL }, };\n \n /*\n- *  Fix Command Arguments for Ctrl_Def_Quotes\n+ *  Fix Command Arguments for Ctrl_Quotes_Def\n  */\n-const char* apzCtrl_Def_QuotesPatch[] = {\n+const char* apzCtrl_Quotes_DefPatch[] = {\n     \"char_macro_def\",\n     \"CTRL\",\n     (char*)NULL };\n@@ -4685,7 +4689,7 @@ extern char *\\tsprintf();\\\\\\n\\\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          104\n+#define REGEX_COUNT          105\n #define MACH_LIST_SIZE_LIMIT 279\n #define FIX_COUNT            118\n \n@@ -4757,7 +4761,7 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n \n   {  zAix_SyswaitName,    zAix_SyswaitList,\n      apzAix_SyswaitMachs,\n-     AIX_SYSWAIT_TEST_CT, FD_MACH_ONLY,\n+     AIX_SYSWAIT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aAix_SyswaitTests,   apzAix_SyswaitPatch },\n \n   {  zAix_VolatileName,    zAix_VolatileList,\n@@ -4880,25 +4884,25 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      ISC_OMITS_WITH_STDC_TEST_CT, FD_MACH_ONLY,\n      aIsc_Omits_With_StdcTests,   apzIsc_Omits_With_StdcPatch },\n \n-  {  zIo_Use_QuotesName,    zIo_Use_QuotesList,\n-     apzIo_Use_QuotesMachs,\n-     IO_USE_QUOTES_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aIo_Use_QuotesTests,   apzIo_Use_QuotesPatch },\n-\n-  {  zIo_Def_QuotesName,    zIo_Def_QuotesList,\n-     apzIo_Def_QuotesMachs,\n-     IO_DEF_QUOTES_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aIo_Def_QuotesTests,   apzIo_Def_QuotesPatch },\n-\n-  {  zCtrl_Use_QuotesName,    zCtrl_Use_QuotesList,\n-     apzCtrl_Use_QuotesMachs,\n-     CTRL_USE_QUOTES_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aCtrl_Use_QuotesTests,   apzCtrl_Use_QuotesPatch },\n-\n-  {  zCtrl_Def_QuotesName,    zCtrl_Def_QuotesList,\n-     apzCtrl_Def_QuotesMachs,\n-     CTRL_DEF_QUOTES_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aCtrl_Def_QuotesTests,   apzCtrl_Def_QuotesPatch },\n+  {  zIo_Quotes_UseName,    zIo_Quotes_UseList,\n+     apzIo_Quotes_UseMachs,\n+     IO_QUOTES_USE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aIo_Quotes_UseTests,   apzIo_Quotes_UsePatch },\n+\n+  {  zIo_Quotes_DefName,    zIo_Quotes_DefList,\n+     apzIo_Quotes_DefMachs,\n+     IO_QUOTES_DEF_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aIo_Quotes_DefTests,   apzIo_Quotes_DefPatch },\n+\n+  {  zCtrl_Quotes_UseName,    zCtrl_Quotes_UseList,\n+     apzCtrl_Quotes_UseMachs,\n+     CTRL_QUOTES_USE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aCtrl_Quotes_UseTests,   apzCtrl_Quotes_UsePatch },\n+\n+  {  zCtrl_Quotes_DefName,    zCtrl_Quotes_DefList,\n+     apzCtrl_Quotes_DefMachs,\n+     CTRL_QUOTES_DEF_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aCtrl_Quotes_DefTests,   apzCtrl_Quotes_DefPatch },\n \n   {  zIp_Missing_SemiName,    zIp_Missing_SemiList,\n      apzIp_Missing_SemiMachs,"}, {"sha": "27fecd41c03ccb9802a2582656608531578ad82e", "filename": "gcc/fixinc/genfixes", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88acf85484a1263e48fc192b77c97ec356a9ef59/gcc%2Ffixinc%2Fgenfixes", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88acf85484a1263e48fc192b77c97ec356a9ef59/gcc%2Ffixinc%2Fgenfixes", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Fgenfixes?ref=88acf85484a1263e48fc192b77c97ec356a9ef59", "patch": "@@ -71,7 +71,7 @@ fixincl.x | */fixincl.x )\n   if (${AG} --help > /dev/null 2>&1)\n   then\n     echo AutoGen-ing fixincl.x\n-    $AG -T fixincl.tpl -b fixincl inclhack.def\n+    $AG inclhack.def\n   else\n     echo \"AutoGen does not appear to be correctly installed.\"\n     echo \"Please download and install:\""}, {"sha": "58b0b01958e15f9f6211ea6e8d086f4b3bf74e98", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 29, "deletions": 15, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88acf85484a1263e48fc192b77c97ec356a9ef59/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88acf85484a1263e48fc192b77c97ec356a9ef59/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=88acf85484a1263e48fc192b77c97ec356a9ef59", "patch": "@@ -523,9 +523,10 @@ fix = {\n fix = {\n     hackname  = aix_syswait;\n     files     = sys/wait.h;\n+    select    = \"^extern pid_t wait3\\\\(\\\\);\\n\";\n     select    = \"bos325,\";\n-    sed    = \"/^extern pid_t wait3();$/i\\\\\\n\"\n-             \"struct rusage;\\n\";\n+    c_fix     = format;\n+    c_fix_arg = \"struct rusage;\\n%0\";\n     test_text = \"/* bos325, */\\nextern pid_t wait3();\";\n };\n \n@@ -768,7 +769,7 @@ fix = {\n     sed      = \"1i\\\\\\n\"\n                \"#ifdef __cplusplus\\\\\\n\"\n                \"#include <stdlib.h>\\\\\\n\"\n-               \"#endif\\n\";\n+               \"#endif /* BROKEN_ASSERT_STDLIB_CHECK fix stamp */\\n\";\n     test_text = \"extern void exit ( int );\";\n };\n \n@@ -831,7 +832,9 @@ fix = {\n     select = 'include.*\"\\.\\./machine/';\n     sed    = \"s,\\\"../machine/inline.h\\\",<machine/inline.h>,\";\n     sed    = \"s,\\\"../machine/psl.h\\\",<machine/psl.h>,\";\n-    test_text = '# include \"../machine/fumble.h\"';\n+    test_text = '# include \"../machine/inline.h\"' \"\\n\"\n+                '# include \"../machine/dontfix.h\"' \"\\n\"\n+                '# include \"../machine/psl.h\"';\n };\n \n \n@@ -842,8 +845,8 @@ fix = {\n     hackname  = hp_sysfile;\n     files     = sys/file.h;\n     select    = \"HPUX_SOURCE\";\n-    sed      = 's/(\\.\\.\\.)/(struct file *, ...)/';\n-    test_text = \"extern void foo(...); /* bad varargs */\";\n+    sed       = 's/(\\.\\.\\.)/(struct file *, ...)/';\n+    test_text = \"extern void foo(...); /* HPUX_SOURCE - bad varargs */\";\n };\n \n \n@@ -865,11 +868,12 @@ fix = {\n     sed      = \"1i\\\\\\n\"\n                \"#ifdef __cplusplus\\\\\\n\"\n                \"extern \\\"C\\\" {\\\\\\n\"\n-               \"#endif\\\\\\n\\n\";\n+               \"#endif /* CXX_UNREADY_CHECK */\\\\\\n\\n\";\n     sed      = \"$a\\\\\\n\"\n                \"#ifdef __cplusplus\\\\\\n\"\n                \"}\\\\\\n\"\n-               \"#endif\\n\";\n+               \"#endif /* CXX_UNREADY_CHECK */\\n\";\n+    test_text = \"extern void* malloc( size_t );\";\n };\n \n \n@@ -956,7 +960,7 @@ fix = {\n     files  = \"sys/fcntl.h\";\n     files  = \"sys/dirent.h\";\n \n-    select = \"!defined\\(__STDC__\\) && !defined\\(_POSIX_SOURCE\\)\";\n+    select = '!defined\\(__STDC__\\) && !defined\\(_POSIX_SOURCE\\)';\n \n     sed    = \"s/!defined(__STDC__) && !defined(_POSIX_SOURCE)/\"\n                \"!defined(_POSIX_SOURCE)/\";\n@@ -978,33 +982,43 @@ fix = {\n  *  _IO might be: _IO DESIO BSD43__IO with W, R, WR, C, ... suffixes.\n  */\n fix = {\n-    hackname  = io_use_quotes;\n-    select  = \"define[ \\t]+[A-Z0-9_]+[ \\t]+[A-Z0-9_]+IO[A-Z]*[ \\t]*\\\\( *[^,']\";\n+    hackname  = io_quotes_use;\n+    select    = \"define[ \\t]+[A-Z0-9_]+[ \\t]+[A-Z0-9_]+IO[A-Z]*[ \\t]*\"\n+                \"\\\\( *[^,']\";\n     c_fix     = char_macro_use;\n     c_fix_arg = \"IO\";\n };\n \n fix = {\n-    hackname  = io_def_quotes;\n+    hackname  = io_quotes_def;\n     select    = \"define[ \\t]+[A-Z0-9_]+IO[A-Z]*\\\\(([a-zA-Z]).*'\\\\1'\";\n     c_fix     = char_macro_def;\n     c_fix_arg = \"IO\";\n };\n  \n  \n /*\n- *  Same deal for CTRL() macros.\n+ *  Fix various macros used to define ioctl numbers.  The traditional\n+ *  syntax was\n+ *  #define _CTRL(n, x) (('n'<<8)+x)\n+ *  #define TIOCFOO _CTRL(T, 1)\n+ *  but this does not work with the C standard, which disallows macro\n+ *  expansion inside strings.  We have to rewrite it thus:\n+ *  #define _CTRL(n, x) ((n<<8)+x)\n+ *  #define TIOCFOO  _CTRL('T', 1)\n+ *  The select expressions match too much, but the c_fix code is cautious.\n+ *\n  *  CTRL might be: CTRL _CTRL ISCTRL BSD43_CTRL ...\n  */\n fix = {\n-    hackname  = ctrl_use_quotes;\n+    hackname  = ctrl_quotes_use;\n     select    = \"define[ \\t]+[A-Z0-9_]+[ \\t]+[A-Z0-9_]+CTRL[ \\t]*\\\\( *[^,']\";\n     c_fix     = char_macro_use;\n     c_fix_arg = \"CTRL\";\n };\n   \n fix = {\n-    hackname  = ctrl_def_quotes;\n+    hackname  = ctrl_quotes_def;\n     select    = \"define[ \\t]+[A-Z0-9_]+CTRL\\\\(([a-zA-Z]).*'\\\\1'\";\n     c_fix     = char_macro_def;\n     c_fix_arg = \"CTRL\";"}]}