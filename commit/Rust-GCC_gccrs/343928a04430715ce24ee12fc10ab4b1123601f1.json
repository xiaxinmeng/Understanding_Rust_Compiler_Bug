{"sha": "343928a04430715ce24ee12fc10ab4b1123601f1", "node_id": "C_kwDOANBUbNoAKDM0MzkyOGEwNDQzMDcxNWNlMjRlZTEyZmMxMGFiNGIxMTIzNjAxZjE", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2022-05-03T14:00:46Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-06-01T08:43:17Z"}, "message": "[Ada] Adjust warning switches\n\nThis makes tagging more accurate.\n\ngcc/ada/\n\n\t* sem_warn.adb (Check_References): Adjust conditions under which\n\twarning messages should be emitted and their tags as well.", "tree": {"sha": "cecb6bc69a14b758337eeea21133398371cc301e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cecb6bc69a14b758337eeea21133398371cc301e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/343928a04430715ce24ee12fc10ab4b1123601f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/343928a04430715ce24ee12fc10ab4b1123601f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/343928a04430715ce24ee12fc10ab4b1123601f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/343928a04430715ce24ee12fc10ab4b1123601f1/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af93b89d8a144f0008b22553ff59c0286a13ddd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af93b89d8a144f0008b22553ff59c0286a13ddd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af93b89d8a144f0008b22553ff59c0286a13ddd9"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "3dd8cd049ffa7166144b0dba1239297146b3bf85", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/343928a04430715ce24ee12fc10ab4b1123601f1/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/343928a04430715ce24ee12fc10ab4b1123601f1/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=343928a04430715ce24ee12fc10ab4b1123601f1", "patch": "@@ -1272,10 +1272,6 @@ package body Sem_Warn is\n \n                elsif Never_Set_In_Source_Check_Spec (E1)\n \n-                 --  No warning if warning for this case turned off\n-\n-                 and then Warn_On_No_Value_Assigned\n-\n                  --  No warning if address taken somewhere\n \n                  and then not Address_Taken (E1)\n@@ -1381,7 +1377,7 @@ package body Sem_Warn is\n                      --  force use of IN OUT, even if in this particular case\n                      --  the formal is not modified.\n \n-                     else\n+                     elsif Warn_On_No_Value_Assigned then\n                         --  Suppress the warnings for a junk name\n \n                         if not Has_Junk_Name (E1) then\n@@ -1397,15 +1393,17 @@ package body Sem_Warn is\n                            if not Has_Pragma_Unmodified_Check_Spec (E1)\n                              and then not Warnings_Off_E1\n                              and then not Has_Junk_Name (E1)\n+                             and then Warn_On_No_Value_Assigned\n                            then\n                               Output_Reference_Error\n-                                (\"?f?formal parameter& is read but \"\n+                                (\"?v?formal parameter& is read but \"\n                                  & \"never assigned!\");\n                            end if;\n \n                         elsif not Has_Pragma_Unreferenced_Check_Spec (E1)\n                           and then not Warnings_Off_E1\n                           and then not Has_Junk_Name (E1)\n+                          and then Check_Unreferenced_Formals\n                         then\n                            Output_Reference_Error\n                              (\"?f?formal parameter& is not referenced!\");\n@@ -1416,7 +1414,8 @@ package body Sem_Warn is\n \n                   else\n                      if Referenced (E1) then\n-                        if not Has_Unmodified (E1)\n+                        if Warn_On_No_Value_Assigned\n+                          and then not Has_Unmodified (E1)\n                           and then not Warnings_Off_E1\n                           and then not Has_Junk_Name (E1)\n                         then\n@@ -1431,12 +1430,13 @@ package body Sem_Warn is\n                            May_Need_Initialized_Actual (E1);\n                         end if;\n \n-                     elsif not Has_Unreferenced (E1)\n+                     elsif Check_Unreferenced\n+                       and then not Has_Unreferenced (E1)\n                        and then not Warnings_Off_E1\n                        and then not Has_Junk_Name (E1)\n                      then\n                         Output_Reference_Error -- CODEFIX\n-                          (\"?v?variable& is never read and never assigned!\");\n+                          (\"?u?variable& is never read and never assigned!\");\n                      end if;\n \n                      --  Deal with special case where this variable is hidden\n@@ -1445,14 +1445,15 @@ package body Sem_Warn is\n                      if Ekind (E1) = E_Variable\n                        and then Present (Hiding_Loop_Variable (E1))\n                        and then not Warnings_Off_E1\n+                       and then Warn_On_Hiding\n                      then\n                         Error_Msg_N\n-                          (\"?v?for loop implicitly declares loop variable!\",\n+                          (\"?h?for loop implicitly declares loop variable!\",\n                            Hiding_Loop_Variable (E1));\n \n                         Error_Msg_Sloc := Sloc (E1);\n                         Error_Msg_N\n-                          (\"\\?v?declaration hides & declared#!\",\n+                          (\"\\?h?declaration hides & declared#!\",\n                            Hiding_Loop_Variable (E1));\n                      end if;\n                   end if;"}]}