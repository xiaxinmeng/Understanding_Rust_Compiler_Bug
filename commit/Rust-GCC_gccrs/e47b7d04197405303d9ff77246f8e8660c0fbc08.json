{"sha": "e47b7d04197405303d9ff77246f8e8660c0fbc08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ3YjdkMDQxOTc0MDUzMDNkOWZmNzcyNDZmOGU4NjYwYzBmYmMwOA==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-01-06T14:21:43Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-01-06T14:21:43Z"}, "message": "AVX Programming Reference (December, 2008)\n\ngcc/\n\n2009-01-06  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tAVX Programming Reference (December, 2008)\n\t* config/i386/avxintrin.h (_mm_permute2_pd): Removed.\n\t(_mm256_permute2_pd): Likewise.\n\t(_mm_permute2_ps): Likewise.\n\t(_mm256_permute2_ps): Likewise.\n\t* config/i386/i386.md (UNSPEC_VPERMIL2): Likewise.\n\t* config/i386/sse.md (avx_vpermil2<mode>3): Likewise.\n\n\t* config/i386/i386.c (ix86_builtins): Remove\n\tIX86_BUILTIN_VPERMIL2PD, IX86_BUILTIN_VPERMIL2PS,\n\tIX86_BUILTIN_VPERMIL2PD256 and IX86_BUILTIN_VPERMIL2PS256.\n\t(ix86_builtin_type): Remove V8SF_FTYPE_V8SF_V8SF_V8SI_INT,\n\tV4DF_FTYPE_V4DF_V4DF_V4DI_INT, V4SF_FTYPE_V4SF_V4SF_V4SI_INT\n\tand V2DF_FTYPE_V2DF_V2DF_V2DI_INT.\n\t(bdesc_args): Remove __builtin_ia32_vpermil2pd,\n\t__builtin_ia32_vpermil2ps, __builtin_ia32_vpermil2pd256 and\n\t__builtin_ia32_vpermil2ps256.\n\t(ix86_init_mmx_sse_builtins): Updated.\n\t(ix86_expand_args_builtin): Likewise.\n\ngcc/testsuite/\n\n2009-01-06  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tAVX Programming Reference (December, 2008)\n\t* gcc.target/i386/avx-2.c: Remove tests for _mm_permute2_pd,\n\t_mm256_permute2_pd, _mm_permute2_ps and _mm256_permute2_ps.\n\t* gcc.target/i386/sse-14.c: Likewise.\n\n\t* gcc.target/i386/avx-vpermil2pd-1.c: Removed.\n\t* gcc.target/i386/avx-vpermil2ps-1.c: Likewise.\n\t* gcc.target/i386/avx-vpermil2pd-256-1.c: Likewise.\n\t* gcc.target/i386/avx-vpermil2ps-256-1.c: Likewise.\n\nFrom-SVN: r143116", "tree": {"sha": "20866ed47a4f8f733b9256f7bd9d3865e0ca302f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20866ed47a4f8f733b9256f7bd9d3865e0ca302f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e47b7d04197405303d9ff77246f8e8660c0fbc08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e47b7d04197405303d9ff77246f8e8660c0fbc08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e47b7d04197405303d9ff77246f8e8660c0fbc08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e47b7d04197405303d9ff77246f8e8660c0fbc08/comments", "author": null, "committer": null, "parents": [{"sha": "44b864717ee1da2bb98ef4b459da47361d351ebd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44b864717ee1da2bb98ef4b459da47361d351ebd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44b864717ee1da2bb98ef4b459da47361d351ebd"}], "stats": {"total": 26273, "additions": 12966, "deletions": 13307}, "files": [{"sha": "72df4c283df9ac4d9f369da474afe69a4fcc620e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e47b7d04197405303d9ff77246f8e8660c0fbc08/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e47b7d04197405303d9ff77246f8e8660c0fbc08/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e47b7d04197405303d9ff77246f8e8660c0fbc08", "patch": "@@ -1,7 +1,29 @@\n+2009-01-06  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tAVX Programming Reference (December, 2008)\n+\t* config/i386/avxintrin.h (_mm_permute2_pd): Removed.\n+\t(_mm256_permute2_pd): Likewise.\n+\t(_mm_permute2_ps): Likewise.\n+\t(_mm256_permute2_ps): Likewise.\n+\t* config/i386/i386.md (UNSPEC_VPERMIL2): Likewise.\n+\t* config/i386/sse.md (avx_vpermil2<mode>3): Likewise.\n+\n+\t* config/i386/i386.c (ix86_builtins): Remove\n+\tIX86_BUILTIN_VPERMIL2PD, IX86_BUILTIN_VPERMIL2PS,\n+\tIX86_BUILTIN_VPERMIL2PD256 and IX86_BUILTIN_VPERMIL2PS256.\n+\t(ix86_builtin_type): Remove V8SF_FTYPE_V8SF_V8SF_V8SI_INT,\n+\tV4DF_FTYPE_V4DF_V4DF_V4DI_INT, V4SF_FTYPE_V4SF_V4SF_V4SI_INT\n+\tand V2DF_FTYPE_V2DF_V2DF_V2DI_INT.\n+\t(bdesc_args): Remove __builtin_ia32_vpermil2pd,\n+\t__builtin_ia32_vpermil2ps, __builtin_ia32_vpermil2pd256 and\n+\t__builtin_ia32_vpermil2ps256.\n+\t(ix86_init_mmx_sse_builtins): Updated.\n+\t(ix86_expand_args_builtin): Likewise.\n+\n 2009-01-05  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n-\t* pa.c (output_call): Relocate non-jump insns in the delay slot of long\n-\tabsolute calls when generating PA 2.0 code.\n+\t* pa.c (output_call): Relocate non-jump insns in the delay slot of\n+\tlong absolute calls when generating PA 2.0 code.\n \n 2009-01-05  Vladimir Makarov  <vmakarov@redhat.com>\n "}, {"sha": "57809102962eefece7c2495f1ecf610dd06c54f2", "filename": "gcc/config/i386/avxintrin.h", "status": "modified", "additions": 1, "deletions": 61, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e47b7d04197405303d9ff77246f8e8660c0fbc08/gcc%2Fconfig%2Fi386%2Favxintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e47b7d04197405303d9ff77246f8e8660c0fbc08/gcc%2Fconfig%2Fi386%2Favxintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favxintrin.h?ref=e47b7d04197405303d9ff77246f8e8660c0fbc08", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2008 Free Software Foundation, Inc.\n+/* Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -626,42 +626,6 @@ _mm256_permute_ps (__m256 __X, const int __C)\n {\n   return (__m256) __builtin_ia32_vpermilps256 ((__v8sf)__X, __C);\n }\n-\n-extern __inline __m128d __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n-_mm_permute2_pd (__m128d __X, __m128d __Y, __m128i __C, const int __I)\n-{\n-  return (__m128d) __builtin_ia32_vpermil2pd ((__v2df)__X,\n-\t\t\t\t\t      (__v2df)__Y,\n-\t\t\t\t\t      (__v2di)__C,\n-\t\t\t\t\t      __I);\n-}\n-\n-extern __inline __m256d __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n-_mm256_permute2_pd (__m256d __X, __m256d __Y, __m256i __C, const int __I)\n-{\n-  return (__m256d) __builtin_ia32_vpermil2pd256 ((__v4df)__X,\n-\t\t\t\t\t\t (__v4df)__Y,\n-\t\t\t\t\t\t (__v4di)__C,\n-\t\t\t\t\t\t __I);\n-}\n-\n-extern __inline __m128 __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n-_mm_permute2_ps (__m128 __X, __m128 __Y, __m128i __C, const int __I)\n-{\n-  return (__m128) __builtin_ia32_vpermil2ps ((__v4sf)__X,\n-\t\t\t\t\t     (__v4sf)__Y,\n-\t\t\t\t\t     (__v4si)__C,\n-\t\t\t\t\t     __I);\n-}\n-\n-extern __inline __m256 __attribute__((__gnu_inline__, __always_inline__, __artificial__))\n-_mm256_permute2_ps (__m256 __X, __m256 __Y, __m256i __C, const int __I)\n-{\n-  return (__m256) __builtin_ia32_vpermil2ps256 ((__v8sf)__X,\n-\t\t\t\t\t\t(__v8sf)__Y,\n-\t\t\t\t\t\t(__v8si)__C,\n-\t\t\t\t\t\t__I);\n-}\n #else\n #define _mm_permute_pd(X, C)\t\t\t\t\t\t\\\n   ((__m128d) __builtin_ia32_vpermilpd ((__v2df)(__m128d)(X), (int)(C)))\n@@ -674,30 +638,6 @@ _mm256_permute2_ps (__m256 __X, __m256 __Y, __m256i __C, const int __I)\n \n #define _mm256_permute_ps(X, C)\t\t\t\t\t\t\\\n   ((__m256) __builtin_ia32_vpermilps256 ((__v8sf)(__m256)(X), (int)(C)))\n-\n-#define _mm_permute2_pd(X, Y, C, I)\t\t\t\t\t\\\n-  ((__m128d) __builtin_ia32_vpermil2pd ((__v2df)(__m128d)(X),\t\t\\\n-\t\t\t\t\t(__v2df)(__m128d)(Y),\t\t\\\n-\t\t\t\t\t(__v2di)(__m128d)(C),\t\t\\\n-\t\t\t\t\t(int)(I)))\n-\n-#define _mm256_permute2_pd(X, Y, C, I)\t\t\t\t\t\\\n-  ((__m256d) __builtin_ia32_vpermil2pd256 ((__v4df)(__m256d)(X),\t\\\n-\t\t\t\t\t   (__v4df)(__m256d)(Y),\t\\\n-\t\t\t\t\t   (__v4di)(__m256d)(C),\t\\\n-\t\t\t\t\t   (int)(I)))\n-\n-#define _mm_permute2_ps(X, Y, C, I)\t\t\t\t\t\\\n-  ((__m128) __builtin_ia32_vpermil2ps ((__v4sf)(__m128)(X),\t\t\\\n-\t\t\t\t       (__v4sf)(__m128)(Y),\t\t\\\n-\t\t\t\t       (__v4si)(__m128)(C),\t\t\\\n-\t\t\t\t       (int)(I)))\n-\n-#define _mm256_permute2_ps(X, Y, C, I)\t\t\t\t\t\\\n-  ((__m256) __builtin_ia32_vpermil2ps256 ((__v8sf)(__m256)(X),\t\t\\\n-\t\t\t\t\t  (__v8sf)(__m256)(Y),  \t\\\n-\t\t\t\t\t  (__v8si)(__m256)(C),\t\t\\\n-\t\t\t\t\t  (int)(I)))\n #endif\n \n #ifdef __OPTIMIZE__"}, {"sha": "c698ee3b9e338d9a8e6ae4ea2715d53831535a58", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 56, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e47b7d04197405303d9ff77246f8e8660c0fbc08/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e47b7d04197405303d9ff77246f8e8660c0fbc08/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=e47b7d04197405303d9ff77246f8e8660c0fbc08", "patch": "@@ -1,6 +1,6 @@\n /* Subroutines used for code generation on IA-32.\n    Copyright (C) 1988, 1992, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,\n-   2002, 2003, 2004, 2005, 2006, 2007, 2008\n+   2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -19774,10 +19774,6 @@ enum ix86_builtins\n   IX86_BUILTIN_VPERMILPS,\n   IX86_BUILTIN_VPERMILPD256,\n   IX86_BUILTIN_VPERMILPS256,\n-  IX86_BUILTIN_VPERMIL2PD,\n-  IX86_BUILTIN_VPERMIL2PS,\n-  IX86_BUILTIN_VPERMIL2PD256,\n-  IX86_BUILTIN_VPERMIL2PS256,\n   IX86_BUILTIN_VPERM2F128PD256,\n   IX86_BUILTIN_VPERM2F128PS256,\n   IX86_BUILTIN_VPERM2F128SI256,\n@@ -20434,10 +20430,6 @@ enum ix86_builtin_type\n   V2DI2TI_FTYPE_V2DI_V2DI_INT,\n   V1DI2DI_FTYPE_V1DI_V1DI_INT,\n   V2DF_FTYPE_V2DF_V2DF_INT,\n-  V8SF_FTYPE_V8SF_V8SF_V8SI_INT,\n-  V4DF_FTYPE_V4DF_V4DF_V4DI_INT,\n-  V4SF_FTYPE_V4SF_V4SF_V4SI_INT,\n-  V2DF_FTYPE_V2DF_V2DF_V2DI_INT,\n   V2DI_FTYPE_V2DI_UINT_UINT,\n   V2DI_FTYPE_V2DI_V2DI_UINT_UINT\n };\n@@ -21065,10 +21057,6 @@ static const struct builtin_description bdesc_args[] =\n   { OPTION_MASK_ISA_AVX, CODE_FOR_avx_vpermilv4sf, \"__builtin_ia32_vpermilps\", IX86_BUILTIN_VPERMILPS, UNKNOWN, (int) V4SF_FTYPE_V4SF_INT },\n   { OPTION_MASK_ISA_AVX, CODE_FOR_avx_vpermilv4df, \"__builtin_ia32_vpermilpd256\", IX86_BUILTIN_VPERMILPD256, UNKNOWN, (int) V4DF_FTYPE_V4DF_INT },\n   { OPTION_MASK_ISA_AVX, CODE_FOR_avx_vpermilv8sf, \"__builtin_ia32_vpermilps256\", IX86_BUILTIN_VPERMILPS256, UNKNOWN, (int) V8SF_FTYPE_V8SF_INT },\n-  { OPTION_MASK_ISA_AVX, CODE_FOR_avx_vpermil2v2df3,  \"__builtin_ia32_vpermil2pd\", IX86_BUILTIN_VPERMIL2PD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF_V2DI_INT },\n-  { OPTION_MASK_ISA_AVX, CODE_FOR_avx_vpermil2v4sf3,  \"__builtin_ia32_vpermil2ps\", IX86_BUILTIN_VPERMIL2PS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF_V4SI_INT },\n-  { OPTION_MASK_ISA_AVX, CODE_FOR_avx_vpermil2v4df3,  \"__builtin_ia32_vpermil2pd256\", IX86_BUILTIN_VPERMIL2PD256, UNKNOWN, (int) V4DF_FTYPE_V4DF_V4DF_V4DI_INT },\n-  { OPTION_MASK_ISA_AVX, CODE_FOR_avx_vpermil2v8sf3,  \"__builtin_ia32_vpermil2ps256\", IX86_BUILTIN_VPERMIL2PS256, UNKNOWN, (int) V8SF_FTYPE_V8SF_V8SF_V8SI_INT },\n   { OPTION_MASK_ISA_AVX, CODE_FOR_avx_vinsertf128v4df, \"__builtin_ia32_vinsertf128_pd256\", IX86_BUILTIN_VINSERTF128PD256, UNKNOWN, (int) V4DF_FTYPE_V4DF_V2DF_INT },\n   { OPTION_MASK_ISA_AVX, CODE_FOR_avx_vinsertf128v8sf, \"__builtin_ia32_vinsertf128_ps256\", IX86_BUILTIN_VINSERTF128PS256, UNKNOWN, (int) V8SF_FTYPE_V8SF_V4SF_INT },\n   { OPTION_MASK_ISA_AVX, CODE_FOR_avx_vinsertf128v8si, \"__builtin_ia32_vinsertf128_si256\", IX86_BUILTIN_VINSERTF128SI256, UNKNOWN, (int) V8SI_FTYPE_V8SI_V4SI_INT },\n@@ -22010,26 +21998,6 @@ ix86_init_mmx_sse_builtins (void)\n \t\t\t\tV4DF_type_node, V4DF_type_node,\n \t\t\t\tinteger_type_node,\n \t\t\t\tNULL_TREE);\n-  tree v8sf_ftype_v8sf_v8sf_v8si_int\n-    = build_function_type_list (V8SF_type_node,\n-\t\t\t\tV8SF_type_node, V8SF_type_node,\n-\t\t\t\tV8SI_type_node, integer_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4df_ftype_v4df_v4df_v4di_int\n-    = build_function_type_list (V4DF_type_node,\n-\t\t\t\tV4DF_type_node, V4DF_type_node,\n-\t\t\t\tV4DI_type_node, integer_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v4sf_ftype_v4sf_v4sf_v4si_int\n-    = build_function_type_list (V4SF_type_node,\n-\t\t\t\tV4SF_type_node, V4SF_type_node,\n-\t\t\t\tV4SI_type_node, integer_type_node,\n-\t\t\t\tNULL_TREE);\n-  tree v2df_ftype_v2df_v2df_v2di_int\n-    = build_function_type_list (V2DF_type_node,\n-\t\t\t\tV2DF_type_node, V2DF_type_node,\n-\t\t\t\tV2DI_type_node, integer_type_node,\n-\t\t\t\tNULL_TREE);\n   tree v8sf_ftype_pcfloat\n     = build_function_type_list (V8SF_type_node,\n \t\t\t\tpcfloat_type_node,\n@@ -22733,18 +22701,6 @@ ix86_init_mmx_sse_builtins (void)\n \tcase V1DI2DI_FTYPE_V1DI_V1DI_INT:\n \t  type = v1di_ftype_v1di_v1di_int;\n \t  break;\n-\tcase V8SF_FTYPE_V8SF_V8SF_V8SI_INT:\n-\t  type = v8sf_ftype_v8sf_v8sf_v8si_int;\n-\t  break;\n-\tcase V4DF_FTYPE_V4DF_V4DF_V4DI_INT:\n-\t  type = v4df_ftype_v4df_v4df_v4di_int;\n-\t  break;\n-\tcase V4SF_FTYPE_V4SF_V4SF_V4SI_INT:\n-\t  type = v4sf_ftype_v4sf_v4sf_v4si_int;\n-\t  break;\n-\tcase V2DF_FTYPE_V2DF_V2DF_V2DI_INT:\n-\t  type = v2df_ftype_v2df_v2df_v2di_int;\n-\t  break;\n \tdefault:\n \t  gcc_unreachable ();\n \t}\n@@ -23906,13 +23862,6 @@ ix86_expand_args_builtin (const struct builtin_description *d,\n       nargs = 3;\n       nargs_constant = 2;\n       break;\n-    case V8SF_FTYPE_V8SF_V8SF_V8SI_INT:\n-    case V4DF_FTYPE_V4DF_V4DF_V4DI_INT:\n-    case V4SF_FTYPE_V4SF_V4SF_V4SI_INT:\n-    case V2DF_FTYPE_V2DF_V2DF_V2DI_INT:\n-      nargs = 4;\n-      nargs_constant = 1;\n-      break;\n     case V2DI_FTYPE_V2DI_V2DI_UINT_UINT:\n       nargs = 4;\n       nargs_constant = 2;\n@@ -23982,10 +23931,6 @@ ix86_expand_args_builtin (const struct builtin_description *d,\n \n \t      case CODE_FOR_sse4_1_blendpd:\n \t      case CODE_FOR_avx_vpermilv2df:\n-\t      case CODE_FOR_avx_vpermil2v2df3:\n-\t      case CODE_FOR_avx_vpermil2v4sf3:\n-\t      case CODE_FOR_avx_vpermil2v4df3:\n-\t      case CODE_FOR_avx_vpermil2v8sf3:\n \t\terror (\"the last argument must be a 2-bit immediate\");\n \t\treturn const0_rtx;\n "}, {"sha": "f0bec12adcefc9d0c1e14d4a927a97788f564c2e", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e47b7d04197405303d9ff77246f8e8660c0fbc08/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e47b7d04197405303d9ff77246f8e8660c0fbc08/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=e47b7d04197405303d9ff77246f8e8660c0fbc08", "patch": "@@ -1,6 +1,6 @@\n ;; GCC machine description for IA-32 and x86-64.\n ;; Copyright (C) 1988, 1994, 1995, 1996, 1997, 1998, 1999, 2000,\n-;; 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n+;; 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n ;; Free Software Foundation, Inc.\n ;; Mostly by William Schelter.\n ;; x86_64 support added by Jan Hubicka\n@@ -201,12 +201,11 @@\n    ; For AVX support\n    (UNSPEC_PCMP\t\t\t166)\n    (UNSPEC_VPERMIL\t\t167)\n-   (UNSPEC_VPERMIL2\t\t168)\n-   (UNSPEC_VPERMIL2F128\t\t169)\n-   (UNSPEC_MASKLOAD\t\t170)\n-   (UNSPEC_MASKSTORE\t\t171)\n-   (UNSPEC_CAST\t\t\t172)\n-   (UNSPEC_VTESTP\t\t173)\n+   (UNSPEC_VPERMIL2F128\t\t168)\n+   (UNSPEC_MASKLOAD\t\t169)\n+   (UNSPEC_MASKSTORE\t\t170)\n+   (UNSPEC_CAST\t\t\t171)\n+   (UNSPEC_VTESTP\t\t172)\n   ])\n \n (define_constants"}, {"sha": "e9f863973572aef9bd02bfec43f258a8f78e71f1", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e47b7d04197405303d9ff77246f8e8660c0fbc08/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e47b7d04197405303d9ff77246f8e8660c0fbc08/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=e47b7d04197405303d9ff77246f8e8660c0fbc08", "patch": "@@ -1,5 +1,5 @@\n ;; GCC machine description for SSE instructions\n-;; Copyright (C) 2005, 2006, 2007, 2008\n+;; Copyright (C) 2005, 2006, 2007, 2008, 2009\n ;; Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n@@ -11597,20 +11597,6 @@\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"avx_vpermil2<mode>3\"\n-  [(set (match_operand:AVXMODEF2P 0 \"register_operand\" \"=x,x\")\n-\t(unspec:AVXMODEF2P\n-\t  [(match_operand:AVXMODEF2P 1 \"register_operand\" \"x,x\")\n-\t   (match_operand:AVXMODEF2P 2 \"nonimmediate_operand\" \"x,xm\")\n-\t   (match_operand:<avxpermvecmode> 3 \"nonimmediate_operand\" \"xm,x\")\n-\t   (match_operand:SI 4 \"const_0_to_3_operand\" \"n,n\")]\n-\t  UNSPEC_VPERMIL2))]\n-  \"TARGET_AVX\"\n-  \"vpermil2p<avxmodesuffixf2c>\\t{%4, %3, %2, %1, %0|%0, %1, %2, %3, %4}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n (define_insn \"avx_vperm2f128<mode>3\"\n   [(set (match_operand:AVX256MODE2P 0 \"register_operand\" \"=x\")\n \t(unspec:AVX256MODE2P"}, {"sha": "c07a9599d2365e0f73fb33ee45a4f442e3f4951f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 12922, "changes": 12934, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e47b7d04197405303d9ff77246f8e8660c0fbc08/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e47b7d04197405303d9ff77246f8e8660c0fbc08/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e47b7d04197405303d9ff77246f8e8660c0fbc08"}, {"sha": "e89a011549a92ce469834e251a3742a28623dbe3", "filename": "gcc/testsuite/ChangeLog-2008", "status": "added", "additions": 12921, "deletions": 0, "changes": 12921, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e47b7d04197405303d9ff77246f8e8660c0fbc08/gcc%2Ftestsuite%2FChangeLog-2008", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e47b7d04197405303d9ff77246f8e8660c0fbc08/gcc%2Ftestsuite%2FChangeLog-2008", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog-2008?ref=e47b7d04197405303d9ff77246f8e8660c0fbc08"}, {"sha": "e0d9c811f9491abadb6959d061575d3401395228", "filename": "gcc/testsuite/gcc.target/i386/avx-2.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e47b7d04197405303d9ff77246f8e8660c0fbc08/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e47b7d04197405303d9ff77246f8e8660c0fbc08/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-2.c?ref=e47b7d04197405303d9ff77246f8e8660c0fbc08", "patch": "@@ -78,10 +78,6 @@ test_1 (_mm_permute_pd, __m128d, __m128d, 1)\n test_1 (_mm256_permute_pd, __m256d, __m256d, 1)\n test_1 (_mm_permute_ps, __m128, __m128, 1)\n test_1 (_mm256_permute_ps, __m256, __m256, 1)\n-test_3 (_mm_permute2_pd, __m128d, __m128d, __m128d, __m128d, 1)\n-test_3 (_mm256_permute2_pd, __m256d, __m256d, __m256d, __m256d, 1)\n-test_3 (_mm_permute2_ps, __m128, __m128, __m128, __m128, 1)\n-test_3 (_mm256_permute2_ps, __m256, __m256, __m256, __m256, 1)\n test_2 (_mm256_permute2f128_pd, __m256d, __m256d, __m256d, 1)\n test_2 (_mm256_permute2f128_ps, __m256, __m256, __m256, 1)\n test_2 (_mm256_permute2f128_si256, __m256i, __m256i, __m256i, 1)"}, {"sha": "04086246b4f6e979afecca9d6f1e60fa35668f51", "filename": "gcc/testsuite/gcc.target/i386/avx-vpermil2pd-1.c", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44b864717ee1da2bb98ef4b459da47361d351ebd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpermil2pd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44b864717ee1da2bb98ef4b459da47361d351ebd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpermil2pd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpermil2pd-1.c?ref=44b864717ee1da2bb98ef4b459da47361d351ebd", "patch": "@@ -1,55 +0,0 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target avx } */\n-/* { dg-options \"-O2 -mavx\" } */\n-\n-#include \"avx-check.h\"\n-\n-#ifndef ZERO_MATCH\n-#define ZERO_MATCH  2\n-#endif\n-\n-static double\n-select2dp(double *src1, double *src2, long long  sel)\n-{\n-    double tmp = 0.0;\n-\n-    if ((sel & 0x3) == 0) tmp = src1[0];\n-    if ((sel & 0x3) == 1) tmp = src1[1];\n-    if ((sel & 0x3) == 2) tmp = src2[0];\n-    if ((sel & 0x3) == 3) tmp = src2[1];\n-\n-    return tmp;\n-}\n-\n-static double\n-sel_and_condzerodp(double *src1, double *src2, long long  sel, int imm8)\n-{\n-    double tmp;\n-\n-    tmp = select2dp(src1, src2, sel & 0x3);\n-\n-    if (((imm8 & 0x3) == 2) && ((sel & 0x4) == 0x4)) tmp = 0;\n-    if (((imm8 & 0x3) == 3) && ((sel & 0x4) == 0x0)) tmp = 0;\n-\n-    return tmp;\n-}\n-\n-void static\n-avx_test ()\n-{\n-    union128d s1, s2, u;\n-    union128i_q s3;\n-    double e[2];\n-\n-    s1.x = _mm_set_pd (1, 2);\n-    s2.x = _mm_set_pd (3, 4);\n-    s3.x = _mm_set_epi64x (1, 2);\n-    u.x = _mm_permute2_pd(s1.x, s2.x, s3.x, ZERO_MATCH);\n-\n-    e[0] = sel_and_condzerodp (s1.a, s2.a, (s3.a[0] & 0xe)>>1, ZERO_MATCH);\n-    e[1] = sel_and_condzerodp (s1.a, s2.a, (s3.a[1] & 0xe)>>1, ZERO_MATCH);\n-\n-    if (check_union128d (u, e))\n-      abort ();\n-}\n-"}, {"sha": "d9a94ae6b9dab4fb5b04ccea27dd50b255f5b5c4", "filename": "gcc/testsuite/gcc.target/i386/avx-vpermil2pd-256-1.c", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44b864717ee1da2bb98ef4b459da47361d351ebd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpermil2pd-256-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44b864717ee1da2bb98ef4b459da47361d351ebd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpermil2pd-256-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpermil2pd-256-1.c?ref=44b864717ee1da2bb98ef4b459da47361d351ebd", "patch": "@@ -1,57 +0,0 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target avx } */\n-/* { dg-options \"-O2 -mavx\" } */\n-\n-#include \"avx-check.h\"\n-\n-#ifndef ZERO_MATCH\n-#define ZERO_MATCH 1 \n-#endif\n-\n-static double\n-select2dp(double *src1, double *src2, long long  sel)\n-{\n-    double tmp = 3.414;\n-\n-    if ((sel & 0x3) == 0) tmp = src1[0];\n-    if ((sel & 0x3) == 1) tmp = src1[1];\n-    if ((sel & 0x3) == 2) tmp = src2[0];\n-    if ((sel & 0x3) == 3) tmp = src2[1];\n-\n-    return tmp;\n-}\n-\n-static double\n-sel_and_condzerodp(double *src1, double *src2, long long  sel, int imm8)\n-{\n-    double tmp;\n-\n-    tmp = select2dp(src1, src2, sel);\n-\n-    if (((imm8 & 0x3) == 2) && ((sel & 0x4) == 0x4)) tmp = 0;\n-    if (((imm8 & 0x3) == 3) && ((sel & 0x4) == 0x0)) tmp = 0;\n-\n-    return tmp;\n-}\n-\n-void static\n-avx_test ()\n-{\n-    union256d u, s1, s2;\n-    double   e[4] = {0.0};\n-    union256i_q s3;\n-\n-    s1.x = _mm256_set_pd (1, 2, 3, 4);\n-    s2.x = _mm256_set_pd (5, 6, 7, 8);\n-    s3.x = _mm256_set_epi64x (0, 1, 2, 3);\n-    u.x = _mm256_permute2_pd(s1.x, s2.x, s3.x, ZERO_MATCH);\n-   \n-    e[0] = sel_and_condzerodp (s1.a, s2.a, (s3.a[0] & 0xe)>>1, ZERO_MATCH);\n-    e[1] = sel_and_condzerodp (s1.a, s2.a, (s3.a[1] & 0xe)>>1, ZERO_MATCH);\n-    e[2] = sel_and_condzerodp (s1.a + 2, s2.a + 2, (s3.a[2] & 0xe)>>1, ZERO_MATCH);\n-    e[3] = sel_and_condzerodp (s1.a + 2, s2.a + 2, (s3.a[3] & 0xe)>>1, ZERO_MATCH);\n-         \n-    if (check_union256d (u, e))\n-      abort ();\n-}\n-"}, {"sha": "c04600e92fb1ad80928b628ce9873fdfc8c51093", "filename": "gcc/testsuite/gcc.target/i386/avx-vpermil2ps-1.c", "status": "removed", "additions": 0, "deletions": 62, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44b864717ee1da2bb98ef4b459da47361d351ebd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpermil2ps-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44b864717ee1da2bb98ef4b459da47361d351ebd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpermil2ps-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpermil2ps-1.c?ref=44b864717ee1da2bb98ef4b459da47361d351ebd", "patch": "@@ -1,62 +0,0 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target avx } */\n-/* { dg-options \"-O2 -mavx\" } */\n-\n-#include \"avx-check.h\"\n-\n-#ifndef ZERO_MATCH\n-#define ZERO_MATCH  1\n-#endif\n-\n-static float\n-select2sp(float *src1, float *src2, int sel)\n-{\n-    float tmp;\n-\n-    if ((sel & 0x7) == 0) tmp = src1[0];\n-    if ((sel & 0x7) == 1) tmp = src1[1];\n-    if ((sel & 0x7) == 2) tmp = src1[2];\n-    if ((sel & 0x7) == 3) tmp = src1[3];\n-    if ((sel & 0x7) == 4) tmp = src2[0];\n-    if ((sel & 0x7) == 5) tmp = src2[1];\n-    if ((sel & 0x7) == 6) tmp = src2[2];\n-    if ((sel & 0x7) == 7) tmp = src2[3];\n-\n-    return tmp;\n-}\n-static float\n-sel_and_condzerosp(float *src1, float *src2, int sel, int imm8)\n-{\n-    float tmp;\n-\n-    tmp = select2sp(src1, src2, sel & 0x7);\n-\n-    if (((imm8 & 0x3) == 2) && ((sel & 0x8) == 0x8)) tmp = 0;\n-    if (((imm8 & 0x3) == 3) && ((sel & 0x8) == 0x0)) tmp = 0;\n-\n-    return tmp;\n-}\n-\n-void static\n-avx_test ()\n-{\n-    int i;\n-    union128  source1, source2, u;\n-    union128i_d source3;\n-    float s1[4] = {1, 2, 3, 4};\n-    float s2[4] = {5, 6, 7, 8};\n-    int   s3[4] = {0, 1, 0, 1};\n-    float e[4];\n-\n-    source1.x = _mm_loadu_ps(s1);\n-    source2.x = _mm_loadu_ps(s2);\n-    source3.x = _mm_loadu_si128((__m128i*) s3);\n-    u.x = _mm_permute2_ps(source1.x, source2.x, source3.x, ZERO_MATCH);\n-\n-    for (i = 0; i < 4; ++i) {\n-        e[i] = sel_and_condzerosp(&s1[i & 0x4], &s2[i & 0x4], s3[i] & 0xf, ZERO_MATCH & 0x3);\n-    }\n-\n-    if (check_union128 (u, e))\n-      abort ();\n-}"}, {"sha": "6ee5803867359ffc0207a158ef61496297b9864e", "filename": "gcc/testsuite/gcc.target/i386/avx-vpermil2ps-256-1.c", "status": "removed", "additions": 0, "deletions": 62, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44b864717ee1da2bb98ef4b459da47361d351ebd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpermil2ps-256-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44b864717ee1da2bb98ef4b459da47361d351ebd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpermil2ps-256-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpermil2ps-256-1.c?ref=44b864717ee1da2bb98ef4b459da47361d351ebd", "patch": "@@ -1,62 +0,0 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target avx } */\n-/* { dg-options \"-O2 -mavx\" } */\n-\n-#include \"avx-check.h\"\n-\n-#ifndef ZERO_MATCH\n-#define ZERO_MATCH  3\n-#endif\n-\n-static float\n-select2sp(float *src1, float *src2, int sel)\n-{\n-    float tmp;\n-\n-    if ((sel & 0x7) == 0) tmp = src1[0];\n-    if ((sel & 0x7) == 1) tmp = src1[1];\n-    if ((sel & 0x7) == 2) tmp = src1[2];\n-    if ((sel & 0x7) == 3) tmp = src1[3];\n-    if ((sel & 0x7) == 4) tmp = src2[0];\n-    if ((sel & 0x7) == 5) tmp = src2[1];\n-    if ((sel & 0x7) == 6) tmp = src2[2];\n-    if ((sel & 0x7) == 7) tmp = src2[3];\n-\n-    return tmp;\n-}\n-static float\n-sel_and_condzerosp(float *src1, float *src2, int sel, int imm8)\n-{\n-    float tmp;\n-\n-    tmp = select2sp(src1, src2, sel & 0x7);\n-\n-    if (((imm8 & 0x3) == 2) && ((sel & 0x8) == 0x8)) tmp = 0;\n-    if (((imm8 & 0x3) == 3) && ((sel & 0x8) == 0x0)) tmp = 0;\n-\n-    return tmp;\n-}\n-\n-void static\n-avx_test ()\n-{\n-    int i;\n-    union256  source1, source2, u;\n-    union256i_d source3;\n-    float s1[8]={1, 2, 3, 4, 5, 6, 7, 8};\n-    float s2[8]={9, 10, 11, 12, 13, 14, 15, 16};\n-    int   s3[8]={11, 2, 3, 15, 5, 12, 7, 8};\n-    float  e[8];\n-\n-    source1.x = _mm256_loadu_ps(s1);\n-    source2.x = _mm256_loadu_ps(s2);\n-    source3.x = _mm256_loadu_si256((__m256i*) s3);\n-    u.x = _mm256_permute2_ps(source1.x, source2.x, source3.x, ZERO_MATCH);\n-\n-    for (i = 0; i < 8; ++i) {\n-        e[i] = sel_and_condzerosp(&s1[i & 0x4], &s2[i & 0x4], s3[i] & 0xf, ZERO_MATCH & 0x3);\n-    }\n-   \n-   if (check_union256(u, e))\n-     abort ();\n-}"}, {"sha": "67da6608a1e20928bf82f55572f0ad2164ed529b", "filename": "gcc/testsuite/gcc.target/i386/sse-14.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e47b7d04197405303d9ff77246f8e8660c0fbc08/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e47b7d04197405303d9ff77246f8e8660c0fbc08/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-14.c?ref=e47b7d04197405303d9ff77246f8e8660c0fbc08", "patch": "@@ -74,10 +74,6 @@ test_1 (_mm_permute_pd, __m128d, __m128d, 1)\n test_1 (_mm256_permute_pd, __m256d, __m256d, 1)\n test_1 (_mm_permute_ps, __m128, __m128, 1)\n test_1 (_mm256_permute_ps, __m256, __m256, 1)\n-test_3 (_mm_permute2_pd, __m128d, __m128d, __m128d, __m128d, 1)\n-test_3 (_mm256_permute2_pd, __m256d, __m256d, __m256d, __m256d, 1)\n-test_3 (_mm_permute2_ps, __m128, __m128, __m128, __m128, 1)\n-test_3 (_mm256_permute2_ps, __m256, __m256, __m256, __m256, 1)\n test_2 (_mm256_permute2f128_pd, __m256d, __m256d, __m256d, 1)\n test_2 (_mm256_permute2f128_ps, __m256, __m256, __m256, 1)\n test_2 (_mm256_permute2f128_si256, __m256i, __m256i, __m256i, 1)"}]}