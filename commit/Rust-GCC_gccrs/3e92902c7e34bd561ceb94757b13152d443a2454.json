{"sha": "3e92902c7e34bd561ceb94757b13152d443a2454", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U5MjkwMmM3ZTM0YmQ1NjFjZWI5NDc1N2IxMzE1MmQ0NDNhMjQ1NA==", "commit": {"author": {"name": "Craig Rodrigues", "email": "rodrigc@gcc.gnu.org", "date": "2002-01-11T22:46:40Z"}, "committer": {"name": "Craig Rodrigues", "email": "rodrigc@gcc.gnu.org", "date": "2002-01-11T22:46:40Z"}, "message": "re PR other/5299 (then -> than fixes)\n\n2002-01-11  Craig Rodrigues  <rodrigc@gcc.gnu.org>\n\n        PR other/5299\n        * config/ns32k/ns32k.md: Fix spelling mistake of \"than\" in comments.\n        * combine.c (force_to_mode): Same.\n        * reload1.c (clear_reload_reg_in_use): Same.\n\nFrom-SVN: r48780", "tree": {"sha": "c1a8daa6ed86d94950dd346ca663f76ed88613d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1a8daa6ed86d94950dd346ca663f76ed88613d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e92902c7e34bd561ceb94757b13152d443a2454", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e92902c7e34bd561ceb94757b13152d443a2454", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e92902c7e34bd561ceb94757b13152d443a2454", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e92902c7e34bd561ceb94757b13152d443a2454/comments", "author": null, "committer": null, "parents": [{"sha": "24e511ca8eb620425d38c4bc7be0d42edfead2aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24e511ca8eb620425d38c4bc7be0d42edfead2aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24e511ca8eb620425d38c4bc7be0d42edfead2aa"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "cefd2144fc8a332853579fb337fb2bd237123023", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e92902c7e34bd561ceb94757b13152d443a2454/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e92902c7e34bd561ceb94757b13152d443a2454/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e92902c7e34bd561ceb94757b13152d443a2454", "patch": "@@ -1,3 +1,10 @@\n+2002-01-11  Craig Rodrigues  <rodrigc@gcc.gnu.org>\n+\n+\tPR other/5299\n+\t* config/ns32k/ns32k.md: Fix spelling mistake of \"than\" in comments.\n+\t* combine.c (force_to_mode): Same.\n+\t* reload1.c (clear_reload_reg_in_use): Same.\n+\n 2002-01-11  Nick Clifton  <nickc@cambridge.redhat.com>\n \n \t* config/arm/arm.c (arm_gen_constant): Correct test of 'remainder'"}, {"sha": "32120e53ccf3ec7b302b6ddbaf368b66b5624b0a", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e92902c7e34bd561ceb94757b13152d443a2454/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e92902c7e34bd561ceb94757b13152d443a2454/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=3e92902c7e34bd561ceb94757b13152d443a2454", "patch": "@@ -6974,7 +6974,7 @@ force_to_mode (x, mode, mask, reg, just_select)\n \t{\n \t  int i = -1;\n \n-\t  /* If the considered data is wider then HOST_WIDE_INT, we can't\n+\t  /* If the considered data is wider than HOST_WIDE_INT, we can't\n \t     represent a mask for all its bits in a single scalar.\n \t     But we only care about the lower bits, so calculate these.  */\n "}, {"sha": "6622df5b74cbc5b40cd94d4eae7a424eb3fa4614", "filename": "gcc/config/ns32k/ns32k.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e92902c7e34bd561ceb94757b13152d443a2454/gcc%2Fconfig%2Fns32k%2Fns32k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e92902c7e34bd561ceb94757b13152d443a2454/gcc%2Fconfig%2Fns32k%2Fns32k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.md?ref=3e92902c7e34bd561ceb94757b13152d443a2454", "patch": "@@ -2046,7 +2046,7 @@\n }\")\n \f\n ;;; Index insns.  These are about the same speed as multiply-add counterparts.\n-;;; but slower then using power-of-2 shifts if we can use them\n+;;; but slower than using power-of-2 shifts if we can use them\n ;\n ;;; See note 1\n ;(define_insn \"\""}, {"sha": "e1f1e4bd6ea9f264bcb633d8e5eadcccfd4876e1", "filename": "gcc/reload1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e92902c7e34bd561ceb94757b13152d443a2454/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e92902c7e34bd561ceb94757b13152d443a2454/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=3e92902c7e34bd561ceb94757b13152d443a2454", "patch": "@@ -4313,7 +4313,7 @@ clear_reload_reg_in_use (regno, opnum, type, mode)\n      excluding the intervals of of reload registers by them from the\n      interval of freed reload registers.  Since we only keep track of\n      one set of interval bounds, we might have to exclude somewhat\n-     more then what would be necessary if we used a HARD_REG_SET here.\n+     more than what would be necessary if we used a HARD_REG_SET here.\n      But this should only happen very infrequently, so there should\n      be no reason to worry about it.  */\n "}]}