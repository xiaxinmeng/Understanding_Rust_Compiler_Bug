{"sha": "8507a68883438060b3b8e828069ffe20a084b85a", "node_id": "C_kwDOANBUbNoAKDg1MDdhNjg4ODM0MzgwNjBiM2I4ZTgyODA2OWZmZTIwYTA4NGI4NWE", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-12-16T12:04:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-16T12:04:43Z"}, "message": "Merge #837\n\n837: HIR::IdentifierPattern had all fields public r=philberty a=philberty\n\nThis makes the fields private again and adds the missing getter for the\r\nidentifier.\r\n\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>", "tree": {"sha": "e8696aabec33a96923587fe9bed2bbcb31a562a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8696aabec33a96923587fe9bed2bbcb31a562a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8507a68883438060b3b8e828069ffe20a084b85a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhuytbCRBK7hj4Ov3rIwAAr1gIAAQAoa3iKik1AJTgl4XxB+u+\nVpeH0F9QmHDqcqqZ7Hk5B9Pfu9+4vQi2L8f2gVeQFRE4HglA9Vb02wN6x3EEobWa\nM5x7NksVE4+Hft1ZHE2X4gCyX0ID1m8BnVp9KN++vPfr8xHj1UVujaTTlKk0GrCW\nv3Ew+9mI57JyuJu9psA2lRh8pvRviK9pvvgIQeNhGr9YvWXrm5MXcuf0r5+MGYab\nUuHRyssRiw/DlxTAx5WqfQeNwJ6DkwxxReTw/iw6n8d0gIin9rk2NuNCyFYlQNsH\n7LTPrw3P0vQsPtPwEnTFT+hyqcAUROzSbrbDWjdcjc7seAzVvYN4LKaWYEiimoU=\n=xUw7\n-----END PGP SIGNATURE-----\n", "payload": "tree e8696aabec33a96923587fe9bed2bbcb31a562a2\nparent 7615df781226137b9cd76b47df4aea6ad9f2140e\nparent 3a8c585300517fe5bd95bb0dc29520871183193b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1639656283 +0000\ncommitter GitHub <noreply@github.com> 1639656283 +0000\n\nMerge #837\n\n837: HIR::IdentifierPattern had all fields public r=philberty a=philberty\n\nThis makes the fields private again and adds the missing getter for the\r\nidentifier.\r\n\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8507a68883438060b3b8e828069ffe20a084b85a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8507a68883438060b3b8e828069ffe20a084b85a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8507a68883438060b3b8e828069ffe20a084b85a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7615df781226137b9cd76b47df4aea6ad9f2140e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7615df781226137b9cd76b47df4aea6ad9f2140e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7615df781226137b9cd76b47df4aea6ad9f2140e"}, {"sha": "3a8c585300517fe5bd95bb0dc29520871183193b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a8c585300517fe5bd95bb0dc29520871183193b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a8c585300517fe5bd95bb0dc29520871183193b"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "92a735744d14cdfac1907676c83d08851d06a79d", "filename": "gcc/rust/backend/rust-compile-fnparam.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8507a68883438060b3b8e828069ffe20a084b85a/gcc%2Frust%2Fbackend%2Frust-compile-fnparam.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8507a68883438060b3b8e828069ffe20a084b85a/gcc%2Frust%2Fbackend%2Frust-compile-fnparam.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-fnparam.h?ref=8507a68883438060b3b8e828069ffe20a084b85a", "patch": "@@ -48,10 +48,8 @@ class CompileFnParam : public HIRCompileBase\n     address_taken_context->lookup_addess_taken (\n       param.get_mappings ().get_hirid (), &address_taken);\n \n-    compiled_param\n-      = ctx->get_backend ()->parameter_variable (fndecl, pattern.variable_ident,\n-\t\t\t\t\t\t decl_type, address_taken,\n-\t\t\t\t\t\t locus);\n+    compiled_param = ctx->get_backend ()->parameter_variable (\n+      fndecl, pattern.get_identifier (), decl_type, address_taken, locus);\n   }\n \n private:"}, {"sha": "a5c736d4b1cab6d5fb9bbe7c96fc85fbaf88fc32", "filename": "gcc/rust/backend/rust-compile-var-decl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8507a68883438060b3b8e828069ffe20a084b85a/gcc%2Frust%2Fbackend%2Frust-compile-var-decl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8507a68883438060b3b8e828069ffe20a084b85a/gcc%2Frust%2Fbackend%2Frust-compile-var-decl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-var-decl.h?ref=8507a68883438060b3b8e828069ffe20a084b85a", "patch": "@@ -59,7 +59,7 @@ class CompileVarDecl : public HIRCompileBase\n       translated_type = ctx->get_backend ()->immutable_type (translated_type);\n \n     compiled_variable\n-      = ctx->get_backend ()->local_variable (fndecl, pattern.variable_ident,\n+      = ctx->get_backend ()->local_variable (fndecl, pattern.get_identifier (),\n \t\t\t\t\t     translated_type, NULL /*decl_var*/,\n \t\t\t\t\t     address_taken, locus);\n   }"}, {"sha": "bdeeaed635e1802e02bf5308322ca23c5509c998", "filename": "gcc/rust/hir/tree/rust-hir-pattern.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8507a68883438060b3b8e828069ffe20a084b85a/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-pattern.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8507a68883438060b3b8e828069ffe20a084b85a/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-pattern.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-pattern.h?ref=8507a68883438060b3b8e828069ffe20a084b85a", "patch": "@@ -68,16 +68,13 @@ class LiteralPattern : public Pattern\n // Identifier pattern HIR node (bind value matched to a variable)\n class IdentifierPattern : public Pattern\n {\n-public:\n   Identifier variable_ident;\n   bool is_ref;\n   Mutability mut;\n-\n-  // bool has_pattern;\n   std::unique_ptr<Pattern> to_bind;\n-\n   Location locus;\n \n+public:\n   std::string as_string () const override;\n \n   // Returns whether the IdentifierPattern has a pattern to bind.\n@@ -126,6 +123,8 @@ class IdentifierPattern : public Pattern\n \n   void accept_vis (HIRVisitor &vis) override;\n \n+  Identifier get_identifier () const { return variable_ident; }\n+\n protected:\n   /* Use covariance to implement clone function as returning this object rather\n    * than base */"}]}