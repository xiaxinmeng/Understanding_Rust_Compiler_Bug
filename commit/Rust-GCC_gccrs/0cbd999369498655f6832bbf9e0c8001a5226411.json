{"sha": "0cbd999369498655f6832bbf9e0c8001a5226411", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNiZDk5OTM2OTQ5ODY1NWY2ODMyYmJmOWUwYzgwMDFhNTIyNjQxMQ==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2010-06-30T17:12:36Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2010-06-30T17:12:36Z"}, "message": "toplev.h (_fatal_insn_not_found, [...]): Move declarations to rtl.h.\n\n2010-06-30  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\t* toplev.h (_fatal_insn_not_found, _fatal_insn): Move declarations\n\tto rtl.h.\n\t(error_for_asm,\twarning_for_asm): Move declarations to rtl-error.h.\n\t* rtl.h (_fatal_insn_not_found, _fatal_insn): Move declarations\n\there.\n\t* rtl-error.h: New.\n\t* regrename.c: Do not include toplev.h. Include rtl-error.h.\n\t* rtl-error.c: Likewise.\n\t* reload.c: Likewise.\n\t* recog.c:  Likewise.\n\t* sel-sched.c: Likewise.\n\t* function.c: Likewise.\n\t* reg-stack.c: Likewise.\n\t* cfgrtl.c: Likewise.\n\t* reload1.c: Likewise.\n\t* final.c: Include rtl-error.\n\t* Makefile.in: Adjust dependencies.\n\nFrom-SVN: r161617", "tree": {"sha": "6809eeec78ac6bc094b49d7b9412573e5f8f762c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6809eeec78ac6bc094b49d7b9412573e5f8f762c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cbd999369498655f6832bbf9e0c8001a5226411", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cbd999369498655f6832bbf9e0c8001a5226411", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cbd999369498655f6832bbf9e0c8001a5226411", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cbd999369498655f6832bbf9e0c8001a5226411/comments", "author": null, "committer": null, "parents": [{"sha": "b1570cac5432acd5b92b2c258675842966653d22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1570cac5432acd5b92b2c258675842966653d22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1570cac5432acd5b92b2c258675842966653d22"}], "stats": {"total": 139, "additions": 88, "deletions": 51}, "files": [{"sha": "f8d29eada348bced7faa1eeb7be9ebd10c41a06b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0cbd999369498655f6832bbf9e0c8001a5226411", "patch": "@@ -1,3 +1,23 @@\n+2010-06-30  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* toplev.h (_fatal_insn_not_found, _fatal_insn): Move declarations\n+\tto rtl.h.\n+\t(error_for_asm,\twarning_for_asm): Move declarations to rtl-error.h.\n+\t* rtl.h (_fatal_insn_not_found, _fatal_insn): Move declarations\n+\there.\n+\t* rtl-error.h: New.\n+\t* regrename.c: Do not include toplev.h. Include rtl-error.h.\n+\t* rtl-error.c: Likewise.\n+\t* reload.c: Likewise.\n+\t* recog.c:  Likewise.\n+\t* sel-sched.c: Likewise.\n+\t* function.c: Likewise.\n+\t* reg-stack.c: Likewise.\n+\t* cfgrtl.c: Likewise.\n+\t* reload1.c: Likewise.\n+\t* final.c: Include rtl-error.\n+\t* Makefile.in: Adjust dependencies.\n+\n 2010-06-30  Jan Hubicka  <jh@suse.cz>\n \n \tPR middle-end/PR44706"}, {"sha": "a4214cb87df829be64ab1e01e4cca279e3b1ab30", "filename": "gcc/Makefile.in", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=0cbd999369498655f6832bbf9e0c8001a5226411", "patch": "@@ -871,6 +871,7 @@ RTL_BASE_H = rtl.h rtl.def $(MACHMODE_H) reg-notes.def insn-notes.def \\\n   $(INPUT_H) $(REAL_H) statistics.h $(VEC_H) $(FIXED_VALUE_H) alias.h\n FIXED_VALUE_H = fixed-value.h $(MACHMODE_H) double-int.h\n RTL_H = $(RTL_BASE_H) genrtl.h vecir.h\n+RTL_ERROR_H = $(RTL_H) $(DIAGNOSTIC_CORE_H)\n READ_MD_H = $(OBSTACK_H) $(HASHTAB_H) read-md.h\n PARAMS_H = params.h params.def\n BUILTINS_DEF = builtins.def sync-builtins.def omp-builtins.def\n@@ -2848,8 +2849,8 @@ main.o : main.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TOPLEV_H)\n host-default.o : host-default.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n    hosthooks.h $(HOSTHOOKS_DEF_H)\n \n-rtl-error.o: rtl-error.c $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n-   $(INSN_ATTR_H) insn-config.h $(INPUT_H) $(TOPLEV_H) intl.h $(DIAGNOSTIC_H) \\\n+rtl-error.o: rtl-error.c $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n+   $(INSN_ATTR_H) insn-config.h $(INPUT_H) intl.h $(DIAGNOSTIC_H) \\\n    $(CONFIG_H)\n \n rtl.o : rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n@@ -2869,10 +2870,10 @@ varasm.o : varasm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(HASHTAB_H) $(TARGET_H) langhooks.h gt-varasm.h $(BASIC_BLOCK_H) \\\n    $(CFGLAYOUT_H) $(CGRAPH_H) targhooks.h tree-mudflap.h \\\n    tree-iterator.h\n-function.o : function.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+function.o : function.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(TREE_H) $(CFGLAYOUT_H) $(GIMPLE_H) $(FLAGS_H) $(FUNCTION_H) $(EXPR_H) \\\n    $(OPTABS_H) libfuncs.h $(REGS_H) hard-reg-set.h insn-config.h $(RECOG_H) \\\n-   output.h $(TOPLEV_H) $(EXCEPT_H) $(HASHTAB_H) $(GGC_H) $(TM_P_H) langhooks.h \\\n+   output.h  $(EXCEPT_H) $(HASHTAB_H) $(GGC_H) $(TM_P_H) langhooks.h \\\n    gt-function.h $(TARGET_H) $(BASIC_BLOCK_H) $(INTEGRATE_H) $(PREDICT_H) \\\n    $(TREE_PASS_H) $(DF_H) $(TIMEVAR_H) vecprim.h\n statistics.o : statistics.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n@@ -3199,9 +3200,9 @@ cfgexpand.o : cfgexpand.c $(TREE_FLOW_H) $(CONFIG_H) $(SYSTEM_H) \\\n    $(DIAGNOSTIC_H) $(TOPLEV_H) $(BASIC_BLOCK_H) $(FLAGS_H) debug.h $(PARAMS_H) \\\n    value-prof.h $(TREE_INLINE_H) $(TARGET_H) $(SSAEXPAND_H) \\\n    tree-pretty-print.h gimple-pretty-print.h $(BITMAP_H) sbitmap.h $(INSN_ATTR_H)\n-cfgrtl.o : cfgrtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+cfgrtl.o : cfgrtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(FLAGS_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h \\\n-   output.h $(TOPLEV_H) $(FUNCTION_H) $(EXCEPT_H) $(TM_P_H) $(INSN_ATTR_H) \\\n+   output.h  $(FUNCTION_H) $(EXCEPT_H) $(TM_P_H) $(INSN_ATTR_H) \\\n    insn-config.h $(EXPR_H) \\\n    $(CFGLAYOUT_H) $(CFGLOOP_H) $(OBSTACK_H) $(TARGET_H) $(TREE_H) \\\n    $(TREE_PASS_H) $(DF_H) $(GGC_H)\n@@ -3265,13 +3266,13 @@ bitmap.o : bitmap.c $(CONFIG_H) $(SYSTEM_H)  coretypes.h $(TM_H) $(RTL_H) \\\n    $(FLAGS_H) $(GGC_H) gt-bitmap.h $(BITMAP_H) $(OBSTACK_H) $(HASHTAB_H)\n vec.o : vec.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(VEC_H) $(GGC_H) \\\n    $(TOPLEV_H) $(HASHTAB_H)\n-reload.o : reload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+reload.o : reload.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(FLAGS_H) output.h $(EXPR_H) $(OPTABS_H) reload.h $(RECOG_H) \\\n-   hard-reg-set.h insn-config.h $(REGS_H) $(FUNCTION_H) real.h $(TOPLEV_H) \\\n+   hard-reg-set.h insn-config.h $(REGS_H) $(FUNCTION_H) real.h \\\n    addresses.h $(TM_P_H) $(PARAMS_H) $(TARGET_H) $(DF_H) ira.h\n-reload1.o : reload1.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+reload1.o : reload1.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(EXPR_H) $(OPTABS_H) reload.h $(REGS_H) hard-reg-set.h insn-config.h \\\n-   $(BASIC_BLOCK_H) $(RECOG_H) output.h $(FUNCTION_H) $(TOPLEV_H) $(TM_P_H) \\\n+   $(BASIC_BLOCK_H) $(RECOG_H) output.h $(FUNCTION_H)  $(TM_P_H) \\\n    addresses.h $(EXCEPT_H) $(TREE_H) $(FLAGS_H) $(MACHMODE_H) \\\n    $(OBSTACK_H) $(DF_H) $(TARGET_H) $(EMIT_RTL_H) ira.h\n rtlhooks.o :  rtlhooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n@@ -3380,8 +3381,8 @@ sched-vis.o : sched-vis.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(SCHED_INT_H) hard-reg-set.h $(BASIC_BLOCK_H) $(OBSTACK_H) \\\n    $(TREE_PASS_H) $(INSN_ATTR_H)\n sel-sched.o : sel-sched.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n-   $(FUNCTION_H) $(INSN_ATTR_H) $(TOPLEV_H) $(RECOG_H) $(EXCEPT_H) $(PARAMS_H) \\\n+   $(RTL_ERROR_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) insn-config.h \\\n+   $(FUNCTION_H) $(INSN_ATTR_H)  $(RECOG_H) $(EXCEPT_H) $(PARAMS_H) \\\n    $(TM_P_H) output.h $(TARGET_H) $(TIMEVAR_H) $(TREE_PASS_H)  \\\n    $(SCHED_INT_H) $(GGC_H) $(TREE_H) langhooks.h rtlhooks-def.h \\\n    $(SEL_SCHED_IR_H) $(SEL_SCHED_DUMP_H) sel-sched.h $(DBGCNT_H) $(EMIT_RTL_H)\n@@ -3397,21 +3398,21 @@ sel-sched-ir.o : sel-sched-ir.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TM_P_H) $(TARGET_H) $(TIMEVAR_H) $(TREE_PASS_H) $(SCHED_INT_H) $(GGC_H) \\\n    $(TREE_H) langhooks.h rtlhooks-def.h $(SEL_SCHED_IR_H) $(SEL_SCHED_DUMP_H) \\\n    $(EMIT_RTL_H)\n-final.o : final.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+final.o : final.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(TREE_H) $(FLAGS_H) intl.h $(REGS_H) $(RECOG_H) conditions.h \\\n    insn-config.h $(INSN_ATTR_H) $(FUNCTION_H) output.h hard-reg-set.h \\\n    $(EXCEPT_H) debug.h xcoffout.h $(TOPLEV_H) reload.h dwarf2out.h \\\n    $(TREE_PASS_H) $(BASIC_BLOCK_H) $(TM_P_H) $(TARGET_H) $(EXPR_H) \\\n    $(CFGLAYOUT_H) dbxout.h $(TIMEVAR_H) $(CGRAPH_H) $(COVERAGE_H) \\\n    $(DF_H) vecprim.h $(GGC_H) $(CFGLOOP_H) $(PARAMS_H) $(TREE_FLOW_H)\n-recog.o : recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n+recog.o : recog.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_ERROR_H) \\\n    $(FUNCTION_H) $(BASIC_BLOCK_H) $(REGS_H) $(RECOG_H) $(EXPR_H) \\\n-   $(FLAGS_H) insn-config.h $(INSN_ATTR_H) $(TOPLEV_H) output.h reload.h \\\n+   $(FLAGS_H) insn-config.h $(INSN_ATTR_H) output.h reload.h \\\n    addresses.h $(TM_P_H) $(TIMEVAR_H) $(TREE_PASS_H) hard-reg-set.h \\\n    $(DF_H) $(DBGCNT_H) $(TARGET_H)\n reg-stack.o : reg-stack.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) $(TREE_H) $(RECOG_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) \\\n-   insn-config.h $(TOPLEV_H) reload.h $(FUNCTION_H) $(TM_P_H) $(GGC_H) \\\n+   $(RTL_ERROR_H) $(TREE_H) $(RECOG_H) $(REGS_H) hard-reg-set.h $(FLAGS_H) \\\n+   insn-config.h reload.h $(FUNCTION_H) $(TM_P_H) $(GGC_H) \\\n    $(BASIC_BLOCK_H) $(CFGLAYOUT_H) output.h $(TIMEVAR_H) \\\n    $(TREE_PASS_H) $(TARGET_H) vecprim.h $(DF_H) $(EMIT_RTL_H)\n sreal.o: sreal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) sreal.h\n@@ -3443,9 +3444,9 @@ regcprop.o : regcprop.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    output.h $(RECOG_H) $(FUNCTION_H) $(OBSTACK_H) $(FLAGS_H) $(TM_P_H) \\\n    addresses.h reload.h $(TOPLEV_H) $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H)\n regrename.o : regrename.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   $(RTL_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h \\\n+   $(RTL_ERROR_H) insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h \\\n    output.h $(RECOG_H) $(FUNCTION_H) $(OBSTACK_H) $(FLAGS_H) $(TM_P_H) \\\n-   addresses.h reload.h $(TOPLEV_H) $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H)\n+   addresses.h reload.h $(TIMEVAR_H) $(TREE_PASS_H) $(DF_H)\n ifcvt.o : ifcvt.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    $(REGS_H) $(TOPLEV_H) $(FLAGS_H) insn-config.h $(FUNCTION_H) $(RECOG_H) \\\n    $(TARGET_H) $(BASIC_BLOCK_H) $(EXPR_H) output.h $(EXCEPT_H) $(TM_P_H) \\"}, {"sha": "3138281b589f29dfb712ada5c60aee173680ecf4", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=0cbd999369498655f6832bbf9e0c8001a5226411", "patch": "@@ -42,15 +42,14 @@ along with GCC; see the file COPYING3.  If not see\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n #include \"hard-reg-set.h\"\n #include \"basic-block.h\"\n #include \"regs.h\"\n #include \"flags.h\"\n #include \"output.h\"\n #include \"function.h\"\n #include \"except.h\"\n-#include \"toplev.h\"\n+#include \"rtl-error.h\"\n #include \"tm_p.h\"\n #include \"obstack.h\"\n #include \"insn-attr.h\""}, {"sha": "2bb897dc10b6c909a0724490cdb3c86d171efe86", "filename": "gcc/final.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=0cbd999369498655f6832bbf9e0c8001a5226411", "patch": "@@ -62,7 +62,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"output.h\"\n #include \"except.h\"\n #include \"function.h\"\n-#include \"toplev.h\"\n+#include \"rtl-error.h\"\n+#include \"toplev.h\" /* exact_log2, floor_log2 */\n #include \"reload.h\"\n #include \"intl.h\"\n #include \"basic-block.h\""}, {"sha": "3a7bb25dac6a963d91194d35b2021629f55df149", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=0cbd999369498655f6832bbf9e0c8001a5226411", "patch": "@@ -37,7 +37,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"rtl.h\"\n+#include \"rtl-error.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"except.h\"\n@@ -51,7 +51,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"recog.h\"\n #include \"output.h\"\n #include \"basic-block.h\"\n-#include \"toplev.h\"\n #include \"hashtab.h\"\n #include \"ggc.h\"\n #include \"tm_p.h\""}, {"sha": "803aff5f786c5dc5f3ada526b7630e62156cb667", "filename": "gcc/recog.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=0cbd999369498655f6832bbf9e0c8001a5226411", "patch": "@@ -24,7 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"rtl.h\"\n+#include \"rtl-error.h\"\n #include \"tm_p.h\"\n #include \"insn-config.h\"\n #include \"insn-attr.h\"\n@@ -35,7 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"expr.h\"\n #include \"function.h\"\n #include \"flags.h\"\n-#include \"toplev.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n #include \"reload.h\""}, {"sha": "e692584bb6bbe810f97126bfbd738db59b6e6d14", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=0cbd999369498655f6832bbf9e0c8001a5226411", "patch": "@@ -156,14 +156,13 @@\n #include \"coretypes.h\"\n #include \"tm.h\"\n #include \"tree.h\"\n-#include \"rtl.h\"\n+#include \"rtl-error.h\"\n #include \"tm_p.h\"\n #include \"function.h\"\n #include \"insn-config.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n #include \"flags.h\"\n-#include \"toplev.h\"\n #include \"recog.h\"\n #include \"output.h\"\n #include \"basic-block.h\""}, {"sha": "191e3b4278f9181e8d0c3c7dee6b5bb0fd49f2b0", "filename": "gcc/regrename.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=0cbd999369498655f6832bbf9e0c8001a5226411", "patch": "@@ -22,7 +22,7 @@\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"rtl.h\"\n+#include \"rtl-error.h\"\n #include \"tm_p.h\"\n #include \"insn-config.h\"\n #include \"regs.h\"\n@@ -34,7 +34,6 @@\n #include \"function.h\"\n #include \"recog.h\"\n #include \"flags.h\"\n-#include \"toplev.h\"\n #include \"obstack.h\"\n #include \"timevar.h\"\n #include \"tree-pass.h\""}, {"sha": "c670dcf0000bf20b40d49a9fb4e019b6ccedf5dd", "filename": "gcc/reload.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=0cbd999369498655f6832bbf9e0c8001a5226411", "patch": "@@ -94,7 +94,7 @@ a register with any other reload.  */\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"rtl.h\"\n+#include \"rtl-error.h\"\n #include \"tm_p.h\"\n #include \"insn-config.h\"\n #include \"expr.h\"\n@@ -108,7 +108,6 @@ a register with any other reload.  */\n #include \"flags.h\"\n #include \"output.h\"\n #include \"function.h\"\n-#include \"toplev.h\"\n #include \"params.h\"\n #include \"target.h\"\n #include \"ira.h\""}, {"sha": "423ac44b90bf21364f0c99b495bae2bb2db34047", "filename": "gcc/reload1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=0cbd999369498655f6832bbf9e0c8001a5226411", "patch": "@@ -26,7 +26,7 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"machmode.h\"\n #include \"hard-reg-set.h\"\n-#include \"rtl.h\"\n+#include \"rtl-error.h\"\n #include \"tm_p.h\"\n #include \"obstack.h\"\n #include \"insn-config.h\"\n@@ -41,7 +41,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"reload.h\"\n #include \"recog.h\"\n #include \"output.h\"\n-#include \"toplev.h\"\n #include \"except.h\"\n #include \"tree.h\"\n #include \"ira.h\""}, {"sha": "6cf44d16ab20a316282e24a1668858df4bd6a131", "filename": "gcc/rtl-error.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Frtl-error.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Frtl-error.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl-error.c?ref=0cbd999369498655f6832bbf9e0c8001a5226411", "patch": "@@ -22,11 +22,10 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"rtl.h\"\n+#include \"rtl-error.h\"\n #include \"insn-attr.h\"\n #include \"insn-config.h\"\n #include \"input.h\"\n-#include \"toplev.h\"\n #include \"intl.h\"\n #include \"diagnostic.h\"\n "}, {"sha": "1ff58256b7009d1be98bd52d4bbfcb230ef8fa78", "filename": "gcc/rtl-error.h", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Frtl-error.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Frtl-error.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl-error.h?ref=0cbd999369498655f6832bbf9e0c8001a5226411", "patch": "@@ -0,0 +1,24 @@\n+/* RTL specific diagnostic subroutines for GCC\n+   Copyright (C) 2010 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"rtl.h\"\n+#include \"diagnostic-core.h\"\n+\n+extern void error_for_asm (const_rtx, const char *, ...) ATTRIBUTE_GCC_DIAG(2,3);\n+extern void warning_for_asm (const_rtx, const char *, ...) ATTRIBUTE_GCC_DIAG(2,3);"}, {"sha": "02f74f575c301834f86e72fdb83fbadf1d0396e9", "filename": "gcc/rtl.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=0cbd999369498655f6832bbf9e0c8001a5226411", "patch": "@@ -2440,4 +2440,17 @@ extern int curr_insn_locator (void);\n extern bool optimize_insn_for_size_p (void);\n extern bool optimize_insn_for_speed_p (void);\n \n+/* rtl-error.c */\n+extern void _fatal_insn_not_found (const_rtx, const char *, int, const char *)\n+     ATTRIBUTE_NORETURN;\n+extern void _fatal_insn (const char *, const_rtx, const char *, int, const char *)\n+     ATTRIBUTE_NORETURN;\n+\n+#define fatal_insn(msgid, insn) \\\n+\t_fatal_insn (msgid, insn, __FILE__, __LINE__, __FUNCTION__)\n+#define fatal_insn_not_found(insn) \\\n+\t_fatal_insn_not_found (insn, __FILE__, __LINE__, __FUNCTION__)\n+\n+\n+\n #endif /* ! GCC_RTL_H */"}, {"sha": "3a86e22feef43d6cba796a04651cef69a72eb31d", "filename": "gcc/sel-sched.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Fsel-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Fsel-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched.c?ref=0cbd999369498655f6832bbf9e0c8001a5226411", "patch": "@@ -21,8 +21,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n-#include \"toplev.h\"\n-#include \"rtl.h\"\n+#include \"rtl-error.h\"\n #include \"tm_p.h\"\n #include \"hard-reg-set.h\"\n #include \"regs.h\"\n@@ -31,7 +30,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"insn-config.h\"\n #include \"insn-attr.h\"\n #include \"except.h\"\n-#include \"toplev.h\"\n #include \"recog.h\"\n #include \"params.h\"\n #include \"target.h\""}, {"sha": "517d359dbb48f40fc1fea0c9fa1360370f746aff", "filename": "gcc/toplev.h", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cbd999369498655f6832bbf9e0c8001a5226411/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=0cbd999369498655f6832bbf9e0c8001a5226411", "patch": "@@ -32,16 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n \n extern int toplev_main (int, char **);\n extern void strip_off_ending (char *, int);\n-extern void _fatal_insn_not_found (const_rtx, const char *, int, const char *)\n-     ATTRIBUTE_NORETURN;\n-extern void _fatal_insn (const char *, const_rtx, const char *, int, const char *)\n-     ATTRIBUTE_NORETURN;\n-\n-#define fatal_insn(msgid, insn) \\\n-\t_fatal_insn (msgid, insn, __FILE__, __LINE__, __FUNCTION__)\n-#define fatal_insn_not_found(insn) \\\n-\t_fatal_insn_not_found (insn, __FILE__, __LINE__, __FUNCTION__)\n-\n extern void rest_of_decl_compilation (tree, int, int);\n extern void rest_of_type_compilation (tree, int);\n extern void tree_rest_of_compilation (tree);\n@@ -56,8 +46,6 @@ extern void init_eh (void);\n \n extern void announce_function (tree);\n \n-extern void error_for_asm (const_rtx, const char *, ...) ATTRIBUTE_GCC_DIAG(2,3);\n-extern void warning_for_asm (const_rtx, const char *, ...) ATTRIBUTE_GCC_DIAG(2,3);\n extern void warn_deprecated_use (tree, tree);\n extern bool parse_optimize_options (tree, bool);\n "}]}