{"sha": "79ab536427e403df631eb3ed3480c6330b2ff898", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzlhYjUzNjQyN2U0MDNkZjYzMWViM2VkMzQ4MGM2MzMwYjJmZjg5OA==", "commit": {"author": {"name": "Julia Koval", "email": "julia.koval@intel.com", "date": "2018-03-14T10:26:38Z"}, "committer": {"name": "Julia Koval", "email": "jkoval@gcc.gnu.org", "date": "2018-03-14T10:26:38Z"}, "message": "Split-up -march=icelake on -march=icelake-server and -march=icelake-client\n\nSplit-up -march=icelake on -march=icelake-server and -march=icelake-client\ngcc/\n\t* config.gcc (icelake-client, icelake-server): New.\n\t(icelake): Remove.\n\t* config/i386/i386.c (initial_ix86_tune_features): Extend to 64 bit.\n\t(initial_ix86_arch_features): Ditto.\n\t(PTA_SKYLAKE): Add SGX.\n\t(PTA_ICELAKE): Remove.\n\t(PTA_ICELAKE_CLIENT): New.\n\t(PTA_ICELAKE_SERVER): New.\n\t(ix86_option_override_internal): Split up icelake on icelake client and\n\ticelake server.\n\t(get_builtin_code_for_version): Ditto.\n\t(fold_builtin_cpu): Ditto.\n\t* config/i386/driver-i386.c (config/i386/driver-i386.c): Ditto.\n\t* config/i386/i386-c.c (ix86_target_macros_internal): Ditto\n\t* config/i386/i386.h (processor_type): Ditto.\n\t* doc/invoke.texi: Ditto.\n\ngcc/testsuite/\n\t* g++.dg/ext/mv16.C: Split up icelake on icelake client and\n\ticelake-server.\n\t* gcc.target/i386/funcspec-56.inc: Ditto.\n\nlibgcc/\n\t* config/i386/cpuinfo.h (processor_subtypes): Split up icelake on\n\ticelake-client and icelake-server.\n\nFrom-SVN: r258518", "tree": {"sha": "11df899e263b8b4c09812cf2a7213650a112a593", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11df899e263b8b4c09812cf2a7213650a112a593"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79ab536427e403df631eb3ed3480c6330b2ff898", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79ab536427e403df631eb3ed3480c6330b2ff898", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79ab536427e403df631eb3ed3480c6330b2ff898", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79ab536427e403df631eb3ed3480c6330b2ff898/comments", "author": {"login": "vaalfreja", "id": 5216345, "node_id": "MDQ6VXNlcjUyMTYzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5216345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaalfreja", "html_url": "https://github.com/vaalfreja", "followers_url": "https://api.github.com/users/vaalfreja/followers", "following_url": "https://api.github.com/users/vaalfreja/following{/other_user}", "gists_url": "https://api.github.com/users/vaalfreja/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaalfreja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaalfreja/subscriptions", "organizations_url": "https://api.github.com/users/vaalfreja/orgs", "repos_url": "https://api.github.com/users/vaalfreja/repos", "events_url": "https://api.github.com/users/vaalfreja/events{/privacy}", "received_events_url": "https://api.github.com/users/vaalfreja/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "788949a3744699804d94de17c385bf71cd1176b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/788949a3744699804d94de17c385bf71cd1176b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/788949a3744699804d94de17c385bf71cd1176b6"}], "stats": {"total": 204, "additions": 143, "deletions": 61}, "files": [{"sha": "3be155db8312f602ff9ce82923d21223dcf323e4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79ab536427e403df631eb3ed3480c6330b2ff898/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79ab536427e403df631eb3ed3480c6330b2ff898/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=79ab536427e403df631eb3ed3480c6330b2ff898", "patch": "@@ -1,3 +1,22 @@\n+2018-03-14  Julia Koval  <julia.koval@intel.com>\n+\n+\t* config.gcc (icelake-client, icelake-server): New.\n+\t(icelake): Remove.\n+\t* config/i386/i386.c (initial_ix86_tune_features): Extend to 64 bit.\n+\t(initial_ix86_arch_features): Ditto.\n+\t(PTA_SKYLAKE): Add SGX.\n+\t(PTA_ICELAKE): Remove.\n+\t(PTA_ICELAKE_CLIENT): New.\n+\t(PTA_ICELAKE_SERVER): New.\n+\t(ix86_option_override_internal): Split up icelake on icelake client and\n+\ticelake server.\n+\t(get_builtin_code_for_version): Ditto.\n+\t(fold_builtin_cpu): Ditto.\n+\t* config/i386/driver-i386.c (config/i386/driver-i386.c): Ditto.\n+\t* config/i386/i386-c.c (ix86_target_macros_internal): Ditto\n+\t* config/i386/i386.h (processor_type): Ditto.\n+\t* doc/invoke.texi: Ditto.\n+\n 2018-03-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/83392"}, {"sha": "f7b2659bef6a43367f888f8d3efd0fc76c389b1e", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79ab536427e403df631eb3ed3480c6330b2ff898/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79ab536427e403df631eb3ed3480c6330b2ff898/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=79ab536427e403df631eb3ed3480c6330b2ff898", "patch": "@@ -637,7 +637,7 @@ x86_64_archs=\"amdfam10 athlon64 athlon64-sse3 barcelona bdver1 bdver2 \\\n bdver3 bdver4 znver1 btver1 btver2 k8 k8-sse3 opteron opteron-sse3 nocona \\\n core2 corei7 corei7-avx core-avx-i core-avx2 atom slm nehalem westmere \\\n sandybridge ivybridge haswell broadwell bonnell silvermont knl knm \\\n-skylake-avx512 cannonlake icelake x86-64 native\"\n+skylake-avx512 cannonlake icelake-client icelake-server x86-64 native\"\n \n # Additional x86 processors supported by --with-cpu=.  Each processor\n # MUST be separated by exactly one space."}, {"sha": "4f5985445ff3f3ca1ae02f88cf0876c45e946b05", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79ab536427e403df631eb3ed3480c6330b2ff898/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79ab536427e403df631eb3ed3480c6330b2ff898/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=79ab536427e403df631eb3ed3480c6330b2ff898", "patch": "@@ -825,9 +825,12 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \t  if (arch)\n \t    {\n \t      /* This is unknown family 0x6 CPU.  */\n+\t      /* Assume Ice Lake Server.  */\n+\t      if (has_wbnoinvd)\n+\t\tcpu = \"icelake-server\";\n \t      /* Assume Ice Lake.  */\n-\t      if (has_gfni)\n-\t\tcpu = \"icelake\";\n+\t      else if (has_gfni)\n+\t\tcpu = \"icelake-client\";\n \t      /* Assume Cannon Lake.  */\n \t      else if (has_avx512vbmi)\n \t\tcpu = \"cannonlake\";"}, {"sha": "6c50e2096a0f15d8266570f0715332530e2eb206", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79ab536427e403df631eb3ed3480c6330b2ff898/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79ab536427e403df631eb3ed3480c6330b2ff898/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=79ab536427e403df631eb3ed3480c6330b2ff898", "patch": "@@ -190,9 +190,13 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n       def_or_undef (parse_in, \"__cannonlake\");\n       def_or_undef (parse_in, \"__cannonlake__\");\n       break;\n-    case PROCESSOR_ICELAKE:\n-      def_or_undef (parse_in, \"__icelake\");\n-      def_or_undef (parse_in, \"__icelake__\");\n+    case PROCESSOR_ICELAKE_CLIENT:\n+      def_or_undef (parse_in, \"__icelake_client\");\n+      def_or_undef (parse_in, \"__icelake_client__\");\n+      break;\n+    case PROCESSOR_ICELAKE_SERVER:\n+      def_or_undef (parse_in, \"__icelake_server\");\n+      def_or_undef (parse_in, \"__icelake_server__\");\n       break;\n     /* use PROCESSOR_max to not set/unset the arch macro.  */\n     case PROCESSOR_max:\n@@ -315,8 +319,11 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n     case PROCESSOR_CANNONLAKE:\n       def_or_undef (parse_in, \"__tune_cannonlake__\");\n       break;\n-    case PROCESSOR_ICELAKE:\n-      def_or_undef (parse_in, \"__tune_icelake__\");\n+    case PROCESSOR_ICELAKE_CLIENT:\n+      def_or_undef (parse_in, \"__tune_icelake_client__\");\n+      break;\n+    case PROCESSOR_ICELAKE_SERVER:\n+      def_or_undef (parse_in, \"__tune_icelake_server__\");\n       break;\n     case PROCESSOR_LAKEMONT:\n       def_or_undef (parse_in, \"__tune_lakemont__\");"}, {"sha": "a87e5d5ad79873ea1afd6e7e186be9b4a17d5476", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 68, "deletions": 45, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79ab536427e403df631eb3ed3480c6330b2ff898/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79ab536427e403df631eb3ed3480c6330b2ff898/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=79ab536427e403df631eb3ed3480c6330b2ff898", "patch": "@@ -127,48 +127,49 @@ const struct processor_costs *ix86_tune_cost = NULL;\n const struct processor_costs *ix86_cost = NULL;\n \n /* Processor feature/optimization bitmasks.  */\n-#define m_386 (1U<<PROCESSOR_I386)\n-#define m_486 (1U<<PROCESSOR_I486)\n-#define m_PENT (1U<<PROCESSOR_PENTIUM)\n-#define m_LAKEMONT (1U<<PROCESSOR_LAKEMONT)\n-#define m_PPRO (1U<<PROCESSOR_PENTIUMPRO)\n-#define m_PENT4 (1U<<PROCESSOR_PENTIUM4)\n-#define m_NOCONA (1U<<PROCESSOR_NOCONA)\n+#define m_386 (HOST_WIDE_INT_1U<<PROCESSOR_I386)\n+#define m_486 (HOST_WIDE_INT_1U<<PROCESSOR_I486)\n+#define m_PENT (HOST_WIDE_INT_1U<<PROCESSOR_PENTIUM)\n+#define m_LAKEMONT (HOST_WIDE_INT_1U<<PROCESSOR_LAKEMONT)\n+#define m_PPRO (HOST_WIDE_INT_1U<<PROCESSOR_PENTIUMPRO)\n+#define m_PENT4 (HOST_WIDE_INT_1U<<PROCESSOR_PENTIUM4)\n+#define m_NOCONA (HOST_WIDE_INT_1U<<PROCESSOR_NOCONA)\n #define m_P4_NOCONA (m_PENT4 | m_NOCONA)\n-#define m_CORE2 (1U<<PROCESSOR_CORE2)\n-#define m_NEHALEM (1U<<PROCESSOR_NEHALEM)\n-#define m_SANDYBRIDGE (1U<<PROCESSOR_SANDYBRIDGE)\n-#define m_HASWELL (1U<<PROCESSOR_HASWELL)\n+#define m_CORE2 (HOST_WIDE_INT_1U<<PROCESSOR_CORE2)\n+#define m_NEHALEM (HOST_WIDE_INT_1U<<PROCESSOR_NEHALEM)\n+#define m_SANDYBRIDGE (HOST_WIDE_INT_1U<<PROCESSOR_SANDYBRIDGE)\n+#define m_HASWELL (HOST_WIDE_INT_1U<<PROCESSOR_HASWELL)\n #define m_CORE_ALL (m_CORE2 | m_NEHALEM  | m_SANDYBRIDGE | m_HASWELL)\n-#define m_BONNELL (1U<<PROCESSOR_BONNELL)\n-#define m_SILVERMONT (1U<<PROCESSOR_SILVERMONT)\n-#define m_KNL (1U<<PROCESSOR_KNL)\n-#define m_KNM (1U<<PROCESSOR_KNM)\n-#define m_SKYLAKE_AVX512 (1U<<PROCESSOR_SKYLAKE_AVX512)\n-#define m_CANNONLAKE (1U<<PROCESSOR_CANNONLAKE)\n-#define m_ICELAKE (1U<<PROCESSOR_ICELAKE)\n-#define m_INTEL (1U<<PROCESSOR_INTEL)\n-\n-#define m_GEODE (1U<<PROCESSOR_GEODE)\n-#define m_K6 (1U<<PROCESSOR_K6)\n+#define m_BONNELL (HOST_WIDE_INT_1U<<PROCESSOR_BONNELL)\n+#define m_SILVERMONT (HOST_WIDE_INT_1U<<PROCESSOR_SILVERMONT)\n+#define m_KNL (HOST_WIDE_INT_1U<<PROCESSOR_KNL)\n+#define m_KNM (HOST_WIDE_INT_1U<<PROCESSOR_KNM)\n+#define m_SKYLAKE_AVX512 (HOST_WIDE_INT_1U<<PROCESSOR_SKYLAKE_AVX512)\n+#define m_CANNONLAKE (HOST_WIDE_INT_1U<<PROCESSOR_CANNONLAKE)\n+#define m_ICELAKE_CLIENT (HOST_WIDE_INT_1U<<PROCESSOR_ICELAKE_CLIENT)\n+#define m_ICELAKE_SERVER (HOST_WIDE_INT_1U<<PROCESSOR_ICELAKE_SERVER)\n+#define m_INTEL (HOST_WIDE_INT_1U<<PROCESSOR_INTEL)\n+\n+#define m_GEODE (HOST_WIDE_INT_1U<<PROCESSOR_GEODE)\n+#define m_K6 (HOST_WIDE_INT_1U<<PROCESSOR_K6)\n #define m_K6_GEODE (m_K6 | m_GEODE)\n-#define m_K8 (1U<<PROCESSOR_K8)\n-#define m_ATHLON (1U<<PROCESSOR_ATHLON)\n+#define m_K8 (HOST_WIDE_INT_1U<<PROCESSOR_K8)\n+#define m_ATHLON (HOST_WIDE_INT_1U<<PROCESSOR_ATHLON)\n #define m_ATHLON_K8 (m_K8 | m_ATHLON)\n-#define m_AMDFAM10 (1U<<PROCESSOR_AMDFAM10)\n-#define m_BDVER1 (1U<<PROCESSOR_BDVER1)\n-#define m_BDVER2 (1U<<PROCESSOR_BDVER2)\n-#define m_BDVER3 (1U<<PROCESSOR_BDVER3)\n-#define m_BDVER4 (1U<<PROCESSOR_BDVER4)\n-#define m_ZNVER1 (1U<<PROCESSOR_ZNVER1)\n-#define m_BTVER1 (1U<<PROCESSOR_BTVER1)\n-#define m_BTVER2 (1U<<PROCESSOR_BTVER2)\n+#define m_AMDFAM10 (HOST_WIDE_INT_1U<<PROCESSOR_AMDFAM10)\n+#define m_BDVER1 (HOST_WIDE_INT_1U<<PROCESSOR_BDVER1)\n+#define m_BDVER2 (HOST_WIDE_INT_1U<<PROCESSOR_BDVER2)\n+#define m_BDVER3 (HOST_WIDE_INT_1U<<PROCESSOR_BDVER3)\n+#define m_BDVER4 (HOST_WIDE_INT_1U<<PROCESSOR_BDVER4)\n+#define m_ZNVER1 (HOST_WIDE_INT_1U<<PROCESSOR_ZNVER1)\n+#define m_BTVER1 (HOST_WIDE_INT_1U<<PROCESSOR_BTVER1)\n+#define m_BTVER2 (HOST_WIDE_INT_1U<<PROCESSOR_BTVER2)\n #define m_BDVER\t(m_BDVER1 | m_BDVER2 | m_BDVER3 | m_BDVER4)\n #define m_BTVER (m_BTVER1 | m_BTVER2)\n #define m_AMD_MULTIPLE (m_ATHLON_K8 | m_AMDFAM10 | m_BDVER | m_BTVER \\\n \t\t\t| m_ZNVER1)\n \n-#define m_GENERIC (1U<<PROCESSOR_GENERIC)\n+#define m_GENERIC (HOST_WIDE_INT_1U<<PROCESSOR_GENERIC)\n \n const char* ix86_tune_feature_names[X86_TUNE_LAST] = {\n #undef DEF_TUNE\n@@ -182,7 +183,7 @@ unsigned char ix86_tune_features[X86_TUNE_LAST];\n \n /* Feature tests against the various tunings used to create ix86_tune_features\n    based on the processor mask.  */\n-static unsigned int initial_ix86_tune_features[X86_TUNE_LAST] = {\n+static unsigned long long initial_ix86_tune_features[X86_TUNE_LAST] = {\n #undef DEF_TUNE\n #define DEF_TUNE(tune, name, selector) selector,\n #include \"x86-tune.def\"\n@@ -194,7 +195,7 @@ unsigned char ix86_arch_features[X86_ARCH_LAST];\n \n /* Feature tests against the various architecture variations, used to create\n    ix86_arch_features based on the processor mask.  */\n-static unsigned int initial_ix86_arch_features[X86_ARCH_LAST] = {\n+static unsigned long long initial_ix86_arch_features[X86_ARCH_LAST] = {\n   /* X86_ARCH_CMOV: Conditional move was added for pentiumpro.  */\n   ~(m_386 | m_486 | m_PENT | m_LAKEMONT | m_K6),\n \n@@ -860,7 +861,8 @@ static const struct ptt processor_target_table[PROCESSOR_max] =\n   {\"knm\", &slm_cost, 16, 15, 16, 7, 16},\n   {\"skylake-avx512\", &skylake_cost, 16, 10, 16, 10, 16},\n   {\"cannonlake\", &skylake_cost, 16, 10, 16, 10, 16},\n-  {\"icelake\", &skylake_cost, 16, 10, 16, 10, 16},\n+  {\"icelake-client\", &skylake_cost, 16, 10, 16, 10, 16},\n+  {\"icelake-server\", &skylake_cost, 16, 10, 16, 10, 16},\n   {\"intel\", &intel_cost, 16, 15, 16, 7, 16},\n   {\"geode\", &geode_cost, 0, 0, 0, 0, 0},\n   {\"k6\", &k6_cost, 32, 7, 32, 7, 32},\n@@ -3445,6 +3447,8 @@ ix86_option_override_internal (bool main_args_p,\n   const wide_int_bitmask PTA_VPCLMULQDQ (0, HOST_WIDE_INT_1U << 4);\n   const wide_int_bitmask PTA_AVX512BITALG (0, HOST_WIDE_INT_1U << 5);\n   const wide_int_bitmask PTA_RDPID (0, HOST_WIDE_INT_1U << 6);\n+  const wide_int_bitmask PTA_PCONFIG (0, HOST_WIDE_INT_1U << 7);\n+  const wide_int_bitmask PTA_WBNOINVD (0, HOST_WIDE_INT_1U << 8);\n \n   const wide_int_bitmask PTA_CORE2 = PTA_64BIT | PTA_MMX | PTA_SSE | PTA_SSE2\n     | PTA_SSE3 | PTA_SSSE3 | PTA_CX16 | PTA_FXSR;\n@@ -3460,16 +3464,18 @@ ix86_option_override_internal (bool main_args_p,\n   const wide_int_bitmask PTA_BROADWELL = PTA_HASWELL | PTA_ADX | PTA_PRFCHW\n     | PTA_RDSEED;\n   const wide_int_bitmask PTA_SKYLAKE = PTA_BROADWELL | PTA_CLFLUSHOPT\n-    | PTA_XSAVEC | PTA_XSAVES;\n+    | PTA_XSAVEC | PTA_XSAVES | PTA_SGX;\n   const wide_int_bitmask PTA_SKYLAKE_AVX512 = PTA_SKYLAKE | PTA_AVX512F\n     | PTA_AVX512CD | PTA_AVX512VL | PTA_AVX512BW | PTA_AVX512DQ | PTA_PKU\n     | PTA_CLWB;\n   const wide_int_bitmask PTA_CANNONLAKE = PTA_SKYLAKE | PTA_AVX512F\n     | PTA_AVX512CD | PTA_AVX512VL | PTA_AVX512BW | PTA_AVX512DQ | PTA_PKU\n     | PTA_AVX512VBMI | PTA_AVX512IFMA | PTA_SHA;\n-  const wide_int_bitmask PTA_ICELAKE = PTA_CANNONLAKE | PTA_AVX512VNNI\n+  const wide_int_bitmask PTA_ICELAKE_CLIENT = PTA_CANNONLAKE | PTA_AVX512VNNI\n     | PTA_GFNI | PTA_VAES | PTA_AVX512VBMI2 | PTA_VPCLMULQDQ | PTA_AVX512BITALG\n-    | PTA_RDPID;\n+    | PTA_RDPID | PTA_CLWB;\n+  const wide_int_bitmask PTA_ICELAKE_SERVER = PTA_ICELAKE_CLIENT | PTA_PCONFIG\n+    | PTA_WBNOINVD;\n   const wide_int_bitmask PTA_KNL = PTA_BROADWELL | PTA_AVX512PF | PTA_AVX512ER\n     | PTA_AVX512F | PTA_AVX512CD;\n   const wide_int_bitmask PTA_BONNELL = PTA_CORE2 | PTA_MOVBE;\n@@ -3541,7 +3547,10 @@ ix86_option_override_internal (bool main_args_p,\n       {\"skylake-avx512\", PROCESSOR_SKYLAKE_AVX512, CPU_HASWELL,\n         PTA_SKYLAKE_AVX512},\n       {\"cannonlake\", PROCESSOR_SKYLAKE_AVX512, CPU_HASWELL, PTA_CANNONLAKE},\n-      {\"icelake\", PROCESSOR_SKYLAKE_AVX512, CPU_HASWELL, PTA_ICELAKE},\n+      {\"icelake-client\", PROCESSOR_ICELAKE_CLIENT, CPU_HASWELL,\n+\tPTA_ICELAKE_CLIENT},\n+      {\"icelake-server\", PROCESSOR_ICELAKE_SERVER, CPU_HASWELL,\n+\tPTA_ICELAKE_SERVER},\n       {\"bonnell\", PROCESSOR_BONNELL, CPU_ATOM, PTA_BONNELL},\n       {\"atom\", PROCESSOR_BONNELL, CPU_ATOM, PTA_BONNELL},\n       {\"silvermont\", PROCESSOR_SILVERMONT, CPU_SLM, PTA_SILVERMONT},\n@@ -4150,6 +4159,12 @@ ix86_option_override_internal (bool main_args_p,\n \tif (((processor_alias_table[i].flags & PTA_RDPID) != 0)\n \t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_RDPID))\n \t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_RDPID;\n+\tif (((processor_alias_table[i].flags & PTA_PCONFIG) != 0)\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_PCONFIG))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_PCONFIG;\n+\tif (((processor_alias_table[i].flags & PTA_WBNOINVD) != 0)\n+\t    && !(opts->x_ix86_isa_flags2_explicit & OPTION_MASK_ISA_WBNOINVD))\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_WBNOINVD;\n \n \tif ((processor_alias_table[i].flags\n \t   & (PTA_PREFETCH_SSE | PTA_SSE)) != 0)\n@@ -32376,9 +32391,7 @@ get_builtin_code_for_version (tree decl, tree *predicate_list)\n \t      break;\n \t    case PROCESSOR_HASWELL:\n \t    case PROCESSOR_SKYLAKE_AVX512:\n-\t      if (new_target->x_ix86_isa_flags & OPTION_MASK_ISA_GFNI)\n-\t\targ_str = \"icelake\";\n-\t      else if (new_target->x_ix86_isa_flags\n+\t      if (new_target->x_ix86_isa_flags\n \t\t\t& OPTION_MASK_ISA_AVX512VBMI)\n \t\targ_str = \"cannonlake\";\n \t      else if (new_target->x_ix86_isa_flags & OPTION_MASK_ISA_AVX512VL)\n@@ -32391,6 +32404,14 @@ get_builtin_code_for_version (tree decl, tree *predicate_list)\n \t\targ_str = \"haswell\";\n \t      priority = P_PROC_AVX2;\n \t      break;\n+\t    case PROCESSOR_ICELAKE_CLIENT:\n+\t      arg_str = \"icelake-client\";\n+\t      priority = P_PROC_AVX2;\n+\t      break;\n+\t    case PROCESSOR_ICELAKE_SERVER:\n+\t      arg_str = \"icelake-server\";\n+\t      priority = P_PROC_AVX2;\n+\t      break;\n \t    case PROCESSOR_BONNELL:\n \t      arg_str = \"bonnell\";\n \t      priority = P_PROC_SSSE3;\n@@ -33105,7 +33126,8 @@ fold_builtin_cpu (tree fndecl, tree *args)\n     M_INTEL_COREI7_SKYLAKE,\n     M_INTEL_COREI7_SKYLAKE_AVX512,\n     M_INTEL_COREI7_CANNONLAKE,\n-    M_INTEL_COREI7_ICELAKE\n+    M_INTEL_COREI7_ICELAKE_CLIENT,\n+    M_INTEL_COREI7_ICELAKE_SERVER\n   };\n \n   static struct _arch_names_table\n@@ -33130,7 +33152,8 @@ fold_builtin_cpu (tree fndecl, tree *args)\n       {\"skylake\", M_INTEL_COREI7_SKYLAKE},\n       {\"skylake-avx512\", M_INTEL_COREI7_SKYLAKE_AVX512},\n       {\"cannonlake\", M_INTEL_COREI7_CANNONLAKE},\n-      {\"icelake\", M_INTEL_COREI7_ICELAKE},\n+      {\"icelake-client\", M_INTEL_COREI7_ICELAKE_CLIENT},\n+      {\"icelake-server\", M_INTEL_COREI7_ICELAKE_SERVER},\n       {\"bonnell\", M_INTEL_BONNELL},\n       {\"silvermont\", M_INTEL_SILVERMONT},\n       {\"knl\", M_INTEL_KNL},"}, {"sha": "7f4b04f421dbbc9184857b101d5d94fcd305ed24", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79ab536427e403df631eb3ed3480c6330b2ff898/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79ab536427e403df631eb3ed3480c6330b2ff898/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=79ab536427e403df631eb3ed3480c6330b2ff898", "patch": "@@ -387,7 +387,8 @@ extern const struct processor_costs ix86_size_cost;\n #define TARGET_KNM (ix86_tune == PROCESSOR_KNM)\n #define TARGET_SKYLAKE_AVX512 (ix86_tune == PROCESSOR_SKYLAKE_AVX512)\n #define TARGET_CANNONLAKE (ix86_tune == PROCESSOR_CANNONLAKE)\n-#define TARGET_ICELAKE (ix86_tune == PROCESSOR_ICELAKE)\n+#define TARGET_ICELAKE_CLIENT (ix86_tune == PROCESSOR_ICELAKE_CLIENT)\n+#define TARGET_ICELAKE_SERVER (ix86_tune == PROCESSOR_ICELAKE_SERVER)\n #define TARGET_INTEL (ix86_tune == PROCESSOR_INTEL)\n #define TARGET_GENERIC (ix86_tune == PROCESSOR_GENERIC)\n #define TARGET_AMDFAM10 (ix86_tune == PROCESSOR_AMDFAM10)\n@@ -2268,7 +2269,8 @@ enum processor_type\n   PROCESSOR_KNM,\n   PROCESSOR_SKYLAKE_AVX512,\n   PROCESSOR_CANNONLAKE,\n-  PROCESSOR_ICELAKE,\n+  PROCESSOR_ICELAKE_CLIENT,\n+  PROCESSOR_ICELAKE_SERVER,\n   PROCESSOR_INTEL,\n   PROCESSOR_GEODE,\n   PROCESSOR_K6,"}, {"sha": "8354d47bc8a4c9dc76372cfde781fd703a263d3a", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79ab536427e403df631eb3ed3480c6330b2ff898/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79ab536427e403df631eb3ed3480c6330b2ff898/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=79ab536427e403df631eb3ed3480c6330b2ff898", "patch": "@@ -26559,14 +26559,23 @@ RDRND, FMA, BMI, BMI2, F16C, RDSEED, ADCX, PREFETCHW, CLFLUSHOPT, XSAVEC,\n XSAVES, AVX512F, AVX512VL, AVX512BW, AVX512DQ, AVX512CD, AVX512VBMI,\n AVX512IFMA, SHA, CLWB and UMIP instruction set support.\n \n-@item Icelake\n-Intel Icelake Server CPU with 64-bit extensions, MOVBE, MMX, SSE, SSE2,\n+@item icelake-client\n+Intel Icelake Client CPU with 64-bit extensions, MOVBE, MMX, SSE, SSE2,\n SSE3, SSSE3, SSE4.1, SSE4.2, POPCNT, PKU, AVX, AVX2, AES, PCLMUL, FSGSBASE,\n RDRND, FMA, BMI, BMI2, F16C, RDSEED, ADCX, PREFETCHW, CLFLUSHOPT, XSAVEC,\n XSAVES, AVX512F, AVX512VL, AVX512BW, AVX512DQ, AVX512CD, AVX512VBMI,\n AVX512IFMA, SHA, CLWB, UMIP, RDPID, GFNI, AVX512VBMI2, AVX512VPOPCNTDQ,\n AVX512BITALG, AVX512VNNI, VPCLMULQDQ, VAES instruction set support.\n \n+@item icelake-server\n+Intel Icelake Server CPU with 64-bit extensions, MOVBE, MMX, SSE, SSE2,\n+SSE3, SSSE3, SSE4.1, SSE4.2, POPCNT, PKU, AVX, AVX2, AES, PCLMUL, FSGSBASE,\n+RDRND, FMA, BMI, BMI2, F16C, RDSEED, ADCX, PREFETCHW, CLFLUSHOPT, XSAVEC,\n+XSAVES, AVX512F, AVX512VL, AVX512BW, AVX512DQ, AVX512CD, AVX512VBMI,\n+AVX512IFMA, SHA, CLWB, UMIP, RDPID, GFNI, AVX512VBMI2, AVX512VPOPCNTDQ,\n+AVX512BITALG, AVX512VNNI, VPCLMULQDQ, VAES, PCONFIG and WBNOINVD instruction\n+set support.\n+\n @item k6\n AMD K6 CPU with MMX instruction set support.\n "}, {"sha": "187cc6bc5c8b0ca22e02c23aabe88f46a20e89d8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79ab536427e403df631eb3ed3480c6330b2ff898/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79ab536427e403df631eb3ed3480c6330b2ff898/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=79ab536427e403df631eb3ed3480c6330b2ff898", "patch": "@@ -1,3 +1,9 @@\n+2018-03-14  Julia Koval  <julia.koval@intel.com>\n+\n+\t* g++.dg/ext/mv16.C: Split up icelake on icelake client and icelake\n+\tserver.\n+\t* gcc.target/i386/funcspec-56.inc: Ditto.\n+\n 2018-03-14  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* gcc.target/aarch64/sve/mul_highpart_1_run.c: Restrict to"}, {"sha": "3e7c228a7f13b4ebcb88d48973ec598bc06c8d97", "filename": "gcc/testsuite/g++.dg/ext/mv16.C", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79ab536427e403df631eb3ed3480c6330b2ff898/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79ab536427e403df631eb3ed3480c6330b2ff898/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv16.C?ref=79ab536427e403df631eb3ed3480c6330b2ff898", "patch": "@@ -60,10 +60,14 @@ int __attribute__ ((target(\"arch=cannonlake\"))) foo () {\n   return 16;\n }\n \n-int __attribute__ ((target(\"arch=icelake\"))) foo () {\n+int __attribute__ ((target(\"arch=icelake-client\"))) foo () {\n   return 17;\n }\n \n+int __attribute__ ((target(\"arch=icelake-server\"))) foo () {\n+  return 18;\n+}\n+\n int main ()\n {\n   int val = foo ();\n@@ -86,8 +90,10 @@ int main ()\n     assert (val == 15);\n   else if (__builtin_cpu_is (\"cannonlake\"))\n     assert (val == 16);\n-  else if (__builtin_cpu_is (\"icelake\"))\n+  else if (__builtin_cpu_is (\"icelake-client\"))\n     assert (val == 17);\n+  else if (__builtin_cpu_is (\"icelake-server\"))\n+    assert (val == 18);\n   else\n     assert (val == 0);\n "}, {"sha": "35b287a6d781c624536e160c5463ac360b25ed49", "filename": "gcc/testsuite/gcc.target/i386/funcspec-56.inc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79ab536427e403df631eb3ed3480c6330b2ff898/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-56.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79ab536427e403df631eb3ed3480c6330b2ff898/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-56.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-56.inc?ref=79ab536427e403df631eb3ed3480c6330b2ff898", "patch": "@@ -145,7 +145,8 @@ extern void test_arch_knl (void)\t\t__attribute__((__target__(\"arch=knl\")));\n extern void test_arch_knm (void)\t\t__attribute__((__target__(\"arch=knm\")));\n extern void test_arch_skylake_avx512 (void)\t__attribute__((__target__(\"arch=skylake-avx512\")));\n extern void test_arch_cannonlake (void)\t\t__attribute__((__target__(\"arch=cannonlake\")));\n-extern void test_arch_icelake (void)\t\t__attribute__((__target__(\"arch=icelake\")));\n+extern void test_arch_icelake_client (void)\t__attribute__((__target__(\"arch=icelake-client\")));\n+extern void test_arch_icelake_server (void)\t__attribute__((__target__(\"arch=icelake-server\")));\n extern void test_arch_k8 (void)\t\t\t__attribute__((__target__(\"arch=k8\")));\n extern void test_arch_k8_sse3 (void)\t\t__attribute__((__target__(\"arch=k8-sse3\")));\n extern void test_arch_opteron (void)\t\t__attribute__((__target__(\"arch=opteron\")));"}, {"sha": "88641125942501d57ae0ff61ab662a77b3964d00", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79ab536427e403df631eb3ed3480c6330b2ff898/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79ab536427e403df631eb3ed3480c6330b2ff898/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=79ab536427e403df631eb3ed3480c6330b2ff898", "patch": "@@ -1,3 +1,8 @@\n+2018-03-14  Julia Koval  <julia.koval@intel.com>\n+\n+\t* config/i386/cpuinfo.h (processor_subtypes): Split up icelake on\n+\ticelake client and icelake server.\n+\n 2018-03-06  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* config/pa/fptr.c (_dl_read_access_allowed): New."}, {"sha": "17e2abf2a00dccdfdb2ba41fb327904db6180623", "filename": "libgcc/config/i386/cpuinfo.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79ab536427e403df631eb3ed3480c6330b2ff898/libgcc%2Fconfig%2Fi386%2Fcpuinfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79ab536427e403df631eb3ed3480c6330b2ff898/libgcc%2Fconfig%2Fi386%2Fcpuinfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fcpuinfo.h?ref=79ab536427e403df631eb3ed3480c6330b2ff898", "patch": "@@ -70,7 +70,8 @@ enum processor_subtypes\n   INTEL_COREI7_SKYLAKE,\n   INTEL_COREI7_SKYLAKE_AVX512,\n   INTEL_COREI7_CANNONLAKE,\n-  INTEL_COREI7_ICELAKE,\n+  INTEL_COREI7_ICELAKE_CLIENT,\n+  INTEL_COREI7_ICELAKE_SERVER,\n   CPU_SUBTYPE_MAX\n };\n "}]}