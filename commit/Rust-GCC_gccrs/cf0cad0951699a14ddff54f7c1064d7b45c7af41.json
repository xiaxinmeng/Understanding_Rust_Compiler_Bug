{"sha": "cf0cad0951699a14ddff54f7c1064d7b45c7af41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YwY2FkMDk1MTY5OWExNGRkZmY1NGY3YzEwNjRkN2I0NWM3YWY0MQ==", "commit": {"author": {"name": "Jerry Quinn", "email": "jlquinn@optonline.net", "date": "2003-07-01T02:55:20Z"}, "committer": {"name": "Jerry Quinn", "email": "jlquinn@gcc.gnu.org", "date": "2003-07-01T02:55:20Z"}, "message": "locale.cc (__use_cache<numpunct>): Move from here ...\n\n2003-06-27  Jerry Quinn  <jlquinn@optonline.net>\n\n\t* src/locale.cc (__use_cache<numpunct>): Move from here ...\n\t* include/bits/locale_facets.tcc (__use_cache<numpunct>): To\n\there.\n\nFrom-SVN: r68756", "tree": {"sha": "845f2b61057809f72833b06022b9a82851ba0179", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/845f2b61057809f72833b06022b9a82851ba0179"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf0cad0951699a14ddff54f7c1064d7b45c7af41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf0cad0951699a14ddff54f7c1064d7b45c7af41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf0cad0951699a14ddff54f7c1064d7b45c7af41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf0cad0951699a14ddff54f7c1064d7b45c7af41/comments", "author": {"login": "jlquinn", "id": 826841, "node_id": "MDQ6VXNlcjgyNjg0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/826841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlquinn", "html_url": "https://github.com/jlquinn", "followers_url": "https://api.github.com/users/jlquinn/followers", "following_url": "https://api.github.com/users/jlquinn/following{/other_user}", "gists_url": "https://api.github.com/users/jlquinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlquinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlquinn/subscriptions", "organizations_url": "https://api.github.com/users/jlquinn/orgs", "repos_url": "https://api.github.com/users/jlquinn/repos", "events_url": "https://api.github.com/users/jlquinn/events{/privacy}", "received_events_url": "https://api.github.com/users/jlquinn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de1f5659248e9669c28f5ab22583894b3e55d7e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de1f5659248e9669c28f5ab22583894b3e55d7e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de1f5659248e9669c28f5ab22583894b3e55d7e1"}], "stats": {"total": 68, "additions": 32, "deletions": 36}, "files": [{"sha": "7b5eea6d24760372f99128efa094f4f0683b7600", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf0cad0951699a14ddff54f7c1064d7b45c7af41/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf0cad0951699a14ddff54f7c1064d7b45c7af41/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=cf0cad0951699a14ddff54f7c1064d7b45c7af41", "patch": "@@ -1,3 +1,9 @@\n+2003-06-27  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\t* src/locale.cc (__use_cache<numpunct>): Move from here ...\n+\t* include/bits/locale_facets.tcc (__use_cache<numpunct>): To\n+\there.\n+\n 2003-06-30  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/bits/stl_algobase.h: Fully qualify standard"}, {"sha": "6a3881652d2f9f3ccc5f20fbbbc65ebbdef246dd", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf0cad0951699a14ddff54f7c1064d7b45c7af41/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf0cad0951699a14ddff54f7c1064d7b45c7af41/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=cf0cad0951699a14ddff54f7c1064d7b45c7af41", "patch": "@@ -93,13 +93,35 @@ namespace std\n     __use_cache(const locale& __loc);\n \n   template<>\n-    const __numpunct_cache<char>&\n-    __use_cache(const locale& __loc);\n+    inline const __numpunct_cache<char>&\n+    __use_cache(const locale& __loc)\n+    {\n+      size_t __i = numpunct<char>::id._M_id();\n+      const locale::facet** __caches = __loc._M_impl->_M_caches;\n+      if (!__caches[__i])\n+\t{\n+\t  __numpunct_cache<char>* __tmp = new __numpunct_cache<char>;\n+\t  __tmp->_M_cache(__loc);\n+\t  __loc._M_impl->_M_install_cache(__tmp, __i);\n+\t}\n+      return static_cast<const __numpunct_cache<char>&>(*__caches[__i]);\n+    }\n \n #ifdef _GLIBCPP_USE_WCHAR_T\n   template<>\n-    const __numpunct_cache<wchar_t>&\n-    __use_cache(const locale& __loc);\n+    inline const __numpunct_cache<wchar_t>&\n+    __use_cache(const locale& __loc)\n+    {\n+      size_t __i = numpunct<wchar_t>::id._M_id();\n+      const locale::facet** __caches = __loc._M_impl->_M_caches;\n+      if (!__caches[__i])\n+\t{\n+\t  __numpunct_cache<wchar_t>* __tmp = new __numpunct_cache<wchar_t>;\n+\t  __tmp->_M_cache(__loc);\n+\t  __loc._M_impl->_M_install_cache(__tmp, __i);\n+\t}\n+      return static_cast<const __numpunct_cache<wchar_t>&>(*__caches[__i]);\n+    }\n #endif\n \n   // Stage 1: Determine a conversion specifier."}, {"sha": "8cb89e5677288090fe3bf5f770de2fa6c8860ccb", "filename": "libstdc++-v3/src/locale.cc", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf0cad0951699a14ddff54f7c1064d7b45c7af41/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf0cad0951699a14ddff54f7c1064d7b45c7af41/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc?ref=cf0cad0951699a14ddff54f7c1064d7b45c7af41", "patch": "@@ -449,38 +449,6 @@ namespace std\n   locale::facet::\n   ~facet() { }\n \n-  template<>\n-    const __numpunct_cache<char>&\n-    __use_cache(const locale& __loc)\n-    {\n-      size_t __i = numpunct<char>::id._M_id();\n-      const locale::facet** __caches = __loc._M_impl->_M_caches;\n-      if (!__caches[__i])\n-\t{\n-\t  __numpunct_cache<char>* __tmp = new __numpunct_cache<char>;\n-\t  __tmp->_M_cache(__loc);\n-\t  __loc._M_impl->_M_install_cache(__tmp, __i);\n-\t}\n-      return static_cast<const __numpunct_cache<char>&>(*__caches[__i]);\n-    }\n-\n-#ifdef _GLIBCPP_USE_WCHAR_T\n-  template<>\n-    const __numpunct_cache<wchar_t>&\n-    __use_cache(const locale& __loc)\n-    {\n-      size_t __i = numpunct<wchar_t>::id._M_id();\n-      const locale::facet** __caches = __loc._M_impl->_M_caches;\n-      if (!__caches[__i])\n-\t{\n-\t  __numpunct_cache<wchar_t>* __tmp = new __numpunct_cache<wchar_t>;\n-\t  __tmp->_M_cache(__loc);\n-\t  __loc._M_impl->_M_install_cache(__tmp, __i);\n-\t}\n-      return static_cast<const __numpunct_cache<wchar_t>&>(*__caches[__i]);\n-    }\n-#endif\n-\n   // Definitions for static const data members of time_base\n   template<> \n     const char*"}]}