{"sha": "7c154ecc12c064ba3b154d1d27be6f19dbd0c294", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MxNTRlY2MxMmMwNjRiYTNiMTU0ZDFkMjdiZTZmMTlkYmQwYzI5NA==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2015-12-21T15:44:32Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2015-12-21T15:44:32Z"}, "message": "DWARF: allow dynamic data member offsets for inheritance info\n\nAn unintended effect of the recently introduced machinery to handle\ndynamic data member offsets in variable-length records (when\n-fgnat-encodings=minimal) prevented GCC from describing correctly\ninheritance information for classes in C++, which is a regression.\n\nThis change rectifies this machinery in this case.\n\ngcc/ChangeLog:\n\n\t* dwarf2out.c (add_data_member_location_attribute): Do not\n\tdisable dynamic data member offsets descriptions for TREE_BINFO\n\tmembers.\n\nFrom-SVN: r231883", "tree": {"sha": "2b4f5b779981a2c8031bb382bc23cca7247f9046", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b4f5b779981a2c8031bb382bc23cca7247f9046"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c154ecc12c064ba3b154d1d27be6f19dbd0c294", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c154ecc12c064ba3b154d1d27be6f19dbd0c294", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c154ecc12c064ba3b154d1d27be6f19dbd0c294", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c154ecc12c064ba3b154d1d27be6f19dbd0c294/comments", "author": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "059fbfa82ba0eeb405af29b96068edd97d26557a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/059fbfa82ba0eeb405af29b96068edd97d26557a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/059fbfa82ba0eeb405af29b96068edd97d26557a"}], "stats": {"total": 28, "additions": 17, "deletions": 11}, "files": [{"sha": "c7626ffc116166a3dc3e025a34a39e40bb959a2e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c154ecc12c064ba3b154d1d27be6f19dbd0c294/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c154ecc12c064ba3b154d1d27be6f19dbd0c294/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c154ecc12c064ba3b154d1d27be6f19dbd0c294", "patch": "@@ -1,3 +1,9 @@\n+2015-12-21  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* dwarf2out.c (add_data_member_location_attribute): Do not\n+\tdisable dynamic data member offsets descriptions for TREE_BINFO\n+\tmembers.\n+\n 2015-12-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR tree-optimization/65337"}, {"sha": "0a5cc54ad4e5328ab5d5cfa4058fdb69c4158d88", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c154ecc12c064ba3b154d1d27be6f19dbd0c294/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c154ecc12c064ba3b154d1d27be6f19dbd0c294/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=7c154ecc12c064ba3b154d1d27be6f19dbd0c294", "patch": "@@ -16727,21 +16727,21 @@ add_data_member_location_attribute (dw_die_ref die,\n     {\n       loc_descr = field_byte_offset (decl, ctx, &offset);\n \n-      /* Data member location evalutation start with the base address on the\n+      /* If loc_descr is available then we know the field offset is dynamic.\n+\t However, GDB does not handle dynamic field offsets very well at the\n+\t moment.  */\n+      if (loc_descr != NULL && gnat_encodings != DWARF_GNAT_ENCODINGS_MINIMAL)\n+\t{\n+\t  loc_descr = NULL;\n+\t  offset = 0;\n+\t}\n+\n+      /* Data member location evalutation starts with the base address on the\n \t stack.  Compute the field offset and add it to this base address.  */\n-      if (loc_descr != NULL)\n+      else if (loc_descr != NULL)\n \tadd_loc_descr (&loc_descr, new_loc_descr (DW_OP_plus, 0, 0));\n     }\n \n-  /* If loc_descr is available then we know the field offset is dynamic.\n-     However, GDB does not handle dynamic field offsets very well at the\n-     moment.  */\n-  if (loc_descr != NULL && gnat_encodings != DWARF_GNAT_ENCODINGS_MINIMAL)\n-    {\n-      loc_descr = NULL;\n-      offset = 0;\n-    }\n-\n   if (! loc_descr)\n     {\n       if (dwarf_version > 2)"}]}