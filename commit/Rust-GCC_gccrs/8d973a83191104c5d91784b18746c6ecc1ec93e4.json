{"sha": "8d973a83191104c5d91784b18746c6ecc1ec93e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ5NzNhODMxOTExMDRjNWQ5MTc4NGIxODc0NmM2ZWNjMWVjOTNlNA==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2003-07-21T20:57:00Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-07-21T20:57:00Z"}, "message": "cppfiles.c (open_file_pch): Don't put unused entries in the splay tree.\n\n\t* cppfiles.c (open_file_pch): Don't put unused entries in the\n\tsplay tree.  Remove dead code.\n\nFrom-SVN: r69647", "tree": {"sha": "674adcaf0128de80bee8dbee7f6f2926e383d19a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/674adcaf0128de80bee8dbee7f6f2926e383d19a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d973a83191104c5d91784b18746c6ecc1ec93e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d973a83191104c5d91784b18746c6ecc1ec93e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d973a83191104c5d91784b18746c6ecc1ec93e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d973a83191104c5d91784b18746c6ecc1ec93e4/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "49a64b24626e87167c98713e8403811806f61dcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49a64b24626e87167c98713e8403811806f61dcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49a64b24626e87167c98713e8403811806f61dcf"}], "stats": {"total": 68, "additions": 35, "deletions": 33}, "files": [{"sha": "87b9cc2d44ffd11387c3c4c01bf926817ad2bcbc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d973a83191104c5d91784b18746c6ecc1ec93e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d973a83191104c5d91784b18746c6ecc1ec93e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d973a83191104c5d91784b18746c6ecc1ec93e4", "patch": "@@ -1,3 +1,8 @@\n+2003-07-21  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* cppfiles.c (open_file_pch): Don't put unused entries in the\n+\tsplay tree.  Remove dead code.\n+\n 2003-07-21  Geoffrey Keating  <geoffk@apple.com>\n \n \t* c-pragma.c (maybe_apply_pragma_weak): Don't get DECL_ASSEMBLER_NAME"}, {"sha": "9b0d5d05eb3daecb0c586c30e6d66e2b8c770e04", "filename": "gcc/cppfiles.c", "status": "modified", "additions": 30, "deletions": 33, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d973a83191104c5d91784b18746c6ecc1ec93e4/gcc%2Fcppfiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d973a83191104c5d91784b18746c6ecc1ec93e4/gcc%2Fcppfiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppfiles.c?ref=8d973a83191104c5d91784b18746c6ecc1ec93e4", "patch": "@@ -301,50 +301,47 @@ open_file_pch (cpp_reader *pfile, const char *filename)\n     {\n       size_t namelen = strlen (filename);\n       char *pchname = alloca (namelen + 5);\n-      struct include_file * file;\n-      splay_tree_node nd;\n+      struct include_file *file = NULL;\n+      struct stat st;\n       \n       memcpy (pchname, filename, namelen);\n       memcpy (pchname + namelen, \".gch\", 5);\n+      cpp_simplify_path (pchname);\n \n-      nd = find_or_create_entry (pfile, pchname);\n-      file = (struct include_file *) nd->value;\n-\n-      if (file != NULL)\n+      if (stat (pchname, &st) == 0 && S_ISDIR (st.st_mode))\n \t{\n-\t  if (stat (file->name, &file->st) == 0 && S_ISDIR (file->st.st_mode))\n-\t    {\n-\t      DIR * thedir;\n-\t      struct dirent *d;\n-\t      size_t subname_len = namelen + 64;\n-\t      char *subname = xmalloc (subname_len);\n+\t  DIR * thedir;\n+\t  struct dirent *d;\n+\t  size_t subname_len = namelen + 64;\n+\t  char *subname = xmalloc (subname_len);\n \t      \n-\t      thedir = opendir (pchname);\n-\t      if (thedir == NULL)\n-\t\treturn NULL;\n-\t      memcpy (subname, pchname, namelen + 4);\n-\t      subname[namelen+4] = '/';\n-\t      while ((d = readdir (thedir)) != NULL)\n+\t  thedir = opendir (pchname);\n+\t  if (thedir == NULL)\n+\t    return NULL;\n+\t  memcpy (subname, pchname, namelen + 4);\n+\t  subname[namelen+4] = '/';\n+\t  while ((d = readdir (thedir)) != NULL)\n+\t    {\n+\t      if (strlen (d->d_name) + namelen + 7 > subname_len)\n \t\t{\n-\t\t  if (strlen (d->d_name) + namelen + 7 > subname_len)\n-\t\t    {\n-\t\t      subname_len = strlen (d->d_name) + namelen + 64;\n-\t\t      subname = xrealloc (subname, subname_len);\n-\t\t    }\n-\t\t  strcpy (subname + namelen + 5, d->d_name);\n-\t\t  file = validate_pch (pfile, filename, subname);\n-\t\t  if (file)\n-\t\t    break;\n+\t\t  subname_len = strlen (d->d_name) + namelen + 64;\n+\t\t  subname = xrealloc (subname, subname_len);\n \t\t}\n-\t      closedir (thedir);\n-\t      free (subname);\n+\t      strcpy (subname + namelen + 5, d->d_name);\n+\t      file = validate_pch (pfile, filename, subname);\n+\t      if (file)\n+\t\tbreak;\n \t    }\n-\t  else\n-\t    file = validate_pch (pfile, filename, pchname);\n-\t  if (file)\n-\t    return file;\n+\t  closedir (thedir);\n+\t  free (subname);\n \t}\n+      else\n+\tfile = validate_pch (pfile, filename, pchname);\n+\n+      if (file)\n+\treturn file;\n     }\n+\n   return open_file (pfile, filename);\n }\n "}]}