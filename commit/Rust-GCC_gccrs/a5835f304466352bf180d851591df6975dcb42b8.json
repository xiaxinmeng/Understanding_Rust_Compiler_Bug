{"sha": "a5835f304466352bf180d851591df6975dcb42b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU4MzVmMzA0NDY2MzUyYmYxODBkODUxNTkxZGY2OTc1ZGNiNDJiOA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-04-28T18:51:51Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-19T08:17:13Z"}, "message": "[Ada] Remove second warning for convention C_Variadic_n\n\n2020-06-19  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* sem_prag.adb (Process_Convention): Revert previous change.", "tree": {"sha": "0b6222956fdfd164b39dfe241b8c1228bcf7b2ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b6222956fdfd164b39dfe241b8c1228bcf7b2ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5835f304466352bf180d851591df6975dcb42b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5835f304466352bf180d851591df6975dcb42b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5835f304466352bf180d851591df6975dcb42b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5835f304466352bf180d851591df6975dcb42b8/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec170be1d06841841ef2fbcbab7ae14cf8571d5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec170be1d06841841ef2fbcbab7ae14cf8571d5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec170be1d06841841ef2fbcbab7ae14cf8571d5a"}], "stats": {"total": 13, "additions": 2, "deletions": 11}, "files": [{"sha": "b3d128b37b38fddb05dc18664335b6ca041769f4", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5835f304466352bf180d851591df6975dcb42b8/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5835f304466352bf180d851591df6975dcb42b8/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=a5835f304466352bf180d851591df6975dcb42b8", "patch": "@@ -8304,7 +8304,8 @@ package body Sem_Prag is\n                  (\"??C_Variadic_0 cannot be used for an 'I'S'O C function\",\n                   Get_Pragma_Arg (Arg2));\n \n-            --  Now check the number of parameters of the subprogram\n+            --  Now check the number of parameters of the subprogram and give\n+            --  an error if it is lower than n.\n \n             elsif Present (Subp) then\n                declare\n@@ -8323,21 +8324,11 @@ package body Sem_Prag is\n                      Next_Formal (Formal);\n                   end loop;\n \n-                  --  Error out if the number of parameters is lower than n\n-\n                   if Count < Minimum then\n                      Error_Msg_Uint_1 := UI_From_Int (Minimum);\n                      Error_Pragma_Arg\n                        (\"argument of pragma% must have at least\"\n                         & \"^ parameters\", Arg2);\n-\n-                  --  But warn if it is exactly n because this is useless\n-\n-                  elsif Count = Minimum then\n-                     Error_Msg_Uint_1 := UI_From_Int (Minimum + 1);\n-                     Error_Msg_N\n-                       (\"??subprogram should have at least ^ parameters\",\n-                        Get_Pragma_Arg (Arg2));\n                   end if;\n                end;\n             end if;"}]}