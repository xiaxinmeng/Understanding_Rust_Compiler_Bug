{"sha": "04a1b79c3999ec7b2c0d3cbfa9f924baab709b1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRhMWI3OWMzOTk5ZWM3YjJjMGQzY2JmYTlmOTI0YmFhYjcwOWIxZQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@gnat.com", "date": "2001-10-31T00:54:36Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-10-31T00:54:36Z"}, "message": "* style.adb:\n\n\t(Check_Identifier): Rewrite circuit to be compatible with use of letters\n\tin the upper half of ASCII.\n\t(Check_Identifier): Minor reformatting\n\nFrom-SVN: r46667", "tree": {"sha": "2494f570aaeb3001f13173309185d4891cd9c34b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2494f570aaeb3001f13173309185d4891cd9c34b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04a1b79c3999ec7b2c0d3cbfa9f924baab709b1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04a1b79c3999ec7b2c0d3cbfa9f924baab709b1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04a1b79c3999ec7b2c0d3cbfa9f924baab709b1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04a1b79c3999ec7b2c0d3cbfa9f924baab709b1e/comments", "author": null, "committer": null, "parents": [{"sha": "81fa2d3951b2d950802c37a5cf03fa23ad9d8789", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81fa2d3951b2d950802c37a5cf03fa23ad9d8789", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81fa2d3951b2d950802c37a5cf03fa23ad9d8789"}], "stats": {"total": 70, "additions": 49, "deletions": 21}, "files": [{"sha": "61a26357670bf2f1921df23557a11e4ae637c5cf", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04a1b79c3999ec7b2c0d3cbfa9f924baab709b1e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04a1b79c3999ec7b2c0d3cbfa9f924baab709b1e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=04a1b79c3999ec7b2c0d3cbfa9f924baab709b1e", "patch": "@@ -1,3 +1,10 @@\n+2001-10-30  Robert Dewar <dewar@gnat.com>\n+\n+\t* style.adb:\n+\t(Check_Identifier): Rewrite circuit to be compatible with use of letters\n+\tin the upper half of ASCII.\n+\t(Check_Identifier): Minor reformatting\n+\n 2001-10-30  Geert Bosch <bosch@gnat.com>\n \n \t* (Associated_Node, Set_Associated_Node): Do not check for "}, {"sha": "9b74d61477496417bec38d31dca5399e26263152", "filename": "gcc/ada/style.adb", "status": "modified", "additions": 42, "deletions": 21, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04a1b79c3999ec7b2c0d3cbfa9f924baab709b1e/gcc%2Fada%2Fstyle.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04a1b79c3999ec7b2c0d3cbfa9f924baab709b1e/gcc%2Fada%2Fstyle.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyle.adb?ref=04a1b79c3999ec7b2c0d3cbfa9f924baab709b1e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.48 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -409,10 +409,10 @@ package body Style is\n      (Ref : Node_Or_Entity_Id;\n       Def : Node_Or_Entity_Id)\n    is\n-      SRef : Source_Ptr := Sloc (Ref);\n-      SDef : Source_Ptr := Sloc (Def);\n-      TRef : Source_Buffer_Ptr;\n-      TDef : Source_Buffer_Ptr;\n+      Sref : Source_Ptr := Sloc (Ref);\n+      Sdef : Source_Ptr := Sloc (Def);\n+      Tref : Source_Buffer_Ptr;\n+      Tdef : Source_Buffer_Ptr;\n       Nlen : Nat;\n       Cas  : Casing_Type;\n \n@@ -429,45 +429,66 @@ package body Style is\n          --  Check same casing if we are checking references\n \n          if Style_Check_References then\n-            TRef := Source_Text (Get_Source_File_Index (SRef));\n-            TDef := Source_Text (Get_Source_File_Index (SDef));\n+            Tref := Source_Text (Get_Source_File_Index (Sref));\n+            Tdef := Source_Text (Get_Source_File_Index (Sdef));\n \n             --  Ignore operator name case completely. This also catches the\n             --  case of where one is an operator and the other is not. This\n             --  is a phenomenon from rewriting of operators as functions,\n             --  and is to be ignored.\n \n-            if TRef (SRef) = '\"' or else TDef (SDef) = '\"' then\n+            if Tref (Sref) = '\"' or else Tdef (Sdef) = '\"' then\n                return;\n \n             else\n-               for J in 1 .. Length_Of_Name (Chars (Ref)) loop\n-                  if TRef (SRef) /= TDef (SDef) then\n-                     Error_Msg_Node_1 := Def;\n-                     Error_Msg_Sloc := Sloc (Def);\n-                     Error_Msg\n-                       (\"(style) bad casing of & declared#\", SRef);\n+               while Tref (Sref) = Tdef (Sdef) loop\n+\n+                  --  If end of identifier, all done\n+\n+                  if not Identifier_Char (Tref (Sref)) then\n                      return;\n-                  end if;\n \n-                  SRef := SRef + 1;\n-                  SDef := SDef + 1;\n+                  --  Otherwise loop continues\n+\n+                  else\n+                     Sref := Sref + 1;\n+                     Sdef := Sdef + 1;\n+                  end if;\n                end loop;\n+\n+               --  Fall through loop when mismatch between identifiers\n+               --  If either identifier is not terminated, error.\n+\n+               if Identifier_Char (Tref (Sref))\n+                    or else\n+                  Identifier_Char (Tdef (Sdef))\n+               then\n+                  Error_Msg_Node_1 := Def;\n+                  Error_Msg_Sloc := Sloc (Def);\n+                  Error_Msg\n+                    (\"(style) bad casing of & declared#\", Sref);\n+                  return;\n+\n+               --  Else end of identifiers, and they match\n+\n+               else\n+                  return;\n+               end if;\n             end if;\n          end if;\n \n       --  Case of definition in package Standard\n \n-      elsif SDef = Standard_Location then\n+      elsif Sdef = Standard_Location then\n \n          --  Check case of identifiers in Standard\n \n          if Style_Check_Standard then\n-            TRef := Source_Text (Get_Source_File_Index (SRef));\n+            Tref := Source_Text (Get_Source_File_Index (Sref));\n \n             --  Ignore operators\n \n-            if TRef (SRef) = '\"' then\n+            if Tref (Sref) = '\"' then\n                null;\n \n             --  Special case of ASCII\n@@ -491,7 +512,7 @@ package body Style is\n                Nlen  := Length_Of_Name (Chars (Ref));\n \n                if Determine_Casing\n-                    (TRef (SRef .. SRef + Source_Ptr (Nlen) - 1)) = Cas\n+                    (Tref (Sref .. Sref + Source_Ptr (Nlen) - 1)) = Cas\n                then\n                   null;\n                else"}]}