{"sha": "9a03df55561781c0170eb5dde09c0b062fd76ebe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWEwM2RmNTU1NjE3ODFjMDE3MGViNWRkZTA5YzBiMDYyZmQ3NmViZQ==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@act-europe.fr", "date": "2004-10-04T15:01:21Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-10-04T15:01:21Z"}, "message": "init.c (__gnat_initialize): Call an Ada subprogram to perform the table registration calls when need be.\n\n2004-10-04  Olivier Hainque  <hainque@act-europe.fr>\n\n\t* init.c (__gnat_initialize): Call an Ada subprogram to perform the\n\ttable registration calls when need be. Ensures no reference to the crt\n\tctors symbol are issued in the SJLJ case, which avoids possible\n\tundefined symbol errors in the case of modules to be statically linked\n\twith the kernel.\n\nFrom-SVN: r88507", "tree": {"sha": "e2f1eecb090bb4ba07e213b8ec9ece3c21166b9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2f1eecb090bb4ba07e213b8ec9ece3c21166b9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a03df55561781c0170eb5dde09c0b062fd76ebe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a03df55561781c0170eb5dde09c0b062fd76ebe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a03df55561781c0170eb5dde09c0b062fd76ebe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a03df55561781c0170eb5dde09c0b062fd76ebe/comments", "author": null, "committer": null, "parents": [{"sha": "28d6470f55e9975b037aa698407939635e28e4c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28d6470f55e9975b037aa698407939635e28e4c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28d6470f55e9975b037aa698407939635e28e4c6"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "2caf8dd5f0dfe66a1f75a4786dc2a1f0a5cd1e8c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a03df55561781c0170eb5dde09c0b062fd76ebe/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a03df55561781c0170eb5dde09c0b062fd76ebe/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9a03df55561781c0170eb5dde09c0b062fd76ebe", "patch": "@@ -1,3 +1,11 @@\n+2004-10-04  Olivier Hainque  <hainque@act-europe.fr>\n+\n+\t* init.c (__gnat_initialize): Call an Ada subprogram to perform the\n+\ttable registration calls when need be. Ensures no reference to the crt\n+\tctors symbol are issued in the SJLJ case, which avoids possible\n+\tundefined symbol errors in the case of modules to be statically linked\n+\twith the kernel.\n+\n 2004-10-04  Javier Miranda  <miranda@gnat.com>\n \n \t* sem_ch4.adb (Try_Object_Operation): Reformat the code to expand"}, {"sha": "e79ce9f7190783a5d455b85637e952cb9343b975", "filename": "gcc/ada/init.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a03df55561781c0170eb5dde09c0b062fd76ebe/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a03df55561781c0170eb5dde09c0b062fd76ebe/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=9a03df55561781c0170eb5dde09c0b062fd76ebe", "patch": "@@ -1850,11 +1850,19 @@ __gnat_initialize (void)\n \n #if DWARF2_UNWIND_INFO && defined (_ARCH_PPC)\n  {\n-   extern const int __module_has_ctors;\n-   extern void __do_global_ctors ();\n-\n-   if (! __module_has_ctors)\n-     __do_global_ctors ();\n+   /* The scheme described above is only useful for the actual ZCX case, and\n+      we don't want any reference to the crt provided symbols otherwise.  We\n+      may not link with any of the crt objects in the non-ZCX case, e.g. from\n+      documented procedures instructing the use of -nostdlib, and references\n+      to the ctors symbols here would just remain unsatisfied.\n+\n+      We have no way to avoid those references in the right conditions in this\n+      C module, because we have nothing like a IN_ZCX_RTS macro.  This aspect\n+      is then deferred to an Ada routine, which can do that based on a test\n+      against a constant System flag value.  */\n+\n+   extern void __gnat_vxw_setup_for_eh (void);\n+   __gnat_vxw_setup_for_eh ();\n  }\n #endif\n }"}]}