{"sha": "c982d02ffe26fcd07280bf0f35f90df9be00716e", "node_id": "C_kwDOANBUbNoAKGM5ODJkMDJmZmUyNmZjZDA3MjgwYmYwZjM1ZjkwZGY5YmUwMDcxNmU", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-02-23T08:39:53Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-02-24T08:18:47Z"}, "message": "[nvptx] Add shf.{l,r}.wrap insn\n\nPtx contains funnel shift operations shf.l.wrap and shf.r.wrap that can be\nused to implement 32-bit left or right rotate.\n\nAdd define_insns rotlsi3 and rotrsi3.\n\nTested on nvptx.\n\ngcc/ChangeLog:\n\n2022-02-23  Tom de Vries  <tdevries@suse.de>\n\n\t* config/nvptx/nvptx.md (define_insn \"rotlsi3\", define_insn\n\t\"rotrsi3\"): New define_insn.\n\ngcc/testsuite/ChangeLog:\n\n2022-02-23  Tom de Vries  <tdevries@suse.de>\n\n\t* gcc.target/nvptx/rotate-run.c: New test.\n\t* gcc.target/nvptx/rotate.c: New test.", "tree": {"sha": "b89f92f6c201010e9f7966a026e7464a670f5a5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b89f92f6c201010e9f7966a026e7464a670f5a5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c982d02ffe26fcd07280bf0f35f90df9be00716e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c982d02ffe26fcd07280bf0f35f90df9be00716e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c982d02ffe26fcd07280bf0f35f90df9be00716e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c982d02ffe26fcd07280bf0f35f90df9be00716e/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7862f6ccd85a001e4d70abb00bb95d8c7846ba80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7862f6ccd85a001e4d70abb00bb95d8c7846ba80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7862f6ccd85a001e4d70abb00bb95d8c7846ba80"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "4989b5642e29f6dec5dfd61c5d6f42479fa15a63", "filename": "gcc/config/nvptx/nvptx.md", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c982d02ffe26fcd07280bf0f35f90df9be00716e/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c982d02ffe26fcd07280bf0f35f90df9be00716e/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.md?ref=c982d02ffe26fcd07280bf0f35f90df9be00716e", "patch": "@@ -808,6 +808,22 @@\n   \"\"\n   \"%.\\\\tshr.u%T0\\\\t%0, %1, %2;\")\n \n+(define_insn \"rotlsi3\"\n+  [(set (match_operand:SI 0 \"nvptx_register_operand\" \"=R\")\n+\t(rotate:SI (match_operand:SI 1 \"nvptx_register_operand\" \"R\")\n+\t\t   (and:SI (match_operand:SI 2 \"nvptx_nonmemory_operand\" \"Ri\")\n+\t\t\t   (const_int 31))))]\n+  \"TARGET_SM35\"\n+  \"%.\\\\tshf.l.wrap.b32\\\\t%0, %1, %1, %2;\")\n+\n+(define_insn \"rotrsi3\"\n+  [(set (match_operand:SI 0 \"nvptx_register_operand\" \"=R\")\n+\t(rotatert:SI (match_operand:SI 1 \"nvptx_register_operand\" \"R\")\n+\t\t     (and:SI (match_operand:SI 2 \"nvptx_nonmemory_operand\" \"Ri\")\n+\t\t\t     (const_int 31))))]\n+  \"TARGET_SM35\"\n+  \"%.\\\\tshf.r.wrap.b32\\\\t%0, %1, %1, %2;\")\n+\n ;; Logical operations\n \n (define_code_iterator any_logic [and ior xor])"}, {"sha": "14cb6f8b0b3fe4a8d9997eec1015b66062c6ae14", "filename": "gcc/testsuite/gcc.target/nvptx/rotate-run.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c982d02ffe26fcd07280bf0f35f90df9be00716e/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Frotate-run.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c982d02ffe26fcd07280bf0f35f90df9be00716e/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Frotate-run.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Frotate-run.c?ref=c982d02ffe26fcd07280bf0f35f90df9be00716e", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+#include \"rotate.c\"\n+\n+#define ASSERT(EXPR)\t\t\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      if (!(EXPR))\t\t\t\t\\\n+\t__builtin_abort ();\t\t\t\\\n+    } while (0)\n+\n+int\n+main (void)\n+{\n+  ASSERT (rotl (0x12345678, 8) == 0x34567812);\n+  ASSERT (rotl (0x12345678, 8 + 32) == 0x34567812);\n+\n+  ASSERT (rotr (0x12345678, 8) == 0x78123456);\n+  ASSERT (rotr (0x12345678, 8 + 32) == 0x78123456);\n+\n+  return 0;\n+}"}, {"sha": "1c9b83b4809d83e45263d1eaedefe8858878c4a4", "filename": "gcc/testsuite/gcc.target/nvptx/rotate.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c982d02ffe26fcd07280bf0f35f90df9be00716e/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Frotate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c982d02ffe26fcd07280bf0f35f90df9be00716e/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Frotate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Frotate.c?ref=c982d02ffe26fcd07280bf0f35f90df9be00716e", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-O2 -save-temps\" } */\n+\n+#define MASK 0x1f\n+\n+unsigned int\n+rotl (unsigned int val, unsigned int cnt) {\n+  cnt &= MASK;\n+  return (val << cnt) | (val >> (-cnt & MASK));\n+}\n+\n+unsigned int\n+rotr (unsigned int val, unsigned int cnt) {\n+  cnt &= MASK;\n+  return (val >> cnt) | (val << (-cnt & MASK));\n+}\n+\n+/* { dg-final { scan-assembler-times \"shf.l.wrap.b32\" 1 } } */\n+/* { dg-final { scan-assembler-times \"shf.r.wrap.b32\" 1 } } */\n+/* { dg-final { scan-assembler-not \"and.b32\" } } */"}]}