{"sha": "ecc363971aeac52481d92de8b37521f6cc2d38e6", "node_id": "C_kwDOANBUbNoAKGVjYzM2Mzk3MWFlYWM1MjQ4MWQ5MmRlOGIzNzUyMWY2Y2MyZDM4ZTY", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@arm.com", "date": "2022-12-01T12:50:55Z"}, "committer": {"name": "Christophe Lyon", "email": "christophe.lyon@arm.com", "date": "2022-12-01T13:42:17Z"}, "message": "arm: Fix MVE testsuite fallouts\n\nAfter the recent patches to improve / tidy up MVE tests and patterns,\na few more tests need to be updated (replacing spaces with tabs).\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/arm/simd/mve-compare-1.c: Update.\n\t* gcc.target/arm/simd/mve-compare-scalar-1.c: Update.\n\t* gcc.target/arm/simd/mve-vabs.c: Update.\n\t* gcc.target/arm/simd/mve-vadd-1.c: Update.\n\t* gcc.target/arm/simd/mve-vadd-scalar-1.c: Update.\n\t* gcc.target/arm/simd/mve-vcmp.c: Update.\n\t* gcc.target/arm/simd/pr101325.c: Update.", "tree": {"sha": "9641bce724c1ffaa91c5fef29dc91d27912a38e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9641bce724c1ffaa91c5fef29dc91d27912a38e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecc363971aeac52481d92de8b37521f6cc2d38e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecc363971aeac52481d92de8b37521f6cc2d38e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecc363971aeac52481d92de8b37521f6cc2d38e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecc363971aeac52481d92de8b37521f6cc2d38e6/comments", "author": null, "committer": null, "parents": [{"sha": "abf05583dbc86a6667b63f5bda6ba57fe55a1b25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abf05583dbc86a6667b63f5bda6ba57fe55a1b25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abf05583dbc86a6667b63f5bda6ba57fe55a1b25"}], "stats": {"total": 138, "additions": 69, "deletions": 69}, "files": [{"sha": "887f8dbddd914ead08b5df8edfb07455e0bcda15", "filename": "gcc/testsuite/gcc.target/arm/simd/mve-compare-1.c", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecc363971aeac52481d92de8b37521f6cc2d38e6/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-compare-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecc363971aeac52481d92de8b37521f6cc2d38e6/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-compare-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-compare-1.c?ref=ecc363971aeac52481d92de8b37521f6cc2d38e6", "patch": "@@ -50,31 +50,31 @@ TEST_TYPE (vs32, __INT32_TYPE__, COMPARE_REG_AND_ZERO, 16)\n TEST_TYPE (vu32, __UINT32_TYPE__, COMPARE_REG, 16)\n \n /* { 8 bits } x { eq, ne, lt, le, gt, ge, hi, cs }.\n-/* { dg-final { scan-assembler-times {\\tvcmp.i8  eq, q[0-9]+, q[0-9]+\\n} 4 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.i8  ne, q[0-9]+, q[0-9]+\\n} 4 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s8  lt, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s8  le, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s8  gt, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s8  ge, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.u8  hi, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.u8  cs, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.i8\\teq, q[0-9]+, q[0-9]+\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.i8\\tne, q[0-9]+, q[0-9]+\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s8\\tlt, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s8\\tle, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s8\\tgt, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s8\\tge, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.u8\\thi, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.u8\\tcs, q[0-9]+, q[0-9]+\\n} 2 } } */\n \n /* { 16 bits } x { eq, ne, lt, le, gt, ge, hi, cs }.\n-/* { dg-final { scan-assembler-times {\\tvcmp.i16  eq, q[0-9]+, q[0-9]+\\n} 4 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.i16  ne, q[0-9]+, q[0-9]+\\n} 4 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s16  lt, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s16  le, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s16  gt, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s16  ge, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.u16  hi, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.u16  cs, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.i16\\teq, q[0-9]+, q[0-9]+\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.i16\\tne, q[0-9]+, q[0-9]+\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s16\\tlt, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s16\\tle, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s16\\tgt, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s16\\tge, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.u16\\thi, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.u16\\tcs, q[0-9]+, q[0-9]+\\n} 2 } } */\n \n /* { 32 bits } x { eq, ne, lt, le, gt, ge, hi, cs }.\n-/* { dg-final { scan-assembler-times {\\tvcmp.i32  eq, q[0-9]+, q[0-9]+\\n} 4 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.i32  ne, q[0-9]+, q[0-9]+\\n} 4 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s32  lt, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s32  le, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s32  gt, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s32  ge, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.u32  hi, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.u32  cs, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.i32\\teq, q[0-9]+, q[0-9]+\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.i32\\tne, q[0-9]+, q[0-9]+\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s32\\tlt, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s32\\tle, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s32\\tgt, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s32\\tge, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.u32\\thi, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.u32\\tcs, q[0-9]+, q[0-9]+\\n} 2 } } */"}, {"sha": "20ab0a2f0406f6bb0ea804d229dd0e08f4e4fab1", "filename": "gcc/testsuite/gcc.target/arm/simd/mve-compare-scalar-1.c", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecc363971aeac52481d92de8b37521f6cc2d38e6/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-compare-scalar-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecc363971aeac52481d92de8b37521f6cc2d38e6/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-compare-scalar-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-compare-scalar-1.c?ref=ecc363971aeac52481d92de8b37521f6cc2d38e6", "patch": "@@ -39,31 +39,31 @@ TEST_TYPE (vs32, __INT32_TYPE__, 16)\n TEST_TYPE (vu32, __UINT32_TYPE__, 16)\n \n /* { 8 bits } x { eq, ne, lt, le, gt, ge, hi, cs }.\n-/* { dg-final { scan-assembler-times {\\tvcmp.i8  eq, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.i8  ne, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s8  lt, q[0-9]+, q[0-9]+\\n} 1 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s8  le, q[0-9]+, q[0-9]+\\n} 1 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s8  gt, q[0-9]+, q[0-9]+\\n} 1 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s8  ge, q[0-9]+, q[0-9]+\\n} 1 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.u8  hi, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.u8  cs, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.i8\\teq, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.i8\\tne, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s8\\tlt, q[0-9]+, q[0-9]+\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s8\\tle, q[0-9]+, q[0-9]+\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s8\\tgt, q[0-9]+, q[0-9]+\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s8\\tge, q[0-9]+, q[0-9]+\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.u8\\thi, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.u8\\tcs, q[0-9]+, q[0-9]+\\n} 2 } } */\n \n /* { 16 bits } x { eq, ne, lt, le, gt, ge, hi, cs }.\n-/* { dg-final { scan-assembler-times {\\tvcmp.i16  eq, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.i16  ne, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s16  lt, q[0-9]+, q[0-9]+\\n} 1 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s16  le, q[0-9]+, q[0-9]+\\n} 1 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s16  gt, q[0-9]+, q[0-9]+\\n} 1 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s16  ge, q[0-9]+, q[0-9]+\\n} 1 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.u16  hi, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.u16  cs, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.i16\\teq, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.i16\\tne, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s16\\tlt, q[0-9]+, q[0-9]+\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s16\\tle, q[0-9]+, q[0-9]+\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s16\\tgt, q[0-9]+, q[0-9]+\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s16\\tge, q[0-9]+, q[0-9]+\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.u16\\thi, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.u16\\tcs, q[0-9]+, q[0-9]+\\n} 2 } } */\n \n /* { 32 bits } x { eq, ne, lt, le, gt, ge, hi, cs }.\n-/* { dg-final { scan-assembler-times {\\tvcmp.i32  eq, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.i32  ne, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s32  lt, q[0-9]+, q[0-9]+\\n} 1 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s32  le, q[0-9]+, q[0-9]+\\n} 1 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s32  gt, q[0-9]+, q[0-9]+\\n} 1 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s32  ge, q[0-9]+, q[0-9]+\\n} 1 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.u32  hi, q[0-9]+, q[0-9]+\\n} 2 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.u32  cs, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.i32\\teq, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.i32\\tne, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s32\\tlt, q[0-9]+, q[0-9]+\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s32\\tle, q[0-9]+, q[0-9]+\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s32\\tgt, q[0-9]+, q[0-9]+\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s32\\tge, q[0-9]+, q[0-9]+\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.u32\\thi, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.u32\\tcs, q[0-9]+, q[0-9]+\\n} 2 } } */"}, {"sha": "f2f9ee3499065e555aa41a1d9ef510840f412294", "filename": "gcc/testsuite/gcc.target/arm/simd/mve-vabs.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecc363971aeac52481d92de8b37521f6cc2d38e6/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecc363971aeac52481d92de8b37521f6cc2d38e6/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vabs.c?ref=ecc363971aeac52481d92de8b37521f6cc2d38e6", "patch": "@@ -38,7 +38,7 @@ FUNC(f, float, 16, 8, vabs)\n    integer optimizations actually generate a call to memmove, the other ones a\n    'vabs'.  */\n /* { dg-final { scan-assembler-times {vabs.s[0-9]+\\tq[0-9]+, q[0-9]+} 3 } } */\n-/* { dg-final { scan-assembler-times {vabs.f[0-9]+  q[0-9]+, q[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vabs.f[0-9]+\\tq[0-9]+, q[0-9]+} 2 } } */\n /* { dg-final { scan-assembler-times {vldr[bhw].[0-9]+\\tq[0-9]+} 5 } } */\n /* { dg-final { scan-assembler-times {vstr[bhw].[0-9]+\\tq[0-9]+} 5 } } */\n /* { dg-final { scan-assembler-times {memmove} 3 } } */"}, {"sha": "f31d1cc7f420fa7ead596a8474800cb286b49627", "filename": "gcc/testsuite/gcc.target/arm/simd/mve-vadd-1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecc363971aeac52481d92de8b37521f6cc2d38e6/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vadd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecc363971aeac52481d92de8b37521f6cc2d38e6/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vadd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vadd-1.c?ref=ecc363971aeac52481d92de8b37521f6cc2d38e6", "patch": "@@ -22,22 +22,22 @@ FUNC(u, uint, 16, 8, +, vadd)\n FUNC(s, int, 8, 16, +, vadd)\n FUNC(u, uint, 8, 16, +, vadd)\n \n-/* { dg-final { scan-assembler-times {vadd\\.i32  q[0-9]+, q[0-9]+, q[0-9]+} 2 } } */\n-/* { dg-final { scan-assembler-times {vadd\\.i16  q[0-9]+, q[0-9]+, q[0-9]+} 2 } } */\n-/* { dg-final { scan-assembler-times {vadd\\.i8  q[0-9]+, q[0-9]+, q[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vadd\\.i32\\tq[0-9]+, q[0-9]+, q[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vadd\\.i16\\tq[0-9]+, q[0-9]+, q[0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vadd\\.i8\\tq[0-9]+, q[0-9]+, q[0-9]+} 2 } } */\n \n void test_vadd_f32 (float * dest, float * a, float * b) {\n   int i;\n   for (i=0; i<4; i++) {\n     dest[i] = a[i] + b[i];\n   }\n }\n-/* { dg-final { scan-assembler-times {vadd\\.f32 q[0-9]+, q[0-9]+, q[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vadd\\.f32\\tq[0-9]+, q[0-9]+, q[0-9]+} 1 } } */\n \n void test_vadd_f16 (__fp16 * dest, __fp16 * a, __fp16 * b) {\n   int i;\n   for (i=0; i<8; i++) {\n     dest[i] = a[i] + b[i];\n   }\n }\n-/* { dg-final { scan-assembler-times {vadd\\.f16 q[0-9]+, q[0-9]+, q[0-9]+} 1 } } */\n+/* { dg-final { scan-assembler-times {vadd\\.f16\\tq[0-9]+, q[0-9]+, q[0-9]+} 1 } } */"}, {"sha": "7eec2346faa8a5427e86660484f056b6b0b4c0f5", "filename": "gcc/testsuite/gcc.target/arm/simd/mve-vadd-scalar-1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecc363971aeac52481d92de8b37521f6cc2d38e6/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vadd-scalar-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecc363971aeac52481d92de8b37521f6cc2d38e6/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vadd-scalar-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vadd-scalar-1.c?ref=ecc363971aeac52481d92de8b37521f6cc2d38e6", "patch": "@@ -24,17 +24,17 @@ FUNC_IMM(u, uint, 8, 16, +, vaddimm)\n \n /* For the moment we do not select the T2 vadd variant operating on a scalar\n    final argument.  */\n-/* { dg-final { scan-assembler-times {vadd\\.i32  q[0-9]+, q[0-9]+, r[0-9]+} 2 { xfail *-*-* } } } */\n-/* { dg-final { scan-assembler-times {vadd\\.i16  q[0-9]+, q[0-9]+, r[0-9]+} 2 { xfail *-*-* } } } */\n-/* { dg-final { scan-assembler-times {vadd\\.i8  q[0-9]+, q[0-9]+, r[0-9]+} 2 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {vadd\\.i32\\tq[0-9]+, q[0-9]+, r[0-9]+} 2 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {vadd\\.i16\\tq[0-9]+, q[0-9]+, r[0-9]+} 2 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {vadd\\.i8\\tq[0-9]+, q[0-9]+, r[0-9]+} 2 { xfail *-*-* } } } */\n \n void test_vaddimm_f32 (float * dest, float * a) {\n   int i;\n   for (i=0; i<4; i++) {\n     dest[i] = a[i] + 5.0;\n   }\n }\n-/* { dg-final { scan-assembler-times {vadd\\.f32 q[0-9]+, q[0-9]+, r[0-9]+} 1 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {vadd\\.f32\\tq[0-9]+, q[0-9]+, r[0-9]+} 1 { xfail *-*-* } } } */\n \n /* Note that dest[i] = a[i] + 5.0f16 is not vectorized.  */\n void test_vaddimm_f16 (__fp16 * dest, __fp16 * a) {\n@@ -44,4 +44,4 @@ void test_vaddimm_f16 (__fp16 * dest, __fp16 * a) {\n     dest[i] = a[i] + b;\n   }\n }\n-/* { dg-final { scan-assembler-times {vadd\\.f16 q[0-9]+, q[0-9]+, r[0-9]+} 1 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times {vadd\\.f16\\tq[0-9]+, q[0-9]+, r[0-9]+} 1 { xfail *-*-* } } } */"}, {"sha": "806b1458cf3485887a7f1a7e6223dd1da72ef1f1", "filename": "gcc/testsuite/gcc.target/arm/simd/mve-vcmp.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecc363971aeac52481d92de8b37521f6cc2d38e6/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vcmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecc363971aeac52481d92de8b37521f6cc2d38e6/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vcmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vcmp.c?ref=ecc363971aeac52481d92de8b37521f6cc2d38e6", "patch": "@@ -36,15 +36,15 @@ ALL_FUNCS(>=, vcmpge)\n \n /* MVE has only 128-bit vectors, so we can vectorize only half of the\n    functions above.  */\n-/* { dg-final { scan-assembler-times {\\tvcmp.i[0-9]+  eq, q[0-9]+, q[0-9]+\\n} 6 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.i[0-9]+  ne, q[0-9]+, q[0-9]+\\n} 6 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.i[0-9]+\\teq, q[0-9]+, q[0-9]+\\n} 6 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.i[0-9]+\\tne, q[0-9]+, q[0-9]+\\n} 6 } } */\n \n /* lt, le, gt, ge apply to signed types, cs and hi to unsigned types.  */\n /* lt and le with unsigned types are replaced with the opposite condition, hence\n    the double number of matches for cs and hi.  */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s[0-9]+  lt, q[0-9]+, q[0-9]+\\n} 3 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s[0-9]+  le, q[0-9]+, q[0-9]+\\n} 3 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s[0-9]+  gt, q[0-9]+, q[0-9]+\\n} 3 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.s[0-9]+  ge, q[0-9]+, q[0-9]+\\n} 3 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.u[0-9]+  cs, q[0-9]+, q[0-9]+\\n} 6 } } */\n-/* { dg-final { scan-assembler-times {\\tvcmp.u[0-9]+  hi, q[0-9]+, q[0-9]+\\n} 6 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s[0-9]+\\tlt, q[0-9]+, q[0-9]+\\n} 3 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s[0-9]+\\tle, q[0-9]+, q[0-9]+\\n} 3 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s[0-9]+\\tgt, q[0-9]+, q[0-9]+\\n} 3 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.s[0-9]+\\tge, q[0-9]+, q[0-9]+\\n} 3 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.u[0-9]+\\tcs, q[0-9]+, q[0-9]+\\n} 6 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.u[0-9]+\\thi, q[0-9]+, q[0-9]+\\n} 6 } } */"}, {"sha": "ce9ce3a8c19c866cc2d2bff8c8cdff5d334916e1", "filename": "gcc/testsuite/gcc.target/arm/simd/pr101325.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecc363971aeac52481d92de8b37521f6cc2d38e6/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fpr101325.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecc363971aeac52481d92de8b37521f6cc2d38e6/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fpr101325.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fpr101325.c?ref=ecc363971aeac52481d92de8b37521f6cc2d38e6", "patch": "@@ -9,6 +9,6 @@ unsigned foo(int8x16_t v, int8x16_t w)\n {\n   return vcmpeqq (v, w);\n }\n-/* { dg-final { scan-assembler {\\tvcmp.i8  eq} } } */\n-/* { dg-final { scan-assembler {\\tvmrs\\tr[0-9]+, P0} } } */\n+/* { dg-final { scan-assembler {\\tvcmp.i8\\teq} } } */\n+/* { dg-final { scan-assembler {\\tvmrs\\tr[0-9]+, p0} } } */\n /* { dg-final { scan-assembler {\\tuxth} } } */"}]}