{"sha": "a63a09594132dfe461a87dfd71cf607b987fc770", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYzYTA5NTk0MTMyZGZlNDYxYTg3ZGZkNzFjZjYwN2I5ODdmYzc3MA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2007-01-21T16:16:10Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-01-21T16:16:10Z"}, "message": "re PR libfortran/30015 ([4.1 only] Intrinsic date_and_time can go back in time)\n\n2006-12-09  Tobias Burnus  <burnus@net-b.de>\n\n        PR libfortran/30015\n        * intrinsics/date_and_time.c (date_and_time): Fix case where time\n          can go backwards.\n        * configure.ac: Remove AC_TRY_RUN test for timezone in\n          gettimeofday.\n        * acinclude.m4: Ditto.\n        * configure: Regenerate.\n        * config.h.in: Regenerate.\n\nFrom-SVN: r121033", "tree": {"sha": "a99bf5364c681de7075f0f28f1287cd4ae87d259", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a99bf5364c681de7075f0f28f1287cd4ae87d259"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a63a09594132dfe461a87dfd71cf607b987fc770", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a63a09594132dfe461a87dfd71cf607b987fc770", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a63a09594132dfe461a87dfd71cf607b987fc770", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a63a09594132dfe461a87dfd71cf607b987fc770/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1eb7b0490470ad3690fb31ed4799008ebdf1e21f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1eb7b0490470ad3690fb31ed4799008ebdf1e21f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1eb7b0490470ad3690fb31ed4799008ebdf1e21f"}], "stats": {"total": 592, "additions": 98, "deletions": 494}, "files": [{"sha": "d81546ff47e02fc0ff261ca0f8c233170d37446d", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a63a09594132dfe461a87dfd71cf607b987fc770/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a63a09594132dfe461a87dfd71cf607b987fc770/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=a63a09594132dfe461a87dfd71cf607b987fc770", "patch": "@@ -1,3 +1,14 @@\n+2006-12-09  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR libfortran/30015\n+\t* intrinsics/date_and_time.c (date_and_time): Fix case where time\n+\t  can go backwards.\n+\t* configure.ac: Remove AC_TRY_RUN test for timezone in\n+\t  gettimeofday.\n+\t* acinclude.m4: Ditto.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\n 2007-01-20  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \t* m4/misc_specifics.m4: Add _gfortran prefix to specific names."}, {"sha": "1660b6e75e6af03e3170eced7b4fb0f8b03faa30", "filename": "libgfortran/acinclude.m4", "status": "modified", "additions": 0, "deletions": 75, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a63a09594132dfe461a87dfd71cf607b987fc770/libgfortran%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a63a09594132dfe461a87dfd71cf607b987fc770/libgfortran%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Facinclude.m4?ref=a63a09594132dfe461a87dfd71cf607b987fc770", "patch": "@@ -17,81 +17,6 @@ AC_LANG_POP([Fortran])\n ])\n \n \n-dnl Check:\n-dnl * If we have gettimeofday;\n-dnl * If we have struct timezone for use in calling it;\n-dnl * If calling it with a timezone pointer actually works -- this is deemed\n-dnl   obsolete or undefined on some systems which say you should use a null\n-dnl   pointer -- and undefine HAVE_TIMEZONE if so;\n-dnl * Whether it only takes one arg.\n-AC_DEFUN([LIBGFOR_GETTIMEOFDAY], [\n-  AC_CHECK_FUNCS(gettimeofday)\n-  if test \"$ac_cv_func_gettimeofday\" = yes; then\n-    AC_CACHE_CHECK([for struct timezone], gfor_cv_struct_timezone,\n-      [AC_TRY_COMPILE([#include <sys/time.h>],\n-      [struct timezone tz;],\n-      gfor_cv_struct_timezone=yes, gfor_cv_struct_timezone=no)])\n-    if test $gfor_cv_struct_timezone = yes; then\n-      dnl It may be that we can't call gettimeofday with a non-null pointer.\n-      dnl In that case we'll lie about struct timezone.\n-      AC_TRY_RUN([\n-#ifdef TIME_WITH_SYS_TIME\n-#include <sys/time.h>\n-#include <time.h>\n-#else\n-#ifdef HAVE_SYS_TIME_H\n-#include <sys/time.h>\n-#else\n-#include <time.h>\n-#endif\n-#endif\n-main ()\n-{\n-  struct timeval time;\n-  struct timezone dummy;\n-  if (gettimeofday (&time, &dummy))\n-    exit (1);\n-  else\n-    exit (0);\n-}],\n-        [gfor_have_struct_timezone=yes], [gfor_have_struct_timezone=no],\n-        [gfor_have_struct_timezone=yes])\n-      if test $gfor_have_struct_timezone = yes; then\n-        AC_DEFINE(HAVE_TIMEZONE, 1, [Do we have struct timezone])\n-      fi\n-    fi\n-    AC_REQUIRE([AC_HEADER_TIME])\n-    AC_CACHE_CHECK([whether gettimeofday can accept two arguments],\n-      emacs_cv_gettimeofday_two_arguments,\n-      [AC_TRY_LINK([\n-#ifdef TIME_WITH_SYS_TIME\n-#include <sys/time.h>\n-#include <time.h>\n-#else\n-#ifdef HAVE_SYS_TIME_H\n-#include <sys/time.h>\n-#else\n-#include <time.h>\n-#endif\n-#endif\n-      ],\n-      [\n-      struct timeval time;\n-#ifdef HAVE_TIMEZONE\n-      struct timezone dummy;\n-#define DUMMY &dummy\n-#else\n-#define DUMMY NULL\n-#endif\n-      gettimeofday (&time, DUMMY);],\n-      emacs_cv_gettimeofday_two_arguments=yes,\n-      emacs_cv_gettimeofday_two_arguments=no)])\n-    if test $emacs_cv_gettimeofday_two_arguments = no; then\n-      AC_DEFINE(GETTIMEOFDAY_ONE_ARGUMENT, 1,\n-        [Does gettimeofday take a single argument])\n-    fi\n-  fi])\n-\n sinclude(../libtool.m4)\n dnl The lines below arrange for aclocal not to bring an installed\n dnl libtool.m4 into aclocal.m4, while still arranging for automake to"}, {"sha": "ab7a8920713cc4604acedebf30aa217d499d08aa", "filename": "libgfortran/config.h.in", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a63a09594132dfe461a87dfd71cf607b987fc770/libgfortran%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a63a09594132dfe461a87dfd71cf607b987fc770/libgfortran%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig.h.in?ref=a63a09594132dfe461a87dfd71cf607b987fc770", "patch": "@@ -1,8 +1,5 @@\n /* config.h.in.  Generated from configure.ac by autoheader.  */\n \n-/* Does gettimeofday take a single argument */\n-#undef GETTIMEOFDAY_ONE_ARGUMENT\n-\n /* Define to 0 if the target shouldn't use #pragma weak */\n #undef GTHREAD_USE_WEAK\n \n@@ -645,9 +642,6 @@\n /* Define to 1 if you have the `times' function. */\n #undef HAVE_TIMES\n \n-/* Do we have struct timezone */\n-#undef HAVE_TIMEZONE\n-\n /* Define to 1 if you have the <time.h> header file. */\n #undef HAVE_TIME_H\n "}, {"sha": "5939bb3b8ec6d14ed6f3d680434f944f60dceb8e", "filename": "libgfortran/configure", "status": "modified", "additions": 67, "deletions": 380, "changes": 447, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a63a09594132dfe461a87dfd71cf607b987fc770/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a63a09594132dfe461a87dfd71cf607b987fc770/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=a63a09594132dfe461a87dfd71cf607b987fc770", "patch": "@@ -6043,6 +6043,71 @@ _ACEOF\n \n fi\n \n+echo \"$as_me:$LINENO: checking whether time.h and sys/time.h may both be included\" >&5\n+echo $ECHO_N \"checking whether time.h and sys/time.h may both be included... $ECHO_C\" >&6\n+if test \"${ac_cv_header_time+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <sys/types.h>\n+#include <sys/time.h>\n+#include <time.h>\n+\n+int\n+main ()\n+{\n+if ((struct tm *) 0)\n+return 0;\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_header_time=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_cv_header_time=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_header_time\" >&5\n+echo \"${ECHO_T}$ac_cv_header_time\" >&6\n+if test $ac_cv_header_time = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define TIME_WITH_SYS_TIME 1\n+_ACEOF\n+\n+fi\n+\n \n \n \n@@ -10332,7 +10397,8 @@ done\n \n \n \n-for ac_func in wait setmode getrlimit\n+\n+for ac_func in wait setmode getrlimit gettimeofday\n do\n as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n echo \"$as_me:$LINENO: checking for $ac_func\" >&5\n@@ -23376,385 +23442,6 @@ echo \"$as_me: FPU dependent file will be ${fpu_host}.h\" >&6;}\n FPU_HOST_HEADER=config/${fpu_host}.h\n \n \n-# The standard autoconf HAVE_STRUCT_TIMEZONE doesn't actually check\n-# for struct timezone, as you might think.  We also need to check how\n-# to call gettimeofday if we have it.\n-echo \"$as_me:$LINENO: checking whether time.h and sys/time.h may both be included\" >&5\n-echo $ECHO_N \"checking whether time.h and sys/time.h may both be included... $ECHO_C\" >&6\n-if test \"${ac_cv_header_time+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-#include <sys/types.h>\n-#include <sys/time.h>\n-#include <time.h>\n-\n-int\n-main ()\n-{\n-if ((struct tm *) 0)\n-return 0;\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-rm -f conftest.$ac_objext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n-  (eval $ac_compile) 2>conftest.er1\n-  ac_status=$?\n-  grep -v '^ *+' conftest.er1 >conftest.err\n-  rm -f conftest.er1\n-  cat conftest.err >&5\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\n-\t\t\t || test ! -s conftest.err'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest.$ac_objext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  ac_cv_header_time=yes\n-else\n-  echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-ac_cv_header_time=no\n-fi\n-rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n-fi\n-echo \"$as_me:$LINENO: result: $ac_cv_header_time\" >&5\n-echo \"${ECHO_T}$ac_cv_header_time\" >&6\n-if test $ac_cv_header_time = yes; then\n-\n-cat >>confdefs.h <<\\_ACEOF\n-#define TIME_WITH_SYS_TIME 1\n-_ACEOF\n-\n-fi\n-\n-\n-\n-for ac_func in gettimeofday\n-do\n-as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n-echo \"$as_me:$LINENO: checking for $ac_func\" >&5\n-echo $ECHO_N \"checking for $ac_func... $ECHO_C\" >&6\n-if eval \"test \\\"\\${$as_ac_var+set}\\\" = set\"; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  if test x$gcc_no_link = xyes; then\n-  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n-echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-/* Define $ac_func to an innocuous variant, in case <limits.h> declares $ac_func.\n-   For example, HP-UX 11i <limits.h> declares gettimeofday.  */\n-#define $ac_func innocuous_$ac_func\n-\n-/* System header to define __stub macros and hopefully few prototypes,\n-    which can conflict with char $ac_func (); below.\n-    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since\n-    <limits.h> exists even on freestanding compilers.  */\n-\n-#ifdef __STDC__\n-# include <limits.h>\n-#else\n-# include <assert.h>\n-#endif\n-\n-#undef $ac_func\n-\n-/* Override any gcc2 internal prototype to avoid an error.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-{\n-#endif\n-/* We use char because int might match the return type of a gcc2\n-   builtin and then its argument prototype would still apply.  */\n-char $ac_func ();\n-/* The GNU C library defines this for functions which it implements\n-    to always fail with ENOSYS.  Some functions are actually named\n-    something starting with __ and the normal name is an alias.  */\n-#if defined (__stub_$ac_func) || defined (__stub___$ac_func)\n-choke me\n-#else\n-char (*f) () = $ac_func;\n-#endif\n-#ifdef __cplusplus\n-}\n-#endif\n-\n-int\n-main ()\n-{\n-return f != $ac_func;\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-rm -f conftest.$ac_objext conftest$ac_exeext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n-  (eval $ac_link) 2>conftest.er1\n-  ac_status=$?\n-  grep -v '^ *+' conftest.er1 >conftest.err\n-  rm -f conftest.er1\n-  cat conftest.err >&5\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\n-\t\t\t || test ! -s conftest.err'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest$ac_exeext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  eval \"$as_ac_var=yes\"\n-else\n-  echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-eval \"$as_ac_var=no\"\n-fi\n-rm -f conftest.err conftest.$ac_objext \\\n-      conftest$ac_exeext conftest.$ac_ext\n-fi\n-echo \"$as_me:$LINENO: result: `eval echo '${'$as_ac_var'}'`\" >&5\n-echo \"${ECHO_T}`eval echo '${'$as_ac_var'}'`\" >&6\n-if test `eval echo '${'$as_ac_var'}'` = yes; then\n-  cat >>confdefs.h <<_ACEOF\n-#define `echo \"HAVE_$ac_func\" | $as_tr_cpp` 1\n-_ACEOF\n-\n-fi\n-done\n-\n-  if test \"$ac_cv_func_gettimeofday\" = yes; then\n-    echo \"$as_me:$LINENO: checking for struct timezone\" >&5\n-echo $ECHO_N \"checking for struct timezone... $ECHO_C\" >&6\n-if test \"${gfor_cv_struct_timezone+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-#include <sys/time.h>\n-int\n-main ()\n-{\n-struct timezone tz;\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-rm -f conftest.$ac_objext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n-  (eval $ac_compile) 2>conftest.er1\n-  ac_status=$?\n-  grep -v '^ *+' conftest.er1 >conftest.err\n-  rm -f conftest.er1\n-  cat conftest.err >&5\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\n-\t\t\t || test ! -s conftest.err'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest.$ac_objext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  gfor_cv_struct_timezone=yes\n-else\n-  echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-gfor_cv_struct_timezone=no\n-fi\n-rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n-fi\n-echo \"$as_me:$LINENO: result: $gfor_cv_struct_timezone\" >&5\n-echo \"${ECHO_T}$gfor_cv_struct_timezone\" >&6\n-    if test $gfor_cv_struct_timezone = yes; then\n-                  if test \"$cross_compiling\" = yes; then\n-  gfor_have_struct_timezone=yes\n-else\n-  cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-\n-#ifdef TIME_WITH_SYS_TIME\n-#include <sys/time.h>\n-#include <time.h>\n-#else\n-#ifdef HAVE_SYS_TIME_H\n-#include <sys/time.h>\n-#else\n-#include <time.h>\n-#endif\n-#endif\n-main ()\n-{\n-  struct timeval time;\n-  struct timezone dummy;\n-  if (gettimeofday (&time, &dummy))\n-    exit (1);\n-  else\n-    exit (0);\n-}\n-_ACEOF\n-rm -f conftest$ac_exeext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n-  (eval $ac_link) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } && { ac_try='./conftest$ac_exeext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  gfor_have_struct_timezone=yes\n-else\n-  echo \"$as_me: program exited with status $ac_status\" >&5\n-echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-( exit $ac_status )\n-gfor_have_struct_timezone=no\n-fi\n-rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n-fi\n-      if test $gfor_have_struct_timezone = yes; then\n-\n-cat >>confdefs.h <<\\_ACEOF\n-#define HAVE_TIMEZONE 1\n-_ACEOF\n-\n-      fi\n-    fi\n-\n-    echo \"$as_me:$LINENO: checking whether gettimeofday can accept two arguments\" >&5\n-echo $ECHO_N \"checking whether gettimeofday can accept two arguments... $ECHO_C\" >&6\n-if test \"${emacs_cv_gettimeofday_two_arguments+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  if test x$gcc_no_link = xyes; then\n-  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n-echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-\n-#ifdef TIME_WITH_SYS_TIME\n-#include <sys/time.h>\n-#include <time.h>\n-#else\n-#ifdef HAVE_SYS_TIME_H\n-#include <sys/time.h>\n-#else\n-#include <time.h>\n-#endif\n-#endif\n-\n-int\n-main ()\n-{\n-\n-      struct timeval time;\n-#ifdef HAVE_TIMEZONE\n-      struct timezone dummy;\n-#define DUMMY &dummy\n-#else\n-#define DUMMY NULL\n-#endif\n-      gettimeofday (&time, DUMMY);\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-rm -f conftest.$ac_objext conftest$ac_exeext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n-  (eval $ac_link) 2>conftest.er1\n-  ac_status=$?\n-  grep -v '^ *+' conftest.er1 >conftest.err\n-  rm -f conftest.er1\n-  cat conftest.err >&5\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } &&\n-\t { ac_try='test -z \"$ac_c_werror_flag\"\n-\t\t\t || test ! -s conftest.err'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; } &&\n-\t { ac_try='test -s conftest$ac_exeext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  emacs_cv_gettimeofday_two_arguments=yes\n-else\n-  echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-emacs_cv_gettimeofday_two_arguments=no\n-fi\n-rm -f conftest.err conftest.$ac_objext \\\n-      conftest$ac_exeext conftest.$ac_ext\n-fi\n-echo \"$as_me:$LINENO: result: $emacs_cv_gettimeofday_two_arguments\" >&5\n-echo \"${ECHO_T}$emacs_cv_gettimeofday_two_arguments\" >&6\n-    if test $emacs_cv_gettimeofday_two_arguments = no; then\n-\n-cat >>confdefs.h <<\\_ACEOF\n-#define GETTIMEOFDAY_ONE_ARGUMENT 1\n-_ACEOF\n-\n-    fi\n-  fi\n-\n # Attempt to assert that the target is of common type in case we don't\n # have C99 integer types at all.\n "}, {"sha": "8711134d480efed63e7a6a64b72d7c15f09677c1", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a63a09594132dfe461a87dfd71cf607b987fc770/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a63a09594132dfe461a87dfd71cf607b987fc770/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=a63a09594132dfe461a87dfd71cf607b987fc770", "patch": "@@ -160,6 +160,7 @@ AC_TYPE_OFF_T\n \n # check header files\n AC_STDC_HEADERS\n+AC_HEADER_TIME\n AC_HAVE_HEADERS(stdlib.h stdio.h string.h stddef.h math.h unistd.h signal.h)\n AC_CHECK_HEADERS(time.h sys/params.h sys/time.h sys/times.h sys/resource.h)\n AC_CHECK_HEADERS(sys/types.h sys/stat.h sys/wait.h floatingpoint.h ieeefp.h)\n@@ -175,7 +176,7 @@ AC_CHECK_MEMBERS([struct stat.st_rdev])\n AC_CHECK_FUNCS(getrusage times mkstemp strtof strtold snprintf ftruncate chsize)\n AC_CHECK_FUNCS(chdir strerror getlogin gethostname kill link symlink perror)\n AC_CHECK_FUNCS(sleep time ttyname signal alarm ctime clock access fork execl)\n-AC_CHECK_FUNCS(wait setmode getrlimit)\n+AC_CHECK_FUNCS(wait setmode getrlimit gettimeofday)\n \n # Check for types\n AC_CHECK_TYPES([intptr_t])\n@@ -377,11 +378,6 @@ AC_MSG_NOTICE([FPU dependent file will be ${fpu_host}.h])\n FPU_HOST_HEADER=config/${fpu_host}.h\n AC_SUBST(FPU_HOST_HEADER)\n \n-# The standard autoconf HAVE_STRUCT_TIMEZONE doesn't actually check\n-# for struct timezone, as you might think.  We also need to check how\n-# to call gettimeofday if we have it.\n-LIBGFOR_GETTIMEOFDAY\n-\n # Attempt to assert that the target is of common type in case we don't\n # have C99 integer types at all.\n LIBGFOR_TARGET_ILP32"}, {"sha": "18b3c8b141b49f0898606035b6dcae541b66124d", "filename": "libgfortran/intrinsics/date_and_time.c", "status": "modified", "additions": 18, "deletions": 27, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a63a09594132dfe461a87dfd71cf607b987fc770/libgfortran%2Fintrinsics%2Fdate_and_time.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a63a09594132dfe461a87dfd71cf607b987fc770/libgfortran%2Fintrinsics%2Fdate_and_time.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fdate_and_time.c?ref=a63a09594132dfe461a87dfd71cf607b987fc770", "patch": "@@ -126,8 +126,6 @@ Boston, MA 02110-1301, USA.  */\n \n    TODO :\n    - Check year boundaries.\n-   - There is no STDC/POSIX way to get VALUES(8).  A GNUish way may\n-     be to use ftime.\n */\n #define DATE_LEN 8\n #define TIME_LEN 10   \n@@ -154,7 +152,25 @@ date_and_time (char *__date, char *__time, char *__zone,\n   struct tm local_time;\n   struct tm UTC_time;\n \n+#if HAVE_GETTIMEOFDAY\n+  {\n+    struct timeval tp;\n+\n+    if (!gettimeofday (&tp, NULL))\n+      {\n+         lt = tp.tv_sec;\n+         values[7] = tp.tv_usec / 1000;\n+      }\n+    else\n+      {\n+         lt = time (NULL);\n+         values[7] = 0;\n+      }\n+  }\n+#else\n   lt = time (NULL);\n+  values[7] = 0;\n+#endif /* HAVE_GETTIMEOFDAY */\n \n   if (lt != (time_t) -1)\n     {\n@@ -171,31 +187,6 @@ date_and_time (char *__date, char *__time, char *__zone,\n       values[4] = local_time.tm_hour;\n       values[5] = local_time.tm_min;\n       values[6] = local_time.tm_sec;\n-      values[7] = 0;\n-\n-#if HAVE_GETTIMEOFDAY\n-      {\n-\tstruct timeval tp;\n-#  if GETTIMEOFDAY_ONE_ARGUMENT\n-\tif (!gettimeofday (&tp))\n-#  else\n-#    if HAVE_STRUCT_TIMEZONE\n-\tstruct timezone tzp;\n-\n-      /* Some systems such as HP-UX, do have struct timezone, but\n-\t gettimeofday takes void* as the 2nd arg.  However, the\n-\t effect of passing anything other than a null pointer is\n-\t unspecified on HP-UX.  Configure checks if gettimeofday\n-\t actually fails with a non-NULL arg and pretends that\n-\t struct timezone is missing if it does fail.  */\n-\tif (!gettimeofday (&tp, &tzp))\n-#    else\n-\tif (!gettimeofday (&tp, (void *) 0))\n-#    endif /* HAVE_STRUCT_TIMEZONE  */\n-#  endif /* GETTIMEOFDAY_ONE_ARGUMENT  */\n-\tvalues[7] = tp.tv_usec / 1000;\n-      }\n-#endif /* HAVE_GETTIMEOFDAY */\n \n #if HAVE_SNPRINTF\n       if (__date)"}]}