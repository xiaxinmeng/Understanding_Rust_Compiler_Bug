{"sha": "294707717f6b7f293601c3dda20cb6405c6a3a6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk0NzA3NzE3ZjZiN2YyOTM2MDFjM2RkYTIwY2I2NDA1YzZhM2E2Zg==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb.gcc@gmail.com", "date": "2008-05-25T11:58:18Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-05-25T11:58:18Z"}, "message": "gcse.c (hash_scan_set): Do not pick up a REG_EQUAL value if SRC is a REG.\n\n2008-05-25  Steven Bosscher  <stevenb.gcc@gmail.com>\n\n\t* gcse.c (hash_scan_set): Do not pick up a REG_EQUAL value if\n\tSRC is a REG.\n\nFrom-SVN: r135860", "tree": {"sha": "2ea11ece9f86e4a8241ad5cea1e2da5c18fbd69c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ea11ece9f86e4a8241ad5cea1e2da5c18fbd69c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/294707717f6b7f293601c3dda20cb6405c6a3a6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/294707717f6b7f293601c3dda20cb6405c6a3a6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/294707717f6b7f293601c3dda20cb6405c6a3a6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/294707717f6b7f293601c3dda20cb6405c6a3a6f/comments", "author": null, "committer": null, "parents": [{"sha": "dd25a747c916bf685457171d18712bbff325babc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd25a747c916bf685457171d18712bbff325babc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd25a747c916bf685457171d18712bbff325babc"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "0588af6fc5a57fddca99166e72c6518213d6de46", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/294707717f6b7f293601c3dda20cb6405c6a3a6f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/294707717f6b7f293601c3dda20cb6405c6a3a6f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=294707717f6b7f293601c3dda20cb6405c6a3a6f", "patch": "@@ -1,3 +1,8 @@\n+2008-05-25  Steven Bosscher  <stevenb.gcc@gmail.com>\n+\n+\t* gcse.c (hash_scan_set): Do not pick up a REG_EQUAL value if\n+\tSRC is a REG.\n+\n 2008-05-25  Alan Modra  <amodra@bigpond.net.au>\n \n \t* c-common.c (strip_array_types): Move function to.."}, {"sha": "f6837bf1f606493ff61c5d0ae2a4f64e31a828bd", "filename": "gcc/gcse.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/294707717f6b7f293601c3dda20cb6405c6a3a6f/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/294707717f6b7f293601c3dda20cb6405c6a3a6f/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=294707717f6b7f293601c3dda20cb6405c6a3a6f", "patch": "@@ -1692,12 +1692,25 @@ hash_scan_set (rtx pat, rtx insn, struct hash_table *table)\n       unsigned int regno = REGNO (dest);\n       rtx tmp;\n \n-      /* See if a REG_NOTE shows this equivalent to a simpler expression.\n+      /* See if a REG_EQUAL note shows this equivalent to a simpler expression.\n+\n \t This allows us to do a single GCSE pass and still eliminate\n \t redundant constants, addresses or other expressions that are\n-\t constructed with multiple instructions.  */\n+\t constructed with multiple instructions.\n+\n+\t However, keep the original SRC if INSN is a simple reg-reg move.  In\n+\t In this case, there will almost always be a REG_EQUAL note on the\n+\t insn that sets SRC.  By recording the REG_EQUAL value here as SRC\n+\t for INSN, we miss copy propagation opportunities and we perform the\n+\t same PRE GCSE operation repeatedly on the same REG_EQUAL value if we\n+\t do more than one PRE GCSE pass.\n+\n+\t Note that this does not impede profitale constant propagations.  We\n+\t \"look through\" reg-reg sets in lookup_avail_set.  */\n       note = find_reg_equal_equiv_note (insn);\n       if (note != 0\n+\t  && REG_NOTE_KIND (note) == REG_EQUAL\n+\t  && !REG_P (src)\n \t  && (table->set_p\n \t      ? gcse_constant_p (XEXP (note, 0))\n \t      : want_to_gcse_p (XEXP (note, 0))))"}]}