{"sha": "74e883ce8c6be685132a1dbdbeb6257a7fd25e0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRlODgzY2U4YzZiZTY4NTEzMmExZGJkYmViNjI1N2E3ZmQyNWUwZA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-04-25T23:50:35Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-04-25T23:50:35Z"}, "message": "c-common.c (struct c_common_resword): Add __underlying_type.\n\n/gcc\n2011-04-25  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* c-family/c-common.c (struct c_common_resword): Add\n\t__underlying_type.\n\t* c-family/c-common.h (enum rid): Add RID_UNDERLYING_TYPE.\n\t* doc/extend.texi: Document __underlying_type.\n\n/cp\n2011-04-25  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* cp-tree.def: Add a new UNDERLYING_TYPE tree code.\n\t* cp-tree.h (enum cp_trait_kind): Add CPTK_UNDERLYING_TYPE, tidy.\n\t(UNDERLYING_TYPE_TYPE): Add.\n\t* cp-objcp-common.c (cp_common_init_ts): Mark UNDERLYING_TYPE\n\tas TS_COMMON.\n\t* parser.c (cp_lexer_next_token_is_decl_specifier_keyword,\n\tcp_parser_simple_type_specifier): Handle UNDERLYING_TYPE.\n\t(cp_parser_trait_expr): Deal with RID_UNDERLYING_TYPE; tidy.\n\t* semantics.c (finish_underlying_type): New.\n\t* typeck.c (structural_comptypes): Handle UNDERLYING_TYPE.\n\t* error.c (dump_type, dump_type_prefix, dump_type_suffix): Likewise.\n\t* cxx-pretty-print.c (p_cxx_type_id): Likewise.\n\t* tree.c (cp_walk_subtrees): Likewise.\n\t* pt.c (for_each_template_parm_r, tsubst, unify,\n\tdependent_type_p_r): Likewise.\n\t* mangle.c (write_type): Sorry for __underlying_type.\n\n/testsuite\n2011-04-25  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* g++.dg/ext/underlying_type1.C: New.\n\t* g++.dg/ext/underlying_type2.C: Likewise.\n\t* g++.dg/ext/underlying_type3.C: Likewise.\n\t* g++.dg/ext/underlying_type4.C: Likewise.\n\t* g++.dg/ext/underlying_type5.C: Likewise.\n\t* g++.dg/ext/underlying_type6.C: Likewise.\n\t* g++.dg/ext/underlying_type7.C: Likewise.\n\t* g++.dg/ext/underlying_type8.C: Likewise.\n\t* g++.dg/ext/underlying_type9.C: Likewise.\n\t* g++.dg/ext/underlying_type10.C: Likewise.\n\nFrom-SVN: r172945", "tree": {"sha": "35f072d771202f999760c373438412d2d7433c8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35f072d771202f999760c373438412d2d7433c8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74e883ce8c6be685132a1dbdbeb6257a7fd25e0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74e883ce8c6be685132a1dbdbeb6257a7fd25e0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74e883ce8c6be685132a1dbdbeb6257a7fd25e0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74e883ce8c6be685132a1dbdbeb6257a7fd25e0d/comments", "author": null, "committer": null, "parents": [{"sha": "a47407f631a14e4ad71c70442bec07df9ce732ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a47407f631a14e4ad71c70442bec07df9ce732ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a47407f631a14e4ad71c70442bec07df9ce732ab"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "69132f4bf05c594a04b39df785e561df631727ec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e883ce8c6be685132a1dbdbeb6257a7fd25e0d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e883ce8c6be685132a1dbdbeb6257a7fd25e0d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74e883ce8c6be685132a1dbdbeb6257a7fd25e0d", "patch": "@@ -3,6 +3,7 @@\n \t* c-family/c-common.c (struct c_common_resword): Add\n \t__underlying_type.\n \t* c-family/c-common.h (enum rid): Add RID_UNDERLYING_TYPE.\n+        * doc/extend.texi: Document __underlying_type.\n \n 2011-04-25  Segher Boessenkool  <segher@kernel.crashing.org>\n "}, {"sha": "c0ea9d36b5859ee1a13070813e5f1267a24978e5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e883ce8c6be685132a1dbdbeb6257a7fd25e0d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e883ce8c6be685132a1dbdbeb6257a7fd25e0d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=74e883ce8c6be685132a1dbdbeb6257a7fd25e0d", "patch": "@@ -16,7 +16,6 @@\n \t* pt.c (for_each_template_parm_r, tsubst, unify,\n \tdependent_type_p_r): Likewise.\n \t* mangle.c (write_type): Sorry for __underlying_type.\n-\t* doc/extend.texi: Document __underlying_type.\n \n 2011-04-25  Jason Merrill  <jason@redhat.com>\n "}, {"sha": "3335196deae071b3cf9f984649939b5586a66c72", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74e883ce8c6be685132a1dbdbeb6257a7fd25e0d/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74e883ce8c6be685132a1dbdbeb6257a7fd25e0d/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=74e883ce8c6be685132a1dbdbeb6257a7fd25e0d", "patch": "@@ -14422,6 +14422,10 @@ type, (possibly cv-qualified) @code{void}, or an array of unknown bound.\n If @code{type} is a cv union type ([basic.compound]) the trait is\n true, else it is false.\n \n+@item __underlying_type (type)\n+The underlying type of @code{type}.  Requires: @code{type} shall be\n+an enumeration type ([dcl.enum]).\n+\n @end table\n \n @node Java Exceptions"}]}