{"sha": "4c65085391c06df2a7b1acb4767e63aee6763d2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM2NTA4NTM5MWMwNmRmMmE3YjFhY2I0NzY3ZTYzYWVlNjc2M2QyYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-08-01T02:26:32Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-08-01T02:26:32Z"}, "message": "forward_list.h (splice_after): Use forward.\n\n\t* include/bits/forward_list.h (splice_after): Use forward.\n\t(merge): Likewise.\n\t* include/bits/stl_iterator.h (move_iterator::operator*): Use move.\n\t(move_iterator::operator[]): Use move.\n\t* include/bits/stl_list.h (insert): Use move.\n\t* include/std/thread (_Callable constructor): Use forward.\n\t* include/std/tuple: Don't specify explicit template args to move.\n\nFrom-SVN: r150326", "tree": {"sha": "0622cddd7ff39f432afe2772f57eb2d805fea001", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0622cddd7ff39f432afe2772f57eb2d805fea001"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c65085391c06df2a7b1acb4767e63aee6763d2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c65085391c06df2a7b1acb4767e63aee6763d2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c65085391c06df2a7b1acb4767e63aee6763d2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c65085391c06df2a7b1acb4767e63aee6763d2c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9771799c29d553ad28453dd5bf2e72d6be593531", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9771799c29d553ad28453dd5bf2e72d6be593531", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9771799c29d553ad28453dd5bf2e72d6be593531"}], "stats": {"total": 108, "additions": 75, "deletions": 33}, "files": [{"sha": "eb8b0e727fee64fc1147ca6607b22ae615f70b2a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4c65085391c06df2a7b1acb4767e63aee6763d2c", "patch": "@@ -1,3 +1,32 @@\n+2009-07-31  Jason Merrill  <jason@redhat.com>\n+\n+\t* include/bits/forward_list.h (splice_after): Use forward.\n+\t(merge): Likewise.\n+\t* include/bits/stl_iterator.h (move_iterator::operator*): Use move.\n+\t(move_iterator::operator[]): Use move.\n+\t* include/bits/stl_list.h (insert): Use move.\n+\t* include/std/thread (_Callable constructor): Use forward.\n+\t* include/std/tuple: Don't specify explicit template args to move.\n+\n+\t* testsuite/20_util/forward/requirements/explicit_instantiation.cc:\n+\tAdjust signature.\n+\t* testsuite/20_util/tuple/swap.cc: Swap takes lvalue reference.\n+\t* testsuite/30_threads/shared_future/cons/copy.cc: Return rvalue\n+\treference.\n+\t* testsuite/20_util/shared_ptr/assign/auto_ptr.cc,\n+\ttestsuite/20_util/shared_ptr/assign/auto_ptr_neg.cc,\n+\ttestsuite/20_util/shared_ptr/cons/auto_ptr.cc,\n+\ttestsuite/20_util/shared_ptr/cons/auto_ptr_neg.cc,\n+\ttestsuite/23_containers/forward_list/ext_pointer/operations/1.cc,\n+\ttestsuite/23_containers/forward_list/ext_pointer/operations/5.cc,\n+\ttestsuite/23_containers/forward_list/operations/1.cc,\n+\ttestsuite/23_containers/forward_list/operations/5.cc: Use move.\n+\t* testsuite/23_containers/list/requirements/dr438/assign_neg.cc,\n+\ttestsuite/23_containers/list/requirements/dr438/constructor_1_neg.cc,\n+\ttestsuite/23_containers/list/requirements/dr438/constructor_2_neg.cc,\n+\ttestsuite/23_containers/list/requirements/dr438/insert_neg.cc,\n+\ttestsuite/30_threads/thread/cons/assign_neg.cc: Adjust line numbers.\n+\n 2009-07-31  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/40912 (partial)"}, {"sha": "5158f2dac64e3c54ffd7008752f233eb4af64ff3", "filename": "libstdc++-v3/include/bits/forward_list.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h?ref=4c65085391c06df2a7b1acb4767e63aee6763d2c", "patch": "@@ -1057,7 +1057,10 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       void\n       splice_after(const_iterator __pos, forward_list&& __list,\n                    const_iterator __it)\n-      { this->splice_after(__pos, __list, __it, __it._M_next()); }\n+      {\n+\tthis->splice_after(__pos, std::forward<forward_list>(__list),\n+\t\t\t   __it, __it._M_next());\n+      }\n \n       /**\n        *  @brief  Insert range from another %forward_list.\n@@ -1146,7 +1149,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        */\n       void\n       merge(forward_list&& __list)\n-      { this->merge(__list, std::less<_Tp>()); }\n+      { this->merge(std::forward<forward_list>(__list), std::less<_Tp>()); }\n \n       /**\n        *  @brief  Merge sorted lists according to comparison function."}, {"sha": "eb7290053ed30d267c2ba532596f49bd5967b0e9", "filename": "libstdc++-v3/include/bits/stl_iterator.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h?ref=4c65085391c06df2a7b1acb4767e63aee6763d2c", "patch": "@@ -913,7 +913,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n       reference\n       operator*() const\n-      { return *_M_current; }\n+      { return std::move(*_M_current); }\n \n       pointer\n       operator->() const\n@@ -973,7 +973,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n       reference\n       operator[](difference_type __n) const\n-      { return _M_current[__n]; }\n+      { return std::move(_M_current[__n]); }\n     };\n \n   template<typename _IteratorL, typename _IteratorR>"}, {"sha": "2a6e58f798f7d221ad51cc1692c54d66a2197ddc", "filename": "libstdc++-v3/include/bits/stl_list.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h?ref=4c65085391c06df2a7b1acb4767e63aee6763d2c", "patch": "@@ -1027,7 +1027,11 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       insert(iterator __position, size_type __n, const value_type& __x)\n       {  \n \tlist __tmp(__n, __x, _M_get_Node_allocator());\n-\tsplice(__position, __tmp);\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+\t  splice(__position, std::move(__tmp));\n+#else\n+\t  splice(__position, __tmp);\n+#endif\n       }\n \n       /**\n@@ -1049,7 +1053,11 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t       _InputIterator __last)\n         {\n \t  list __tmp(__first, __last, _M_get_Node_allocator());\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+\t  splice(__position, std::move(__tmp));\n+#else\n \t  splice(__position, __tmp);\n+#endif\n \t}\n \n       /**"}, {"sha": "83b259d7949dfe50c9eab6d5fc2f7ec194a3468f", "filename": "libstdc++-v3/include/std/thread", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fthread", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fthread", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fthread?ref=4c65085391c06df2a7b1acb4767e63aee6763d2c", "patch": "@@ -126,7 +126,10 @@ namespace std\n \n     template<typename _Callable>\n       explicit thread(_Callable __f)\n-      { _M_start_thread(_M_make_routine<_Callable>(__f)); }\n+      {\n+\t_M_start_thread(_M_make_routine<_Callable>\n+\t\t\t(std::forward<_Callable>(__f)));\n+      }\n \n     template<typename _Callable, typename... _Args>\n       thread(_Callable&& __f, _Args&&... __args)"}, {"sha": "18cd89bca3b3a9684ba3d8ebbacf5554baac434a", "filename": "libstdc++-v3/include/std/tuple", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple?ref=4c65085391c06df2a7b1acb4767e63aee6763d2c", "patch": "@@ -164,7 +164,7 @@ namespace std\n       : _Inherited(__in._M_tail()), _Base(__in._M_head()) { }\n \n       _Tuple_impl(_Tuple_impl&& __in)\n-      : _Inherited(std::move<_Inherited&&>(__in._M_tail())),\n+      : _Inherited(std::move(__in._M_tail())),\n \t_Base(std::forward<_Head>(__in._M_head())) { }\n \n       template<typename... _UElements>\n@@ -173,8 +173,7 @@ namespace std\n \n       template<typename... _UElements>\n         _Tuple_impl(_Tuple_impl<_Idx, _UElements...>&& __in)\n-\t: _Inherited(std::move<typename _Tuple_impl<_Idx, _UElements...>::\n-\t\t     _Inherited&&>(__in._M_tail())),\n+\t: _Inherited(std::move(__in._M_tail())),\n \t  _Base(std::forward<typename _Tuple_impl<_Idx, _UElements...>::\n \t\t_Base>(__in._M_head())) { }\n \n@@ -244,7 +243,7 @@ namespace std\n       : _Inherited(static_cast<const _Inherited&>(__in)) { }\n \n       tuple(tuple&& __in)\n-      : _Inherited(std::move<_Inherited>(__in)) { }\n+      : _Inherited(static_cast<_Inherited&&>(__in)) { }\n \n       template<typename... _UElements>\n         tuple(const tuple<_UElements...>& __in)\n@@ -253,7 +252,7 @@ namespace std\n \n       template<typename... _UElements>\n         tuple(tuple<_UElements...>&& __in)\n-\t: _Inherited(std::move<_Tuple_impl<0, _UElements...> >(__in)) { }\n+\t: _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }\n \n       // XXX http://gcc.gnu.org/ml/libstdc++/2008-02/msg00047.html\n       template<typename... _UElements>\n@@ -327,15 +326,15 @@ namespace std\n       : _Inherited(static_cast<const _Inherited&>(__in)) { }\n \n       tuple(tuple&& __in)\n-      : _Inherited(std::move<_Inherited>(__in)) { }\n+      : _Inherited(static_cast<_Inherited&&>(__in)) { }\n \n       template<typename _U1, typename _U2>\n         tuple(const tuple<_U1, _U2>& __in)\n \t: _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in)) { }\n \n       template<typename _U1, typename _U2>\n         tuple(tuple<_U1, _U2>&& __in)\n-\t: _Inherited(std::move<_Tuple_impl<0, _U1, _U2> >(__in)) { }\n+\t: _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in)) { }\n \n       template<typename _U1, typename _U2>\n         tuple(const pair<_U1, _U2>& __in)"}, {"sha": "88ba9e548af13acb087f081c78711075b12b00d6", "filename": "libstdc++-v3/testsuite/20_util/forward/requirements/explicit_instantiation.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fforward%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fforward%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fforward%2Frequirements%2Fexplicit_instantiation.cc?ref=4c65085391c06df2a7b1acb4767e63aee6763d2c", "patch": "@@ -28,5 +28,5 @@\n namespace std\n {\n   typedef short test_type;\n-  template test_type&& forward(std::identity<test_type>::type&&);\n+  template test_type&& forward<test_type>(test_type&&);\n }"}, {"sha": "e2ec0786055d56bb001f4897559ff7c10dc4c5c1", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/assign/auto_ptr.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr.cc?ref=4c65085391c06df2a7b1acb4767e63aee6763d2c", "patch": "@@ -66,7 +66,7 @@ test01()\n \n   std::shared_ptr<A> a(new A);\n   std::auto_ptr<B> b(new B);\n-  a = b;\n+  a = std::move(b);\n   VERIFY( a.get() != 0 );\n   VERIFY( b.get() == 0 );\n   VERIFY( A::ctor_count == 2 );"}, {"sha": "b79a25b131c4b8ea64d25cb35d40d2a72a11d0e7", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/assign/auto_ptr_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr_neg.cc?ref=4c65085391c06df2a7b1acb4767e63aee6763d2c", "patch": "@@ -36,7 +36,7 @@ test01()\n \n   std::shared_ptr<A> a;\n   std::auto_ptr<B> b;\n-  a = b;                      // { dg-error \"here\" }\n+  a = std::move(b);                      // { dg-error \"here\" }\n \n   return 0;\n }"}, {"sha": "eb5bb9590df0f2355dce546f15c171bea6388616", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/auto_ptr.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fauto_ptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fauto_ptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fauto_ptr.cc?ref=4c65085391c06df2a7b1acb4767e63aee6763d2c", "patch": "@@ -33,7 +33,7 @@ test01()\n   bool test __attribute__((unused)) = true;\n \n   std::auto_ptr<A> a(new A);\n-  std::shared_ptr<A> a2(a);\n+  std::shared_ptr<A> a2(std::move(a));\n   VERIFY( a.get() == 0 );\n   VERIFY( a2.get() != 0 );\n   VERIFY( a2.use_count() == 1 );"}, {"sha": "e2ef60e3fbb21e03b5cbd77014956b75df45cef8", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/auto_ptr_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fauto_ptr_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fauto_ptr_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2Fauto_ptr_neg.cc?ref=4c65085391c06df2a7b1acb4767e63aee6763d2c", "patch": "@@ -34,7 +34,7 @@ test01()\n   bool test __attribute__((unused)) = true;\n \n   const std::auto_ptr<A> a;\n-  std::shared_ptr<A> p(a); // { dg-error \"no match\" }\n+  std::shared_ptr<A> p(std::move(a)); // { dg-error \"no match\" }\n \n   return 0;\n }"}, {"sha": "613e9c2ff1c4e15cfdd0af201e09a78b6c1aa212", "filename": "libstdc++-v3/testsuite/20_util/tuple/swap.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fswap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fswap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fswap.cc?ref=4c65085391c06df2a7b1acb4767e63aee6763d2c", "patch": "@@ -41,7 +41,7 @@ struct MoveOnly\n   bool operator==(MoveOnly const& m)\n   { return i == m.i; }\n \n-  void swap(MoveOnly&& m)\n+  void swap(MoveOnly& m)\n   { std::swap(m.i, i); }\n \n   int i;"}, {"sha": "8b5afdd980b8da0207f0c6baa5a550b74bef1e02", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/ext_pointer/operations/1.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fext_pointer%2Foperations%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fext_pointer%2Foperations%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fext_pointer%2Foperations%2F1.cc?ref=4c65085391c06df2a7b1acb4767e63aee6763d2c", "patch": "@@ -39,7 +39,7 @@ test01()\n \n   fwd_list_type x = {666.0, 777.0, 888.0};\n \n-  a.splice_after(posa, x);\n+  a.splice_after(posa, std::move(x));\n \n   ++posa;\n   VERIFY(*posa == 666.0);\n@@ -70,7 +70,7 @@ test02()\n   ++endy;\n   VERIFY(*endy == 14.0);\n \n-  a.splice_after(posa, y, befy, endy);\n+  a.splice_after(posa, std::move(y), befy, endy);\n   VERIFY(*posa == 0.0);\n \n   VERIFY(*befy == 10.0);\n@@ -95,7 +95,7 @@ test03()\n   fwd_list_type::const_iterator posz = z.begin();\n   VERIFY(*posz == 42.0);\n \n-  a.splice_after(posa, z, posz);\n+  a.splice_after(posa, std::move(z), posz);\n   VERIFY(*posa == 1.0);\n   ++posa;\n   VERIFY(*posa == 43.0);"}, {"sha": "13d15b39d122941328810a21efab2ab32fcd3839", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/ext_pointer/operations/5.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fext_pointer%2Foperations%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fext_pointer%2Foperations%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Fext_pointer%2Foperations%2F5.cc?ref=4c65085391c06df2a7b1acb4767e63aee6763d2c", "patch": "@@ -37,7 +37,7 @@ test01()\n   fwd_list_type a = {0.0, 1.0, 2.0, 3.0, 4.0};\n   fwd_list_type b = {1.0, 2.0, 3.0, 4.0, 4.0, 5.0};\n \n-  a.merge(b);\n+  a.merge(std::move(b));\n \n   fwd_list_type r = {0.0, 1.0, 1.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 4.0, 5.0};\n "}, {"sha": "5a996f3411e045ea997eb6a0950ce31242b526c9", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/operations/1.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F1.cc?ref=4c65085391c06df2a7b1acb4767e63aee6763d2c", "patch": "@@ -34,7 +34,7 @@ test01()\n \n   std::forward_list<double> x = {666.0, 777.0, 888.0};\n \n-  a.splice_after(posa, x);\n+  a.splice_after(posa, std::move(x));\n \n   ++posa;\n   VERIFY(*posa == 666.0);\n@@ -63,7 +63,7 @@ test02()\n   ++endy;\n   VERIFY(*endy == 14.0);\n \n-  a.splice_after(posa, y, befy, endy);\n+  a.splice_after(posa, std::move(y), befy, endy);\n   VERIFY(*posa == 0.0);\n \n   VERIFY(*befy == 10.0);\n@@ -86,7 +86,7 @@ test03()\n   std::forward_list<double>::const_iterator posz = z.begin();\n   VERIFY(*posz == 42.0);\n \n-  a.splice_after(posa, z, posz);\n+  a.splice_after(posa, std::move(z), posz);\n   VERIFY(*posa == 1.0);\n   ++posa;\n   VERIFY(*posa == 43.0);"}, {"sha": "1291a269044acd19e63d72c4dfc9a3d513f7ebc0", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/operations/5.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Foperations%2F5.cc?ref=4c65085391c06df2a7b1acb4767e63aee6763d2c", "patch": "@@ -32,7 +32,7 @@ test01()\n   std::forward_list<double> a = {0.0, 1.0, 2.0, 3.0, 4.0};\n   std::forward_list<double> b = {1.0, 2.0, 3.0, 4.0, 4.0, 5.0};\n \n-  a.merge(b);\n+  a.merge(std::move(b));\n \n   std::forward_list<double> r = {0.0, 1.0, 1.0, 2.0, 2.0, 3.0, 3.0,\n                                  4.0, 4.0, 4.0, 5.0};"}, {"sha": "c0b6ea46be9adec0b34f5c7d1c32ce52490c7bd1", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=4c65085391c06df2a7b1acb4767e63aee6763d2c", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1379 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1387 }\n // { dg-excess-errors \"\" }\n \n #include <list>"}, {"sha": "0d27211a5f7c72c25329981e28de86e50405302e", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=4c65085391c06df2a7b1acb4767e63aee6763d2c", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1348 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1356 }\n // { dg-excess-errors \"\" }\n \n #include <list>"}, {"sha": "bbf780803657b7aeac6ff725836f095556919651", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=4c65085391c06df2a7b1acb4767e63aee6763d2c", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1348 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1356 }\n // { dg-excess-errors \"\" }\n \n #include <list>"}, {"sha": "1e84b97d3017b36eb330295883b2cd9084466b7d", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=4c65085391c06df2a7b1acb4767e63aee6763d2c", "patch": "@@ -18,7 +18,7 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-do compile }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 1348 }\n+// { dg-error \"no matching\" \"\" { target *-*-* } 1356 }\n // { dg-excess-errors \"\" }\n \n #include <list>"}, {"sha": "b1940fae3c75c3b6cfefad548065fa94b2704ead", "filename": "libstdc++-v3/testsuite/30_threads/shared_future/cons/copy.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fcons%2Fcopy.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fcons%2Fcopy.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fshared_future%2Fcons%2Fcopy.cc?ref=4c65085391c06df2a7b1acb4767e63aee6763d2c", "patch": "@@ -25,7 +25,7 @@\n #include <future>\n #include <testsuite_hooks.h>\n \n-extern std::unique_future<int>& get();\n+extern std::unique_future<int>&& get();\n \n void test01()\n {"}, {"sha": "1ea66ec9c81271bf778837ccd82d0aace0d49f44", "filename": "libstdc++-v3/testsuite/30_threads/thread/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c65085391c06df2a7b1acb4767e63aee6763d2c/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fthread%2Fcons%2Fassign_neg.cc?ref=4c65085391c06df2a7b1acb4767e63aee6763d2c", "patch": "@@ -32,4 +32,4 @@ void test01()\n }\n \n // { dg-error \"used here\" \"\" { target *-*-* } 31 }\n-// { dg-error \"deleted function\" \"\" { target *-*-* } 141 }\n+// { dg-error \"deleted function\" \"\" { target *-*-* } 144 }"}]}