{"sha": "9bc83b61ff2b3353934704befe02c2262c48d2bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJjODNiNjFmZjJiMzM1MzkzNDcwNGJlZmUwMmMyMjYyYzQ4ZDJiYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-06-13T13:03:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-06-13T13:03:13Z"}, "message": "re PR tree-optimization/90856 (ICE: verify_gimple failed (error: incompatible types in 'PHI' argument 1))\n\n2019-06-13  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/90856\n\t* tree-sra.c (build_ref_for_model): Only use\n\tbuild_reconstructed_reference when address-spaces are the same.\n\n\t* gcc.target/i386/pr90856.c: New testcase.\n\nFrom-SVN: r272244", "tree": {"sha": "d62d7be7dce897a073877475825ae0e99570be7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d62d7be7dce897a073877475825ae0e99570be7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9bc83b61ff2b3353934704befe02c2262c48d2bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bc83b61ff2b3353934704befe02c2262c48d2bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bc83b61ff2b3353934704befe02c2262c48d2bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bc83b61ff2b3353934704befe02c2262c48d2bc/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "478cb3ce7efa71bf18f81dab37f562f7504c7e0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/478cb3ce7efa71bf18f81dab37f562f7504c7e0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/478cb3ce7efa71bf18f81dab37f562f7504c7e0f"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "685c06d76b857d289d408548b47c1e77cb7096d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc83b61ff2b3353934704befe02c2262c48d2bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc83b61ff2b3353934704befe02c2262c48d2bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9bc83b61ff2b3353934704befe02c2262c48d2bc", "patch": "@@ -1,3 +1,9 @@\n+2019-06-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/90856\n+\t* tree-sra.c (build_ref_for_model): Only use\n+\tbuild_reconstructed_reference when address-spaces are the same.\n+\n 2019-06-13  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/nvptx/nvptx.c (nvptx_sese_number, nvptx_sese_pseudo): Don't"}, {"sha": "b1d8ecc6465eb95346870659c177b0f85f438942", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc83b61ff2b3353934704befe02c2262c48d2bc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc83b61ff2b3353934704befe02c2262c48d2bc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9bc83b61ff2b3353934704befe02c2262c48d2bc", "patch": "@@ -1,3 +1,8 @@\n+2019-06-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/90856\n+\t* gcc.target/i386/pr90856.c: New testcase.\n+\n 2019-06-13  Jakub Jelinek  <jakub@redhat.com>\n \n \t* g++.dg/tree-ssa/ssa-dse-1.C: Don't match exact number of chars of"}, {"sha": "a9a909b9eda929ffd0eabae1440cc53cbb298d1b", "filename": "gcc/testsuite/gcc.target/i386/pr90856.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc83b61ff2b3353934704befe02c2262c48d2bc/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90856.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc83b61ff2b3353934704befe02c2262c48d2bc/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90856.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90856.c?ref=9bc83b61ff2b3353934704befe02c2262c48d2bc", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+typedef struct { int v; } S1;\n+typedef struct { S1 s1[32]; } S2;\n+\n+S1 clearS1() { S1 s; s.v = 1; return s; }\n+\n+void\n+clearS2(__seg_gs S2 *p, int n)\n+{\n+  for (int i = 0; i < n; ++i)\n+    p->s1[i] = clearS1();\n+}"}, {"sha": "03c1a2ae9e91669bea57233597c374f8e8ff55af", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bc83b61ff2b3353934704befe02c2262c48d2bc/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bc83b61ff2b3353934704befe02c2262c48d2bc/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=9bc83b61ff2b3353934704befe02c2262c48d2bc", "patch": "@@ -1854,6 +1854,8 @@ build_ref_for_model (location_t loc, tree base, HOST_WIDE_INT offset,\n       tree res;\n       if (model->grp_same_access_path\n \t  && !TREE_THIS_VOLATILE (base)\n+\t  && (TYPE_ADDR_SPACE (TREE_TYPE (base))\n+\t      == TYPE_ADDR_SPACE (TREE_TYPE (model->expr)))\n \t  && offset <= model->offset\n \t  /* build_reconstructed_reference can still fail if we have already\n \t     massaged BASE because of another type incompatibility.  */"}]}