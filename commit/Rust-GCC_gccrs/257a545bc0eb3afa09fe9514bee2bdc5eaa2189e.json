{"sha": "257a545bc0eb3afa09fe9514bee2bdc5eaa2189e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU3YTU0NWJjMGViM2FmYTA5ZmU5NTE0YmVlMmJkYzVlYWEyMTg5ZQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2008-02-16T06:15:39Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2008-02-16T06:15:39Z"}, "message": "types.h: Remove enum parallelism.\n\n2008-02-15  Benjamin Kosnik  <bkoz@redhat.com>\n        \n        * include/parallel/types.h: Remove enum parallelism.\n\nFrom-SVN: r132364", "tree": {"sha": "a9b75cb2b9b9a427c95fab60d29eda02fef4e67d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9b75cb2b9b9a427c95fab60d29eda02fef4e67d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/257a545bc0eb3afa09fe9514bee2bdc5eaa2189e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/257a545bc0eb3afa09fe9514bee2bdc5eaa2189e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/257a545bc0eb3afa09fe9514bee2bdc5eaa2189e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/257a545bc0eb3afa09fe9514bee2bdc5eaa2189e/comments", "author": null, "committer": null, "parents": [{"sha": "2a49e6f89795142cac2a9e18b92cf0251ad54591", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a49e6f89795142cac2a9e18b92cf0251ad54591", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a49e6f89795142cac2a9e18b92cf0251ad54591"}], "stats": {"total": 58, "additions": 4, "deletions": 54}, "files": [{"sha": "b9be543495451197c484b242a3865825c3b1ac5f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/257a545bc0eb3afa09fe9514bee2bdc5eaa2189e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/257a545bc0eb3afa09fe9514bee2bdc5eaa2189e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=257a545bc0eb3afa09fe9514bee2bdc5eaa2189e", "patch": "@@ -1,3 +1,7 @@\n+2008-02-15  Benjamin Kosnik  <bkoz@redhat.com>\n+\t\n+\t* include/parallel/types.h: Remove enum parallelism.\n+\t\n 2008-02-15  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/parallel/types.h: Move enum parallelism here.  Use"}, {"sha": "beac77810a8a750cf11ba7684ce67e025736a1b7", "filename": "libstdc++-v3/include/parallel/types.h", "status": "modified", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/257a545bc0eb3afa09fe9514bee2bdc5eaa2189e/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Ftypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/257a545bc0eb3afa09fe9514bee2bdc5eaa2189e/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Ftypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Ftypes.h?ref=257a545bc0eb3afa09fe9514bee2bdc5eaa2189e", "patch": "@@ -70,60 +70,6 @@ namespace __gnu_parallel\n   inline bool \n   is_parallel(const parallelism __p) { return __p != sequential; }\n \n-  /// @brief Sorting algorithms: multi-way mergesort, quicksort,\n-  /// load-balanced quicksort.\n-  enum SortAlgorithm \n-    { \n-      MWMS, \n-      QS, \n-      QS_BALANCED \n-    };\n-\n-  /// @brief Merging algorithms: bubblesort-alike, loser-tree\n-  /// variants, enum sentinel.\n-  enum MultiwayMergeAlgorithm\n-    { \n-      BUBBLE, \n-      LOSER_TREE_EXPLICIT, \n-      LOSER_TREE, \n-      LOSER_TREE_COMBINED, \n-      LOSER_TREE_SENTINEL, \n-      MWM_ALGORITHM_LAST \n-    };\n-  \n-  /// @brief Partial sum algorithms: recursive, linear.\n-  enum PartialSumAlgorithm \n-    { \n-      RECURSIVE, \n-      LINEAR \n-    };\n-\n-  /// @brief Splitting strategies for sorting/merging: sampling, exact.\n-  enum Splitting \n-    { \n-      SAMPLING, \n-      EXACT \n-    };\n-\n-  /// @brief Find distribution strategies: growing blocks, equal-sized\n-  /// blocks, equal splitting.\n-  enum FindDistribution \n-    { \n-      GROWING_BLOCKS, \n-      CONSTANT_SIZE_BLOCKS, \n-      EQUAL_SPLIT \n-    };\n-\n-  /// @brief Strategies for run-time algorithm selection:\n-  /// force_sequential, force_parallel, heuristic.\n-  enum AlgorithmSelection\n-    {\n-      heuristic,\n-      force_sequential,\n-      force_parallel\n-    };\n-\n-\n   /// Integer Types.\n   using std::tr1::int16_t;\n   using std::tr1::uint16_t;"}]}