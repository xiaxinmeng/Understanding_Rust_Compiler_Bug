{"sha": "c957d38044d7eb6a45f57a8a9f707c3c0a798e9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk1N2QzODA0NGQ3ZWI2YTQ1ZjU3YThhOWY3MDdjM2MwYTc5OGU5Zg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2021-06-08T18:45:07Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2021-06-08T18:45:07Z"}, "message": "analyzer: fix region::get_bit_size for bitfields\n\ngcc/analyzer/ChangeLog:\n\t* analyzer.h (int_size_in_bits): New decl.\n\t* region.cc (int_size_in_bits): New function.\n\t(region::get_bit_size): Reimplement in terms of the above.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "bc920e7cce354c801a55c2e0b620f8e45634d586", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc920e7cce354c801a55c2e0b620f8e45634d586"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c957d38044d7eb6a45f57a8a9f707c3c0a798e9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c957d38044d7eb6a45f57a8a9f707c3c0a798e9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c957d38044d7eb6a45f57a8a9f707c3c0a798e9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c957d38044d7eb6a45f57a8a9f707c3c0a798e9f/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b400aef1bdc84bbdf5011caff3fe5f82c68d253", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b400aef1bdc84bbdf5011caff3fe5f82c68d253", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b400aef1bdc84bbdf5011caff3fe5f82c68d253"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "525eb06c3b5cd50067d3a2ffdb394c4484166282", "filename": "gcc/analyzer/analyzer.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c957d38044d7eb6a45f57a8a9f707c3c0a798e9f/gcc%2Fanalyzer%2Fanalyzer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c957d38044d7eb6a45f57a8a9f707c3c0a798e9f/gcc%2Fanalyzer%2Fanalyzer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fanalyzer.h?ref=c957d38044d7eb6a45f57a8a9f707c3c0a798e9f", "patch": "@@ -144,6 +144,8 @@ typedef offset_int bit_offset_t;\n typedef offset_int bit_size_t;\n typedef offset_int byte_size_t;\n \n+extern bool int_size_in_bits (const_tree type, bit_size_t *out);\n+\n /* The location of a region expressesd as an offset relative to a\n    base region.  */\n "}, {"sha": "5f246df7dfbc2f07e6f165fbe8c7ad86cacab90e", "filename": "gcc/analyzer/region.cc", "status": "modified", "additions": 29, "deletions": 4, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c957d38044d7eb6a45f57a8a9f707c3c0a798e9f/gcc%2Fanalyzer%2Fregion.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c957d38044d7eb6a45f57a8a9f707c3c0a798e9f/gcc%2Fanalyzer%2Fregion.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion.cc?ref=c957d38044d7eb6a45f57a8a9f707c3c0a798e9f", "patch": "@@ -208,18 +208,43 @@ region::get_byte_size (byte_size_t *out) const\n   return true;\n }\n \n+/* If the size of TYPE (in bits) is constant, write it to *OUT\n+   and return true.\n+   Otherwise return false.  */\n+\n+bool\n+int_size_in_bits (const_tree type, bit_size_t *out)\n+{\n+  if (INTEGRAL_TYPE_P (type))\n+    {\n+      *out = TYPE_PRECISION (type);\n+      return true;\n+    }\n+\n+  tree sz = TYPE_SIZE (type);\n+  if (sz && tree_fits_uhwi_p (sz))\n+    {\n+      *out = TREE_INT_CST_LOW (sz);\n+      return true;\n+    }\n+  else\n+    return false;\n+}\n+\n /* If the size of this region (in bits) is known statically, write it to *OUT\n    and return true.\n    Otherwise return false.  */\n \n bool\n region::get_bit_size (bit_size_t *out) const\n {\n-  byte_size_t byte_size;\n-  if (!get_byte_size (&byte_size))\n+  tree type = get_type ();\n+\n+  /* Bail out e.g. for heap-allocated regions.  */\n+  if (!type)\n     return false;\n-  *out = byte_size * BITS_PER_UNIT;\n-  return true;\n+\n+  return int_size_in_bits (type, out);\n }\n \n /* Get the field within RECORD_TYPE at BIT_OFFSET.  */"}]}