{"sha": "94e54b8d14ac5525d8a4004e0450f5c6fff50252", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRlNTRiOGQxNGFjNTUyNWQ4YTQwMDRlMDQ1MGY1YzZmZmY1MDI1Mg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-01-27T19:16:51Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-01-27T19:16:51Z"}, "message": "re PR c++/63889 (Ice with redundant static in class scope constexpr variable template.)\n\n\tPR c++/63889\n\t* pt.c (finish_template_variable): Move from semantics.c.\n\tHandle multiple template arg levels.  Handle coercion here.\n\t(lookup_template_variable): Not here.\n\nFrom-SVN: r220183", "tree": {"sha": "8c9c31a6cd77e41f2452037dd5869a4087efde2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c9c31a6cd77e41f2452037dd5869a4087efde2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94e54b8d14ac5525d8a4004e0450f5c6fff50252", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94e54b8d14ac5525d8a4004e0450f5c6fff50252", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94e54b8d14ac5525d8a4004e0450f5c6fff50252", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94e54b8d14ac5525d8a4004e0450f5c6fff50252/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "47da0bf6fbf3ca60bfd8a44a557dcf69bd4c053b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47da0bf6fbf3ca60bfd8a44a557dcf69bd4c053b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47da0bf6fbf3ca60bfd8a44a557dcf69bd4c053b"}], "stats": {"total": 53, "additions": 40, "deletions": 13}, "files": [{"sha": "b914f4b133426334a036a15ad7545200ee402310", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94e54b8d14ac5525d8a4004e0450f5c6fff50252/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94e54b8d14ac5525d8a4004e0450f5c6fff50252/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=94e54b8d14ac5525d8a4004e0450f5c6fff50252", "patch": "@@ -1,3 +1,10 @@\n+2015-01-27  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/63889\n+\t* pt.c (finish_template_variable): Move from semantics.c.\n+\tHandle multiple template arg levels.  Handle coercion here.\n+\t(lookup_template_variable): Not here.\n+\n 2015-01-23  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/64314"}, {"sha": "d377daaf2a62a5b57aa9a924817500cf92ab59d6", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94e54b8d14ac5525d8a4004e0450f5c6fff50252/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94e54b8d14ac5525d8a4004e0450f5c6fff50252/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=94e54b8d14ac5525d8a4004e0450f5c6fff50252", "patch": "@@ -8091,13 +8091,28 @@ tree\n lookup_template_variable (tree templ, tree arglist)\n {\n   tree type = unknown_type_node;\n-  tsubst_flags_t complain = tf_warning_or_error;\n-  tree parms = INNERMOST_TEMPLATE_PARMS (DECL_TEMPLATE_PARMS (templ));\n-  arglist = coerce_template_parms (parms, arglist, templ, complain,\n-\t\t\t\t   /*req_all*/true, /*use_default*/true);\n   return build2 (TEMPLATE_ID_EXPR, type, templ, arglist);\n }\n \n+/* Instantiate a variable declaration from a TEMPLATE_ID_EXPR for use. */\n+\n+tree\n+finish_template_variable (tree var)\n+{\n+  tree templ = TREE_OPERAND (var, 0);\n+\n+  tree arglist = TREE_OPERAND (var, 1);\n+  tree tmpl_args = DECL_TI_ARGS (DECL_TEMPLATE_RESULT (templ));\n+  arglist = add_outermost_template_args (tmpl_args, arglist);\n+\n+  tree parms = DECL_TEMPLATE_PARMS (templ);\n+  tsubst_flags_t complain = tf_warning_or_error;\n+  arglist = coerce_innermost_template_parms (parms, arglist, templ, complain,\n+\t\t\t\t\t     /*req_all*/true,\n+\t\t\t\t\t     /*use_default*/true);\n+\n+  return instantiate_template (templ, arglist, complain);\n+}\n \f\n struct pair_fn_data\n {"}, {"sha": "75aa501fe8c00627866f290060c8dd6a41f85dac", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94e54b8d14ac5525d8a4004e0450f5c6fff50252/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94e54b8d14ac5525d8a4004e0450f5c6fff50252/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=94e54b8d14ac5525d8a4004e0450f5c6fff50252", "patch": "@@ -2454,15 +2454,6 @@ finish_call_expr (tree fn, vec<tree, va_gc> **args, bool disallow_virtual,\n   return result;\n }\n \n-/* Instantiate a variable declaration from a TEMPLATE_ID_EXPR for use. */\n-\n-tree\n-finish_template_variable (tree var)\n-{\n-  return instantiate_template (TREE_OPERAND (var, 0), TREE_OPERAND (var, 1),\n-                               tf_error);\n-}\n-\n /* Finish a call to a postfix increment or decrement or EXPR.  (Which\n    is indicated by CODE, which should be POSTINCREMENT_EXPR or\n    POSTDECREMENT_EXPR.)  */"}, {"sha": "9ddc925e97eb88439013c8dafdb45a67473feb1b", "filename": "gcc/testsuite/g++.dg/cpp1y/var-templ22.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94e54b8d14ac5525d8a4004e0450f5c6fff50252/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94e54b8d14ac5525d8a4004e0450f5c6fff50252/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ22.C?ref=94e54b8d14ac5525d8a4004e0450f5c6fff50252", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/63889\n+// { dg-do compile { target c++14 } }\n+\n+template<class T>\n+struct A\n+{\n+  template<class>\n+  static constexpr bool is_ok = true;\n+\n+  template<bool v = is_ok<T>>\n+  A(T) { }\n+};\n+\n+A<int> p(42);"}]}