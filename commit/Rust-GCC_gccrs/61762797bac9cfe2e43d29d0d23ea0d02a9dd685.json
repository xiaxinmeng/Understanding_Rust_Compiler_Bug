{"sha": "61762797bac9cfe2e43d29d0d23ea0d02a9dd685", "node_id": "C_kwDOANBUbNoAKDYxNzYyNzk3YmFjOWNmZTJlNDNkMjlkMGQyM2VhMGQwMmE5ZGQ2ODU", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2022-03-07T11:50:27Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2022-09-29T18:02:21Z"}, "message": "Improve comments and INITFINI macro use in vxcrtsutff.c\n\nThis change augments the comment attached to the use of auto-host.h\nin vxcrtstuff.c to better describe the reason for including it and\nfor the associated series of #undef directives.\n\nIt also augments the comment on dso_handle and removes a redundant\nguard on HAVE_INITFINI_ARRAY_SUPPORT for the shared version of the\nobjects, nested within a section guarded on USE_INITFINI_ARRAY.\n\n2022-09-29  Olivier Hainque  <hainque@adacore.com>\n\nlibgcc/\n\t* config/vxcrtstuff.c: Improve the comment attached to the use\n\tof auto-host.h and of __dso_handle.  Remove redundant guard on\n\tHAVE_INITFINI_ARRAY_SUPPORT within a USE_INITFINI_ARRAY section.", "tree": {"sha": "c263ead227e4d511db451f2f22a36bca62c7dc08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c263ead227e4d511db451f2f22a36bca62c7dc08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61762797bac9cfe2e43d29d0d23ea0d02a9dd685", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61762797bac9cfe2e43d29d0d23ea0d02a9dd685", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61762797bac9cfe2e43d29d0d23ea0d02a9dd685", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61762797bac9cfe2e43d29d0d23ea0d02a9dd685/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73d9b0e5947e162386f7e25d3851097cee1bb366", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73d9b0e5947e162386f7e25d3851097cee1bb366", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73d9b0e5947e162386f7e25d3851097cee1bb366"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "5045acfc6da17a80f2889433f76869be48961679", "filename": "libgcc/config/vxcrtstuff.c", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61762797bac9cfe2e43d29d0d23ea0d02a9dd685/libgcc%2Fconfig%2Fvxcrtstuff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61762797bac9cfe2e43d29d0d23ea0d02a9dd685/libgcc%2Fconfig%2Fvxcrtstuff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fvxcrtstuff.c?ref=61762797bac9cfe2e43d29d0d23ea0d02a9dd685", "patch": "@@ -26,15 +26,21 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #define IN_LIBGCC2\n \n-/* FIXME: Including auto-host is incorrect, but until we have\n-   identified the set of defines that need to go into auto-target.h,\n-   this will have to do.  */\n+/* FIXME: Including auto-host is incorrect here (target library implementation\n+   file), but we still need it for DEFAULT_USE_CXA_ATEXIT and most importantly\n+   USE_INITFINI_ARRAY, guarded by HAVE_INITFINI_ARRAY_SUPPORT, not yet handled\n+   by auto-target.h.  Proceed as crtstuff.c, with the inclusion followed by a\n+   few #undefs preventing build failures in configurations setup for Windows\n+   hosts, including canadian builds.  #define USED_FOR_TARGET would circumvent\n+   this but would unfortunately also inhibit some of the definitions we\n+   need.  */\n #include \"auto-host.h\"\n #undef caddr_t\n #undef pid_t\n #undef rlim_t\n #undef ssize_t\n #undef vfork\n+\n #include \"tconfig.h\"\n #include \"tsystem.h\"\n #include \"coretypes.h\"\n@@ -58,17 +64,19 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #ifdef CRT_BEGIN\n \n+/* Provide __dso_handle in RTP objects, which might be included in contexts\n+   involving shared objects.  This mimics the crtstuff.c behavior:  dso_handle\n+   should be NULL for the main program (in vx_crtbegin.o) and a unique value\n+   for the shared libraries (in vx_crtbeginS.o).  */\n+\n #if DEFAULT_USE_CXA_ATEXIT && defined(__RTP__)\n-/* This mimics the crtstuff.c behavior.  dso_handle should be NULL for the\n-   main program (in vx_crtbegin.o) and a unique value for the shared libraries\n-   (in vx_crtbeginS.o).   */\n extern void *__dso_handle __attribute__ ((__visibility__ (\"hidden\")));\n #ifdef CRTSTUFFS_O\n void *__dso_handle = &__dso_handle;\n #else\n void *__dso_handle = 0;\n #endif\n-#endif /* DEFAULT_USE_CXA_ATEXIT */\n+#endif\n \n /* Determine what names to use for the constructor/destructor functions.  */\n \n@@ -103,7 +111,7 @@ void *__dso_handle = 0;\n    where we don't want to drag libc_internal contents blindly and which\n    provides functions with a slightly different name anyway.  */\n \n-#if HAVE_INITFINI_ARRAY_SUPPORT && defined(CRTSTUFFS_O)\n+#if defined(CRTSTUFFS_O)\n \n /* Run through the .init_array, .fini_array sections.  The linker script\n    *must* provide __init_array_start, __init_array_end, __fini_array_start,"}]}