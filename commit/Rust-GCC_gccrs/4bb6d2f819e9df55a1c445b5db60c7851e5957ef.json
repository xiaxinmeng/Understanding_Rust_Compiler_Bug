{"sha": "4bb6d2f819e9df55a1c445b5db60c7851e5957ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJiNmQyZjgxOWU5ZGY1NWExYzQ0NWI1ZGI2MGM3ODUxZTU5NTdlZg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-13T03:23:52Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-13T03:23:52Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r966", "tree": {"sha": "629b2c9bb37daefc88d05850cf684af307215f93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/629b2c9bb37daefc88d05850cf684af307215f93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bb6d2f819e9df55a1c445b5db60c7851e5957ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bb6d2f819e9df55a1c445b5db60c7851e5957ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bb6d2f819e9df55a1c445b5db60c7851e5957ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bb6d2f819e9df55a1c445b5db60c7851e5957ef/comments", "author": null, "committer": null, "parents": [{"sha": "cd4f4a28dd3e827f226f739d0b4502093677bbc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd4f4a28dd3e827f226f739d0b4502093677bbc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd4f4a28dd3e827f226f739d0b4502093677bbc4"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "2de86ae32eb4a4529425af5f21206b1b297f4d9e", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb6d2f819e9df55a1c445b5db60c7851e5957ef/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb6d2f819e9df55a1c445b5db60c7851e5957ef/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=4bb6d2f819e9df55a1c445b5db60c7851e5957ef", "patch": "@@ -3332,7 +3332,19 @@ mark_addressable (exp)\n       case CONST_DECL:\n       case PARM_DECL:\n       case RESULT_DECL:\n-\tif (TREE_REGDECL (x) && !TREE_ADDRESSABLE (x))\n+\tif (TREE_REGDECL (x) && !TREE_ADDRESSABLE (x)\n+\t    && TREE_NONLOCAL (x))\n+\t  {\n+\t    if (TREE_PUBLIC (x))\n+\t      {\n+\t\terror (\"global register variable `%s' used in nested function\",\n+\t\t       IDENTIFIER_POINTER (DECL_NAME (x)));\n+\t\treturn 0;\n+\t      }\n+\t    pedwarn (\"register variable `%s' used in nested function\",\n+\t\t     IDENTIFIER_POINTER (DECL_NAME (x)));\n+\t  }\n+\telse if (TREE_REGDECL (x) && !TREE_ADDRESSABLE (x))\n \t  {\n \t    if (TREE_PUBLIC (x))\n \t      {"}]}