{"sha": "7543c8b64cbcbeff998f6112dc8b6e07645e55a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU0M2M4YjY0Y2JjYmVmZjk5OGY2MTEyZGM4YjZlMDc2NDVlNTVhOQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-05-15T09:07:18Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-05-15T09:07:18Z"}, "message": "gigi.h (get_elaboration_procedure): Delete.\n\n\t* gcc-interface/gigi.h (get_elaboration_procedure): Delete.\n\t* gcc-interface/trans.c (get_elaboration_procedure): Make static.\n\nFrom-SVN: r248055", "tree": {"sha": "539646fdc44b01b5fa9750a210f95d11d5aa456c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/539646fdc44b01b5fa9750a210f95d11d5aa456c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7543c8b64cbcbeff998f6112dc8b6e07645e55a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7543c8b64cbcbeff998f6112dc8b6e07645e55a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7543c8b64cbcbeff998f6112dc8b6e07645e55a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7543c8b64cbcbeff998f6112dc8b6e07645e55a9/comments", "author": null, "committer": null, "parents": [{"sha": "0d5a0a33cdd9ff9ef6839636cc17e73c3ad522ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d5a0a33cdd9ff9ef6839636cc17e73c3ad522ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d5a0a33cdd9ff9ef6839636cc17e73c3ad522ec"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "1c12460f11117b55c3750a4bd2d3ebec1041124d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7543c8b64cbcbeff998f6112dc8b6e07645e55a9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7543c8b64cbcbeff998f6112dc8b6e07645e55a9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7543c8b64cbcbeff998f6112dc8b6e07645e55a9", "patch": "@@ -1,3 +1,8 @@\n+2017-05-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/gigi.h (get_elaboration_procedure): Delete.\n+\t* gcc-interface/trans.c (get_elaboration_procedure): Make static.\n+\n 2017-05-15  Pierre-Marie de Rodat  <derodat@adacore.com>\n \n \t* gcc-interface/utils.c (can_materialize_object_renaming_p):"}, {"sha": "b1fb34ad6202be2a0e124aea786ac56df3ff488e", "filename": "gcc/ada/gcc-interface/gigi.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7543c8b64cbcbeff998f6112dc8b6e07645e55a9/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7543c8b64cbcbeff998f6112dc8b6e07645e55a9/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fgigi.h?ref=7543c8b64cbcbeff998f6112dc8b6e07645e55a9", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2016, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2017, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -316,9 +316,6 @@ extern void post_error_ne_tree_2 (const char *msg, Node_Id node, Entity_Id ent,\n    if none.  */\n extern tree get_exception_label (char kind);\n \n-/* Return the decl for the current elaboration procedure.  */\n-extern tree get_elaboration_procedure (void);\n-\n /* If nonzero, pretend we are allocating at global level.  */\n extern int force_global;\n "}, {"sha": "dc1b43ad6c40b832dd2378a7c24af40930922ddd", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7543c8b64cbcbeff998f6112dc8b6e07645e55a9/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7543c8b64cbcbeff998f6112dc8b6e07645e55a9/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=7543c8b64cbcbeff998f6112dc8b6e07645e55a9", "patch": "@@ -217,6 +217,7 @@ static GTY(()) vec<tree, va_gc> *gnu_program_error_label_stack;\n static enum tree_code gnu_codes[Number_Node_Kinds];\n \n static void init_code_table (void);\n+static tree get_elaboration_procedure (void);\n static void Compilation_Unit_to_gnu (Node_Id);\n static bool empty_stmt_list_p (tree);\n static void record_code_position (Node_Id);\n@@ -10183,7 +10184,7 @@ get_exception_label (char kind)\n \n /* Return the decl for the current elaboration procedure.  */\n \n-tree\n+static tree\n get_elaboration_procedure (void)\n {\n   return gnu_elab_proc_stack->last ();"}]}