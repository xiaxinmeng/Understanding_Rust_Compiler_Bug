{"sha": "78de74bea93ed92acb7c78ebb9293eb6f1d08b15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhkZTc0YmVhOTNlZDkyYWNiN2M3OGViYjkyOTNlYjZmMWQwOGIxNQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-02-15T22:17:55Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-02-15T22:17:55Z"}, "message": "gjavah.c (jni_print_char): New function.\n\n\t* gjavah.c (jni_print_char): New function.\n\t(print_full_cxx_name): Use it.\n\t(decode_signature_piece): Likewise.\n\t(print_cxx_classname): Likewise.\n\nFrom-SVN: r31989", "tree": {"sha": "b81bddf1dfd334fc9498faba875e52aec59bc13f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b81bddf1dfd334fc9498faba875e52aec59bc13f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78de74bea93ed92acb7c78ebb9293eb6f1d08b15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78de74bea93ed92acb7c78ebb9293eb6f1d08b15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78de74bea93ed92acb7c78ebb9293eb6f1d08b15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78de74bea93ed92acb7c78ebb9293eb6f1d08b15/comments", "author": null, "committer": null, "parents": [{"sha": "17eb79518003c8b1d533c5a170d85962cbbe3fdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17eb79518003c8b1d533c5a170d85962cbbe3fdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17eb79518003c8b1d533c5a170d85962cbbe3fdf"}], "stats": {"total": 68, "additions": 43, "deletions": 25}, "files": [{"sha": "895a14cc36c82fab055fb5a4cef6731c1f202025", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78de74bea93ed92acb7c78ebb9293eb6f1d08b15/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78de74bea93ed92acb7c78ebb9293eb6f1d08b15/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=78de74bea93ed92acb7c78ebb9293eb6f1d08b15", "patch": "@@ -1,3 +1,10 @@\n+2000-02-15  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* gjavah.c (jni_print_char): New function.\n+\t(print_full_cxx_name): Use it.\n+\t(decode_signature_piece): Likewise.\n+\t(print_cxx_classname): Likewise.\n+\n 2000-02-15  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Makefile.in (jv-scan, jcf-dump, gcjh): Depend on and link with"}, {"sha": "a8b9c36fbfae7391156826fcaf4071b8961a5b5e", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 36, "deletions": 25, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78de74bea93ed92acb7c78ebb9293eb6f1d08b15/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78de74bea93ed92acb7c78ebb9293eb6f1d08b15/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=78de74bea93ed92acb7c78ebb9293eb6f1d08b15", "patch": "@@ -248,6 +248,38 @@ DEFUN(print_name, (stream, jcf, name_index),\n \t\t    JPOOL_UTF_LENGTH (jcf, name_index));\n }\n \n+/* Print a character, appropriately mangled for JNI.  */\n+\n+static void\n+jni_print_char (stream, ch)\n+     FILE *stream;\n+     int ch;\n+{\n+  if (! flag_jni)\n+    jcf_print_char (stream, ch);\n+  else if (ch == '(' || ch == ')')\n+    {\n+      /* Ignore.  */\n+    }\n+  else if (ch == '_')\n+    fputs (\"_1\", stream);\n+  else if (ch == ';')\n+    fputs (\"_2\", stream);\n+  else if (ch == '[')\n+    fputs (\"_3\", stream);\n+  else if (ch == '/')\n+    fputs (\"_\", stream);\n+  else if ((ch >= '0' && ch <= '9')\n+\t   || (ch >= 'a' && ch <= 'z')\n+\t   || (ch >= 'A' && ch <= 'Z'))\n+    fputc (ch, stream);\n+  else\n+    {\n+      /* \"Unicode\" character.  */\n+      fprintf (stream, \"_0%04x\", ch);\n+    }\n+}\n+\n /* Print base name of class.  The base name is everything after the\n    final separator.  */\n \n@@ -888,7 +920,7 @@ decode_signature_piece (stream, signature, limit, need_space)\n       break;\n     default:\n       *need_space = 1;\n-      jcf_print_char (stream, *signature++);\n+      jni_print_char (stream, *signature++);\n       break;\n     printit:\n       signature++;\n@@ -1006,33 +1038,12 @@ DEFUN(print_full_cxx_name, (stream, jcf, name_index, signature_index,\n \t  while (signature < limit)\n \t    {\n \t      int ch = UTF8_GET (signature, limit);\n-\t      if (ch == '(')\n-\t\t{\n-\t\t  /* Ignore.  */\n-\t\t}\n-\t      else if (ch == ')')\n+\t      jni_print_char (stream, ch);\n+\t      if (ch == ')')\n \t\t{\n \t\t  /* Done.  */\n \t\t  break;\n \t\t}\n-\t      else if (ch == '_')\n-\t\tfputs (\"_1\", stream);\n-\t      else if (ch == ';')\n-\t\tfputs (\"_2\", stream);\n-\t      else if (ch == '[')\n-\t\tfputs (\"_3\", stream);\n-\t      else if (ch == '/')\n-\t\tfputs (\"_\", stream);\n-\t      else if ((ch >= '0' && ch <= '9')\n-\t\t       || (ch >= 'a' && ch <= 'z')\n-\t\t       || (ch >= 'A' && ch <= 'Z'))\n-\t\tfputc (ch, stream);\n-\t      else\n-\t\t{\n-\t\t  /* \"Unicode\" character.  FIXME: upper or lower case\n-\t\t     letters?  */\n-\t\t  fprintf (stream, \"_0%04x\", ch);\n-\t\t}\n \t    }\n \t}\n     }\n@@ -1223,7 +1234,7 @@ print_cxx_classname (stream, prefix, jcf, index)\n       if (c == '/')\n \tfputs (flag_jni ? \"_\" : \"::\", stream);\n       else\n-\tjcf_print_char (stream, c);\n+\tjni_print_char (stream, c);\n     }\n \n   return 1;"}]}