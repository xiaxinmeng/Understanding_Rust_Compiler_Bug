{"sha": "98b2060a0def628fcc061edb036feabc98d00362", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThiMjA2MGEwZGVmNjI4ZmNjMDYxZWRiMDM2ZmVhYmM5OGQwMDM2Mg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-02-23T16:03:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-02-23T16:03:47Z"}, "message": "re PR middle-end/26439 (missing VOPs for complex assignments)\n\n2006-02-23  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/26439\n\t* tree-ssa-structalias.c (find_func_aliases): Handle complex types\n\tlike aggregate types.\n\nFrom-SVN: r111389", "tree": {"sha": "f3777bf3d31c538f27c71f1583d52f3832732738", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3777bf3d31c538f27c71f1583d52f3832732738"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98b2060a0def628fcc061edb036feabc98d00362", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98b2060a0def628fcc061edb036feabc98d00362", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98b2060a0def628fcc061edb036feabc98d00362", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98b2060a0def628fcc061edb036feabc98d00362/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b9e6e5887ad007447eaaf1dcca7c17cd25c044ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9e6e5887ad007447eaaf1dcca7c17cd25c044ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9e6e5887ad007447eaaf1dcca7c17cd25c044ca"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "b04c5782bbe9a1b422819f5b855739da127c0256", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98b2060a0def628fcc061edb036feabc98d00362/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98b2060a0def628fcc061edb036feabc98d00362/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98b2060a0def628fcc061edb036feabc98d00362", "patch": "@@ -1,3 +1,9 @@\n+2006-02-23  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/26439\n+\t* tree-ssa-structalias.c (find_func_aliases): Handle complex types\n+\tlike aggregate types.\n+\n 2006-02-23  Jakub Jelinek  <jakub@redhat.com>\n \n \t* configure.ac: Add --with{,out}-long-double-128 configure option."}, {"sha": "3dac07642a8a3b5b62289756159302755a5077e8", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98b2060a0def628fcc061edb036feabc98d00362/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98b2060a0def628fcc061edb036feabc98d00362/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=98b2060a0def628fcc061edb036feabc98d00362", "patch": "@@ -3223,7 +3223,8 @@ find_func_aliases (tree origt)\n       /* Only care about pointers and structures containing\n \t pointers.  */\n       if (POINTER_TYPE_P (TREE_TYPE (PHI_RESULT (t)))\n-\t  || AGGREGATE_TYPE_P (TREE_TYPE (PHI_RESULT (t))))\n+\t  || AGGREGATE_TYPE_P (TREE_TYPE (PHI_RESULT (t)))\n+\t  || TREE_CODE (TREE_TYPE (PHI_RESULT (t))) == COMPLEX_TYPE)\n \t{\n \t  int i;\n \t  unsigned int j;\n@@ -3241,7 +3242,8 @@ find_func_aliases (tree origt)\n \t      get_constraint_for (PHI_ARG_DEF (t, i), &rhsc);\n \n \t      if (TREE_CODE (strippedrhs) == ADDR_EXPR\n-\t\t && AGGREGATE_TYPE_P (TREE_TYPE (rhstype))\n+\t\t && (AGGREGATE_TYPE_P (TREE_TYPE (rhstype))\n+\t\t     || TREE_CODE (TREE_TYPE (rhstype)) == COMPLEX_TYPE)\n \t\t && VEC_length (ce_s, rhsc) == 1)\n \t\t{\n \t\t  struct constraint_expr *origrhs;\n@@ -3384,8 +3386,10 @@ find_func_aliases (tree origt)\n       tree rhsop = TREE_OPERAND (t, 1);\n       int i;\n \n-      if (AGGREGATE_TYPE_P (TREE_TYPE (lhsop)) \n-\t  && AGGREGATE_TYPE_P (TREE_TYPE (rhsop)))\n+      if ((AGGREGATE_TYPE_P (TREE_TYPE (lhsop)) \n+\t   || TREE_CODE (TREE_TYPE (lhsop)) == COMPLEX_TYPE)\n+\t  && (AGGREGATE_TYPE_P (TREE_TYPE (rhsop))\n+\t      || TREE_CODE (TREE_TYPE (lhsop)) == COMPLEX_TYPE))\n \t{\n \t  do_structure_copy (lhsop, rhsop);\n \t}\n@@ -3395,6 +3399,7 @@ find_func_aliases (tree origt)\n \t     containing pointers, dereferences, and call expressions.  */\n \t  if (POINTER_TYPE_P (TREE_TYPE (lhsop))\n \t      || AGGREGATE_TYPE_P (TREE_TYPE (lhsop))\n+\t      || TREE_CODE (TREE_TYPE (lhsop)) == COMPLEX_TYPE\n \t      || TREE_CODE (rhsop) == CALL_EXPR)\n \t    {\n \t      get_constraint_for (lhsop, &lhsc);\n@@ -3421,7 +3426,8 @@ find_func_aliases (tree origt)\n \t\t\t\n \t\t\tget_constraint_for (rhsop, &rhsc);\n \t\t\tif (TREE_CODE (strippedrhs) == ADDR_EXPR\n-\t\t\t    && AGGREGATE_TYPE_P (TREE_TYPE (rhstype))\n+\t\t\t    && (AGGREGATE_TYPE_P (TREE_TYPE (rhstype))\n+\t\t\t\t|| TREE_CODE (TREE_TYPE (rhstype)) == COMPLEX_TYPE)\n \t\t\t    && VEC_length (ce_s, rhsc) == 1)\n \t\t\t  {\n \t\t\t    struct constraint_expr *origrhs;"}]}