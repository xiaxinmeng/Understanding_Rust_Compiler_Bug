{"sha": "06e28db05e78dc0c785b9539f811f5091ee87dd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZlMjhkYjA1ZTc4ZGMwYzc4NWI5NTM5ZjgxMWY1MDkxZWU4N2RkMg==", "commit": {"author": {"name": "Terry Guo", "email": "terry.guo@arm.com", "date": "2012-09-19T05:17:22Z"}, "committer": {"name": "Xuepeng Guo", "email": "xguo@gcc.gnu.org", "date": "2012-09-19T05:17:22Z"}, "message": "gcc-dg.exp (dg_runtest_extra_prunes): New variable to define extra prune rules that will be applied to all tests in a...\n\n2012-09-19  Terry Guo  <terry.guo@arm.com>\n\n        * lib/gcc-dg.exp (dg_runtest_extra_prunes): New variable to define\n        extra prune rules that will be applied to all tests in a .exp file.\n        (gcc-dg-prune): Use rules defined by the above variable.\n        * gcc.target/arm/arm.exp (dg_runtest_extra_prunes): Skip all the\n        harmless warnings on architecture switch conflict.\n\nFrom-SVN: r191460", "tree": {"sha": "6a6a467686b962aadf309337187d6b8c35d6d770", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a6a467686b962aadf309337187d6b8c35d6d770"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06e28db05e78dc0c785b9539f811f5091ee87dd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06e28db05e78dc0c785b9539f811f5091ee87dd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06e28db05e78dc0c785b9539f811f5091ee87dd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06e28db05e78dc0c785b9539f811f5091ee87dd2/comments", "author": null, "committer": null, "parents": [{"sha": "9425c00b8ed849698869d1dc4372151c2a3a7cc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9425c00b8ed849698869d1dc4372151c2a3a7cc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9425c00b8ed849698869d1dc4372151c2a3a7cc3"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "df70396f9366c90487f5b5b973bebb9f2e18cd49", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06e28db05e78dc0c785b9539f811f5091ee87dd2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06e28db05e78dc0c785b9539f811f5091ee87dd2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=06e28db05e78dc0c785b9539f811f5091ee87dd2", "patch": "@@ -1,3 +1,11 @@\n+2012-09-19  Terry Guo  <terry.guo@arm.com>\n+\n+\t* lib/gcc-dg.exp (dg_runtest_extra_prunes): New variable to define\n+\textra prune rules that will be applied to all tests in a .exp file.\n+\t(gcc-dg-prune): Use rules defined by the above variable.\n+\t* gcc.target/arm/arm.exp (dg_runtest_extra_prunes): Skip all the\n+\tharmless warnings on architecture switch conflict.\n+\n 2012-09-19  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* g++.dg/debug/dwarf2/nested-3.C: Match a sequence"}, {"sha": "de52892101796663cc1994c1c765e9f5659c39bf", "filename": "gcc/testsuite/gcc.target/arm/arm.exp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06e28db05e78dc0c785b9539f811f5091ee87dd2/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farm.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06e28db05e78dc0c785b9539f811f5091ee87dd2/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farm.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Farm.exp?ref=06e28db05e78dc0c785b9539f811f5091ee87dd2", "patch": "@@ -30,6 +30,11 @@ if ![info exists DEFAULT_CFLAGS] then {\n     set DEFAULT_CFLAGS \" -ansi -pedantic-errors\"\n }\n \n+# This variable should only apply to tests called in this exp file.\n+global dg_runtest_extra_prunes\n+set dg_runtest_extra_prunes \"\"\n+lappend dg_runtest_extra_prunes \"warning: switch -m(cpu|arch)=.* conflicts with -m(cpu|arch)=.* switch\"\n+\n # Initialize `dg'.\n dg-init\n \n@@ -38,4 +43,5 @@ dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cCS\\]]] \\\n \t\"\" $DEFAULT_CFLAGS\n \n # All done.\n+set dg_runtest_extra_prunes \"\"\n dg-finish"}, {"sha": "2cc49f7e6b7705c7460a98afd1a7f8379b8cb504", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06e28db05e78dc0c785b9539f811f5091ee87dd2/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06e28db05e78dc0c785b9539f811f5091ee87dd2/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=06e28db05e78dc0c785b9539f811f5091ee87dd2", "patch": "@@ -212,9 +212,13 @@ proc gcc-dg-test { prog do_what extra_tool_flags } {\n proc gcc-dg-prune { system text } {\n     global additional_prunes\n \n+    # Extra prune rules that will apply to tests defined in a .exp file.\n+    # Always remember to clear it in .exp file after executed all tests.\n+    global dg_runtest_extra_prunes\n+\n     set text [prune_gcc_output $text]\n \n-    foreach p $additional_prunes {\n+    foreach p \"$additional_prunes $dg_runtest_extra_prunes\" {\n \tif { [string length $p] > 0 } {\n \t    # Following regexp matches a complete line containing $p.\n \t    regsub -all \"(^|\\n)\\[^\\n\\]*$p\\[^\\n\\]*\" $text \"\" text\n@@ -803,3 +807,4 @@ proc gdb-exists { args } {\n }\n \n set additional_prunes \"\"\n+set dg_runtest_extra_prunes \"\""}]}