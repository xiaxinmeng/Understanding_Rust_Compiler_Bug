{"sha": "9e3090e11260968e1bc2af530b3ed339fb43db16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUzMDkwZTExMjYwOTY4ZTFiYzJhZjUzMGIzZWQzMzlmYjQzZGIxNg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-27T20:21:56Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-27T20:21:56Z"}, "message": "reorg.c: Use rtx_sequence\n\ngcc/\n2014-08-27  David Malcolm  <dmalcolm@redhat.com>\n\n\t* reorg.c (redundant_insn): In two places in the function, replace\n\ta check of GET_CODE with a dyn_cast, introducing local \"seq\", and\n\tusings methods of rtx_sequence to clarify the code.\n\nFrom-SVN: r214597", "tree": {"sha": "c98db4e91f44be888f5e27751c67882fc0a4d817", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c98db4e91f44be888f5e27751c67882fc0a4d817"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e3090e11260968e1bc2af530b3ed339fb43db16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e3090e11260968e1bc2af530b3ed339fb43db16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e3090e11260968e1bc2af530b3ed339fb43db16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e3090e11260968e1bc2af530b3ed339fb43db16/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "33d9cde485f08edc7ada941aef9229312f38f8ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33d9cde485f08edc7ada941aef9229312f38f8ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33d9cde485f08edc7ada941aef9229312f38f8ed"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "712914e8323814a8c87da6c5f7551af52d36abe3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e3090e11260968e1bc2af530b3ed339fb43db16/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e3090e11260968e1bc2af530b3ed339fb43db16/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e3090e11260968e1bc2af530b3ed339fb43db16", "patch": "@@ -1,3 +1,9 @@\n+2014-08-27  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* reorg.c (redundant_insn): In two places in the function, replace\n+\ta check of GET_CODE with a dyn_cast, introducing local \"seq\", and\n+\tusings methods of rtx_sequence to clarify the code.\n+\n 2014-08-27  David Malcolm  <dmalcolm@redhat.com>\n \n \t* jump.c (mark_jump_label_1): Within the SEQUENCE case, introduce"}, {"sha": "75e787a4a6069e74f6ddabda9a111bc0d7fc4ac7", "filename": "gcc/reorg.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e3090e11260968e1bc2af530b3ed339fb43db16/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e3090e11260968e1bc2af530b3ed339fb43db16/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=9e3090e11260968e1bc2af530b3ed339fb43db16", "patch": "@@ -1526,33 +1526,33 @@ redundant_insn (rtx insn, rtx target, rtx delay_list)\n       if (GET_CODE (pat) == USE || GET_CODE (pat) == CLOBBER)\n \tcontinue;\n \n-      if (GET_CODE (pat) == SEQUENCE)\n+      if (rtx_sequence *seq = dyn_cast <rtx_sequence *> (pat))\n \t{\n \t  /* Stop for a CALL and its delay slots because it is difficult to\n \t     track its resource needs correctly.  */\n-\t  if (CALL_P (XVECEXP (pat, 0, 0)))\n+\t  if (CALL_P (seq->element (0)))\n \t    return 0;\n \n \t  /* Stop for an INSN or JUMP_INSN with delayed effects and its delay\n \t     slots because it is difficult to track its resource needs\n \t     correctly.  */\n \n #ifdef INSN_SETS_ARE_DELAYED\n-\t  if (INSN_SETS_ARE_DELAYED (XVECEXP (pat, 0, 0)))\n+\t  if (INSN_SETS_ARE_DELAYED (seq->element (0)))\n \t    return 0;\n #endif\n \n #ifdef INSN_REFERENCES_ARE_DELAYED\n-\t  if (INSN_REFERENCES_ARE_DELAYED (XVECEXP (pat, 0, 0)))\n+\t  if (INSN_REFERENCES_ARE_DELAYED (seq->element (0)))\n \t    return 0;\n #endif\n \n \t  /* See if any of the insns in the delay slot match, updating\n \t     resource requirements as we go.  */\n-\t  for (i = XVECLEN (pat, 0) - 1; i > 0; i--)\n-\t    if (GET_CODE (XVECEXP (pat, 0, i)) == GET_CODE (insn)\n-\t\t&& rtx_equal_p (PATTERN (XVECEXP (pat, 0, i)), ipat)\n-\t\t&& ! find_reg_note (XVECEXP (pat, 0, i), REG_UNUSED, NULL_RTX))\n+\t  for (i = seq->len () - 1; i > 0; i--)\n+\t    if (GET_CODE (seq->element (i)) == GET_CODE (insn)\n+\t\t&& rtx_equal_p (PATTERN (seq->element (i)), ipat)\n+\t\t&& ! find_reg_note (seq->element (i), REG_UNUSED, NULL_RTX))\n \t      break;\n \n \t  /* If found a match, exit this loop early.  */\n@@ -1628,10 +1628,10 @@ redundant_insn (rtx insn, rtx target, rtx delay_list)\n       if (GET_CODE (pat) == USE || GET_CODE (pat) == CLOBBER)\n \tcontinue;\n \n-      if (GET_CODE (pat) == SEQUENCE)\n+      if (rtx_sequence *seq = dyn_cast <rtx_sequence *> (pat))\n \t{\n \t  bool annul_p = false;\n-          rtx control = XVECEXP (pat, 0, 0);\n+          rtx control = seq->element (0);\n \n \t  /* If this is a CALL_INSN and its delay slots, it is hard to track\n \t     the resource needs properly, so give up.  */\n@@ -1656,9 +1656,9 @@ redundant_insn (rtx insn, rtx target, rtx delay_list)\n \n \t  /* See if any of the insns in the delay slot match, updating\n \t     resource requirements as we go.  */\n-\t  for (i = XVECLEN (pat, 0) - 1; i > 0; i--)\n+\t  for (i = seq->len () - 1; i > 0; i--)\n \t    {\n-\t      rtx candidate = XVECEXP (pat, 0, i);\n+\t      rtx candidate = seq->element (i);\n \n \t      /* If an insn will be annulled if the branch is false, it isn't\n \t\t considered as a possible duplicate insn.  */"}]}