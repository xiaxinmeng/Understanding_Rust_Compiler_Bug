{"sha": "8ca43e4ea58ae436af4b5818916abc15b2fd8f49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNhNDNlNGVhNThhZTQzNmFmNGI1ODE4OTE2YWJjMTViMmZkOGY0OQ==", "commit": {"author": {"name": "G\u00f6ran Uddeborg", "email": "goeran@uddeborg.se", "date": "2020-08-26T23:06:28Z"}, "committer": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-08-26T23:07:36Z"}, "message": "Fix documentation of -fprofile-exclude-files\n\nThe wording of the description of -fprofile-exclude-files is easy to\nmisunderstand.  One can be led to believe a file is excluded only if\nit matches all of the patterns, not just one.  This patch tries to\nclarify the function.  It also adjusts the wording of\n-fprofile-filter-files accordingly.\n\ngcc/\n\n\tPR gcov-profile/96285\n\t* common.opt, doc/invoke.texi: Clarify wording of\n\t-fprofile-exclude-files and adjust -fprofile-filter-files to\n\tmatch.", "tree": {"sha": "e3fd1924f7813824a9bcd2261e0f048fe61d7dc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3fd1924f7813824a9bcd2261e0f048fe61d7dc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ca43e4ea58ae436af4b5818916abc15b2fd8f49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ca43e4ea58ae436af4b5818916abc15b2fd8f49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ca43e4ea58ae436af4b5818916abc15b2fd8f49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ca43e4ea58ae436af4b5818916abc15b2fd8f49/comments", "author": {"login": "goeranu", "id": 1842587, "node_id": "MDQ6VXNlcjE4NDI1ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1842587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goeranu", "html_url": "https://github.com/goeranu", "followers_url": "https://api.github.com/users/goeranu/followers", "following_url": "https://api.github.com/users/goeranu/following{/other_user}", "gists_url": "https://api.github.com/users/goeranu/gists{/gist_id}", "starred_url": "https://api.github.com/users/goeranu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goeranu/subscriptions", "organizations_url": "https://api.github.com/users/goeranu/orgs", "repos_url": "https://api.github.com/users/goeranu/repos", "events_url": "https://api.github.com/users/goeranu/events{/privacy}", "received_events_url": "https://api.github.com/users/goeranu/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f1ea8ddccc34c28f72910d9f61bacd35cc73270", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f1ea8ddccc34c28f72910d9f61bacd35cc73270", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f1ea8ddccc34c28f72910d9f61bacd35cc73270"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "dd68c61ae1d27a838c22eede2834c67d63677eff", "filename": "gcc/common.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ca43e4ea58ae436af4b5818916abc15b2fd8f49/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ca43e4ea58ae436af4b5818916abc15b2fd8f49/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=8ca43e4ea58ae436af4b5818916abc15b2fd8f49", "patch": "@@ -2210,11 +2210,11 @@ Common Joined RejectNegative Enum(profile_update) Var(flag_profile_update) Init(\n \n fprofile-filter-files=\n Common Joined RejectNegative Var(flag_profile_filter_files)\n-Instrument only functions from files where names match any regular expression (separated by a semi-colon).\n+Instrument only functions from files whose name matches any of the regular expressions (separated by semi-colons).\n \n fprofile-exclude-files=\n Common Joined RejectNegative Var(flag_profile_exclude_files)\n-Instrument only functions from files where names do not match all the regular expressions (separated by a semi-colon).\n+Instrument only functions from files whose name does not match any of the regular expressions (separated by semi-colons).\n \n Enum\n Name(profile_reproducibility) Type(enum profile_reproducibility) UnknownError(unknown profile reproducibility method %qs)"}, {"sha": "c99924214a7a89eadf7018eb13d9e72f0feab69d", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ca43e4ea58ae436af4b5818916abc15b2fd8f49/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ca43e4ea58ae436af4b5818916abc15b2fd8f49/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=8ca43e4ea58ae436af4b5818916abc15b2fd8f49", "patch": "@@ -13859,20 +13859,20 @@ is present in the command line.\n @item -fprofile-filter-files=@var{regex}\n @opindex fprofile-filter-files\n \n-Instrument only functions from files where names match\n-any regular expression (separated by a semi-colon).\n+Instrument only functions from files whose name matches\n+any of the regular expressions (separated by semi-colons).\n \n-For example, @option{-fprofile-filter-files=main.c;module.*.c} will instrument\n+For example, @option{-fprofile-filter-files=main\\.c;module.*\\.c} will instrument\n only @file{main.c} and all C files starting with 'module'.\n \n @item -fprofile-exclude-files=@var{regex}\n @opindex fprofile-exclude-files\n \n-Instrument only functions from files where names do not match\n-all the regular expressions (separated by a semi-colon).\n+Instrument only functions from files whose name does not match\n+any of the regular expressions (separated by semi-colons).\n \n-For example, @option{-fprofile-exclude-files=/usr/*} will prevent instrumentation\n-of all files that are located in @file{/usr/} folder.\n+For example, @option{-fprofile-exclude-files=/usr/.*} will prevent instrumentation\n+of all files that are located in the @file{/usr/} folder.\n \n @item -fprofile-reproducible\n @opindex fprofile-reproducible"}]}