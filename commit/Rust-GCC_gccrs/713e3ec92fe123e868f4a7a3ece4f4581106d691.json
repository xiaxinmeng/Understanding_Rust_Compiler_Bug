{"sha": "713e3ec92fe123e868f4a7a3ece4f4581106d691", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzEzZTNlYzkyZmUxMjNlODY4ZjRhN2EzZWNlNGY0NTgxMTA2ZDY5MQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-02-04T15:15:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-02-04T15:15:38Z"}, "message": "re PR middle-end/30636 (incorrect array bounds warning on multi-dimensional arrays)\n\n2007-02-04  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/30636\n\t* fold-const.c (try_move_mult_to_index): Make sure to not\n\toverflow one dimension of a multi-dimensional array access.\n\n\t* g++.dg/warn/pr30636.C: New testcase.\n\t* g++.dg/tree-ssa/tmmti-2.C: XFAIL parts.\n\nFrom-SVN: r121575", "tree": {"sha": "cada47dcc485f110239acb45110951e3b8d2c8d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cada47dcc485f110239acb45110951e3b8d2c8d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/713e3ec92fe123e868f4a7a3ece4f4581106d691", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713e3ec92fe123e868f4a7a3ece4f4581106d691", "html_url": "https://github.com/Rust-GCC/gccrs/commit/713e3ec92fe123e868f4a7a3ece4f4581106d691", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713e3ec92fe123e868f4a7a3ece4f4581106d691/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5c4f0f47935386fd60e70deb452bb4422480d22f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c4f0f47935386fd60e70deb452bb4422480d22f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c4f0f47935386fd60e70deb452bb4422480d22f"}], "stats": {"total": 60, "additions": 59, "deletions": 1}, "files": [{"sha": "d2c30766facb324c03480abe8d8195aec776e789", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713e3ec92fe123e868f4a7a3ece4f4581106d691/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713e3ec92fe123e868f4a7a3ece4f4581106d691/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=713e3ec92fe123e868f4a7a3ece4f4581106d691", "patch": "@@ -1,3 +1,9 @@\n+2007-02-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/30636\n+\t* fold-const.c (try_move_mult_to_index): Make sure to not\n+\toverflow one dimension of a multi-dimensional array access.\n+\n 2007-02-04  Jan Hubicka  <jh@suse.cz>\n \n \t* passes.c (init_optimization_passes): Reindent."}, {"sha": "ee2c469921c518388653ef4652cef962561d776c", "filename": "gcc/fold-const.c", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713e3ec92fe123e868f4a7a3ece4f4581106d691/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713e3ec92fe123e868f4a7a3ece4f4581106d691/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=713e3ec92fe123e868f4a7a3ece4f4581106d691", "patch": "@@ -6642,6 +6642,7 @@ try_move_mult_to_index (enum tree_code code, tree addr, tree op1)\n   tree ref = TREE_OPERAND (addr, 0), pref;\n   tree ret, pos;\n   tree itype;\n+  bool mdim = false;\n \n   /* Canonicalize op1 into a possibly non-constant delta\n      and an INTEGER_CST s.  */\n@@ -6681,6 +6682,10 @@ try_move_mult_to_index (enum tree_code code, tree addr, tree op1)\n     {\n       if (TREE_CODE (ref) == ARRAY_REF)\n \t{\n+\t  /* Remember if this was a multi-dimensional array.  */\n+\t  if (TREE_CODE (TREE_OPERAND (ref, 0)) == ARRAY_REF)\n+\t    mdim = true;\n+\n \t  itype = TYPE_DOMAIN (TREE_TYPE (TREE_OPERAND (ref, 0)));\n \t  if (! itype)\n \t    continue;\n@@ -6703,8 +6708,32 @@ try_move_mult_to_index (enum tree_code code, tree addr, tree op1)\n \t      delta = tmp;\n \t    }\n \n+\t  /* Only fold here if we can verify we do not overflow one\n+\t     dimension of a multi-dimensional array.  */\n+\t  if (mdim)\n+\t    {\n+\t      tree tmp;\n+\n+\t      if (TREE_CODE (TREE_OPERAND (ref, 1)) != INTEGER_CST\n+\t\t  || !INTEGRAL_TYPE_P (itype)\n+\t\t  || !TYPE_MAX_VALUE (itype)\n+\t\t  || TREE_CODE (TYPE_MAX_VALUE (itype)) != INTEGER_CST)\n+\t\tcontinue;\n+\n+\t      tmp = fold_binary (code, itype,\n+\t\t\t\t fold_convert (itype,\n+\t\t\t\t\t       TREE_OPERAND (ref, 1)),\n+\t\t\t\t fold_convert (itype, delta));\n+\t      if (!tmp\n+\t\t  || TREE_CODE (tmp) != INTEGER_CST\n+\t\t  || tree_int_cst_lt (TYPE_MAX_VALUE (itype), tmp))\n+\t\tcontinue;\n+\t    }\n+\n \t  break;\n \t}\n+      else\n+\tmdim = false;\n \n       if (!handled_component_p (ref))\n \treturn NULL_TREE;"}, {"sha": "d53a458a6e41c69c93604159582cf31da6a25fe3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713e3ec92fe123e868f4a7a3ece4f4581106d691/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713e3ec92fe123e868f4a7a3ece4f4581106d691/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=713e3ec92fe123e868f4a7a3ece4f4581106d691", "patch": "@@ -1,3 +1,9 @@\n+2007-02-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/30636\n+\t* g++.dg/warn/pr30636.C: New testcase.\n+\t* g++.dg/tree-ssa/tmmti-2.C: XFAIL parts.\n+\n 2007-02-03  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR middle-end/30667"}, {"sha": "fc5899465af2bb494d77955da7bd37657040cde1", "filename": "gcc/testsuite/g++.dg/tree-ssa/tmmti-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713e3ec92fe123e868f4a7a3ece4f4581106d691/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Ftmmti-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713e3ec92fe123e868f4a7a3ece4f4581106d691/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Ftmmti-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Ftmmti-2.C?ref=713e3ec92fe123e868f4a7a3ece4f4581106d691", "patch": "@@ -17,6 +17,6 @@ double bar(int i)\n \treturn *(&b[0].x + i*2); // b[i].x\n }\n \n-/* { dg-final { scan-tree-dump \"a\\\\\\[.*i.*\\\\\\]\\\\\\[0\\\\\\]\" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"a\\\\\\[.*i.*\\\\\\]\\\\\\[0\\\\\\]\" \"optimized\" { xfail *-*-* } } } */\n /* { dg-final { scan-tree-dump \"b\\\\\\[.*i.*\\\\\\].x\" \"optimized\" } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "32ce6edbd61c7923f970a70ea8caef4127d090a6", "filename": "gcc/testsuite/g++.dg/warn/pr30636.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713e3ec92fe123e868f4a7a3ece4f4581106d691/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr30636.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713e3ec92fe123e868f4a7a3ece4f4581106d691/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr30636.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr30636.C?ref=713e3ec92fe123e868f4a7a3ece4f4581106d691", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Warray-bounds\" } */\n+\n+typedef char one_buffer[512];\n+static one_buffer emergency_buffer[4];\n+\n+void free_exception (void *vptr)\n+{\n+  char *base = (char *) &emergency_buffer[0][0];\n+  char *ptr = (char *) vptr;\n+  if (ptr >= base && ptr < base + sizeof (emergency_buffer)) /* { dg-bogus \"subscript\" } */\n+    {\n+      /* Do something. */\n+      __builtin_exit (0);\n+    }\n+}\n+"}]}