{"sha": "20d5dca80b82df9b1295359edb44eb08c45c4334", "node_id": "C_kwDOANBUbNoAKDIwZDVkY2E4MGI4MmRmOWIxMjk1MzU5ZWRiNDRlYjA4YzQ1YzQzMzQ", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2022-11-03T06:22:45Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2022-11-03T06:22:45Z"}, "message": "testsuite: Fix gen-vect-34.c with vect_masked_load [PR106806]\n\nThis is to fix the failure on powerpc as reported in PR106806,\nthe test case requires tree ifcvt pass to perform on that loop,\nand it relies on masked_load support.  The fix is to guard the\nexpected scan with vect_masked_load effective target.\n\nAs tested on powerpc64{,le}-linux-gnu and aarch64-linux-gnu\n(cfarm machine), the failures were gone.  But on\nx86_64-redhat-linux (cfarm machine) the result becomes from\nPASS to N/A.  I think it's expected since that machine doesn't\nsupport AVX by default so both check_avx_available and\nvect_masked_load fail, it should work fine on machines with\ndefault AVX support, or if we adjust the current\ncheck_avx_available with current_compiler_flags.\n\n\tPR testsuite/106806\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/tree-ssa/gen-vect-34.c: Adjust with vect_masked_load\n\teffective target.", "tree": {"sha": "245ba1103e8a62896286c1cabd8e1416f58e9434", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/245ba1103e8a62896286c1cabd8e1416f58e9434"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20d5dca80b82df9b1295359edb44eb08c45c4334", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20d5dca80b82df9b1295359edb44eb08c45c4334", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20d5dca80b82df9b1295359edb44eb08c45c4334", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20d5dca80b82df9b1295359edb44eb08c45c4334/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3c898e12d0ace542498c9fe975e549b5a6c8acd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3c898e12d0ace542498c9fe975e549b5a6c8acd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3c898e12d0ace542498c9fe975e549b5a6c8acd"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c2e5dfea35fb173b8b89e767796bdd582d040560", "filename": "gcc/testsuite/gcc.dg/tree-ssa/gen-vect-34.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20d5dca80b82df9b1295359edb44eb08c45c4334/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-34.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20d5dca80b82df9b1295359edb44eb08c45c4334/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-34.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-34.c?ref=20d5dca80b82df9b1295359edb44eb08c45c4334", "patch": "@@ -13,4 +13,4 @@ float summul(int n, float *arg1, float *arg2)\n     return res1;                                       \n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { ! { avr-*-* pru-*-* riscv*-*-* } } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target vect_masked_load } } } */"}]}