{"sha": "7da827c99c03adf3342a83a3c3ad3b72873154ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RhODI3Yzk5YzAzYWRmMzM0MmE4M2EzYzNhZDNiNzI4NzMxNTRjZQ==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-01-09T22:25:44Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-01-09T22:59:30Z"}, "message": "d: Synchronize testsuite with upstream dmd\n\nAdds TEST_OUTPUT directives and reduces the verbosity of many tests.\n\nReviewed-on: https://github.com/dlang/dmd/pull/12112\n\ngcc/d/ChangeLog:\n\n\t* dmd/MERGE: Merge upstream dmd cb1106ad5.", "tree": {"sha": "a0d485b6d9c6183f12fcc367b0ec2ec19712bac6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0d485b6d9c6183f12fcc367b0ec2ec19712bac6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7da827c99c03adf3342a83a3c3ad3b72873154ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7da827c99c03adf3342a83a3c3ad3b72873154ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7da827c99c03adf3342a83a3c3ad3b72873154ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7da827c99c03adf3342a83a3c3ad3b72873154ce/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a103daef78a8f9fc9b2af7c28123f25e8fa7163", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a103daef78a8f9fc9b2af7c28123f25e8fa7163", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a103daef78a8f9fc9b2af7c28123f25e8fa7163"}], "stats": {"total": 2790, "additions": 2527, "deletions": 263}, "files": [{"sha": "435bf31e8b08cffb087093d71af6cf34d5f7e376", "filename": "gcc/d/dmd/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Fd%2Fdmd%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Fd%2Fdmd%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FMERGE?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,4 @@\n-9bba772fa67c6864e551bc87097402f691d947d4\n+cb1106ad5bea4293cd302b0ba1f3ce08905d40fe\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/dmd repository."}, {"sha": "09360a8bec21cd955167012c6962e46bb5155e25", "filename": "gcc/testsuite/gdc.test/compilable/99bottles.d", "status": "modified", "additions": 503, "deletions": 2, "changes": 505, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2F99bottles.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2F99bottles.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2F99bottles.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -2,7 +2,7 @@\n //    http://www.digitalmars.com/d/archives/digitalmars/D/announce/4374.html\n //    http://www.99-bottles-of-beer.net/language-d-1212.html\n \n-// Displays the \"99 bottles of beer\" song at compile time,\n+// Generates the \"99 bottles of beer\" song at compile time,\n // using the template metaprograming facilities of D. \n // No executable is generated. No libraries are used.\n // Illustrates template default values, template string value parameters,\n@@ -49,4 +49,505 @@ template beer(int maxbeers, int n = maxbeers)\n         ~ showHowMany!( maxbeers, \" on the wall.\");\n }\n \n-pragma(msg, beer!(99));\n+enum expected = `99 bottles of beer on the wall,\n+99 bottles of beer.\n+Take one down and pass it around, \n+98 bottles of beer on the wall.\n+\n+98 bottles of beer on the wall,\n+98 bottles of beer.\n+Take one down and pass it around, \n+97 bottles of beer on the wall.\n+\n+97 bottles of beer on the wall,\n+97 bottles of beer.\n+Take one down and pass it around, \n+96 bottles of beer on the wall.\n+\n+96 bottles of beer on the wall,\n+96 bottles of beer.\n+Take one down and pass it around, \n+95 bottles of beer on the wall.\n+\n+95 bottles of beer on the wall,\n+95 bottles of beer.\n+Take one down and pass it around, \n+94 bottles of beer on the wall.\n+\n+94 bottles of beer on the wall,\n+94 bottles of beer.\n+Take one down and pass it around, \n+93 bottles of beer on the wall.\n+\n+93 bottles of beer on the wall,\n+93 bottles of beer.\n+Take one down and pass it around, \n+92 bottles of beer on the wall.\n+\n+92 bottles of beer on the wall,\n+92 bottles of beer.\n+Take one down and pass it around, \n+91 bottles of beer on the wall.\n+\n+91 bottles of beer on the wall,\n+91 bottles of beer.\n+Take one down and pass it around, \n+90 bottles of beer on the wall.\n+\n+90 bottles of beer on the wall,\n+90 bottles of beer.\n+Take one down and pass it around, \n+89 bottles of beer on the wall.\n+\n+89 bottles of beer on the wall,\n+89 bottles of beer.\n+Take one down and pass it around, \n+88 bottles of beer on the wall.\n+\n+88 bottles of beer on the wall,\n+88 bottles of beer.\n+Take one down and pass it around, \n+87 bottles of beer on the wall.\n+\n+87 bottles of beer on the wall,\n+87 bottles of beer.\n+Take one down and pass it around, \n+86 bottles of beer on the wall.\n+\n+86 bottles of beer on the wall,\n+86 bottles of beer.\n+Take one down and pass it around, \n+85 bottles of beer on the wall.\n+\n+85 bottles of beer on the wall,\n+85 bottles of beer.\n+Take one down and pass it around, \n+84 bottles of beer on the wall.\n+\n+84 bottles of beer on the wall,\n+84 bottles of beer.\n+Take one down and pass it around, \n+83 bottles of beer on the wall.\n+\n+83 bottles of beer on the wall,\n+83 bottles of beer.\n+Take one down and pass it around, \n+82 bottles of beer on the wall.\n+\n+82 bottles of beer on the wall,\n+82 bottles of beer.\n+Take one down and pass it around, \n+81 bottles of beer on the wall.\n+\n+81 bottles of beer on the wall,\n+81 bottles of beer.\n+Take one down and pass it around, \n+80 bottles of beer on the wall.\n+\n+80 bottles of beer on the wall,\n+80 bottles of beer.\n+Take one down and pass it around, \n+79 bottles of beer on the wall.\n+\n+79 bottles of beer on the wall,\n+79 bottles of beer.\n+Take one down and pass it around, \n+78 bottles of beer on the wall.\n+\n+78 bottles of beer on the wall,\n+78 bottles of beer.\n+Take one down and pass it around, \n+77 bottles of beer on the wall.\n+\n+77 bottles of beer on the wall,\n+77 bottles of beer.\n+Take one down and pass it around, \n+76 bottles of beer on the wall.\n+\n+76 bottles of beer on the wall,\n+76 bottles of beer.\n+Take one down and pass it around, \n+75 bottles of beer on the wall.\n+\n+75 bottles of beer on the wall,\n+75 bottles of beer.\n+Take one down and pass it around, \n+74 bottles of beer on the wall.\n+\n+74 bottles of beer on the wall,\n+74 bottles of beer.\n+Take one down and pass it around, \n+73 bottles of beer on the wall.\n+\n+73 bottles of beer on the wall,\n+73 bottles of beer.\n+Take one down and pass it around, \n+72 bottles of beer on the wall.\n+\n+72 bottles of beer on the wall,\n+72 bottles of beer.\n+Take one down and pass it around, \n+71 bottles of beer on the wall.\n+\n+71 bottles of beer on the wall,\n+71 bottles of beer.\n+Take one down and pass it around, \n+70 bottles of beer on the wall.\n+\n+70 bottles of beer on the wall,\n+70 bottles of beer.\n+Take one down and pass it around, \n+69 bottles of beer on the wall.\n+\n+69 bottles of beer on the wall,\n+69 bottles of beer.\n+Take one down and pass it around, \n+68 bottles of beer on the wall.\n+\n+68 bottles of beer on the wall,\n+68 bottles of beer.\n+Take one down and pass it around, \n+67 bottles of beer on the wall.\n+\n+67 bottles of beer on the wall,\n+67 bottles of beer.\n+Take one down and pass it around, \n+66 bottles of beer on the wall.\n+\n+66 bottles of beer on the wall,\n+66 bottles of beer.\n+Take one down and pass it around, \n+65 bottles of beer on the wall.\n+\n+65 bottles of beer on the wall,\n+65 bottles of beer.\n+Take one down and pass it around, \n+64 bottles of beer on the wall.\n+\n+64 bottles of beer on the wall,\n+64 bottles of beer.\n+Take one down and pass it around, \n+63 bottles of beer on the wall.\n+\n+63 bottles of beer on the wall,\n+63 bottles of beer.\n+Take one down and pass it around, \n+62 bottles of beer on the wall.\n+\n+62 bottles of beer on the wall,\n+62 bottles of beer.\n+Take one down and pass it around, \n+61 bottles of beer on the wall.\n+\n+61 bottles of beer on the wall,\n+61 bottles of beer.\n+Take one down and pass it around, \n+60 bottles of beer on the wall.\n+\n+60 bottles of beer on the wall,\n+60 bottles of beer.\n+Take one down and pass it around, \n+59 bottles of beer on the wall.\n+\n+59 bottles of beer on the wall,\n+59 bottles of beer.\n+Take one down and pass it around, \n+58 bottles of beer on the wall.\n+\n+58 bottles of beer on the wall,\n+58 bottles of beer.\n+Take one down and pass it around, \n+57 bottles of beer on the wall.\n+\n+57 bottles of beer on the wall,\n+57 bottles of beer.\n+Take one down and pass it around, \n+56 bottles of beer on the wall.\n+\n+56 bottles of beer on the wall,\n+56 bottles of beer.\n+Take one down and pass it around, \n+55 bottles of beer on the wall.\n+\n+55 bottles of beer on the wall,\n+55 bottles of beer.\n+Take one down and pass it around, \n+54 bottles of beer on the wall.\n+\n+54 bottles of beer on the wall,\n+54 bottles of beer.\n+Take one down and pass it around, \n+53 bottles of beer on the wall.\n+\n+53 bottles of beer on the wall,\n+53 bottles of beer.\n+Take one down and pass it around, \n+52 bottles of beer on the wall.\n+\n+52 bottles of beer on the wall,\n+52 bottles of beer.\n+Take one down and pass it around, \n+51 bottles of beer on the wall.\n+\n+51 bottles of beer on the wall,\n+51 bottles of beer.\n+Take one down and pass it around, \n+50 bottles of beer on the wall.\n+\n+50 bottles of beer on the wall,\n+50 bottles of beer.\n+Take one down and pass it around, \n+49 bottles of beer on the wall.\n+\n+49 bottles of beer on the wall,\n+49 bottles of beer.\n+Take one down and pass it around, \n+48 bottles of beer on the wall.\n+\n+48 bottles of beer on the wall,\n+48 bottles of beer.\n+Take one down and pass it around, \n+47 bottles of beer on the wall.\n+\n+47 bottles of beer on the wall,\n+47 bottles of beer.\n+Take one down and pass it around, \n+46 bottles of beer on the wall.\n+\n+46 bottles of beer on the wall,\n+46 bottles of beer.\n+Take one down and pass it around, \n+45 bottles of beer on the wall.\n+\n+45 bottles of beer on the wall,\n+45 bottles of beer.\n+Take one down and pass it around, \n+44 bottles of beer on the wall.\n+\n+44 bottles of beer on the wall,\n+44 bottles of beer.\n+Take one down and pass it around, \n+43 bottles of beer on the wall.\n+\n+43 bottles of beer on the wall,\n+43 bottles of beer.\n+Take one down and pass it around, \n+42 bottles of beer on the wall.\n+\n+42 bottles of beer on the wall,\n+42 bottles of beer.\n+Take one down and pass it around, \n+41 bottles of beer on the wall.\n+\n+41 bottles of beer on the wall,\n+41 bottles of beer.\n+Take one down and pass it around, \n+40 bottles of beer on the wall.\n+\n+40 bottles of beer on the wall,\n+40 bottles of beer.\n+Take one down and pass it around, \n+39 bottles of beer on the wall.\n+\n+39 bottles of beer on the wall,\n+39 bottles of beer.\n+Take one down and pass it around, \n+38 bottles of beer on the wall.\n+\n+38 bottles of beer on the wall,\n+38 bottles of beer.\n+Take one down and pass it around, \n+37 bottles of beer on the wall.\n+\n+37 bottles of beer on the wall,\n+37 bottles of beer.\n+Take one down and pass it around, \n+36 bottles of beer on the wall.\n+\n+36 bottles of beer on the wall,\n+36 bottles of beer.\n+Take one down and pass it around, \n+35 bottles of beer on the wall.\n+\n+35 bottles of beer on the wall,\n+35 bottles of beer.\n+Take one down and pass it around, \n+34 bottles of beer on the wall.\n+\n+34 bottles of beer on the wall,\n+34 bottles of beer.\n+Take one down and pass it around, \n+33 bottles of beer on the wall.\n+\n+33 bottles of beer on the wall,\n+33 bottles of beer.\n+Take one down and pass it around, \n+32 bottles of beer on the wall.\n+\n+32 bottles of beer on the wall,\n+32 bottles of beer.\n+Take one down and pass it around, \n+31 bottles of beer on the wall.\n+\n+31 bottles of beer on the wall,\n+31 bottles of beer.\n+Take one down and pass it around, \n+30 bottles of beer on the wall.\n+\n+30 bottles of beer on the wall,\n+30 bottles of beer.\n+Take one down and pass it around, \n+29 bottles of beer on the wall.\n+\n+29 bottles of beer on the wall,\n+29 bottles of beer.\n+Take one down and pass it around, \n+28 bottles of beer on the wall.\n+\n+28 bottles of beer on the wall,\n+28 bottles of beer.\n+Take one down and pass it around, \n+27 bottles of beer on the wall.\n+\n+27 bottles of beer on the wall,\n+27 bottles of beer.\n+Take one down and pass it around, \n+26 bottles of beer on the wall.\n+\n+26 bottles of beer on the wall,\n+26 bottles of beer.\n+Take one down and pass it around, \n+25 bottles of beer on the wall.\n+\n+25 bottles of beer on the wall,\n+25 bottles of beer.\n+Take one down and pass it around, \n+24 bottles of beer on the wall.\n+\n+24 bottles of beer on the wall,\n+24 bottles of beer.\n+Take one down and pass it around, \n+23 bottles of beer on the wall.\n+\n+23 bottles of beer on the wall,\n+23 bottles of beer.\n+Take one down and pass it around, \n+22 bottles of beer on the wall.\n+\n+22 bottles of beer on the wall,\n+22 bottles of beer.\n+Take one down and pass it around, \n+21 bottles of beer on the wall.\n+\n+21 bottles of beer on the wall,\n+21 bottles of beer.\n+Take one down and pass it around, \n+20 bottles of beer on the wall.\n+\n+20 bottles of beer on the wall,\n+20 bottles of beer.\n+Take one down and pass it around, \n+19 bottles of beer on the wall.\n+\n+19 bottles of beer on the wall,\n+19 bottles of beer.\n+Take one down and pass it around, \n+18 bottles of beer on the wall.\n+\n+18 bottles of beer on the wall,\n+18 bottles of beer.\n+Take one down and pass it around, \n+17 bottles of beer on the wall.\n+\n+17 bottles of beer on the wall,\n+17 bottles of beer.\n+Take one down and pass it around, \n+16 bottles of beer on the wall.\n+\n+16 bottles of beer on the wall,\n+16 bottles of beer.\n+Take one down and pass it around, \n+15 bottles of beer on the wall.\n+\n+15 bottles of beer on the wall,\n+15 bottles of beer.\n+Take one down and pass it around, \n+14 bottles of beer on the wall.\n+\n+14 bottles of beer on the wall,\n+14 bottles of beer.\n+Take one down and pass it around, \n+13 bottles of beer on the wall.\n+\n+13 bottles of beer on the wall,\n+13 bottles of beer.\n+Take one down and pass it around, \n+12 bottles of beer on the wall.\n+\n+12 bottles of beer on the wall,\n+12 bottles of beer.\n+Take one down and pass it around, \n+11 bottles of beer on the wall.\n+\n+11 bottles of beer on the wall,\n+11 bottles of beer.\n+Take one down and pass it around, \n+10 bottles of beer on the wall.\n+\n+10 bottles of beer on the wall,\n+10 bottles of beer.\n+Take one down and pass it around, \n+9 bottles of beer on the wall.\n+\n+9 bottles of beer on the wall,\n+9 bottles of beer.\n+Take one down and pass it around, \n+8 bottles of beer on the wall.\n+\n+8 bottles of beer on the wall,\n+8 bottles of beer.\n+Take one down and pass it around, \n+7 bottles of beer on the wall.\n+\n+7 bottles of beer on the wall,\n+7 bottles of beer.\n+Take one down and pass it around, \n+6 bottles of beer on the wall.\n+\n+6 bottles of beer on the wall,\n+6 bottles of beer.\n+Take one down and pass it around, \n+5 bottles of beer on the wall.\n+\n+5 bottles of beer on the wall,\n+5 bottles of beer.\n+Take one down and pass it around, \n+4 bottles of beer on the wall.\n+\n+4 bottles of beer on the wall,\n+4 bottles of beer.\n+Take one down and pass it around, \n+3 bottles of beer on the wall.\n+\n+3 bottles of beer on the wall,\n+3 bottles of beer.\n+Take one down and pass it around, \n+2 bottles of beer on the wall.\n+\n+2 bottles of beer on the wall,\n+2 bottles of beer.\n+Take one down and pass it around, \n+1 bottle of beer on the wall.\n+\n+1 bottle of beer on the wall,\n+1 bottle of beer.\n+Take one down and pass it around, \n+no more bottles of beer on the wall.\n+\n+No more bottles of beer on the wall,\n+no more bottles of beer.\n+Go to the store and buy some more, \n+99 bottles of beer on the wall.\n+`;\n+\n+static assert(beer!(99) == expected);"}, {"sha": "e28ad181b5d56465e6179ca7c0659ab1293710dc", "filename": "gcc/testsuite/gdc.test/compilable/b16382.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fb16382.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fb16382.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fb16382.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,10 @@\n // REQUIRED_ARGS: -c\n+/*\n+TEST_OUTPUT:\n+---\n+&this\n+---\n+*/\n struct S0 {\n     void foo() {\n         pragma(msg, &this);"}, {"sha": "6bf5da9f3e224481b54cbc28fc7a2738c029a18d", "filename": "gcc/testsuite/gdc.test/compilable/b17111.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fb17111.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fb17111.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fb17111.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+compilable/b17111.d(16): Deprecation: `case` variables have to be `const` or `immutable`\n+compilable/b17111.d(17): Deprecation: `case` variables have to be `const` or `immutable`\n+---\n+*/\n alias TestType = ubyte;\n \n void test()"}, {"sha": "86d84af617ae05424f3ff3525a2d657b4c640049", "filename": "gcc/testsuite/gdc.test/compilable/compile1.d", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fcompile1.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fcompile1.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fcompile1.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -15,9 +15,9 @@ static assert(C1748!int.stringof == \"C1748!int\");\n **************************************************/\n \n version(all)\n-    pragma(msg, \"true\");\n+    pragma(inline, true);\n else\n-    pragma(msg, \"false\");\n+    pragma(inline, false);\n \n /**************************************************\n     2438\n@@ -78,7 +78,7 @@ template ice8982(T)\n     void bug8982(ref const int v = 7){}\n \n     static if (is(typeof(bug8982) P == __parameters)) {\n-        pragma(msg, ((P[0..1] g) => g[0])());\n+        enum eval8982 = ((P[0..1] g) => g[0])();\n     }\n }\n \n@@ -275,7 +275,7 @@ void main()\n     try\n     {\n     }\n-    catch\n+    catch(.object.Throwable)\n     {\n     }\n }\n@@ -298,7 +298,7 @@ void test11939()\n **************************************************/\n \n template A(B) {\n-    pragma(msg, \"missing ;\")\n+    pragma(lib, \"missing ;\")\n     enum X = 0;\n }\n \n@@ -766,7 +766,7 @@ struct A12799\n /***************************************************/\n // 13236\n \n-pragma(msg, is(typeof({ struct S { S x; } })));\n+enum bug13286 = is(typeof({ struct S { S x; } }));\n \n /***************************************************/\n // 13280\n@@ -857,14 +857,15 @@ X14166[int] makeAA14166() { return aa14166; }\n struct Tup14166(T...) { T field; alias field this; }\n Tup14166!(int, int) tup14166;\n Tup14166!(int, int) makeTup14166() { return tup14166; }\n-\n-pragma(msg, typeof((s14166.x += 1) = 2));    // ok <- error\n-pragma(msg, typeof(s14166.a.length += 2));   // ok <- error\n-pragma(msg, typeof(s14166++));               // ok <- error\n-pragma(msg, typeof(s14166.x ^^ 2));          // ok <- error\n-pragma(msg, typeof(s14166.y ^^= 2.5));       // ok <- error\n-pragma(msg, typeof(makeAA14166()[0] = 1));   // ok <- error\n-pragma(msg, typeof(tup14166.field = makeTup14166()));   // ok <- error\n+alias TT14166(T...) = T;\n+\n+static assert(is(typeof((s14166.x += 1) = 2) == int));     // ok <- error\n+static assert(is(typeof(s14166.a.length += 2) == size_t)); // ok <- error\n+static assert(is(typeof(s14166++) == S14166));             // ok <- error\n+static assert(is(typeof(s14166.x ^^ 2) == int));           // ok <- error\n+static assert(is(typeof(s14166.y ^^= 2.5) == double));     // ok <- error\n+static assert(is(typeof(makeAA14166()[0] = 1) == X14166)); // ok <- error\n+static assert(is(typeof(tup14166.field = makeTup14166()) == TT14166!(int, int))); // ok <- error\n \n /***************************************************/\n // 14388"}, {"sha": "1bcae41123291359c9a1e2627f455cfcaf64f321", "filename": "gcc/testsuite/gdc.test/compilable/ddoc3.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc3.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc3.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fddoc3.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,7 +1,7 @@\n // EXTRA_SOURCES: extra-files/ddoc3.ddoc\n // PERMUTE_ARGS:\n // REQUIRED_ARGS: -D -Dd${RESULTS_DIR}/compilable -o-\n-// POST_SCRIPT: compilable/extra-files/ddocAny-postscript.sh 3\n+// POST_SCRIPT: compilable/extra-files/ddocAny-postscript.sh\n \n /**\n  * Summary"}, {"sha": "9daf6f187d4a3a684968c56deec334dc02ec37ea", "filename": "gcc/testsuite/gdc.test/compilable/imports/test15117a.d", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a103daef78a8f9fc9b2af7c28123f25e8fa7163/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fimports%2Ftest15117a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a103daef78a8f9fc9b2af7c28123f25e8fa7163/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fimports%2Ftest15117a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fimports%2Ftest15117a.d?ref=7a103daef78a8f9fc9b2af7c28123f25e8fa7163", "patch": "@@ -1,9 +0,0 @@\n-module imports.test15117a;\n-\n-struct AssertResult {}\n-\n-auto test_usr_1()\n-{\n-    // 2. generate TyepInfoStructDeclaration\n-    auto x = typeid(AssertResult);\n-}"}, {"sha": "a2830ea11c229a514a68b7d01c7158aa187a4f8d", "filename": "gcc/testsuite/gdc.test/compilable/interpret3.d", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Finterpret3.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Finterpret3.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Finterpret3.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,11 @@\n-\ufeff// PERMUTE_ARGS: -inline\n+// PERMUTE_ARGS: -inline\n+/*\n+TEST_OUTPUT:\n+---\n+compilable/interpret3.d(2914): Deprecation: `case` variables have to be `const` or `immutable`\n+compilable/interpret3.d(6351): Deprecation: identity comparison of static arrays implicitly coerces them to slices, which are compared by reference\n+---\n+*/\n \n template compiles(int T)\n {"}, {"sha": "6fb39fed44d1f73fea91cd71a77f82e7cd42cbf0", "filename": "gcc/testsuite/gdc.test/compilable/test11563.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest11563.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest11563.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest11563.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -3,7 +3,7 @@ import imports.test11563std_traits;\n interface J : I {} // comment out to let compilation succeed\n \n struct A { }\n-pragma(msg, moduleName!A);\n+static assert(moduleName!A == \"b\");\n \n \n interface I {}"}, {"sha": "b476c176283f2bf761feb665966dc3ad21c9c006", "filename": "gcc/testsuite/gdc.test/compilable/test12527.d", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest12527.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest12527.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest12527.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -2,9 +2,7 @@\n \n @system:\n     alias Fun = void function() @safe;\n-    pragma (msg, Fun.stringof);\n     static assert(Fun.stringof == \"void function() @safe\");\n     alias Del = void delegate() @safe;\n-    pragma (msg, Del.stringof);\n     static assert(Del.stringof == \"void delegate() @safe\");\n "}, {"sha": "963dba8fc37ef82418d40f14aff93b65fa5c2341", "filename": "gcc/testsuite/gdc.test/compilable/test15019.d", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest15019.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest15019.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest15019.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -42,15 +42,15 @@ alias mat4x4 mat4;\n string definePostfixAliases(string type)\n {\n     return \"alias \" ~ type ~ \"!byte \"   ~ type ~ \"b;\\n\"\n-\"alias \" ~ type ~ \"!ubyte \"  ~ type ~ \"ub;\\n\"\n-\"alias \" ~ type ~ \"!short \"  ~ type ~ \"s;\\n\"\n-\"alias \" ~ type ~ \"!ushort \" ~ type ~ \"us;\\n\"\n-\"alias \" ~ type ~ \"!int \"    ~ type ~ \"i;\\n\"\n-\"alias \" ~ type ~ \"!uint \"   ~ type ~ \"ui;\\n\"\n-\"alias \" ~ type ~ \"!long \"   ~ type ~ \"l;\\n\"\n-\"alias \" ~ type ~ \"!ulong \"  ~ type ~ \"ul;\\n\"\n-\"alias \" ~ type ~ \"!float \"  ~ type ~ \"f;\\n\"\n-\"alias \" ~ type ~ \"!double \" ~ type ~ \"d;\\n\";\n+~ \"alias \" ~ type ~ \"!ubyte \"  ~ type ~ \"ub;\\n\"\n+~ \"alias \" ~ type ~ \"!short \"  ~ type ~ \"s;\\n\"\n+~ \"alias \" ~ type ~ \"!ushort \" ~ type ~ \"us;\\n\"\n+~ \"alias \" ~ type ~ \"!int \"    ~ type ~ \"i;\\n\"\n+~ \"alias \" ~ type ~ \"!uint \"   ~ type ~ \"ui;\\n\"\n+~ \"alias \" ~ type ~ \"!long \"   ~ type ~ \"l;\\n\"\n+~ \"alias \" ~ type ~ \"!ulong \"  ~ type ~ \"ul;\\n\"\n+~ \"alias \" ~ type ~ \"!float \"  ~ type ~ \"f;\\n\"\n+~ \"alias \" ~ type ~ \"!double \" ~ type ~ \"d;\\n\";\n }\n \n // define a lot of type names"}, {"sha": "0bb2d0498c6e81842b40d6671c7b202b64ead363", "filename": "gcc/testsuite/gdc.test/compilable/test15177.d", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a103daef78a8f9fc9b2af7c28123f25e8fa7163/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest15177.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a103daef78a8f9fc9b2af7c28123f25e8fa7163/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest15177.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest15177.d?ref=7a103daef78a8f9fc9b2af7c28123f25e8fa7163", "patch": "@@ -1,23 +0,0 @@\n-// REQUIRED_ARGS: -o-\n-// PERMUTE_ARGS:\n-// EXTRA_SOURCES: imports/test15117a.d\n-\n-import users = imports.test15117a;\n-\n-void RunApiTest(T...)()\n-{\n-    foreach (name; __traits(allMembers, users))\n-    {\n-        // 3. list the name of TyepInfoStructDeclaration,\n-        //    but it's just internal symbol and invisible.\n-        mixin(\"alias func = users . \" ~ name ~ \";\");\n-    }\n-}\n-\n-void main()\n-{\n-    // 1. run semantic3 of users.test_usr_1\n-    users.test_usr_1();\n-\n-    RunApiTest!();\n-}"}, {"sha": "c88f5d08f9c440ae562696e782b472ebbd25a04f", "filename": "gcc/testsuite/gdc.test/compilable/test15326.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest15326.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest15326.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest15326.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -5,19 +5,19 @@ private struct _NestedSym_\n {\n     static if ((void*).sizeof == 8)\n     {\n-        pragma(msg, \"64\");\n+        int pointersize = 64;\n     }\n     else\n     {\n-        pragma(msg, \"32\");\n+        int pointersize = 32;\n     }\n \n     version (X86_64)\n     {\n-        pragma(msg, \"X86_64\");\n+        string arch = \"X86_64\";\n     }\n     else\n     {\n-        pragma(msg, \"Not 64\");\n+        string arch = \"Not 64\";\n     }\n }"}, {"sha": "e4ce7effc362987c8dbb1fa088086a1bbbf727f2", "filename": "gcc/testsuite/gdc.test/compilable/test16525.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest16525.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest16525.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest16525.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -12,8 +12,8 @@ extern(C++) struct CPP\n \n void test()\n {\n-    pragma(msg, templ!(D.memvar));\n-    pragma(msg, templ!(CPP.memvar));\n-    // root cause, C++ member variables have no mangling\n-    pragma(msg, CPP.memvar.mangleof);\n+    static assert(templ!(D.memvar) == 1234);\n+    static assert(templ!(CPP.memvar) == 1234);\n+    // ICE: root cause, C++ member variables have no mangling\n+    enum CPPmemvar = CPP.memvar.mangleof;\n }"}, {"sha": "98e31f4c3241ef8993b0e7c736ee6080750deb63", "filename": "gcc/testsuite/gdc.test/compilable/test17143.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest17143.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest17143.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftest17143.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,4 @@\n import std.typecons : tuple;\n enum foo = tuple(1, 2).expand;\n-pragma(msg, typeof(foo).stringof);\n-pragma(msg, foo.stringof);\n+static assert(typeof(foo).stringof == \"(int, int)\");\n+static assert(foo.stringof == \"tuple(1, 2)\");"}, {"sha": "38bce3850f257fb2f0dd57caaa8bd3a51a2468d3", "filename": "gcc/testsuite/gdc.test/compilable/testDIP37.d", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2FtestDIP37.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2FtestDIP37.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2FtestDIP37.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -34,7 +34,6 @@ void test7()\n     static import pkgDIP37.datetime;\n     static assert(!__traits(compiles, def()));\n     pkgDIP37.datetime.def();\n-    pkgDIP37.datetime.common.def();\n }\n \n // https://issues.dlang.org/show_bug.cgi?id=17629"}, {"sha": "3248f3e10352ddcefba962f332c59799356c2d6e", "filename": "gcc/testsuite/gdc.test/compilable/testInference.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2FtestInference.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2FtestInference.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2FtestInference.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -653,7 +653,7 @@ void foo10296()()\n \n     void bar()() { a[1] = 2; }\n     bar();\n-    pragma(msg, typeof(bar!()));    // nothrow @safe void()\n+    static assert(typeof(bar!()).stringof == \"pure nothrow @nogc @safe void()\");    // nothrow @safe void()\n }\n pure void test10296()\n {\n@@ -811,7 +811,7 @@ void test13840() nothrow\n             func13840();        // throwable function call\n         }\n     }\n-    catch\n+    catch(Throwable)\n     {}\n }\n "}, {"sha": "256a1fe0bd989bec363e89432a726c020a57813c", "filename": "gcc/testsuite/gdc.test/compilable/testheader1.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftestheader1.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftestheader1.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftestheader1.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,6 +1,12 @@\n // EXTRA_SOURCES: extra-files/header1.d\n // REQUIRED_ARGS: -o- -unittest -H -Hf${RESULTS_DIR}/compilable/header1.di\n // PERMUTE_ARGS: -d -dw\n-// POST_SCRIPT: compilable/extra-files/header-postscript.sh header1\n+// POST_SCRIPT: compilable/extra-files/header-postscript.sh\n+/*\n+TEST_OUTPUT:\n+---\n+Hello World\n+---\n+*/\n \n void main() {}"}, {"sha": "0eca3c44c191a5f35fadcec7de042624e41c17f0", "filename": "gcc/testsuite/gdc.test/compilable/testheader1i.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftestheader1i.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftestheader1i.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftestheader1i.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,6 +1,12 @@\n // EXTRA_SOURCES: extra-files/header1.d\n // REQUIRED_ARGS: -o- -H -Hf${RESULTS_DIR}/compilable/header1i.di -inline\n // PERMUTE_ARGS: -d -dw\n-// POST_SCRIPT: compilable/extra-files/header-postscript.sh header1i\n+// POST_SCRIPT: compilable/extra-files/header-postscript.sh\n+/*\n+TEST_OUTPUT:\n+---\n+Hello World\n+---\n+*/\n \n void main() {}"}, {"sha": "f514146469225955eab1497d0bafe5fa6c4037be", "filename": "gcc/testsuite/gdc.test/compilable/testparse.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftestparse.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftestparse.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Ftestparse.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -4,7 +4,7 @@\n /***************************************************/\n // 6719\n \n-pragma(msg, __traits(compiles, mixin(\"(const(A))[0..0]\")));\n+static assert(__traits(compiles, mixin(\"(const(A))[0..0]\")) == false);\n \n /***************************************************/\n // 9232"}, {"sha": "b2f7d1d375ef4638d32defc6051d814fa36cd964", "filename": "gcc/testsuite/gdc.test/fail_compilation/bug5.d", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbug5.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbug5.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbug5.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,9 @@\n-// REQUIRED_ARGS:\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/bug5.d(8): Error: function `bug5.test1` no `return exp;` or `assert(0);` at end of function\n+---\n+*/\n \n int test1()\n {"}, {"sha": "8ba5717548f03febf7150e7edc9f0c66fac12769", "filename": "gcc/testsuite/gdc.test/fail_compilation/bug5b.d", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbug5b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbug5b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbug5b.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,9 @@\n-// REQUIRED_ARGS:\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/bug5b.d(8): Error: function `bug5b.test1` has no `return` statement, but is expected to return a value of type `int`\n+---\n+*/\n \n int test1()\n {"}, {"sha": "a03f850ae80d6ac67762307c831286baea72690e", "filename": "gcc/testsuite/gdc.test/fail_compilation/bug8150a.d", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbug8150a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbug8150a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbug8150a.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,11 @@\n-// Bugzilla 8150: nothrow check doesn't work for constructor\n+// https://issues.dlang.org/show_bug.cgi?id=8150: nothrow check doesn't work for constructor\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/bug8150a.d(14): Error: `object.Exception` is thrown but not caught\n+fail_compilation/bug8150a.d(12): Error: `nothrow` constructor `bug8150a.Foo.this` may throw\n+---\n+*/\n \n struct Foo\n {"}, {"sha": "2091bc8cc2d6c1af1ca309bc37b592e5efde89fb", "filename": "gcc/testsuite/gdc.test/fail_compilation/bug8150b.d", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbug8150b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbug8150b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fbug8150b.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,12 @@\n-// Bugzilla 8150: nothrow check doesn't work for constructor\n+// https://issues.dlang.org/show_bug.cgi?id=8150: nothrow check doesn't work for constructor\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/bug8150b.d(15): Error: `object.Exception` is thrown but not caught\n+fail_compilation/bug8150b.d(13): Error: `nothrow` constructor `bug8150b.Foo.__ctor!().this` may throw\n+fail_compilation/bug8150b.d(20): Error: template instance `bug8150b.Foo.__ctor!()` error instantiating\n+---\n+*/\n \n struct Foo\n {"}, {"sha": "38f9ccbe12b8e8facd55f303bd206796b8da640b", "filename": "gcc/testsuite/gdc.test/fail_compilation/diag10327.d", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdiag10327.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdiag10327.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdiag10327.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1 +1,11 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/diag10327.d(11): Error: module `test10327` is in file 'imports/test10327.d' which cannot be read\n+import path[0] = fail_compilation\n+import path[1] = $p:druntime/import$\n+import path[2] = $p:phobos$\n+---\n+*/\n+\n import imports.test10327;  // package.d missing"}, {"sha": "a7714c9d852e9ce0458ad9cd98277d8a07fb8f64", "filename": "gcc/testsuite/gdc.test/fail_compilation/diag15713.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdiag15713.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdiag15713.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fdiag15713.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,5 @@\n /*\n+TEST_OUTPUT:\n ---\n fail_compilation/diag15713.d(18): Error: no property 'widthSign' for type 'Data'\n fail_compilation/diag15713.d(38): Error: template instance test.conwritefImpl!(\"parse-int\", \"width\", \"\\x0a\", Data()) error instantiating"}, {"sha": "2111844d56dc22e5f6a7c00a0630f4647afd694b", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail104.d", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail104.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail104.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail104.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,6 +1,14 @@\n // Issue 76 - Using a non-template struct as a template\n // Compiling leads to \"Assertion failure: 's->parent' on line 1694 in file\n // 'template.c'\"\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail104.d(26): Error: template instance `P!()` `P` is not a template declaration, it is a alias\n+fail_compilation/fail104.d(26): Error: mixin `fail104.C!(S).C.T!()` is not defined\n+fail_compilation/fail104.d(31): Error: template instance `fail104.C!(S)` error instantiating\n+---\n+*/\n \n struct S\n {"}, {"sha": "6181d946bd50bffe544fbbfc3d65d89dc0533650", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail10905.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail10905.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail10905.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail10905.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail10905.d(20): Error: incompatible types for `(this.x) == (cast(const(__vector(long[2])))cast(__vector(long[2]))1L)`: both operands are of type `const(__vector(long[2]))`\n+---\n+*/\n \n struct Foo\n {"}, {"sha": "4990b66f1f93c212238dfeac22da7301d1844ba5", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail115.d", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail115.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail115.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail115.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,11 @@\n-// Issue 402 - compiler crash with mixin and forward reference\n+// https://issues.dlang.org/show_bug.cgi?id=402\n+// compiler crash with mixin and forward reference\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail115.d(17): Error: mixin `Foo!y` cannot resolve forward reference\n+---\n+*/\n \n template Foo(alias b)\n {"}, {"sha": "b49cde9330be9b3af573e9950ae4087e7efd0b53", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail11503a.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail11503a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail11503a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail11503a.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail11503a.d(24): Error: cannot implicitly convert expression `makes()` of type `immutable(S)*` to `S*`\n+---\n+*/\n struct S\n {\n     immutable(S)* s;"}, {"sha": "ebfbbfdc4472158bf9f368d8bb6c2e801a4e5bfe", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail11503b.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail11503b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail11503b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail11503b.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail11503b.d(17): Error: cannot implicitly convert expression `makes()` of type `immutable(int[])` to `int[]`\n+---\n+*/\n immutable int[] x = [1, 2, 3];\n \n auto makes() pure"}, {"sha": "ad3963f4e1510d7f7e7207845fd71f8f351f9add", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail11503c.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail11503c.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail11503c.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail11503c.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail11503c.d(19): Error: cannot implicitly convert expression `d.filename()` of type `const(char)[]` to `string`\n+---\n+*/\n struct Data\n {\n     char[256] buffer;"}, {"sha": "d1605b27822e161b96378cc4af6b866585ad6ea9", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail11503d.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail11503d.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail11503d.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail11503d.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail11503d.d(26): Error: cannot implicitly convert expression `filename(d)` of type `const(char)[]` to `string`\n+fail_compilation/fail11503d.d(27): Error: cannot implicitly convert expression `filename2(& d)` of type `const(char)[]` to `string`\n+---\n+*/\n struct Data2\n {\n     char buffer;"}, {"sha": "aa060e68d2934ba4a5d79a5d4aaea54431866d1b", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail12.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail12.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail12.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail12.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail12.d(17): Error: function `fail12.main.Foo!(y).abc` at fail_compilation/fail12.d(9) conflicts with function `fail12.main.Foo!(y).abc` at fail_compilation/fail12.d(9)\n+---\n+*/\n template Foo(alias b)\n {\n     int abc() { return b; }"}, {"sha": "70e9d0cd4be125f1f4f84418a342cfea477d94c9", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail121.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail121.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail121.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail121.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,12 @@\n // PERMUTE_ARGS: -d -dw\n // segfault on DMD0.150, never failed if use typeid() instead.\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail121.d(23): Error: no property `typeinfo` for type `fail121.myobject`\n+fail_compilation/fail121.d(23): Error: no property `typeinfo` for type `int`\n+---\n+*/\n \n struct myobject\n {"}, {"sha": "e1b15774f818b7536a4d4f205b21017298e11477", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail12485.d", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a103daef78a8f9fc9b2af7c28123f25e8fa7163/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail12485.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a103daef78a8f9fc9b2af7c28123f25e8fa7163/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail12485.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail12485.d?ref=7a103daef78a8f9fc9b2af7c28123f25e8fa7163", "patch": "@@ -1,12 +0,0 @@\n-void dorecursive()\n-{\n-    recursive!\"ratherLongSymbolNameToHitTheMaximumSymbolLengthEarlierThanTheTemplateRecursionLimit_\";\n-}\n-\n-void recursive(string name)()\n-{\n-    struct S {} // define type to kick off mangler\n-    static if (name.length <= (4 << 20))\n-        recursive!(name ~ name);\n-}\n-"}, {"sha": "80a2a25a51ac6cf3a47f426a1902ddddc20847da", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail137.d", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a103daef78a8f9fc9b2af7c28123f25e8fa7163/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail137.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a103daef78a8f9fc9b2af7c28123f25e8fa7163/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail137.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail137.d?ref=7a103daef78a8f9fc9b2af7c28123f25e8fa7163", "patch": "@@ -1,23 +0,0 @@\n-// 751 Compiler segfault on template expansion\n-\n-    template TypeTuple( TList... )\n-    {\n-        alias TList TypeTuple;\n-    }\n-\n-    template IndexOf( T, TList... )\n-    {\n-        static if( TList.length == 0 )\n-            const size_t IndexOf = 1;\n-        else static if( is( T == typeof( TList[0] ) ) )\n-            const size_t IndexOf = 0;\n-        else\n-            const size_t IndexOf = 1 + IndexOf!( T, (TList[1 .. $]) );\n-    }\n-\n-    void main()\n-    {\n-        TypeTuple!(int, long) T;\n-        printf( \"%u\\n\", IndexOf!(long, T) );\n-    }\n-"}, {"sha": "a44d41cb80a4133dea9b8b314b94824255768ae7", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail14.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail14.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail14.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail14.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail14.d(10): Error: template instance `failint))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))` recursive expansion exceeded allowed nesting limit\n+---\n+*/\n \n class A(T)\n {"}, {"sha": "84af9cfbbd4ea492b8a4795aba95359f54c62e05", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail14486.d", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail14486.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail14486.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail14486.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,44 @@\n // REQUIRED_ARGS: -o-\n \n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail14486.d(56): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+fail_compilation/fail14486.d(56): Error: `delete c0` is not `@safe` but is used in `@safe` function `test1a`\n+fail_compilation/fail14486.d(57): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+fail_compilation/fail14486.d(57): Error: `pure` function `fail14486.test1a` cannot call impure destructor `fail14486.C1a.~this`\n+fail_compilation/fail14486.d(57): Error: `@safe` function `fail14486.test1a` cannot call `@system` destructor `fail14486.C1a.~this`\n+fail_compilation/fail14486.d(43):        `fail14486.C1a.~this` is declared here\n+fail_compilation/fail14486.d(57): Error: `@nogc` function `fail14486.test1a` cannot call non-@nogc destructor `fail14486.C1a.~this`\n+fail_compilation/fail14486.d(62): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+fail_compilation/fail14486.d(63): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+fail_compilation/fail14486.d(63): Error: destructor `fail14486.C1b.~this` is not `nothrow`\n+fail_compilation/fail14486.d(60): Error: `nothrow` function `fail14486.test1b` may throw\n+fail_compilation/fail14486.d(68): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+fail_compilation/fail14486.d(68): Error: `delete s0` is not `@safe` but is used in `@safe` function `test2a`\n+fail_compilation/fail14486.d(69): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+fail_compilation/fail14486.d(69): Error: `pure` function `fail14486.test2a` cannot call impure destructor `fail14486.S1a.~this`\n+fail_compilation/fail14486.d(69): Error: `@safe` function `fail14486.test2a` cannot call `@system` destructor `fail14486.S1a.~this`\n+fail_compilation/fail14486.d(49):        `fail14486.S1a.~this` is declared here\n+fail_compilation/fail14486.d(69): Error: `@nogc` function `fail14486.test2a` cannot call non-@nogc destructor `fail14486.S1a.~this`\n+fail_compilation/fail14486.d(74): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+fail_compilation/fail14486.d(75): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+fail_compilation/fail14486.d(75): Error: destructor `fail14486.S1b.~this` is not `nothrow`\n+fail_compilation/fail14486.d(72): Error: `nothrow` function `fail14486.test2b` may throw\n+fail_compilation/fail14486.d(80): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+fail_compilation/fail14486.d(80): Error: `delete a0` is not `@safe` but is used in `@safe` function `test3a`\n+fail_compilation/fail14486.d(81): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+fail_compilation/fail14486.d(81): Error: `pure` function `fail14486.test3a` cannot call impure destructor `fail14486.S1a.~this`\n+fail_compilation/fail14486.d(81): Error: `@safe` function `fail14486.test3a` cannot call `@system` destructor `fail14486.S1a.~this`\n+fail_compilation/fail14486.d(49):        `fail14486.S1a.~this` is declared here\n+fail_compilation/fail14486.d(81): Error: `@nogc` function `fail14486.test3a` cannot call non-@nogc destructor `fail14486.S1a.~this`\n+fail_compilation/fail14486.d(86): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+fail_compilation/fail14486.d(87): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+fail_compilation/fail14486.d(87): Error: destructor `fail14486.S1b.~this` is not `nothrow`\n+fail_compilation/fail14486.d(84): Error: `nothrow` function `fail14486.test3b` may throw\n+---\n+*/\n+\n class  C0a { }\n class  C1a {                  ~this() {} }\n class  C2a {                  ~this() {}  @nogc pure @safe delete(void* p) {} }"}, {"sha": "0386b9a267553349b60c292874b9bd25c3c216b2", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail15.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail15.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail15.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail15.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,10 @@\n /*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail15.d(24): Error: cannot use `[]` operator on expression of type `void`\n+---\n+*/\n+/*\n Segfault on DMD 0.095\n http://www.digitalmars.com/d/archives/digitalmars/D/bugs/926.html\n */"}, {"sha": "4776f40439c0990611ee6e20c9edc4050e98ab5b", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail15616b.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail15616b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail15616b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail15616b.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,6 @@\n /*\n REQUIRED_ARGS: -v\n+TEST_OUTPUT:\n ---\n fail_compilation/fail15616b.d(43): Error: none of the overloads of 'foo' are callable using argument types (double), candidates are:\n fail_compilation/fail15616b.d(16):        fail15616b.foo(int a)"}, {"sha": "6c7a90a625e8c376ec22b098e716da7f753d8547", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail16.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail16.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail16.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail16.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,11 @@\n // ICE(template.c) in DMD0.080\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail16.d(19): Error: function declaration without return type. (Note that constructors are always named `this`)\n+fail_compilation/fail16.d(19): Error: no identifier for declarator `bar!(typeof(X))(X)`\n+---\n+*/\n \n int i;\n "}, {"sha": "2c73d30886f47e75189a77edd58b674ca92d8417", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail17.d", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail17.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail17.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail17.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,11 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail17.d(11): Error: undefined identifier `B`\n+fail_compilation/fail17.d(11): Error: mixin `fail17.A!int.A.B!(T, A!T)` is not defined\n+fail_compilation/fail17.d(14): Error: template instance `fail17.A!int` error instantiating\n+---\n+*/\n struct A(T)\n {\n     mixin B!(T, A!(T));"}, {"sha": "78fc3615c957cb3cf40dcff24c6e6961176db7f1", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail196.d", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail196.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail196.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail196.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,25 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail196.d(26): Error: delimited string must end in )\"\n+fail_compilation/fail196.d(26): Error: Implicit string concatenation is error-prone and disallowed in D\n+fail_compilation/fail196.d(26):        Use the explicit syntax instead (concatenating literals is `@nogc`): \"foo(xxx)\" ~ \";\\x0a    assert(s == \"\n+fail_compilation/fail196.d(27): Error: semicolon expected, not `foo`\n+fail_compilation/fail196.d(27): Error: found `\");\\x0a\\x0a    s = q\"` when expecting `;` following statement\n+fail_compilation/fail196.d(29): Error: found `\";\\x0a    assert(s == \"` when expecting `;` following statement\n+fail_compilation/fail196.d(30): Error: found `\");\\x0a\\x0a    s = q\"` when expecting `;` following statement\n+fail_compilation/fail196.d(32): Error: found `{` when expecting `;` following statement\n+fail_compilation/fail196.d(32): Error: found `}` when expecting `;` following statement\n+fail_compilation/fail196.d(33): Error: found `foo` when expecting `;` following statement\n+fail_compilation/fail196.d(33): Error: found `}` when expecting `;` following statement\n+fail_compilation/fail196.d(35): Error: found `<` when expecting `;` following statement\n+fail_compilation/fail196.d(36): Error: found `foo` when expecting `;` following statement\n+fail_compilation/fail196.d(36): Error: found `<` instead of statement\n+fail_compilation/fail196.d(42): Error: unterminated string constant starting at fail_compilation/fail196.d(42)\n+fail_compilation/fail196.d(44): Error: found `End of File` when expecting `}` following compound statement\n+fail_compilation/fail196.d(44): Error: found `End of File` when expecting `}` following compound statement\n+---\n+*/\n \n void main()\n {"}, {"sha": "2120dc56997be2508ed98792e701fe59ca955852", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail19890a.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19890a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19890a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19890a.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,6 @@\n // PERMUTE_ARGS:\n /*\n+TEST_OUTPUT:\n ---\n fail_compilation/fail19890a.d(8): Error: `void[/^[0-9]+(LU)?$/]` size 1 * /^[0-9]+$/ exceeds 0x7fffffff size limit for static array\n ---"}, {"sha": "c3ee67793a3bd1ba07c7ca00bec267d593ccaf55", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail19890b.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19890b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19890b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail19890b.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,6 @@\n // PERMUTE_ARGS:\n /*\n+TEST_OUTPUT:\n ---\n fail_compilation/fail19890b.d(8): Error: `void[/^[0-9]+(LU)?$/]` size 1 * /^[0-9]+$/ exceeds 0x7fffffff size limit for static array\n ---"}, {"sha": "9cb14b801c90010538c1b04413601674e129f115", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail199.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail199.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail199.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail199.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,11 @@\n // REQUIRED_ARGS: -de\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail199.d(20): Deprecation: class `fail199.DepClass` is deprecated\n+fail_compilation/fail199.d(20): Deprecation: class `fail199.DepClass` is deprecated\n+---\n+*/\n \n //import std.stdio;\n "}, {"sha": "9d804a916b38690e224381dd48be2eed091c8566", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail200.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail200.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail200.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail200.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,11 @@\n // REQUIRED_ARGS: -de\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail200.d(17): Deprecation: interface `fail200.DepClass` is deprecated\n+fail_compilation/fail200.d(17): Deprecation: interface `fail200.DepClass` is deprecated\n+---\n+*/\n \n //import std.stdio;\n "}, {"sha": "6c4d923e248951d53d2f133d00f3c0b776ea63e9", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail201.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail201.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail201.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail201.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail201.d(10): Error: shift by 33 is outside the range `0..31`\n+fail_compilation/fail201.d(10): Error: shift by 33 is outside the range `0..31`\n+---\n+*/\n void main() {\n         int c;\n         c = c >>> 33;"}, {"sha": "57009edfee5ebce2b64c4572fa2fe632d42c3478", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail202.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail202.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail202.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail202.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail202.d(10): Error: shift by 33 is outside the range `0..31`\n+fail_compilation/fail202.d(10): Error: shift by 33 is outside the range `0..31`\n+---\n+*/\n void main() {\n         int c;\n         c = c >> 33;"}, {"sha": "51accf5b9f1f8f04ebab41abc157e1a3c3af11b8", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail203.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail203.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail203.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail203.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail203.d(10): Error: shift by 33 is outside the range `0..31`\n+fail_compilation/fail203.d(10): Error: shift by 33 is outside the range `0..31`\n+---\n+*/\n void main() {\n         int c;\n         c = c << 33;"}, {"sha": "e6f2faaa4bfad137acdc34af6e4ab82e71867726", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail204.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail204.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail204.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail204.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail204.d(9): Error: shift assign by 65 is outside the range `0..63`\n+---\n+*/\n void main() {\n         long c;\n         c >>= 65;"}, {"sha": "89ddc93fea1aaad43e87440d6d5c9c055e662094", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail205.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail205.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail205.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail205.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail205.d(9): Error: shift assign by 65 is outside the range `0..63`\n+---\n+*/\n void main() {\n         long c;\n         c <<= 65;"}, {"sha": "e3b2dcee9f48a129efcdacbe24c2d96dbc06f9dc", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail206.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail206.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail206.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail206.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail206.d(9): Error: shift assign by 65 is outside the range `0..63`\n+---\n+*/\n void main() {\n         long c;\n         c >>>= 65;"}, {"sha": "63ed0a06d02589df236ff576658b527005bc208a", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail217.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail217.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail217.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail217.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail217.d(22): Error: mutable method `fail217.Message.this` is not callable using a `immutable` object\n+fail_compilation/fail217.d(13):        Consider adding `const` or `inout` here\n+---\n+*/\n \n class Message\n   {"}, {"sha": "294dc21b33ef830c105582a08f380ec396cea415", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail220.d", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail220.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail220.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail220.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,13 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail220.d(12): Error: identifier expected for template value parameter\n+fail_compilation/fail220.d(12): Error: found `==` when expecting `)`\n+fail_compilation/fail220.d(12): Error: found `class` when expecting `)`\n+fail_compilation/fail220.d(12): Error: declaration expected, not `)`\n+fail_compilation/fail220.d(16): Error: unrecognized declaration\n+---\n+*/\n template types (T) {\n     static if (is (T V : V[K], K == class)) {\n         static assert (false, \"assoc\");"}, {"sha": "dee9a543b6ec188f38b04f9c296c9c20cba88f25", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail225.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail225.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail225.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail225.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail225.d(15): Error: cannot implicitly convert expression `1` of type `int` to `immutable(char*)`\n+fail_compilation/fail225.d(15): Error: cannot implicitly convert expression `& ch` of type `char*` to `immutable(char*)`\n+---\n+*/\n struct Struct { \n         char* chptr; \n }"}, {"sha": "d2e68d451f346e043a69acd54c783fa22e8ca225", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail232.d", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail232.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail232.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail232.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,14 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail232.d(15): Error: shift by 33 is outside the range `0..31`\n+fail_compilation/fail232.d(15): Error: shift by 33 is outside the range `0..31`\n+fail_compilation/fail232.d(16): Error: shift by 33 is outside the range `0..31`\n+fail_compilation/fail232.d(16): Error: shift by 33 is outside the range `0..31`\n+fail_compilation/fail232.d(17): Error: shift by 33 is outside the range `0..31`\n+fail_compilation/fail232.d(17): Error: shift by 33 is outside the range `0..31`\n+---\n+*/\n void bug1601() {\n     int i;\n "}, {"sha": "14b6443528fe9fe47b6cd484927681061d9f2117", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail239.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail239.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail239.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail239.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,2 +1,8 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail239.d(8): Error: type `F` is not an expression\n+---\n+*/\n class F { int x; }\n alias typeof(F).x b;"}, {"sha": "e9ea2bf7fe0a0948d448eb7dc34147f42989c6d7", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail252.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail252.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail252.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail252.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail252.d(13): Error: cannot implicitly override base class method `fail252.Timer.Task.run` with `fail252.Timer.__anonclass1.run`; add `override` attribute\n+---\n+*/\n class Timer {\n     abstract class Task {\n         public abstract void run();"}, {"sha": "0e2d66995725c6d526211b0c978528dcb004a368", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail257.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail257.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail257.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail257.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1 +1,8 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail257.d(8): Error: incompatible types for `(\"foo\"d) == (\"bar\"c)`: `dstring` and `string`\n+fail_compilation/fail257.d(8):        while evaluating `pragma(msg, \"foo\"d == \"bar\"c ? \"A\" : \"B\")`\n+---\n+*/\n pragma(msg, \"foo\"d == \"bar\"c ? \"A\" : \"B\");"}, {"sha": "459d2715c263438a00709d128e2a727cf726c4d9", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail258.d", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail258.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail258.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail258.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,13 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail258.d(11): Error: delimiter cannot be whitespace\n+fail_compilation/fail258.d(11): Error: delimited string must end in \n+\"\n+fail_compilation/fail258.d(11): Error: declaration expected, not `\"X\"`\n+fail_compilation/fail258.d(14): Error: unterminated string constant starting at fail_compilation/fail258.d(14)\n+---\n+*/\n q\"\n X\n "}, {"sha": "340be5281108154be01635a715eee5980517d18f", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail2740.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail2740.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail2740.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail2740.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail2740.d(17): Error: class `fail2740.Foo` ambiguous virtual function `foo`\n+---\n+*/\n interface IFoo\n {\n \tint foo();"}, {"sha": "4f9b7c34c0a266e95bba6e8317b2e5ae698df632", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail276.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail276.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail276.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail276.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail276.d(19): Error: `this` has no effect\n+fail_compilation/fail276.d(15): Error: `this` is only defined in non-static member functions, not `__anonclass2`\n+---\n+*/\n \n class C\n {"}, {"sha": "8fa7aa49efca81161cc0e7b2db28dc43394dfce9", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail279.d", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail279.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail279.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail279.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,12 @@\n-// Issue 2920 - recursive templates blow compiler stack\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail279.d(14): Error: mixin `fail279.Template!0.Template!1.Template!2.Template!3.Template!4.Template!5.Template!6.Template!7.Template!8.Template!9.Template!10.Template!11.Template!12.Template!13.Template!14.Template!15.Template!16.Template!17.Template!18.Template!19.Template!20.Template!21.Template!22.Template!23.Template!24.Template!25.Template!26.Template!27.Template!28.Template!29.Template!30.Template!31.Template!32.Template!33.Template!34.Template!35.Template!36.Template!37.Template!38.Template!39.Template!40.Template!41.Template!42.Template!43.Template!44.Template!45.Template!46.Template!47.Template!48.Template!49.Template!50.Template!51.Template!52.Template!53.Template!54.Template!55.Template!56.Template!57.Template!58.Template!59.Template!60.Template!61.Template!62.Template!63.Template!64.Template!65.Template!66.Template!67.Template!68.Template!69.Template!70.Template!71.Template!72.Template!73.Template!74.Template!75.Template!76.Template!77.Template!78.Template!79.Template!80.Template!81.Template!82.Template!83.Template!84.Template!85.Template!86.Template!87.Template!88.Template!89.Template!90.Template!91.Template!92.Template!93.Template!94.Template!95.Template!96.Template!97.Template!98.Template!99.Template!100.Template!101.Template!102.Template!103.Template!104.Template!105.Template!106.Template!107.Template!108.Template!109.Template!110.Template!111.Template!112.Template!113.Template!114.Template!115.Template!116.Template!117.Template!118.Template!119.Template!120.Template!121.Template!122.Template!123.Template!124.Template!125.Template!126.Template!127.Template!128.Template!129.Template!130.Template!131.Template!132.Template!133.Template!134.Template!135.Template!136.Template!137.Template!138.Template!139.Template!140.Template!141.Template!142.Template!143.Template!144.Template!145.Template!146.Template!147.Template!148.Template!149.Template!150.Template!151.Template!152.Template!153.Template!154.Template!155.Template!156.Template!157.Template!158.Template!159.Template!160.Template!161.Template!162.Template!163.Template!164.Template!165.Template!166.Template!167.Template!168.Template!169.Template!170.Template!171.Template!172.Template!173.Template!174.Template!175.Template!176.Template!177.Template!178.Template!179.Template!180.Template!181.Template!182.Template!183.Template!184.Template!185.Template!186.Template!187.Template!188.Template!189.Template!190.Template!191.Template!192.Template!193.Template!194.Template!195.Template!196.Template!197.Template!198.Template!199.Template!200.Template!201.Template!202.Template!203.Template!204.Template!205.Template!206.Template!207.Template!208.Template!209.Template!210.Template!211.Template!212.Template!213.Template!214.Template!215.Template!216.Template!217.Template!218.Template!219.Template!220.Template!221.Template!222.Template!223.Template!224.Template!225.Template!226.Template!227.Template!228.Template!229.Template!230.Template!231.Template!232.Template!233.Template!234.Template!235.Template!236.Template!237.Template!238.Template!239.Template!240.Template!241.Template!242.Template!243.Template!244.Template!245.Template!246.Template!247.Template!248.Template!249.Template!250.Template!251.Template!252.Template!253.Template!254.Template!255.Template!256.Template!257.Template!258.Template!259.Template!260.Template!261.Template!262.Template!263.Template!264.Template!265.Template!266.Template!267.Template!268.Template!269.Template!270.Template!271.Template!272.Template!273.Template!274.Template!275.Template!276.Template!277.Template!278.Template!279.Template!280.Template!281.Template!282.Template!283.Template!284.Template!285.Template!286.Template!287.Template!288.Template!289.Template!290.Template!291.Template!292.Template!293.Template!294.Template!295.Template!296.Template!297.Template!298.Template!299.Template!300.Template!301.Template!302.Template!303.Template!304.Template!305.Template!306.Template!307.Template!308.Template!309.Template!310.Template!311.Template!312.Template!313.Template!314.Template!315.Template!316.Template!317.Template!318.Template!319.Template!320.Template!321.Template!322.Template!323.Template!324.Template!325.Template!326.Template!327.Template!328.Template!329.Template!330.Template!331.Template!332.Template!333.Template!334.Template!335.Template!336.Template!337.Template!338.Template!339.Template!340.Template!341.Template!342.Template!343.Template!344.Template!345.Template!346.Template!347.Template!348.Template!349.Template!350.Template!351.Template!352.Template!353.Template!354.Template!355.Template!356.Template!357.Template!358.Template!359.Template!360.Template!361.Template!362.Template!363.Template!364.Template!365.Template!366.Template!367.Template!368.Template!369.Template!370.Template!371.Template!372.Template!373.Template!374.Template!375.Template!376.Template!377.Template!378.Template!379.Template!380.Template!381.Template!382.Template!383.Template!384.Template!385.Template!386.Template!387.Template!388.Template!389.Template!390.Template!391.Template!392.Template!393.Template!394.Template!395.Template!396.Template!397.Template!398.Template!399.Template!400.Template!401.Template!402.Template!403.Template!404.Template!405.Template!406.Template!407.Template!408.Template!409.Template!410.Template!411.Template!412.Template!413.Template!414.Template!415.Template!416.Template!417.Template!418.Template!419.Template!420.Template!421.Template!422.Template!423.Template!424.Template!425.Template!426.Template!427.Template!428.Template!429.Template!430.Template!431.Template!432.Template!433.Template!434.Template!435.Template!436.Template!437.Template!438.Template!439.Template!440.Template!441.Template!442.Template!443.Template!444.Template!445.Template!446.Template!447.Template!448.Template!449.Template!450.Template!451.Template!452.Template!453.Template!454.Template!455.Template!456.Template!457.Template!458.Template!459.Template!460.Template!461.Template!462.Template!463.Template!464.Template!465.Template!466.Template!467.Template!468.Template!469.Template!470.Template!471.Template!472.Template!473.Template!474.Template!475.Template!476.Template!477.Template!478.Template!479.Template!480.Template!481.Template!482.Template!483.Template!484.Template!485.Template!486.Template!487.Template!488.Template!489.Template!490.Template!491.Template!492.Template!493.Template!494.Template!495.Template!496.Template!497.Template!498.Template!499.Template!500` recursive expansion\n+---\n+*/\n+\n+// https://issues.dlang.org/show_bug.cgi?id=2920\n+// recursive templates blow compiler stack\n // template_16\n \n template Template(int i)"}, {"sha": "95e6c23c435ce90c86da8c3bc62a2f78529b4755", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail280.d", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail280.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail280.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail280.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,12 @@\n-// Issue 2920 - recursive templates blow compiler stack\n+// https://issues.dlang.org/show_bug.cgi?id=2920\n+// recursive templates blow compiler stack\n // template_17_A.\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail280.d(13): Error: template instance `fail280.t!500` recursive expansion exceeded allowed nesting limit\n+---\n+*/\n \n template t(int i)\n {"}, {"sha": "3b9bcd70f1bae1583244ffe196abd3437f79d383", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail281.d", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail281.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail281.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail281.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,12 @@\n-// Issue 2920 - recursive templates blow compiler stack\n+// https://issues.dlang.org/show_bug.cgi?id=2920\n+// recursive templates blow compiler stack\n // template_29_B.\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail281.d(15): Error: template instance `fail281.foo!4294966795u` recursive expansion exceeded allowed nesting limit\n+---\n+*/\n \n template foo(uint i)\n {"}, {"sha": "d885b3ef3ee7d21b70ddee2ca0be28a4c228d16e", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail308.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail308.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail308.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail308.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,10 @@\n // REQUIRED_ARGS: -unittest\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail308.d(18): Error: template instance `object.RTInfo!(TestType)` recursive expansion\n+---\n+*/\n \n void main()\n {"}, {"sha": "5ca758c85781262293aedc621197bfa7e358ed0a", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail3150.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3150.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3150.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3150.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,10 @@\n // REQUIRED_ARGS: -de\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail3150.d(10): Error: cannot cast expression `[1, 2]` of type `int[]` to `ulong`\n+---\n+*/\n \n void main() {\n     ulong u = cast(ulong)[1,2];"}, {"sha": "ab4077cd2ff129e4250b286267c6d9922d3bab0b", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail316.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail316.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail316.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail316.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail316.d(17): Error: mixin `fail316.foo.BadImpl!(uint, Mix1)` cannot resolve forward reference\n+---\n+*/\n template BadImpl(T, alias thename)\n {\n   void a_bad_idea(T t)"}, {"sha": "931cb8dd82022db0359e10fac602fd7c5347c434", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail324.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail324.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail324.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail324.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,5 @@\n /*\n-test_output:\n+TEST_OUTPUT:\n ---\n fail_compilation/fail324.d(16): Error: template instance doStuff!((i){ return i; }) cannot use local '__lambda1' as parameter to non-global template doStuff(alias fun)()\n ---"}, {"sha": "2b6bbac3f19f8cc1773401270fc0c7b2316bf957", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail3290.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3290.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3290.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3290.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,10 @@\n-// 3290\n+// https://issues.dlang.org/show_bug.cgi?id=3290\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail3290.d(12): Error: argument type mismatch, `const(int)` to `ref int`\n+---\n+*/\n \n void main()\n {"}, {"sha": "f395392a8e7b199e7bb97c514598ef1752ca6049", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail344.d", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail344.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail344.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail344.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,16 @@\n-// 3737\n+// https://issues.dlang.org/show_bug.cgi?id=3737\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail344.d(20): Error: undefined identifier `Q`\n+fail_compilation/fail344.d(20): Error: undefined identifier `Q`\n+fail_compilation/fail344.d(20): Error: undefined identifier `V`\n+fail_compilation/fail344.d(23):        while evaluating: `static assert(Alike!(SIB!(crayon)))`\n+fail_compilation/fail344.d(23): Error: template instance `fail344.SIB!(crayon).SIB.Alike!(SIB!(crayon))` error instantiating\n+fail_compilation/fail344.d(23):        while evaluating: `static assert(Alike!(SIB!(crayon)))`\n+fail_compilation/fail344.d(28): Error: template instance `fail344.SIB!(crayon).SIB.opDispatch!\"E\"` error instantiating\n+---\n+*/\n \n int crayon;\n "}, {"sha": "af491bda15d21b52af439f487119ee139a4ffbc8", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail346.d", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail346.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail346.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail346.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,12 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail346.d(15): Error: undefined identifier `P`\n+fail_compilation/fail346.d(15): Error: variable `fail346.S.T!0.T` cannot use template to add field to aggregate `S`\n+fail_compilation/fail346.d(20): Error: template instance `fail346.S.T!0` error instantiating\n+fail_compilation/fail346.d(23):        instantiated from here: `V!(S, 0)`\n+---\n+*/\n \n struct S {\n     int x;"}, {"sha": "6375b5cd24e24bac50d6202d07c3aa99714d9618", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail356a.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail356a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail356a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail356a.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,2 +1,9 @@\n+/*\n+EXTRA_FILES: imports/fail356.d\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail356a.d(9): Error: variable `fail356a.imports` conflicts with import `fail356a.imports` at fail_compilation/fail356a.d(8)\n+---\n+*/\n import imports.fail356;\n int imports; // collides with package name"}, {"sha": "21f91b17e43d8cb2ff718fbb2c68450bd43fd011", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail356b.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail356b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail356b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail356b.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,2 +1,9 @@\n+/*\n+EXTRA_FILES: imports/fail356.d\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail356b.d(9): Error: variable `fail356b.bar` conflicts with alias `fail356b.bar` at fail_compilation/fail356b.d(8)\n+---\n+*/\n import imports.fail356 : bar;\n int bar; // collides with selective import"}, {"sha": "bd10943c718fc7a393e7fe1ded3047cd08f93a25", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail356c.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail356c.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail356c.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail356c.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,2 +1,9 @@\n+/*\n+EXTRA_FILES: imports/fail356.d\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail356c.d(9): Error: variable `fail356c.foo` conflicts with import `fail356c.foo` at fail_compilation/fail356c.d(8)\n+---\n+*/\n import foo = imports.fail356;\n int foo; // collides with renamed import"}, {"sha": "56e8c0c4c11fe75d4bfbc698096f93412dd8f86b", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail3581a.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3581a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3581a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3581a.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail3581a.d(9): Error: function `fail3581a.B.f` cannot override a non-virtual function\n+---\n+*/\n \n class A { void f() {} }\n class B : A { static override void f() {}; }"}, {"sha": "c2f7f13558ad3fe5ba747cc6562ef620b3b7ef59", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail3581b.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3581b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3581b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3581b.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail3581b.d(9): Error: function `fail3581b.B.f` `private` method is not virtual and cannot override\n+---\n+*/\n \n class A { void f() {} }\n class B : A { private override void f() {}; }"}, {"sha": "c6a23ad7bcc83e265da09f17c42a0c46d83088ee", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail359.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail359.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail359.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail359.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail359.d(8): Error: #line integer [\"filespec\"]\\n expected\n+fail_compilation/fail359.d(9): Error: no identifier for declarator `_BOOM`\n+---\n+*/\n #line 5 _BOOM\n void main() { }\n "}, {"sha": "889d940de441521d22fb024e16c525af67aff4a5", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail3673a.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3673a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3673a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3673a.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,2 +1,8 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail3673a.d(8): Error: template constraints only allowed for templates\n+---\n+*/\n class A {}\n class B : A if(false) { }"}, {"sha": "bf745ac8bbd0424b3eb28757aea6800a68fbec3c", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail3673b.d", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3673b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3673b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3673b.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,2 +1,12 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail3673b.d(12): Error: basic type expected, not `if`\n+fail_compilation/fail3673b.d(12): Error: template constraints only allowed for templates\n+fail_compilation/fail3673b.d(12): Error: { } expected following `class` declaration\n+fail_compilation/fail3673b.d(12): Error: no identifier for declarator `A`\n+fail_compilation/fail3673b.d(12): Error: declaration expected, not `{`\n+---\n+*/\n class A {}\n class B : if(false) A { }"}, {"sha": "c2903bb73c288c597ca6bc4a3ef4ae730441cc69", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail3731.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3731.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3731.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3731.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail3731.d(13): Error: cannot implicitly convert expression `x` of type `immutable(D)` to `fail3731.main.C`\n+---\n+*/\n \n void main()\n {"}, {"sha": "d20d8e9fc777b5cf237b5b4ea109892d57656b8a", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail3753.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3753.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3753.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3753.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,5 @@\n /*\n+TEST_OUTPUT:\n ---\n Error: cannot mix core.std.stdlib.alloca() and exception handling in _Dmain()\n ---"}, {"sha": "3879ef5d3797094b4310b1c205f87c4fe58ae648", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail3895.d", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3895.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3895.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail3895.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,9 +1,14 @@\n-import std.stdio;\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail3895.d(12): Error: cannot append type `double[]` to type `float[]`\n+---\n+*/\n+\n \n void main() {\n     double[] stuff = [1.,2.,3.,4.,5.];\n     float[] otherStuff;\n     otherStuff ~= stuff;\n-    writeln(otherStuff);\n }\n "}, {"sha": "b9c1671d78103ec91bfb068913ec78def2cd6d14", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4206.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4206.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4206.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4206.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4206.d(9): Error: initializer must be an expression, not `s`\n+---\n+*/\n \n struct s {}\n enum var = s;"}, {"sha": "6604f1f7fc7719b6e1edb6c829263bb2b636686c", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4269a.d", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4269a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4269a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4269a.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,11 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4269a.d(12): Error: undefined identifier `B`\n+fail_compilation/fail4269a.d(12): Error: variable `fail4269a.A.blah` field not allowed in interface\n+fail_compilation/fail4269a.d(13): Error: undefined identifier `B`\n+---\n+*/\n enum bool WWW = is(typeof(A.x));\n \n interface A {"}, {"sha": "253013344fca25b4a092e27d81aaf2be88c0b4ae", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4269b.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4269b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4269b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4269b.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4269b.d(11): Error: undefined identifier `B`\n+fail_compilation/fail4269b.d(12): Error: undefined identifier `B`\n+---\n+*/\n enum bool WWW = is(typeof(A.x));\n \n struct A {"}, {"sha": "8bbfaacb8f148630b3d8ea70b926b5769a101c10", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4269c.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4269c.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4269c.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4269c.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4269c.d(11): Error: undefined identifier `B`\n+fail_compilation/fail4269c.d(12): Error: undefined identifier `B`\n+---\n+*/\n enum bool WWW = is(typeof(A.x));\n \n class A {"}, {"sha": "135e1d4fe51c401407062c7558aa02b0dc8e5f7a", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4269d.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4269d.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4269d.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4269d.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4269d.d(9): Error: undefined identifier `Y`\n+---\n+*/\n \n static if(is(typeof(X6.init))) {}\n alias Y X6;"}, {"sha": "c63bfac4271725710132d5b9c4557ea7a2defe8b", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4269e.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4269e.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4269e.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4269e.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4269e.d(10): Error: semicolon expected, not `X5`\n+fail_compilation/fail4269e.d(10): Error: no identifier for declarator `X5`\n+---\n+*/\n \n static if(is(typeof(X5.init))) {}\n typedef Y X5;"}, {"sha": "7a719c7c3a34ce855cce2b066585ff8e84c4b8c2", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4269f.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4269f.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4269f.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4269f.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4269f.d(9): Error: `alias X16 = X16;` cannot alias itself, use a qualified name to create an overload set\n+---\n+*/\n \n static if(is(typeof(X16))) {}\n alias X16 X16;"}, {"sha": "69d9a9a1cb90b0394ecc2cde965c4191540e66b7", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4269g.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4269g.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4269g.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4269g.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4269g.d(10): Error: alias `fail4269g.Xg` cannot alias an expression `d[1]`\n+---\n+*/\n \n int[2] d;\n static if(is(typeof(Xg.init))) {}"}, {"sha": "5ee2a311b30d2afd2877758acab5c454ff3e490e", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375a.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375a.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375a.d(14): Warning: else is dangling, add { } after condition at fail_compilation/fail4375a.d(11)\n+---\n+*/\n \n void main() {\n \tif (true)"}, {"sha": "0d16446cdc6c5bb9b6c0180891e76bfca362418a", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375b.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375b.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375b.d(16): Warning: else is dangling, add { } after condition at fail_compilation/fail4375b.d(12)\n+---\n+*/\n \n void main() {\n     // disallowed"}, {"sha": "4e578aac95da26c4fbf3b30c71f6f6667b88b6ed", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375c.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375c.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375c.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375c.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375c.d(15): Warning: else is dangling, add { } after condition at fail_compilation/fail4375c.d(11)\n+---\n+*/\n \n void main() {\n     if (true)"}, {"sha": "8e9b4e776a969831c4a9c5184c928e5a822d0367", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375d.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375d.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375d.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375d.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375d.d(15): Warning: else is dangling, add { } after condition at fail_compilation/fail4375d.d(11)\n+---\n+*/\n \n void main() {\n     if (true)"}, {"sha": "ae809bc9367ffe6aabc9c6e880379fe146f07064", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375e.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375e.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375e.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375e.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375e.d(14): Warning: else is dangling, add { } after condition at fail_compilation/fail4375e.d(11)\n+---\n+*/\n \n void main() {\n     version (A)"}, {"sha": "5855b1b0eec4a2b8d49606d3fabd4b78abae1316", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375f.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375f.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375f.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375f.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375f.d(14): Warning: else is dangling, add { } after condition at fail_compilation/fail4375f.d(11)\n+---\n+*/\n \n void main() {\n     version (A)"}, {"sha": "4b9d12b9b463eb7dc62829f34cb8467ded657533", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375g.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375g.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375g.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375g.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375g.d(14): Warning: else is dangling, add { } after condition at fail_compilation/fail4375g.d(11)\n+---\n+*/\n \n void main() {\n     static if (true)"}, {"sha": "72e3e14bef9fc76ae45b8ea5239543ff4dc20296", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375h.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375h.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375h.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375h.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375h.d(16): Warning: else is dangling, add { } after condition at fail_compilation/fail4375h.d(13)\n+---\n+*/\n \n void main() {\n     switch (4) {"}, {"sha": "5801c61dcbc9e0940f8dc24db50021d22b0b7250", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375i.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375i.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375i.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375i.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375i.d(16): Warning: else is dangling, add { } after condition at fail_compilation/fail4375i.d(11)\n+---\n+*/\n \n void main() {\n     if (true)"}, {"sha": "9a87540cdcbdd3ed353678f48b28b342b340d525", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375j.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375j.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375j.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375j.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375j.d(16): Warning: else is dangling, add { } after condition at fail_compilation/fail4375j.d(11)\n+---\n+*/\n \n void main() {\n     if (true)"}, {"sha": "bb8b7b2d6df3fce07acf1026a48f776718d26707", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375k.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375k.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375k.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375k.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375k.d-mixin-11(15): Warning: else is dangling, add { } after condition at fail_compilation/fail4375k.d-mixin-11(12)\n+---\n+*/\n \n void main() {\n     mixin(q{"}, {"sha": "965b0e72cbeac8fa377e26079ed1957b913e0684", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375l.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375l.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375l.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375l.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375l.d(15): Warning: else is dangling, add { } after condition at fail_compilation/fail4375l.d(11)\n+---\n+*/\n \n void main() {\n     if (true)"}, {"sha": "a6bdf1e80dbd3e70ad9c770663c1f78cc6ab9f8c", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375m.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375m.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375m.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375m.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375m.d(15): Warning: else is dangling, add { } after condition at fail_compilation/fail4375m.d(12)\n+---\n+*/\n \n void main() {\n     do"}, {"sha": "c37b219630884176d80a467183608b28d9c40495", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375o.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375o.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375o.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375o.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375o.d(15): Warning: else is dangling, add { } after condition at fail_compilation/fail4375o.d(11)\n+---\n+*/\n \n void main() {\n     if (true)"}, {"sha": "52a6e65609cb585a02ad342eb66579c92bf8afb4", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375p.d", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375p.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375p.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375p.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,12 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375p.d(19): Warning: else is dangling, add { } after condition at fail_compilation/fail4375p.d(12)\n+fail_compilation/fail4375p.d(16): Error: undefined identifier `x`\n+---\n+*/\n \n void main() {\n     if (true)"}, {"sha": "f445eaba7cfac5ead2c9c2ecfa5c45747e2ecfa3", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375q.d", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375q.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375q.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375q.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,12 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375q.d(17): Warning: else is dangling, add { } after condition at fail_compilation/fail4375q.d(13)\n+fail_compilation/fail4375q.d(14): Error: `with` expressions must be aggregate types or pointers to them, not `int`\n+---\n+*/\n \n void main() {\n     auto x = 1;"}, {"sha": "61923e207d7216281274c3981448a33ff87d46b4", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375r.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375r.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375r.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375r.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375r.d(17): Warning: else is dangling, add { } after condition at fail_compilation/fail4375r.d(11)\n+---\n+*/\n \n void main() {\n     if (true)"}, {"sha": "cd4e5a07e4778d374358d0adb9769464e546efc7", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375s.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375s.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375s.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375s.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375s.d(17): Warning: else is dangling, add { } after condition at fail_compilation/fail4375s.d(11)\n+---\n+*/\n \n void main() {\n     if (true)"}, {"sha": "557761b7100acc1b581a5daaaf6b07e108d47462", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375t.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375t.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375t.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375t.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n // REQUIRED_ARGS: -w -unittest\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375t.d(14): Warning: else is dangling, add { } after condition at fail_compilation/fail4375t.d(11)\n+---\n+*/\n \n unittest {  // disallowed\n     if (true)"}, {"sha": "1028b787c20de053568db9b782327ea1358d7bff", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375u.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375u.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375u.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375u.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375u.d(13): Warning: else is dangling, add { } after condition at fail_compilation/fail4375u.d(11)\n+---\n+*/\n \n static if (true)\n     static if (false)"}, {"sha": "f4a6089c0dbec5a5e70a775f1e3fe78e5e4b30a5", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375v.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375v.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375v.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375v.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375v.d(13): Warning: else is dangling, add { } after condition at fail_compilation/fail4375v.d(11)\n+---\n+*/\n \n version (A)\n     version (B)"}, {"sha": "ae1ac21839c630efef53e65e56ba77c4fc257c0b", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375w.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375w.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375w.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375w.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375w.d(13): Warning: else is dangling, add { } after condition at fail_compilation/fail4375w.d(11)\n+---\n+*/\n \n static if (true)\n     version (B)"}, {"sha": "33c8eb2a89915b712906410093d1bb62ef170f28", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375x.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375x.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375x.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375x.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375x.d(14): Warning: else is dangling, add { } after condition at fail_compilation/fail4375x.d(11)\n+---\n+*/\n \n static if (true)\n abstract:"}, {"sha": "bc796312b1ceb0c28b63f38f846d45ddad86df94", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4375y.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375y.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375y.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4375y.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n // REQUIRED_ARGS: -w\n-// 4375: Dangling else\n+// https://issues.dlang.org/show_bug.cgi?id=4375: Dangling else\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4375y.d(16): Warning: else is dangling, add { } after condition at fail_compilation/fail4375y.d(11)\n+---\n+*/\n \n static if (true)\n     align(1)"}, {"sha": "64a8d45afd138ee14bf5f0c4abdb4d71f7179195", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4510.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4510.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4510.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4510.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,10 @@\n-// 4510\n+// https://issues.dlang.org/show_bug.cgi?id=4510\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4510.d(12): Error: argument type mismatch, `float` to `ref double`\n+---\n+*/\n \n void main()\n {"}, {"sha": "efe4d41aeddbf91e62d1888ea9499e55c88c310f", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4511.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4511.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4511.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4511.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4511.d(18): Error: cannot implicitly override base class method `fail4511.test72.X.func` with `fail4511.test72.Y.func`; add `override` attribute\n+---\n+*/\n void test72()\n {\n     class A {}"}, {"sha": "f3fe031a1478dfe3f495e8ec2ad96322f40ccbb3", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4517.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4517.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4517.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4517.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4517.d(16): Error: `enum` member `B` not represented in `final switch`\n+---\n+*/\n \n enum E : ushort\n {"}, {"sha": "02fcc2ebb6fd5f9d8dfa9ee262e98a902bc65be4", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4611.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4611.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4611.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4611.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,5 @@\n /*\n+TEST_OUTPUT:\n ---\n fail_compilation/fail4611.d(15): Error: Vec[2147483647] size 4 * 2147483647 exceeds 0x7fffffff size limit for static array\n ---"}, {"sha": "9da0c0927a28c2c89704a27ce156d6afe7cdd530", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail47.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail47.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail47.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail47.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail47.d(8): Error: variable `fail47._foo` is aliased to a function\n+---\n+*/\n void foo() {}\n int _foo;\n alias _foo foo;"}, {"sha": "02bbc61666bf4ff802d79e0e6194db42ff526b00", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail4958.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4958.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4958.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail4958.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,2 +1,8 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail4958.d(8): Error: enum member `fail4958.FloatEnum.B` has inexact value due to loss of precision\n+---\n+*/\n \n enum FloatEnum : float { A = float.max/2, B, C }"}, {"sha": "fefed374db5b4daeaedc99755012f87b90dce201", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail5435.d", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5435.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5435.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5435.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,32 @@\n-// 5435\n+// https://issues.dlang.org/show_bug.cgi?id=5435\n+/*\n+TEST_OUTPUT:\n+---\n+Enum5435.A\n+Enum5435.B\n+Enum5435.C\n+fail_compilation/fail5435.d(38): Error: cannot implicitly convert expression `\"foo\"` of type `string` to `Enum5435`\n+fail_compilation/fail5435.d(38):        while evaluating `pragma(msg, foo)`\n+fail_compilation/fail5435.d(38): Error: cannot implicitly convert expression `3.0` of type `double` to `Enum5435`\n+fail_compilation/fail5435.d(38):        while evaluating `pragma(msg, foo)`\n+fail_compilation/fail5435.d(39): Error: cannot implicitly convert expression `Enum5435.A` of type `Enum5435` to `string`\n+fail_compilation/fail5435.d(39):        while evaluating `pragma(msg, foo)`\n+fail_compilation/fail5435.d(39): Error: cannot implicitly convert expression `Enum5435.B` of type `Enum5435` to `string`\n+fail_compilation/fail5435.d(39):        while evaluating `pragma(msg, foo)`\n+fail_compilation/fail5435.d(39): Error: cannot implicitly convert expression `Enum5435.C` of type `Enum5435` to `string`\n+fail_compilation/fail5435.d(39):        while evaluating `pragma(msg, foo)`\n+foo\n+fail_compilation/fail5435.d(39): Error: cannot implicitly convert expression `3.0` of type `double` to `string`\n+fail_compilation/fail5435.d(39):        while evaluating `pragma(msg, foo)`\n+0\n+1\n+2\n+fail_compilation/fail5435.d(40): Error: cannot implicitly convert expression `\"foo\"` of type `string` to `int`\n+fail_compilation/fail5435.d(40):        while evaluating `pragma(msg, foo)`\n+fail_compilation/fail5435.d(40): Error: cannot implicitly convert expression `3.0` of type `double` to `int`\n+fail_compilation/fail5435.d(40):        while evaluating `pragma(msg, foo)`\n+---\n+*/\n \n template Tuple5435(E...) { alias E Tuple5435; }\n enum Enum5435 { A, B, C };"}, {"sha": "64902fedec348f1e2e913e7c9ade8909c0b4b234", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail56.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail56.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail56.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail56.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail56.d(21): Error: mixin `dstress.nocompile.bug_20050330_A.main.Blah!(5, a).Blah!(5, a)` recursive mixin instantiation\n+fail_compilation/fail56.d(26): Error: mixin `dstress.nocompile.bug_20050330_A.main.Blah!(5, a)` error instantiating\n+---\n+*/\n // $HeadURL$\n // $Date$\n // $Author$"}, {"sha": "e2442e65593ffa7c78f755f058b08eaf368bd8c1", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail5634.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5634.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5634.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5634.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+----\n+fail_compilation/fail5634.d(9): Error: function `D main()` conflicts with previous declaration at fail_compilation/fail5634.d(8)\n+---\n+*/\n+\n void main() { }\n void main() { }\n-"}, {"sha": "41149cdc2f5db9c7928be7fa561f470b868f45d1", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail57.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail57.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail57.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail57.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail57.d(11): Error: divide by 0\n+fail_compilation/fail57.d(11): Error: divide by 0\n+---\n+*/\n \n int main()\n {"}, {"sha": "d58b362315b0b5e9d31bb3137cc3f353a151e83e", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail5733.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5733.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5733.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5733.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail5733.d(12): Error: `opDispatch!\"foo\"` isn't a template\n+---\n+*/\n struct Test\n {\n     struct opDispatch(string dummy)"}, {"sha": "29d9e5847f8932fd9b9b7862b0f653ee572ea9d7", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail58.d", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail58.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail58.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail58.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,12 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail58.d(26): Error: function `fail58.SomeFunc(dchar[] pText, out int pStopPosn)` is not callable using argument types `(string, int)`\n+fail_compilation/fail58.d(26):        cannot pass argument `\"123\"` of type `string` to parameter `dchar[] pText`\n+fail_compilation/fail58.d(30): Error: function `fail58.SomeFunc(dchar[] pText, out int pStopPosn)` is not callable using argument types `(string, int)`\n+fail_compilation/fail58.d(30):        cannot pass argument `\"\"` of type `string` to parameter `dchar[] pText`\n+---\n+*/\n debug(1) import std.stdio;\n const int anything = -1000; // Line #2\n dchar[] SomeFunc( dchar[] pText, out int pStopPosn)"}, {"sha": "236a956de923e018a7cd24dc23838667ef1ddcce", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail5851.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5851.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5851.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5851.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail5851.d(11): Error: alias this is not reachable as `Foo` already converts to `object.Object`\n+---\n+*/\n \n class Foo\n {"}, {"sha": "cd64e74b85ffeca1516508138aa784a0dc91924e", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail5953a1.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5953a1.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5953a1.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5953a1.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail5953a1.d(9): Error: expression expected, not `,`\n+---\n+*/\n void main()\n {\n     auto a2 = [,];    // invalid, but compiles"}, {"sha": "2edbc1029872ae43163f6fd0e4bf677ceaf51569", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail5953a2.d", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5953a2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5953a2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5953a2.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,11 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail5953a2.d(11): Error: expression expected, not `,`\n+fail_compilation/fail5953a2.d(11): Error: expression expected, not `,`\n+fail_compilation/fail5953a2.d(11): Error: expression expected, not `,`\n+---\n+*/\n void main()\n {\n     auto a3 = [,,,];    // invalid, but compiles"}, {"sha": "275c3f9579870f19663d3e3399f0e4348419d8d7", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail5953s1.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5953s1.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5953s1.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5953s1.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail5953s1.d(10): Error: expression expected, not `,`\n+---\n+*/\n void main()\n {\n     struct S{}"}, {"sha": "d66ff5d20d34798e7246c9590b9f0e3bfb7af8bd", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail5953s2.d", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5953s2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5953s2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail5953s2.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,11 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail5953s2.d(12): Error: expression expected, not `,`\n+fail_compilation/fail5953s2.d(12): Error: expression expected, not `,`\n+fail_compilation/fail5953s2.d(12): Error: expression expected, not `,`\n+---\n+*/\n void main()\n {\n     struct S{}"}, {"sha": "ec8de0b223c92b95c71a7ae7ef5881766183ff8b", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail60.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail60.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail60.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail60.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail60.d(14): Error: `this` is only defined in non-static member functions, not `A`\n+---\n+*/\n class A\n {\n  class B"}, {"sha": "45797ebccc92352160cbdfae5a1095c242e6221e", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail6029.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6029.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6029.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6029.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail6029.d(10): Error: alias this is not reachable as `A` already converts to `A`\n+---\n+*/\n struct A\n {\n     static A a;"}, {"sha": "08f5de3e2996f4d924eda21d837d69c326b59d77", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail6242.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6242.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6242.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6242.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail6242.d(9): Error: cannot implicitly override base class method `fail6242.A.fun` with `fail6242.B.fun`; add `override` attribute\n+---\n+*/\n class A { void fun(int) {} }\n \n class B : A { void fun(int x) in { assert(x > 0); } body {} }"}, {"sha": "218de0d861e8eebe57803962ad23d4f576e1f61a", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail6458.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6458.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6458.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6458.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail6458.d(10): Error: Invalid trailing code unit\n+---\n+*/\n \n void main()\n {"}, {"sha": "3ac90b5c0c089bff4911cbfbd448508445a0c047", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail6497.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6497.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6497.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6497.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail6497.d(12): Error: cannot take address of local `n` in `@safe` function `main`\n+fail_compilation/fail6497.d(12): Error: cannot take address of local `n` in `@safe` function `main`\n+---\n+*/\n \n void main() @safe\n {"}, {"sha": "456ef0de7f57e9b084b3c08ccf6811a8f7ae0399", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail6561.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6561.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6561.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6561.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail6561.d(9): Error: undefined identifier `x`\n+---\n+*/\n struct S\n {\n     alias x this;   // should cause undefined identifier error"}, {"sha": "26587dc7e5ab51ab688ebaea2b90cbf432dfe47f", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail6611.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6611.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6611.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6611.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail6611.d(11): Error: cannot post-increment array slice `x[]`, use pre-increment instead\n+---\n+*/\n \n void main()\n {"}, {"sha": "174ca3d2481a3d9cff61135fc04261155bfe5e94", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail6781.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6781.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6781.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6781.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail6781.d(9): Error: undefined identifier `some_error`\n+fail_compilation/fail6781.d(14): Error: template instance `fail6781.C6781.makeSortedIndices.bug6781!(greater)` error instantiating\n+---\n+*/\n void bug6781(alias xxx)() {\n     some_error;\n }"}, {"sha": "b56a5db931ee1c066331b5a583e2ea7b679a9e85", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail6968.d", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6968.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6968.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail6968.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,14 @@\n-// 6968\n+// https://issues.dlang.org/show_bug.cgi?id=6968\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail6968.d(26): Error: cannot pass type `int` as a function argument\n+fail_compilation/fail6968.d(26): Error: cannot pass type `long` as a function argument\n+fail_compilation/fail6968.d(26): Error: circular initialization of variable `fail6968.PredAny!(int, long, float).PredAny`\n+fail_compilation/fail6968.d(31): Error: template instance `fail6968.PredAny!(int, long, float)` error instantiating\n+fail_compilation/fail6968.d(31):        while evaluating `pragma(msg, PredAny!(int, long, float))`\n+---\n+*/\n \n template Pred(A, B)\n {"}, {"sha": "05ba7f9fc0a4da496a05482addacfc24e80853bb", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail7173.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7173.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7173.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7173.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail7173.d(23): Error: expression `b1._a.opBinary(b2._a).fun()` is `void` and has no value\n+---\n+*/\n struct A{\n \n   A opBinary(string op)(A a){ A rt; return rt; }"}, {"sha": "85402493ed48836557068f6c23fdec65398ca043", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail7178.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7178.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7178.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7178.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail7178.d(10): Error: undefined identifier `contents` in module `fail7178`\n+fail_compilation/fail7178.d(12): Error: mixin `fail7178.populate!int` error instantiating\n+---\n+*/\n template populate(overloads...)\n {\n     mixin populate!(.contents);"}, {"sha": "f38308d7f182066b334855052e8ddbbd027f498a", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail7234.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7234.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7234.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7234.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail7234.d(14): Error: no property `empty` for type `Contract*`, perhaps `import std.range;` is needed?\n+---\n+*/\n \n struct Contract {\n     void opDispatch()(){}"}, {"sha": "f17dc96277ada438e0063c124d2721fddad8296b", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail7369.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7369.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7369.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7369.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail7369.d(9): Error: cannot modify `this.a` in `const` function\n+---\n+*/\n struct S7369 {\n     int a;\n     invariant() { a += 5; }"}, {"sha": "1a7e092fb5ba88c8eb8b5dc26823bc289acc1fe6", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail7424b.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424b.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail7424b.d(10): Error: cannot resolve type for this.g()()\n+---\n+*/\n struct S7424b\n {\n     @property int g()() { return 0; }"}, {"sha": "1c0654091f7568e2d81d78215778a08094ea90c2", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail7424c.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424c.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424c.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424c.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail7424c.d(10): Error: cannot resolve type for this.g()()\n+---\n+*/\n struct S7424c\n {\n     @property int g()() { return 0; }"}, {"sha": "d784a7580c45588717d8c396bf029b171440341a", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail7424d.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424d.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424d.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424d.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail7424d.d(10): Error: cannot resolve type for this.g()()\n+---\n+*/\n struct S7424d\n {\n     @property int g()() immutable { return 0; }"}, {"sha": "3bf3a2d97dbf7e2ea8867efc3fc692b61fe3089f", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail7424e.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424e.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424e.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424e.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail7424e.d(10): Error: cannot resolve type for this.g()()\n+---\n+*/\n struct S7424e\n {\n     @property int g()() immutable { return 0; }"}, {"sha": "266163de75d84c2845111ea5fa89c2ae3d97c0cc", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail7424f.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424f.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424f.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424f.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail7424f.d(10): Error: cannot resolve type for this.g()()\n+---\n+*/\n struct S7424f\n {\n     @property int g()() shared { return 0; }"}, {"sha": "aca6586c8f8fe342f9a2925962364f3d2a1a4484", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail7424g.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424g.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424g.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424g.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail7424g.d(10): Error: cannot resolve type for this.g()()\n+---\n+*/\n struct S7424g\n {\n     @property int g()() { return 0; }"}, {"sha": "e08eac13de28e1b4de9ff819346471de5b1da1f2", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail7424h.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424h.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424h.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424h.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail7424h.d(10): Error: cannot resolve type for this.g()()\n+---\n+*/\n struct S7424g\n {\n     @property int g()() { return 0; }"}, {"sha": "1c2cb1cd687bb729a6148df59c2c3745e694c268", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail7424i.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424i.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424i.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7424i.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail7424i.d(10): Error: cannot resolve type for this.g()()\n+---\n+*/\n struct S7424g\n {\n     @property int g()() immutable { return 0; }"}, {"sha": "834c31570287015e3893e99d560e72e14a9566b7", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail7524a.d", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7524a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7524a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7524a.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,10 @@\n-\n-// 7524\n+/*\n+REQUIRED_ARGS: -o-\n+TEST_OUTPUT:\n+----\n+fail_compilation/fail7524a.d(10): Error: #line integer [\"filespec\"]\\n expected\n+fail_compilation/fail7524a.d(10): Error: declaration expected, not `\"$r:\\w+ +\\d+ \\d+$\"`\n+----\n+*/\n \n #line 47 __DATE__"}, {"sha": "f462746ece62b669cfe8ec1f08a45216a0266e3e", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail7524b.d", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7524b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7524b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7524b.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n-// 7524\n+// https://issues.dlang.org/show_bug.cgi?id=7524\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail7524b.d(10): Error: #line integer [\"filespec\"]\\n expected\n+fail_compilation/fail7524b.d(10): Error: declaration expected, not `$n$L`\n+---\n+*/\n \n #line 47 __VERSION__"}, {"sha": "76a92c2b193d0bec910e17b91c336411d40b2816", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail7603a.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7603a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7603a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7603a.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1 +1,7 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail7603a.d(7): Error: cannot modify constant `true`\n+---\n+*/\n void test(ref bool val = true) { }"}, {"sha": "9b84d3f6a4d859a1ee3da71863d43a71fea872f2", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail7603b.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7603b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7603b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7603b.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1 +1,7 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail7603b.d(7): Error: cannot modify constant `true`\n+---\n+*/\n void test(out bool val = true) { }"}, {"sha": "25a7399dd7ae0ef56e1152033fdbb521859a4b45", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail7603c.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7603c.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7603c.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7603c.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,2 +1,8 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail7603c.d(8): Error: cannot modify constant `3`\n+---\n+*/\n enum x = 3;\n void test(ref int val = x) { }"}, {"sha": "687b0ad129333839110472ae6dc042fef922542d", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail77.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail77.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail77.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail77.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail77.d(11): Error: cannot cast expression `& i` of type `int*` to `ubyte[4]`\n+---\n+*/\n void test()\n {\n     int i;"}, {"sha": "4638c0bcfa4e2f0d447377c3c1690550b282c7c7", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail7702.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7702.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7702.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7702.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail7702.d(14): Error: `s.opDispatch!\"x\"` isn't a template\n+---\n+*/\n struct S\n {\n    template opDispatch (string name) {}"}, {"sha": "87143fa7d2439db5139aa8e4f94737676f1ed516", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail7751.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7751.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7751.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7751.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail7751.d(15): Error: no constructor for `Foo`\n+fail_compilation/fail7751.d(23): Error: template instance `fail7751.foo!int` error instantiating\n+---\n+*/\n class Foo(T)\n {\n     T x;"}, {"sha": "f5d9ea385b6d02b9fe86b7807f93ac2b2725306d", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail7851.d", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7851.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7851.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7851.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,12 @@\n-// 7851\n+// https://issues.dlang.org/show_bug.cgi?id=7851\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail7851.d(38): Error: need `this` for `__mem_field_0` of type `int`\n+fail_compilation/fail7851.d(38): Error: need `this` for `__mem_field_1` of type `long`\n+fail_compilation/fail7851.d(38): Error: need `this` for `__mem_field_2` of type `float`\n+---\n+*/\n \n \n template TypeTuple(TList...)"}, {"sha": "ef8b770dd5a284beb89f39ec6b39665e4c1537c2", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail7859.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7859.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7859.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7859.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail7859.d(9): Error: undefined identifier `NonExistent`\n+---\n+*/\n template A(alias B) {}\n \n mixin template C(alias B = cast(NonExistent)null) {"}, {"sha": "e3a2d0817cef81153ddc4d368d9713391180eb92", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail7861.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7861.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7861.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail7861.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail7861.d(17): Error: no property `nonexistent` for type `test.B`\n+---\n+*/\n module test;\n \n mixin template A() {"}, {"sha": "19a0712f838220075d17882d2cd482f89b3cb8e3", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail8009.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail8009.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail8009.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail8009.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail8009.d(9): Error: template `fail8009.filter` cannot deduce function from argument types `!()(void)`, candidates are:\n+fail_compilation/fail8009.d(8):        `filter(R)(scope bool delegate(ref BAD!R) func)`\n+---\n+*/\n void filter(R)(scope bool delegate(ref BAD!R) func) { }\n void main() { filter(r => r); }\n "}, {"sha": "9f6dc40669f6e28897eb0b2ad9cec569719214ca", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail8032.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail8032.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail8032.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail8032.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail8032.d(19): Error: function `fail8032.B.f` cannot determine overridden function\n+---\n+*/\n mixin template T()\n {\n     void f() { }"}, {"sha": "2badeff454bc474a7c229f15c65e97406b174e83", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail8313.d", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail8313.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail8313.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail8313.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,13 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail8313.d(13): Error: `fail8313.bar` called with argument types `(int)` matches both:\n+fail_compilation/fail8313.d(11):     `fail8313.bar!().bar(int x)`\n+and:\n+fail_compilation/fail8313.d(12):     `fail8313.bar!().bar(int x)`\n+fail_compilation/fail8313.d(13):        while evaluating: `static assert(bar()(int x)(1))`\n+---\n+*/\n auto bar()(int x){return x;}\n auto bar()(int x = bar()){return x;}\n static assert(bar(1));"}, {"sha": "8e46023d3bdac7fe134e3b3e3adf2a5ac1d15be3", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail8691.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail8691.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail8691.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail8691.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail8691.d(7): Error: struct `fail8691.Foo` cannot have field `f` with static array of same struct type\n+---\n+*/\n struct Foo\n {\n     Foo[1] f;"}, {"sha": "eee727036959a60f5337c96cf51724d6e752fdb0", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail9301.d", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail9301.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail9301.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail9301.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,6 +1,9 @@\n /*\n-REQUIRED_ARGS: -o-\n-PERMUTE_ARGS:\n+REQUIRED_ARGS: -m64 -o-\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail9301.d(11): Error: cannot implicitly convert expression `0` of type `int` to `__vector(void[16])`\n+---\n */\n \n void main()"}, {"sha": "335b6952270232fc9503f2a8a095e2404f382966", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail94.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail94.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail94.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail94.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail94.d(28): Error: cannot implicitly override base class method `fail94.A.clone` with `fail94.B.clone`; add `override` attribute\n+---\n+*/\n interface I\n {\n     int foo();"}, {"sha": "7f9d007af45f81d0b76392bffd1fa86cdf9709b2", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail9613.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail9613.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail9613.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail9613.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,11 @@\n // PREMUTE_ARGS:\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fail9613.d(12): Error: `(arguments)` expected following `const(byte)`\n+fail_compilation/fail9613.d(12): Error: semicolon expected following auto declaration, not `.`\n+---\n+*/\n \n void main()\n {"}, {"sha": "aa7a4b66f5425e9c62ef1cb2c24882dce55d06f3", "filename": "gcc/testsuite/gdc.test/fail_compilation/failinout1.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffailinout1.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffailinout1.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffailinout1.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/failinout1.d(9): Error: cannot modify `inout` expression `x`\n+---\n+*/\n inout(int) foo(inout(int) x)\n {\n     x = 5;  // cannot modify inout"}, {"sha": "e1553636ab7cc2ce829ec031d65e19f250c4f152", "filename": "gcc/testsuite/gdc.test/fail_compilation/failinout2.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffailinout2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffailinout2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffailinout2.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1 +1,7 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/failinout2.d(7): Error: variable `failinout2.x` only parameters or stack based variables can be `inout`\n+---\n+*/\n inout int x;"}, {"sha": "77edb7e523d38e317e0de5147fa62fcbd5f205a1", "filename": "gcc/testsuite/gdc.test/fail_compilation/failinout3748a.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffailinout3748a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffailinout3748a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffailinout3748a.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/failinout3748a.d(9): Error: variable `failinout3748a.S3748.err8` only parameters or stack based variables can be `inout`\n+---\n+*/\n struct S3748\n {\n     inout(int) err8;"}, {"sha": "b6dddd879ca938f289a60071834a904bb272fe00", "filename": "gcc/testsuite/gdc.test/fail_compilation/failinout3748b.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffailinout3748b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffailinout3748b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffailinout3748b.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/failinout3748b.d(9): Error: variable `failinout3748b.main.err11` `inout` variables can only be declared inside `inout` functions\n+---\n+*/\n void main()\n {\n     inout(int)* err11;"}, {"sha": "e121bda1b96e6d7e7688da67c509b83fa554c25d", "filename": "gcc/testsuite/gdc.test/fail_compilation/failsafea.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffailsafea.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffailsafea.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffailsafea.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/failsafea.d(14): Error: `@safe` function `failsafea.callingsystem` cannot call `@system` function `failsafea.systemfunc`\n+fail_compilation/failsafea.d(9):        `failsafea.systemfunc` is declared here\n+---\n+*/\n \n void systemfunc() @system {}\n "}, {"sha": "6af6b6f98c6493fdd0e187bfec5ac866fec18577", "filename": "gcc/testsuite/gdc.test/fail_compilation/failsafeb.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffailsafeb.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffailsafeb.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffailsafeb.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/failsafeb.d(13): Error: `@safe` function `failsafeb.callingsystem` cannot call `@system` function pointer `sysfuncptr`\n+---\n+*/\n \n void function() @system sysfuncptr;\n "}, {"sha": "4446e76fde22d421eeea59a4c71912014800f8d4", "filename": "gcc/testsuite/gdc.test/fail_compilation/failsafec.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffailsafec.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffailsafec.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffailsafec.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/failsafec.d(13): Error: `@safe` function `failsafec.callingsystem` cannot call `@system` delegate `sysdelegate`\n+---\n+*/\n \n void delegate() @system sysdelegate;\n "}, {"sha": "2d60a009d7d2f37b9fc7c552b44e54157dc1d358", "filename": "gcc/testsuite/gdc.test/fail_compilation/fix350a.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffix350a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffix350a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffix350a.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fix350a.d(12): Error: comma expected separating field initializers\n+fail_compilation/fix350a.d(12): Error: comma expected separating field initializers\n+---\n+*/\n struct S1\n {\n     int a, b, c;"}, {"sha": "8ec428f885452f8e42a7f4dee619c7d155fd6543", "filename": "gcc/testsuite/gdc.test/fail_compilation/fix350b.d", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffix350b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffix350b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffix350b.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,11 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/fix350b.d(15): Error: comma expected separating field initializers\n+fail_compilation/fix350b.d(15): Error: comma expected separating field initializers\n+fail_compilation/fix350b.d(16): Error: comma expected separating field initializers\n+---\n+*/\n int foo() { return 3; }\n \n struct S2"}, {"sha": "763fc06a0bbbb212e71b898f0b7278cb014f9323", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice10273.d", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice10273.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice10273.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice10273.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,14 @@\n-// 10273 - ICE in CTFE\n+// https://issues.dlang.org/show_bug.cgi?id=10273\n+// ICE in CTFE\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/ice10273.d(14): Error: cannot implicitly convert expression `3.45` of type `double` to `int`\n+fail_compilation/ice10273.d(13): Error: CTFE failed because of previous errors in `Bug10273.init`\n+fail_compilation/ice10273.d(22):        called from here: `bug10273()`\n+fail_compilation/ice10273.d(22):        while evaluating: `static assert(bug10273())`\n+---\n+*/\n \n struct Bug10273 {\n     int val = 3.45;"}, {"sha": "f52b8a276453fc1c24e65d5a02c782896505bed2", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice10283.d", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice10283.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice10283.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice10283.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,10 @@\n-// 10283\n+// https://issues.dlang.org/show_bug.cgi?id=10283\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/ice10283.d(14): Error: cannot implicitly convert expression `7` of type `int` to `string`\n+---\n+*/\n \n S10283 blah(S10283 xxx) { return xxx; }\n S10283 repy = blah(S10283());"}, {"sha": "6e9649c486b347d9460a2eaf1117d6ce6b3898e9", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice10599.d", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice10599.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice10599.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice10599.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,13 @@\n-\ufeff// 10599 ICE(interpret.c) \n+\ufeff// https://issues.dlang.org/show_bug.cgi?id=10599\n+// ICE(interpret.c)\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/ice10599.d(13): Error: cannot implicitly convert expression `3.45` of type `double` to `int`\n+fail_compilation/ice10599.d(21):        called from here: `bug10599()`\n+fail_compilation/ice10599.d(21):        while evaluating: `static assert(bug10599())`\n+---\n+*/\n \n struct Bug {\n     int val = 3.45;\n@@ -9,4 +18,4 @@ int bug10599()\n     return 1;\n }\n \n-static assert(bug10599());\n\\ No newline at end of file\n+static assert(bug10599());"}, {"sha": "39eb120827a3819237051d0f96a805265d8d7165", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice11963.d", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice11963.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice11963.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice11963.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/ice11963.d(10): Error: unexpected `(` in declarator\n+fail_compilation/ice11963.d(10): Error: identifier expected for template type parameter\n+fail_compilation/ice11963.d(10): Error: no identifier for declarator `A`\n+fail_compilation/ice11963.d(10): Error: declaration expected, not `\"\"`\n+---\n+*/\n A(\"\")="}, {"sha": "c8db60fe9c9fab0d97abf8306d810dc3c5ef5284", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice11965.d", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice11965.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice11965.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice11965.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1 +1,14 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/ice11965.d(15): Error: no identifier for declarator `b*`\n+fail_compilation/ice11965.d(15): Error: found `End of File` when expecting `}` following compound statement\n+fail_compilation/ice11965.d(15): Error: found `End of File` when expecting `]`\n+fail_compilation/ice11965.d(15): Error: no identifier for declarator `u[()\n+{\n+b* A;\n+}\n+]`\n+---\n+*/\n u[{b*A,"}, {"sha": "a3bda63f8fba9dd174d0ac6f3ca4087cfe851689", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice11967.d", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice11967.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice11967.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice11967.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1 +1,12 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/ice11967.d(12): Error: use `@(attributes)` instead of `[attributes]`\n+fail_compilation/ice11967.d(12): Error: expression expected, not `%`\n+fail_compilation/ice11967.d(12): Error: found `g` when expecting `)`\n+fail_compilation/ice11967.d(12): Error: found `{` when expecting `]`\n+fail_compilation/ice11967.d(13): Error: `@identifier` or `@(ArgumentList)` expected, not `@End of File`\n+fail_compilation/ice11967.d(13): Error: declaration expected following attribute, not end of file\n+---\n+*/\n [F(%g{@"}, {"sha": "651f1623f1cf59d260919680ae4a0a8f9df1752a", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice11968.d", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice11968.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice11968.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice11968.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+----\n+fail_compilation/ice11968.d(9): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+fail_compilation/ice11968.d(9): Error: cannot modify string literal `\"fail_compilation$?:windows=\\\\|/$ice11968.d\"`\n+----\n+*/\n+\n void main() {  delete __FILE__  ; }"}, {"sha": "3bf5a7042494f6e9fb0ca310cadf96edf3204363", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice11974.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice11974.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice11974.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice11974.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1 +1,7 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/ice11974.d(7): Error: cannot modify constant `0`\n+---\n+*/\n void main() {  0 = __LINE__ ^^ [ 0 ] ; }"}, {"sha": "ff5fae491c60b08f78a4b931d89ffea8f5b30847", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice11982.d", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice11982.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice11982.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice11982.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1 +1,16 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/ice11982.d(16): Error: basic type expected, not `scope`\n+fail_compilation/ice11982.d(16): Error: found `scope` when expecting `;` following statement\n+fail_compilation/ice11982.d(16): Error: basic type expected, not `}`\n+fail_compilation/ice11982.d(16): Error: missing `{ ... }` for function literal\n+fail_compilation/ice11982.d(16): Error: C style cast illegal, use `cast(funk)function _error_()\n+{\n+}\n+`\n+fail_compilation/ice11982.d(16): Error: found `}` when expecting `;` following statement\n+fail_compilation/ice11982.d(17): Error: found `End of File` when expecting `}` following compound statement\n+---\n+*/\n void main() { new scope ( funk ) function }"}, {"sha": "fb49e8e648c1fffda6b3fade32f90b88c7f7dc57", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice12673.d", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice12673.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice12673.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice12673.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,13 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/ice12673.d(13): Error: static assert:  `__traits(compiles, () pure nothrow @nogc @safe\n+{\n+__error__\n+}\n+)` is false\n+---\n+*/\n void main()\n {\n     static assert(__traits(compiles, { abcd(); }));"}, {"sha": "aa44709124a31d3fbb86b42572e1a836617a95fd", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice13644.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice13644.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice13644.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice13644.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/ice13644.d(22): Error: foreach: key cannot be of non-integral type `string`\n+---\n+*/\n \n struct Tuple(T...)\n {"}, {"sha": "e800838c45c14becfbd2b28920fd8bd237a1c5fa", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice15855.d", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice15855.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice15855.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice15855.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,24 @@\n // REQUIRED_ARGS: -o-\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/ice15855.d(25): Error: found `End of File` when expecting `(`\n+fail_compilation/ice15855.d(25): Error: found `End of File` instead of statement\n+fail_compilation/ice15855.d(25): Error: expression expected, not `End of File`\n+fail_compilation/ice15855.d(25): Error: found `End of File` when expecting `;` following `for` condition\n+fail_compilation/ice15855.d(25): Error: expression expected, not `End of File`\n+fail_compilation/ice15855.d(25): Error: found `End of File` when expecting `)`\n+fail_compilation/ice15855.d(25): Error: found `End of File` instead of statement\n+fail_compilation/ice15855.d(25): Error: found `End of File` when expecting `}` following compound statement\n+fail_compilation/ice15855.d(25): Error: found `End of File` when expecting `]`\n+fail_compilation/ice15855.d(25): Error: no identifier for declarator `a[()\n+{\n+for (; 0; 0)\n+{\n+}\n+}\n+]`\n+---\n+*/\n \n a[{for"}, {"sha": "d42011a0dd06b4b3c11ab0862ced6af079f3e9d8", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice7782.d", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice7782.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice7782.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice7782.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,14 @@\n+/*\n+EXTRA_FILES: imports/ice7782algorithm.d imports/ice7782range.d\n+TEST_OUTPUT:\n+----\n+fail_compilation/ice7782.d(13): Error: module `ice7782math` is in file 'imports/ice7782range/imports/ice7782math.d' which cannot be read\n+import path[0] = fail_compilation\n+import path[1] = $p:druntime/import$\n+import path[2] = $p:phobos$\n+----\n+*/\n+\n import imports.ice7782algorithm;\n import imports.ice7782range. imports.ice7782math;\n "}, {"sha": "3c179982fd9501b2b58d67dcce45a362b8ac0ffc", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice8604.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice8604.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice8604.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice8604.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/ice8604.d(9): Error: undefined identifier `i`\n+---\n+*/\n struct StructFoo\n {\n     static if(i) { }"}, {"sha": "a96ef34b6c0f357c54c6b4d8dc27f9a2f81fa530", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice8630.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice8630.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice8630.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice8630.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/ice8630.d(9): Error: undefined identifier `v`\n+fail_compilation/ice8630.d(10): Error: template instance `ice8630.foo!(int[])` error instantiating\n+---\n+*/\n auto map(alias func, R)(R r) { return r; }\n typeof(v) foo(R)(R v) { return map!(p=>p)(v); }\n void main() { foo([1]); }"}, {"sha": "d8140710cf34afad8a48bfd60555a255598abcb3", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice8742.d", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice8742.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice8742.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice8742.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,9 @@\n-// PERMUTE_ARGS:\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/ice8742.d(15): Error: class `ice8742.main.__anonclass1` is nested within `main`, but super class `D` is nested within `C`\n+---\n+*/\n class C\n {\n     class D { }"}, {"sha": "47a451b550489a581b743146be42637f6d7ad4b9", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice9013.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice9013.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice9013.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice9013.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/ice9013.d(9): Error: undefined identifier `missing`\n+---\n+*/\n void main()\n {\n     foreach (i; 0 .. missing)"}, {"sha": "6b8f2f3c4155e844e53e49ac5b7f3dd25e96f7dd", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice9254a.d", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice9254a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice9254a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice9254a.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,14 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/ice9254a.d(15): Error: Using the result of a comma expression is not allowed\n+fail_compilation/ice9254a.d(15): Error: Using the result of a comma expression is not allowed\n+fail_compilation/ice9254a.d(15): Error: Using the result of a comma expression is not allowed\n+fail_compilation/ice9254a.d(15): Error: Using the result of a comma expression is not allowed\n+fail_compilation/ice9254a.d(15): Error: Using the result of a comma expression is not allowed\n+fail_compilation/ice9254a.d(15): Error: invalid `foreach` aggregate `false`\n+---\n+*/\n \n void main()\n {"}, {"sha": "a430fbfdeb416691443cf121427b2397049d9b09", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice9254b.d", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice9254b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice9254b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice9254b.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,14 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/ice9254b.d(17): Error: Using the result of a comma expression is not allowed\n+fail_compilation/ice9254b.d(17): Error: Using the result of a comma expression is not allowed\n+fail_compilation/ice9254b.d(17): Error: Using the result of a comma expression is not allowed\n+fail_compilation/ice9254b.d(17): Error: Using the result of a comma expression is not allowed\n+fail_compilation/ice9254b.d(17): Error: Using the result of a comma expression is not allowed\n+fail_compilation/ice9254b.d(17): Error: invalid `foreach` aggregate `false`\n+---\n+*/\n \n class C\n {"}, {"sha": "b58cfe5751a72a13331c9fbb1c1895468efe36fb", "filename": "gcc/testsuite/gdc.test/fail_compilation/ice9254c.d", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice9254c.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice9254c.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fice9254c.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,14 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/ice9254c.d(15): Error: Using the result of a comma expression is not allowed\n+fail_compilation/ice9254c.d(15): Error: Using the result of a comma expression is not allowed\n+fail_compilation/ice9254c.d(15): Error: Using the result of a comma expression is not allowed\n+fail_compilation/ice9254c.d(15): Error: Using the result of a comma expression is not allowed\n+fail_compilation/ice9254c.d(15): Error: Using the result of a comma expression is not allowed\n+fail_compilation/ice9254c.d(15): Error: invalid `foreach` aggregate `false`\n+---\n+*/\n \n void main()\n {"}, {"sha": "2b3abeb45dfa0bd887732eb5b829bdf2646bc78d", "filename": "gcc/testsuite/gdc.test/fail_compilation/imphint.d", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimphint.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimphint.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fimphint.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,5 @@\n-/* PERMUTE_ARGS:\n+/*\n+TEST_OUTPUT:\n ---\n fail_compilation/imphint.d(14): Error: 'printf' is not defined, perhaps you need to import core.stdc.stdio; ?\n fail_compilation/imphint.d(15): Error: 'writeln' is not defined, perhaps you need to import std.stdio; ?"}, {"sha": "6a5a16d1e68a34bd46d7f277c9bd432ecfee24cf", "filename": "gcc/testsuite/gdc.test/fail_compilation/staticarrayoverflow.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fstaticarrayoverflow.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fstaticarrayoverflow.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Fstaticarrayoverflow.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,6 +1,6 @@\n /*\n REQUIRED_ARGS: -m64\n-PERMUTE_ARGS:\n+TEST_OUTPUT:\n ---\n fail_compilation/staticarrayoverflow.d(24): Error: static array `S[1879048192]` size overflowed to 7516192768000\n fail_compilation/staticarrayoverflow.d(24): Error: variable `staticarrayoverflow.y` size overflow"}, {"sha": "aeceb52cadc9b16453112c79b799ce0090ba5454", "filename": "gcc/testsuite/gdc.test/fail_compilation/test1.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest1.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest1.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest1.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1 +1,7 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/test1.d(8): Error: no identifier for declarator `fail`\n+---\n+*/\n fail"}, {"sha": "020d807d8b8773360a4ff106ead44e9ef40af2e3", "filename": "gcc/testsuite/gdc.test/fail_compilation/test11176.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest11176.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest11176.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest11176.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,6 @@\n /*\n REQUIRED_ARGS: -de\n+TEST_OUTPUT:\n ---\n fail_compilation/test11176.d(12): Deprecation: b.ptr cannot be used in @safe code, use &b[0] instead\n fail_compilation/test11176.d(16): Deprecation: b.ptr cannot be used in @safe code, use &b[0] instead"}, {"sha": "1a1ed70698bf3a0dd6fea1d4168c0e2e910ca9e5", "filename": "gcc/testsuite/gdc.test/fail_compilation/test143.d", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest143.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest143.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest143.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,13 @@\n // REQUIRED_ARGS: -de\n-module test143; // Bugzilla 143\n+// https://issues.dlang.org/show_bug.cgi?id=143\n+// EXTRA_FILES: imports/test143.d\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/test143.d(20): Error: undefined identifier `x`\n+---\n+*/\n+module test143;\n \n import imports.test143;\n "}, {"sha": "bad3ed295546fe0de0497a2fc095a8fb876c775a", "filename": "gcc/testsuite/gdc.test/fail_compilation/test15399.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest15399.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest15399.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest15399.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,5 @@\n /* https://issues.dlang.org/show_bug.cgi?id=15399\n+TEST_OUTPUT:\n ---\n fail_compilation/test15399.d(31): Error: writing to misaligned pointer in field S1.ptr is not @safe\n fail_compilation/test15399.d(32): Error: writing to misaligned pointer in field S2.ptr is not @safe"}, {"sha": "38219e987e27df0b0de9377c8f699005270cced1", "filename": "gcc/testsuite/gdc.test/fail_compilation/test16188.d", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest16188.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest16188.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest16188.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,9 @@\n-/* PERMUTE_ARGS:\n+TEST_OUTPUT:\n+---\n+fail_compilation/test16188.d(1): Error: no identifier for declarator `TEST_OUTPUT`\n+fail_compilation/test16188.d(1): Error: declaration expected, not `:`\n+fail_compilation/test16188.d(18): Error: unrecognized declaration\n+---\n  */\n \n // https://issues.dlang.org/show_bug.cgi?id=16188"}, {"sha": "35778343cc906bd7f05622c4cdb8336b69b4290c", "filename": "gcc/testsuite/gdc.test/fail_compilation/test5412a.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest5412a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest5412a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest5412a.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+EXTRA_FILES: imports/test5412a.d imports/test5412b.d\n+TEST_OUTPUT:\n+---\n+fail_compilation/test5412a.d(11): Error: import `test5412a.A` conflicts with import `test5412a.A` at fail_compilation/test5412a.d(10)\n+---\n+*/\n module test5412a;\n \n import A = imports.test5412a;"}, {"sha": "8f06b52658cf356f820257e23bba32dce2f3b5dc", "filename": "gcc/testsuite/gdc.test/fail_compilation/test5412b.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest5412b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest5412b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest5412b.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+EXTRA_FILES: imports/test5412a.d imports/test5412b.d\n+TEST_OUTPUT:\n+---\n+fail_compilation/test5412b.d(11): Error: static import `test5412b.A` conflicts with import `test5412b.A` at fail_compilation/test5412b.d(10)\n+---\n+*/\n module test5412b;\n \n import A = imports.test5412a;"}, {"sha": "b3073ee63a17d03f968ed172e4fbb4859bae8a03", "filename": "gcc/testsuite/gdc.test/fail_compilation/test5412c.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest5412c.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest5412c.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest5412c.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+EXTRA_FILES: test5412c2.di imports/test5412a.d\n+TEST_OUTPUT:\n+---\n+fail_compilation/test5412c.d(11): Error: import `test5412c.test5412c2` conflicts with import `test5412c.test5412c2` at fail_compilation/test5412c.d(10)\n+---\n+*/\n module test5412c;\n \n import test5412c2 = imports.test5412a;"}, {"sha": "0023c5fda4923e997e51061aad1d045388a3d3c4", "filename": "gcc/testsuite/gdc.test/fail_compilation/test5412c2.di", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest5412c2.di", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest5412c2.di", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest5412c2.di?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -0,0 +1 @@\n+module test5412c2;"}, {"sha": "b39c00f964f71dde12bced46b76423fbf8267109", "filename": "gcc/testsuite/gdc.test/fail_compilation/test8509.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest8509.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest8509.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest8509.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,10 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/test8509.d(13): Error: cannot implicitly convert expression `\"hello world\"` of type `string` to `E`\n+fail_compilation/test8509.d(14): Error: cannot implicitly convert expression `\"hello world\"` of type `string` to `E`\n+---\n+*/\n module test8509;\n enum E : string { a = \"hello\", b = \"world\" }\n "}, {"sha": "d7057b89fc47b56fc5fe9fabe664fe7733946bf8", "filename": "gcc/testsuite/gdc.test/fail_compilation/test8751.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest8751.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest8751.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ftest8751.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,9 @@\n+/*\n+TEST_OUTPUT:\n+---\n+fail_compilation/test8751.d(7): Error: undefined identifier `Bar`\n+---\n+*/\n Bar foo3(ref const int x) pure {\n     return y => x > y; // error\n }"}, {"sha": "ee8e6a13ce0c5efede1e6d7181108371d15e51dd", "filename": "gcc/testsuite/gdc.test/runnable/aliasthis.d", "status": "modified", "additions": 29, "deletions": 3, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Faliasthis.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Faliasthis.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Faliasthis.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,29 @@\n+/*\n+TEST_OUTPUT:\n+---\n+false\n+[] = int\n+[] = string\n+[0] = int\n+[1] = string\n+[] = string\n+[] = int\n+[1] = string\n+[0] = int\n+---\n+\n+RUN_OUTPUT:\n+---\n+1 1.1\n+ctor\n+cpctor\n+dtor\n+cpctor\n+dtor\n+dtor\n+Success\n+---\n+*/\n \n extern (C) int printf(const(char*) fmt, ...);\n import core.vararg;\n@@ -551,15 +577,15 @@ void test2781()\n     }\n \n     eval = 0;\n-    foreach (i, e; tup(tup((eval++, 10), 3.14), tup(\"str\", [1,2])))\n+    foreach (i, e; tup(tup((){eval++; return 10;}(), 3.14), tup(\"str\", [1,2])))\n     {\n         static if (i == 0) assert(e == tup(10, 3.14));\n         static if (i == 1) assert(e == tup(\"str\", [1,2]));\n     }\n     assert(eval == 1);\n \n     eval = 0;\n-    foreach (i, e; tup((eval++,10), tup(3.14, tup(\"str\", tup([1,2])))))\n+    foreach (i, e; tup((){eval++; return 10;}(), tup(3.14, tup(\"str\", tup([1,2])))))\n     {\n         static if (i == 0) assert(e == 10);\n         static if (i == 1) assert(e == tup(3.14, tup(\"str\", tup([1,2]))));\n@@ -836,7 +862,7 @@ void test6369c()\n void test6369d()\n {\n     int eval = 0;\n-    Seq!(int, string) t = tup((++eval, 10), \"str\");\n+    Seq!(int, string) t = tup((){++eval; return 10;}(), \"str\");\n     assert(eval == 1);\n     assert(t[0] == 10);\n     assert(t[1] == \"str\");"}, {"sha": "1d259f610cf6a24208f237df906b0040e0be8df3", "filename": "gcc/testsuite/gdc.test/runnable/constfold.d", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fconstfold.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fconstfold.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fconstfold.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -302,7 +302,6 @@ static assert(is(typeof( (){ C4 g = 7; C4 h = g;})));\n alias uint DWORD;\n MY_API_FUNCTION lpStartAddress;\n extern (Windows) alias DWORD function(void*) MY_API_FUNCTION;\n-pragma(msg, MY_API_FUNCTION.stringof);\n static assert(MY_API_FUNCTION.stringof == \"extern (Windows) uint function(void*)\");\n \n /************************************/\n@@ -565,7 +564,8 @@ void test13977()\n     Object.init && check();\n     assert(x == 0);\n \n-    (check(2), false) && check();\n+    check(2);\n+    false && check();\n     assert(x == 2); x = 0;\n }\n \n@@ -594,7 +594,8 @@ void test13978()\n     Object.init || check();\n     assert(x == 1); x = 0;\n \n-    (check(2), true) || check();\n+    check(2);\n+    true || check();\n     assert(x == 2); x = 0;\n }\n "}, {"sha": "89f846a96e5f6a0f0eb3dc8c0a616a1a590a28b7", "filename": "gcc/testsuite/gdc.test/runnable/ctorpowtests.d", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fctorpowtests.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fctorpowtests.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fctorpowtests.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -141,7 +141,8 @@ static assert(bazra(14)==64);\n \n void moreCommaTests()\n {\n-   auto k = (containsAsm(), containsAsm());\n+   (containsAsm(), containsAsm());\n+   auto k = containsAsm();\n    for (int i=0; i< k^^2; i+=StructWithCtor(1).n) {}\n }\n "}, {"sha": "0dbd2876d4edd5c9f34513eb62d23677dd1d6525", "filename": "gcc/testsuite/gdc.test/runnable/declaration.d", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fdeclaration.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fdeclaration.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fdeclaration.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,16 @@\n+/*\n+TEST_OUTPUT:\n+---\n+S7019(16), 16\n+S7019(24), 24\n+S7019(32), 32\n+---\n+\n+RUN_OUTPUT:\n+---\n+Success\n+---\n+*/\n \n extern(C) int printf(const char*, ...);\n "}, {"sha": "003a34a8e6d42444b61eeb462ec3ed5ac74691d3", "filename": "gcc/testsuite/gdc.test/runnable/foreach5.d", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fforeach5.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fforeach5.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fforeach5.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,16 @@\n+/*\n+TEST_OUTPUT:\n+---\n+int\n+double\n+foobar7406(T)\n+test7406()\n+int\n+foobar7406(T)\n+int\n+test7406()\n+---\n+*/\n \n extern(C) int printf(const char* fmt, ...);\n "}, {"sha": "d45e3e6ddfd611a796aade97f521334283b4c43d", "filename": "gcc/testsuite/gdc.test/runnable/funclit.d", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ffunclit.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ffunclit.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ffunclit.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,19 @@\n+/*\n+TEST_OUTPUT:\n+---\n+int delegate() pure nothrow @nogc @safe delegate() pure nothrow @nogc @safe delegate() pure nothrow @safe\n+int delegate() pure nothrow @nogc @safe delegate() pure nothrow @nogc @safe delegate() pure nothrow @safe\n+int\n+int\n+int[]\n+int delegate() pure nothrow @nogc @safe function() pure nothrow @safe\n+---\n+\n+RUN_OUTPUT:\n+---\n+Success\n+---\n+*/\n import core.vararg;\n \n extern (C) int printf(const char*, ...);"}, {"sha": "1a91d305357e8439a7994bd49dd93b189a92fd93", "filename": "gcc/testsuite/gdc.test/runnable/future.d", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ffuture.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ffuture.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ffuture.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,8 @@\n /* PERMUTE_ARGS:\n+TEST_OUTPUT:\n+---\n+runnable/future.d(15): Deprecation: `@__future` base class method `future.A.msg` is being overridden by `future.B.msg`; rename the latter\n+---\n  */\n \n class A"}, {"sha": "baa9d5525929ecff4790a3617d7e4c745e0730a3", "filename": "gcc/testsuite/gdc.test/runnable/imports/link15194std.d", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fimports%2Flink15194std.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fimports%2Flink15194std.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fimports%2Flink15194std.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -30,7 +30,6 @@ else\n \n     struct SetUnion(Rs...)\n     {\n-        pragma(msg, Rs);\n         Rs r;\n \n         // Rs[0] == RBRange!(RBNode!int*)"}, {"sha": "fe44744fcfcfbbd914f8263e56781c7e44e2142f", "filename": "gcc/testsuite/gdc.test/runnable/interpret.d", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Finterpret.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Finterpret.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Finterpret.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,22 @@\n-// RUNNABLE_PHOBOS_TEST\n+/* RUNNABLE_PHOBOS_TEST\n+TEST_OUTPUT:\n+---\n+true\n+g\n+&Test109S(&Test109S(<recursion>))\n+runnable/interpret.d(3197): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+runnable/interpret.d(3199): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+runnable/interpret.d(3202): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+runnable/interpret.d(3205): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+runnable/interpret.d(3206): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+runnable/interpret.d(3212): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+runnable/interpret.d(3213): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+runnable/interpret.d(3216): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+tfoo\n+tfoo\n+Crash!\n+---\n+*/\n import std.stdio;\n \n template Tuple(A...)"}, {"sha": "c1846190aed4a11f115f7ab3c29795fd70a96251", "filename": "gcc/testsuite/gdc.test/runnable/lazy.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Flazy.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Flazy.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Flazy.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -75,7 +75,7 @@ void test1()\n     );\n \n     whiler( x < 100,\n-        (printf(\"%d\\n\", x), x *= 2)\n+        (){ printf(\"%d\\n\", x); x *= 2; }()\n     );\n }\n "}, {"sha": "7c3e3de3a716a0ad8495f12c9d3a07cb179fe8ab", "filename": "gcc/testsuite/gdc.test/runnable/link10920.d", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Flink10920.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Flink10920.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Flink10920.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,5 @@\n // PERMUTE_ARGS: -version=A\n+// EXTRA_FILES: imports/link10920a.d\n \n // It's imported but won't be linked.\n import imports.link10920a;\n@@ -10,7 +11,7 @@ void main()\n     {\n         // Run semantic3 of BitArray.toString()\n         // before the FormatSpec instantiation in main().\n-        pragma(msg, typeof(ba.toString()));\n+        static assert(is(typeof(ba.toString())));\n     }\n \n     // The instance codegen should be run always, unrelated with -version=A."}, {"sha": "2e82610148db5edcbe70c169eb29b9a8b23e7830", "filename": "gcc/testsuite/gdc.test/runnable/link15021.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Flink15021.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Flink15021.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Flink15021.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,11 @@\n // PERMUTE_ARGS: -inline -g -debug -unittest\n+// EXTRA_FILES: imports/std15021conv.d\n+/*\n+TEST_OUTPUT:\n+---\n+hit!\n+---\n+*/\n \n import imports.std15021conv;\n "}, {"sha": "53e95f21ca99f9e8311386746b7bfe945367ce21", "filename": "gcc/testsuite/gdc.test/runnable/link6574.d", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Flink6574.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Flink6574.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Flink6574.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,14 @@\n // PERMUTE_ARGS:\n+// EXTRA_FILES: imports/testmangle.d\n+/*\n+TEST_OUTPUT:\n+---\n+_D7imports10testmangle12detectMangleFPSQBlQBg6DetectZQq\n+_D7imports10testmangle__T10DetectTmplTiZQpFNaNbNiNfZv\n+true\n+false\n+---\n+*/\n module link6574;\n \n import imports.testmangle;"}, {"sha": "e6d36453d885ef26ff391f081265d2361f273da8", "filename": "gcc/testsuite/gdc.test/runnable/mangle.d", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmangle.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmangle.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmangle.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,15 @@\n // PERMUTE_ARGS:\n // EXTRA_SOURCES: imports/mangle10077.d\n+// EXTRA_FILES: imports/testmangle.d\n+/*\n+TEST_OUTPUT:\n+---\n+_D7imports10testmangle12detectMangleFPSQBlQBg6DetectZQq\n+_D7imports10testmangle__T10DetectTmplTiZQpFNaNbNiNfZv\n+true\n+false\n+---\n+*/\n \n import imports.testmangle;\n "}, {"sha": "26a235210c927158996867ece81881c31c08fa66", "filename": "gcc/testsuite/gdc.test/runnable/mixin2.d", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmixin2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmixin2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fmixin2.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,36 @@\n-// RUNNABLE_PHOBOS_TEST\n+/* RUNNABLE_PHOBOS_TEST\n+TEST_OUTPUT:\n+---\n+hello\n+hello\n+\n+\n+\n+hello\n+hello\n+---\n+\n+RUN_OUTPUT:\n+---\n+31\n+42\n+53\n+64\n+75\n+86\n+97\n+108\n+119\n+1210\n+5\n+test4\n+Constructor\n+  Inside Scope\n+Destructor\n+hey\n+Success\n+---\n+*/\n import std.stdio;\n \n /*********************************************/"}, {"sha": "6b2fcb06ab2d6e4ba2c4806cff35a9c4445765b7", "filename": "gcc/testsuite/gdc.test/runnable/nested.d", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fnested.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fnested.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fnested.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,10 @@\n // REQUIRED_ARGS:\n+/*\n+TEST_OUTPUT:\n+---\n+null\n+---\n+*/\n \n import core.stdc.stdio;\n "}, {"sha": "7a1f1c333b4b5600ef01f7846ffeb2c0e0376ff9", "filename": "gcc/testsuite/gdc.test/runnable/nulltype.d", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fnulltype.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fnulltype.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fnulltype.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,16 @@\n+/*\n+TEST_OUTPUT:\n+---\n+pure nothrow @safe Object(bool b)\n+pure nothrow @safe int*(bool b)\n+pure nothrow @safe int[](bool b)\n+---\n+\n+RUN_OUTPUT:\n+---\n+Success\n+---\n+*/\n extern (C) int printf(const(char*) fmt, ...);\n \n alias typeof(null) null_t;"}, {"sha": "1c5cf30aff09e35dbff0eb16a6e2893f010a3472", "filename": "gcc/testsuite/gdc.test/runnable/property2.d", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fproperty2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fproperty2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fproperty2.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,24 @@\n // PERMUTE_ARGS: -property\n+/*\n+TEST_OUTPUT:\n+---\n+decl: test\n+stmt: test\n+---\n+\n+RUN_OUTPUT:\n+---\n+0: getter\n+1: setter\n+2: getter\n+3: setter\n+4: setter\n+5: compile error\n+6: compile error\n+7: setter\n+Success\n+---\n+*/\n \n extern (C) int printf(const char* fmt, ...);\n "}, {"sha": "3edf8cf85aa228d057a1783d29332a63bf2b3901", "filename": "gcc/testsuite/gdc.test/runnable/sdtor.d", "status": "modified", "additions": 32, "deletions": 11, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fsdtor.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fsdtor.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fsdtor.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,18 @@\n // PERMUTE_ARGS: -unittest -O -release -inline -fPIC -g\n+/*\n+TEST_OUTPUT:\n+---\n+runnable/sdtor.d(36): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+runnable/sdtor.d(59): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+runnable/sdtor.d(93): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+runnable/sdtor.d(117): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+runnable/sdtor.d(143): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+runnable/sdtor.d(177): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+runnable/sdtor.d(203): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+runnable/sdtor.d(276): Deprecation: The `delete` keyword has been deprecated.  Use `object.destroy()` (and `core.memory.GC.free()` if applicable) instead.\n+S7353\n+---\n+*/\n \n import core.vararg;\n \n@@ -879,8 +893,10 @@ void test34()\n     X34[2] xs;\n //  xs[0][0] = X34();\n     printf(\"foreach\\n\");\n-    for (int j = 0; j < xs.length; j++) { auto x = (j++,j--,xs[j]);\n-        //foreach(x; xs) {\n+    for (int j = 0; j < xs.length; j++) {\n+        j++,j--;\n+        auto x = xs[j];\n+        //foreach(x; xs)\n         //printf(\"foreach x.i = %d\\n\", x[0].i);\n         //assert(x[0].i == 1);\n         printf(\"foreach x.i = %d\\n\", x.i);\n@@ -1395,22 +1411,22 @@ void test54()\n     assert(S54.t == \"c\");\n \n     {   S54.t = null;\n-        int b = 1 && (bar54(S54(1)), 1);\n+        int b = 1 && (){ bar54(S54(1)); return 1;}();\n     }\n     assert(S54.t == \"ac\");\n \n     {   S54.t = null;\n-        int b = 0 && (bar54(S54(1)), 1);\n+        int b = 0 && (){ bar54(S54(1)); return 1;}();\n     }\n     assert(S54.t == \"\");\n \n     {   S54.t = null;\n-        int b = 0 || (bar54(S54(1)), 1);\n+        int b = 0 || (){ bar54(S54(1)); return 1;}();\n     }\n     assert(S54.t == \"ac\");\n \n     {   S54.t = null;\n-        int b = 1 || (bar54(S54(1)), 1);\n+        int b = 1 || (){ bar54(S54(1)); return 1;}();\n     }\n     assert(S54.t == \"\");\n \n@@ -1529,7 +1545,8 @@ void test57()\n \n     printf(\"----\\n\");    //+\n     dtor_cnt = 0;\n-    if (auto s = (S57(1), S57(2), S57(10)))\n+    S57(1), S57(2);\n+    if (auto s = S57(10))\n     {\n         assert(dtor_cnt == 2);\n         printf(\"ifbody\\n\");\n@@ -1562,7 +1579,8 @@ void test57()\n \n     printf(\"----\\n\");    //+\n     dtor_cnt = 0;\n-    if (auto s = (f(1), f(2), f(10)))\n+    f(1), f(2);\n+    if (auto s = f(10))\n     {\n         assert(dtor_cnt == 2);\n         printf(\"ifbody\\n\");\n@@ -1596,7 +1614,8 @@ void test57()\n \n     printf(\"----\\n\");\n     dtor_cnt = 0;\n-    if ((S57(1), S57(2), S57(10)))\n+    S57(1), S57(2);\n+    if (S57(10))\n     {\n         assert(dtor_cnt == 3);\n         printf(\"ifbody\\n\");\n@@ -1628,7 +1647,8 @@ void test57()\n \n     printf(\"----\\n\");\n     dtor_cnt = 0;\n-    if ((f(1), f(2), f(10)))\n+    f(1), f(2);\n+    if (f(10))\n     {\n         assert(dtor_cnt == 3);\n         printf(\"ifbody\\n\");\n@@ -4432,7 +4452,8 @@ struct S64\n \n S64 foo64()\n {\n-    return S64((X64(), 1));\n+    X64();\n+    return S64(1);\n }\n \n void test64()"}, {"sha": "a8c6c91008c97b038507474321e5e29b591acdb8", "filename": "gcc/testsuite/gdc.test/runnable/stress.d", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fstress.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fstress.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fstress.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -89,8 +89,8 @@ void MDCHAR()\n     if(str[ITERS-1][0].sizeof != (typ).sizeof) printf(\"Size Error: %d\\n\",str[ITERS-1][0].sizeof);\n \n     foreach(s; str) {\n-        int lstart;\n-        foreach(int idx, char c; s) {\n+        size_t lstart;\n+        foreach(size_t idx, char c; s) {\n             if(c == '\\n') {\n                 typ[] t = s[lstart..idx];\n                 if(t != \"TEST LINE\") {\n@@ -108,8 +108,8 @@ void MDCHAR()\n     }\n \n     foreach(s; splitLines(cast(string)tmp)) {\n-        int lstart;\n-        foreach(int idx, char c; s) {\n+        size_t lstart;\n+        foreach(size_t idx, char c; s) {\n             if(c == '\\n') {\n                 if(s[lstart..idx] != \"TEST LINE\") {\n                     printf(\"Error testing character array\\n\");\n@@ -134,8 +134,8 @@ void CHAR()\n     if(str.length != (ITERS * 10)) printf(\"Length Error: %d\\n\",str.length);\n     if(str.sizeof != (typ[]).sizeof) printf(\"Size Error: %d\\n\",str.sizeof);\n \n-    int lstart;\n-    foreach(int idx, char c; str) {\n+    size_t lstart;\n+    foreach(size_t idx, char c; str) {\n         if(c == '\\n') {\n             if(str[lstart..idx] != \"TEST LINE\") {\n                 printf(\"Error testing character array\\n\");\n@@ -159,8 +159,8 @@ void WCHAR()\n     if(str.length != (ITERS * 10)) printf(\"Length Error: %d\\n\",str.length);\n     if(str.sizeof != (typ[]).sizeof) printf(\"Size Error: %d\\n\",str.sizeof);\n \n-    int lstart;\n-    foreach(int idx, char c; str) {\n+    size_t lstart;\n+    foreach(size_t idx, char c; str) {\n         if(c == '\\n') {\n             if(str[lstart..idx] != toUTF16(cast(char[])\"TEST LINE\")) {\n                 printf(\"Error testing character array\\n\");\n@@ -184,8 +184,8 @@ void DCHAR()\n     if(str.length != (ITERS * 10)) printf(\"Length Error: %d\\n\",str.length);\n     if(str.sizeof != (typ[]).sizeof) printf(\"Size Error: %d\\n\",str.sizeof);\n \n-    int lstart;\n-    foreach(int idx, char c; str) {\n+    size_t lstart;\n+    foreach(size_t idx, char c; str) {\n         if(c == '\\n') {\n             if(str[lstart..idx] != toUTF32(cast(char[])\"TEST LINE\")) {\n                 printf(\"Error testing character array\\n\");"}, {"sha": "38af612e3511988a9186dc637ad4c85d46f2f558", "filename": "gcc/testsuite/gdc.test/runnable/structlit.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fstructlit.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fstructlit.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fstructlit.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1295,7 +1295,7 @@ struct Z11256c(Ranges...)\n \n struct F11256(alias pred)\n {\n-    this(int[] = null) { }\n+    this(int[]) { }\n }\n \n Z!Ranges z11256(alias Z, Ranges...)(Ranges ranges)\n@@ -1305,9 +1305,9 @@ Z!Ranges z11256(alias Z, Ranges...)(Ranges ranges)\n \n void test11256()\n {\n-    z11256!Z11256a(S11256.init, F11256!(gv => true)());\n-    z11256!Z11256b(S11256.init, F11256!(gv => true)());\n-    z11256!Z11256c(S11256.init, F11256!(gv => true)());\n+    z11256!Z11256a(S11256.init, F11256!(gv => true)(null));\n+    z11256!Z11256b(S11256.init, F11256!(gv => true)(null));\n+    z11256!Z11256c(S11256.init, F11256!(gv => true)(null));\n }\n \n /********************************************/"}, {"sha": "e3313672d08db334d76d6d15412a500c6ba1f2bf", "filename": "gcc/testsuite/gdc.test/runnable/template3.d", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate3.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate3.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate3.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,18 @@\n+/*\n+TEST_OUTPUT:\n+---\n+instantiating...\n+instantiating...\n+last instantiation!!!\n+---\n+\n+RUN_OUTPUT:\n+---\n+1\n+3\n+Success\n+---\n+*/\n \n import core.stdc.stdio;\n "}, {"sha": "0381d890cebf9831afc0600f91a630fc44934160", "filename": "gcc/testsuite/gdc.test/runnable/template4.d", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate4.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate4.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate4.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,15 @@\n-// RUNNABLE_PHOBOS_TEST\n+/* RUNNABLE_PHOBOS_TEST\n+TEST_OUTPUT:\n+---\n+This actually gets evaluated!\n+()\n+(bool)\n+(bool, short)\n+(bool, short, int)\n+Alias Test instantiated\n+Alias Test instantiated\n+---\n+*/\n import std.stdio;\n import core.stdc.stdio;\n "}, {"sha": "3f706872db831dc6d2c72e99f5f6672ca68fb0f0", "filename": "gcc/testsuite/gdc.test/runnable/template8.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate8.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate8.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate8.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -36,17 +36,17 @@ private string CreateAccessors(\n             static assert(len == 1);\n             // getter\n             result ~= \"bool \" ~ name ~ \"(){ return \"\n-                \"(\"~store~\" & \"~toStringSfx(maskAllElse)~\") != 0;}\";\n+                ~ \"(\"~store~\" & \"~toStringSfx(maskAllElse)~\") != 0;}\";\n             // setter\n             result ~= \"void \" ~ name ~ \"(bool v){\"\n-                \"if (v) \"~store~\" |= \"~toStringSfx(maskAllElse)~\";\"\n-                \"else \"~store~\" &= \"~toStringSfx(maskMyself)~\";}\";\n+                ~ \"if (v) \"~store~\" |= \"~toStringSfx(maskAllElse)~\";\"\n+                ~ \"else \"~store~\" &= \"~toStringSfx(maskMyself)~\";}\";\n         }\n         else\n         {\n             // getter\n             result ~= T.stringof ~ \" \" ~ name ~ \"(){ auto result = \"\n-                \"(\"~store~\" & \"\n+                ~ \"(\"~store~\" & \"\n                 ~ toStringSfx(maskAllElse) ~ \") >>\"\n                 ~ toStringSfx(offset) ~ \";\";\n             static if (T.min < 0)"}, {"sha": "486eb67ab09f18acf7857adcd9f71dd19f62138a", "filename": "gcc/testsuite/gdc.test/runnable/template9.d", "status": "modified", "additions": 50, "deletions": 2, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate9.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate9.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftemplate9.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,53 @@\n-// RUNNABLE_PHOBOS_TEST\n-// PERMUTE_ARGS:\n+/* RUNNABLE_PHOBOS_TEST\n+PERMUTE_ARGS:\n+EXTRA_FILES: imports/testmangle.d\n+TEST_OUTPUT:\n+---\n+func\n+double\n+All good 1\n+All good 2\n+All good 3\n+_D7imports10testmangle12detectMangleFPSQBlQBg6DetectZQq\n+_D7imports10testmangle__T10DetectTmplTiZQpFNaNbNiNfZv\n+true\n+false\n+uint\n+int[]\n+int[]\n+const(K5886)\n+4 ; const(K5886)\n+8 ; const(K5886)\n+K5886\n+immutable(K5886)\n+4 ; K5886\n+4 ; immutable(K5886)\n+1 ; K5886\n+2 ; const(K5886)\n+3 ; immutable(K5886)\n+8 ; K5886\n+9 ; const(K5886)\n+10 ; immutable(K5886)\n+> U = int, N:$?:64=ulong = 3LU|32=uint = 3u$\n+K=string, V=int\n+K=char, V=string\n+T = SA, E = int, dim = $?:64=5LU|32=5u$\n+T = DA, E = int\n+T = AA, K = string, V = int\n+pure nothrow @nogc @safe void(int t)\n+pure nothrow @nogc @safe void(int t)\n+T = byte\n+T = char\n+---\n+\n+RUN_OUTPUT:\n+---\n+typeof(T)=double typeof(S)=int\n+typeof(T)=double typeof(S)=int\n+typeof(T)=float typeof(S)=int\n+Success\n+---\n+*/\n \n module breaker;\n "}, {"sha": "405171e44ae4819bc95b0d6714de9265f9300df3", "filename": "gcc/testsuite/gdc.test/runnable/test15.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest15.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest15.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest15.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -901,12 +901,12 @@ void test49()\n \n void foo50(int[] f, ...)\n {\n-    foreach(int i, TypeInfo ti; _arguments) { }\n+    foreach(size_t i, TypeInfo ti; _arguments) { }\n }\n \n void bar50(out int[] f, ...)\n {\n-    foreach(int i, TypeInfo ti; _arguments) { }\n+    foreach(size_t i, TypeInfo ti; _arguments) { }\n }\n \n void test50()"}, {"sha": "2aabb4d95d1e10787acd94229df21fd6ca8c28cf", "filename": "gcc/testsuite/gdc.test/runnable/test22.d", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest22.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest22.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest22.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -202,7 +202,9 @@ class B9\n     {\n         A9 test1 = new A9(1, 2, 3);\n         A9 test2 = new A9(1, 2, 3, 4);\n-        int[3] arg; A9 test3 = new A9((arg[0]=1, arg[1]=2, arg[2]=3, arg));\n+        int[3] arg;\n+        arg[0]=1, arg[1]=2, arg[2]=3;\n+        A9 test3 = new A9(arg);\n     }\n }\n "}, {"sha": "e38ab1c858de4653f95577cc062d965eaf024e98", "filename": "gcc/testsuite/gdc.test/runnable/test34.d", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest34.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest34.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest34.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,11 @@\n // RUNNABLE_PHOBOS_TEST\n+/*\n+TEST_OUTPUT:\n+---\n+Object\n+---\n+*/\n+\n module test34;\n \n import std.stdio;"}, {"sha": "e887faea2ebc45ab8eb1be48f6a61f881945dcca", "filename": "gcc/testsuite/gdc.test/runnable/test42.d", "status": "modified", "additions": 27, "deletions": 17, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest42.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest42.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest42.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,8 +1,18 @@\n-// RUNNABLE_PHOBOS_TEST\n-// REQUIRED_ARGS:\n+/* RUNNABLE_PHOBOS_TEST\n+REQUIRED_ARGS:\n+TEST_OUTPUT:\n+---\n+success\n+myInt int\n+myBool bool\n+i\n+s\n+C6test42__T4T219TiZ1C\n+C6test427test219FZ8__mixin11C\n+---\n+*/\n \n module test42;\n-\n import std.stdio;\n import core.stdc.stdio;\n import std.string;\n@@ -52,7 +62,7 @@ void test3()\n {\n     auto i = mixin(\"__LINE__\");\n     writefln(\"%d\", i);\n-    assert(i == 53);\n+    assert(i == 63);\n }\n \n /***************************************************/\n@@ -1092,17 +1102,17 @@ void test71()\n {\n     size_t s = Foo71!(\n \"helloabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n-\"helloabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n-\"helloabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n-\"helloabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n-\"helloabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n-\"helloabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n-\"helloabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n-\"helloabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n-\"helloabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n-\"helloabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n-\"helloabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n-\"When dealing with complex template tuples, it's very easy to overflow the\n+~ \"helloabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n+~ \"helloabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n+~ \"helloabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n+~ \"helloabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n+~ \"helloabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n+~ \"helloabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n+~ \"helloabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n+~ \"helloabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n+~ \"helloabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n+~ \"helloabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n+~ \"When dealing with complex template tuples, it's very easy to overflow the\n maximum symbol length allowed by OPTLINK.  This is, simply put, a damn shame,\n because it prevents otherwise completely legal code from compiling and linking\n with DMDWin, whereas it works perfectly fine when using DMDNix or GDC.\n@@ -1980,7 +1990,7 @@ struct Foobar;\n int test124()\n {   int result;\n     dchar[] aa;\n-    alias uint foo_t;\n+    alias size_t foo_t;\n \n     foreach (foo_t i, dchar d; aa)\n     {\n@@ -3507,7 +3517,7 @@ void test215()\n     enum assocarrayliteral = Q!( [1:2] ).q.stringof;\n     enum complex80 = Q!( 1+1.0i ).q.stringof;\n     //enum dottype = Q!( C.Object.toString ).q.stringof;\n-    enum halt = (assert(0), 0).stringof;    // ICE w/ -release\n+    enum halt = 0.stringof;    // ICE w/ -release\n     //enum remove = Q!( [1:2].remove(1) ).q.stringof;\n     enum templat = Q!( Q ).q.stringof;\n }"}, {"sha": "4927bbc97ed31a0e5fc907312a1099d78f1d88a9", "filename": "gcc/testsuite/gdc.test/runnable/test8.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest8.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest8.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftest8.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -696,7 +696,7 @@ void test38()\n        printf(\"Count: %d\\n\", count);\n         assert(count == 1028);\n     }\n-    catch\n+    catch(Throwable)\n     {\n        printf(\"Exception: %d\\n\", k);\n         assert(0);"}, {"sha": "34cc705c08d4a5db72b377a6c2ec7ced800dda0d", "filename": "gcc/testsuite/gdc.test/runnable/testaa.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestaa.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestaa.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestaa.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -512,7 +512,7 @@ int foo17()\n         }catch(Error e){\n             assert(e);\n             return 0;\n-        }catch{\n+        }catch(Throwable){\n             assert(0);\n         }\n         assert(0);"}, {"sha": "17de1679d8bfe6b323e57f945a6f35d4d7f56d38", "filename": "gcc/testsuite/gdc.test/runnable/testaa2.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestaa2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestaa2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestaa2.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -151,7 +151,7 @@ void test3825()\n      * it has no side effect. Then optimizer eliminate it completely, and\n      * whole expression succeed to run in runtime. */\n     int n = 0;\n-    assert(thrown(aax[(n=aax[1], 0)] = 0)); // accessing aax[1] in key part, throws OK\n+    assert(thrown(aax[((){ n=aax[1]; return 0;}())] = 0)); // accessing aax[1] in key part, throws OK\n \n     // This works as expected.\n     int[int][int] aaa;"}, {"sha": "b0009671b19cefa1c3362a329fb542a40e2503de", "filename": "gcc/testsuite/gdc.test/runnable/testassign.d", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestassign.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestassign.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestassign.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,23 @@\n+/*\n+TEST_OUTPUT:\n+---\n+\\\tS1\tS2a\tS2b\tS3a\tS3b\tS4a\tS4b\n+-\ttrue\ttrue\ttrue\ttrue\ttrue\ttrue\ttrue\n+Xa\ttrue\ttrue\ttrue\ttrue\ttrue\ttrue\ttrue\n+Xb\ttrue\ttrue\ttrue\ttrue\ttrue\ttrue\ttrue\n+Xc\ttrue\ttrue\ttrue\ttrue\ttrue\ttrue\ttrue\n+Xd\ttrue\ttrue\ttrue\ttrue\ttrue\ttrue\ttrue\n+Xe\ttrue\ttrue\ttrue\ttrue\ttrue\ttrue\ttrue\n+Xf\ttrue\ttrue\ttrue\ttrue\ttrue\ttrue\ttrue\n+Xg\ttrue\ttrue\ttrue\ttrue\ttrue\ttrue\ttrue\n+---\n+\n+RUN_OUTPUT:\n+---\n+Success\n+---\n+*/\n+\n import core.stdc.stdio;\n \n template TypeTuple(T...){ alias T TypeTuple; }"}, {"sha": "7ec42452ec5ccb6a49ff1c060ef7e1daa4fad296", "filename": "gcc/testsuite/gdc.test/runnable/testconst.d", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestconst.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestconst.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestconst.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,45 @@\n+/*\n+TEST_OUTPUT:\n+---\n+const(immutable(char)*)\n+inout(immutable(char)*)\n+inout(const(char)*)\n+inout(const(char))\n+shared(inout(char))\n+shared(inout(char))\n+immutable(char)\n+immutable(char)\n+inout(const(char))\n+inout(const(char))\n+shared(const(char))\n+shared(const(char))\n+inout(char*****)\n+inout(char****)*\n+const(char*****)\n+const(char****)*\n+immutable(char*****)\n+immutable(char****)*\n+shared(char*****)\n+shared(char****)*\n+const(shared(char****)*)\n+shared(const(char*****))\n+shared(char*****)\n+immutable(char*****)\n+inout(shared(char****)*)\n+inout(shared(char**)***)\n+shared(inout(char**))\n+immutable(string)\n+const(char[])\n+char[]\n+shared(foo85)\n+const(char[26])\n+const(char[26])\n+immutable(char[26])\n+immutable(char[26])\n+string\n+int[3]\n+---\n+*/\n \n import core.stdc.stdio;\n "}, {"sha": "a416b8a8c855e7f80c8d6a0f8e8d3b9fc3a32b9f", "filename": "gcc/testsuite/gdc.test/runnable/testdstress.d", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestdstress.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestdstress.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestdstress.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,7 +1,7 @@\n // RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS:\n \n-module dstress.run.module_01;\n+module run.module_01;\n \n import core.memory;\n import core.exception;\n@@ -171,9 +171,9 @@ int i;\n \n void test7()\n {\n-        assert(dstress.run.module_01.i==0);\n-        dstress.run.module_01.i++;\n-        assert(dstress.run.module_01.i==1);\n+        assert(run.module_01.i==0);\n+        run.module_01.i++;\n+        assert(run.module_01.i==1);\n }\n \n /* ================================ */\n@@ -414,7 +414,7 @@ void test19()\n {\n         try{\n                 throw new Alias19();\n-        }catch{\n+        }catch(Throwable){\n                 return;\n         }\n         assert(0);\n@@ -484,7 +484,7 @@ void test23()\n {\n         try{\n                 foo23();\n-        }catch{\n+        }catch(Throwable){\n         }\n         assert(status23==-1);\n }\n@@ -515,7 +515,7 @@ void test24()\n         assert(status24==0);\n         try{\n                 check24();\n-        }catch{\n+        }catch(Throwable){\n                 assert(status24==1);\n                 status24-=5;\n         }\n@@ -700,7 +700,7 @@ void test32()\n         assert(!(ti is null));\n         writefln(\"%s %d %d\", ti.toString(), ti.tsize, (MyUnion32*).sizeof);\n         assert(ti.tsize==(MyUnion32*).sizeof);\n-        assert(ti.toString()==\"dstress.run.module_01.MyUnion32*\");\n+        assert(ti.toString()==\"run.module_01.MyUnion32*\");\n }\n \n /* ================================ */\n@@ -831,7 +831,7 @@ void test40()\n         try{\n                 assert(!checked40);\n                 GrandChild40 gc = new GrandChild40();\n-        }catch{\n+        }catch(Throwable){\n                 assert(checked40);\n                 return;\n         }"}, {"sha": "05327449209a0664275644ccb26efcbca4273c0c", "filename": "gcc/testsuite/gdc.test/runnable/testenum.d", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestenum.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestenum.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestenum.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,4 +1,10 @@\n-// PERMUTE_ARGS:\n+/*\n+PERMUTE_ARGS:\n+RUN_OUTPUT:\n+---\n+Success\n+---\n+*/\n \n extern(C) int printf(const char*, ...);\n \n@@ -189,7 +195,6 @@ void test2407()\n         b = ES.b,\n         c = ES.c,\n     }\n-    static assert(EES.init == ES.init);\n     static assert(EES.init == S(1));\n     static assert(!__traits(compiles, EES.min));\n     static assert(!__traits(compiles, EES.max));"}, {"sha": "45da7d1659db2e2c98a4075ecad56e78ed15530b", "filename": "gcc/testsuite/gdc.test/runnable/testmodule.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestmodule.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestmodule.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestmodule.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -9,13 +9,13 @@\n // @uri@        news:ct428n$2qoe$1@digitaldaemon.com\n // @url@        nntp://news.digitalmars.com/D.gnu/983\n \n-module dstress.run.unicode_06_\u54ea\u91cc;\n+module run.unicode_06_\u54ea\u91cc;\n \n int \u54ea\u91cc(int \u00f6){\n         return \u00f6+2;\n }\n \n int main(){\n-        assert(dstress.run.unicode_06_\u54ea\u91cc.\u54ea\u91cc(2)==4);\n+        assert(run.unicode_06_\u54ea\u91cc.\u54ea\u91cc(2)==4);\n         return 0;\n }"}, {"sha": "32879ce3e4ca08b4d5e22c528a39f3a494fec6f2", "filename": "gcc/testsuite/gdc.test/runnable/testrightthis.d", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestrightthis.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestrightthis.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestrightthis.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,11 @@\n-// runnable/traits.d    9091,8972,8971,7027\n-// runnable/test4.d     test6()\n+/*\n+runnable/traits.d    9091,8972,8971,7027\n+runnable/test4.d     test6()\n+RUN_OUTPUT:\n+---\n+Success\n+---\n+*/\n \n extern(C) int printf(const char*, ...);\n \n@@ -578,7 +584,6 @@ class Bar11245\n {\n     void func()\n     {\n-        pragma(msg, \"====\");\n         float[Vec11245.f.length] newVal;\n     }\n }"}, {"sha": "85282c2aae8fe3e82aab233cb2316431cd3eace6", "filename": "gcc/testsuite/gdc.test/runnable/testscope2.d", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestscope2.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestscope2.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftestscope2.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,14 @@\n // RUNNABLE_PHOBOS_TEST\n // REQUIRED_ARGS: -dip25\n+/*\n+TEST_OUTPUT:\n+---\n+foo1 ulong function(return ref int* delegate() return p) ref return\n+foo2 int function(return ref int delegate() p) ref\n+foo3 int function(return ref inout(int*) p) ref\n+foo4 int function(return ref inout(int*) p) ref\n+---\n+*/\n \n import core.stdc.stdio;\n "}, {"sha": "9d14ecdcc09c8b723a6b9b4463e8495e70cc8921", "filename": "gcc/testsuite/gdc.test/runnable/traits.d", "status": "modified", "additions": 25, "deletions": 10, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftraits.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftraits.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Ftraits.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,20 @@\n // RUNNABLE_PHOBOS_TEST\n-// PERMUTE_ARGS:\n+/*\n+PERMUTE_ARGS:\n+EXTRA_FILES: imports/a9546.d\n+\n+Windows linker may write something like:\n+---\n+Creating library {{RESULTS_DIR}}/runnable/traits_0.lib and object {{RESULTS_DIR}}/runnable/traits_0.exp\n+---\n+\n+TRANSFORM_OUTPUT: remove_lines(\"Creating library\")\n+TEST_OUTPUT:\n+---\n+__lambda1\n+---\n+*/\n+\n module traits;\n \n import std.stdio;\n@@ -1561,6 +1576,15 @@ void test15094()\n     assert(n == bar.foo.i);\n }\n \n+/********************************************************/\n+\n+void testIsDisabled()\n+{\n+    static assert(__traits(isDisabled, D1.true_));\n+    static assert(!__traits(isDisabled, D1.false_));\n+    static assert(!__traits(isDisabled, D1));\n+}\n+\n /********************************************************/\n // https://issues.dlang.org/show_bug.cgi?id=10100\n \n@@ -1578,15 +1602,6 @@ static assert(\n \n /********************************************************/\n \n-void testIsDisabled()\n-{\n-    static assert(__traits(isDisabled, D1.true_));\n-    static assert(!__traits(isDisabled, D1.false_));\n-    static assert(!__traits(isDisabled, D1));\n-}\n-\n-/********************************************************/\n-\n int main()\n {\n     test1();"}, {"sha": "a01a5ca6039a13b514b26c3381ed6d0aff9446ed", "filename": "gcc/testsuite/gdc.test/runnable/uda.d", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fuda.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fuda.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fuda.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,3 +1,38 @@\n+/*\n+EXTRA_FILES: imports/a9741.d\n+TEST_OUTPUT:\n+---\n+tuple(3, 4, 7, (SSS))\n+tuple(3, 4, 7, (SSS))\n+7\n+SSS\n+tuple(\"hello\")\n+tuple('c')\n+tuple((FFF))\n+tuple(10)\n+tuple(20)\n+tuple(30)\n+tuple((Test6))\n+tuple(Test7(3, \"foo\"))\n+tuple((Test8!\"foo\"))\n+tuple((Test9!\"foo\"))\n+tuple(Test10(3))\n+tuple(Test11(3))\n+tuple(10)\n+tuple(20)\n+tuple()\n+tuple(40)\n+B9741\n+tuple((A9741))\n+tuple(1)\n+tuple(2)\n+---\n+\n+RUN_OUTPUT:\n+---\n+Success\n+---\n+*/\n \n import core.stdc.stdio;\n "}, {"sha": "bf19f57c68b5c3375e87a3158e75163fca0961bb", "filename": "gcc/testsuite/gdc.test/runnable/xtest46.d", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fxtest46.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7da827c99c03adf3342a83a3c3ad3b72873154ce/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fxtest46.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Fxtest46.d?ref=7da827c99c03adf3342a83a3c3ad3b72873154ce", "patch": "@@ -1,5 +1,37 @@\n // RUNNABLE_PHOBOS_TEST\n // PERMUTE_ARGS: -unittest -O -release -inline -fPIC -g\n+/* TEST_OUTPUT:\n+---\n+Boo!double\n+Boo!int\n+true\n+int\n+!! immutable(int)[]\n+int(int i, long j = 7L)\n+long\n+C10390(C10390(C10390(<recursion>)))\n+tuple(height)\n+tuple(get, get)\n+tuple(clear)\n+tuple(draw, draw)\n+runnable/xtest46.d(149): Deprecation: `opDot` is deprecated. Use `alias this`\n+runnable/xtest46.d(151): Deprecation: `opDot` is deprecated. Use `alias this`\n+runnable/xtest46.d(152): Deprecation: `opDot` is deprecated. Use `alias this`\n+runnable/xtest46.d(154): Deprecation: `opDot` is deprecated. Use `alias this`\n+runnable/xtest46.d(181): Deprecation: `opDot` is deprecated. Use `alias this`\n+runnable/xtest46.d(183): Deprecation: `opDot` is deprecated. Use `alias this`\n+runnable/xtest46.d(184): Deprecation: `opDot` is deprecated. Use `alias this`\n+runnable/xtest46.d(186): Deprecation: `opDot` is deprecated. Use `alias this`\n+const(int)\n+string[]\n+double[]\n+double[]\n+{}\n+tuple(\"m\")\n+true\n+TFunction1: extern (C) void function()\n+---\n+*/\n \n import std.stdio;\n import core.stdc.stdio;"}]}