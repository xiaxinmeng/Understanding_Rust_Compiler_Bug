{"sha": "86f3285755adabb3556eb35bfce5ec9846c524b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZmMzI4NTc1NWFkYWJiMzU1NmViMzViZmNlNWVjOTg0NmM1MjRiNg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-05-30T08:56:44Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-30T08:56:44Z"}, "message": "[Ada] Unnesting: properly handle local subprogram in declare blocks\n\n2018-05-30  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch7.adb (Check_Unnesting_Elaboration_Code): The statement part of\n\ta package body that is a compilation unit may contain blocks that\n\tdeclare local subprograms.  In Subprogram_Unnesting Mode such\n\tsubprograms must be handled as nested inside the (implicit) elaboration\n\tprocedure that executes that statement part. To handle properly uplevel\n\treferences we construct that subprogram explicitly, to contain blocks\n\tand inner subprograms, The statement part of the compilation unit\n\tbecomes a call to this subprogram. This is only done if blocks are\n\tpresent in the statement list of the body.\n\nFrom-SVN: r260927", "tree": {"sha": "8f4f1f16f45fadc9196cb5c56e88d9da2ab8b53a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f4f1f16f45fadc9196cb5c56e88d9da2ab8b53a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86f3285755adabb3556eb35bfce5ec9846c524b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86f3285755adabb3556eb35bfce5ec9846c524b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86f3285755adabb3556eb35bfce5ec9846c524b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86f3285755adabb3556eb35bfce5ec9846c524b6/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a5ec8e662ad5fd0228e6feb34acd5485c47b8f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a5ec8e662ad5fd0228e6feb34acd5485c47b8f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a5ec8e662ad5fd0228e6feb34acd5485c47b8f2"}], "stats": {"total": 90, "additions": 90, "deletions": 0}, "files": [{"sha": "b9830e47d04afe0fcf3716224d01da8679ada974", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f3285755adabb3556eb35bfce5ec9846c524b6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f3285755adabb3556eb35bfce5ec9846c524b6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=86f3285755adabb3556eb35bfce5ec9846c524b6", "patch": "@@ -1,3 +1,15 @@\n+2018-05-30  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch7.adb (Check_Unnesting_Elaboration_Code): The statement part of\n+\ta package body that is a compilation unit may contain blocks that\n+\tdeclare local subprograms.  In Subprogram_Unnesting Mode such\n+\tsubprograms must be handled as nested inside the (implicit) elaboration\n+\tprocedure that executes that statement part. To handle properly uplevel\n+\treferences we construct that subprogram explicitly, to contain blocks\n+\tand inner subprograms, The statement part of the compilation unit\n+\tbecomes a call to this subprogram. This is only done if blocks are\n+\tpresent in the statement list of the body.\n+\n 2018-05-30  Bob Duff  <duff@adacore.com>\n \n \t* exp_ch7.adb: Minor comment fix."}, {"sha": "59682defa17d246586c42b625cee25d7d408cf23", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86f3285755adabb3556eb35bfce5ec9846c524b6/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86f3285755adabb3556eb35bfce5ec9846c524b6/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=86f3285755adabb3556eb35bfce5ec9846c524b6", "patch": "@@ -350,6 +350,16 @@ package body Exp_Ch7 is\n    --  Build the deep Initialize/Adjust/Finalize for a record Typ with\n    --  Has_Component_Component set and store them using the TSS mechanism.\n \n+   procedure Check_Unnesting_Elaboration_Code (N : Node_Id);\n+   --  The statement part of a package body that is a compilation unit may\n+   --  contain blocks that declare local subprograms. In Subprogram_Unnesting\n+   --  Mode such subprograms must be handled as nested inside the (implicit)\n+   --  elaboration procedure that executes that statement part. To handle\n+   --  properly uplevel references we construct that subprogram explicitly,\n+   --  to contain blocks and inner subprograms, The statement part becomes\n+   --  a call to this subprogram. This is only done if blocks are present\n+   --  in the statement list of the body.\n+\n    procedure Check_Visibly_Controlled\n      (Prim : Final_Primitives;\n       Typ  : Entity_Id;\n@@ -3974,6 +3984,73 @@ package body Exp_Ch7 is\n       end if;\n    end Cleanup_Task;\n \n+   -----------------------------------\n+   -- Check_Unnesting_Elaboration_Code --\n+   -----------------------------------\n+\n+   procedure Check_Unnesting_Elaboration_Code (N : Node_Id) is\n+      Loc       : constant Source_Ptr := Sloc (N);\n+      Elab_Body : Node_Id;\n+      Elab_Call : Node_Id;\n+      Elab_Proc : Entity_Id;\n+      Stat      : Node_Id;\n+\n+   begin\n+      if Unnest_Subprogram_Mode\n+        and then Present (Handled_Statement_Sequence (N))\n+        and then Is_Compilation_Unit (Current_Scope)\n+      then\n+         Stat := First (Statements (Handled_Statement_Sequence (N)));\n+         while Present (Stat) loop\n+            if Nkind (Stat) = N_Block_Statement then\n+               exit;\n+            end if;\n+\n+            Next (Stat);\n+         end loop;\n+\n+         if Present (Stat) then\n+            Elab_Proc :=\n+              Make_Defining_Identifier (Loc,\n+                Chars => New_Internal_Name ('I'));\n+\n+            Elab_Body := Make_Subprogram_Body (Loc,\n+              Specification =>\n+                Make_Procedure_Specification (Loc,\n+                  Defining_Unit_Name => Elab_Proc),\n+              Declarations => New_List,\n+              Handled_Statement_Sequence =>\n+                 Relocate_Node (Handled_Statement_Sequence (N)));\n+\n+            Elab_Call := Make_Procedure_Call_Statement (Loc,\n+               New_Occurrence_Of (Elab_Proc, Loc));\n+            Append_To (Declarations (N), Elab_Body);\n+            Analyze (Elab_Body);\n+            Set_Has_Nested_Subprogram (Elab_Proc);\n+\n+            Set_Handled_Statement_Sequence (N,\n+               Make_Handled_Sequence_Of_Statements (Loc,\n+                  Statements => New_List (Elab_Call)));\n+            Analyze (Elab_Call);\n+\n+            --  The scope of all blocks in the elaboration code is\n+            --  now the constructed elaboration procedure. Nested\n+            --  subprograms within those blocks will have activation\n+            --  records if they contain references to entities in the\n+            --  enclosing block.\n+\n+            Stat := First\n+                      (Statements (Handled_Statement_Sequence (Elab_Body)));\n+            while Present (Stat) loop\n+               if Nkind (Stat) = N_Block_Statement then\n+                  Set_Scope (Entity (Identifier (Stat)), Elab_Proc);\n+               end if;\n+               Next (Stat);\n+            end loop;\n+         end if;\n+      end if;\n+   end Check_Unnesting_Elaboration_Code;\n+\n    ------------------------------\n    -- Check_Visibly_Controlled --\n    ------------------------------\n@@ -4702,6 +4779,7 @@ package body Exp_Ch7 is\n          --  end of the body statements.\n \n          Expand_Pragma_Initial_Condition (Spec_Id, N);\n+         Check_Unnesting_Elaboration_Code (N);\n \n          Pop_Scope;\n       end if;"}]}