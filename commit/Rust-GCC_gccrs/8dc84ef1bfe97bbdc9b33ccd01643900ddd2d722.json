{"sha": "8dc84ef1bfe97bbdc9b33ccd01643900ddd2d722", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRjODRlZjFiZmU5N2JiZGM5YjMzY2NkMDE2NDM5MDBkZGQyZDcyMg==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2004-05-28T22:28:22Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2004-05-28T22:28:22Z"}, "message": "target-supports.exp (check_alias_available, [...]): Use unique names for temporary files.\n\n2004-05-28  Janis Johnson  <janis187@us.ibm.com>\n\n\t* lib/target-supports.exp (check_alias_available,\n\tcheck_iconv_available, check_named_sections_available): Use\n\tunique names for temporary files.\n\nFrom-SVN: r82388", "tree": {"sha": "b192db6fa669a902db2d84d543a98b6c93c35ff2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b192db6fa669a902db2d84d543a98b6c93c35ff2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8dc84ef1bfe97bbdc9b33ccd01643900ddd2d722", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dc84ef1bfe97bbdc9b33ccd01643900ddd2d722", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dc84ef1bfe97bbdc9b33ccd01643900ddd2d722", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dc84ef1bfe97bbdc9b33ccd01643900ddd2d722/comments", "author": null, "committer": null, "parents": [{"sha": "6b1db06ffd30a38480ac32a12ee9b665721ac147", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b1db06ffd30a38480ac32a12ee9b665721ac147", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b1db06ffd30a38480ac32a12ee9b665721ac147"}], "stats": {"total": 39, "additions": 28, "deletions": 11}, "files": [{"sha": "7c42703a810b6972ff925d0ac47728391b05a485", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc84ef1bfe97bbdc9b33ccd01643900ddd2d722/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc84ef1bfe97bbdc9b33ccd01643900ddd2d722/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8dc84ef1bfe97bbdc9b33ccd01643900ddd2d722", "patch": "@@ -1,3 +1,9 @@\n+2004-05-28  Janis Johnson  <janis187@us.ibm.com\n+\n+\t* lib/target-supports.exp (check_alias_available,\n+\tcheck_iconv_available, check_named_sections_available): Use\n+\tunique names for temporary files.\n+\n 2004-05-28  Ziemowit Laski  <zlaski@apple.com>\n \n \t* gcc.dg/altivec-15.c: New test."}, {"sha": "aefba1d890c7d51cd151554461e66d24ed31133f", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 22, "deletions": 11, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8dc84ef1bfe97bbdc9b33ccd01643900ddd2d722/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8dc84ef1bfe97bbdc9b33ccd01643900ddd2d722/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=8dc84ef1bfe97bbdc9b33ccd01643900ddd2d722", "patch": "@@ -104,16 +104,19 @@ proc check_alias_available { } {\n     if [info exists alias_available_saved] {\n         verbose \"check_alias_available  returning saved $alias_available_saved\" 2\n     } else {\n-        verbose \"check_alias_available  compiling testfile\" 2\n-\tset f [open \"tmp.c\" \"w\"]\n+\tset src alias[pid].c\n+\tset obj alias[pid].o\n+        verbose \"check_alias_available  compiling testfile $src\" 2\n+\tset f [open $src \"w\"]\n \t# Compile a small test program.  The definition of \"g\" is\n \t# necessary to keep the Solaris assembler from complaining\n \t# about the program.\n \tputs $f \"#ifdef __cplusplus\\nextern \\\"C\\\"\\n#endif\\n\"\n \tputs $f \"void g() {} void f() __attribute__((alias(\\\"g\\\")));\"\n \tclose $f\n-\tset lines [${tool}_target_compile \"tmp.c\" \"tmp.o\" object \"\"]\n-\tfile delete \"tmp.c\"\n+\tset lines [${tool}_target_compile $src $obj object \"\"]\n+\tfile delete $src\n+\tremote_file build delete $obj\n \n \tif [string match \"\" $lines] then {\n \t    # No error messages, everything is OK.\n@@ -222,8 +225,10 @@ proc check_iconv_available { test_what } {\n \n     set result \"\"\n \n-    verbose \"check_iconv_available compiling testfile\" 1\n-    set f [open \"tmp.c\" \"w\"]\n+    set src iconv[pid].c\n+    set exe iconv[pid].x\n+    verbose \"check_iconv_available compiling testfile $src\" 2\n+    set f [open $src \"w\"]\n     # Compile a small test program.\n     puts $f \"#include <iconv.h>\\n\"\n     puts $f \"int main (void)\\n {\\n iconv_t cd; \\n\"\n@@ -232,15 +237,17 @@ proc check_iconv_available { test_what } {\n     puts $f \"return 0;\\n}\"\n     close $f\n \n-    set lines [${tool}_target_compile \"tmp.c\" \"tmp.x\" executable \"libs=$libiconv\" ]\n+    set lines [${tool}_target_compile $src $exe executable \"libs=$libiconv\" ]\n+    file delete $src\n+    remote_file build delete $exe\n \n     if [string match \"\" $lines] then {\n \t# No error messages, everything is OK.\n \n \tset result [${tool}_load \"./tmp.x\" \"\" \"\"]\n \tset status [lindex $result 0];\n \n-\tverbose \"status is <$status>\"\n+\tverbose \"check_iconv_available status is <$status>\" 2\n \n \tif { $status == \"pass\" } then {\n \t    return 1\n@@ -257,12 +264,16 @@ proc check_iconv_available { test_what } {\n proc check_named_sections_available { } {\n     global tool\n \n-    set f [open \"tmp.c\" \"w\"]\n+    set src named[pid].c\n+    set obj named[pid].o\n+    verbose \"check_named_sections_available compiling testfile $src\" 2\n+    set f [open $src \"w\"]\n     # Compile a small test program.\n     puts $f \"int __attribute__ ((section(\\\"whatever\\\"))) foo;\"\n     close $f\n-    set lines [${tool}_target_compile \"tmp.c\" \"tmp.o\" object \"\"]\n-    file delete \"tmp.c\"\n+    set lines [${tool}_target_compile $src $obj object \"\"]\n+    file delete $src\n+    remote_file build delete $obj\n \n     # If we got no error messages, everything is OK.\n     set answer [string match \"\" $lines]"}]}