{"sha": "f31dcd99acf739592481156f18e58a2e394d5713", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjMxZGNkOTlhY2Y3Mzk1OTI0ODExNTZmMThlNThhMmUzOTRkNTcxMw==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2016-10-12T12:59:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-10-12T12:59:57Z"}, "message": "exp_ch5.adb, [...]: Minor reformatting.\n\n2016-10-12  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch5.adb, sem_ch3.adb, exp_ch9.adb, a-tags.adb, sem_prag.adb,\n\tsem_ch12.adb, xref_lib.adb, a-strunb-shared.adb, rtsfind.adb,\n\tfreeze.adb, sem_attr.adb, sem_case.adb, exp_ch4.adb, ghost.adb,\n\texp_ch6.adb, sem_ch4.adb, restrict.adb, s-os_lib.adb: Minor\n\treformatting.\n\nFrom-SVN: r241041", "tree": {"sha": "66b3c8da41b4d8e552e8f7f4d301b3957ae54c54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66b3c8da41b4d8e552e8f7f4d301b3957ae54c54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f31dcd99acf739592481156f18e58a2e394d5713", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f31dcd99acf739592481156f18e58a2e394d5713", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f31dcd99acf739592481156f18e58a2e394d5713", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f31dcd99acf739592481156f18e58a2e394d5713/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0026dd0a639f02445d2019be7873a17313af0c16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0026dd0a639f02445d2019be7873a17313af0c16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0026dd0a639f02445d2019be7873a17313af0c16"}], "stats": {"total": 454, "additions": 242, "deletions": 212}, "files": [{"sha": "436f9a557148a82de4b6cf5808ef1caf145a0c76", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f31dcd99acf739592481156f18e58a2e394d5713", "patch": "@@ -1,3 +1,11 @@\n+2016-10-12  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch5.adb, sem_ch3.adb, exp_ch9.adb, a-tags.adb, sem_prag.adb,\n+\tsem_ch12.adb, xref_lib.adb, a-strunb-shared.adb, rtsfind.adb,\n+\tfreeze.adb, sem_attr.adb, sem_case.adb, exp_ch4.adb, ghost.adb,\n+\texp_ch6.adb, sem_ch4.adb, restrict.adb, s-os_lib.adb: Minor\n+\treformatting.\n+\n 2016-10-12  Justin Squirek  <squirek@adacore.com>\n \n \t* sem_ch10.adb (Remove_Limited_With_Clause): Add a check to"}, {"sha": "2199f647b8ae2f147b3708c1a0743f82ba9be41a", "filename": "gcc/ada/a-strunb-shared.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fa-strunb-shared.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fa-strunb-shared.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strunb-shared.adb?ref=f31dcd99acf739592481156f18e58a2e394d5713", "patch": "@@ -625,7 +625,8 @@ package body Ada.Strings.Unbounded is\n \n    function Can_Be_Reused\n      (Item   : not null Shared_String_Access;\n-      Length : Natural) return Boolean is\n+      Length : Natural) return Boolean\n+   is\n    begin\n       return\n         System.Atomic_Counters.Is_One (Item.Counter)"}, {"sha": "08c4dd91b6b3fd1e932c818a0e4f9ba3e57554f4", "filename": "gcc/ada/a-tags.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fa-tags.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fa-tags.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tags.adb?ref=f31dcd99acf739592481156f18e58a2e394d5713", "patch": "@@ -757,10 +757,10 @@ package body Ada.Tags is\n             A_TSD     : constant Type_Specific_Data_Ptr :=\n               To_Type_Specific_Data_Ptr (A_TSD_Ptr.all);\n          begin\n-            return D_TSD.Access_Level = A_TSD.Access_Level\n-              and then (CW_Membership (Descendant, Ancestor)\n-                          or else\n-                        IW_Membership (D_TSD, Ancestor));\n+            return\n+              D_TSD.Access_Level = A_TSD.Access_Level\n+                and then (CW_Membership (Descendant, Ancestor)\n+                           or else IW_Membership (D_TSD, Ancestor));\n          end;\n       end if;\n    end Is_Descendant_At_Same_Level;"}, {"sha": "7931c13ee9231b6d29d521b9e465cad004ad53c3", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=f31dcd99acf739592481156f18e58a2e394d5713", "patch": "@@ -4280,8 +4280,9 @@ package body Exp_Ch4 is\n \n       if Nkind (Expression (N)) = N_Qualified_Expression then\n          declare\n-            Exp : constant Node_Id := Expression (Expression (N));\n+            Exp : constant Node_Id   := Expression (Expression (N));\n             Typ : constant Entity_Id := Etype (Expression (N));\n+\n          begin\n             Apply_Constraint_Check (Exp, Typ);\n             Apply_Predicate_Check  (Exp, Typ);"}, {"sha": "0127bfbf7f652ce439ea74faadecd03de3e25159", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=f31dcd99acf739592481156f18e58a2e394d5713", "patch": "@@ -330,10 +330,11 @@ package body Exp_Ch5 is\n          case Nkind (Exp) is\n             when N_Indexed_Component | N_Selected_Component | N_Slice =>\n                return Is_Non_Local_Array (Prefix (Exp));\n+\n             when others =>\n                return\n-                 not (Is_Entity_Name (Exp) and then\n-                                        Scope (Entity (Exp)) = Current_Scope);\n+                 not (Is_Entity_Name (Exp)\n+                       and then Scope (Entity (Exp)) = Current_Scope);\n          end case;\n       end Is_Non_Local_Array;\n "}, {"sha": "fa18400c12e967e9a80a965f0d9c1cc22755b8db", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=f31dcd99acf739592481156f18e58a2e394d5713", "patch": "@@ -5943,7 +5943,7 @@ package body Exp_Ch6 is\n       Subp : Entity_Id;\n       Scop : Entity_Id)\n    is\n-      Rec   : Node_Id;\n+      Rec : Node_Id;\n \n       procedure Expand_Internal_Init_Call;\n       --  A call to an operation of the type may occur in the initialization\n@@ -6006,7 +6006,7 @@ package body Exp_Ch6 is\n       --  case this must be handled as an inter-object call.\n \n       if not In_Open_Scopes (Scop)\n-          or else (not Is_Entity_Name (Name (N)))\n+        or else not Is_Entity_Name (Name (N))\n       then\n          if Nkind (Name (N)) = N_Selected_Component then\n             Rec := Prefix (Name (N));\n@@ -6020,8 +6020,9 @@ package body Exp_Ch6 is\n             --  function of that enclosing type, and this is treated as an\n             --  internal call.\n \n-            pragma Assert (Is_Entity_Name (Name (N))\n-                             and then Inside_Init_Proc);\n+            pragma Assert\n+              (Is_Entity_Name (Name (N)) and then Inside_Init_Proc);\n+\n             Expand_Internal_Init_Call;\n             return;\n          end if;\n@@ -6044,7 +6045,6 @@ package body Exp_Ch6 is\n            Name     => Name (N),\n            Rec      => Rec,\n            External => False);\n-\n       end if;\n \n       --  Analyze and resolve the new call. The actuals have already been"}, {"sha": "7109dcdf82b73d4e008c82971f3304638f4d9c59", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=f31dcd99acf739592481156f18e58a2e394d5713", "patch": "@@ -1106,8 +1106,8 @@ package body Exp_Ch9 is\n \n    procedure Build_Class_Wide_Master (Typ : Entity_Id) is\n       Loc          : constant Source_Ptr := Sloc (Typ);\n-      Master_Id    : Entity_Id;\n       Master_Decl  : Node_Id;\n+      Master_Id    : Entity_Id;\n       Master_Scope : Entity_Id;\n       Name_Id      : Node_Id;\n       Related_Node : Node_Id;\n@@ -8390,21 +8390,25 @@ package body Exp_Ch9 is\n    procedure Expand_N_Delay_Relative_Statement (N : Node_Id) is\n       Loc  : constant Source_Ptr := Sloc (N);\n       Proc : Entity_Id;\n+\n    begin\n+      --  Try to use System.Relative_Delays.Delay_For only if available. This\n+      --  is the implementation used on restricted platforms when Ada.Calendar\n+      --  is not available.\n+\n       if RTE_Available (RO_RD_Delay_For) then\n-         --  Try to use System.Relative_Delays.Delay_For only if available.\n-         --  This is the implementation used on restricted platforms when\n-         --  Ada.Calendar is not available.\n          Proc := RTE (RO_RD_Delay_For);\n+\n+      --  Otherwise, use Ada.Calendar.Delays.Delay_For and emit an error\n+      --  message if not available.\n+\n       else\n-         --  Otherwise, use Ada.Calendar.Delays.Delay_For and emit an error\n-         --  message if not available.\n          Proc := RTE (RO_CA_Delay_For);\n       end if;\n \n       Rewrite (N,\n         Make_Procedure_Call_Statement (Loc,\n-          Name => New_Occurrence_Of (Proc, Loc),\n+          Name                   => New_Occurrence_Of (Proc, Loc),\n           Parameter_Associations => New_List (Expression (N))));\n       Analyze (N);\n    end Expand_N_Delay_Relative_Statement;"}, {"sha": "b28be4fcecb49b6acc58b9e4bfdd234617cda7ab", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=f31dcd99acf739592481156f18e58a2e394d5713", "patch": "@@ -1408,7 +1408,7 @@ package body Freeze is\n          --  care of all overridings and is done only once.\n \n          if Present (Overridden_Operation (Prim))\n-            and then Comes_From_Source (Prim)\n+           and then Comes_From_Source (Prim)\n          then\n             Update_Primitives_Mapping (Overridden_Operation (Prim), Prim);\n \n@@ -1444,9 +1444,7 @@ package body Freeze is\n       Op_Node := First_Elmt (Prim_Ops);\n       while Present (Op_Node) loop\n          Prim := Node (Op_Node);\n-         if not Comes_From_Source (Prim)\n-           and then Present (Alias (Prim))\n-         then\n+         if not Comes_From_Source (Prim) and then Present (Alias (Prim)) then\n             Par_Prim := Alias (Prim);\n             A_Pre    := Find_Aspect (Par_Prim, Aspect_Pre);\n "}, {"sha": "8621aea1514509d30bb499caf2aecbc2f6c13eac", "filename": "gcc/ada/ghost.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fghost.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fghost.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fghost.adb?ref=f31dcd99acf739592481156f18e58a2e394d5713", "patch": "@@ -617,9 +617,9 @@ package body Ghost is\n          --  A non-Ghost primitive of a type extension cannot override an\n          --  inherited Ghost primitive (SPARK RM 6.9(8)).\n \n-         if not Is_Ghost_Entity (Subp)\n+         if Is_Ghost_Entity (Over_Subp)\n+           and then not Is_Ghost_Entity (Subp)\n            and then not Is_Abstract_Subprogram (Subp)\n-           and then Is_Ghost_Entity (Over_Subp)\n          then\n             Error_Msg_N (\"incompatible overriding in effect\", Subp);\n "}, {"sha": "a66fffb5ee91674d937ec97a765e0769b6d52ad7", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=f31dcd99acf739592481156f18e58a2e394d5713", "patch": "@@ -1195,17 +1195,17 @@ package body Restrict is\n \n          declare\n             R : Restriction_Flags  renames\n-                   Profile_Info (Restricted_Tasking).Set;\n+                  Profile_Info (Restricted_Tasking).Set;\n             V : Restriction_Values renames\n-                   Profile_Info (Restricted_Tasking).Value;\n+                  Profile_Info (Restricted_Tasking).Value;\n          begin\n             for J in R'Range loop\n                if R (J)\n                  and then (Restrictions.Set (J) = False\n-                             or else Restriction_Warnings (J)\n-                             or else\n-                               (J in All_Parameter_Restrictions\n-                                  and then Restrictions.Value (J) > V (J)))\n+                            or else Restriction_Warnings (J)\n+                            or else\n+                              (J in All_Parameter_Restrictions\n+                                and then Restrictions.Value (J) > V (J)))\n                then\n                   Restricted_Profile_Result := False;\n                   exit;"}, {"sha": "6e94ccbd942c191d14e319c377eec61a957ab074", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=f31dcd99acf739592481156f18e58a2e394d5713", "patch": "@@ -1169,15 +1169,19 @@ package body Rtsfind is\n       M (P + 1) := '.';\n       P := P + 1;\n \n-      --  Add entity name and closing quote to message\n+      --  Strip \"RE\"\n \n       if RE_Image (2) = 'E' then\n-         --  Strip \"RE\"\n          S := 4;\n+\n+      --  Strip \"RO_XX\"\n+\n       else\n-         --  Strip \"RO_XX\"\n          S := 7;\n       end if;\n+\n+      --  Add entity name and closing quote to message\n+\n       Name_Len := RE_Image'Length - S + 1;\n       Name_Buffer (1 .. Name_Len) := RE_Image (S .. RE_Image'Last);\n       Set_Casing (Mixed_Case);"}, {"sha": "5ac823e6cde410e5ee2c640174f70377b6e1ccbf", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=f31dcd99acf739592481156f18e58a2e394d5713", "patch": "@@ -511,7 +511,6 @@ package body System.OS_Lib is\n             when None =>\n                null;\n          end case;\n-\n       end Copy_To;\n \n    --  Start of processing for Copy_File\n@@ -622,6 +621,7 @@ package body System.OS_Lib is\n       Ada_Pathname : String_Access :=\n                        To_Path_String_Access\n                          (Pathname, C_String_Length (Pathname));\n+\n    begin\n       Copy_File (Ada_Name.all, Ada_Pathname.all, Success, Mode, Preserve);\n       Free (Ada_Name);\n@@ -639,9 +639,10 @@ package body System.OS_Lib is\n       Copy_Timestamp   : Boolean := True;\n       Copy_Permissions : Boolean := True)\n    is\n-      F    : aliased String (1 .. From'Length + 1);\n+      F : aliased String (1 .. From'Length + 1);\n+      T : aliased String (1 .. To'Length + 1);\n+\n       Mode : Integer;\n-      T    : aliased String (1 .. To'Length + 1);\n \n    begin\n       if Copy_Timestamp then\n@@ -713,6 +714,7 @@ package body System.OS_Lib is\n       Ada_Dest   : String_Access :=\n                      To_Path_String_Access\n                        (Dest, C_String_Length (Dest));\n+\n    begin\n       Copy_Time_Stamps (Ada_Source.all, Ada_Dest.all, Success);\n       Free (Ada_Source);\n@@ -1504,6 +1506,7 @@ package body System.OS_Lib is\n       pragma Import\n         (C, Is_Read_Accessible_File, \"__gnat_is_read_accessible_file\");\n       F_Name : String (1 .. Name'Length + 1);\n+\n    begin\n       F_Name (1 .. Name'Length) := Name;\n       F_Name (F_Name'Last)      := ASCII.NUL;\n@@ -1595,6 +1598,7 @@ package body System.OS_Lib is\n       pragma Import\n         (C, Is_Write_Accessible_File, \"__gnat_is_write_accessible_file\");\n       F_Name : String (1 .. Name'Length + 1);\n+\n    begin\n       F_Name (1 .. Name'Length) := Name;\n       F_Name (F_Name'Last)      := ASCII.NUL;\n@@ -1849,8 +1853,8 @@ package body System.OS_Lib is\n \n       else\n          Result :=\n-          Non_Blocking_Spawn\n-            (Program_Name, Args, Output_File_Descriptor, Err_To_Out);\n+           Non_Blocking_Spawn\n+             (Program_Name, Args, Output_File_Descriptor, Err_To_Out);\n \n          --  Close the file just created for the output, as the file descriptor\n          --  cannot be used anywhere, being a local value. It is safe to do\n@@ -2628,6 +2632,7 @@ package body System.OS_Lib is\n       function rename (From, To : Address) return Integer;\n       pragma Import (C, rename, \"__gnat_rename\");\n       R : Integer;\n+\n    begin\n       R := rename (Old_Name, New_Name);\n       Success := (R = 0);\n@@ -2640,6 +2645,7 @@ package body System.OS_Lib is\n    is\n       C_Old_Name : String (1 .. Old_Name'Length + 1);\n       C_New_Name : String (1 .. New_Name'Length + 1);\n+\n    begin\n       C_Old_Name (1 .. Old_Name'Length) := Old_Name;\n       C_Old_Name (C_Old_Name'Last)      := ASCII.NUL;\n@@ -2673,6 +2679,7 @@ package body System.OS_Lib is\n       procedure C_Set_Executable (Name : C_File_Name; Mode : Integer);\n       pragma Import (C, C_Set_Executable, \"__gnat_set_executable\");\n       C_Name : aliased String (Name'First .. Name'Last + 1);\n+\n    begin\n       C_Name (Name'Range)  := Name;\n       C_Name (C_Name'Last) := ASCII.NUL;\n@@ -2687,6 +2694,7 @@ package body System.OS_Lib is\n       procedure C_Set_File_Time (Name : C_File_Name; Time : OS_Time);\n       pragma Import (C, C_Set_File_Time, \"__gnat_set_file_time_name\");\n       C_Name : aliased String (Name'First .. Name'Last + 1);\n+\n    begin\n       C_Name (Name'Range)  := Name;\n       C_Name (C_Name'Last) := ASCII.NUL;\n@@ -2701,6 +2709,7 @@ package body System.OS_Lib is\n       procedure C_Set_Non_Readable (Name : C_File_Name);\n       pragma Import (C, C_Set_Non_Readable, \"__gnat_set_non_readable\");\n       C_Name : aliased String (Name'First .. Name'Last + 1);\n+\n    begin\n       C_Name (Name'Range)  := Name;\n       C_Name (C_Name'Last) := ASCII.NUL;\n@@ -2715,6 +2724,7 @@ package body System.OS_Lib is\n       procedure C_Set_Non_Writable (Name : C_File_Name);\n       pragma Import (C, C_Set_Non_Writable, \"__gnat_set_non_writable\");\n       C_Name : aliased String (Name'First .. Name'Last + 1);\n+\n    begin\n       C_Name (Name'Range)  := Name;\n       C_Name (C_Name'Last) := ASCII.NUL;\n@@ -2729,6 +2739,7 @@ package body System.OS_Lib is\n       procedure C_Set_Readable (Name : C_File_Name);\n       pragma Import (C, C_Set_Readable, \"__gnat_set_readable\");\n       C_Name : aliased String (Name'First .. Name'Last + 1);\n+\n    begin\n       C_Name (Name'Range)  := Name;\n       C_Name (C_Name'Last) := ASCII.NUL;\n@@ -2743,6 +2754,7 @@ package body System.OS_Lib is\n       procedure C_Set_Writable (Name : C_File_Name);\n       pragma Import (C, C_Set_Writable, \"__gnat_set_writable\");\n       C_Name : aliased String (Name'First .. Name'Last + 1);\n+\n    begin\n       C_Name (Name'Range)  := Name;\n       C_Name (C_Name'Last) := ASCII.NUL;\n@@ -2889,8 +2901,8 @@ package body System.OS_Lib is\n          type Chars is array (Positive range <>) of aliased Character;\n          type Char_Ptr is access constant Character;\n \n-         Command_Len  : constant Positive := Program_Name'Length + 1 +\n-                                               Args_Length (Args);\n+         Command_Len  : constant Positive :=\n+                          Program_Name'Length + 1 + Args_Length (Args);\n          Command_Last : Natural := 0;\n          Command      : aliased Chars (1 .. Command_Len);\n          --  Command contains all characters of the Program_Name and Args, all"}, {"sha": "b457aa45114f9fe8bac74d4f8f0d1f9c638d4bb4", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 112, "deletions": 109, "changes": 221, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=f31dcd99acf739592481156f18e58a2e394d5713", "patch": "@@ -68,7 +68,6 @@ with Stand;    use Stand;\n with Sinfo;    use Sinfo;\n with Sinput;   use Sinput;\n with System;\n-with System.CRC32; use System.CRC32;\n with Stringt;  use Stringt;\n with Style;\n with Stylesw;  use Stylesw;\n@@ -79,6 +78,8 @@ with Uintp;    use Uintp;\n with Uname;    use Uname;\n with Urealp;   use Urealp;\n \n+with System.CRC32; use System.CRC32;\n+\n package body Sem_Attr is\n \n    True_Value  : constant Uint := Uint_1;\n@@ -5288,7 +5289,8 @@ package body Sem_Attr is\n          --  Local variables\n \n          In_Inlined_C_Postcondition : constant Boolean :=\n-           Modify_Tree_For_C and then In_Inlined_Body;\n+                                        Modify_Tree_For_C\n+                                          and then In_Inlined_Body;\n \n          Legal   : Boolean;\n          Pref_Id : Entity_Id;\n@@ -5339,7 +5341,7 @@ package body Sem_Attr is\n          if Chars (Spec_Id) = Name_uPostconditions\n            or else\n              (In_Inlined_C_Postcondition\n-                and then Nkind (Parent (Spec_Id)) = N_Block_Statement)\n+               and then Nkind (Parent (Spec_Id)) = N_Block_Statement)\n          then\n             Rewrite (N, Make_Identifier (Loc, Name_uResult));\n \n@@ -6136,149 +6138,150 @@ package body Sem_Attr is\n       -- Type_Key --\n       --------------\n \n-      when Attribute_Type_Key =>\n-         Check_E0;\n-         Check_Type;\n-\n-         declare\n-            Full_Name  : constant String_Id :=\n-              Fully_Qualified_Name_String (Entity (P));\n+      when Attribute_Type_Key => Type_Key : declare\n+         Full_Name  : constant String_Id :=\n+                        Fully_Qualified_Name_String (Entity (P));\n \n-            Deref      : Boolean;\n-            --  To simplify the handling of mutually recursive types, follow\n-            --  a single dereference link in a composite type.\n+         CRC : CRC32;\n+         --  The computed signature for the type\n \n-            CRC        : CRC32;\n-            --  The computed signature for the type.\n+         Deref : Boolean;\n+         --  To simplify the handling of mutually recursive types, follow a\n+         --  single dereference link in a composite type.\n \n-            procedure Compute_Type_Key (T : Entity_Id);\n-            --  Create a CRC integer from the declaration of the type, For\n-            --  a composite type, fold in the representation of its components\n-            --  in recursive fashion. We use directly the source representation\n-            --  of the types involved.\n+         procedure Compute_Type_Key (T : Entity_Id);\n+         --  Create a CRC integer from the declaration of the type, For a\n+         --  composite type, fold in the representation of its components in\n+         --  recursive fashion. We use directly the source representation of\n+         --  the types involved.\n \n-            --------------\n-            -- Type_Key --\n-            --------------\n+         ----------------------\n+         -- Compute_Type_Key --\n+         ----------------------\n \n-            procedure Compute_Type_Key (T : Entity_Id)  is\n-               SFI          : Source_File_Index;\n-               Buffer       : Source_Buffer_Ptr;\n-               P_Min, P_Max : Source_Ptr;\n-               Rep          : Node_Id;\n+         procedure Compute_Type_Key (T : Entity_Id) is\n+            Buffer : Source_Buffer_Ptr;\n+            P_Max  : Source_Ptr;\n+            P_Min  : Source_Ptr;\n+            Rep    : Node_Id;\n+            SFI    : Source_File_Index;\n \n-               procedure Process_One_Declaration;\n-               --  Update CRC with the characters of one type declaration,\n-               --  or a representation pragma that applies to the type.\n+            procedure Process_One_Declaration;\n+            --  Update CRC with the characters of one type declaration, or a\n+            --  representation pragma that applies to the type.\n \n-               -----------------------------\n-               -- Process_One_Declaration --\n-               -----------------------------\n+            -----------------------------\n+            -- Process_One_Declaration --\n+            -----------------------------\n \n-               procedure Process_One_Declaration is\n-                  Ptr : Source_Ptr;\n+            procedure Process_One_Declaration is\n+               Ptr : Source_Ptr;\n \n-               begin\n-                  Ptr := P_Min;\n+            begin\n+               Ptr := P_Min;\n \n-                  --  Scan type declaration, skipping blanks,\n+               --  Scan type declaration, skipping blanks\n \n-                  while Ptr <= P_Max loop\n-                     if Buffer (Ptr) /= ' ' then\n-                        System.CRC32.Update (CRC, Buffer (Ptr));\n-                     end if;\n+               while Ptr <= P_Max loop\n+                  if Buffer (Ptr) /= ' ' then\n+                     System.CRC32.Update (CRC, Buffer (Ptr));\n+                  end if;\n \n-                     Ptr := Ptr + 1;\n-                  end loop;\n-               end Process_One_Declaration;\n+                  Ptr := Ptr + 1;\n+               end loop;\n+            end Process_One_Declaration;\n \n-            begin  --  Start of processing for Compute_Type_Key\n+         --  Start of processing for Compute_Type_Key\n \n-               if Is_Itype (T) then\n-                  return;\n-               end if;\n+         begin\n+            if Is_Itype (T) then\n+               return;\n+            end if;\n \n-               Sloc_Range (Enclosing_Declaration (T), P_Min, P_Max);\n-               SFI        := Get_Source_File_Index (P_Min);\n-               Buffer     := Source_Text (SFI);\n+            Sloc_Range (Enclosing_Declaration (T), P_Min, P_Max);\n+            SFI    := Get_Source_File_Index (P_Min);\n+            Buffer := Source_Text (SFI);\n \n-               Process_One_Declaration;\n+            Process_One_Declaration;\n \n-               --  Recurse on relevant component types.\n+            --  Recurse on relevant component types\n \n-               if Is_Array_Type (T) then\n-                  Compute_Type_Key (Component_Type (T));\n+            if Is_Array_Type (T) then\n+               Compute_Type_Key (Component_Type (T));\n \n-               elsif Is_Access_Type (T) then\n-                  if not Deref then\n-                     Deref := True;\n-                     Compute_Type_Key (Designated_Type (T));\n-                  end if;\n+            elsif Is_Access_Type (T) then\n+               if not Deref then\n+                  Deref := True;\n+                  Compute_Type_Key (Designated_Type (T));\n+               end if;\n \n-               elsif Is_Derived_Type (T) then\n-                  Compute_Type_Key (Etype  (T));\n+            elsif Is_Derived_Type (T) then\n+               Compute_Type_Key (Etype  (T));\n \n-               elsif Is_Record_Type (T) then\n-                  declare\n-                     Comp : Entity_Id;\n-                  begin\n-                     Comp := First_Component (T);\n-                     while Present (Comp) loop\n-                        Compute_Type_Key (Etype (Comp));\n+            elsif Is_Record_Type (T) then\n+               declare\n+                  Comp : Entity_Id;\n+               begin\n+                  Comp := First_Component (T);\n+                  while Present (Comp) loop\n+                     Compute_Type_Key (Etype (Comp));\n+                     Next_Component (Comp);\n+                  end loop;\n+               end;\n+            end if;\n \n-                        Next_Component (Comp);\n-                     end loop;\n-                  end;\n-               end if;\n+            --  Fold in representation aspects for the type, which appear in\n+            --  the same source buffer.\n \n-               --  Fold in representation aspects for the type, which\n-               --  appear in the same source buffer.\n+            Rep := First_Rep_Item (T);\n \n-               Rep := First_Rep_Item (T);\n+            while Present (Rep) loop\n+               if Comes_From_Source (Rep) then\n+                  Sloc_Range (Rep, P_Min, P_Max);\n+                  Process_One_Declaration;\n+               end if;\n \n-               while Present (Rep) loop\n-                  if Comes_From_Source (Rep) then\n-                     Sloc_Range (Rep, P_Min, P_Max);\n-                     Process_One_Declaration;\n-                  end if;\n+               Rep := Next_Rep_Item (Rep);\n+            end loop;\n+         end Compute_Type_Key;\n \n-                  Rep := Next_Rep_Item (Rep);\n-               end loop;\n-            end Compute_Type_Key;\n+      --  Start of processing for Type_Key\n \n-         begin\n-            Start_String;\n-            Deref := False;\n+      begin\n+         Check_E0;\n+         Check_Type;\n \n-            --  Copy all characters in Full_Name but the trailing NUL\n+         Start_String;\n+         Deref := False;\n \n-            for J in 1 .. String_Length (Full_Name) - 1 loop\n-               Store_String_Char (Get_String_Char (Full_Name, Pos (J)));\n-            end loop;\n+         --  Copy all characters in Full_Name but the trailing NUL\n \n-            --  For standard type return the name of the type. as there is\n-            --  no explicit source declaration to use. Otherwise compute\n-            --  CRC and convert it to string one character at a time. so as\n-            --  not to use Image within the compiler.\n+         for J in 1 .. String_Length (Full_Name) - 1 loop\n+            Store_String_Char (Get_String_Char (Full_Name, Pos (J)));\n+         end loop;\n \n-            if Scope (Entity (P)) /= Standard_Standard then\n-               Initialize (CRC);\n-               Compute_Type_Key (Entity (P));\n+         --  For standard type return the name of the type. as there is no\n+         --  explicit source declaration to use. Otherwise compute CRC and\n+         --  convert it to string one character at a time so as not to use\n+         --  Image within the compiler.\n \n-               if not Is_Frozen (Entity (P)) then\n-                  Error_Msg_N (\"premature usage of Type_Key?\", N);\n-               end if;\n+         if Scope (Entity (P)) /= Standard_Standard then\n+            Initialize (CRC);\n+            Compute_Type_Key (Entity (P));\n \n-               while CRC > 0 loop\n-                  Store_String_Char (Character'Val (48 + (CRC rem 10)));\n-                  CRC := CRC / 10;\n-               end loop;\n+            if not Is_Frozen (Entity (P)) then\n+               Error_Msg_N (\"premature usage of Type_Key?\", N);\n             end if;\n \n-            Rewrite (N, Make_String_Literal (Loc, End_String));\n-         end;\n+            while CRC > 0 loop\n+               Store_String_Char (Character'Val (48 + (CRC rem 10)));\n+               CRC := CRC / 10;\n+            end loop;\n+         end if;\n \n+         Rewrite (N, Make_String_Literal (Loc, End_String));\n          Analyze_And_Resolve (N, Standard_String);\n+      end Type_Key;\n \n       -----------------------\n       -- Unbiased_Rounding --"}, {"sha": "039a44485c4a514ac26727cf3abda79aaf7deb0e", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 37, "deletions": 40, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=f31dcd99acf739592481156f18e58a2e394d5713", "patch": "@@ -455,51 +455,48 @@ package body Sem_Case is\n       ----------------------\n \n       procedure Check_Duplicates is\n-         Prev_Hi : Uint := Expr_Value (Choice_Table (1).Hi);\n+         Choice      : Node_Id;\n+         Choice_Hi   : Uint;\n+         Choice_Lo   : Uint;\n+         Prev_Choice : Node_Id;\n+         Prev_Hi     : Uint;\n+\n       begin\n+         Prev_Hi := Expr_Value (Choice_Table (1).Hi);\n+\n          for Outer_Index in 2 .. Num_Choices loop\n-            declare\n-               Choice_Lo : constant Uint :=\n-                 Expr_Value (Choice_Table (Outer_Index).Lo);\n-               Choice_Hi : constant Uint :=\n-                 Expr_Value (Choice_Table (Outer_Index).Hi);\n-            begin\n-               if Choice_Lo <= Prev_Hi then\n-                  --  Choices overlap; this is an error\n-\n-                  declare\n-                     Choice : constant Node_Id :=\n-                       Choice_Table (Outer_Index).Node;\n-                     Prev_Choice : Node_Id;\n-                  begin\n-                     --  Find first previous choice that overlaps\n-\n-                     for Inner_Index in 1 .. Outer_Index - 1 loop\n-                        if Choice_Lo <=\n-                             Expr_Value (Choice_Table (Inner_Index).Hi)\n-                        then\n-                           Prev_Choice := Choice_Table (Inner_Index).Node;\n-                           exit;\n-                        end if;\n-                     end loop;\n+            Choice_Lo := Expr_Value (Choice_Table (Outer_Index).Lo);\n+            Choice_Hi := Expr_Value (Choice_Table (Outer_Index).Hi);\n \n-                     if Sloc (Prev_Choice) <= Sloc (Choice) then\n-                        Error_Msg_Sloc := Sloc (Prev_Choice);\n-                        Dup_Choice\n-                          (Choice_Lo, UI_Min (Choice_Hi, Prev_Hi), Choice);\n-                     else\n-                        Error_Msg_Sloc := Sloc (Choice);\n-                        Dup_Choice\n-                          (Choice_Lo, UI_Min (Choice_Hi, Prev_Hi),\n-                           Prev_Choice);\n-                     end if;\n-                  end;\n-               end if;\n+            --  Choices overlap; this is an error\n \n-               if Choice_Hi > Prev_Hi then\n-                  Prev_Hi := Choice_Hi;\n+            if Choice_Lo <= Prev_Hi then\n+               Choice := Choice_Table (Outer_Index).Node;\n+\n+               --  Find first previous choice that overlaps\n+\n+               for Inner_Index in 1 .. Outer_Index - 1 loop\n+                  if Choice_Lo <=\n+                       Expr_Value (Choice_Table (Inner_Index).Hi)\n+                  then\n+                     Prev_Choice := Choice_Table (Inner_Index).Node;\n+                     exit;\n+                  end if;\n+               end loop;\n+\n+               if Sloc (Prev_Choice) <= Sloc (Choice) then\n+                  Error_Msg_Sloc := Sloc (Prev_Choice);\n+                  Dup_Choice (Choice_Lo, UI_Min (Choice_Hi, Prev_Hi), Choice);\n+               else\n+                  Error_Msg_Sloc := Sloc (Choice);\n+                  Dup_Choice\n+                    (Choice_Lo, UI_Min (Choice_Hi, Prev_Hi), Prev_Choice);\n                end if;\n-            end;\n+            end if;\n+\n+            if Choice_Hi > Prev_Hi then\n+               Prev_Hi := Choice_Hi;\n+            end if;\n          end loop;\n       end Check_Duplicates;\n "}, {"sha": "b0a9ff66cac84254d289ba17cf1386e2eaf62daa", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=f31dcd99acf739592481156f18e58a2e394d5713", "patch": "@@ -8948,7 +8948,6 @@ package body Sem_Ch12 is\n       Gen_Body : Node_Id;\n       Gen_Decl : Node_Id)\n    is\n-\n       function In_Same_Scope (Gen_Id, Act_Id : Node_Id) return Boolean;\n       --  Check if the generic definition and the instantiation come from\n       --  a common scope, in which case the instance must be frozen after\n@@ -8990,12 +8989,12 @@ package body Sem_Ch12 is\n       ---------------\n \n       function True_Sloc (N, Act_Unit : Node_Id) return Source_Ptr is\n-         Res : Source_Ptr;\n          N1  : Node_Id;\n+         Res : Source_Ptr;\n \n       begin\n          Res := Sloc (N);\n-         N1 := N;\n+         N1  := N;\n          while Present (N1) and then N1 /= Act_Unit loop\n             if Sloc (N1) > Res then\n                Res := Sloc (N1);\n@@ -9013,11 +9012,11 @@ package body Sem_Ch12 is\n       Par       : constant Entity_Id := Scope (Gen_Id);\n       Gen_Unit  : constant Node_Id   :=\n                     Unit (Cunit (Get_Source_Unit (Gen_Decl)));\n-      Orig_Body : Node_Id := Gen_Body;\n-      F_Node    : Node_Id;\n-      Body_Unit : Node_Id;\n \n+      Body_Unit  : Node_Id;\n+      F_Node     : Node_Id;\n       Must_Delay : Boolean;\n+      Orig_Body  : Node_Id := Gen_Body;\n \n    --  Start of processing for Install_Body\n \n@@ -9080,13 +9079,13 @@ package body Sem_Ch12 is\n \n       Must_Delay :=\n         (Gen_Unit = Act_Unit\n-          and then (Nkind_In (Gen_Unit, N_Package_Declaration,\n-                                        N_Generic_Package_Declaration)\n+          and then (Nkind_In (Gen_Unit, N_Generic_Package_Declaration,\n+                                        N_Package_Declaration)\n                      or else (Gen_Unit = Body_Unit\n                                and then True_Sloc (N, Act_Unit)\n                                           < Sloc (Orig_Body)))\n           and then Is_In_Main_Unit (Original_Node (Gen_Unit))\n-          and then (In_Same_Scope (Gen_Id, Act_Id)));\n+          and then In_Same_Scope (Gen_Id, Act_Id));\n \n       --  If this is an early instantiation, the freeze node is placed after\n       --  the generic body. Otherwise, if the generic appears in an instance,\n@@ -12914,7 +12913,6 @@ package body Sem_Ch12 is\n       end if;\n \n       Current_Unit := Parent (N);\n-\n       while Present (Current_Unit)\n         and then Nkind (Current_Unit) /= N_Compilation_Unit\n       loop"}, {"sha": "3b9435f92f7ccb6564ba47fea7bccb924002f8f7", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=f31dcd99acf739592481156f18e58a2e394d5713", "patch": "@@ -877,6 +877,7 @@ package body Sem_Ch3 is\n          then\n             Build_Itype_Reference (Anon_Type, Parent (Current_Scope));\n          end if;\n+\n          return Anon_Type;\n       end if;\n \n@@ -14758,9 +14759,9 @@ package body Sem_Ch3 is\n         or else Is_Private_Overriding\n         or else Is_Internal_Name (Chars (Parent_Subp))\n         or else (Is_Controlled (Parent_Type)\n-                  and then Nam_In (Chars (Parent_Subp), Name_Initialize,\n-                                                        Name_Adjust,\n-                                                        Name_Finalize))\n+                  and then Nam_In (Chars (Parent_Subp), Name_Adjust,\n+                                                        Name_Finalize,\n+                                                        Name_Initialize))\n       then\n          Set_Derived_Name;\n "}, {"sha": "888d6e9edd58f5c63e17df32579d8f7b1f50f08c", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=f31dcd99acf739592481156f18e58a2e394d5713", "patch": "@@ -4804,6 +4804,7 @@ package body Sem_Ch4 is\n          In_Scope := In_Open_Scopes (Prefix_Type);\n \n          while Present (Comp) loop\n+\n             --  Do not examine private operations of the type if not within\n             --  its scope.\n \n@@ -4821,10 +4822,9 @@ package body Sem_Ch4 is\n                   --  a visible entity is found.\n \n                   if Is_Tagged_Type (Prefix_Type)\n-                    and then\n-                      Nkind_In (Parent (N), N_Procedure_Call_Statement,\n-                                            N_Function_Call,\n-                                            N_Indexed_Component)\n+                    and then Nkind_In (Parent (N), N_Function_Call,\n+                                                   N_Indexed_Component,\n+                                                   N_Procedure_Call_Statement)\n                     and then Has_Mode_Conformant_Spec (Comp)\n                   then\n                      Has_Candidate := True;"}, {"sha": "d95cab895b6c65b30371354a0c585bbbb23cfde0", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=f31dcd99acf739592481156f18e58a2e394d5713", "patch": "@@ -26411,9 +26411,6 @@ package body Sem_Prag is\n       Par_Subp    : Entity_Id;\n       Adjust_Sloc : Boolean)\n    is\n-      Par_Formal  : Entity_Id;\n-      Subp_Formal : Entity_Id;\n-\n       function Replace_Entity (N : Node_Id) return Traverse_Result;\n       --  Replace reference to formal of inherited operation or to primitive\n       --  operation of root type, with corresponding entity for derived type,\n@@ -26516,6 +26513,11 @@ package body Sem_Prag is\n       procedure Replace_Condition_Entities is\n         new Traverse_Proc (Replace_Entity);\n \n+      --  Local variables\n+\n+      Par_Formal  : Entity_Id;\n+      Subp_Formal : Entity_Id;\n+\n    --  Start of processing for Build_Class_Wide_Expression\n \n    begin"}, {"sha": "92508414a03e516da5c461c411a53b5377de43da", "filename": "gcc/ada/xref_lib.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fxref_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31dcd99acf739592481156f18e58a2e394d5713/gcc%2Fada%2Fxref_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxref_lib.adb?ref=f31dcd99acf739592481156f18e58a2e394d5713", "patch": "@@ -645,7 +645,7 @@ package body Xref_Lib is\n \n             declare\n                Table : Table_Type renames\n-                 File.Dep.Table (1 .. Last (File.Dep));\n+                         File.Dep.Table (1 .. Last (File.Dep));\n             begin\n                Table (Num_Dependencies) := Add_To_Xref_File\n                  (Ali (File_Start .. File_End),"}]}