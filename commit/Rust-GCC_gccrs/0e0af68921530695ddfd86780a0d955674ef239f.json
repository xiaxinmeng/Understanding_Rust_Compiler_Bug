{"sha": "0e0af68921530695ddfd86780a0d955674ef239f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGUwYWY2ODkyMTUzMDY5NWRkZmQ4Njc4MGEwZDk1NTY3NGVmMjM5Zg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2016-11-16T10:20:23Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2016-11-16T10:20:23Z"}, "message": "Fix handling of unknown sizes in rtx_addr_can_trap_p\n\nIf the size passed in to rtx_addr_can_trap_p was zero, the frame\nhandling would get the size from the mode instead.  However, this\ntoo can be zero if the mode is BLKmode, i.e. if we have a BLKmode\nmemory reference with no MEM_SIZE (which should be rare these days).\nThis meant that the conditions for a 4-byte access at offset X were\nstricter than those for an access of unknown size at offset X.\n\nThis patch checks whether the size is still zero, as the\nSYMBOL_REF handling does.\n\ngcc/\n2016-11-15  Richard Sandiford  <richard.sandiford@arm.com>\n\t    Alan Hayward  <alan.hayward@arm.com>\n\t    David Sherwood  <david.sherwood@arm.com>\n\n\t* rtlanal.c (rtx_addr_can_trap_p_1): Handle unknown sizes.\n\nCo-Authored-By: Alan Hayward <alan.hayward@arm.com>\nCo-Authored-By: David Sherwood <david.sherwood@arm.com>\n\nFrom-SVN: r242476", "tree": {"sha": "528d4bf22f77e46d7341098e854448239ab851b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/528d4bf22f77e46d7341098e854448239ab851b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e0af68921530695ddfd86780a0d955674ef239f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e0af68921530695ddfd86780a0d955674ef239f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e0af68921530695ddfd86780a0d955674ef239f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e0af68921530695ddfd86780a0d955674ef239f/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "29220523c10fec10ba3f3de817257837611b4ec0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29220523c10fec10ba3f3de817257837611b4ec0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29220523c10fec10ba3f3de817257837611b4ec0"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "fe1d9c3b257063d71e0154868fa03454ad70be3e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e0af68921530695ddfd86780a0d955674ef239f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e0af68921530695ddfd86780a0d955674ef239f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0e0af68921530695ddfd86780a0d955674ef239f", "patch": "@@ -1,3 +1,9 @@\n+2016-11-16  Richard Sandiford  <richard.sandiford@arm.com>\n+\t    Alan Hayward  <alan.hayward@arm.com>\n+\t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* rtlanal.c (rtx_addr_can_trap_p_1): Handle unknown sizes.\n+\n 2016-11-16  Richard Sandiford  <richard.sandiford@arm.com>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "f07a77ae6f2ab048bb8f183e6a5d29c113a3ad92", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e0af68921530695ddfd86780a0d955674ef239f/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e0af68921530695ddfd86780a0d955674ef239f/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=0e0af68921530695ddfd86780a0d955674ef239f", "patch": "@@ -543,6 +543,8 @@ rtx_addr_can_trap_p_1 (const_rtx x, HOST_WIDE_INT offset, HOST_WIDE_INT size,\n \n \t  if (size == 0)\n \t    size = GET_MODE_SIZE (mode);\n+\t  if (size == 0)\n+\t    return 1;\n \n \t  if (x == frame_pointer_rtx)\n \t    {"}]}