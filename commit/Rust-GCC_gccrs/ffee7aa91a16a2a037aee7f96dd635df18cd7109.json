{"sha": "ffee7aa91a16a2a037aee7f96dd635df18cd7109", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZlZTdhYTkxYTE2YTJhMDM3YWVlN2Y5NmRkNjM1ZGYxOGNkNzEwOQ==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2014-01-20T11:32:32Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2014-01-20T11:32:32Z"}, "message": "[AArch64] Fix behaviour of -mcpu option to match ARM.\n\ngcc/\n\n\t* common/config/aarch64/aarch64-common.c\n\t(aarch64_handle_option): Don't handle any option order logic here.\n\t* config/aarch64/aarch64.c (aarch64_parse_arch): Do not override\n\tselected_cpu, warn on architecture version mismatch.\n\t(aarch64_override_options): Fix parsing order for option strings.\n\nFrom-SVN: r206803", "tree": {"sha": "0f72a08d989156923d4ad477e3da76e54d4867d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f72a08d989156923d4ad477e3da76e54d4867d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffee7aa91a16a2a037aee7f96dd635df18cd7109", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffee7aa91a16a2a037aee7f96dd635df18cd7109", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffee7aa91a16a2a037aee7f96dd635df18cd7109", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffee7aa91a16a2a037aee7f96dd635df18cd7109/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c716977996bb5b73c3ab8dd7c14215697d5eed19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c716977996bb5b73c3ab8dd7c14215697d5eed19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c716977996bb5b73c3ab8dd7c14215697d5eed19"}], "stats": {"total": 47, "additions": 31, "deletions": 16}, "files": [{"sha": "f3e09e8d820198bce4e5ebcc49147e9c8a57f3e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffee7aa91a16a2a037aee7f96dd635df18cd7109/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffee7aa91a16a2a037aee7f96dd635df18cd7109/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ffee7aa91a16a2a037aee7f96dd635df18cd7109", "patch": "@@ -1,3 +1,11 @@\n+2014-01-20  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* common/config/aarch64/aarch64-common.c\n+\t(aarch64_handle_option): Don't handle any option order logic here.\n+\t* config/aarch64/aarch64.c (aarch64_parse_arch): Do not override\n+\tselected_cpu, warn on architecture version mismatch.\n+\t(aarch64_override_options): Fix parsing order for option strings.\n+\n 2014-01-20  Jan-Benedict Glaw  <jbglaw@lug-owl.de>\n \t    Iain Sandoe  <iain@codesourcery.com>\n "}, {"sha": "6107007ed41666da79b469891118846ae92e0eac", "filename": "gcc/common/config/aarch64/aarch64-common.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffee7aa91a16a2a037aee7f96dd635df18cd7109/gcc%2Fcommon%2Fconfig%2Faarch64%2Faarch64-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffee7aa91a16a2a037aee7f96dd635df18cd7109/gcc%2Fcommon%2Fconfig%2Faarch64%2Faarch64-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Faarch64%2Faarch64-common.c?ref=ffee7aa91a16a2a037aee7f96dd635df18cd7109", "patch": "@@ -52,10 +52,10 @@ static const struct default_options aarch_option_optimization_table[] =\n /* Implement TARGET_HANDLE_OPTION.\n    This function handles the target specific options for CPU/target selection.\n \n-   march wins over mcpu, so when march is defined, mcpu takes the same value,\n-   otherwise march remains undefined. mtune can be used with either march or\n-   mcpu. If march and mcpu are used together, the rightmost option wins.\n-   mtune can be used with either march or mcpu.  */\n+   -mcpu=CPU is shorthand for -march=ARCH_FOR_CPU, -mtune=CPU.\n+   If either of -march or -mtune is given, they override their\n+   respective component of -mcpu.  This logic is implemented\n+   in config/aarch64/aarch64.c:aarch64_override_options.  */\n \n static bool\n aarch64_handle_option (struct gcc_options *opts,\n@@ -70,12 +70,10 @@ aarch64_handle_option (struct gcc_options *opts,\n     {\n     case OPT_march_:\n       opts->x_aarch64_arch_string = arg;\n-      opts->x_aarch64_cpu_string = arg;\n       return true;\n \n     case OPT_mcpu_:\n       opts->x_aarch64_cpu_string = arg;\n-      opts->x_aarch64_arch_string = NULL;\n       return true;\n \n     case OPT_mtune_:"}, {"sha": "7091d3ec63143bf544944b8fc0022078b9ca0e65", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffee7aa91a16a2a037aee7f96dd635df18cd7109/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffee7aa91a16a2a037aee7f96dd635df18cd7109/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=ffee7aa91a16a2a037aee7f96dd635df18cd7109", "patch": "@@ -5101,14 +5101,22 @@ aarch64_parse_arch (void)\n \t{\n \t  selected_arch = arch;\n \t  aarch64_isa_flags = selected_arch->flags;\n-\t  selected_cpu = &all_cores[selected_arch->core];\n+\n+\t  if (!selected_cpu)\n+\t    selected_cpu = &all_cores[selected_arch->core];\n \n \t  if (ext != NULL)\n \t    {\n \t      /* ARCH string contains at least one extension.  */\n \t      aarch64_parse_extension (ext);\n \t    }\n \n+\t  if (strcmp (selected_arch->arch, selected_cpu->arch))\n+\t    {\n+\t      warning (0, \"switch -mcpu=%s conflicts with -march=%s switch\",\n+\t\t       selected_cpu->name, selected_arch->name);\n+\t    }\n+\n \t  return;\n \t}\n     }\n@@ -5197,20 +5205,21 @@ aarch64_parse_tune (void)\n static void\n aarch64_override_options (void)\n {\n-  /* march wins over mcpu, so when march is defined, mcpu takes the same value,\n-     otherwise march remains undefined.  mtune can be used with either march or\n-     mcpu.  */\n+  /* -mcpu=CPU is shorthand for -march=ARCH_FOR_CPU, -mtune=CPU.\n+     If either of -march or -mtune is given, they override their\n+     respective component of -mcpu.\n \n-  if (aarch64_arch_string)\n+     So, first parse AARCH64_CPU_STRING, then the others, be careful\n+     with -march as, if -mcpu is not present on the command line, march\n+     must set a sensible default CPU.  */\n+  if (aarch64_cpu_string)\n     {\n-      aarch64_parse_arch ();\n-      aarch64_cpu_string = NULL;\n+      aarch64_parse_cpu ();\n     }\n \n-  if (aarch64_cpu_string)\n+  if (aarch64_arch_string)\n     {\n-      aarch64_parse_cpu ();\n-      selected_arch = NULL;\n+      aarch64_parse_arch ();\n     }\n \n   if (aarch64_tune_string)"}]}