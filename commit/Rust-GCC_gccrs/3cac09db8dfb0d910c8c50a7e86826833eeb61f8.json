{"sha": "3cac09db8dfb0d910c8c50a7e86826833eeb61f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NhYzA5ZGI4ZGZiMGQ5MTBjOGM1MGE3ZTg2ODI2ODMzZWViNjFmOA==", "commit": {"author": {"name": "Doug Rupp", "email": "rupp@adacore.com", "date": "2018-05-24T13:04:11Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-24T13:04:11Z"}, "message": "[Ada] Initial port of x86-lynx178elf runtimes\n\n2018-05-24  Doug Rupp  <rupp@adacore.com>\n\ngcc/ada/\n\n\t* argv-lynxos178-raven-cert.c: New file.\n\t* libgnat/system-lynxos178-x86.ads: New file.\n\nFrom-SVN: r260641", "tree": {"sha": "64bea43a93bb64dac6961869a25c678ff96d89cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64bea43a93bb64dac6961869a25c678ff96d89cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cac09db8dfb0d910c8c50a7e86826833eeb61f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cac09db8dfb0d910c8c50a7e86826833eeb61f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cac09db8dfb0d910c8c50a7e86826833eeb61f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cac09db8dfb0d910c8c50a7e86826833eeb61f8/comments", "author": {"login": "Cementitious", "id": 115579865, "node_id": "U_kgDOBuOb2Q", "avatar_url": "https://avatars.githubusercontent.com/u/115579865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cementitious", "html_url": "https://github.com/Cementitious", "followers_url": "https://api.github.com/users/Cementitious/followers", "following_url": "https://api.github.com/users/Cementitious/following{/other_user}", "gists_url": "https://api.github.com/users/Cementitious/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cementitious/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cementitious/subscriptions", "organizations_url": "https://api.github.com/users/Cementitious/orgs", "repos_url": "https://api.github.com/users/Cementitious/repos", "events_url": "https://api.github.com/users/Cementitious/events{/privacy}", "received_events_url": "https://api.github.com/users/Cementitious/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2e9e87891348dde9846a2bc32cee53f1f99dddad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e9e87891348dde9846a2bc32cee53f1f99dddad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e9e87891348dde9846a2bc32cee53f1f99dddad"}], "stats": {"total": 244, "additions": 244, "deletions": 0}, "files": [{"sha": "f526a7d4c088795e281db5819af3c4cdcd67a4e4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cac09db8dfb0d910c8c50a7e86826833eeb61f8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cac09db8dfb0d910c8c50a7e86826833eeb61f8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3cac09db8dfb0d910c8c50a7e86826833eeb61f8", "patch": "@@ -1,3 +1,8 @@\n+2018-05-24  Doug Rupp  <rupp@adacore.com>\n+\n+\t* argv-lynxos178-raven-cert.c: New file.\n+\t* libgnat/system-lynxos178-x86.ads: New file.\n+\n 2018-05-23  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_disp.adb, freeze.adb, gnat1drv.adb, sem_ch5.adb, sem_spark.adb:"}, {"sha": "e0f2e223e367357c1d182a79d95b011f95a92c21", "filename": "gcc/ada/argv-lynxos178-raven-cert.c", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cac09db8dfb0d910c8c50a7e86826833eeb61f8/gcc%2Fada%2Fargv-lynxos178-raven-cert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cac09db8dfb0d910c8c50a7e86826833eeb61f8/gcc%2Fada%2Fargv-lynxos178-raven-cert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fargv-lynxos178-raven-cert.c?ref=3cac09db8dfb0d910c8c50a7e86826833eeb61f8", "patch": "@@ -0,0 +1,77 @@\n+/****************************************************************************\n+ *                                                                          *\n+ *                         GNAT COMPILER COMPONENTS                         *\n+ *                                                                          *\n+ *                                A R G V                                   *\n+ *                                                                          *\n+ *                          C Implementation File                           *\n+ *                                                                          *\n+ *         Copyright (C) 1992-2018, Free Software Foundation, Inc.          *\n+ *                                                                          *\n+ * GNAT is free software;  you can  redistribute it  and/or modify it under *\n+ * terms of the  GNU General Public License as published  by the Free Soft- *\n+ * ware  Foundation;  either version 3,  or (at your option) any later ver- *\n+ * sion.  GNAT is distributed in the hope that it will be useful, but WITH- *\n+ * OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY *\n+ * or FITNESS FOR A PARTICULAR PURPOSE.                                     *\n+ *                                                                          *\n+ * As a special exception under Section 7 of GPL version 3, you are granted *\n+ * additional permissions described in the GCC Runtime Library Exception,   *\n+ * version 3.1, as published by the Free Software Foundation.               *\n+ *                                                                          *\n+ * You should have received a copy of the GNU General Public License and    *\n+ * a copy of the GCC Runtime Library Exception along with this program;     *\n+ * see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    *\n+ * <http://www.gnu.org/licenses/>.                                          *\n+ *                                                                          *\n+ * GNAT was originally developed  by the GNAT team at  New York University. *\n+ * Extensive contributions were provided by Ada Core Technologies Inc.      *\n+ *                                                                          *\n+ ****************************************************************************/\n+\n+/* Routines for accessing command line arguments from both the runtime\n+   library and from the compiler itself.  In the former case, gnat_argc\n+   and gnat_argv are the original argc and argv values as stored by the\n+   binder generated main program, and these routines are accessed from\n+   the Ada.Command_Line package.  In the compiler case, gnat_argc and\n+   gnat_argv are the values as modified by toplev, and these routines\n+   are accessed from the Osint package.  */\n+\n+/* This version is for the ravenscar-cert runtime in LynxOS-178, with\n+   minimal support for Ada.Command_Line.Command_Name */\n+\n+#include <sys/types.h>\n+#include <string.h>\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/* argc and argv of the main program are saved under gnat_argc and gnat_argv,\n+   envp of the main program is saved under gnat_envp.\n+   While gnat_argc and gnat_envp are not needed, they are referenced from\n+   the binder-generated file so they need to be defined here */\n+\n+int gnat_argc = 0;\n+const char **gnat_argv = (const char **) 0;\n+const char **gnat_envp = (const char **) 0;\n+\n+int\n+__gnat_len_arg (int arg_num)\n+{\n+  if (gnat_argv != NULL)\n+    return strlen (gnat_argv[arg_num]);\n+  else\n+    return 0;\n+}\n+\n+void\n+__gnat_fill_arg (char *a, int i)\n+{\n+  if (gnat_argv != NULL)\n+    strncpy (a, gnat_argv[i], strlen(gnat_argv[i]));\n+}\n+\n+#ifdef __cplusplus\n+}\n+#endif"}, {"sha": "123ded6348a875ff856ca89ca20032e609419eb4", "filename": "gcc/ada/libgnat/system-lynxos178-x86.ads", "status": "added", "additions": 162, "deletions": 0, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cac09db8dfb0d910c8c50a7e86826833eeb61f8/gcc%2Fada%2Flibgnat%2Fsystem-lynxos178-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cac09db8dfb0d910c8c50a7e86826833eeb61f8/gcc%2Fada%2Flibgnat%2Fsystem-lynxos178-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-lynxos178-x86.ads?ref=3cac09db8dfb0d910c8c50a7e86826833eeb61f8", "patch": "@@ -0,0 +1,162 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                         (LynxOS-178 X86 Version)                         --\n+--                                                                          --\n+--          Copyright (C) 2009-2018, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n+\n+   pragma No_Elaboration_Code_All;\n+   --  Allow the use of that restriction in units that WITH this unit\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := 0.01;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   pragma Preelaborable_Initialization (Address);\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := 8;\n+   Word_Size    : constant := 32;\n+   Memory_Size  : constant := 2 ** 32;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n+   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   --  17 is the system determined default priority for user applications\n+   --  running on LynxOS.\n+\n+   --  The standard (Rm 13.7) requires that Default_Priority has the value:\n+\n+   --  (Priority'First + Priority'Last) / 2\n+\n+   --  However, the default priority given by the OS is not the same thing as\n+   --  the Ada value Default_Prioirity (previous examples include VxWorks).\n+   --  Therefore, we follow a model based on the full range of LynxOS-178\n+   --  priorities.\n+\n+   Max_Priority           : constant Positive := 252;\n+   Max_Interrupt_Priority : constant Positive := 255;\n+\n+   subtype Any_Priority       is Integer      range   0 .. 255;\n+   subtype Priority           is Any_Priority range   0 .. 252;\n+   subtype Interrupt_Priority is Any_Priority range 253 .. 255;\n+\n+   Default_Priority : constant Priority := 126;\n+\n+   --  Note that the priority of the environment task is set externally by the\n+   --  OS\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   Backend_Divide_Checks     : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n+   Command_Line_Args         : constant Boolean := True;\n+   Configurable_Run_Time     : constant Boolean := False;\n+   Denorm                    : constant Boolean := True;\n+   Duration_32_Bits          : constant Boolean := False;\n+   Exit_Status_Supported     : constant Boolean := True;\n+   Fractional_Fixed_Ops      : constant Boolean := False;\n+   Frontend_Layout           : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   Preallocated_Stacks       : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := True;\n+   Stack_Check_Limits        : constant Boolean := False;\n+   Support_Aggregates        : constant Boolean := True;\n+   Support_Composite_Assign  : constant Boolean := True;\n+   Support_Composite_Compare : constant Boolean := True;\n+   Support_Long_Shifts       : constant Boolean := True;\n+   Always_Compatible_Rep     : constant Boolean := False;\n+   Suppress_Standard_Library : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := False;\n+   Frontend_Exceptions       : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := False;\n+\n+end System;"}]}