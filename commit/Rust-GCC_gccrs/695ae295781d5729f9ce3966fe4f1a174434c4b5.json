{"sha": "695ae295781d5729f9ce3966fe4f1a174434c4b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk1YWUyOTU3ODFkNTcyOWY5Y2UzOTY2ZmU0ZjFhMTc0NDM0YzRiNQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-10-30T19:55:16Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-10-30T19:55:16Z"}, "message": "re PR middle-end/44569 (ICE in simplify_subreg for debug insn with CONCATN)\n\n\tPR middle-end/44569\n\t* lower-suberg.c (simplify_subreg_concatn): For VOIDmode elements,\n\tdetermine the mode of a subreg by GET_MODE_INNER of CONCATN RTX.\n\nFrom-SVN: r166092", "tree": {"sha": "3c0df87ef6fdf3860a9beacb71a59a811d649b15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c0df87ef6fdf3860a9beacb71a59a811d649b15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/695ae295781d5729f9ce3966fe4f1a174434c4b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/695ae295781d5729f9ce3966fe4f1a174434c4b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/695ae295781d5729f9ce3966fe4f1a174434c4b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/695ae295781d5729f9ce3966fe4f1a174434c4b5/comments", "author": null, "committer": null, "parents": [{"sha": "1607a827d12cbb937bf8e7aa4898ff04205cd263", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1607a827d12cbb937bf8e7aa4898ff04205cd263", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1607a827d12cbb937bf8e7aa4898ff04205cd263"}], "stats": {"total": 46, "additions": 27, "deletions": 19}, "files": [{"sha": "7c8a08fbe844d1bcf1ba02d9a8a6cc6ff46e3f96", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695ae295781d5729f9ce3966fe4f1a174434c4b5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695ae295781d5729f9ce3966fe4f1a174434c4b5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=695ae295781d5729f9ce3966fe4f1a174434c4b5", "patch": "@@ -1,3 +1,9 @@\n+2010-10-30  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR middle-end/44569\n+\t* lower-suberg.c (simplify_subreg_concatn): For VOIDmode elements,\n+\tdetermine the mode of a subreg by GET_MODE_INNER of CONCATN RTX.\n+\n 2010-10-30  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/46195\n@@ -92,8 +98,7 @@\n \tpdp11_preferred_output_reload_class, pdp11_secondary_reload,\n \tpdp11_secondary_memory_needed): New function.\n \t(pdp11_return_in_memory): Add other float types.\n-\t* config/pdp11/pdp11.h (HARD_REGNO_MODE_OK): Add other float\n-\ttypes. \n+\t* config/pdp11/pdp11.h (HARD_REGNO_MODE_OK): Add other float types.\n \t(SECONDARY_MEMORY_NEEDED, CANNOT_CHANGE_MODE_CLASS): Define.\n \t(PREFERRED_RELOAD_CLASS, SECONDARY_RELOAD_CLASS,\n \tREGISTER_MOVE_COST): Delete.\n@@ -105,23 +110,21 @@\n \t* config/mn10300/mn10300.c (mn10300_tune_string): New variable.\n \t(mn10300_tune_cpu): New variable.\n \t(mn10300_handle_option): Handle -mam34 and -mtune options.\n-\t(mn10300_option_override): Convert tune string into tune cpu\n-\tvariable.\n+\t(mn10300_option_override): Convert tune string into tune cpu variable.\n \t(mn10300_legitimate_constant_p): Delete unused local variable.\n \t(is_load_insn): New function.\n \t(is_store_insn): New function.\n \t(mn10300_adjust_schedule_cost): New function.\n \t(TARGET_SCHED_ADJUST_COST): Define.\n \t* config/mn10300/mn10300.opt (mam34): New option.\n \t(mtune): New option.\n-\t* config/mn10300/mn10300.h (TARGET_CPU_CPP_BUILTINS): Add AM34\n-\tsupport.\n+\t* config/mn10300/mn10300.h (TARGET_CPU_CPP_BUILTINS): Add AM34 support.\n \t(enum processor_type): Add AM34.\n \t(TARGET_AM34): Define.\n \t* config/mn10300/mn10300.md (attr cpu): Add am34.\n \tAdd pipeline description.\n-\t(movqi, movhi, movsi, movsf, movdf, movdi): Fix predicates. Remove unneeded\n-\talternatives.  Add timing attribute.\n+\t(movqi, movhi, movsi, movsf, movdf, movdi): Fix predicates.\n+\tRemove unneeded alternatives.  Add timing attribute.\n \t(pop_pic_reg, am33_addsi3, mn10300_addsi3, am33_subsi3,\n \tmn10300_subsi3, mulsidi3, umulsidi3, am33_mulsi3,\n \tmn10300_mulsi3, udivmodsi4_am33, divmodsi4, am33_andsi3,\n@@ -167,8 +170,7 @@\n \t(FUNCTION_ARG_ADVANCE): Delete.\n \t* config/cris/cris.c (cris_function_arg_1, cris_function_arg): New\n \tfunctions.\n-\t(cris_function_incoming_arg, cris_function_arg_advance): New\n-\tfunctions.\n+\t(cris_function_incoming_arg, cris_function_arg_advance): New functions.\n \t(TARGET_FUNCTION_ARG, TARGET_FUNCTION_INCOMING_ARG): Define.\n \t(TARGET_FUNCTION_ARG_ADVANCE): Define.\n \n@@ -215,8 +217,7 @@\n \t* config/crx/crx.h (FUNCTION_ARG, FUNCTION_ARG_ADVANCE): Delete.\n \t* config/crx/crx.c (crx_function_arg): Make static.  Take a\n \tconst_tree and a bool.\n-\t(crx_function_arg_advance): Make static.  Take a const_tree and\n-\ta bool.\n+\t(crx_function_arg_advance): Make static.  Take a const_tree and a bool.\n \t(enough_regs_for_param): Take a const_tree.\n \t(TARGET_FUNCTION_ARG, TARGET_FUNCTION_ARG_ADVANCE): Define.\n \n@@ -296,11 +297,9 @@\n \t(frv_function_arg_advance): Delete.\n \t* config/frv/frv.h (FUNCTION_ARG, FUNCTION_ARG_ADVANCE): Delete.\n \t* config/frv/frv.c (frv_function_arg): Rename to...\n-\t(frv_function_arg_1): Make static.  Take const_tree and bool\n-\targuments.\n+\t(frv_function_arg_1): Make static.  Take const_tree and bool arguments.\n \t(frv_function_arg, frv_function_incoming_arg): New functions.\n-\t(frv_function_arg_advance): Make static.  Take a const_tree and\n-\ta bool.\n+\t(frv_function_arg_advance): Make static.  Take a const_tree and a bool.\n \t(TARGET_FUNCTION_ARG, TARGET_FUNCTION_INCOMING_ARG): Define.\n \t(TARGET_FUNCTION_ARG_ADVANCE): Define.\n "}, {"sha": "1c4e9adb004d5ed9a47e20a58c8b4c3fcb073c8c", "filename": "gcc/lower-subreg.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695ae295781d5729f9ce3966fe4f1a174434c4b5/gcc%2Flower-subreg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695ae295781d5729f9ce3966fe4f1a174434c4b5/gcc%2Flower-subreg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flower-subreg.c?ref=695ae295781d5729f9ce3966fe4f1a174434c4b5", "patch": "@@ -396,7 +396,7 @@ simplify_subreg_concatn (enum machine_mode outermode, rtx op,\n \t\t\t unsigned int byte)\n {\n   unsigned int inner_size;\n-  enum machine_mode innermode;\n+  enum machine_mode innermode, partmode;\n   rtx part;\n   unsigned int final_offset;\n \n@@ -409,11 +409,19 @@ simplify_subreg_concatn (enum machine_mode outermode, rtx op,\n \n   inner_size = GET_MODE_SIZE (innermode) / XVECLEN (op, 0);\n   part = XVECEXP (op, 0, byte / inner_size);\n+  partmode = GET_MODE (part);\n+\n+  if (partmode == VOIDmode)\n+    {\n+      gcc_assert (VECTOR_MODE_P (innermode));\n+      partmode = GET_MODE_INNER (innermode);\n+    }\n+\n   final_offset = byte % inner_size;\n   if (final_offset + GET_MODE_SIZE (outermode) > inner_size)\n     return NULL_RTX;\n \n-  return simplify_gen_subreg (outermode, part, GET_MODE (part), final_offset);\n+  return simplify_gen_subreg (outermode, part, partmode, final_offset);\n }\n \n /* Wrapper around simplify_gen_subreg which handles CONCATN.  */"}, {"sha": "3ae57c75d248e5e9e2b219e3fe9d5f42a14670f8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/695ae295781d5729f9ce3966fe4f1a174434c4b5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/695ae295781d5729f9ce3966fe4f1a174434c4b5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=695ae295781d5729f9ce3966fe4f1a174434c4b5", "patch": "@@ -67,7 +67,7 @@\n \t* obj-c++.dg/property/dynamic-2.mm: New.\n \t\n 2010-10-29  Artjoms Sinkarovs <artyom.shinakroff@gmail.com>\n-\tAndrew Pinski <pinskia@gmail.com>\n+\t    Andrew Pinski <pinskia@gmail.com>\n \n \t* gcc.c-torture/execute/vector-shift.c: New testcase.\n \t* gcc.c-torture/execute/vector-shift1.c: Likewise.\n@@ -83,6 +83,7 @@\n \t* gcc.c-torture/execute/20101011-1.c: Skip on SH.\n \n 2010-10-29  Pat Haugen  <pthaugen@us.ibm.com>\n+\n \t* gcc.c-torture/execute/20101011-1.c: Fix #ifdef.\n \n 2010-10-28  Uros Bizjak  <ubizjak@gmail.com>"}]}