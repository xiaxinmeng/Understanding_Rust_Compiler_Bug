{"sha": "f5d9bc8ae81abe46640477bc9e655aa093947f5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVkOWJjOGFlODFhYmU0NjY0MDQ3N2JjOWU2NTVhYTA5Mzk0N2Y1Zg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-22T17:42:03Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-10-22T17:49:38Z"}, "message": "libstdc++: Only include <condition_variable> in <shared_mutex> if needed\n\nThe <condition_variable> header is not small, so <shared_mutex> should\nnot include it unless it actually needs std::condition_variable, which\nis only the case when we don't have pthread_rwlock_t and the POSIX\nTimers option.\n\nThe <shared_mutex> header would be even smaller if we had a header for\nstd::condition_variable (separate from std::condition_variable_any).\nThat's already planned for a future change.\n\nAnd <memory_resource> would be even smaller if it was possible to get\nstd::shared_mutex without std::shared_timed_mutex (which depends on\n<chrono>). For that to be effective, the synchronized_pool_resource\nwould have to create its own simpler version of std::shared_lock without\nthe timed waiting functions. I have no plans to do that.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/shared_mutex: Only include <condition_variable>\n\twhen pthread_rwlock_t and POSIX timers are not available.\n\t(__cpp_lib_shared_mutex, __cpp_lib_shared_timed_mutex): Change\n\tvalue to be type 'long'.\n\t* include/std/version (__cpp_lib_shared_mutex)\n\t(__cpp_lib_shared_timed_mutex): Likewise.", "tree": {"sha": "156bfe87b2dae29d10602b2b63928fc73552eef8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/156bfe87b2dae29d10602b2b63928fc73552eef8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5d9bc8ae81abe46640477bc9e655aa093947f5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5d9bc8ae81abe46640477bc9e655aa093947f5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5d9bc8ae81abe46640477bc9e655aa093947f5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5d9bc8ae81abe46640477bc9e655aa093947f5f/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1e7c6fce15b8ad222f265df2537701407fd289e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1e7c6fce15b8ad222f265df2537701407fd289e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1e7c6fce15b8ad222f265df2537701407fd289e"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "7d683a0e0c4edac1f83d66ea420be726d68c26ca", "filename": "libstdc++-v3/include/std/shared_mutex", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d9bc8ae81abe46640477bc9e655aa093947f5f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fshared_mutex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d9bc8ae81abe46640477bc9e655aa093947f5f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fshared_mutex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fshared_mutex?ref=f5d9bc8ae81abe46640477bc9e655aa093947f5f", "patch": "@@ -33,9 +33,14 @@\n \n #if __cplusplus >= 201402L\n \n-#include <bits/c++config.h>\n-#include <condition_variable>\n+#include <chrono>\n #include <bits/functexcept.h>\n+#include <bits/move.h>        // move, __exchange\n+#include <bits/std_mutex.h>   // defer_lock_t\n+\n+#if ! (_GLIBCXX_USE_PTHREAD_RWLOCK_T && _GTHREAD_USE_MUTEX_TIMEDLOCK)\n+# include <condition_variable>\n+#endif\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n@@ -49,11 +54,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #ifdef _GLIBCXX_HAS_GTHREADS\n \n #if __cplusplus >= 201703L\n-#define __cpp_lib_shared_mutex 201505\n+#define __cpp_lib_shared_mutex 201505L\n   class shared_mutex;\n #endif\n \n-#define __cpp_lib_shared_timed_mutex 201402\n+#define __cpp_lib_shared_timed_mutex 201402L\n   class shared_timed_mutex;\n \n   /// @cond undocumented\n@@ -399,7 +404,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #endif\n   /// @endcond\n \n-#if __cplusplus > 201402L\n+#if __cplusplus >= 201703L\n   /// The standard shared mutex type.\n   class shared_mutex\n   {\n@@ -814,7 +819,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       release() noexcept\n       {\n \t_M_owns = false;\n-\treturn std::exchange(_M_pm, nullptr);\n+\treturn std::__exchange(_M_pm, nullptr);\n       }\n \n       // Getters"}, {"sha": "ebb50a04d240f5c1bd341da6b61b9212498ac1d8", "filename": "libstdc++-v3/include/std/version", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5d9bc8ae81abe46640477bc9e655aa093947f5f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5d9bc8ae81abe46640477bc9e655aa093947f5f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion?ref=f5d9bc8ae81abe46640477bc9e655aa093947f5f", "patch": "@@ -89,7 +89,7 @@\n # define __cpp_lib_quoted_string_io 201304\n # define __cpp_lib_robust_nonmodifying_seq_ops 201304\n # ifdef _GLIBCXX_HAS_GTHREADS\n-#  define __cpp_lib_shared_timed_mutex 201402\n+#  define __cpp_lib_shared_timed_mutex 201402L\n # endif\n # define __cpp_lib_string_udls 201304\n # define __cpp_lib_transparent_operators 201510\n@@ -157,7 +157,7 @@\n #define __cpp_lib_sample 201603\n #ifdef _GLIBCXX_HAS_GTHREADS\n # define __cpp_lib_scoped_lock 201703\n-# define __cpp_lib_shared_mutex 201505\n+# define __cpp_lib_shared_mutex 201505L\n #endif\n #define __cpp_lib_shared_ptr_weak_type 201606\n #define __cpp_lib_string_view 201803L"}]}