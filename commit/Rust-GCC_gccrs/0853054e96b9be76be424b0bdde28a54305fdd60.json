{"sha": "0853054e96b9be76be424b0bdde28a54305fdd60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg1MzA1NGU5NmI5YmU3NmJlNDI0YjBiZGRlMjhhNTQzMDVmZGQ2MA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-03-26T02:15:44Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-03-26T02:15:44Z"}, "message": "re PR libfortran/26661 (Sequential formatted read goes too far)\n\n2006-03-25  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/26661\n\t* io/io.h: Add read_sf so it can be used by read_x.\n\t* io/transfer.c (read_sf): Pass no_error flag to read_sf.  Use it to\n\tbreak out rather than error on EOF or EOR conditions.\n\t(read_block): Update call to read_sf.\n\t(read_block_direct): Ditto.\n\t* io/read.c (read_x): Use the modified read_sf instead of read_block.\n\nFrom-SVN: r112390", "tree": {"sha": "d9fd16198721c77e9d7670c1d0b9353fc9b6e9c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9fd16198721c77e9d7670c1d0b9353fc9b6e9c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0853054e96b9be76be424b0bdde28a54305fdd60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0853054e96b9be76be424b0bdde28a54305fdd60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0853054e96b9be76be424b0bdde28a54305fdd60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0853054e96b9be76be424b0bdde28a54305fdd60/comments", "author": null, "committer": null, "parents": [{"sha": "44f808b02dd58ab2e665b48deb4cbbd962b0c0de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44f808b02dd58ab2e665b48deb4cbbd962b0c0de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44f808b02dd58ab2e665b48deb4cbbd962b0c0de"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "b3786d84c1735a8c4fe556aea33d844cfdac2c01", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0853054e96b9be76be424b0bdde28a54305fdd60/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0853054e96b9be76be424b0bdde28a54305fdd60/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=0853054e96b9be76be424b0bdde28a54305fdd60", "patch": "@@ -1,3 +1,13 @@\n+2006-03-25  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/26661\n+\t* io/io.h: Add read_sf so it can be used by read_x.\n+\t* io/transfer.c (read_sf): Pass no_error flag to read_sf.  Use it to\n+\tbreak out rather than error on EOF or EOR conditions.\n+\t(read_block): Update call to read_sf.\n+\t(read_block_direct): Ditto.\n+\t* io/read.c (read_x): Use the modified read_sf instead of read_block.\n+\n 2006-03-25  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \tPR libfortran/26735"}, {"sha": "1dd4a00cb649bbb50c963a72801990766f198559", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0853054e96b9be76be424b0bdde28a54305fdd60/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0853054e96b9be76be424b0bdde28a54305fdd60/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=0853054e96b9be76be424b0bdde28a54305fdd60", "patch": "@@ -743,6 +743,9 @@ internal_proto(type_name);\n extern void *read_block (st_parameter_dt *, int *);\n internal_proto(read_block);\n \n+extern char *read_sf (st_parameter_dt *, int *, int);\n+internal_proto(read_sf);\n+\n extern void *write_block (st_parameter_dt *, int);\n internal_proto(write_block);\n "}, {"sha": "9db5d583078d05b8d432c7780f8c0fe3c4bd18c5", "filename": "libgfortran/io/read.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0853054e96b9be76be424b0bdde28a54305fdd60/libgfortran%2Fio%2Fread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0853054e96b9be76be424b0bdde28a54305fdd60/libgfortran%2Fio%2Fread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fread.c?ref=0853054e96b9be76be424b0bdde28a54305fdd60", "patch": "@@ -847,7 +847,7 @@ read_x (st_parameter_dt *dtp, int n)\n \n   dtp->u.p.sf_read_comma = 0;\n   if (n > 0)\n-    read_block (dtp, &n);\n+    read_sf (dtp, &n, 1);\n   dtp->u.p.sf_read_comma = 1;\n \n }"}, {"sha": "a72b4da2b570a769f9f144dc339e18c3e0b7a08a", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0853054e96b9be76be424b0bdde28a54305fdd60/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0853054e96b9be76be424b0bdde28a54305fdd60/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=0853054e96b9be76be424b0bdde28a54305fdd60", "patch": "@@ -132,8 +132,8 @@ current_mode (st_parameter_dt *dtp)\n    For larger allocations, we are forced to allocate memory on the\n    heap.  Hopefully this won't happen very often.  */\n \n-static char *\n-read_sf (st_parameter_dt *dtp, int *length)\n+char *\n+read_sf (st_parameter_dt *dtp, int *length, int no_error)\n {\n   char *base, *p, *q;\n   int n, readlen, crlf;\n@@ -171,6 +171,8 @@ read_sf (st_parameter_dt *dtp, int *length)\n \t EOR below.  */\n       if (readlen < 1 && n == 0)\n \t{\n+\t  if (no_error)\n+\t    break;\n \t  generate_error (&dtp->common, ERROR_END, NULL);\n \t  return NULL;\n \t}\n@@ -202,6 +204,8 @@ read_sf (st_parameter_dt *dtp, int *length)\n \t     so we can just continue with a short read.  */\n \t  if (dtp->u.p.current_unit->flags.pad == PAD_NO)\n \t    {\n+\t      if (no_error)\n+\t\tbreak;\n \t      generate_error (&dtp->common, ERROR_EOR, NULL);\n \t      return NULL;\n \t    }\n@@ -265,7 +269,7 @@ read_block (st_parameter_dt *dtp, int *length)\n \n   if (dtp->u.p.current_unit->flags.form == FORM_FORMATTED &&\n       dtp->u.p.current_unit->flags.access == ACCESS_SEQUENTIAL)\n-    return read_sf (dtp, length);\t/* Special case.  */\n+    return read_sf (dtp, length, 0);\t/* Special case.  */\n \n   dtp->u.p.current_unit->bytes_left -= *length;\n \n@@ -315,7 +319,7 @@ read_block_direct (st_parameter_dt *dtp, void *buf, size_t *nbytes)\n       dtp->u.p.current_unit->flags.access == ACCESS_SEQUENTIAL)\n     {\n       length = (int *) nbytes;\n-      data = read_sf (dtp, length);\t/* Special case.  */\n+      data = read_sf (dtp, length, 0);\t/* Special case.  */\n       memcpy (buf, data, (size_t) *length);\n       return;\n     }"}]}