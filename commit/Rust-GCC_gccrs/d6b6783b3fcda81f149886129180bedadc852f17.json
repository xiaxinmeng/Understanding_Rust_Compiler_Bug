{"sha": "d6b6783b3fcda81f149886129180bedadc852f17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZiNjc4M2IzZmNkYTgxZjE0OTg4NjEyOTE4MGJlZGFkYzg1MmYxNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2001-11-03T16:14:05Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-11-03T16:14:05Z"}, "message": "expr.c (expand_expr, [...]): If at top level, don't call force_const_mem.\n\n\t* expr.c (expand_expr, case ADDDR_EXPR): If at top level, don't call\n\tforce_const_mem.\n\nFrom-SVN: r46735", "tree": {"sha": "6c5bec20b5dcec4513cf3759c7bfe01540807fc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c5bec20b5dcec4513cf3759c7bfe01540807fc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6b6783b3fcda81f149886129180bedadc852f17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6b6783b3fcda81f149886129180bedadc852f17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6b6783b3fcda81f149886129180bedadc852f17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6b6783b3fcda81f149886129180bedadc852f17/comments", "author": null, "committer": null, "parents": [{"sha": "6b3736a12b14c2d2dddafeea0941aaaf413af393", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b3736a12b14c2d2dddafeea0941aaaf413af393", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b3736a12b14c2d2dddafeea0941aaaf413af393"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "41843f65b2b7303f07d83b8a00366ecf6549b552", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6b6783b3fcda81f149886129180bedadc852f17/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6b6783b3fcda81f149886129180bedadc852f17/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d6b6783b3fcda81f149886129180bedadc852f17", "patch": "@@ -1,5 +1,8 @@\n Sat Nov  3 10:37:56 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* expr.c (expand_expr, case ADDDR_EXPR): If at top level, don't call\n+\tforce_const_mem.\n+\n \t* reload.c (combine_reloads): Don't combine an output reload if there\n \tare other reloads around for part of the output.\n "}, {"sha": "26527810da988693285ead5bbe4df5b102778c7c", "filename": "gcc/expr.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6b6783b3fcda81f149886129180bedadc852f17/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6b6783b3fcda81f149886129180bedadc852f17/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=d6b6783b3fcda81f149886129180bedadc852f17", "patch": "@@ -8671,6 +8671,14 @@ expand_expr (exp, target, tmode, modifier)\n \t return a zero.  */\n       else if (TREE_CODE (TREE_OPERAND (exp, 0)) == ERROR_MARK)\n \treturn const0_rtx;\n+      /* If we are taking the address of a constant and are at the\n+\t top level, we have to use output_constant_def since we can't\n+\t call force_const_mem at top level.  */\n+      else if (cfun == 0\n+\t       && (TREE_CODE (TREE_OPERAND (exp, 0)) == CONSTRUCTOR\n+\t\t   || (TREE_CODE_CLASS (TREE_CODE (TREE_OPERAND (exp, 0)))\n+\t\t       == 'c')))\n+\top0 = XEXP (output_constant_def (TREE_OPERAND (exp, 0), 0), 0);\n       else\n \t{\n \t  /* We make sure to pass const0_rtx down if we came in with"}]}