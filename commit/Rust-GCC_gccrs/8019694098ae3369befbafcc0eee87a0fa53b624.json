{"sha": "8019694098ae3369befbafcc0eee87a0fa53b624", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAxOTY5NDA5OGFlMzM2OWJlZmJhZmNjMGVlZTg3YTBmYTUzYjYyNA==", "commit": {"author": {"name": "Daniel Carrera", "email": "dcarrera@gmail.com", "date": "2011-07-14T15:49:00Z"}, "committer": {"name": "Daniel Carrera", "email": "dcarrera@gcc.gnu.org", "date": "2011-07-14T15:49:00Z"}, "message": "Remove error parameter from caf_runtime_error. Add caf_runtime_error to single.c.\n\nFrom-SVN: r176278", "tree": {"sha": "bae7b58afeb4f7026e375c3a6fe38fd2a7cb64c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bae7b58afeb4f7026e375c3a6fe38fd2a7cb64c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8019694098ae3369befbafcc0eee87a0fa53b624", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8019694098ae3369befbafcc0eee87a0fa53b624", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8019694098ae3369befbafcc0eee87a0fa53b624", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8019694098ae3369befbafcc0eee87a0fa53b624/comments", "author": {"login": "dcarrera", "id": 89128, "node_id": "MDQ6VXNlcjg5MTI4", "avatar_url": "https://avatars.githubusercontent.com/u/89128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcarrera", "html_url": "https://github.com/dcarrera", "followers_url": "https://api.github.com/users/dcarrera/followers", "following_url": "https://api.github.com/users/dcarrera/following{/other_user}", "gists_url": "https://api.github.com/users/dcarrera/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcarrera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcarrera/subscriptions", "organizations_url": "https://api.github.com/users/dcarrera/orgs", "repos_url": "https://api.github.com/users/dcarrera/repos", "events_url": "https://api.github.com/users/dcarrera/events{/privacy}", "received_events_url": "https://api.github.com/users/dcarrera/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d772f97cb639014ca02c6109e902cf1d1280af10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d772f97cb639014ca02c6109e902cf1d1280af10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d772f97cb639014ca02c6109e902cf1d1280af10"}], "stats": {"total": 51, "additions": 39, "deletions": 12}, "files": [{"sha": "689d8a7042afff986f56997e9218f6220e7a1d08", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8019694098ae3369befbafcc0eee87a0fa53b624/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8019694098ae3369befbafcc0eee87a0fa53b624/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=8019694098ae3369befbafcc0eee87a0fa53b624", "patch": "@@ -1,3 +1,16 @@\n+2011-07-14  Daniel Carrera  <dcarrera@gmail.com>\n+\n+\t* caf/single.c:  Include stdarg.h header.\n+\t(caf_runtime_error): New function. Use \"exit(EXIT_FAILURE)\".\n+\t(_gfortran_caf_register): Use caf_runtime_error.\n+\t(_gfortran_caf_sync_images): Use \"exit(EXIT_FAILURE)\".\n+\t* caf/mpi.c (caf_runtime_error): Remove \"error\" parameter.\n+\tReturn EXIT_FAILURE instead.\n+\t(_gfortran_caf_register): Update call to caf_runtime_error.\n+\t(_gfortran_caf_sync_all): Ditto.\n+\t(_gfortran_caf_sync_images): Ditto.\n+\t(_gfortran_caf_error_stop_str): Use \"exit(EXIT_FAILURE)\".\n+\n 2011-07-13  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR libfortran/49296"}, {"sha": "4bfcbb50832d15af19c646f61c71384c1ced408c", "filename": "libgfortran/caf/mpi.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8019694098ae3369befbafcc0eee87a0fa53b624/libgfortran%2Fcaf%2Fmpi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8019694098ae3369befbafcc0eee87a0fa53b624/libgfortran%2Fcaf%2Fmpi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fcaf%2Fmpi.c?ref=8019694098ae3369befbafcc0eee87a0fa53b624", "patch": "@@ -47,8 +47,9 @@ static int caf_is_finalized;\n caf_static_t *caf_static_list = NULL;\n \n \n+/* Keep in sync with single.c.  */\n static void\n-caf_runtime_error (int error, const char *message, ...)\n+caf_runtime_error (const char *message, ...)\n {\n   va_list ap;\n   fprintf (stderr, \"Fortran runtime error on image %d: \", caf_this_image);\n@@ -59,10 +60,10 @@ caf_runtime_error (int error, const char *message, ...)\n \n   /* FIXME: Shutdown the Fortran RTL to flush the buffer.  PR 43849.  */\n   /* FIXME: Do some more effort than just MPI_ABORT.  */\n-  MPI_Abort (MPI_COMM_WORLD, error);\n+  MPI_Abort (MPI_COMM_WORLD, EXIT_FAILURE);\n \n   /* Should be unreachable, but to make sure also call exit.  */\n-  exit (2);\n+  exit (EXIT_FAILURE);\n }\n \n \n@@ -179,7 +180,7 @@ _gfortran_caf_register (ptrdiff_t size, caf_register_t type, void **token,\n \t  }\n       }\n     else\n-      caf_runtime_error (caf_is_finalized ? STAT_STOPPED_IMAGE : 1, msg);\n+      caf_runtime_error (msg);\n   }\n \n   return NULL;\n@@ -223,7 +224,7 @@ _gfortran_caf_sync_all (int *stat, char *errmsg, int errmsg_len)\n \t    memset (&errmsg[len], ' ', errmsg_len-len);\n \t}\n       else\n-\tcaf_runtime_error (caf_is_finalized ? STAT_STOPPED_IMAGE : ierr, msg);\n+\tcaf_runtime_error (msg);\n     }\n }\n \n@@ -291,7 +292,7 @@ _gfortran_caf_sync_images (int count, int images[], int *stat, char *errmsg,\n \t    memset (&errmsg[len], ' ', errmsg_len-len);\n \t}\n       else\n-\tcaf_runtime_error (caf_is_finalized ? STAT_STOPPED_IMAGE : ierr, msg);\n+\tcaf_runtime_error (msg);\n     }\n }\n "}, {"sha": "2258f2f3d016909e441ed64068abaa7b2afbb323", "filename": "libgfortran/caf/single.c", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8019694098ae3369befbafcc0eee87a0fa53b624/libgfortran%2Fcaf%2Fsingle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8019694098ae3369befbafcc0eee87a0fa53b624/libgfortran%2Fcaf%2Fsingle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fcaf%2Fsingle.c?ref=8019694098ae3369befbafcc0eee87a0fa53b624", "patch": "@@ -28,6 +28,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #include <stdio.h>  /* For fputs and fprintf.  */\n #include <stdlib.h> /* For exit and malloc.  */\n #include <string.h> /* For memcpy and memset.  */\n+#include <stdarg.h> /* For variadic arguments.  */\n \n /* Define GFC_CAF_CHECK to enable run-time checking.  */\n /* #define GFC_CAF_CHECK  1  */\n@@ -40,6 +41,21 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n caf_static_t *caf_static_list = NULL;\n \n \n+/* Keep in sync with mpi.c.  */\n+static void\n+caf_runtime_error (const char *message, ...)\n+{\n+  va_list ap;\n+  fprintf (stderr, \"Fortran runtime error: \");\n+  va_start (ap, message);\n+  fprintf (stderr, message, ap);\n+  va_end (ap);\n+  fprintf (stderr, \"\\n\");\n+\n+  /* FIXME: Shutdown the Fortran RTL to flush the buffer.  PR 43849.  */\n+  exit (EXIT_FAILURE);\n+}\n+\n void\n _gfortran_caf_init (int *argc __attribute__ ((unused)),\n \t\t    char ***argv __attribute__ ((unused)),\n@@ -73,12 +89,12 @@ _gfortran_caf_register (ptrdiff_t size, caf_register_t type, void **token,\n \n   if (unlikely (local == NULL || token == NULL))\n     {\n+      const char msg[] = \"Failed to allocate coarray\";\n       if (stat)\n \t{\n \t  *stat = 1;\n \t  if (errmsg_len > 0)\n \t    {\n-\t      const char msg[] = \"Failed to allocate coarray\";\n \t      int len = ((int) sizeof (msg) > errmsg_len) ? errmsg_len\n \t\t\t\t\t\t\t  : (int) sizeof (msg);\n \t      memcpy (errmsg, msg, len);\n@@ -88,10 +104,7 @@ _gfortran_caf_register (ptrdiff_t size, caf_register_t type, void **token,\n \t  return NULL;\n \t}\n       else\n-\t{\n-\t  fprintf (stderr, \"ERROR: Failed to allocate coarray\");\n-\t  exit (1);\n-\t}\n+\t  caf_runtime_error (msg);\n     }\n \n   if (stat)\n@@ -140,7 +153,7 @@ _gfortran_caf_sync_images (int count __attribute__ ((unused)),\n       {\n \tfprintf (stderr, \"COARRAY ERROR: Invalid image index %d to SYNC \"\n \t\t \"IMAGES\", images[i]);\n-\texit (1);\n+\texit (EXIT_FAILURE);\n       }\n #endif\n "}]}