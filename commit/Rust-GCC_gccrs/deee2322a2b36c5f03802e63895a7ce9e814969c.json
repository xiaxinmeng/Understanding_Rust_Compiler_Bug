{"sha": "deee2322a2b36c5f03802e63895a7ce9e814969c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVlZTIzMjJhMmIzNmM1ZjAzODAyZTYzODk1YTdjZTllODE0OTY5Yw==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-08-18T00:16:26Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-08-18T00:16:26Z"}, "message": "Daily bump.", "tree": {"sha": "5a023f66fef1960c4e9144acf77115b5f6127b5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a023f66fef1960c4e9144acf77115b5f6127b5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/deee2322a2b36c5f03802e63895a7ce9e814969c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deee2322a2b36c5f03802e63895a7ce9e814969c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/deee2322a2b36c5f03802e63895a7ce9e814969c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deee2322a2b36c5f03802e63895a7ce9e814969c/comments", "author": null, "committer": null, "parents": [{"sha": "f99dc8f89ddd5b93d9cd0a32ac22f60b211a39af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f99dc8f89ddd5b93d9cd0a32ac22f60b211a39af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f99dc8f89ddd5b93d9cd0a32ac22f60b211a39af"}], "stats": {"total": 126, "additions": 125, "deletions": 1}, "files": [{"sha": "59d7ae48134feba41f003cd71a3901cc51336ecb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deee2322a2b36c5f03802e63895a7ce9e814969c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deee2322a2b36c5f03802e63895a7ce9e814969c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=deee2322a2b36c5f03802e63895a7ce9e814969c", "patch": "@@ -1,3 +1,53 @@\n+2020-08-17  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386-builtin.def (__builtin_ia32_bextri_u32)\n+\t(__builtin_ia32_bextri_u64): Use CODE_FOR_nothing.\n+\t* config/i386/i386.md (@tbm_bextri_<mode>):\n+\tImplement as parametrized name pattern.\n+\t(@rdrand<mode>): Ditto.\n+\t(@rdseed<mode>): Ditto.\n+\t* config/i386/i386-expand.c (ix86_expand_builtin)\n+\t[case IX86_BUILTIN_BEXTRI32, case IX86_BUILTIN_BEXTRI64]:\n+\tUpdate for parameterized name patterns.\n+\t[case IX86_BUILTIN_RDRAND16_STEP, case IX86_BUILTIN_RDRAND32_STEP]\n+\t[case IX86_BUILTIN_RDRAND64_STEP]: Ditto.\n+\t[case IX86_BUILTIN_RDSEED16_STEP, case IX86_BUILTIN_RDSEED32_STEP]\n+\t[case IX86_BUILTIN_RDSEED64_STEP]: Ditto.\n+\n+2020-08-17  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* vr-values.c (vr_values::get_value_range): Add stmt param.\n+\t(vr_values::extract_range_from_comparison): Same.\n+\t(vr_values::extract_range_from_assignment): Pass stmt to\n+\textract_range_from_comparison.\n+\t(vr_values::adjust_range_with_scev): Pass stmt to get_value_range.\n+\t(simplify_using_ranges::vrp_evaluate_conditional): Add stmt param.\n+\tPass stmt to get_value_range.\n+\t(simplify_using_ranges::vrp_visit_cond_stmt): Pass stmt to\n+\tget_value_range.\n+\t(simplify_using_ranges::simplify_abs_using_ranges): Same.\n+\t(simplify_using_ranges::simplify_div_or_mod_using_ranges): Same.\n+\t(simplify_using_ranges::simplify_bit_ops_using_ranges): Same.\n+\t(simplify_using_ranges::simplify_cond_using_ranges_1): Same.\n+\t(simplify_using_ranges::simplify_switch_using_ranges): Same.\n+\t(simplify_using_ranges::simplify_float_conversion_using_ranges): Same.\n+\t* vr-values.h (class vr_values): Add stmt arg to\n+\tvrp_evaluate_conditional_warnv_with_ops.\n+\tAdd stmt arg to extract_range_from_comparison and get_value_range.\n+\t(simplify_using_ranges::get_value_range): Add stmt arg.\n+\n+2020-08-17  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/96350\n+\t* config/i386/i386.c (ix86_legitimate_constant_p): Return\n+\tfalse for ENDBR immediate.\n+\t(ix86_legitimate_address_p): Ditto.\n+\t* config/i386/predicates.md\n+\t(x86_64_immediate_operand): Exclude ENDBR immediate.\n+\t(x86_64_zext_immediate_operand): Ditto.\n+\t(x86_64_dwzext_immediate_operand): Ditto.\n+\t(ix86_endbr_immediate_operand): New predicate.\n+\n 2020-08-16  Roger Sayle  <roger@nextmovesoftware.com>\n \n \t* simplify-rtx.c (simplify_unary_operation_1) [SIGN_EXTEND]:"}, {"sha": "3b29b8dc1240db480c6c42ffac23de116b8b164f", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deee2322a2b36c5f03802e63895a7ce9e814969c/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deee2322a2b36c5f03802e63895a7ce9e814969c/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=deee2322a2b36c5f03802e63895a7ce9e814969c", "patch": "@@ -1 +1 @@\n-20200817\n+20200818"}, {"sha": "adf20ed460a9ce8ad6e62bd54499a2fc4bf97f83", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deee2322a2b36c5f03802e63895a7ce9e814969c/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deee2322a2b36c5f03802e63895a7ce9e814969c/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=deee2322a2b36c5f03802e63895a7ce9e814969c", "patch": "@@ -1,3 +1,21 @@\n+2020-08-17  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/96644\n+\t* region-model-manager.cc (get_region_for_unexpected_tree_code):\n+\tHandle ctxt being NULL.\n+\n+2020-08-17  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/96639\n+\t* region.cc (region::get_subregions_for_binding): Check for \"type\"\n+\tbeing NULL.\n+\n+2020-08-17  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/96642\n+\t* store.cc (get_svalue_for_ctor_val): New.\n+\t(binding_map::apply_ctor_to_region): Call it.\n+\n 2020-08-14  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR testsuite/96609"}, {"sha": "25f968e9090d54991144e811d1ad23507d9d3b79", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deee2322a2b36c5f03802e63895a7ce9e814969c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deee2322a2b36c5f03802e63895a7ce9e814969c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=deee2322a2b36c5f03802e63895a7ce9e814969c", "patch": "@@ -1,3 +1,14 @@\n+2020-08-17  Martin Liska  <mliska@suse.cz>\n+\n+\t* openmp.c (resolve_omp_clauses): Add static assert\n+\tfor OMP_LIST_NUM and size of clause_names array.\n+\tRemove check that is always true.\n+\n+2020-08-17  Martin Liska  <mliska@suse.cz>\n+\n+\t* openmp.c (resolve_omp_clauses): Add NONTEMPORAL to clause\n+\tnames.\n+\n 2020-08-13  Andre Vehreschild  <vehre@gcc.gnu.org>\n \n \tPR fortran/93671"}, {"sha": "b0c4bc96d7d9a024e652775e36e9b135578c679b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deee2322a2b36c5f03802e63895a7ce9e814969c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deee2322a2b36c5f03802e63895a7ce9e814969c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=deee2322a2b36c5f03802e63895a7ce9e814969c", "patch": "@@ -1,3 +1,28 @@\n+2020-08-17  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/96644\n+\t* gcc.dg/analyzer/pr96644.c: New test.\n+\n+2020-08-17  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/96639\n+\t* gcc.dg/analyzer/pr96639.c: New test.\n+\n+2020-08-17  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/96642\n+\t* gcc.dg/analyzer/pr96642.c: New test.\n+\n+2020-08-17  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/rdrand-1.c (dg-final): Update scan string.\n+\t* gcc.target/i386/rdrand-2.c (dg-final): Ditto.\n+\t* gcc.target/i386/rdrand-3.c (dg-final): Ditto.\n+\n+2020-08-17  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/endbr_immediate.c: New test.\n+\n 2020-08-14  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/78257"}, {"sha": "9b868d3fe23b0bc8773ddffb858d3bb2ca6aec33", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deee2322a2b36c5f03802e63895a7ce9e814969c/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deee2322a2b36c5f03802e63895a7ce9e814969c/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=deee2322a2b36c5f03802e63895a7ce9e814969c", "patch": "@@ -1,3 +1,8 @@\n+2020-08-17  David Edelsohn  <dje.gcc@gmail.com>\n+\t    Clement Chigot  <clement.chigot@atos.net>\n+\n+\t* config/t-aix: Add complementary mode object file to libcaf_single.a.\n+\n 2020-08-03  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* caf/single.c (_gfortran_caf_lock): Fix typo."}, {"sha": "177acf0d0d83e9bdbcbe87049a466432d9a52a43", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deee2322a2b36c5f03802e63895a7ce9e814969c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deee2322a2b36c5f03802e63895a7ce9e814969c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=deee2322a2b36c5f03802e63895a7ce9e814969c", "patch": "@@ -1,3 +1,18 @@\n+2020-08-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/55713\n+\tPR libstdc++/71096\n+\tPR libstdc++/93147\n+\t* include/std/tuple [__has_cpp_attribute(no_unique_address)]\n+\t(_Head_base<Idx, Head, true>): New definition of the partial\n+\tspecialization, using [[no_unique_address]] instead of\n+\tinheritance.\n+\t* testsuite/libstdc++-prettyprinters/48362.cc: Adjust expected\n+\toutput.\n+\t* testsuite/20_util/tuple/comparison_operators/93147.cc: New test.\n+\t* testsuite/20_util/tuple/creation_functions/55713.cc: New test.\n+\t* testsuite/20_util/tuple/element_access/71096.cc: New test.\n+\n 2020-08-14  Lewis Hyatt  <lhyatt@gmail.com>\n \n \t* testsuite/lib/libstdc++.exp: Use the new option"}]}