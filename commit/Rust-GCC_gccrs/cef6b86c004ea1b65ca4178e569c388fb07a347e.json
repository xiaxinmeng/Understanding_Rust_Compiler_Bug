{"sha": "cef6b86c004ea1b65ca4178e569c388fb07a347e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2VmNmI4NmMwMDRlYTFiNjVjYTQxNzhlNTY5YzM4OGZiMDdhMzQ3ZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2006-08-09T16:38:45Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2006-08-09T16:38:45Z"}, "message": "rs6000.c (print_operand): Fix comment and adjust.\n\n\t* config/rs6000/rs6000.c (print_operand) <D>: Fix comment and adjust.\n\t(rs6000_generate_compare): Tweak comments.\n\t* config/rs6000/rs6000.md (UNSPEC_MV_CR_GT): Fix comment.\n\nFrom-SVN: r116041", "tree": {"sha": "cbfcedff7be2fe615e69736cecd53aaf551a0dd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbfcedff7be2fe615e69736cecd53aaf551a0dd8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cef6b86c004ea1b65ca4178e569c388fb07a347e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cef6b86c004ea1b65ca4178e569c388fb07a347e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cef6b86c004ea1b65ca4178e569c388fb07a347e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cef6b86c004ea1b65ca4178e569c388fb07a347e/comments", "author": null, "committer": null, "parents": [{"sha": "9e7ef3a8817b56393718469bc2f82d7855f684a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e7ef3a8817b56393718469bc2f82d7855f684a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e7ef3a8817b56393718469bc2f82d7855f684a3"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "c6d24ddb57de5b7686f5f581ef891d7821199a4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cef6b86c004ea1b65ca4178e569c388fb07a347e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cef6b86c004ea1b65ca4178e569c388fb07a347e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cef6b86c004ea1b65ca4178e569c388fb07a347e", "patch": "@@ -1,3 +1,9 @@\n+2006-08-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/rs6000/rs6000.c (print_operand) <D>: Fix comment and adjust.\n+\t(rs6000_generate_compare): Tweak comments.\n+\t* config/rs6000/rs6000.md (UNSPEC_MV_CR_GT): Fix comment.\n+\n 2006-08-09  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* var-tracking.c (enum micro_operation_type): Add MO_COPY."}, {"sha": "47734a418663d95df7f690c589b9179dcdf4789d", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cef6b86c004ea1b65ca4178e569c388fb07a347e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cef6b86c004ea1b65ca4178e569c388fb07a347e/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=cef6b86c004ea1b65ca4178e569c388fb07a347e", "patch": "@@ -10283,13 +10283,14 @@ print_operand (FILE *file, rtx x, int code)\n       return;\n \n     case 'D':\n-      /* Like 'J' but get to the EQ bit.  */\n+      /* Like 'J' but get to the GT bit only.  */\n       gcc_assert (GET_CODE (x) == REG);\n \n-      /* Bit 1 is EQ bit.  */\n-      i = 4 * (REGNO (x) - CR0_REGNO) + 2;\n+      /* Bit 1 is GT bit.  */\n+      i = 4 * (REGNO (x) - CR0_REGNO) + 1;\n \n-      fprintf (file, \"%d\", i);\n+      /* Add one for shift count in rlinm for scc.  */\n+      fprintf (file, \"%d\", i + 1);\n       return;\n \n     case 'E':\n@@ -11086,7 +11087,7 @@ rs6000_generate_compare (enum rtx_code code)\n   /* First, the compare.  */\n   compare_result = gen_reg_rtx (comp_mode);\n \n-  /* SPE FP compare instructions on the GPRs.  Yuck!  */\n+  /* E500 FP compare instructions on the GPRs.  Yuck!  */\n   if ((TARGET_E500 && !TARGET_FPRS && TARGET_HARD_FLOAT)\n       && rs6000_compare_fp_p)\n     {\n@@ -11096,8 +11097,8 @@ rs6000_generate_compare (enum rtx_code code)\n       if (op_mode == VOIDmode)\n \top_mode = GET_MODE (rs6000_compare_op1);\n \n-      /* Note: The E500 comparison instructions set the GT bit (x +\n-\t 1), on success.  This explains the mess.  */\n+      /* The E500 FP compare instructions toggle the GT bit (CR bit 1) only.\n+\t This explains the following mess.  */\n \n       switch (code)\n \t{"}, {"sha": "92590a70db56d20226c4a5fc63a47bc7d00aa600", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cef6b86c004ea1b65ca4178e569c388fb07a347e/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cef6b86c004ea1b65ca4178e569c388fb07a347e/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=cef6b86c004ea1b65ca4178e569c388fb07a347e", "patch": "@@ -55,7 +55,7 @@\n    (UNSPEC_TLSGOTTPREL\t\t28)\n    (UNSPEC_TLSTLS\t\t29)\n    (UNSPEC_FIX_TRUNC_TF\t\t30)\t; fadd, rounding towards zero\n-   (UNSPEC_MV_CR_GT\t\t31)\t; move_from_CR_eq_bit\n+   (UNSPEC_MV_CR_GT\t\t31)\t; move_from_CR_gt_bit\n    (UNSPEC_STFIWX\t\t32)\n    (UNSPEC_POPCNTB\t\t33)\n    (UNSPEC_FRES\t\t\t34)"}]}