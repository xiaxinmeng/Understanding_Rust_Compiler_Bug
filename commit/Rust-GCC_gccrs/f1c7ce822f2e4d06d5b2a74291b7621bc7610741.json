{"sha": "f1c7ce822f2e4d06d5b2a74291b7621bc7610741", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFjN2NlODIyZjJlNGQwNmQ1YjJhNzQyOTFiNzYyMWJjNzYxMDc0MQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-10-11T03:23:10Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-10-11T03:23:10Z"}, "message": "pa.c (legitimize_pic_address): Delete unused variables.\n\n\t* pa.c (legitimize_pic_address): Delete unused variables.\n\t(output_block_move, output_ior): Likewise.\n\t(hppa_builtin_saveregs): Likewise.\n\t(emit_move_sequence): Add parens as suggested by -Wall.\n\t(compute_frame_size): Likewise.\n\t(output_ascii): Return type is \"void\".\n\t(hppa_expand_prologue, import_milli): Likewise.\n\nFrom-SVN: r5726", "tree": {"sha": "55be3af0db3cb9625f10b2d48ad89e21d2ba404e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55be3af0db3cb9625f10b2d48ad89e21d2ba404e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1c7ce822f2e4d06d5b2a74291b7621bc7610741", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1c7ce822f2e4d06d5b2a74291b7621bc7610741", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1c7ce822f2e4d06d5b2a74291b7621bc7610741", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1c7ce822f2e4d06d5b2a74291b7621bc7610741/comments", "author": null, "committer": null, "parents": [{"sha": "bf0add700f0d605df10d2081911b56ced7386b84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf0add700f0d605df10d2081911b56ced7386b84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf0add700f0d605df10d2081911b56ced7386b84"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "83590e559a300b54fdaf1e219d3d4215a96c47ed", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1c7ce822f2e4d06d5b2a74291b7621bc7610741/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1c7ce822f2e4d06d5b2a74291b7621bc7610741/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=f1c7ce822f2e4d06d5b2a74291b7621bc7610741", "patch": "@@ -484,7 +484,7 @@ legitimize_pic_address (orig, mode, reg)\n     }\n   else if (GET_CODE (orig) == CONST)\n     {\n-      rtx base, offset;\n+      rtx base;\n \n       if (GET_CODE (XEXP (orig, 0)) == PLUS\n \t  && XEXP (XEXP (orig, 0), 0) == pic_offset_table_rtx)\n@@ -854,7 +854,7 @@ emit_move_sequence (operands, mode, scratch_reg)\n     }\n \n   /* Simplify the source if we need to.  */\n-  if (GET_CODE (operand1) != HIGH && immediate_operand (operand1, mode)\n+  if ((GET_CODE (operand1) != HIGH && immediate_operand (operand1, mode))\n       || (GET_CODE (operand1) == HIGH\n \t  && symbolic_operand (XEXP (operand1, 0), mode)))\n     {\n@@ -1393,7 +1393,6 @@ output_block_move (operands, size_is_constant)\n \n   if (size_is_constant)\n     {\n-      unsigned long n_items;\n       unsigned long offset;\n       rtx temp;\n \n@@ -1567,9 +1566,7 @@ compute_movstrsi_length (insn)\n \n   if (size_is_constant)\n     {\n-      unsigned long n_items;\n       unsigned long offset;\n-      rtx temp;\n \n       if (n_bytes == 0)\n \treturn 0;\n@@ -1705,7 +1702,7 @@ output_ior (operands)\n      rtx *operands;\n {\n   unsigned mask = INTVAL (operands[2]);\n-  int bs0, bs1, bs2, p, len;\n+  int bs0, bs1, p, len;\n  \n   if (INTVAL (operands[2]) == 0)\n     return \"copy %1,%0\";\n@@ -1730,6 +1727,7 @@ output_ior (operands)\n }\n \f\n /* Output an ascii string.  */\n+void\n output_ascii (file, p, size)\n      FILE *file;\n      unsigned char *p;\n@@ -1999,7 +1997,7 @@ compute_frame_size (size, fregs_live)\n   fsize += current_function_outgoing_args_size;\n   if (! leaf_function_p () || fsize)\n     fsize += 32;\n-  return fsize + 63 & ~63;\n+  return (fsize + 63) & ~63;\n }\n      \n rtx hp_profile_label_rtx;\n@@ -2044,6 +2042,7 @@ output_function_prologue (file, size)\n     sprintf(hp_profile_label_name, \"LP$%04d\", hp_profile_labelno);\n }\n \n+void\n hppa_expand_prologue()\n {\n \n@@ -3022,7 +3021,7 @@ static char *milli_names[] = {\"remI\", \"remU\", \"divI\", \"divU\", \"mulI\", \"mulU\"};\n static char import_string[] = \".IMPORT $$....,MILLICODE\";\n #define MILLI_START 10\n \n-static int\n+static void\n import_milli (code)\n      enum millicodes code;\n {\n@@ -3324,7 +3323,7 @@ struct rtx_def *\n hppa_builtin_saveregs (arglist)\n      tree arglist;\n {\n-  rtx block, float_addr, offset, float_mem;\n+  rtx offset;\n   tree fntype = TREE_TYPE (current_function_decl);\n   int argadj = ((!(TYPE_ARG_TYPES (fntype) != 0\n \t\t   && (TREE_VALUE (tree_last (TYPE_ARG_TYPES (fntype)))"}]}