{"sha": "92d545925396fd4588681b0fec6d7d4477eb6aec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJkNTQ1OTI1Mzk2ZmQ0NTg4NjgxYjBmZWM2ZDdkNDQ3N2ViNmFlYw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-01-24T08:16:14Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-01-24T08:16:14Z"}, "message": "reload1.c (emit_reload_insns): Pass the reload register for a non-spill output reload through forget_old_reloads_1.\n\ngcc/\n\t* reload1.c (emit_reload_insns): Pass the reload register\n\tfor a non-spill output reload through forget_old_reloads_1.\n\nFrom-SVN: r121105", "tree": {"sha": "a3fabf06cb4bb14cd5c2965e324b64d493b67d2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3fabf06cb4bb14cd5c2965e324b64d493b67d2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92d545925396fd4588681b0fec6d7d4477eb6aec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92d545925396fd4588681b0fec6d7d4477eb6aec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92d545925396fd4588681b0fec6d7d4477eb6aec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92d545925396fd4588681b0fec6d7d4477eb6aec/comments", "author": null, "committer": null, "parents": [{"sha": "7122aa3b32c2e6d4c0de1565586b1f3735b6b9f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7122aa3b32c2e6d4c0de1565586b1f3735b6b9f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7122aa3b32c2e6d4c0de1565586b1f3735b6b9f4"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "b1946e83e7e04c9d5a17636836309e83e964c655", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92d545925396fd4588681b0fec6d7d4477eb6aec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92d545925396fd4588681b0fec6d7d4477eb6aec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=92d545925396fd4588681b0fec6d7d4477eb6aec", "patch": "@@ -1,3 +1,8 @@\n+2007-01-24  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* reload1.c (emit_reload_insns): Pass the reload register\n+\tfor a non-spill output reload through forget_old_reloads_1.\n+\n 2007-01-23  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): Define"}, {"sha": "8f7c703c41519038559c5a487c5be592d058982d", "filename": "gcc/reload1.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92d545925396fd4588681b0fec6d7d4477eb6aec/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92d545925396fd4588681b0fec6d7d4477eb6aec/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=92d545925396fd4588681b0fec6d7d4477eb6aec", "patch": "@@ -7561,6 +7561,23 @@ emit_reload_insns (struct insn_chain *chain)\n \t  rtx out = ((rld[r].out && REG_P (rld[r].out))\n \t\t     ? rld[r].out : rld[r].out_reg);\n \t  int nregno = REGNO (out);\n+\n+\t  /* REG_RTX is now set or clobbered by the main instruction.\n+\t     As the comment above explains, forget_old_reloads_1 only\n+\t     sees the original instruction, and there is no guarantee\n+\t     that the original instruction also clobbered REG_RTX.\n+\t     For example, if find_reloads sees that the input side of\n+\t     a matched operand pair dies in this instruction, it may\n+\t     use the input register as the reload register.\n+\n+\t     Calling forget_old_reloads_1 is a waste of effort if\n+\t     REG_RTX is also the output register.\n+\n+\t     If we know that REG_RTX holds the value of a pseudo\n+\t     register, the code after the call will record that fact.  */\n+\t  if (rld[r].reg_rtx && rld[r].reg_rtx != out)\n+\t    forget_old_reloads_1 (rld[r].reg_rtx, NULL_RTX, NULL);\n+\n \t  if (nregno >= FIRST_PSEUDO_REGISTER)\n \t    {\n \t      rtx src_reg, store_insn = NULL_RTX;"}]}