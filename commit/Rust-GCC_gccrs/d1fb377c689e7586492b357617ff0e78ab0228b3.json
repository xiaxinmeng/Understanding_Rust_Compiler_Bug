{"sha": "d1fb377c689e7586492b357617ff0e78ab0228b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFmYjM3N2M2ODllNzU4NjQ5MmIzNTc2MTdmZjBlNzhhYjAyMjhiMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-01-22T21:15:41Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-01-22T21:15:41Z"}, "message": "Constrain std::valarray functions and operators\n\n\tPR libstdc++/69116\n\t* include/bits/valarray_before.h (__fun, __fun_with_valarray): Only\n\tdefine result_type for types which can be safely used with valarrays.\n\t* testsuite/26_numerics/valarray/69116.cc: New.\n\nFrom-SVN: r232748", "tree": {"sha": "ad7a4f7f4f4601b73ba194c275b74794cfdb2ca5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad7a4f7f4f4601b73ba194c275b74794cfdb2ca5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1fb377c689e7586492b357617ff0e78ab0228b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1fb377c689e7586492b357617ff0e78ab0228b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1fb377c689e7586492b357617ff0e78ab0228b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1fb377c689e7586492b357617ff0e78ab0228b3/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "130ee9a9fc802926d2fe2701e041c98a6fb0f981", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/130ee9a9fc802926d2fe2701e041c98a6fb0f981", "html_url": "https://github.com/Rust-GCC/gccrs/commit/130ee9a9fc802926d2fe2701e041c98a6fb0f981"}], "stats": {"total": 72, "additions": 70, "deletions": 2}, "files": [{"sha": "f7e4ea0224b7a5759677dda543ca7476edbf09d5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1fb377c689e7586492b357617ff0e78ab0228b3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1fb377c689e7586492b357617ff0e78ab0228b3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d1fb377c689e7586492b357617ff0e78ab0228b3", "patch": "@@ -1,5 +1,10 @@\n 2016-01-22  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/69116\n+\t* include/bits/valarray_before.h (__fun, __fun_with_valarray): Only\n+\tdefine result_type for types which can be safely used with valarrays.\n+\t* testsuite/26_numerics/valarray/69116.cc: New.\n+\n \tPR libstdc++/69413\n \t* config/os/gnu-linux/os_defines.h: Define\n \t_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC."}, {"sha": "86136f438ce819d36a81fcf85a9e59b8fac5f691", "filename": "libstdc++-v3/include/bits/valarray_before.h", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1fb377c689e7586492b357617ff0e78ab0228b3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_before.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1fb377c689e7586492b357617ff0e78ab0228b3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_before.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvalarray_before.h?ref=d1fb377c689e7586492b357617ff0e78ab0228b3", "patch": "@@ -331,14 +331,24 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       { return pow(__x, __y); }\n   };\n \n+  template<typename _Tp, bool _IsValidValarrayValue = !__is_abstract(_Tp)>\n+    struct __fun_with_valarray\n+    {\n+      typedef _Tp result_type;\n+    };\n+\n+  template<typename _Tp>\n+    struct __fun_with_valarray<_Tp, false>\n+    {\n+      // No result type defined for invalid value types.\n+    };\n \n   // We need these bits in order to recover the return type of\n   // some functions/operators now that we're no longer using\n   // function templates.\n   template<typename, typename _Tp>\n-    struct __fun\n+    struct __fun : __fun_with_valarray<_Tp>\n     {\n-      typedef _Tp result_type;\n     };\n \n   // several specializations for relational operators."}, {"sha": "ef9826778cf07822d568a9c7da792f355870d236", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/69116.cc", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1fb377c689e7586492b357617ff0e78ab0228b3/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F69116.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1fb377c689e7586492b357617ff0e78ab0228b3/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F69116.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F69116.cc?ref=d1fb377c689e7586492b357617ff0e78ab0228b3", "patch": "@@ -0,0 +1,53 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++98\" }\n+\n+// libstdc++/69116\n+\n+#include <exception>\n+#include <valarray>\n+\n+template<typename T>\n+  void foo(const T&) { }\n+\n+struct X : std::exception // makes namespace std an associated namespace\n+{\n+  virtual void pure() = 0;\n+\n+  typedef void(*func_type)(const X&);\n+\n+  void operator+(func_type) const;\n+  void operator-(func_type) const;\n+  void operator*(func_type) const;\n+  void operator/(func_type) const;\n+  void operator%(func_type) const;\n+  void operator<<(func_type) const;\n+  void operator>>(func_type) const;\n+};\n+\n+void foo(X& x)\n+{\n+  x + foo;\n+  x - foo;\n+  x * foo;\n+  x / foo;\n+  x % foo;\n+  x << foo;\n+  x >> foo;\n+}"}]}