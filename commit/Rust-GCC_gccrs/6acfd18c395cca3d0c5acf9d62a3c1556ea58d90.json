{"sha": "6acfd18c395cca3d0c5acf9d62a3c1556ea58d90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFjZmQxOGMzOTVjY2EzZDBjNWFjZjlkNjJhM2MxNTU2ZWE1OGQ5MA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-01-24T09:37:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-01-24T09:37:41Z"}, "message": "re PR tree-optimization/83176 ([graphite] ICE in set_codegen_error, at graphite-isl-ast-to-gimple.c:206)\n\n2018-01-24  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/83176\n\t* tree-chrec.c (chrec_fold_plus_1): Handle (signed T){(T) .. }\n\toperands.\n\n\t* gcc.dg/graphite/pr83176.c: New testcase.\n\nFrom-SVN: r257013", "tree": {"sha": "b490edd97925d19af2b4a4544a79365599ffc269", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b490edd97925d19af2b4a4544a79365599ffc269"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6acfd18c395cca3d0c5acf9d62a3c1556ea58d90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6acfd18c395cca3d0c5acf9d62a3c1556ea58d90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6acfd18c395cca3d0c5acf9d62a3c1556ea58d90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6acfd18c395cca3d0c5acf9d62a3c1556ea58d90/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da37a70f55338ef295bb1f7a39f9ef3e407835dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da37a70f55338ef295bb1f7a39f9ef3e407835dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da37a70f55338ef295bb1f7a39f9ef3e407835dd"}], "stats": {"total": 91, "additions": 87, "deletions": 4}, "files": [{"sha": "0e48b861c4fd785ae525aedf2bea6f215e29c177", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6acfd18c395cca3d0c5acf9d62a3c1556ea58d90/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6acfd18c395cca3d0c5acf9d62a3c1556ea58d90/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6acfd18c395cca3d0c5acf9d62a3c1556ea58d90", "patch": "@@ -1,3 +1,9 @@\n+2018-01-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/83176\n+\t* tree-chrec.c (chrec_fold_plus_1): Handle (signed T){(T) .. }\n+\toperands.\n+\n 2018-01-24  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/82819"}, {"sha": "b13ec74815a8a9a12cb1279beff78cb3d0f0d46b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6acfd18c395cca3d0c5acf9d62a3c1556ea58d90/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6acfd18c395cca3d0c5acf9d62a3c1556ea58d90/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6acfd18c395cca3d0c5acf9d62a3c1556ea58d90", "patch": "@@ -1,3 +1,8 @@\n+2018-01-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/83176\n+\t* gcc.dg/graphite/pr83176.c: New testcase.\n+\n 2018-01-24  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/82819"}, {"sha": "4c3df4436eaa1172e772481e1b8b8a82ef92578c", "filename": "gcc/testsuite/gcc.dg/graphite/pr83176.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6acfd18c395cca3d0c5acf9d62a3c1556ea58d90/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr83176.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6acfd18c395cca3d0c5acf9d62a3c1556ea58d90/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr83176.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr83176.c?ref=6acfd18c395cca3d0c5acf9d62a3c1556ea58d90", "patch": "@@ -0,0 +1,42 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -floop-nest-optimize\" } */\n+\n+int wx, qi;\n+\n+void\n+yj (int gw)\n+{\n+  int *ak = &gw;\n+\n+  while (wx != 0)\n+    {\n+      int k2 = (__INTPTR_TYPE__)&ak;\n+      int **xq = (int **)&k2;\n+\n+ja:\n+      *xq = &gw;\n+\n+      while (qi < 1)\n+\t{\n+\t  unsigned short int ey;\n+\n+be:\n+\t  for (ey = 0; ey < 251; ++ey)\n+\t    {\n+\t      for (wx = 0; wx < 2; ++wx)\n+\t\t{\n+\t\t}\n+\n+\t      *ak += 8555712;\n+\t      k2 += *ak;\n+\t    }\n+\t  ++qi;\n+\t}\n+    }\n+\n+  gw = 1;\n+  if (gw != 0)\n+    goto ja;\n+  else\n+    goto be;\n+}"}, {"sha": "896ff357842530af0c186e46715dca2ea2942f6e", "filename": "gcc/tree-chrec.c", "status": "modified", "additions": 34, "deletions": 4, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6acfd18c395cca3d0c5acf9d62a3c1556ea58d90/gcc%2Ftree-chrec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6acfd18c395cca3d0c5acf9d62a3c1556ea58d90/gcc%2Ftree-chrec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.c?ref=6acfd18c395cca3d0c5acf9d62a3c1556ea58d90", "patch": "@@ -295,8 +295,23 @@ chrec_fold_plus_1 (enum tree_code code, tree type,\n \t  return chrec_fold_plus_poly_poly (code, type, op0, op1);\n \n \tCASE_CONVERT:\n-\t  if (tree_contains_chrecs (op1, NULL))\n-\t    return chrec_dont_know;\n+\t  {\n+\t    /* We can strip sign-conversions to signed by performing the\n+\t       operation in unsigned.  */\n+\t    tree optype = TREE_TYPE (TREE_OPERAND (op1, 0));\n+\t    if (INTEGRAL_TYPE_P (type)\n+\t\t&& INTEGRAL_TYPE_P (optype)\n+\t\t&& tree_nop_conversion_p (type, optype)\n+\t\t&& TYPE_UNSIGNED (optype))\n+\t      return chrec_convert (type,\n+\t\t\t\t    chrec_fold_plus_1 (code, optype,\n+\t\t\t\t\t\t       chrec_convert (optype,\n+\t\t\t\t\t\t\t\t      op0, NULL),\n+\t\t\t\t\t\t       TREE_OPERAND (op1, 0)),\n+\t\t\t\t    NULL);\n+\t    if (tree_contains_chrecs (op1, NULL))\n+\t      return chrec_dont_know;\n+\t  }\n \t  /* FALLTHRU */\n \n \tdefault:\n@@ -313,8 +328,23 @@ chrec_fold_plus_1 (enum tree_code code, tree type,\n \t}\n \n     CASE_CONVERT:\n-      if (tree_contains_chrecs (op0, NULL))\n-\treturn chrec_dont_know;\n+      {\n+\t/* We can strip sign-conversions to signed by performing the\n+\t   operation in unsigned.  */\n+\ttree optype = TREE_TYPE (TREE_OPERAND (op0, 0));\n+\tif (INTEGRAL_TYPE_P (type)\n+\t    && INTEGRAL_TYPE_P (optype)\n+\t    && tree_nop_conversion_p (type, optype)\n+\t    && TYPE_UNSIGNED (optype))\n+\t  return chrec_convert (type,\n+\t\t\t\tchrec_fold_plus_1 (code, optype,\n+\t\t\t\t\t\t   TREE_OPERAND (op0, 0),\n+\t\t\t\t\t\t   chrec_convert (optype,\n+\t\t\t\t\t\t\t\t  op1, NULL)),\n+\t\t\t\tNULL);\n+\tif (tree_contains_chrecs (op0, NULL))\n+\t  return chrec_dont_know;\n+      }\n       /* FALLTHRU */\n \n     default:"}]}