{"sha": "201e8d9f82444403682cd583ce0a03e3e3dd2b73", "node_id": "C_kwDOANBUbNoAKDIwMWU4ZDlmODI0NDQ0MDM2ODJjZDU4M2NlMGEwM2UzZTNkZDJiNzM", "commit": {"author": {"name": "Lulu Cheng", "email": "chenglulu@loongson.cn", "date": "2022-07-29T01:44:52Z"}, "committer": {"name": "Lulu Cheng", "email": "chenglulu@loongson.cn", "date": "2022-07-29T06:58:39Z"}, "message": "LoongArch: Define the macro ASM_PREFERRED_EH_DATA_FORMAT by checking the assembler's support for eh_frame encoding.\n\n.eh_frame DW_EH_PE_pcrel encoding format is not supported by gas <= 2.39.\nCheck if the assembler support DW_EH_PE_PCREL encoding and define .eh_frame\nencoding type.\n\ngcc/ChangeLog:\n\n\t* config.in: Regenerate.\n\t* config/loongarch/loongarch.h (ASM_PREFERRED_EH_DATA_FORMAT):\n\tSelect the value of the macro definition according to whether\n\tHAVE_AS_EH_FRAME_PCREL_ENCODING_SUPPORT is defined.\n\t* configure: Regenerate.\n\t* configure.ac: Reinstate HAVE_AS_EH_FRAME_PCREL_ENCODING_SUPPORT test.", "tree": {"sha": "7821cdc35f8f9f3528c75062fe25b34cf4eb5d49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7821cdc35f8f9f3528c75062fe25b34cf4eb5d49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/201e8d9f82444403682cd583ce0a03e3e3dd2b73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/201e8d9f82444403682cd583ce0a03e3e3dd2b73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/201e8d9f82444403682cd583ce0a03e3e3dd2b73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/201e8d9f82444403682cd583ce0a03e3e3dd2b73/comments", "author": {"login": "chenglulu326", "id": 88083425, "node_id": "MDQ6VXNlcjg4MDgzNDI1", "avatar_url": "https://avatars.githubusercontent.com/u/88083425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenglulu326", "html_url": "https://github.com/chenglulu326", "followers_url": "https://api.github.com/users/chenglulu326/followers", "following_url": "https://api.github.com/users/chenglulu326/following{/other_user}", "gists_url": "https://api.github.com/users/chenglulu326/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenglulu326/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenglulu326/subscriptions", "organizations_url": "https://api.github.com/users/chenglulu326/orgs", "repos_url": "https://api.github.com/users/chenglulu326/repos", "events_url": "https://api.github.com/users/chenglulu326/events{/privacy}", "received_events_url": "https://api.github.com/users/chenglulu326/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenglulu326", "id": 88083425, "node_id": "MDQ6VXNlcjg4MDgzNDI1", "avatar_url": "https://avatars.githubusercontent.com/u/88083425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenglulu326", "html_url": "https://github.com/chenglulu326", "followers_url": "https://api.github.com/users/chenglulu326/followers", "following_url": "https://api.github.com/users/chenglulu326/following{/other_user}", "gists_url": "https://api.github.com/users/chenglulu326/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenglulu326/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenglulu326/subscriptions", "organizations_url": "https://api.github.com/users/chenglulu326/orgs", "repos_url": "https://api.github.com/users/chenglulu326/repos", "events_url": "https://api.github.com/users/chenglulu326/events{/privacy}", "received_events_url": "https://api.github.com/users/chenglulu326/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c0feae60aa2f1a29d2624399cbcc6b1a52cc07c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c0feae60aa2f1a29d2624399cbcc6b1a52cc07c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c0feae60aa2f1a29d2624399cbcc6b1a52cc07c"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "413b2bd36cb3b349d729f88a5208007758805f46", "filename": "gcc/config.in", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/201e8d9f82444403682cd583ce0a03e3e3dd2b73/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/201e8d9f82444403682cd583ce0a03e3e3dd2b73/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=201e8d9f82444403682cd583ce0a03e3e3dd2b73", "patch": "@@ -404,13 +404,19 @@\n #endif\n \n \n+/* Define if your assembler supports eh_frame pcrel encoding. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_AS_EH_FRAME_PCREL_ENCODING_SUPPORT\n+#endif\n+\n+\n /* Define if your assembler supports the R_PPC64_ENTRY relocation. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_AS_ENTRY_MARKERS\n #endif\n \n \n-/* Define if your assembler supports explicit relocations. */\n+/* Define if your assembler supports explicit relocation. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_AS_EXPLICIT_RELOCS\n #endif"}, {"sha": "8b1288961e49f38588dcc96a29333499456df8ba", "filename": "gcc/config/loongarch/loongarch.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/201e8d9f82444403682cd583ce0a03e3e3dd2b73/gcc%2Fconfig%2Floongarch%2Floongarch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/201e8d9f82444403682cd583ce0a03e3e3dd2b73/gcc%2Fconfig%2Floongarch%2Floongarch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Floongarch%2Floongarch.h?ref=201e8d9f82444403682cd583ce0a03e3e3dd2b73", "patch": "@@ -1127,8 +1127,13 @@ struct GTY (()) machine_function\n };\n #endif\n \n+#ifdef HAVE_AS_EH_FRAME_PCREL_ENCODING_SUPPORT\n+#define ASM_PREFERRED_EH_DATA_FORMAT(CODE, GLOBAL) \\\n+  (((GLOBAL) ? DW_EH_PE_indirect : 0) | DW_EH_PE_pcrel | DW_EH_PE_sdata4)\n+#else\n #define ASM_PREFERRED_EH_DATA_FORMAT(CODE, GLOBAL) \\\n   (((GLOBAL) ? DW_EH_PE_indirect : 0) | DW_EH_PE_absptr)\n+#endif\n \n /* Do emit .note.GNU-stack by default.  */\n #ifndef NEED_INDICATE_EXEC_STACK"}, {"sha": "05efa5b01efc55abc73450a2f39e813ba4798f9b", "filename": "gcc/configure", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/201e8d9f82444403682cd583ce0a03e3e3dd2b73/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/201e8d9f82444403682cd583ce0a03e3e3dd2b73/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=201e8d9f82444403682cd583ce0a03e3e3dd2b73", "patch": "@@ -28836,6 +28836,40 @@ if test $gcc_cv_as_loongarch_explicit_relocs = yes; then\n \n $as_echo \"#define HAVE_AS_EXPLICIT_RELOCS 1\" >>confdefs.h\n \n+fi\n+\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for eh_frame pcrel encoding support\" >&5\n+$as_echo_n \"checking assembler for eh_frame pcrel encoding support... \" >&6; }\n+if ${gcc_cv_as_loongarch_eh_frame_pcrel_encoding_support+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_as_loongarch_eh_frame_pcrel_encoding_support=no\n+  if test x$gcc_cv_as != x; then\n+    $as_echo '.cfi_startproc\n+       .cfi_personality 0x9b,a\n+       .cfi_lsda 0x1b,b\n+       .cfi_endproc' > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags  -o conftest.o conftest.s >&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+    then\n+\tgcc_cv_as_loongarch_eh_frame_pcrel_encoding_support=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_loongarch_eh_frame_pcrel_encoding_support\" >&5\n+$as_echo \"$gcc_cv_as_loongarch_eh_frame_pcrel_encoding_support\" >&6; }\n+if test $gcc_cv_as_loongarch_eh_frame_pcrel_encoding_support = yes; then\n+\n+$as_echo \"#define HAVE_AS_EH_FRAME_PCREL_ENCODING_SUPPORT 1\" >>confdefs.h\n+\n fi\n \n     ;;"}, {"sha": "f70b6c24fda7e002f64e74982edd2111e1d63142", "filename": "gcc/configure.ac", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/201e8d9f82444403682cd583ce0a03e3e3dd2b73/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/201e8d9f82444403682cd583ce0a03e3e3dd2b73/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=201e8d9f82444403682cd583ce0a03e3e3dd2b73", "patch": "@@ -5302,6 +5302,14 @@ x:\n       [a:pcalau12i $t0,%pc_hi20(a)],,\n       [AC_DEFINE(HAVE_AS_EXPLICIT_RELOCS, 1,\n \t  [Define if your assembler supports explicit relocation.])])\n+    gcc_GAS_CHECK_FEATURE([eh_frame pcrel encoding support],\n+      gcc_cv_as_loongarch_eh_frame_pcrel_encoding_support,,\n+      [.cfi_startproc\n+       .cfi_personality 0x9b,a\n+       .cfi_lsda 0x1b,b\n+       .cfi_endproc],,\n+      [AC_DEFINE(HAVE_AS_EH_FRAME_PCREL_ENCODING_SUPPORT, 1,\n+\t  [Define if your assembler supports eh_frame pcrel encoding.])])\n     ;;\n     s390*-*-*)\n     gcc_GAS_CHECK_FEATURE([.gnu_attribute support],"}]}