{"sha": "ea9be0775811e679b8c32cf11475ff4c432852fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE5YmUwNzc1ODExZTY3OWI4YzMyY2YxMTQ3NWZmNGM0MzI4NTJmYQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1995-03-15T20:01:18Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1995-03-15T20:01:18Z"}, "message": "Generate better code for sne on PowerPC.\n\nFrom-SVN: r9184", "tree": {"sha": "74f7244e64393c9d7af2b4e02acb9d2c04a718ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74f7244e64393c9d7af2b4e02acb9d2c04a718ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea9be0775811e679b8c32cf11475ff4c432852fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea9be0775811e679b8c32cf11475ff4c432852fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea9be0775811e679b8c32cf11475ff4c432852fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea9be0775811e679b8c32cf11475ff4c432852fa/comments", "author": null, "committer": null, "parents": [{"sha": "22859ae8bd7288dd5a644be1491c9e5cc1bb1f1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22859ae8bd7288dd5a644be1491c9e5cc1bb1f1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22859ae8bd7288dd5a644be1491c9e5cc1bb1f1b"}], "stats": {"total": 62, "additions": 61, "deletions": 1}, "files": [{"sha": "e546a5cb1cdc7a128708fffdab65d5a4861db3b3", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 61, "deletions": 1, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea9be0775811e679b8c32cf11475ff4c432852fa/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea9be0775811e679b8c32cf11475ff4c432852fa/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=ea9be0775811e679b8c32cf11475ff4c432852fa", "patch": "@@ -1020,18 +1020,67 @@\n \n ;; We don't need abs with condition code because such comparisons should\n ;; never be done.\n-(define_insn \"abssi2\"\n+(define_expand \"abssi2\"\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n+\t(abs:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")))]\n+  \"\"\n+  \"\n+{\n+  if (!TARGET_POWER)\n+    {\n+      emit_insn (gen_abssi2_nopower (operands[0], operands[1]));\n+      DONE;\n+    }\n+}\")\n+\n+(define_insn \"abssi2_power\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(abs:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")))]\n   \"TARGET_POWER\"\n   \"abs %0,%1\")\n \n+(define_insn \"abssi2_nopower\"\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,r\")\n+\t(abs:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,0\")))\n+   (clobber (match_scratch:SI 2 \"=&r,&r\"))]\n+  \"!TARGET_POWER\"\n+  \"{srai|srawi} %2,%1,31\\;xor %0,%2,%1\\;subf %0,%2,%0\"\n+  [(set_attr \"length\" \"12\")])\n+\n+(define_split\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,r\")\n+\t(abs:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,0\")))\n+   (clobber (match_scratch:SI 2 \"=&r,&r\"))]\n+  \"!TARGET_POWER && reload_completed\"\n+  [(set (match_dup 2) (ashiftrt:SI (match_dup 1) (const_int 31)))\n+   (set (match_dup 0) (xor:SI (match_dup 2) (match_dup 1)))\n+   (set (match_dup 0) (minus:SI (match_dup 2) (match_dup 0)))]\n+  \"\")\n+\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(neg:SI (abs:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\"))))]\n   \"TARGET_POWER\"\n   \"nabs %0,%1\")\n \n+(define_insn \"\"\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,r\")\n+\t(neg:SI (abs:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,0\"))))\n+   (clobber (match_scratch:SI 2 \"=&r,&r\"))]\n+  \"!TARGET_POWER\"\n+  \"{srai|srawi} %2,%1,31\\;xor %0,%2,%1\\;subf %0,%0,%2\"\n+  [(set_attr \"length\" \"12\")])\n+\n+(define_split\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=&r,r\")\n+\t(neg:SI (abs:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,0\"))))\n+   (clobber (match_scratch:SI 2 \"=&r,&r\"))]\n+  \"!TARGET_POWER && reload_completed\"\n+  [(set (match_dup 2) (ashiftrt:SI (match_dup 1) (const_int 31)))\n+   (set (match_dup 0) (xor:SI (match_dup 2) (match_dup 1)))\n+   (set (match_dup 0) (minus:SI (match_dup 0) (match_dup 2)))]\n+  \"\")\n+\n (define_insn \"negsi2\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(neg:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")))]\n@@ -5704,6 +5753,17 @@\n    {sfi|subfic} %0,%1,%2\\;{ai|addic} %0,%0,-1\\;{sfe|subfe} %0,%0,%0\"\n    [(set_attr \"length\" \"12,8,12,12,12\")])\n \n+;; Simplify (ne X (const_int 0)) on the PowerPC.  No need to on the Power,\n+;; since it nabs/sr is just as fast.\n+(define_insn \"\"\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n+\t(lshiftrt:SI (neg:SI (abs:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r\")))\n+\t\t     (const_int 31)))\n+   (clobber (match_scratch:SI 2 \"=&r\"))]\n+  \"!TARGET_POWER\"\n+  \"{ai|addic} %2,%1,-1\\;{sfe|subfe} %0,%2,%1\"\n+  [(set_attr \"length\" \"8\")])\n+\n ;; This is what (plus (ne X (const_int 0)) Y) looks like.\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")"}]}