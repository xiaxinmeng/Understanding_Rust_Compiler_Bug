{"sha": "f4f3e8fdf7440699c7f266b399fd8159ee43d223", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRmM2U4ZmRmNzQ0MDY5OWM3ZjI2NmIzOTlmZDgxNTllZTQzZDIyMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1997-11-26T07:19:11Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-11-26T07:19:11Z"}, "message": "London changes to string:\n\n\t* std/bastring.cc (check_realloc): Don't be selfish anymore.\n\t* std/bastring.h (non-const operator[]): Be selfish.\n\t(iterator forms of insert and erase): Stay selfish.\n\nFrom-SVN: r16722", "tree": {"sha": "85d965149086f3ac6e9f3f524177fc78b28e79f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85d965149086f3ac6e9f3f524177fc78b28e79f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4f3e8fdf7440699c7f266b399fd8159ee43d223", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4f3e8fdf7440699c7f266b399fd8159ee43d223", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4f3e8fdf7440699c7f266b399fd8159ee43d223", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4f3e8fdf7440699c7f266b399fd8159ee43d223/comments", "author": null, "committer": null, "parents": [{"sha": "11df6ae76778ef3d3ed790ec8f605f59e2a9aaa4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11df6ae76778ef3d3ed790ec8f605f59e2a9aaa4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11df6ae76778ef3d3ed790ec8f605f59e2a9aaa4"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "7830adc0bf2d1ea2995521b56190526988e689b0", "filename": "libstdc++/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f3e8fdf7440699c7f266b399fd8159ee43d223/libstdc%2B%2B%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f3e8fdf7440699c7f266b399fd8159ee43d223/libstdc%2B%2B%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2FChangeLog?ref=f4f3e8fdf7440699c7f266b399fd8159ee43d223", "patch": "@@ -1,3 +1,10 @@\n+Tue Nov 25 23:16:44 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\tLondon changes to string:\n+\t* std/bastring.cc (check_realloc): Don't be selfish anymore.\n+\t* std/bastring.h (non-const operator[]): Be selfish.\n+\t(iterator forms of insert and erase): Stay selfish.\n+\n Tue Nov 25 14:03:43 1997  H.J. Lu  (hjl@gnu.org)\n \n \t* Makefile.in (stmp-complex, bigstmp-complex): Changed to"}, {"sha": "48a470c22b42dee69a1a4ec44915a8e978c86d91", "filename": "libstdc++/Makefile.in", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f3e8fdf7440699c7f266b399fd8159ee43d223/libstdc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f3e8fdf7440699c7f266b399fd8159ee43d223/libstdc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2FMakefile.in?ref=f4f3e8fdf7440699c7f266b399fd8159ee43d223", "patch": "@@ -301,16 +301,18 @@ stuff:\n \t$(MAKE) clean\n \t$(MAKE) -C ../libio c++clean\n \t$(MAKE) -C ../libg++ clean\n-\t$(MAKE) $(MAKEFLAGS) check\n-\t$(MAKE) -C ../libio check\n-\t$(MAKE) -C ../libg++ check\n+\t-$(MAKE) $(MAKEFLAGS) check\n+\t-$(MAKE) -C ../libio check\n+\t-$(MAKE) -C ../libg++ check\n+\t-$(MAKE) -C ../gcc check-g++\n \n stuff1:\n \t$(MAKE) clean\n \t$(MAKE) -C ../libio c++clean\n \t$(MAKE) -C ../libg++ clean\n \n stuff2:\n-\t$(MAKE) check\n-\t$(MAKE) -C ../libio check\n-\t$(MAKE) -C ../libg++ check\n+\t-$(MAKE) check\n+\t-$(MAKE) -C ../libio check\n+\t-$(MAKE) -C ../libg++ check\n+\t-$(MAKE) -C ../gcc check-g++"}, {"sha": "444797096dc90121929d0ecace97f3251c9421a5", "filename": "libstdc++/std/bastring.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f3e8fdf7440699c7f266b399fd8159ee43d223/libstdc%2B%2B%2Fstd%2Fbastring.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f3e8fdf7440699c7f266b399fd8159ee43d223/libstdc%2B%2B%2Fstd%2Fbastring.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fbastring.cc?ref=f4f3e8fdf7440699c7f266b399fd8159ee43d223", "patch": "@@ -87,6 +87,7 @@ inline bool basic_string <charT, traits>::\n check_realloc (size_t s) const\n {\n   s += sizeof (charT);\n+  rep ()->selfish = false;\n   return (rep ()->ref > 1\n \t  || s > capacity ()\n \t  || Rep::excess_slop (s, capacity ()));"}, {"sha": "f8fe279b158da56376ff9b4d5805d489cef6dde6", "filename": "libstdc++/std/bastring.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f3e8fdf7440699c7f266b399fd8159ee43d223/libstdc%2B%2B%2Fstd%2Fbastring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f3e8fdf7440699c7f266b399fd8159ee43d223/libstdc%2B%2B%2Fstd%2Fbastring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fbastring.h?ref=f4f3e8fdf7440699c7f266b399fd8159ee43d223", "patch": "@@ -220,9 +220,9 @@ class basic_string\n   basic_string& insert (size_type pos, size_type n, charT c)\n     { return replace (pos, 0, n, c); }\n   iterator insert(iterator p, charT c)\n-    { insert (p - ibegin (), 1, c); return p; }\n+    { insert (p - ibegin (), 1, c); selfish (); return p; }\n   iterator insert(iterator p, size_type n, charT c)\n-    { insert (p - ibegin (), n, c); return p; }\n+    { insert (p - ibegin (), n, c); selfish (); return p; }\n #ifdef __STL_MEMBER_TEMPLATES\n   template<class InputIterator>\n     void insert(iterator p, InputIterator first, InputIterator last)\n@@ -234,9 +234,9 @@ class basic_string\n   basic_string& erase (size_type pos = 0, size_type n = npos)\n     { return replace (pos, n, (size_type)0, (charT)0); }\n   iterator erase(iterator p)\n-    { replace (p - ibegin (), 1, (size_type)0, (charT)0); return p; }\n+    { replace (p-ibegin (), 1, (size_type)0, (charT)0); selfish (); return p; }\n   iterator erase(iterator f, iterator l)\n-    { replace (f - ibegin (), l - f, (size_type)0, (charT)0); return f; }\n+    { replace (f-ibegin (), l-f, (size_type)0, (charT)0);selfish ();return f; }\n \n   basic_string& replace (size_type pos1, size_type n1, const basic_string& str,\n \t\t\t size_type pos2 = 0, size_type n2 = npos);\n@@ -278,7 +278,7 @@ class basic_string\n     }\n \n   reference operator[] (size_type pos)\n-    { unique (); return (*rep ())[pos]; }\n+    { selfish (); return (*rep ())[pos]; }\n \n   reference at (size_type pos)\n     {"}]}