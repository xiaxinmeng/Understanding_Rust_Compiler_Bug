{"sha": "65f2f288e488a7ba6867330900aed8c83e47a2b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVmMmYyODhlNDg4YTdiYTY4NjczMzA5MDBhZWQ4YzgzZTQ3YTJiOA==", "commit": {"author": {"name": "Herman A.J. ten Brugge", "email": "Haj.Ten.Brugge@net.HCC.nl", "date": "2002-03-03T23:05:33Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "2002-03-03T23:05:33Z"}, "message": "c4x-protos.h, [...]: Add new functions nonimmediate_src_operand and nonimmediate_lsrc_operand to...\n\n\t* c4x-protos.h, c4x.h, c4x.c, c4x.md: Add new functions\n\tnonimmediate_src_operand and nonimmediate_lsrc_operand to\n\tdisallow ZERO_EXTEND with CONST_INT or CONST_DOUBLE.\n\nFrom-SVN: r50266", "tree": {"sha": "ec51f0eb83cbafe4640a1d734b392fdff10e6a5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec51f0eb83cbafe4640a1d734b392fdff10e6a5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65f2f288e488a7ba6867330900aed8c83e47a2b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65f2f288e488a7ba6867330900aed8c83e47a2b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65f2f288e488a7ba6867330900aed8c83e47a2b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65f2f288e488a7ba6867330900aed8c83e47a2b8/comments", "author": null, "committer": null, "parents": [{"sha": "d8d7c3c3e359fcb00d2d9d98fd0db38676f51b7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8d7c3c3e359fcb00d2d9d98fd0db38676f51b7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8d7c3c3e359fcb00d2d9d98fd0db38676f51b7e"}], "stats": {"total": 62, "additions": 54, "deletions": 8}, "files": [{"sha": "e374165af228ed83fc49c3b0527be8ffb212f82e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f2f288e488a7ba6867330900aed8c83e47a2b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f2f288e488a7ba6867330900aed8c83e47a2b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=65f2f288e488a7ba6867330900aed8c83e47a2b8", "patch": "@@ -1,3 +1,9 @@\n+2002-03-04  Herman A.J. ten Brugge <Haj.Ten.Brugge@net.HCC.nl>\n+\n+\t* c4x-protos.h, c4x.h, c4x.c, c4x.md: Add new functions\n+\tnonimmediate_src_operand and nonimmediate_lsrc_operand to\n+\tdisallow ZERO_EXTEND with CONST_INT or CONST_DOUBLE.\n+\n 2002-03-03  Richard Henderson  <rth@redhat.com>\n \n \t* toplev.c (rest_of_decl_compilation): Revert last two changes."}, {"sha": "10ed818fde35744c7996b4711c2fea7f22774b8c", "filename": "gcc/config/c4x/c4x-protos.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f2f288e488a7ba6867330900aed8c83e47a2b8/gcc%2Fconfig%2Fc4x%2Fc4x-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f2f288e488a7ba6867330900aed8c83e47a2b8/gcc%2Fconfig%2Fc4x%2Fc4x-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x-protos.h?ref=65f2f288e488a7ba6867330900aed8c83e47a2b8", "patch": "@@ -157,6 +157,10 @@ extern int lsrc_operand PARAMS ((rtx, enum machine_mode));\n \n extern int tsrc_operand PARAMS ((rtx, enum machine_mode));\n \n+extern int nonimmediate_src_operand PARAMS ((rtx, enum machine_mode));\n+\n+extern int nonimmediate_lsrc_operand PARAMS ((rtx, enum machine_mode));\n+\n extern int addr_reg_operand PARAMS ((rtx, enum machine_mode));\n \n extern int index_reg_operand PARAMS ((rtx, enum machine_mode));"}, {"sha": "e34ed5c59bdc550ea19104a095ca18a63af70c0c", "filename": "gcc/config/c4x/c4x.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f2f288e488a7ba6867330900aed8c83e47a2b8/gcc%2Fconfig%2Fc4x%2Fc4x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f2f288e488a7ba6867330900aed8c83e47a2b8/gcc%2Fconfig%2Fc4x%2Fc4x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.c?ref=65f2f288e488a7ba6867330900aed8c83e47a2b8", "patch": "@@ -3465,6 +3465,34 @@ tsrc_operand (op, mode)\n }\n \n \n+/* Check src operand of two operand non immedidate instructions.  */\n+\n+int\n+nonimmediate_src_operand (op, mode)\n+     rtx op;\n+     enum machine_mode mode;\n+{\n+  if (GET_CODE (op) == CONST_INT || GET_CODE (op) == CONST_DOUBLE)\n+    return 0;\n+\n+  return src_operand (op, mode);\n+}\n+\n+\n+/* Check logical src operand of two operand non immedidate instructions.  */\n+\n+int\n+nonimmediate_lsrc_operand (op, mode)\n+     rtx op;\n+     enum machine_mode mode;\n+{\n+  if (GET_CODE (op) == CONST_INT || GET_CODE (op) == CONST_DOUBLE)\n+    return 0;\n+\n+  return lsrc_operand (op, mode);\n+}\n+\n+\n int\n reg_or_const_operand (op, mode)\n      rtx op;"}, {"sha": "9ada032edc0b4e0c56083107cfa6bf5ea1834193", "filename": "gcc/config/c4x/c4x.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f2f288e488a7ba6867330900aed8c83e47a2b8/gcc%2Fconfig%2Fc4x%2Fc4x.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f2f288e488a7ba6867330900aed8c83e47a2b8/gcc%2Fconfig%2Fc4x%2Fc4x.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.h?ref=65f2f288e488a7ba6867330900aed8c83e47a2b8", "patch": "@@ -2288,6 +2288,8 @@ if (final_sequence != NULL_RTX)\t\t\t\t\\\n   {\"src_hi_operand\", {SUBREG, REG, MEM, CONST_DOUBLE}}, \t\\\n   {\"lsrc_operand\", {SUBREG, REG, MEM, CONST_INT, CONST_DOUBLE}}, \\\n   {\"tsrc_operand\", {SUBREG, REG, MEM, CONST_INT, CONST_DOUBLE}}, \\\n+  {\"nonimmediate_src_operand\", {SUBREG, REG, MEM}}, \t\t\\\n+  {\"nonimmediate_lsrc_operand\", {SUBREG, REG, MEM}}, \t\t\\\n   {\"any_operand\", {SUBREG, REG, MEM, CONST_INT, CONST_DOUBLE}}, \\\n   {\"par_ind_operand\", {MEM}},\t\t\t\t\t\\\n   {\"parallel_operand\", {SUBREG, REG, MEM}},\t\t\t\\"}, {"sha": "f7e44b1c4ec26410a4db4862bc0958530f14bcbc", "filename": "gcc/config/c4x/c4x.md", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f2f288e488a7ba6867330900aed8c83e47a2b8/gcc%2Fconfig%2Fc4x%2Fc4x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f2f288e488a7ba6867330900aed8c83e47a2b8/gcc%2Fconfig%2Fc4x%2Fc4x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.md?ref=65f2f288e488a7ba6867330900aed8c83e47a2b8", "patch": "@@ -2354,8 +2354,10 @@\n                (truncate:QI\n                 (lshiftrt:HI\n                  (mult:HI\n-                  (zero_extend:HI (match_operand:QI 1 \"src_operand\" \"\"))\n-                  (zero_extend:HI (match_operand:QI 2 \"lsrc_operand\" \"\")))\n+                  (zero_extend:HI (match_operand:QI 1\n+\t\t\t\t   \"nonimmediate_src_operand\" \"\"))\n+                  (zero_extend:HI (match_operand:QI 2\n+\t\t\t\t   \"nonimmediate_lsrc_operand\" \"\")))\n                  (const_int 32))))\n               (clobber (reg:CC_NOOV 21))])]\n  \"\"\n@@ -2372,8 +2374,10 @@\n         (truncate:QI\n          (lshiftrt:HI\n           (mult:HI \n-           (zero_extend:HI (match_operand:QI 1 \"src_operand\" \"%0,rR,rS<>,0,rR,rS<>\"))\n-           (zero_extend:HI (match_operand:QI 2 \"lsrc_operand\" \"rLm,JR,rS<>,rLm,JR,rS<>\")))\n+           (zero_extend:HI (match_operand:QI 1\n+\t\t\t    \"nonimmediate_src_operand\" \"%0,rR,rS<>,0,rR,rS<>\"))\n+           (zero_extend:HI (match_operand:QI 2\n+\t\t\t    \"nonimmediate_lsrc_operand\" \"rm,R,rS<>,rm,R,rS<>\")))\n           (const_int 32))))\n    (clobber (reg:CC_NOOV 21))]\n   \"! TARGET_C3X && valid_operands (MULT, operands, QImode)\"\n@@ -2392,8 +2396,10 @@\n         (truncate:QI\n          (lshiftrt:HI\n           (mult:HI \n-           (zero_extend:HI (match_operand:QI 1 \"src_operand\" \"0,rR,rS<>\"))\n-           (zero_extend:HI (match_operand:QI 2 \"lsrc_operand\" \"rLm,JR,rS<>\")))\n+           (zero_extend:HI (match_operand:QI 1\n+\t\t\t    \"nonimmediate_src_operand\" \"0,rR,rS<>\"))\n+           (zero_extend:HI (match_operand:QI 2\n+\t\t\t    \"nonimmediate_lsrc_operand\" \"rm,R,rS<>\")))\n           (const_int 32))))]\n   \"! TARGET_C3X && valid_operands (MULT, operands, QImode)\"\n   \"@\n@@ -6450,7 +6456,7 @@\n \n (define_insn \"zero_extendqihi2\"\n   [(set (match_operand:HI 0 \"reg_operand\" \"=?dc\")\n-        (zero_extend:HI (match_operand:QI 1 \"src_operand\" \"rIm\")))\n+        (zero_extend:HI (match_operand:QI 1 \"nonimmediate_src_operand\" \"rm\")))\n    (clobber (reg:CC 21))]\n   \"\"\n   \"#\"\n@@ -6460,7 +6466,7 @@\n ; the first set.\n (define_split\n   [(set (match_operand:HI 0 \"reg_operand\" \"\")\n-        (zero_extend:HI (match_operand:QI 1 \"src_operand\" \"\")))\n+        (zero_extend:HI (match_operand:QI 1 \"nonimmediate_src_operand\" \"\")))\n    (clobber (reg:CC 21))]\n   \"reload_completed\"\n   [(set (match_dup 2) (match_dup 1))"}]}