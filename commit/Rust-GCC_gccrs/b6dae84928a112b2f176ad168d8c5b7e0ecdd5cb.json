{"sha": "b6dae84928a112b2f176ad168d8c5b7e0ecdd5cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZkYWU4NDkyOGExMTJiMmYxNzZhZDE2OGQ4YzViN2UwZWNkZDVjYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-01-31T08:33:36Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-01-31T08:33:36Z"}, "message": "re PR c++/79267 (internal compiler error with -O3 or -O2 -finline-functions)\n\n\tPR tree-optimization/79267\n\t* value-prof.c (gimple_ic): Only drop lhs for noreturn calls\n\tif should_remove_lhs_p is true.\n\n\t* g++.dg/opt/pr79267.C: New test.\n\nFrom-SVN: r245053", "tree": {"sha": "4e48957da84e536c6dd21300b0f28f58c8e79ec8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e48957da84e536c6dd21300b0f28f58c8e79ec8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6dae84928a112b2f176ad168d8c5b7e0ecdd5cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6dae84928a112b2f176ad168d8c5b7e0ecdd5cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6dae84928a112b2f176ad168d8c5b7e0ecdd5cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6dae84928a112b2f176ad168d8c5b7e0ecdd5cb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "40fb9c89e1599b2f13d1403820a9e0fb2c1129c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40fb9c89e1599b2f13d1403820a9e0fb2c1129c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40fb9c89e1599b2f13d1403820a9e0fb2c1129c1"}], "stats": {"total": 83, "additions": 82, "deletions": 1}, "files": [{"sha": "8916373f8260ce9e0ccce4cdec27e1ceaa9714b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6dae84928a112b2f176ad168d8c5b7e0ecdd5cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6dae84928a112b2f176ad168d8c5b7e0ecdd5cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6dae84928a112b2f176ad168d8c5b7e0ecdd5cb", "patch": "@@ -1,3 +1,9 @@\n+2017-01-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/79267\n+\t* value-prof.c (gimple_ic): Only drop lhs for noreturn calls\n+\tif should_remove_lhs_p is true.\n+\n 2017-01-30  Alexandre Oliva <aoliva@redhat.com>\n \n \tPR debug/63238"}, {"sha": "96b25d63061f0edd5f42aa7d1480d2827fa91260", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6dae84928a112b2f176ad168d8c5b7e0ecdd5cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6dae84928a112b2f176ad168d8c5b7e0ecdd5cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b6dae84928a112b2f176ad168d8c5b7e0ecdd5cb", "patch": "@@ -1,3 +1,8 @@\n+2017-01-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/79267\n+\t* g++.dg/opt/pr79267.C: New test.\n+\n 2017-01-30  Alexandre Oliva <aoliva@redhat.com>\n \n \tPR debug/63238"}, {"sha": "177eee6c6f7f38bcae44051d1919eba3cb503827", "filename": "gcc/testsuite/g++.dg/opt/pr79267.C", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6dae84928a112b2f176ad168d8c5b7e0ecdd5cb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr79267.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6dae84928a112b2f176ad168d8c5b7e0ecdd5cb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr79267.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr79267.C?ref=b6dae84928a112b2f176ad168d8c5b7e0ecdd5cb", "patch": "@@ -0,0 +1,69 @@\n+// PR tree-optimization/79267\n+// { dg-do compile }\n+// { dg-options \"-O3\" }\n+\n+struct A { A (int); };\n+struct B\n+{\n+  virtual void av () = 0;\n+  void aw ();\n+  void h () { av (); aw (); }\n+};\n+template <class T> struct G : B\n+{\n+  T ba;\n+  G (int, T) : ba (0) {}\n+  void av () { ba (0); }\n+};\n+struct I\n+{\n+  B *bc;\n+  template <class j, class T> I (j, T) try { G<T> (0, 0); } catch (...) {}\n+  ~I () { bc->h (); }\n+};\n+template <class M> struct C { typedef M *i; };\n+template <class M> struct J\n+{\n+  J ();\n+  template <class O, class T> J (O, T p2) : be (0, p2) {}\n+  typename C<M>::i operator-> ();\n+  I be;\n+};\n+struct H : A { H () : A (0) {} };\n+struct D { J<int> d; void q (); };\n+template <typename = int> class bs;\n+int z;\n+\n+void\n+foo (int p1, int *, int)\n+{\n+  if (p1 == 0)\n+    throw H ();\n+}\n+\n+D bar ();\n+template <typename T> struct L\n+{\n+  struct K { K (int); void operator() (int *) { bar ().q (); } };\n+  static J<T> bp () { bq (0); }\n+  template <typename br> static void bq (br) { J<T> (0, K (0)); }\n+};\n+struct F\n+{\n+  virtual J<int> x (int) { foo (0, 0, 0); J<bs<> > (L<bs<> >::bp ()); }\n+};\n+\n+void\n+baz ()\n+{\n+  if (z)\n+    {\n+      J<F> d, e;\n+      d->x (0);\n+      e->x (0);\n+    }\n+  J<F> v, i, j;\n+  v->x (0);\n+  i->x (0);\n+  j->x (0);\n+}"}, {"sha": "097e4094095b1bf9c328b2af976206b28f44180e", "filename": "gcc/value-prof.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6dae84928a112b2f176ad168d8c5b7e0ecdd5cb/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6dae84928a112b2f176ad168d8c5b7e0ecdd5cb/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=b6dae84928a112b2f176ad168d8c5b7e0ecdd5cb", "patch": "@@ -1358,7 +1358,8 @@ gimple_ic (gcall *icall_stmt, struct cgraph_node *direct_call,\n   dcall_stmt = as_a <gcall *> (gimple_copy (icall_stmt));\n   gimple_call_set_fndecl (dcall_stmt, direct_call->decl);\n   dflags = flags_from_decl_or_type (direct_call->decl);\n-  if ((dflags & ECF_NORETURN) != 0)\n+  if ((dflags & ECF_NORETURN) != 0\n+      && should_remove_lhs_p (gimple_call_lhs (dcall_stmt)))\n     gimple_call_set_lhs (dcall_stmt, NULL_TREE);\n   gsi_insert_before (&gsi, dcall_stmt, GSI_SAME_STMT);\n "}]}