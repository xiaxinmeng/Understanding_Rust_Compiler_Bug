{"sha": "73da19bbb6479ee1540b5f306aa0b8c824242950", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNkYTE5YmJiNjQ3OWVlMTU0MGI1ZjMwNmFhMGI4YzgyNDI0Mjk1MA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-03-06T14:56:56Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-03-06T14:56:56Z"}, "message": "1.cc: Clean up.\n\n2004-03-06  Paolo Carlini  <pcarlini@suse.de>\n\n\t* testsuite/22_locale/money_get/get/char/1.cc: Clean up.\n\t* testsuite/22_locale/money_get/get/char/2.cc: Likewise.\n\t* testsuite/22_locale/money_get/get/char/3.cc: Likewise.\n\t* testsuite/22_locale/money_get/get/char/4.cc: Likewise.\n\t* testsuite/22_locale/money_get/get/wchar_t/1.cc: Likewise.\n\t* testsuite/22_locale/money_get/get/wchar_t/2.cc: Likewise.\n\t* testsuite/22_locale/money_get/get/wchar_t/3.cc: Likewise.\n\t* testsuite/22_locale/money_get/get/wchar_t/4.cc: Likewise.\n\nFrom-SVN: r79019", "tree": {"sha": "1f012a01e7c14dea6484ae16ce696b2ecd78685e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f012a01e7c14dea6484ae16ce696b2ecd78685e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73da19bbb6479ee1540b5f306aa0b8c824242950", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73da19bbb6479ee1540b5f306aa0b8c824242950", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73da19bbb6479ee1540b5f306aa0b8c824242950", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73da19bbb6479ee1540b5f306aa0b8c824242950/comments", "author": null, "committer": null, "parents": [{"sha": "84289c7622448d32c3ebd837c984580640d70a68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84289c7622448d32c3ebd837c984580640d70a68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84289c7622448d32c3ebd837c984580640d70a68"}], "stats": {"total": 99, "additions": 11, "deletions": 88}, "files": [{"sha": "94d0e902b3e9468aa6496fdc65e3eb9f30645095", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73da19bbb6479ee1540b5f306aa0b8c824242950/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73da19bbb6479ee1540b5f306aa0b8c824242950/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=73da19bbb6479ee1540b5f306aa0b8c824242950", "patch": "@@ -1,3 +1,14 @@\n+2004-03-06  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* testsuite/22_locale/money_get/get/char/1.cc: Clean up.\n+\t* testsuite/22_locale/money_get/get/char/2.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/char/3.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/char/4.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/wchar_t/1.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/wchar_t/2.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/wchar_t/3.cc: Likewise.\n+\t* testsuite/22_locale/money_get/get/wchar_t/4.cc: Likewise.\n+\n 2004-03-06  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/locale_facets.tcc (num_get<>::_M_extract_float,"}, {"sha": "08e47d8581568f84004f52bd09c18905aec8d406", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/char/1.cc", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73da19bbb6479ee1540b5f306aa0b8c824242950/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73da19bbb6479ee1540b5f306aa0b8c824242950/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F1.cc?ref=73da19bbb6479ee1540b5f306aa0b8c824242950", "patch": "@@ -28,8 +28,6 @@\n void test01()\n {\n   using namespace std;\n-  typedef money_base::part part;\n-  typedef money_base::pattern pattern;\n   typedef istreambuf_iterator<char> iterator_type;\n \n   bool test __attribute__((unused)) = true;\n@@ -39,32 +37,18 @@ void test01()\n   locale loc_de = __gnu_test::try_named_locale(\"de_DE@euro\");\n   VERIFY( loc_c != loc_de );\n \n-  // cache the moneypunct facets\n-  typedef moneypunct<char, true> __money_true;\n-  typedef moneypunct<char, false> __money_false;\n-\n   // sanity check the data is correct.\n   const string empty;\n \n   // total EPA budget FY 2002\n   const string digits1(\"720000000000\");\n \n-  // est. cost, national missile \"defense\", expressed as a loss in USD 2001\n-  const string digits2(\"-10000000000000\");  \n-\n-  // not valid input\n-  const string digits3(\"-A\"); \n-\n-  // input less than frac_digits\n-  const string digits4(\"-1\");\n-  \n   iterator_type end;\n   istringstream iss;\n   iss.imbue(loc_de);\n   // cache the money_get facet\n   const money_get<char>& mon_get = use_facet<money_get<char> >(iss.getloc()); \n \n-\n   iss.str(\"7.200.000.000,00 \");\n   iterator_type is_it01(iss);\n   string result1;"}, {"sha": "e6ae8d926bb76498a91c887e3adb6464ad2a6d1d", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/char/2.cc", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73da19bbb6479ee1540b5f306aa0b8c824242950/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73da19bbb6479ee1540b5f306aa0b8c824242950/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F2.cc?ref=73da19bbb6479ee1540b5f306aa0b8c824242950", "patch": "@@ -28,8 +28,6 @@\n void test02()\n {\n   using namespace std;\n-  typedef money_base::part part;\n-  typedef money_base::pattern pattern;\n   typedef istreambuf_iterator<char> iterator_type;\n \n   bool test __attribute__((unused)) = true;\n@@ -39,22 +37,12 @@ void test02()\n   locale loc_hk = __gnu_test::try_named_locale(\"en_HK\");\n   VERIFY( loc_c != loc_hk );\n \n-  // cache the moneypunct facets\n-  typedef moneypunct<char, true> __money_true;\n-  typedef moneypunct<char, false> __money_false;\n-\n-  // sanity check the data is correct.\n-  const string empty;\n-\n   // total EPA budget FY 2002\n   const string digits1(\"720000000000\");\n \n   // est. cost, national missile \"defense\", expressed as a loss in USD 2001\n   const string digits2(\"-10000000000000\");  \n \n-  // not valid input\n-  const string digits3(\"-A\"); \n-\n   // input less than frac_digits\n   const string digits4(\"-1\");\n   "}, {"sha": "6a07ab2516660eecd569960ff04c402361dddbd1", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/char/3.cc", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73da19bbb6479ee1540b5f306aa0b8c824242950/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73da19bbb6479ee1540b5f306aa0b8c824242950/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F3.cc?ref=73da19bbb6479ee1540b5f306aa0b8c824242950", "patch": "@@ -28,8 +28,6 @@\n void test03()\n {\n   using namespace std;\n-  typedef money_base::part part;\n-  typedef money_base::pattern pattern;\n   typedef istreambuf_iterator<char> iterator_type;\n \n   bool test __attribute__((unused)) = true;\n@@ -39,13 +37,6 @@ void test03()\n   locale loc_de = __gnu_test::try_named_locale(\"de_DE@euro\");\n   VERIFY( loc_c != loc_de );\n \n-  // cache the moneypunct facets\n-  typedef moneypunct<char, true> __money_true;\n-  typedef moneypunct<char, false> __money_false;\n-\n-  // sanity check the data is correct.\n-  const string empty;\n-\n   // total EPA budget FY 2002\n   const long double  digits1 = 720000000000.0;\n "}, {"sha": "9556dfbf00356bb3f8a64f0f378d592546c26ba7", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/char/4.cc", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73da19bbb6479ee1540b5f306aa0b8c824242950/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73da19bbb6479ee1540b5f306aa0b8c824242950/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fchar%2F4.cc?ref=73da19bbb6479ee1540b5f306aa0b8c824242950", "patch": "@@ -37,13 +37,6 @@ void test04()\n   locale loc_hk = __gnu_test::try_named_locale(\"en_HK\");\n   VERIFY( loc_c != loc_hk );\n \n-  // cache the moneypunct facets\n-  typedef moneypunct<char, true> __money_true;\n-  typedef moneypunct<char, false> __money_false;\n-\n-  // sanity check the data is correct.\n-  const string empty;\n-\n   // input less than frac_digits\n   const long double digits4 = -1.0;\n   "}, {"sha": "f382e484faa9932d27e3f2fd812e723ad82c7e55", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/wchar_t/1.cc", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73da19bbb6479ee1540b5f306aa0b8c824242950/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73da19bbb6479ee1540b5f306aa0b8c824242950/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F1.cc?ref=73da19bbb6479ee1540b5f306aa0b8c824242950", "patch": "@@ -28,8 +28,6 @@\n void test01()\n {\n   using namespace std;\n-  typedef money_base::part part;\n-  typedef money_base::pattern pattern;\n   typedef istreambuf_iterator<wchar_t> iterator_type;\n \n   bool test __attribute__((unused)) = true;\n@@ -39,32 +37,18 @@ void test01()\n   locale loc_de = __gnu_test::try_named_locale(\"de_DE@euro\");\n   VERIFY( loc_c != loc_de );\n \n-  // cache the moneypunct facets\n-  typedef moneypunct<wchar_t, true> __money_true;\n-  typedef moneypunct<wchar_t, false> __money_false;\n-\n   // sanity check the data is correct.\n   const wstring empty;\n \n   // total EPA budget FY 2002\n   const wstring digits1(L\"720000000000\");\n \n-  // est. cost, national missile \"defense\", expressed as a loss in USD 2001\n-  const wstring digits2(L\"-10000000000000\");  \n-\n-  // not valid input\n-  const wstring digits3(L\"-A\"); \n-\n-  // input less than frac_digits\n-  const wstring digits4(L\"-1\");\n-  \n   iterator_type end;\n   wistringstream iss;\n   iss.imbue(loc_de);\n   // cache the money_get facet\n   const money_get<wchar_t>& mon_get = use_facet<money_get<wchar_t> >(iss.getloc()); \n \n-\n   iss.str(L\"7.200.000.000,00 \");\n   iterator_type is_it01(iss);\n   wstring result1;"}, {"sha": "bf7edc11b63011024bda3004d4bc19000614605a", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/wchar_t/2.cc", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73da19bbb6479ee1540b5f306aa0b8c824242950/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73da19bbb6479ee1540b5f306aa0b8c824242950/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F2.cc?ref=73da19bbb6479ee1540b5f306aa0b8c824242950", "patch": "@@ -28,8 +28,6 @@\n void test02()\n {\n   using namespace std;\n-  typedef money_base::part part;\n-  typedef money_base::pattern pattern;\n   typedef istreambuf_iterator<wchar_t> iterator_type;\n \n   bool test __attribute__((unused)) = true;\n@@ -39,22 +37,12 @@ void test02()\n   locale loc_hk = __gnu_test::try_named_locale(\"en_HK\");\n   VERIFY( loc_c != loc_hk );\n \n-  // cache the moneypunct facets\n-  typedef moneypunct<wchar_t, true> __money_true;\n-  typedef moneypunct<wchar_t, false> __money_false;\n-\n-  // sanity check the data is correct.\n-  const wstring empty;\n-\n   // total EPA budget FY 2002\n   const wstring digits1(L\"720000000000\");\n \n   // est. cost, national missile \"defense\", expressed as a loss in USD 2001\n   const wstring digits2(L\"-10000000000000\");  \n \n-  // not valid input\n-  const wstring digits3(L\"-A\"); \n-\n   // input less than frac_digits\n   const wstring digits4(L\"-1\");\n   "}, {"sha": "2b1dc33e2bea44f6c7b21e6f5adcc31801c620d7", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/wchar_t/3.cc", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73da19bbb6479ee1540b5f306aa0b8c824242950/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73da19bbb6479ee1540b5f306aa0b8c824242950/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F3.cc?ref=73da19bbb6479ee1540b5f306aa0b8c824242950", "patch": "@@ -28,8 +28,6 @@\n void test03()\n {\n   using namespace std;\n-  typedef money_base::part part;\n-  typedef money_base::pattern pattern;\n   typedef istreambuf_iterator<wchar_t> iterator_type;\n \n   bool test __attribute__((unused)) = true;\n@@ -39,13 +37,6 @@ void test03()\n   locale loc_de = __gnu_test::try_named_locale(\"de_DE@euro\");\n   VERIFY( loc_c != loc_de );\n \n-  // cache the moneypunct facets\n-  typedef moneypunct<wchar_t, true> __money_true;\n-  typedef moneypunct<wchar_t, false> __money_false;\n-\n-  // sanity check the data is correct.\n-  const wstring empty;\n-\n   // total EPA budget FY 2002\n   const long double  digits1 = 720000000000.0;\n   "}, {"sha": "4f541ed882ad9a9bd7845400527f568ccba66668", "filename": "libstdc++-v3/testsuite/22_locale/money_get/get/wchar_t/4.cc", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73da19bbb6479ee1540b5f306aa0b8c824242950/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73da19bbb6479ee1540b5f306aa0b8c824242950/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get%2Fget%2Fwchar_t%2F4.cc?ref=73da19bbb6479ee1540b5f306aa0b8c824242950", "patch": "@@ -37,13 +37,6 @@ void test04()\n   locale loc_hk = __gnu_test::try_named_locale(\"en_HK\");\n   VERIFY( loc_c != loc_hk );\n \n-  // cache the moneypunct facets\n-  typedef moneypunct<wchar_t, true> __money_true;\n-  typedef moneypunct<wchar_t, false> __money_false;\n-\n-  // sanity check the data is correct.\n-  const wstring empty;\n-\n   // input less than frac_digits\n   const long double digits4 = -1.0;\n   "}]}