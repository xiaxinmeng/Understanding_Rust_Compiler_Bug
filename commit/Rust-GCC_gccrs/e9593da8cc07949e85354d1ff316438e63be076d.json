{"sha": "e9593da8cc07949e85354d1ff316438e63be076d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk1OTNkYThjYzA3OTQ5ZTg1MzU0ZDFmZjMxNjQzOGU2M2JlMDc2ZA==", "commit": {"author": {"name": "James E Wilson", "email": "wilson@tuliptree.org", "date": "2017-10-11T03:23:41Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2017-10-11T03:23:41Z"}, "message": "Allow 2 insns from sched group to issue in same cycle, if no stalls needed.\n\n\tgcc/\n\tPR rtl-optimization/81434\n\t* haifa-sched.c (prune_ready_list): Init min_cost_group to 0.  Update\n\tcomment for main loop.  In sched_group_found if, also add checks for\n\tpass and min_cost_group.\n\nFrom-SVN: r253628", "tree": {"sha": "b694fe13b1d924eedb3c12f322ea83171115c328", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b694fe13b1d924eedb3c12f322ea83171115c328"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9593da8cc07949e85354d1ff316438e63be076d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9593da8cc07949e85354d1ff316438e63be076d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9593da8cc07949e85354d1ff316438e63be076d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9593da8cc07949e85354d1ff316438e63be076d/comments", "author": {"login": "jim-wilson", "id": 11654017, "node_id": "MDQ6VXNlcjExNjU0MDE3", "avatar_url": "https://avatars.githubusercontent.com/u/11654017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jim-wilson", "html_url": "https://github.com/jim-wilson", "followers_url": "https://api.github.com/users/jim-wilson/followers", "following_url": "https://api.github.com/users/jim-wilson/following{/other_user}", "gists_url": "https://api.github.com/users/jim-wilson/gists{/gist_id}", "starred_url": "https://api.github.com/users/jim-wilson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jim-wilson/subscriptions", "organizations_url": "https://api.github.com/users/jim-wilson/orgs", "repos_url": "https://api.github.com/users/jim-wilson/repos", "events_url": "https://api.github.com/users/jim-wilson/events{/privacy}", "received_events_url": "https://api.github.com/users/jim-wilson/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9ef8d30e92371923a3f5e0c788fc93604f02ccb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef8d30e92371923a3f5e0c788fc93604f02ccb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ef8d30e92371923a3f5e0c788fc93604f02ccb7"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "61ec983c83e4d7f9c823e2cfa470186d48addbb1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9593da8cc07949e85354d1ff316438e63be076d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9593da8cc07949e85354d1ff316438e63be076d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e9593da8cc07949e85354d1ff316438e63be076d", "patch": "@@ -1,3 +1,10 @@\n+2017-10-10  Jim Wilson  <wilson@tuliptree.org>\n+\n+\tPR rtl-optimization/81434\n+\t* haifa-sched.c (prune_ready_list): Init min_cost_group to 0.  Update\n+\tcomment for main loop.  In sched_group_found if, also add checks for\n+\tpass and min_cost_group.\n+\n 2017-10-10  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.c (TARGET_INSN_COST): New."}, {"sha": "d6dab57101b1ccd6d1e170b79dc0da566e5a617d", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9593da8cc07949e85354d1ff316438e63be076d/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9593da8cc07949e85354d1ff316438e63be076d/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=e9593da8cc07949e85354d1ff316438e63be076d", "patch": "@@ -6303,7 +6303,7 @@ prune_ready_list (state_t temp_state, bool first_cycle_insn_p,\n {\n   int i, pass;\n   bool sched_group_found = false;\n-  int min_cost_group = 1;\n+  int min_cost_group = 0;\n \n   if (sched_fusion)\n     return;\n@@ -6319,8 +6319,8 @@ prune_ready_list (state_t temp_state, bool first_cycle_insn_p,\n     }\n \n   /* Make two passes if there's a SCHED_GROUP_P insn; make sure to handle\n-     such an insn first and note its cost, then schedule all other insns\n-     for one cycle later.  */\n+     such an insn first and note its cost.  If at least one SCHED_GROUP_P insn\n+     gets queued, then all other insns get queued for one cycle later.  */\n   for (pass = sched_group_found ? 0 : 1; pass < 2; )\n     {\n       int n = ready.n_ready;\n@@ -6333,7 +6333,8 @@ prune_ready_list (state_t temp_state, bool first_cycle_insn_p,\n \t  if (DEBUG_INSN_P (insn))\n \t    continue;\n \n-\t  if (sched_group_found && !SCHED_GROUP_P (insn))\n+\t  if (sched_group_found && !SCHED_GROUP_P (insn)\n+\t      && ((pass == 0) || (min_cost_group >= 1)))\n \t    {\n \t      if (pass == 0)\n \t\tcontinue;"}]}