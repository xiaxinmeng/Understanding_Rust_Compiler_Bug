{"sha": "53f2f08b057b6b57b5d8b99db10b63de0634715c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNmMmYwOGIwNTdiNmI1N2I1ZDhiOTlkYjEwYjYzZGUwNjM0NzE1Yw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2019-01-24T20:48:01Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2019-01-24T20:48:01Z"}, "message": "re PR rtl-optimization/88948 (ICE in elimination_costs_in_insn, at reload1.c:3640 since r264148)\n\n\tPR target/88948\n\t* rtl.h (prepare_copy_insn): New prototype.\n\t* gcse.c (prepare_copy_insn): New function, split out from\n\tprocess_insert_insn.\n\t(process_insert_insn): Use prepare_copy_insn.\n\t* store-motion.c (replace_store_insn): Use prepare_copy_insn\n\tinstead of gen_move_insn.\n\ntestsuite/ChangeLog:\n\n\tPR target/88948\n\t* gcc.target/i386/pr88948.c: New test.\n\nFrom-SVN: r268249", "tree": {"sha": "7683639a9a2979015a7efcd9b91d92cf8cb3caea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7683639a9a2979015a7efcd9b91d92cf8cb3caea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53f2f08b057b6b57b5d8b99db10b63de0634715c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53f2f08b057b6b57b5d8b99db10b63de0634715c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53f2f08b057b6b57b5d8b99db10b63de0634715c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53f2f08b057b6b57b5d8b99db10b63de0634715c/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "83e23dcd562191e102a63f83822848fa5a3a68ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83e23dcd562191e102a63f83822848fa5a3a68ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83e23dcd562191e102a63f83822848fa5a3a68ea"}], "stats": {"total": 48, "additions": 40, "deletions": 8}, "files": [{"sha": "915d32ef0ce3043964ffd8f1d5da687f62b80887", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f2f08b057b6b57b5d8b99db10b63de0634715c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f2f08b057b6b57b5d8b99db10b63de0634715c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=53f2f08b057b6b57b5d8b99db10b63de0634715c", "patch": "@@ -1,3 +1,13 @@\n+2019-01-24  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/88948\n+\t* rtl.h (prepare_copy_insn): New prototype.\n+\t* gcse.c (prepare_copy_insn): New function, split out from\n+\tprocess_insert_insn.\n+\t(process_insert_insn): Use prepare_copy_insn.\n+\t* store-motion.c (replace_store_insn): Use prepare_copy_insn\n+\tinstead of gen_move_insn.\n+\n 2019-01-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/89006"}, {"sha": "6c77671fe3115a0051173855268ed46f87f79ede", "filename": "gcc/gcse.c", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f2f08b057b6b57b5d8b99db10b63de0634715c/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f2f08b057b6b57b5d8b99db10b63de0634715c/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=53f2f08b057b6b57b5d8b99db10b63de0634715c", "patch": "@@ -1963,14 +1963,11 @@ pre_expr_reaches_here_p (basic_block occr_bb, struct gcse_expr *expr, basic_bloc\n   return rval;\n }\n \f\n-/* Generate RTL to copy an EXPR to its `reaching_reg' and return it.  */\n+/* Generate RTL to copy an EXP to REG and return it.  */\n \n-static rtx_insn *\n-process_insert_insn (struct gcse_expr *expr)\n+rtx_insn *\n+prepare_copy_insn (rtx reg, rtx exp)\n {\n-  rtx reg = expr->reaching_reg;\n-  /* Copy the expression to make sure we don't have any sharing issues.  */\n-  rtx exp = copy_rtx (expr->expr);\n   rtx_insn *pat;\n \n   start_sequence ();\n@@ -1996,6 +1993,18 @@ process_insert_insn (struct gcse_expr *expr)\n   return pat;\n }\n \n+/* Generate RTL to copy an EXPR to its `reaching_reg' and return it.  */\n+\n+static rtx_insn *\n+process_insert_insn (struct gcse_expr *expr)\n+{\n+  rtx reg = expr->reaching_reg;\n+  /* Copy the expression to make sure we don't have any sharing issues.  */\n+  rtx exp = copy_rtx (expr->expr);\n+\n+  return prepare_copy_insn (reg, exp);\n+}\n+\n /* Add EXPR to the end of basic block BB.\n \n    This is used by both the PRE and code hoisting.  */"}, {"sha": "f99191983d39a1c901c65da5a2ee15724849253c", "filename": "gcc/rtl.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f2f08b057b6b57b5d8b99db10b63de0634715c/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f2f08b057b6b57b5d8b99db10b63de0634715c/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=53f2f08b057b6b57b5d8b99db10b63de0634715c", "patch": "@@ -4078,6 +4078,9 @@ extern void init_lower_subreg (void);\n /* In gcse.c */\n extern bool can_copy_p (machine_mode);\n extern bool can_assign_to_reg_without_clobbers_p (rtx, machine_mode);\n+extern rtx_insn *prepare_copy_insn (rtx, rtx);\n+\n+/* In cprop.c */\n extern rtx fis_get_condition (rtx_insn *);\n \n /* In ira.c */"}, {"sha": "a0838f68ba0fe31f9c6b23b87d26b74a0528b3a4", "filename": "gcc/store-motion.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f2f08b057b6b57b5d8b99db10b63de0634715c/gcc%2Fstore-motion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f2f08b057b6b57b5d8b99db10b63de0634715c/gcc%2Fstore-motion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstore-motion.c?ref=53f2f08b057b6b57b5d8b99db10b63de0634715c", "patch": "@@ -912,8 +912,7 @@ replace_store_insn (rtx reg, rtx_insn *del, basic_block bb,\n   rtx_insn *insn;\n   rtx mem, note, set;\n \n-  mem = smexpr->pattern;\n-  insn = gen_move_insn (reg, SET_SRC (single_set (del)));\n+  insn = prepare_copy_insn (reg, SET_SRC (single_set (del)));\n \n   unsigned int i;\n   rtx_insn *temp;\n@@ -946,6 +945,7 @@ replace_store_insn (rtx reg, rtx_insn *del, basic_block bb,\n   /* Now we must handle REG_EQUAL notes whose contents is equal to the mem;\n      they are no longer accurate provided that they are reached by this\n      definition, so drop them.  */\n+  mem = smexpr->pattern;\n   for (; insn != NEXT_INSN (BB_END (bb)); insn = NEXT_INSN (insn))\n     if (NONDEBUG_INSN_P (insn))\n       {"}, {"sha": "e7ac88c3ca0e869c5f43a93c46a5d58bc745ed60", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f2f08b057b6b57b5d8b99db10b63de0634715c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f2f08b057b6b57b5d8b99db10b63de0634715c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=53f2f08b057b6b57b5d8b99db10b63de0634715c", "patch": "@@ -1,3 +1,8 @@\n+2019-01-24  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/88948\n+\t* gcc.target/i386/pr88948.c: New test.\n+\n 2019-01-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/89006"}, {"sha": "5b50803b60b051a4f04d5e5151b27b9fc6274ccd", "filename": "gcc/testsuite/gcc.target/i386/pr88948.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53f2f08b057b6b57b5d8b99db10b63de0634715c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88948.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53f2f08b057b6b57b5d8b99db10b63de0634715c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88948.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr88948.c?ref=53f2f08b057b6b57b5d8b99db10b63de0634715c", "patch": "@@ -0,0 +1,5 @@\n+/* PR rtl-optimization/88948 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fgcse-sm -msse3 -mfpmath=387\" } */\n+\n+#include \"../../gcc.c-torture/execute/stdarg-3.c\""}]}