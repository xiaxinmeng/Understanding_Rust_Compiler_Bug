{"sha": "d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDExY2ZhZjhlZTFmNzU4Y2NiZWRhM2ViMjNjMjIwNDJlM2I3YjFkMg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2011-08-02T09:47:35Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T09:47:35Z"}, "message": "a-cfdlli.ads, [...]: Minor reformatting.\n\n2011-08-02  Robert Dewar  <dewar@adacore.com>\n\n\t* a-cfdlli.ads, a-cfhase.ads, a-cforma.ads, a-cfhama.ads,\n\ta-cforse.ads, a-cofove.ads: Minor reformatting.\n\nFrom-SVN: r177112", "tree": {"sha": "b61c057bfd2590eb9d630c36e069afe27be16dff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b61c057bfd2590eb9d630c36e069afe27be16dff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2/comments", "author": null, "committer": null, "parents": [{"sha": "300b98bbaac6c3d4762715205895161fd420ff9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/300b98bbaac6c3d4762715205895161fd420ff9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/300b98bbaac6c3d4762715205895161fd420ff9f"}], "stats": {"total": 220, "additions": 116, "deletions": 104}, "files": [{"sha": "09245bf4bf8a0de50cf5cff1ca8059df03eef121", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2", "patch": "@@ -1,3 +1,8 @@\n+2011-08-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-cfdlli.ads, a-cfhase.ads, a-cforma.ads, a-cfhama.ads,\n+\ta-cforse.ads, a-cofove.ads: Minor reformatting.\n+\n 2011-08-02  Claire Dross  <dross@adacore.com>\n \n \t* a-cfdlli.ads, a-cfhase.ads, a-cforma.ads, a-cfhama.ads, a-cforse.ads,"}, {"sha": "96945ab29d73f4d2660677372c8d500cb508b5bb", "filename": "gcc/ada/a-cfdlli.ads", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2/gcc%2Fada%2Fa-cfdlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2/gcc%2Fada%2Fa-cfdlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfdlli.ads?ref=d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2010, Free Software Foundation, Inc.              --\n+--          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -29,19 +29,21 @@\n -- <http://www.gnu.org/licenses/>.                                          --\n ------------------------------------------------------------------------------\n \n---  The specification of this package is derived from the specification\n---  of package Ada.Containers.Bounded_Doubly_Linked_Lists in the Ada 2012 RM.\n---  The changes are\n+--  This spec is derived from Ada.Containers.Bounded_Doubly_Linked_Lists in the\n+--  Ada 2012 RM. The modifications are to facilitate formal proofs by making it\n+--  easier to express properties.\n+\n+--  The modifications are:\n \n --    A parameter for the container is added to every function reading the\n---    content of a container: Element, Next, Previous, Query_Element,\n---    Has_Element, Iterate, Reverse_Iterate. This change is motivated by the\n---    need to have cursors which are valid on different containers (typically\n---    a container C and its previous version C'Old) for expressing properties,\n+--    contents of a container: Next, Previous, Query_Element, Has_Element,\n+--    Iterate, Reverse_Iterate, Element. This change is motivated by the need\n+--    to have cursors which are valid on different containers (typically a\n+--    container C and its previous version C'Old) for expressing properties,\n --    which is not possible if cursors encapsulate an access to the underlying\n --    container.\n \n---    There are two new functions\n+--    There are two new functions:\n \n --      function Left  (Container : List; Position : Cursor) return List;\n --      function Right (Container : List; Position : Cursor) return List;\n@@ -54,7 +56,7 @@\n --      scanned and Right the part not scanned yet.\n \n private with Ada.Streams;\n-with Ada.Containers; use Ada.Containers;\n+with Ada.Containers;\n \n generic\n    type Element_Type is private;\n@@ -288,10 +290,9 @@ private\n \n    for List'Write use Write;\n \n-   type Cursor is\n-      record\n-         Node      : Count_Type := 0;\n-      end record;\n+   type Cursor is record\n+      Node : Count_Type := 0;\n+   end record;\n \n    procedure Read\n      (Stream : not null access Root_Stream_Type'Class;"}, {"sha": "96f64708fbf4c4d4714cf8e2d8b495859b6a774b", "filename": "gcc/ada/a-cfhama.ads", "status": "modified", "additions": 23, "deletions": 21, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2/gcc%2Fada%2Fa-cfhama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2/gcc%2Fada%2Fa-cfhama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhama.ads?ref=d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2010, Free Software Foundation, Inc.              --\n+--          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -29,19 +29,20 @@\n -- <http://www.gnu.org/licenses/>.                                          --\n ------------------------------------------------------------------------------\n \n---  The specification of this package is derived from the specification\n---  of package Ada.Containers.Bounded_Hashed_Maps in the Ada 2012 RM.\n---  The changes are\n+--  This spec is derived from package Ada.Containers.Bounded_Hashed_Maps in the\n+--  Ada 2012 RM. The modifications are to facilitate formal proofs by making it\n+--  easier to express properties.\n+\n+--  The modifications are:\n \n --    A parameter for the container is added to every function reading the\n---    content of a container: Key, Element, Next, Query_Element,\n---    Has_Element, Iterate, Equivalent_Keys. This change is motivated by the\n---    need to have cursors which are valid on different containers (typically\n---    a container C and its previous version C'Old) for expressing properties,\n---    which is not possible if cursors encapsulate an access to the underlying\n---    container.\n+--    contents of a container: Key, Element, Next, Query_Element, Has_Element,\n+--    Iterate, Equivalent_Keys. This change is motivated by the need to have\n+--    cursors which are valid on different containers (typically a container C\n+--    and its previous version C'Old) for expressing properties, which is not\n+--    possible if cursors encapsulate an access to the underlying container.\n \n---    There are two new functions\n+--    There are two new functions:\n \n --      function Left  (Container : Map; Position : Cursor) return Map;\n --      function Right (Container : Map; Position : Cursor) return Map;\n@@ -70,6 +71,7 @@ package Ada.Containers.Formal_Hashed_Maps is\n \n    type Map (Capacity : Count_Type; Modulus : Hash_Type) is tagged private;\n    --  pragma Preelaborable_Initialization (Map);\n+   --  why is this commented out???\n \n    type Cursor is private;\n    pragma Preelaborable_Initialization (Cursor);\n@@ -98,8 +100,9 @@ package Ada.Containers.Formal_Hashed_Maps is\n    --  ???\n    --  capacity=0 means use container.length as cap of tgt\n    --  modulos=0 means use default_modulous(container.length)\n-   function Copy (Source   : Map;\n-                  Capacity : Count_Type := 0) return Map;\n+   function Copy\n+     (Source   : Map;\n+      Capacity : Count_Type := 0) return Map;\n \n    function Key (Container : Map; Position : Cursor) return Key_Type;\n \n@@ -114,13 +117,13 @@ package Ada.Containers.Formal_Hashed_Maps is\n      (Container : in out Map;\n       Position  : Cursor;\n       Process   : not null access\n-        procedure (Key : Key_Type; Element : Element_Type));\n+                    procedure (Key : Key_Type; Element : Element_Type));\n \n    procedure Update_Element\n      (Container : in out Map;\n       Position  : Cursor;\n       Process   : not null access\n-        procedure (Key : Key_Type; Element : in out Element_Type));\n+                    procedure (Key : Key_Type; Element : in out Element_Type));\n \n    procedure Move (Target : in out Map; Source : in out Map);\n \n@@ -190,8 +193,8 @@ package Ada.Containers.Formal_Hashed_Maps is\n \n    procedure Iterate\n      (Container : Map;\n-      Process   :\n-        not null access procedure (Container : Map; Position : Cursor));\n+      Process   : not null access\n+                    procedure (Container : Map; Position : Cursor));\n \n    function Default_Modulus (Capacity : Count_Type) return Hash_Type;\n \n@@ -259,10 +262,9 @@ private\n    type Map_Access is access all Map;\n    for Map_Access'Storage_Size use 0;\n \n-   type Cursor is\n-      record\n-         Node      : Count_Type;\n-      end record;\n+   type Cursor is record\n+      Node : Count_Type;\n+   end record;\n \n    procedure Read\n      (Stream : not null access Root_Stream_Type'Class;"}, {"sha": "a3e4179f5d1aa7834ad5b94348c348b2ae759d19", "filename": "gcc/ada/a-cfhase.ads", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2/gcc%2Fada%2Fa-cfhase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2/gcc%2Fada%2Fa-cfhase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhase.ads?ref=d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2010, Free Software Foundation, Inc.              --\n+--          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -29,19 +29,21 @@\n -- <http://www.gnu.org/licenses/>.                                          --\n ------------------------------------------------------------------------------\n \n---  The specification of this package is derived from the specification\n---  of package Ada.Containers.Bounded_Hashed_Sets in the Ada 2012 RM.\n---  The changes are\n+--  This spec is derived from package Ada.Containers.Bounded_Hashed_Sets in the\n+--  Ada 2012 RM. The modifications are to facilitate formal proofs by making it\n+--  easier to express properties.\n+\n+--  The modifications are:\n \n --    A parameter for the container is added to every function reading the\n---    content of a container: Element, Next, Query_Element, Has_Element,\n---    Key, Iterate, Equivalent_Elements. This change is motivated by the\n---    need to have cursors which are valid on different containers (typically\n---    a container C and its previous version C'Old) for expressing properties,\n+--    content of a container: Element, Next, Query_Element, Has_Element, Key,\n+--    Iterate, Equivalent_Elements. This change is motivated by the need to\n+--    have cursors which are valid on different containers (typically a\n+--    container C and its previous version C'Old) for expressing properties,\n --    which is not possible if cursors encapsulate an access to the underlying\n --    container.\n \n---    There are two new functions\n+--    There are two new functions:\n \n --      function Left  (Container : Set; Position : Cursor) return Set;\n --      function Right (Container : Set; Position : Cursor) return Set;\n@@ -230,7 +232,7 @@ package Ada.Containers.Formal_Hashed_Sets is\n         (Container : in out Set;\n          Position  : Cursor;\n          Process   : not null access\n-           procedure (Element : in out Element_Type));\n+                       procedure (Element : in out Element_Type));\n \n    end Generic_Keys;\n \n@@ -251,9 +253,8 @@ private\n          Has_Element : Boolean := False;\n       end record;\n \n-   package HT_Types is\n-     new Ada.Containers.Hash_Tables.Generic_Bounded_Hash_Table_Types\n-     (Node_Type);\n+   package HT_Types is new\n+     Ada.Containers.Hash_Tables.Generic_Bounded_Hash_Table_Types (Node_Type);\n \n    type HT_Access is access all HT_Types.Hash_Table_Type;\n \n@@ -272,10 +273,9 @@ private\n    use HT_Types;\n    use Ada.Streams;\n \n-   type Cursor is\n-      record\n-         Node      : Count_Type;\n-      end record;\n+   type Cursor is record\n+      Node : Count_Type;\n+   end record;\n \n    procedure Write\n      (Stream : not null access Root_Stream_Type'Class;"}, {"sha": "2ddefebff713cf5753b9bad9bd4d005c0ed7caee", "filename": "gcc/ada/a-cforma.ads", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2/gcc%2Fada%2Fa-cforma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2/gcc%2Fada%2Fa-cforma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cforma.ads?ref=d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2010, Free Software Foundation, Inc.              --\n+--          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -29,20 +29,22 @@\n -- <http://www.gnu.org/licenses/>.                                          --\n ------------------------------------------------------------------------------\n \n---  The specification of this package is derived from the specification\n---  of package Ada.Containers.Bounded_Ordered_Maps in the Ada 2012 RM.\n---  The changes are\n+--  This spec is derived from package Ada.Containers.Bounded_Ordered_Maps in\n+--  the Ada 2012 RM. The modifications are to facilitate formal proofs by\n+--  making it easier to express properties.\n+\n+--  The modifications are:\n \n --    A parameter for the container is added to every function reading the\n --    content of a container: Key, Element, Next, Query_Element, Previous,\n---    Has_Element, Iterate, Reverse_Iterate. This change is\n---    motivated by the need to have cursors which are valid on different\n---    containers (typically a container C and its previous version C'Old) for\n---    expressing properties, which is not possible if cursors encapsulate an\n---    access to the underlying container. The operators \"<\" and \">\" that could\n---    not be modified that way have been removed.\n+--    Has_Element, Iterate, Reverse_Iterate. This change is motivated by the\n+--    need to have cursors which are valid on different containers (typically a\n+--    container C and its previous version C'Old) for expressing properties,\n+--    which is not possible if cursors encapsulate an access to the underlying\n+--    container. The operators \"<\" and \">\" that could not be modified that way\n+--    have been removed.\n \n---    There are two new functions\n+--    There are two new functions:\n \n --      function Left  (Container : Map; Position : Cursor) return Map;\n --      function Right (Container : Map; Position : Cursor) return Map;\n@@ -56,7 +58,7 @@\n \n private with Ada.Containers.Red_Black_Trees;\n private with Ada.Streams;\n-with Ada.Containers; use Ada.Containers;\n+with Ada.Containers;\n \n generic\n    type Key_Type is private;\n@@ -105,13 +107,13 @@ package Ada.Containers.Formal_Ordered_Maps is\n      (Container : in out Map;\n       Position  : Cursor;\n       Process   : not null access\n-        procedure (Key : Key_Type; Element : Element_Type));\n+                    procedure (Key : Key_Type; Element : Element_Type));\n \n    procedure Update_Element\n      (Container : in out Map;\n       Position  : Cursor;\n       Process   : not null access\n-        procedure (Key : Key_Type; Element : in out Element_Type));\n+                    procedure (Key : Key_Type; Element : in out Element_Type));\n \n    procedure Move (Target : in out Map; Source : in out Map);\n \n@@ -192,8 +194,8 @@ package Ada.Containers.Formal_Ordered_Maps is\n \n    procedure Reverse_Iterate\n      (Container : Map;\n-      Process   :\n-        not null access procedure (Container : Map; Position : Cursor));\n+      Process   : not null access\n+                    procedure (Container : Map; Position : Cursor));\n \n    function Strict_Equal (Left, Right : Map) return Boolean;\n \n@@ -243,7 +245,7 @@ private\n    for Map_Access'Storage_Size use 0;\n \n    type Cursor is record\n-      Node      : Node_Access;\n+      Node : Node_Access;\n    end record;\n \n    procedure Write"}, {"sha": "89caaba5ba4b4169a18d6a55d28e69d05e00ee44", "filename": "gcc/ada/a-cforse.ads", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2/gcc%2Fada%2Fa-cforse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2/gcc%2Fada%2Fa-cforse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cforse.ads?ref=d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2010, Free Software Foundation, Inc.              --\n+--          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -29,20 +29,22 @@\n -- <http://www.gnu.org/licenses/>.                                          --\n ------------------------------------------------------------------------------\n \n---  The specification of this package is derived from the specification\n---  of package Ada.Containers.Bounded_Ordered_Sets in the Ada 2012 RM.\n---  The changes are\n+--  This spec is derived from package Ada.Containers.Bounded_Ordered_Sets in\n+--  the Ada 2012 RM. The modifications are to facilitate formal proofs by\n+--  making it easier to express properties.\n+\n+--  The modifications are:\n \n --    A parameter for the container is added to every function reading the\n --    content of a container: Key, Element, Next, Query_Element, Previous,\n---    Has_Element, Iterate, Reverse_Iterate. This change is\n---    motivated by the need to have cursors which are valid on different\n---    containers (typically a container C and its previous version C'Old) for\n---    expressing properties, which is not possible if cursors encapsulate an\n---    access to the underlying container. The operators \"<\" and \">\" that could\n---    not be modified that way have been removed.\n+--    Has_Element, Iterate, Reverse_Iterate. This change is motivated by the\n+--    need to have cursors which are valid on different containers (typically\n+--    a container C and its previous version C'Old) for expressing properties,\n+--    which is not possible if cursors encapsulate an access to the underlying\n+--    container. The operators \"<\" and \">\" that could not be modified that way\n+--    have been removed.\n \n---    There are two new functions\n+--    There are two new functions:\n \n --      function Left  (Container : Set; Position : Cursor) return Set;\n --      function Right (Container : Set; Position : Cursor) return Set;\n@@ -58,7 +60,6 @@ private with Ada.Containers.Red_Black_Trees;\n private with Ada.Streams;\n \n with Ada.Containers;\n-use Ada.Containers;\n \n generic\n    type Element_Type is private;\n@@ -206,8 +207,8 @@ package Ada.Containers.Formal_Ordered_Sets is\n \n    procedure Reverse_Iterate\n      (Container : Set;\n-      Process   :\n-        not null access procedure (Container : Set; Position : Cursor));\n+      Process   : not null access\n+                    procedure (Container : Set; Position : Cursor));\n \n    generic\n       type Key_Type (<>) is private;\n@@ -245,7 +246,7 @@ package Ada.Containers.Formal_Ordered_Sets is\n         (Container : in out Set;\n          Position  : Cursor;\n          Process   : not null access\n-           procedure (Element : in out Element_Type));\n+                       procedure (Element : in out Element_Type));\n \n    end Generic_Keys;\n \n@@ -291,7 +292,7 @@ private\n    for Set_Access'Storage_Size use 0;\n \n    type Cursor is record\n-      Node      : Count_Type;\n+      Node : Count_Type;\n    end record;\n \n    procedure Write\n@@ -320,7 +321,6 @@ private\n \n    for Set'Read use Read;\n \n-   Empty_Set : constant Set :=\n-                 (Capacity => 0, others => <>);\n+   Empty_Set : constant Set := (Capacity => 0, others => <>);\n \n end Ada.Containers.Formal_Ordered_Sets;"}, {"sha": "1b52325682a47af017b4f2f340e74574525d300f", "filename": "gcc/ada/a-cofove.ads", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2/gcc%2Fada%2Fa-cofove.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2/gcc%2Fada%2Fa-cofove.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cofove.ads?ref=d11cfaf8ee1f758ccbeda3eb23c22042e3b7b1d2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2010, Free Software Foundation, Inc.              --\n+--          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -29,19 +29,21 @@\n -- <http://www.gnu.org/licenses/>.                                          --\n ------------------------------------------------------------------------------\n \n---  The specification of this package is derived from the specification\n---  of package Ada.Containers.Bounded_Ordered_Maps in the Ada 2012 RM.\n---  The changes are\n+--  This spec is derived from package Ada.Containers.Bounded_Vectors in the Ada\n+--  2012 RM. The modifications are to facilitate formal proofs by making it\n+--  easier to express properties.\n+\n+--  The modifications are:\n \n --    A parameter for the container is added to every function reading the\n---    content of a container: Element, Next, Query_Element, Previous,\n---    Has_Element, Iterate, Reverse_Iterate. This change is\n---    motivated by the need to have cursors which are valid on different\n---    containers (typically a container C and its previous version C'Old) for\n---    expressing properties, which is not possible if cursors encapsulate an\n---    access to the underlying container.\n+--    content of a container: Element, Next, Query_Element, Previous, Iterate,\n+--    Has_Element, Reverse_Iterate. This change is motivated by the need\n+--    to have cursors which are valid on different containers (typically a\n+--    container C and its previous version C'Old) for expressing properties,\n+--    which is not possible if cursors encapsulate an access to the underlying\n+--    container.\n \n---    There are two new functions\n+--    There are two new functions:\n \n --      function Left  (Container : Vector; Position : Cursor) return Vector;\n --      function Right (Container : Vector; Position : Cursor) return Vector;\n@@ -323,13 +325,13 @@ package Ada.Containers.Formal_Vectors is\n \n    procedure Iterate\n      (Container : Vector;\n-      Process   :\n-        not null access procedure (Container : Vector; Position : Cursor));\n+      Process   : not null access\n+                    procedure (Container : Vector; Position : Cursor));\n \n    procedure Reverse_Iterate\n      (Container : Vector;\n-      Process   :\n-        not null access procedure (Container : Vector; Position : Cursor));\n+      Process   : not null access\n+                    procedure (Container : Vector; Position : Cursor));\n \n    generic\n       with function \"<\" (Left, Right : Element_Type) return Boolean is <>;\n@@ -397,8 +399,8 @@ private\n    for Vector'Read use Read;\n \n    type Cursor is record\n-      Valid     : Boolean := True;\n-      Index     : Index_Type := Index_Type'First;\n+      Valid : Boolean := True;\n+      Index : Index_Type := Index_Type'First;\n    end record;\n \n    procedure Write"}]}