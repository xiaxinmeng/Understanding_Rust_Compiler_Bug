{"sha": "c2a141a0f3fe5472f667083fa3f94bbfc1e400c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJhMTQxYTBmM2ZlNTQ3MmY2NjcwODNmYTNmOTRiYmZjMWU0MDBjMg==", "commit": {"author": {"name": "Jeff Sturm", "email": "jsturm@one-point.com", "date": "2003-11-20T03:34:59Z"}, "committer": {"name": "Jeff Sturm", "email": "jsturm@gcc.gnu.org", "date": "2003-11-20T03:34:59Z"}, "message": "re PR rtl-optimization/13024 (gcj can't build current rhug)\n\nFix PR java/13024.\n* except.c (prepare_eh_table_type): Allocate variable-sized\nbuffer `buf' with alloca.\n\nFrom-SVN: r73752", "tree": {"sha": "1d6369d0db9aa36c0c4de45e8fd11dcf130d3214", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d6369d0db9aa36c0c4de45e8fd11dcf130d3214"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2a141a0f3fe5472f667083fa3f94bbfc1e400c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2a141a0f3fe5472f667083fa3f94bbfc1e400c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2a141a0f3fe5472f667083fa3f94bbfc1e400c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2a141a0f3fe5472f667083fa3f94bbfc1e400c2/comments", "author": null, "committer": null, "parents": [{"sha": "6df5a5c72a98bd1a6c0ddbfd342e233ef7840f72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6df5a5c72a98bd1a6c0ddbfd342e233ef7840f72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6df5a5c72a98bd1a6c0ddbfd342e233ef7840f72"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "13c7625e522ea48b5365b7822ee6f999d9266334", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a141a0f3fe5472f667083fa3f94bbfc1e400c2/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a141a0f3fe5472f667083fa3f94bbfc1e400c2/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=c2a141a0f3fe5472f667083fa3f94bbfc1e400c2", "patch": "@@ -1,3 +1,9 @@\n+2003-11-19  Jeff Sturm  <jsturm@one-point.com>\n+\n+\tFix PR java/13024.\n+\t* except.c (prepare_eh_table_type): Allocate variable-sized\n+\tbuffer `buf' with alloca.\n+\n 2003-11-17  Jeff Sturm  <jsturm@one-point.com>\n \n \tFix PR java/12857."}, {"sha": "c0fa800c26205de5792d34838aefdd54a7bab669", "filename": "gcc/java/except.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a141a0f3fe5472f667083fa3f94bbfc1e400c2/gcc%2Fjava%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a141a0f3fe5472f667083fa3f94bbfc1e400c2/gcc%2Fjava%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexcept.c?ref=c2a141a0f3fe5472f667083fa3f94bbfc1e400c2", "patch": "@@ -312,6 +312,10 @@ tree\n prepare_eh_table_type (tree type)\n {\n   tree exp;\n+  const char *name;\n+  char *buf;\n+  tree decl;\n+  tree utf8_ref;\n \n   /* The \"type\" (match_info) in a (Java) exception table is a pointer to:\n    * a) NULL - meaning match any type in a try-finally.\n@@ -323,10 +327,9 @@ prepare_eh_table_type (tree type)\n     exp = NULL_TREE;\n   else if (is_compiled_class (type) && !flag_indirect_dispatch)\n     {\n-      char buf[64];\n-      tree decl;\n-      sprintf (buf, \"%s_ref\", \n-\t       IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (type))));\n+      name = IDENTIFIER_POINTER (DECL_NAME (TYPE_NAME (type)));\n+      buf = alloca (strlen (name) + 5);\n+      sprintf (buf, \"%s_ref\", name);\n       decl = build_decl (VAR_DECL, get_identifier (buf), ptr_type_node);\n       TREE_STATIC (decl) = 1;\n       DECL_ARTIFICIAL (decl) = 1;\n@@ -342,11 +345,10 @@ prepare_eh_table_type (tree type)\n     }\n   else\n     {\n-      tree decl;\n-      tree utf8_ref = build_utf8_ref (DECL_NAME (TYPE_NAME (type)));\n-      char buf[64];\n-      sprintf (buf, \"%s_ref\", \n-\t       IDENTIFIER_POINTER (DECL_NAME (TREE_OPERAND (utf8_ref, 0))));\n+      utf8_ref = build_utf8_ref (DECL_NAME (TYPE_NAME (type)));\n+      name = IDENTIFIER_POINTER (DECL_NAME (TREE_OPERAND (utf8_ref, 0)));\n+      buf = alloca (strlen (name) + 5);\n+      sprintf (buf, \"%s_ref\", name);\n       decl = build_decl (VAR_DECL, get_identifier (buf), utf8const_ptr_type);\n       TREE_STATIC (decl) = 1;\n       DECL_ARTIFICIAL (decl) = 1;"}]}