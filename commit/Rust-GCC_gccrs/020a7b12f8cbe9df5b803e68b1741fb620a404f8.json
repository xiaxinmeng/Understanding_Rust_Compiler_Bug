{"sha": "020a7b12f8cbe9df5b803e68b1741fb620a404f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDIwYTdiMTJmOGNiZTlkZjViODAzZTY4YjE3NDFmYjYyMGE0MDRmOA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2002-11-26T07:28:02Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2002-11-26T07:28:02Z"}, "message": "spe.h (__ev_create_sfix32_fs): Change macro into new function.\n\n2002-11-25  Aldy Hernandez  <aldyh@redhat.com>\n\n        * config/rs6000/spe.h (__ev_create_sfix32_fs): Change macro into\n        new function.\n        (__ev_create_ufix32_fs): Same.\n        (__ev_get_sfix32_fs_internal): New.\n        (__ev_get_sfix32_fs): Define to use function.\n        (__ev_get_ufix32_fs_internal): New.\n        (__ev_get_ufix32_fs): Define to use function.\n        (__ev_get_upper_ufix32_fs): Call __ev_get_ufix32_fs.\n        (__ev_get_lower_ufix32_fs): Same.\n        (__ev_get_upper_sfix32_fs): Call __ev_get_sfix32_fs.\n        (__ev_get_lower_sfix32_fs): Same.\n        (__ev_set_sfix32_fs_internal): New.\n        (__ev_set_ufix32_fs_internal): New.\n        (__ev_set_sfix32_fs): Call __ev_set_sfix32_fs_internal.\n        (__ev_set_ufix32_fs): Call __ev_set_ufix32_fs_internal.\n        (__ev_set_upper_sfix32_fs): Call function.\n        (__ev_set_lower_sfix32_fs): Same.\n        (__ev_set_upper_ufix32_fs): Same.\n        (__ev_set_lower_ufix32_fs): Same.\n\nFrom-SVN: r59498", "tree": {"sha": "e65fb42415168a1796a4f2c9caea34db94bd948b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e65fb42415168a1796a4f2c9caea34db94bd948b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/020a7b12f8cbe9df5b803e68b1741fb620a404f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/020a7b12f8cbe9df5b803e68b1741fb620a404f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/020a7b12f8cbe9df5b803e68b1741fb620a404f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/020a7b12f8cbe9df5b803e68b1741fb620a404f8/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2003cd3794588fe085d0d0b7d25f0ee368bb7694", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2003cd3794588fe085d0d0b7d25f0ee368bb7694", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2003cd3794588fe085d0d0b7d25f0ee368bb7694"}], "stats": {"total": 117, "additions": 103, "deletions": 14}, "files": [{"sha": "95683954718ff01791b8460d0bb80cc058cd4df6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020a7b12f8cbe9df5b803e68b1741fb620a404f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020a7b12f8cbe9df5b803e68b1741fb620a404f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=020a7b12f8cbe9df5b803e68b1741fb620a404f8", "patch": "@@ -1,3 +1,25 @@\n+2002-11-25  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * config/rs6000/spe.h (__ev_create_sfix32_fs): Change macro into\n+        new function.\n+        (__ev_create_ufix32_fs): Same.\n+        (__ev_get_sfix32_fs_internal): New.\n+        (__ev_get_sfix32_fs): Define to use function.\n+        (__ev_get_ufix32_fs_internal): New.\n+        (__ev_get_ufix32_fs): Define to use function.\n+        (__ev_get_upper_ufix32_fs): Call __ev_get_ufix32_fs.\n+        (__ev_get_lower_ufix32_fs): Same.\n+        (__ev_get_upper_sfix32_fs): Call __ev_get_sfix32_fs.\n+        (__ev_get_lower_sfix32_fs): Same.\n+        (__ev_set_sfix32_fs_internal): New.\n+        (__ev_set_ufix32_fs_internal): New.\n+        (__ev_set_sfix32_fs): Call __ev_set_sfix32_fs_internal.\n+        (__ev_set_ufix32_fs): Call __ev_set_ufix32_fs_internal.\n+        (__ev_set_upper_sfix32_fs): Call function.\n+        (__ev_set_lower_sfix32_fs): Same.\n+        (__ev_set_upper_ufix32_fs): Same.\n+        (__ev_set_lower_ufix32_fs): Same.\n+\n 2002-11-25  Douglas B Rupp  <rupp@gnat.com>\n \n \t* gcc.c (do_spec_1): Reset delete_this_arg to zero."}, {"sha": "044e6883b43b87efbd3f8abc096e311615d2d320", "filename": "gcc/config/rs6000/spe.h", "status": "modified", "additions": 81, "deletions": 14, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/020a7b12f8cbe9df5b803e68b1741fb620a404f8/gcc%2Fconfig%2Frs6000%2Fspe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/020a7b12f8cbe9df5b803e68b1741fb620a404f8/gcc%2Fconfig%2Frs6000%2Fspe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fspe.h?ref=020a7b12f8cbe9df5b803e68b1741fb620a404f8", "patch": "@@ -541,8 +541,6 @@ __internal_ev_mwhgumian (__ev64_opaque__ a, __ev64_opaque__ b)\n \n #define __ev_create_ufix32_u32 __ev_create_u32\n #define __ev_create_sfix32_s32 __ev_create_s32\n-#define __ev_create_sfix32_fs __ev_create_fs\n-#define __ev_create_ufix32_fs __ev_create_fs\n \n static inline __ev64_opaque__\n __ev_create_s16 (int16_t a, int16_t b, int16_t c, int16_t d)\n@@ -624,6 +622,24 @@ __ev_create_fs (float a, float b)\n   return u.v;\n }\n \n+static inline __ev64_opaque__\n+__ev_create_sfix32_fs (float a, float b)\n+{\n+  __ev64_opaque__ ev;\n+\n+  ev = (__ev64_opaque__) __ev_create_fs (a, b);\n+  return (__ev64_opaque__) __builtin_spe_evfsctsf (ev);\n+}\n+\n+static inline __ev64_opaque__\n+__ev_create_ufix32_fs (float a, float b)\n+{\n+  __ev64_opaque__ ev;\n+\n+  ev = (__ev64_opaque__) __ev_create_fs (a, b);\n+  return (__ev64_opaque__) __builtin_spe_evfsctuf (ev);\n+}\n+\n static inline __ev64_opaque__\n __ev_create_s64 (int64_t a)\n {\n@@ -665,10 +681,10 @@ __ev_create_u64 (uint64_t a)\n #define __ev_get_lower_ufix32_u32(a) __ev_get_lower_u32(a)\n #define __ev_get_upper_sfix32_s32(a) __ev_get_upper_s32(a)\n #define __ev_get_lower_sfix32_s32(a) __ev_get_lower_s32(a)\n-#define __ev_get_upper_sfix32_fs(a) __ev_get_upper_fs(a)\n-#define __ev_get_lower_sfix32_fs(a) __ev_get_lower_fs(a)\n-#define __ev_get_upper_ufix32_fs(a) __ev_get_upper_fs(a)\n-#define __ev_get_lower_ufix32_fs(a) __ev_get_lower_fs(a)\n+#define __ev_get_upper_sfix32_fs(a)  __ev_get_sfix32_fs (a, 0)\n+#define __ev_get_lower_sfix32_fs(a)  __ev_get_sfix32_fs (a, 1)\n+#define __ev_get_upper_ufix32_fs(a)  __ev_get_ufix32_fs (a, 0)\n+#define __ev_get_lower_ufix32_fs(a)  __ev_get_ufix32_fs (a, 1)\n \n #define __ev_get_u32(a, b) __ev_get_u32_internal ((__ev64_opaque__) a, b)\n #define __ev_get_s32(a, b) __ev_get_s32_internal ((__ev64_opaque__) a, b)\n@@ -678,8 +694,8 @@ __ev_create_u64 (uint64_t a)\n \n #define __ev_get_ufix32_u32(a, b) __ev_get_u32 (a, b)\n #define __ev_get_sfix32_s32(a, b) __ev_get_s32 (a, b)\n-#define __ev_get_ufix32_fs(a, b) __ev_get_fs (a, b)\n-#define __ev_get_sfix32_fs(a, b) __ev_get_fs (a, b)\n+#define __ev_get_ufix32_fs(a, b)     __ev_get_ufix32_fs_internal ((__ev64_opaque__)(a), b)\n+#define __ev_get_sfix32_fs(a, b)     __ev_get_sfix32_fs_internal ((__ev64_opaque__)(a), b)\n \n static inline uint32_t\n __ev_get_u32_internal (__ev64_opaque__ a, uint32_t pos)\n@@ -720,6 +736,24 @@ __ev_get_fs_internal (__ev64_opaque__ a, uint32_t pos)\n   return u.f[pos];\n }\n \n+static inline float\n+__ev_get_sfix32_fs_internal (__ev64_opaque__ a, uint32_t pos)\n+{\n+  __ev64_fs__ v;\n+\n+  v = __builtin_spe_evfscfsf (a);\n+  return __ev_get_fs_internal (v, pos);\n+}\n+\n+static inline float\n+__ev_get_ufix32_fs_internal (__ev64_opaque__ a, uint32_t pos)\n+{\n+  __ev64_fs__ v;\n+\n+  v = __builtin_spe_evfscfuf (a);\n+  return __ev_get_fs_internal (v, pos);\n+}\n+\n static inline uint16_t\n __ev_get_u16_internal (__ev64_opaque__ a, uint32_t pos)\n {\n@@ -756,8 +790,9 @@ __ev_get_s16_internal (__ev64_opaque__ a, uint32_t pos)\n \n #define __ev_set_ufix32_u32 __ev_set_u32\n #define __ev_set_sfix32_s32 __ev_set_s32\n-#define __ev_set_ufix32_fs __ev_set_fs\n-#define __ev_set_sfix32_fs __ev_set_fs\n+\n+#define __ev_set_sfix32_fs(a, b, c)  __ev_set_sfix32_fs_internal ((__ev64_opaque__) (a), b, c)\n+#define __ev_set_ufix32_fs(a, b, c)  __ev_set_ufix32_fs_internal ((__ev64_opaque__) (a), b, c)\n \n #define __ev_set_upper_u32(a, b) __ev_set_u32(a, b, 0)\n #define __ev_set_lower_u32(a, b) __ev_set_u32 (a, b, 1)\n@@ -769,10 +804,10 @@ __ev_get_s16_internal (__ev64_opaque__ a, uint32_t pos)\n #define __ev_set_lower_ufix32_u32 __ev_set_lower_u32\n #define __ev_set_upper_sfix32_s32 __ev_set_upper_s32\n #define __ev_set_lower_sfix32_s32 __ev_set_lower_s32\n-#define __ev_set_upper_sfix32_fs __ev_set_upper_fs\n-#define __ev_set_lower_sfix32_fs __ev_set_lower_fs\n-#define __ev_set_upper_ufix32_fs __ev_set_upper_fs\n-#define __ev_set_lower_ufix32_fs __ev_set_lower_fs\n+#define __ev_set_upper_sfix32_fs(a, b)  __ev_set_sfix32_fs (a, b, 0)\n+#define __ev_set_lower_sfix32_fs(a, b)  __ev_set_sfix32_fs (a, b, 1)\n+#define __ev_set_upper_ufix32_fs(a, b)  __ev_set_ufix32_fs (a, b, 0)\n+#define __ev_set_lower_ufix32_fs(a, b)  __ev_set_ufix32_fs (a, b, 1)\n \n #define __ev_set_acc_vec64(a) __builtin_spe_evmra ((__ev64_opaque__)(a))\n \n@@ -836,6 +871,38 @@ __ev_set_fs_internal (__ev64_opaque__ a, float b, uint32_t pos )\n   return u.v;\n }\n \n+static inline __ev64_opaque__\n+__ev_set_sfix32_fs_internal (__ev64_opaque__ a, float b, uint32_t pos)\n+{\n+  __ev64_opaque__ v;\n+  float other;\n+\n+  /* Get other half.  */\n+  other = __ev_get_fs_internal (a, pos ^ 1);\n+\n+  /* Make an sfix32 with 'b'.  */\n+  v = __ev_create_sfix32_fs (b, b);\n+\n+  /* Set other half to what it used to be.  */\n+  return __ev_set_fs_internal (v, other, pos ^ 1);\n+}\n+\n+static inline __ev64_opaque__\n+__ev_set_ufix32_fs_internal (__ev64_opaque__ a, float b, uint32_t pos)\n+{\n+  __ev64_opaque__ v;\n+  float other;\n+\n+  /* Get other half.  */\n+  other = __ev_get_fs_internal (a, pos ^ 1);\n+\n+  /* Make an ufix32 with 'b'.  */\n+  v = __ev_create_ufix32_fs (b, b);\n+\n+  /* Set other half to what it used to be.  */\n+  return __ev_set_fs_internal (v, other, pos ^ 1);\n+}\n+\n static inline __ev64_opaque__\n __ev_set_u16_internal (__ev64_opaque__ a, uint16_t b, uint32_t pos )\n {"}]}