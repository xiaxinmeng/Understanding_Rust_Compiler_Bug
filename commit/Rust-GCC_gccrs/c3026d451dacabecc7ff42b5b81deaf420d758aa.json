{"sha": "c3026d451dacabecc7ff42b5b81deaf420d758aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzMwMjZkNDUxZGFjYWJlY2M3ZmY0MmI1YjgxZGVhZjQyMGQ3NThhYQ==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2020-05-27T14:46:27Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-10T09:16:20Z"}, "message": "[Ada] Fix detection of volatile properties in SPARK\n\ngcc/ada/\n\n\t* sem_util.adb (Has_Enabled_Property): Add handling of\n\tnon-variable objects.", "tree": {"sha": "dc83577d123b42f951afab50a953dfde38342386", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc83577d123b42f951afab50a953dfde38342386"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3026d451dacabecc7ff42b5b81deaf420d758aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3026d451dacabecc7ff42b5b81deaf420d758aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3026d451dacabecc7ff42b5b81deaf420d758aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3026d451dacabecc7ff42b5b81deaf420d758aa/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6ddbacd3ad9e3a34f77311dbb136d977c79e607", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6ddbacd3ad9e3a34f77311dbb136d977c79e607", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6ddbacd3ad9e3a34f77311dbb136d977c79e607"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "4b4f4af37547c5b418efdcc30aa4c9d3aeeb024b", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3026d451dacabecc7ff42b5b81deaf420d758aa/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3026d451dacabecc7ff42b5b81deaf420d758aa/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=c3026d451dacabecc7ff42b5b81deaf420d758aa", "patch": "@@ -11537,6 +11537,14 @@ package body Sem_Util is\n       elsif Ekind (Item_Id) = E_Variable then\n          return Type_Or_Variable_Has_Enabled_Property (Item_Id);\n \n+      --  Other objects can only inherit properties through their type. We\n+      --  cannot call directly Type_Or_Variable_Has_Enabled_Property on\n+      --  these as they don't have contracts attached, which is expected by\n+      --  this function.\n+\n+      elsif Is_Object (Item_Id) then\n+         return Type_Or_Variable_Has_Enabled_Property (Etype (Item_Id));\n+\n       elsif Is_Type (Item_Id) then\n          return Type_Or_Variable_Has_Enabled_Property\n            (Item_Id => First_Subtype (Item_Id));"}]}