{"sha": "b432106bc016fe9f794a71629274244b94d1dfe0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQzMjEwNmJjMDE2ZmU5Zjc5NGE3MTYyOTI3NDI0NGI5NGQxZGZlMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-09-20T19:38:06Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-09-20T19:38:06Z"}, "message": "cp-tree.h (DECL_TEMPLOID_INSTANTIATION): New.\n\n\t* cp-tree.h (DECL_TEMPLOID_INSTANTIATION): New.\n\t(DECL_GENERATED_P): New.\n\t* class.c (finalize_literal_type_property): Use them.\n\t* semantics.c (is_instantiation_of_constexpr): Likewise.\n\t(register_constexpr_fundef): Likewise.\n\nFrom-SVN: r179017", "tree": {"sha": "f03e0fbda63608f797838b232ee3834ac2942fd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f03e0fbda63608f797838b232ee3834ac2942fd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b432106bc016fe9f794a71629274244b94d1dfe0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b432106bc016fe9f794a71629274244b94d1dfe0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b432106bc016fe9f794a71629274244b94d1dfe0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b432106bc016fe9f794a71629274244b94d1dfe0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a4d25b444ddd3e7bede9de07530116456b9e69a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4d25b444ddd3e7bede9de07530116456b9e69a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4d25b444ddd3e7bede9de07530116456b9e69a8"}], "stats": {"total": 50, "additions": 45, "deletions": 5}, "files": [{"sha": "c9c4a215f70079405c5aa9eccc6c8ab618c4d888", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b432106bc016fe9f794a71629274244b94d1dfe0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b432106bc016fe9f794a71629274244b94d1dfe0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b432106bc016fe9f794a71629274244b94d1dfe0", "patch": "@@ -1,5 +1,11 @@\n 2011-09-20  Jason Merrill  <jason@redhat.com>\n \n+\t* cp-tree.h (DECL_TEMPLOID_INSTANTIATION): New.\n+\t(DECL_GENERATED_P): New.\n+\t* class.c (finalize_literal_type_property): Use them.\n+\t* semantics.c (is_instantiation_of_constexpr): Likewise.\n+\t(register_constexpr_fundef): Likewise.\n+\n \t* call.c (convert_default_arg): Avoid redundant copy.\n \t* tree.c (bot_manip): Copy everything.\n "}, {"sha": "e39841680327b8a051cda69ed6925d23d66b6732", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b432106bc016fe9f794a71629274244b94d1dfe0/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b432106bc016fe9f794a71629274244b94d1dfe0/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=b432106bc016fe9f794a71629274244b94d1dfe0", "patch": "@@ -4581,7 +4581,7 @@ finalize_literal_type_property (tree t)\n \t  && !DECL_CONSTRUCTOR_P (fn))\n \t{\n \t  DECL_DECLARED_CONSTEXPR_P (fn) = false;\n-\t  if (!DECL_TEMPLATE_INFO (fn))\n+\t  if (!DECL_GENERATED_P (fn))\n \t    {\n \t      error (\"enclosing class of constexpr non-static member \"\n \t\t     \"function %q+#D is not a literal type\", fn);"}, {"sha": "bcfc3b3be0fa21699332ee2f95a9f8e34ad3d4fc", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b432106bc016fe9f794a71629274244b94d1dfe0/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b432106bc016fe9f794a71629274244b94d1dfe0/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=b432106bc016fe9f794a71629274244b94d1dfe0", "patch": "@@ -3705,6 +3705,17 @@ more_aggr_init_expr_args_p (const aggr_init_expr_arg_iterator *iter)\n #define DECL_FRIEND_PSEUDO_TEMPLATE_INSTANTIATION(DECL) \\\n   (DECL_TEMPLATE_INFO (DECL) && !DECL_USE_TEMPLATE (DECL))\n \n+/* Nonzero if DECL is a function generated from a function 'temploid',\n+   i.e. template, member of class template, or dependent friend.  */\n+#define DECL_TEMPLOID_INSTANTIATION(DECL)\t\t\\\n+  (DECL_TEMPLATE_INSTANTIATION (DECL)\t\t\t\\\n+   || DECL_FRIEND_PSEUDO_TEMPLATE_INSTANTIATION (DECL))\n+\n+/* Nonzero if DECL is either defined implicitly by the compiler or\n+   generated from a temploid.  */\n+#define DECL_GENERATED_P(DECL) \\\n+  (DECL_TEMPLOID_INSTANTIATION (DECL) || DECL_DEFAULTED_FN (DECL))\n+\n /* Nonzero iff we are currently processing a declaration for an\n    entity with its own template parameter list, and which is not a\n    full specialization.  */"}, {"sha": "150805f7e8108ac301eabb328d6e6bdff3056b12", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b432106bc016fe9f794a71629274244b94d1dfe0/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b432106bc016fe9f794a71629274244b94d1dfe0/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=b432106bc016fe9f794a71629274244b94d1dfe0", "patch": "@@ -3559,7 +3559,7 @@ emit_associated_thunks (tree fn)\n static inline bool\n is_instantiation_of_constexpr (tree fun)\n {\n-  return (DECL_TEMPLATE_INFO (fun)\n+  return (DECL_TEMPLOID_INSTANTIATION (fun)\n \t  && DECL_DECLARED_CONSTEXPR_P (DECL_TEMPLATE_RESULT\n \t\t\t\t\t(DECL_TI_TEMPLATE (fun))));\n }\n@@ -5820,7 +5820,7 @@ register_constexpr_fundef (tree fun, tree body)\n   constexpr_fundef entry;\n   constexpr_fundef **slot;\n \n-  if (!is_valid_constexpr_fn (fun, !DECL_TEMPLATE_INFO (fun)))\n+  if (!is_valid_constexpr_fn (fun, !DECL_GENERATED_P (fun)))\n     return NULL;\n \n   body = massage_constexpr_body (fun, body);\n@@ -5833,13 +5833,13 @@ register_constexpr_fundef (tree fun, tree body)\n \n   if (!potential_rvalue_constant_expression (body))\n     {\n-      if (!DECL_TEMPLATE_INFO (fun))\n+      if (!DECL_GENERATED_P (fun))\n \trequire_potential_rvalue_constant_expression (body);\n       return NULL;\n     }\n \n   if (DECL_CONSTRUCTOR_P (fun)\n-      && cx_check_missing_mem_inits (fun, body, !DECL_TEMPLATE_INFO (fun)))\n+      && cx_check_missing_mem_inits (fun, body, !DECL_GENERATED_P (fun)))\n     return NULL;\n \n   /* Create the constexpr function table if necessary.  */"}, {"sha": "fa9a80ca69891c990d77910223191358fe73b7cc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b432106bc016fe9f794a71629274244b94d1dfe0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b432106bc016fe9f794a71629274244b94d1dfe0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b432106bc016fe9f794a71629274244b94d1dfe0", "patch": "@@ -1,5 +1,7 @@\n 2011-09-20  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/constexpr-generated1.C: New.\n+\n \tPR c++/50442\n \t* g++.dg/overload/ref-conv1.C: New.\n "}, {"sha": "73ddc8f5c2e85164e6cd52187f54f4ef2505d252", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-generated1.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b432106bc016fe9f794a71629274244b94d1dfe0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-generated1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b432106bc016fe9f794a71629274244b94d1dfe0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-generated1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-generated1.C?ref=b432106bc016fe9f794a71629274244b94d1dfe0", "patch": "@@ -0,0 +1,21 @@\n+// { dg-options -std=c++0x }\n+\n+template <class T> struct A\n+{\n+  constexpr T f ();\n+};\n+\n+int g();\n+\n+// We should complain about this.\n+template<> constexpr int A<int>::f()\n+{ return g(); }\t\t\t// { dg-error \"non-constexpr\" }\n+\n+// But not about this.\n+struct B\n+{\n+  int i;\n+  constexpr B(int i = g()):i(i) { }\n+};\n+struct C: B { };\n+C c;"}]}