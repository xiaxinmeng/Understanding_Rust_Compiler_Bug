{"sha": "898240946ca2e351889015d36a60498e40b4a9fc", "node_id": "C_kwDOANBUbNoAKDg5ODI0MDk0NmNhMmUzNTE4ODkwMTVkMzZhNjA0OThlNDBiNGE5ZmM", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-10-19T17:30:36Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-02-21T11:36:39Z"}, "message": "gccrs: Add closures to lints and error checking\n\ngcc/rust/ChangeLog:\n\n\t* checks/errors/rust-const-checker.cc (ConstChecker::visit): Visit closures properly.\n\t* checks/errors/rust-unsafe-checker.cc (UnsafeChecker::visit): Likewise.\n\t* checks/lints/rust-lint-marklive.h: Likewise.", "tree": {"sha": "8fb2a1cddd4f66490bcfa5b6244f4b6f658476f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fb2a1cddd4f66490bcfa5b6244f4b6f658476f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/898240946ca2e351889015d36a60498e40b4a9fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/898240946ca2e351889015d36a60498e40b4a9fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/898240946ca2e351889015d36a60498e40b4a9fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/898240946ca2e351889015d36a60498e40b4a9fc/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d021d9e019dd2a7b5442653a20e126f37fd8f39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d021d9e019dd2a7b5442653a20e126f37fd8f39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d021d9e019dd2a7b5442653a20e126f37fd8f39"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "9161fa1ea2aefc7e270ca03fdbabc6b647fb0429", "filename": "gcc/rust/checks/errors/rust-const-checker.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898240946ca2e351889015d36a60498e40b4a9fc/gcc%2Frust%2Fchecks%2Ferrors%2Frust-const-checker.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898240946ca2e351889015d36a60498e40b4a9fc/gcc%2Frust%2Fchecks%2Ferrors%2Frust-const-checker.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fchecks%2Ferrors%2Frust-const-checker.cc?ref=898240946ca2e351889015d36a60498e40b4a9fc", "patch": "@@ -383,7 +383,9 @@ ConstChecker::visit (FieldAccessExpr &expr)\n \n void\n ConstChecker::visit (ClosureExpr &expr)\n-{}\n+{\n+  expr.get_expr ()->accept_vis (*this);\n+}\n \n void\n ConstChecker::visit (BlockExpr &expr)"}, {"sha": "3d534743eeb5f6bc45f16e9db8f124ed0ac8fc7c", "filename": "gcc/rust/checks/errors/rust-unsafe-checker.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898240946ca2e351889015d36a60498e40b4a9fc/gcc%2Frust%2Fchecks%2Ferrors%2Frust-unsafe-checker.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898240946ca2e351889015d36a60498e40b4a9fc/gcc%2Frust%2Fchecks%2Ferrors%2Frust-unsafe-checker.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fchecks%2Ferrors%2Frust-unsafe-checker.cc?ref=898240946ca2e351889015d36a60498e40b4a9fc", "patch": "@@ -454,7 +454,9 @@ UnsafeChecker::visit (FieldAccessExpr &expr)\n \n void\n UnsafeChecker::visit (ClosureExpr &expr)\n-{}\n+{\n+  expr.get_expr ()->accept_vis (*this);\n+}\n \n void\n UnsafeChecker::visit (BlockExpr &expr)"}, {"sha": "dcc625d0b9d4763fd95e39dfce7c216ae748cf6b", "filename": "gcc/rust/checks/lints/rust-lint-marklive.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/898240946ca2e351889015d36a60498e40b4a9fc/gcc%2Frust%2Fchecks%2Flints%2Frust-lint-marklive.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/898240946ca2e351889015d36a60498e40b4a9fc/gcc%2Frust%2Fchecks%2Flints%2Frust-lint-marklive.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fchecks%2Flints%2Frust-lint-marklive.h?ref=898240946ca2e351889015d36a60498e40b4a9fc", "patch": "@@ -285,6 +285,11 @@ class MarkLive : public MarkLiveBase\n       item->accept_vis (*this);\n   }\n \n+  void visit (HIR::ClosureExpr &expr) override\n+  {\n+    expr.get_expr ()->accept_vis (*this);\n+  }\n+\n private:\n   std::vector<HirId> worklist;\n   std::set<HirId> liveSymbols;"}]}