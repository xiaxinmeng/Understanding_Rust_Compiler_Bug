{"sha": "7297afa029130a56790114e7a244b21ba603fb45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI5N2FmYTAyOTEzMGE1Njc5MDExNGU3YTI0NGIyMWJhNjAzZmI0NQ==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2003-12-01T17:58:13Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2003-12-01T17:58:13Z"}, "message": "ggc-zone.c (ggc_pch_write_object): Calculate object size using ggc_get_size (which accounts for large objects...\n\n2003-12-01  Daniel Berlin  <dberlin@dberlin.org>\n\n\t* ggc-zone.c (ggc_pch_write_object): Calculate object size using\n\tggc_get_size (which accounts for large objects properly).\n\nFrom-SVN: r74114", "tree": {"sha": "430b56172ed369bae3109cc6b44fa1f1104f467f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/430b56172ed369bae3109cc6b44fa1f1104f467f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7297afa029130a56790114e7a244b21ba603fb45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7297afa029130a56790114e7a244b21ba603fb45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7297afa029130a56790114e7a244b21ba603fb45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7297afa029130a56790114e7a244b21ba603fb45/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fccab17eadb0b80031502a66403aa9541d531ce9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fccab17eadb0b80031502a66403aa9541d531ce9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fccab17eadb0b80031502a66403aa9541d531ce9"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "c9f29da8e642f408b385a305c5c341daa3fa79dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7297afa029130a56790114e7a244b21ba603fb45/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7297afa029130a56790114e7a244b21ba603fb45/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7297afa029130a56790114e7a244b21ba603fb45", "patch": "@@ -1,3 +1,8 @@\n+2003-12-01  Daniel Berlin  <dberlin@dberlin.org>\n+\t\n+\t* ggc-zone.c (ggc_pch_write_object): Calculate object size using\n+\tggc_get_size (which accounts for large objects properly).\n+\n 2003-12-01  Jeff Sturm  <jsturm@one-point.com>\n \n \tPR optimization/13024"}, {"sha": "d9c82e6c696ab96ce777c5c7b09b0fa5c3e4ab43", "filename": "gcc/ggc-zone.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7297afa029130a56790114e7a244b21ba603fb45/gcc%2Fggc-zone.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7297afa029130a56790114e7a244b21ba603fb45/gcc%2Fggc-zone.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-zone.c?ref=7297afa029130a56790114e7a244b21ba603fb45", "patch": "@@ -1663,7 +1663,7 @@ ggc_pch_write_object (struct ggc_pch_data *d ATTRIBUTE_UNUSED,\n   if (!is_string)\n     {\n       struct alloc_chunk *chunk = (struct alloc_chunk *) ((char *)x - CHUNK_OVERHEAD);\n-      size = chunk->size;\n+      size = ggc_get_size (x);\n       if (fwrite (chunk, size + CHUNK_OVERHEAD, 1, f) != 1)\n \tfatal_error (\"can't write PCH file: %m\");\n       d->written += size + CHUNK_OVERHEAD;"}]}