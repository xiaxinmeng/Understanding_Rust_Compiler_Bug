{"sha": "bd53b2574d0326d23e0dde6eb5e31bf4e952ccf1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ1M2IyNTc0ZDAzMjZkMjNlMGRkZTZlYjVlMzFiZjRlOTUyY2NmMQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-06-02T12:34:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-06-02T12:34:32Z"}, "message": "re PR tree-optimization/80948 (test case gcc.dg/torture/pr68017.c fails with ICE starting with r248771)\n\n2017-06-02  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/80948\n\t* tree-tailcall.c (find_tail_calls): Track stmts to move in\n\tstmt order as well.\n\nFrom-SVN: r248824", "tree": {"sha": "ddb8ef57988bcac9a5731d81e7195e3aad87d8b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddb8ef57988bcac9a5731d81e7195e3aad87d8b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd53b2574d0326d23e0dde6eb5e31bf4e952ccf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd53b2574d0326d23e0dde6eb5e31bf4e952ccf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd53b2574d0326d23e0dde6eb5e31bf4e952ccf1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd53b2574d0326d23e0dde6eb5e31bf4e952ccf1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ef3985dbd11d8faa1e4202b727aff6654ec96272", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef3985dbd11d8faa1e4202b727aff6654ec96272", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef3985dbd11d8faa1e4202b727aff6654ec96272"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "499e6bb63851dd209188b4677991273d78f59775", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd53b2574d0326d23e0dde6eb5e31bf4e952ccf1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd53b2574d0326d23e0dde6eb5e31bf4e952ccf1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bd53b2574d0326d23e0dde6eb5e31bf4e952ccf1", "patch": "@@ -1,3 +1,9 @@\n+2017-06-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/80948\n+\t* tree-tailcall.c (find_tail_calls): Track stmts to move in\n+\tstmt order as well.\n+\n 2017-06-02  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vect-loop.c (vect_analyze_loop_operations): Not relevant"}, {"sha": "bc370af610f8bced9623e4cabe37b6177aa538c0", "filename": "gcc/tree-tailcall.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd53b2574d0326d23e0dde6eb5e31bf4e952ccf1/gcc%2Ftree-tailcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd53b2574d0326d23e0dde6eb5e31bf4e952ccf1/gcc%2Ftree-tailcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-tailcall.c?ref=bd53b2574d0326d23e0dde6eb5e31bf4e952ccf1", "patch": "@@ -531,7 +531,8 @@ find_tail_calls (basic_block bb, struct tailcall **ret)\n      since we are running after dce.  */\n   m = NULL_TREE;\n   a = NULL_TREE;\n-  auto_bitmap to_move;\n+  auto_bitmap to_move_defs;\n+  auto_vec<gimple *> to_move_stmts;\n \n   abb = bb;\n   agsi = gsi;\n@@ -563,7 +564,7 @@ find_tail_calls (basic_block bb, struct tailcall **ret)\n \n       /* This is a gimple assign. */\n       par ret = process_assignment (as_a <gassign *> (stmt), gsi,\n-\t\t\t\t    &tmp_m, &tmp_a, &ass_var, to_move);\n+\t\t\t\t    &tmp_m, &tmp_a, &ass_var, to_move_defs);\n       if (ret == FAIL)\n \treturn;\n       else if (ret == TRY_MOVE)\n@@ -573,10 +574,12 @@ find_tail_calls (basic_block bb, struct tailcall **ret)\n \t  for (unsigned opno = 1; opno < gimple_num_ops (stmt); ++opno)\n \t    {\n \t      tree op = gimple_op (stmt, opno);\n-\t      if (independent_of_stmt_p (op, stmt, gsi, to_move) != op)\n+\t      if (independent_of_stmt_p (op, stmt, gsi, to_move_defs) != op)\n \t\treturn;\n \t    }\n-\t  bitmap_set_bit (to_move, SSA_NAME_VERSION (gimple_assign_lhs (stmt)));\n+\t  bitmap_set_bit (to_move_defs,\n+\t\t\t  SSA_NAME_VERSION (gimple_assign_lhs (stmt)));\n+\t  to_move_stmts.safe_push (stmt);\n \t  continue;\n \t}\n \n@@ -622,11 +625,9 @@ find_tail_calls (basic_block bb, struct tailcall **ret)\n   /* Move queued defs.  */\n   if (tail_recursion)\n     {\n-      bitmap_iterator bi;\n       unsigned i;\n-      EXECUTE_IF_SET_IN_BITMAP (to_move, 0, i, bi)\n+      FOR_EACH_VEC_ELT (to_move_stmts, i, stmt)\n \t{\n-\t  stmt = SSA_NAME_DEF_STMT (ssa_name (i));\n \t  gimple_stmt_iterator mgsi = gsi_for_stmt (stmt);\n \t  gsi_move_before (&mgsi, &gsi);\n \t}"}]}