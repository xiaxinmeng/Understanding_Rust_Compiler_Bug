{"sha": "fbe42b1b05e5efd075b011bcee4489e6914a95c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJlNDJiMWIwNWU1ZWZkMDc1YjAxMWJjZWU0NDg5ZTY5MTRhOTVjOQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@redhat.com", "date": "2001-04-03T07:02:31Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2001-04-03T07:02:31Z"}, "message": "configure.in (gcc_cv_as_leb128): Correct name of cache variable.\n\n\t* configure.in (gcc_cv_as_leb128): Correct name of cache variable.\n\tRequire at least 2.11 in the version test.  Specifically check\n\tfor and reject GAS version 2.10.90.\n\t* configure: regenerate.\n\nFrom-SVN: r41039", "tree": {"sha": "d463c1b916e6229441da709bbbc56ccd606f9874", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d463c1b916e6229441da709bbbc56ccd606f9874"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbe42b1b05e5efd075b011bcee4489e6914a95c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbe42b1b05e5efd075b011bcee4489e6914a95c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbe42b1b05e5efd075b011bcee4489e6914a95c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbe42b1b05e5efd075b011bcee4489e6914a95c9/comments", "author": null, "committer": null, "parents": [{"sha": "1c7a8112c5034b11c438eafd12c5398395881f06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c7a8112c5034b11c438eafd12c5398395881f06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c7a8112c5034b11c438eafd12c5398395881f06"}], "stats": {"total": 47, "additions": 33, "deletions": 14}, "files": [{"sha": "42860123889ec66334c125966ff13689ec96ddd0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe42b1b05e5efd075b011bcee4489e6914a95c9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe42b1b05e5efd075b011bcee4489e6914a95c9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fbe42b1b05e5efd075b011bcee4489e6914a95c9", "patch": "@@ -1,3 +1,10 @@\n+2001-04-02  Geoffrey Keating  <geoffk@redhat.com>\n+\n+\t* configure.in (gcc_cv_as_leb128): Correct name of cache variable.\n+\tRequire at least 2.11 in the version test.  Specifically check\n+\tfor and reject GAS version 2.10.90.\n+\t* configure: regenerate.\n+\n 2001-04-03  Alan Modra  <alan@linuxcare.com.au>\n \n \t* config/pa/pa.c (override_options): Remove PIC profiling warning."}, {"sha": "d23559b06f85c23203964422a86301658fba0e46", "filename": "gcc/configure", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe42b1b05e5efd075b011bcee4489e6914a95c9/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe42b1b05e5efd075b011bcee4489e6914a95c9/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=fbe42b1b05e5efd075b011bcee4489e6914a95c9", "patch": "@@ -2018,7 +2018,7 @@ EOF\n fi\n \n # Find some useful tools\n-for ac_prog in mawk gawk nawk awk\n+for ac_prog in gawk mawk nawk awk\n do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -6521,9 +6521,9 @@ echo \"$ac_t\"\"$gcc_cv_as_hidden\" 1>&6\n \n echo $ac_n \"checking assembler leb128 support\"\"... $ac_c\" 1>&6\n echo \"configure:6524: checking assembler leb128 support\" >&5\n-gcc_cv_as_hidden=no\n+gcc_cv_as_leb128=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n-  if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 10 -o \"$gcc_cv_gas_major_version\" -gt 2 && grep 'obj_format = elf' ../gas/Makefile > /dev/null; then\n+  if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 11 -o \"$gcc_cv_gas_major_version\" -gt 2 && grep 'obj_format = elf' ../gas/Makefile > /dev/null; then\n     gcc_cv_as_leb128=\"yes\"\n   fi\n elif test x$gcc_cv_as != x; then\n@@ -6537,7 +6537,13 @@ L1:\n L2:\n EOF\n \tif $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1; then\n-\t\tgcc_cv_as_leb128=\"yes\"\n+\t\t# GAS versions numbered 2.10.90 do not support uleb128, despite\n+\t\t# appearing to.\n+\t\tif $gcc_cv_as --version | fgrep 2.10.90 > /dev/null; then\n+\t\t\t:\n+\t\telse\n+\t\t\tgcc_cv_as_leb128=\"yes\"\n+\t\tfi\n \tfi\n \trm -f conftest.s conftest.o conftest.nm1 conftest.nm2\n fi\n@@ -6552,7 +6558,7 @@ echo \"$ac_t\"\"$gcc_cv_as_leb128\" 1>&6\n case \"$target\" in \n   sparc*-*-*)\n     echo $ac_n \"checking assembler .register pseudo-op support\"\"... $ac_c\" 1>&6\n-echo \"configure:6556: checking assembler .register pseudo-op support\" >&5\n+echo \"configure:6562: checking assembler .register pseudo-op support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_register_pseudo_op'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -6580,7 +6586,7 @@ EOF\n     fi\n \n     echo $ac_n \"checking assembler supports -relax\"\"... $ac_c\" 1>&6\n-echo \"configure:6584: checking assembler supports -relax\" >&5\n+echo \"configure:6590: checking assembler supports -relax\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_relax_opt'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -6610,7 +6616,7 @@ EOF\n     case \"$tm_file\" in\n     *64*)\n \techo $ac_n \"checking for 64 bit support in assembler ($gcc_cv_as)\"\"... $ac_c\" 1>&6\n-echo \"configure:6614: checking for 64 bit support in assembler ($gcc_cv_as)\" >&5\n+echo \"configure:6620: checking for 64 bit support in assembler ($gcc_cv_as)\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_flags64'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -6655,7 +6661,7 @@ EOF\n \n     if test \"x$gcc_cv_as_flags64\" != xno; then\n \techo $ac_n \"checking for assembler offsetable %lo() support\"\"... $ac_c\" 1>&6\n-echo \"configure:6659: checking for assembler offsetable %lo() support\" >&5\n+echo \"configure:6665: checking for assembler offsetable %lo() support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_offsetable_lo10'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -6694,7 +6700,7 @@ EOF\n \n   i[34567]86-*-*)\n     echo $ac_n \"checking assembler instructions\"\"... $ac_c\" 1>&6\n-echo \"configure:6698: checking assembler instructions\" >&5\n+echo \"configure:6704: checking assembler instructions\" >&5\n     gcc_cv_as_instructions=\n     if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n       if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 9 -o \"$gcc_cv_gas_major_version\" -gt 2; then\n@@ -6723,7 +6729,7 @@ EOF\n esac\n \n echo $ac_n \"checking assembler dwarf2 debug_line support\"\"... $ac_c\" 1>&6\n-echo \"configure:6727: checking assembler dwarf2 debug_line support\" >&5\n+echo \"configure:6733: checking assembler dwarf2 debug_line support\" >&5\n gcc_cv_as_dwarf2_debug_line=no\n # ??? Not all targets support dwarf2 debug_line, even within a version\n # of gas.  Moreover, we need to emit a valid instruction to trigger any\n@@ -6913,7 +6919,7 @@ EOF\n \n \n echo $ac_n \"checking whether to enable maintainer-specific portions of Makefiles\"\"... $ac_c\" 1>&6\n-echo \"configure:6917: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n+echo \"configure:6923: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n     # Check whether --enable-maintainer-mode or --disable-maintainer-mode was given.\n if test \"${enable_maintainer_mode+set}\" = set; then\n   enableval=\"$enable_maintainer_mode\""}, {"sha": "470c38c915634d3bcdf2e84c55ada549535387a2", "filename": "gcc/configure.in", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe42b1b05e5efd075b011bcee4489e6914a95c9/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe42b1b05e5efd075b011bcee4489e6914a95c9/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=fbe42b1b05e5efd075b011bcee4489e6914a95c9", "patch": "@@ -1303,9 +1303,9 @@ fi\n AC_MSG_RESULT($gcc_cv_as_hidden)\n \n AC_MSG_CHECKING(assembler leb128 support)\n-gcc_cv_as_hidden=no\n+gcc_cv_as_leb128=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n-  if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 10 -o \"$gcc_cv_gas_major_version\" -gt 2 && grep 'obj_format = elf' ../gas/Makefile > /dev/null; then\n+  if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 11 -o \"$gcc_cv_gas_major_version\" -gt 2 && grep 'obj_format = elf' ../gas/Makefile > /dev/null; then\n     gcc_cv_as_leb128=\"yes\"\n   fi\n elif test x$gcc_cv_as != x; then\n@@ -1319,7 +1319,13 @@ L1:\n L2:\n EOF\n \tif $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1; then\n-\t\tgcc_cv_as_leb128=\"yes\"\n+\t\t# GAS versions numbered 2.10.90 do not support uleb128, despite\n+\t\t# appearing to.\n+\t\tif $gcc_cv_as --version | fgrep 2.10.90 > /dev/null; then\n+\t\t\t:\n+\t\telse\n+\t\t\tgcc_cv_as_leb128=\"yes\"\n+\t\tfi\n \tfi\n \trm -f conftest.s conftest.o conftest.nm1 conftest.nm2\n fi"}]}