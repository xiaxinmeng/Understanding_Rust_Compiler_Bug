{"sha": "72d7151a721ce182f4a13e7e5a6f5ced2f468c17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJkNzE1MWE3MjFjZTE4MmY0YTEzZTdlNWE2ZjVjZWQyZjQ2OGMxNw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-01-16T15:57:32Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-01-16T15:57:32Z"}, "message": "net: Restore earlier Solaris-specific version of setKeepAlivePeriod.\n\nThe version from the master repository seems to be appropriate\nfor OpenSolaris but not for Solaris itself.  Solaris 11.2\nproper does not define TCP_KEEPIDLE or TCP_KEEPINTVL.\n\nFrom-SVN: r219749", "tree": {"sha": "67d8317577cc1f51bb4135ce8e47ea58c8c69d5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67d8317577cc1f51bb4135ce8e47ea58c8c69d5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72d7151a721ce182f4a13e7e5a6f5ced2f468c17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72d7151a721ce182f4a13e7e5a6f5ced2f468c17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72d7151a721ce182f4a13e7e5a6f5ced2f468c17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72d7151a721ce182f4a13e7e5a6f5ced2f468c17/comments", "author": null, "committer": null, "parents": [{"sha": "ed22611ae503ebea38011dcfc2fe75ebab97dcfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed22611ae503ebea38011dcfc2fe75ebab97dcfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed22611ae503ebea38011dcfc2fe75ebab97dcfc"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "419598183ed30da2208e0e3951bf1668088457af", "filename": "libgo/Makefile.am", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72d7151a721ce182f4a13e7e5a6f5ced2f468c17/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72d7151a721ce182f4a13e7e5a6f5ced2f468c17/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=72d7151a721ce182f4a13e7e5a6f5ced2f468c17", "patch": "@@ -762,13 +762,17 @@ else\n if LIBGO_IS_DARWIN\n go_net_tcpsockopt_file = go/net/tcpsockopt_darwin.go\n else\n+if LIBGO_IS_SOLARIS\n+go_net_tcpsockopt_file = go/net/tcpsockopt_solaris.go\n+else\n if LIBGO_IS_DRAGONFLY\n go_net_tcpsockopt_file = go/net/tcpsockopt_dragonfly.go\n else\n go_net_tcpsockopt_file = go/net/tcpsockopt_unix.go\n endif\n endif\n endif\n+endif\n \n go_net_files = \\\n \tgo/net/cgo_unix.go \\"}, {"sha": "af8566f683706c3b2672e881b6830599ab8cc07e", "filename": "libgo/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72d7151a721ce182f4a13e7e5a6f5ced2f468c17/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72d7151a721ce182f4a13e7e5a6f5ced2f468c17/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=72d7151a721ce182f4a13e7e5a6f5ced2f468c17", "patch": "@@ -1019,8 +1019,9 @@ go_mime_files = \\\n @LIBGO_IS_LINUX_TRUE@go_net_interface_file = go/net/interface_linux.go\n @LIBGO_IS_LINUX_FALSE@go_net_cloexec_file = go/net/sys_cloexec.go\n @LIBGO_IS_LINUX_TRUE@go_net_cloexec_file = go/net/sock_cloexec.go\n-@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_DRAGONFLY_FALSE@@LIBGO_IS_OPENBSD_FALSE@go_net_tcpsockopt_file = go/net/tcpsockopt_unix.go\n-@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_DRAGONFLY_TRUE@@LIBGO_IS_OPENBSD_FALSE@go_net_tcpsockopt_file = go/net/tcpsockopt_dragonfly.go\n+@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_DRAGONFLY_FALSE@@LIBGO_IS_OPENBSD_FALSE@@LIBGO_IS_SOLARIS_FALSE@go_net_tcpsockopt_file = go/net/tcpsockopt_unix.go\n+@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_DRAGONFLY_TRUE@@LIBGO_IS_OPENBSD_FALSE@@LIBGO_IS_SOLARIS_FALSE@go_net_tcpsockopt_file = go/net/tcpsockopt_dragonfly.go\n+@LIBGO_IS_DARWIN_FALSE@@LIBGO_IS_OPENBSD_FALSE@@LIBGO_IS_SOLARIS_TRUE@go_net_tcpsockopt_file = go/net/tcpsockopt_solaris.go\n @LIBGO_IS_DARWIN_TRUE@@LIBGO_IS_OPENBSD_FALSE@go_net_tcpsockopt_file = go/net/tcpsockopt_darwin.go\n @LIBGO_IS_OPENBSD_TRUE@go_net_tcpsockopt_file = go/net/tcpsockopt_openbsd.go\n go_net_files = \\"}, {"sha": "eaab6b6787b524c62b336a3c43c124e2eeeb3a07", "filename": "libgo/go/net/tcpsockopt_solaris.go", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72d7151a721ce182f4a13e7e5a6f5ced2f468c17/libgo%2Fgo%2Fnet%2Ftcpsockopt_solaris.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72d7151a721ce182f4a13e7e5a6f5ced2f468c17/libgo%2Fgo%2Fnet%2Ftcpsockopt_solaris.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Ftcpsockopt_solaris.go?ref=72d7151a721ce182f4a13e7e5a6f5ced2f468c17", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// TCP socket options for solaris\n+\n+package net\n+\n+import (\n+\t\"os\"\n+\t\"syscall\"\n+\t\"time\"\n+)\n+\n+// Set keep alive period.\n+func setKeepAlivePeriod(fd *netFD, d time.Duration) error {\n+\tif err := fd.incref(); err != nil {\n+\t\treturn err\n+\t}\n+\tdefer fd.decref()\n+\n+\t// The kernel expects seconds so round to next highest second.\n+\td += (time.Second - time.Nanosecond)\n+\tsecs := int(d.Seconds())\n+\n+\treturn os.NewSyscallError(\"setsockopt\", syscall.SetsockoptInt(fd.sysfd, syscall.IPPROTO_TCP, syscall.SO_KEEPALIVE, secs))\n+}"}]}