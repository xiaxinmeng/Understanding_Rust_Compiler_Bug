{"sha": "785abfd3ff0eb7443747ffb83d136c1a62389ab6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg1YWJmZDNmZjBlYjc0NDM3NDdmZmI4M2QxMzZjMWE2MjM4OWFiNg==", "commit": {"author": {"name": "Fritz Reese", "email": "fritzoreese@gmail.com", "date": "2016-05-14T16:00:35Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2016-05-14T16:00:35Z"}, "message": "dec_union_4.f90: Fix endian issue.\n\n2016-05-14  Fritz Reese  <fritzoreese@gmail.com>\n\n\t* gfortran.dg/dec_union_4.f90: Fix endian issue.\n\n2016-05-14  Fritz Reese  <fritzoreese@gmail.com>\n\n\t* gfortran.texi: Update example of DEC UNION extension.\n\nFrom-SVN: r236242", "tree": {"sha": "273671f57d952a072a77b50672efbedfcb3ebc7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/273671f57d952a072a77b50672efbedfcb3ebc7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/785abfd3ff0eb7443747ffb83d136c1a62389ab6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/785abfd3ff0eb7443747ffb83d136c1a62389ab6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/785abfd3ff0eb7443747ffb83d136c1a62389ab6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/785abfd3ff0eb7443747ffb83d136c1a62389ab6/comments", "author": {"login": "fritzr", "id": 2230564, "node_id": "MDQ6VXNlcjIyMzA1NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2230564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzr", "html_url": "https://github.com/fritzr", "followers_url": "https://api.github.com/users/fritzr/followers", "following_url": "https://api.github.com/users/fritzr/following{/other_user}", "gists_url": "https://api.github.com/users/fritzr/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzr/subscriptions", "organizations_url": "https://api.github.com/users/fritzr/orgs", "repos_url": "https://api.github.com/users/fritzr/repos", "events_url": "https://api.github.com/users/fritzr/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzr/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e75eb64fdf7296fa333f49f0186f1e219fed16ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e75eb64fdf7296fa333f49f0186f1e219fed16ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e75eb64fdf7296fa333f49f0186f1e219fed16ad"}], "stats": {"total": 124, "additions": 63, "deletions": 61}, "files": [{"sha": "fff7bde14a8b32c3ad996284040199ce4a0c12f9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785abfd3ff0eb7443747ffb83d136c1a62389ab6/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785abfd3ff0eb7443747ffb83d136c1a62389ab6/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=785abfd3ff0eb7443747ffb83d136c1a62389ab6", "patch": "@@ -1,3 +1,7 @@\n+2016-05-14  Fritz Reese  <fritzoreese@gmail.com>\n+\n+\t* gfortran.texi: Update example of DEC UNION extension.\n+\n 2016-05-14  Fritz Reese  <fritzoreese@gmail.com>\n \n \tPR fortran/71047"}, {"sha": "4d288bafac37c585b4b8f9f931989cab723848b0", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 35, "deletions": 42, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785abfd3ff0eb7443747ffb83d136c1a62389ab6/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785abfd3ff0eb7443747ffb83d136c1a62389ab6/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=785abfd3ff0eb7443747ffb83d136c1a62389ab6", "patch": "@@ -2281,28 +2281,25 @@ Here is a small example:\n structure /myunion/\n union\n   map\n-    integer(2) w, x, y, z\n+    character(2) w0, w1, w2\n   end map\n   map\n-    integer(4) wx, yz\n+    character(6) long\n   end map\n end union\n end structure\n \n record /myunion/ rec\n-! After these assignments...\n-rec.wx = z'0DEDBEEF'\n-rec.y  = z'0BAD'\n-rec.z  = z'0FAD'\n+! After this assignment...\n+rec.long = 'hello!'\n \n ! The following is true:\n-! rec.w  === z'0DED'\n-! rec.x  === z'BEEF'\n-! rec.yz === z'0BAD0FAD'\n+! rec.w0 === 'he'\n+! rec.w1 === 'll'\n+! rec.w2 === 'o!'\n @end smallexample\n \n-The two maps share memory, and the size of the union is ultimately six bytes\n-(subject to alignment):\n+The two maps share memory, and the size of the union is ultimately six bytes:\n \n @example\n 0    1    2    3    4   5   6     Byte offset\n@@ -2313,65 +2310,61 @@ The two maps share memory, and the size of the union is ultimately six bytes\n ^    W0   ^    W1   ^    W2   ^\n  \\-------/ \\-------/ \\-------/\n \n-^       LONG        ^  unused ^\n- \\-----------------/ \\-------/\n+^             LONG            ^\n+ \\---------------------------/\n @end example\n \n Following is an example mirroring the layout of an Intel x86_64 register:\n \n @example\n structure /reg/\n-  union    ! rax\n+  union ! U0                ! rax\n     map\n-      integer*8 rx         ! rax\n+      character(16) rx\n     end map\n     map\n-      integer*4 rh         ! rah\n-      union   ! eax\n+      character(8) rh         ! rah\n+      union ! U1\n         map\n-          integer*4 rl     ! ral\n+          character(8) rl     ! ral\n         end map\n         map\n-          integer*4 ex     ! eax\n+          character(8) ex     ! eax\n         end map\n         map\n-          integer*2 eh     ! eah\n-          union     ! ax\n+          character(4) eh     ! eah\n+          union ! U2\n             map\n-              integer*2 el ! eal\n+              character(4) el ! eal\n             end map\n             map\n-              integer*2 x  ! ax\n+              character(4) x  ! ax\n             end map\n             map\n-              integer*1 h  ! ah\n-              integer*1 l  ! al\n+              character(2) h  ! ah\n+              character(2) l  ! al\n             end map\n-          end union ! ax\n+          end union\n         end map\n-      end union ! eax\n+      end union\n     end map\n-  end union ! rax\n+  end union\n end structure\n-\n record /reg/ a\n \n ! After this assignment...\n-a.rx = z'AABBCCCCFFFFFFFF'\n+a.rx     =     'AAAAAAAA.BBB.C.D'\n \n ! The following is true:\n-!\n-! a.rx == z'AABBCCCCFFFFFFFF'\n-! a.rh ==         z'FFFFFFFF'\n-! a.rl == z'AABBCCCC'\n-!\n-! a.ex == z'AABBCCCC'\n-! a.eh ==     z'CCCC'\n-! a.el == z'AABB'\n-!\n-!  a.x == z'AABB'\n-!  a.h ==   z'BB'\n-!  a.l == z'AA'\n+a.rx === 'AAAAAAAA.BBB.C.D'\n+a.rh === 'AAAAAAAA'\n+a.rl ===         '.BBB.C.D'\n+a.ex ===         '.BBB.C.D'\n+a.eh ===         '.BBB'\n+a.el ===             '.C.D'\n+a.x  ===             '.C.D'\n+a.h  ===             '.C'\n+a.l  ===               '.D'\n @end example\n \n "}, {"sha": "78789c28335b38125d7efc3481528cfcee0b1af5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785abfd3ff0eb7443747ffb83d136c1a62389ab6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785abfd3ff0eb7443747ffb83d136c1a62389ab6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=785abfd3ff0eb7443747ffb83d136c1a62389ab6", "patch": "@@ -1,3 +1,7 @@\n+2016-05-14  Fritz Reese  <fritzoreese@gmail.com>\n+\n+\t* gfortran.dg/dec_union_4.f90: Fix endian issue.\n+\n 2016-05-14  Fritz Reese  <fritzoreese@gmail.com>\n \n \tPR fortran/71047"}, {"sha": "4c1c6efe6059de98de3a7be7c08f360d00594b21", "filename": "gcc/testsuite/gfortran.dg/dec_union_4.f90", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/785abfd3ff0eb7443747ffb83d136c1a62389ab6/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_union_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/785abfd3ff0eb7443747ffb83d136c1a62389ab6/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_union_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_union_4.f90?ref=785abfd3ff0eb7443747ffb83d136c1a62389ab6", "patch": "@@ -14,29 +14,29 @@ subroutine aborts (s)\n structure /s4/\n   union ! U0                ! rax\n     map\n-      integer(8) rx\n+      character(16) rx\n     end map\n     map\n-      integer(4) rh         ! rah\n+      character(8) rh         ! rah\n       union ! U1\n         map\n-          integer(4) rl     ! ral\n+          character(8) rl     ! ral\n         end map\n         map\n-          integer(4) ex     ! eax\n+          character(8) ex     ! eax\n         end map\n         map\n-          integer(2) eh     ! eah\n+          character(4) eh     ! eah\n           union ! U2\n             map\n-              integer(2) el ! eal\n+              character(4) el ! eal\n             end map\n             map\n-              integer(2) x  ! ax\n+              character(4) x  ! ax\n             end map\n             map\n-              integer(1) h  ! ah\n-              integer(1) l  ! al\n+              character(2) h  ! ah\n+              character(2) l  ! al\n             end map\n           end union\n         end map\n@@ -48,15 +48,16 @@ subroutine aborts (s)\n \n \n ! Nested unions\n-r4.rx     =     z'7A7B7CCC7FFFFFFF'\n-if ( r4.rx .ne. z'7A7B7CCC7FFFFFFF' ) call aborts (\"rax\")\n-if ( r4.rh .ne.         z'7FFFFFFF' ) call aborts (\"rah\")\n-if ( r4.rl .ne. z'7A7B7CCC'         ) call aborts (\"ral\")\n-if ( r4.ex .ne. z'7A7B7CCC'         ) call aborts (\"eax\")\n-if ( r4.eh .ne.     z'7CCC'         ) call aborts (\"eah\")\n-if ( r4.el .ne. z'7A7B'             ) call aborts (\"eal\")\n-if ( r4.x  .ne. z'7A7B'             ) call aborts (\"ax\")\n-if ( r4.h  .ne.   z'7B'             ) call aborts (\"ah\")\n-if ( r4.l  .ne. z'7A'               ) call aborts (\"al\")\n+r4.rx     =     'AAAAAAAA.BBB.C.D'\n+\n+if ( r4.rx .ne. 'AAAAAAAA.BBB.C.D' ) call aborts (\"rax\")\n+if ( r4.rh .ne. 'AAAAAAAA'         ) call aborts (\"rah\")\n+if ( r4.rl .ne.         '.BBB.C.D' ) call aborts (\"ral\")\n+if ( r4.ex .ne.         '.BBB.C.D' ) call aborts (\"eax\")\n+if ( r4.eh .ne.         '.BBB'     ) call aborts (\"eah\")\n+if ( r4.el .ne.             '.C.D' ) call aborts (\"eal\")\n+if ( r4.x  .ne.             '.C.D' ) call aborts (\"ax\")\n+if ( r4.h  .ne.             '.C'   ) call aborts (\"ah\")\n+if ( r4.l  .ne.               '.D' ) call aborts (\"al\")\n \n end"}]}