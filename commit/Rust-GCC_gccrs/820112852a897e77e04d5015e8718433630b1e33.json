{"sha": "820112852a897e77e04d5015e8718433630b1e33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIwMTEyODUyYTg5N2U3N2UwNGQ1MDE1ZTg3MTg0MzM2MzBiMWUzMw==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@albatross.co.nz", "date": "2000-09-05T11:05:59Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2000-09-05T11:05:59Z"}, "message": "natIconv.cc (read): Remove unused local.\n\n2000-09-05  Bryce McKinlay  <bryce@albatross.co.nz>\n\n\t* gnu/gcj/convert/natIconv.cc (read): Remove unused local.\n\t(write): Ditto.\n\t* gnu/gcj/runtime/FileDeleter.java (deleteOnExitNow): Check for null\n\tstack. Synchronize.\n\t* java/lang/fdlibm.h: #undef __P if previously defined.\n\t* java/lang/natSystem.cc (currentTimeMillis): Remove unused local.\n\t* java/net/natPlainDatagramSocketImpl.cc (send): Remove unreachable\n\tblock.\n\t(mcastGrp): Ditto.\n\nFrom-SVN: r36158", "tree": {"sha": "87c10c159d39b1e4d311e86133275d497e9fcb61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87c10c159d39b1e4d311e86133275d497e9fcb61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/820112852a897e77e04d5015e8718433630b1e33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/820112852a897e77e04d5015e8718433630b1e33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/820112852a897e77e04d5015e8718433630b1e33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/820112852a897e77e04d5015e8718433630b1e33/comments", "author": null, "committer": null, "parents": [{"sha": "05d52d785c4bf5c942da5a94ad172ae40635311e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05d52d785c4bf5c942da5a94ad172ae40635311e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05d52d785c4bf5c942da5a94ad172ae40635311e"}], "stats": {"total": 39, "additions": 20, "deletions": 19}, "files": [{"sha": "9a140147a8bc12886cbcbac40b6f1bab78ec2a5c", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/820112852a897e77e04d5015e8718433630b1e33/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/820112852a897e77e04d5015e8718433630b1e33/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=820112852a897e77e04d5015e8718433630b1e33", "patch": "@@ -1,3 +1,15 @@\n+2000-09-05  Bryce McKinlay  <bryce@albatross.co.nz>\n+\n+\t* gnu/gcj/convert/natIconv.cc (read): Remove unused local.\n+\t(write): Ditto.\n+\t* gnu/gcj/runtime/FileDeleter.java (deleteOnExitNow): Check for null\n+\tstack. Synchronize.\n+\t* java/lang/fdlibm.h: #undef __P if previously defined.\n+\t* java/lang/natSystem.cc (currentTimeMillis): Remove unused local.\n+\t* java/net/natPlainDatagramSocketImpl.cc (send): Remove unreachable \n+\tblock.\n+\t(mcastGrp): Ditto.\n+\n 2000-09-04  Tom Tromey  <tromey@cygnus.com>\n \n \t* java/util/zip/ZipFile.java (ZipFile): Delete file when opened in"}, {"sha": "fe79dc12515dca8eef23ddcb583889a26555ee88", "filename": "libjava/gnu/gcj/convert/natIconv.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/820112852a897e77e04d5015e8718433630b1e33/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatIconv.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/820112852a897e77e04d5015e8718433630b1e33/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatIconv.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fconvert%2FnatIconv.cc?ref=820112852a897e77e04d5015e8718433630b1e33", "patch": "@@ -70,8 +70,6 @@ gnu::gcj::convert::Input_iconv::read (jcharArray outbuffer,\n \t\t\t\t      jint outpos, jint count)\n {\n #ifdef HAVE_ICONV\n-  jint origpos = outpos;\n-\n   jbyte *bytes = elements (inbuffer);\n   jchar *out = elements (outbuffer);\n   size_t inavail = inlength - inpos;\n@@ -131,8 +129,6 @@ gnu::gcj::convert::Output_iconv::write (jcharArray inbuffer,\n \t\t\t\t\tjint inpos, jint count)\n {\n #ifdef HAVE_ICONV\n-  jint origpos = inpos;\n-\n   jchar *chars = elements (inbuffer);\n   jbyte *out = elements (buf);\n "}, {"sha": "d5f99d04c4712e457b8b0b57d36a454b62e888dd", "filename": "libjava/gnu/gcj/runtime/FileDeleter.java", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/820112852a897e77e04d5015e8718433630b1e33/libjava%2Fgnu%2Fgcj%2Fruntime%2FFileDeleter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/820112852a897e77e04d5015e8718433630b1e33/libjava%2Fgnu%2Fgcj%2Fruntime%2FFileDeleter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FFileDeleter.java?ref=820112852a897e77e04d5015e8718433630b1e33", "patch": "@@ -23,16 +23,13 @@ public synchronized static void add (File f)\n \n   // Helper method called by java.lang.Runtime.exit() to perform\n   // pending deletions.\n-  public static void deleteOnExitNow ()\n+  public synchronized static void deleteOnExitNow ()\n   {\n-    while (!deleteOnExitStack.empty ())\n-      ((File)(deleteOnExitStack.pop ())).delete ();\n+    if (deleteOnExitStack != null)\n+      while (!deleteOnExitStack.empty ())\n+\t((File)(deleteOnExitStack.pop ())).delete ();\n   }\n \n   // A stack of files to delete upon normal termination.\n   private static Stack deleteOnExitStack;\n }\n-\n-\n-\n-"}, {"sha": "1544c0aad9e91d01ceb933f3de965704b53108a2", "filename": "libjava/java/lang/fdlibm.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/820112852a897e77e04d5015e8718433630b1e33/libjava%2Fjava%2Flang%2Ffdlibm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/820112852a897e77e04d5015e8718433630b1e33/libjava%2Fjava%2Flang%2Ffdlibm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Ffdlibm.h?ref=820112852a897e77e04d5015e8718433630b1e33", "patch": "@@ -23,6 +23,10 @@\n /* CYGNUS LOCAL: Default to XOPEN_MODE.  */\n #define _XOPEN_MODE\n \n+#ifdef __P\n+#undef __P\n+#endif\n+\n #ifdef __STDC__\n #define\t__P(p)\tp\n #else"}, {"sha": "1ea29b3184023d172f3a12ea7bc4c2908d52e65c", "filename": "libjava/java/lang/natSystem.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/820112852a897e77e04d5015e8718433630b1e33/libjava%2Fjava%2Flang%2FnatSystem.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/820112852a897e77e04d5015e8718433630b1e33/libjava%2Fjava%2Flang%2FnatSystem.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatSystem.cc?ref=820112852a897e77e04d5015e8718433630b1e33", "patch": "@@ -140,8 +140,6 @@ java::lang::System::arraycopy (jobject src, jint src_offset,\n jlong\n java::lang::System::currentTimeMillis (void)\n {\n-  jlong r;\n-\n   struct timeval tv;\n   _Jv_gettimeofday (&tv);\n   return (jlong) tv.tv_sec * 1000 + tv.tv_usec / 1000;"}, {"sha": "78c2c2ac64397c8b068be8c2dbc5f32876318543", "filename": "libjava/java/net/natPlainDatagramSocketImpl.cc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/820112852a897e77e04d5015e8718433630b1e33/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/820112852a897e77e04d5015e8718433630b1e33/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatPlainDatagramSocketImpl.cc?ref=820112852a897e77e04d5015e8718433630b1e33", "patch": "@@ -287,9 +287,6 @@ java::net::PlainDatagramSocketImpl::send (java::net::DatagramPacket *p)\n \n   if (::sendto (fnum, (char *) dbytes, p->getLength(), 0, ptr, len) >= 0)\n     return;\n- error:\n-  char* strerr = strerror (errno);\n-  JvThrow (new java::io::IOException (JvNewStringUTF (strerr)));\n }\n \n void\n@@ -420,9 +417,6 @@ java::net::PlainDatagramSocketImpl::mcastGrp (java::net::InetAddress *inetaddr,\n \n   if (::setsockopt (fnum, level, opname, ptr, len) == 0)\n     return;\n- error:\n-  char* strerr = strerror (errno);\n-  JvThrow (new java::io::IOException (JvNewStringUTF (strerr)));\n }\n \n void"}]}