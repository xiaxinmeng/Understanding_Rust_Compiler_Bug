{"sha": "713890935db33b1e24abfae6a94bacc494f6412e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzEzODkwOTM1ZGIzM2IxZTI0YWJmYWU2YTk0YmFjYzQ5NGY2NDEyZQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-20T07:57:05Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-20T07:57:05Z"}, "message": "Add gcc-backport and support git cherry pick.\n\n\t* gcc-changelog/git_commit.py: Support cherry pick\n\tprefix.\n\t* gcc-changelog/test_email.py: Test it.\n\t* gcc-changelog/test_patches.txt: Add new patch.\n\t* gcc-git-customization.sh: Add gcc-backport.", "tree": {"sha": "87742bf8f2c5d62e0e025635bced1a7651f1c972", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87742bf8f2c5d62e0e025635bced1a7651f1c972"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/713890935db33b1e24abfae6a94bacc494f6412e", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl7E4tEACgkQTcGC3A+n\nN4Ug9Af/bF7Tue5gifS1DfvzgWR+jRAXLXZpQWIpiH3+rrJkRadMBb8sukgMsmEy\n0VWNxvgw40YCFjGBORBmFCUaT16D1EiM/kmZszvA8rTOUfHJ4Yf5dw+dDfksNLG/\nltSllPZ/gmSQ81eVkTTKr04+t/itF2hyjzKPp0vYVWvG5/9nBGgwkRDw+RbyfLYj\nIf4lps5GN3uiF9AVtW72u9I+D7lJysebDXVrTJ1JTWgPTOSZwVNzwzfCjAMY69v3\ni78Pbm6jUgRArx/8ObAU00LnVBjwKQDN/n2joXkN8P1LsVwG4vHTd8WT3FypgMUW\nWonilkRQxUaQzbya4/jwsvntKv8Mqg==\n=rsGr\n-----END PGP SIGNATURE-----", "payload": "tree 87742bf8f2c5d62e0e025635bced1a7651f1c972\nparent 4a88caf21a0a85129f6c985ca13ba3eb54ff5366\nauthor Martin Liska <mliska@suse.cz> 1589961425 +0200\ncommitter Martin Liska <mliska@suse.cz> 1589961425 +0200\n\nAdd gcc-backport and support git cherry pick.\n\n\t* gcc-changelog/git_commit.py: Support cherry pick\n\tprefix.\n\t* gcc-changelog/test_email.py: Test it.\n\t* gcc-changelog/test_patches.txt: Add new patch.\n\t* gcc-git-customization.sh: Add gcc-backport.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713890935db33b1e24abfae6a94bacc494f6412e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/713890935db33b1e24abfae6a94bacc494f6412e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713890935db33b1e24abfae6a94bacc494f6412e/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a88caf21a0a85129f6c985ca13ba3eb54ff5366", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a88caf21a0a85129f6c985ca13ba3eb54ff5366", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a88caf21a0a85129f6c985ca13ba3eb54ff5366"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "e3eaf05303153581309cff3f32cbdbcfce28969e", "filename": "contrib/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713890935db33b1e24abfae6a94bacc494f6412e/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713890935db33b1e24abfae6a94bacc494f6412e/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=713890935db33b1e24abfae6a94bacc494f6412e", "patch": "@@ -1,3 +1,11 @@\n+2020-05-20  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Support cherry pick\n+\tprefix.\n+\t* gcc-changelog/test_email.py: Test it.\n+\t* gcc-changelog/test_patches.txt: Add new patch.\n+\t* gcc-git-customization.sh: Add gcc-backport.\n+\n 2020-05-19  Martin Liska  <mliska@suse.cz>\n \n \t* mklog.py: Use REST API for bug title downloading."}, {"sha": "5cc8c4f593565c1aa0312382ebbf368ac5ca7e4b", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713890935db33b1e24abfae6a94bacc494f6412e/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713890935db33b1e24abfae6a94bacc494f6412e/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=713890935db33b1e24abfae6a94bacc494f6412e", "patch": "@@ -150,6 +150,7 @@\n LINE_LIMIT = 100\n TAB_WIDTH = 8\n CO_AUTHORED_BY_PREFIX = 'co-authored-by: '\n+CHERRY_PICK_PREFIX = '(cherry picked from commit '\n \n \n class Error:\n@@ -349,6 +350,8 @@ def parse_changelog(self):\n                     author = self.format_git_author(name)\n                     self.co_authors.append(author)\n                     continue\n+                elif line.startswith(CHERRY_PICK_PREFIX):\n+                    continue\n \n                 # ChangeLog name will be deduced later\n                 if not last_entry:"}, {"sha": "5e99d3240e870489948d0dba3cc09f31a0d84e83", "filename": "contrib/gcc-changelog/test_email.py", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713890935db33b1e24abfae6a94bacc494f6412e/contrib%2Fgcc-changelog%2Ftest_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713890935db33b1e24abfae6a94bacc494f6412e/contrib%2Fgcc-changelog%2Ftest_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_email.py?ref=713890935db33b1e24abfae6a94bacc494f6412e", "patch": "@@ -258,3 +258,7 @@ def test_wrong_changelog_entry(self):\n         email = self.from_patch_glob('0020-IPA-Avoid')\n         assert (email.errors[0].message\n                 == 'first line should start with a tab, asterisk and space')\n+\n+    def test_cherry_pick_format(self):\n+        email = self.from_patch_glob('0001-c-Alias.patch')\n+        assert not email.errors"}, {"sha": "ec667be9a927898a27a841b7cb9983f52b9b759d", "filename": "contrib/gcc-changelog/test_patches.txt", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713890935db33b1e24abfae6a94bacc494f6412e/contrib%2Fgcc-changelog%2Ftest_patches.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713890935db33b1e24abfae6a94bacc494f6412e/contrib%2Fgcc-changelog%2Ftest_patches.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_patches.txt?ref=713890935db33b1e24abfae6a94bacc494f6412e", "patch": "@@ -2382,3 +2382,32 @@ index 00000000000..66c87d48694\n -- \n 2.26.1\n \n+=== 0001-c-Alias.patch ===\n+From 3f1a149fc35cdba988464562e2fb824b10652d6b Mon Sep 17 00:00:00 2001\n+From: Nathan Sidwell <nathan@acm.org>\n+Date: Tue, 19 May 2020 13:29:19 -0700\n+Subject: [PATCH] c++: Alias template instantiation template info\n+\n+I discovered that the alias instantiation machinery would setup\n+template_info, and then sometime later overwrite that with equivalent\n+info.  This broke modules, because the template info, once set, is\n+logically immutable.  Let's just not do that.\n+\n+\t* pt.c (lookup_template_class_1): Do not reinit template_info of an\n+\talias here.\n+\n+(cherry picked from commit 74744bb1f2847b5b9ce3e97e0fec9c23bb0e499f)\n+---\n+ gcc/cp/pt.c | 17 +++++++++++++++--\n+ 1 file changed, 15 insertions(+), 2 deletions(-)\n+\n+diff --git a/gcc/cp/pt.c b/gcc/cp/pt.c\n+index b8f03d18541..7230ac724ba 100644\n+--- a/gcc/cp/pt.c\n++++ b/gcc/cp/pt.c\n+@@ -1 +1,2 @@\n+\n++\n+-- \n+2.26.2\n+"}, {"sha": "7a950ae5f38896c9b0219ab8dabeee62594c88b9", "filename": "contrib/gcc-git-customization.sh", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/713890935db33b1e24abfae6a94bacc494f6412e/contrib%2Fgcc-git-customization.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/713890935db33b1e24abfae6a94bacc494f6412e/contrib%2Fgcc-git-customization.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-git-customization.sh?ref=713890935db33b1e24abfae6a94bacc494f6412e", "patch": "@@ -26,6 +26,7 @@ git config alias.gcc-descr \\!\"f() { if test \\${1:-no} = --full; then c=\\${2:-mas\n git config alias.gcc-undescr \\!\"f() { o=\\$(git config --get gcc-config.upstream); r=\\$(echo \\$1 | sed -n 's,^r\\\\([0-9]\\\\+\\\\)-[0-9]\\\\+\\$,\\\\1,p'); n=\\$(echo \\$1 | sed -n 's,^r[0-9]\\\\+-\\\\([0-9]\\\\+\\\\)\\$,\\\\1,p'); test -z \\$r && echo Invalid id \\$1 && exit 1; h=\\$(git rev-parse --verify --quiet \\${o:-origin}/releases/gcc-\\$r); test -z \\$h && h=\\$(git rev-parse --verify --quiet \\${o:-origin}/master); p=\\$(git describe --all --match 'basepoints/gcc-'\\$r \\$h | sed -n 's,^\\\\(tags/\\\\)\\\\?basepoints/gcc-[0-9]\\\\+-\\\\([0-9]\\\\+\\\\)-g[0-9a-f]*\\$,\\\\2,p;s,^\\\\(tags/\\\\)\\\\?basepoints/gcc-[0-9]\\\\+\\$,0,p'); git rev-parse --verify \\$h~\\$(expr \\$p - \\$n); }; f\"\n \n git config alias.gcc-verify '!f() { \"`git rev-parse --show-toplevel`/contrib/gcc-changelog/git_check_commit.py\" $@; } ; f'\n+git config alias.gcc-backport '!f() { rev=$1; git cherry-pick -x $@; } ; f'\n \n git config alias.gcc-mklog '!f() { \"`git rev-parse --show-toplevel`/contrib/mklog.py\" $@; } ; f'\n "}]}