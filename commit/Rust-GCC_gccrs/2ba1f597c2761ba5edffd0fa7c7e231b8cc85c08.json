{"sha": "2ba1f597c2761ba5edffd0fa7c7e231b8cc85c08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJhMWY1OTdjMjc2MWJhNWVkZmZkMGZhN2M3ZTIzMWI4Y2M4NWMwOA==", "commit": {"author": {"name": "Gerald Pfeifer", "email": "gerald@pfeifer.com", "date": "2016-09-05T18:39:31Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "2016-09-05T18:39:31Z"}, "message": "invoke.texi (SPU Options): nops -> NOPs.\n\n\t* doc/invoke.texi (SPU Options): nops -> NOPs.\n\t(x86 Options): Ditto.\n\nFrom-SVN: r239995", "tree": {"sha": "f5b697bef6c845d09e2ba00b27fa3d8b6b93d964", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5b697bef6c845d09e2ba00b27fa3d8b6b93d964"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ba1f597c2761ba5edffd0fa7c7e231b8cc85c08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ba1f597c2761ba5edffd0fa7c7e231b8cc85c08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ba1f597c2761ba5edffd0fa7c7e231b8cc85c08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ba1f597c2761ba5edffd0fa7c7e231b8cc85c08/comments", "author": {"login": "GeraldPfeifer", "id": 4573532, "node_id": "MDQ6VXNlcjQ1NzM1MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/4573532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeraldPfeifer", "html_url": "https://github.com/GeraldPfeifer", "followers_url": "https://api.github.com/users/GeraldPfeifer/followers", "following_url": "https://api.github.com/users/GeraldPfeifer/following{/other_user}", "gists_url": "https://api.github.com/users/GeraldPfeifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeraldPfeifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeraldPfeifer/subscriptions", "organizations_url": "https://api.github.com/users/GeraldPfeifer/orgs", "repos_url": "https://api.github.com/users/GeraldPfeifer/repos", "events_url": "https://api.github.com/users/GeraldPfeifer/events{/privacy}", "received_events_url": "https://api.github.com/users/GeraldPfeifer/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b3c3ce0ac66a845e2b56bfe1944c87c962b565be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3c3ce0ac66a845e2b56bfe1944c87c962b565be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3c3ce0ac66a845e2b56bfe1944c87c962b565be"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "1bb27ca8cabc0afda300d7cb15764509d3adc6b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba1f597c2761ba5edffd0fa7c7e231b8cc85c08/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba1f597c2761ba5edffd0fa7c7e231b8cc85c08/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ba1f597c2761ba5edffd0fa7c7e231b8cc85c08", "patch": "@@ -1,3 +1,8 @@\n+2016-09-05  Gerald Pfeifer  <gerald@pfeifer.com>\n+\n+\t* doc/invoke.texi (SPU Options): nops -> NOPs.\n+\t(x86 Options): Ditto.\n+\n 2016-09-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/77475"}, {"sha": "20be9b747510efc3c338068ccae1698832a536df", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ba1f597c2761ba5edffd0fa7c7e231b8cc85c08/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ba1f597c2761ba5edffd0fa7c7e231b8cc85c08/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=2ba1f597c2761ba5edffd0fa7c7e231b8cc85c08", "patch": "@@ -22846,16 +22846,16 @@ more efficient.  The default behavior is to use atomic updates.\n @item -mdual-nops\n @itemx -mdual-nops=@var{n}\n @opindex mdual-nops\n-By default, GCC inserts nops to increase dual issue when it expects\n+By default, GCC inserts NOPs to increase dual issue when it expects\n it to increase performance.  @var{n} can be a value from 0 to 10.  A\n-smaller @var{n} inserts fewer nops.  10 is the default, 0 is the\n+smaller @var{n} inserts fewer NOPs.  10 is the default, 0 is the\n same as @option{-mno-dual-nops}.  Disabled with @option{-Os}.\n \n @item -mhint-max-nops=@var{n}\n @opindex mhint-max-nops\n-Maximum number of nops to insert for a branch hint.  A branch hint must\n+Maximum number of NOPs to insert for a branch hint.  A branch hint must\n be at least 8 instructions away from the branch it is affecting.  GCC\n-inserts up to @var{n} nops to enforce this, otherwise it does not\n+inserts up to @var{n} NOPs to enforce this, otherwise it does not\n generate the branch hint.\n \n @item -mhint-max-distance=@var{n}\n@@ -24640,7 +24640,7 @@ automatically patching and out calls.\n @itemx -mno-nop-mcount\n @opindex mnop-mcount\n If profiling is active (@option{-pg}), generate the calls to\n-the profiling functions as nops. This is useful when they\n+the profiling functions as NOPs. This is useful when they\n should be patched in later dynamically. This is likely only\n useful together with @option{-mrecord-mcount}.\n "}]}