{"sha": "ef2662bf65271c7723e797a11891d8085cd01fa5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYyNjYyYmY2NTI3MWM3NzIzZTc5N2ExMTg5MWQ4MDg1Y2QwMWZhNQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-05-07T14:30:23Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-05-07T14:30:23Z"}, "message": "re PR c++/61080 (Spurious no return statement warning with deleted operators)\n\n/cp\n2014-05-07  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/61080\n\t* pt.c (instantiate_decl): Avoid generating the body of a\n\tdeleted function.\n\n/testsuite\n2014-05-07  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/61080\n\t* g++.dg/cpp0x/deleted7.C: New.\n\nFrom-SVN: r210161", "tree": {"sha": "ee8b0c4370ec99eae42b92e1888996ea0abd5759", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee8b0c4370ec99eae42b92e1888996ea0abd5759"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef2662bf65271c7723e797a11891d8085cd01fa5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef2662bf65271c7723e797a11891d8085cd01fa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef2662bf65271c7723e797a11891d8085cd01fa5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef2662bf65271c7723e797a11891d8085cd01fa5/comments", "author": null, "committer": null, "parents": [{"sha": "50f0aa20742add8e1a59154ce76f45c157142fe3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50f0aa20742add8e1a59154ce76f45c157142fe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50f0aa20742add8e1a59154ce76f45c157142fe3"}], "stats": {"total": 86, "additions": 70, "deletions": 16}, "files": [{"sha": "938fbf59f3fdf7d507d0aac33d90ef4403b0de1f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef2662bf65271c7723e797a11891d8085cd01fa5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef2662bf65271c7723e797a11891d8085cd01fa5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ef2662bf65271c7723e797a11891d8085cd01fa5", "patch": "@@ -1,3 +1,9 @@\n+2014-05-07  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/61080\n+\t* pt.c (instantiate_decl): Avoid generating the body of a\n+\tdeleted function.\n+\n 2014-05-06  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/60999"}, {"sha": "f23eec3504c8e0fc210d0367fc8f4a156e58cab3", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 23, "deletions": 16, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef2662bf65271c7723e797a11891d8085cd01fa5/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef2662bf65271c7723e797a11891d8085cd01fa5/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ef2662bf65271c7723e797a11891d8085cd01fa5", "patch": "@@ -19542,6 +19542,7 @@ instantiate_decl (tree d, int defer_ok,\n   int saved_unevaluated_operand = cp_unevaluated_operand;\n   int saved_inhibit_evaluation_warnings = c_inhibit_evaluation_warnings;\n   bool external_p;\n+  bool deleted_p;\n   tree fn_context;\n   bool nested;\n \n@@ -19623,11 +19624,17 @@ instantiate_decl (tree d, int defer_ok,\n     args = gen_args;\n \n   if (TREE_CODE (d) == FUNCTION_DECL)\n-    pattern_defined = (DECL_SAVED_TREE (code_pattern) != NULL_TREE\n-\t\t       || DECL_DEFAULTED_OUTSIDE_CLASS_P (code_pattern)\n-\t\t       || DECL_DELETED_FN (code_pattern));\n+    {\n+      deleted_p = DECL_DELETED_FN (code_pattern);\n+      pattern_defined = (DECL_SAVED_TREE (code_pattern) != NULL_TREE\n+\t\t\t || DECL_DEFAULTED_OUTSIDE_CLASS_P (code_pattern)\n+\t\t\t || deleted_p);\n+    }\n   else\n-    pattern_defined = ! DECL_IN_AGGR_P (code_pattern);\n+    {\n+      deleted_p = false;\n+      pattern_defined = ! DECL_IN_AGGR_P (code_pattern);\n+    }\n \n   /* We may be in the middle of deferred access check.  Disable it now.  */\n   push_deferring_access_checks (dk_no_deferred);\n@@ -19671,7 +19678,10 @@ instantiate_decl (tree d, int defer_ok,\n \t elsewhere, we don't want to instantiate the entire data\n \t member, but we do want to instantiate the initializer so that\n \t we can substitute that elsewhere.  */\n-      || (external_p && VAR_P (d)))\n+      || (external_p && VAR_P (d))\n+      /* Handle here a deleted function too, avoid generating\n+\t its body (c++/61080).  */\n+      || deleted_p)\n     {\n       /* The definition of the static data member is now required so\n \t we must substitute the initializer.  */\n@@ -19867,17 +19877,14 @@ instantiate_decl (tree d, int defer_ok,\n \t\t       tf_warning_or_error, tmpl,\n \t\t       /*integral_constant_expression_p=*/false);\n \n-\t  if (DECL_STRUCT_FUNCTION (code_pattern))\n-\t    {\n-\t      /* Set the current input_location to the end of the function\n-\t\t so that finish_function knows where we are.  */\n-\t      input_location\n-\t\t= DECL_STRUCT_FUNCTION (code_pattern)->function_end_locus;\n-\n-\t      /* Remember if we saw an infinite loop in the template.  */\n-\t      current_function_infinite_loop\n-\t\t= DECL_STRUCT_FUNCTION (code_pattern)->language->infinite_loop;\n-\t    }\n+\t  /* Set the current input_location to the end of the function\n+\t     so that finish_function knows where we are.  */\n+\t  input_location\n+\t    = DECL_STRUCT_FUNCTION (code_pattern)->function_end_locus;\n+\n+\t  /* Remember if we saw an infinite loop in the template.  */\n+\t  current_function_infinite_loop\n+\t    = DECL_STRUCT_FUNCTION (code_pattern)->language->infinite_loop;\n \t}\n \n       /* We don't need the local specializations any more.  */"}, {"sha": "97ce690bff921a3d609d8264dd084288a09549d8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef2662bf65271c7723e797a11891d8085cd01fa5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef2662bf65271c7723e797a11891d8085cd01fa5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ef2662bf65271c7723e797a11891d8085cd01fa5", "patch": "@@ -1,3 +1,8 @@\n+2014-05-07  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/61080\n+\t* g++.dg/cpp0x/deleted7.C: New.\n+\n 2014-05-07  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/61034"}, {"sha": "6afa9f7689c234b869797966c1354c4bea217e44", "filename": "gcc/testsuite/g++.dg/cpp0x/deleted7.C", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef2662bf65271c7723e797a11891d8085cd01fa5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdeleted7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef2662bf65271c7723e797a11891d8085cd01fa5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdeleted7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdeleted7.C?ref=ef2662bf65271c7723e797a11891d8085cd01fa5", "patch": "@@ -0,0 +1,36 @@\n+// PR c++/61080\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-Wreturn-type\" }\n+\n+struct AAA\n+{\n+  int a1, a2, a3;\n+  void *p;\n+};\n+\n+template <typename K, typename V>\n+class WeakMapPtr\n+{\n+  public:\n+    WeakMapPtr() : ptr(nullptr) {};\n+    bool init(AAA *cx);\n+  private:\n+    void *ptr;\n+    WeakMapPtr(const WeakMapPtr &wmp) = delete;\n+    WeakMapPtr &operator=(const WeakMapPtr &wmp) = delete;\n+};\n+\n+template <typename K, typename V>\n+bool WeakMapPtr<K, V>::init(AAA *cx)\n+{\n+    ptr = cx->p;\n+    return true;\n+}\n+\n+struct JSObject\n+{\n+  int blah;\n+  float meh;\n+};\n+\n+template class WeakMapPtr<JSObject*, JSObject*>;"}]}