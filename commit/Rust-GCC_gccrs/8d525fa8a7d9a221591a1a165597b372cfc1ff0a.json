{"sha": "8d525fa8a7d9a221591a1a165597b372cfc1ff0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ1MjVmYThhN2Q5YTIyMTU5MWExYTE2NTU5N2IzNzJjZmMxZmYwYQ==", "commit": {"author": {"name": "Christopher Faylor", "email": "cgf@cygnus.com", "date": "1998-12-04T01:21:00Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-12-04T01:21:00Z"}, "message": "* pexecute.c: Remove obsolete ifdefed cygwin code.\n\nFrom-SVN: r24084", "tree": {"sha": "854bd72199ea00774193e3c87820ed95e92f8db2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/854bd72199ea00774193e3c87820ed95e92f8db2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d525fa8a7d9a221591a1a165597b372cfc1ff0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d525fa8a7d9a221591a1a165597b372cfc1ff0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d525fa8a7d9a221591a1a165597b372cfc1ff0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d525fa8a7d9a221591a1a165597b372cfc1ff0a/comments", "author": null, "committer": null, "parents": [{"sha": "36e77ea6ff00d6043d1b195683a6b98ef6eb7aeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36e77ea6ff00d6043d1b195683a6b98ef6eb7aeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36e77ea6ff00d6043d1b195683a6b98ef6eb7aeb"}], "stats": {"total": 46, "additions": 9, "deletions": 37}, "files": [{"sha": "0aca2efdda60b6a920f88d5df23db20ef5fdc9f6", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d525fa8a7d9a221591a1a165597b372cfc1ff0a/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d525fa8a7d9a221591a1a165597b372cfc1ff0a/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=8d525fa8a7d9a221591a1a165597b372cfc1ff0a", "patch": "@@ -1,3 +1,7 @@\n+Sat Nov 28 17:25:22 1998  Christopher Faylor <cgf@cygnus.com>\n+\n+\t* pexecute.c: Remove obsolete ifdefed cygwin code.\n+\n Fri Nov 27 13:26:06 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* choose-temp.c: Always include libiberty.h.  Avoid redundancies."}, {"sha": "206db58ee811109919fed9f23964110239116d92", "filename": "libiberty/pexecute.c", "status": "modified", "additions": 5, "deletions": 37, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d525fa8a7d9a221591a1a165597b372cfc1ff0a/libiberty%2Fpexecute.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d525fa8a7d9a221591a1a165597b372cfc1ff0a/libiberty%2Fpexecute.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpexecute.c?ref=8d525fa8a7d9a221591a1a165597b372cfc1ff0a", "patch": "@@ -244,41 +244,6 @@ pwait (pid, status, flags)\n extern int _spawnv ();\n extern int _spawnvp ();\n \n-int\n-pexecute (program, argv, this_pname, temp_base, errmsg_fmt, errmsg_arg, flags)\n-     const char *program;\n-     char * const *argv;\n-     const char *this_pname;\n-     const char *temp_base;\n-     char **errmsg_fmt, **errmsg_arg;\n-     int flags;\n-{\n-  int pid;\n-\n-  if ((flags & PEXECUTE_ONE) != PEXECUTE_ONE)\n-    abort ();\n-  pid = (flags & PEXECUTE_SEARCH ? _spawnvp : _spawnv)\n-    (_P_NOWAIT, program, fix_argv(argv));\n-  if (pid == -1)\n-    {\n-      *errmsg_fmt = install_error_msg;\n-      *errmsg_arg = program;\n-      return -1;\n-    }\n-  return pid;\n-}\n-\n-int\n-pwait (pid, status, flags)\n-     int pid;\n-     int *status;\n-     int flags;\n-{\n-  /* ??? Here's an opportunity to canonicalize the values in STATUS.\n-     Needed?  */\n-  return cwait (status, pid, WAIT_CHILD);\n-}\n-\n #else /* ! __CYGWIN32__ */\n \n /* This is a kludge to get around the Microsoft C spawn functions' propensity\n@@ -317,6 +282,7 @@ fix_argv (argvec)\n \n   return (const char * const *) argvec;\n }\n+#endif /* __CYGWIN32__ */\n \n #include <io.h>\n #include <fcntl.h>\n@@ -433,6 +399,9 @@ pwait (pid, status, flags)\n      int *status;\n      int flags;\n {\n+#ifdef __CYGWIN32__\n+  return wait (status);\n+#else\n   int termstat;\n \n   pid = _cwait (&termstat, pid, WAIT_CHILD);\n@@ -450,10 +419,9 @@ pwait (pid, status, flags)\n     *status = (((termstat) & 0xff) << 8);\n \n   return pid;\n+#endif /* __CYGWIN32__ */\n }\n \n-#endif /* ! defined (__CYGWIN32__) */\n-\n #endif /* _WIN32 */\n \n #ifdef OS2"}]}