{"sha": "8b109b37fc08e64e252ab7d3031283c94a638291", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGIxMDliMzdmYzA4ZTY0ZTI1MmFiN2QzMDMxMjgzYzk0YTYzODI5MQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-21T23:21:14Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-21T23:21:14Z"}, "message": "Added arg to RETURN_POPS_ARGS.\n\nFrom-SVN: r8999", "tree": {"sha": "804db72713ffd33458515ca2cde99ed7e257f631", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/804db72713ffd33458515ca2cde99ed7e257f631"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b109b37fc08e64e252ab7d3031283c94a638291", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b109b37fc08e64e252ab7d3031283c94a638291", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b109b37fc08e64e252ab7d3031283c94a638291", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b109b37fc08e64e252ab7d3031283c94a638291/comments", "author": null, "committer": null, "parents": [{"sha": "330e1b6be9df24eacd076ba149feba48e8bdeecc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/330e1b6be9df24eacd076ba149feba48e8bdeecc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/330e1b6be9df24eacd076ba149feba48e8bdeecc"}], "stats": {"total": 191, "additions": 115, "deletions": 76}, "files": [{"sha": "5133e50eef824f3e6ba1695f992542ef5ec39da0", "filename": "gcc/config/1750a/1750a.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2F1750a%2F1750a.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2F1750a%2F1750a.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2F1750a%2F1750a.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -422,11 +422,12 @@ enum reg_class { NO_REGS, INDEX_REGS, BASE_REGS, ALL_REGS, LIM_REG_CLASSES };\n \n /* Value is 1 if returning from a function call automatically\n    pops the arguments described by the number-of-args field in the call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.\n */\n \n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE) 0\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) 0\n \n /* Define how to find the value returned by a function.\n    VALTYPE is the data type of the value (as a tree)."}, {"sha": "4e531ce62c907a14fe8f731389e791bc2b564046", "filename": "gcc/config/a29k/a29k.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fa29k%2Fa29k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fa29k%2Fa29k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fa29k%2Fa29k.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -730,11 +730,12 @@ extern struct rtx_def *a29k_get_reloaded_address ();\n \n /* Value is the number of bytes of arguments automatically\n    popped when returning from a subroutine call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.\n    SIZE is the number of bytes of arguments passed on the stack.  */\n \n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE) 0\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) 0\n \n /* Define how to find the value returned by a function.\n    VALTYPE is the data type of the value (as a tree)."}, {"sha": "d0157b3b49049e5653afda539dc1a4398c710aed", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for DEC Alpha.\n-   Copyright (C) 1992, 1993, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1993, 1994, 1995 Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n This file is part of GNU CC.\n@@ -701,11 +701,12 @@ enum reg_class { NO_REGS, GENERAL_REGS, FLOAT_REGS, ALL_REGS,\n \n /* Value is the number of bytes of arguments automatically\n    popped when returning from a subroutine call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.\n    SIZE is the number of bytes of arguments passed on the stack.  */\n \n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE) 0\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) 0\n \n /* Define how to find the value returned by a function.\n    VALTYPE is the data type of the value (as a tree)."}, {"sha": "3a0c79fd6b8a2fc1c034ed52d8691d7a97bee3c2", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,7 +1,7 @@\n /* Definitions of target machine for GNU compiler, for Acorn RISC Machine.\n-   Copyright (C) 1991, 1993, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1993, 1994, 1995 Free Software Foundation, Inc.\n    Contributed by Pieter `Tiggr' Schoenmakers (rcpieter@win.tue.nl)\n-              and Martin Simmons (@harleqn.co.uk).\n+   and Martin Simmons (@harleqn.co.uk).\n    More major hacks by Richard Earnshaw (rwe11@cl.cam.ac.uk)\n    \n This file is part of GNU CC.\n@@ -604,13 +604,14 @@ enum reg_class\n \n /* Value is the number of byte of arguments automatically\n    popped when returning from a subroutine call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.\n    SIZE is the number of bytes of arguments passed on the stack.\n \n    On the ARM, the caller does not pop any of its arguments that were passed\n    on the stack.  */\n-#define RETURN_POPS_ARGS(FUNTYPE, SIZE)  0\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE)  0\n \n /* Define how to find the value returned by a function.\n    VALTYPE is the data type of the value (as a tree)."}, {"sha": "d0434f8831c54c8eb3c24e36d427955a56f0a27a", "filename": "gcc/config/clipper/clipper.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fclipper%2Fclipper.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fclipper%2Fclipper.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fclipper%2Fclipper.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Clipper version.\n-   Copyright (C) 1987, 1988, 1991, 1993, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 88, 91, 93, 94, 1995 Free Software Foundation, Inc.\n    Contributed by Holger Teutsch (holger@hotbso.rhein-main.de)\n \n This file is part of GNU CC.\n@@ -379,11 +379,12 @@ enum reg_class { NO_REGS, GENERAL_REGS, FLOAT_REGS, ALL_REGS, LIM_REG_CLASSES};\n \n /* Value is the number of bytes of arguments automatically\n    popped when returning from a subroutine call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.\n    SIZE is the number of bytes of arguments passed on the stack. */\n \n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE) 0\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) 0\n \n /* Define how to find the value returned by a function.\n    VALTYPE is the data type of the value (as a tree)."}, {"sha": "a87a75bcfc7099aac0f812b976ce7783e599343d", "filename": "gcc/config/convex/convex.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fconvex%2Fconvex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fconvex%2Fconvex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fconvex%2Fconvex.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Convex version.\n-   Copyright (C) 1988, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1994, 1995 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -743,11 +743,12 @@ enum reg_class {\n \n /* Value is the number of bytes of arguments automatically\n    popped when returning from a subroutine call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.\n    SIZE is the number of bytes of arguments passed on the stack.  */\n \n-#define RETURN_POPS_ARGS(FUNTYPE, SIZE) (SIZE)\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) (SIZE)\n \n /* Define how to find the value returned by a function.\n    VALTYPE is the data type of the value (as a tree)."}, {"sha": "60b507dba48c05520b6655e55ff1d16fda8c7b05", "filename": "gcc/config/dsp16xx/dsp16xx.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  AT&T DSP1600.\n-   Copyright (C) 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1995 Free Software Foundation, Inc.\n    Contributed by Michael Collison (collison@world.std.com).\n \n This file is part of GNU CC.\n@@ -1112,10 +1112,11 @@ extern struct dsp16xx_frame_info current_frame_info;\n \n /* Value is 1 if returning from a function call automatically\n    pops the arguments described by the number-of-args field in the call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name. */\n \n-#define RETURN_POPS_ARGS(FUNTYPE, STACK_SIZE) 0\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) 0\n \n /* Define how to find the value returned by a function.\n    VALTYPE is the data type of the value (as a tree)."}, {"sha": "9ce75ab972a2077546765181e69031dedf729652", "filename": "gcc/config/elxsi/elxsi.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Felxsi%2Felxsi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Felxsi%2Felxsi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Felxsi%2Felxsi.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.  Elxsi version.\n-   Copyright (C) 1987, 1988, 1992 Free Software Foundation, Inc.\n-   This port, done by Mike Stump <mrs@cygnus.com> in 1988, and is the first\n+   Copyright (C) 1987, 1988, 1992, 1995 Free Software Foundation, Inc.\n+   This port, done by Mike Stump <mrs@cygnus.com> in 1988, is the first\n    64 bit port of GNU CC.\n    Based upon the VAX port.\n \n@@ -302,12 +302,13 @@ enum reg_class { NO_REGS, GENERAL_REGS, ALL_REGS, LIM_REG_CLASSES };\n \n /* Value is 1 if returning from a function call automatically\n    pops the arguments described by the number-of-args field in the call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.\n \n    On the Vax, the RET insn always pops all the args for any function.  */\n \n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE) (SIZE)\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) (SIZE)\n \n /* Define how to find the value returned by a function.\n    VALTYPE is the data type of the value (as a tree)."}, {"sha": "588b64641f580f35ef6cd8bb7429abf8ea438801", "filename": "gcc/config/fx80/fx80.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Ffx80%2Ffx80.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Ffx80%2Ffx80.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffx80%2Ffx80.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Alliant FX version.\n-   Copyright (C) 1989, 1993, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1993, 1994, 1995 Free Software Foundation, Inc.\n    Adapted from m68k.h by Paul Petersen (petersen@uicsrd.csrd.uiuc.edu)\n    and Joe Weening (weening@gang-of-four.stanford.edu).\n \n@@ -431,6 +431,7 @@ extern enum reg_class regno_reg_class[];\n \n /* Value is the number of bytes of arguments automatically\n    popped when returning from a subroutine call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.\n    SIZE is the number of bytes of arguments passed on the stack. \n@@ -440,7 +441,7 @@ extern enum reg_class regno_reg_class[];\n    could add to the pending stack adjustment the size of the argument\n    descriptors that are pushed after the arguments.  */\n \n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE) (SIZE)\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) (SIZE)\n \n /* Define how to find the value returned by a function.\n    VALTYPE is the data type of the value (as a tree)."}, {"sha": "7d88255f37ee7e4e42f72f1637f83228a66e3237", "filename": "gcc/config/gmicro/gmicro.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fgmicro%2Fgmicro.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fgmicro%2Fgmicro.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgmicro%2Fgmicro.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Gmicro (TRON) version.\n-   Copyright (C) 1987, 1988, 1989 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1988, 1989, 1995 Free Software Foundation, Inc.\n    Contributed by Masanobu Yuhara, Fujitsu Laboratories LTD.\n    (yuhara@flab.fujitsu.co.jp)\n \n@@ -443,6 +443,7 @@ extern enum reg_class regno_reg_class[];\n \n /* Value is the number of byte of arguments automatically\n    popped when returning from a subroutine call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.\n    SIZE is the number of bytes of arguments passed on the stack. \n@@ -457,7 +458,7 @@ extern enum reg_class regno_reg_class[];\n    On the m68k this is an RTD option, so I use the same name\n    for the Gmicro. The option name may be changed in the future. */\n \n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE)   \\\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE)   \\\n   ((TARGET_RTD && TREE_CODE (FUNTYPE) != IDENTIFIER_NODE\t\\\n     && (TYPE_ARG_TYPES (FUNTYPE) == 0\t\t\t\t\\\n \t|| (TREE_VALUE (tree_last (TYPE_ARG_TYPES (FUNTYPE)))\t\\"}, {"sha": "42c9b453a2d0c0884dc663eb70287f23ca350512", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -446,13 +446,14 @@ enum reg_class { NO_REGS,  LONG_REGS, GENERAL_REGS, SP_REG, SP_AND_G_REG, ALL_RE\n \n /* Value is the number of bytes of arguments automatically\n    popped when returning from a subroutine call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.\n    SIZE is the number of bytes of arguments passed on the stack.\n \n    On the H8 the return does not pop anything.  */\n \n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE) 0\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) 0\n \n /* Definitions for register eliminations.\n "}, {"sha": "1b52ab9cb6215e65988053ef1ef49c247d315c28", "filename": "gcc/config/i370/i370.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fi370%2Fi370.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fi370%2Fi370.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fi370.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -447,7 +447,7 @@ enum reg_class\n /* Define if returning from a function call automatically pops the\n    arguments described by the number-of-args field in the call.  */\n \n-#define RETURN_POPS_ARGS(FUNTYPE, STACKSIZE) 0\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) 0\n \n /* Define how to find the value returned by a function.  VALTYPE is the\n    data type of the value (as a tree)."}, {"sha": "b52e35bae1d973af61cf60df555f5b3c1d60f7b0", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,5 +1,6 @@\n-/* Definitions of target machine for GNU compiler for Intel X86 (386, 486, pentium)\n-   Copyright (C) 1988, 1992, 1994 Free Software Foundation, Inc.\n+/* Definitions of target machine for GNU compiler for Intel X86\n+   (386, 486, Pentium).\n+   Copyright (C) 1988, 1992, 1994, 1995 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -750,6 +751,7 @@ enum reg_class\n \n /* Value is the number of bytes of arguments automatically\n    popped when returning from a subroutine call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.\n    SIZE is the number of bytes of arguments passed on the stack.\n@@ -762,7 +764,7 @@ enum reg_class\n    standard Unix calling sequences.  If the option is not selected,\n    the caller must always pop the args.  */\n \n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE)   \\\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE)   \\\n   (TREE_CODE (FUNTYPE) == IDENTIFIER_NODE ? 0\t\t\t\\\n    : (TARGET_RTD\t\t\t\t\t\t\\\n       && (TYPE_ARG_TYPES (FUNTYPE) == 0\t\t\t\t\\"}, {"sha": "6d8c3a3d66f7e1bacdf3e3a42f23edc1d6701e09", "filename": "gcc/config/i386/isc.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fi386%2Fisc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fi386%2Fisc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fisc.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -31,7 +31,7 @@\n    structures. */\n \n #undef RETURN_POPS_ARGS\n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE)   \\\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE)   \\\n   (TREE_CODE (FUNTYPE) == IDENTIFIER_NODE ? 0\t\t\t\\\n    : (TARGET_RTD\t\t\t\t\t\t\\\n       && (TYPE_ARG_TYPES (FUNTYPE) == 0\t\t\t\t\\"}, {"sha": "473dd34da22c0a5ef9b08e8b29204f0fe98fbffc", "filename": "gcc/config/i386/next.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fi386%2Fnext.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fi386%2Fnext.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnext.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for GNU compiler for Intel x86 CPU running NeXTSTEP\n-   Copyright (C) 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1995 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -214,7 +214,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    rely on the callee to pop it.  */\n \n #undef\tRETURN_POPS_ARGS\n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE) \t\t\t\t\\\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) \t\t\t\t\\\n   (TREE_CODE (FUNTYPE) == IDENTIFIER_NODE\t\t\t\\\n    ? 0\t\t\t\t\t\t\t\t\\\n    : (TARGET_RTD\t\t\t\t\t\t\\"}, {"sha": "ac410b1aa1e61e37e1cedfa373a5aa45ee41034b", "filename": "gcc/config/i386/sco.h", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fi386%2Fsco.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fi386%2Fsco.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,5 +1,21 @@\n-/* Definitions for Intel 386 running SCO Unix System V.  */\n+/* Definitions for Intel 386 running SCO Unix System V.\n+   Copyright (C) 1988, 1992, 1994, 1995 Free Software Foundation, Inc.\n \n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n /* Mostly it's like AT&T Unix System V. */\n \n@@ -86,7 +102,7 @@\n    structures. */\n \n #undef RETURN_POPS_ARGS\n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE)   \\\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE)   \\\n   (TREE_CODE (FUNTYPE) == IDENTIFIER_NODE ? 0\t\t\t\\\n    : (TARGET_RTD\t\t\t\t\t\t\\\n       && (TYPE_ARG_TYPES (FUNTYPE) == 0\t\t\t\t\\"}, {"sha": "6b10df128b4bc183330c082bedba8c0239a5c61b", "filename": "gcc/config/i386/scodbx.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fi386%2Fscodbx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fi386%2Fscodbx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fscodbx.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,6 +1,6 @@\n /* Definitions for Intel 386 running SCO Unix System V,\n    using dbx-in-coff encapsulation.\n-   Copyright (C) 1992 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1995 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -73,7 +73,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n    structures. */\n \n #undef RETURN_POPS_ARGS\n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE)   \\\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE)   \\\n   (TREE_CODE (FUNTYPE) == IDENTIFIER_NODE ? 0\t\t\t\\\n    : (TARGET_RTD\t\t\t\t\t\t\\\n       && (TYPE_ARG_TYPES (FUNTYPE) == 0\t\t\t\t\\"}, {"sha": "0682cf9720b2187d3d9768d02c5bb0d95100a0fb", "filename": "gcc/config/i860/i860.h", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fi860%2Fi860.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fi860%2Fi860.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Fi860.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,9 +1,6 @@\n /* Definitions of target machine for GNU compiler, for Intel 860.\n-   Copyright (C) 1989, 1991, 1993 Free Software Foundation, Inc.\n-\n-   Written by Richard Stallman (rms@ai.mit.edu).\n-\n-   Hacked substantially by Ron Guilmette (rfg@netcom.com) to cater to\n+   Copyright (C) 1989, 1991, 1993, 1995 Free Software Foundation, Inc.\n+   Hacked substantially by Ron Guilmette (rfg@segfault.us.com) to cater to\n    the whims of the System V Release 4 assembler.\n \n This file is part of GNU CC.\n@@ -415,11 +412,12 @@ enum reg_class { NO_REGS, GENERAL_REGS, FP_REGS, ALL_REGS, LIM_REG_CLASSES };\n \n /* Value is the number of bytes of arguments automatically\n    popped when returning from a subroutine call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.\n    SIZE is the number of bytes of arguments passed on the stack.  */\n \n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE) 0\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) 0\n \n /* Define how to find the value returned by a function.\n    VALTYPE is the data type of the value (as a tree)."}, {"sha": "dc4ca45cee61e38eabd8c39bf0f90089f28937bc", "filename": "gcc/config/i960/i960.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fi960%2Fi960.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fi960%2Fi960.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for Intel 80960\n-   Copyright (C) 1992, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1993, 1995 Free Software Foundation, Inc.\n    Contributed by Steven McGeady, Intel Corp.\n    Additional Work by Glenn Colon-Bonet, Jonathan Shapiro, Andy Wilson\n    Converted to GCC 2.0 by Jim Wilson and Michael Tiemann, Cygnus Support.\n@@ -720,10 +720,11 @@ enum reg_class { NO_REGS, GLOBAL_REGS, LOCAL_REGS, LOCAL_OR_GLOBAL_REGS,\n \n /* Value is 1 if returning from a function call automatically\n    pops the arguments described by the number-of-args field in the call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.  */\n \n-#define RETURN_POPS_ARGS(FUNTYPE, SIZE) 0\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) 0\n \n /* Define how to find the value returned by a library function\n    assuming the value has mode MODE.  */"}, {"sha": "ecc18a6a135fe4dc2e11ff66067468e59044ea38", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -761,6 +761,7 @@ extern enum reg_class regno_reg_class[];\n \n /* Value is the number of byte of arguments automatically\n    popped when returning from a subroutine call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.\n    SIZE is the number of bytes of arguments passed on the stack.\n@@ -774,7 +775,7 @@ extern enum reg_class regno_reg_class[];\n    standard Unix calling sequences.  If the option is not selected,\n    the caller must always pop the args.  */\n \n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE)   \\\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE)   \\\n   ((TARGET_RTD && TREE_CODE (FUNTYPE) != IDENTIFIER_NODE\t\\\n     && (TYPE_ARG_TYPES (FUNTYPE) == 0\t\t\t\t\\\n \t|| (TREE_VALUE (tree_last (TYPE_ARG_TYPES (FUNTYPE)))\t\\"}, {"sha": "3ee14c3aa316291425497192ca25ddb21efbc6dd", "filename": "gcc/config/m88k/m88k.h", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fm88k%2Fm88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fm88k%2Fm88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,8 +1,8 @@\n /* Definitions of target machine for GNU compiler for\n    Motorola m88100 in an 88open OCS/BCS environment.\n-   Copyright (C) 1988, 89, 90, 91, 93, 1994 Free Software Foundation, Inc.\n-   Contributed by Michael Tiemann (tiemann@mcc.com)\n-   Enhanced by Michael Meissner (meissner@osf.org)\n+   Copyright (C) 1988, 89, 90, 91, 93, 94, 1995 Free Software Foundation, Inc.\n+   Contributed by Michael Tiemann (tiemann@cygnus.com)\n+   Enhanced by Michael Meissner (meissner@cygnus.com)\n    Version 2 port by Tom Wood (twood@pets.sps.mot.com)\n \n This file is part of GNU CC.\n@@ -197,13 +197,13 @@ extern char * reg_names[];\n    Redefined in sysv4.h, and luna.h.  */\n #define VERSION_INFO1\t\"88open OCS/BCS, \"\n #ifndef VERSION_INFO2\n-#define VERSION_INFO2   \"$Revision: 1.60 $\"\n+#define VERSION_INFO2   \"$Revision: 1.61 $\"\n #endif\n \n #ifndef VERSION_STRING\n #define VERSION_STRING  version_string\n #ifdef __STDC__\n-#define TM_RCS_ID      \"@(#)\" __FILE__ \" $Revision: 1.60 $ \" __DATE__\n+#define TM_RCS_ID      \"@(#)\" __FILE__ \" $Revision: 1.61 $ \" __DATE__\n #else\n #define TM_RCS_ID      \"$What$\"\n #endif  /* __STDC__ */\n@@ -973,10 +973,11 @@ enum reg_class { NO_REGS, AP_REG, XRF_REGS, GENERAL_REGS, AGRF_REGS,\n \n /* Value is the number of bytes of arguments automatically\n    popped when returning from a subroutine call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.\n    SIZE is the number of bytes of arguments passed on the stack.  */\n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE) 0\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) 0\n \n /* Define how to find the value returned by a function.\n    VALTYPE is the data type of the value (as a tree)."}, {"sha": "bb4ce9f4a12e447b2b7b9481f1543eec8d23ff10", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1800,6 +1800,8 @@ extern struct mips_frame_info current_frame_info;\n    if the function pops no arguments and the caller must therefore\n    pop them all after the function returns.\n \n+   FUNDECL is the declaration node of the function (as a tree).\n+\n    FUNTYPE is a C variable whose value is a tree node that\n    describes the function in question.  Normally it is a node of\n    type `FUNCTION_TYPE' that describes the data type of the function.\n@@ -1819,7 +1821,7 @@ extern struct mips_frame_info current_frame_info;\n    argument popping will always be the responsibility of the\n    calling function.  */\n \n-#define RETURN_POPS_ARGS(FUNTYPE, SIZE) 0\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) 0\n \n \n /* Symbolic macros for the registers used to return integer and floating"}, {"sha": "ccf722754b5aeaed8f9094f0b27ba70625ca84a7", "filename": "gcc/config/ns32k/ns32k.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fns32k%2Fns32k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fns32k%2Fns32k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fns32k.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  NS32000 version.\n-   Copyright (C) 1988, 1993, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1993, 1994, 1995 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GNU CC.\n@@ -390,6 +390,7 @@ enum reg_class { NO_REGS, GENERAL_REGS, FLOAT_REGS, GEN_AND_FP_REGS,\n \n /* Value is the number of byte of arguments automatically\n    popped when returning from a subroutine call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.\n    SIZE is the number of bytes of arguments passed on the stack.\n@@ -402,7 +403,7 @@ enum reg_class { NO_REGS, GENERAL_REGS, FLOAT_REGS, GEN_AND_FP_REGS,\n    standard Unix calling sequences.  If the option is not selected,\n    the caller must always pop the args.  */\n \n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE)   \\\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE)   \\\n   ((TARGET_RTD && TREE_CODE (FUNTYPE) != IDENTIFIER_NODE\t\\\n     && (TYPE_ARG_TYPES (FUNTYPE) == 0\t\t\t\t\\\n \t|| (TREE_VALUE (tree_last (TYPE_ARG_TYPES (FUNTYPE)))\t\\"}, {"sha": "e69a63a0ffcd5bb700ca2547108eb4855092b2dd", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler, for the HP Spectrum.\n    Copyright (C) 1992, 1993, 1994, 1995 Free Software Foundation, Inc.\n-   Contributed by Michael Tiemann (tiemann@mcc.com)\n+   Contributed by Michael Tiemann (tiemann@cygnus.com) of Cygnus Support\n    and Tim Moore (moore@defmacro.cs.utah.edu) of the Center for\n    Software Science at the University of Utah.\n \n@@ -778,10 +778,11 @@ enum reg_class { NO_REGS, R1_REGS, GENERAL_REGS, FP_REGS, GENERAL_OR_FP_REGS,\n \n /* Value is 1 if returning from a function call automatically\n    pops the arguments described by the number-of-args field in the call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.  */\n \n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE) 0\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) 0\n \n /* Define how to find the value returned by a function.\n    VALTYPE is the data type of the value (as a tree)."}, {"sha": "8cc075b496df5645fa81ca5e5d655e432149f26c", "filename": "gcc/config/pdp11/pdp11.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -524,10 +524,11 @@ extern int current_first_parm_offset;\n \n /* Value is 1 if returning from a function call automatically\n    pops the arguments described by the number-of-args field in the call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.  */\n \n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE) 0\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) 0\n \n /* Define how to find the value returned by a function.\n    VALTYPE is the data type of the value (as a tree)."}, {"sha": "05b2cfb2911f6961dc495608ae6820979cc156b3", "filename": "gcc/config/pyr/pyr.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fpyr%2Fpyr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fpyr%2Fpyr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpyr%2Fpyr.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine parameters for GNU compiler,\n    for Pyramid 90x, 9000, and MIServer Series.\n-   Copyright (C) 1989 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1995 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -17,7 +17,7 @@ GNU General Public License for more details.\n You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n-\f\n+\n /*\n  * If you're going to change this, and you haven't already,\n  * you should get and read\n@@ -484,6 +484,7 @@ enum reg_class { NO_REGS, ALL_REGS, LIM_REG_CLASSES };\n \n /* Value is the number of bytes of arguments automatically\n    popped when returning from a subroutine call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.\n    SIZE is the number of bytes of arguments passed on the stack.\n@@ -492,7 +493,7 @@ enum reg_class { NO_REGS, ALL_REGS, LIM_REG_CLASSES };\n    using RETD in this way violates the Pyramid calling convention.\n    We may nevertheless provide this as an option.   */\n \n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE)   \\\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE)   \\\n   ((TARGET_RETD && TREE_CODE (FUNTYPE) != IDENTIFIER_NODE\t\\\n     && (TYPE_ARG_TYPES (FUNTYPE) == 0\t\t\t\t\\\n \t|| (TREE_VALUE (tree_last (TYPE_ARG_TYPES (FUNTYPE)))\t\\"}, {"sha": "36df9b611557ebb68ffa8012414d47baaf8d6c49", "filename": "gcc/config/romp/romp.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fromp%2Fromp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fromp%2Fromp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fromp%2Fromp.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for ROMP chip.\n-   Copyright (C) 1989, 1991, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1991, 1993, 1995 Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@nyu.edu)\n \n This file is part of GNU CC.\n@@ -504,11 +504,12 @@ enum reg_class { NO_REGS, R0_REGS, R15_REGS, BASE_REGS, GENERAL_REGS,\n \n /* Value is the number of bytes of arguments automatically\n    popped when returning from a subroutine call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.\n    SIZE is the number of bytes of arguments passed on the stack.  */\n \n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE) 0\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) 0\n \n /* Define how to find the value returned by a function.\n    VALTYPE is the data type of the value (as a tree)."}, {"sha": "0339f492d2565a5eb7f5b3069b49a80b52964dad", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -883,11 +883,12 @@ enum reg_class { NO_REGS, BASE_REGS, GENERAL_REGS, FLOAT_REGS,\n \n /* Value is the number of bytes of arguments automatically\n    popped when returning from a subroutine call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.\n    SIZE is the number of bytes of arguments passed on the stack.  */\n \n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE) 0\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) 0\n \n /* Define how to find the value returned by a function.\n    VALTYPE is the data type of the value (as a tree)."}, {"sha": "2638a78fec8e3825f9a2b5028685aa4e37585d6b", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,7 +1,5 @@\n-/* Definitions of target machine for GNU compiler, \n-   for Hitachi Super-H.\n-   Copyright (C) 1993, 1994 Free Software Foundation, Inc.\n-\n+/* Definitions of target machine for GNU compiler for Hitachi Super-H.\n+   Copyright (C) 1993, 1994, 1995 Free Software Foundation, Inc.\n    Contributed by Steve Chamberlain (sac@cygnus.com)\n \n This file is part of GNU CC.\n@@ -20,7 +18,7 @@ You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n-\f\n+\n /* Run-time Target Specification.  */\n #define TARGET_SH\n \n@@ -639,13 +637,14 @@ extern enum reg_class reg_class_from_letter[];\n \n /* Value is the number of byte of arguments automatically\n    popped when returning from a subroutine call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.\n    SIZE is the number of bytes of arguments passed on the stack.\n \n    On the SH, the caller does not pop any of its arguments that were passed\n    on the stack.  */\n-#define RETURN_POPS_ARGS(FUNTYPE, SIZE)  0\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE)  0\n \n /* Define how to find the value returned by a function.\n    VALTYPE is the data type of the value (as a tree)."}, {"sha": "9e0c11b353d9aa2f2942fff833a0a150b5b72b25", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1177,11 +1177,12 @@ extern char leaf_reg_remap[];\n \n /* Value is the number of bytes of arguments automatically\n    popped when returning from a subroutine call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.\n    SIZE is the number of bytes of arguments passed on the stack.  */\n \n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE) 0\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) 0\n \n /* Some subroutine macros specific to this machine.\n    When !TARGET_FPU, put float return values in the general registers,"}, {"sha": "c6e4ea7b3a70be821c41f018e23084617568fbc1", "filename": "gcc/config/spur/spur.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fspur%2Fspur.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fspur%2Fspur.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspur%2Fspur.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for SPUR chip.\n-   Copyright (C) 1988 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1995 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -339,11 +339,12 @@ enum reg_class { NO_REGS, GENERAL_REGS, FP_REGS, ALL_REGS, LIM_REG_CLASSES };\n \n /* Value is the number of bytes of arguments automatically\n    popped when returning from a subroutine call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.\n    SIZE is the number of bytes of arguments passed on the stack.  */\n \n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE) 0\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) 0\n \n /* Define how to find the value returned by a function.\n    VALTYPE is the data type of the value (as a tree)."}, {"sha": "71cd30196c12521b4fe41a464dbe60f4dbe5d04f", "filename": "gcc/config/tahoe/tahoe.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Ftahoe%2Ftahoe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Ftahoe%2Ftahoe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftahoe%2Ftahoe.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Tahoe version.\n-   Copyright (C) 1989, 1993, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1993, 1994, 1995 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -18,8 +18,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n /*\n- * File: tahoe.h\n- *\n  * Original port made at the University of Buffalo by Devon Bowen,\n  * Dale Wiles and Kevin Zachmann.\n  *\n@@ -327,7 +325,7 @@ enum reg_class {NO_REGS,GENERAL_REGS,FPP_REG,ALL_REGS,LIM_REG_CLASSES};\n \n /* the tahoe return function takes care of everything on the stack */\n \n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE) (SIZE)\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) (SIZE)\n \n /* function values for all types are returned in register 0 */\n "}, {"sha": "7393701c3f73bcada9a83330f4f12d40d579c7d3", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  Vax version.\n-   Copyright (C) 1987, 1988, 1991, 1993, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 88, 91, 93, 94, 95 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -352,13 +352,14 @@ gen_rtx (PLUS, Pmode, frame, gen_rtx (CONST_INT, VOIDmode, 12))\n \n /* Value is the number of bytes of arguments automatically\n    popped when returning from a subroutine call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name.\n    SIZE is the number of bytes of arguments passed on the stack.\n \n    On the Vax, the RET insn always pops all the args for any function.  */\n \n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE) (SIZE)\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) (SIZE)\n \n /* Define how to find the value returned by a function.\n    VALTYPE is the data type of the value (as a tree)."}, {"sha": "d0ba42bcce8d5cc0d24d2dc59a7ec61679160903", "filename": "gcc/config/we32k/we32k.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fwe32k%2Fwe32k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b109b37fc08e64e252ab7d3031283c94a638291/gcc%2Fconfig%2Fwe32k%2Fwe32k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fwe32k%2Fwe32k.h?ref=8b109b37fc08e64e252ab7d3031283c94a638291", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  AT&T we32000 version.\n-   Copyright (C) 1991, 1992, 1993, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1992, 1993, 1994, 1995 Free Software Foundation, Inc.\n    Contributed by John Wehle (john@feith1.uucp)\n \n This file is part of GNU CC.\n@@ -304,10 +304,11 @@ enum reg_class { NO_REGS, GENERAL_REGS,\n \n /* Value is 1 if returning from a function call automatically\n    pops the arguments described by the number-of-args field in the call.\n+   FUNDECL is the declaration node of the function (as a tree),\n    FUNTYPE is the data type of the function (as a tree),\n    or for a library call it is an identifier node for the subroutine name. */\n \n-#define RETURN_POPS_ARGS(FUNTYPE,SIZE) (SIZE)\n+#define RETURN_POPS_ARGS(FUNDECL,FUNTYPE,SIZE) (SIZE)\n \n /* Define how to find the value returned by a function.\n    VALTYPE is the data type of the value (as a tree)."}]}