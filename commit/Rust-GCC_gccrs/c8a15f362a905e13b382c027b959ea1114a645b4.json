{"sha": "c8a15f362a905e13b382c027b959ea1114a645b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhhMTVmMzYyYTkwNWUxM2IzODJjMDI3Yjk1OWVhMTExNGE2NDViNA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-12-04T21:23:57Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-12-04T21:23:57Z"}, "message": "PR jit/63854: Fix double-initialization within tree-pretty-print.c\n\ngcc/ChangeLog:\n\tPR jit/63854\n\t* tree-pretty-print.c: Eliminate include of <new>.\n\t(buffer): Convert this variable from a pretty_printer to a\n\tpretty_printer *.\n\t(initialized): Eliminate this variable in favor of the NULL-ness\n\tof \"buffer\".\n\t(print_generic_decl): Update for \"buffer\" becoming a pointer.\n\t(print_generic_stmt): Likewise.\n\t(print_generic_stmt_indented): Likewise.\n\t(print_generic_expr): Likewise.\n\t(maybe_init_pretty_print): Likewise, allocating \"buffer\" on the\n\theap and using its non-NULL-ness to ensure idempotency.\n\nFrom-SVN: r218404", "tree": {"sha": "861faf8e8499fd13d98a465e9c7db178fb34dbbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/861faf8e8499fd13d98a465e9c7db178fb34dbbc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8a15f362a905e13b382c027b959ea1114a645b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8a15f362a905e13b382c027b959ea1114a645b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8a15f362a905e13b382c027b959ea1114a645b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8a15f362a905e13b382c027b959ea1114a645b4/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "953971cf7dd11ab68caec04cae767f5dde656b23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/953971cf7dd11ab68caec04cae767f5dde656b23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/953971cf7dd11ab68caec04cae767f5dde656b23"}], "stats": {"total": 49, "additions": 30, "deletions": 19}, "files": [{"sha": "92a46ed03a056f77ffdc7349d55abfc76efb857e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8a15f362a905e13b382c027b959ea1114a645b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8a15f362a905e13b382c027b959ea1114a645b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c8a15f362a905e13b382c027b959ea1114a645b4", "patch": "@@ -1,3 +1,18 @@\n+2014-12-04  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR jit/63854\n+\t* tree-pretty-print.c: Eliminate include of <new>.\n+\t(buffer): Convert this variable from a pretty_printer to a\n+\tpretty_printer *.\n+\t(initialized): Eliminate this variable in favor of the NULL-ness\n+\tof \"buffer\".\n+\t(print_generic_decl): Update for \"buffer\" becoming a pointer.\n+\t(print_generic_stmt): Likewise.\n+\t(print_generic_stmt_indented): Likewise.\n+\t(print_generic_expr): Likewise.\n+\t(maybe_init_pretty_print): Likewise, allocating \"buffer\" on the\n+\theap and using its non-NULL-ness to ensure idempotency.\n+\n 2014-12-04  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR jit/63854"}, {"sha": "411747227400456e08c0d0bbf9ca90418c355f20", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 15, "deletions": 19, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8a15f362a905e13b382c027b959ea1114a645b4/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8a15f362a905e13b382c027b959ea1114a645b4/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=c8a15f362a905e13b382c027b959ea1114a645b4", "patch": "@@ -48,8 +48,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"wide-int-print.h\"\n #include \"internal-fn.h\"\n \n-#include <new>                           // For placement-new.\n-\n /* Local functions, macros and variables.  */\n static const char *op_symbol (const_tree);\n static void pretty_print_string (pretty_printer *, const char*);\n@@ -63,8 +61,7 @@ static void do_niy (pretty_printer *, const_tree);\n \n #define NIY do_niy (buffer, node)\n \n-static pretty_printer buffer;\n-static int initialized = 0;\n+static pretty_printer *buffer;\n \n /* Try to print something for an unknown tree code.  */\n \n@@ -135,8 +132,8 @@ void\n print_generic_decl (FILE *file, tree decl, int flags)\n {\n   maybe_init_pretty_print (file);\n-  print_declaration (&buffer, decl, 2, flags);\n-  pp_write_text_to_stream (&buffer);\n+  print_declaration (buffer, decl, 2, flags);\n+  pp_write_text_to_stream (buffer);\n }\n \n /* Print tree T, and its successors, on file FILE.  FLAGS specifies details\n@@ -146,8 +143,8 @@ void\n print_generic_stmt (FILE *file, tree t, int flags)\n {\n   maybe_init_pretty_print (file);\n-  dump_generic_node (&buffer, t, 0, flags, true);\n-  pp_newline_and_flush (&buffer);\n+  dump_generic_node (buffer, t, 0, flags, true);\n+  pp_newline_and_flush (buffer);\n }\n \n /* Print tree T, and its successors, on file FILE.  FLAGS specifies details\n@@ -162,9 +159,9 @@ print_generic_stmt_indented (FILE *file, tree t, int flags, int indent)\n   maybe_init_pretty_print (file);\n \n   for (i = 0; i < indent; i++)\n-    pp_space (&buffer);\n-  dump_generic_node (&buffer, t, indent, flags, true);\n-  pp_newline_and_flush (&buffer);\n+    pp_space (buffer);\n+  dump_generic_node (buffer, t, indent, flags, true);\n+  pp_newline_and_flush (buffer);\n }\n \n /* Print a single expression T on file FILE.  FLAGS specifies details to show\n@@ -174,8 +171,8 @@ void\n print_generic_expr (FILE *file, tree t, int flags)\n {\n   maybe_init_pretty_print (file);\n-  dump_generic_node (&buffer, t, 0, flags, false);\n-  pp_flush (&buffer);\n+  dump_generic_node (buffer, t, 0, flags, false);\n+  pp_flush (buffer);\n }\n \n /* Dump the name of a _DECL node and its DECL_UID if TDF_UID is set\n@@ -3400,15 +3397,14 @@ pretty_print_string (pretty_printer *buffer, const char *str)\n static void\n maybe_init_pretty_print (FILE *file)\n {\n-  if (!initialized)\n+  if (!buffer)\n     {\n-      new (&buffer) pretty_printer ();\n-      pp_needs_newline (&buffer) = true;\n-      pp_translate_identifiers (&buffer) = false;\n-      initialized = 1;\n+      buffer = new pretty_printer ();\n+      pp_needs_newline (buffer) = true;\n+      pp_translate_identifiers (buffer) = false;\n     }\n \n-  buffer.buffer->stream = file;\n+  buffer->buffer->stream = file;\n }\n \n static void"}]}