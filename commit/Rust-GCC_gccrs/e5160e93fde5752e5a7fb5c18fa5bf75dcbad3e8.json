{"sha": "e5160e93fde5752e5a7fb5c18fa5bf75dcbad3e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUxNjBlOTNmZGU1NzUyZTVhN2ZiNWMxOGZhNWJmNzVkY2JhZDNlOA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-10-09T12:45:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-10-09T12:45:09Z"}, "message": "re PR tree-optimization/45945 (ICE: verify_ssa failed: error: SSA_NAME_DEF_STMT is wrong when using inline ASM with -flto/-fwhopr)\n\n2010-10-09  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/45945\n\t* tree-ssa.c (execute_update_addresses_taken): Fixup LHS\n\tscanning.\n\n\t* gcc.dg/lto/20101009-1_0.c: New testcase.\n\nFrom-SVN: r165222", "tree": {"sha": "51ab23b2b7caced5ac3707964387a2997ee23514", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51ab23b2b7caced5ac3707964387a2997ee23514"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5160e93fde5752e5a7fb5c18fa5bf75dcbad3e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5160e93fde5752e5a7fb5c18fa5bf75dcbad3e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5160e93fde5752e5a7fb5c18fa5bf75dcbad3e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5160e93fde5752e5a7fb5c18fa5bf75dcbad3e8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1802378d26bfd8dcc519ed441549af48f6c756a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1802378d26bfd8dcc519ed441549af48f6c756a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1802378d26bfd8dcc519ed441549af48f6c756a6"}], "stats": {"total": 60, "additions": 55, "deletions": 5}, "files": [{"sha": "e46dc378744308437eeb0f127c9e87ac78e974b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5160e93fde5752e5a7fb5c18fa5bf75dcbad3e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5160e93fde5752e5a7fb5c18fa5bf75dcbad3e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e5160e93fde5752e5a7fb5c18fa5bf75dcbad3e8", "patch": "@@ -1,3 +1,9 @@\n+2010-10-09  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/45945\n+\t* tree-ssa.c (execute_update_addresses_taken): Fixup LHS\n+\tscanning.\n+\n 2010-10-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR tree-optimization/45612"}, {"sha": "3641bf618584f670657cf377b76fd0e69e4f8973", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5160e93fde5752e5a7fb5c18fa5bf75dcbad3e8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5160e93fde5752e5a7fb5c18fa5bf75dcbad3e8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e5160e93fde5752e5a7fb5c18fa5bf75dcbad3e8", "patch": "@@ -1,3 +1,8 @@\n+2010-10-09  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/45945\n+\t* gcc.dg/lto/20101009-1_0.c: New testcase.\n+\n 2010-10-08  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/45913"}, {"sha": "6f280db060ceb77a5aa831559696ea393d0f6176", "filename": "gcc/testsuite/gcc.dg/lto/20101009-1_0.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5160e93fde5752e5a7fb5c18fa5bf75dcbad3e8/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20101009-1_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5160e93fde5752e5a7fb5c18fa5bf75dcbad3e8/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20101009-1_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2F20101009-1_0.c?ref=e5160e93fde5752e5a7fb5c18fa5bf75dcbad3e8", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-lto-do link } */\n+\n+static inline void\n+bar (unsigned *u)\n+{\n+  __asm__ (\"\":\"=d\" (*u));\n+}\n+\n+void\n+foo (void)\n+{\n+  int i;\n+  bar (&i);\n+}\n+\n+int main() { return 0; }"}, {"sha": "e5acbf4cedbb726a951f5be69b325b2f88de0bef", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 28, "deletions": 5, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5160e93fde5752e5a7fb5c18fa5bf75dcbad3e8/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5160e93fde5752e5a7fb5c18fa5bf75dcbad3e8/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=e5160e93fde5752e5a7fb5c18fa5bf75dcbad3e8", "patch": "@@ -1980,8 +1980,10 @@ execute_update_addresses_taken (void)\n               /* A plain decl does not need it set.  */\n               if (lhs && !DECL_P (lhs))\n \t\t{\n-\t\t  if (handled_component_p (lhs))\n-\t\t    lhs = get_base_address (lhs);\n+\t\t  tree orig_lhs = lhs;\n+\n+\t\t  while (handled_component_p (lhs))\n+\t\t    lhs = TREE_OPERAND (lhs, 0);\n \n                   if (DECL_P (lhs))\n                     bitmap_set_bit (not_reg_needs, DECL_UID (lhs));\n@@ -1992,7 +1994,7 @@ execute_update_addresses_taken (void)\n \t\t      if (DECL_P (decl)\n \t\t\t  && (!integer_zerop (TREE_OPERAND (lhs, 1))\n \t\t\t      || (DECL_SIZE (decl)\n-\t\t\t\t  != TYPE_SIZE (TREE_TYPE (lhs)))))\n+\t\t\t\t  != TYPE_SIZE (TREE_TYPE (orig_lhs)))))\n \t\t\tbitmap_set_bit (not_reg_needs, DECL_UID (decl));\n \t\t    }\n                 }\n@@ -2020,8 +2022,29 @@ execute_update_addresses_taken (void)\n \t      for (i = 0; i < gimple_asm_noutputs (stmt); ++i)\n \t\t{\n \t\t  tree link = gimple_asm_output_op (stmt, i);\n-\t\t  if ((decl = non_rewritable_mem_ref_base (TREE_VALUE (link))))\n-\t\t    bitmap_set_bit (not_reg_needs, DECL_UID (decl));\n+\t\t  tree lhs = TREE_VALUE (link);\n+\n+\t\t  /* A plain decl does not need it set.  */\n+\t\t  if (!DECL_P (lhs))\n+\t\t    {\n+\t\t      tree orig_lhs = lhs;\n+\n+\t\t      while (handled_component_p (lhs))\n+\t\t\tlhs = TREE_OPERAND (lhs, 0);\n+\t\t  \n+\t\t      if (DECL_P (lhs))\n+\t\t\tbitmap_set_bit (not_reg_needs, DECL_UID (lhs));\n+\t\t      else if (TREE_CODE (lhs) == MEM_REF\n+\t\t\t       && TREE_CODE (TREE_OPERAND (lhs, 0)) == ADDR_EXPR)\n+\t\t\t{\n+\t\t\t  decl = TREE_OPERAND (TREE_OPERAND (lhs, 0), 0);\n+\t\t\t  if (DECL_P (decl)\n+\t\t\t      && (!integer_zerop (TREE_OPERAND (lhs, 1))\n+\t\t\t\t  || (TYPE_MAIN_VARIANT (TREE_TYPE (decl))\n+\t\t\t\t      != TYPE_MAIN_VARIANT (TREE_TYPE (orig_lhs)))))\n+\t\t\t    bitmap_set_bit (not_reg_needs, DECL_UID (decl));\n+\t\t\t}\n+\t\t    }\n \t\t}\n \t      for (i = 0; i < gimple_asm_ninputs (stmt); ++i)\n \t\t{"}]}