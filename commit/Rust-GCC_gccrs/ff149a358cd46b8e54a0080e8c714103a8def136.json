{"sha": "ff149a358cd46b8e54a0080e8c714103a8def136", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYxNDlhMzU4Y2Q0NmI4ZTU0YTAwODBlOGM3MTQxMDNhOGRlZjEzNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T10:20:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-11-30T10:20:47Z"}, "message": "[multiple changes]\n\n2009-11-30  Vincent Celier  <celier@adacore.com>\n\n\t* prj-makr.adb (Source_Files): New hash table to keep track of source\n\tfile names.\n\t(Finalize): Avoid putting several times the same source file name\n\tin the source list file.\n\t* prj-pp.adb (Print): Fix a bug in the placement of \"at nn\" for\n\tassociative array indexes.\n\n2009-11-30  Robert Dewar  <dewar@adacore.com>\n\n\t* g-dyntab.ads: Add missing pragma Compiler_Unit\n\n2009-11-30  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-crtrun.ads, s-crtl.ads, g-stseme.adb, Makefile.rtl, s-fileio.adb\n\t(System.CRTL.Runtime): New unit, to contain parts of s-crtl that are\n\tused in the Ada runtime but can't be used in the compiler because of\n\tbootstrap issues.\n\t* socket.c, s-oscons-tmplt.c, g-sothco.ads\n\t(System.OS_Constants.SIZEOF_struct_servent): New constant.\n\tUse s-oscons constant instead of external variable to get size of\n\tstruct hostent.\n\nFrom-SVN: r154772", "tree": {"sha": "4e344719fe7e21476885c5dfa264200317167033", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e344719fe7e21476885c5dfa264200317167033"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff149a358cd46b8e54a0080e8c714103a8def136", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff149a358cd46b8e54a0080e8c714103a8def136", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff149a358cd46b8e54a0080e8c714103a8def136", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff149a358cd46b8e54a0080e8c714103a8def136/comments", "author": null, "committer": null, "parents": [{"sha": "2fc5ecb5a8bb3ebc7fad471a0dbd40939c6885e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fc5ecb5a8bb3ebc7fad471a0dbd40939c6885e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fc5ecb5a8bb3ebc7fad471a0dbd40939c6885e0"}], "stats": {"total": 181, "additions": 137, "deletions": 44}, "files": [{"sha": "3baddf6a275f23e7787f0551ea813dfebd06c22f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ff149a358cd46b8e54a0080e8c714103a8def136", "patch": "@@ -1,3 +1,27 @@\n+2009-11-30  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-makr.adb (Source_Files): New hash table to keep track of source\n+\tfile names.\n+\t(Finalize): Avoid putting several times the same source file name\n+\tin the source list file.\n+\t* prj-pp.adb (Print): Fix a bug in the placement of \"at nn\" for\n+\tassociative array indexes.\n+\n+2009-11-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-dyntab.ads: Add missing pragma Compiler_Unit\n+\n+2009-11-30  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-crtrun.ads, s-crtl.ads, g-stseme.adb, Makefile.rtl, s-fileio.adb\n+\t(System.CRTL.Runtime): New unit, to contain parts of s-crtl that are\n+\tused in the Ada runtime but can't be used in the compiler because of\n+\tbootstrap issues.\n+\t* socket.c, s-oscons-tmplt.c, g-sothco.ads\n+\t(System.OS_Constants.SIZEOF_struct_servent): New constant.\n+\tUse s-oscons constant instead of external variable to get size of\n+\tstruct hostent.\n+\n 2009-11-30  Thomas Quinot  <quinot@adacore.com>\n \n \t* s-crtl.ads, g-stseme.adb, s-fileio.adb (System.CRTL.strerror): Change"}, {"sha": "7563c448fa6b278799e9246594077a188fc1329a", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=ff149a358cd46b8e54a0080e8c714103a8def136", "patch": "@@ -431,6 +431,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   s-conca8$(objext) \\\n   s-conca9$(objext) \\\n   s-crtl$(objext)   \\\n+  s-crtrun$(objext) \\\n   s-crc32$(objext)  \\\n   s-direio$(objext) \\\n   s-dsaser$(objext) \\"}, {"sha": "89634554a7d44e3bc187625618e681c9dd51a28a", "filename": "gcc/ada/g-dyntab.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2Fg-dyntab.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2Fg-dyntab.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dyntab.ads?ref=ff149a358cd46b8e54a0080e8c714103a8def136", "patch": "@@ -47,6 +47,8 @@\n --  GNAT.Table and the GNAT compiler source unit Table to keep as much\n --  coherency as possible between these three related units.\n \n+pragma Compiler_Unit;\n+\n generic\n    type Table_Component_Type is private;\n    type Table_Index_Type     is range <>;"}, {"sha": "399f6d2034621a9cd8ed690ae73922f102c01ff9", "filename": "gcc/ada/g-sothco.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2Fg-sothco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2Fg-sothco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-sothco.ads?ref=ff149a358cd46b8e54a0080e8c714103a8def136", "patch": "@@ -212,9 +212,8 @@ package GNAT.Sockets.Thin_Common is\n                       C.Strings.Null_Ptr);\n    --  Arrays of C (char *)\n \n-   sizeof_servent : constant C.size_t;\n-   pragma Import (C, sizeof_servent, \"__gnat_sizeof_servent\");\n-   type Servent is array (1 .. sizeof_servent) of C.char;\n+   type Servent is new System.Storage_Elements.Storage_Array\n+                         (1 .. SOSC.SIZEOF_struct_servent);\n    for Servent'Alignment use 8;\n    --  Service entry. This is an opaque type used only via the following\n    --  accessor functions, because 'struct servent' has different layouts on"}, {"sha": "2e797b09a6e51ce5ed3bf7b4aef0129f270bb18a", "filename": "gcc/ada/g-stseme.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2Fg-stseme.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2Fg-stseme.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-stseme.adb?ref=ff149a358cd46b8e54a0080e8c714103a8def136", "patch": "@@ -34,7 +34,7 @@\n --  since on that platform socket errno values are distinct from the system\n --  ones: there is a specific variant of this function in g-socthi-mingw.adb.\n \n-with System.CRTL;\n+with System.CRTL.Runtime;\n \n separate (GNAT.Sockets.Thin)\n \n@@ -46,7 +46,8 @@ function Socket_Error_Message\n   (Errno : Integer) return C.Strings.chars_ptr\n is\n    use type Interfaces.C.Strings.chars_ptr;\n-   C_Msg : constant C.Strings.chars_ptr := System.CRTL.strerror (Errno);\n+   C_Msg : constant C.Strings.chars_ptr :=\n+             System.CRTL.Runtime.strerror (Errno);\n \n begin\n    if C_Msg = C.Strings.Null_Ptr then"}, {"sha": "566d507f2964c59badcbe066e9fe1fd055556929", "filename": "gcc/ada/prj-makr.adb", "status": "modified", "additions": 25, "deletions": 10, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2Fprj-makr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2Fprj-makr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.adb?ref=ff149a358cd46b8e54a0080e8c714103a8def136", "patch": "@@ -41,6 +41,7 @@ with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n \n with System.Case_Util;          use System.Case_Util;\n with System.CRTL;\n+with System.HTable;\n \n package body Prj.Makr is\n \n@@ -170,6 +171,16 @@ package body Prj.Makr is\n    --  in the source attribute and package Naming of the project file, or in\n    --  the pragmas Source_File_Name in the configuration pragmas file.\n \n+   package Source_Files is new System.HTable.Simple_HTable\n+     (Header_Num => Prj.Header_Num,\n+      Element    => Boolean,\n+      No_Element => False,\n+      Key        => Name_Id,\n+      Hash       => Prj.Hash,\n+      Equal      => \"=\");\n+   --  Hash table to keep track of source file names, to avoid putting several\n+   --  times the same file name in case of multi-unit files.\n+\n    ---------\n    -- Dup --\n    ---------\n@@ -602,15 +613,19 @@ package body Prj.Makr is\n                                 In_Tree       => Tree);\n \n             begin\n-               --  Add source file name to the source list file\n-\n-               Get_Name_String (Current_Source.File_Name);\n-               Add_Char_To_Name_Buffer (ASCII.LF);\n-               if Write (Source_List_FD,\n-                         Name_Buffer (1)'Address,\n-                         Name_Len) /= Name_Len\n-               then\n-                  Prj.Com.Fail (\"disk full\");\n+               --  Add source file name to the source list file, if it is not\n+               --  already there.\n+\n+               if not Source_Files.Get (Current_Source.File_Name) then\n+                  Source_Files.Set (Current_Source.File_Name, True);\n+                  Get_Name_String (Current_Source.File_Name);\n+                  Add_Char_To_Name_Buffer (ASCII.LF);\n+                  if Write (Source_List_FD,\n+                            Name_Buffer (1)'Address,\n+                            Name_Len) /= Name_Len\n+                  then\n+                     Prj.Com.Fail (\"disk full\");\n+                  end if;\n                end if;\n \n                --  For an Ada source, add entry in package Naming\n@@ -854,7 +869,7 @@ package body Prj.Makr is\n             --  Fail if parsing was not successful\n \n             if No (Project_Node) then\n-               Fail (\"parsing of existing project file failed\");\n+               Prj.Com.Fail (\"parsing of existing project file failed\");\n \n             else\n                --  If parsing was successful, remove the components that are"}, {"sha": "d318c1192c56900c5d32a7b153280f0c23e1a062", "filename": "gcc/ada/prj-pp.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2Fprj-pp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2Fprj-pp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pp.adb?ref=ff149a358cd46b8e54a0080e8c714103a8def136", "patch": "@@ -532,6 +532,12 @@ package body Prj.PP is\n                      Write_String (\" (\");\n                      Output_String\n                        (Associative_Array_Index_Of (Node, In_Tree));\n+\n+                     if Source_Index_Of (Node, In_Tree) /= 0 then\n+                        Write_String (\" at\");\n+                        Write_String (Source_Index_Of (Node, In_Tree)'Img);\n+                     end if;\n+\n                      Write_String (\")\");\n                   end if;\n \n@@ -574,11 +580,6 @@ package body Prj.PP is\n                      Output_Attribute_Name (Name_Of (Node, In_Tree));\n                   end if;\n \n-                  if Source_Index_Of (Node, In_Tree) /= 0 then\n-                     Write_String (\" at\");\n-                     Write_String (Source_Index_Of (Node, In_Tree)'Img);\n-                  end if;\n-\n                   Write_String (\";\");\n                   Write_End_Of_Line_Comment (Node);\n                   Print (First_Comment_After (Node, In_Tree), Indent);"}, {"sha": "7d5f1107addac3b5f9b3e9e01ed42f5cba268c31", "filename": "gcc/ada/s-crtl.ads", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2Fs-crtl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2Fs-crtl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-crtl.ads?ref=ff149a358cd46b8e54a0080e8c714103a8def136", "patch": "@@ -31,18 +31,18 @@\n \n --  This package provides the low level interface to the C runtime library\n \n-with Interfaces.C.Strings;\n+pragma Compiler_Unit;\n \n with System.Parameters;\n \n package System.CRTL is\n    pragma Preelaborate;\n \n-   subtype chars_ptr is Interfaces.C.Strings.chars_ptr;\n-\n    subtype chars is System.Address;\n    --  Pointer to null-terminated array of characters\n-   --  Should use Interfaces.C.Strings types instead???\n+   --  Should use Interfaces.C.Strings types instead, but this causes bootstrap\n+   --  issues as i-c contains Ada 2005 specific features, not compatible with\n+   --  older, Ada 95-only base compilers???\n \n    subtype DIRs is System.Address;\n    --  Corresponds to the C type DIR*\n@@ -116,8 +116,7 @@ package System.CRTL is\n    function fseek\n      (stream : FILEs;\n       offset : long;\n-      origin : int)\n-      return   int;\n+      origin : int) return int;\n    pragma Import (C, fseek, \"fseek\");\n \n    function ftell (stream : FILEs) return long;\n@@ -167,8 +166,7 @@ package System.CRTL is\n      (stream : FILEs;\n       buffer : chars;\n       mode   : int;\n-      size   : size_t)\n-      return   int;\n+      size   : size_t) return int;\n    pragma Import (C, setvbuf, \"setvbuf\");\n \n    procedure tmpnam (string : chars);\n@@ -195,7 +193,4 @@ package System.CRTL is\n    function write (fd : int; buffer : chars; nbytes : int) return int;\n    pragma Import (C, write, \"write\");\n \n-   function strerror (errno : int) return chars_ptr;\n-   pragma Import (C, strerror, \"strerror\");\n-\n end System.CRTL;"}, {"sha": "281e54fe5ed1d9ba47803b1fbc4ab06880793a0e", "filename": "gcc/ada/s-crtrun.ads", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2Fs-crtrun.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2Fs-crtrun.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-crtrun.ads?ref=ff149a358cd46b8e54a0080e8c714103a8def136", "patch": "@@ -0,0 +1,46 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                  S Y S T E M . C R T L . R U N T I M E                   --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--             Copyright (C) 2009, Free Software Foundation, Inc.           --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides the low level interface to the C runtime library\n+--  (additional declarations for use in the Ada runtime only, not in the\n+--  compiler itself).\n+\n+with Interfaces.C.Strings;\n+\n+package System.CRTL.Runtime is\n+   pragma Preelaborate;\n+\n+   subtype chars_ptr is Interfaces.C.Strings.chars_ptr;\n+\n+   function strerror (errno : int) return chars_ptr;\n+   pragma Import (C, strerror, \"strerror\");\n+\n+end System.CRTL.Runtime;"}, {"sha": "a384d40a29bdbec60e78dac90ca069fc7d636a15", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=ff149a358cd46b8e54a0080e8c714103a8def136", "patch": "@@ -36,7 +36,7 @@ with Interfaces.C;\n with Interfaces.C.Strings;        use Interfaces.C.Strings;\n with Interfaces.C_Streams;        use Interfaces.C_Streams;\n \n-with System.CRTL;\n+with System.CRTL.Runtime;\n with System.Case_Util;            use System.Case_Util;\n with System.OS_Lib;\n with System.Soft_Links;\n@@ -374,7 +374,7 @@ package body System.File_IO is\n    -------------------\n \n    function Errno_Message (Errno : Integer := OS_Lib.Errno) return String is\n-      Message : constant chars_ptr := CRTL.strerror (Errno);\n+      Message : constant chars_ptr := CRTL.Runtime.strerror (Errno);\n \n    begin\n       if Message = Null_Ptr then"}, {"sha": "a3f33d1398097449b6ef417acb974b8cfa37adf8", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=ff149a358cd46b8e54a0080e8c714103a8def136", "patch": "@@ -1198,7 +1198,7 @@ CND(SIZEOF_tv_usec, \"tv_usec\")\n }\n /*\n \n-   --  Sizes of protocol specific address types (for sockaddr.sa_len)\n+   --  Sizes of various data types\n */\n \n #define SIZEOF_sockaddr_in (sizeof (struct sockaddr_in))\n@@ -1210,12 +1210,11 @@ CND(SIZEOF_sockaddr_in, \"struct sockaddr_in\")\n #endif\n CND(SIZEOF_sockaddr_in6, \"struct sockaddr_in6\")\n \n-/*\n-\n-   --  Size of file descriptor sets\n-*/\n #define SIZEOF_fd_set (sizeof (fd_set))\n CND(SIZEOF_fd_set, \"fd_set\");\n+\n+#define SIZEOF_struct_servent (sizeof (struct servent))\n+CND(SIZEOF_struct_servent, \"struct servent\");\n /*\n \n    --  Fields of struct hostent"}, {"sha": "0bc4b430c18af68ed676c7bf1ab2e8e38f8fc9c1", "filename": "gcc/ada/socket.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2Fsocket.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff149a358cd46b8e54a0080e8c714103a8def136/gcc%2Fada%2Fsocket.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsocket.c?ref=ff149a358cd46b8e54a0080e8c714103a8def136", "patch": "@@ -35,11 +35,24 @@\n #ifdef VMS\n /*\n  * For VMS, gsocket.h can't include sockets-related DEC C header files\n- * when building the runtime (because these files are in DEC C archives,\n- * not accessable to GCC). So, we generate a separate header file along\n- * with s-oscons.ads and include it here.\n+ * when building the runtime (because these files are in a DEC C text library\n+ * (DECC$RTLDEF.TLB) not accessable to GCC). So, we generate a separate header\n+ * file along with s-oscons.ads and include it here.\n  */\n # include \"s-oscons.h\"\n+\n+/*\n+ * We also need the declaration of struct servent, which s-oscons can't\n+ * provide, so we copy it manually here. This needs to be kept in synch\n+ * with the definition of that structure in the DEC C headers, which\n+ * hopefully won't change frequently.\n+ */\n+struct servent {\n+  char *s_name;     /* official service name */\n+  char **s_aliases; /* alias list */\n+  int  s_port;      /* port # */\n+  char *s_proto;    /* protocol to use */\n+};\n #endif\n \n #if defined(HAVE_SOCKETS)\n@@ -59,9 +72,6 @@\n #include <string.h>\n /* Required for memcpy() */\n \n-extern const size_t __gnat_sizeof_servent = sizeof(struct servent);\n-/* For passing the size of servent to Ada code. */\n-\n extern void __gnat_disable_sigpipe (int fd);\n extern void __gnat_disable_all_sigpipes (void);\n extern int  __gnat_create_signalling_fds (int *fds);"}]}