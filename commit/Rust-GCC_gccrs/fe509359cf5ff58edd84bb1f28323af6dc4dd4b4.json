{"sha": "fe509359cf5ff58edd84bb1f28323af6dc4dd4b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU1MDkzNTljZjVmZjU4ZWRkODRiYjFmMjgzMjNhZjZkYzRkZDRiNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-01-30T07:49:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-01-30T07:49:58Z"}, "message": "re PR c/89061 (GCC 9 introduces false positive in -Wjump-misses-init)\n\n\tPR c/89061\n\t* c-tree.h (C_DECL_COMPOUND_LITERAL_P): Define.\n\t* c-decl.c (decl_jump_unsafe): Return false for\n\tC_DECL_COMPOUND_LITERAL_P decls.\n\t(build_compound_literal): Set C_DECL_COMPOUND_LITERAL_P.\n\n\t* gcc.dg/pr89061.c: New test.\n\nFrom-SVN: r268381", "tree": {"sha": "8b48e406dd9b023b4e99192f8c9d245457c2b4fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b48e406dd9b023b4e99192f8c9d245457c2b4fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe509359cf5ff58edd84bb1f28323af6dc4dd4b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe509359cf5ff58edd84bb1f28323af6dc4dd4b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe509359cf5ff58edd84bb1f28323af6dc4dd4b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe509359cf5ff58edd84bb1f28323af6dc4dd4b4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2ab6839bccb22a04c6df2000858c36d0ffa313ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ab6839bccb22a04c6df2000858c36d0ffa313ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ab6839bccb22a04c6df2000858c36d0ffa313ce"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "b215758c86c08be6626e2727b134ecfb6bd160f6", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe509359cf5ff58edd84bb1f28323af6dc4dd4b4/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe509359cf5ff58edd84bb1f28323af6dc4dd4b4/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=fe509359cf5ff58edd84bb1f28323af6dc4dd4b4", "patch": "@@ -1,3 +1,11 @@\n+2019-01-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/89061\n+\t* c-tree.h (C_DECL_COMPOUND_LITERAL_P): Define.\n+\t* c-decl.c (decl_jump_unsafe): Return false for\n+\tC_DECL_COMPOUND_LITERAL_P decls.\n+\t(build_compound_literal): Set C_DECL_COMPOUND_LITERAL_P.\n+\n 2019-01-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/89045"}, {"sha": "5170e92b0ca283796d75fff36191c161a9457a9f", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe509359cf5ff58edd84bb1f28323af6dc4dd4b4/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe509359cf5ff58edd84bb1f28323af6dc4dd4b4/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=fe509359cf5ff58edd84bb1f28323af6dc4dd4b4", "patch": "@@ -659,6 +659,14 @@ decl_jump_unsafe (tree decl)\n   if (error_operand_p (decl))\n     return false;\n \n+  /* Don't warn for compound literals.  If a goto statement crosses\n+     their initialization, it should cross also all the places where\n+     the complit is used or where the complit address might be saved\n+     into some variable, so code after the label to which goto jumps\n+     should not be able to refer to the compound literal.  */\n+  if (VAR_P (decl) && C_DECL_COMPOUND_LITERAL_P (decl))\n+    return false;\n+\n   /* Always warn about crossing variably modified types.  */\n   if ((VAR_P (decl) || TREE_CODE (decl) == TYPE_DECL)\n       && variably_modified_type_p (TREE_TYPE (decl), NULL_TREE))\n@@ -5486,6 +5494,7 @@ build_compound_literal (location_t loc, tree type, tree init, bool non_const,\n   DECL_READ_P (decl) = 1;\n   DECL_ARTIFICIAL (decl) = 1;\n   DECL_IGNORED_P (decl) = 1;\n+  C_DECL_COMPOUND_LITERAL_P (decl) = 1;\n   TREE_TYPE (decl) = type;\n   c_apply_type_quals_to_decl (TYPE_QUALS (strip_array_types (type)), decl);\n   if (alignas_align)"}, {"sha": "b69ef3377fde6a74f566c8e95c7d0662ed9ebaf5", "filename": "gcc/c/c-tree.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe509359cf5ff58edd84bb1f28323af6dc4dd4b4/gcc%2Fc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe509359cf5ff58edd84bb1f28323af6dc4dd4b4/gcc%2Fc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-tree.h?ref=fe509359cf5ff58edd84bb1f28323af6dc4dd4b4", "patch": "@@ -96,6 +96,10 @@ along with GCC; see the file COPYING3.  If not see\n    #pragma omp threadprivate.  */\n #define C_DECL_THREADPRIVATE_P(DECL) DECL_LANG_FLAG_3 (VAR_DECL_CHECK (DECL))\n \n+/* Set on VAR_DECLs for compound literals.  */\n+#define C_DECL_COMPOUND_LITERAL_P(DECL) \\\n+  DECL_LANG_FLAG_5 (VAR_DECL_CHECK (DECL))\n+\n /* Nonzero for a decl which either doesn't exist or isn't a prototype.\n    N.B. Could be simplified if all built-in decls had complete prototypes\n    (but this is presently difficult because some of them need FILE*).  */"}, {"sha": "d60389f4c4f1092419fe6d2e2ae7d28576a5a989", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe509359cf5ff58edd84bb1f28323af6dc4dd4b4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe509359cf5ff58edd84bb1f28323af6dc4dd4b4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fe509359cf5ff58edd84bb1f28323af6dc4dd4b4", "patch": "@@ -1,3 +1,8 @@\n+2019-01-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/89061\n+\t* gcc.dg/pr89061.c: New test.\n+\n 2019-01-29  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/88956"}, {"sha": "6b5d913401ef786a5eee9f182f339f8bbc259f56", "filename": "gcc/testsuite/gcc.dg/pr89061.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe509359cf5ff58edd84bb1f28323af6dc4dd4b4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr89061.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe509359cf5ff58edd84bb1f28323af6dc4dd4b4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr89061.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr89061.c?ref=fe509359cf5ff58edd84bb1f28323af6dc4dd4b4", "patch": "@@ -0,0 +1,27 @@\n+/* PR c/89061 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wjump-misses-init\" } */\n+\n+struct S { int s; };\n+\n+int\n+foo (int x)\n+{\n+  struct S s = { 0 };\n+  if ((s.s = x) == 0)\n+    goto cleanup;\t\t/* { dg-bogus \"jump skips variable initialization\" } */\n+  s = (struct S) { .s = 42 };\n+ cleanup:\n+  return s.s;\n+}\n+\n+int\n+bar (int x)\n+{\n+  struct S *s = &(struct S) { 0 };\n+  if ((s->s = x) == 0)\n+    goto cleanup;\t\t/* { dg-bogus \"jump skips variable initialization\" } */\n+  s = &(struct S) { .s = 42 };\n+ cleanup:\n+  return s->s;\n+}"}]}