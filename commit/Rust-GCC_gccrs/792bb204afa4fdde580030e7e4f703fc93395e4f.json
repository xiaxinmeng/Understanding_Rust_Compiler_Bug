{"sha": "792bb204afa4fdde580030e7e4f703fc93395e4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkyYmIyMDRhZmE0ZmRkZTU4MDAzMGU3ZTRmNzAzZmM5MzM5NWU0Zg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-06-13T22:56:09Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-06-13T22:56:09Z"}, "message": "cfgbuild.c (make_edges): Set ABNORMAL with SIBCALL.\n\n        * cfgbuild.c (make_edges): Set ABNORMAL with SIBCALL.\n        * cfgrtl.c (purge_dead_edges): Expect it too.\n\nFrom-SVN: r67917", "tree": {"sha": "69d618b00df041dbd5f5b6ceb0ae8946bfd4f07a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69d618b00df041dbd5f5b6ceb0ae8946bfd4f07a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/792bb204afa4fdde580030e7e4f703fc93395e4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/792bb204afa4fdde580030e7e4f703fc93395e4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/792bb204afa4fdde580030e7e4f703fc93395e4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/792bb204afa4fdde580030e7e4f703fc93395e4f/comments", "author": null, "committer": null, "parents": [{"sha": "54c2fc721cbe654695433d7419cb9b74f3a13642", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54c2fc721cbe654695433d7419cb9b74f3a13642", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54c2fc721cbe654695433d7419cb9b74f3a13642"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "20382249f9cf62924da0993771bb723978b37c57", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/792bb204afa4fdde580030e7e4f703fc93395e4f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/792bb204afa4fdde580030e7e4f703fc93395e4f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=792bb204afa4fdde580030e7e4f703fc93395e4f", "patch": "@@ -1,3 +1,8 @@\n+2003-06-13  Richard Henderson  <rth@redhat.com>\n+\n+\t* cfgbuild.c (make_edges): Set ABNORMAL with SIBCALL.\n+\t* cfgrtl.c (purge_dead_edges): Expect it too.\n+\n 2003-06-13  Jim Wilson  <wilson@tuliptree.org>\n             Eric Botcazou  <ebotcazou@libertysurf.fr>\n "}, {"sha": "de57653ab462b314ab73532b8cda8405ce4a42ad", "filename": "gcc/cfgbuild.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/792bb204afa4fdde580030e7e4f703fc93395e4f/gcc%2Fcfgbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/792bb204afa4fdde580030e7e4f703fc93395e4f/gcc%2Fcfgbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgbuild.c?ref=792bb204afa4fdde580030e7e4f703fc93395e4f", "patch": "@@ -406,7 +406,8 @@ make_edges (label_value_list, min, max, update_p)\n \t worry about EH edges, since we wouldn't have created the sibling call\n \t in the first place.  */\n       if (code == CALL_INSN && SIBLING_CALL_P (insn))\n-\tcached_make_edge (edge_cache, bb, EXIT_BLOCK_PTR, EDGE_SIBCALL);\n+\tcached_make_edge (edge_cache, bb, EXIT_BLOCK_PTR,\n+\t\t\t  EDGE_SIBCALL | EDGE_ABNORMAL);\n \n       /* If this is a CALL_INSN, then mark it as reaching the active EH\n \t handler for this CALL_INSN.  If we're handling non-call"}, {"sha": "35757cd547598a642413f5d56e32480c2b2ecef6", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/792bb204afa4fdde580030e7e4f703fc93395e4f/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/792bb204afa4fdde580030e7e4f703fc93395e4f/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=792bb204afa4fdde580030e7e4f703fc93395e4f", "patch": "@@ -2182,7 +2182,7 @@ purge_dead_edges (bb)\n \t should of course never have been a fallthru edge.  */\n       if (!bb->succ || bb->succ->succ_next)\n \tabort ();\n-      if (bb->succ->flags != EDGE_SIBCALL)\n+      if (bb->succ->flags != (EDGE_SIBCALL | EDGE_ABNORMAL))\n \tabort ();\n \n       return 0;"}]}