{"sha": "938ea06c5e9e06a4c81965fcabc36d2da5e2f868", "node_id": "C_kwDOANBUbNoAKDkzOGVhMDZjNWU5ZTA2YTRjODE5NjVmY2FiYzM2ZDJkYTVlMmY4Njg", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-01-12T15:35:41Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-01-17T21:29:23Z"}, "message": "git-backport: support renamed .cc files in commit message.\n\nThe change can automatically update names for *.cc files that\nare part of a backport.\n\ncontrib/ChangeLog:\n\n\t* git-backport.py: Support renaming of .cc files.", "tree": {"sha": "625a557ff6dbdf905e3c11666b855e09a60be849", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/625a557ff6dbdf905e3c11666b855e09a60be849"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/938ea06c5e9e06a4c81965fcabc36d2da5e2f868", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/938ea06c5e9e06a4c81965fcabc36d2da5e2f868", "html_url": "https://github.com/Rust-GCC/gccrs/commit/938ea06c5e9e06a4c81965fcabc36d2da5e2f868", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/938ea06c5e9e06a4c81965fcabc36d2da5e2f868/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd9912b5930961ffb2832f67a4d18a7b92c06e51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd9912b5930961ffb2832f67a4d18a7b92c06e51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd9912b5930961ffb2832f67a4d18a7b92c06e51"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "83189a2b5c7c92fb4a8864fd5a3142270934fab6", "filename": "contrib/git-backport.py", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/938ea06c5e9e06a4c81965fcabc36d2da5e2f868/contrib%2Fgit-backport.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/938ea06c5e9e06a4c81965fcabc36d2da5e2f868/contrib%2Fgit-backport.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgit-backport.py?ref=938ea06c5e9e06a4c81965fcabc36d2da5e2f868", "patch": "@@ -20,11 +20,59 @@\n # Boston, MA 02110-1301, USA.\n \n import argparse\n+import os\n import subprocess\n+import tempfile\n+\n+script_folder = os.path.dirname(os.path.abspath(__file__))\n+verify_script = os.path.join(script_folder,\n+                             'gcc-changelog/git_check_commit.py')\n+\n+\n+def replace_file_in_changelog(lines, filename):\n+    if not filename.endswith('.cc'):\n+        return\n+\n+    # consider all componenets of a path: gcc/ipa-icf.cc\n+    while filename:\n+        for i, line in enumerate(lines):\n+            if filename in line:\n+                line = line.replace(filename, filename[:-1])\n+                lines[i] = line\n+                return\n+        parts = filename.split('/')\n+        if len(parts) == 1:\n+            return\n+        filename = '/'.join(parts[1:])\n+\n \n if __name__ == '__main__':\n     parser = argparse.ArgumentParser(description='Backport a git revision.')\n     parser.add_argument('revision', help='Revision')\n     args = parser.parse_args()\n \n     subprocess.run('git cherry-pick -x %s' % args.revision, shell=True)\n+\n+    # Update commit message if change for a .cc file was taken\n+    r = subprocess.run(f'{verify_script} HEAD', shell=True, encoding='utf8',\n+                       stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n+    if r.returncode != 0:\n+        lines = r.stdout.splitlines()\n+        cmd = 'git show -s --format=%B'\n+        commit_message = subprocess.check_output(cmd, shell=True,\n+                                                 encoding='utf8').strip()\n+        commit_message = commit_message.splitlines()\n+\n+        todo = [line for line in lines if 'unchanged file mentioned' in line]\n+        for item in todo:\n+            filename = item.split()[-1].strip('\"')\n+            replace_file_in_changelog(commit_message, filename)\n+\n+        with tempfile.NamedTemporaryFile('w', encoding='utf8',\n+                                         delete=False) as w:\n+            w.write('\\n'.join(commit_message))\n+            w.close()\n+            subprocess.check_output(f'git commit --amend -F {w.name}',\n+                                    shell=True, encoding='utf8')\n+            os.unlink(w.name)\n+            print(f'Commit message updated: {len(todo)} .cc file(s) changed.')"}]}