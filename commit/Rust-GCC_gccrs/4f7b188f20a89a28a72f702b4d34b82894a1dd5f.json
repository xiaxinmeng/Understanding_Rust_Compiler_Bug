{"sha": "4f7b188f20a89a28a72f702b4d34b82894a1dd5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY3YjE4OGYyMGE4OWEyOGE3MmY3MDJiNGQzNGI4Mjg5NGExZGQ1Zg==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "francois.cppdevs@free.fr", "date": "2011-07-24T19:20:26Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2011-07-24T19:20:26Z"}, "message": "hashtable_policy.h (_Prime_rehash_policy): Use __builtin_floor rather than __builtin_ceil to compute next resize value.\n\n2011-07-24  Fran\u00e7ois Dumont  <francois.cppdevs@free.fr>\n\n        * include/bits/hashtable_policy.h (_Prime_rehash_policy): Use\n        __builtin_floor rather than __builtin_ceil to compute next resize\n        value.\n        * testsuite/23_containers/unordered_set/hash_policy/load_factor.cc:\n        New.\n\nFrom-SVN: r176717", "tree": {"sha": "3c6db059c61b19aac2c1e494763ccf3d46584377", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c6db059c61b19aac2c1e494763ccf3d46584377"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f7b188f20a89a28a72f702b4d34b82894a1dd5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f7b188f20a89a28a72f702b4d34b82894a1dd5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f7b188f20a89a28a72f702b4d34b82894a1dd5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f7b188f20a89a28a72f702b4d34b82894a1dd5f/comments", "author": null, "committer": null, "parents": [{"sha": "7d5997c66ce2a2463f8a911f6217c30759f765ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d5997c66ce2a2463f8a911f6217c30759f765ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d5997c66ce2a2463f8a911f6217c30759f765ce"}], "stats": {"total": 84, "additions": 75, "deletions": 9}, "files": [{"sha": "30b954e4a38b491dc8f9097113211aacfce7ad4f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f7b188f20a89a28a72f702b4d34b82894a1dd5f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f7b188f20a89a28a72f702b4d34b82894a1dd5f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4f7b188f20a89a28a72f702b4d34b82894a1dd5f", "patch": "@@ -1,3 +1,11 @@\n+2011-07-24  Fran\u00e7ois Dumont  <francois.cppdevs@free.fr>\n+\n+\t* include/bits/hashtable_policy.h (_Prime_rehash_policy): Use\n+\t__builtin_floor rather than __builtin_ceil to compute next resize\n+\tvalue.\n+\t* testsuite/23_containers/unordered_set/hash_policy/load_factor.cc:\n+\tNew.\n+\n 2011-07-22  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Daniel Krugler  <daniel.kruegler@googlemail.com>\n "}, {"sha": "df17855e9501a75a080b1daa353409e17203c77d", "filename": "libstdc++-v3/include/bits/hashtable_policy.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f7b188f20a89a28a72f702b4d34b82894a1dd5f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f7b188f20a89a28a72f702b4d34b82894a1dd5f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h?ref=4f7b188f20a89a28a72f702b4d34b82894a1dd5f", "patch": "@@ -427,10 +427,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   _Prime_rehash_policy::\n   _M_next_bkt(std::size_t __n) const\n   {\n-    const unsigned long* __p = std::lower_bound(__prime_list, __prime_list\n+    const unsigned long __p = *std::lower_bound(__prime_list, __prime_list\n \t\t\t\t\t\t+ _S_n_primes, __n);\n     _M_next_resize =\n-      static_cast<std::size_t>(__builtin_ceil(*__p * _M_max_load_factor));\n+      static_cast<std::size_t>(__builtin_floor(__p * _M_max_load_factor));\n     return *__p;\n   }\n \n@@ -441,10 +441,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   _M_bkt_for_elements(std::size_t __n) const\n   {\n     const float __min_bkts = __n / _M_max_load_factor;\n-    const unsigned long* __p = std::lower_bound(__prime_list, __prime_list\n+    const unsigned long __p = *std::lower_bound(__prime_list, __prime_list\n \t\t\t\t\t\t+ _S_n_primes, __min_bkts);\n     _M_next_resize =\n-      static_cast<std::size_t>(__builtin_ceil(*__p * _M_max_load_factor));\n+      static_cast<std::size_t>(__builtin_floor(__p * _M_max_load_factor));\n     return *__p;\n   }\n \n@@ -469,17 +469,17 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tif (__min_bkts > __n_bkt)\n \t  {\n \t    __min_bkts = std::max(__min_bkts, _M_growth_factor * __n_bkt);\n-\t    const unsigned long* __p =\n-\t      std::lower_bound(__prime_list, __prime_list + _S_n_primes,\n-\t\t\t       __min_bkts);\n+\t    const unsigned long __p =\n+\t      *std::lower_bound(__prime_list, __prime_list + _S_n_primes,\n+\t\t\t\t__min_bkts);\n \t    _M_next_resize = static_cast<std::size_t>\n-\t      (__builtin_ceil(*__p * _M_max_load_factor));\n+\t      (__builtin_floor(__p * _M_max_load_factor));\n \t    return std::make_pair(true, *__p);\n \t  }\n \telse\n \t  {\n \t    _M_next_resize = static_cast<std::size_t>\n-\t      (__builtin_ceil(__n_bkt * _M_max_load_factor));\n+\t      (__builtin_floor(__n_bkt * _M_max_load_factor));\n \t    return std::make_pair(false, 0);\n \t  }\n       }"}, {"sha": "818274a3d519c39f1a121aec1f9e6ee317dd7626", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/hash_policy/load_factor.cc", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f7b188f20a89a28a72f702b4d34b82894a1dd5f/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fhash_policy%2Fload_factor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f7b188f20a89a28a72f702b4d34b82894a1dd5f/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fhash_policy%2Fload_factor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Fhash_policy%2Fload_factor.cc?ref=4f7b188f20a89a28a72f702b4d34b82894a1dd5f", "patch": "@@ -0,0 +1,58 @@\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+// { dg-options \"-std=gnu++0x\" }\n+\n+#include <unordered_set>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  {\n+    std::unordered_set<int> us;\n+    for (int i = 0; i != 100000; ++i)\n+    {\n+      us.insert(i);\n+      VERIFY( us.load_factor() <= us.max_load_factor() );\n+    }\n+  }\n+  {\n+    std::unordered_set<int> us;\n+    us.max_load_factor(3.f);\n+    for (int i = 0; i != 100000; ++i)\n+    {\n+      us.insert(i);\n+      VERIFY( us.load_factor() <= us.max_load_factor() );\n+    }\n+  }\n+  {\n+    std::unordered_set<int> us;\n+    us.max_load_factor(.3f);\n+    for (int i = 0; i != 100000; ++i)\n+    {\n+      us.insert(i);\n+      VERIFY( us.load_factor() <= us.max_load_factor() );\n+    }\n+  }\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}