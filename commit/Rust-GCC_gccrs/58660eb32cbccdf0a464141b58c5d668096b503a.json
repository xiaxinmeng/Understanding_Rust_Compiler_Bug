{"sha": "58660eb32cbccdf0a464141b58c5d668096b503a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg2NjBlYjMyY2JjY2RmMGE0NjQxNDFiNThjNWQ2NjgwOTZiNTAzYQ==", "commit": {"author": {"name": "Brooks Moses", "email": "brooks.moses@codesourcery.com", "date": "2006-12-05T18:50:57Z"}, "committer": {"name": "Brooks Moses", "email": "brooks@gcc.gnu.org", "date": "2006-12-05T18:50:57Z"}, "message": "* doc/include/texinfo.tex: Update to version 2006-11-08.17.\n\nFrom-SVN: r119551", "tree": {"sha": "2b84139cf346e3bd68c44932e41e6e2c44662e6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b84139cf346e3bd68c44932e41e6e2c44662e6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58660eb32cbccdf0a464141b58c5d668096b503a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58660eb32cbccdf0a464141b58c5d668096b503a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58660eb32cbccdf0a464141b58c5d668096b503a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58660eb32cbccdf0a464141b58c5d668096b503a/comments", "author": null, "committer": null, "parents": [{"sha": "ae07b4632c474d9bc48dfdeb8dd79ee3f4b36850", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae07b4632c474d9bc48dfdeb8dd79ee3f4b36850", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae07b4632c474d9bc48dfdeb8dd79ee3f4b36850"}], "stats": {"total": 857, "additions": 572, "deletions": 285}, "files": [{"sha": "fc24c198d474c77e047b501881117c8d668e7ca2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58660eb32cbccdf0a464141b58c5d668096b503a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58660eb32cbccdf0a464141b58c5d668096b503a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58660eb32cbccdf0a464141b58c5d668096b503a", "patch": "@@ -1,3 +1,7 @@\n+2006-12-05  Brooks Moses  <brooks.moses@codesourcery.com>\n+\n+\t* doc/include/texinfo.tex: Update to version 2006-11-08.17.\n+\n 2006-12-05  Zdenek Dvorak <dvorakz@suse.cz>\n \n \tPR tree-optimization/14784"}, {"sha": "4d47842579badd69dfdab8d342bd0ba560a5a3d6", "filename": "gcc/doc/include/texinfo.tex", "status": "modified", "additions": 568, "deletions": 285, "changes": 853, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58660eb32cbccdf0a464141b58c5d668096b503a/gcc%2Fdoc%2Finclude%2Ftexinfo.tex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58660eb32cbccdf0a464141b58c5d668096b503a/gcc%2Fdoc%2Finclude%2Ftexinfo.tex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finclude%2Ftexinfo.tex?ref=58660eb32cbccdf0a464141b58c5d668096b503a", "patch": "@@ -3,11 +3,11 @@\n % Load plain if necessary, i.e., if running under initex.\n \\expandafter\\ifx\\csname fmtname\\endcsname\\relax\\input plain\\fi\n %\n-\\def\\texinfoversion{2005-06-10.07}\n+\\def\\texinfoversion{2006-11-08.17}\n %\n % Copyright (C) 1985, 1986, 1988, 1990, 1991, 1992, 1993, 1994, 1995,\n-% 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005 Free Software\n-% Foundation, Inc.\n+% 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006 Free\n+% Software Foundation, Inc.\n %\n % This texinfo.tex file is free software; you can redistribute it and/or\n % modify it under the terms of the GNU General Public License as\n@@ -153,28 +153,22 @@\n \\ifx\\putwordDefopt\\undefined    \\gdef\\putwordDefopt{User Option}\\fi\n \\ifx\\putwordDeffunc\\undefined   \\gdef\\putwordDeffunc{Function}\\fi\n \n-% In some macros, we cannot use the `\\? notation---the left quote is\n-% in some cases the escape char.\n-\\chardef\\backChar  = `\\\\\n+% Since the category of space is not known, we have to be careful.\n+\\chardef\\spacecat = 10\n+\\def\\spaceisspace{\\catcode`\\ =\\spacecat}\n+\n+% sometimes characters are active, so we need control sequences.\n \\chardef\\colonChar = `\\:\n \\chardef\\commaChar = `\\,\n+\\chardef\\dashChar  = `\\-\n \\chardef\\dotChar   = `\\.\n \\chardef\\exclamChar= `\\!\n-\\chardef\\plusChar  = `\\+\n+\\chardef\\lquoteChar= `\\`\n \\chardef\\questChar = `\\?\n+\\chardef\\rquoteChar= `\\'\n \\chardef\\semiChar  = `\\;\n \\chardef\\underChar = `\\_\n \n-\\chardef\\spaceChar = `\\ %\n-\\chardef\\spacecat = 10\n-\\def\\spaceisspace{\\catcode\\spaceChar=\\spacecat}\n-\n-{% for help with debugging.\n- % example usage: \\expandafter\\show\\activebackslash\n- \\catcode`\\! = 0 \\catcode`\\\\ = \\active\n- !global!def!activebackslash{\\}\n-}\n-\n % Ignore a token.\n %\n \\def\\gobble#1{}\n@@ -310,10 +304,14 @@\n     % take effect in \\write's, yet the group defined by the \\vbox ends\n     % before the \\shipout runs.\n     %\n-    \\escapechar = `\\\\     % use backslash in output files.\n     \\indexdummies         % don't expand commands in the output.\n     \\normalturnoffactive  % \\ in index entries must not stay \\, e.g., if\n-                   % the page break happens to be in the middle of an example.\n+               % the page break happens to be in the middle of an example.\n+               % We don't want .vr (or whatever) entries like this:\n+               % \\entry{{\\tt \\indexbackslash }acronym}{32}{\\code {\\acronym}}\n+               % \"\\acronym\" won't work when it's read back in;\n+               % it needs to be \n+               % {\\code {{\\tt \\backslashcurfont }acronym}\n     \\shipout\\vbox{%\n       % Do this early so pdf references go to the beginning of the page.\n       \\ifpdfmakepagedest \\pdfdest name{\\the\\pageno} xyz\\fi\n@@ -341,9 +339,9 @@\n       \\pagebody{#1}%\n       \\ifdim\\ht\\footlinebox > 0pt\n         % Only leave this space if the footline is nonempty.\n-        % (We lessened \\vsize for it in \\oddfootingxxx.)\n+        % (We lessened \\vsize for it in \\oddfootingyyy.)\n         % The \\baselineskip=24pt in plain's \\makefootline has no effect.\n-        \\vskip 2\\baselineskip\n+        \\vskip 24pt\n         \\unvbox\\footlinebox\n       \\fi\n       %\n@@ -364,7 +362,7 @@\n       \\egroup % \\vbox from first cropmarks clause\n       \\fi\n     }% end of \\shipout\\vbox\n-  }% end of group with \\normalturnoffactive\n+  }% end of group with \\indexdummies\n   \\advancepageno\n   \\ifnum\\outputpenalty>-20000 \\else\\dosupereject\\fi\n }\n@@ -399,7 +397,7 @@\n %\n \\def\\parsearg{\\parseargusing{}}\n \\def\\parseargusing#1#2{%\n-  \\def\\next{#2}%\n+  \\def\\argtorun{#2}%\n   \\begingroup\n     \\obeylines\n     \\spaceisspace\n@@ -430,8 +428,7 @@\n \\def\\argcheckspacesY#1\\^^M#2\\^^M#3\\ArgTerm{%\n   \\def\\temp{#3}%\n   \\ifx\\temp\\empty\n-    % We cannot use \\next here, as it holds the macro to run;\n-    % thus we reuse \\temp.\n+    % Do not use \\next, perhaps the caller of \\parsearg uses it; reuse \\temp:\n     \\let\\temp\\finishparsearg\n   \\else\n     \\let\\temp\\argcheckspaces\n@@ -443,14 +440,14 @@\n % If a _delimited_ argument is enclosed in braces, they get stripped; so\n % to get _exactly_ the rest of the line, we had to prevent such situation.\n % We prepended an \\empty token at the very beginning and we expand it now,\n-% just before passing the control to \\next.\n+% just before passing the control to \\argtorun.\n % (Similarily, we have to think about #3 of \\argcheckspacesY above: it is\n % either the null string, or it ends with \\^^M---thus there is no danger\n % that a pair of braces would be stripped.\n %\n % But first, we have to remove the trailing space token.\n %\n-\\def\\finishparsearg#1 \\ArgTerm{\\expandafter\\next\\expandafter{#1}}\n+\\def\\finishparsearg#1 \\ArgTerm{\\expandafter\\argtorun\\expandafter{#1}}\n \n % \\parseargdef\\foo{...}\n %\tis roughly equivalent to\n@@ -1054,9 +1051,9 @@\n % _ active, and distinguish by seeing if the current family is \\slfam,\n % which is what @var uses.\n {\n-  \\catcode\\underChar = \\active\n+  \\catcode`\\_ = \\active\n   \\gdef\\mathunderscore{%\n-    \\catcode\\underChar=\\active\n+    \\catcode`\\_=\\active\n     \\def_{\\ifnum\\fam=\\slfam \\_\\else\\sb\\fi}%\n   }\n }\n@@ -1099,15 +1096,24 @@\n \\def\\minus{$-$}\n \n % @dots{} outputs an ellipsis using the current font.\n-% We do .5em per period so that it has the same spacing in a typewriter\n-% font as three actual period characters.\n+% We do .5em per period so that it has the same spacing in the cm\n+% typewriter fonts as three actual period characters; on the other hand,\n+% in other typewriter fonts three periods are wider than 1.5em.  So do\n+% whichever is larger.\n %\n \\def\\dots{%\n   \\leavevmode\n-  \\hbox to 1.5em{%\n-    \\hskip 0pt plus 0.25fil\n-    .\\hfil.\\hfil.%\n-    \\hskip 0pt plus 0.5fil\n+  \\setbox0=\\hbox{...}% get width of three periods\n+  \\ifdim\\wd0 > 1.5em\n+    \\dimen0 = \\wd0\n+  \\else\n+    \\dimen0 = 1.5em\n+  \\fi\n+  \\hbox to \\dimen0{%\n+    \\hskip 0pt plus.25fil\n+    .\\hskip 0pt plus1fil\n+    .\\hskip 0pt plus1fil\n+    .\\hskip 0pt plus.5fil\n   }%\n }\n \n@@ -1200,21 +1206,20 @@\n   \\fi\n \\fi\n \n-% PDF uses PostScript string constants for the names of xref targets, to\n+% PDF uses PostScript string constants for the names of xref targets,\n % for display in the outlines, and in other places.  Thus, we have to\n % double any backslashes.  Otherwise, a name like \"\\node\" will be\n % interpreted as a newline (\\n), followed by o, d, e.  Not good.\n % http://www.ntg.nl/pipermail/ntg-pdftex/2004-July/000654.html\n % (and related messages, the final outcome is that it is up to the TeX\n % user to double the backslashes and otherwise make the string valid, so\n-% that's we do).\n+% that's what we do).\n \n % double active backslashes.\n % \n {\\catcode`\\@=0 \\catcode`\\\\=\\active\n- @gdef@activebackslash{@catcode`@\\=@active @otherbackslash}\n  @gdef@activebackslashdouble{%\n-   @catcode@backChar=@active\n+   @catcode`@\\=@active\n    @let\\=@doublebackslash}\n }\n \n@@ -1246,34 +1251,65 @@\n \\def\\backslashparens#1{%\n   \\xdef#1{#1}% redefine it as its expansion; the definition is simply\n              % \\lastnode when called from \\setref -> \\pdfmkdest.\n-  \\HyPsdSubst{(}{\\backslashlparen}{#1}%\n-  \\HyPsdSubst{)}{\\backslashrparen}{#1}%\n+  \\HyPsdSubst{(}{\\realbackslash(}{#1}%\n+  \\HyPsdSubst{)}{\\realbackslash)}{#1}%\n }\n \n-{\\catcode\\exclamChar = 0 \\catcode\\backChar = \\other\n- !gdef!backslashlparen{\\(}%\n- !gdef!backslashrparen{\\)}%\n-}\n+\\newhelp\\nopdfimagehelp{Texinfo supports .png, .jpg, .jpeg, and .pdf images\n+with PDF output, and none of those formats could be found.  (.eps cannot\n+be supported due to the design of the PDF format; use regular TeX (DVI\n+output) for that.)}\n \n \\ifpdf\n   \\input pdfcolor\n   \\pdfcatalog{/PageMode /UseOutlines}%\n+  % #1 is image name, #2 width (might be empty/whitespace), #3 height (ditto).\n   \\def\\dopdfimage#1#2#3{%\n-    \\def\\imagewidth{#2}%\n-    \\def\\imageheight{#3}%\n+    \\def\\imagewidth{#2}\\setbox0 = \\hbox{\\ignorespaces #2}%\n+    \\def\\imageheight{#3}\\setbox2 = \\hbox{\\ignorespaces #3}%\n+    %\n+    % pdftex (and the PDF format) support .png, .jpg, .pdf (among\n+    % others).  Let's try in that order.\n+    \\let\\pdfimgext=\\empty\n+    \\begingroup\n+      \\openin 1 #1.png \\ifeof 1\n+        \\openin 1 #1.jpg \\ifeof 1\n+          \\openin 1 #1.jpeg \\ifeof 1\n+            \\openin 1 #1.JPG \\ifeof 1\n+              \\openin 1 #1.pdf \\ifeof 1\n+                \\errhelp = \\nopdfimagehelp\n+                \\errmessage{Could not find image file #1 for pdf}%\n+              \\else\n+                \\gdef\\pdfimgext{pdf}%\n+              \\fi\n+            \\else\n+              \\gdef\\pdfimgext{JPG}%\n+            \\fi\n+          \\else\n+            \\gdef\\pdfimgext{jpeg}%\n+          \\fi\n+        \\else\n+          \\gdef\\pdfimgext{jpg}%\n+        \\fi\n+      \\else\n+        \\gdef\\pdfimgext{png}%\n+      \\fi\n+      \\closein 1\n+    \\endgroup\n+    %\n     % without \\immediate, pdftex seg faults when the same image is\n     % included twice.  (Version 3.14159-pre-1.0-unofficial-20010704.)\n     \\ifnum\\pdftexversion < 14\n       \\immediate\\pdfimage\n     \\else\n       \\immediate\\pdfximage\n     \\fi\n-      \\ifx\\empty\\imagewidth\\else width \\imagewidth \\fi\n-      \\ifx\\empty\\imageheight\\else height \\imageheight \\fi\n+      \\ifdim \\wd0 >0pt width \\imagewidth \\fi\n+      \\ifdim \\wd2 >0pt height \\imageheight \\fi\n       \\ifnum\\pdftexversion<13\n-         #1.pdf%\n+         #1.\\pdfimgext\n        \\else\n-         {#1.pdf}%\n+         {#1.\\pdfimgext}%\n        \\fi\n     \\ifnum\\pdftexversion < 14 \\else\n       \\pdfrefximage \\pdflastximage\n@@ -1282,7 +1318,6 @@\n     % We have to set dummies so commands such as @code, and characters\n     % such as \\, aren't expanded when present in a section title.\n     \\atdummies\n-    \\turnoffactive\n     \\activebackslashdouble\n     \\def\\pdfdestname{#1}%\n     \\backslashparens\\pdfdestname\n@@ -1394,7 +1429,7 @@\n       % now, I guess we'll just let the pdf reader have its way.\n       \\indexnofonts\n       \\setupdatafile\n-      \\activebackslash\n+      \\catcode`\\\\=\\active \\otherbackslash\n       \\input \\jobname.toc\n     \\endgroup\n   }\n@@ -1413,9 +1448,17 @@\n   \\else\n     \\let \\startlink \\pdfstartlink\n   \\fi\n+  % make a live url in pdf output.\n   \\def\\pdfurl#1{%\n     \\begingroup\n-      \\normalturnoffactive\\def\\@{@}%\n+      % it seems we really need yet another set of dummies; have not\n+      % tried to figure out what each command should do in the context\n+      % of @url.  for now, just make @/ a no-op, that's the only one\n+      % people have actually reported a problem with.\n+      % \n+      \\normalturnoffactive\n+      \\def\\@{@}%\n+      \\let\\/=\\empty\n       \\makevalueexpandable\n       \\leavevmode\\Red\n       \\startlink attr{/Border [0 0 0]}%\n@@ -1485,6 +1528,7 @@\n % We don't need math for this font style.\n \\def\\ttsl{\\setfontstyle{ttsl}}\n \n+\n % Default leading.\n \\newdimen\\textleading  \\textleading = 13.2pt\n \n@@ -1506,11 +1550,13 @@\n   }%\n }\n \n+\n % Set the font macro #1 to the font named #2, adding on the\n % specified font prefix (normally `cm').\n % #3 is the font's design size, #4 is a scale factor\n \\def\\setfont#1#2#3#4{\\font#1=\\fontprefix#2#3 scaled #4}\n \n+\n % Use cm as the default font prefix.\n % To specify the font prefix, you must define \\fontprefix\n % before you read in texinfo.tex.\n@@ -1534,6 +1580,10 @@\n \\def\\scshape{csc}\n \\def\\scbshape{csc}\n \n+% Definitions for a main text size of 11pt.  This is the default in\n+% Texinfo.\n+% \n+\\def\\definetextfontsizexi{\n % Text fonts (11.2pt, magstep1).\n \\def\\textnominalsize{11pt}\n \\edef\\mainmagstep{\\magstephalf}\n@@ -1647,6 +1697,165 @@\n \\font\\reducedi=cmmi10\n \\font\\reducedsy=cmsy10\n \n+% reset the current fonts\n+\\textfonts\n+\\rm\n+} % end of 11pt text font size definitions\n+\n+\n+% Definitions to make the main text be 10pt Computer Modern, with\n+% section, chapter, etc., sizes following suit.  This is for the GNU\n+% Press printing of the Emacs 22 manual.  Maybe other manuals in the\n+% future.  Used with @smallbook, which sets the leading to 12pt.\n+% \n+\\def\\definetextfontsizex{%\n+% Text fonts (10pt).\n+\\def\\textnominalsize{10pt}\n+\\edef\\mainmagstep{1000}\n+\\setfont\\textrm\\rmshape{10}{\\mainmagstep}\n+\\setfont\\texttt\\ttshape{10}{\\mainmagstep}\n+\\setfont\\textbf\\bfshape{10}{\\mainmagstep}\n+\\setfont\\textit\\itshape{10}{\\mainmagstep}\n+\\setfont\\textsl\\slshape{10}{\\mainmagstep}\n+\\setfont\\textsf\\sfshape{10}{\\mainmagstep}\n+\\setfont\\textsc\\scshape{10}{\\mainmagstep}\n+\\setfont\\textttsl\\ttslshape{10}{\\mainmagstep}\n+\\font\\texti=cmmi10 scaled \\mainmagstep\n+\\font\\textsy=cmsy10 scaled \\mainmagstep\n+\n+% A few fonts for @defun names and args.\n+\\setfont\\defbf\\bfshape{10}{\\magstephalf}\n+\\setfont\\deftt\\ttshape{10}{\\magstephalf}\n+\\setfont\\defttsl\\ttslshape{10}{\\magstephalf}\n+\\def\\df{\\let\\tentt=\\deftt \\let\\tenbf = \\defbf \\let\\tenttsl=\\defttsl \\bf}\n+\n+% Fonts for indices, footnotes, small examples (9pt).\n+\\def\\smallnominalsize{9pt}\n+\\setfont\\smallrm\\rmshape{9}{1000}\n+\\setfont\\smalltt\\ttshape{9}{1000}\n+\\setfont\\smallbf\\bfshape{10}{900}\n+\\setfont\\smallit\\itshape{9}{1000}\n+\\setfont\\smallsl\\slshape{9}{1000}\n+\\setfont\\smallsf\\sfshape{9}{1000}\n+\\setfont\\smallsc\\scshape{10}{900}\n+\\setfont\\smallttsl\\ttslshape{10}{900}\n+\\font\\smalli=cmmi9\n+\\font\\smallsy=cmsy9\n+\n+% Fonts for small examples (8pt).\n+\\def\\smallernominalsize{8pt}\n+\\setfont\\smallerrm\\rmshape{8}{1000}\n+\\setfont\\smallertt\\ttshape{8}{1000}\n+\\setfont\\smallerbf\\bfshape{10}{800}\n+\\setfont\\smallerit\\itshape{8}{1000}\n+\\setfont\\smallersl\\slshape{8}{1000}\n+\\setfont\\smallersf\\sfshape{8}{1000}\n+\\setfont\\smallersc\\scshape{10}{800}\n+\\setfont\\smallerttsl\\ttslshape{10}{800}\n+\\font\\smalleri=cmmi8\n+\\font\\smallersy=cmsy8\n+\n+% Fonts for title page (20.4pt):\n+\\def\\titlenominalsize{20pt}\n+\\setfont\\titlerm\\rmbshape{12}{\\magstep3}\n+\\setfont\\titleit\\itbshape{10}{\\magstep4}\n+\\setfont\\titlesl\\slbshape{10}{\\magstep4}\n+\\setfont\\titlett\\ttbshape{12}{\\magstep3}\n+\\setfont\\titlettsl\\ttslshape{10}{\\magstep4}\n+\\setfont\\titlesf\\sfbshape{17}{\\magstep1}\n+\\let\\titlebf=\\titlerm\n+\\setfont\\titlesc\\scbshape{10}{\\magstep4}\n+\\font\\titlei=cmmi12 scaled \\magstep3\n+\\font\\titlesy=cmsy10 scaled \\magstep4\n+\\def\\authorrm{\\secrm}\n+\\def\\authortt{\\sectt}\n+\n+% Chapter fonts (14.4pt).\n+\\def\\chapnominalsize{14pt}\n+\\setfont\\chaprm\\rmbshape{12}{\\magstep1}\n+\\setfont\\chapit\\itbshape{10}{\\magstep2}\n+\\setfont\\chapsl\\slbshape{10}{\\magstep2}\n+\\setfont\\chaptt\\ttbshape{12}{\\magstep1}\n+\\setfont\\chapttsl\\ttslshape{10}{\\magstep2}\n+\\setfont\\chapsf\\sfbshape{12}{\\magstep1}\n+\\let\\chapbf\\chaprm\n+\\setfont\\chapsc\\scbshape{10}{\\magstep2}\n+\\font\\chapi=cmmi12 scaled \\magstep1\n+\\font\\chapsy=cmsy10 scaled \\magstep2\n+\n+% Section fonts (12pt).\n+\\def\\secnominalsize{12pt}\n+\\setfont\\secrm\\rmbshape{12}{1000}\n+\\setfont\\secit\\itbshape{10}{\\magstep1}\n+\\setfont\\secsl\\slbshape{10}{\\magstep1}\n+\\setfont\\sectt\\ttbshape{12}{1000}\n+\\setfont\\secttsl\\ttslshape{10}{\\magstep1}\n+\\setfont\\secsf\\sfbshape{12}{1000}\n+\\let\\secbf\\secrm\n+\\setfont\\secsc\\scbshape{10}{\\magstep1}\n+\\font\\seci=cmmi12 \n+\\font\\secsy=cmsy10 scaled \\magstep1\n+\n+% Subsection fonts (10pt).\n+\\def\\ssecnominalsize{10pt}\n+\\setfont\\ssecrm\\rmbshape{10}{1000}\n+\\setfont\\ssecit\\itbshape{10}{1000}\n+\\setfont\\ssecsl\\slbshape{10}{1000}\n+\\setfont\\ssectt\\ttbshape{10}{1000}\n+\\setfont\\ssecttsl\\ttslshape{10}{1000}\n+\\setfont\\ssecsf\\sfbshape{10}{1000}\n+\\let\\ssecbf\\ssecrm\n+\\setfont\\ssecsc\\scbshape{10}{1000}\n+\\font\\sseci=cmmi10\n+\\font\\ssecsy=cmsy10\n+\n+% Reduced fonts for @acro in text (9pt).\n+\\def\\reducednominalsize{9pt}\n+\\setfont\\reducedrm\\rmshape{9}{1000}\n+\\setfont\\reducedtt\\ttshape{9}{1000}\n+\\setfont\\reducedbf\\bfshape{10}{900}\n+\\setfont\\reducedit\\itshape{9}{1000}\n+\\setfont\\reducedsl\\slshape{9}{1000}\n+\\setfont\\reducedsf\\sfshape{9}{1000}\n+\\setfont\\reducedsc\\scshape{10}{900}\n+\\setfont\\reducedttsl\\ttslshape{10}{900}\n+\\font\\reducedi=cmmi9\n+\\font\\reducedsy=cmsy9\n+\n+% reduce space between paragraphs\n+\\divide\\parskip by 2\n+\n+% reset the current fonts\n+\\textfonts\n+\\rm\n+} % end of 10pt text font size definitions\n+\n+\n+% We provide the user-level command\n+%   @fonttextsize 10\n+% (or 11) to redefine the text font size.  pt is assumed.\n+% \n+\\def\\xword{10}\n+\\def\\xiword{11}\n+%\n+\\parseargdef\\fonttextsize{%\n+  \\def\\textsizearg{#1}%\n+  \\wlog{doing @fonttextsize \\textsizearg}%\n+  %\n+  % Set \\globaldefs so that documents can use this inside @tex, since\n+  % makeinfo 4.8 does not support it, but we need it nonetheless.\n+  % \n+ \\begingroup \\globaldefs=1\n+  \\ifx\\textsizearg\\xword \\definetextfontsizex\n+  \\else \\ifx\\textsizearg\\xiword \\definetextfontsizexi\n+  \\else\n+    \\errhelp=\\EMsimple\n+    \\errmessage{@fonttextsize only supports `10' or `11', not `\\textsizearg'}\n+  \\fi\\fi\n+ \\endgroup\n+}\n+\n+\n % In order for the font changes to affect most math symbols and letters,\n % we have to define the \\textfont of the standard families.  Since\n % texinfo doesn't allow for producing subscripts and superscripts except\n@@ -1757,7 +1966,7 @@\n \n % Set up the default fonts, so we can use them for creating boxes.\n %\n-\\textfonts \\rm\n+\\definetextfontsizexi\n \n % Define these so they can be easily changed for other fonts.\n \\def\\angleleft{$\\langle$}\n@@ -1841,6 +2050,7 @@\n      \\hbox{\\raise0.4pt\\hbox{\\vphantom{\\angleleft}}#1}}%\n     \\kern-0.4pt\\hrule}%\n   \\kern-.06em\\raise0.4pt\\hbox{\\angleright}}}}\n+\\def\\key #1{{\\nohyphenation \\uppercase{#1}}\\null}\n % The old definition, with no lozenge:\n %\\def\\key #1{{\\ttsl \\nohyphenation \\uppercase{#1}}\\null}\n \\def\\ctrl #1{{\\tt \\rawbackslash \\hat}#1}\n@@ -1882,11 +2092,14 @@\n % and arrange explicitly to hyphenate at a dash.\n %  -- rms.\n {\n-  \\catcode`\\-=\\active\n-  \\catcode`\\_=\\active\n+  \\catcode`\\-=\\active \\catcode`\\_=\\active\n+  \\catcode`\\'=\\active \\catcode`\\`=\\active\n   %\n   \\global\\def\\code{\\begingroup\n-    \\catcode`\\-=\\active  \\catcode`\\_=\\active\n+    \\catcode\\rquoteChar=\\active \\catcode\\lquoteChar=\\active\n+    \\let'\\codequoteright \\let`\\codequoteleft\n+    %\n+    \\catcode\\dashChar=\\active  \\catcode\\underChar=\\active\n     \\ifallowcodebreaks\n      \\let-\\codedash\n      \\let_\\codeunder\n@@ -2132,6 +2345,10 @@\n     }$%\n }\n \n+% @textdegree - the normal degrees sign.\n+%\n+\\def\\textdegree{$^\\circ$}\n+\n % Laurent Siebenmann reports \\Orb undefined with:\n %  Textures 1.7.7 (preloaded format=plain 93.10.14)  (68K)  16 APR 2004 02:38\n % so we'll define it if necessary.\n@@ -2303,8 +2520,8 @@\n   %\n   % Leave some space for the footline.  Hopefully ok to assume\n   % @evenfooting will not be used by itself.\n-  \\global\\advance\\pageheight by -\\baselineskip\n-  \\global\\advance\\vsize by -\\baselineskip\n+  \\global\\advance\\pageheight by -12pt\n+  \\global\\advance\\vsize by -12pt\n }\n \n \\parseargdef\\everyfooting{\\oddfootingxxx{#1}\\evenfootingxxx{#1}}\n@@ -2963,6 +3180,7 @@\n \n \\def\\doignore#1{\\begingroup\n   % Scan in ``verbatim'' mode:\n+  \\obeylines\n   \\catcode`\\@ = \\other\n   \\catcode`\\{ = \\other\n   \\catcode`\\} = \\other\n@@ -2983,16 +3201,16 @@\n   \\gdef\\dodoignore#1{%\n     % #1 contains the command name as a string, e.g., `ifinfo'.\n     %\n-    % Define a command to find the next `@end #1', which must be on a line\n-    % by itself.\n-    \\long\\def\\doignoretext##1^^M@end #1{\\doignoretextyyy##1^^M@#1\\_STOP_}%\n+    % Define a command to find the next `@end #1'.\n+    \\long\\def\\doignoretext##1^^M@end #1{%\n+      \\doignoretextyyy##1^^M@#1\\_STOP_}%\n+    %\n     % And this command to find another #1 command, at the beginning of a\n     % line.  (Otherwise, we would consider a line `@c @ifset', for\n     % example, to count as an @ifset for nesting.)\n     \\long\\def\\doignoretextyyy##1^^M@#1##2\\_STOP_{\\doignoreyyy{##2}\\_STOP_}%\n     %\n     % And now expand that command.\n-    \\obeylines %\n     \\doignoretext ^^M%\n   }%\n }\n@@ -3022,7 +3240,12 @@\n }\n \n % Finish off ignored text.\n-\\def\\enddoignore{\\endgroup\\ignorespaces}\n+{ \\obeylines%\n+  % Ignore anything after the last `@end #1'; this matters in verbatim\n+  % environments, where otherwise the newline after an ignored conditional\n+  % would result in a blank line in the output.\n+  \\gdef\\enddoignore#1^^M{\\endgroup\\ignorespaces}%\n+}\n \n \n % @set VAR sets the variable VAR to an empty value.\n@@ -3222,34 +3445,41 @@\n % we have to laboriously prevent expansion for those that we don't.\n %\n \\def\\indexdummies{%\n+  \\escapechar = `\\\\     % use backslash in output files.\n   \\def\\@{@}% change to @@ when we switch to @ as escape char in index files.\n   \\def\\ {\\realbackslash\\space }%\n+  %\n   % Need these in case \\tex is in effect and \\{ is a \\delimiter again.\n   % But can't use \\lbracecmd and \\rbracecmd because texindex assumes\n   % braces and backslashes are used only as delimiters.\n   \\let\\{ = \\mylbrace\n   \\let\\} = \\myrbrace\n   %\n-  % \\definedummyword defines \\#1 as \\realbackslash #1\\space, thus\n-  % effectively preventing its expansion.  This is used only for control\n-  % words, not control letters, because the \\space would be incorrect\n-  % for control characters, but is needed to separate the control word\n-  % from whatever follows.\n-  %\n-  % For control letters, we have \\definedummyletter, which omits the\n-  % space.\n-  %\n-  % These can be used both for control words that take an argument and\n-  % those that do not.  If it is followed by {arg} in the input, then\n-  % that will dutifully get written to the index (or wherever).\n-  %\n-  \\def\\definedummyword##1{%\n-    \\expandafter\\def\\csname ##1\\endcsname{\\realbackslash ##1\\space}%\n-  }%\n-  \\def\\definedummyletter##1{%\n-    \\expandafter\\def\\csname ##1\\endcsname{\\realbackslash ##1}%\n-  }%\n-  \\let\\definedummyaccent\\definedummyletter\n+  % I don't entirely understand this, but when an index entry is\n+  % generated from a macro call, the \\endinput which \\scanmacro inserts\n+  % causes processing to be prematurely terminated.  This is,\n+  % apparently, because \\indexsorttmp is fully expanded, and \\endinput\n+  % is an expandable command.  The redefinition below makes \\endinput\n+  % disappear altogether for that purpose -- although logging shows that\n+  % processing continues to some further point.  On the other hand, it\n+  % seems \\endinput does not hurt in the printed index arg, since that\n+  % is still getting written without apparent harm.\n+  % \n+  % Sample source (mac-idx3.tex, reported by Graham Percival to\n+  % help-texinfo, 22may06):\n+  % @macro funindex {WORD}\n+  % @findex xyz\n+  % @end macro\n+  % ...\n+  % @funindex commtest\n+  % \n+  % The above is not enough to reproduce the bug, but it gives the flavor.\n+  % \n+  % Sample whatsit resulting:\n+  % .@write3{\\entry{xyz}{@folio }{@code {xyz@endinput }}}\n+  % \n+  % So:\n+  \\let\\endinput = \\empty\n   %\n   % Do the redefinitions.\n   \\commondummies\n@@ -3266,147 +3496,152 @@\n   \\let\\{ = \\lbraceatcmd\n   \\let\\} = \\rbraceatcmd\n   %\n-  % (See comments in \\indexdummies.)\n-  \\def\\definedummyword##1{%\n-    \\expandafter\\def\\csname ##1\\endcsname{@##1\\space}%\n-  }%\n-  \\def\\definedummyletter##1{%\n-    \\expandafter\\def\\csname ##1\\endcsname{@##1}%\n-  }%\n-  \\let\\definedummyaccent\\definedummyletter\n-  %\n   % Do the redefinitions.\n   \\commondummies\n+  \\otherbackslash\n }\n \n-% Called from \\indexdummies and \\atdummies.  \\definedummyword and\n-% \\definedummyletter must be defined first.\n+% Called from \\indexdummies and \\atdummies.\n %\n \\def\\commondummies{%\n   %\n-  \\normalturnoffactive\n+  % \\definedummyword defines \\#1 as \\string\\#1\\space, thus effectively\n+  % preventing its expansion.  This is used only for control% words,\n+  % not control letters, because the \\space would be incorrect for\n+  % control characters, but is needed to separate the control word\n+  % from whatever follows.\n+  %\n+  % For control letters, we have \\definedummyletter, which omits the\n+  % space.\n+  %\n+  % These can be used both for control words that take an argument and\n+  % those that do not.  If it is followed by {arg} in the input, then\n+  % that will dutifully get written to the index (or wherever).\n+  %\n+  \\def\\definedummyword  ##1{\\def##1{\\string##1\\space}}%\n+  \\def\\definedummyletter##1{\\def##1{\\string##1}}%\n+  \\let\\definedummyaccent\\definedummyletter\n   %\n   \\commondummiesnofonts\n   %\n-  \\definedummyletter{_}%\n+  \\definedummyletter\\_%\n   %\n   % Non-English letters.\n-  \\definedummyword{AA}%\n-  \\definedummyword{AE}%\n-  \\definedummyword{L}%\n-  \\definedummyword{OE}%\n-  \\definedummyword{O}%\n-  \\definedummyword{aa}%\n-  \\definedummyword{ae}%\n-  \\definedummyword{l}%\n-  \\definedummyword{oe}%\n-  \\definedummyword{o}%\n-  \\definedummyword{ss}%\n-  \\definedummyword{exclamdown}%\n-  \\definedummyword{questiondown}%\n-  \\definedummyword{ordf}%\n-  \\definedummyword{ordm}%\n+  \\definedummyword\\AA\n+  \\definedummyword\\AE\n+  \\definedummyword\\L\n+  \\definedummyword\\OE\n+  \\definedummyword\\O\n+  \\definedummyword\\aa\n+  \\definedummyword\\ae\n+  \\definedummyword\\l\n+  \\definedummyword\\oe\n+  \\definedummyword\\o\n+  \\definedummyword\\ss\n+  \\definedummyword\\exclamdown\n+  \\definedummyword\\questiondown\n+  \\definedummyword\\ordf\n+  \\definedummyword\\ordm\n   %\n   % Although these internal commands shouldn't show up, sometimes they do.\n-  \\definedummyword{bf}%\n-  \\definedummyword{gtr}%\n-  \\definedummyword{hat}%\n-  \\definedummyword{less}%\n-  \\definedummyword{sf}%\n-  \\definedummyword{sl}%\n-  \\definedummyword{tclose}%\n-  \\definedummyword{tt}%\n-  %\n-  \\definedummyword{LaTeX}%\n-  \\definedummyword{TeX}%\n+  \\definedummyword\\bf\n+  \\definedummyword\\gtr\n+  \\definedummyword\\hat\n+  \\definedummyword\\less\n+  \\definedummyword\\sf\n+  \\definedummyword\\sl\n+  \\definedummyword\\tclose\n+  \\definedummyword\\tt\n+  %\n+  \\definedummyword\\LaTeX\n+  \\definedummyword\\TeX\n   %\n   % Assorted special characters.\n-  \\definedummyword{bullet}%\n-  \\definedummyword{comma}%\n-  \\definedummyword{copyright}%\n-  \\definedummyword{registeredsymbol}%\n-  \\definedummyword{dots}%\n-  \\definedummyword{enddots}%\n-  \\definedummyword{equiv}%\n-  \\definedummyword{error}%\n-  \\definedummyword{euro}%\n-  \\definedummyword{expansion}%\n-  \\definedummyword{minus}%\n-  \\definedummyword{pounds}%\n-  \\definedummyword{point}%\n-  \\definedummyword{print}%\n-  \\definedummyword{result}%\n+  \\definedummyword\\bullet\n+  \\definedummyword\\comma\n+  \\definedummyword\\copyright\n+  \\definedummyword\\registeredsymbol\n+  \\definedummyword\\dots\n+  \\definedummyword\\enddots\n+  \\definedummyword\\equiv\n+  \\definedummyword\\error\n+  \\definedummyword\\euro\n+  \\definedummyword\\expansion\n+  \\definedummyword\\minus\n+  \\definedummyword\\pounds\n+  \\definedummyword\\point\n+  \\definedummyword\\print\n+  \\definedummyword\\result\n+  \\definedummyword\\textdegree\n+  %\n+  % We want to disable all macros so that they are not expanded by \\write.\n+  \\macrolist\n+  %\n+  \\normalturnoffactive\n   %\n   % Handle some cases of @value -- where it does not contain any\n   % (non-fully-expandable) commands.\n   \\makevalueexpandable\n-  %\n-  % Normal spaces, not active ones.\n-  \\unsepspaces\n-  %\n-  % No macro expansion.\n-  \\turnoffmacros\n }\n \n % \\commondummiesnofonts: common to \\commondummies and \\indexnofonts.\n %\n-% Better have this without active chars.\n-{\n-  \\catcode`\\~=\\other\n-  \\gdef\\commondummiesnofonts{%\n-    % Control letters and accents.\n-    \\definedummyletter{!}%\n-    \\definedummyaccent{\"}%\n-    \\definedummyaccent{'}%\n-    \\definedummyletter{*}%\n-    \\definedummyaccent{,}%\n-    \\definedummyletter{.}%\n-    \\definedummyletter{/}%\n-    \\definedummyletter{:}%\n-    \\definedummyaccent{=}%\n-    \\definedummyletter{?}%\n-    \\definedummyaccent{^}%\n-    \\definedummyaccent{`}%\n-    \\definedummyaccent{~}%\n-    \\definedummyword{u}%\n-    \\definedummyword{v}%\n-    \\definedummyword{H}%\n-    \\definedummyword{dotaccent}%\n-    \\definedummyword{ringaccent}%\n-    \\definedummyword{tieaccent}%\n-    \\definedummyword{ubaraccent}%\n-    \\definedummyword{udotaccent}%\n-    \\definedummyword{dotless}%\n-    %\n-    % Texinfo font commands.\n-    \\definedummyword{b}%\n-    \\definedummyword{i}%\n-    \\definedummyword{r}%\n-    \\definedummyword{sc}%\n-    \\definedummyword{t}%\n-    %\n-    % Commands that take arguments.\n-    \\definedummyword{acronym}%\n-    \\definedummyword{cite}%\n-    \\definedummyword{code}%\n-    \\definedummyword{command}%\n-    \\definedummyword{dfn}%\n-    \\definedummyword{emph}%\n-    \\definedummyword{env}%\n-    \\definedummyword{file}%\n-    \\definedummyword{kbd}%\n-    \\definedummyword{key}%\n-    \\definedummyword{math}%\n-    \\definedummyword{option}%\n-    \\definedummyword{samp}%\n-    \\definedummyword{strong}%\n-    \\definedummyword{tie}%\n-    \\definedummyword{uref}%\n-    \\definedummyword{url}%\n-    \\definedummyword{var}%\n-    \\definedummyword{verb}%\n-    \\definedummyword{w}%\n-  }\n+\\def\\commondummiesnofonts{%\n+  % Control letters and accents.\n+  \\definedummyletter\\!%\n+  \\definedummyaccent\\\"%\n+  \\definedummyaccent\\'%\n+  \\definedummyletter\\*%\n+  \\definedummyaccent\\,%\n+  \\definedummyletter\\.%\n+  \\definedummyletter\\/%\n+  \\definedummyletter\\:%\n+  \\definedummyaccent\\=%\n+  \\definedummyletter\\?%\n+  \\definedummyaccent\\^%\n+  \\definedummyaccent\\`%\n+  \\definedummyaccent\\~%\n+  \\definedummyword\\u\n+  \\definedummyword\\v\n+  \\definedummyword\\H\n+  \\definedummyword\\dotaccent\n+  \\definedummyword\\ringaccent\n+  \\definedummyword\\tieaccent\n+  \\definedummyword\\ubaraccent\n+  \\definedummyword\\udotaccent\n+  \\definedummyword\\dotless\n+  %\n+  % Texinfo font commands.\n+  \\definedummyword\\b\n+  \\definedummyword\\i\n+  \\definedummyword\\r\n+  \\definedummyword\\sc\n+  \\definedummyword\\t\n+  %\n+  % Commands that take arguments.\n+  \\definedummyword\\acronym\n+  \\definedummyword\\cite\n+  \\definedummyword\\code\n+  \\definedummyword\\command\n+  \\definedummyword\\dfn\n+  \\definedummyword\\emph\n+  \\definedummyword\\env\n+  \\definedummyword\\file\n+  \\definedummyword\\kbd\n+  \\definedummyword\\key\n+  \\definedummyword\\math\n+  \\definedummyword\\option\n+  \\definedummyword\\pxref\n+  \\definedummyword\\ref\n+  \\definedummyword\\samp\n+  \\definedummyword\\strong\n+  \\definedummyword\\tie\n+  \\definedummyword\\uref\n+  \\definedummyword\\url\n+  \\definedummyword\\var\n+  \\definedummyword\\verb\n+  \\definedummyword\\w\n+  \\definedummyword\\xref\n }\n \n % \\indexnofonts is used when outputting the strings to sort the index\n@@ -3416,13 +3651,9 @@\n %\n \\def\\indexnofonts{%\n   % Accent commands should become @asis.\n-  \\def\\definedummyaccent##1{%\n-    \\expandafter\\let\\csname ##1\\endcsname\\asis\n-  }%\n+  \\def\\definedummyaccent##1{\\let##1\\asis}%\n   % We can just ignore other control letters.\n-  \\def\\definedummyletter##1{%\n-    \\expandafter\\def\\csname ##1\\endcsname{}%\n-  }%\n+  \\def\\definedummyletter##1{\\let##1\\empty}%\n   % Hopefully, all control words can become @asis.\n   \\let\\definedummyword\\definedummyaccent\n   %\n@@ -3475,9 +3706,19 @@\n   \\def\\point{.}%\n   \\def\\print{-|}%\n   \\def\\result{=>}%\n+  \\def\\textdegree{degrees}%\n   %\n-  % Don't write macro names.\n-  \\emptyusermacros\n+  % We need to get rid of all macros, leaving only the arguments (if present).\n+  % Of course this is not nearly correct, but it is the best we can do for now.\n+  % makeinfo does not expand macros in the argument to @deffn, which ends up\n+  % writing an index entry, and texindex isn't prepared for an index sort entry\n+  % that starts with \\.\n+  % \n+  % Since macro invocations are followed by braces, we can just redefine them\n+  % to take a single TeX argument.  The case of a macro invocation that\n+  % goes to end-of-line is not handled.\n+  % \n+  \\macrolist\n }\n \n \\let\\indexbackslash=0  %overridden during \\printindex.\n@@ -3524,7 +3765,6 @@\n   %\n   % Remember, we are within a group.\n   \\indexdummies % Must do this here, since \\bf, etc expand at this stage\n-  \\escapechar=`\\\\\n   \\def\\backslashcurfont{\\indexbackslash}% \\indexbackslash isn't defined now\n       % so it will be output as is; and it will print as backslash.\n   %\n@@ -3815,9 +4055,9 @@\n   \\endgroup\n }\n \n-% Like \\dotfill except takes at least 1 em.\n+% Like plain.tex's \\dotfill, except uses up at least 1 em.\n \\def\\indexdotfill{\\cleaders\n-  \\hbox{$\\mathsurround=0pt \\mkern1.5mu ${\\it .}$ \\mkern1.5mu$}\\hskip 1em plus 1fill}\n+  \\hbox{$\\mathsurround=0pt \\mkern1.5mu.\\mkern1.5mu$}\\hskip 1em plus 1fill}\n \n \\def\\primary #1{\\line{#1\\hfil}}\n \n@@ -4391,14 +4631,17 @@\n     \\ifx\\temptype\\Ynothingkeyword\n       \\setbox0 = \\hbox{}%\n       \\def\\toctype{unnchap}%\n+      \\gdef\\thischapternum{}%\n       \\gdef\\thischapter{#1}%\n     \\else\\ifx\\temptype\\Yomitfromtockeyword\n       \\setbox0 = \\hbox{}% contents like unnumbered, but no toc entry\n       \\def\\toctype{omit}%\n+      \\gdef\\thischapternum{}%\n       \\gdef\\thischapter{}%\n     \\else\\ifx\\temptype\\Yappendixkeyword\n       \\setbox0 = \\hbox{\\putwordAppendix{} #3\\enspace}%\n       \\def\\toctype{app}%\n+      \\xdef\\thischapternum{\\appendixletter}%\n       % We don't substitute the actual chapter name into \\thischapter\n       % because we don't want its macros evaluated now.  And we don't\n       % use \\thissection because that changes with each section.\n@@ -4408,6 +4651,7 @@\n     \\else\n       \\setbox0 = \\hbox{#3\\enspace}%\n       \\def\\toctype{numchap}%\n+      \\xdef\\thischapternum{\\the\\chapno}%\n       \\xdef\\thischapter{\\putwordChapter{} \\the\\chapno:\n                         \\noexpand\\thischaptername}%\n     \\fi\\fi\\fi\n@@ -4519,13 +4763,21 @@\n       \\gdef\\thissection{#1}%\n     \\fi\\fi\\fi\n     %\n-    % Write the toc entry (before \\donoderef).  See comments in \\chfplain.\n+    % Write the toc entry (before \\donoderef).  See comments in \\chapmacro.\n     \\writetocentry{\\toctype\\sectionlevel}{#1}{#4}%\n     %\n     % Write the node reference (= pdf destination for pdftex).\n-    % Again, see comments in \\chfplain.\n+    % Again, see comments in \\chapmacro.\n     \\donoderef{#3}%\n     %\n+    % Interline glue will be inserted when the vbox is completed.\n+    % That glue will be a valid breakpoint for the page, since it'll be\n+    % preceded by a whatsit (usually from the \\donoderef, or from the\n+    % \\writetocentry if there was no node).  We don't want to allow that\n+    % break, since then the whatsits could end up on page n while the\n+    % section is on page n+1, thus toc/etc. are wrong.  Debian bug 276000.\n+    \\nobreak\n+    %\n     % Output the actual section heading.\n     \\vbox{\\hyphenpenalty=10000 \\tolerance=5000 \\parindent=0pt \\raggedright\n           \\hangindent=\\wd0  % zero if no section number\n@@ -4584,11 +4836,11 @@\n     \\fi\n     %\n     \\iflinks\n-      {\\atdummies \\turnoffactive\n+      {\\atdummies\n        \\edef\\temp{%\n          \\write\\tocfile{@#1entry{#2}{#3}{\\lastnode}{\\noexpand\\folio}}}%\n        \\temp\n-      }\n+      }%\n     \\fi\n   \\fi\n   %\n@@ -4840,7 +5092,7 @@\n {\\tentt \\global\\dimen0 = 3em}% Width of the box.\n \\dimen2 = .55pt % Thickness of rules\n % The text. (`r' is open on the right, `e' somewhat less so on the left.)\n-\\setbox0 = \\hbox{\\kern-.75pt \\tensf error\\kern-1.5pt}\n+\\setbox0 = \\hbox{\\kern-.75pt \\reducedsf error\\kern-1.5pt}\n %\n \\setbox\\errorbox=\\hbox to \\dimen0{\\hfil\n    \\hsize = \\dimen0 \\advance\\hsize by -5.8pt % Space to left+right.\n@@ -4934,7 +5186,8 @@\n \n \\let\\afterenvbreak = \\aboveenvbreak\n \n-% \\nonarrowing is a flag.  If \"set\", @lisp etc don't narrow margins.\n+% \\nonarrowing is a flag.  If \"set\", @lisp etc don't narrow margins; it will\n+% also clear it, so that its embedded environments do the narrowing again.\n \\let\\nonarrowing=\\relax\n \n % @cartouche ... @end cartouche: draw rectangle w/rounded corners around\n@@ -4971,7 +5224,7 @@\n \t\t\t\t% each corner char, and rule thickness\n   \\normbskip=\\baselineskip \\normpskip=\\parskip \\normlskip=\\lineskip\n   % Flag to tell @lisp, etc., not to narrow margin.\n-  \\let\\nonarrowing=\\comment\n+  \\let\\nonarrowing = t%\n   \\vbox\\bgroup\n       \\baselineskip=0pt\\parskip=0pt\\lineskip=0pt\n       \\carttop\n@@ -5011,11 +5264,11 @@\n   \\parskip = 0pt\n   \\parindent = 0pt\n   \\emergencystretch = 0pt % don't try to avoid overfull boxes\n-  % @cartouche defines \\nonarrowing to inhibit narrowing\n-  % at next level down.\n   \\ifx\\nonarrowing\\relax\n     \\advance \\leftskip by \\lispnarrowing\n     \\exdentamount=\\lispnarrowing\n+  \\else\n+    \\let\\nonarrowing = \\relax\n   \\fi\n   \\let\\exdent=\\nofillexdent\n }\n@@ -5062,11 +5315,10 @@\n %\n \\maketwodispenvs {lisp}{example}{%\n   \\nonfillstart\n-  \\tt\n+  \\tt\\quoteexpand\n   \\let\\kbdfont = \\kbdexamplefont % Allow @kbd to do something special.\n   \\gobble       % eat return\n }\n-\n % @display/@smalldisplay: same as @lisp except keep current font.\n %\n \\makedispenv {display}{%\n@@ -5115,6 +5367,7 @@\n     \\advance\\leftskip by \\lispnarrowing\n     \\advance\\rightskip by \\lispnarrowing\n     \\exdentamount = \\lispnarrowing\n+  \\else\n     \\let\\nonarrowing = \\relax\n   \\fi\n   \\parsearg\\quotationlabel\n@@ -5193,6 +5446,34 @@\n \\newdimen\\tabw \\setbox0=\\hbox{\\tt\\space} \\tabw=8\\wd0 % tab amount\n %\n \\def\\starttabbox{\\setbox0=\\hbox\\bgroup}\n+\n+% Allow an option to not replace quotes with a regular directed right\n+% quote/apostrophe (char 0x27), but instead use the undirected quote\n+% from cmtt (char 0x0d).  The undirected quote is ugly, so don't make it\n+% the default, but it works for pasting with more pdf viewers (at least\n+% evince), the lilypond developers report.  xpdf does work with the\n+% regular 0x27.  \n+% \n+\\def\\codequoteright{%\n+  \\expandafter\\ifx\\csname SETcodequoteundirected\\endcsname\\relax\n+    '%\n+  \\else\n+    \\char'15\n+  \\fi\n+}\n+%\n+% and a similar option for the left quote char vs. a grave accent.\n+% Modern fonts display ASCII 0x60 as a grave accent, so some people like\n+% the code environments to do likewise.\n+% \n+\\def\\codequoteleft{%\n+  \\expandafter\\ifx\\csname SETcodequotebacktick\\endcsname\\relax\n+    `%\n+  \\else\n+    \\char'22\n+  \\fi\n+}\n+%\n \\begingroup\n   \\catcode`\\^^I=\\active\n   \\gdef\\tabexpand{%\n@@ -5205,15 +5486,25 @@\n       \\wd0=\\dimen0 \\box0 \\starttabbox\n     }%\n   }\n+  \\catcode`\\'=\\active\n+  \\gdef\\rquoteexpand{\\catcode\\rquoteChar=\\active \\def'{\\codequoteright}}%\n+  %\n+  \\catcode`\\`=\\active\n+  \\gdef\\lquoteexpand{\\catcode\\lquoteChar=\\active \\def`{\\codequoteleft}}%\n+  %\n+  \\gdef\\quoteexpand{\\rquoteexpand \\lquoteexpand}%\n \\endgroup\n+\n+% start the verbatim environment.\n \\def\\setupverbatim{%\n+  \\let\\nonarrowing = t%\n   \\nonfillstart\n-  \\advance\\leftskip by -\\defbodyindent\n   % Easiest (and conventionally used) font for verbatim\n   \\tt\n   \\def\\par{\\leavevmode\\egroup\\box0\\endgraf}%\n   \\catcode`\\`=\\active\n   \\tabexpand\n+  \\quoteexpand\n   % Respect line breaks,\n   % print special symbols as themselves, and\n   % make each space count\n@@ -5663,7 +5954,6 @@\n     \\spaceisspace\n     %\n     % Append \\endinput to make sure that TeX does not see the ending newline.\n-    %\n     % I've verified that it is necessary both for e-TeX and for ordinary TeX\n     %\t\t\t\t\t\t\t--kasal, 29nov03\n     \\scantokens{#1\\endinput}%\n@@ -5678,8 +5968,19 @@\n \\newcount\\paramno   % Count of parameters\n \\newtoks\\macname    % Macro name\n \\newif\\ifrecursive  % Is it recursive?\n-\\def\\macrolist{}    % List of all defined macros in the form\n-                    % \\do\\macro1\\do\\macro2...\n+\n+% List of all defined macros in the form\n+%    \\definedummyword\\macro1\\definedummyword\\macro2...\n+% Currently is also contains all @aliases; the list can be split\n+% if there is a need.\n+\\def\\macrolist{}\n+\n+% Add the macro to \\macrolist\n+\\def\\addtomacrolist#1{\\expandafter \\addtomacrolistxxx \\csname#1\\endcsname}\n+\\def\\addtomacrolistxxx#1{%\n+     \\toks0 = \\expandafter{\\macrolist\\definedummyword#1}%\n+     \\xdef\\macrolist{\\the\\toks0}%\n+}\n \n % Utility routines.\n % This does \\let #1 = #2, with \\csnames; that is,\n@@ -5777,10 +6078,7 @@\n      \\else \\errmessage{Macro name \\the\\macname\\space already defined}\\fi\n      \\global\\cslet{macsave.\\the\\macname}{\\the\\macname}%\n      \\global\\expandafter\\let\\csname ismacro.\\the\\macname\\endcsname=1%\n-     % Add the macroname to \\macrolist\n-     \\toks0 = \\expandafter{\\macrolist\\do}%\n-     \\xdef\\macrolist{\\the\\toks0\n-       \\expandafter\\noexpand\\csname\\the\\macname\\endcsname}%\n+     \\addtomacrolist{\\the\\macname}%\n   \\fi\n   \\begingroup \\macrobodyctxt\n   \\ifrecursive \\expandafter\\parsermacbody\n@@ -5794,7 +6092,7 @@\n     % Remove the macro name from \\macrolist:\n     \\begingroup\n       \\expandafter\\let\\csname#1\\endcsname \\relax\n-      \\let\\do\\unmacrodo\n+      \\let\\definedummyword\\unmacrodo\n       \\xdef\\macrolist{\\macrolist}%\n     \\endgroup\n   \\else\n@@ -5806,10 +6104,10 @@\n % macro definitions that have been changed to \\relax.\n %\n \\def\\unmacrodo#1{%\n-  \\ifx#1\\relax\n+  \\ifx #1\\relax\n     % remove this\n   \\else\n-    \\noexpand\\do \\noexpand #1%\n+    \\noexpand\\definedummyword \\noexpand#1%\n   \\fi\n }\n \n@@ -5922,30 +6220,11 @@\n % {.  If so it reads up to the closing }, if not, it reads the whole\n % line.  Whatever was read is then fed to the next control sequence\n % as an argument (by \\parsebrace or \\parsearg)\n-\\def\\braceorline#1{\\let\\next=#1\\futurelet\\nchar\\braceorlinexxx}\n+\\def\\braceorline#1{\\let\\macnamexxx=#1\\futurelet\\nchar\\braceorlinexxx}\n \\def\\braceorlinexxx{%\n   \\ifx\\nchar\\bgroup\\else\n     \\expandafter\\parsearg\n-  \\fi \\next}\n-\n-% We want to disable all macros during \\shipout so that they are not\n-% expanded by \\write.\n-\\def\\turnoffmacros{\\begingroup \\def\\do##1{\\let\\noexpand##1=\\relax}%\n-  \\edef\\next{\\macrolist}\\expandafter\\endgroup\\next}\n-\n-% For \\indexnofonts, we need to get rid of all macros, leaving only the\n-% arguments (if present).  Of course this is not nearly correct, but it\n-% is the best we can do for now.  makeinfo does not expand macros in the\n-% argument to @deffn, which ends up writing an index entry, and texindex\n-% isn't prepared for an index sort entry that starts with \\.\n-% \n-% Since macro invocations are followed by braces, we can just redefine them\n-% to take a single TeX argument.  The case of a macro invocation that\n-% goes to end-of-line is not handled.\n-% \n-\\def\\emptyusermacros{\\begingroup\n-  \\def\\do##1{\\let\\noexpand##1=\\noexpand\\asis}%\n-  \\edef\\next{\\macrolist}\\expandafter\\endgroup\\next}\n+  \\fi \\macnamexxx}\n \n \n % @alias.\n@@ -5956,6 +6235,7 @@\n \\def\\aliasyyy #1=#2\\relax{%\n   {%\n     \\expandafter\\let\\obeyedspace=\\empty\n+    \\addtomacrolist{#1}%\n     \\xdef\\next{\\global\\let\\makecsname{#1}=\\makecsname{#2}}%\n   }%\n   \\next\n@@ -6025,7 +6305,6 @@\n   \\iflinks\n     {%\n       \\atdummies  % preserve commands, but don't expand them\n-      \\turnoffactive\n       \\edef\\writexrdef##1##2{%\n \t\\write\\auxfile{@xrdef{#1-% #1 of \\setref, expanded by the \\edef\n \t  ##1}{##2}}% these are parameters of \\writexrdef\n@@ -6110,7 +6389,7 @@\n     % If the user specified the print name (third arg) to the ref,\n     % print it instead of our usual \"Figure 1.2\".\n     \\ifdim\\wd0 = 0pt\n-      \\refx{#1-snt}%\n+      \\refx{#1-snt}{}%\n     \\else\n       \\printedrefname\n     \\fi\n@@ -6540,7 +6819,7 @@\n     % above and below.\n     \\nobreak\\vskip\\parskip\n     \\nobreak\n-    \\line\\bgroup\\hss\n+    \\line\\bgroup\n   \\fi\n   %\n   % Output the image.\n@@ -6553,7 +6832,7 @@\n     \\epsfbox{#1.eps}%\n   \\fi\n   %\n-  \\ifimagevmode \\hss \\egroup \\bigbreak \\fi  % space after the image\n+  \\ifimagevmode \\egroup \\bigbreak \\fi  % space after the image\n \\endgroup}\n \n \n@@ -6693,7 +6972,8 @@\n       % \\floatlabel-lof.  Besides \\floatident, we include the short\n       % caption if specified, else the full caption if specified, else nothing.\n       {%\n-        \\atdummies \\turnoffactive\n+        \\atdummies\n+        %\n         % since we read the caption text in the macro world, where ^^M\n         % is turned into a normal character, we have to scan it back, so\n         % we don't write the literal three characters \"^^M\" into the aux file.\n@@ -6714,8 +6994,9 @@\n   %\n   % place the captured inserts\n   %\n-  % BEWARE: when the floats start float, we have to issue warning whenever an\n-  % insert appears inside a float which could possibly float. --kasal, 26may04\n+  % BEWARE: when the floats start floating, we have to issue warning\n+  % whenever an insert appears inside a float which could possibly\n+  % float. --kasal, 26may04\n   %\n   \\checkinserts\n }\n@@ -7142,35 +7423,43 @@\n % \\otherifyactive is called near the end of this file.\n \\def\\otherifyactive{\\catcode`+=\\other \\catcode`\\_=\\other}\n \n+% Used sometimes to turn off (effectively) the active characters even after\n+% parsing them.\n+\\def\\turnoffactive{%\n+  \\normalturnoffactive\n+  \\otherbackslash\n+}\n+\n \\catcode`\\@=0\n \n % \\backslashcurfont outputs one backslash character in current font,\n % as in \\char`\\\\.\n \\global\\chardef\\backslashcurfont=`\\\\\n \\global\\let\\rawbackslashxx=\\backslashcurfont  % let existing .??s files work\n \n-% \\rawbackslash defines an active \\ to do \\backslashcurfont.\n-% \\otherbackslash defines an active \\ to be a literal `\\' character with\n-% catcode other.\n-{\\catcode`\\\\=\\active\n- @gdef@rawbackslash{@let\\=@backslashcurfont}\n- @gdef@otherbackslash{@let\\=@realbackslash}\n-}\n-\n % \\realbackslash is an actual character `\\' with catcode other, and\n % \\doublebackslash is two of them (for the pdf outlines).\n {\\catcode`\\\\=\\other @gdef@realbackslash{\\} @gdef@doublebackslash{\\\\}}\n \n-% \\normalbackslash outputs one backslash in fixed width font.\n-\\def\\normalbackslash{{\\tt\\backslashcurfont}}\n-\n+% In texinfo, backslash is an active character; it prints the backslash\n+% in fixed width font.\n \\catcode`\\\\=\\active\n+@def@normalbackslash{{@tt@backslashcurfont}}\n+% On startup, @fixbackslash assigns:\n+%  @let \\ = @normalbackslash\n+\n+% \\rawbackslash defines an active \\ to do \\backslashcurfont.\n+% \\otherbackslash defines an active \\ to be a literal `\\' character with\n+% catcode other.\n+@gdef@rawbackslash{@let\\=@backslashcurfont}\n+@gdef@otherbackslash{@let\\=@realbackslash}\n \n-% Used sometimes to turn off (effectively) the active characters\n-% even after parsing them.\n-@def@turnoffactive{%\n+% Same as @turnoffactive except outputs \\ as {\\tt\\char`\\\\} instead of\n+% the literal character `\\'.\n+% \n+@def@normalturnoffactive{%\n+  @let\\=@normalbackslash\n   @let\"=@normaldoublequote\n-  @let\\=@realbackslash\n   @let~=@normaltilde\n   @let^=@normalcaret\n   @let_=@normalunderscore\n@@ -7182,12 +7471,6 @@\n   @unsepspaces\n }\n \n-% Same as @turnoffactive except outputs \\ as {\\tt\\char`\\\\} instead of\n-% the literal character `\\'.  (Thus, \\ is not expandable when this is in\n-% effect.)\n-%\n-@def@normalturnoffactive{@turnoffactive @let\\=@normalbackslash}\n-\n % Make _ and + \\other characters, temporarily.\n % This is canceled by @fixbackslash.\n @otherifyactive\n@@ -7200,7 +7483,7 @@\n @global@let\\ = @eatinput\n \n % On the other hand, perhaps the file did not have a `\\input texinfo'. Then\n-% the first `\\{ in the file would cause an error. This macro tries to fix\n+% the first `\\' in the file would cause an error. This macro tries to fix\n % that, assuming it is called before the first `\\' could plausibly occur.\n % Also turn back on active characters that might appear in the input\n % file name, in case not using a pre-dumped format."}]}