{"sha": "7ba43edaeac497e40774af340e871735c3c3b023", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2JhNDNlZGFlYWM0OTdlNDA3NzRhZjM0MGU4NzE3MzVjM2MzYjAyMw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2014-11-03T20:14:48Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2014-11-03T20:14:48Z"}, "message": "coarray_collectives_14.f90: Fix testcase.\n\n2014-11-03  Tobias Burnus  <burnus@net-b.de>\n\n        * gfortran.dg/coarray_collectives_14.f90: Fix testcase.\n\nFrom-SVN: r217053", "tree": {"sha": "0ae77ae65a35c9af0c796cb9d079f1ffca3f2291", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ae77ae65a35c9af0c796cb9d079f1ffca3f2291"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ba43edaeac497e40774af340e871735c3c3b023", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ba43edaeac497e40774af340e871735c3c3b023", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ba43edaeac497e40774af340e871735c3c3b023", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ba43edaeac497e40774af340e871735c3c3b023/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8bc991d41a1f4869b36282b55519083d9bf39490", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bc991d41a1f4869b36282b55519083d9bf39490", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bc991d41a1f4869b36282b55519083d9bf39490"}], "stats": {"total": 42, "additions": 23, "deletions": 19}, "files": [{"sha": "f442b094c4e7bedebcbc48093782da73b59ea54d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ba43edaeac497e40774af340e871735c3c3b023/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ba43edaeac497e40774af340e871735c3c3b023/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7ba43edaeac497e40774af340e871735c3c3b023", "patch": "@@ -1,3 +1,7 @@\n+2014-11-03  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.dg/coarray_collectives_14.f90: Fix testcase.\n+\n 2014-11-03  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/52769"}, {"sha": "c2f19398a589a7703ceb0584f9d72d48733c180b", "filename": "gcc/testsuite/gfortran.dg/coarray_collectives_14.f90", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ba43edaeac497e40774af340e871735c3c3b023/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_collectives_14.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ba43edaeac497e40774af340e871735c3c3b023/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_collectives_14.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_collectives_14.f90?ref=7ba43edaeac497e40774af340e871735c3c3b023", "patch": "@@ -15,24 +15,24 @@ program test\n   external ext\n \n   type t\n-    procedure(), nopass :: ext\n-    procedure(valid), nopass :: valid\n-    procedure(sub), nopass :: sub\n-    procedure(nonpure), nopass :: nonpure\n-    procedure(arg1), nopass :: arg1\n-    procedure(arg2), nopass :: arg2\n-    procedure(elem), nopass :: elem\n-    procedure(realo), nopass :: realo\n-    procedure(int8), nopass :: int8\n-    procedure(arr), nopass :: arr\n-    procedure(ptr), nopass :: ptr\n-    procedure(alloc), nopass :: alloc\n-    procedure(opt), nopass :: opt\n-    procedure(val), nopass :: val\n-    procedure(async), nopass :: async\n-    procedure(tgt), nopass :: tgt\n-    procedure(char44), nopass :: char44\n-    procedure(char34), nopass :: char34\n+    procedure(), pointer, nopass :: ext\n+    procedure(valid), pointer, nopass :: valid\n+    procedure(sub), pointer, nopass :: sub\n+    procedure(nonpure), pointer, nopass :: nonpure\n+    procedure(arg1), pointer, nopass :: arg1\n+    procedure(arg3), pointer, nopass :: arg3\n+    procedure(elem), pointer, nopass :: elem\n+    procedure(realo), pointer, nopass :: realo\n+    procedure(int8), pointer, nopass :: int8\n+    procedure(arr), pointer, nopass :: arr\n+    procedure(ptr), pointer, nopass :: ptr\n+    procedure(alloc), pointer, nopass :: alloc\n+    procedure(opt), pointer, nopass :: opt\n+    procedure(val), pointer, nopass :: val\n+    procedure(async), pointer, nopass :: async\n+    procedure(tgt), pointer, nopass :: tgt\n+    procedure(char44), pointer, nopass :: char44\n+    procedure(char34), pointer, nopass :: char34\n   end type t\n \n   type(t) :: dt\n@@ -62,7 +62,7 @@ program test\n   call co_reduce(caf, arg3) ! { dg-error \"shall have two arguments\" }\n   call co_reduce(caf, dt%arg3) ! { dg-error \"shall have two arguments\" }\n   call co_reduce(caf, elem) ! { dg-error \"ELEMENTAL non-INTRINSIC procedure 'elem' is not allowed as an actual argument\" }\n-  call co_reduce(caf, dt%elem) ! { dg-error \"ELEMENTAL non-INTRINSIC procedure 'elem' is not allowed as an actual argument\" }\n+  call co_reduce(caf, dt%elem) ! { FIXME: \"ELEMENTAL non-INTRINSIC procedure 'elem' is not allowed as an actual argument\" }\n   call co_reduce(caf, realo) ! { dg-error \"A argument at .1. has type INTEGER.4. but the function passed as OPERATOR at .2. returns REAL.4.\" }\n   call co_reduce(caf, dt%realo) ! { dg-error \"A argument at .1. has type INTEGER.4. but the function passed as OPERATOR at .2. returns REAL.4.\" }\n   call co_reduce(caf, int8) ! { dg-error \"A argument at .1. has type INTEGER.4. but the function passed as OPERATOR at .2. returns INTEGER.8.\" }"}]}