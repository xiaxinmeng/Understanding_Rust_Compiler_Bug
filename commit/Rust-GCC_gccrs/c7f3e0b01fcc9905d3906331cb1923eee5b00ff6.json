{"sha": "c7f3e0b01fcc9905d3906331cb1923eee5b00ff6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdmM2UwYjAxZmNjOTkwNWQzOTA2MzMxY2IxOTIzZWVlNWIwMGZmNg==", "commit": {"author": {"name": "Marek Michalkiewicz", "email": "marekm@amelek.gda.pl", "date": "2002-01-07T15:04:35Z"}, "committer": {"name": "Marek Michalkiewicz", "email": "marekm@gcc.gnu.org", "date": "2002-01-07T15:04:35Z"}, "message": "avr.c (avr_mcu_types): Add new MCU types.\n\n\n\t* config/avr/avr.c (avr_mcu_types): Add new MCU types.\n\t* config/avr/avr.h (CPP_SPEC): Likewise.\n\t(LINK_SPEC): Likewise.\n\t(CRT_BINUTILS_SPECS): Likewise.\n\t* config/avr/t-avr (MULTILIB_MATCHES): Likewise.\n\t* doc/invoke.texi (AVR Options): Document them.\n\nFrom-SVN: r48604", "tree": {"sha": "ba874207dfdb8ff730707f1d5431f251a0d69153", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba874207dfdb8ff730707f1d5431f251a0d69153"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7f3e0b01fcc9905d3906331cb1923eee5b00ff6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7f3e0b01fcc9905d3906331cb1923eee5b00ff6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7f3e0b01fcc9905d3906331cb1923eee5b00ff6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7f3e0b01fcc9905d3906331cb1923eee5b00ff6/comments", "author": null, "committer": null, "parents": [{"sha": "6ba4d630f6bcede0ccfd73baa99c1f964d188d43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba4d630f6bcede0ccfd73baa99c1f964d188d43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ba4d630f6bcede0ccfd73baa99c1f964d188d43"}], "stats": {"total": 52, "additions": 49, "deletions": 3}, "files": [{"sha": "ddfc3e05f176a01baa032df70257bfeb9416ab67", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7f3e0b01fcc9905d3906331cb1923eee5b00ff6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7f3e0b01fcc9905d3906331cb1923eee5b00ff6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c7f3e0b01fcc9905d3906331cb1923eee5b00ff6", "patch": "@@ -1,3 +1,12 @@\n+2002-01-07  Marek Michalkiewicz  <marekm@amelek.gda.pl>\n+\n+\t* config/avr/avr.c (avr_mcu_types): Add new MCU types.\n+\t* config/avr/avr.h (CPP_SPEC): Likewise.\n+\t(LINK_SPEC): Likewise.\n+\t(CRT_BINUTILS_SPECS): Likewise.\n+\t* config/avr/t-avr (MULTILIB_MATCHES): Likewise.\n+\t* doc/invoke.texi (AVR Options): Document them.\n+\n Mon Jan  7 11:59:34 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* unroll.c (copy_loop_body): Always properly update JUMP_LABEL and"}, {"sha": "145751993a80841481002eaaa51bdb21ee340dbc", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7f3e0b01fcc9905d3906331cb1923eee5b00ff6/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7f3e0b01fcc9905d3906331cb1923eee5b00ff6/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=c7f3e0b01fcc9905d3906331cb1923eee5b00ff6", "patch": "@@ -151,15 +151,23 @@ static const struct mcu_type_s avr_mcu_types[] = {\n   { \"avr3\",      AVR3 },\n   { \"atmega103\", AVR3 },\n   { \"atmega603\", AVR3 },\n+  { \"at43usb320\", AVR3 },\n+  { \"at76c711\",  AVR3 },\n     /* Enhanced, <= 8K.  */\n   { \"avr4\",      AVR4 },\n+  { \"atmega8\",   AVR4 },\n   { \"atmega83\",  AVR4 },\n   { \"atmega85\",  AVR4 },\n     /* Enhanced, > 8K.  */\n   { \"avr5\",      AVR5 },\n+  { \"atmega16\",  AVR5 },\n   { \"atmega161\", AVR5 },\n   { \"atmega163\", AVR5 },\n   { \"atmega32\",  AVR5 },\n+  { \"atmega323\", AVR5 },\n+  { \"atmega64\",  AVR5 },\n+  { \"atmega128\", AVR5 },\n+  { \"at43usb355\", AVR5 },\n   { \"at94k\",     AVR5 },\n     /* Assembler only.  */\n   { \"avr1\",      AVR1 },"}, {"sha": "005936ebfea6a139ea31c501809805367ea47ed9", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7f3e0b01fcc9905d3906331cb1923eee5b00ff6/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7f3e0b01fcc9905d3906331cb1923eee5b00ff6/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=c7f3e0b01fcc9905d3906331cb1923eee5b00ff6", "patch": "@@ -2735,13 +2735,21 @@ extern int avr_case_values_threshold;\n %{mmcu=avr3:%(cpp_avr3)} \\\n %{mmcu=atmega603:%(cpp_avr3) -D__AVR_ATmega603__} \\\n %{mmcu=atmega103:%(cpp_avr3) -D__AVR_ATmega103__} \\\n+%{mmcu=at43usb320:%(cpp_avr3) -D__AVR_AT43USB320__} \\\n+%{mmcu=at76c711: %(cpp_avr3) -D__AVR_AT76C711__} \\\n %{mmcu=avr4:%(cpp_avr4)} \\\n+%{mmcu=atmega8:  %(cpp_avr4) -D__AVR_ATmega8__} \\\n %{mmcu=atmega83: %(cpp_avr4) -D__AVR_ATmega83__} \\\n %{mmcu=atmega85: %(cpp_avr4) -D__AVR_ATmega85__} \\\n %{mmcu=avr5:%(cpp_avr5)} \\\n+%{mmcu=atmega16: %(cpp_avr5) -D__AVR_ATmega16__} \\\n %{mmcu=atmega161:%(cpp_avr5) -D__AVR_ATmega161__} \\\n %{mmcu=atmega163:%(cpp_avr5) -D__AVR_ATmega163__} \\\n %{mmcu=atmega32: %(cpp_avr5) -D__AVR_ATmega32__} \\\n+%{mmcu=atmega323:%(cpp_avr5) -D__AVR_ATmega323__} \\\n+%{mmcu=atmega64: %(cpp_avr5) -D__AVR_ATmega64__} \\\n+%{mmcu=atmega128:%(cpp_avr5) -D__AVR_ATmega128__} \\\n+%{mmcu=at43usb355:%(cpp_avr5) -D__AVR_AT43USB355__} \\\n %{mmcu=at94k:    %(cpp_avr5) -D__AVR_AT94K__} \\\n %{mmcu=avr1:%(cpp_avr1)} \\\n %{mmcu=at90s1200:%(cpp_avr1) -D__AVR_AT90S1200__} \\\n@@ -2813,10 +2821,18 @@ extern int avr_case_values_threshold;\n %{!mmcu*:-m avr85xx} \\\n %{mmcu=atmega603:-m avrmega603} \\\n %{mmcu=atmega103:-m avrmega103} \\\n+%{mmcu=at43usb320:-m avr3} \\\n+%{mmcu=at76c711:-m avr3} \\\n+%{mmcu=atmega16:-m avrmega161} \\\n %{mmcu=atmega161:-m avrmega161} \\\n %{mmcu=atmega163:-m avrmega161} \\\n %{mmcu=atmega32:-m avr5} \\\n+%{mmcu=atmega323:-m avr5} \\\n+%{mmcu=atmega64:-m avr5} \\\n+%{mmcu=atmega128:-m avr5} \\\n+%{mmcu=at43usb355:-m avr5} \\\n %{mmcu=at94k:-m avr5} \\\n+%{mmcu=atmega8:-m avr4} \\\n %{mmcu=atmega83:-m avr4} \\\n %{mmcu=atmega85:-m avr4} \\\n %{mmcu=at90s1200|mmcu=attiny1*:-m avr1200} \\\n@@ -2893,11 +2909,19 @@ extern int avr_case_values_threshold;\n %{mmcu=at90s8535:crts8535.o%s} \\\n %{mmcu=atmega103|mmcu=avr3:crtm103.o%s} \\\n %{mmcu=atmega603:crtm603.o%s} \\\n+%{mmcu=at43usb320:crt43320.o%s} \\\n+%{mmcu=at76c711:crt76711.o%s } \\\n+%{mmcu=atmega8:crtm8.o%s} \\\n %{mmcu=atmega83|mmcu=avr4:crtm83.o%s} \\\n %{mmcu=atmega85:crtm85.o%s} \\\n+%{mmcu=atmega16:crtm16.o%s} \\\n %{mmcu=atmega161|mmcu=avr5:crtm161.o%s} \\\n %{mmcu=atmega163:crtm163.o%s} \\\n %{mmcu=atmega32:crtm32.o%s} \\\n+%{mmcu=atmega323:crtm323.o%s} \\\n+%{mmcu=atmega64:crtm64.o%s} \\\n+%{mmcu=atmega128:crtm128.o%s} \\\n+%{mmcu=at43usb355:crt43355.o%s} \\\n %{mmcu=at94k:crtat94k.o%s}\"\n \n #define CPP_AVR1_SPEC \"-D__AVR_ARCH__=1 -D__AVR_ASM_ONLY__ \""}, {"sha": "31f41df410956bb926f85236faf5f46c4d7fbcb1", "filename": "gcc/config/avr/t-avr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7f3e0b01fcc9905d3906331cb1923eee5b00ff6/gcc%2Fconfig%2Favr%2Ft-avr", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7f3e0b01fcc9905d3906331cb1923eee5b00ff6/gcc%2Fconfig%2Favr%2Ft-avr", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Ft-avr?ref=c7f3e0b01fcc9905d3906331cb1923eee5b00ff6", "patch": "@@ -43,8 +43,12 @@ MULTILIB_DIRNAMES = avr2 avr3 avr4 avr5\n # The many avr2 matches are not listed here - this is the default.\n MULTILIB_MATCHES = \\\n \tmmcu?avr3=mmcu?atmega103 mmcu?avr3=mmcu?atmega603 \\\n+\tmmcu?avr3=mmcu?at43usb320 mmcu?avr3=mmcu?at76c711 \\\n \tmmcu?avr4=mmcu?atmega83  mmcu?avr4=mmcu?atmega85  \\\n+\tmmcu?avr4=mmcu?atmega8   mmcu?avr5=mmcu?atmega16  \\\n \tmmcu?avr5=mmcu?atmega161 mmcu?avr5=mmcu?atmega163 \\\n+\tmmcu?avr5=mmcu?atmega64  mmcu?avr5=mmcu?atmega128 \\\n+\tmmcu?avr5=mmcu?at43usb355 mmcu?avr5=mmcu?atmega323 \\\n \tmmcu?avr5=mmcu?atmega32  mmcu?avr5=mmcu?at94k\n \n MULTILIB_EXCEPTIONS ="}, {"sha": "22de537fc4a262f0b46fae844dc82f02cf6ddcdd", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7f3e0b01fcc9905d3906331cb1923eee5b00ff6/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7f3e0b01fcc9905d3906331cb1923eee5b00ff6/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=c7f3e0b01fcc9905d3906331cb1923eee5b00ff6", "patch": "@@ -9233,13 +9233,14 @@ at90s2333, at90s2343, at90s4414, at90s4433, at90s4434, at90s8515,\n at90c8534, at90s8535).\n \n Instruction set avr3 is for the classic AVR core with up to 128K program\n-memory space (MCU types: atmega103, atmega603).\n+memory space (MCU types: atmega103, atmega603, at43usb320, at76c711).\n \n Instruction set avr4 is for the enhanced AVR core with up to 8K program\n-memory space (MCU types: atmega83, atmega85).\n+memory space (MCU types: atmega8, atmega83, atmega85).\n \n Instruction set avr5 is for the enhanced AVR core with up to 128K program\n-memory space (MCU types: atmega161, atmega163, atmega32, at94k).\n+memory space (MCU types: atmega16, atmega161, atmega163, atmega32, atmega323,\n+atmega64, atmega128, at43usb355, at94k).\n \n @item -msize\n @opindex msize"}]}