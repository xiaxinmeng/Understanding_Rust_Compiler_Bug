{"sha": "9b27f1138f0507b4af6d8067686305112eb0485d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIyN2YxMTM4ZjA1MDdiNGFmNmQ4MDY3Njg2MzA1MTEyZWIwNDg1ZA==", "commit": {"author": {"name": "Artemiy Volkov", "email": "artemiyv@acm.org", "date": "2016-05-18T21:52:26Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2016-05-18T21:52:26Z"}, "message": "cplus-dem.c (enum type_kind_t): Add tk_rvalue_reference constant.\n\n        * cplus-dem.c (enum type_kind_t): Add tk_rvalue_reference\n        constant.\n        (demangle_template_value_parm): Handle tk_rvalue_reference\n        type kind.\n        (do_type): Support 'O' type id (rvalue references).\n\n        * testsuite/demangle-expected: Add tests.\n\nFrom-SVN: r236434", "tree": {"sha": "f902a8b1ec7b2b79f69a6468834264f32c5db720", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f902a8b1ec7b2b79f69a6468834264f32c5db720"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b27f1138f0507b4af6d8067686305112eb0485d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b27f1138f0507b4af6d8067686305112eb0485d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b27f1138f0507b4af6d8067686305112eb0485d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b27f1138f0507b4af6d8067686305112eb0485d/comments", "author": null, "committer": null, "parents": [{"sha": "960db8ec97c6b2d8381040f71b5852d1854197da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/960db8ec97c6b2d8381040f71b5852d1854197da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/960db8ec97c6b2d8381040f71b5852d1854197da"}], "stats": {"total": 138, "additions": 136, "deletions": 2}, "files": [{"sha": "25597967b2d7c0d71f10a2274b066b162249bc6d", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b27f1138f0507b4af6d8067686305112eb0485d/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b27f1138f0507b4af6d8067686305112eb0485d/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=9b27f1138f0507b4af6d8067686305112eb0485d", "patch": "@@ -1,3 +1,13 @@\n+2016-05-18  Artemiy Volkov  <artemiyv@acm.org>\n+\n+\t* cplus-dem.c (enum type_kind_t): Add tk_rvalue_reference\n+\tconstant.\n+\t(demangle_template_value_parm): Handle tk_rvalue_reference\n+\ttype kind.\n+\t(do_type): Support 'O' type id (rvalue references).\n+\n+\t* testsuite/demangle-expected: Add tests.\n+\n 2016-05-02  Marcel B\u00f6hme  <boehme.marcel@gmail.com>\n \n \tPR c++/70498"}, {"sha": "d04c32a904a42bcf1906716e3c0e43aec800d76a", "filename": "libiberty/cplus-dem.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b27f1138f0507b4af6d8067686305112eb0485d/libiberty%2Fcplus-dem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b27f1138f0507b4af6d8067686305112eb0485d/libiberty%2Fcplus-dem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcplus-dem.c?ref=9b27f1138f0507b4af6d8067686305112eb0485d", "patch": "@@ -244,6 +244,7 @@ typedef enum type_kind_t\n   tk_none,\n   tk_pointer,\n   tk_reference,\n+  tk_rvalue_reference,\n   tk_integral,\n   tk_bool,\n   tk_char,\n@@ -2042,7 +2043,8 @@ demangle_template_value_parm (struct work_stuff *work, const char **mangled,\n     }\n   else if (tk == tk_real)\n     success = demangle_real_value (work, mangled, s);\n-  else if (tk == tk_pointer || tk == tk_reference)\n+  else if (tk == tk_pointer || tk == tk_reference\n+\t   || tk == tk_rvalue_reference)\n     {\n       if (**mangled == 'Q')\n \tsuccess = demangle_qualified (work, mangled, s,\n@@ -3588,6 +3590,14 @@ do_type (struct work_stuff *work, const char **mangled, string *result)\n \t    tk = tk_reference;\n \t  break;\n \n+\t  /* An rvalue reference type */\n+\tcase 'O':\n+\t  (*mangled)++;\n+\t  string_prepend (&decl, \"&&\");\n+\t  if (tk == tk_none)\n+\t    tk = tk_rvalue_reference;\n+\t  break;\n+\n \t  /* An array */\n \tcase 'A':\n \t  {\n@@ -3645,7 +3655,6 @@ do_type (struct work_stuff *work, const char **mangled, string *result)\n \t  break;\n \n \tcase 'M':\n-\tcase 'O':\n \t  {\n \t    type_quals = TYPE_UNQUALIFIED;\n "}, {"sha": "62ab18ca37dcfe3dde7400ca8d241296be1ab712", "filename": "libiberty/testsuite/demangle-expected", "status": "modified", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b27f1138f0507b4af6d8067686305112eb0485d/libiberty%2Ftestsuite%2Fdemangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b27f1138f0507b4af6d8067686305112eb0485d/libiberty%2Ftestsuite%2Fdemangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fdemangle-expected?ref=9b27f1138f0507b4af6d8067686305112eb0485d", "patch": "@@ -31,6 +31,11 @@ ArrowLine::ArrowheadIntersects(Arrowhead *, BoxObj &, Graphic *)\n ArrowLine::ArrowheadIntersects\n #\n --format=gnu --no-params\n+ArrowheadIntersects__9ArrowLineP9ArrowheadO6BoxObjP7Graphic\n+ArrowLine::ArrowheadIntersects(Arrowhead *, BoxObj &&, Graphic *)\n+ArrowLine::ArrowheadIntersects\n+#\n+--format=gnu --no-params\n AtEnd__13ivRubberGroup\n ivRubberGroup::AtEnd(void)\n ivRubberGroup::AtEnd\n@@ -51,6 +56,11 @@ TextCode::CoreConstDecls(ostream &)\n TextCode::CoreConstDecls\n #\n --format=gnu --no-params\n+CoreConstDecls__8TextCodeO7ostream\n+TextCode::CoreConstDecls(ostream &&)\n+TextCode::CoreConstDecls\n+#\n+--format=gnu --no-params\n Detach__8StateVarP12StateVarView\n StateVar::Detach(StateVarView *)\n StateVar::Detach\n@@ -66,21 +76,41 @@ RelateManip::Effect(ivEvent &)\n RelateManip::Effect\n #\n --format=gnu --no-params\n+Effect__11RelateManipO7ivEvent\n+RelateManip::Effect(ivEvent &&)\n+RelateManip::Effect\n+#\n+--format=gnu --no-params\n FindFixed__FRP4CNetP4CNet\n FindFixed(CNet *&, CNet *)\n FindFixed\n #\n --format=gnu --no-params\n+FindFixed__FOP4CNetP4CNet\n+FindFixed(CNet *&&, CNet *)\n+FindFixed\n+#\n+--format=gnu --no-params\n Fix48_abort__FR8twolongs\n Fix48_abort(twolongs &)\n Fix48_abort\n #\n --format=gnu --no-params\n+Fix48_abort__FO8twolongs\n+Fix48_abort(twolongs &&)\n+Fix48_abort\n+#\n+--format=gnu --no-params\n GetBarInfo__15iv2_6_VScrollerP13ivPerspectiveRiT2\n iv2_6_VScroller::GetBarInfo(ivPerspective *, int &, int &)\n iv2_6_VScroller::GetBarInfo\n #\n --format=gnu --no-params\n+GetBarInfo__15iv2_6_VScrollerP13ivPerspectiveOiT2\n+iv2_6_VScroller::GetBarInfo(ivPerspective *, int &&, int &&)\n+iv2_6_VScroller::GetBarInfo\n+#\n+--format=gnu --no-params\n GetBgColor__C9ivPainter\n ivPainter::GetBgColor(void) const\n ivPainter::GetBgColor\n@@ -986,11 +1016,21 @@ List<VHDLEntity>::Pix::Pix(List<VHDLEntity>::Pix const &)\n List<VHDLEntity>::Pix::Pix\n #\n --format=gnu --no-params\n+__Q2t4List1Z10VHDLEntity3PixOCQ2t4List1Z10VHDLEntity3Pix\n+List<VHDLEntity>::Pix::Pix(List<VHDLEntity>::Pix const &&)\n+List<VHDLEntity>::Pix::Pix\n+#\n+--format=gnu --no-params\n __Q2t4List1Z10VHDLEntity7elementRC10VHDLEntityPT0\n List<VHDLEntity>::element::element(VHDLEntity const &, List<VHDLEntity>::element *)\n List<VHDLEntity>::element::element\n #\n --format=gnu --no-params\n+__Q2t4List1Z10VHDLEntity7elementOC10VHDLEntityPT0\n+List<VHDLEntity>::element::element(VHDLEntity const &&, List<VHDLEntity>::element *)\n+List<VHDLEntity>::element::element\n+#\n+--format=gnu --no-params\n __Q2t4List1Z10VHDLEntity7elementRCQ2t4List1Z10VHDLEntity7element\n List<VHDLEntity>::element::element(List<VHDLEntity>::element const &)\n List<VHDLEntity>::element::element\n@@ -1036,6 +1076,11 @@ PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> >::PixX(PixX<VHDLLibrary, VHD\n PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> >::PixX\n #\n --format=gnu --no-params\n+__t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntityOCt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity\n+PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> >::PixX(PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> > const &&)\n+PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> >::PixX\n+#\n+--format=gnu --no-params\n nextE__C11VHDLLibraryRt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity\n VHDLLibrary::nextE(PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> > &) const\n VHDLLibrary::nextE\n@@ -1261,6 +1306,11 @@ smanip_int::smanip_int(ios &(*)(ios &, int), int)\n smanip_int::smanip_int\n #\n --format=lucid --no-params\n+__ct__10smanip_intFPFO3iosi_O3iosi\n+smanip_int::smanip_int(ios &&(*)(ios &&, int), int)\n+smanip_int::smanip_int\n+#\n+--format=lucid --no-params\n __ct__11fstreambaseFi\n fstreambase::fstreambase(int)\n fstreambase::fstreambase\n@@ -1281,6 +1331,11 @@ smanip_long::smanip_long(ios &(*)(ios &, long), long)\n smanip_long::smanip_long\n #\n --format=lucid --no-params\n+__ct__11smanip_longFPFO3iosl_O3iosl\n+smanip_long::smanip_long(ios &&(*)(ios &&, long), long)\n+smanip_long::smanip_long\n+#\n+--format=lucid --no-params\n __ct__11stdiostreamFP4FILE\n stdiostream::stdiostream(FILE *)\n stdiostream::stdiostream\n@@ -1321,6 +1376,11 @@ foo::foo(foo &)\n foo::foo\n #\n --format=lucid --no-params\n+__ct__3fooFO3foo\n+foo::foo(foo &&)\n+foo::foo\n+#\n+--format=lucid --no-params\n __ct__3fooFi\n foo::foo(int)\n foo::foo\n@@ -1336,6 +1396,11 @@ foo::foo(int, foo &, int, foo &, int, foo &)\n foo::foo\n #\n --format=lucid --no-params\n+__ct__3fooFiO3fooT1T2T1T2\n+foo::foo(int, foo &&, int, foo &&, int, foo &&)\n+foo::foo\n+#\n+--format=lucid --no-params\n __ct__3iosFP9streambuf\n ios::ios(streambuf *)\n ios::ios\n@@ -1811,6 +1876,11 @@ foo(int, foo &, int, foo &, int, foo &)\n foo\n #\n --format=lucid --no-params\n+foo__FiO3fooT1T2T1T2\n+foo(int, foo &&, int, foo &&, int, foo &&)\n+foo\n+#\n+--format=lucid --no-params\n foo___3barFl\n bar::foo_(long)\n bar::foo_\n@@ -2561,6 +2631,11 @@ DListNode<RLabel &>::DListNode(RLabel &, DListNode<RLabel &> *, DListNode<RLabel\n DListNode<RLabel &>::DListNode\n #\n --format=arm --no-params\n+__ct__25DListNode__pt__9_O6RLabelFO6RLabelP25DListNode__pt__9_O6RLabelT2\n+DListNode<RLabel &&>::DListNode(RLabel &&, DListNode<RLabel &&> *, DListNode<RLabel &&> *)\n+DListNode<RLabel &&>::DListNode\n+#\n+--format=arm --no-params\n bar__3fooFiT16FooBar\n foo::bar(int, int, FooBar)\n foo::bar\n@@ -2991,6 +3066,11 @@ DListNode<RLabel &>::DListNode(RLabel &, DListNode<RLabel &> *, DListNode<RLabel\n DListNode<RLabel &>::DListNode\n #\n --format=hp --no-params\n+__ct__9DListNodeXTO6RLabel__FO6RLabelP9DListNodeXTO6RLabel_T2\n+DListNode<RLabel &&>::DListNode(RLabel &&, DListNode<RLabel &&> *, DListNode<RLabel &&> *)\n+DListNode<RLabel &&>::DListNode\n+#\n+--format=hp --no-params\n elem__6vectorXTiUP34__Fi\n vector<int,34U>::elem(int)\n vector<int,34U>::elem\n@@ -3021,16 +3101,31 @@ vector<int,-67,4000U,short &>::elem(int)\n vector<int,-67,4000U,short &>::elem\n #\n --format=hp --no-params\n+elem__6vectorXTiSN67UP4000TOs__Fi\n+vector<int,-67,4000U,short &&>::elem(int)\n+vector<int,-67,4000U,short &&>::elem\n+#\n+--format=hp --no-params\n elem__6vectorXTiSN67TRdTFPv_i__Fi\n vector<int,-67,double &,int (void *)>::elem(int)\n vector<int,-67,double &,int (void *)>::elem\n #\n --format=hp --no-params\n+elem__6vectorXTiSN67TOdTFPv_i__Fi\n+vector<int,-67,double &&,int (void *)>::elem(int)\n+vector<int,-67,double &&,int (void *)>::elem\n+#\n+--format=hp --no-params\n X__6vectorXTiSN67TdTPvUP5TRs\n vector<int,-67,double,void *,5U,short &>::X\n vector<int,-67,double,void *,5U,short &>::X\n #\n --format=hp --no-params\n+X__6vectorXTiSN67TdTPvUP5TOs\n+vector<int,-67,double,void *,5U,short &&>::X\n+vector<int,-67,double,void *,5U,short &&>::X\n+#\n+--format=hp --no-params\n elem__6vectorXTiA3foo__Fi\n vector<int,&foo>::elem(int)\n vector<int,&foo>::elem\n@@ -3071,6 +3166,11 @@ Spec<int,int &,int>::spec(int *)\n Spec<int,int &,int>::spec\n #\n --format=hp --no-params\n+spec__17Spec<#1,#1.&&,#1>XTiTOiTi_FPi\n+Spec<int,int &&,int>::spec(int *)\n+Spec<int,int &&,int>::spec\n+#\n+--format=hp --no-params\n add__XTc_FcT1\n add<char>(char, char)\n add<char>\n@@ -3101,6 +3201,11 @@ C<Test, Test::output> call<Test>(Test &)\n C<Test, Test::output> call<Test>\n #\n --format=gnu --no-params\n+call__H1Z4Test_OX01_t1C2ZX01PMX01FPX01i_vQ2X016output\n+C<Test, Test::output> call<Test>(Test &&)\n+C<Test, Test::output> call<Test>\n+#\n+--format=gnu --no-params\n fn__FPQ21n1cPMQ21n1cFPQ21n1c_i\n fn(n::c *, int (n::c::*)(n::c *))\n fn\n@@ -3126,6 +3231,11 @@ int foo<TA<int const &, NA<9> > >(TA<int const &, NA<9> >)\n int foo<TA<int const &, NA<9> > >\n #\n --format=gnu --no-params\n+foo__H1Zt2TA2ZOCiZt2NA1Ui9_X01_i\n+int foo<TA<int const &&, NA<9> > >(TA<int const &&, NA<9> >)\n+int foo<TA<int const &&, NA<9> > >\n+#\n+--format=gnu --no-params\n foo__H1Zt2TA2ZcZt2NA1Ui20_X01_i\n int foo<TA<char, NA<20> > >(TA<char, NA<20> >)\n int foo<TA<char, NA<20> > >\n@@ -3402,6 +3512,11 @@ int* const volatile restrict _far\n _Z3fooILi2EEvRAplT_Li1E_i\n void foo<2>(int (&) [(2)+(1)])\n foo<2>\n+#\n+--format=gnu-v3 --no-params\n+_Z3fooILi2EEvOAplT_Li1E_i\n+void foo<2>(int (&&) [(2)+(1)])\n+foo<2>\n # \n --format=gnu-v3 --no-params\n _Z1fM1AKFvvE"}]}