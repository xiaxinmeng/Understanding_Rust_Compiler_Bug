{"sha": "b7da27c2e218c1da18cabf5e043a15c849fbfa20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdkYTI3YzJlMjE4YzFkYTE4Y2FiZjVlMDQzYTE1Yzg0OWZiZmEyMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-01-16T22:36:32Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-01-16T22:36:32Z"}, "message": "re PR c++/38877 (Revision 143404 caused ICE on 447.dealII in SPEC CPU 2006)\n\n        PR c++/38877\n        * tree.c (lvalue_p_1): Allow non-fields in COMPONENT_REF.\n        * init.c (build_new): Don't call describable_type unless we\n        have an auto.\n\nFrom-SVN: r143446", "tree": {"sha": "7dc323a49ae46cc57046d24153a6434a68d19682", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7dc323a49ae46cc57046d24153a6434a68d19682"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7da27c2e218c1da18cabf5e043a15c849fbfa20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7da27c2e218c1da18cabf5e043a15c849fbfa20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7da27c2e218c1da18cabf5e043a15c849fbfa20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7da27c2e218c1da18cabf5e043a15c849fbfa20/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "db8470f688f2f2f8ac3be4a971961b76aff7909b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db8470f688f2f2f8ac3be4a971961b76aff7909b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db8470f688f2f2f8ac3be4a971961b76aff7909b"}], "stats": {"total": 49, "additions": 43, "deletions": 6}, "files": [{"sha": "a58d4ac27d503ec28a89a136bb5379b0c94a75a0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7da27c2e218c1da18cabf5e043a15c849fbfa20/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7da27c2e218c1da18cabf5e043a15c849fbfa20/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b7da27c2e218c1da18cabf5e043a15c849fbfa20", "patch": "@@ -1,5 +1,10 @@\n 2009-01-16  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/38877\n+\t* tree.c (lvalue_p_1): Allow non-fields in COMPONENT_REF.\n+\t* init.c (build_new): Don't call describable_type unless we\n+\thave an auto.\n+\n \tPR c++/29470\n \t* pt.c (tsubst_decl) [USING_DECL]: Propagate access flags.\n "}, {"sha": "f2b79f18899aa3978adff3f174303046b9e39457", "filename": "gcc/cp/init.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7da27c2e218c1da18cabf5e043a15c849fbfa20/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7da27c2e218c1da18cabf5e043a15c849fbfa20/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=b7da27c2e218c1da18cabf5e043a15c849fbfa20", "patch": "@@ -2334,11 +2334,10 @@ build_new (tree placement, tree type, tree nelts, tree init,\n   orig_nelts = nelts;\n   orig_init = init;\n \n-  if (nelts == NULL_TREE && init != void_zero_node && list_length (init) == 1\n-      && describable_type (TREE_VALUE (init)))\n+  if (nelts == NULL_TREE && init != void_zero_node && list_length (init) == 1)\n     {\n       tree auto_node = type_uses_auto (type);\n-      if (auto_node)\n+      if (auto_node && describable_type (TREE_VALUE (init)))\n \ttype = do_auto_deduction (type, TREE_VALUE (init), auto_node);\n     }\n "}, {"sha": "04fc7e930aa9b7a3f1dd4bd2dcc58d07eca361cf", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7da27c2e218c1da18cabf5e043a15c849fbfa20/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7da27c2e218c1da18cabf5e043a15c849fbfa20/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=b7da27c2e218c1da18cabf5e043a15c849fbfa20", "patch": "@@ -114,9 +114,11 @@ lvalue_p_1 (tree ref,\n \t;\n       else if (is_overloaded_fn (TREE_OPERAND (ref, 1)))\n \t/* The \"field\" can be a FUNCTION_DECL or an OVERLOAD in some\n-\t   situations.  */\n-\top1_lvalue_kind = lvalue_p_1 (TREE_OPERAND (ref, 1),\n-\t\t\t\t      treat_class_rvalues_as_lvalues);\n+\t   situations.  If we're seeing a COMPONENT_REF, it's a non-static\n+\t   member, so it isn't an lvalue. */\n+\top1_lvalue_kind = clk_none;\n+      else if (TREE_CODE (TREE_OPERAND (ref, 1)) != FIELD_DECL)\n+\t/* This can be IDENTIFIER_NODE in a template.  */;\n       else if (DECL_C_BIT_FIELD (TREE_OPERAND (ref, 1)))\n \t{\n \t  /* Clear the ordinary bit.  If this object was a class"}, {"sha": "9def2a18ce40bde089e4fff8fee1b9f70328c2d0", "filename": "gcc/testsuite/g++.dg/template/lvalue1.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7da27c2e218c1da18cabf5e043a15c849fbfa20/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flvalue1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7da27c2e218c1da18cabf5e043a15c849fbfa20/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flvalue1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flvalue1.C?ref=b7da27c2e218c1da18cabf5e043a15c849fbfa20", "patch": "@@ -0,0 +1,31 @@\n+// PR c++/38877\n+\n+template<class _T1, class _T2>\n+struct pair\n+{\n+  typedef _T1 first_type;\n+  typedef _T2 second_type;\n+  _T1 first;\n+  _T2 second;\n+  pair () : first(), second() { }\n+  pair(const _T1& __a, const _T2& __b)\n+    : first(__a), second(__b) { }\n+};\n+\n+template<class _T1, class _T2>\n+inline pair<_T1, _T2>\n+make_pair(_T1 __x, _T2 __y)\n+{\n+    return pair<_T1, _T2>(__x, __y);\n+}\n+\n+template <int dim> class bar;\n+\n+template <int dim>\n+pair<bar<dim> *, unsigned int>\n+foo (unsigned int position)\n+{  \n+      const pair<int,unsigned int> tmp;\n+      return make_pair (new bar<dim>(tmp.first),\n+                             position);\n+ }"}]}