{"sha": "b06f87c7eb14eb7806cd1fafa779bde8792ed874", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA2Zjg3YzdlYjE0ZWI3ODA2Y2QxZmFmYTc3OWJkZTg3OTJlZDg3NA==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2016-09-30T18:57:49Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2016-09-30T18:57:49Z"}, "message": "configure.ac: Split CHECKING_P into CHECKING_P and ENABLE_EXTRA_CHECKING.\n\n2016-09-30  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        * configure.ac: Split CHECKING_P into CHECKING_P and\n        ENABLE_EXTRA_CHECKING.\n        * configure: Regenerated.\n        * config.in: Adjust commment of CHECKING_P.  Add ENABLE_EXTRA_CHECKING.\n        * common.opt (flag_checking): Use CHECKING_P and ENABLE_EXTRA_CHECKING.\n\nFrom-SVN: r240677", "tree": {"sha": "856b607e7599d46bb6060beeafa9fae010d9de54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/856b607e7599d46bb6060beeafa9fae010d9de54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b06f87c7eb14eb7806cd1fafa779bde8792ed874", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b06f87c7eb14eb7806cd1fafa779bde8792ed874", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b06f87c7eb14eb7806cd1fafa779bde8792ed874", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b06f87c7eb14eb7806cd1fafa779bde8792ed874/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a7d75d596fdcdafb8b680f31438fbf2ebc8aff2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7d75d596fdcdafb8b680f31438fbf2ebc8aff2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7d75d596fdcdafb8b680f31438fbf2ebc8aff2e"}], "stats": {"total": 58, "additions": 39, "deletions": 19}, "files": [{"sha": "83f5420546a1e83ba84b1fe0864d703faa114a83", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b06f87c7eb14eb7806cd1fafa779bde8792ed874/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b06f87c7eb14eb7806cd1fafa779bde8792ed874/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b06f87c7eb14eb7806cd1fafa779bde8792ed874", "patch": "@@ -1,3 +1,11 @@\n+2016-09-30  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* configure.ac: Split CHECKING_P into CHECKING_P and\n+\tENABLE_EXTRA_CHECKING.\n+\t* configure: Regenerated.\n+\t* config.in: Adjust commment of CHECKING_P.  Add ENABLE_EXTRA_CHECKING.\n+\t* common.opt (flag_checking): Use CHECKING_P and ENABLE_EXTRA_CHECKING.\n+\n 2016-09-30  Prasad Ghangal  <prasad.ghangal@gmail.com>\n \n \tPR other/31566"}, {"sha": "3425c19e5141d2614da2d71d07c84ebc2d308449", "filename": "gcc/common.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b06f87c7eb14eb7806cd1fafa779bde8792ed874/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b06f87c7eb14eb7806cd1fafa779bde8792ed874/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=b06f87c7eb14eb7806cd1fafa779bde8792ed874", "patch": "@@ -1038,7 +1038,7 @@ Common Var(flag_check_new)\n Check the return value of new in C++.\n \n fchecking\n-Common Var(flag_checking) Init(CHECKING_P)\n+Common Var(flag_checking) Init(CHECKING_P ? ENABLE_EXTRA_CHECKING ? 2 : 1 : 0)\n Perform internal consistency checkings.\n \n fchecking="}, {"sha": "93a030164999e26b5efbea45a58da4c7292de089", "filename": "gcc/config.in", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b06f87c7eb14eb7806cd1fafa779bde8792ed874/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b06f87c7eb14eb7806cd1fafa779bde8792ed874/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=b06f87c7eb14eb7806cd1fafa779bde8792ed874", "patch": "@@ -30,14 +30,20 @@\n #endif\n \n \n-/* Define to 1 if you want more run-time sanity checks. This one gets a grab\n-   bag of miscellaneous but relatively cheap checks. Define to 2 if you want\n-   also extra run-time checking that might affect code generation. */\n+/* Define to 0/1 if you want more run-time sanity checks. This one gets a grab\n+   bag of miscellaneous but relatively cheap checks. */\n #ifndef USED_FOR_TARGET\n #undef CHECKING_P\n #endif\n \n \n+/* Define to 0/1 if you want also extra run-time checking that might affect\n+   code generation. */\n+#ifndef USED_FOR_TARGET\n+#undef ENABLE_EXTRA_CHECKING\n+#endif\n+\n+\n /* Define 0/1 to force the choice for exception handling model. */\n #ifndef USED_FOR_TARGET\n #undef CONFIG_SJLJ_EXCEPTIONS"}, {"sha": "2503ba97f74ec83d8b31cd2bf639e5b8ae818aa4", "filename": "gcc/configure", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b06f87c7eb14eb7806cd1fafa779bde8792ed874/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b06f87c7eb14eb7806cd1fafa779bde8792ed874/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=b06f87c7eb14eb7806cd1fafa779bde8792ed874", "patch": "@@ -7135,20 +7135,23 @@ IFS=\"$ac_save_IFS\"\n \n nocommon_flag=\"\"\n if test x$ac_checking != x ; then\n-  if test x$ac_extra_checking != x ; then\n-    ac_checking=2\n-  fi\n \n-cat >>confdefs.h <<_ACEOF\n-#define CHECKING_P $ac_checking\n-_ACEOF\n+$as_echo \"#define CHECKING_P 1\" >>confdefs.h\n \n   nocommon_flag=-fno-common\n else\n   $as_echo \"#define CHECKING_P 0\" >>confdefs.h\n \n fi\n \n+if test x$ac_extra_checking != x ; then\n+\n+$as_echo \"#define ENABLE_EXTRA_CHECKING 1\" >>confdefs.h\n+\n+else\n+  $as_echo \"#define ENABLE_EXTRA_CHECKING 0\" >>confdefs.h\n+\n+fi\n if test x$ac_df_checking != x ; then\n \n $as_echo \"#define ENABLE_DF_CHECKING 1\" >>confdefs.h\n@@ -18476,7 +18479,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18479 \"configure\"\n+#line 18482 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18582,7 +18585,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18585 \"configure\"\n+#line 18588 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "fa789d529d7fe7b2b29a93a436a2b2300df526d7", "filename": "gcc/configure.ac", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b06f87c7eb14eb7806cd1fafa779bde8792ed874/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b06f87c7eb14eb7806cd1fafa779bde8792ed874/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=b06f87c7eb14eb7806cd1fafa779bde8792ed874", "patch": "@@ -579,18 +579,21 @@ IFS=\"$ac_save_IFS\"\n \n nocommon_flag=\"\"\n if test x$ac_checking != x ; then\n-  if test x$ac_extra_checking != x ; then\n-    ac_checking=2\n-  fi\n-  AC_DEFINE_UNQUOTED(CHECKING_P, $ac_checking,\n-[Define to 1 if you want more run-time sanity checks.  This one gets a grab\n-   bag of miscellaneous but relatively cheap checks.  Define to 2 if you want\n-   also extra run-time checking that might affect code generation.])\n+  AC_DEFINE(CHECKING_P, 1,\n+[Define to 0/1 if you want more run-time sanity checks.  This one gets a grab\n+bag of miscellaneous but relatively cheap checks.])\n   nocommon_flag=-fno-common\n else\n   AC_DEFINE(CHECKING_P, 0)\n fi\n AC_SUBST(nocommon_flag)\n+if test x$ac_extra_checking != x ; then\n+  AC_DEFINE(ENABLE_EXTRA_CHECKING, 1,\n+[Define to 0/1 if you want extra run-time checking that might affect code\n+generation.])\n+else\n+  AC_DEFINE(ENABLE_EXTRA_CHECKING, 0)\n+fi\n if test x$ac_df_checking != x ; then\n   AC_DEFINE(ENABLE_DF_CHECKING, 1,\n [Define if you want more run-time sanity checks for dataflow.])"}]}