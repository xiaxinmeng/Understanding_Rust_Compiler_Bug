{"sha": "b5028f5e8b688acb83c4052a3bf4147c174473c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjUwMjhmNWU4YjY4OGFjYjgzYzQwNTJhM2JmNDE0N2MxNzQ0NzNjMA==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2002-08-02T16:10:12Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-08-02T16:10:12Z"}, "message": "ctype_inline.h (is): Don't offset _M_table.\n\n\n2002-08-02 Danny Smith  <dannysmith@users.sourceforge.net>\n\n\t* config/os/newlib/ctype_inline.h (is): Don't offset _M_table.\n\t(scan_is): Use this->is.\n\t(scan_not): Likewise.\n\nFrom-SVN: r55989", "tree": {"sha": "420315ba2055cc3ee53561772cfab3f8e90c117f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/420315ba2055cc3ee53561772cfab3f8e90c117f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5028f5e8b688acb83c4052a3bf4147c174473c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5028f5e8b688acb83c4052a3bf4147c174473c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5028f5e8b688acb83c4052a3bf4147c174473c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5028f5e8b688acb83c4052a3bf4147c174473c0/comments", "author": null, "committer": null, "parents": [{"sha": "49bc23b7f971a6a8b24d9bfec359e837b069a8d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49bc23b7f971a6a8b24d9bfec359e837b069a8d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49bc23b7f971a6a8b24d9bfec359e837b069a8d7"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "afd67a16b1d6c5962a632e722c8cbd62b28595ae", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5028f5e8b688acb83c4052a3bf4147c174473c0/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5028f5e8b688acb83c4052a3bf4147c174473c0/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b5028f5e8b688acb83c4052a3bf4147c174473c0", "patch": "@@ -1,3 +1,9 @@\n+2002-08-02 Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\t* config/os/newlib/ctype_inline.h (is): Don't offset _M_table.\n+\t(scan_is): Use this->is.\n+\t(scan_not): Likewise.\n+\n 2002-08-02  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tRevert PR libstdc++/6594"}, {"sha": "8381aced9cd3399bd19d034ab442ff73d71f4490", "filename": "libstdc++-v3/config/os/newlib/ctype_inline.h", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5028f5e8b688acb83c4052a3bf4147c174473c0/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5028f5e8b688acb83c4052a3bf4147c174473c0/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fnewlib%2Fctype_inline.h?ref=b5028f5e8b688acb83c4052a3bf4147c174473c0", "patch": "@@ -37,23 +37,22 @@\n   bool\n   ctype<char>::\n   is(mask __m, char __c) const\n-  { return (_M_table + 1)[static_cast<unsigned char>(__c)] & __m; }\n+  { return _M_table[static_cast<unsigned char>(__c)] & __m; }\n \n   const char*\n   ctype<char>::\n   is(const char* __low, const char* __high, mask* __vec) const\n   {\n     while (__low < __high)\n-      *__vec++ = (_M_table + 1)[static_cast<unsigned char>(*__low++)];\n+      *__vec++ = _M_table[static_cast<unsigned char>(*__low++)];\n     return __high;\n   }\n \n   const char*\n   ctype<char>::\n   scan_is(mask __m, const char* __low, const char* __high) const \n   {\n-    while (__low < __high \n-\t   && !((_M_table + 1)[static_cast<unsigned char>(*__low)] & __m))\n+    while (__low < __high && !this->is(__m, *__low))\n       ++__low;\n     return __low;\n   }\n@@ -62,8 +61,7 @@\n   ctype<char>::\n   scan_not(mask __m, const char* __low, const char* __high) const\n   {\n-    while (__low < __high \n-\t   && ((_M_table + 1)[static_cast<unsigned char>(*__low)] & __m) != 0)\n+    while (__low < __high && this->is(__m, *__low) != 0)\n       ++__low;\n     return __low;\n   }"}]}