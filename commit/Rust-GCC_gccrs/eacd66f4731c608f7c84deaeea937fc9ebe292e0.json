{"sha": "eacd66f4731c608f7c84deaeea937fc9ebe292e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFjZDY2ZjQ3MzFjNjA4ZjdjODRkZWFlZWE5MzdmYzllYmUyOTJlMA==", "commit": {"author": {"name": "Craig Burley", "email": "burley@gnu.org", "date": "1998-09-05T10:43:42Z"}, "committer": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-09-05T10:43:42Z"}, "message": "lang-options.h: Convert to wrap option and doc string in a new macro invocation...\n\nFri Sep  4 18:35:52 1998  Craig Burley  <burley@gnu.org>\n\t* lang-options.h: Convert to wrap option and doc string\n\tin a new macro invocation, FTNOPT, so the nearly identical\n\tlist can be used in FSF-g77.\n\nFrom-SVN: r22250", "tree": {"sha": "190a12ba218a73d34e3cac6bbad68ebc29d61cfc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/190a12ba218a73d34e3cac6bbad68ebc29d61cfc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eacd66f4731c608f7c84deaeea937fc9ebe292e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eacd66f4731c608f7c84deaeea937fc9ebe292e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eacd66f4731c608f7c84deaeea937fc9ebe292e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eacd66f4731c608f7c84deaeea937fc9ebe292e0/comments", "author": null, "committer": null, "parents": [{"sha": "29382d668f42f548224ad463e1561badbb20fb85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29382d668f42f548224ad463e1561badbb20fb85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29382d668f42f548224ad463e1561badbb20fb85"}], "stats": {"total": 252, "additions": 132, "deletions": 120}, "files": [{"sha": "835b1257f7b65379cffe661cba0ae2cd7c9db390", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eacd66f4731c608f7c84deaeea937fc9ebe292e0/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eacd66f4731c608f7c84deaeea937fc9ebe292e0/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=eacd66f4731c608f7c84deaeea937fc9ebe292e0", "patch": "@@ -7,6 +7,12 @@ Fri Sep  4 19:53:34 1998  Craig Burley  <burley@gnu.org>\n \n \t* intdoc.in: Minor editorial tweaks.\n \n+Fri Sep  4 18:35:52 1998  Craig Burley  <burley@gnu.org>\n+\n+\t* lang-options.h: Convert to wrap option and doc string\n+\tin a new macro invocation, FTNOPT, so the nearly identical\n+\tlist can be used in FSF-g77.\n+\n Fri Sep  4 18:35:52 1998  Craig Burley  <burley@gnu.org>\n \n \t* Makefile.in (fini.o): Don't define USE_HCONFIG here."}, {"sha": "0fa927a2156dfbf55fc89b427246744339d9a238", "filename": "gcc/f/lang-options.h", "status": "modified", "additions": 126, "deletions": 120, "changes": 246, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eacd66f4731c608f7c84deaeea937fc9ebe292e0/gcc%2Ff%2Flang-options.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eacd66f4731c608f7c84deaeea937fc9ebe292e0/gcc%2Ff%2Flang-options.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flang-options.h?ref=eacd66f4731c608f7c84deaeea937fc9ebe292e0", "patch": "@@ -28,131 +28,137 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \t\t   overflowing some old compiler's tables, etc. */\n \n DEFINE_LANG_NAME (\"Fortran\")\n-     \n-  { \"-fversion\", \"Print g77-specific compiler version info, run internal tests\" },\n-  { \"-fnull-version\", \"\" },\n+\n+/* Use of FTNOPT makes tracking changes between FSF-g77 and egcs-g77\n+   easier, since FSF-gcc doesn't support doc strings.  */\n+#define FTNOPT(opt,doc) { opt, doc },\n+\n+FTNOPT( \"-fversion\", \"Print g77-specific compiler version info, run internal tests\" )\n+FTNOPT( \"-fnull-version\", \"\" )\n /*\"-fident\",*/\n /*\"-fno-ident\",*/\n-  { \"-ff66\", \"Program is written in typical FORTRAN 66 dialect\" },\n-  { \"-fno-f66\", \"\" },\n-  { \"-ff77\", \"Program is written in typical Unix f77 dialect\" },\n-  { \"-fno-f77\", \"Program does not use Unix-f77 dialectal features\" },\n-  { \"-ff90\", \"Program is written in Fortran-90-ish dialect\" },\n-  { \"-fno-f90\", \"\" },\n-  { \"-fautomatic\", \"\" },\n-  { \"-fno-automatic\", \"Treat local vars and COMMON blocks as if they were named in SAVE statements\" },\n-  { \"-fdollar-ok\", \"Allow $ in symbol names\" },\n-  { \"-fno-dollar-ok\", \"\" },\n-  { \"-ff2c\", \"\" },\n-  { \"-fno-f2c\", \"f2c-compatible code need not be generated\" },\n-  { \"-ff2c-library\", \"\" },\n-  { \"-fno-f2c-library\", \"Unsupported; do not generate libf2c-calling code\" },\n-  { \"-ffree-form\", \"Program is written in Fortran-90-ish free form\" },\n-  { \"-fno-free-form\", \"\" },\n-  { \"-ffixed-form\", \"\" },\n-  { \"-fno-fixed-form\", \"\" },\n-  { \"-fpedantic\", \"Warn about use of (only a few for now) Fortran extensions\" },\n-  { \"-fno-pedantic\", \"\" },\n-  { \"-fvxt\", \"Program is written in VXT (Digital-like) FORTRAN\" },\n-  { \"-fno-vxt\", \"\" },\n-  { \"-fugly\", \"Obsolete; allow certain ugly features\" },\n-  { \"-fno-ugly\", \"\" },\n-  { \"-fugly-args\", \"\" },\n-  { \"-fno-ugly-args\", \"Hollerith and typeless constants not passed as arguments\" },\n-  { \"-fugly-assign\", \"Allow ordinary copying of ASSIGN'ed vars\" },\n-  { \"-fno-ugly-assign\", \"\" },\n-  { \"-fugly-assumed\", \"Dummy array dimensioned to (1) is assumed-size\" },\n-  { \"-fno-ugly-assumed\", \"\" },\n-  { \"-fugly-comma\", \"Trailing comma in procedure call denotes null argument\" },\n-  { \"-fno-ugly-comma\", \"\" },\n-  { \"-fugly-complex\", \"Allow REAL(Z) and AIMAG(Z) given DOUBLE COMPLEX Z\" },\n-  { \"-fno-ugly-complex\", \"\" },\n-  { \"-fugly-init\", \"\" },\n-  { \"-fno-ugly-init\", \"Initialization via DATA and PARAMETER is type-compatible\" },\n-  { \"-fugly-logint\", \"Allow INTEGER and LOGICAL interchangeability\" },\n-  { \"-fno-ugly-logint\", \"\" },\n-  { \"-fxyzzy\", \"Print internal debugging-related info\" },\n-  { \"-fno-xyzzy\", \"\" },\n-  { \"-finit-local-zero\", \"Initialize local vars and arrays to zero\" },\n-  { \"-fno-init-local-zero\", \"\" },\n-  { \"-fbackslash\", \"\" },\n-  { \"-fno-backslash\", \"Backslashes in character/hollerith constants not special (C-style)\" },\n-  { \"-femulate-complex\", \"\" },\n-  { \"-fno-emulate-complex\", \"Have compiler back end cope with COMPLEX arithmetic\" },\n-  { \"-funderscoring\", \"\" },\n-  { \"-fno-underscoring\", \"Disable the appending of underscores to externals\" },\n-  { \"-fsecond-underscore\", \"\" },\n-  { \"-fno-second-underscore\", \"Never append a second underscore to externals\" },\n-  { \"-fintrin-case-initcap\", \"Intrinsics spelled as e.g. SqRt\" },\n-  { \"-fintrin-case-upper\", \"Intrinsics in uppercase\" },\n-  { \"-fintrin-case-lower\", \"\" },\n-  { \"-fintrin-case-any\", \"Intrinsics letters in arbitrary cases\" },\n-  { \"-fmatch-case-initcap\", \"Language keywords spelled as e.g. IOStat\" },\n-  { \"-fmatch-case-upper\", \"Language keywords in uppercase\" },\n-  { \"-fmatch-case-lower\", \"\" },\n-  { \"-fmatch-case-any\", \"Language keyword letters in arbitrary cases\" },\n-  { \"-fsource-case-upper\", \"Internally convert most source to uppercase\" },\n-  { \"-fsource-case-lower\", \"\" },\n-  { \"-fsource-case-preserve\", \"Internally preserve source case\" },\n-  { \"-fsymbol-case-initcap\", \"Symbol names spelled in mixed case\" },\n-  { \"-fsymbol-case-upper\", \"Symbol names in uppercase\" },\n-  { \"-fsymbol-case-lower\", \"Symbol names in lowercase\" },\n-  { \"-fsymbol-case-any\", \"\" },\n-  { \"-fcase-strict-upper\", \"Program written in uppercase\" },\n-  { \"-fcase-strict-lower\", \"Program written in lowercase\" },\n-  { \"-fcase-initcap\", \"Program written in strict mixed-case\" },\n-  { \"-fcase-upper\", \"Compile as if program written in uppercase\" },\n-  { \"-fcase-lower\", \"Compile as if program written in lowercase\" },\n-  { \"-fcase-preserve\", \"Preserve all spelling (case) used in program\" },\n-  { \"-fbadu77-intrinsics-delete\", \"Delete libU77 intrinsics with bad interfaces\" },\n-  { \"-fbadu77-intrinsics-disable\", \"Disable libU77 intrinsics with bad interfaces\" },\n-  { \"-fbadu77-intrinsics-enable\", \"\" },\n-  { \"-fbadu77-intrinsics-hide\", \"Hide libU77 intrinsics with bad interfaces\" },\n-  { \"-ff2c-intrinsics-delete\", \"Delete non-FORTRAN-77 intrinsics f2c supports\" },\n-  { \"-ff2c-intrinsics-disable\", \"Disable non-FORTRAN-77 intrinsics f2c supports\" },\n-  { \"-ff2c-intrinsics-enable\", \"\" },\n-  { \"-ff2c-intrinsics-hide\", \"Hide non-FORTRAN-77 intrinsics f2c supports\" },\n-  { \"-ff90-intrinsics-delete\", \"Delete non-FORTRAN-77 intrinsics F90 supports\" },\n-  { \"-ff90-intrinsics-disable\", \"Disable non-FORTRAN-77 intrinsics F90 supports\" },\n-  { \"-ff90-intrinsics-enable\", \"\" },\n-  { \"-ff90-intrinsics-hide\", \"Hide non-FORTRAN-77 intrinsics F90 supports\" },\n-  { \"-fgnu-intrinsics-delete\", \"Delete non-FORTRAN-77 intrinsics g77 supports\" },\n-  { \"-fgnu-intrinsics-disable\", \"Disable non-FORTRAN 77 intrinsics F90 supports\" },\n-  { \"-fgnu-intrinsics-enable\", \"\" },\n-  { \"-fgnu-intrinsics-hide\", \"Hide non-FORTRAN 77 intrinsics F90 supports\" },\n-  { \"-fmil-intrinsics-delete\", \"Delete MIL-STD 1753 intrinsics\" },\n-  { \"-fmil-intrinsics-disable\", \"Disable MIL-STD 1753 intrinsics\" },\n-  { \"-fmil-intrinsics-enable\", \"\" },\n-  { \"-fmil-intrinsics-hide\", \"Hide MIL-STD 1753 intrinsics\" },\n-  { \"-funix-intrinsics-delete\", \"Delete libU77 intrinsics\" },\n-  { \"-funix-intrinsics-disable\", \"Disable libU77 intrinsics\" },\n-  { \"-funix-intrinsics-enable\", \"\" },\n-  { \"-funix-intrinsics-hide\", \"Hide libU77 intrinsics\" },\n-  { \"-fvxt-intrinsics-delete\", \"Delete non-FORTRAN-77 intrinsics VXT FORTRAN supports\" },\n-  { \"-fvxt-intrinsics-disable\", \"Disable non-FORTRAN-77 intrinsics VXT FORTRAN supports\" },\n-  { \"-fvxt-intrinsics-enable\", \"\" },\n-  { \"-fvxt-intrinsics-hide\", \"Hide non-FORTRAN-77 intrinsics VXT FORTRAN supports\" },\n-  { \"-fzeros\", \"Treat initial values of 0 like non-zero values\" },\n-  { \"-fno-zeros\", \"\" },\n-  { \"-fdebug-kludge\", \"Emit special debugging information for COMMON and EQUIVALENCE\" },\n-  { \"-fno-debug-kludge\", \"\" },\n-  { \"-fonetrip\", \"Take at least one trip through each iterative DO loop\" },\n-  { \"-fno-onetrip\", \"\" },\n-  { \"-fsilent\", \"\" },\n-  { \"-fno-silent\", \"Print names of program units as they are compiled\" },\n-  { \"-fglobals\", \"\" },\n-  { \"-fno-globals\", \"Disable fatal diagnostics about inter-procedural problems\" },\n-  { \"-ftypeless-boz\", \"Make prefix-radix non-decimal constants be typeless\" },\n-  { \"-fno-typeless-boz\", \"\" },\n-  { \"-Wglobals\", \"\" },\n-  { \"-Wno-globals\", \"Disable warnings about inter-procedural problems\" },\n+FTNOPT( \"-ff66\", \"Program is written in typical FORTRAN 66 dialect\" )\n+FTNOPT( \"-fno-f66\", \"\" )\n+FTNOPT( \"-ff77\", \"Program is written in typical Unix f77 dialect\" )\n+FTNOPT( \"-fno-f77\", \"Program does not use Unix-f77 dialectal features\" )\n+FTNOPT( \"-ff90\", \"Program is written in Fortran-90-ish dialect\" )\n+FTNOPT( \"-fno-f90\", \"\" )\n+FTNOPT( \"-fautomatic\", \"\" )\n+FTNOPT( \"-fno-automatic\", \"Treat local vars and COMMON blocks as if they were named in SAVE statements\" )\n+FTNOPT( \"-fdollar-ok\", \"Allow $ in symbol names\" )\n+FTNOPT( \"-fno-dollar-ok\", \"\" )\n+FTNOPT( \"-ff2c\", \"\" )\n+FTNOPT( \"-fno-f2c\", \"f2c-compatible code need not be generated\" )\n+FTNOPT( \"-ff2c-library\", \"\" )\n+FTNOPT( \"-fno-f2c-library\", \"Unsupported; do not generate libf2c-calling code\" )\n+FTNOPT( \"-ffree-form\", \"Program is written in Fortran-90-ish free form\" )\n+FTNOPT( \"-fno-free-form\", \"\" )\n+FTNOPT( \"-ffixed-form\", \"\" )\n+FTNOPT( \"-fno-fixed-form\", \"\" )\n+FTNOPT( \"-fpedantic\", \"Warn about use of (only a few for now) Fortran extensions\" )\n+FTNOPT( \"-fno-pedantic\", \"\" )\n+FTNOPT( \"-fvxt\", \"Program is written in VXT (Digital-like) FORTRAN\" )\n+FTNOPT( \"-fno-vxt\", \"\" )\n+FTNOPT( \"-fugly\", \"Obsolete; allow certain ugly features\" )\n+FTNOPT( \"-fno-ugly\", \"\" )\n+FTNOPT( \"-fugly-args\", \"\" )\n+FTNOPT( \"-fno-ugly-args\", \"Hollerith and typeless constants not passed as arguments\" )\n+FTNOPT( \"-fugly-assign\", \"Allow ordinary copying of ASSIGN'ed vars\" )\n+FTNOPT( \"-fno-ugly-assign\", \"\" )\n+FTNOPT( \"-fugly-assumed\", \"Dummy array dimensioned to (1) is assumed-size\" )\n+FTNOPT( \"-fno-ugly-assumed\", \"\" )\n+FTNOPT( \"-fugly-comma\", \"Trailing comma in procedure call denotes null argument\" )\n+FTNOPT( \"-fno-ugly-comma\", \"\" )\n+FTNOPT( \"-fugly-complex\", \"Allow REAL(Z) and AIMAG(Z) given DOUBLE COMPLEX Z\" )\n+FTNOPT( \"-fno-ugly-complex\", \"\" )\n+FTNOPT( \"-fugly-init\", \"\" )\n+FTNOPT( \"-fno-ugly-init\", \"Initialization via DATA and PARAMETER is type-compatible\" )\n+FTNOPT( \"-fugly-logint\", \"Allow INTEGER and LOGICAL interchangeability\" )\n+FTNOPT( \"-fno-ugly-logint\", \"\" )\n+FTNOPT( \"-fxyzzy\", \"Print internal debugging-related info\" )\n+FTNOPT( \"-fno-xyzzy\", \"\" )\n+FTNOPT( \"-finit-local-zero\", \"Initialize local vars and arrays to zero\" )\n+FTNOPT( \"-fno-init-local-zero\", \"\" )\n+FTNOPT( \"-fbackslash\", \"\" )\n+FTNOPT( \"-fno-backslash\", \"Backslashes in character/hollerith constants not special (C-style)\" )\n+FTNOPT( \"-femulate-complex\", \"\" )\n+FTNOPT( \"-fno-emulate-complex\", \"Have compiler back end cope with COMPLEX arithmetic\" )\n+FTNOPT( \"-funderscoring\", \"\" )\n+FTNOPT( \"-fno-underscoring\", \"Disable the appending of underscores to externals\" )\n+FTNOPT( \"-fsecond-underscore\", \"\" )\n+FTNOPT( \"-fno-second-underscore\", \"Never append a second underscore to externals\" )\n+FTNOPT( \"-fintrin-case-initcap\", \"Intrinsics spelled as e.g. SqRt\" )\n+FTNOPT( \"-fintrin-case-upper\", \"Intrinsics in uppercase\" )\n+FTNOPT( \"-fintrin-case-lower\", \"\" )\n+FTNOPT( \"-fintrin-case-any\", \"Intrinsics letters in arbitrary cases\" )\n+FTNOPT( \"-fmatch-case-initcap\", \"Language keywords spelled as e.g. IOStat\" )\n+FTNOPT( \"-fmatch-case-upper\", \"Language keywords in uppercase\" )\n+FTNOPT( \"-fmatch-case-lower\", \"\" )\n+FTNOPT( \"-fmatch-case-any\", \"Language keyword letters in arbitrary cases\" )\n+FTNOPT( \"-fsource-case-upper\", \"Internally convert most source to uppercase\" )\n+FTNOPT( \"-fsource-case-lower\", \"\" )\n+FTNOPT( \"-fsource-case-preserve\", \"Internally preserve source case\" )\n+FTNOPT( \"-fsymbol-case-initcap\", \"Symbol names spelled in mixed case\" )\n+FTNOPT( \"-fsymbol-case-upper\", \"Symbol names in uppercase\" )\n+FTNOPT( \"-fsymbol-case-lower\", \"Symbol names in lowercase\" )\n+FTNOPT( \"-fsymbol-case-any\", \"\" )\n+FTNOPT( \"-fcase-strict-upper\", \"Program written in uppercase\" )\n+FTNOPT( \"-fcase-strict-lower\", \"Program written in lowercase\" )\n+FTNOPT( \"-fcase-initcap\", \"Program written in strict mixed-case\" )\n+FTNOPT( \"-fcase-upper\", \"Compile as if program written in uppercase\" )\n+FTNOPT( \"-fcase-lower\", \"Compile as if program written in lowercase\" )\n+FTNOPT( \"-fcase-preserve\", \"Preserve all spelling (case) used in program\" )\n+FTNOPT( \"-fbadu77-intrinsics-delete\", \"Delete libU77 intrinsics with bad interfaces\" )\n+FTNOPT( \"-fbadu77-intrinsics-disable\", \"Disable libU77 intrinsics with bad interfaces\" )\n+FTNOPT( \"-fbadu77-intrinsics-enable\", \"\" )\n+FTNOPT( \"-fbadu77-intrinsics-hide\", \"Hide libU77 intrinsics with bad interfaces\" )\n+FTNOPT( \"-ff2c-intrinsics-delete\", \"Delete non-FORTRAN-77 intrinsics f2c supports\" )\n+FTNOPT( \"-ff2c-intrinsics-disable\", \"Disable non-FORTRAN-77 intrinsics f2c supports\" )\n+FTNOPT( \"-ff2c-intrinsics-enable\", \"\" )\n+FTNOPT( \"-ff2c-intrinsics-hide\", \"Hide non-FORTRAN-77 intrinsics f2c supports\" )\n+FTNOPT( \"-ff90-intrinsics-delete\", \"Delete non-FORTRAN-77 intrinsics F90 supports\" )\n+FTNOPT( \"-ff90-intrinsics-disable\", \"Disable non-FORTRAN-77 intrinsics F90 supports\" )\n+FTNOPT( \"-ff90-intrinsics-enable\", \"\" )\n+FTNOPT( \"-ff90-intrinsics-hide\", \"Hide non-FORTRAN-77 intrinsics F90 supports\" )\n+FTNOPT( \"-fgnu-intrinsics-delete\", \"Delete non-FORTRAN-77 intrinsics g77 supports\" )\n+FTNOPT( \"-fgnu-intrinsics-disable\", \"Disable non-FORTRAN 77 intrinsics F90 supports\" )\n+FTNOPT( \"-fgnu-intrinsics-enable\", \"\" )\n+FTNOPT( \"-fgnu-intrinsics-hide\", \"Hide non-FORTRAN 77 intrinsics F90 supports\" )\n+FTNOPT( \"-fmil-intrinsics-delete\", \"Delete MIL-STD 1753 intrinsics\" )\n+FTNOPT( \"-fmil-intrinsics-disable\", \"Disable MIL-STD 1753 intrinsics\" )\n+FTNOPT( \"-fmil-intrinsics-enable\", \"\" )\n+FTNOPT( \"-fmil-intrinsics-hide\", \"Hide MIL-STD 1753 intrinsics\" )\n+FTNOPT( \"-funix-intrinsics-delete\", \"Delete libU77 intrinsics\" )\n+FTNOPT( \"-funix-intrinsics-disable\", \"Disable libU77 intrinsics\" )\n+FTNOPT( \"-funix-intrinsics-enable\", \"\" )\n+FTNOPT( \"-funix-intrinsics-hide\", \"Hide libU77 intrinsics\" )\n+FTNOPT( \"-fvxt-intrinsics-delete\", \"Delete non-FORTRAN-77 intrinsics VXT FORTRAN supports\" )\n+FTNOPT( \"-fvxt-intrinsics-disable\", \"Disable non-FORTRAN-77 intrinsics VXT FORTRAN supports\" )\n+FTNOPT( \"-fvxt-intrinsics-enable\", \"\" )\n+FTNOPT( \"-fvxt-intrinsics-hide\", \"Hide non-FORTRAN-77 intrinsics VXT FORTRAN supports\" )\n+FTNOPT( \"-fzeros\", \"Treat initial values of 0 like non-zero values\" )\n+FTNOPT( \"-fno-zeros\", \"\" )\n+FTNOPT( \"-fdebug-kludge\", \"Emit special debugging information for COMMON and EQUIVALENCE\" )\n+FTNOPT( \"-fno-debug-kludge\", \"\" )\n+FTNOPT( \"-fonetrip\", \"Take at least one trip through each iterative DO loop\" )\n+FTNOPT( \"-fno-onetrip\", \"\" )\n+FTNOPT( \"-fsilent\", \"\" )\n+FTNOPT( \"-fno-silent\", \"Print names of program units as they are compiled\" )\n+FTNOPT( \"-fglobals\", \"\" )\n+FTNOPT( \"-fno-globals\", \"Disable fatal diagnostics about inter-procedural problems\" )\n+FTNOPT( \"-ftypeless-boz\", \"Make prefix-radix non-decimal constants be typeless\" )\n+FTNOPT( \"-fno-typeless-boz\", \"\" )\n+FTNOPT( \"-Wglobals\", \"\" )\n+FTNOPT( \"-Wno-globals\", \"Disable warnings about inter-procedural problems\" )\n /*\"-Wimplicit\",*/\n /*\"-Wno-implicit\",*/\n-  { \"-Wsurprising\", \"Warn about constructs with surprising meanings\" },\n-  { \"-Wno-surprising\", \"\" },\n+FTNOPT( \"-Wsurprising\", \"Warn about constructs with surprising meanings\" )\n+FTNOPT( \"-Wno-surprising\", \"\" )\n /*\"-Wall\",*/\n /* Prefix options.  */\n-  { \"-I\", \"Add a directory for INCLUDE searching\" },\n-  { \"-ffixed-line-length-\", \"Set the maximum line length\" },\n+FTNOPT( \"-I\", \"Add a directory for INCLUDE searching\" )\n+FTNOPT( \"-ffixed-line-length-\", \"Set the maximum line length\" )\n+\n+#undef FTNOPT\n \n #endif"}]}