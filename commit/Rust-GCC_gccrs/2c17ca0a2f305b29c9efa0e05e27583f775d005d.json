{"sha": "2c17ca0a2f305b29c9efa0e05e27583f775d005d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmMxN2NhMGEyZjMwNWIyOWM5ZWZhMGUwNWUyNzU4M2Y3NzVkMDA1ZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-02T07:42:02Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-02T07:42:02Z"}, "message": "[multiple changes]\n\n2011-09-02  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_util.adb, sem_ch10.adb, sem_attr.adb, s-htable.adb,\n\tg-comlin.adb, g-comlin.ads, lib-xref-alfa.adb, lib-xref.adb: Minor\n\treformatting.\n\n2011-09-02  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch3.adb: (Set_Anonymous_Type): Associate the itype of an\n\tinherited component with the enclosing derived type. Code reformatting.\n\n2011-09-02  Gary Dismukes  <dismukes@adacore.com>\n\n\t* checks.adb: (Determine_Range): Add test of OK1 to prevent the early\n\treturn done when overflow checks are enabled, since comparisons against\n\tLor and Hir should not be done when OK1 is False.\n\n2011-09-02  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_ch6.adb (Add_Finalization_Master_Actual_To_Build_In_Place_Call):\n\tAdd new formal Master_Exp. When present, add that expression to the\n\tcall as an extra actual.\n\t(Make_Build_In_Place_Call_In_Object_Declaration): Add variable\n\tFmaster_Actual and in the case of a BIP call initializing a return\n\tobject of an enclosing BIP function set it to a\n\tnew reference to the implicit finalization master\n\tformal of the enclosing function. Fmaster_Actual is\n\tthen passed to the new formal Master_Exp on the call to\n\tAdd_Finalization_Master_Actual_To_Build_ In_Place_Call. Move\n\tinitializations of Enclosing_Func to its declaration.\n\n2011-09-02  Thomas Quinot  <quinot@adacore.com>\n\n\t* csets.ads: Minor reformatting\n\n2011-09-02  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_aggr.adb: (Get_Constraint_Association): Add code to retrieve\n\tthe full view of a private type coming from an instantiation.\n\t* exp_ch4.adb: (Current_Anonymous_Master): Reimplement the search\n\tloop to iterate over the declarations rather than use the\n\tFirst_Entity / Next_Entity scheme.\n\nFrom-SVN: r178438", "tree": {"sha": "1f2038976e3af2cad4e6cafba381cd8f89549f8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f2038976e3af2cad4e6cafba381cd8f89549f8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c17ca0a2f305b29c9efa0e05e27583f775d005d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c17ca0a2f305b29c9efa0e05e27583f775d005d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c17ca0a2f305b29c9efa0e05e27583f775d005d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c17ca0a2f305b29c9efa0e05e27583f775d005d/comments", "author": null, "committer": null, "parents": [{"sha": "ed32b82e77377f2905fd1a2b74bff4b06d108ef2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed32b82e77377f2905fd1a2b74bff4b06d108ef2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed32b82e77377f2905fd1a2b74bff4b06d108ef2"}], "stats": {"total": 279, "additions": 193, "deletions": 86}, "files": [{"sha": "dec2a2cc10f618906fa373ce17ba0e815eddbfdc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2c17ca0a2f305b29c9efa0e05e27583f775d005d", "patch": "@@ -1,3 +1,46 @@\n+2011-09-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_util.adb, sem_ch10.adb, sem_attr.adb, s-htable.adb,\n+\tg-comlin.adb, g-comlin.ads, lib-xref-alfa.adb, lib-xref.adb: Minor\n+\treformatting.\n+\n+2011-09-02  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch3.adb: (Set_Anonymous_Type): Associate the itype of an\n+\tinherited component with the enclosing derived type. Code reformatting.\n+\n+2011-09-02  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* checks.adb: (Determine_Range): Add test of OK1 to prevent the early\n+\treturn done when overflow checks are enabled, since comparisons against\n+\tLor and Hir should not be done when OK1 is False.\n+\n+2011-09-02  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_ch6.adb (Add_Finalization_Master_Actual_To_Build_In_Place_Call):\n+\tAdd new formal Master_Exp. When present, add that expression to the\n+\tcall as an extra actual.\n+\t(Make_Build_In_Place_Call_In_Object_Declaration): Add variable\n+\tFmaster_Actual and in the case of a BIP call initializing a return\n+\tobject of an enclosing BIP function set it to a\n+\tnew reference to the implicit finalization master\n+\tformal of the enclosing function. Fmaster_Actual is\n+\tthen passed to the new formal Master_Exp on the call to\n+\tAdd_Finalization_Master_Actual_To_Build_ In_Place_Call. Move\n+\tinitializations of Enclosing_Func to its declaration.\n+\n+2011-09-02  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* csets.ads: Minor reformatting\n+\n+2011-09-02  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_aggr.adb: (Get_Constraint_Association): Add code to retrieve\n+\tthe full view of a private type coming from an instantiation.\n+\t* exp_ch4.adb: (Current_Anonymous_Master): Reimplement the search\n+\tloop to iterate over the declarations rather than use the\n+\tFirst_Entity / Next_Entity scheme.\n+\n 2011-09-02  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_attr.adb: (Analyze_Attribute, case 'Range): when expanding"}, {"sha": "cb07771343b318128aa6e077e3065def2d256bcc", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=2c17ca0a2f305b29c9efa0e05e27583f775d005d", "patch": "@@ -3479,10 +3479,11 @@ package body Checks is\n       --  to restrict the possible range of results.\n \n       --  If one of the computed bounds is outside the range of the base type,\n-      --  the expression may raise an exception and we better indicate that\n+      --  the expression may raise an exception and we had better indicate that\n       --  the evaluation has failed, at least if checks are enabled.\n \n-      if Enable_Overflow_Checks\n+      if OK1\n+        and then Enable_Overflow_Checks\n         and then not Is_Entity_Name (N)\n         and then (Lor < Lo or else Hir > Hi)\n       then"}, {"sha": "2f40e36aa8cdc393171913e346cfa1e8f8d159bd", "filename": "gcc/ada/csets.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fcsets.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fcsets.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcsets.ads?ref=2c17ca0a2f305b29c9efa0e05e27583f775d005d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -90,7 +90,7 @@ package Csets is\n    --  This table has True entries for all characters that can legally appear\n    --  in identifiers, including digits, the underline character, all letters\n    --  including upper and lower case and extended letters (as controlled by\n-   --  the setting of Opt.Identifier_Character_Set, left bracket for brackets\n+   --  the setting of Opt.Identifier_Character_Set), left bracket for brackets\n    --  notation wide characters and also ESC if wide characters are permitted\n    --  in identifiers using escape sequences starting with ESC.\n "}, {"sha": "03b686c5a9d942f94fc5d59e50ba962d1f7182b1", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=2c17ca0a2f305b29c9efa0e05e27583f775d005d", "patch": "@@ -1984,10 +1984,23 @@ package body Exp_Aggr is\n       --------------------------------\n \n       function Get_Constraint_Association (T : Entity_Id) return Node_Id is\n-         Typ_Def : constant Node_Id := Type_Definition (Parent (T));\n-         Indic   : constant Node_Id := Subtype_Indication (Typ_Def);\n+         Indic : Node_Id;\n+         Typ   : Entity_Id;\n \n       begin\n+         Typ := T;\n+\n+         --  Handle private types in instances\n+\n+         if In_Instance\n+           and then Is_Private_Type (Typ)\n+           and then Present (Full_View (Typ))\n+         then\n+            Typ := Full_View (Typ);\n+         end if;\n+\n+         Indic := Subtype_Indication (Type_Definition (Parent (Typ)));\n+\n          --  ??? Also need to cover case of a type mark denoting a subtype\n          --  with constraint.\n "}, {"sha": "91d79e30fbeeb1dd78ed2c91e518ed20abffc968", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 31, "deletions": 17, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=2c17ca0a2f305b29c9efa0e05e27583f775d005d", "patch": "@@ -380,12 +380,11 @@ package body Exp_Ch4 is\n    ------------------------------\n \n    function Current_Anonymous_Master return Entity_Id is\n-      Decls      : List_Id;\n-      Fin_Mas_Id : Entity_Id;\n-      Loc        : Source_Ptr;\n-      Subp_Body  : Node_Id;\n-      Unit_Decl  : Node_Id;\n-      Unit_Id    : Entity_Id;\n+      Decls     : List_Id;\n+      Loc       : Source_Ptr;\n+      Subp_Body : Node_Id;\n+      Unit_Decl : Node_Id;\n+      Unit_Id   : Entity_Id;\n \n    begin\n       Unit_Id := Cunit_Entity (Current_Sem_Unit);\n@@ -440,28 +439,43 @@ package body Exp_Ch4 is\n       --  declarations and locate the entity.\n \n       if Has_Anonymous_Master (Unit_Id) then\n-         Fin_Mas_Id := First_Entity (Unit_Id);\n-         while Present (Fin_Mas_Id) loop\n+         declare\n+            Decl       : Node_Id;\n+            Fin_Mas_Id : Entity_Id;\n \n-            --  Look for the first variable whose type is Finalization_Master\n+         begin\n+            Decl := First (Decls);\n+            while Present (Decl) loop\n \n-            if Ekind (Fin_Mas_Id) = E_Variable\n-              and then Etype (Fin_Mas_Id) = RTE (RE_Finalization_Master)\n-            then\n-               return Fin_Mas_Id;\n-            end if;\n+               --  Look for the first variable in the declarations whole type\n+               --  is Finalization_Master.\n \n-            Next_Entity (Fin_Mas_Id);\n-         end loop;\n+               if Nkind (Decl) = N_Object_Declaration then\n+                  Fin_Mas_Id := Defining_Identifier (Decl);\n \n-         raise Program_Error;\n+                  if Ekind (Fin_Mas_Id) = E_Variable\n+                    and then Etype (Fin_Mas_Id) = RTE (RE_Finalization_Master)\n+                  then\n+                     return Fin_Mas_Id;\n+                  end if;\n+               end if;\n+\n+               Next (Decl);\n+            end loop;\n+\n+            --  The master was not found even though the unit was labeled as\n+            --  having one.\n+\n+            raise Program_Error;\n+         end;\n \n       --  Create a new anonymous master\n \n       else\n          declare\n             First_Decl : constant Node_Id := First (Decls);\n             Action     : Node_Id;\n+            Fin_Mas_Id : Entity_Id;\n \n          begin\n             --  Since the master and its associated initialization is inserted"}, {"sha": "5df20678f1d20c69377e5e2787d0ea49c804bf8f", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 36, "deletions": 15, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=2c17ca0a2f305b29c9efa0e05e27583f775d005d", "patch": "@@ -111,13 +111,15 @@ package body Exp_Ch6 is\n    --  Extra_Formal in Subprogram_Call.\n \n    procedure Add_Finalization_Master_Actual_To_Build_In_Place_Call\n-     (Func_Call : Node_Id;\n-      Func_Id   : Entity_Id;\n-      Ptr_Typ   : Entity_Id := Empty);\n+     (Func_Call  : Node_Id;\n+      Func_Id    : Entity_Id;\n+      Ptr_Typ    : Entity_Id := Empty;\n+      Master_Exp : Node_Id   := Empty);\n    --  Ada 2005 (AI-318-02): If the result type of a build-in-place call needs\n    --  finalization actions, add an actual parameter which is a pointer to the\n-   --  finalization master of the caller. If Ptr_Typ is left Empty, this will\n-   --  result in an automatic \"null\" value for the actual.\n+   --  finalization master of the caller. If Master_Exp is not Empty, then that\n+   --  will be passed as the actual. Otherwise, if Ptr_Typ is left Empty, this\n+   --  will result in an automatic \"null\" value for the actual.\n \n    procedure Add_Task_Actuals_To_Build_In_Place_Call\n      (Function_Call : Node_Id;\n@@ -311,9 +313,10 @@ package body Exp_Ch6 is\n    -----------------------------------------------------------\n \n    procedure Add_Finalization_Master_Actual_To_Build_In_Place_Call\n-     (Func_Call : Node_Id;\n-      Func_Id   : Entity_Id;\n-      Ptr_Typ   : Entity_Id := Empty)\n+     (Func_Call  : Node_Id;\n+      Func_Id    : Entity_Id;\n+      Ptr_Typ    : Entity_Id := Empty;\n+      Master_Exp : Node_Id   := Empty)\n    is\n    begin\n       if not Needs_BIP_Finalization_Master (Func_Id) then\n@@ -329,9 +332,16 @@ package body Exp_Ch6 is\n          Desig_Typ : Entity_Id;\n \n       begin\n+         --  If there is a finalization master actual, such as the implicit\n+         --  finalization master of an enclosing build-in-place function,\n+         --  then this must be added as an extra actual of the call.\n+\n+         if Present (Master_Exp) then\n+            Actual := Master_Exp;\n+\n          --  Case where the context does not require an actual master\n \n-         if No (Ptr_Typ) then\n+         elsif No (Ptr_Typ) then\n             Actual := Make_Null (Loc);\n \n          else\n@@ -7561,7 +7571,9 @@ package body Exp_Ch6 is\n       Ptr_Typ_Decl    : Node_Id;\n       Def_Id          : Entity_Id;\n       New_Expr        : Node_Id;\n-      Enclosing_Func  : Entity_Id;\n+      Enclosing_Func  : constant Entity_Id :=\n+                          Enclosing_Subprogram (Obj_Def_Id);\n+      Fmaster_Actual  : Node_Id := Empty;\n       Pass_Caller_Acc : Boolean := False;\n \n    begin\n@@ -7613,8 +7625,6 @@ package body Exp_Ch6 is\n       if Is_Return_Object (Defining_Identifier (Object_Decl)) then\n          Pass_Caller_Acc := True;\n \n-         Enclosing_Func := Enclosing_Subprogram (Obj_Def_Id);\n-\n          --  When the enclosing function has a BIP_Alloc_Form formal then we\n          --  pass it along to the callee (such as when the enclosing function\n          --  has an unconstrained or tagged result type).\n@@ -7636,6 +7646,13 @@ package body Exp_Ch6 is\n               (Func_Call, Function_Id, Alloc_Form => Caller_Allocation);\n          end if;\n \n+         if Needs_BIP_Finalization_Master (Enclosing_Func) then\n+            Fmaster_Actual :=\n+              New_Reference_To\n+                (Build_In_Place_Formal\n+                   (Enclosing_Func, BIP_Finalization_Master), Loc);\n+         end if;\n+\n          --  Retrieve the BIPacc formal from the enclosing function and convert\n          --  it to the access type of the callee's BIP_Object_Access formal.\n \n@@ -7686,14 +7703,18 @@ package body Exp_Ch6 is\n          Establish_Transient_Scope (Object_Decl, Sec_Stack => True);\n       end if;\n \n+      --  Pass along any finalization master actual, which is needed in the\n+      --  case where the called function initializes a return object of an\n+      --  enclosing build-in-place function.\n+\n       Add_Finalization_Master_Actual_To_Build_In_Place_Call\n-        (Func_Call, Function_Id);\n+        (Func_Call  => Func_Call,\n+         Func_Id    => Function_Id,\n+         Master_Exp => Fmaster_Actual);\n \n       if Nkind (Parent (Object_Decl)) = N_Extended_Return_Statement\n         and then Has_Task (Result_Subt)\n       then\n-         Enclosing_Func := Enclosing_Subprogram (Obj_Def_Id);\n-\n          --  Here we're passing along the master that was passed in to this\n          --  function.\n "}, {"sha": "736d3d03db7e4536df373df0f7e100e4e0b9d128", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=2c17ca0a2f305b29c9efa0e05e27583f775d005d", "patch": "@@ -3901,7 +3901,6 @@ package body Exp_Util is\n          begin\n             Change  := True;\n             Ren_Obj := Renamed_Object (Defining_Identifier (Ren_Decl));\n-\n             while Change loop\n                Change := False;\n \n@@ -3971,7 +3970,6 @@ package body Exp_Util is\n \n       function Is_Allocated (Trans_Id : Entity_Id) return Boolean is\n          Expr : constant Node_Id := Expression (Parent (Trans_Id));\n-\n       begin\n          return\n            Is_Access_Type (Etype (Trans_Id))\n@@ -3994,30 +3992,30 @@ package body Exp_Util is\n           and then Requires_Transient_Scope (Desig)\n           and then Nkind (Rel_Node) /= N_Simple_Return_Statement\n \n-         --  Do not consider renamed or 'reference-d transient objects because\n-         --  the act of renaming extends the object's lifetime.\n+          --  Do not consider renamed or 'reference-d transient objects because\n+          --  the act of renaming extends the object's lifetime.\n \n           and then not Is_Aliased (Obj_Id, Decl)\n \n-         --  Do not consider transient objects allocated on the heap since they\n-         --  are attached to a finalization master.\n+          --  Do not consider transient objects allocated on the heap since\n+          --  they are attached to a finalization master.\n \n           and then not Is_Allocated (Obj_Id)\n \n-         --  If the transient object is a pointer, check that it is not\n-         --  initialized by a function which returns a pointer or acts as a\n-         --  renaming of another pointer.\n+          --  If the transient object is a pointer, check that it is not\n+          --  initialized by a function which returns a pointer or acts as a\n+          --  renaming of another pointer.\n \n           and then\n             (not Is_Access_Type (Obj_Typ)\n                or else not Initialized_By_Access (Obj_Id))\n \n-         --  Do not consider transient objects which act as indirect aliases of\n-         --  build-in-place function results.\n+          --  Do not consider transient objects which act as indirect aliases\n+          --  of build-in-place function results.\n \n           and then not Initialized_By_Aliased_BIP_Func_Call (Obj_Id)\n \n-         --  Do not consider conversions of tags to class-wide types\n+          --  Do not consider conversions of tags to class-wide types\n \n           and then not Is_Tag_To_CW_Conversion (Obj_Id);\n    end Is_Finalizable_Transient;\n@@ -4200,8 +4198,7 @@ package body Exp_Util is\n          begin\n             --  If component reference is for an array with non-static bounds,\n             --  then it is always aligned: we can only process unaligned arrays\n-            --  with static bounds (more accurately bounds known at compile\n-            --  time).\n+            --  with static bounds (more precisely compile time known bounds).\n \n             if Is_Array_Type (T)\n               and then not Compile_Time_Known_Bounds (T)\n@@ -4262,6 +4259,8 @@ package body Exp_Util is\n             --  alignment, and we either know it is too small, or cannot tell,\n             --  then the component may be unaligned.\n \n+            --  What is the following commented out code ???\n+\n             --  if Known_Alignment (Etype (P))\n             --    and then Alignment (Etype (P)) < Ttypes.Maximum_Alignment\n             --    and then M > Alignment (Etype (P))"}, {"sha": "28c9d9812e4f3e5924083492e59453613633141d", "filename": "gcc/ada/g-comlin.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.adb?ref=2c17ca0a2f305b29c9efa0e05e27583f775d005d", "patch": "@@ -3291,6 +3291,7 @@ package body GNAT.Command_Line is\n                           with \"Expected integer parameter for '\"\n                             & Switch & \"'\";\n                   end;\n+\n                   return;\n \n                when Switch_String =>"}, {"sha": "893a674ce18f362ec443855ffb8f49e0bd3b68d5", "filename": "gcc/ada/g-comlin.ads", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fg-comlin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fg-comlin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.ads?ref=2c17ca0a2f305b29c9efa0e05e27583f775d005d", "patch": "@@ -707,9 +707,9 @@ package GNAT.Command_Line is\n       Callback    : Switch_Handler := null;\n       Parser      : Opt_Parser := Command_Line_Parser;\n       Concatenate : Boolean := True);\n-   --  Similar to the standard Getopt function.\n-   --  For each switch found on the command line, this calls Callback, if the\n-   --  switch is not handled automatically.\n+   --  Similar to the standard Getopt function. For each switch found on the\n+   --  command line, this calls Callback, if the switch is not handled\n+   --  automatically.\n    --\n    --  The list of valid switches are the ones from the configuration. The\n    --  switches that were declared through Define_Switch with an Output\n@@ -726,12 +726,15 @@ package GNAT.Command_Line is\n    --  will display an error message and raises Invalid_Switch again.\n    --\n    --  This function automatically expands switches:\n-   --   * If Define_Prefix was called (for instance \"-gnaty\") and the user\n-   --     specifies \"-gnatycb\" on the command line, then Getopt returns\n-   --     \"-gnatyc\" and \"-gnatyb\" separately.\n-   --   * If Define_Alias was called (for instance \"-gnatya = -gnatycb\") then\n-   --     the latter is returned (in this case it also expands -gnaty as per\n-   --     the above.\n+   --\n+   --    If Define_Prefix was called (for instance \"-gnaty\") and the user\n+   --    specifies \"-gnatycb\" on the command line, then Getopt returns\n+   --    \"-gnatyc\" and \"-gnatyb\" separately.\n+   --\n+   --    If Define_Alias was called (for instance \"-gnatya = -gnatycb\") then\n+   --    the latter is returned (in this case it also expands -gnaty as per\n+   --    the above.\n+   --\n    --  The goal is to make handling as easy as possible by leaving as much\n    --  work as possible to this package.\n    --\n@@ -753,15 +756,17 @@ package GNAT.Command_Line is\n    --  way to remove a switch from an existing command line.\n \n    --  For instance:\n+\n    --      declare\n    --         Config : Command_Line_Configuration;\n    --         Line : Command_Line;\n    --         Args : Argument_List_Access;\n+\n    --      begin\n    --         Define_Switch (Config, \"-gnatyc\");\n    --         Define_Switch (Config, ...);  --  for all valid switches\n    --         Define_Prefix (Config, \"-gnaty\");\n-   --\n+\n    --         Set_Configuration (Line, Config);\n    --         Add_Switch (Line, \"-O2\");\n    --         Add_Switch (Line, \"-gnatyc\");"}, {"sha": "74d1421b91589b316a6521123062db10c80602c7", "filename": "gcc/ada/lib-xref-alfa.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Flib-xref-alfa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Flib-xref-alfa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-alfa.adb?ref=2c17ca0a2f305b29c9efa0e05e27583f775d005d", "patch": "@@ -457,7 +457,7 @@ package body Alfa is\n          --  the entity definition.\n \n          elsif Get_Scope_Num (T1.Key.Ent_Scope) /=\n-           Get_Scope_Num (T2.Key.Ent_Scope)\n+               Get_Scope_Num (T2.Key.Ent_Scope)\n          then\n             return Get_Scope_Num (T1.Key.Ent_Scope) <\n               Get_Scope_Num (T2.Key.Ent_Scope);\n@@ -503,7 +503,7 @@ package body Alfa is\n          --  Seventh test: for same entity, sort by reference location scope\n \n          elsif Get_Scope_Num (T1.Key.Ref_Scope) /=\n-           Get_Scope_Num (T2.Key.Ref_Scope)\n+               Get_Scope_Num (T2.Key.Ref_Scope)\n          then\n             return Get_Scope_Num (T1.Key.Ref_Scope) <\n               Get_Scope_Num (T2.Key.Ref_Scope);"}, {"sha": "15edfb6c57b5722dc0c2f240685701bf66f03a47", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=2c17ca0a2f305b29c9efa0e05e27583f775d005d", "patch": "@@ -205,7 +205,7 @@ package body Lib.Xref is\n \n    function Equal (F1, F2 : Xref_Entry_Number) return Boolean is\n       Result : constant Boolean :=\n-        Xrefs.Table (F1).Key = Xrefs.Table (F2).Key;\n+                 Xrefs.Table (F1).Key = Xrefs.Table (F2).Key;\n    begin\n       return Result;\n    end Equal;\n@@ -373,12 +373,12 @@ package body Lib.Xref is\n       Set_Ref : Boolean   := True;\n       Force   : Boolean   := False)\n    is\n-      Nod  : Node_Id;\n-      Ref  : Source_Ptr;\n-      Def  : Source_Ptr;\n-      Ent  : Entity_Id;\n+      Nod : Node_Id;\n+      Ref : Source_Ptr;\n+      Def : Source_Ptr;\n+      Ent : Entity_Id;\n \n-      Actual_Typ  : Character := Typ;\n+      Actual_Typ : Character := Typ;\n \n       Ref_Scope      : Entity_Id;\n       Ent_Scope      : Entity_Id;\n@@ -1882,10 +1882,10 @@ package body Lib.Xref is\n \n                if XE.Key.Typ = 'e'\n                  and then Ent /= Curent\n-                 and then (Refno = Nrefs or else\n-                             Ent /= Xrefs.Table (Rnums (Refno + 1)).Key.Ent)\n-                 and then\n-                   not In_Extended_Main_Source_Unit (Ent)\n+                 and then (Refno = Nrefs\n+                            or else\n+                              Ent /= Xrefs.Table (Rnums (Refno + 1)).Key.Ent)\n+                 and then not In_Extended_Main_Source_Unit (Ent)\n                then\n                   goto Continue;\n                end if;"}, {"sha": "7b5ee031339880fa967144f685a309c76a7bf9a0", "filename": "gcc/ada/s-htable.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fs-htable.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fs-htable.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-htable.adb?ref=2c17ca0a2f305b29c9efa0e05e27583f775d005d", "patch": "@@ -195,16 +195,16 @@ package body System.HTable is\n       ------------------------\n \n       function Set_If_Not_Present (E : Elmt_Ptr) return Boolean is\n-         K     : constant Key := Get_Key (E);\n+         K     : constant Key        := Get_Key (E);\n          Index : constant Header_Num := Hash (K);\n-         Elmt  : Elmt_Ptr := Table (Index);\n+         Elmt  : Elmt_Ptr;\n \n       begin\n+         Elmt := Table (Index);\n          loop\n             if Elmt = Null_Ptr then\n                Set_Next (E, Table (Index));\n                Table (Index) := E;\n-\n                return True;\n \n             elsif Equal (Get_Key (Elmt), K) then"}, {"sha": "43ae847921c46d989ee56dd9c5df752a0f28b057", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=2c17ca0a2f305b29c9efa0e05e27583f775d005d", "patch": "@@ -8892,8 +8892,8 @@ package body Sem_Attr is\n                LB :=\n                  Make_Attribute_Reference (Loc,\n                    Prefix          => P,\n-                   Attribute_Name => Name_First,\n-                   Expressions => (Dims));\n+                   Attribute_Name  => Name_First,\n+                   Expressions     => (Dims));\n \n                --  Do not share the dimension indicator, if present. Even\n                --  though it is a static constant, its source location"}, {"sha": "87334e43ff8f90ef31ec237f50bdd3ced05b228b", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=2c17ca0a2f305b29c9efa0e05e27583f775d005d", "patch": "@@ -2537,7 +2537,7 @@ package body Sem_Ch10 is\n \n          Change_Selected_Component_To_Expanded_Name (Name (N));\n \n-         --  If this is a child unit without a spec, and it has benn analyzed\n+         --  If this is a child unit without a spec, and it has been analyzed\n          --  already, a declaration has been created for it. The with_clause\n          --  must reflect the actual body, and not the generated declaration,\n          --  to prevent spurious binding errors involving an out-of-date spec."}, {"sha": "aedc29f705f0cb9c692b9e06aec3d2b0cf9aa5a0", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c17ca0a2f305b29c9efa0e05e27583f775d005d/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=2c17ca0a2f305b29c9efa0e05e27583f775d005d", "patch": "@@ -15691,20 +15691,30 @@ package body Sem_Ch3 is\n          ------------------------\n \n          procedure Set_Anonymous_Type (Id : Entity_Id) is\n-            Typ : constant Entity_Id := Etype (Old_C);\n+            Old_Typ : constant Entity_Id := Etype (Old_C);\n \n          begin\n             if Scope (Parent_Base) = Scope (Derived_Base) then\n-               Set_Etype (Id, Typ);\n+               Set_Etype (Id, Old_Typ);\n \n             --  The parent and the derived type are in two different scopes.\n             --  Reuse the type of the original discriminant / component by\n-            --  copying it in order to preserve all attributes and update the\n-            --  scope.\n+            --  copying it in order to preserve all attributes.\n \n             else\n-               Set_Etype (Id, New_Copy (Typ));\n-               Set_Scope (Etype (Id), Current_Scope);\n+               declare\n+                  Typ : constant Entity_Id := New_Copy (Old_Typ);\n+\n+               begin\n+                  Set_Etype (Id, Typ);\n+\n+                  --  Since we do not generate component declarations for\n+                  --  inherited components, associate the itype with the\n+                  --  derived type.\n+\n+                  Set_Associated_Node_For_Itype (Typ, Parent (Derived_Base));\n+                  Set_Scope                     (Typ, Derived_Base);\n+               end;\n             end if;\n          end Set_Anonymous_Type;\n "}]}