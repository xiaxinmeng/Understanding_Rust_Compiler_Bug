{"sha": "ca10595cf475579d19b0bf6fe5399cdf6f9b89f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ExMDU5NWNmNDc1NTc5ZDE5YjBiZjZmZTUzOTljZGY2ZjliODlmNA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-01-22T14:35:39Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-01-22T14:35:39Z"}, "message": "re PR rtl-optimization/51924 (wrong code with -O -free -fno-rename-registers -ftree-vectorize -funroll-loops)\n\n\tPR rtl-optimization/51924\n\t* ree.c (combine_set_extension): Improve debugging message.\n\t(combine_reaching_defs): Likewise.\n\t(get_defs): Rename confusingly named variable.\n\t(find_and_remove_re): Skip a candidate if the extension expression has\n\tbeen modified.\n\nFrom-SVN: r183390", "tree": {"sha": "5e8be93a1ed7e5ab1d8f77ae6ad3c77be61ad195", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e8be93a1ed7e5ab1d8f77ae6ad3c77be61ad195"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca10595cf475579d19b0bf6fe5399cdf6f9b89f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca10595cf475579d19b0bf6fe5399cdf6f9b89f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca10595cf475579d19b0bf6fe5399cdf6f9b89f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca10595cf475579d19b0bf6fe5399cdf6f9b89f4/comments", "author": null, "committer": null, "parents": [{"sha": "643e447b3ec25d706e0334290b4f497a6f963eb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/643e447b3ec25d706e0334290b4f497a6f963eb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/643e447b3ec25d706e0334290b4f497a6f963eb0"}], "stats": {"total": 78, "additions": 68, "deletions": 10}, "files": [{"sha": "71df98e6699241328970464a980ef6af7e0cf9a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca10595cf475579d19b0bf6fe5399cdf6f9b89f4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca10595cf475579d19b0bf6fe5399cdf6f9b89f4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca10595cf475579d19b0bf6fe5399cdf6f9b89f4", "patch": "@@ -1,3 +1,12 @@\n+2012-01-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR rtl-optimization/51924\n+\t* ree.c (combine_set_extension): Improve debugging message.\n+\t(combine_reaching_defs): Likewise.\n+\t(get_defs): Rename confusingly named variable.\n+\t(find_and_remove_re): Skip a candidate if the extension expression has\n+\tbeen modified.\n+\n 2012-01-21  Robert Millan  <rmh@gnu.org>\n \t    Gerald Pfeifer  <gerald@pfeifer.com>\n "}, {"sha": "4cab20ed50e9ce63ad4326ca3d37e3f03b9ea629", "filename": "gcc/ree.c", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca10595cf475579d19b0bf6fe5399cdf6f9b89f4/gcc%2Free.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca10595cf475579d19b0bf6fe5399cdf6f9b89f4/gcc%2Free.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Free.c?ref=ca10595cf475579d19b0bf6fe5399cdf6f9b89f4", "patch": "@@ -346,7 +346,8 @@ combine_set_extension (ext_cand *cand, rtx curr_insn, rtx *orig_set)\n     {\n       if (dump_file)\n         {\n-          fprintf (dump_file, \"Merged instruction with extension:\\n\");\n+          fprintf (dump_file,\n+\t\t   \"Tentatively merged extension with definition:\\n\");\n           print_rtl_single (dump_file, curr_insn);\n         }\n       return true;\n@@ -407,21 +408,21 @@ transform_ifelse (ext_cand *cand, rtx def_insn)\n static struct df_link *\n get_defs (rtx insn, rtx reg, VEC (rtx,heap) **dest)\n {\n-  df_ref reg_info, *defs;\n+  df_ref reg_info, *uses;\n   struct df_link *ref_chain, *ref_link;\n \n   reg_info = NULL;\n \n-  for (defs = DF_INSN_USES (insn); *defs; defs++)\n+  for (uses = DF_INSN_USES (insn); *uses; uses++)\n     {\n-      reg_info = *defs;\n+      reg_info = *uses;\n       if (GET_CODE (DF_REF_REG (reg_info)) == SUBREG)\n         return NULL;\n       if (REGNO (DF_REF_REG (reg_info)) == REGNO (reg))\n         break;\n     }\n \n-  gcc_assert (reg_info != NULL && defs != NULL);\n+  gcc_assert (reg_info != NULL && uses != NULL);\n \n   ref_chain = DF_REF_CHAIN (reg_info);\n \n@@ -686,11 +687,10 @@ combine_reaching_defs (ext_cand *cand, rtx set_pat)\n              purposes.  This extension cannot be deleted.  */\n           if (dump_file)\n             {\n-              FOR_EACH_VEC_ELT (rtx, vec, i, def_insn)\n-                {\n-                  fprintf (dump_file, \"Non-mergeable definitions:\\n\");\n-                  print_rtl_single (dump_file, def_insn);\n-                }\n+\t      fprintf (dump_file,\n+\t\t       \"Merge cancelled, non-mergeable definitions:\\n\");\n+\t      FOR_EACH_VEC_ELT (rtx, vec, i, def_insn)\n+\t        print_rtl_single (dump_file, def_insn);\n             }\n         }\n     }\n@@ -843,6 +843,12 @@ find_and_remove_re (void)\n     {\n       num_re_opportunities++;\n \n+      /* If the candidate insn is itself a definition insn for another\n+         candidate, it may have been modified and the UD chain broken.\n+         FIXME: the handling of successive extensions can be improved.  */\n+      if (!reg_mentioned_p (curr_cand->expr, PATTERN (curr_cand->insn)))\n+\tcontinue;\n+\n       /* Try to combine the extension with the definition.  */\n       if (dump_file)\n         {"}, {"sha": "07b1fef7697e48d30463c9ee11ddbbab667b8b5a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca10595cf475579d19b0bf6fe5399cdf6f9b89f4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca10595cf475579d19b0bf6fe5399cdf6f9b89f4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ca10595cf475579d19b0bf6fe5399cdf6f9b89f4", "patch": "@@ -1,3 +1,7 @@\n+2012-01-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.dg/ext-elim-1.c: New test.\n+\n 2012-01-22  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \tPR target/51931"}, {"sha": "5e899a235f65fc2df0bc28249bd122dd8c77ba14", "filename": "gcc/testsuite/gcc.dg/ext-elim-1.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca10595cf475579d19b0bf6fe5399cdf6f9b89f4/gcc%2Ftestsuite%2Fgcc.dg%2Fext-elim-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca10595cf475579d19b0bf6fe5399cdf6f9b89f4/gcc%2Ftestsuite%2Fgcc.dg%2Fext-elim-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fext-elim-1.c?ref=ca10595cf475579d19b0bf6fe5399cdf6f9b89f4", "patch": "@@ -0,0 +1,39 @@\n+/* PR rtl-optimization/51924 */\n+/* Testcase by Zdenek Sojka <zsojka@seznam.cz> */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-O -free -fno-rename-registers -ftree-vectorize -funroll-loops\" } */\n+\n+typedef __UINT64_TYPE__ uint64_t;\n+\n+uint64_t __attribute__ ((noinline, noclone))\n+bn_sub_words (uint64_t * r, const uint64_t * a, const uint64_t * b, int n)\n+{\n+  uint64_t t1, t2;\n+  unsigned c = 0;\n+\n+  while (n)\n+    {\n+      t1 = a[0];\n+      t2 = b[0];\n+      r[0] = (t1 - t2 - c);\n+      if (t1 != t2)\n+\tc = (t1 < t2);\n+      a++;\n+      b++;\n+      r++;\n+      n--;\n+    }\n+  return (c);\n+}\n+\n+int\n+main (void)\n+{\n+  uint64_t r[2];\n+  uint64_t a[2] = { -1, -1 };\n+  uint64_t b[2] = { 0, 0 };\n+  if (bn_sub_words (r, a, b, 2) != 0)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}