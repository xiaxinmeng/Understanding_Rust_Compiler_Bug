{"sha": "ffc500dd41fd49db8e5ec5022389b664a1a04e6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZjNTAwZGQ0MWZkNDlkYjhlNWVjNTAyMjM4OWI2NjRhMWEwNGU2ZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-08-06T15:57:55Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-08-06T15:57:55Z"}, "message": "P1651R0 bind_front should not unwrap reference_wrapper\n\n\tP1651R0 bind_front should not unwrap reference_wrapper\n\t* include/std/functional (bind_front): Don't unwrap reference_wrapper.\n\t* include/std/version (__cpp_lib_bind_front): Update value.\n\t* testsuite/20_util/function_objects/bind_front/1.cc: Fix test for\n\tfeature test macro.\n\t* testsuite/20_util/function_objects/bind_front/2.cc: New test.\n\nFrom-SVN: r274146", "tree": {"sha": "32cedd8cc552c0d7f8ea59ab1bf30e0348b0abf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32cedd8cc552c0d7f8ea59ab1bf30e0348b0abf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffc500dd41fd49db8e5ec5022389b664a1a04e6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffc500dd41fd49db8e5ec5022389b664a1a04e6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffc500dd41fd49db8e5ec5022389b664a1a04e6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffc500dd41fd49db8e5ec5022389b664a1a04e6d/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a38b51bc3a4cb1c4f22e5708b27379d37d141d90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a38b51bc3a4cb1c4f22e5708b27379d37d141d90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a38b51bc3a4cb1c4f22e5708b27379d37d141d90"}], "stats": {"total": 106, "additions": 102, "deletions": 4}, "files": [{"sha": "c8b9326bdd1d89beb7f36424a61427e68325c04b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffc500dd41fd49db8e5ec5022389b664a1a04e6d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffc500dd41fd49db8e5ec5022389b664a1a04e6d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ffc500dd41fd49db8e5ec5022389b664a1a04e6d", "patch": "@@ -1,5 +1,12 @@\n 2019-08-06  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tP1651R0 bind_front should not unwrap reference_wrapper\n+\t* include/std/functional (bind_front): Don't unwrap reference_wrapper.\n+\t* include/std/version (__cpp_lib_bind_front): Update value.\n+\t* testsuite/20_util/function_objects/bind_front/1.cc: Fix test for\n+\tfeature test macro.\n+\t* testsuite/20_util/function_objects/bind_front/2.cc: New test.\n+\n \t* include/std/numbers [!__STRICT_ANSI__ && _GLIBCXX_USE_FLOAT128]\n \t(e_v, log2e_v, log10e_v, pi_v, inv_pi_v, inv_sqrtpi_v, ln2_v, ln10_v)\n \t(sqrt2_v, sqrt3_v, inv_sqrt3, egamma_v, phi_v): Add explicit"}, {"sha": "30576f23d35fc8b1a09815bf0b129afaeec5a20b", "filename": "libstdc++-v3/include/std/functional", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffc500dd41fd49db8e5ec5022389b664a1a04e6d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffc500dd41fd49db8e5ec5022389b664a1a04e6d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional?ref=ffc500dd41fd49db8e5ec5022389b664a1a04e6d", "patch": "@@ -791,7 +791,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n #if __cplusplus > 201703L\n-#define __cpp_lib_bind_front 201902L\n+#define __cpp_lib_bind_front 201907L\n \n   template<typename _Fd, typename... _BoundArgs>\n     struct _Bind_front\n@@ -877,7 +877,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   template<typename _Fn, typename... _Args>\n     using _Bind_front_t\n-      = _Bind_front<decay_t<_Fn>, unwrap_ref_decay_t<_Args>...>;\n+      = _Bind_front<decay_t<_Fn>, decay_t<_Args>...>;\n \n   template<typename _Fn, typename... _Args>\n     _Bind_front_t<_Fn, _Args...>"}, {"sha": "9548725d1b7e66abfa2031fd3111a7d18a02cda3", "filename": "libstdc++-v3/include/std/version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffc500dd41fd49db8e5ec5022389b664a1a04e6d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffc500dd41fd49db8e5ec5022389b664a1a04e6d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion?ref=ffc500dd41fd49db8e5ec5022389b664a1a04e6d", "patch": "@@ -151,7 +151,7 @@\n #if __cplusplus > 201703L\n // c++2a\n #define __cpp_lib_atomic_ref 201806L\n-#define __cpp_lib_bind_front 201902L\n+#define __cpp_lib_bind_front 201907L\n #define __cpp_lib_bounded_array_traits 201902L\n #if __cpp_impl_destroying_delete\n # define __cpp_lib_destroying_delete 201806L"}, {"sha": "c6cf5cf2baf7ab349ccd95abed16a71e9d74d1a0", "filename": "libstdc++-v3/testsuite/20_util/function_objects/bind_front/1.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffc500dd41fd49db8e5ec5022389b664a1a04e6d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fbind_front%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffc500dd41fd49db8e5ec5022389b664a1a04e6d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fbind_front%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fbind_front%2F1.cc?ref=ffc500dd41fd49db8e5ec5022389b664a1a04e6d", "patch": "@@ -23,7 +23,7 @@\n \n #ifndef __cpp_lib_bind_front\n # error \"Feature test macro for bind_front is missing\"\n-#elif __cpp_lib_bind_front < 201811L\n+#elif __cpp_lib_bind_front < 201902L\n # error \"Feature test macro for bind_front has wrong value\"\n #endif\n "}, {"sha": "b68cc65f719daab66ecd68b03afda0dba8154262", "filename": "libstdc++-v3/testsuite/20_util/function_objects/bind_front/2.cc", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffc500dd41fd49db8e5ec5022389b664a1a04e6d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fbind_front%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffc500dd41fd49db8e5ec5022389b664a1a04e6d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fbind_front%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fbind_front%2F2.cc?ref=ffc500dd41fd49db8e5ec5022389b664a1a04e6d", "patch": "@@ -0,0 +1,91 @@\n+// Copyright (C) 2019 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do run { target c++2a } }\n+\n+#include <functional>\n+#include <memory>\n+#include <string>\n+#include <testsuite_hooks.h>\n+\n+// P1651R0 bind_front should not unwrap reference_wrapper\n+\n+#ifndef __cpp_lib_bind_front\n+# error \"Feature test macro for bind_front is missing\"\n+#elif __cpp_lib_bind_front < 201907L\n+# error \"Feature test macro for bind_front has wrong value\"\n+#endif\n+\n+void functionAcceptingStringView(std::string_view) { }\n+\n+void\n+test01()\n+{\n+  std::string s;\n+  auto fs = std::bind_front(&functionAcceptingStringView, std::string_view(s));\n+  fs();\n+}\n+\n+template <typename F>\n+struct PartialApply {\n+    PartialApply(F f) : f(f) {}\n+    F f;\n+\n+    template <typename... A> decltype(auto) operator()(A const&... a) const {\n+        if constexpr (std::is_invocable<F const&, A const&...>::value) {\n+            return f(a...);\n+        } else {\n+            return bind_front(*this, a...);\n+        }\n+    }\n+};\n+\n+void\n+test02()\n+{\n+  struct Thingy { };\n+  std::unique_ptr<Thingy> thingy;\n+  auto func = [](const std::unique_ptr<Thingy>&, int) {};\n+  PartialApply{func}(std::ref(thingy))(10);\n+}\n+\n+void\n+test03()\n+{\n+  std::string str;\n+  auto func = [](const std::string& s, int) -> const std::string& { return s; };\n+\n+  // sref refers to copy of str stored in bind_front result:\n+  const std::string& sref = PartialApply{func}(std::ref(str))(10);\n+\n+  // pre-P1651R0 this is a use of a dangling reference:\n+  const char& c = sref[0];\n+\n+  // post-P1651R0 the bind_front result stores a reference_wrapper by value,\n+  // and so sref is bound to str instead of dangling:\n+  VERIFY( &c == str.data() );\n+  VERIFY( &sref == &str );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  test02();\n+  test03();\n+}"}]}