{"sha": "6b44ad312f943d9ae65ad6db8f4be0640eefec6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI0NGFkMzEyZjk0M2Q5YWU2NWFkNmRiOGY0YmUwNjQwZWVmZWM2ZQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2007-08-04T20:14:26Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2007-08-04T20:14:26Z"}, "message": "re PR fortran/32770 ([Meta-bug] -fdefault-integer-8 issues)\n\n2007-08-04  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/32770\n\t* gfortran.dg/streamio_8.f90:  Adjust so test case passes\n\tfor -fdefault-integer-8 and -fdefault-real-8.\n\t* gfortran.dg/streamio_10.f90:  Likewise.\n\t* gfortran.dg/sizeof.f90:  Likewise.\n\nFrom-SVN: r127212", "tree": {"sha": "ad0524d9a67b66bd3b48848f50ff5f9d4214e4fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad0524d9a67b66bd3b48848f50ff5f9d4214e4fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b44ad312f943d9ae65ad6db8f4be0640eefec6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b44ad312f943d9ae65ad6db8f4be0640eefec6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b44ad312f943d9ae65ad6db8f4be0640eefec6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b44ad312f943d9ae65ad6db8f4be0640eefec6e/comments", "author": null, "committer": null, "parents": [{"sha": "867140ecff102a03de8736354b3697736901d049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/867140ecff102a03de8736354b3697736901d049", "html_url": "https://github.com/Rust-GCC/gccrs/commit/867140ecff102a03de8736354b3697736901d049"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "d18f3b94d6916fdd2bf9aa3437b16e40c459ec42", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b44ad312f943d9ae65ad6db8f4be0640eefec6e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b44ad312f943d9ae65ad6db8f4be0640eefec6e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6b44ad312f943d9ae65ad6db8f4be0640eefec6e", "patch": "@@ -1,3 +1,11 @@\n+2007-08-04  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/32770\n+\t* gfortran.dg/streamio_8.f90:  Adjust so test case passes\n+\tfor -fdefault-integer-8 and -fdefault-real-8.\n+\t* gfortran.dg/streamio_10.f90:  Likewise.\n+\t* gfortran.dg/sizeof.f90:  Likewise.\n+\n 2007-08-04  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/32770"}, {"sha": "5518ba22491192102de0ff940bb622f5328282c5", "filename": "gcc/testsuite/gfortran.dg/sizeof.f90", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b44ad312f943d9ae65ad6db8f4be0640eefec6e/gcc%2Ftestsuite%2Fgfortran.dg%2Fsizeof.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b44ad312f943d9ae65ad6db8f4be0640eefec6e/gcc%2Ftestsuite%2Fgfortran.dg%2Fsizeof.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsizeof.f90?ref=6b44ad312f943d9ae65ad6db8f4be0640eefec6e", "patch": "@@ -7,15 +7,21 @@ subroutine check_int (j)\n   logical :: l(6)\n   integer(8) :: jb(5,4)\n \n-  if (sizeof (j) /= sizeof (i)) call abort\n   if (sizeof (jb) /= 2*sizeof (ib)) call abort\n \n+  if (sizeof(j) == 4) then\n+     if (sizeof (j) /= sizeof (i)) call abort\n+  else\n+     if (sizeof (j) /= 2 * sizeof (i)) call abort\n+  end if\n+\n   ipa=>ib(2:3,1)\n \n   l = (/ sizeof(i) == 4, sizeof(ia) == 20, sizeof(ib) == 80, &\n        sizeof(ip) == 4, sizeof(ipa) == 8, sizeof(ib(1:5:2,3)) == 12 /)\n \n   if (any(.not.l)) call abort\n+\n   if (sizeof(l) /= 6*sizeof(l(1))) call abort\n end subroutine check_int\n \n@@ -25,8 +31,8 @@ subroutine check_real (x, y)\n   target :: r\n   pointer :: rp\n   double precision :: d(5,5)\n-  complex :: c(5)\n-  \n+  complex(kind=4) :: c(5)\n+\n   if (sizeof (y) /= 5*sizeof (x)) call abort\n \n   if (sizeof (r) /= 8000*4) call abort"}, {"sha": "b0c573e6fbe03860496ba6f499fa4881ce7c7ebf", "filename": "gcc/testsuite/gfortran.dg/streamio_10.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b44ad312f943d9ae65ad6db8f4be0640eefec6e/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b44ad312f943d9ae65ad6db8f4be0640eefec6e/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_10.f90?ref=6b44ad312f943d9ae65ad6db8f4be0640eefec6e", "patch": "@@ -4,7 +4,7 @@\n ! Test case derived from that given in PR by Steve Kargl.\n program stream_io_10\n   implicit none\n-  integer :: a(4), b(4)\n+  integer(kind=4) :: a(4), b(4)\n   integer(kind=8) :: thepos\n   a = (/ 1, 2, 3, 4 /)\n   b = a"}, {"sha": "420f5b91a56bafd5faf937af5bae51cba92b6e79", "filename": "gcc/testsuite/gfortran.dg/streamio_8.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b44ad312f943d9ae65ad6db8f4be0640eefec6e/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b44ad312f943d9ae65ad6db8f4be0640eefec6e/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstreamio_8.f90?ref=6b44ad312f943d9ae65ad6db8f4be0640eefec6e", "patch": "@@ -8,7 +8,7 @@ PROGRAM stream_io_8\n   real(kind=8) r\n   mypos = 0\n   mystring = \"not yet\"\n-  r = 12.25\n+  r = 12.25d0\n   OPEN(UNIT=11, ACCESS=\"stream\")\n   inquire(unit=11, pos=mypos)\n   if (mypos.ne.1) call abort()\n@@ -18,17 +18,17 @@ PROGRAM stream_io_8\n   WRITE(11) \"second\"\n   inquire(unit=11, pos=mypos)\n   if (mypos.ne.12) call abort()\n-  WRITE(11) 1234567\n+  WRITE(11) 1234567_4\n   inquire(unit=11, pos=mypos)\n   if (mypos.ne.16) call abort()\n   write(11) r\n   r = 0.0\n   inquire (11, pos=mypos)\n   read(11,pos=16)r\n-  if (r.ne.12.25) call abort()\n+  if (abs(r-12.25d0)>1e-10) call abort()\n   inquire(unit=11, pos=mypos)\n   inquire(unit=11, access=mystring)\n   if (mypos.ne.24) call abort()\n   if (mystring.ne.\"STREAM\") call abort()\n   CLOSE(UNIT=11, status=\"delete\")\n-END PROGRAM stream_io_8\n\\ No newline at end of file\n+END PROGRAM stream_io_8"}]}