{"sha": "7ac16ba05b3599300418c4d941b25c97c4c7c3fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FjMTZiYTA1YjM1OTkzMDA0MThjNGQ5NDFiMjVjOTdjNGM3YzNmZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-10T12:26:52Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-10T12:26:52Z"}, "message": "(out_file, md_file, tm_file, {build,host}_xm_file):\n\nNew symbols, to be overridden by configure.\n(insn-*): Use $(md_file), not md.\n(aux-output.o): Use $(out_file), not aux-output.c.\n($(MD_FILE)): Rework to use new conventions.\n(gen*.o, bi-*.o): Depend on $(build_xm_file), not hconfig.h.\n(scan.o, fix-header.o, scan-decls.o): Likewise.\n(distclean): Adjust files removed for new convention.\n\nFrom jason@cygnus.com:\n(STAGESTUFF): Add underscore.c.\n(underscore.c): Rename temporary files to begin with 'tmp-' so that they will\nbe removed by 'make mostlyclean'.\n\nFrom-SVN: r9608", "tree": {"sha": "b99f5484774f3e2f8225b58075978d9281bacc41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b99f5484774f3e2f8225b58075978d9281bacc41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ac16ba05b3599300418c4d941b25c97c4c7c3fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ac16ba05b3599300418c4d941b25c97c4c7c3fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ac16ba05b3599300418c4d941b25c97c4c7c3fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ac16ba05b3599300418c4d941b25c97c4c7c3fe/comments", "author": null, "committer": null, "parents": [{"sha": "046b1537a0e4d57cb0c5908c993b13603a116790", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/046b1537a0e4d57cb0c5908c993b13603a116790", "html_url": "https://github.com/Rust-GCC/gccrs/commit/046b1537a0e4d57cb0c5908c993b13603a116790"}], "stats": {"total": 123, "additions": 64, "deletions": 59}, "files": [{"sha": "0e50270af5c9d3552a27d99499bb879c66e9b94f", "filename": "gcc/Makefile.in", "status": "modified", "additions": 64, "deletions": 59, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ac16ba05b3599300418c4d941b25c97c4c7c3fe/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ac16ba05b3599300418c4d941b25c97c4c7c3fe/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=7ac16ba05b3599300418c4d941b25c97c4c7c3fe", "patch": "@@ -150,6 +150,11 @@ PREMADE_ATTRTAB =\n target= ... `configure' substitutes actual target name here.\n xmake_file= ... `configure' substitutes actual x- file name here.\n tmake_file= ... `configure' substitutes actual t- file name here.\n+out_file= ... `configure' substitutes actual out- file name here.\n+md_file= ... `configure' substitutes actual md file name here.\n+tm_file= ... `configure' substitutes actual tm file name here.\n+build_xm_file= ... `configure' substitutes actual build xm- file name here.\n+host_xm_file= ... `configure' substitutes actual host xm- file name here.\n version=`sed -e 's/.*\\\"\\([^ \\\"]*\\)[ \\\"].*/\\1/' < $(srcdir)/version.c`\n mainversion=`sed -e 's/.*\\\"\\([0-9]*\\.[0-9]*\\).*/\\1/' < $(srcdir)/version.c`\n \n@@ -511,7 +516,7 @@ STAGESTUFF = *.o insn-flags.h insn-config.h insn-codes.h \\\n  bi-arity$(exeext) bi-opcode$(exeext) bi-opname$(exeext) \\\n  $(GCC_PASSES) $(EXTRA_PARTS) $(EXTRA_PROGRAMS) gcc-cross$(exeext) $(CCCP) \\\n  cc1obj$(exeext) enquire$(exeext) protoize$(exeext) unprotoize$(exeext) \\\n- specs collect2$(exeext) $(USE_COLLECT2) \\\n+ specs collect2$(exeext) $(USE_COLLECT2) underscore.c \\\n  $(LANG_STAGESTUFF)\n \n # Members of libgcc1.a.\n@@ -552,7 +557,7 @@ USER_H = $(srcdir)/ginclude/stdarg.h $(srcdir)/ginclude/stddef.h \\\n # one of the machine description files is edited.\n # That may or may not be what one wants to do.\n # If it is, rm *.o is an easy way to do it.\n-# CONFIG_H = config.h tm.h\n+# CONFIG_H = $(host_xm_file) $(tm_file)\n CONFIG_H =\n RTL_H = rtl.h rtl.def machmode.h machmode.def\n TREE_H = tree.h real.h tree.def machmode.h machmode.def\n@@ -1048,16 +1053,16 @@ collect2.o : collect2.c $(CONFIG_H) gstab.h obstack.h demangle.h\n cplus-dem.o: cplus-dem.c demangle.h\n \n underscore.c: $(GCC_PASSES)\n-\techo \"int xxy_us_dummy;\" >dummy.c\n-\t$(GCC_FOR_TARGET) -S dummy.c\n-\techo '/*WARNING: This file is automatically generated!*/' >underscore.t\n-\tif grep _xxy_us_dummy dummy.s > /dev/null ; then \\\n-\t  echo \"int prepends_underscore = 1;\" >>underscore.t; \\\n+\techo \"int xxy_us_dummy;\" >tmp-dum.c\n+\t$(GCC_FOR_TARGET) -S tmp-dum.c\n+\techo '/*WARNING: This file is automatically generated!*/' >tmp-under.c\n+\tif grep _xxy_us_dummy tmp-dum.s > /dev/null ; then \\\n+\t  echo \"int prepends_underscore = 1;\" >>tmp-under.c; \\\n \telse \\\n-\t  echo \"int prepends_underscore = 0;\" >>underscore.t; \\\n+\t  echo \"int prepends_underscore = 0;\" >>tmp-under.c; \\\n \tfi\n-\t$(srcdir)/move-if-change underscore.t underscore.c\n-\t-rm -f dummy.c dummy.s\n+\t$(srcdir)/move-if-change tmp-under.c underscore.c\n+\t-rm -f tmp-dum.c tmp-dum.s\n \n # Objective C language specific files.\n \n@@ -1196,11 +1201,11 @@ recog.o : recog.c $(CONFIG_H) $(RTL_H)  \\\n reg-stack.o : reg-stack.c $(CONFIG_H) $(RTL_H) $(TREE_H) \\\n    regs.h hard-reg-set.h flags.h insn-config.h\n \n-aux-output.o : aux-output.c $(CONFIG_H) \\\n+aux-output.o : $(out_file) $(CONFIG_H) \\\n    $(RTL_H) regs.h hard-reg-set.h real.h insn-config.h conditions.h \\\n    insn-flags.h output.h insn-attr.h insn-codes.h\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t $(MAYBE_TARGET_DEFAULT) aux-output.c\n+\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES)  -o $@ \\\n+\t $(MAYBE_TARGET_DEFAULT) $(out_file)\n \n # Build auxiliary files that support ecoff format.\n mips-tfile: mips-tfile.o version.o $(LIBDEPS)\n@@ -1251,20 +1256,20 @@ alloca.o:\talloca.c\n # trailing `;'), we call true for each.\n \n insn-config.h: stamp-config ; @true\n-stamp-config : md genconfig $(srcdir)/move-if-change\n-\t./genconfig md > tmp-config.h\n+stamp-config : $(md_file) genconfig $(srcdir)/move-if-change\n+\t./genconfig $(md_file) > tmp-config.h\n \t$(srcdir)/move-if-change tmp-config.h insn-config.h\n \ttouch stamp-config\n \n insn-flags.h: stamp-flags ; @true\n-stamp-flags : md genflags $(srcdir)/move-if-change\n-\t./genflags md > tmp-flags.h\n+stamp-flags : $(md_file) genflags $(srcdir)/move-if-change\n+\t./genflags $(md_file) > tmp-flags.h\n \t$(srcdir)/move-if-change tmp-flags.h insn-flags.h\n \ttouch stamp-flags\n \n insn-codes.h: stamp-codes ; @true\n-stamp-codes : md gencodes $(srcdir)/move-if-change\n-\t./gencodes md > tmp-codes.h\n+stamp-codes : $(md_file) gencodes $(srcdir)/move-if-change\n+\t./gencodes $(md_file) > tmp-codes.h\n \t$(srcdir)/move-if-change tmp-codes.h insn-codes.h\n \ttouch stamp-codes\n \n@@ -1273,8 +1278,8 @@ insn-emit.o : insn-emit.c $(CONFIG_H) $(RTL_H) expr.h real.h output.h \\\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-emit.c\n \n insn-emit.c: stamp-emit ; @true\n-stamp-emit : md genemit $(srcdir)/move-if-change\n-\t./genemit md > tmp-emit.c\n+stamp-emit : $(md_file) genemit $(srcdir)/move-if-change\n+\t./genemit $(md_file) > tmp-emit.c\n \t$(srcdir)/move-if-change tmp-emit.c insn-emit.c\n \ttouch stamp-emit\n \n@@ -1283,8 +1288,8 @@ insn-recog.o : insn-recog.c $(CONFIG_H) $(RTL_H) insn-config.h recog.h \\\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-recog.c\n \n insn-recog.c: stamp-recog ; @true\n-stamp-recog : md genrecog $(srcdir)/move-if-change\n-\t./genrecog md > tmp-recog.c\n+stamp-recog : $(md_file) genrecog $(srcdir)/move-if-change\n+\t./genrecog $(md_file) > tmp-recog.c\n \t$(srcdir)/move-if-change tmp-recog.c insn-recog.c\n \ttouch stamp-recog\n \n@@ -1293,26 +1298,26 @@ insn-opinit.o : insn-opinit.c $(CONFIG_H) $(RTL_H) insn-codes.h insn-flags.h \\\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-opinit.c\n \n insn-opinit.c: stamp-opinit ; @true\n-stamp-opinit : md genopinit $(srcdir)/move-if-change\n-\t./genopinit md > tmp-opinit.c\n+stamp-opinit : $(md_file) genopinit $(srcdir)/move-if-change\n+\t./genopinit $(md_file) > tmp-opinit.c\n \t$(srcdir)/move-if-change tmp-opinit.c insn-opinit.c\n \ttouch stamp-opinit\n \n insn-extract.o : insn-extract.c $(CONFIG_H) $(RTL_H)\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-extract.c\n \n insn-extract.c: stamp-extract ; @true\n-stamp-extract : md genextract $(srcdir)/move-if-change\n-\t./genextract md > tmp-extract.c\n+stamp-extract : $(md_file) genextract $(srcdir)/move-if-change\n+\t./genextract $(md_file) > tmp-extract.c\n \t$(srcdir)/move-if-change tmp-extract.c insn-extract.c\n \ttouch stamp-extract\n \n insn-peep.o : insn-peep.c $(CONFIG_H) $(RTL_H) regs.h output.h real.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-peep.c\n \n insn-peep.c: stamp-peep ; @true\n-stamp-peep : md genpeep $(srcdir)/move-if-change\n-\t./genpeep md > tmp-peep.c\n+stamp-peep : $(md_file) genpeep $(srcdir)/move-if-change\n+\t./genpeep $(md_file) > tmp-peep.c\n \t$(srcdir)/move-if-change tmp-peep.c insn-peep.c\n \ttouch stamp-peep\n \n@@ -1321,19 +1326,19 @@ insn-attrtab.o : insn-attrtab.c $(CONFIG_H) $(RTL_H) regs.h real.h output.h \\\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-attrtab.c\n \n insn-attr.h: stamp-attr ; @true\n-stamp-attr : md genattr $(srcdir)/move-if-change\n-\t./genattr md > tmp-attr.h\n+stamp-attr : $(md_file) genattr $(srcdir)/move-if-change\n+\t./genattr $(md_file) > tmp-attr.h\n \t$(srcdir)/move-if-change tmp-attr.h insn-attr.h\n \ttouch stamp-attr\n \n insn-attrtab.c: stamp-attrtab ; @true\n-stamp-attrtab : md genattrtab $(srcdir)/move-if-change\n-\tif cmp -s $(PREMADE_ATTRTAB_MD) md;\t\\\n+stamp-attrtab : $(md_file) genattrtab $(srcdir)/move-if-change\n+\tif cmp -s $(PREMADE_ATTRTAB_MD) $(md_file);\t\\\n \tthen\t\t\t\t\t\\\n \t  echo Using $(PREMADE_ATTRTAB);\t\\\n \t  cp $(PREMADE_ATTRTAB) tmp-attrtab.c;\t\\\n \telse\t\t\t\t\t\\\n-\t  ./genattrtab md > tmp-attrtab.c;\t\\\n+\t  ./genattrtab $(md_file) > tmp-attrtab.c;\t\\\n \tfi\n \t$(srcdir)/move-if-change tmp-attrtab.c insn-attrtab.c\n \ttouch stamp-attrtab\n@@ -1344,8 +1349,8 @@ insn-output.o : insn-output.c $(CONFIG_H) $(RTL_H) regs.h real.h conditions.h \\\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-output.c\n \n insn-output.c: stamp-output ; @true\n-stamp-output : md genoutput $(srcdir)/move-if-change\n-\t./genoutput md > tmp-output.c\n+stamp-output : $(md_file) genoutput $(srcdir)/move-if-change\n+\t./genoutput $(md_file) > tmp-output.c\n \t$(srcdir)/move-if-change tmp-output.c insn-output.c\n \ttouch stamp-output\n \f\n@@ -1362,84 +1367,84 @@ stamp-output : md genoutput $(srcdir)/move-if-change\n # Pass the md file through cpp if the target requests it.\n $(MD_FILE): $(MD_DEPS)\n \trm -f $@\n-\t$(MD_CPP) $(MD_CPPFLAGS) md.pre-cpp | sed 's/^# /; /g' > tmp-$@\n+\t$(MD_CPP) $(MD_CPPFLAGS) $(md_file) | sed 's/^# /; /g' > tmp-$@\n \tmv tmp-$@ $@\n \n genconfig : genconfig.o $(HOST_RTL) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o genconfig \\\n \t  genconfig.o $(HOST_RTL) $(HOST_LIBS)\n \n-genconfig.o : genconfig.c $(RTL_H) hconfig.h\n+genconfig.o : genconfig.c $(RTL_H) $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genconfig.c\n \n genflags : genflags.o $(HOST_RTL) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o genflags \\\n \t genflags.o $(HOST_RTL) $(HOST_LIBS)\n \n-genflags.o : genflags.c $(RTL_H) hconfig.h\n+genflags.o : genflags.c $(RTL_H) $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genflags.c\n \n gencodes : gencodes.o $(HOST_RTL) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o gencodes \\\n \t gencodes.o $(HOST_RTL) $(HOST_LIBS)\n \n-gencodes.o : gencodes.c $(RTL_H) hconfig.h\n+gencodes.o : gencodes.c $(RTL_H) $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gencodes.c\n \n genemit : genemit.o $(HOST_RTL) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o genemit \\\n \t genemit.o $(HOST_RTL) $(HOST_LIBS)\n \n-genemit.o : genemit.c $(RTL_H) hconfig.h\n+genemit.o : genemit.c $(RTL_H) $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genemit.c\n \n genopinit : genopinit.o $(HOST_RTL) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o genopinit \\\n \t genopinit.o $(HOST_RTL) $(HOST_LIBS)\n \n-genopinit.o : genopinit.c $(RTL_H) hconfig.h\n+genopinit.o : genopinit.c $(RTL_H) $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genopinit.c\n \n genrecog : genrecog.o $(HOST_RTL) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o genrecog \\\n \t genrecog.o $(HOST_RTL) $(HOST_LIBS)\n \n-genrecog.o : genrecog.c $(RTL_H) hconfig.h\n+genrecog.o : genrecog.c $(RTL_H) $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genrecog.c\n \n genextract : genextract.o $(HOST_RTL) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o genextract \\\n \t genextract.o $(HOST_RTL) $(HOST_LIBS)\n \n-genextract.o : genextract.c $(RTL_H) hconfig.h insn-config.h\n+genextract.o : genextract.c $(RTL_H) $(build_xm_file) insn-config.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genextract.c\n \n genpeep : genpeep.o $(HOST_RTL) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o genpeep \\\n \t genpeep.o $(HOST_RTL) $(HOST_LIBS)\n \n-genpeep.o : genpeep.c $(RTL_H) hconfig.h\n+genpeep.o : genpeep.c $(RTL_H) $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genpeep.c\n \n genattr : genattr.o $(HOST_RTL) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o genattr \\\n \t genattr.o $(HOST_RTL) $(HOST_LIBS)\n \n-genattr.o : genattr.c $(RTL_H) hconfig.h\n+genattr.o : genattr.c $(RTL_H) $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genattr.c\n \n genattrtab : genattrtab.o $(HOST_RTL) $(HOST_PRINT) $(HOST_RTLANAL) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o genattrtab \\\n \t genattrtab.o $(HOST_RTL) $(HOST_PRINT) $(HOST_RTLANAL) $(HOST_LIBS)\n \n-genattrtab.o : genattrtab.c $(RTL_H) hconfig.h insn-config.h\n+genattrtab.o : genattrtab.c $(RTL_H)  $(build_xm_file) insn-config.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genattrtab.c\n \n genoutput : genoutput.o $(HOST_RTL) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o genoutput \\\n \t genoutput.o $(HOST_RTL) $(HOST_LIBS)\n \n-genoutput.o : genoutput.c $(RTL_H) hconfig.h\n+genoutput.o : genoutput.c $(RTL_H) $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genoutput.c\n \f\n # Compile the libraries to be used by gen*.\n@@ -1512,19 +1517,19 @@ bi-run.o:\t$(srcdir)/bi-run.c $(srcdir)/bi-run.h $(srcdir)/bc-typecd.h \\\n $(srcdir)/bi-parser.h: $(srcdir)/bi-parser.c\n $(srcdir)/bi-parser.c: $(srcdir)/bi-parser.y\n \tcd $(srcdir); $(BISON) $(BISONFLAGS) -d bi-parser.y -o bi-parser.c\n-bi-parser.o:\t$(srcdir)/bi-parser.c $(srcdir)/bi-defs.h hconfig.h\n+bi-parser.o: $(srcdir)/bi-parser.c $(srcdir)/bi-defs.h $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) \\\n \t   $(srcdir)/bi-parser.c\n-bi-lexer.o:\t$(srcdir)/bi-lexer.c $(srcdir)/bi-parser.h hconfig.h\n+bi-lexer.o: $(srcdir)/bi-lexer.c $(srcdir)/bi-parser.h $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) \\\n \t   $(srcdir)/bi-lexer.c\n-bi-arity.o: bi-arity.c $(srcdir)/bi-defs.h hconfig.h\n+bi-arity.o: bi-arity.c $(srcdir)/bi-defs.h $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) \\\n \t   $(srcdir)/bi-arity.c\n-bi-opcode.o: bi-opcode.c $(srcdir)/bi-defs.h hconfig.h\n+bi-opcode.o: bi-opcode.c $(srcdir)/bi-defs.h $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) \\\n \t   $(srcdir)/bi-opcode.c\n-bi-opname.o: bi-opname.c $(srcdir)/bi-defs.h hconfig.h\n+bi-opname.o: bi-opname.c $(srcdir)/bi-defs.h $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) \\\n \t   $(srcdir)/bi-opname.c\n bi-reverse.o: bi-reverse.c $(srcdir)/bi-defs.h\n@@ -1757,10 +1762,10 @@ gen-protos: gen-protos.o scan.o cppalloc.o $(HOST_LIBDEPS)\n \t${HOST_CC} $(HOST_CFLAGS) $(HOST_LDFLAGS) -o gen-protos \\\n \t  gen-protos.o scan.o cppalloc.o $(HOST_LIBS)\n \n-gen-protos.o: gen-protos.c scan.h hconfig.h\n+gen-protos.o: gen-protos.c scan.h $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gen-protos.c\n \n-scan.o: scan.c scan.h hconfig.h\n+scan.o: scan.c scan.h $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/scan.c\n \n xsys-protos.h: $(GCC_PASSES) $(srcdir)/sys-protos.h deduced.h gen-protos Makefile\n@@ -1776,10 +1781,10 @@ fix-header: fix-header.o scan-decls.o scan.o xsys-protos.h $(HOST_LIBDEPS) cppli\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o fix-header \\\n \t  fix-header.o scan-decls.o scan.o cpplib.o cpphash.o cppalloc.o version.o cppexp.o $(HOST_LIBS)\n \n-fix-header.o: fix-header.c obstack.h scan.h xsys-protos.h hconfig.h\n+fix-header.o: fix-header.c obstack.h scan.h xsys-protos.h $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/fix-header.c\n \n-scan-decls.o: scan-decls.c scan.h hconfig.h\n+scan-decls.o: scan-decls.c scan.h $(build_xm_file)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/scan-decls.c\n \n # stmp-fixproto depends on this, not on fix-header directly.\n@@ -1920,9 +1925,9 @@ clean: mostlyclean bytecode.clean lang.clean\n # Delete all files that users would normally create\n # while building and installing GCC.\n distclean: clean bytecode.distclean lang.distclean\n-\t-rm -f tm.h aux-output.c config.h tconfig.h hconfig.h\n+\t-rm -f tm.h config.h tconfig.h hconfig.h\n \t-rm -f config.status config.run\n-\t-rm -f md md.pre-cpp\n+\t-rm -f md\n \t-rm -f Makefile *.oaux\n \t-rm -fr stage1 stage2 stage3 stage4\n \t-rm -f */stage1 */stage2 */stage3 */stage4 */include"}]}