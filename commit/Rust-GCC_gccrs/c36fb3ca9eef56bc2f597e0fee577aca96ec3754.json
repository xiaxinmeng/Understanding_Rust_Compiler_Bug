{"sha": "c36fb3ca9eef56bc2f597e0fee577aca96ec3754", "node_id": "C_kwDOANBUbNoAKGMzNmZiM2NhOWVlZjU2YmMyZjU5N2UwZmVlNTc3YWNhOTZlYzM3NTQ", "commit": {"author": {"name": "Christoph M\u00fcllner", "email": "christoph.muellner@vrull.eu", "date": "2022-06-13T13:09:46Z"}, "committer": {"name": "Philipp Tomsich", "email": "philipp.tomsich@vrull.eu", "date": "2023-03-15T08:56:25Z"}, "message": "riscv: riscv-cores.def: Add T-Head XuanTie C906\n\nThis adds T-Head's XuanTie C906 to the list of known cores as \"thead-c906\".\nThe C906 is shipped for quite some time (it is the core of the Allwinner D1).\nNote, that the tuning struct for the C906 is already part of GCC (it is\nalso name \"thead-c906\").\n\ngcc/ChangeLog:\n\n\t* config/riscv/riscv-cores.def (RISCV_CORE): Add \"thead-c906\".\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/mcpu-thead-c906.c: New test.\n\nSigned-off-by: Christoph M\u00fcllner <christoph.muellner@vrull.eu>", "tree": {"sha": "b9a76f59fbf74ea93e8a39463173748152330919", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9a76f59fbf74ea93e8a39463173748152330919"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c36fb3ca9eef56bc2f597e0fee577aca96ec3754", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c36fb3ca9eef56bc2f597e0fee577aca96ec3754", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c36fb3ca9eef56bc2f597e0fee577aca96ec3754", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c36fb3ca9eef56bc2f597e0fee577aca96ec3754/comments", "author": {"login": "cmuellner", "id": 92810, "node_id": "MDQ6VXNlcjkyODEw", "avatar_url": "https://avatars.githubusercontent.com/u/92810?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmuellner", "html_url": "https://github.com/cmuellner", "followers_url": "https://api.github.com/users/cmuellner/followers", "following_url": "https://api.github.com/users/cmuellner/following{/other_user}", "gists_url": "https://api.github.com/users/cmuellner/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmuellner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmuellner/subscriptions", "organizations_url": "https://api.github.com/users/cmuellner/orgs", "repos_url": "https://api.github.com/users/cmuellner/repos", "events_url": "https://api.github.com/users/cmuellner/events{/privacy}", "received_events_url": "https://api.github.com/users/cmuellner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ptomsich", "id": 14983582, "node_id": "MDQ6VXNlcjE0OTgzNTgy", "avatar_url": "https://avatars.githubusercontent.com/u/14983582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptomsich", "html_url": "https://github.com/ptomsich", "followers_url": "https://api.github.com/users/ptomsich/followers", "following_url": "https://api.github.com/users/ptomsich/following{/other_user}", "gists_url": "https://api.github.com/users/ptomsich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptomsich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptomsich/subscriptions", "organizations_url": "https://api.github.com/users/ptomsich/orgs", "repos_url": "https://api.github.com/users/ptomsich/repos", "events_url": "https://api.github.com/users/ptomsich/events{/privacy}", "received_events_url": "https://api.github.com/users/ptomsich/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8351535f20b52cf332791f60d2bf22a025833516", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8351535f20b52cf332791f60d2bf22a025833516", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8351535f20b52cf332791f60d2bf22a025833516"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "7d87ab7ce28f045f659b58d30ca339c54f4a7830", "filename": "gcc/config/riscv/riscv-cores.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c36fb3ca9eef56bc2f597e0fee577aca96ec3754/gcc%2Fconfig%2Friscv%2Friscv-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c36fb3ca9eef56bc2f597e0fee577aca96ec3754/gcc%2Fconfig%2Friscv%2Friscv-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-cores.def?ref=c36fb3ca9eef56bc2f597e0fee577aca96ec3754", "patch": "@@ -73,4 +73,8 @@ RISCV_CORE(\"sifive-s76\",      \"rv64imafdc\", \"sifive-7-series\")\n RISCV_CORE(\"sifive-u54\",      \"rv64imafdc\", \"sifive-5-series\")\n RISCV_CORE(\"sifive-u74\",      \"rv64imafdc\", \"sifive-7-series\")\n \n+RISCV_CORE(\"thead-c906\",      \"rv64imafdc_xtheadba_xtheadbb_xtheadbs_xtheadcmo_\"\n+\t\t\t      \"xtheadcondmov_xtheadfmemidx_xtheadmac_\"\n+\t\t\t      \"xtheadmemidx_xtheadmempair_xtheadsync\",\n+\t\t\t      \"thead-c906\")\n #undef RISCV_CORE"}, {"sha": "a71b43a61672cdc2a7827e3234b90cceda6d6159", "filename": "gcc/testsuite/gcc.target/riscv/mcpu-thead-c906.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c36fb3ca9eef56bc2f597e0fee577aca96ec3754/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fmcpu-thead-c906.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c36fb3ca9eef56bc2f597e0fee577aca96ec3754/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fmcpu-thead-c906.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fmcpu-thead-c906.c?ref=c36fb3ca9eef56bc2f597e0fee577aca96ec3754", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if \"-march given\" { *-*-* } { \"-march=*\" } } */\n+/* { dg-options \"-mcpu=thead-c906\" { target { rv64 } } } */\n+/* T-Head XuanTie C906 => rv64imafdc */\n+\n+#if !((__riscv_xlen == 64)\t\t\\\n+      && !defined(__riscv_32e)\t\t\\\n+      && defined(__riscv_mul)\t\t\\\n+      && defined(__riscv_atomic)\t\\\n+      && (__riscv_flen == 64)\t\t\\\n+      && defined(__riscv_compressed)\t\\\n+      && defined(__riscv_xtheadba)\t\\\n+      && defined(__riscv_xtheadbb)\t\\\n+      && defined(__riscv_xtheadbs)\t\\\n+      && defined(__riscv_xtheadcmo)\t\\\n+      && defined(__riscv_xtheadcondmov)\t\\\n+      && defined(__riscv_xtheadfmemidx)\t\\\n+      && defined(__riscv_xtheadmac)\t\\\n+      && defined(__riscv_xtheadmemidx)\t\\\n+      && defined(__riscv_xtheadmempair)\t\\\n+      && defined(__riscv_xtheadsync))\n+#error \"unexpected arch\"\n+#endif\n+\n+int main()\n+{\n+  return 0;\n+}"}]}