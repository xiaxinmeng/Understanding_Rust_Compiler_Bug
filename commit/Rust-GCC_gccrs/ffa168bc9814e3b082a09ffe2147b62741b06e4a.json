{"sha": "ffa168bc9814e3b082a09ffe2147b62741b06e4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZhMTY4YmM5ODE0ZTNiMDgyYTA5ZmZlMjE0N2I2Mjc0MWIwNmU0YQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-06T11:25:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-06T11:25:31Z"}, "message": "[multiple changes]\n\n2017-01-06  Gary Dismukes  <dismukes@adacore.com>\n\n\t* einfo.ads, sem_res.adb, sem_attr.adb, sem_ch6.adb: Minor\n\treformatting and typo fixes.\n\n2017-01-06  Bob Duff  <duff@adacore.com>\n\n\t* snames.ads-tmpl: New names for pragma renaming.\n\t* snames.adb-tmpl (Is_Configuration_Pragma_Name): Minor cleanup.\n\t* par-prag.adb: Add new pragma name to case statement.\n\t* sem_prag.adb (Rename_Pragma): Initial cut at semantic analysis\n\tof the pragma.\n\t* sinfo.ads, sinfo.adb (Pragma_Name_Mapped): Preparation work,\n\tDummy implementation of Pragma_Name_Mapped.\n\nFrom-SVN: r244140", "tree": {"sha": "39a43f05dbf4500cbd792f561b94826dc8822537", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39a43f05dbf4500cbd792f561b94826dc8822537"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffa168bc9814e3b082a09ffe2147b62741b06e4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffa168bc9814e3b082a09ffe2147b62741b06e4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffa168bc9814e3b082a09ffe2147b62741b06e4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffa168bc9814e3b082a09ffe2147b62741b06e4a/comments", "author": null, "committer": null, "parents": [{"sha": "9ca67d3f24e7386cf89c2ce2095677cd0e4c87de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ca67d3f24e7386cf89c2ce2095677cd0e4c87de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ca67d3f24e7386cf89c2ce2095677cd0e4c87de"}], "stats": {"total": 91, "additions": 73, "deletions": 18}, "files": [{"sha": "e465f9fc622be174f9f350d2adcd31ed80eac87b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa168bc9814e3b082a09ffe2147b62741b06e4a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa168bc9814e3b082a09ffe2147b62741b06e4a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ffa168bc9814e3b082a09ffe2147b62741b06e4a", "patch": "@@ -1,3 +1,18 @@\n+2017-01-06  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* einfo.ads, sem_res.adb, sem_attr.adb, sem_ch6.adb: Minor\n+\treformatting and typo fixes.\n+\n+2017-01-06  Bob Duff  <duff@adacore.com>\n+\n+\t* snames.ads-tmpl: New names for pragma renaming.\n+\t* snames.adb-tmpl (Is_Configuration_Pragma_Name): Minor cleanup.\n+\t* par-prag.adb: Add new pragma name to case statement.\n+\t* sem_prag.adb (Rename_Pragma): Initial cut at semantic analysis\n+\tof the pragma.\n+\t* sinfo.ads, sinfo.adb (Pragma_Name_Mapped): Preparation work,\n+\tDummy implementation of Pragma_Name_Mapped.\n+\n 2017-01-06  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch6.adb (Expand_Protected_Subprogram_Call): Add guard to"}, {"sha": "f42c3876991bd9963dd6a1943f6be8b8d652352d", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa168bc9814e3b082a09ffe2147b62741b06e4a/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa168bc9814e3b082a09ffe2147b62741b06e4a/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=ffa168bc9814e3b082a09ffe2147b62741b06e4a", "patch": "@@ -2484,8 +2484,7 @@ package Einfo is\n --       test for the need to replace references in Exp_Ch2.\n \n --    Is_Entry_Wrapper (Flag297)\n---       Defined on wrappers that are created for entries that have pre-\n---       condition aspects.\n+--       Defined on wrappers created for entries that have precondition aspects\n \n --    Is_Enumeration_Type (synthesized)\n --       Defined in all entities, true for enumeration types and subtypes"}, {"sha": "ff939f6848d97758db534042e44c657dda3de887", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa168bc9814e3b082a09ffe2147b62741b06e4a/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa168bc9814e3b082a09ffe2147b62741b06e4a/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=ffa168bc9814e3b082a09ffe2147b62741b06e4a", "patch": "@@ -1450,6 +1450,7 @@ begin\n            Pragma_Restricted_Run_Time            |\n            Pragma_Rational                       |\n            Pragma_Ravenscar                      |\n+           Pragma_Rename_Pragma                  |\n            Pragma_Reviewable                     |\n            Pragma_Share_Generic                  |\n            Pragma_Shared                         |"}, {"sha": "a1e64e4311befe53d35b962fd30b25d46b01159b", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa168bc9814e3b082a09ffe2147b62741b06e4a/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa168bc9814e3b082a09ffe2147b62741b06e4a/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=ffa168bc9814e3b082a09ffe2147b62741b06e4a", "patch": "@@ -3843,22 +3843,24 @@ package body Sem_Attr is\n          --  The prefix denotes an object\n \n          if Is_Object_Reference (P) then\n-            Analyze_And_Resolve (P);\n             Check_Object_Reference (P);\n \n-         --  Check the prefix is a type to avoid an error message stating the\n-         --  prefix must exclusively denote one\n+         --  The prefix denotes a type\n \n          elsif Is_Entity_Name (P) and then Is_Type (Entity (P)) then\n-\n             Check_Type;\n             Check_Not_Incomplete_Type;\n+\n+            --  Attribute 'Finalization_Size is not defined for class-wide\n+            --  types because it is not possible to know statically whether\n+            --  a definite type will have controlled components or not.\n+\n             if Is_Class_Wide_Type (Etype (P)) then\n                Error_Attr_P\n                  (\"prefix of % attribute cannot denote a class-wide type\");\n             end if;\n \n-         --  The prefix does not denote an object or a type\n+         --  The prefix denotes an illegal construct\n \n          else\n             Error_Attr_P"}, {"sha": "3ce683e22a65d4736eecf7aec6c3a0e84067a039", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa168bc9814e3b082a09ffe2147b62741b06e4a/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa168bc9814e3b082a09ffe2147b62741b06e4a/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=ffa168bc9814e3b082a09ffe2147b62741b06e4a", "patch": "@@ -3643,7 +3643,7 @@ package body Sem_Ch6 is\n               (Body_Id, Body_Id, 'b', Set_Ref => False, Force => True);\n \n             --  If the body is an entry wrapper created for an entry with\n-            --  preconditions, it must compiled in the context of the\n+            --  preconditions, it must be compiled in the context of the\n             --  enclosing synchronized object, because it may mention other\n             --  operations of the type.\n \n@@ -4018,7 +4018,7 @@ package body Sem_Ch6 is\n       End_Scope;\n \n       --  If we are compiling an entry wrapper, remove the enclosing\n-      --  syncrhonized object from the stack.\n+      --  synchronized object from the stack.\n \n       if Is_Entry_Wrapper (Body_Id) then\n          End_Scope;"}, {"sha": "a7c1ca45754724fd75c2245247bff45fcd96a50a", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 28, "deletions": 5, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa168bc9814e3b082a09ffe2147b62741b06e4a/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa168bc9814e3b082a09ffe2147b62741b06e4a/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ffa168bc9814e3b082a09ffe2147b62741b06e4a", "patch": "@@ -7704,8 +7704,7 @@ package body Sem_Prag is\n \n          Rewrite (N,\n            Make_Pragma (Loc,\n-             Pragma_Identifier            =>\n-               Make_Identifier (Loc, Nam),\n+             Chars                        => Nam,\n              Pragma_Argument_Associations => New_List (\n                Make_Pragma_Argument_Association (Loc,\n                  Expression =>\n@@ -16565,8 +16564,8 @@ package body Sem_Prag is\n                   if Is_Imported (Def_Id)\n                     and then Present (First_Rep_Item (Def_Id))\n                     and then Nkind (First_Rep_Item (Def_Id)) = N_Pragma\n-                    and then\n-                      Pragma_Name (First_Rep_Item (Def_Id)) = Name_Interface\n+                    and then Pragma_Name (First_Rep_Item (Def_Id)) =\n+                      Name_Interface\n                   then\n                      null;\n                   else\n@@ -19035,6 +19034,29 @@ package body Sem_Prag is\n             end if;\n          end Persistent_BSS;\n \n+         --------------------\n+         -- Rename_Pragma --\n+         --------------------\n+\n+         --  pragma Rename_Pragma (\n+         --           [New_Name =>] IDENTIFIER,\n+         --           [Renames  =>] pragma_IDENTIFIER);\n+\n+         --  ??? this is work in progress\n+\n+         pragma Warnings (Off);\n+         when Pragma_Rename_Pragma => Rename_Pragma : declare\n+            GNAT_Pragma_Arg : constant Node_Id := Get_Pragma_Arg (Arg2);\n+            Synonym         : constant Node_Id := Get_Pragma_Arg (Arg1);\n+\n+         begin\n+            GNAT_Pragma;\n+            Check_Arg_Count (2);\n+            Check_Optional_Identifier (Arg1, Name_New_Name);\n+            Check_Optional_Identifier (Arg2, Name_Renames);\n+         end Rename_Pragma;\n+         pragma Warnings (On);\n+\n          -------------\n          -- Polling --\n          -------------\n@@ -19672,7 +19694,7 @@ package body Sem_Prag is\n \n                Import :=\n                  Make_Pragma (Loc,\n-                   Pragma_Identifier => Make_Identifier (Loc, Name_Import),\n+                   Chars                        => Name_Import,\n                    Pragma_Argument_Associations => New_List (\n                      Make_Pragma_Argument_Association (Loc,\n                        Expression => Make_Identifier (Loc, Name_Intrinsic)),\n@@ -28766,6 +28788,7 @@ package body Sem_Prag is\n       Pragma_Refined_Post                   => -1,\n       Pragma_Refined_State                  => -1,\n       Pragma_Relative_Deadline              =>  0,\n+      Pragma_Rename_Pragma                  =>  0,\n       Pragma_Remote_Access_Type             => -1,\n       Pragma_Remote_Call_Interface          => -1,\n       Pragma_Remote_Types                   => -1,"}, {"sha": "c8ca67cb6090c889c5d27fc7aee8a711b89b2657", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa168bc9814e3b082a09ffe2147b62741b06e4a/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa168bc9814e3b082a09ffe2147b62741b06e4a/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=ffa168bc9814e3b082a09ffe2147b62741b06e4a", "patch": "@@ -6287,8 +6287,8 @@ package body Sem_Res is\n \n       --  A protected function cannot be called within the definition of the\n       --  enclosing protected type, unless it is part of a pre/postcondition\n-      --  on another protected operation. This may appear in the entry\n-      --  wrapper created for an entry with preconditions.\n+      --  on another protected operation. This may appear in the entry wrapper\n+      --  created for an entry with preconditions.\n \n       if Is_Protected_Type (Scope (Nam))\n         and then In_Open_Scopes (Scope (Nam))"}, {"sha": "c4e97a6d5e604a8631577ea603037b27f9acc880", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa168bc9814e3b082a09ffe2147b62741b06e4a/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa168bc9814e3b082a09ffe2147b62741b06e4a/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=ffa168bc9814e3b082a09ffe2147b62741b06e4a", "patch": "@@ -6818,4 +6818,13 @@ package body Sinfo is\n       return Chars (Pragma_Identifier (N));\n    end Pragma_Name;\n \n+   ------------------------\n+   -- Pragma_Name_Mapped --\n+   ------------------------\n+\n+   function Pragma_Name_Mapped (N : Node_Id) return Name_Id is\n+   begin\n+      return Pragma_Name (N);\n+   end Pragma_Name_Mapped;\n+\n end Sinfo;"}, {"sha": "79b56a12ae241ed99260bba8f585af88dc1d9ba0", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa168bc9814e3b082a09ffe2147b62741b06e4a/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa168bc9814e3b082a09ffe2147b62741b06e4a/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=ffa168bc9814e3b082a09ffe2147b62741b06e4a", "patch": "@@ -11010,6 +11010,9 @@ package Sinfo is\n    pragma Inline (Pragma_Name);\n    --  Convenient function to obtain Chars field of Pragma_Identifier\n \n+   function Pragma_Name_Mapped (N : Node_Id) return Name_Id;\n+   --  ????Work in progress.\n+\n    -----------------------------\n    -- Syntactic Parent Tables --\n    -----------------------------"}, {"sha": "fe23998311090de48a34ae4c926cf10d00457ff0", "filename": "gcc/ada/snames.adb-tmpl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa168bc9814e3b082a09ffe2147b62741b06e4a/gcc%2Fada%2Fsnames.adb-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa168bc9814e3b082a09ffe2147b62741b06e4a/gcc%2Fada%2Fsnames.adb-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb-tmpl?ref=ffa168bc9814e3b082a09ffe2147b62741b06e4a", "patch": "@@ -331,7 +331,7 @@ package body Snames is\n \n    function Is_Configuration_Pragma_Name (N : Name_Id) return Boolean is\n    begin\n-      return N in First_Pragma_Name .. Last_Configuration_Pragma_Name\n+      return N in Configuration_Pragma_Names\n         or else N = Name_Default_Scalar_Storage_Order\n         or else N = Name_Fast_Math;\n    end Is_Configuration_Pragma_Name;"}, {"sha": "0d12b6a92dd0848274f4493915fd7207096f59ac", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffa168bc9814e3b082a09ffe2147b62741b06e4a/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffa168bc9814e3b082a09ffe2147b62741b06e4a/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=ffa168bc9814e3b082a09ffe2147b62741b06e4a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -450,6 +450,7 @@ package Snames is\n    Name_Queuing_Policy                 : constant Name_Id := N + $;\n    Name_Rational                       : constant Name_Id := N + $; -- GNAT\n    Name_Ravenscar                      : constant Name_Id := N + $; -- GNAT\n+   Name_Rename_Pragma                  : constant Name_Id := N + $; -- GNAT\n    Name_Restricted_Run_Time            : constant Name_Id := N + $; -- GNAT\n    Name_Restrictions                   : constant Name_Id := N + $;\n    Name_Restriction_Warnings           : constant Name_Id := N + $; -- GNAT\n@@ -765,6 +766,7 @@ package Snames is\n    Name_Modified_GPL                   : constant Name_Id := N + $;\n    Name_Name                           : constant Name_Id := N + $;\n    Name_NCA                            : constant Name_Id := N + $;\n+   Name_New_Name                       : constant Name_Id := N + $;\n    Name_No                             : constant Name_Id := N + $;\n    Name_No_Access_Parameter_Allocators : constant Name_Id := N + $;\n    Name_No_Coextensions                : constant Name_Id := N + $;\n@@ -1808,6 +1810,7 @@ package Snames is\n       Pragma_Queuing_Policy,\n       Pragma_Rational,\n       Pragma_Ravenscar,\n+      Pragma_Rename_Pragma,\n       Pragma_Restricted_Run_Time,\n       Pragma_Restrictions,\n       Pragma_Restriction_Warnings,"}]}