{"sha": "b82feea52fface9bc8d2addb726704da49b1d972", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjgyZmVlYTUyZmZhY2U5YmM4ZDJhZGRiNzI2NzA0ZGE0OWIxZDk3Mg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2006-04-08T14:31:12Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2006-04-08T14:31:12Z"}, "message": "gfortran.texi: Fix typos.\n\n\t* gfortran.texi: Fix typos.  Follow spelling conventions.\n\t* resolve.c, trans-expr.c, trans-stmt.c: Fix comment typos.\n\tFollow spelling conventions.\n\nFrom-SVN: r112780", "tree": {"sha": "ac54b2095fdb360131eb052b4695f96aa27961c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac54b2095fdb360131eb052b4695f96aa27961c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b82feea52fface9bc8d2addb726704da49b1d972", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b82feea52fface9bc8d2addb726704da49b1d972", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b82feea52fface9bc8d2addb726704da49b1d972", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b82feea52fface9bc8d2addb726704da49b1d972/comments", "author": null, "committer": null, "parents": [{"sha": "84dc00e8ac2ca08a80bbbe55ad8ec29ed8393a26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84dc00e8ac2ca08a80bbbe55ad8ec29ed8393a26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84dc00e8ac2ca08a80bbbe55ad8ec29ed8393a26"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "c236ff17daf5e8624ea6533167fe3983b5c67e52", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b82feea52fface9bc8d2addb726704da49b1d972/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b82feea52fface9bc8d2addb726704da49b1d972/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b82feea52fface9bc8d2addb726704da49b1d972", "patch": "@@ -1,3 +1,9 @@\n+2006-04-08  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* gfortran.texi: Fix typos.  Follow spelling conventions.\n+\t* resolve.c, trans-expr.c, trans-stmt.c: Fix comment typos.\n+\tFollow spelling conventions.\n+\n 2006-04-05  Roger Sayle  <roger@eyesopen.com>\n \n \t* dependency.c (get_no_elements): Delete function."}, {"sha": "07edb8a6b162a34a7251400b88d6320659b0fcb1", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b82feea52fface9bc8d2addb726704da49b1d972/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b82feea52fface9bc8d2addb726704da49b1d972/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=b82feea52fface9bc8d2addb726704da49b1d972", "patch": "@@ -548,7 +548,7 @@ Environment variable forcing standard output to be line buffered (unix).\n @chapter Runtime:  Influencing runtime behavior with environment variables\n @cindex Runtime\n \n-The behaviour of the @command{gfortran} can be influenced by\n+The behavior of the @command{gfortran} can be influenced by\n environment variables.\n \n Malformed environment variables are silently ignored.\n@@ -610,7 +610,7 @@ this is also missing, the default is @file{/tmp}.\n This environment variable controls wether all output is unbuffered.\n If the first letter is @samp{y}, @samp{Y} or @samp{1}, all output is\n unbuffered. This will slow down large writes.  If the first letter is\n-@samp{n}, @samp{N}  or @samp{0}, output is bufferred.  This is the\n+@samp{n}, @samp{N}  or @samp{0}, output is buffered.  This is the\n default.\n \n @node GFORTRAN_SHOW_LOCUS\n@@ -626,7 +626,7 @@ for runtime errors. The default is to print the location.\n \n If the first letter is @samp{y}, @samp{Y} or @samp{1},\n a plus sign is printed\n-where permitted by the Fortran standard.  If the first lettter\n+where permitted by the Fortran standard.  If the first letter\n is @samp{n}, @samp{N} or @samp{0}, a plus sign is not printed\n in most cases. Default is not to print plus signs.\n "}, {"sha": "bde11a5c5959f62294a09b073728e87ed45584e0", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b82feea52fface9bc8d2addb726704da49b1d972/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b82feea52fface9bc8d2addb726704da49b1d972/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=b82feea52fface9bc8d2addb726704da49b1d972", "patch": "@@ -701,7 +701,7 @@ procedure_kind (gfc_symbol * sym)\n }\n \n /* Check references to assumed size arrays.  The flag need_full_assumed_size\n-   is non-zero when matching actual arguments.  */\n+   is nonzero when matching actual arguments.  */\n \n static int need_full_assumed_size = 0;\n \n@@ -1342,7 +1342,7 @@ resolve_function (gfc_expr * expr)\n \t     && expr->value.function.isym->generic_id != GFC_ISYM_PRESENT)\n     {\n       /* Array instrinsics must also have the last upper bound of an\n-\t asumed size array argument.  UBOUND and SIZE have to be\n+\t assumed size array argument.  UBOUND and SIZE have to be\n \t excluded from the check if the second argument is anything\n \t than a constant.  */\n       int inquiry;\n@@ -4843,7 +4843,7 @@ resolve_fl_procedure (gfc_symbol *sym, int mp_flag)\n \n   /* Ensure that derived type for are not of a private type.  Internal\n      module procedures are excluded by 2.2.3.3 - ie. they are not\n-     externally accessible and can access all the objects accesible in\n+     externally accessible and can access all the objects accessible in\n      the host. */\n   if (!(sym->ns->parent\n \t    && sym->ns->parent->proc_name->attr.flavor == FL_MODULE)"}, {"sha": "81e0a7c5d2154913ec43f2a5c7d82398f92a7a1d", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b82feea52fface9bc8d2addb726704da49b1d972/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b82feea52fface9bc8d2addb726704da49b1d972/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=b82feea52fface9bc8d2addb726704da49b1d972", "patch": "@@ -1712,7 +1712,7 @@ gfc_conv_aliased_arg (gfc_se * parmse, gfc_expr * expr, int g77)\n      temporary array has lbounds of zero and strides of one in all\n      dimensions, so this is very simple.  The offset is only computed\n      outside the innermost loop, so the overall transfer could be\n-     optimised further.  */\n+     optimized further.  */\n   info = &rse.ss->data.info;\n \n   tmp_index = gfc_index_zero_node;"}, {"sha": "6480a195bedf63d3cbf7b39e8d94b8cd3ebe3594", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b82feea52fface9bc8d2addb726704da49b1d972/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b82feea52fface9bc8d2addb726704da49b1d972/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=b82feea52fface9bc8d2addb726704da49b1d972", "patch": "@@ -2650,7 +2650,7 @@ gfc_evaluate_where_mask (gfc_expr * me, forall_info * nested_forall_info,\n       gfc_conv_expr (&rse, me);\n     }\n \n-  /* Variable to evalate mask condition.  */\n+  /* Variable to evaluate mask condition.  */\n   cond = gfc_create_var (mask_type, \"cond\");\n   if (mask && (cmask || pmask))\n     mtmp = gfc_create_var (mask_type, \"mask\");"}]}