{"sha": "2ae7b972a6fdb321691483655f6de98b02e83a46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFlN2I5NzJhNmZkYjMyMTY5MTQ4MzY1NWY2ZGU5OGIwMmU4M2E0Ng==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2008-01-31T00:05:19Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2008-01-31T00:05:19Z"}, "message": "re PR c/34993 (ICE with attribute for array with unknown bound)\n\n        PR c/34993\n        * tree.c (build_type_attribute_qual_variant): Skip TYPE_DOMAIN\n        for unbounded arrays.\n\nFrom-SVN: r131970", "tree": {"sha": "ec13d7747bcf59be736713b07dd8e028c71f37f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec13d7747bcf59be736713b07dd8e028c71f37f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ae7b972a6fdb321691483655f6de98b02e83a46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ae7b972a6fdb321691483655f6de98b02e83a46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ae7b972a6fdb321691483655f6de98b02e83a46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ae7b972a6fdb321691483655f6de98b02e83a46/comments", "author": null, "committer": null, "parents": [{"sha": "996b13caed7ccde5633be15a4335e8521b914721", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/996b13caed7ccde5633be15a4335e8521b914721", "html_url": "https://github.com/Rust-GCC/gccrs/commit/996b13caed7ccde5633be15a4335e8521b914721"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "2ecebda493e8778b564fa907586f8e00eb71397f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ae7b972a6fdb321691483655f6de98b02e83a46/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ae7b972a6fdb321691483655f6de98b02e83a46/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ae7b972a6fdb321691483655f6de98b02e83a46", "patch": "@@ -1,3 +1,9 @@\n+2008-01-30  Richard Henderson  <rth@redhat.com>\n+\n+\tPR c/34993\n+\t* tree.c (build_type_attribute_qual_variant): Skip TYPE_DOMAIN\n+\tfor unbounded arrays.\n+\n 2008-01-30  Silvius Rus  <rus@google.com>\n \n \t* config/i386/xmmintrin.h (_mm_prefetch): Add const to first arg."}, {"sha": "ced4d5646c16bf408dbc41288ae19c9257af2c92", "filename": "gcc/testsuite/gcc.c-torture/compile/pr34993.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ae7b972a6fdb321691483655f6de98b02e83a46/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr34993.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ae7b972a6fdb321691483655f6de98b02e83a46/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr34993.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr34993.c?ref=2ae7b972a6fdb321691483655f6de98b02e83a46", "patch": "@@ -0,0 +1,5 @@\n+/* PR c/34993 */\n+\n+/* { dg-do compile } */\n+\n+typedef int x[] __attribute((may_alias));"}, {"sha": "043968cb95f22086879549046810979807a2625f", "filename": "gcc/tree.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ae7b972a6fdb321691483655f6de98b02e83a46/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ae7b972a6fdb321691483655f6de98b02e83a46/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=2ae7b972a6fdb321691483655f6de98b02e83a46", "patch": "@@ -3701,8 +3701,9 @@ build_type_attribute_qual_variant (tree ttype, tree attribute, int quals)\n \t  hashcode = type_hash_list (TYPE_ARG_TYPES (ntype), hashcode);\n \t  break;\n \tcase ARRAY_TYPE:\n-\t  hashcode = iterative_hash_object (TYPE_HASH (TYPE_DOMAIN (ntype)),\n-\t\t\t\t\t    hashcode);\n+\t  if (TYPE_DOMAIN (ntype))\n+\t    hashcode = iterative_hash_object (TYPE_HASH (TYPE_DOMAIN (ntype)),\n+\t\t\t\t\t      hashcode);\n \t  break;\n \tcase INTEGER_TYPE:\n \t  hashcode = iterative_hash_object"}]}