{"sha": "13daf3c1c5ed80d12db718cf3590a98792e7ecb4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNkYWYzYzFjNWVkODBkMTJkYjcxOGNmMzU5MGE5ODc5MmU3ZWNiNA==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@cambridge.redhat.com", "date": "2001-07-07T15:02:05Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2001-07-07T15:02:05Z"}, "message": "Append # to end of the label inside NAME as opposed to just the end of NAME.\n\nFrom-SVN: r43837", "tree": {"sha": "81169d0ea7f7cc74ddf4465fb8911acf231b567a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81169d0ea7f7cc74ddf4465fb8911acf231b567a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13daf3c1c5ed80d12db718cf3590a98792e7ecb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13daf3c1c5ed80d12db718cf3590a98792e7ecb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13daf3c1c5ed80d12db718cf3590a98792e7ecb4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13daf3c1c5ed80d12db718cf3590a98792e7ecb4/comments", "author": null, "committer": null, "parents": [{"sha": "3b1e7311a8f56d354f4a62a34217d80fa86b3867", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b1e7311a8f56d354f4a62a34217d80fa86b3867", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b1e7311a8f56d354f4a62a34217d80fa86b3867"}], "stats": {"total": 42, "additions": 32, "deletions": 10}, "files": [{"sha": "bc2152cfcd59ba54d6b3453969c9977ba590ccfd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13daf3c1c5ed80d12db718cf3590a98792e7ecb4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13daf3c1c5ed80d12db718cf3590a98792e7ecb4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=13daf3c1c5ed80d12db718cf3590a98792e7ecb4", "patch": "@@ -1,3 +1,8 @@\n+2001-07-07  Nick Clifton  <nickc@cambridge.redhat.com>\n+\n+\t* config/ia64/sysv4.h (ASM_OUTPUT_LABELREF): Append # to end\n+\tof the label inside NAME as opposed to just the end of NAME.\n+\n 2001-07-07  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* config/alpha/alpha-protos.h (vms_valid_decl_attribute_p): Delete."}, {"sha": "02da9e47ebcf3c6d9dbcf7d83e411f42dcac03d5", "filename": "gcc/config/ia64/sysv4.h", "status": "modified", "additions": 27, "deletions": 10, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13daf3c1c5ed80d12db718cf3590a98792e7ecb4/gcc%2Fconfig%2Fia64%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13daf3c1c5ed80d12db718cf3590a98792e7ecb4/gcc%2Fconfig%2Fia64%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fsysv4.h?ref=13daf3c1c5ed80d12db718cf3590a98792e7ecb4", "patch": "@@ -54,18 +54,35 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* The # tells the Intel assembler that this is not a register name.\n    However, we can't emit the # in a label definition, so we set a variable\n-   in ASM_OUTPUT_LABEL to control whether we want the postfix here or not.  */\n+   in ASM_OUTPUT_LABEL to control whether we want the postfix here or not.\n+   We append the # to the label name, but since NAME can be an expression\n+   we have to scan it for a non-label character and insert the # there.  */\n \n #undef ASM_OUTPUT_LABELREF\n-#define ASM_OUTPUT_LABELREF(STREAM, NAME) \\\n-do\t\t\t\t\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    const char *real_name;\t\t\t\t\t\t\\\n-    STRIP_NAME_ENCODING (real_name, NAME);\t\t\t\t\\\n-    asm_fprintf (STREAM, \"%U%s%s\", real_name,\t\t\t\t\\\n-\t\t (ia64_asm_output_label ? \"\" : \"#\"));\t\t\t\\\n-  }\t\t\t\t\t\t\t\t\t\\\n-while (0)\n+#define ASM_OUTPUT_LABELREF(STREAM, NAME) \t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\t\\\n+      const char * real_name;\t\t\t\t\t\t\\\n+      const char * name_end;\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+      STRIP_NAME_ENCODING (real_name, NAME);\t\t\t\t\\\n+      name_end = strchr (real_name, '+');\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+      if (name_end)\t\t\t\t\t\t\t\\\n+\t* name_end = 0;\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+      asm_fprintf (STREAM, \"%U%s\", real_name);\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+      if (ia64_asm_output_label)\t\t\t\t\t\\\n+\tasm_fprintf (STREAM, \"#\");\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+      if (name_end)\t\t\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\t\\\n+\t  * name_end = '+';\t\t\t\t\t\t\\\n+\t  asm_fprintf (STREAM, name_end);\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  while (0)\n \n /* Intel assembler requires both flags and type if declaring a non-predefined\n    section.  */"}]}