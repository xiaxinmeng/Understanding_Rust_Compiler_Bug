{"sha": "320fbd1ebe24af4b2059759e7432e4c294eb9170", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIwZmJkMWViZTI0YWY0YjIwNTk3NTllNzQzMmU0YzI5NGViOTE3MA==", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2018-05-25T09:04:37Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-25T09:04:37Z"}, "message": "[Ada] Fix for freezing of expression functions\n\n2018-05-25  Justin Squirek  <squirek@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch6.adb (Expand_Simple_Function_Return): Add guard in check to\n\tgenerate code for 6.5(8-10) so that we don't get an assertion error\n\twhen dealing with an incomplete return type.\n\nFrom-SVN: r260733", "tree": {"sha": "3f293e82e1225da8a39e91729799cdb0de0e5744", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f293e82e1225da8a39e91729799cdb0de0e5744"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/320fbd1ebe24af4b2059759e7432e4c294eb9170", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/320fbd1ebe24af4b2059759e7432e4c294eb9170", "html_url": "https://github.com/Rust-GCC/gccrs/commit/320fbd1ebe24af4b2059759e7432e4c294eb9170", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/320fbd1ebe24af4b2059759e7432e4c294eb9170/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "29192f7b77e67ae3bee0138bd0f7262e899226ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29192f7b77e67ae3bee0138bd0f7262e899226ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29192f7b77e67ae3bee0138bd0f7262e899226ab"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "2e5fd67e46bc887e5629eaa7fd00583b1bdd370d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320fbd1ebe24af4b2059759e7432e4c294eb9170/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320fbd1ebe24af4b2059759e7432e4c294eb9170/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=320fbd1ebe24af4b2059759e7432e4c294eb9170", "patch": "@@ -1,3 +1,9 @@\n+2018-05-25  Justin Squirek  <squirek@adacore.com>\n+\n+\t* exp_ch6.adb (Expand_Simple_Function_Return): Add guard in check to\n+\tgenerate code for 6.5(8-10) so that we don't get an assertion error\n+\twhen dealing with an incomplete return type.\n+\n 2018-05-25  Arnaud Charlet  <charlet@adacore.com>\n \n \t* pprint.adb (Expression_Name): Strip too long expressions to avoid"}, {"sha": "7c8ce026a5d1fad5fa3a89c67b0f5f042c3c58c2", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320fbd1ebe24af4b2059759e7432e4c294eb9170/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320fbd1ebe24af4b2059759e7432e4c294eb9170/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=320fbd1ebe24af4b2059759e7432e4c294eb9170", "patch": "@@ -6759,7 +6759,13 @@ package body Exp_Ch6 is\n       --  conversion or a formal parameter, because in that case the tag of\n       --  the expression might differ from the tag of the specific result type.\n \n-      if Is_Tagged_Type (Utyp)\n+      --  We must also verify an underlying type exists for the return type in\n+      --  case it is incomplete - in which case is not necessary to generate a\n+      --  check anyway since an incomplete limited tagged return type would\n+      --  qualify as a premature usage.\n+\n+      if Present (Utyp)\n+        and then Is_Tagged_Type (Utyp)\n         and then not Is_Class_Wide_Type (Utyp)\n         and then (Nkind_In (Exp, N_Type_Conversion,\n                                  N_Unchecked_Type_Conversion)"}]}