{"sha": "4b4a42c40af8376511de3b797c3d75a34f09b925", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI0YTQyYzQwYWY4Mzc2NTExZGUzYjc5N2MzZDc1YTM0ZjA5YjkyNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-01-04T17:53:29Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-01-04T17:53:29Z"}, "message": "re PR c++/42567 ([C++0x] ICE with auto in type_unification_real, at cp/pt.c:13310)\n\n\tPR c++/42567\n\t* semantics.c (describable_type): Remove decltype comment and\n\tsemantics.\n\nFrom-SVN: r155627", "tree": {"sha": "87c14a59fac6122a426a6596a458cf6c1bd1ba74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87c14a59fac6122a426a6596a458cf6c1bd1ba74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b4a42c40af8376511de3b797c3d75a34f09b925", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b4a42c40af8376511de3b797c3d75a34f09b925", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b4a42c40af8376511de3b797c3d75a34f09b925", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b4a42c40af8376511de3b797c3d75a34f09b925/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5805e48d6cc083abada007038051beddf6953324", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5805e48d6cc083abada007038051beddf6953324", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5805e48d6cc083abada007038051beddf6953324"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "77dd1df69540f152beb01f8c400c47f63e49538f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b4a42c40af8376511de3b797c3d75a34f09b925/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b4a42c40af8376511de3b797c3d75a34f09b925/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4b4a42c40af8376511de3b797c3d75a34f09b925", "patch": "@@ -1,3 +1,9 @@\n+2010-01-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/42567\n+\t* semantics.c (describable_type): Remove decltype comment and\n+\tsemantics.\n+\n \n \f\n Copyright (C) 2010 Free Software Foundation, Inc."}, {"sha": "b2f9fd31f56403dfcf4958542ed83a44506cafc1", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b4a42c40af8376511de3b797c3d75a34f09b925/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b4a42c40af8376511de3b797c3d75a34f09b925/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=4b4a42c40af8376511de3b797c3d75a34f09b925", "patch": "@@ -4690,10 +4690,8 @@ finish_static_assert (tree condition, tree message, location_t location,\n     }\n }\n \f\n-/* Returns decltype((EXPR)) for cases where we can drop the decltype and\n-   just return the type even though EXPR is a type-dependent expression.\n-   The ABI specifies which cases this applies to, which is a subset of the\n-   possible cases.  */\n+/* Returns the type of EXPR for cases where we can determine it even though\n+   EXPR is a type-dependent expression.  */\n \n tree\n describable_type (tree expr)\n@@ -4717,8 +4715,7 @@ describable_type (tree expr)\n     case PARM_DECL:\n     case RESULT_DECL:\n     case FUNCTION_DECL:\n-      /* Named rvalue reference becomes lvalue.  */\n-      type = build_reference_type (non_reference (TREE_TYPE (expr)));\n+      return TREE_TYPE (expr);\n       break;\n \n     case NEW_EXPR:"}, {"sha": "8d559e91c3b236d4c5ec8a2a4bf0019d8ff2ad20", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b4a42c40af8376511de3b797c3d75a34f09b925/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b4a42c40af8376511de3b797c3d75a34f09b925/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4b4a42c40af8376511de3b797c3d75a34f09b925", "patch": "@@ -1,3 +1,8 @@\n+2010-01-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/42567\n+\t* g++.dg/cpp0x/auto17.C: New.\n+\n 2010-01-04  Rafael Avila de Espindola  <espindola@google.com>\n \n \t* gcc.dg/lto/20100104_0.c: New."}, {"sha": "03608d33ac63a7482919d7ac83fd57e21f834de8", "filename": "gcc/testsuite/g++.dg/cpp0x/auto17.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b4a42c40af8376511de3b797c3d75a34f09b925/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b4a42c40af8376511de3b797c3d75a34f09b925/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fauto17.C?ref=4b4a42c40af8376511de3b797c3d75a34f09b925", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/42567\n+// { dg-options \"-std=c++0x\" }\n+\n+template<typename B>\n+struct A {\n+  template<typename C>\n+  void fn(C c) {\n+    auto& key = *c;\n+  }\n+};"}]}