{"sha": "fac9044d26a47eae4ac85ca1e46d8c9665b1548c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFjOTA0NGQyNmE0N2VhZTRhYzg1Y2ExZTQ2ZDhjOTY2NWIxNTQ4Yw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2008-01-01T19:05:41Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-01-01T19:05:41Z"}, "message": "re PR libstdc++/34095 (parallel mode: segfault in std::sort)\n\n2008-01-01  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/34095\n\t* include/parallel/multiway_merge.h (multiway_merge_bubble,\n\tparallel_multiway_merge): Together with ::operator new use\n\t::operator delete.\n\t* include/parallel/losertree.h (LoserTree<>::~LoserTree): Likewise.\n\t* include/parallel/quicksort.h (parallel_sort_qs_divide): Likewise.\n\t* include/parallel/random_shuffle.h (parallel_random_shuffle_drs_pu,\n\tsequential_random_shuffle): Likewise.\n\t* include/parallel/tree.h (_M_not_sorted_bulk_insertion_construction):\n\tLikewise.\n\t* include/parallel/multiway_mergesort.h (parallel_sort_mwms_pu,\n\tparallel_sort_mwms): Likewise.\n\t* include/parallel/partial_sum.h (parallel_partial_sum_linear):\n\tLikewise. \n\t* testsuite/25_algorithms/sort/34095.cc: New.\n\nFrom-SVN: r131247", "tree": {"sha": "660d1b51df244b7375428064dc199e98a91e8409", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/660d1b51df244b7375428064dc199e98a91e8409"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fac9044d26a47eae4ac85ca1e46d8c9665b1548c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fac9044d26a47eae4ac85ca1e46d8c9665b1548c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fac9044d26a47eae4ac85ca1e46d8c9665b1548c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fac9044d26a47eae4ac85ca1e46d8c9665b1548c/comments", "author": null, "committer": null, "parents": [{"sha": "33d95150e4ffdba90b8791d5d9ac775353e75ce0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33d95150e4ffdba90b8791d5d9ac775353e75ce0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33d95150e4ffdba90b8791d5d9ac775353e75ce0"}], "stats": {"total": 85, "additions": 68, "deletions": 17}, "files": [{"sha": "29a6b53359cc609d3e3780ae60c6709333e57a62", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fac9044d26a47eae4ac85ca1e46d8c9665b1548c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fac9044d26a47eae4ac85ca1e46d8c9665b1548c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=fac9044d26a47eae4ac85ca1e46d8c9665b1548c", "patch": "@@ -1,3 +1,21 @@\n+2008-01-01  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/34095\n+\t* include/parallel/multiway_merge.h (multiway_merge_bubble,\n+\tparallel_multiway_merge): Together with ::operator new use\n+\t::operator delete.\n+\t* include/parallel/losertree.h (LoserTree<>::~LoserTree): Likewise.\n+\t* include/parallel/quicksort.h (parallel_sort_qs_divide): Likewise.\n+\t* include/parallel/random_shuffle.h (parallel_random_shuffle_drs_pu,\n+\tsequential_random_shuffle): Likewise.\n+\t* include/parallel/tree.h (_M_not_sorted_bulk_insertion_construction):\n+\tLikewise.\n+\t* include/parallel/multiway_mergesort.h (parallel_sort_mwms_pu,\n+\tparallel_sort_mwms): Likewise.\n+\t* include/parallel/partial_sum.h (parallel_partial_sum_linear):\n+\tLikewise. \n+\t* testsuite/25_algorithms/sort/34095.cc: New.\n+\n 2008-01-01  Paolo Carlini  <pcarlini@suse.de>\n \n \t* testsuite/25_algorithms/sort/34636.cc: Fix Copyright year."}, {"sha": "786b8fb12fb4286cb688701644ce1bc9358e3324", "filename": "libstdc++-v3/include/parallel/losertree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fac9044d26a47eae4ac85ca1e46d8c9665b1548c/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Flosertree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fac9044d26a47eae4ac85ca1e46d8c9665b1548c/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Flosertree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Flosertree.h?ref=fac9044d26a47eae4ac85ca1e46d8c9665b1548c", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -250,7 +250,7 @@ template<typename T, typename Comparator = std::less<T> >\n     }\n \n     inline ~LoserTree()\n-    { delete[] losers; }\n+    { ::operator delete(losers); }\n \n     inline int\n     get_min_source()"}, {"sha": "98f19c2478f544e33e2cc2f5c4927d71d9190a22", "filename": "libstdc++-v3/include/parallel/multiway_merge.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fac9044d26a47eae4ac85ca1e46d8c9665b1548c/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_merge.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fac9044d26a47eae4ac85ca1e46d8c9665b1548c/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_merge.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_merge.h?ref=fac9044d26a47eae4ac85ca1e46d8c9665b1548c", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -936,7 +936,7 @@ template<\n           }\n       }\n \n-    delete fe;  //Destructors already called.\n+    ::operator delete(fe);  //Destructors already called.\n     delete[] source;\n \n     return target;\n@@ -1622,7 +1622,7 @@ template<\n                         else\n                         pieces[slab][seq].second = _GLIBCXX_PARALLEL_LENGTH(seqs_begin[seq]);\n                       }\n-                    delete[] samples;\n+\t\t  ::operator delete(samples);\n                 }\n               else\n                 {"}, {"sha": "502cfab4557a6f09bd80aabcc4100537c875fb74", "filename": "libstdc++-v3/include/parallel/multiway_mergesort.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fac9044d26a47eae4ac85ca1e46d8c9665b1548c/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_mergesort.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fac9044d26a47eae4ac85ca1e46d8c9665b1548c/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_mergesort.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fmultiway_mergesort.h?ref=fac9044d26a47eae4ac85ca1e46d8c9665b1548c", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -321,7 +321,7 @@ template<typename RandomAccessIterator, typename Comparator>\n               sd->source + offset);\n #endif\n \n-    delete[] sd->temporaries[iam];\n+    ::operator delete(sd->temporaries[iam]);\n   }\n \n /** @brief PMWMS main call.\n@@ -415,7 +415,7 @@ template<typename RandomAccessIterator, typename Comparator>\n     delete[] sd.merging_places;\n \n     if (Settings::sort_splitting == Settings::SAMPLING)\n-        delete[] sd.samples;\n+      ::operator delete(sd.samples);\n \n     delete[] sd.offsets;\n     delete[] sd.pieces;"}, {"sha": "c165729d86a251775c880e2d0bd3b62d5187e356", "filename": "libstdc++-v3/include/parallel/partial_sum.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fac9044d26a47eae4ac85ca1e46d8c9665b1548c/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartial_sum.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fac9044d26a47eae4ac85ca1e46d8c9665b1548c/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartial_sum.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartial_sum.h?ref=fac9044d26a47eae4ac85ca1e46d8c9665b1548c", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -182,7 +182,7 @@ template<\n                       sums[iam]);\n       } //parallel\n \n-    delete[] sums;\n+    ::operator delete(sums);\n     delete[] borders;\n \n     return result + n;"}, {"sha": "9228647d5e02038454eb2c07674fe09024c2bf7d", "filename": "libstdc++-v3/include/parallel/quicksort.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fac9044d26a47eae4ac85ca1e46d8c9665b1548c/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fquicksort.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fac9044d26a47eae4ac85ca1e46d8c9665b1548c/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fquicksort.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fquicksort.h?ref=fac9044d26a47eae4ac85ca1e46d8c9665b1548c", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -91,7 +91,7 @@ namespace __gnu_parallel\n         pred(comp, pivot);\n     difference_type split = parallel_partition(begin, end, pred, num_threads);\n \n-    delete[] samples;\n+    ::operator delete(samples);\n \n     return split;\n   }"}, {"sha": "dd086baf3ec0e08a4375ec68cf32bfbadeca54b2", "filename": "libstdc++-v3/include/parallel/random_shuffle.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fac9044d26a47eae4ac85ca1e46d8c9665b1548c/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Frandom_shuffle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fac9044d26a47eae4ac85ca1e46d8c9665b1548c/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Frandom_shuffle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Frandom_shuffle.h?ref=fac9044d26a47eae4ac85ca1e46d8c9665b1548c", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -237,7 +237,7 @@ template<typename RandomAccessIterator, typename RandomNumberGenerator>\n             ((b == d->bins_begin) ? 0 : sd->dist[b][d->num_threads]));\n       }\n \n-    delete[] sd->temporaries[iam];\n+    ::operator delete(sd->temporaries[iam]);\n   }\n \n /** @brief Round up to the next greater power of 2.\n@@ -490,7 +490,7 @@ template<typename RandomAccessIterator, typename RandomNumberGenerator>\n         delete[] dist0;\n         delete[] dist1;\n         delete[] oracles;\n-        delete[] target;\n+        ::operator delete(target);\n       }\n     else\n       __gnu_sequential::random_shuffle(begin, end, rng);"}, {"sha": "eed0b92931529e9558319bb2d46237d109aad38d", "filename": "libstdc++-v3/include/parallel/tree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fac9044d26a47eae4ac85ca1e46d8c9665b1548c/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fac9044d26a47eae4ac85ca1e46d8c9665b1548c/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Ftree.h?ref=fac9044d26a47eae4ac85ca1e46d8c9665b1548c", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -1344,7 +1344,7 @@ namespace __gnu_parallel\n \t_M_sorted_bulk_construction(sorted_access, beg_partition, n, num_threads, strictly_less_or_less_equal);\n       else\n \t_M_sorted_bulk_insertion(sorted_access, beg_partition, n, num_threads, strictly_less_or_less_equal);\n-      delete v;\n+      ::operator delete(v);\n     }\n \n     /** @brief Construct a tree sequentially using the parallel routine"}, {"sha": "46e906b5bc56afad3b1d0b4e7d4c44f18e4c8221", "filename": "libstdc++-v3/testsuite/25_algorithms/sort/34095.cc", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fac9044d26a47eae4ac85ca1e46d8c9665b1548c/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort%2F34095.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fac9044d26a47eae4ac85ca1e46d8c9665b1548c/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort%2F34095.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort%2F34095.cc?ref=fac9044d26a47eae4ac85ca1e46d8c9665b1548c", "patch": "@@ -0,0 +1,33 @@\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <vector>\n+#include <algorithm>\n+\n+// libstdc++/34095\n+void test01()\n+{\n+  std::vector<std::vector<int> > v(20000);\n+  std::sort(v.begin(), v.end()); \n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}