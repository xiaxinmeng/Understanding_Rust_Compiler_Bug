{"sha": "704c9a14022cd20ab666e348fd443e86f3a6fb3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzA0YzlhMTQwMjJjZDIwYWI2NjZlMzQ4ZmQ0NDNlODZmM2E2ZmIzZg==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@twcny.rr.com", "date": "2002-04-19T17:26:08Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2002-04-19T17:26:08Z"}, "message": "mh-a68bsd: clean out dead code\n\n2002-04-19  Nathanael Nerode  <neroden@twcny.rr.com>\n\n\t* config/mh-a68bsd: clean out dead code\n\t* config/mh-apollo68: clean out dead code\n\t* config/mh-cxux: clean out dead code\n\t* config/mh-decstation: clean out dead code\n\t* config/mh-dgux: clean out dead code\n\t* config/mh-dgux386: clean out dead code\n\t* config/mh-hp300: clean out dead code\n\t* config/mh-hpux: clean out dead code\n\t* config/mh-hpux8: clean out dead code\n\t* config/mh-interix: clean out dead code\n\t* config/mh-irix4: clean out dead code\n\t* config/mh-lynxrs6k: clean out dead code\n\t* config/mh-mingw32: clean out dead code\n\t* config/mh-ncr3000: clean out dead code\n\t* config/mh-ncrsvr43: clean out dead code\n\t* config/mh-necv4: clean out dead code\n\t* config/mh-openedition: clean out dead code\n\t* config/mh-riscos: clean out dead code\n\t* config/mh-sco: clean out dead code\n\t* config/mh-sysv4: clean out dead code\n\t* config/mh-lynxos: removed, contained only dead code\n\t* config/mh-vaxult2: removed, contained only dead code\n\t* config/mh-sun3: removed, contained only dead code\n\t* configure.in: remove references to dead files\n\nFrom-SVN: r52530", "tree": {"sha": "8f336e33146653020294a4ca27b95c414301e0ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f336e33146653020294a4ca27b95c414301e0ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/704c9a14022cd20ab666e348fd443e86f3a6fb3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/704c9a14022cd20ab666e348fd443e86f3a6fb3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/704c9a14022cd20ab666e348fd443e86f3a6fb3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/704c9a14022cd20ab666e348fd443e86f3a6fb3f/comments", "author": null, "committer": null, "parents": [{"sha": "1f1760d33ca52f7f9a581bb5420ad36345484c32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f1760d33ca52f7f9a581bb5420ad36345484c32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f1760d33ca52f7f9a581bb5420ad36345484c32"}], "stats": {"total": 131, "additions": 30, "deletions": 101}, "files": [{"sha": "6dc3b21a396a8db3b2830644a58896083f51ac7a", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -1,3 +1,7 @@\n+2002-04-19  Nathanael Nerode  <neroden@twcny.rr.com>\n+\n+\t* configure.in: remove references to dead files\n+\n 2002-04-19  Mark Mitchell  <mark@codesourcery.com>\n \n \t* MAINTAINERS: Add information about purpose of this file."}, {"sha": "c1c02d1e5a8dc068a3cb855c134f521181ffb13f", "filename": "config/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -1,3 +1,29 @@\n+2002-04-19  Nathanael Nerode  <neroden@twcny.rr.com>\n+\n+\t* mh-a68bsd: clean out dead code\n+\t* mh-apollo68: clean out dead code\n+\t* mh-cxux: clean out dead code\n+\t* mh-decstation: clean out dead code\n+\t* mh-dgux: clean out dead code\n+\t* mh-dgux386: clean out dead code\n+\t* mh-hp300: clean out dead code\n+\t* mh-hpux: clean out dead code\n+\t* mh-hpux8: clean out dead code\n+\t* mh-interix: clean out dead code\n+\t* mh-irix4: clean out dead code\n+\t* mh-lynxrs6k: clean out dead code\n+\t* mh-mingw32: clean out dead code\n+\t* mh-ncr3000: clean out dead code\n+\t* mh-ncrsvr43: clean out dead code\n+\t* mh-necv4: clean out dead code\n+\t* mh-openedition: clean out dead code\n+\t* mh-riscos: clean out dead code\n+\t* mh-sco: clean out dead code\n+\t* mh-sysv4: clean out dead code\n+\t* mh-lynxos: removed, contained only dead code\n+\t* mh-vaxult2: removed, contained only dead code\n+\t* mh-sun3: removed, contained only dead code\n+\n 2002-04-15  Keith Seitz  <keiths@redhat.com>\n \n \t* acinclude.m4 (CYG_AC_PATH_TCLCONFIG): Search the win/ directory,"}, {"sha": "2fe28d0a4e21781b14cef4d4e55f6e0853b60fcf", "filename": "config/mh-a68bsd", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-a68bsd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-a68bsd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-a68bsd?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -1,12 +1,2 @@\n RANLIB=true\n-\n-#None of the Apollo compilers can compile gas or binutils.  The preprocessor\n-# chokes on bfd, the compiler won't let you assign integers to enums, and\n-# other problems.  Defining CC to gcc is a questionable way to say \"don't use\n-# the apollo compiler\" (the preferred version of GCC could be called cc,\n-# or whatever), but I'm not sure leaving CC as cc is any better...\n-\n-#CC=cc -A ansi -A runtype,any -A systype,any -U__STDC__ -DNO_STDARG\n-CC=gcc\n-\n BISON=yacc"}, {"sha": "4b4ffa54b8ecbf2771e886336d593aa90ae62fd5", "filename": "config/mh-apollo68", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-apollo68", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-apollo68", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-apollo68?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -1,3 +1,2 @@\n HDEFINES = -DUSG\n RANLIB=true\n-CC= cc -A ansi -A runtype,any -A systype,any -U__STDC__ -DUSG"}, {"sha": "acc991b8d1c4da3620f84748b5abb8f0165cb79c", "filename": "config/mh-cxux", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-cxux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-cxux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-cxux?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -4,11 +4,6 @@\n SYSV = -DSYSV -DSVR4\n RANLIB = true\n \n-# C++ debugging is not yet supported under SVR4 (DWARF)\n-CXXFLAGS=-O\n-\n # The l flag generates a warning from the SVR4 archiver, remove it.\n AR_FLAGS = cq\n \n-# Under CX/UX, we want to tell the compiler to use ANSI mode.\n-CC=cc -Xa"}, {"sha": "320927c306a489fcf3dd13d85fa25067b8431ad6", "filename": "config/mh-decstation", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-decstation", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-decstation", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-decstation?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -1,5 +1,3 @@\n-CC = cc -Wf,-XNg1000\n-\n # for X11, since the native DECwindows include files are really broken when\n # it comes to function prototypes.  \n X11_EXTRA_CFLAGS = \"-DNeedFunctionPrototypes=0\""}, {"sha": "746ffdb2d6c45fb339437805116bda9a9a515c97", "filename": "config/mh-dgux", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-dgux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-dgux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-dgux?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -1,4 +1,3 @@\n HDEFINES=-DHOST_SYS=DGUX_SYS\n-CC=gcc -Wall -ansi -D__using_DGUX\n RANLIB=true\n "}, {"sha": "cec4c4a92805b04225fb7199795bf4e4b8dbd51c", "filename": "config/mh-dgux386", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-dgux386", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-dgux386", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-dgux386?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -1,22 +1,14 @@\n # from mh-dgux\n HDEFINES=-DHOST_SYS=DGUX_SYS\n-CC=gcc -Wall -ansi -D__using_DGUX\n RANLIB = true\n \n # from mh-sysv4\n # Define SYSV as -DSYSV if you are using a System V operating system.\n SYSV = -DSYSV -DSVR4\n RANLIB = true\n \n-# C++ debugging is not yet supported under SVR4 (DWARF)\n-CXXFLAGS=-O\n-\n # The l flag generates a warning from the SVR4 archiver, remove it.\n AR_FLAGS = cr\n \n X11_EXTRA_LIBS = -lnsl\n \n-# from angela\n-# no debugging due to broken compiler, use BSD style timeofday\n-CFLAGS=-O -D_BSD_TIMEOFDAY_FLAVOR\n-"}, {"sha": "277926892dec3d89c742b349538b0da1ec1f01cd", "filename": "config/mh-hp300", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-hp300", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-hp300", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-hp300?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -1,13 +1,5 @@\n # Define SYSV as -DSYSV if you are using a System V operating system.\n SYSV = -DSYSV\n-# Avoid \"too much defining\" errors from HPUX compiler.\n-CC = cc -Wp,-H256000\n # If \"ar\" in $PATH is GNU ar, the symbol table may need rebuilding.\n # If it's HP/UX ar, this should be harmless.\n RANLIB = ar ts\n-\n-# Native cc can't bootstrap gcc with -g.  Defining CFLAGS here loses (a)\n-# for non-gcc directories, (b) if we are compiling with gcc, not\n-# native cc.  Neither (a) nor (b) has a trivial fix though.\n-\n-CFLAGS ="}, {"sha": "16b1187b44717d48d4898206a6564eea5de5376b", "filename": "config/mh-hpux", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-hpux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-hpux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-hpux?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -1,4 +1,3 @@\n # Define SYSV as -DSYSV if you are using a System V operating system.\n-CC = cc -Wp,-H256000\n SYSV = -DSYSV\n RANLIB = true"}, {"sha": "16b1187b44717d48d4898206a6564eea5de5376b", "filename": "config/mh-hpux8", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-hpux8", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-hpux8", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-hpux8?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -1,4 +1,3 @@\n # Define SYSV as -DSYSV if you are using a System V operating system.\n-CC = cc -Wp,-H256000\n SYSV = -DSYSV\n RANLIB = true"}, {"sha": "16930060d704db8d7f67a929532b6578e4ed8036", "filename": "config/mh-interix", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-interix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-interix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-interix?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -2,12 +2,6 @@\n SHELL = sh\n RANLIB = true\n \n-# We don't want debugging info in Interix-hosted toolchains.\n-# Accomplish this by overriding CFLAGS. This is also a workaround\n-# for LD crash when building shared libstdc++.\n-CFLAGS=-O2\n-CXXFLAGS=-O2\n-\n # We also need to override LIBGCC2_DEBUG_CFLAGS so libgcc2 will be\n # built without debugging information\n "}, {"sha": "ff226bfc7d7f0b9d6d400fc43653aeb8ce324f3c", "filename": "config/mh-irix4", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-irix4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-irix4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-irix4?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -1,7 +1,2 @@\n # Makefile changes for SGI's running IRIX-4.x.\n-# Tell compiler to use K&R C.  We can't compile under the SGI Ansi\n-# environment.  Also bump switch table size so that cp-parse will\n-# compile.  Bump string length limit so linker builds.\n-\n-CC = cc -cckr -Wf,-XNg1500 -Wf,-XNk1000 -Wf,-XNh2000 -Wf,-XNl8192\n SYSV = -DSYSV"}, {"sha": "9afcb79fca7c725fbfdaf6e9696570116772a36e", "filename": "config/mh-lynxos", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f1760d33ca52f7f9a581bb5420ad36345484c32/config%2Fmh-lynxos", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f1760d33ca52f7f9a581bb5420ad36345484c32/config%2Fmh-lynxos", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-lynxos?ref=1f1760d33ca52f7f9a581bb5420ad36345484c32", "patch": "@@ -1,2 +0,0 @@\n-# /bin/cc is less than useful for our purposes.  Always use GCC\n-CC = /bin/gcc"}, {"sha": "3ee763996debedc25a1e5a47f10b87b57d57a803", "filename": "config/mh-lynxrs6k", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-lynxrs6k", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-lynxrs6k", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-lynxrs6k?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -1,8 +1,5 @@\n # LynxOS running on the rs6000 doesn't have ranlib\n RANLIB = true\n \n-# /bin/cc is less than useful for our purposes.  Always use GCC\n-CC = /usr/cygnus/progressive/bin/gcc\n-\n # /bin/sh is too buggy, so use /bin/bash instead.\n SHELL = /bin/bash"}, {"sha": "f622c8bec01821faa84ddff9bc88acf826611ca2", "filename": "config/mh-mingw32", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-mingw32", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-mingw32", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-mingw32?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -1,8 +1,3 @@\n-# We don't want debugging info in Win32-hosted toolchains.\n-# Accomplish this by overriding CFLAGS.\n-CFLAGS=-O2\n-CXXFLAGS=-O2\n-\n # We also need to override LIBGCC2_DEBUG_CFLAGS so libgcc2 will be\n # built without debugging information\n "}, {"sha": "e9afa50bb2373ceecc5c5e6234b76a2e02971466", "filename": "config/mh-ncr3000", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-ncr3000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-ncr3000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-ncr3000?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -1,14 +1,5 @@\n # Host configuration file for an NCR 3000 (i486/SVR4) system.\n \n-# The NCR 3000 ships with a MetaWare compiler installed as /bin/cc.\n-# This compiler not only emits obnoxious copyright messages every time\n-# you run it, but it chokes and dies on a whole bunch of GNU source\n-# files.  Default to using the AT&T compiler installed in /usr/ccs/ATT/cc.\n-# Unfortunately though, the AT&T compiler sometimes generates code that\n-# the assembler barfs on if -g is used, so disable it by default as well.\n-CC = /usr/ccs/ATT/cc\n-CFLAGS =\n-\n # Define SYSV as -DSYSV if you are using a System V operating system.\n SYSV = -DSYSV -DSVR4\n RANLIB = true"}, {"sha": "2e42c5f6a4db8fc4c13f767a3957890ff52fc1b2", "filename": "config/mh-ncrsvr43", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-ncrsvr43", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-ncrsvr43", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-ncrsvr43?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -1,9 +1,5 @@\n # Host configuration file for an NCR 3000 (i486/SVR43) system.\n \n-# The MetaWare compiler will generate a copyright message unless you\n-# turn it off by adding the -Hnocopyr flag.\n-CC = cc -Hnocopyr\n-\n # Define SYSV as -DSYSV if you are using a System V operating system.\n SYSV = -DSYSV -DSVR4\n RANLIB = true"}, {"sha": "a926ea5f5fb72c183d975ec0cc2cdde733f2c186", "filename": "config/mh-necv4", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-necv4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-necv4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-necv4?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -1,8 +1,5 @@\n # Host Makefile fragment for NEC MIPS SVR4.\n \n-# The C compiler on NEC MIPS SVR4 needs bigger tables.\n-CC = cc -ZXNd=5000 -ZXNg=1000\n-\n # Define SYSV as -DSYSV if you are using a System V operating system.\n SYSV = -DSYSV -DSVR4\n RANLIB = true"}, {"sha": "40030020773ac0f4d974f743003a44a20e9f7e2d", "filename": "config/mh-openedition", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-openedition", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-openedition", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-openedition?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -1,2 +1 @@\n RANLIB = true\n-CC = c89"}, {"sha": "07588c76f1f64b695c9df3c79ec245d8ab33c6a7", "filename": "config/mh-riscos", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-riscos", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-riscos", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-riscos?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -1,15 +1,3 @@\n # This is for a MIPS running RISC/os 4.52C.\n \n-# This is needed for GDB, but needs to be in the top-level make because\n-# if a library is compiled with the bsd headers and gets linked with the\n-# sysv system libraries all hell can break loose (e.g. a jmp_buf might be\n-# a different size).\n-# ptrace(2) apparently has problems in the BSD environment.  No workaround is\n-# known except to select the sysv environment.  Could we use /proc instead?\n-# These \"sysv environments\" and \"bsd environments\" often end up being a pain.\n-#\n-# This is not part of CFLAGS because perhaps not all C compilers have this\n-# option.\n-CC= cc -systype sysv\n-\n RANLIB = true"}, {"sha": "5e909a97ae5d78a92d67f56e359863d3a91f1ba8", "filename": "config/mh-sco", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-sco", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-sco", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-sco?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -3,8 +3,5 @@ SYSV = -DSYSV\n RANLIB = true\n # You may need this if you don't have bison.\n # BISON = yacc -Sm10400\n-# The native C compiler botches some simple uses of const.  Unfortunately,\n-# it doesn't defined anything like \"__sco__\" for us to test for in ansidecl.h.\n-CC = cc -Dconst=\n \n X11_EXTRA_LIBS = -lsocket -lm -lintl -lmalloc"}, {"sha": "dcd5155b736c87c99a72d77d2ef4fd4455cb55cb", "filename": "config/mh-sun3", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f1760d33ca52f7f9a581bb5420ad36345484c32/config%2Fmh-sun3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f1760d33ca52f7f9a581bb5420ad36345484c32/config%2Fmh-sun3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-sun3?ref=1f1760d33ca52f7f9a581bb5420ad36345484c32", "patch": "@@ -1,3 +0,0 @@\n-# Sun's C compiler needs the -J flag to be able to compile cp-parse.c\n-# without overflowing the jump tables (-J says to use a 32 bit table)\n-CC = cc -J"}, {"sha": "796580b1ca7c191d0fe2a2644010e135e0cd23d3", "filename": "config/mh-sysv4", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-sysv4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/config%2Fmh-sysv4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-sysv4?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -2,9 +2,6 @@\n SYSV = -DSYSV -DSVR4\n RANLIB = true\n \n-# C++ debugging is not yet supported under SVR4 (DWARF)\n-CXXFLAGS=-O\n-\n # The l flag generates a warning from the SVR4 archiver, remove it.\n AR_FLAGS = cr\n "}, {"sha": "3de2dc8ffe3eeea9daa838a845cc7af84caca459", "filename": "config/mh-vaxult2", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f1760d33ca52f7f9a581bb5420ad36345484c32/config%2Fmh-vaxult2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f1760d33ca52f7f9a581bb5420ad36345484c32/config%2Fmh-vaxult2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmh-vaxult2?ref=1f1760d33ca52f7f9a581bb5420ad36345484c32", "patch": "@@ -1,2 +0,0 @@\n-# The old BSD pcc isn't up to compiling parts of gdb so use gcc\n-CC = gcc"}, {"sha": "fc528ac2050af462f1d0eea42fb3dfce002925bf", "filename": "configure.in", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/704c9a14022cd20ab666e348fd443e86f3a6fb3f/configure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/704c9a14022cd20ab666e348fd443e86f3a6fb3f/configure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.in?ref=704c9a14022cd20ab666e348fd443e86f3a6fb3f", "patch": "@@ -266,7 +266,6 @@ case \"${host}\" in\n   vax-*-ultrix2*)\n     # The old BSD pcc isn't up to compiling parts of gdb so use gcc\n     tentative_cc=gcc\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-vaxult2\"\n     ;;\n   *-*-solaris2*)\n     host_makefile_frag=\"${host_makefile_frag} config/mh-solaris\"\n@@ -275,7 +274,6 @@ case \"${host}\" in\n     # Sun's C compiler needs the -J flag to be able to compile cp-parse.c\n     # without overflowing the jump tables (-J says to use a 32 bit table)\n     tentative_cc=\"cc -J\"\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-sun3\"\n     ;;\n   *-hp-hpux[78]*)\n     tentative_cc=\"cc -Wp,-H256000\"\n@@ -297,7 +295,6 @@ case \"${host}\" in\n   *-*-lynxos*)\n     # /bin/cc is less than useful for our purposes.  Always use GCC\n     tentative_cc=\"/bin/gcc\"\n-    host_makefile_frag=\"${host_makefile_frag} config/mh-lynxos\"\n     ;;\n   *-*-sysv4*)\n     host_makefile_frag=\"${host_makefile_frag} config/mh-sysv4\""}]}