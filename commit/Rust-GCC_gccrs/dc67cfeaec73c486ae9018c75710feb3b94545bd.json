{"sha": "dc67cfeaec73c486ae9018c75710feb3b94545bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM2N2NmZWFlYzczYzQ4NmFlOTAxOGM3NTcxMGZlYjNiOTQ1NDViZA==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2018-05-30T08:57:33Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-30T08:57:33Z"}, "message": "[Ada] Reuse Is_Rewrite_Substitution where possible\n\nUse a high-level Is_Rewrite_Substitution instead of a low-level inequality,\nwith the intention to improve the code easier to read. Semantics unaffected,\nso no test provided.\n\n2018-05-30  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* errout.adb, exp_aggr.adb, exp_ch7.adb, exp_util.adb, lib.adb,\n\tsem_ch13.adb, sem_ch4.adb, sem_res.adb, sem_util.adb\n\t(Has_Original_Node): Refactor to use Is_Rewrite_Substitution.\n\nFrom-SVN: r260935", "tree": {"sha": "3f68194b9140df10b22f588ea834521fc4595e59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f68194b9140df10b22f588ea834521fc4595e59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc67cfeaec73c486ae9018c75710feb3b94545bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc67cfeaec73c486ae9018c75710feb3b94545bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc67cfeaec73c486ae9018c75710feb3b94545bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc67cfeaec73c486ae9018c75710feb3b94545bd/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "81c8f261d7c09b5dff140a604f0743f75827c647", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81c8f261d7c09b5dff140a604f0743f75827c647", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81c8f261d7c09b5dff140a604f0743f75827c647"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "8a5b510269d022e03928546283a1e80af54a3ed2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc67cfeaec73c486ae9018c75710feb3b94545bd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc67cfeaec73c486ae9018c75710feb3b94545bd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=dc67cfeaec73c486ae9018c75710feb3b94545bd", "patch": "@@ -1,3 +1,9 @@\n+2018-05-30  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* errout.adb, exp_aggr.adb, exp_ch7.adb, exp_util.adb, lib.adb,\n+\tsem_ch13.adb, sem_ch4.adb, sem_res.adb, sem_util.adb\n+\t(Has_Original_Node): Refactor to use Is_Rewrite_Substitution.\n+\n 2018-05-30  Piotr Trojanek  <trojanek@adacore.com>\n \n \t* sem_prag.adb (Analyze_Pragma): Remove conjuncts that are always true."}, {"sha": "587dcfe4399955df0f23b8bb6db934b05611489f", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc67cfeaec73c486ae9018c75710feb3b94545bd/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc67cfeaec73c486ae9018c75710feb3b94545bd/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=dc67cfeaec73c486ae9018c75710feb3b94545bd", "patch": "@@ -2387,7 +2387,7 @@ package body Errout is\n          end loop;\n \n          if Nkind (N) = N_Raise_Constraint_Error\n-           and then Original_Node (N) /= N\n+           and then Is_Rewrite_Substitution (N)\n            and then No (Condition (N))\n          then\n             --  Warnings may have been posted on subexpressions of the original"}, {"sha": "e01d374a075951e53b9d38194cd842097e93dc45", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc67cfeaec73c486ae9018c75710feb3b94545bd/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc67cfeaec73c486ae9018c75710feb3b94545bd/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=dc67cfeaec73c486ae9018c75710feb3b94545bd", "patch": "@@ -6089,7 +6089,7 @@ package body Exp_Aggr is\n       --  that Convert_To_Positional succeeded and reanalyzed the rewritten\n       --  aggregate.\n \n-      elsif Analyzed (N) and then N /= Original_Node (N) then\n+      elsif Analyzed (N) and then Is_Rewrite_Substitution (N) then\n          return;\n       end if;\n "}, {"sha": "37d12906bed50bdb4482cfaf00d2d02c08f079a8", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc67cfeaec73c486ae9018c75710feb3b94545bd/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc67cfeaec73c486ae9018c75710feb3b94545bd/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=dc67cfeaec73c486ae9018c75710feb3b94545bd", "patch": "@@ -5255,7 +5255,7 @@ package body Exp_Ch7 is\n             --  node. Inspect the original node to detect the initial placement\n             --  of the call.\n \n-            elsif Original_Node (N) /= N then\n+            elsif Is_Rewrite_Substitution (N) then\n                Detect_Subprogram_Call (Original_Node (N));\n \n                if Must_Hook then"}, {"sha": "0130307ae033b25ad9b72404f177030fc3df14c4", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc67cfeaec73c486ae9018c75710feb3b94545bd/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc67cfeaec73c486ae9018c75710feb3b94545bd/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=dc67cfeaec73c486ae9018c75710feb3b94545bd", "patch": "@@ -4826,7 +4826,7 @@ package body Exp_Util is\n                while Present (E) loop\n                   Force_Evaluation (E);\n \n-                  if Original_Node (E) /= E then\n+                  if Is_Rewrite_Substitution (E) then\n                      Set_Do_Range_Check\n                        (E, Do_Range_Check (Original_Node (E)));\n                   end if;"}, {"sha": "a052b345c9e0aeb08f433444519363aed336c6c7", "filename": "gcc/ada/lib.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc67cfeaec73c486ae9018c75710feb3b94545bd/gcc%2Fada%2Flib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc67cfeaec73c486ae9018c75710feb3b94545bd/gcc%2Fada%2Flib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.adb?ref=dc67cfeaec73c486ae9018c75710feb3b94545bd", "patch": "@@ -1326,7 +1326,7 @@ package body Lib is\n       Write_Str (\"=\");\n       Write_Str (Node_Kind'Image (Nkind (Item)));\n \n-      if Item /= Original_Node (Item) then\n+      if Is_Rewrite_Substitution (Item) then\n          Write_Str (\", orig = \");\n          Write_Int (Int (Original_Node (Item)));\n          Write_Str (\"=\");"}, {"sha": "d9a0344f4069bf948d6bf18276a52a8ed8397adb", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc67cfeaec73c486ae9018c75710feb3b94545bd/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc67cfeaec73c486ae9018c75710feb3b94545bd/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=dc67cfeaec73c486ae9018c75710feb3b94545bd", "patch": "@@ -9643,7 +9643,7 @@ package body Sem_Ch13 is\n                --  from the node, since we may have rewritten things and\n                --  substituted an identifier representing the rewrite.\n \n-               if Original_Node (Nod) /= Nod then\n+               if Is_Rewrite_Substitution (Nod) then\n                   Check_Expr_Constants (Original_Node (Nod));\n \n                   --  If the node is an object declaration without initial"}, {"sha": "1b8d8cb19688ce6a2e60a6343c35577c420de910", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc67cfeaec73c486ae9018c75710feb3b94545bd/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc67cfeaec73c486ae9018c75710feb3b94545bd/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=dc67cfeaec73c486ae9018c75710feb3b94545bd", "patch": "@@ -1345,7 +1345,7 @@ package body Sem_Ch4 is\n             --  parameter has been analyzed, but may need a subsequent\n             --  dereference, so skip its analysis now.\n \n-            if N /= Original_Node (N)\n+            if Is_Rewrite_Substitution (N)\n               and then Nkind (Original_Node (N)) = Nkind (N)\n               and then Nkind (Name (N)) /= Nkind (Name (Original_Node (N)))\n               and then Present (Parameter_Associations (N))"}, {"sha": "a2788d99922c6c02ae5c374f0b557df25aff1cd1", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc67cfeaec73c486ae9018c75710feb3b94545bd/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc67cfeaec73c486ae9018c75710feb3b94545bd/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=dc67cfeaec73c486ae9018c75710feb3b94545bd", "patch": "@@ -12691,7 +12691,7 @@ package body Sem_Res is\n \n             if Ada_Version >= Ada_2012\n               and then not Comes_From_Source (N)\n-              and then N /= Original_Node (N)\n+              and then Is_Rewrite_Substitution (N)\n               and then Ekind (Target_Type) = E_General_Access_Type\n               and then Ekind (Opnd_Type) = E_Anonymous_Access_Type\n             then"}, {"sha": "5004e3220f0f5ec4493d2b88d3cbe32e7ffd1c22", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc67cfeaec73c486ae9018c75710feb3b94545bd/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc67cfeaec73c486ae9018c75710feb3b94545bd/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=dc67cfeaec73c486ae9018c75710feb3b94545bd", "patch": "@@ -15855,7 +15855,7 @@ package body Sem_Util is\n       --  original node is a conversion, then Is_Variable will not be true\n       --  but we still want to allow the conversion if it converts a variable).\n \n-      elsif Original_Node (AV) /= AV then\n+      elsif Is_Rewrite_Substitution (AV) then\n \n          --  In Ada 2012, the explicit dereference may be a rewritten call to a\n          --  Reference function."}]}