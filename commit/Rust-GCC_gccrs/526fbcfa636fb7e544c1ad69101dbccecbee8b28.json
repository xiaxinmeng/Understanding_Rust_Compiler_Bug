{"sha": "526fbcfa636fb7e544c1ad69101dbccecbee8b28", "node_id": "C_kwDOANBUbNoAKDUyNmZiY2ZhNjM2ZmI3ZTU0NGMxYWQ2OTEwMWRiY2NlY2JlZThiMjg", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-25T09:56:46Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-25T09:56:46Z"}, "message": "internal-fn: Call do_pending_stack_adjust in expand_SPACESHIP [PR104679]\n\nThe following testcase is miscompiled on ia32 at -O2, because\nwhen expand_SPACESHIP is called, we have pending stack adjustment\nfrom the foo call right before it.\nNow, ix86_expand_fp_spaceship uses emit_jump_insn several times\nbut then emit_jump also several times.  While emit_jump_insn doesn't\ndo do_pending_stack_adjust (), emit_jump does, so we end up with:\n...\n    8: call [`_Z3foodl'] argc:0x10\n      REG_CALL_DECL `_Z3foodl'\n    9: r88:DF=[`a']\n   10: r89:HI=unspec[cmp(r88:DF,0.0)] 25\n   11: flags:CC=unspec[r89:HI] 26\n   12: pc={(unordered(flags:CCFP,0))?L27:pc}\n      REG_BR_PROB 536868\n   66: NOTE_INSN_BASIC_BLOCK 4\n   13: pc={(uneq(flags:CCFP,0))?L19:pc}\n      REG_BR_PROB 214748364\n   67: NOTE_INSN_BASIC_BLOCK 5\n   14: pc={(flags:CCFP>0)?L23:pc}\n      REG_BR_PROB 536870916\n   68: NOTE_INSN_BASIC_BLOCK 6\n   15: r86:SI=0xffffffffffffffff\n   16: {sp:SI=sp:SI+0x10;clobber flags:CC;}\n      REG_ARGS_SIZE 0\n   17: pc=L29\n   18: barrier\n   19: L19:\n   69: NOTE_INSN_BASIC_BLOCK 7\n...\nThe sp += 16 pending stuck adjust was emitted in the middle of the\nsequence and is effective only for the single case of the 4 possibilities\nwhere .SPACESHIP returns -1, in all other cases the stack isn't adjusted\nand so we ICE during dwarf2cfi.\n\nNow, we could either call do_pending_stack_adjust in\nix86_expand_fp_spaceship, or use there calls that actually don't call\ndo_pending_stack_adjust (but having the stack adjustment across branches is\ngenerally undesirable), or we can call it in expand_SPACESHIP for all\ntargets (note, just i386 currently implements it).\nI chose the generic code because e.g. expand_{addsub,neg,mul}_overflow\nin the same file also call do_pending_stack_adjust in internal-fn.cc for the\nsame reasons, that it is expected that most if not all targets will expand\nthose through jumps and we don't want all of the targets to need to deal\nwith that.\n\n2022-02-25  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/104679\n\t* internal-fn.cc (expand_SPACESHIP): Call do_pending_stack_adjust.\n\n\t* g++.dg/torture/pr104679.C: New test.", "tree": {"sha": "762e55a6b7eacc520d5aa50f929ad77752a26715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/762e55a6b7eacc520d5aa50f929ad77752a26715"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/526fbcfa636fb7e544c1ad69101dbccecbee8b28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/526fbcfa636fb7e544c1ad69101dbccecbee8b28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/526fbcfa636fb7e544c1ad69101dbccecbee8b28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/526fbcfa636fb7e544c1ad69101dbccecbee8b28/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "758671b88b78d7629376b118ec6ca6bcfbabbd36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/758671b88b78d7629376b118ec6ca6bcfbabbd36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/758671b88b78d7629376b118ec6ca6bcfbabbd36"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "dd3ee0df64bfc247bee89bca1e21a20b9401008a", "filename": "gcc/internal-fn.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/526fbcfa636fb7e544c1ad69101dbccecbee8b28/gcc%2Finternal-fn.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/526fbcfa636fb7e544c1ad69101dbccecbee8b28/gcc%2Finternal-fn.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finternal-fn.cc?ref=526fbcfa636fb7e544c1ad69101dbccecbee8b28", "patch": "@@ -4437,6 +4437,8 @@ expand_SPACESHIP (internal_fn, gcall *stmt)\n   tree rhs2 = gimple_call_arg (stmt, 1);\n   tree type = TREE_TYPE (rhs1);\n \n+  do_pending_stack_adjust ();\n+\n   rtx target = expand_expr (lhs, NULL_RTX, VOIDmode, EXPAND_WRITE);\n   rtx op1 = expand_normal (rhs1);\n   rtx op2 = expand_normal (rhs2);"}, {"sha": "ccdfbaecd5712b1aee8e75a065ccdd3368efe1bc", "filename": "gcc/testsuite/g++.dg/torture/pr104679.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/526fbcfa636fb7e544c1ad69101dbccecbee8b28/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr104679.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/526fbcfa636fb7e544c1ad69101dbccecbee8b28/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr104679.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr104679.C?ref=526fbcfa636fb7e544c1ad69101dbccecbee8b28", "patch": "@@ -0,0 +1,22 @@\n+// PR middle-end/104679\n+// { dg-do compile }\n+\n+struct A { ~A (); };\n+void foo (double, long);\n+void bar ();\n+double a;\n+long b;\n+\n+void\n+baz ()\n+{\n+  foo (a, b);\n+  if (a == 0.0)\n+    ;\n+  else\n+    while (a > 0.0)\n+      {\n+        A c;\n+        bar ();\n+      }\n+}"}]}