{"sha": "91856735012800f9cf75affc9abe6c7bf56739c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE4NTY3MzUwMTI4MDBmOWNmNzVhZmZjOWFiZTZjN2JmNTY3MzljOA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-03-04T11:25:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-03-04T11:25:50Z"}, "message": "re PR lto/60405 (ICE in lto1 on x86_64-linux-gnu)\n\n2014-03-04  Richard Biener  <rguenther@suse.de>\n\n\tPR lto/60405\n\t* lto-streamer-in.c (lto_read_body): Remove LTO bytecode version\n\tcheck.\n\t(lto_input_toplevel_asms): Likewise.\n\t* lto-section-in.c (lto_get_section_data): Instead do it here\n\tfor every section.\n\nFrom-SVN: r208311", "tree": {"sha": "a80cc2694efb22749344a087ddb94257dbd5480a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a80cc2694efb22749344a087ddb94257dbd5480a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91856735012800f9cf75affc9abe6c7bf56739c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91856735012800f9cf75affc9abe6c7bf56739c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91856735012800f9cf75affc9abe6c7bf56739c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91856735012800f9cf75affc9abe6c7bf56739c8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "064fd5a8d077d62dc4c0cf962f2b70b44cdb9a7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/064fd5a8d077d62dc4c0cf962f2b70b44cdb9a7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/064fd5a8d077d62dc4c0cf962f2b70b44cdb9a7f"}], "stats": {"total": 59, "additions": 32, "deletions": 27}, "files": [{"sha": "2faa849a8fc1bcdda184c7f4908d745d12286875", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91856735012800f9cf75affc9abe6c7bf56739c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91856735012800f9cf75affc9abe6c7bf56739c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=91856735012800f9cf75affc9abe6c7bf56739c8", "patch": "@@ -1,3 +1,12 @@\n+2014-03-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR lto/60405\n+\t* lto-streamer-in.c (lto_read_body): Remove LTO bytecode version\n+\tcheck.\n+\t(lto_input_toplevel_asms): Likewise.\n+\t* lto-section-in.c (lto_get_section_data): Instead do it here\n+\tfor every section.\n+ \n 2014-03-04  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/60382"}, {"sha": "60346dc7a26fe032a63b24f75845c5a896852ca3", "filename": "gcc/lto-section-in.c", "status": "modified", "additions": 23, "deletions": 19, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91856735012800f9cf75affc9abe6c7bf56739c8/gcc%2Flto-section-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91856735012800f9cf75affc9abe6c7bf56739c8/gcc%2Flto-section-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-section-in.c?ref=91856735012800f9cf75affc9abe6c7bf56739c8", "patch": "@@ -153,26 +153,30 @@ lto_get_section_data (struct lto_file_decl_data *file_data,\n \n   /* FIXME lto: WPA mode does not write compressed sections, so for now\n      suppress uncompression if flag_ltrans.  */\n-  if (flag_ltrans)\n-    return data;\n-\n-  /* Create a mapping header containing the underlying data and length,\n-     and prepend this to the uncompression buffer.  The uncompressed data\n-     then follows, and a pointer to the start of the uncompressed data is\n-     returned.  */\n-  header = (struct lto_data_header *) xmalloc (header_length);\n-  header->data = data;\n-  header->len = *len;\n-\n-  buffer.data = (char *) header;\n-  buffer.length = header_length;\n-\n-  stream = lto_start_uncompression (lto_append_data, &buffer);\n-  lto_uncompress_block (stream, data, *len);\n-  lto_end_uncompression (stream);\n+  if (!flag_ltrans)\n+    {\n+      /* Create a mapping header containing the underlying data and length,\n+\t and prepend this to the uncompression buffer.  The uncompressed data\n+\t then follows, and a pointer to the start of the uncompressed data is\n+\t returned.  */\n+      header = (struct lto_data_header *) xmalloc (header_length);\n+      header->data = data;\n+      header->len = *len;\n+\n+      buffer.data = (char *) header;\n+      buffer.length = header_length;\n+\n+      stream = lto_start_uncompression (lto_append_data, &buffer);\n+      lto_uncompress_block (stream, data, *len);\n+      lto_end_uncompression (stream);\n+\n+      *len = buffer.length - header_length;\n+      data = buffer.data + header_length;\n+    }\n \n-  *len = buffer.length - header_length;\n-  return buffer.data + header_length;\n+  lto_check_version (((lto_header *)data)->major_version,\n+\t\t     ((lto_header *)data)->minor_version);\n+  return data;\n }\n \n "}, {"sha": "da248b94692caad26029e92438971fd245ff6e8b", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91856735012800f9cf75affc9abe6c7bf56739c8/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91856735012800f9cf75affc9abe6c7bf56739c8/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=91856735012800f9cf75affc9abe6c7bf56739c8", "patch": "@@ -1059,10 +1059,6 @@ lto_read_body (struct lto_file_decl_data *file_data, struct cgraph_node *node,\n   data_in = lto_data_in_create (file_data, data + string_offset,\n \t\t\t      header->string_size, vNULL);\n \n-  /* Make sure the file was generated by the exact same compiler.  */\n-  lto_check_version (header->lto_header.major_version,\n-\t\t     header->lto_header.minor_version);\n-\n   if (section_type == LTO_section_function_body)\n     {\n       struct lto_in_decl_state *decl_state;\n@@ -1331,10 +1327,6 @@ lto_input_toplevel_asms (struct lto_file_decl_data *file_data, int order_base)\n   data_in = lto_data_in_create (file_data, data + string_offset,\n \t\t\t      header->string_size, vNULL);\n \n-  /* Make sure the file was generated by the exact same compiler.  */\n-  lto_check_version (header->lto_header.major_version,\n-\t\t     header->lto_header.minor_version);\n-\n   while ((str = streamer_read_string_cst (data_in, &ib)))\n     {\n       struct asm_node *node = add_asm_node (str);"}]}