{"sha": "cb5b00cfa15f4dc709984e3f39d708e5ce985139", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I1YjAwY2ZhMTVmNGRjNzA5OTg0ZTNmMzlkNzA4ZTVjZTk4NTEzOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-27T23:16:01Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-27T23:16:01Z"}, "message": "(expand_binop, multi-words shifts and rotates): Fix errors in last\nchange.\n\nFrom-SVN: r7575", "tree": {"sha": "2342e7f9be4757deda2178dfd0a1b013d45ad6dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2342e7f9be4757deda2178dfd0a1b013d45ad6dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb5b00cfa15f4dc709984e3f39d708e5ce985139", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb5b00cfa15f4dc709984e3f39d708e5ce985139", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb5b00cfa15f4dc709984e3f39d708e5ce985139", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb5b00cfa15f4dc709984e3f39d708e5ce985139/comments", "author": null, "committer": null, "parents": [{"sha": "dfaa6d72a3daba2accbbc2c47c7903dcbb49a96d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfaa6d72a3daba2accbbc2c47c7903dcbb49a96d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfaa6d72a3daba2accbbc2c47c7903dcbb49a96d"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "7eaa809bbf0ceeb9a6ccee19d7ce61ea7a6d7848", "filename": "gcc/optabs.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb5b00cfa15f4dc709984e3f39d708e5ce985139/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb5b00cfa15f4dc709984e3f39d708e5ce985139/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=cb5b00cfa15f4dc709984e3f39d708e5ce985139", "patch": "@@ -644,20 +644,20 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \t\t\t       GEN_INT (shift_count - BITS_PER_WORD),\n \t\t\t       into_target, unsignedp, next_methods);\n \n-\t  if (inter != 0)\n+\t  if (inter != 0 && inter != into_target)\n \t    emit_move_insn (into_target, inter);\n \n \t  /* For a signed right shift, we must fill the word we are shifting\n \t     out of with copies of the sign bit.  Otherwise it is zeroed.  */\n-\t  if (binoptab != ashr_optab)\n-\t    emit_move_insn (outof_target, CONST0_RTX (word_mode));\n+\t  if (inter != 0 && binoptab != ashr_optab)\n+\t    inter = CONST0_RTX (word_mode);\n \t  else if (inter != 0)\n \t    inter = expand_binop (word_mode, binoptab,\n \t\t\t\t  outof_input,\n \t\t\t\t  GEN_INT (BITS_PER_WORD - 1),\n \t\t\t\t  outof_target, unsignedp, next_methods);\n \n-\t  if (inter != 0)\n+\t  if (inter != 0 && inter != outof_target)\n \t    emit_move_insn (outof_target, inter);\n \t}\n       else\n@@ -688,7 +688,7 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \t    inter = expand_binop (word_mode, binoptab, outof_input,\n \t\t\t\t  op1, outof_target, unsignedp, next_methods);\n \t  \n-\t  if (inter != 0)\n+\t  if (inter != 0 && inter != outof_target)\n \t    emit_move_insn (outof_target, inter);\n \n \t  if (inter != 0)\n@@ -699,7 +699,7 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \t    inter = expand_binop (word_mode, ior_optab, carries, inter,\n \t\t\t\t  into_target, unsignedp, next_methods);\n \n-\t  if (inter != 0)\n+\t  if (inter != 0 && inter != into_target)\n \t    emit_move_insn (into_target, inter);\n \t}\n \n@@ -798,7 +798,7 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \t  else\n \t    inter = 0;\n \n-\t  if (inter != 0)\n+\t  if (inter != 0 && inter != into_target)\n \t    emit_move_insn (into_target, inter);\n \n \t  outof_temp1 = expand_binop (word_mode, unsigned_shift,\n@@ -813,7 +813,7 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \t\t\t\t  outof_temp1, outof_temp2,\n \t\t\t\t  outof_target, unsignedp, next_methods);\n \n-\t  if (inter != 0)\n+\t  if (inter != 0 && inter != outof_target)\n \t    emit_move_insn (outof_target, inter);\n \t}\n "}]}