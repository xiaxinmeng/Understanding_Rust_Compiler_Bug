{"sha": "ea55fa7ab15a88d60f3156c4ee22151da15cc8aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE1NWZhN2FiMTVhODhkNjBmMzE1NmM0ZWUyMjE1MWRhMTVjYzhhYQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@redhat.com", "date": "2001-01-06T09:06:13Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2001-01-06T09:06:13Z"}, "message": "integrate.c (copy_rtx_and_substitute): When copying an ignored return value, strip REG_FUNCTION_VALUE_P.\n\n\t* integrate.c (copy_rtx_and_substitute): When copying\n\tan ignored return value, strip REG_FUNCTION_VALUE_P.\n\nFrom-SVN: r38747", "tree": {"sha": "e37f7c301b8f45e7141c78fb72e53cdc1971b17a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e37f7c301b8f45e7141c78fb72e53cdc1971b17a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea55fa7ab15a88d60f3156c4ee22151da15cc8aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea55fa7ab15a88d60f3156c4ee22151da15cc8aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea55fa7ab15a88d60f3156c4ee22151da15cc8aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea55fa7ab15a88d60f3156c4ee22151da15cc8aa/comments", "author": null, "committer": null, "parents": [{"sha": "3cccebf27b192fff321cf110d8b4cc37570ad102", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cccebf27b192fff321cf110d8b4cc37570ad102", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cccebf27b192fff321cf110d8b4cc37570ad102"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "d28f9b8f3130c3fa9e038bc97f7e8eb0c3311671", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea55fa7ab15a88d60f3156c4ee22151da15cc8aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea55fa7ab15a88d60f3156c4ee22151da15cc8aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea55fa7ab15a88d60f3156c4ee22151da15cc8aa", "patch": "@@ -1,3 +1,8 @@\n+Sat Jan  6 00:09:34 2001  J\"orn Rennecke <amylaar@redhat.com>\n+\n+\t* integrate.c (copy_rtx_and_substitute): When copying\n+\tan ignored return value, strip REG_FUNCTION_VALUE_P.\n+\n 2001-01-06  Michael Hayes  <mhayes@redhat.com>\n \n \t* loop.c (debug_biv, debug_giv): New."}, {"sha": "9859a02c9eb3ef0358379ac75130659a3bba736c", "filename": "gcc/integrate.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea55fa7ab15a88d60f3156c4ee22151da15cc8aa/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea55fa7ab15a88d60f3156c4ee22151da15cc8aa/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=ea55fa7ab15a88d60f3156c4ee22151da15cc8aa", "patch": "@@ -1844,9 +1844,18 @@ copy_rtx_and_substitute (orig, map, for_lhs)\n \t\t the function doesn't have a return value, error.  If the\n \t\t mode doesn't agree, and it ain't BLKmode, make a SUBREG.  */\n \t      if (map->inline_target == 0)\n-\t\t/* Must be unrolling loops or replicating code if we\n-\t\t   reach here, so return the register unchanged.  */\n-\t\treturn orig;\n+\t\t{\n+\t\t  if (rtx_equal_function_value_matters)\n+\t\t    /* This is an ignored return value.  We must not\n+\t\t       leave it in with REG_FUNCTION_VALUE_P set, since\n+\t\t       that would confuse subsequent inlining of the\n+\t\t       current function into a later function.  */\n+\t\t    return gen_rtx_REG (GET_MODE (orig), regno);\n+\t\t  else\n+\t\t    /* Must be unrolling loops or replicating code if we\n+\t\t       reach here, so return the register unchanged.  */\n+\t\t    return orig;\n+\t\t}\n \t      else if (GET_MODE (map->inline_target) != BLKmode\n \t\t       && mode != GET_MODE (map->inline_target))\n \t\treturn gen_lowpart (mode, map->inline_target);"}]}