{"sha": "f9f3b77cf5290a8417cfc450b936039c78f6618b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjlmM2I3N2NmNTI5MGE4NDE3Y2ZjNDUwYjkzNjAzOWM3OGY2NjE4Yg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-10-11T13:46:27Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-10-11T13:46:27Z"}, "message": "re PR c++/87582 (Returning a reference to a data member via structured bindings dangles)\n\n\tPR c++/87582\n\t* typeck.c (maybe_warn_about_returning_address_of_local): If\n\twhats_returned is a structured binding identifier and the structured\n\tbinding is a reference, recurse on its initializer.\n\n\t* g++.dg/cpp1z/decomp48.C: New test.\n\nFrom-SVN: r265041", "tree": {"sha": "925b629f996ac7888768a79b60da306c0fd16eb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/925b629f996ac7888768a79b60da306c0fd16eb4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9f3b77cf5290a8417cfc450b936039c78f6618b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9f3b77cf5290a8417cfc450b936039c78f6618b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9f3b77cf5290a8417cfc450b936039c78f6618b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9f3b77cf5290a8417cfc450b936039c78f6618b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "954ad1127eb4d367be1ece52e34ce15334d40c5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/954ad1127eb4d367be1ece52e34ce15334d40c5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/954ad1127eb4d367be1ece52e34ce15334d40c5e"}], "stats": {"total": 160, "additions": 160, "deletions": 0}, "files": [{"sha": "9ec7c8b861cc8d0a5ba8a45b43724cdb1cbf084f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f3b77cf5290a8417cfc450b936039c78f6618b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f3b77cf5290a8417cfc450b936039c78f6618b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f9f3b77cf5290a8417cfc450b936039c78f6618b", "patch": "@@ -1,5 +1,10 @@\n 2018-10-11  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/87582\n+\t* typeck.c (maybe_warn_about_returning_address_of_local): If\n+\twhats_returned is a structured binding identifier and the structured\n+\tbinding is a reference, recurse on its initializer.\n+\n \tPR c++/87547\n \t* rtti.c (get_tinfo_decl_dynamic): Use unlowered_expr_type instead\n \tof TREE_TYPE."}, {"sha": "8f81959253331427f172988b7a8e3c2e7a2a41f0", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f3b77cf5290a8417cfc450b936039c78f6618b/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f3b77cf5290a8417cfc450b936039c78f6618b/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=f9f3b77cf5290a8417cfc450b936039c78f6618b", "patch": "@@ -9096,6 +9096,22 @@ maybe_warn_about_returning_address_of_local (tree retval)\n       && !(TREE_STATIC (whats_returned)\n \t   || TREE_PUBLIC (whats_returned)))\n     {\n+      if (VAR_P (whats_returned)\n+\t  && DECL_DECOMPOSITION_P (whats_returned)\n+\t  && DECL_DECOMP_BASE (whats_returned)\n+\t  && DECL_HAS_VALUE_EXPR_P (whats_returned))\n+\t{\n+\t  /* When returning address of a structured binding, if the structured\n+\t     binding is not a reference, continue normally, if it is a\n+\t     reference, recurse on the initializer of the structured\n+\t     binding.  */\n+\t  tree base = DECL_DECOMP_BASE (whats_returned);\n+\t  if (TYPE_REF_P (TREE_TYPE (base)))\n+\t    {\n+\t      tree init = DECL_INITIAL (base);\n+\t      return maybe_warn_about_returning_address_of_local (init);\n+\t    }\n+\t}\n       bool w = false;\n       auto_diagnostic_group d;\n       if (TYPE_REF_P (valtype))"}, {"sha": "333ec99bd67a458ed68f4e3fba4ae0d11eae7f77", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f3b77cf5290a8417cfc450b936039c78f6618b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f3b77cf5290a8417cfc450b936039c78f6618b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f9f3b77cf5290a8417cfc450b936039c78f6618b", "patch": "@@ -1,3 +1,8 @@\n+2018-10-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/87582\n+\t* g++.dg/cpp1z/decomp48.C: New test.\n+\n 2018-10-11  David Malcolm  <dmalcolm@redhat.com>\n \n \t* g++.dg/diagnostic/macro-arg-count.C: Move to..."}, {"sha": "35413c79a9daf32906cd1bd34a008ac0037b7f8f", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp48.C", "status": "added", "additions": 134, "deletions": 0, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f3b77cf5290a8417cfc450b936039c78f6618b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp48.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f3b77cf5290a8417cfc450b936039c78f6618b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp48.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp48.C?ref=f9f3b77cf5290a8417cfc450b936039c78f6618b", "patch": "@@ -0,0 +1,134 @@\n+// PR c++/87582\n+// { dg-do run { target c++11 } }\n+// { dg-options \"-Wreturn-local-addr\" }\n+\n+struct S { int s, t; };\n+S v {1, 2};\n+int a[3] = {1, 2, 3};\n+\n+int &\n+f1 ()\n+{\n+  auto& [s, t] = v;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  return s;\t\t// { dg-bogus \"reference to local variable '.' returned\" }\n+}\n+\n+int &\n+f2 ()\n+{\n+  S v {1, 2};\n+  auto& [s, t] = v;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  return s;\t\t// { dg-warning \"reference to local variable 'v' returned\" }\n+}\n+\n+int &\n+f3 ()\n+{\n+  auto& [s, t, u] = a;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  return s;\t\t// { dg-bogus \"reference to local variable '.' returned\" }\n+}\n+\n+int &\n+f4 ()\n+{\n+  int a[3] = {1, 2, 3};\n+  auto& [s, t, u] = a;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  return s;\t\t// { dg-warning \"reference to local variable 'a' returned\" }\n+}\n+\n+int &\n+f5 ()\n+{\n+  auto [s, t] = v;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  return s;\t\t// { dg-warning \"reference to local variable 's' returned\" }\n+}\n+\n+int &\n+f6 ()\n+{\n+  S v {1, 2};\n+  auto [s, t] = v;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  return s;\t\t// { dg-warning \"reference to local variable 's' returned\" }\n+}\n+\n+int &\n+f7 ()\n+{\n+  auto [s, t, u] = a;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  return s;\t\t// { dg-warning \"reference to local variable 's' returned\" }\n+}\n+\n+int &\n+f8 ()\n+{\n+  int a[3] = {1, 2, 3};\n+  auto [s, t, u] = a;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  return s;\t\t// { dg-warning \"reference to local variable 's' returned\" }\n+}\n+\n+int *\n+f9 ()\n+{\n+  auto& [s, t] = v;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  return &s;\t\t// { dg-bogus \"address of local variable '.' returned\" }\n+}\n+\n+int *\n+f10 ()\n+{\n+  S v {1, 2};\n+  auto& [s, t] = v;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  return &s;\t\t// { dg-warning \"address of local variable 'v' returned\" }\n+}\n+\n+int *\n+f11 ()\n+{\n+  auto& [s, t, u] = a;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  return &s;\t\t// { dg-bogus \"address of local variable '.' returned\" }\n+}\n+\n+int *\n+f12 ()\n+{\n+  int a[3] = {1, 2, 3};\n+  auto& [s, t, u] = a;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  return &s;\t\t// { dg-warning \"address of local variable 'a' returned\" }\n+}\n+\n+int *\n+f13 ()\n+{\n+  auto [s, t] = v;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  return &s;\t\t// { dg-warning \"address of local variable 's' returned\" }\n+}\n+\n+int *\n+f14 ()\n+{\n+  S v {1, 2};\n+  auto [s, t] = v;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  return &s;\t\t// { dg-warning \"address of local variable 's' returned\" }\n+}\n+\n+int *\n+f15 ()\n+{\n+  auto [s, t, u] = a;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  return &s;\t\t// { dg-warning \"address of local variable 's' returned\" }\n+}\n+\n+int *\n+f16 ()\n+{\n+  int a[3] = {1, 2, 3};\n+  auto [s, t, u] = a;\t// { dg-warning \"structured bindings only available with\" \"\" { target c++14_down } }\n+  return &s;\t\t// { dg-warning \"address of local variable 's' returned\" }\n+}\n+\n+int\n+main ()\n+{\n+  if (&f1 () != &v.s || &f3 () != &a[0] || f9 () != &v.s || f11 () != &a[0])\n+    __builtin_abort ();\n+}"}]}