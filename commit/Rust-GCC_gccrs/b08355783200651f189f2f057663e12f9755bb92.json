{"sha": "b08355783200651f189f2f057663e12f9755bb92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA4MzU1NzgzMjAwNjUxZjE4OWYyZjA1NzY2M2UxMmY5NzU1YmI5Mg==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@redhat.com", "date": "2001-04-05T02:27:47Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2001-04-05T02:27:47Z"}, "message": "simplify-rtx.c (simplify_binary_operation): Check for overflow when folding integer division and modulo operations.\n\n2001-04-04  Diego Novillo  <dnovillo@redhat.com>\n\n\t* simplify-rtx.c (simplify_binary_operation): Check for overflow\n\twhen folding integer division and modulo operations.\n\n2001-04-04  Diego Novillo  <dnovillo@redhat.com>\n\n\t* gcc.c-torture/compile/20010404-1.c: New test.\n\nFrom-SVN: r41105", "tree": {"sha": "102c5ecab55ff14b05898ff73ce3c22e9dd1cd40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/102c5ecab55ff14b05898ff73ce3c22e9dd1cd40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b08355783200651f189f2f057663e12f9755bb92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b08355783200651f189f2f057663e12f9755bb92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b08355783200651f189f2f057663e12f9755bb92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b08355783200651f189f2f057663e12f9755bb92/comments", "author": null, "committer": null, "parents": [{"sha": "12f0b96b84e334fb3b1d582a19079abdf0fb054f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12f0b96b84e334fb3b1d582a19079abdf0fb054f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12f0b96b84e334fb3b1d582a19079abdf0fb054f"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "cfc9306318e3d8cc576ab33fe8a355a186283052", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b08355783200651f189f2f057663e12f9755bb92/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b08355783200651f189f2f057663e12f9755bb92/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b08355783200651f189f2f057663e12f9755bb92", "patch": "@@ -1,3 +1,8 @@\n+2001-04-04  Diego Novillo  <dnovillo@redhat.com>\n+\n+\t* simplify-rtx.c (simplify_binary_operation): Check for overflow\n+\twhen folding integer division and modulo operations.\n+\n 2001-04-04  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* dwarf2out.c (output_cfi): Add 'for_eh' parameter, use PTR_SIZE "}, {"sha": "af8b708977c3fe014a9fe6dc71d3bb69b9dbb500", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b08355783200651f189f2f057663e12f9755bb92/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b08355783200651f189f2f057663e12f9755bb92/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=b08355783200651f189f2f057663e12f9755bb92", "patch": "@@ -1407,25 +1407,33 @@ simplify_binary_operation (code, mode, op0, op1)\n       break;\n \n     case DIV:\n-      if (arg1s == 0)\n+      if (arg1s == 0\n+\t  || (arg0s == (HOST_WIDE_INT) 1 << (HOST_BITS_PER_WIDE_INT - 1)\n+\t      && arg1s == -1))\n \treturn 0;\n       val = arg0s / arg1s;\n       break;\n \n     case MOD:\n-      if (arg1s == 0)\n+      if (arg1s == 0\n+\t  || (arg0s == (HOST_WIDE_INT) 1 << (HOST_BITS_PER_WIDE_INT - 1)\n+\t      && arg1s == -1))\n \treturn 0;\n       val = arg0s % arg1s;\n       break;\n \n     case UDIV:\n-      if (arg1 == 0)\n+      if (arg1 == 0\n+\t  || (arg0s == (HOST_WIDE_INT) 1 << (HOST_BITS_PER_WIDE_INT - 1)\n+\t      && arg1s == -1))\n \treturn 0;\n       val = (unsigned HOST_WIDE_INT) arg0 / arg1;\n       break;\n \n     case UMOD:\n-      if (arg1 == 0)\n+      if (arg1 == 0\n+\t  || (arg0s == (HOST_WIDE_INT) 1 << (HOST_BITS_PER_WIDE_INT - 1)\n+\t      && arg1s == -1))\n \treturn 0;\n       val = (unsigned HOST_WIDE_INT) arg0 % arg1;\n       break;"}, {"sha": "5e4c1552010e438bedef9c47b576babb5cca9f03", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b08355783200651f189f2f057663e12f9755bb92/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b08355783200651f189f2f057663e12f9755bb92/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b08355783200651f189f2f057663e12f9755bb92", "patch": "@@ -1,3 +1,7 @@\n+2001-04-04  Diego Novillo  <dnovillo@redhat.com>\n+\n+\t* gcc.c-torture/compile/20010404-1.c: New test.\n+\n 2001-04-04  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.c-torture/compile/20010326-1.c: New test."}, {"sha": "f890118e15d6838533ad9905b53098802c32a4a1", "filename": "gcc/testsuite/gcc.c-torture/compile/20010404-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b08355783200651f189f2f057663e12f9755bb92/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010404-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b08355783200651f189f2f057663e12f9755bb92/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010404-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20010404-1.c?ref=b08355783200651f189f2f057663e12f9755bb92", "patch": "@@ -0,0 +1,15 @@\n+/* This testcase caused a floating point exception in the compiler when\n+   compiled with -O2. The crash occurs when trying to simplify division\n+   and modulo operations.  */\n+\n+#include <limits.h>\n+\n+extern void bar (int);\n+\n+void foo ()\n+{\n+  int a = INT_MIN;\n+  int b = -1;\n+  bar (a / b);\n+  bar (a % b);\n+}"}]}