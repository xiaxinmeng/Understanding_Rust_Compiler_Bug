{"sha": "29655d3d5ca71f80c77c3b996447298456aecc4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk2NTVkM2Q1Y2E3MWY4MGM3N2MzYjk5NjQ0NzI5ODQ1NmFlY2M0YQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2001-12-14T21:20:03Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-12-14T21:20:03Z"}, "message": "combine.c (record_dead_and_set_regs): Use regs_invalidated_by_call.\n\n\t* combine.c (record_dead_and_set_regs): Use\n\tregs_invalidated_by_call.  Don't note stores for CALL_INSNs.\n\nFrom-SVN: r48009", "tree": {"sha": "2a8c3444c4ea3a88f88f1624a2cfa2f892575f44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a8c3444c4ea3a88f88f1624a2cfa2f892575f44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29655d3d5ca71f80c77c3b996447298456aecc4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29655d3d5ca71f80c77c3b996447298456aecc4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29655d3d5ca71f80c77c3b996447298456aecc4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29655d3d5ca71f80c77c3b996447298456aecc4a/comments", "author": null, "committer": null, "parents": [{"sha": "dc6f415864bad4172aa2b396007cbb4ed2acf949", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc6f415864bad4172aa2b396007cbb4ed2acf949", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc6f415864bad4172aa2b396007cbb4ed2acf949"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "e013d73051c58aec4d0a1738ef893b7e0c583b70", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29655d3d5ca71f80c77c3b996447298456aecc4a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29655d3d5ca71f80c77c3b996447298456aecc4a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=29655d3d5ca71f80c77c3b996447298456aecc4a", "patch": "@@ -1,3 +1,8 @@\n+2001-12-14  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* combine.c (record_dead_and_set_regs): Use\n+\tregs_invalidated_by_call.  Don't note stores for CALL_INSNs.\n+\n 2001-12-14  Roger Sayle <roger@eyesopen.com>\n \n \t* builtins.def: Rename BUILT_IN_FSQRT to BUILT_IN_SQRT and"}, {"sha": "82e86b2816e051a7071c71ca8c62ddaa9da51f59", "filename": "gcc/combine.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29655d3d5ca71f80c77c3b996447298456aecc4a/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29655d3d5ca71f80c77c3b996447298456aecc4a/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=29655d3d5ca71f80c77c3b996447298456aecc4a", "patch": "@@ -11202,7 +11202,7 @@ record_dead_and_set_regs (insn)\n   if (GET_CODE (insn) == CALL_INSN)\n     {\n       for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n-\tif (call_used_regs[i])\n+\tif (TEST_HARD_REG_BIT (regs_invalidated_by_call, i))\n \t  {\n \t    reg_last_set_value[i] = 0;\n \t    reg_last_set_mode[i] = 0;\n@@ -11212,6 +11212,13 @@ record_dead_and_set_regs (insn)\n \t  }\n \n       last_call_cuid = mem_last_set = INSN_CUID (insn);\n+\n+      /* Don't bother recording what this insn does.  It might set the\n+\t return value register, but we can't combine into a call\n+\t pattern anyway, so there's no point trying (and it may cause\n+\t a crash, if e.g. we wind up asking for last_set_value of a\n+\t SUBREG of the return value register).  */\n+      return;\n     }\n \n   note_stores (PATTERN (insn), record_dead_and_set_regs_1, insn);"}]}