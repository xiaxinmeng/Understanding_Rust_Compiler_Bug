{"sha": "59f084e03422e81adad7caa1eb9b60f603693b7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTlmMDg0ZTAzNDIyZTgxYWRhZDdjYWExZWI5YjYwZjYwMzY5M2I3ZA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2014-10-24T11:57:58Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2014-10-24T11:57:58Z"}, "message": "re PR tree-optimization/63595 (Segmentation faults inside kernel)\n\nFix for PR63595\n\n\t* gcc.dg/ipa/pr63595.c: New test.\n\t* ipa-icf.c (sem_function::compare_phi_node): PHI result comparison\n\nFrom-SVN: r216662", "tree": {"sha": "c120642c40db86983e91fd0ba6ed4156d4327bd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c120642c40db86983e91fd0ba6ed4156d4327bd2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59f084e03422e81adad7caa1eb9b60f603693b7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59f084e03422e81adad7caa1eb9b60f603693b7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59f084e03422e81adad7caa1eb9b60f603693b7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59f084e03422e81adad7caa1eb9b60f603693b7d/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "237d8521e918cd3e270b9efbd36bafc68140c731", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/237d8521e918cd3e270b9efbd36bafc68140c731", "html_url": "https://github.com/Rust-GCC/gccrs/commit/237d8521e918cd3e270b9efbd36bafc68140c731"}], "stats": {"total": 80, "additions": 80, "deletions": 0}, "files": [{"sha": "3d46f4cbdcf9c6d1d1fc907acddd66ed220bac34", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f084e03422e81adad7caa1eb9b60f603693b7d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f084e03422e81adad7caa1eb9b60f603693b7d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=59f084e03422e81adad7caa1eb9b60f603693b7d", "patch": "@@ -1,3 +1,8 @@\n+2014-10-24  Martin Liska  <mliska@suse.cz>\n+\n+\t* ipa-icf.c (sem_function::compare_phi_node): PHI result comparison\n+\tadded.\n+\n 2014-10-24  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64-elf-raw.h (CA53_ERR_835769_SPEC): Define."}, {"sha": "e99b3e6bb4d3d720351bb490c9fb19bdee133f8e", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f084e03422e81adad7caa1eb9b60f603693b7d/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f084e03422e81adad7caa1eb9b60f603693b7d/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=59f084e03422e81adad7caa1eb9b60f603693b7d", "patch": "@@ -869,6 +869,12 @@ sem_function::compare_phi_node (basic_block bb1, basic_block bb2)\n       phi1 = gsi_stmt (si1);\n       phi2 = gsi_stmt (si2);\n \n+      tree phi_result1 = gimple_phi_result (phi1);\n+      tree phi_result2 = gimple_phi_result (phi2);\n+\n+      if (!m_checker->compare_operand (phi_result1, phi_result2))\n+\treturn return_false_with_msg (\"PHI results are different\");\n+\n       size1 = gimple_phi_num_args (phi1);\n       size2 = gimple_phi_num_args (phi2);\n "}, {"sha": "7ac146110f45a05684dd4adc6931dd57afa6f1cd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f084e03422e81adad7caa1eb9b60f603693b7d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f084e03422e81adad7caa1eb9b60f603693b7d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=59f084e03422e81adad7caa1eb9b60f603693b7d", "patch": "@@ -1,3 +1,7 @@\n+2014-10-24  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.dg/ipa/pr63595.c: New test.\n+\n 2014-10-24  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vuzp.c: New file."}, {"sha": "52851fb18d9508e6dfd5bd3783d1524ca3128ba7", "filename": "gcc/testsuite/gcc.dg/ipa/pr63595.c", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f084e03422e81adad7caa1eb9b60f603693b7d/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr63595.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f084e03422e81adad7caa1eb9b60f603693b7d/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr63595.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr63595.c?ref=59f084e03422e81adad7caa1eb9b60f603693b7d", "patch": "@@ -0,0 +1,65 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-ipa-icf-details\"  } */\n+\n+typedef int size_t;\n+\n+typedef struct TypHeader {\n+    unsigned long size;\n+    struct TypHeader * * ptr;\n+    char name[3];\n+    unsigned char type;\n+} * TypHandle;\n+\n+__attribute__((noinline))\n+static TypHandle Error(const char *str, unsigned long l1, unsigned long l2)\n+{\n+  return 0;\n+}\n+\n+extern TypHandle (* EvTab[81]) ( TypHandle hd );\n+extern TypHandle (*TabProd[28][28]) ( TypHandle, TypHandle );\n+\n+__attribute__((noinline))\n+TypHandle FunOnRight (TypHandle hdCall)\n+{\n+    TypHandle hdRes;\n+    TypHandle hdPnt;\n+    TypHandle hdElm;\n+\n+\n+    if ( ((hdCall)->size) != 3*((size_t)sizeof(TypHandle)) )\n+        return Error(\"\",0L,0L);\n+    hdPnt = ((long)(((TypHandle*)((hdCall)->ptr))[1])&1 ? (((TypHandle*)((hdCall)->ptr))[1]) : (* EvTab[(((long)(((TypHandle*)((hdCall)->ptr))[1]) & 1) ? 1 : ((((TypHandle*)((hdCall)->ptr))[1])->type))])((((TypHandle*)((hdCall)->ptr))[1])));\n+    hdElm = ((long)(((TypHandle*)((hdCall)->ptr))[2])&1 ? (((TypHandle*)((hdCall)->ptr))[2]) : (* EvTab[(((long)(((TypHandle*)((hdCall)->ptr))[2]) & 1) ? 1 : ((((TypHandle*)((hdCall)->ptr))[2])->type))])((((TypHandle*)((hdCall)->ptr))[2])));\n+\n+\n+    hdRes = ((*TabProd[(((long)(hdPnt) & 1) ? 1 : ((hdPnt)->type))][(((long)(hdElm) & 1) ? 1 : ((hdElm)->type))])((hdPnt),(hdElm)));\n+    return hdRes;\n+}\n+\n+__attribute__((noinline))\n+TypHandle FunOnLeft (TypHandle hdCall)\n+{\n+    TypHandle hdRes;\n+    TypHandle hdPnt;\n+    TypHandle hdElm;\n+\n+\n+    if ( ((hdCall)->size) != 3*((size_t)sizeof(TypHandle)) )\n+        return Error(\"\",0L,0L);\n+    hdPnt = ((long)(((TypHandle*)((hdCall)->ptr))[1])&1 ? (((TypHandle*)((hdCall)->ptr))[1]) : (* EvTab[(((long)(((TypHandle*)((hdCall)->ptr))[1]) & 1) ? 1 : ((((TypHandle*)((hdCall)->ptr))[1])->type))])((((TypHandle*)((hdCall)->ptr))[1])));\n+    hdElm = ((long)(((TypHandle*)((hdCall)->ptr))[2])&1 ? (((TypHandle*)((hdCall)->ptr))[2]) : (* EvTab[(((long)(((TypHandle*)((hdCall)->ptr))[2]) & 1) ? 1 : ((((TypHandle*)((hdCall)->ptr))[2])->type))])((((TypHandle*)((hdCall)->ptr))[2])));\n+\n+\n+    hdRes = ((*TabProd[(((long)(hdElm) & 1) ? 1 : ((hdElm)->type))][(((long)(hdPnt) & 1) ? 1 : ((hdPnt)->type))])((hdElm),(hdPnt)));\n+    return hdRes;\n+}\n+\n+int main()\n+{\n+  return 0;\n+}\n+\n+/* { dg-final { scan-ipa-dump \"Equal symbols: 0\" \"icf\"  } } */\n+/* { dg-final { scan-ipa-dump \"PHI results are different\" \"icf\"  } } */\n+/* { dg-final { cleanup-ipa-dump \"icf\" } } */"}]}