{"sha": "fc0addd1ffae33478cfc838f93e6685c0cbfa08c", "node_id": "C_kwDOANBUbNoAKGZjMGFkZGQxZmZhZTMzNDc4Y2ZjODM4ZjkzZTY2ODVjMGNiZmEwOGM", "commit": {"author": {"name": "Mahmoud Mohamed", "email": "mahadelr19@gmail.com", "date": "2023-03-14T22:06:46Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2023-03-15T11:04:50Z"}, "message": "hir: Improve pattern bindings handling in closure parameters\n\ngcc/rust/ChangeLog:\n\n\t* backend/rust-compile-expr.cc (CompileExpr::generate_closure_function):\n\thandle closure parameters pattern bindings using CompilePatternBindings visitor\n\ngcc/testsuite/ChangeLog:\n\n\t* rust/execute/torture/closure4.rs: New test.\n\t* rust/execute/torture/ref-pattern2.rs: New test.\n\nSigned-off-by: Mahmoud Mohamed <mahadelr19@gmail.com>", "tree": {"sha": "8f32808c41bbfefe9f090fd202469d1727298591", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f32808c41bbfefe9f090fd202469d1727298591"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc0addd1ffae33478cfc838f93e6685c0cbfa08c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc0addd1ffae33478cfc838f93e6685c0cbfa08c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc0addd1ffae33478cfc838f93e6685c0cbfa08c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc0addd1ffae33478cfc838f93e6685c0cbfa08c/comments", "author": {"login": "goar5670", "id": 40712841, "node_id": "MDQ6VXNlcjQwNzEyODQx", "avatar_url": "https://avatars.githubusercontent.com/u/40712841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goar5670", "html_url": "https://github.com/goar5670", "followers_url": "https://api.github.com/users/goar5670/followers", "following_url": "https://api.github.com/users/goar5670/following{/other_user}", "gists_url": "https://api.github.com/users/goar5670/gists{/gist_id}", "starred_url": "https://api.github.com/users/goar5670/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goar5670/subscriptions", "organizations_url": "https://api.github.com/users/goar5670/orgs", "repos_url": "https://api.github.com/users/goar5670/repos", "events_url": "https://api.github.com/users/goar5670/events{/privacy}", "received_events_url": "https://api.github.com/users/goar5670/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cd4f74e3d485202a1433d487adbce43d271ebe5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cd4f74e3d485202a1433d487adbce43d271ebe5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cd4f74e3d485202a1433d487adbce43d271ebe5"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "b2a8fab44f5f832a57696519887f958cf556bad2", "filename": "gcc/rust/backend/rust-compile-expr.cc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc0addd1ffae33478cfc838f93e6685c0cbfa08c/gcc%2Frust%2Fbackend%2Frust-compile-expr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc0addd1ffae33478cfc838f93e6685c0cbfa08c/gcc%2Frust%2Fbackend%2Frust-compile-expr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-expr.cc?ref=fc0addd1ffae33478cfc838f93e6685c0cbfa08c", "patch": "@@ -2918,9 +2918,8 @@ CompileExpr::generate_closure_function (HIR::ClosureExpr &expr,\n       tree compiled_param_var = ctx->get_backend ()->struct_field_expression (\n \targs_param_expr, i, closure_param.get_locus ());\n \n-      const HIR::Pattern &param_pattern = *closure_param.get_pattern ();\n-      ctx->insert_pattern_binding (\n-\tparam_pattern.get_pattern_mappings ().get_hirid (), compiled_param_var);\n+      CompilePatternBindings::Compile (closure_param.get_pattern ().get (),\n+\t\t\t\t       compiled_param_var, ctx);\n       i++;\n     }\n "}, {"sha": "07dca44308d08740d52f8e73ff5923ac88a88880", "filename": "gcc/testsuite/rust/execute/torture/closure4.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc0addd1ffae33478cfc838f93e6685c0cbfa08c/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fclosure4.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc0addd1ffae33478cfc838f93e6685c0cbfa08c/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fclosure4.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fclosure4.rs?ref=fc0addd1ffae33478cfc838f93e6685c0cbfa08c", "patch": "@@ -0,0 +1,22 @@\n+#[lang = \"fn_once\"]\n+pub trait FnOnce<Args> {\n+    #[lang = \"fn_once_output\"]\n+    type Output;\n+\n+    extern \"rust-call\" fn call_once(self, args: Args) -> Self::Output;\n+}\n+\n+struct Foo(i32, i32);\n+\n+fn main() -> i32 {\n+  let foo = |&x: &i32, y: i32| -> i32 {\n+    x + y\n+  };\n+  \n+  let bar = |Foo(x, y): Foo| -> i32 {\n+    x + y\n+  };\n+\n+  let a = 4;\n+  foo(&a, 2) + bar(Foo(100, 200)) - 306\n+}"}, {"sha": "4c9e755ba84b5c077aea28cad07cf1ef9df688d1", "filename": "gcc/testsuite/rust/execute/torture/ref-pattern2.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc0addd1ffae33478cfc838f93e6685c0cbfa08c/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fref-pattern2.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc0addd1ffae33478cfc838f93e6685c0cbfa08c/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fref-pattern2.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fexecute%2Ftorture%2Fref-pattern2.rs?ref=fc0addd1ffae33478cfc838f93e6685c0cbfa08c", "patch": "@@ -0,0 +1,14 @@\n+#[lang = \"fn_once\"]\n+pub trait FnOnce<Args> {\n+    #[lang = \"fn_once_output\"]\n+    type Output;\n+\n+    extern \"rust-call\" fn call_once(self, args: Args) -> Self::Output;\n+}\n+\n+fn main() -> i32 {\n+  let foo = |&&d: &&i32| -> i32 { d };\n+\n+  let x = &&5i32;\n+  foo(x) - 5\n+}"}]}