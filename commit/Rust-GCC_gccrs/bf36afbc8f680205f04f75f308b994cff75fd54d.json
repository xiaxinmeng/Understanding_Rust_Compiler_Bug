{"sha": "bf36afbc8f680205f04f75f308b994cff75fd54d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmYzNmFmYmM4ZjY4MDIwNWYwNGY3NWYzMDhiOTk0Y2ZmNzVmZDU0ZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2019-02-14T21:54:36Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2019-02-14T21:54:36Z"}, "message": "ssse3-pabsb.c: Re-enable 64-bit form on AVX targets.\n\n\t* gcc.target/i386/ssse3-pabsb.c: Re-enable 64-bit form on AVX targets.\n\t* gcc.target/i386/ssse3-pabsd.c: Ditto.\n\t* gcc.target/i386/ssse3-pabsw.c: Ditto.\n\t* gcc.target/i386/ssse3-palignr.c: Ditto.\n\t* gcc.target/i386/ssse3-phaddd.c: Ditto.\n\t* gcc.target/i386/ssse3-phaddsw.c: Ditto.\n\t* gcc.target/i386/ssse3-phaddw.c: Ditto.\n\t* gcc.target/i386/ssse3-phsubd.c: Ditto.\n\t* gcc.target/i386/ssse3-phsubsw.c: Ditto.\n\t* gcc.target/i386/ssse3-phsubw.c: Ditto.\n\t* gcc.target/i386/ssse3-pmaddubsw.c: Ditto.\n\t* gcc.target/i386/ssse3-pmulhrsw.c: Ditto.\n\t* gcc.target/i386/ssse3-pshufb.c: Ditto.\n\t* gcc.target/i386/ssse3-psignb.c: Ditto.\n\t* gcc.target/i386/ssse3-psignd.c: Ditto.\n\t* gcc.target/i386/ssse3-psignw.c: Ditto.\n\nFrom-SVN: r268907", "tree": {"sha": "107cf6262c51f15285362091f3a773b08e18690c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/107cf6262c51f15285362091f3a773b08e18690c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf36afbc8f680205f04f75f308b994cff75fd54d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf36afbc8f680205f04f75f308b994cff75fd54d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf36afbc8f680205f04f75f308b994cff75fd54d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf36afbc8f680205f04f75f308b994cff75fd54d/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "66086032120c6cfca41e48a510c2389b887d559b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66086032120c6cfca41e48a510c2389b887d559b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66086032120c6cfca41e48a510c2389b887d559b"}], "stats": {"total": 87, "additions": 19, "deletions": 68}, "files": [{"sha": "ae430692a128ca4dc742ac599d991697311dbacb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bf36afbc8f680205f04f75f308b994cff75fd54d", "patch": "@@ -1,3 +1,22 @@\n+2019-02-14  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/ssse3-pabsb.c: Re-enable 64-bit form on AVX targets.\n+\t* gcc.target/i386/ssse3-pabsd.c: Ditto.\n+\t* gcc.target/i386/ssse3-pabsw.c: Ditto.\n+\t* gcc.target/i386/ssse3-palignr.c: Ditto.\n+\t* gcc.target/i386/ssse3-phaddd.c: Ditto.\n+\t* gcc.target/i386/ssse3-phaddsw.c: Ditto.\n+\t* gcc.target/i386/ssse3-phaddw.c: Ditto.\n+\t* gcc.target/i386/ssse3-phsubd.c: Ditto.\n+\t* gcc.target/i386/ssse3-phsubsw.c: Ditto.\n+\t* gcc.target/i386/ssse3-phsubw.c: Ditto.\n+\t* gcc.target/i386/ssse3-pmaddubsw.c: Ditto.\n+\t* gcc.target/i386/ssse3-pmulhrsw.c: Ditto.\n+\t* gcc.target/i386/ssse3-pshufb.c: Ditto.\n+\t* gcc.target/i386/ssse3-psignb.c: Ditto.\n+\t* gcc.target/i386/ssse3-psignd.c: Ditto.\n+\t* gcc.target/i386/ssse3-psignw.c: Ditto.\n+\n 2018-02-14  Steve Ellcey  <sellcey@marvell.com>\n \n \t* gcc.target/aarch64/pcs_attribute.c: New test."}, {"sha": "a794224f7f2fde30851650950eadc15e5427616d", "filename": "gcc/testsuite/gcc.target/i386/ssse3-pabsb.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-pabsb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-pabsb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-pabsb.c?ref=bf36afbc8f680205f04f75f308b994cff75fd54d", "patch": "@@ -15,7 +15,6 @@\n #include \"ssse3-vals.h\"\n #include <tmmintrin.h>\n \n-#ifndef __AVX__\n /* Test the 64-bit form */\n static void\n ssse3_test_pabsb (int *i1, int *r)\n@@ -24,7 +23,6 @@ ssse3_test_pabsb (int *i1, int *r)\n   *(__m64 *) r = _mm_abs_pi8 (t1);\n   _mm_empty ();\n }\n-#endif\n \n /* Test the 128-bit form */\n static void\n@@ -63,12 +61,10 @@ TEST (void)\n       /* Manually compute the result */\n       compute_correct_result(&vals[i + 0], ck);\n \n-#ifndef __AVX__\n       /* Run the 64-bit tests */\n       ssse3_test_pabsb (&vals[i + 0], &r[0]);\n       ssse3_test_pabsb (&vals[i + 2], &r[2]);\n       fail += chk_128 (ck, r);\n-#endif\n \n       /* Run the 128-bit tests */\n       ssse3_test_pabsb128 (&vals[i + 0], r);"}, {"sha": "a0db229c76091f1986e6984e1ea162e26ab45ec1", "filename": "gcc/testsuite/gcc.target/i386/ssse3-pabsd.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-pabsd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-pabsd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-pabsd.c?ref=bf36afbc8f680205f04f75f308b994cff75fd54d", "patch": "@@ -16,7 +16,6 @@\n \n #include <tmmintrin.h>\n \n-#ifndef __AVX__\n /* Test the 64-bit form */\n static void\n ssse3_test_pabsd (int *i1, int *r)\n@@ -25,7 +24,6 @@ ssse3_test_pabsd (int *i1, int *r)\n   *(__m64 *) r = _mm_abs_pi32 (t1);\n   _mm_empty ();\n }\n-#endif\n \n /* Test the 128-bit form */\n static void\n@@ -62,12 +60,10 @@ TEST (void)\n       /* Manually compute the result */\n       compute_correct_result(&vals[i + 0], ck);\n \n-#ifndef __AVX__\n       /* Run the 64-bit tests */\n       ssse3_test_pabsd (&vals[i + 0], &r[0]);\n       ssse3_test_pabsd (&vals[i + 2], &r[2]);\n       fail += chk_128 (ck, r);\n-#endif\n \n       /* Run the 128-bit tests */\n       ssse3_test_pabsd128 (&vals[i + 0], r);"}, {"sha": "66f1e5f8f25a274b93466eac14c290ad68007437", "filename": "gcc/testsuite/gcc.target/i386/ssse3-pabsw.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-pabsw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-pabsw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-pabsw.c?ref=bf36afbc8f680205f04f75f308b994cff75fd54d", "patch": "@@ -16,7 +16,6 @@\n \n #include <tmmintrin.h>\n \n-#ifndef __AVX__\n /* Test the 64-bit form */\n static void\n ssse3_test_pabsw (int *i1, int *r)\n@@ -25,7 +24,6 @@ ssse3_test_pabsw (int *i1, int *r)\n   *(__m64 *) r = _mm_abs_pi16 (t1);\n   _mm_empty ();\n }\n-#endif\n \n /* Test the 128-bit form */\n static void\n@@ -64,12 +62,10 @@ TEST (void)\n       /* Manually compute the result */\n       compute_correct_result (&vals[i + 0], ck);\n \n-#ifndef __AVX__\n       /* Run the 64-bit tests */\n       ssse3_test_pabsw (&vals[i + 0], &r[0]);\n       ssse3_test_pabsw (&vals[i + 2], &r[2]);\n       fail += chk_128 (ck, r);\n-#endif\n \n       /* Run the 128-bit tests */\n       ssse3_test_pabsw128 (&vals[i + 0], r);"}, {"sha": "6079f50aeb346b1757768e3d8bb7681a3baa5bff", "filename": "gcc/testsuite/gcc.target/i386/ssse3-palignr.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-palignr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-palignr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-palignr.c?ref=bf36afbc8f680205f04f75f308b994cff75fd54d", "patch": "@@ -17,7 +17,6 @@\n #include <tmmintrin.h>\n #include <string.h>\n \n-#ifndef __AVX__\n /* Test the 64-bit form */\n static void\n ssse3_test_palignr (int *i1, int *i2, unsigned int imm, int *r)\n@@ -82,7 +81,6 @@ ssse3_test_palignr (int *i1, int *i2, unsigned int imm, int *r)\n \n    _mm_empty();\n }\n-#endif\n \n /* Test the 128-bit form */\n static void\n@@ -214,7 +212,6 @@ compute_correct_result_128 (int *i1, int *i2, unsigned int imm, int *r)\n       bout[i] = buf[imm + i];\n }\n \n-#ifndef __AVX__\n static void\n compute_correct_result_64 (int *i1, int *i2, unsigned int imm, int *r)\n {\n@@ -242,7 +239,6 @@ compute_correct_result_64 (int *i1, int *i2, unsigned int imm, int *r)\n     else\n       bout[i + 8] = buf[imm + i];\n }\n-#endif\n \n static void\n TEST (void)\n@@ -256,15 +252,13 @@ TEST (void)\n   for (i = 0; i < 256; i += 8)\n     for (imm = 0; imm < 100; imm++)\n       {\n-#ifndef __AVX__\n \t/* Manually compute the result */\n \tcompute_correct_result_64 (&vals[i + 0], &vals[i + 4], imm, ck);\n \n \t/* Run the 64-bit tests */\n \tssse3_test_palignr (&vals[i + 0], &vals[i + 4], imm, &r[0]);\n \tssse3_test_palignr (&vals[i + 2], &vals[i + 6], imm, &r[2]);\n \tfail += chk_128 (ck, r);\n-#endif\n \n \t/* Recompute the results for 128-bits */\n \tcompute_correct_result_128 (&vals[i + 0], &vals[i + 4], imm, ck);"}, {"sha": "143a8854857b260222da4aad8c18187952e0903e", "filename": "gcc/testsuite/gcc.target/i386/ssse3-phaddd.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-phaddd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-phaddd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-phaddd.c?ref=bf36afbc8f680205f04f75f308b994cff75fd54d", "patch": "@@ -16,7 +16,6 @@\n \n #include <tmmintrin.h>\n \n-#ifndef __AVX__\n /* Test the 64-bit form */\n static void\n ssse3_test_phaddd (int *i1, int *i2, int *r)\n@@ -26,7 +25,6 @@ ssse3_test_phaddd (int *i1, int *i2, int *r)\n   *(__m64 *) r = _mm_hadd_pi32 (t1, t2);\n   _mm_empty();\n }\n-#endif\n \n /* Test the 128-bit form */\n static void\n@@ -64,12 +62,10 @@ TEST (void)\n       /* Manually compute the result */\n       compute_correct_result (&vals[i + 0], &vals[i + 4], ck);\n \n-#ifndef __AVX__\n       /* Run the 64-bit tests */\n       ssse3_test_phaddd (&vals[i + 0], &vals[i + 2], &r[0]);\n       ssse3_test_phaddd (&vals[i + 4], &vals[i + 6], &r[2]);\n       fail += chk_128 (ck, r);\n-#endif\n \n       /* Run the 128-bit tests */\n       ssse3_test_phaddd128 (&vals[i + 0], &vals[i + 4], r);"}, {"sha": "a4fb8afe2e6aa2330590351b17a21f5a94cbf1bd", "filename": "gcc/testsuite/gcc.target/i386/ssse3-phaddsw.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-phaddsw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-phaddsw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-phaddsw.c?ref=bf36afbc8f680205f04f75f308b994cff75fd54d", "patch": "@@ -16,7 +16,6 @@\n \n #include <tmmintrin.h>\n \n-#ifndef __AVX__\n /* Test the 64-bit form */\n static void\n ssse3_test_phaddsw (int *i1, int *i2, int *r)\n@@ -26,7 +25,6 @@ ssse3_test_phaddsw (int *i1, int *i2, int *r)\n   *(__m64 *) r = _mm_hadds_pi16 (t1, t2);\n   _mm_empty ();\n }\n-#endif\n \n /* Test the 128-bit form */\n static void\n@@ -78,12 +76,10 @@ TEST (void)\n       /* Manually compute the result */\n       compute_correct_result (&vals[i + 0], &vals[i + 4], ck);\n \n-#ifndef __AVX__\n       /* Run the 64-bit tests */\n       ssse3_test_phaddsw (&vals[i + 0], &vals[i + 2], &r[0]);\n       ssse3_test_phaddsw (&vals[i + 4], &vals[i + 6], &r[2]);\n       fail += chk_128 (ck, r);\n-#endif\n \n       /* Run the 128-bit tests */\n       ssse3_test_phaddsw128 (&vals[i + 0], &vals[i + 4], r);"}, {"sha": "934aa5a274ce714e295b40695381a73cbf4bc6f4", "filename": "gcc/testsuite/gcc.target/i386/ssse3-phaddw.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-phaddw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-phaddw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-phaddw.c?ref=bf36afbc8f680205f04f75f308b994cff75fd54d", "patch": "@@ -16,7 +16,6 @@\n \n #include <tmmintrin.h>\n \n-#ifndef __AVX__\n /* Test the 64-bit form */\n static void\n ssse3_test_phaddw (int *i1, int *i2, int *r)\n@@ -26,7 +25,6 @@ ssse3_test_phaddw (int *i1, int *i2, int *r)\n   *(__m64 *) r = _mm_hadd_pi16 (t1, t2);\n   _mm_empty ();\n }\n-#endif\n \n /* Test the 128-bit form */\n static void\n@@ -67,12 +65,10 @@ TEST (void)\n       /* Manually compute the result */\n       compute_correct_result (&vals[i + 0], &vals[i + 4], ck);\n \n-#ifndef __AVX__\n       /* Run the 64-bit tests */\n       ssse3_test_phaddw (&vals[i + 0], &vals[i + 2], &r[0]);\n       ssse3_test_phaddw (&vals[i + 4], &vals[i + 6], &r[2]);\n       fail += chk_128 (ck, r);\n-#endif\n \n       /* Run the 128-bit tests */\n       ssse3_test_phaddw128 (&vals[i + 0], &vals[i + 4], r);"}, {"sha": "f0a5b411e26ff520c2a410b191330d3b5e0a22f3", "filename": "gcc/testsuite/gcc.target/i386/ssse3-phsubd.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-phsubd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-phsubd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-phsubd.c?ref=bf36afbc8f680205f04f75f308b994cff75fd54d", "patch": "@@ -16,7 +16,6 @@\n \n #include <tmmintrin.h>\n \n-#ifndef __AVX__\n /* Test the 64-bit form */\n static void\n ssse3_test_phsubd (int *i1, int *i2, int *r)\n@@ -26,7 +25,6 @@ ssse3_test_phsubd (int *i1, int *i2, int *r)\n   *(__m64 *) r = _mm_hsub_pi32(t1, t2);\n   _mm_empty ();\n }\n-#endif\n \n /* Test the 128-bit form */\n static void\n@@ -63,12 +61,10 @@ TEST (void)\n       /* Manually compute the result */\n       compute_correct_result (&vals[i + 0], &vals[i + 4], ck);\n \n-#ifndef __AVX__\n       /* Run the 64-bit tests */\n       ssse3_test_phsubd (&vals[i + 0], &vals[i + 2], &r[0]);\n       ssse3_test_phsubd (&vals[i + 4], &vals[i + 6], &r[2]);\n       fail += chk_128 (ck, r);\n-#endif\n \n       /* Run the 128-bit tests */\n       ssse3_test_phsubd128 (&vals[i + 0], &vals[i + 4], r);"}, {"sha": "ce93e641d3904bbac19007d3c73850e3b81b5d79", "filename": "gcc/testsuite/gcc.target/i386/ssse3-phsubsw.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-phsubsw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-phsubsw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-phsubsw.c?ref=bf36afbc8f680205f04f75f308b994cff75fd54d", "patch": "@@ -16,7 +16,6 @@\n \n #include <tmmintrin.h>\n \n-#ifndef __AVX__\n /* Test the 64-bit form */\n static void\n ssse3_test_phsubsw (int *i1, int *i2, int *r)\n@@ -28,7 +27,6 @@ ssse3_test_phsubsw (int *i1, int *i2, int *r)\n \n   _mm_empty ();\n }\n-#endif\n \n /* Test the 128-bit form */\n static void\n@@ -81,12 +79,10 @@ TEST (void)\n       /* Manually compute the result */\n       compute_correct_result (&vals[i + 0], &vals[i + 4], ck);\n \n-#ifndef __AVX__\n       /* Run the 64-bit tests */\n       ssse3_test_phsubsw (&vals[i + 0], &vals[i + 2], &r[0]);\n       ssse3_test_phsubsw (&vals[i + 4], &vals[i + 6], &r[2]);\n       fail += chk_128 (ck, r);\n-#endif\n \n       /* Run the 128-bit tests */\n       ssse3_test_phsubsw128 (&vals[i + 0], &vals[i + 4], r);"}, {"sha": "9353e47f4c7bc1b28fcb91a1f8547de5dc5ccb78", "filename": "gcc/testsuite/gcc.target/i386/ssse3-phsubw.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-phsubw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-phsubw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-phsubw.c?ref=bf36afbc8f680205f04f75f308b994cff75fd54d", "patch": "@@ -15,7 +15,6 @@\n \n #include <tmmintrin.h>\n \n-#ifndef __AVX__\n /* Test the 64-bit form */\n static void\n ssse3_test_phsubw (int *i1, int *i2, int *r)\n@@ -25,7 +24,6 @@ ssse3_test_phsubw (int *i1, int *i2, int *r)\n   *(__m64 *) r = _mm_hsub_pi16 (t1, t2);\n   _mm_empty ();\n }\n-#endif\n \n /* Test the 128-bit form */\n static void\n@@ -66,12 +64,10 @@ TEST (void)\n       /* Manually compute the result */\n       compute_correct_result (&vals[i + 0], &vals[i + 4], ck);\n \n-#ifndef __AVX__\n       /* Run the 64-bit tests */\n       ssse3_test_phsubw (&vals[i + 0], &vals[i + 2], &r[0]);\n       ssse3_test_phsubw (&vals[i + 4], &vals[i + 6], &r[2]);\n       fail += chk_128 (ck, r);\n-#endif\n \n       /* Run the 128-bit tests */\n       ssse3_test_phsubw128 (&vals[i + 0], &vals[i + 4], r);"}, {"sha": "7f3ca51d88bc32bc8b3be7ba02a8053548d3da5c", "filename": "gcc/testsuite/gcc.target/i386/ssse3-pmaddubsw.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-pmaddubsw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-pmaddubsw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-pmaddubsw.c?ref=bf36afbc8f680205f04f75f308b994cff75fd54d", "patch": "@@ -16,7 +16,6 @@\n \n #include <tmmintrin.h>\n \n-#ifndef __AVX__\n /* Test the 64-bit form */\n static void\n ssse3_test_pmaddubsw (int *i1, int *i2, int *r)\n@@ -26,7 +25,6 @@ ssse3_test_pmaddubsw (int *i1, int *i2, int *r)\n   *(__m64 *) r = _mm_maddubs_pi16 (t1, t2);\n   _mm_empty ();\n }\n-#endif\n \n /* Test the 128-bit form */\n static void\n@@ -81,12 +79,10 @@ TEST (void)\n       /* Manually compute the result */\n       compute_correct_result (&vals[i + 0], &vals[i + 4], ck);\n \n-#ifndef __AVX__\n       /* Run the 64-bit tests */\n       ssse3_test_pmaddubsw (&vals[i + 0], &vals[i + 4], &r[0]);\n       ssse3_test_pmaddubsw (&vals[i + 2], &vals[i + 6], &r[2]);\n       fail += chk_128 (ck, r);\n-#endif\n \n       /* Run the 128-bit tests */\n       ssse3_test_pmaddubsw128 (&vals[i + 0], &vals[i + 4], r);"}, {"sha": "ce375d0a800cb80c876ac2d2b5d7b2433946921c", "filename": "gcc/testsuite/gcc.target/i386/ssse3-pmulhrsw.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-pmulhrsw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-pmulhrsw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-pmulhrsw.c?ref=bf36afbc8f680205f04f75f308b994cff75fd54d", "patch": "@@ -16,7 +16,6 @@\n \n #include <tmmintrin.h>\n \n-#ifndef __AVX__\n /* Test the 64-bit form */\n static void\n ssse3_test_pmulhrsw (int *i1, int *i2, int *r)\n@@ -26,7 +25,6 @@ ssse3_test_pmulhrsw (int *i1, int *i2, int *r)\n   *(__m64 *) r = _mm_mulhrs_pi16 (t1, t2);\n   _mm_empty ();\n }\n-#endif\n \n /* Test the 128-bit form */\n static void\n@@ -68,12 +66,10 @@ TEST (void)\n       /* Manually compute the result */\n       compute_correct_result (&vals[i + 0], &vals[i + 4], ck);\n \n-#ifndef __AVX__\n       /* Run the 64-bit tests */\n       ssse3_test_pmulhrsw (&vals[i + 0], &vals[i + 4], &r[0]);\n       ssse3_test_pmulhrsw (&vals[i + 2], &vals[i + 6], &r[2]);\n       fail += chk_128 (ck, r);\n-#endif\n \n       /* Run the 128-bit tests */\n       ssse3_test_pmulhrsw128 (&vals[i + 0], &vals[i + 4], r);"}, {"sha": "83deb5818191762b0c2de5bd8e8d63372c42ecb0", "filename": "gcc/testsuite/gcc.target/i386/ssse3-pshufb.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-pshufb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-pshufb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-pshufb.c?ref=bf36afbc8f680205f04f75f308b994cff75fd54d", "patch": "@@ -16,7 +16,6 @@\n \n #include <tmmintrin.h>\n \n-#ifndef __AVX__\n /* Test the 64-bit form */\n static void\n ssse3_test_pshufb (int *i1, int *i2, int *r)\n@@ -26,7 +25,6 @@ ssse3_test_pshufb (int *i1, int *i2, int *r)\n   *(__m64 *)r = _mm_shuffle_pi8 (t1, t2);\n   _mm_empty ();\n }\n-#endif\n \n /* Test the 128-bit form */\n static void\n@@ -38,7 +36,6 @@ ssse3_test_pshufb128 (int *i1, int *i2, int *r)\n   *(__m128i *)r = _mm_shuffle_epi8 (t1, t2);\n }\n \n-#ifndef __AVX__\n /* Routine to manually compute the results */\n static void\n compute_correct_result_64 (int *i1, int *i2, int *r)\n@@ -60,7 +57,6 @@ compute_correct_result_64 (int *i1, int *i2, int *r)\n \tbout[i] = b1[8 + (select & 0x7)];\n     }\n }\n-#endif\n \n static void\n compute_correct_result_128 (int *i1, int *i2, int *r)\n@@ -91,15 +87,13 @@ TEST (void)\n \n   for (i = 0; i < 256; i += 8)\n     {\n-#ifndef __AVX__\n       /* Manually compute the result */\n       compute_correct_result_64 (&vals[i + 0], &vals[i + 4], ck);\n \n       /* Run the 64-bit tests */\n       ssse3_test_pshufb (&vals[i + 0], &vals[i + 4], &r[0]);\n       ssse3_test_pshufb (&vals[i + 2], &vals[i + 6], &r[2]);\n       fail += chk_128 (ck, r);\n-#endif\n \n       /* Recompute the result for 128-bits */\n       compute_correct_result_128 (&vals[i + 0], &vals[i + 4], ck);"}, {"sha": "114419f42bc060877f0f2d46c623e5e18358ea5b", "filename": "gcc/testsuite/gcc.target/i386/ssse3-psignb.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-psignb.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-psignb.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-psignb.c?ref=bf36afbc8f680205f04f75f308b994cff75fd54d", "patch": "@@ -15,7 +15,6 @@\n \n #include <tmmintrin.h>\n \n-#ifndef __AVX__\n /* Test the 64-bit form */\n static void\n ssse3_test_psignb (int *i1, int *i2, int *r)\n@@ -25,7 +24,6 @@ ssse3_test_psignb (int *i1, int *i2, int *r)\n   *(__m64 *) r = _mm_sign_pi8 (t1, t2);\n   _mm_empty ();\n }\n-#endif\n \n /* Test the 128-bit form */\n static void\n@@ -68,12 +66,10 @@ TEST (void)\n       /* Manually compute the result */\n       compute_correct_result (&vals[i + 0], &vals[i + 4], ck);\n \n-#ifndef __AVX__\n       /* Run the 64-bit tests */\n       ssse3_test_psignb (&vals[i + 0], &vals[i + 4], &r[0]);\n       ssse3_test_psignb (&vals[i + 2], &vals[i + 6], &r[2]);\n       fail += chk_128 (ck, r);\n-#endif\n \n       /* Run the 128-bit tests */\n       ssse3_test_psignb128 (&vals[i + 0], &vals[i + 4], r);"}, {"sha": "6b579944f10ac739e3ccc5eb9ad7374a68363d24", "filename": "gcc/testsuite/gcc.target/i386/ssse3-psignd.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-psignd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-psignd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-psignd.c?ref=bf36afbc8f680205f04f75f308b994cff75fd54d", "patch": "@@ -15,7 +15,6 @@\n \n #include <tmmintrin.h>\n \n-#ifndef __AVX__\n /* Test the 64-bit form */\n static void\n ssse3_test_psignd (int *i1, int *i2, int *r)\n@@ -25,7 +24,6 @@ ssse3_test_psignd (int *i1, int *i2, int *r)\n   *(__m64 *) r = _mm_sign_pi32 (t1, t2);\n   _mm_empty ();\n }\n-#endif\n \n /* Test the 128-bit form */\n static void\n@@ -65,12 +63,10 @@ TEST (void)\n       /* Manually compute the result */\n       compute_correct_result (&vals[i + 0], &vals[i + 4], ck);\n \n-#ifndef __AVX__\n       /* Run the 64-bit tests */\n       ssse3_test_psignd (&vals[i + 0], &vals[i + 4], &r[0]);\n       ssse3_test_psignd (&vals[i + 2], &vals[i + 6], &r[2]);\n       fail += chk_128 (ck, r);\n-#endif\n \n       /* Run the 128-bit tests */\n       ssse3_test_psignd128 (&vals[i + 0], &vals[i + 4], r);"}, {"sha": "8641a3677597f732548995a6704c303aaf876a5f", "filename": "gcc/testsuite/gcc.target/i386/ssse3-psignw.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-psignw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf36afbc8f680205f04f75f308b994cff75fd54d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-psignw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fssse3-psignw.c?ref=bf36afbc8f680205f04f75f308b994cff75fd54d", "patch": "@@ -15,7 +15,6 @@\n \n #include <tmmintrin.h>\n \n-#ifndef __AVX__\n /* Test the 64-bit form */\n static void\n ssse3_test_psignw (int *i1, int *i2, int *r)\n@@ -25,7 +24,6 @@ ssse3_test_psignw (int *i1, int *i2, int *r)\n   *(__m64 *) r = _mm_sign_pi16 (t1, t2);\n   _mm_empty ();\n }\n-#endif\n \n /* Test the 128-bit form */\n static void\n@@ -68,12 +66,10 @@ TEST (void)\n       /* Manually compute the result */\n       compute_correct_result (&vals[i + 0], &vals[i + 4], ck);\n \n-#ifndef __AVX__\n       /* Run the 64-bit tests */\n       ssse3_test_psignw (&vals[i + 0], &vals[i + 4], &r[0]);\n       ssse3_test_psignw (&vals[i + 2], &vals[i + 6], &r[2]);\n       fail += chk_128 (ck, r);\n-#endif\n \n       /* Run the 128-bit tests */\n       ssse3_test_psignw128 (&vals[i + 0], &vals[i + 4], r);"}]}