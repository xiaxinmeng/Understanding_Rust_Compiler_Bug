{"sha": "b75863a88ececd4fcce9e3b35df8d91b82cf4fc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjc1ODYzYTg4ZWNlY2Q0ZmNjZTllM2IzNWRmOGQ5MWI4MmNmNGZjNQ==", "commit": {"author": {"name": "Jozef Lawrynowicz", "email": "jozef.l@mittosystems.com", "date": "2020-09-08T10:31:02Z"}, "committer": {"name": "Jozef Lawrynowicz", "email": "jozef.l@mittosystems.com", "date": "2020-09-08T10:31:56Z"}, "message": "MSP430: Fix detection of assembler support for .mspabi_attribute\n\nThe assembly code \".mspabi_attribute 4,1\" uses the object attribute\nmechanism to indicate that the 430 ISA is in use. However, the default\nISA is 430X, so GAS fails to assemble this since the ISA wasn't also set\nto 430 on the command line.\n\ngcc/ChangeLog:\n\n\t* config/msp430/msp430.c (msp430_file_end): Fix jumbled\n\tHAVE_AS_MSPABI_ATTRIBUTE and HAVE_AS_GNU_ATTRIBUTE checks.\n\t* configure: Regenerate.\n\t* configure.ac: Use \".mspabi_attribute 4,2\" to check for assembler\n\tsupport for this object attribute directive.", "tree": {"sha": "09a54f6faef5d0215796402f66b81572a99ca0b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09a54f6faef5d0215796402f66b81572a99ca0b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b75863a88ececd4fcce9e3b35df8d91b82cf4fc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b75863a88ececd4fcce9e3b35df8d91b82cf4fc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b75863a88ececd4fcce9e3b35df8d91b82cf4fc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b75863a88ececd4fcce9e3b35df8d91b82cf4fc5/comments", "author": {"login": "jozefl-mitto", "id": 36524004, "node_id": "MDQ6VXNlcjM2NTI0MDA0", "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jozefl-mitto", "html_url": "https://github.com/jozefl-mitto", "followers_url": "https://api.github.com/users/jozefl-mitto/followers", "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}", "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions", "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs", "repos_url": "https://api.github.com/users/jozefl-mitto/repos", "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}", "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jozefl-mitto", "id": 36524004, "node_id": "MDQ6VXNlcjM2NTI0MDA0", "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jozefl-mitto", "html_url": "https://github.com/jozefl-mitto", "followers_url": "https://api.github.com/users/jozefl-mitto/followers", "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}", "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions", "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs", "repos_url": "https://api.github.com/users/jozefl-mitto/repos", "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}", "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "285d81be9725acc36dc8eca48d4df506cd5e6f6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/285d81be9725acc36dc8eca48d4df506cd5e6f6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/285d81be9725acc36dc8eca48d4df506cd5e6f6f"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "a299ed7f9d17e7ee460d227ab0cc29a37f83215f", "filename": "gcc/config/msp430/msp430.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b75863a88ececd4fcce9e3b35df8d91b82cf4fc5/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b75863a88ececd4fcce9e3b35df8d91b82cf4fc5/gcc%2Fconfig%2Fmsp430%2Fmsp430.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.c?ref=b75863a88ececd4fcce9e3b35df8d91b82cf4fc5", "patch": "@@ -2091,7 +2091,7 @@ msp430_output_aligned_decl_common (FILE *\t\t  stream,\n static void\n msp430_file_end (void)\n {\n-#ifdef HAVE_AS_GNU_ATTRIBUTE\n+#ifdef HAVE_AS_MSPABI_ATTRIBUTE\n   /* Enum for tag names.  */\n   enum\n     {\n@@ -2130,7 +2130,7 @@ msp430_file_end (void)\n \t   OFBA_MSPABI_Tag_Data_Model,\n \t   TARGET_LARGE ? OFBA_MSPABI_Val_Model_Large\n \t   : OFBA_MSPABI_Val_Model_Small);\n-#ifdef HAVE_AS_MSPABI_ATTRIBUTE\n+#ifdef HAVE_AS_GNU_ATTRIBUTE\n   /* Emit .gnu_attribute directive for Tag_GNU_MSP430_Data_Region.  */\n   fprintf (asm_out_file, \"\\t%s %d, %d\\n\", gnu_attr, Tag_GNU_MSP430_Data_Region,\n \t   msp430_data_region == MSP430_REGION_LOWER"}, {"sha": "0a09777dd427af0cce2c6afd5376fe6bbda534f4", "filename": "gcc/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b75863a88ececd4fcce9e3b35df8d91b82cf4fc5/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b75863a88ececd4fcce9e3b35df8d91b82cf4fc5/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=b75863a88ececd4fcce9e3b35df8d91b82cf4fc5", "patch": "@@ -27981,7 +27981,7 @@ else\n   then gcc_cv_as_msp430_mspabi_attribute=yes\n fi\n   elif test x$gcc_cv_as != x; then\n-    $as_echo '.mspabi_attribute 4,1' > conftest.s\n+    $as_echo '.mspabi_attribute 4,2' > conftest.s\n     if { ac_try='$gcc_cv_as $gcc_cv_as_flags  -o conftest.o conftest.s >&5'\n   { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n   (eval $ac_try) 2>&5"}, {"sha": "6a233a3c7062cc4c26f0fb168b4b5ad5bb05901e", "filename": "gcc/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b75863a88ececd4fcce9e3b35df8d91b82cf4fc5/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b75863a88ececd4fcce9e3b35df8d91b82cf4fc5/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=b75863a88ececd4fcce9e3b35df8d91b82cf4fc5", "patch": "@@ -5041,7 +5041,7 @@ pointers into PC-relative form.])\n \t  [Define if your assembler supports .gnu_attribute.])])\n     gcc_GAS_CHECK_FEATURE([.mspabi_attribute support],\n       gcc_cv_as_msp430_mspabi_attribute, [2,33,50],,\n-      [.mspabi_attribute 4,1],,\n+      [.mspabi_attribute 4,2],,\n       [AC_DEFINE(HAVE_AS_MSPABI_ATTRIBUTE, 1,\n \t  [Define if your assembler supports .mspabi_attribute.])])\n     if test x$enable_newlib_nano_formatted_io = xyes; then"}]}