{"sha": "4e938719ec8336a0f0108ea84ab4eccceaf30ed5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU5Mzg3MTllYzgzMzZhMGYwMTA4ZWE4NGFiNGVjY2NlYWYzMGVkNQ==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@wasabisystems.com", "date": "2003-06-30T12:06:04Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2003-06-30T12:06:04Z"}, "message": "arm.c (arm_rtx_costs): Remove #if 0 block.\n\n\t* config/arm/arm.c (arm_rtx_costs): Remove #if 0 block.\n\t(bad_signed_byte_operand): Likewise.\n\t(arm_output_epilogue): Likewise.\n\t(arm_final_prescan_insn): Likewise.\n\nFrom-SVN: r68698", "tree": {"sha": "0b58782160878fdc4eb070749e414a463c6a35d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b58782160878fdc4eb070749e414a463c6a35d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e938719ec8336a0f0108ea84ab4eccceaf30ed5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e938719ec8336a0f0108ea84ab4eccceaf30ed5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e938719ec8336a0f0108ea84ab4eccceaf30ed5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e938719ec8336a0f0108ea84ab4eccceaf30ed5/comments", "author": null, "committer": null, "parents": [{"sha": "73383a81050eea6b6114e7d742a601f73a5e00ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73383a81050eea6b6114e7d742a601f73a5e00ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73383a81050eea6b6114e7d742a601f73a5e00ee"}], "stats": {"total": 37, "additions": 7, "deletions": 30}, "files": [{"sha": "1f2777f911f10468791cf9d7ff71be17b7ee7d4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e938719ec8336a0f0108ea84ab4eccceaf30ed5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e938719ec8336a0f0108ea84ab4eccceaf30ed5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e938719ec8336a0f0108ea84ab4eccceaf30ed5", "patch": "@@ -1,3 +1,10 @@\n+2003-06-30  Ben Elliston  <bje@wasabisystems.com>\n+\n+\t* config/arm/arm.c (arm_rtx_costs): Remove #if 0 block.\n+\t(bad_signed_byte_operand): Likewise.\n+\t(arm_output_epilogue): Likewise.\n+\t(arm_final_prescan_insn): Likewise.\n+\n 2003-06-30  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* cfgrtl.c (mark_killed_regs): Cast HARD_REGNO_NREGS to int."}, {"sha": "e80fe4e0ee2499640c5d9c35e4a6b2a203edd932", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e938719ec8336a0f0108ea84ab4eccceaf30ed5/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e938719ec8336a0f0108ea84ab4eccceaf30ed5/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=4e938719ec8336a0f0108ea84ab4eccceaf30ed5", "patch": "@@ -3168,16 +3168,6 @@ arm_rtx_costs_1 (rtx x, enum rtx_code code, enum rtx_code outer)\n \t  \n \tdefault:\n \t  return 99;\n-#if 0\t  \n-\tcase FFS:\n-\tcase FLOAT:\n-\tcase FIX:\n-\tcase UNSIGNED_FIX:\n-\t  /* XXX guess */\n-\t  fprintf (stderr, \"unexpected code for thumb in rtx_costs: %s\\n\",\n-\t\t   rtx_name[code]);\n-\t  abort ();\n-#endif\n \t}\n     }\n   \n@@ -3706,10 +3696,6 @@ arm_reload_memory_operand (rtx op, enum machine_mode mode ATTRIBUTE_UNUSED)\n int\n bad_signed_byte_operand (rtx op, enum machine_mode mode ATTRIBUTE_UNUSED)\n {\n-#if 0\n-  if ((mode == QImode && !memory_operand (op, mode)) || GET_CODE (op) != MEM)\n-    return 0;\n-#endif\n   if (GET_CODE (op) != MEM)\n     return 0;\n \n@@ -8601,13 +8587,6 @@ arm_output_epilogue (int really_return)\n \t}\n     }\n \n-#if 0\n-  if (ARM_FUNC_TYPE (func_type) == ARM_FT_EXCEPTION_HANDLER)\n-    /* Adjust the stack to remove the exception handler stuff.  */\n-    asm_fprintf (f, \"\\tadd\\t%r, %r, %r\\n\", SP_REGNUM, SP_REGNUM,\n-\t\t REGNO (eh_ofs));\n-#endif\n-\n   if (! really_return\n     || (ARM_FUNC_TYPE (func_type) == ARM_FT_NORMAL\n \t&& current_function_pretend_args_size == 0\n@@ -9983,15 +9962,6 @@ arm_final_prescan_insn (rtx insn)\n   if (GET_CODE (body) == PARALLEL && XVECLEN (body, 0) > 0)\n     body = XVECEXP (body, 0, 0);\n \n-#if 0  \n-  /* If this is a conditional return then we don't want to know */\n-  if (GET_CODE (body) == SET && GET_CODE (SET_DEST (body)) == PC\n-      && GET_CODE (SET_SRC (body)) == IF_THEN_ELSE\n-      && (GET_CODE (XEXP (SET_SRC (body), 1)) == RETURN\n-          || GET_CODE (XEXP (SET_SRC (body), 2)) == RETURN))\n-    return;\n-#endif\n-\n   if (reverse\n       || (GET_CODE (body) == SET && GET_CODE (SET_DEST (body)) == PC\n \t  && GET_CODE (SET_SRC (body)) == IF_THEN_ELSE))"}]}