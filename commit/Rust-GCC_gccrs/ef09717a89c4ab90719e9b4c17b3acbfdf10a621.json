{"sha": "ef09717a89c4ab90719e9b4c17b3acbfdf10a621", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYwOTcxN2E4OWM0YWI5MDcxOWU5YjRjMTdiM2FjYmZkZjEwYTYyMQ==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-08-02T02:07:49Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-08-02T02:07:49Z"}, "message": "typeck2.c (add_exception_specifier): Use 'bool' where appropriate.\n\n(cp)\n\t* typeck2.c (add_exception_specifier): Use 'bool' where appropriate.\n\nFrom-SVN: r70094", "tree": {"sha": "bc0367b0dbd60645d9f0bfb31913e43f8f709551", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc0367b0dbd60645d9f0bfb31913e43f8f709551"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef09717a89c4ab90719e9b4c17b3acbfdf10a621", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef09717a89c4ab90719e9b4c17b3acbfdf10a621", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef09717a89c4ab90719e9b4c17b3acbfdf10a621", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef09717a89c4ab90719e9b4c17b3acbfdf10a621/comments", "author": null, "committer": null, "parents": [{"sha": "1c787209c2d8aa676c739aec22403981206bdb47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c787209c2d8aa676c739aec22403981206bdb47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c787209c2d8aa676c739aec22403981206bdb47"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "3ec348a393f00a177c54a0921a646bb502c3eaf8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef09717a89c4ab90719e9b4c17b3acbfdf10a621/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef09717a89c4ab90719e9b4c17b3acbfdf10a621/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ef09717a89c4ab90719e9b4c17b3acbfdf10a621", "patch": "@@ -1,3 +1,7 @@\n+2003-08-01  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* typeck2.c (add_exception_specifier): Use 'bool' where appropriate.\n+\n 2003-08-01  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/11697"}, {"sha": "eac8dc156980f73a6224fd15d9b81bcc5eaaac7a", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef09717a89c4ab90719e9b4c17b3acbfdf10a621/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef09717a89c4ab90719e9b4c17b3acbfdf10a621/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=ef09717a89c4ab90719e9b4c17b3acbfdf10a621", "patch": "@@ -1191,9 +1191,9 @@ build_functional_cast (tree exp, tree parms)\n tree\n add_exception_specifier (tree list, tree spec, int complain)\n {\n-  int ok;\n+  bool ok;\n   tree core = spec;\n-  int is_ptr;\n+  bool is_ptr;\n   int diag_type = -1; /* none */\n   \n   if (spec == error_mark_node)\n@@ -1208,16 +1208,16 @@ add_exception_specifier (tree list, tree spec, int complain)\n   if (is_ptr || TREE_CODE (core) == REFERENCE_TYPE)\n     core = TREE_TYPE (core);\n   if (complain < 0)\n-    ok = 1;\n+    ok = true;\n   else if (VOID_TYPE_P (core))\n     ok = is_ptr;\n   else if (TREE_CODE (core) == TEMPLATE_TYPE_PARM)\n-    ok = 1;\n+    ok = true;\n   else if (processing_template_decl)\n-    ok = 1;\n+    ok = true;\n   else\n     {\n-      ok = 1;\n+      ok = true;\n       /* 15.4/1 says that types in an exception specifier must be complete,\n          but it seems more reasonable to only require this on definitions\n          and calls.  So just give a pedwarn at this point; we will give an"}]}