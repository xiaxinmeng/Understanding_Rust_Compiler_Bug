{"sha": "b60512074dda38da43f3781ab039e0d59c23c6db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYwNTEyMDc0ZGRhMzhkYTQzZjM3ODFhYjAzOWUwZDU5YzIzYzZkYg==", "commit": {"author": {"name": "Sterling Augustine", "email": "saugustine@google.com", "date": "2013-07-25T22:18:21Z"}, "committer": {"name": "Sterling Augustine", "email": "sterling@gcc.gnu.org", "date": "2013-07-25T22:18:21Z"}, "message": "dwarf2out.c (size_of_pubnames): Move code to...\n\n2013-07-25  Sterling Augustine  <saugustine@google.com>\n\n\t* dwarf2out.c (size_of_pubnames): Move code to...\n\t(include_pubname_in_output): ...here.  New.\n\t(want_pubnames): Rearrange.\n\t(output_pubnames): Call include_pubname_in_output.  Move assertion.\n\nFrom-SVN: r201255", "tree": {"sha": "01bed8116c99d5c56c779b5e96442f91115c944c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01bed8116c99d5c56c779b5e96442f91115c944c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b60512074dda38da43f3781ab039e0d59c23c6db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b60512074dda38da43f3781ab039e0d59c23c6db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b60512074dda38da43f3781ab039e0d59c23c6db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b60512074dda38da43f3781ab039e0d59c23c6db/comments", "author": {"login": "Sterling-Augustine", "id": 56981066, "node_id": "MDQ6VXNlcjU2OTgxMDY2", "avatar_url": "https://avatars.githubusercontent.com/u/56981066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sterling-Augustine", "html_url": "https://github.com/Sterling-Augustine", "followers_url": "https://api.github.com/users/Sterling-Augustine/followers", "following_url": "https://api.github.com/users/Sterling-Augustine/following{/other_user}", "gists_url": "https://api.github.com/users/Sterling-Augustine/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sterling-Augustine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sterling-Augustine/subscriptions", "organizations_url": "https://api.github.com/users/Sterling-Augustine/orgs", "repos_url": "https://api.github.com/users/Sterling-Augustine/repos", "events_url": "https://api.github.com/users/Sterling-Augustine/events{/privacy}", "received_events_url": "https://api.github.com/users/Sterling-Augustine/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f0051264182ba3d09445f169bfb10b660127f4da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0051264182ba3d09445f169bfb10b660127f4da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0051264182ba3d09445f169bfb10b660127f4da"}], "stats": {"total": 63, "additions": 42, "deletions": 21}, "files": [{"sha": "7bcc02de0307523e19b1bf1efbd72e9fb684bee6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b60512074dda38da43f3781ab039e0d59c23c6db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b60512074dda38da43f3781ab039e0d59c23c6db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b60512074dda38da43f3781ab039e0d59c23c6db", "patch": "@@ -1,3 +1,10 @@\n+2013-07-25  Sterling Augustine  <saugustine@google.com>\n+\n+\t* dwarf2out.c (size_of_pubnames): Move code to...\n+\t(include_pubname_in_output): ...here.  New.\n+\t(want_pubnames): Rearrange.\n+\t(output_pubnames): Call include_pubname_in_output.  Move assertion.\n+\n 2013-07-25  Cameron McInally  <cameron.mcinally@nyu.edu>\n \n \t* doc/extend.texi: Fix return types for __builtin_ia32_cmp*s builtins."}, {"sha": "24022aa2ce3014b2729ab70fc7cbbbcddb7c8142", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 35, "deletions": 21, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b60512074dda38da43f3781ab039e0d59c23c6db/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b60512074dda38da43f3781ab039e0d59c23c6db/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=b60512074dda38da43f3781ab039e0d59c23c6db", "patch": "@@ -7887,6 +7887,32 @@ unmark_all_dies (dw_die_ref die)\n       unmark_all_dies (AT_ref (a));\n }\n \n+/* Calculate if the entry should appear in the final output file.  It may be\n+   from a pruned a type.  */\n+\n+static bool\n+include_pubname_in_output (vec<pubname_entry, va_gc> *table, pubname_entry *p)\n+{\n+  if (table == pubname_table)\n+    {\n+      /* Enumerator names are part of the pubname table, but the\n+         parent DW_TAG_enumeration_type die may have been pruned.\n+         Don't output them if that is the case.  */\n+      if (p->die->die_tag == DW_TAG_enumerator &&\n+          (p->die->die_parent == NULL\n+           || !p->die->die_parent->die_perennial_p))\n+        return false;\n+\n+      /* Everything else in the pubname table is included.  */\n+      return true;\n+    }\n+\n+  /* The pubtypes table shouldn't include types that have been\n+     pruned.  */\n+  return (p->die->die_offset != 0\n+          || !flag_eliminate_unused_debug_types);\n+}\n+\n /* Return the size of the .debug_pubnames or .debug_pubtypes table\n    generated for the compilation unit.  */\n \n@@ -7899,9 +7925,7 @@ size_of_pubnames (vec<pubname_entry, va_gc> *names)\n \n   size = DWARF_PUBNAMES_HEADER_SIZE;\n   FOR_EACH_VEC_ELT (*names, i, p)\n-    if (names != pubtype_table\n-\t|| p->die->die_offset != 0\n-\t|| !flag_eliminate_unused_debug_types)\n+    if (include_pubname_in_output (names, p))\n       size += strlen (p->name) + DWARF_OFFSET_SIZE + 1;\n \n   size += DWARF_OFFSET_SIZE;\n@@ -8731,9 +8755,9 @@ output_comp_unit (dw_die_ref die, int output_if_empty)\n static inline bool\n want_pubnames (void)\n {\n-  return (debug_generate_pub_sections != -1\n-\t  ? debug_generate_pub_sections\n-\t  : targetm.want_debug_pub_sections);\n+  if (debug_generate_pub_sections != -1)\n+    return debug_generate_pub_sections;\n+  return targetm.want_debug_pub_sections;\n }\n \n /* Add the DW_AT_GNU_pubnames and DW_AT_GNU_pubtypes attributes.  */\n@@ -9095,24 +9119,14 @@ output_pubnames (vec<pubname_entry, va_gc> *names)\n \n   FOR_EACH_VEC_ELT (*names, i, pub)\n     {\n-      /* Enumerator names are part of the pubname table, but the parent\n-         DW_TAG_enumeration_type die may have been pruned.  Don't output\n-         them if that is the case.  */\n-      if (pub->die->die_tag == DW_TAG_enumerator &&\n-          (pub->die->die_parent == NULL\n-\t   || !pub->die->die_parent->die_perennial_p))\n-        continue;\n-\n-      /* We shouldn't see pubnames for DIEs outside of the main CU.  */\n-      if (names == pubname_table && pub->die->die_tag != DW_TAG_enumerator)\n-\tgcc_assert (pub->die->die_mark);\n-\n-      if (names != pubtype_table\n-\t  || pub->die->die_offset != 0\n-\t  || !flag_eliminate_unused_debug_types)\n+      if (include_pubname_in_output (names, pub))\n \t{\n \t  dw_offset die_offset = pub->die->die_offset;\n \n+          /* We shouldn't see pubnames for DIEs outside of the main CU.  */\n+          if (names == pubname_table && pub->die->die_tag != DW_TAG_enumerator)\n+            gcc_assert (pub->die->die_mark);\n+\n \t  /* If we're putting types in their own .debug_types sections,\n \t     the .debug_pubtypes table will still point to the compile\n \t     unit (not the type unit), so we want to use the offset of"}]}