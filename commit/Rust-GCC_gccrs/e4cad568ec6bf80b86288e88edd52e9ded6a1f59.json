{"sha": "e4cad568ec6bf80b86288e88edd52e9ded6a1f59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRjYWQ1NjhlYzZiZjgwYjg2Mjg4ZTg4ZWRkNTJlOWRlZDZhMWY1OQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2007-02-17T01:47:38Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2007-02-17T01:47:38Z"}, "message": "darwin.h (LINK_SPEC): Always pass -macosx_version_min to linker.\n\n\t* config/darwin.h (LINK_SPEC): Always pass -macosx_version_min\n\tto linker.\n\t(DARWIN_EXTRA_SPECS): Add %(darwin_minversion).\n\t* config/rs6000/darwin.h (SUBTARGET_OVERRIDE_OPTIONS): Just call\n\tdarwin_rs6000_override_options.\n\t(C_COMMON_OVERRIDE_OPTIONS): Expect\n\tdarwin_macosx_version_min to be non-NULL always.\n\t(TARGET_C99_FUNCTIONS): Likewise.\n\t(CC1_SPEC): Always pass -mmacosx-version-min to cc1*.\n\t(DARWIN_MINVERSION_SPEC): New.\n\t* config/rs6000/rs6000.c (darwin_rs6000_override_options): New.\n\t* config/i386/darwin.h (CC1_SPEC): Always pass -mmacosx-version-min\n\tto cc1*.  \n\t(DARWIN_MINVERSION_SPEC): New.\n\t* config/darwin.opt (mmacosx-version-min): Initialize to non-NULL\n\tvalue.\n\t* config/darwin-c.c (darwin_cpp_builtins): Expect\n\tdarwin_macosx_version_min to be non-NULL always.\n\nFrom-SVN: r122067", "tree": {"sha": "b54bac4eca8b3eb965931f5a68d3ddea7dbbb03d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b54bac4eca8b3eb965931f5a68d3ddea7dbbb03d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4cad568ec6bf80b86288e88edd52e9ded6a1f59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4cad568ec6bf80b86288e88edd52e9ded6a1f59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4cad568ec6bf80b86288e88edd52e9ded6a1f59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4cad568ec6bf80b86288e88edd52e9ded6a1f59/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "982afe020cd1d11ae7d25162a83810a9b65b7729", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/982afe020cd1d11ae7d25162a83810a9b65b7729", "html_url": "https://github.com/Rust-GCC/gccrs/commit/982afe020cd1d11ae7d25162a83810a9b65b7729"}], "stats": {"total": 179, "additions": 108, "deletions": 71}, "files": [{"sha": "404a13847b869219493ca1e13a9db4e286f81cde", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4cad568ec6bf80b86288e88edd52e9ded6a1f59/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4cad568ec6bf80b86288e88edd52e9ded6a1f59/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e4cad568ec6bf80b86288e88edd52e9ded6a1f59", "patch": "@@ -1,5 +1,24 @@\n 2007-02-16  Geoffrey Keating  <geoffk@apple.com>\n \n+\t* config/darwin.h (LINK_SPEC): Always pass -macosx_version_min\n+\tto linker.\n+\t(DARWIN_EXTRA_SPECS): Add %(darwin_minversion).\n+\t* config/rs6000/darwin.h (SUBTARGET_OVERRIDE_OPTIONS): Just call\n+\tdarwin_rs6000_override_options.\n+\t(C_COMMON_OVERRIDE_OPTIONS): Expect\n+\tdarwin_macosx_version_min to be non-NULL always.\n+\t(TARGET_C99_FUNCTIONS): Likewise.\n+\t(CC1_SPEC): Always pass -mmacosx-version-min to cc1*.\n+\t(DARWIN_MINVERSION_SPEC): New.\n+\t* config/rs6000/rs6000.c (darwin_rs6000_override_options): New.\n+\t* config/i386/darwin.h (CC1_SPEC): Always pass -mmacosx-version-min\n+\tto cc1*.  \n+\t(DARWIN_MINVERSION_SPEC): New.\n+\t* config/darwin.opt (mmacosx-version-min): Initialize to non-NULL\n+\tvalue.\n+\t* config/darwin-c.c (darwin_cpp_builtins): Expect\n+\tdarwin_macosx_version_min to be non-NULL always.\n+\n \t* config/rs6000/rs6000.c: Clean up trailing whitespace.\n \n 2007-02-16  Uros Bizjak  <ubizjak@gmail.com>"}, {"sha": "eefd5f6fc5fdd02f34005f6c17d367074567af04", "filename": "gcc/config/darwin-c.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4cad568ec6bf80b86288e88edd52e9ded6a1f59/gcc%2Fconfig%2Fdarwin-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4cad568ec6bf80b86288e88edd52e9ded6a1f59/gcc%2Fconfig%2Fdarwin-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin-c.c?ref=e4cad568ec6bf80b86288e88edd52e9ded6a1f59", "patch": "@@ -616,7 +616,6 @@ darwin_cpp_builtins (cpp_reader *pfile)\n      to be defined and won't work if it isn't.  */\n   builtin_define_with_value (\"__APPLE_CC__\", \"1\", false);\n \n-  if (darwin_macosx_version_min)\n-    builtin_define_with_value (\"__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__\",\n-\t\t\t       version_as_macro(), false);\n+  builtin_define_with_value (\"__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__\",\n+\t\t\t     version_as_macro(), false);\n }"}, {"sha": "7070072dd124000354446cea6a0887577b7147ad", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4cad568ec6bf80b86288e88edd52e9ded6a1f59/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4cad568ec6bf80b86288e88edd52e9ded6a1f59/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=e4cad568ec6bf80b86288e88edd52e9ded6a1f59", "patch": "@@ -297,8 +297,7 @@ extern GTY(()) int darwin_ms_struct;\n    %{headerpad_max_install_names*} \\\n    %{Zimage_base*:-image_base %*} \\\n    %{Zinit*:-init %*} \\\n-   %{mmacosx-version-min=*:-macosx_version_min %*} \\\n-   %{!mmacosx-version-min=*:%{shared-libgcc:-macosx_version_min 10.3}} \\\n+   -macosx_version_min %(darwin_minversion) \\\n    %{nomultidefs} \\\n    %{Zmulti_module:-multi_module} %{Zsingle_module:-single_module} \\\n    %{Zmultiply_defined*:-multiply_defined %*} \\\n@@ -387,7 +386,8 @@ extern GTY(()) int darwin_ms_struct;\n \n #define DARWIN_EXTRA_SPECS     \\\n   { \"darwin_crt1\", DARWIN_CRT1_SPEC },                                 \\\n-  { \"darwin_dylib1\", DARWIN_DYLIB1_SPEC },\n+  { \"darwin_dylib1\", DARWIN_DYLIB1_SPEC },\t\t\t       \\\n+  { \"darwin_minversion\", DARWIN_MINVERSION_SPEC },\n \n #define DARWIN_DYLIB1_SPEC                                             \\\n   \"%:version-compare(!> 10.5 mmacosx-version-min= -ldylib1.o)          \\"}, {"sha": "28dd1c4cfa938b7a1d3b132b6e3b89f4f29135f0", "filename": "gcc/config/darwin.opt", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4cad568ec6bf80b86288e88edd52e9ded6a1f59/gcc%2Fconfig%2Fdarwin.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4cad568ec6bf80b86288e88edd52e9ded6a1f59/gcc%2Fconfig%2Fdarwin.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.opt?ref=e4cad568ec6bf80b86288e88edd52e9ded6a1f59", "patch": "@@ -23,8 +23,12 @@ mfix-and-continue\n Target Report Var(darwin_fix_and_continue)\n Generate code suitable for fast turn around debugging\n \n+; The Init here is for the convenience of GCC developers, so that\n+; cc1 and cc1plus don't crash if no -mmacosx-version-min is passed.  The\n+; driver will always pass a -mmacosx-version-min, so in normal use\n+; the Init is never used.\n mmacosx-version-min=\n-Target Joined Report Var(darwin_macosx_version_min)\n+Target Joined Report Var(darwin_macosx_version_min) Init(\"10.1\")\n The earliest MacOS X version on which this program will run\n \n mone-byte-bool"}, {"sha": "c00a791383df4adad4024061832d0eeb4e52706d", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4cad568ec6bf80b86288e88edd52e9ded6a1f59/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4cad568ec6bf80b86288e88edd52e9ded6a1f59/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=e4cad568ec6bf80b86288e88edd52e9ded6a1f59", "patch": "@@ -74,6 +74,7 @@ Boston, MA 02110-1301, USA.  */\n \n #undef CC1_SPEC\n #define CC1_SPEC \"%{!mkernel:%{!static:%{!mdynamic-no-pic:-fPIC}}} \\\n+  -mmacosx-version-min=%(darwin_minversion) \\\n   %{g: %{!fno-eliminate-unused-debug-symbols: -feliminate-unused-debug-symbols }}\"\n \n #undef ASM_SPEC\n@@ -82,6 +83,9 @@ Boston, MA 02110-1301, USA.  */\n #define DARWIN_ARCH_SPEC \"%{m64:x86_64;:i386}\"\n #define DARWIN_SUBARCH_SPEC DARWIN_ARCH_SPEC\n \n+/* Determine a minimum version based on compiler options.  */\n+#define DARWIN_MINVERSION_SPEC\t\"10.4\"\n+\n #undef SUBTARGET_EXTRA_SPECS\n #define SUBTARGET_EXTRA_SPECS                                   \\\n   DARWIN_EXTRA_SPECS                                            \\"}, {"sha": "9a000c8dd637840271b36e90baca762fe1e03f0e", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 20, "deletions": 64, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4cad568ec6bf80b86288e88edd52e9ded6a1f59/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4cad568ec6bf80b86288e88edd52e9ded6a1f59/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=e4cad568ec6bf80b86288e88edd52e9ded6a1f59", "patch": "@@ -55,74 +55,23 @@\n /* Translate config/rs6000/darwin.opt to config/darwin.h.  */\n #define TARGET_DYNAMIC_NO_PIC (TARGET_MACHO_DYNAMIC_NO_PIC)\n \n-#define TARGET_OS_CPP_BUILTINS()                \\\n-  do                                            \\\n-    {                                           \\\n-      if (!TARGET_64BIT) builtin_define (\"__ppc__\");   \\\n-      if (TARGET_64BIT) builtin_define (\"__ppc64__\");  \\\n-      builtin_define (\"__POWERPC__\");           \\\n-      builtin_define (\"__NATURAL_ALIGNMENT__\"); \\\n-      darwin_cpp_builtins (pfile);\t\t\\\n-    }                                           \\\n+#define TARGET_OS_CPP_BUILTINS()\t\t\t\\\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      if (!TARGET_64BIT) builtin_define (\"__ppc__\");\t\\\n+      if (TARGET_64BIT) builtin_define (\"__ppc64__\");\t\\\n+      builtin_define (\"__POWERPC__\");\t\t\t\\\n+      builtin_define (\"__NATURAL_ALIGNMENT__\");\t\t\\\n+      darwin_cpp_builtins (pfile);\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n   while (0)\n \n-\n-#define SUBTARGET_OVERRIDE_OPTIONS\t\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  /* The Darwin ABI always includes AltiVec, can't be (validly) turned\t\\\n-     off.  */\t\t\t\t\t\t\t\t\\\n-  rs6000_altivec_abi = 1;\t\t\t\t\t\t\\\n-  TARGET_ALTIVEC_VRSAVE = 1;\t\t\t\t\t\t\\\n-  if (DEFAULT_ABI == ABI_DARWIN)\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    if (MACHO_DYNAMIC_NO_PIC_P)\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-        if (flag_pic)\t\t\t\t\t\t\t\\\n-            warning (0, \"-mdynamic-no-pic overrides -fpic or -fPIC\");\t\\\n-        flag_pic = 0;\t\t\t\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-    else if (flag_pic == 1)\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-        flag_pic = 2;\t\t\t\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-  }\t\t\t\t\t\t\t\t\t\\\n-  if (TARGET_64BIT && ! TARGET_POWERPC64)\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      target_flags |= MASK_POWERPC64;\t\t\t\t\t\\\n-      warning (0, \"-m64 requires PowerPC64 architecture, enabling\");\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  if (flag_mkernel)\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      rs6000_default_long_calls = 1;\t\t\t\t\t\\\n-      target_flags |= MASK_SOFT_FLOAT;\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  /* Make -m64 imply -maltivec.  Darwin's 64-bit ABI includes\t\t\\\n-     Altivec.  */\t\t\t\t\t\t\t\\\n-  if (!flag_mkernel && !flag_apple_kext\t\t\t\t\t\\\n-      && TARGET_64BIT\t\t\t\t\t\t\t\\\n-      && ! (target_flags_explicit & MASK_ALTIVEC))\t\t\t\\\n-    target_flags |= MASK_ALTIVEC;\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  /* Unless the user (not the configurer) has explicitly overridden\t\\\n-     it with -mcpu=G3 or -mno-altivec, then 10.5+ targets default to\t\\\n-     G4 unless targetting the kernel.  */\t\t\t\t\\\n-  if (!flag_mkernel\t\t\t\t\t\t\t\\\n-      && !flag_apple_kext\t\t\t\t\t\t\\\n-      && darwin_macosx_version_min\t\t\t\t\t\\\n-      && strverscmp (darwin_macosx_version_min, \"10.5\") >= 0\t\t\\\n-      && ! (target_flags_explicit & MASK_ALTIVEC)\t\t\t\\\n-      && ! rs6000_select[1].string)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      target_flags |= MASK_ALTIVEC;\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-} while(0)\n+#define SUBTARGET_OVERRIDE_OPTIONS darwin_rs6000_override_options ()\n \n #define C_COMMON_OVERRIDE_OPTIONS do {\t\t\t\t\t\\\n   /* On powerpc, __cxa_get_exception_ptr is available starting in the\t\\\n      10.4.6 libstdc++.dylib.  */\t\t\t\t\t\\\n-  if ((! darwin_macosx_version_min\t\t\t\t\t\\\n-       || strverscmp (darwin_macosx_version_min, \"10.4.6\") < 0)\t\t\\\n+  if (strverscmp (darwin_macosx_version_min, \"10.4.6\") < 0\t\t\\\n       && flag_use_cxa_get_exception_ptr == 2)\t\t\t\t\\\n     flag_use_cxa_get_exception_ptr = 0;\t\t\t\t\t\\\n   if (flag_mkernel)\t\t\t\t\t\t\t\\\n@@ -144,6 +93,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define CC1_SPEC \"\\\n   %{g: %{!fno-eliminate-unused-debug-symbols: -feliminate-unused-debug-symbols }} \\\n   %{static: %{Zdynamic: %e conflicting code gen style switches are used}}\\\n+  -mmacosx-version-min=%(darwin_minversion) \\\n   %{!mkernel:%{!static:%{!mdynamic-no-pic:-fPIC}}}\"\n \n #define DARWIN_ARCH_SPEC \"%{m64:ppc64;:ppc}\"\n@@ -171,6 +121,13 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define DARWIN_CRT2_SPEC \\\n   \"%{!m64:%:version-compare(!> 10.4 mmacosx-version-min= crt2.o%s)}\"\n \n+/* Determine a minimum version based on compiler options.  */\n+#define DARWIN_MINVERSION_SPEC\t\\\n+  \"%{mmacosx-version-min=*:%*;\t\\\n+     m64:10.4;\t\t\t\\\n+     shared-libgcc:10.3;\t\\\n+     :10.1}\"\n+\n #undef SUBTARGET_EXTRA_SPECS\n #define SUBTARGET_EXTRA_SPECS\t\t\t\\\n   DARWIN_EXTRA_SPECS                            \\\n@@ -473,8 +430,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef TARGET_C99_FUNCTIONS\n #define TARGET_C99_FUNCTIONS\t\t\t\t\t\\\n   (TARGET_64BIT\t\t\t\t\t\t\t\\\n-   || (darwin_macosx_version_min\t\t\t\t\\\n-       && strverscmp (darwin_macosx_version_min, \"10.3\") >= 0))\n+   || strverscmp (darwin_macosx_version_min, \"10.3\") >= 0)\n \n /* When generating kernel code or kexts, we don't use Altivec by\n    default, as kernel code doesn't save/restore those registers.  */"}, {"sha": "76669093887e2dc009c9612414b9f2fbdecb7ea1", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4cad568ec6bf80b86288e88edd52e9ded6a1f59/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4cad568ec6bf80b86288e88edd52e9ded6a1f59/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=e4cad568ec6bf80b86288e88edd52e9ded6a1f59", "patch": "@@ -1169,6 +1169,61 @@ rs6000_init_hard_regno_mode_ok (void)\n \trs6000_hard_regno_mode_ok_p[m][r] = true;\n }\n \n+#if TARGET_MACHO\n+/* The Darwin version of SUBTARGET_OVERRIDE_OPTIONS.  */\n+\n+static void\n+darwin_rs6000_override_options (void)\n+{\n+  /* The Darwin ABI always includes AltiVec, can't be (validly) turned\n+     off.  */\n+  rs6000_altivec_abi = 1;\n+  TARGET_ALTIVEC_VRSAVE = 1;\n+  if (DEFAULT_ABI == ABI_DARWIN)\n+  {\n+    if (MACHO_DYNAMIC_NO_PIC_P)\n+      {\n+        if (flag_pic)\n+            warning (0, \"-mdynamic-no-pic overrides -fpic or -fPIC\");\n+        flag_pic = 0;\n+      }\n+    else if (flag_pic == 1)\n+      {\n+        flag_pic = 2;\n+      }\n+  }\n+  if (TARGET_64BIT && ! TARGET_POWERPC64)\n+    {\n+      target_flags |= MASK_POWERPC64;\n+      warning (0, \"-m64 requires PowerPC64 architecture, enabling\");\n+    }\n+  if (flag_mkernel)\n+    {\n+      rs6000_default_long_calls = 1;\n+      target_flags |= MASK_SOFT_FLOAT;\n+    }\n+\n+  /* Make -m64 imply -maltivec.  Darwin's 64-bit ABI includes\n+     Altivec.  */\n+  if (!flag_mkernel && !flag_apple_kext\n+      && TARGET_64BIT\n+      && ! (target_flags_explicit & MASK_ALTIVEC))\n+    target_flags |= MASK_ALTIVEC;\n+\n+  /* Unless the user (not the configurer) has explicitly overridden\n+     it with -mcpu=G3 or -mno-altivec, then 10.5+ targets default to\n+     G4 unless targetting the kernel.  */\n+  if (!flag_mkernel\n+      && !flag_apple_kext\n+      && strverscmp (darwin_macosx_version_min, \"10.5\") >= 0\n+      && ! (target_flags_explicit & MASK_ALTIVEC)\n+      && ! rs6000_select[1].string)\n+    {\n+      target_flags |= MASK_ALTIVEC;\n+    }\n+}\n+#endif\n+\n /* If not otherwise specified by a target, make 'long double' equivalent to\n    'double'.  */\n "}]}