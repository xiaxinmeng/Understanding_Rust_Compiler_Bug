{"sha": "90e0ee005bfecbf04c27b4cde749fd465aa40753", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBlMGVlMDA1YmZlY2JmMDRjMjdiNGNkZTc0OWZkNDY1YWE0MDc1Mw==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@cygnus.com", "date": "1999-10-29T17:34:54Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "1999-10-29T17:34:54Z"}, "message": "i386.h (ENCODE_SECTION_INFO): Don't do anything if DECL is not a memory ref.\n\nFri Oct 29 18:16:03 1999  Andrew Haley  <aph@cygnus.com>\n\n       * config/i386/i386.h (ENCODE_SECTION_INFO): Don't do anything if\n       DECL is not a memory ref.\n\nFrom-SVN: r30261", "tree": {"sha": "f500c71959e293db224d57fbdba734cd2030de01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f500c71959e293db224d57fbdba734cd2030de01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90e0ee005bfecbf04c27b4cde749fd465aa40753", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90e0ee005bfecbf04c27b4cde749fd465aa40753", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90e0ee005bfecbf04c27b4cde749fd465aa40753", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90e0ee005bfecbf04c27b4cde749fd465aa40753/comments", "author": null, "committer": null, "parents": [{"sha": "7ed6230077686c1277eec925983b2037608dacbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ed6230077686c1277eec925983b2037608dacbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ed6230077686c1277eec925983b2037608dacbc"}], "stats": {"total": 50, "additions": 29, "deletions": 21}, "files": [{"sha": "bb5e334a33bbc819a050769f7e1a5ff425aea0e7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90e0ee005bfecbf04c27b4cde749fd465aa40753/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90e0ee005bfecbf04c27b4cde749fd465aa40753/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90e0ee005bfecbf04c27b4cde749fd465aa40753", "patch": "@@ -1,3 +1,8 @@\n+Fri Oct 29 18:16:03 1999  Andrew Haley  <aph@cygnus.com>\n+\n+       * config/i386/i386.h (ENCODE_SECTION_INFO): Don't do anything if\n+       DECL is not a memory ref.\n+ \n Fri Oct 29 09:05:34 1999  Catherine Moore  <clm@cygnus.com>\n \n \t* config/i386/i386.h (ix86_cpu): Remove extern attribute."}, {"sha": "88bed4b8dc8355d84ce775d309bbf026e3b8efea", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 24, "deletions": 21, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90e0ee005bfecbf04c27b4cde749fd465aa40753/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90e0ee005bfecbf04c27b4cde749fd465aa40753/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=90e0ee005bfecbf04c27b4cde749fd465aa40753", "patch": "@@ -1578,27 +1578,30 @@ do {\t\t\t\t\t\t\t\t\\\n    On i386, if using PIC, mark a SYMBOL_REF for a non-global symbol\n    so that we may access it directly in the GOT.  */\n \n-#define ENCODE_SECTION_INFO(DECL) \\\n-do\t\t\t\t\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    if (flag_pic)\t\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\trtx rtl = (TREE_CODE_CLASS (TREE_CODE (DECL)) != 'd'\t\t\\\n-\t\t   ? TREE_CST_RTL (DECL) : DECL_RTL (DECL));\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-\tif (TARGET_DEBUG_ADDR\t\t\t\t\t\t\\\n-\t    && TREE_CODE_CLASS (TREE_CODE (DECL)) == 'd')\t\t\\\n-\t  {\t\t\t\t\t\t\t\t\\\n-\t    fprintf (stderr, \"Encode %s, public = %d\\n\",\t\t\\\n-\t\t     IDENTIFIER_POINTER (DECL_NAME (DECL)),\t\t\\\n-\t\t     TREE_PUBLIC (DECL));\t\t\t\t\\\n-\t  }\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-\tSYMBOL_REF_FLAG (XEXP (rtl, 0))\t\t\t\t\t\\\n-\t  = (TREE_CODE_CLASS (TREE_CODE (DECL)) != 'd'\t\t\t\\\n-\t     || ! TREE_PUBLIC (DECL));\t\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-  }\t\t\t\t\t\t\t\t\t\\\n+#define ENCODE_SECTION_INFO(DECL)\t\t\t\t\\\n+do\t\t\t\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\\\n+    if (flag_pic)\t\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\\\n+\trtx rtl = (TREE_CODE_CLASS (TREE_CODE (DECL)) != 'd'\t\\\n+\t\t   ? TREE_CST_RTL (DECL) : DECL_RTL (DECL));\t\\\n+\t\t\t\t\t\t\t\t\\\n+\tif (GET_CODE (rtl) == MEM)\t\t\t\t\\\n+\t  {\t\t\t\t\t\t\t\\\n+\t    if (TARGET_DEBUG_ADDR\t\t\t\t\\\n+\t\t&& TREE_CODE_CLASS (TREE_CODE (DECL)) == 'd')\t\\\n+\t      {\t\t\t\t\t\t\t\\\n+\t\tfprintf (stderr, \"Encode %s, public = %d\\n\",\t\\\n+\t\t\t IDENTIFIER_POINTER (DECL_NAME (DECL)),\t\\\n+\t\t\t TREE_PUBLIC (DECL));\t\t\t\\\n+\t      }\t\t\t\t\t\t\t\\\n+\t    \t\t\t\t\t\t\t\\\n+\t    SYMBOL_REF_FLAG (XEXP (rtl, 0))\t\t\t\\\n+\t      = (TREE_CODE_CLASS (TREE_CODE (DECL)) != 'd'\t\\\n+\t\t || ! TREE_PUBLIC (DECL));\t\t\t\\\n+\t  }\t\t\t\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\\\n+  }\t\t\t\t\t\t\t\t\\\n while (0)\n \n /* The `FINALIZE_PIC' macro serves as a hook to emit these special"}]}