{"sha": "6c4763fa5b55f6e883ed7077b67c6175c2da63d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM0NzYzZmE1YjU1ZjZlODgzZWQ3MDc3YjY3YzYxNzVjMmRhNjNkMQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-08-03T16:30:30Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-08-03T16:31:29Z"}, "message": "Avoid shifting by amounts larger than target int in irange self-tests.\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/96430\n\t* range-op.cc (operator_tests): Do not shift by 31 on targets with\n\tinteger's smaller than 32 bits.", "tree": {"sha": "da1e451e715ead7879a97741bfe461fde48c274a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da1e451e715ead7879a97741bfe461fde48c274a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c4763fa5b55f6e883ed7077b67c6175c2da63d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c4763fa5b55f6e883ed7077b67c6175c2da63d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c4763fa5b55f6e883ed7077b67c6175c2da63d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c4763fa5b55f6e883ed7077b67c6175c2da63d1/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c56684fd61223abd45854270cd1e83ab2f07148c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c56684fd61223abd45854270cd1e83ab2f07148c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c56684fd61223abd45854270cd1e83ab2f07148c"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "b7b708b488b71ea6e0c39771c96b934567c83209", "filename": "gcc/range-op.cc", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c4763fa5b55f6e883ed7077b67c6175c2da63d1/gcc%2Frange-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c4763fa5b55f6e883ed7077b67c6175c2da63d1/gcc%2Frange-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op.cc?ref=6c4763fa5b55f6e883ed7077b67c6175c2da63d1", "patch": "@@ -3527,15 +3527,16 @@ operator_tests ()\n   }\n \n   // signed: ~[-1] = OP1 >> 31\n-  {\n-    widest_irange lhs (INT (-1), INT (-1), VR_ANTI_RANGE);\n-    widest_irange shift (INT (31), INT (31));\n-    widest_irange op1;\n-    op_rshift.op1_range (op1, integer_type_node, lhs, shift);\n-    widest_irange negatives = range_negatives (integer_type_node);\n-    negatives.intersect (op1);\n-    ASSERT_TRUE (negatives.undefined_p ());\n-  }\n+  if (TYPE_PRECISION (integer_type_node) > 31)\n+    {\n+      widest_irange lhs (INT (-1), INT (-1), VR_ANTI_RANGE);\n+      widest_irange shift (INT (31), INT (31));\n+      widest_irange op1;\n+      op_rshift.op1_range (op1, integer_type_node, lhs, shift);\n+      widest_irange negatives = range_negatives (integer_type_node);\n+      negatives.intersect (op1);\n+      ASSERT_TRUE (negatives.undefined_p ());\n+    }\n }\n \n // Run all of the selftests within this file."}]}