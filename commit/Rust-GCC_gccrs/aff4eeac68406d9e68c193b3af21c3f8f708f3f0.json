{"sha": "aff4eeac68406d9e68c193b3af21c3f8f708f3f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZmNGVlYWM2ODQwNmQ5ZTY4YzE5M2IzYWYyMWMzZjhmNzA4ZjNmMA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2015-08-11T17:53:41Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-08-11T17:53:41Z"}, "message": "re PR target/66954 (function multiversioning fails for target \"aes\")\n\nlibgcc/ChangeLog:\n\n\tPR target/66954\n\t* config/i386/cpuinfo.c (enum processor_features): Add FEATURE_PCLMUL.\n\t(get_available_features): Handle FEATURE_PCLMUL.\n\ngcc/ChangeLog:\n\n\tPR target/66954\n\t* config/i386/i386.c (get_builtin_code_for_version): Add P_PCLMUL\n\tto enum feature_priority and feature_list.\n\t(fold_builtin_cpu): Add F_PCLMUL to enum processor_features\n\tand isa_names_table.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/66954\n\t* g++.dg/ext/mv25.C: New test.\n\nFrom-SVN: r226784", "tree": {"sha": "02e3ed75828606fc00f2a1cda3ed1a9d417d8cd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02e3ed75828606fc00f2a1cda3ed1a9d417d8cd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aff4eeac68406d9e68c193b3af21c3f8f708f3f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aff4eeac68406d9e68c193b3af21c3f8f708f3f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aff4eeac68406d9e68c193b3af21c3f8f708f3f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aff4eeac68406d9e68c193b3af21c3f8f708f3f0/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dbfa87aa8704d7cb2ce147966f27bdf70ce7596c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbfa87aa8704d7cb2ce147966f27bdf70ce7596c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbfa87aa8704d7cb2ce147966f27bdf70ce7596c"}], "stats": {"total": 65, "additions": 63, "deletions": 2}, "files": [{"sha": "8db5376a13d007d15e92348038858da8e6bb2021", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aff4eeac68406d9e68c193b3af21c3f8f708f3f0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aff4eeac68406d9e68c193b3af21c3f8f708f3f0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aff4eeac68406d9e68c193b3af21c3f8f708f3f0", "patch": "@@ -1,3 +1,11 @@\n+2015-08-11  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/66954\n+\t* config/i386/i386.c (get_builtin_code_for_version): Add P_PCLMUL\n+\tto enum feature_priority and feature_list.\n+\t(fold_builtin_cpu): Add F_PCLMUL to enum processor_features\n+\tand isa_names_table.\n+\n 2015-08-11  Yuri Rumyantsev  <ysrumyan@gmail.com>\n \n \t* tree-vect-stmts.c (vectorizable_shift): Add missed test on"}, {"sha": "caec21880c3f7ae7cb3838bd1bdc00718635ad13", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aff4eeac68406d9e68c193b3af21c3f8f708f3f0/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aff4eeac68406d9e68c193b3af21c3f8f708f3f0/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=aff4eeac68406d9e68c193b3af21c3f8f708f3f0", "patch": "@@ -34574,6 +34574,7 @@ get_builtin_code_for_version (tree decl, tree *predicate_list)\n     P_PROC_SSE4_2,\n     P_POPCNT,\n     P_AES,\n+    P_PCLMUL,\n     P_AVX,\n     P_PROC_AVX,\n     P_BMI,\n@@ -34612,6 +34613,7 @@ get_builtin_code_for_version (tree decl, tree *predicate_list)\n       {\"sse4.2\", P_SSE4_2},\n       {\"popcnt\", P_POPCNT},\n       {\"aes\", P_AES},\n+      {\"pclmul\", P_PCLMUL},\n       {\"avx\", P_AVX},\n       {\"bmi\", P_BMI},\n       {\"fma4\", P_FMA4},\n@@ -35600,6 +35602,7 @@ fold_builtin_cpu (tree fndecl, tree *args)\n     F_BMI,\n     F_BMI2,\n     F_AES,\n+    F_PCLMUL,\n     F_MAX\n   };\n \n@@ -35696,7 +35699,8 @@ fold_builtin_cpu (tree fndecl, tree *args)\n       {\"avx512f\",F_AVX512F},\n       {\"bmi\",    F_BMI},\n       {\"bmi2\",   F_BMI2},\n-      {\"aes\",    F_AES}\n+      {\"aes\",    F_AES},\n+      {\"pclmul\", F_PCLMUL}\n     };\n \n   tree __processor_model_type = build_processor_model_struct ();"}, {"sha": "5c970e70c8a6aaeb9b67e5240ae6578a6b6ad44d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aff4eeac68406d9e68c193b3af21c3f8f708f3f0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aff4eeac68406d9e68c193b3af21c3f8f708f3f0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aff4eeac68406d9e68c193b3af21c3f8f708f3f0", "patch": "@@ -1,3 +1,8 @@\n+2015-08-11  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/66954\n+\t* g++.dg/ext/mv25.C: New test.\n+\n 2015-08-11  Yuri Rumyantsev  <ysrumyan@gmail.com>\n \n \t* gcc.target/i386/avx2-vect-shift.c: New test."}, {"sha": "fd40eca59a5b7ea4a4f7b14ed662baffc0fe386b", "filename": "gcc/testsuite/g++.dg/ext/mv25.C", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aff4eeac68406d9e68c193b3af21c3f8f708f3f0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv25.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aff4eeac68406d9e68c193b3af21c3f8f708f3f0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv25.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fmv25.C?ref=aff4eeac68406d9e68c193b3af21c3f8f708f3f0", "patch": "@@ -0,0 +1,35 @@\n+// Test case to check if Multiversioning works for PCLMUL\n+\n+// { dg-do run { target i?86-*-* x86_64-*-* } }\n+// { dg-require-ifunc \"\" }\n+// { dg-options \"-O2\" }\n+\n+#include <assert.h>\n+\n+// Check if PCLMUL feature selection works\n+int foo () __attribute__((target(\"default\")));\n+int foo () __attribute__((target(\"pclmul\")));\n+\n+int main ()\n+{\n+  int val = foo ();\n+\n+  if (__builtin_cpu_supports (\"pclmul\"))\n+    assert (val == 1);\n+  else\n+    assert (val == 0);\n+\n+  return 0;\n+}\n+\n+int __attribute__ ((target(\"default\")))\n+foo ()\n+{\n+  return 0;\n+}\n+\n+int __attribute__ ((target(\"pclmul\")))\n+foo ()\n+{\n+  return 1;\n+}"}, {"sha": "062bbe924dd0b2f5f55f916d240b0037babc6d4f", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aff4eeac68406d9e68c193b3af21c3f8f708f3f0/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aff4eeac68406d9e68c193b3af21c3f8f708f3f0/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=aff4eeac68406d9e68c193b3af21c3f8f708f3f0", "patch": "@@ -1,3 +1,9 @@\n+2015-08-11  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/66954\n+\t* config/i386/cpuinfo.c (enum processor_features): Add FEATURE_PCLMUL.\n+\t(get_available_features): Handle FEATURE_PCLMUL.\n+\n 2015-08-10  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/cpuinfo.c (get_intel_cpu): Treat model == 0x4f as"}, {"sha": "25d85e4bedd7542353b2480c0636d92e2464dec0", "filename": "libgcc/config/i386/cpuinfo.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aff4eeac68406d9e68c193b3af21c3f8f708f3f0/libgcc%2Fconfig%2Fi386%2Fcpuinfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aff4eeac68406d9e68c193b3af21c3f8f708f3f0/libgcc%2Fconfig%2Fi386%2Fcpuinfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fcpuinfo.c?ref=aff4eeac68406d9e68c193b3af21c3f8f708f3f0", "patch": "@@ -101,7 +101,8 @@ enum processor_features\n   FEATURE_AVX512F,\n   FEATURE_BMI,\n   FEATURE_BMI2,\n-  FEATURE_AES\n+  FEATURE_AES,\n+  FEATURE_PCLMUL\n };\n \n struct __processor_model\n@@ -277,6 +278,8 @@ get_available_features (unsigned int ecx, unsigned int edx,\n     features |= (1 << FEATURE_POPCNT);\n   if (ecx & bit_AES)\n     features |= (1 << FEATURE_AES);\n+  if (ecx & bit_PCLMUL)\n+    features |= (1 << FEATURE_PCLMUL);\n   if (ecx & bit_SSE3)\n     features |= (1 << FEATURE_SSE3);\n   if (ecx & bit_SSSE3)"}]}