{"sha": "eff01bb615f99284e9f67ca2ed08823944a9936e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZmMDFiYjYxNWY5OTI4NGU5ZjY3Y2EyZWQwODgyMzk0NGE5OTM2ZQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-01-23T22:29:30Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-01-23T22:29:30Z"}, "message": "varasm.c (UNIQUE_SECTION): Move default implementation ...\n\n        * varasm.c (UNIQUE_SECTION): Move default implementation ...\n        * defaults.h: ... here.\n\nFrom-SVN: r39213", "tree": {"sha": "5537b15d3e62ab8dbfc2b337aa92aa67ae85ca63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5537b15d3e62ab8dbfc2b337aa92aa67ae85ca63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eff01bb615f99284e9f67ca2ed08823944a9936e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eff01bb615f99284e9f67ca2ed08823944a9936e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eff01bb615f99284e9f67ca2ed08823944a9936e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eff01bb615f99284e9f67ca2ed08823944a9936e/comments", "author": null, "committer": null, "parents": [{"sha": "7c01b2b5a879958a3a59d758e046e6cd2ec36e63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c01b2b5a879958a3a59d758e046e6cd2ec36e63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c01b2b5a879958a3a59d758e046e6cd2ec36e63"}], "stats": {"total": 55, "additions": 28, "deletions": 27}, "files": [{"sha": "b0f3ce9fa6df097b38a0b8a8bda18c3485ca5769", "filename": "gcc/defaults.h", "status": "modified", "additions": 28, "deletions": 3, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eff01bb615f99284e9f67ca2ed08823944a9936e/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eff01bb615f99284e9f67ca2ed08823944a9936e/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=eff01bb615f99284e9f67ca2ed08823944a9936e", "patch": "@@ -1,6 +1,4 @@\n-/* Definitions of various defaults for how to do assembler output\n-   (most of which are designed to be appropriate for GAS or for\n-   some BSD assembler).\n+/* Definitions of various defaults for tm.h macros.\n    Copyright (C) 1992, 1996, 1997, 1998, 1999, 2000, 2001\n    Free Software Foundation, Inc.\n    Contributed by Ron Guilmette (rfg@monkeys.com)\n@@ -192,6 +190,33 @@ do { ASM_OUTPUT_LABEL(FILE,LABEL_ALTERNATE_NAME (INSN)); } while (0)\n # endif\n #endif\n \n+/* If we have no definition for UNIQUE_SECTION, but do have the \n+   ability to generate arbitrary sections, construct something\n+   reasonable.  */\n+#ifdef ASM_OUTPUT_SECTION_NAME\n+#ifndef UNIQUE_SECTION\n+#define UNIQUE_SECTION(DECL,RELOC)\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\t\\\n+  int len;\t\t\t\t\t\t\t\\\n+  const char *name;\t\t\t\t\t\t\\\n+  char *string;\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+  name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (DECL));\t\\\n+  /* Strip off any encoding in name.  */\t\t\t\\\n+  STRIP_NAME_ENCODING (name, name);\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+  len = strlen (name) + 1;\t\t\t\t\t\\\n+  string = alloca (len + 1);\t\t\t\t\t\\\n+  sprintf (string, \".%s\", name);\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+  DECL_SECTION_NAME (DECL) = build_string (len, string);\t\\\n+} while (0)\n+#endif\n+#ifndef UNIQUE_SECTION_P\n+#define UNIQUE_SECTION_P(DECL) 0\n+#endif\n+#endif\n+\n /* By default, we generate a label at the beginning and end of the\n    text section, and compute the size of the text section by\n    subtracting the two.  However, on some platforms that doesn't "}, {"sha": "99c8da691d9692b001546c2321bf9154e2cb057b", "filename": "gcc/varasm.c", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eff01bb615f99284e9f67ca2ed08823944a9936e/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eff01bb615f99284e9f67ca2ed08823944a9936e/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=eff01bb615f99284e9f67ca2ed08823944a9936e", "patch": "@@ -326,30 +326,6 @@ named_section (decl, name, reloc)\n     }\n }\n \n-#ifdef ASM_OUTPUT_SECTION_NAME\n-#ifndef UNIQUE_SECTION\n-#define UNIQUE_SECTION(DECL,RELOC)\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\\\n-  int len;\t\t\t\t\t\t\t\\\n-  const char *name;\t\t\t\t\t\t\\\n-  char *string;\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-  name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (DECL));\t\\\n-  /* Strip off any encoding in name.  */\t\t\t\\\n-  STRIP_NAME_ENCODING (name, name);\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-  len = strlen (name) + 1;\t\t\t\t\t\\\n-  string = alloca (len + 1);\t\t\t\t\t\\\n-  sprintf (string, \".%s\", name);\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-  DECL_SECTION_NAME (DECL) = build_string (len, string);\t\\\n-} while (0)\n-#endif\n-#ifndef UNIQUE_SECTION_P\n-#define UNIQUE_SECTION_P(DECL) 0\n-#endif\n-#endif\n-\n #ifdef BSS_SECTION_ASM_OP\n \n /* Tell the assembler to switch to the bss section.  */"}]}