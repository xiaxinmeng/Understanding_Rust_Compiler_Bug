{"sha": "6d88dbdc5e33765ae481b57e5ed027fe1fb2e409", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ4OGRiZGM1ZTMzNzY1YWU0ODFiNTdlNWVkMDI3ZmUxZmIyZTQwOQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-10-12T19:12:56Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-25T13:22:27Z"}, "message": "[Ada] Add support for 128-bit integer types to GNAT.Random_Numbers\n\ngcc/ada/\n\n\t* libgnat/g-rannum.ads (Random): New functions returning 128-bit.\n\t* libgnat/g-rannum.adb (Random): Implement them and alphabetize.\n\t(To_Signed): New unchecked conversion function for 128-bit.", "tree": {"sha": "dc3030c0328a94efea5877768d5e7cb6b21a16e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc3030c0328a94efea5877768d5e7cb6b21a16e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d88dbdc5e33765ae481b57e5ed027fe1fb2e409", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d88dbdc5e33765ae481b57e5ed027fe1fb2e409", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d88dbdc5e33765ae481b57e5ed027fe1fb2e409", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d88dbdc5e33765ae481b57e5ed027fe1fb2e409/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbf14e1350d3054e02ac9d83b61b84cc23d2c157", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbf14e1350d3054e02ac9d83b61b84cc23d2c157", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbf14e1350d3054e02ac9d83b61b84cc23d2c157"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "3895cdd0548b384ed1cf3823ab4ccded7a3898ec", "filename": "gcc/ada/libgnat/g-rannum.adb", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d88dbdc5e33765ae481b57e5ed027fe1fb2e409/gcc%2Fada%2Flibgnat%2Fg-rannum.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d88dbdc5e33765ae481b57e5ed027fe1fb2e409/gcc%2Fada%2Flibgnat%2Fg-rannum.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-rannum.adb?ref=6d88dbdc5e33765ae481b57e5ed027fe1fb2e409", "patch": "@@ -58,6 +58,8 @@ is\n      new Ada.Unchecked_Conversion (Unsigned_32, Integer_32);\n    function To_Signed is\n      new Ada.Unchecked_Conversion (Unsigned_64, Integer_64);\n+   function To_Signed is\n+     new Ada.Unchecked_Conversion (Unsigned_128, Integer_128);\n \n    ------------------\n    -- Insert_Image --\n@@ -147,16 +149,26 @@ is\n       return Random (Gen.Rep);\n    end Random;\n \n-   function Random (Gen : Generator) return Integer_64 is\n+   function Random (Gen : Generator) return Interfaces.Unsigned_128 is\n    begin\n-      return To_Signed (Unsigned_64'(Random (Gen)));\n+      return Random (Gen.Rep);\n    end Random;\n \n    function Random (Gen : Generator) return Integer_32 is\n    begin\n       return To_Signed (Unsigned_32'(Random (Gen)));\n    end Random;\n \n+   function Random (Gen : Generator) return Integer_64 is\n+   begin\n+      return To_Signed (Unsigned_64'(Random (Gen)));\n+   end Random;\n+\n+   function Random (Gen : Generator) return Integer_128 is\n+   begin\n+      return To_Signed (Unsigned_128'(Random (Gen)));\n+   end Random;\n+\n    function Random (Gen : Generator) return Long_Integer is\n       function Random_Long_Integer is new Random_Discrete (Long_Integer);\n    begin"}, {"sha": "f795ae09aec67c9a76748038cab11961ba264ebd", "filename": "gcc/ada/libgnat/g-rannum.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d88dbdc5e33765ae481b57e5ed027fe1fb2e409/gcc%2Fada%2Flibgnat%2Fg-rannum.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d88dbdc5e33765ae481b57e5ed027fe1fb2e409/gcc%2Fada%2Flibgnat%2Fg-rannum.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-rannum.ads?ref=6d88dbdc5e33765ae481b57e5ed027fe1fb2e409", "patch": "@@ -69,6 +69,8 @@ is\n    function Random (Gen : Generator) return Interfaces.Unsigned_32;\n    function Random (Gen : Generator) return Interfaces.Integer_64;\n    function Random (Gen : Generator) return Interfaces.Unsigned_64;\n+   function Random (Gen : Generator) return Interfaces.Integer_128;\n+   function Random (Gen : Generator) return Interfaces.Unsigned_128;\n    function Random (Gen : Generator) return Integer;\n    function Random (Gen : Generator) return Long_Integer;\n    --  Return pseudo-random numbers uniformly distributed on T'First .. T'Last"}]}