{"sha": "943766d37ae4131aa6cbf9e0b2a660ffea3482a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQzNzY2ZDM3YWU0MTMxYWE2Y2JmOWUwYjJhNjYwZmZlYTM0ODJhOA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2019-08-22T15:55:39Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2019-08-22T15:55:39Z"}, "message": "[arm] Fix use of CRC32 intrinsics with Armv8-a and hard-float\n\nWe currently have a nasty error when trying to use the __crc* intrinsics\nwith an -mfloat-abi=hard.\nThat is because the target pragma guarding them uses armv8-a+crc that\ndoes not include fp by default.\nSo we get errors like:\nerror: '-mfloat-abi=hard': selected processor lacks an FPU\n\nThis patch fixes that by using an FP-enabled arch target pragma to guard\nthese intrinsics when floating-point is available.\nThat way both the softfloat and hardfloat variants work.\n\n     * config/arm/arm_acle.h: Use arch=armv8-a+crc+simd pragma for CRC32\n     intrinsics if __ARM_FP.\n     Use __ARM_FEATURE_CRC32 ifdef guard.\n\n     * gcc.target/arm/acle/crc_hf_1.c: New test.\n\nFrom-SVN: r274827", "tree": {"sha": "5854dbaa393d0f29f0c8d33300599446348aa2d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5854dbaa393d0f29f0c8d33300599446348aa2d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/943766d37ae4131aa6cbf9e0b2a660ffea3482a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/943766d37ae4131aa6cbf9e0b2a660ffea3482a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/943766d37ae4131aa6cbf9e0b2a660ffea3482a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/943766d37ae4131aa6cbf9e0b2a660ffea3482a8/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ef27f40f488c590d796036ff9ad0ee572d8d8bfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef27f40f488c590d796036ff9ad0ee572d8d8bfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef27f40f488c590d796036ff9ad0ee572d8d8bfe"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "2e58369b6142d7071f125337f8c01b3dd8c4e201", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943766d37ae4131aa6cbf9e0b2a660ffea3482a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943766d37ae4131aa6cbf9e0b2a660ffea3482a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=943766d37ae4131aa6cbf9e0b2a660ffea3482a8", "patch": "@@ -1,3 +1,9 @@\n+2019-08-22  Kyrylo Tkachov <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm_acle.h: Use arch=armv8-a+crc+simd pragma for CRC32\n+\tintrinsics if __ARM_FP.\n+\tUse __ARM_FEATURE_CRC32 ifdef guard.\n+\n 2019-08-22  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* config/arm/arm.md (neon_for_64bits): Remove."}, {"sha": "6857ab1787df0ffa672e5078e5a0b9c9cc52e695", "filename": "gcc/config/arm/arm_acle.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943766d37ae4131aa6cbf9e0b2a660ffea3482a8/gcc%2Fconfig%2Farm%2Farm_acle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943766d37ae4131aa6cbf9e0b2a660ffea3482a8/gcc%2Fconfig%2Farm%2Farm_acle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_acle.h?ref=943766d37ae4131aa6cbf9e0b2a660ffea3482a8", "patch": "@@ -174,8 +174,12 @@ __arm_mrrc2 (const unsigned int __coproc, const unsigned int __opc1,\n #endif /* (!__thumb__ || __thumb2__) &&  __ARM_ARCH >= 4.  */\n \n #pragma GCC push_options\n-#if __ARM_ARCH >= 8\n+#ifdef __ARM_FEATURE_CRC32\n+#ifdef __ARM_FP\n+#pragma GCC target (\"arch=armv8-a+crc+simd\")\n+#else\n #pragma GCC target (\"arch=armv8-a+crc\")\n+#endif\n \n __extension__ static __inline uint32_t __attribute__ ((__always_inline__))\n __crc32b (uint32_t __a, uint8_t __b)\n@@ -235,7 +239,7 @@ __crc32cd (uint32_t __a, uint64_t __b)\n }\n #endif\n \n-#endif /* __ARM_ARCH >= 8.  */\n+#endif /* __ARM_FEATURE_CRC32  */\n #pragma GCC pop_options\n \n #ifdef __cplusplus"}, {"sha": "46b63d52f0d32098ec44b6137b7a51ad47da10e6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943766d37ae4131aa6cbf9e0b2a660ffea3482a8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943766d37ae4131aa6cbf9e0b2a660ffea3482a8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=943766d37ae4131aa6cbf9e0b2a660ffea3482a8", "patch": "@@ -1,3 +1,7 @@\n+2019-08-22  Kyrylo Tkachov <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/arm/acle/crc_hf_1.c: New test.\n+\n 2019-08-22  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* gcc.target/arm/neon-extend-1.c: Remove test."}, {"sha": "e6cbfc0b33e56e4275b96978ca1823d7682792fb", "filename": "gcc/testsuite/gcc.target/arm/acle/crc_hf_1.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943766d37ae4131aa6cbf9e0b2a660ffea3482a8/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Facle%2Fcrc_hf_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943766d37ae4131aa6cbf9e0b2a660ffea3482a8/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Facle%2Fcrc_hf_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Facle%2Fcrc_hf_1.c?ref=943766d37ae4131aa6cbf9e0b2a660ffea3482a8", "patch": "@@ -0,0 +1,14 @@\n+/* Test that using an Armv8-a hard-float target doesn't\n+   break CRC intrinsics.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_hard_vfp_ok }  */\n+/* { dg-options \"-mfloat-abi=hard -march=armv8-a+simd+crc\" } */\n+\n+#include <arm_acle.h>\n+\n+uint32_t\n+foo (uint32_t a, uint32_t b)\n+{\n+  return __crc32cw (a, b);\n+}"}]}