{"sha": "ad1d92ab9f65c539bf819ec5eda91789804f4e3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQxZDkyYWI5ZjY1YzUzOWJmODE5ZWM1ZWRhOTE3ODk4MDRmNGUzZg==", "commit": {"author": {"name": "Mikhail Maltsev", "email": "maltsevm@gmail.com", "date": "2016-05-17T20:50:22Z"}, "committer": {"name": "Mikhail Maltsev", "email": "miyuki@gcc.gnu.org", "date": "2016-05-17T20:50:22Z"}, "message": "Fold bit_not through ASR and rotate\n\ngcc/\n\n\tPR tree-optimization/54579\n\tPR middle-end/55299\n\t* match.pd (~(~X >> Y), ~(~X >>r Y), ~(~X <<r Y)): New patterns.\n\ngcc/testsuite\n\n\tPR tree-optimization/54579\n\tPR middle-end/55299\n\t* gcc.dg/fold-notrotate-1.c: New test.\n\t* gcc.dg/fold-notshift-1.c: New test.\n\t* gcc.dg/fold-notshift-2.c: New test.\n\nFrom-SVN: r236344", "tree": {"sha": "6e7f69ed31d0d72acc9e4e9fd1a129a9d50e480a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e7f69ed31d0d72acc9e4e9fd1a129a9d50e480a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad1d92ab9f65c539bf819ec5eda91789804f4e3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad1d92ab9f65c539bf819ec5eda91789804f4e3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad1d92ab9f65c539bf819ec5eda91789804f4e3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad1d92ab9f65c539bf819ec5eda91789804f4e3f/comments", "author": {"login": "miyuki", "id": 4668268, "node_id": "MDQ6VXNlcjQ2NjgyNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/4668268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miyuki", "html_url": "https://github.com/miyuki", "followers_url": "https://api.github.com/users/miyuki/followers", "following_url": "https://api.github.com/users/miyuki/following{/other_user}", "gists_url": "https://api.github.com/users/miyuki/gists{/gist_id}", "starred_url": "https://api.github.com/users/miyuki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miyuki/subscriptions", "organizations_url": "https://api.github.com/users/miyuki/orgs", "repos_url": "https://api.github.com/users/miyuki/repos", "events_url": "https://api.github.com/users/miyuki/events{/privacy}", "received_events_url": "https://api.github.com/users/miyuki/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "47768df837de3d5d8e87ea4add0ef859b7b5f8f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47768df837de3d5d8e87ea4add0ef859b7b5f8f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47768df837de3d5d8e87ea4add0ef859b7b5f8f9"}], "stats": {"total": 199, "additions": 199, "deletions": 0}, "files": [{"sha": "cf13477185f148f0a34b8fb1e84cc6814b727d6a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1d92ab9f65c539bf819ec5eda91789804f4e3f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1d92ab9f65c539bf819ec5eda91789804f4e3f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad1d92ab9f65c539bf819ec5eda91789804f4e3f", "patch": "@@ -1,3 +1,9 @@\n+2016-05-17  Mikhail Maltsev  <maltsevm@gmail.com>\n+\n+\tPR tree-optimization/54579\n+\tPR middle-end/55299\n+\t* match.pd (~(~X >> Y), ~(~X >>r Y), ~(~X <<r Y)): New patterns.\n+\n 2016-05-17  Marek Polacek  <polacek@redhat.com>\n \n \tPR ipa/71146"}, {"sha": "eddacd4dd1c333ec404b87f1079d61838470c6b8", "filename": "gcc/match.pd", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1d92ab9f65c539bf819ec5eda91789804f4e3f/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1d92ab9f65c539bf819ec5eda91789804f4e3f/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=ad1d92ab9f65c539bf819ec5eda91789804f4e3f", "patch": "@@ -1501,6 +1501,27 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n     (with { tree mask = int_const_binop (shift, fold_convert (type, @2), @1); }\n      (bit_op (shift (convert @0) @1) { mask; }))))))\n \n+/* ~(~X >> Y) -> X >> Y (for arithmetic shift).  */\n+(simplify\n+ (bit_not (convert1?:s (rshift:s (convert2?@0 (bit_not @1)) @2)))\n+  (if (!TYPE_UNSIGNED (TREE_TYPE (@0))\n+       && element_precision (TREE_TYPE (@0))\n+          <= element_precision (TREE_TYPE (@1))\n+       && element_precision (type) <= element_precision (TREE_TYPE (@0)))\n+   (with\n+    { tree shift_type = TREE_TYPE (@0); }\n+     (convert (rshift (convert:shift_type @1) @2)))))\n+\n+/* ~(~X >>r Y) -> X >>r Y\n+   ~(~X <<r Y) -> X <<r Y */\n+(for rotate (lrotate rrotate)\n+ (simplify\n+  (bit_not (convert1?:s (rotate:s (convert2?@0 (bit_not @1)) @2)))\n+   (if (element_precision (TREE_TYPE (@0)) <= element_precision (TREE_TYPE (@1))\n+        && element_precision (type) <= element_precision (TREE_TYPE (@0)))\n+    (with\n+     { tree rotate_type = TREE_TYPE (@0); }\n+      (convert (rotate (convert:rotate_type @1) @2))))))\n \n /* Simplifications of conversions.  */\n "}, {"sha": "e5127affb18b48c382f0ccea6972f76ab53c1575", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1d92ab9f65c539bf819ec5eda91789804f4e3f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1d92ab9f65c539bf819ec5eda91789804f4e3f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ad1d92ab9f65c539bf819ec5eda91789804f4e3f", "patch": "@@ -1,3 +1,11 @@\n+2016-05-17  Mikhail Maltsev  <maltsevm@gmail.com>\n+\n+\tPR tree-optimization/54579\n+\tPR middle-end/55299\n+\t* gcc.dg/fold-notrotate-1.c: New test.\n+\t* gcc.dg/fold-notshift-1.c: New test.\n+\t* gcc.dg/fold-notshift-2.c: New test.\n+\n 2016-05-17  Marek Polacek  <polacek@redhat.com>\n \n \tPR ipa/71146"}, {"sha": "a9b38040f3af7b02937e8440b030faab0797051d", "filename": "gcc/testsuite/gcc.dg/fold-notrotate-1.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1d92ab9f65c539bf819ec5eda91789804f4e3f/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-notrotate-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1d92ab9f65c539bf819ec5eda91789804f4e3f/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-notrotate-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-notrotate-1.c?ref=ad1d92ab9f65c539bf819ec5eda91789804f4e3f", "patch": "@@ -0,0 +1,54 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-optimized\" } */\n+\n+#define INT_BITS  (sizeof (int) * __CHAR_BIT__)\n+#define ROL(x, y) ((x) << (y) | (x) >> (INT_BITS - (y)))\n+#define ROR(x, y) ((x) >> (y) | (x) << (INT_BITS - (y)))\n+\n+unsigned\n+rol (unsigned a, unsigned b)\n+{\n+  return ~ROL (~a, b);\n+}\n+\n+unsigned int\n+ror (unsigned a, unsigned b)\n+{\n+  return ~ROR (~a, b);\n+}\n+\n+int\n+rol_conv1 (int a, unsigned b)\n+{\n+  return ~(int)ROL((unsigned)~a, b);\n+}\n+\n+int\n+rol_conv2 (int a, unsigned b)\n+{\n+  return ~ROL((unsigned)~a, b);\n+}\n+\n+int\n+rol_conv3 (unsigned a, unsigned b)\n+{\n+  return ~(int)ROL(~a, b);\n+}\n+\n+#define LONG_BITS  (sizeof (long) * __CHAR_BIT__)\n+#define ROLL(x, y) ((x) << (y) | (x) >> (LONG_BITS - (y)))\n+#define RORL(x, y) ((x) >> (y) | (x) << (LONG_BITS - (y)))\n+\n+unsigned long\n+roll (unsigned long a, unsigned long b)\n+{\n+  return ~ROLL (~a, b);\n+}\n+\n+unsigned long\n+rorl (unsigned long a, unsigned long b)\n+{\n+  return ~RORL (~a, b);\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"~\" \"optimized\" } } */"}, {"sha": "2de236fc4d8ae870375ec657d1e947af45e79043", "filename": "gcc/testsuite/gcc.dg/fold-notshift-1.c", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1d92ab9f65c539bf819ec5eda91789804f4e3f/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-notshift-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1d92ab9f65c539bf819ec5eda91789804f4e3f/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-notshift-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-notshift-1.c?ref=ad1d92ab9f65c539bf819ec5eda91789804f4e3f", "patch": "@@ -0,0 +1,77 @@\n+/* PR tree-optimization/54579\n+   PR middle-end/55299 */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-cddce1\" } */\n+\n+int\n+asr1 (int a, int b)\n+{\n+  return ~((~a) >> b);\n+}\n+\n+long\n+asr1l (long a, long b)\n+{\n+  return ~((~a) >> b);\n+}\n+\n+int\n+asr_conv (unsigned a, unsigned b)\n+{\n+  return ~((int)~a >> b);\n+}\n+\n+unsigned\n+asr_conv2 (unsigned a, unsigned b)\n+{\n+  return ~(unsigned)((int)~a >> b);\n+}\n+\n+unsigned\n+asr_conv3 (int a, int b)\n+{\n+  return ~(unsigned)(~a >> b);\n+}\n+\n+typedef __INT32_TYPE__ int32_t;\n+typedef __INT64_TYPE__ int64_t;\n+\n+int32_t\n+asr_conv4 (int64_t a, int b)\n+{\n+  return ~((int32_t)~a >> b);\n+}\n+\n+int32_t\n+asr_conv5 (int64_t a, int b)\n+{\n+  return ~(int32_t)(~a >> b);\n+}\n+\n+int\n+asr2 (int a, int b)\n+{\n+  return -((-a - 1) >> b) - 1;\n+}\n+\n+int\n+asr3 (int a, int b)\n+{\n+  return a < 0 ? ~((~a) >> b) : a >> b;\n+}\n+\n+int64_t\n+asr3l (int64_t a, int b)\n+{\n+  return a < 0 ? ~((~a) >> b) : a >> b;\n+}\n+\n+int\n+asr4 (int a, int b)\n+{\n+  return a < 0 ? -((-a - 1) >> b) - 1 : a >> b;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \">>\" 11 \"cddce1\" } } */\n+/* { dg-final { scan-tree-dump-not \"~\" \"cddce1\" } } */"}, {"sha": "32635f183d753b1b3f6a2d2449c3a37caaa664fa", "filename": "gcc/testsuite/gcc.dg/fold-notshift-2.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1d92ab9f65c539bf819ec5eda91789804f4e3f/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-notshift-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1d92ab9f65c539bf819ec5eda91789804f4e3f/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-notshift-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffold-notshift-2.c?ref=ad1d92ab9f65c539bf819ec5eda91789804f4e3f", "patch": "@@ -0,0 +1,33 @@\n+/* PR middle-end/55299 */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-cddce1\" } */\n+\n+unsigned int\n+lsr (unsigned int a, unsigned int b)\n+{\n+  return ~((~a) >> b);\n+}\n+\n+int\n+sl (int a, int b)\n+{\n+  return ~((~a) << b);\n+}\n+\n+typedef __INT32_TYPE__ int32_t;\n+typedef __INT64_TYPE__ int64_t;\n+\n+int64_t\n+asr_widen1 (int32_t a, int b)\n+{\n+  return ~((int64_t)(~a) >> b);\n+}\n+\n+int64_t\n+asr_widen2 (int32_t a, int b)\n+{\n+  return ~(int64_t)(~a >> b);\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"~\" 8 \"cddce1\" } } */"}]}