{"sha": "a99ada67cfc0517c1c827743bedbe11c24a64074", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk5YWRhNjdjZmMwNTE3YzFjODI3NzQzYmVkYmUxMWMyNGE2NDA3NA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2007-06-06T10:52:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-06T10:52:32Z"}, "message": "a-reatim.adb: Documentation addition\n\n2007-04-20  Robert Dewar  <dewar@adacore.com>\n\n\t* a-reatim.adb: Documentation addition\n\n\t* g-cgideb.adb: Minor code reorganization\n\n\t* tree_io.adb, treepr.adb, cstand.adb, krunch.adb, par.adb,\n\tmdll-utl.adb, par-ch5.adb, par-tchk.adb, s-exctab.ads, s-memory.ads,\n\ts-osprim.ads, s-restri.ads, s-soflin.ads: Minor reformatting.\n\n\t* debug.ads, debug.adb (Get_Debug_Flag_K): Remove unused obsolete\n\tfunction.  Change name New_Scope to Push_Scope\n\t(Get_Debug_Flag_K): Remove unused obsolete function.\n\n\t* exp_ch8.adb, inline.adb, sem_ch8.ads: Change name New_Scope to\n\tPush_Scope.\n\n\t* makeusg.adb: Update Copyright notice\n\tAdd line for switch -aP\n\n\t* makeusg.adb: Fix wording of some usage messages\n\n\t* s-assert.adb (Raise_Assert_Failure): Add call to\n\tDebug_Raise_Assert_Failure.\n\n\t* s-unstyp.ads (type Packed_Bytes2): Change alignment to use 'Min\n\t(2, Standard'Alignment) for compatibility with AAMP (where alignment\n\tis restricted to 1).\n\n\t* s-wchjis.adb: Remove use of System.Pure_Exceptions\n\n\t* tbuild.ads, tbuild.adb (Make_Implicit_Exception_Handler): Set the\n\tnode location to No_Location when we're not debugging the expanded\n\tcode.\n\nFrom-SVN: r125478", "tree": {"sha": "162a23fa1dc6b2cfca448b3db6905b462f282b70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/162a23fa1dc6b2cfca448b3db6905b462f282b70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a99ada67cfc0517c1c827743bedbe11c24a64074", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a99ada67cfc0517c1c827743bedbe11c24a64074", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a99ada67cfc0517c1c827743bedbe11c24a64074", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a99ada67cfc0517c1c827743bedbe11c24a64074/comments", "author": null, "committer": null, "parents": [{"sha": "7d2e68b351a9a69a273fc2a7f38893a23c8c6358", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d2e68b351a9a69a273fc2a7f38893a23c8c6358", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d2e68b351a9a69a273fc2a7f38893a23c8c6358"}], "stats": {"total": 310, "additions": 157, "deletions": 153}, "files": [{"sha": "2ca4472a5eaef0a7740c457d58405153d256c57d", "filename": "gcc/ada/a-reatim.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fa-reatim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fa-reatim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-reatim.adb?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -241,6 +241,11 @@ package body Ada.Real_Time is\n \n    function To_Time_Span (D : Duration) return Time_Span is\n    begin\n+      --  Note regarding AI-00432 requiring range checking on this conversion.\n+      --  In almost all versions of GNAT (and all to which this version of the\n+      --  Ada.Real_Time package apply), the range of Time_Span and Duration are\n+      --  the same, so there is no issue of overflow.\n+\n       return Time_Span (D);\n    end To_Time_Span;\n "}, {"sha": "565c36870e66bf1be14f6420c146cde1b9bba307", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -430,7 +430,7 @@ package body CStand is\n       --    range False .. True\n \n       --  where the occurrences of the literals must point to the\n-      --  corresponding  definition.\n+      --  corresponding definition.\n \n       R_Node := New_Node (N_Range, Stloc);\n       B_Node := New_Node (N_Identifier, Stloc);"}, {"sha": "1ddd1f6ded88b1c51100dbf1638a6d151a61fdf0", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -326,7 +326,7 @@ package body Debug is\n    --       an interepretation is incompatible with the context.\n \n    --  dw   Write semantic scope stack messages. Each time a scope is created\n-   --       or removed, a message is output (see the Sem_Ch8.New_Scope and\n+   --       or removed, a message is output (see the Sem_Ch8.Push_Scope and\n    --       Sem_Ch8.Pop_Scope subprograms).\n \n    --  dx   Force expansion on, even if no code being generated. Normally the\n@@ -604,15 +604,6 @@ package body Debug is\n    --  dw  Prints the list of units withed by the unit currently explored\n    --      during the main loop of Make.Compile_Sources.\n \n-   ----------------------\n-   -- Get_Debug_Flag_K --\n-   ----------------------\n-\n-   function Get_Debug_Flag_K return Boolean is\n-   begin\n-      return Debug_Flag_K;\n-   end Get_Debug_Flag_K;\n-\n    --------------------\n    -- Set_Debug_Flag --\n    --------------------"}, {"sha": "4c7bd51876ab398173ea70ce594cb7f4c16005be", "filename": "gcc/ada/debug.ads", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fdebug.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fdebug.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.ads?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -179,10 +179,6 @@ package Debug is\n    Debug_Flag_Dot_8 : Boolean := False;\n    Debug_Flag_Dot_9 : Boolean := False;\n \n-   function Get_Debug_Flag_K return Boolean;\n-   --  This function is called from C code to get the setting of the K flag\n-   --  (it does not work to try to access a constant object directly).\n-\n    procedure Set_Debug_Flag (C : Character; Val : Boolean := True);\n    --  Where C is 0-9, A-Z, or a-z, sets the corresponding debug flag to\n    --  the given value. In the checks off version of debug, the call to"}, {"sha": "6a00a3b73b5954a73ef279778b839cfca8143873", "filename": "gcc/ada/exp_ch8.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fexp_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fexp_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch8.adb?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -310,7 +310,7 @@ package body Exp_Ch8 is\n                Aux : constant Node_Id := Aux_Decls_Node (Parent (N));\n \n             begin\n-               New_Scope (Standard_Standard);\n+               Push_Scope (Standard_Standard);\n \n                if No (Actions (Aux)) then\n                   Set_Actions (Aux, New_List (Decl));"}, {"sha": "c3a0945c67c43f96453cbfa6a2274b41e06bd32f", "filename": "gcc/ada/g-cgideb.adb", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fg-cgideb.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fg-cgideb.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-cgideb.adb?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2000-2006, AdaCore                     --\n+--                     Copyright (C) 2000-2007, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -131,12 +131,11 @@ package body GNAT.CGI.Debug is\n          Result : Unbounded_String;\n \n       begin\n-         Result := Result\n-           & Title (Mode, \"CGI complete runtime environment\");\n-\n-         Result := Result\n-           & Header (Mode, \"CGI parameters:\")\n-           & New_Line (Mode);\n+         Result :=\n+           To_Unbounded_String\n+             (Title (Mode, \"CGI complete runtime environment\")\n+              & Header (Mode, \"CGI parameters:\")\n+              & New_Line (Mode));\n \n          for K in 1 .. Argument_Count loop\n             Result := Result"}, {"sha": "c9b43ba187cffa984c7dd2fa0d66af70095e6dab", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,6 +33,7 @@ with Exp_Tss;  use Exp_Tss;\n with Fname;    use Fname;\n with Fname.UF; use Fname.UF;\n with Lib;      use Lib;\n+with Namet;    use Namet;\n with Nlists;   use Nlists;\n with Opt;      use Opt;\n with Sem_Ch8;  use Sem_Ch8;\n@@ -246,20 +247,31 @@ package body Inline is\n       -----------------\n \n       function Must_Inline return Boolean is\n-         Scop : Entity_Id := Current_Scope;\n+         Scop : Entity_Id;\n          Comp : Node_Id;\n \n       begin\n          --  Check if call is in main unit\n \n+         Scop := Current_Scope;\n+\n+         --  Do not try to inline if scope is standard. This could happen, for\n+         --  example, for a call to Add_Global_Declaration, and it causes\n+         --  trouble to try to inline at this level.\n+\n+         if Scop = Standard_Standard then\n+            return False;\n+         end if;\n+\n+         --  Otherwise lookup scope stack to outer scope\n+\n          while Scope (Scop) /= Standard_Standard\n            and then not Is_Child_Unit (Scop)\n          loop\n             Scop := Scope (Scop);\n          end loop;\n \n          Comp := Parent (Scop);\n-\n          while Nkind (Comp) /= N_Compilation_Unit loop\n             Comp := Parent (Comp);\n          end loop;\n@@ -271,8 +283,7 @@ package body Inline is\n             return True;\n          end if;\n \n-         --  Call is not in main unit. See if it's in some inlined\n-         --  subprogram.\n+         --  Call is not in main unit. See if it's in some inlined subprogram\n \n          Scop := Current_Scope;\n          while Scope (Scop) /= Standard_Standard\n@@ -289,7 +300,6 @@ package body Inline is\n          end loop;\n \n          return False;\n-\n       end Must_Inline;\n \n    --  Start of processing for Add_Inlined_Body\n@@ -563,7 +573,7 @@ package body Inline is\n       Analyzing_Inlined_Bodies := False;\n \n       if Serious_Errors_Detected = 0 then\n-         New_Scope (Standard_Standard);\n+         Push_Scope (Standard_Standard);\n \n          J := 0;\n          while J <= Inlined_Bodies.Last\n@@ -609,7 +619,7 @@ package body Inline is\n                         Error_Msg_N\n                           (\"one or more inlined subprograms accessed in $!\",\n                            Comp_Unit);\n-                        Error_Msg_Name_1 :=\n+                        Error_Msg_File_1 :=\n                           Get_File_Name (Bname, Subunit => False);\n                         Error_Msg_N (\"\\but file{ was not found!\", Comp_Unit);\n                         raise Unrecoverable_Error;\n@@ -860,7 +870,7 @@ package body Inline is\n             end if;\n          end if;\n \n-         New_Scope (Scop);\n+         Push_Scope (Scop);\n          Expand_Cleanup_Actions (Decl);\n          End_Scope;\n \n@@ -935,7 +945,7 @@ package body Inline is\n       if Serious_Errors_Detected = 0 then\n \n          Expander_Active := (Operating_Mode = Opt.Generate_Code);\n-         New_Scope (Standard_Standard);\n+         Push_Scope (Standard_Standard);\n          To_Clean := New_Elmt_List;\n \n          if Is_Generic_Unit (Cunit_Entity (Main_Unit)) then"}, {"sha": "bb6326e06f80cd706b3b0fc7d71d67bf97fc93d0", "filename": "gcc/ada/krunch.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fkrunch.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fkrunch.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fkrunch.adb?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -130,7 +130,7 @@ begin\n      and then (B1 = 'a' or else B1 = 'g' or else B1 = 'i' or else B1 = 's')\n      and then Len <= Maxlen\n    then\n-      --  When VMS is the host, it is always also the target.\n+      --  When VMS is the host, it is always also the target\n \n       if Hostparm.OpenVMS or else VMS_On_Target then\n          Len := Len + 1;"}, {"sha": "a61bf07895f09feaf5fdc564436cefcaaf063e4c", "filename": "gcc/ada/makeusg.adb", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fmakeusg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fmakeusg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeusg.adb?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -203,17 +203,17 @@ begin\n \n    --  Line for -we\n \n-   Write_Str (\"  -we      treat all Warnings as Errors\");\n+   Write_Str (\"  -we      Treat all warnings as errors\");\n    Write_Eol;\n \n    --  Line for -wn\n \n-   Write_Str (\"  -wn      Normal Warning mode (cancels -we/-ws)\");\n+   Write_Str (\"  -wn      Normal warning mode (cancels -we/-ws)\");\n    Write_Eol;\n \n    --  Line for -ws\n \n-   Write_Str (\"  -ws      Suppress all Warnings\");\n+   Write_Str (\"  -ws      Suppress all warnings\");\n    Write_Eol;\n \n    --  Line for -x\n@@ -246,7 +246,12 @@ begin\n \n    --  Source and Library search path switches\n \n-   Write_Str (\"Source and Library search path switches:\");\n+   Write_Str (\"Project, Source and Library search path switches:\");\n+   Write_Eol;\n+\n+   --  Line for -aP\n+\n+   Write_Str (\"  -aPdir    Add directory dir to project search path\");\n    Write_Eol;\n \n    --  Line for -aL"}, {"sha": "294bbc101a360d98d1a1700c9c2a7bbcf142dc47", "filename": "gcc/ada/mdll-utl.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fmdll-utl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fmdll-utl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmdll-utl.adb?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -100,6 +100,7 @@ package body MDLL.Utl is\n       Bas_Opt    : aliased String := \"--base-file\";\n       Bas_V      : aliased String := Base_File;\n       No_Suf_Opt : aliased String := \"-k\";\n+\n    begin\n       Arguments (1 .. 4) := (1 => Def_Opt'Unchecked_Access,\n                              2 => Def_V'Unchecked_Access,\n@@ -141,7 +142,6 @@ package body MDLL.Utl is\n          Exceptions.Raise_Exception\n            (Tools_Error'Identity, Dlltool_Name & \" execution error.\");\n       end if;\n-\n    end Dlltool;\n \n    ---------\n@@ -286,7 +286,7 @@ package body MDLL.Utl is\n          --  Delete binder files\n          declare\n             Base_Name : constant String :=\n-              Directory_Operations.Base_Name (Ali, \".ali\");\n+                          Directory_Operations.Base_Name (Ali, \".ali\");\n          begin\n             OS_Lib.Delete_File (\"b~\" & Base_Name & \".ads\", Success);\n             OS_Lib.Delete_File (\"b~\" & Base_Name & \".adb\", Success);"}, {"sha": "bab2637150e7b158f20f0dfbf07ec81e3eff1ff3", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -602,8 +602,8 @@ package body Ch5 is\n                         Statement_Required := False;\n \n                      --  A slash following an identifier or a selected\n-                     --  component in this situation is most likely a\n-                     --  period (have a look at the keyboard :-)\n+                     --  component in this situation is most likely a period\n+                     --  (see location of keys on keyboard).\n \n                      elsif Token = Tok_Slash\n                        and then (Nkind (Name_Node) = N_Identifier"}, {"sha": "a87d6a09f9a5bd2a41f322848815e6f4627fe2df", "filename": "gcc/ada/par-tchk.adb", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fpar-tchk.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fpar-tchk.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-tchk.adb?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -417,26 +417,25 @@ package body Tchk is\n          return;\n \n       --  An interesting little kludge here. If the previous token is a\n-      --  semicolon, then there is no way that we can legitimately need\n-      --  another semicolon. This could only arise in an error situation\n-      --  where an error has already been signalled. By simply ignoring\n-      --  the request for a semicolon in this case, we avoid some spurious\n-      --  missing semicolon messages.\n+      --  semicolon, then there is no way that we can legitimately need another\n+      --  semicolon. This could only arise in an error situation where an error\n+      --  has already been signalled. By simply ignoring the request for a\n+      --  semicolon in this case, we avoid some spurious missing semicolon\n+      --  messages.\n \n       elsif Prev_Token = Tok_Semicolon then\n          return;\n \n-      --  If the current token is | then this is a reasonable\n-      --  place to suggest the possibility of a \"C\" confusion :-)\n+      --  If the current token is | then this is a reasonable place to suggest\n+      --  the possibility of a \"C\" confusion.\n \n       elsif Token = Tok_Vertical_Bar then\n          Error_Msg_SC (\"unexpected occurrence of \"\"'|\"\", did you mean OR'?\");\n          Resync_Past_Semicolon;\n          return;\n \n-      --  Deal with pragma. If pragma is not at start of line, it is\n-      --  considered misplaced otherwise we treat it as a normal\n-      --  missing semicolong case.\n+      --  Deal with pragma. If pragma is not at start of line, it is considered\n+      --  misplaced otherwise we treat it as a normal missing semicolong case.\n \n       elsif Token = Tok_Pragma\n         and then not Token_Is_At_Start_Of_Line"}, {"sha": "f33d8addd259003d117311fbb9abb8d2832d226f", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -184,7 +184,7 @@ is\n    --   of such a nested region. Again, like case 2, this causes us to miss\n    --   some nested cases, but it doesn't seen worth the effort to stack and\n    --   unstack the SIS information. Maybe we will reconsider this if we ever\n-   --   get a complaint about a missed case :-)\n+   --   get a complaint about a missed case.\n \n    --   4. We encounter a valid pragma INTERFACE or IMPORT that effectively\n    --   supplies the missing body. In this case we reset the entry."}, {"sha": "8123e6ca18150007e2d615d1250d732a1da05cf7", "filename": "gcc/ada/s-assert.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fs-assert.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fs-assert.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-assert.adb?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,6 +32,7 @@\n ------------------------------------------------------------------------------\n \n with Ada.Exceptions;\n+with System.Exceptions;\n \n package body System.Assertions is\n \n@@ -41,6 +42,7 @@ package body System.Assertions is\n \n    procedure Raise_Assert_Failure (Msg : String) is\n    begin\n+      System.Exceptions.Debug_Raise_Assert_Failure;\n       Ada.Exceptions.Raise_Exception (Assert_Failure'Identity, Msg);\n    end Raise_Assert_Failure;\n "}, {"sha": "db0f392f19e6628f86a7cf044e697b8fe5fdc6e9", "filename": "gcc/ada/s-exctab.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fs-exctab.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fs-exctab.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-exctab.ads?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1996-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1996-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,14 +62,14 @@ package System.Exception_Table is\n    --  does not exist yet, null is returned.\n \n    function Registered_Exceptions_Count return Natural;\n-   --  Return the number of currently registered exceptions.\n+   --  Return the number of currently registered exceptions\n \n    type Exception_Data_Array is array (Natural range <>)\n      of SSL.Exception_Data_Ptr;\n \n    procedure Get_Registered_Exceptions\n      (List : out Exception_Data_Array;\n       Last : out Integer);\n-   --  Return the list of registered exceptions.\n+   --  Return the list of registered exceptions\n \n end System.Exception_Table;"}, {"sha": "87b28ace46c3031ffa4842e084e0bc8d852ef89a", "filename": "gcc/ada/s-memory.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fs-memory.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fs-memory.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-memory.ads?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2001-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -75,8 +75,7 @@ package System.Memory is\n \n    function Realloc\n      (Ptr  : System.Address;\n-      Size : size_t)\n-      return System.Address;\n+      Size : size_t) return System.Address;\n    --  This is the low level reallocation routine. It takes an existing\n    --  block address returned by a previous call to Alloc or Realloc,\n    --  and reallocates the block. The size can either be increased or"}, {"sha": "6259c8a12d04790ec2280c701c55447f5e540c1c", "filename": "gcc/ada/s-osprim.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fs-osprim.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fs-osprim.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim.ads?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1998-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -47,7 +47,7 @@ package System.OS_Primitives is\n                                         Duration'Last);\n    --  Max of half a year delay, needed to prevent exceptions for large delay\n    --  values. It seems unlikely that any test will notice this restriction,\n-   --  except in the case of applications setting the clock at at run time (see\n+   --  except in the case of applications setting the clock at run time (see\n    --  s-tastim.adb). Also note that a larger value might cause problems (e.g\n    --  overflow, or more likely OS limitation in the primitives used). In the\n    --  case where half a year is too long (which occurs in high integrity mode"}, {"sha": "f1909e3cc5c177bc607da78216f368cdca98fbb4", "filename": "gcc/ada/s-restri.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fs-restri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fs-restri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-restri.ads?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -44,6 +44,7 @@ with System.Rident;\n \n package System.Restrictions is\n    pragma Preelaborate;\n+\n    pragma Discard_Names;\n    package Rident is new System.Rident;\n "}, {"sha": "bc78052904e84d372a6d39e334f928e21c910467", "filename": "gcc/ada/s-soflin.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fs-soflin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fs-soflin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-soflin.ads?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -52,8 +52,7 @@ package System.Soft_Links is\n \n    function Current_Target_Exception return EO;\n    pragma Import\n-     (Ada, Current_Target_Exception,\n-      \"__gnat_current_target_exception\");\n+     (Ada, Current_Target_Exception, \"__gnat_current_target_exception\");\n    --  Import this subprogram from the private part of Ada.Exceptions\n \n    --  First we have the access subprogram types used to establish the links."}, {"sha": "8207469a4d73404332dc14e4017e1ace3bebbf8b", "filename": "gcc/ada/s-unstyp.ads", "status": "modified", "additions": 38, "deletions": 63, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fs-unstyp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fs-unstyp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-unstyp.ads?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -63,24 +63,24 @@ package System.Unsigned_Types is\n    --  for details.\n \n    type Packed_Bytes2 is new Packed_Bytes1;\n-   for Packed_Bytes2'Alignment use 2;\n+   for Packed_Bytes2'Alignment use Integer'Min (2, Standard'Maximum_Alignment);\n    --  This is the type used to implement packed arrays where an alignment\n-   --  of 2 is helpful for maximum efficiency of the get and set routines\n-   --  in the corresponding library unit. This is true of all component\n-   --  sizes that are even but not divisible by 4 (other than 2 for which\n-   --  we use direct masking operations). In such cases, the clusters can\n-   --  be assumed to be 2-byte aligned if the array is aligned. See for\n+   --  of 2 (is possible) is helpful for maximum efficiency of the get and\n+   --  set routines in the corresponding library unit. This is true of all\n+   --  component sizes that are even but not divisible by 4 (other than 2 for\n+   --  which we use direct masking operations). In such cases, the clusters\n+   --  can be assumed to be 2-byte aligned if the array is aligned. See for\n    --  example System.Pack_10 in file s-pack10).\n \n    type Packed_Bytes4 is new Packed_Bytes1;\n    for Packed_Bytes4'Alignment use Integer'Min (4, Standard'Maximum_Alignment);\n    --  This is the type used to implement packed arrays where an alignment\n-   --  of 4 is helpful for maximum efficiency of the get and set routines\n-   --  in the corresponding library unit. This is true of all component\n-   --  sizes that are divisible by 4 (other than powers of 2, which are\n-   --  either handled by direct masking or not packed at all). In such cases\n-   --  the clusters can be assumed to be 4-byte aligned if the array is\n-   --  aligned (see System.Pack_12 in file s-pack12 as an example).\n+   --  of 4 (if possible) is helpful for maximum efficiency of the get and\n+   --  set routines in the corresponding library unit. This is true of all\n+   --  component sizes that are divisible by 4 (other than powers of 2, which\n+   --  are either handled by direct masking or not packed at all). In such\n+   --  cases the clusters can be assumed to be 4-byte aligned if the array\n+   --  is aligned (see System.Pack_12 in file s-pack12 as an example).\n \n    type Bits_1 is mod 2**1;\n    type Bits_2 is mod 2**2;\n@@ -92,128 +92,103 @@ package System.Unsigned_Types is\n \n    function Shift_Left\n      (Value  : Short_Short_Unsigned;\n-      Amount : Natural)\n-      return   Short_Short_Unsigned;\n+      Amount : Natural) return Short_Short_Unsigned;\n \n    function Shift_Right\n      (Value  : Short_Short_Unsigned;\n-      Amount : Natural)\n-      return   Short_Short_Unsigned;\n+      Amount : Natural) return Short_Short_Unsigned;\n \n    function Shift_Right_Arithmetic\n      (Value  : Short_Short_Unsigned;\n-      Amount : Natural)\n-      return   Short_Short_Unsigned;\n+      Amount : Natural) return Short_Short_Unsigned;\n \n    function Rotate_Left\n      (Value  : Short_Short_Unsigned;\n-      Amount : Natural)\n-      return   Short_Short_Unsigned;\n+      Amount : Natural) return Short_Short_Unsigned;\n \n    function Rotate_Right\n      (Value  : Short_Short_Unsigned;\n-      Amount : Natural)\n-      return   Short_Short_Unsigned;\n+      Amount : Natural) return Short_Short_Unsigned;\n \n    function Shift_Left\n      (Value  : Short_Unsigned;\n-      Amount : Natural)\n-      return   Short_Unsigned;\n+      Amount : Natural) return Short_Unsigned;\n \n    function Shift_Right\n      (Value  : Short_Unsigned;\n-      Amount : Natural)\n-      return   Short_Unsigned;\n+      Amount : Natural) return Short_Unsigned;\n \n    function Shift_Right_Arithmetic\n      (Value  : Short_Unsigned;\n-      Amount : Natural)\n-      return   Short_Unsigned;\n+      Amount : Natural) return Short_Unsigned;\n \n    function Rotate_Left\n      (Value  : Short_Unsigned;\n-      Amount : Natural)\n-      return   Short_Unsigned;\n+      Amount : Natural) return Short_Unsigned;\n \n    function Rotate_Right\n      (Value  : Short_Unsigned;\n-      Amount : Natural)\n-      return   Short_Unsigned;\n+      Amount : Natural) return Short_Unsigned;\n \n    function Shift_Left\n      (Value  : Unsigned;\n-      Amount : Natural)\n-     return    Unsigned;\n+      Amount : Natural) return Unsigned;\n \n    function Shift_Right\n      (Value  : Unsigned;\n-      Amount : Natural)\n-      return   Unsigned;\n+      Amount : Natural) return Unsigned;\n \n    function Shift_Right_Arithmetic\n      (Value  : Unsigned;\n-      Amount : Natural)\n-      return   Unsigned;\n+      Amount : Natural) return Unsigned;\n \n    function Rotate_Left\n      (Value  : Unsigned;\n-      Amount : Natural)\n-      return   Unsigned;\n+      Amount : Natural) return Unsigned;\n \n    function Rotate_Right\n      (Value  : Unsigned;\n-      Amount : Natural)\n-      return   Unsigned;\n+      Amount : Natural) return Unsigned;\n \n    function Shift_Left\n      (Value  : Long_Unsigned;\n-      Amount : Natural)\n-     return    Long_Unsigned;\n+      Amount : Natural) return Long_Unsigned;\n \n    function Shift_Right\n      (Value  : Long_Unsigned;\n-      Amount : Natural)\n-      return   Long_Unsigned;\n+      Amount : Natural) return Long_Unsigned;\n \n    function Shift_Right_Arithmetic\n      (Value  : Long_Unsigned;\n-      Amount : Natural)\n-      return   Long_Unsigned;\n+      Amount : Natural) return Long_Unsigned;\n \n    function Rotate_Left\n      (Value  : Long_Unsigned;\n-      Amount : Natural)\n-      return   Long_Unsigned;\n+      Amount : Natural) return Long_Unsigned;\n \n    function Rotate_Right\n      (Value  : Long_Unsigned;\n-      Amount : Natural)\n-      return   Long_Unsigned;\n+      Amount : Natural) return Long_Unsigned;\n \n    function Shift_Left\n      (Value  : Long_Long_Unsigned;\n-      Amount : Natural)\n-     return    Long_Long_Unsigned;\n+      Amount : Natural) return Long_Long_Unsigned;\n \n    function Shift_Right\n      (Value  : Long_Long_Unsigned;\n-      Amount : Natural)\n-      return   Long_Long_Unsigned;\n+      Amount : Natural) return Long_Long_Unsigned;\n \n    function Shift_Right_Arithmetic\n      (Value  : Long_Long_Unsigned;\n-      Amount : Natural)\n-      return   Long_Long_Unsigned;\n+      Amount : Natural) return Long_Long_Unsigned;\n \n    function Rotate_Left\n      (Value  : Long_Long_Unsigned;\n-      Amount : Natural)\n-      return   Long_Long_Unsigned;\n+      Amount : Natural) return Long_Long_Unsigned;\n \n    function Rotate_Right\n      (Value  : Long_Long_Unsigned;\n-      Amount : Natural)\n-      return   Long_Long_Unsigned;\n+      Amount : Natural) return Long_Long_Unsigned;\n \n    pragma Import (Intrinsic, Shift_Left);\n    pragma Import (Intrinsic, Shift_Right);"}, {"sha": "e18d22da3d07a1d01d15b661c7007d9efdfe2a7b", "filename": "gcc/ada/s-wchjis.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fs-wchjis.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fs-wchjis.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchjis.adb?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -31,8 +31,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with System.Pure_Exceptions; use System.Pure_Exceptions;\n-\n package body System.WCh_JIS is\n \n    type Byte is mod 256;\n@@ -86,7 +84,7 @@ package body System.WCh_JIS is\n          --  bit is set in both bytes.\n \n          if JIS2 < 16#80# then\n-            Raise_Exception (CE, \"invalid small Katakana character\");\n+            raise Constraint_Error;\n          end if;\n \n          EUC1 := Character'Val (EUC_Hankaku_Kana);\n@@ -96,7 +94,7 @@ package body System.WCh_JIS is\n       --  a valid character for representation in EUC form.\n \n       elsif JIS1 > 16#7F# or else JIS2 > 16#7F# then\n-         Raise_Exception (CE, \"wide character value out of EUC range\");\n+         raise Constraint_Error;\n \n       --  Result is just the two characters with upper bits set\n "}, {"sha": "6e3f834438ba3cfe53b6cce540ba826d5ac11efe", "filename": "gcc/ada/sem_ch8.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fsem_ch8.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Fsem_ch8.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.ads?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -122,7 +122,7 @@ package Sem_Ch8 is\n    --  S is the entity of a scope. This function determines if this scope\n    --  is currently open (i.e. it appears somewhere in the scope stack).\n \n-   procedure New_Scope (S : Entity_Id);\n+   procedure Push_Scope (S : Entity_Id);\n    --  Make new scope stack entry, pushing S, the entity for a scope\n    --  onto the top of the scope table. The current setting of the scope\n    --  suppress flags is saved for restoration on exit."}, {"sha": "040fa9e5611f652aefdc1945eb5e9c4f0bbbbd12", "filename": "gcc/ada/tbuild.adb", "status": "modified", "additions": 27, "deletions": 5, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Ftbuild.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Ftbuild.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftbuild.adb?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.        --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -28,9 +28,9 @@ with Atree;    use Atree;\n with Einfo;    use Einfo;\n with Elists;   use Elists;\n with Lib;      use Lib;\n-with Namet;    use Namet;\n with Nlists;   use Nlists;\n with Nmake;    use Nmake;\n+with Opt;      use Opt;\n with Restrict; use Restrict;\n with Rident;   use Rident;\n with Sinfo;    use Sinfo;\n@@ -209,10 +209,32 @@ package body Tbuild is\n       Exception_Choices : List_Id;\n       Statements        : List_Id) return Node_Id\n    is\n-      Handler : constant Node_Id :=\n-                  Make_Exception_Handler\n-                    (Sloc, Choice_Parameter, Exception_Choices, Statements);\n+      Handler : Node_Id;\n+      Loc     : Source_Ptr;\n+\n    begin\n+      --  Set the source location only when debugging the expanded code\n+\n+      --  When debugging the source code directly, we do not want the compiler\n+      --  to associate this implicit exception handler with any specific source\n+      --  line, because it can potentially confuse the debugger. The most\n+      --  damaging situation would arise when the debugger tries to insert a\n+      --  breakpoint at a certain line. If the code of the associated implicit\n+      --  exception handler is generated before the code of that line, then the\n+      --  debugger will end up inserting the breakpoint inside the exception\n+      --  handler, rather than the code the user intended to break on. As a\n+      --  result, it is likely that the program will not hit the breakpoint\n+      --  as expected.\n+\n+      if Debug_Generated_Code then\n+         Loc := Sloc;\n+      else\n+         Loc := No_Location;\n+      end if;\n+\n+      Handler :=\n+        Make_Exception_Handler\n+          (Loc, Choice_Parameter, Exception_Choices, Statements);\n       Set_Local_Raise_Statements (Handler, No_Elist);\n       return Handler;\n    end Make_Implicit_Exception_Handler;"}, {"sha": "171e5a00815fd8df2d5bc779d9ac5bf545700a3f", "filename": "gcc/ada/tbuild.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Ftbuild.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Ftbuild.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftbuild.ads?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -27,6 +27,7 @@\n --  This package contains various utility procedures to assist in\n --  building specific types of tree nodes.\n \n+with Namet; use Namet;\n with Types; use Types;\n \n package Tbuild is"}, {"sha": "b62fb8e2bb2aceef1e3b1ba09a9ce34d55c3486b", "filename": "gcc/ada/tree_io.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Ftree_io.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Ftree_io.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftree_io.adb?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -448,6 +448,10 @@ package body Tree_IO is\n       procedure Write_Non_Compressed_Sequence;\n       --  Output currently collected sequence of non-compressible data\n \n+      -----------------------------------\n+      -- Write_Non_Compressed_Sequence --\n+      -----------------------------------\n+\n       procedure Write_Non_Compressed_Sequence is\n       begin\n          if NC > 0 then"}, {"sha": "7b1268d8c60a3cbe281c8c2996218596fbbda26b", "filename": "gcc/ada/treepr.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Ftreepr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a99ada67cfc0517c1c827743bedbe11c24a64074/gcc%2Fada%2Ftreepr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftreepr.adb?ref=a99ada67cfc0517c1c827743bedbe11c24a64074", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1004,9 +1004,7 @@ package body Treepr is\n          --  Print Etype field if present (printing of this field for entities\n          --  is handled by the Print_Entity_Info procedure).\n \n-         if Nkind (N) in N_Has_Etype\n-           and then Present (Etype (N))\n-         then\n+         if Nkind (N) in N_Has_Etype and then Present (Etype (N)) then\n             Print_Str (Prefix_Str_Char);\n             Print_Str (\"Etype = \");\n             Print_Node_Ref (Etype (N));"}]}