{"sha": "9ccaac1188959d2b35cfa820c46277ebef5f75e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNjYWFjMTE4ODk1OWQyYjM1Y2ZhODIwYzQ2Mjc3ZWJlZjVmNzVlMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-10-28T11:42:43Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-10-28T11:42:43Z"}, "message": "re PR tree-optimization/63665 (wrong code with signed overflow even with -fwrapv)\n\n2014-10-28  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/63665\n\t* fold-const.c (fold_comparison): Properly guard simplifying\n\tagainst INT_MAX/INT_MIN with !TYPE_OVERFLOW_WRAPS.\n\n\t* gcc.dg/pr63665.c: New testcase.\n\nFrom-SVN: r216781", "tree": {"sha": "dfad2841958e84ccd1eaf6859b533ff386a916aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfad2841958e84ccd1eaf6859b533ff386a916aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ccaac1188959d2b35cfa820c46277ebef5f75e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ccaac1188959d2b35cfa820c46277ebef5f75e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ccaac1188959d2b35cfa820c46277ebef5f75e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ccaac1188959d2b35cfa820c46277ebef5f75e0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e29dfbf07d93e89e92d8b95bef247fc95a8024ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e29dfbf07d93e89e92d8b95bef247fc95a8024ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e29dfbf07d93e89e92d8b95bef247fc95a8024ef"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "1f3a0fb007040d6636f924ccace58d72df3d66bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccaac1188959d2b35cfa820c46277ebef5f75e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccaac1188959d2b35cfa820c46277ebef5f75e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ccaac1188959d2b35cfa820c46277ebef5f75e0", "patch": "@@ -1,3 +1,9 @@\n+2014-10-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/63665\n+\t* fold-const.c (fold_comparison): Properly guard simplifying\n+\tagainst INT_MAX/INT_MIN with !TYPE_OVERFLOW_WRAPS.\n+\n 2014-10-28  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* expr.c (expand_expr_real_2): Remove code handling VEC_LSHIFT_EXPR."}, {"sha": "218afa01ab4b9a834d074faa389b9b63963c84fc", "filename": "gcc/fold-const.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccaac1188959d2b35cfa820c46277ebef5f75e0/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccaac1188959d2b35cfa820c46277ebef5f75e0/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=9ccaac1188959d2b35cfa820c46277ebef5f75e0", "patch": "@@ -8749,7 +8749,8 @@ fold_comparison (location_t loc, enum tree_code code, tree type,\n \n       /* If the constant operation overflowed this can be\n \t simplified as a comparison against INT_MAX/INT_MIN.  */\n-      if (TREE_OVERFLOW (new_const))\n+      if (TREE_OVERFLOW (new_const)\n+\t  && !TYPE_OVERFLOW_WRAPS (TREE_TYPE (arg0)))\n \t{\n \t  int const1_sgn = tree_int_cst_sgn (const1);\n \t  enum tree_code code2 = code;"}, {"sha": "d08d102fa0393f0e692dd616f552903c65b0b989", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccaac1188959d2b35cfa820c46277ebef5f75e0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccaac1188959d2b35cfa820c46277ebef5f75e0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9ccaac1188959d2b35cfa820c46277ebef5f75e0", "patch": "@@ -1,3 +1,8 @@\n+2014-10-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/63665\n+\t* gcc.dg/pr63665.c: New testcase.\n+\n 2014-10-28  Yury Gribov  <y.gribov@samsung.com>\n \n \t* c-c++-common/asan/kasan-recover-1.c: New test."}, {"sha": "046ecae7c1d12d776477c301b4b24109e069477c", "filename": "gcc/testsuite/gcc.dg/pr63665.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccaac1188959d2b35cfa820c46277ebef5f75e0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr63665.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccaac1188959d2b35cfa820c46277ebef5f75e0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr63665.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr63665.c?ref=9ccaac1188959d2b35cfa820c46277ebef5f75e0", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target int32plus } */\n+/* { dg-options \"-O -fno-tree-ccp -fno-tree-fre -fno-tree-copy-prop -fwrapv\" } */\n+\n+static inline int\n+test5 (int x)\n+{\n+  int y = 0x80000000;\n+  return x + y;\n+}\n+\n+int\n+main ()\n+{\n+  if (test5 (0x80000000) != 0)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}