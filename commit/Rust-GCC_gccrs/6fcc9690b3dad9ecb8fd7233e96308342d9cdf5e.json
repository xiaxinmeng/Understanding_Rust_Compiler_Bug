{"sha": "6fcc9690b3dad9ecb8fd7233e96308342d9cdf5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZjYzk2OTBiM2RhZDllY2I4ZmQ3MjMzZTk2MzA4MzQyZDljZGY1ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1994-04-20T18:12:36Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1994-04-20T18:12:36Z"}, "message": "(expand_expr): Don't force ignore when expanding the subexpression of a WITH_CLEANUP_EXPR.\n\n (expand_expr): Don't force ignore when expanding the\n        subexpression of a WITH_CLEANUP_EXPR.  Don't check ignore when\n        deciding whether or not to expand the cleanup for a TARGET_EXPR.\n\nFrom-SVN: r7100", "tree": {"sha": "c278c11b98e8d0fbdbbb5f0b5ca9ba37d4c03129", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c278c11b98e8d0fbdbbb5f0b5ca9ba37d4c03129"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fcc9690b3dad9ecb8fd7233e96308342d9cdf5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fcc9690b3dad9ecb8fd7233e96308342d9cdf5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fcc9690b3dad9ecb8fd7233e96308342d9cdf5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fcc9690b3dad9ecb8fd7233e96308342d9cdf5e/comments", "author": null, "committer": null, "parents": [{"sha": "c8fc4697544088331ea429b51ac31d6777be387e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8fc4697544088331ea429b51ac31d6777be387e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8fc4697544088331ea429b51ac31d6777be387e"}], "stats": {"total": 12, "additions": 3, "deletions": 9}, "files": [{"sha": "f7c4b8a5b2856a41c8db6a6bfffe761a89521cf2", "filename": "gcc/expr.c", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fcc9690b3dad9ecb8fd7233e96308342d9cdf5e/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fcc9690b3dad9ecb8fd7233e96308342d9cdf5e/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=6fcc9690b3dad9ecb8fd7233e96308342d9cdf5e", "patch": "@@ -4588,9 +4588,7 @@ expand_expr (exp, target, tmode, modifier)\n       if (RTL_EXPR_RTL (exp) == 0)\n \t{\n \t  RTL_EXPR_RTL (exp)\n-\t    = expand_expr (TREE_OPERAND (exp, 0),\n-\t\t\t   target ? target : const0_rtx,\n-\t\t\t   tmode, modifier);\n+\t    = expand_expr (TREE_OPERAND (exp, 0), target, tmode, modifier);\n \t  cleanups_this_call\n \t    = tree_cons (NULL_TREE, TREE_OPERAND (exp, 2), cleanups_this_call);\n \t  /* That's it for this cleanup.  */\n@@ -5602,12 +5600,7 @@ expand_expr (exp, target, tmode, modifier)\n \t\t/* All temp slots at this level must not conflict.  */\n \t\tpreserve_temp_slots (target);\n \t\tDECL_RTL (slot) = target;\n-\t      }\n \n-\t    /* We set IGNORE when we know that we're already\n-\t       doing this for a cleanup.  */\n-\t    if (ignore == 0)\n-\t      {\n \t\t/* Since SLOT is not known to the called function\n \t\t   to belong to its stack frame, we must build an explicit\n \t\t   cleanup.  This case occurs when we must build up a reference\n@@ -5618,7 +5611,8 @@ expand_expr (exp, target, tmode, modifier)\n \t\tif (TREE_OPERAND (exp, 2) == 0)\n \t\t  TREE_OPERAND (exp, 2) = maybe_build_cleanup (slot);\n \t\tif (TREE_OPERAND (exp, 2))\n-\t\t  cleanups_this_call = tree_cons (NULL_TREE, TREE_OPERAND (exp, 2),\n+\t\t  cleanups_this_call = tree_cons (NULL_TREE,\n+\t\t\t\t\t\t  TREE_OPERAND (exp, 2),\n \t\t\t\t\t\t  cleanups_this_call);\n \t      }\n \t  }"}]}