{"sha": "721de8363b9ab36eaf7a7cecc341d04871f3d57a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIxZGU4MzYzYjlhYjM2ZWFmN2E3Y2VjYzM0MWQwNDg3MWYzZDU3YQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2000-11-10T16:29:34Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-11-10T16:29:34Z"}, "message": "* c-dump.h: New file.\n\nFrom-SVN: r37368", "tree": {"sha": "1cf026a0e8877c427bccb133ca69d6b0e09c1a79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cf026a0e8877c427bccb133ca69d6b0e09c1a79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/721de8363b9ab36eaf7a7cecc341d04871f3d57a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/721de8363b9ab36eaf7a7cecc341d04871f3d57a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/721de8363b9ab36eaf7a7cecc341d04871f3d57a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/721de8363b9ab36eaf7a7cecc341d04871f3d57a/comments", "author": null, "committer": null, "parents": [{"sha": "4e135bdd14d2035632e78008730027c4ef82aa7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e135bdd14d2035632e78008730027c4ef82aa7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e135bdd14d2035632e78008730027c4ef82aa7a"}], "stats": {"total": 88, "additions": 88, "deletions": 0}, "files": [{"sha": "5cc14f3d28b5229a3437c88c7afe05f520c75f50", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/721de8363b9ab36eaf7a7cecc341d04871f3d57a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/721de8363b9ab36eaf7a7cecc341d04871f3d57a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=721de8363b9ab36eaf7a7cecc341d04871f3d57a", "patch": "@@ -1,3 +1,7 @@\n+2000-11-10  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* c-dump.h: New file.\n+\n 2000-11-10  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* alpha.c (check_float_value): Use memcpy, not bcopy."}, {"sha": "bb246ceea47a6f224fa9417404fbd2c4875aacb7", "filename": "gcc/c-dump.h", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/721de8363b9ab36eaf7a7cecc341d04871f3d57a/gcc%2Fc-dump.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/721de8363b9ab36eaf7a7cecc341d04871f3d57a/gcc%2Fc-dump.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-dump.h?ref=721de8363b9ab36eaf7a7cecc341d04871f3d57a", "patch": "@@ -0,0 +1,84 @@\n+/* Tree-dumping functionality for intermediate representation.\n+   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+   Written by Mark Mitchell <mark@codesourcery.com>\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* Flags used with queue functions.  */\n+#define DUMP_NONE     0\n+#define DUMP_BINFO    1\n+\n+/* Information about a node to be dumped.  */\n+\n+typedef struct dump_node_info\n+{\n+  /* The index for the node.  */\n+  unsigned int index;\n+  /* Nonzero if the node is a binfo.  */\n+  unsigned int binfo_p : 1;\n+} *dump_node_info_p;\n+\n+/* A dump_queue is a link in the queue of things to be dumped.  */\n+\n+typedef struct dump_queue\n+{\n+  /* The queued tree node.  */\n+  splay_tree_node node;\n+  /* The next node in the queue.  */\n+  struct dump_queue *next;\n+} *dump_queue_p;\n+\n+/* A dump_info gives information about how we should perform the dump \n+   and about the current state of the dump.  */\n+\n+struct dump_info\n+{\n+  /* The stream on which to dump the information.  */\n+  FILE *stream;\n+  /* The next unused node index.  */\n+  unsigned int index;\n+  /* The next column.  */\n+  unsigned int column;\n+  /* The first node in the queue of nodes to be written out.  */\n+  dump_queue_p queue;\n+  /* The last node in the queue.  */\n+  dump_queue_p queue_end;\n+  /* Free queue nodes.  */\n+  dump_queue_p free_list;\n+  /* The tree nodes which we have already written out.  The \n+     keys are the addresses of the nodes; the values are the integer\n+     indices we assigned them.  */\n+  splay_tree nodes;\n+};\n+\n+/* Dump the CHILD and its children.  */\n+#define dump_child(field, child) \\\n+  queue_and_dump_index (di, field, child, DUMP_NONE)\n+\n+extern void dump_int \n+  PARAMS ((dump_info_p, const char *, int));\n+extern void dump_string \n+  PARAMS ((dump_info_p, const char *));\n+extern void dump_stmt \n+  PARAMS ((dump_info_p, tree));\n+extern void dump_next_stmt \n+  PARAMS ((dump_info_p, tree));\n+extern void queue_and_dump_index \n+  PARAMS ((dump_info_p, const char *, tree, int));\n+extern void queue_and_dump_type \n+  PARAMS ((dump_info_p, tree));"}]}