{"sha": "839c480a14f025bdcd73a53d14a19d4cc9a1aea5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM5YzQ4MGExNGYwMjViZGNkNzNhNTNkMTRhMTlkNGNjOWExYWVhNQ==", "commit": {"author": {"name": "Kelvin Nilsen", "email": "kelvin@gcc.gnu.org", "date": "2019-05-06T17:00:46Z"}, "committer": {"name": "Kelvin Nilsen", "email": "kelvin@gcc.gnu.org", "date": "2019-05-06T17:00:46Z"}, "message": "re PR target/89424 (__builtin_vec_ext_v1ti (v, i) results in ICE with variable i (RS6000))\n\ngcc/ChangeLog:\n\n2019-05-06  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n\n\tPR target/89424\n\t* config/rs6000/rs6000.c (rs6000_expand_vector_extract): Add\n\thandling of V1TImode.\n\ngcc/testsuite/ChangeLog:\n\n2019-05-06  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n\n\tPR target/89424\n\t* gcc.target/powerpc/pr89424-0.c: New test.\n\t* gcc.target/powerpc/vsx-builtin-13a.c: Define macro PR89424 to\n\tenable testing of newly patched capability.\n\t* gcc.target/powerpc/vsx-builtin-13b.c: Likewise.\n\t* gcc.target/powerpc/vsx-builtin-20a.c: Likewise.\n\t* gcc.target/powerpc/vsx-builtin-20b.c: Likewise.\n\nFrom-SVN: r270918", "tree": {"sha": "f60e8ccbf8b59671654f0f6083f63cea83dcf17e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f60e8ccbf8b59671654f0f6083f63cea83dcf17e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/839c480a14f025bdcd73a53d14a19d4cc9a1aea5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/839c480a14f025bdcd73a53d14a19d4cc9a1aea5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/839c480a14f025bdcd73a53d14a19d4cc9a1aea5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/839c480a14f025bdcd73a53d14a19d4cc9a1aea5/comments", "author": null, "committer": null, "parents": [{"sha": "cd0a831ce6d6fe9ff14959b0602ad7deed6d2785", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd0a831ce6d6fe9ff14959b0602ad7deed6d2785", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd0a831ce6d6fe9ff14959b0602ad7deed6d2785"}], "stats": {"total": 104, "additions": 100, "deletions": 4}, "files": [{"sha": "0422740c56b3b5276b119654fb950c671afb511c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/839c480a14f025bdcd73a53d14a19d4cc9a1aea5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/839c480a14f025bdcd73a53d14a19d4cc9a1aea5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=839c480a14f025bdcd73a53d14a19d4cc9a1aea5", "patch": "@@ -1,3 +1,9 @@\n+2019-05-06  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n+\n+\tPR target/89424\n+\t* config/rs6000/rs6000.c (rs6000_expand_vector_extract): Add\n+\thandling of V1TImode.\n+\n 2019-05-06  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \tPR target/89221"}, {"sha": "23db1302715d5e961e7cff592d6b54f72feab9d5", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/839c480a14f025bdcd73a53d14a19d4cc9a1aea5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/839c480a14f025bdcd73a53d14a19d4cc9a1aea5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=839c480a14f025bdcd73a53d14a19d4cc9a1aea5", "patch": "@@ -6944,6 +6944,10 @@ rs6000_expand_vector_extract (rtx target, rtx vec, rtx elt)\n \n       switch (mode)\n \t{\n+\tcase E_V1TImode:\n+\t  emit_move_insn (target, gen_lowpart (TImode, vec));\n+\t  return;\n+\n \tcase E_V2DFmode:\n \t  emit_insn (gen_vsx_extract_v2df_var (target, vec, elt));\n \t  return;"}, {"sha": "d1329c69786fc36c8c347690fdc2911372ad552c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/839c480a14f025bdcd73a53d14a19d4cc9a1aea5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/839c480a14f025bdcd73a53d14a19d4cc9a1aea5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=839c480a14f025bdcd73a53d14a19d4cc9a1aea5", "patch": "@@ -1,3 +1,13 @@\n+2019-05-06  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n+\n+\tPR target/89424\n+\t* gcc.target/powerpc/pr89424-0.c: New test.\n+\t* gcc.target/powerpc/vsx-builtin-13a.c: Define macro PR89424 to\n+\tenable testing of newly patched capability.\n+\t* gcc.target/powerpc/vsx-builtin-13b.c: Likewise.\n+\t* gcc.target/powerpc/vsx-builtin-20a.c: Likewise.\n+\t* gcc.target/powerpc/vsx-builtin-20b.c: Likewise.\n+\n 2019-05-06  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/90265 - ICE with generic lambda."}, {"sha": "301cf90ce5f53bdb83879da93fce4d4ad99eeb88", "filename": "gcc/testsuite/gcc.target/powerpc/pr89424-0.c", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/839c480a14f025bdcd73a53d14a19d4cc9a1aea5/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr89424-0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/839c480a14f025bdcd73a53d14a19d4cc9a1aea5/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr89424-0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr89424-0.c?ref=839c480a14f025bdcd73a53d14a19d4cc9a1aea5", "patch": "@@ -0,0 +1,76 @@\n+/* { dg-do run { target { powerpc*-*-* && lp64 } } } */\n+/* { dg-require-effective-target vsx_hw } */\n+/* { dg-options \"-mvsx\" } */\n+\n+/* This test should run the same on any target that supports vsx\n+   instructions.  Intentionally not specifying cpu in order to test\n+   all code generation paths.  */\n+\n+#include <altivec.h>\n+\n+extern void abort (void);\n+\n+/* Define PR89626 after that pr is addressed.  */\n+#ifdef PR89626\n+#define SIGNED\n+#else\n+#define SIGNED signed\n+#endif\n+\n+#define CONST0\t\t(((__int128) 31415926539) << 60)\n+\n+/* Test that indices > length of vector are applied modulo the vector\n+   length.  */\n+\n+\n+/* Test for variable selector and vector residing in register.  */\n+__attribute__((noinline))\n+__int128 ei (vector SIGNED __int128 v, int i)\n+{\n+  return __builtin_vec_ext_v1ti (v, i);\n+}\n+\n+/* Test for variable selector and vector residing in memory.  */\n+__int128 mei (vector SIGNED __int128 *vp, int i)\n+{\n+  return __builtin_vec_ext_v1ti (*vp, i);\n+}\n+\n+int main (int argc, char *argv[]) {\n+  vector SIGNED __int128 dv = { CONST0 };\n+  __int128 d;\n+\n+  d = ei (dv, 0);\n+  if (d != CONST0)\n+    abort ();\n+\n+  d = ei (dv, 1);\n+  if (d != CONST0)\n+    abort ();\n+\n+  d = ei (dv, 2);\n+  if (d != CONST0)\n+    abort ();\n+\n+  d = ei (dv, 3);\n+  if (d != CONST0)\n+    abort ();\n+\n+  d = mei (&dv, 0);\n+  if (d != CONST0)\n+    abort ();\n+\n+  d = mei (&dv, 1);\n+  if (d != CONST0)\n+    abort ();\n+\n+  d = mei (&dv, 2);\n+  if (d != CONST0)\n+    abort ();\n+\n+  d = mei (&dv, 3);\n+  if (d != CONST0)\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "7dc6bd994e476bd694ab9838990a1fec31d11e24", "filename": "gcc/testsuite/gcc.target/powerpc/vsx-builtin-13a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/839c480a14f025bdcd73a53d14a19d4cc9a1aea5/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-builtin-13a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/839c480a14f025bdcd73a53d14a19d4cc9a1aea5/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-builtin-13a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-builtin-13a.c?ref=839c480a14f025bdcd73a53d14a19d4cc9a1aea5", "patch": "@@ -9,7 +9,7 @@\n #include <altivec.h>\n \n /* Define this after PR89424 is addressed.  */\n-#undef PR89424\n+#define PR89424\n \n /* Define this after PR89626 is addressed.  */\n #undef PR89626"}, {"sha": "168227214fc1c8ce07198463c41bdab6369886c1", "filename": "gcc/testsuite/gcc.target/powerpc/vsx-builtin-13b.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/839c480a14f025bdcd73a53d14a19d4cc9a1aea5/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-builtin-13b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/839c480a14f025bdcd73a53d14a19d4cc9a1aea5/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-builtin-13b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-builtin-13b.c?ref=839c480a14f025bdcd73a53d14a19d4cc9a1aea5", "patch": "@@ -9,7 +9,7 @@\n #include <altivec.h>\n \n /* Define this after PR89424 is addressed.  */\n-#undef PR89424\n+#define PR89424\n \n /* Define this after PR89626 is addressed.  */\n #undef PR89626"}, {"sha": "12350c3ed7a4b81194d5132314badde691540b26", "filename": "gcc/testsuite/gcc.target/powerpc/vsx-builtin-20a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/839c480a14f025bdcd73a53d14a19d4cc9a1aea5/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-builtin-20a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/839c480a14f025bdcd73a53d14a19d4cc9a1aea5/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-builtin-20a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-builtin-20a.c?ref=839c480a14f025bdcd73a53d14a19d4cc9a1aea5", "patch": "@@ -9,7 +9,7 @@\n #include <altivec.h>\n \n /* Define this after PR89424 is addressed.  */\n-#undef PR89424\n+#define PR89424\n \n extern void abort (void);\n "}, {"sha": "37fb7133ba0621620f5ad1abfb45e78f25e49e53", "filename": "gcc/testsuite/gcc.target/powerpc/vsx-builtin-20b.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/839c480a14f025bdcd73a53d14a19d4cc9a1aea5/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-builtin-20b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/839c480a14f025bdcd73a53d14a19d4cc9a1aea5/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-builtin-20b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsx-builtin-20b.c?ref=839c480a14f025bdcd73a53d14a19d4cc9a1aea5", "patch": "@@ -9,7 +9,7 @@\n #include <altivec.h>\n \n /* Define this after PR89424 is addressed.  */\n-#undef PR89424\n+#define PR89424\n \n extern void abort (void);\n "}]}