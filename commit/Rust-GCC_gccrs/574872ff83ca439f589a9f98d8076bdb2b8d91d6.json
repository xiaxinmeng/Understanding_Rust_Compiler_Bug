{"sha": "574872ff83ca439f589a9f98d8076bdb2b8d91d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc0ODcyZmY4M2NhNDM5ZjU4OWE5Zjk4ZDgwNzZiZGIyYjhkOTFkNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-03-28T17:23:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-03-28T17:23:08Z"}, "message": "re PR c++/39554 (-Wdisallowed-function-list fails when #including <algorithm>)\n\n\tPR c++/39554\n\t* opts.c (warning_disallowed_functions, warn_disallowed_functions,\n\twarn_if_disallowed_function_p): Removed.\n\t(common_handle_option): Don't handle OPT_Wdisallowed_function_list_.\n\t* c-parser.c (c_parser_postfix_expression_after_primary): Don't call\n\twarning_if_disallowed_function_p.\n\t* flags.h (warn_if_disallowed_function_p,\n\twarn_disallowed_functions): Removed.\n\t* common.opt (Wdisallowed-function-list=): Removed.\n\t* doc/invoke.texi (-Wdisallowed-function-list=): Removed.\n\n\t* parser.c (cp_parser_postfix_expression): Don't call\n\twarning_if_disallowed_function_p.\n\n\t* gcc.dg/wdisallowed-functions-1.c: Removed.\n\t* gcc.dg/wdisallowed-functions-2.c: Removed.\n\t* gcc.dg/wdisallowed-functions-3.c: Removed.\n\t* g++.dg/warn/Wdisallowed-functions-1.C: Removed.\n\t* g++.dg/warn/Wdisallowed-functions-2.C: Removed.\n\t* g++.dg/warn/Wdisallowed-functions-3.C: Removed.\n\nFrom-SVN: r145198", "tree": {"sha": "0216b4a1ce37818cd8183908ea9ae97fb9800a6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0216b4a1ce37818cd8183908ea9ae97fb9800a6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/574872ff83ca439f589a9f98d8076bdb2b8d91d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/574872ff83ca439f589a9f98d8076bdb2b8d91d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/574872ff83ca439f589a9f98d8076bdb2b8d91d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/574872ff83ca439f589a9f98d8076bdb2b8d91d6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b005da111c1cfd1b71647eb68eb3fe1bfc35ee64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64"}], "stats": {"total": 157, "additions": 30, "deletions": 127}, "files": [{"sha": "012e0a36fd05881d699574e5f064493fddcf7d03", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/574872ff83ca439f589a9f98d8076bdb2b8d91d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/574872ff83ca439f589a9f98d8076bdb2b8d91d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=574872ff83ca439f589a9f98d8076bdb2b8d91d6", "patch": "@@ -1,3 +1,16 @@\n+2009-03-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/39554\n+\t* opts.c (warning_disallowed_functions, warn_disallowed_functions,\n+\twarn_if_disallowed_function_p): Removed.\n+\t(common_handle_option): Don't handle OPT_Wdisallowed_function_list_.\n+\t* c-parser.c (c_parser_postfix_expression_after_primary): Don't call\n+\twarning_if_disallowed_function_p.\n+\t* flags.h (warn_if_disallowed_function_p,\n+\twarn_disallowed_functions): Removed.\n+\t* common.opt (Wdisallowed-function-list=): Removed.\n+\t* doc/invoke.texi (-Wdisallowed-function-list=): Removed.\n+\n 2009-03-28  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/38723"}, {"sha": "f910128de3f236b5a5956fd311bcad4a6bf21fd0", "filename": "gcc/c-parser.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/574872ff83ca439f589a9f98d8076bdb2b8d91d6/gcc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/574872ff83ca439f589a9f98d8076bdb2b8d91d6/gcc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parser.c?ref=574872ff83ca439f589a9f98d8076bdb2b8d91d6", "patch": "@@ -5584,8 +5584,6 @@ c_parser_postfix_expression_after_primary (c_parser *parser,\n \t\t\t\t     \"expected %<)%>\");\n \t  expr.value = build_function_call (expr.value, exprlist);\n \t  expr.original_code = ERROR_MARK;\n-          if (warn_disallowed_functions)\n-            warn_if_disallowed_function_p (expr.value);\n \t  break;\n \tcase CPP_DOT:\n \t  /* Structure element reference.  */"}, {"sha": "023d773586a83e6b9437655ac68e8848094a838b", "filename": "gcc/common.opt", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/574872ff83ca439f589a9f98d8076bdb2b8d91d6/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/574872ff83ca439f589a9f98d8076bdb2b8d91d6/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=574872ff83ca439f589a9f98d8076bdb2b8d91d6", "patch": "@@ -94,10 +94,6 @@ Wdisabled-optimization\n Common Var(warn_disabled_optimization) Warning\n Warn when an optimization pass is disabled\n \n-Wdisallowed-function-list=\n-Common RejectNegative Joined Warning\n-Warn on calls to these functions\n-\n Werror\n Common Var(warnings_are_errors)\n Treat all warnings as errors"}, {"sha": "449fb93c1beacaa4bba45a46e7049b0777411229", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/574872ff83ca439f589a9f98d8076bdb2b8d91d6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/574872ff83ca439f589a9f98d8076bdb2b8d91d6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=574872ff83ca439f589a9f98d8076bdb2b8d91d6", "patch": "@@ -1,3 +1,9 @@\n+2009-03-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/39554\n+\t* parser.c (cp_parser_postfix_expression): Don't call\n+\twarning_if_disallowed_function_p.\n+\n 2009-03-27  Jan Hubicka  <jh@suse.cz>\n \n \t* except.c (choose_personality_routine): Set terminate_node to abort"}, {"sha": "bbd89d19c7204ae532a917e2f55c131cc07aa374", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/574872ff83ca439f589a9f98d8076bdb2b8d91d6/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/574872ff83ca439f589a9f98d8076bdb2b8d91d6/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=574872ff83ca439f589a9f98d8076bdb2b8d91d6", "patch": "@@ -4823,9 +4823,6 @@ cp_parser_postfix_expression (cp_parser *parser, bool address_p, bool cast_p,\n \t\t\t\t    koenig_p,\n \t\t\t\t    tf_warning_or_error);\n \n-            if (warn_disallowed_functions)\n-              warn_if_disallowed_function_p (postfix_expression);\n-\n \t    /* The POSTFIX_EXPRESSION is certainly no longer an id.  */\n \t    idk = CP_ID_KIND_NONE;\n \t  }"}, {"sha": "4e2d93139b53d51dcdaf0612fe92b77178b30b1b", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/574872ff83ca439f589a9f98d8076bdb2b8d91d6/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/574872ff83ca439f589a9f98d8076bdb2b8d91d6/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=574872ff83ca439f589a9f98d8076bdb2b8d91d6", "patch": "@@ -232,7 +232,6 @@ Objective-C and Objective-C++ Dialects}.\n -Wchar-subscripts -Wclobbered  -Wcomment @gol\n -Wconversion  -Wcoverage-mismatch  -Wno-deprecated  @gol\n -Wno-deprecated-declarations -Wdisabled-optimization  @gol\n--Wdisallowed-function-list=@var{sym},@var{sym},@dots{} @gol\n -Wno-div-by-zero -Wempty-body  -Wenum-compare -Wno-endif-labels @gol\n -Werror  -Werror=* @gol\n -Wfatal-errors  -Wfloat-equal  -Wformat  -Wformat=2 @gol\n@@ -4188,13 +4187,6 @@ minimum maximum, so we do not diagnose overlength strings in C++@.\n \n This option is implied by @option{-pedantic}, and can be disabled with\n @option{-Wno-overlength-strings}.\n-\n-@item -Wdisallowed-function-list=@var{sym},@var{sym},@dots{}\n-@opindex Wdisallowed-function-list\n-\n-If any of @var{sym} is called, GCC will issue a warning. This can be useful\n-in enforcing coding conventions that ban calls to certain functions, for\n-example, @code{alloca}, @code{malloc}, etc.\n @end table\n \n @node Debugging Options"}, {"sha": "e406bf179144b68f8053b64cbfd53c7543e32897", "filename": "gcc/flags.h", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/574872ff83ca439f589a9f98d8076bdb2b8d91d6/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/574872ff83ca439f589a9f98d8076bdb2b8d91d6/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=574872ff83ca439f589a9f98d8076bdb2b8d91d6", "patch": "@@ -1,6 +1,6 @@\n /* Compilation switch flag definitions for GCC.\n    Copyright (C) 1987, 1988, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002,\n-   2003, 2004, 2005, 2006, 2007, 2008\n+   2003, 2004, 2005, 2006, 2007, 2008, 2009\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -310,13 +310,6 @@ extern enum stack_check_type flag_stack_check;\n    instrumentation.  */\n extern bool flag_instrument_functions_exclude_p (tree fndecl);\n \n-/* Emit warning if the function call is disallowed under\n-   -Wdisallowed-function-list=...  */\n-extern void warn_if_disallowed_function_p (const_tree fncall);\n-\n-/* True, if the -Wdisallowed-function-list=... option has been specified.  */\n-extern bool warn_disallowed_functions;\n-\n /* True if the given mode has a NaN representation and the treatment of\n    NaN operands is important.  Certain optimizations, such as folding\n    x * 0 into 0, are not correct for NaN operands, and are normally"}, {"sha": "90f34df1dec38481824d934bebbf9a7e94116779", "filename": "gcc/opts.c", "status": "modified", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/574872ff83ca439f589a9f98d8076bdb2b8d91d6/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/574872ff83ca439f589a9f98d8076bdb2b8d91d6/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=574872ff83ca439f589a9f98d8076bdb2b8d91d6", "patch": "@@ -368,12 +368,6 @@ DEF_VEC_ALLOC_P(const_char_p,heap);\n \n static VEC(const_char_p,heap) *ignored_options;\n \n-/* Function calls disallowed under -Wdisallowed-function-list=...  */\n-static VEC(char_p,heap) *warning_disallowed_functions;\n-\n-/* If -Wdisallowed-function-list=...  */\n-bool warn_disallowed_functions = false;\n-\n /* Input file names.  */\n const char **in_fnames;\n unsigned num_in_fnames;\n@@ -741,38 +735,6 @@ flag_instrument_functions_exclude_p (tree fndecl)\n }\n \n \n-/* Return whether this function call is disallowed.  */\n-void\n-warn_if_disallowed_function_p (const_tree exp)\n-{\n-  if (TREE_CODE (exp) == CALL_EXPR\n-      && VEC_length (char_p, warning_disallowed_functions) > 0)\n-    {\n-      int i;\n-      char *s;\n-      tree fndecl = get_callee_fndecl (exp);\n-      const char *fnname;\n-\n-      if (fndecl == NULL)\n-\treturn;\n-\n-      fnname = get_name (fndecl);\n-      if (fnname == NULL)\n-\treturn;\n-\n-      for (i = 0; VEC_iterate (char_p, warning_disallowed_functions, i, s);\n-           ++i)\n-        {\n-          if (strcmp (fnname, s) == 0)\n-            {\n-              warning (OPT_Wdisallowed_function_list_,\n-                       \"disallowed call to %qs\", fnname);\n-              break;\n-            }\n-        }\n-    }\n-}\n-\n /* Decode and handle the vector of command line options.  LANG_MASK\n    contains has a single bit set representing the current\n    language.  */\n@@ -1635,12 +1597,6 @@ common_handle_option (size_t scode, const char *arg, int value,\n       set_Wextra (value);\n       break;\n \n-    case OPT_Wdisallowed_function_list_:\n-      warn_disallowed_functions = true;\n-      add_comma_separated_to_vector\n-\t(&warning_disallowed_functions, arg);\n-      break;\n-\n     case OPT_Werror_:\n       enable_warning_as_error (arg, value, lang_mask);\n       break;"}, {"sha": "9a6d50a4c535b87f3e217b2266d9a94f137c90c6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/574872ff83ca439f589a9f98d8076bdb2b8d91d6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/574872ff83ca439f589a9f98d8076bdb2b8d91d6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=574872ff83ca439f589a9f98d8076bdb2b8d91d6", "patch": "@@ -1,3 +1,13 @@\n+2009-03-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/39554\n+\t* gcc.dg/wdisallowed-functions-1.c: Removed.\n+\t* gcc.dg/wdisallowed-functions-2.c: Removed.\n+\t* gcc.dg/wdisallowed-functions-3.c: Removed.\n+\t* g++.dg/warn/Wdisallowed-functions-1.C: Removed.\n+\t* g++.dg/warn/Wdisallowed-functions-2.C: Removed.\n+\t* g++.dg/warn/Wdisallowed-functions-3.C: Removed.\n+\n 2009-03-28  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/38723"}, {"sha": "39760950d69bfd2dd7768d2c458495236f0a18b3", "filename": "gcc/testsuite/g++.dg/warn/Wdisallowed-functions-1.C", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdisallowed-functions-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdisallowed-functions-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdisallowed-functions-1.C?ref=b005da111c1cfd1b71647eb68eb3fe1bfc35ee64", "patch": "@@ -1,7 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-Wdisallowed-function-list=foobar\" } */\n-\n-int foobar (int i)\n-{\n-  return (i * 5);\n-}"}, {"sha": "ca5aab0e50d8196e60b695049230991272602bc3", "filename": "gcc/testsuite/g++.dg/warn/Wdisallowed-functions-2.C", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdisallowed-functions-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdisallowed-functions-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdisallowed-functions-2.C?ref=b005da111c1cfd1b71647eb68eb3fe1bfc35ee64", "patch": "@@ -1,12 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-Wdisallowed-function-list=foo,foobar,bar,foobar\" } */\n-\n-int foobar (int i)\n-{\n-  return (i * 5);\n-}\n-\n-int foobar1 (int i)\n-{\n-  return foobar (i);  /* { dg-warning \"disallowed call to 'foobar'\" } */\n-}"}, {"sha": "3ecfb0c2264b162d37055d38c4ab92f1e6746b7f", "filename": "gcc/testsuite/g++.dg/warn/Wdisallowed-functions-3.C", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdisallowed-functions-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdisallowed-functions-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdisallowed-functions-3.C?ref=b005da111c1cfd1b71647eb68eb3fe1bfc35ee64", "patch": "@@ -1,10 +0,0 @@\n-// PR c++/39554\n-// { dg-do compile }\n-// { dg-options \"-Wdisallowed-function-list=bar\" }\n-\n-void\n-foo (void (*p) (), void (*bar) ())\n-{\n-  p ();\n-  bar ();\n-}"}, {"sha": "39760950d69bfd2dd7768d2c458495236f0a18b3", "filename": "gcc/testsuite/gcc.dg/wdisallowed-functions-1.c", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64/gcc%2Ftestsuite%2Fgcc.dg%2Fwdisallowed-functions-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64/gcc%2Ftestsuite%2Fgcc.dg%2Fwdisallowed-functions-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwdisallowed-functions-1.c?ref=b005da111c1cfd1b71647eb68eb3fe1bfc35ee64", "patch": "@@ -1,7 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-Wdisallowed-function-list=foobar\" } */\n-\n-int foobar (int i)\n-{\n-  return (i * 5);\n-}"}, {"sha": "ca5aab0e50d8196e60b695049230991272602bc3", "filename": "gcc/testsuite/gcc.dg/wdisallowed-functions-2.c", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64/gcc%2Ftestsuite%2Fgcc.dg%2Fwdisallowed-functions-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64/gcc%2Ftestsuite%2Fgcc.dg%2Fwdisallowed-functions-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwdisallowed-functions-2.c?ref=b005da111c1cfd1b71647eb68eb3fe1bfc35ee64", "patch": "@@ -1,12 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-Wdisallowed-function-list=foo,foobar,bar,foobar\" } */\n-\n-int foobar (int i)\n-{\n-  return (i * 5);\n-}\n-\n-int foobar1 (int i)\n-{\n-  return foobar (i);  /* { dg-warning \"disallowed call to 'foobar'\" } */\n-}"}, {"sha": "5b8b31bdfc91978670f821cb14212538b8be6a8e", "filename": "gcc/testsuite/gcc.dg/wdisallowed-functions-3.c", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64/gcc%2Ftestsuite%2Fgcc.dg%2Fwdisallowed-functions-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b005da111c1cfd1b71647eb68eb3fe1bfc35ee64/gcc%2Ftestsuite%2Fgcc.dg%2Fwdisallowed-functions-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwdisallowed-functions-3.c?ref=b005da111c1cfd1b71647eb68eb3fe1bfc35ee64", "patch": "@@ -1,10 +0,0 @@\n-/* PR c++/39554 */\n-/* { dg-do compile } */\n-/* { dg-options \"-Wdisallowed-function-list=bar\" } */\n-\n-void\n-foo (void (*p) (void), void (*bar) (void))\n-{\n-  p ();\n-  bar ();\n-}"}]}