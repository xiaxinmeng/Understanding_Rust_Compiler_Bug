{"sha": "ca486330c49fe55964c6d11f1463d70365bdef6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E0ODYzMzBjNDlmZTU1OTY0YzZkMTFmMTQ2M2Q3MDM2NWJkZWY2Yg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-27T20:33:38Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-27T20:33:38Z"}, "message": "Use rtx_expr_list for expr_status.x_forced_labels\n\ngcc/\n2014-08-27  David Malcolm  <dmalcolm@redhat.com>\n\n\t* function.h (struct expr_status): Strengthen field\n\t\"x_forced_labels\" from rtx to rtx_expr_list *.\n\n\t* cfgbuild.c (make_edges): Split local \"x\" into two locals,\n\tstrengthening one from rtx to rtx_expr_list *, and using methods\n\tof said class.\n\t* dwarf2cfi.c (create_trace_edges): Split local \"lab\" out; within\n\tloop over forced_labels, introduce strengthen it from rtx to\n\trtx_expr_list *, using methods to clarify the code.\n\t* jump.c (rebuild_jump_labels_1): Strengthen local \"insn\" from rtx\n\tto rtx_expr_list *, using methods of said class to clarify the\n\tcode.\n\t* reload1.c (set_initial_label_offsets): Split local \"x\" into two\n\tper-loop variables, strengthening the first from rtx to\n\trtx_expr_list * and using methods.\n\nFrom-SVN: r214602", "tree": {"sha": "66e196517fd89856bf4cc787decc8acce49a4e4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66e196517fd89856bf4cc787decc8acce49a4e4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca486330c49fe55964c6d11f1463d70365bdef6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca486330c49fe55964c6d11f1463d70365bdef6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca486330c49fe55964c6d11f1463d70365bdef6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca486330c49fe55964c6d11f1463d70365bdef6b/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "38e60c554d650d2c1fdefea2ba4f70ebf1d31298", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38e60c554d650d2c1fdefea2ba4f70ebf1d31298", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38e60c554d650d2c1fdefea2ba4f70ebf1d31298"}], "stats": {"total": 58, "additions": 37, "deletions": 21}, "files": [{"sha": "e85db1a6797197646592e5104cb3c5a30e5ec0b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca486330c49fe55964c6d11f1463d70365bdef6b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca486330c49fe55964c6d11f1463d70365bdef6b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca486330c49fe55964c6d11f1463d70365bdef6b", "patch": "@@ -1,3 +1,21 @@\n+2014-08-27  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* function.h (struct expr_status): Strengthen field\n+\t\"x_forced_labels\" from rtx to rtx_expr_list *.\n+\n+\t* cfgbuild.c (make_edges): Split local \"x\" into two locals,\n+\tstrengthening one from rtx to rtx_expr_list *, and using methods\n+\tof said class.\n+\t* dwarf2cfi.c (create_trace_edges): Split local \"lab\" out; within\n+\tloop over forced_labels, introduce strengthen it from rtx to\n+\trtx_expr_list *, using methods to clarify the code.\n+\t* jump.c (rebuild_jump_labels_1): Strengthen local \"insn\" from rtx\n+\tto rtx_expr_list *, using methods of said class to clarify the\n+\tcode.\n+\t* reload1.c (set_initial_label_offsets): Split local \"x\" into two\n+\tper-loop variables, strengthening the first from rtx to\n+\trtx_expr_list * and using methods.\n+\n 2014-08-27  David Malcolm  <dmalcolm@redhat.com>\n \n \t* coretypes.h (class rtx_expr_list): Add forward declaration."}, {"sha": "05adac0cbc4d1b1df26d3467a7436093882e6ce2", "filename": "gcc/cfgbuild.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca486330c49fe55964c6d11f1463d70365bdef6b/gcc%2Fcfgbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca486330c49fe55964c6d11f1463d70365bdef6b/gcc%2Fcfgbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgbuild.c?ref=ca486330c49fe55964c6d11f1463d70365bdef6b", "patch": "@@ -219,7 +219,6 @@ make_edges (basic_block min, basic_block max, int update_p)\n   FOR_BB_BETWEEN (bb, min, max->next_bb, next_bb)\n     {\n       rtx_insn *insn;\n-      rtx x;\n       enum rtx_code code;\n       edge e;\n       edge_iterator ei;\n@@ -285,8 +284,8 @@ make_edges (basic_block min, basic_block max, int update_p)\n \t     everything on the forced_labels list.  */\n \t  else if (computed_jump_p (insn))\n \t    {\n-\t      for (x = forced_labels; x; x = XEXP (x, 1))\n-\t\tmake_label_edge (edge_cache, bb, XEXP (x, 0), EDGE_ABNORMAL);\n+\t      for (rtx_expr_list *x = forced_labels; x; x = x->next ())\n+\t\tmake_label_edge (edge_cache, bb, x->element (), EDGE_ABNORMAL);\n \t    }\n \n \t  /* Returns create an exit out.  */\n@@ -338,7 +337,7 @@ make_edges (basic_block min, basic_block max, int update_p)\n \t\t     taken, then only calls to those functions or to other\n \t\t     nested functions that use them could possibly do\n \t\t     nonlocal gotos.  */\n-\t\t  for (x = nonlocal_goto_handler_labels; x; x = XEXP (x, 1))\n+\t\t  for (rtx x = nonlocal_goto_handler_labels; x; x = XEXP (x, 1))\n \t\t    make_label_edge (edge_cache, bb, XEXP (x, 0),\n \t\t\t\t     EDGE_ABNORMAL | EDGE_ABNORMAL_CALL);\n \t\t}"}, {"sha": "3f4a0ad6d5c10173c024051f6ec390a77efb29a8", "filename": "gcc/dwarf2cfi.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca486330c49fe55964c6d11f1463d70365bdef6b/gcc%2Fdwarf2cfi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca486330c49fe55964c6d11f1463d70365bdef6b/gcc%2Fdwarf2cfi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2cfi.c?ref=ca486330c49fe55964c6d11f1463d70365bdef6b", "patch": "@@ -2286,7 +2286,7 @@ maybe_record_trace_start_abnormal (rtx start, rtx origin)\n static void\n create_trace_edges (rtx insn)\n {\n-  rtx tmp, lab;\n+  rtx tmp;\n   int i, n;\n \n   if (JUMP_P (insn))\n@@ -2303,14 +2303,14 @@ create_trace_edges (rtx insn)\n \t  n = GET_NUM_ELEM (vec);\n \t  for (i = 0; i < n; ++i)\n \t    {\n-\t      lab = XEXP (RTVEC_ELT (vec, i), 0);\n+\t      rtx lab = XEXP (RTVEC_ELT (vec, i), 0);\n \t      maybe_record_trace_start (lab, insn);\n \t    }\n \t}\n       else if (computed_jump_p (insn))\n \t{\n-\t  for (lab = forced_labels; lab; lab = XEXP (lab, 1))\n-\t    maybe_record_trace_start (XEXP (lab, 0), insn);\n+\t  for (rtx_expr_list *lab = forced_labels; lab; lab = lab->next ())\n+\t    maybe_record_trace_start (lab->element (), insn);\n \t}\n       else if (returnjump_p (insn))\n \t;\n@@ -2319,13 +2319,13 @@ create_trace_edges (rtx insn)\n \t  n = ASM_OPERANDS_LABEL_LENGTH (tmp);\n \t  for (i = 0; i < n; ++i)\n \t    {\n-\t      lab = XEXP (ASM_OPERANDS_LABEL (tmp, i), 0);\n+\t      rtx lab = XEXP (ASM_OPERANDS_LABEL (tmp, i), 0);\n \t      maybe_record_trace_start (lab, insn);\n \t    }\n \t}\n       else\n \t{\n-\t  lab = JUMP_LABEL (insn);\n+\t  rtx lab = JUMP_LABEL (insn);\n \t  gcc_assert (lab != NULL);\n \t  maybe_record_trace_start (lab, insn);\n \t}\n@@ -2338,7 +2338,7 @@ create_trace_edges (rtx insn)\n \n       /* Process non-local goto edges.  */\n       if (can_nonlocal_goto (insn))\n-\tfor (lab = nonlocal_goto_handler_labels; lab; lab = XEXP (lab, 1))\n+\tfor (rtx lab = nonlocal_goto_handler_labels; lab; lab = XEXP (lab, 1))\n \t  maybe_record_trace_start_abnormal (XEXP (lab, 0), insn);\n     }\n   else if (rtx_sequence *seq = dyn_cast <rtx_sequence *> (PATTERN (insn)))"}, {"sha": "ba7597c2bdc3ad3f6705c779417fc907ee4e0766", "filename": "gcc/function.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca486330c49fe55964c6d11f1463d70365bdef6b/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca486330c49fe55964c6d11f1463d70365bdef6b/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=ca486330c49fe55964c6d11f1463d70365bdef6b", "patch": "@@ -135,7 +135,7 @@ struct GTY(()) expr_status {\n   rtx x_apply_args_value;\n \n   /* List of labels that must never be deleted.  */\n-  rtx x_forced_labels;\n+  rtx_expr_list *x_forced_labels;\n };\n \n typedef struct call_site_record_d *call_site_record;"}, {"sha": "b8d3d52cea9f3c2202cac27bed01d5e126e50ce2", "filename": "gcc/jump.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca486330c49fe55964c6d11f1463d70365bdef6b/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca486330c49fe55964c6d11f1463d70365bdef6b/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=ca486330c49fe55964c6d11f1463d70365bdef6b", "patch": "@@ -74,7 +74,7 @@ static int returnjump_p_1 (rtx *, void *);\n static void\n rebuild_jump_labels_1 (rtx_insn *f, bool count_forced)\n {\n-  rtx insn;\n+  rtx_expr_list *insn;\n \n   timevar_push (TV_REBUILD_JUMP);\n   init_label_info (f);\n@@ -85,9 +85,9 @@ rebuild_jump_labels_1 (rtx_insn *f, bool count_forced)\n      count doesn't drop to zero.  */\n \n   if (count_forced)\n-    for (insn = forced_labels; insn; insn = XEXP (insn, 1))\n-      if (LABEL_P (XEXP (insn, 0)))\n-\tLABEL_NUSES (XEXP (insn, 0))++;\n+    for (insn = forced_labels; insn; insn = insn->next ())\n+      if (LABEL_P (insn->element ()))\n+\tLABEL_NUSES (insn->element ())++;\n   timevar_pop (TV_REBUILD_JUMP);\n }\n "}, {"sha": "f7acd65f87ac762bf771ac60803af8b3cb23813d", "filename": "gcc/reload1.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca486330c49fe55964c6d11f1463d70365bdef6b/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca486330c49fe55964c6d11f1463d70365bdef6b/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=ca486330c49fe55964c6d11f1463d70365bdef6b", "patch": "@@ -3909,14 +3909,13 @@ set_initial_eh_label_offset (rtx label)\n static void\n set_initial_label_offsets (void)\n {\n-  rtx x;\n   memset (offsets_known_at, 0, num_labels);\n \n-  for (x = forced_labels; x; x = XEXP (x, 1))\n-    if (XEXP (x, 0))\n-      set_label_offsets (XEXP (x, 0), NULL, 1);\n+  for (rtx_expr_list *x = forced_labels; x; x = x->next ())\n+    if (x->element ())\n+      set_label_offsets (x->element (), NULL, 1);\n \n-  for (x = nonlocal_goto_handler_labels; x; x = XEXP (x, 1))\n+  for (rtx x = nonlocal_goto_handler_labels; x; x = XEXP (x, 1))\n     if (XEXP (x, 0))\n       set_label_offsets (XEXP (x, 0), NULL, 1);\n "}]}