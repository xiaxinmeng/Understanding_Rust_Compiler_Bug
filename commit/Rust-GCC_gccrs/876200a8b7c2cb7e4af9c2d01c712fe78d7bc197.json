{"sha": "876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc2MjAwYThiN2MyY2I3ZTRhZjljMmQwMWM3MTJmZTc4ZDdiYzE5Nw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2002-12-28T07:48:15Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-12-28T07:48:15Z"}, "message": "spec4.C: Remove stray semicolon.\n\n\t* g++.dg/eh/spec4.C: Remove stray semicolon.\n\t* g++.dg/expr/pmf-1.C: Change error message.\n\t* g++.dg/ext/asm1.C: Remove stray semicolon.\n\t* g++.dg/ext/typename1.C: Add missing typenames.\n\t* g++.dg/inherit/template-as-base.C: Change error message.\n\t* g++.dg/lookup/scoped1.C: Likewise.\n\t* g++.dg/lookup/scoped2.C: Likewise.\n\t* g++.dg/lookup/using2.C: Likewise.\n\t* g++.dg/other/component1.C: Remove stray semicolon.\n\t* g++.dg/other/do1.C: Change error message.\n\t* g++.dg/other/error2.C: Likewise.\n\t* g++.dg/other/init1.C: Likewise.\n\t* g++.dg/other/packed1.C: Remove stray semicolon.\n\t* g++.dg/other/ptrmem2.C: Change error message.\n\t* g++.dg/parse/parameter-declaration-1.C: Remove line number\n\tmarker.\n\t* g++.dg/special/initp1.C: Remove invalid attribute usage.\n\t* g++.dg/template/access3.C: Add typename keyword.\n\t* g++.dg/template/access5.C: Remove stray semicolon.\n\t* g++.dg/template/access6.C: Likewise.\n\t* g++.dg/template/complit1.C: Likewise.\n\t* g++.dg/template/crash1.C: Change error message.\n\t* g++.dg/template/inherit2.C: Remove stray semicolon.\n\t* g++.dg/template/instantiate2.C: Likewise.\n\t* g++.dg/template/instantiate3.C: Change error message.\n\t* g++.dg/template/qual1.C: Remove stray semicolon.\n\t* g++.dg/template/qualttp18.C: Change error message.\n\t* g++.dg/template/ref1.C: Remove stray semicolon.\n\t* g++.dg/template/sizeof1.C (A::value): Declare it.\n\t* g++.dg/template/spec4.C: Change error message.\n\t* g++.dg/template/static1.C: Likewise.\n\t* g++.dg/template/type1.C: Likewise.\n\t* g++.dg/template/typename3.C: Likewise.\n\t* g++.old-deja/g++.benjamin/13478.C: Change error message.\n\t* g++.old-deja/g++.benjamin/15799.C: Remove stray semicolon.\n\t* g++.old-deja/g++.benjamin/bool01.C: Likewise.\n\t* g++.old-deja/g++.benjamin/bool02.C: Likewise.\n\t* g++.old-deja/g++.benjamin/p13417.C: Now fails due to use of\n\tnamed return value extension.\n\t* g++.old-deja/g++.benjamin/tem06.C: Remove stray semicolon.\n\t* g++.old-deja/g++.benjmain/warn01.C: Likewise.\n\t* g++.old-deja/g++.bob/extern_C.C: Likewise.\n\t* g++.old-deja/g++.bob/inherit2.C: Likewise.\n\t* g++.old-deja/g++.brendan/complex1.C: Likewise.\n\t* g++.old-deja/g++.brendan/copy5.C: Likewise.\n\t* g++.old-deja/g++.brendan/crash13.C: Likewise.\n\t* g++.old-deja/g++.brendan/crash15.C: Likewise.\n\t* g++.old-deja/g++.brendan/crash18.C: Change error message.\n\t* g++.old-deja/g++.brendan/crash37.C: Remove stray semicolon.\n\t* g++.old-deja/g++.brendan/crash38.C: Likewise.\n\t* g++.old-deja/g++.brendan/crash50.C: Likewise.\n\t* g++.old-deja/g++.brendan/crash56.C: Likewise.\n\t* g++.old-deja/g++.brendan/crash6.C: Use explicit specialization\n\tsyntax.\n\t* g++.old-deja/g++.brendan/crash66.C: Remove stray semicolon.\n\t* g++.old-deja/g++.brendan/crash8.C: Change error message.\n\t* g++.old-deja/g++.brendan/ctors1.C: Remove stray semicolon.\n\t* g++.old-deja/g++.brendan/ctors2.C: Likewise.\n\t* g++.old-deja/g++.brendan/shadow1.C: Likewise.\n\t* g++.old-deja/g++.brendan/template11.C: Likewise.\n\t* g++.old-deja/g++.brendan/template26.C: Likewise.\n\t* g++.old-deja/g++.brendan/template27.C: Use explicit\n\tspecialization syntax.\n\t* g++.old-deja/g++.brendan/template30.C: Likewise.\n\t* g++.old-deja/g++.brendan/template5.C: Remove stray semicolon.\n\t* g++.old-deja/g++.brendan/visibility3.C: Account for use of\n\tnon-dependent names.\n\t* g++.old-deja/g++.brendan/warnings4.C: Remove stray semicolon.\n\t* g++.old-deja/g++.brendan/warnings7.C: Likewise.\n\t* g++.old-deja/g++.bugs/900121_02.C: Likewise.\n\t* g++.old-deja/g++.eh/catchptr1.C: Likewise.\n\t* g++.old-deja/g++.ext/addrfunc4.C: Likewise.\n\t* g++.old-deja/g++.ext/namedret1.C: Now fails due to use of\n\tnamed return value extension.\n\t* g++.old-deja/g++.ext/namedret2.C: Likewise.\n\t* g++.old-deja/g++.ext/namedret3.C: Likewise.\n\t* g++.old-deja/g++.ext/return1.C: Likewise.\n\t* g++.old-deja/g++.ext/typename1.C: Add missing typename keywords.\n\t* g++.old-deja/g++.jason/access17.C: Issue more error messages.\n\t* g++.old-deja/g++.jason/access8.C: Likewise.\n\t* g++.old-deja/g++.jason/bool.C: Remove stray semicolon.\n\t* g++.old-deja/g++.jason/destruct.C: Remove incorrect\n\tpseudo-destructor names.\n\t* g++.old-deja/g++.jason/dtor3.C: Remove stray semicolon.\n\t* g++.old-deja/g++.jason/dtor5.C: Remove incorrect\n\tpseudo-destructor names.\n\t* g++.old-deja/g++.jason/opeq3.C: Remove stray semicolon.\n\t* g++.old-deja/g++.jason/overload19.C: Likewise.\n\t* g++.old-deja/g++.jason/overload32.C: Likewise.\n\t* g++.old-deja/g++.jason/parse11.C: Issue error messages about\n\tstray semicolons.\n\t* g++.old-deja/g++.jason/pmem2.C: Remove stray semicolon.\n\t* g++.old-deja/g++.jason/return.C: Likewise.\n\t* g++.old-deja/g++.jason/return2.C: Likewise.\n\t* g++.old-deja/g++.jason/shadow1.C: Likewise.\n\t* g++.old-deja/g++.jason/special.C: Use explicit specialization\n\tsyntax.\n\t* g++.old-deja/g++.jason/template10.C: Account for use of\n\tnon-dependent names.\n\t* g++.old-deja/g++.jason/template11.C: Use explicit specialization\n\tsyntax.\n\t* g++.old-deja/g++.jason/template37.C: Likewise.\n\t* g++.old-deja/g++.law/access4.C: Change error messages.\n\t* g++.old-deja/g++.law/arm13.C:  Remove incorrect\n\tpseudo-destructor names.\n\t* g++.old-deja/g++.law/code-gen5.C: Remove stray semicolon.\n\t* g++.old-deja/g++.law/ctors9.C: Likewise.\n\t* g++.old-deja/g++.law/cvt22.C: Likewise.\n\t* g++.old-deja/g++.law/dtors5.C: Likewise.\n\t* g++.old-deja/g++.law/global-init1.C: Likewise.\n\t* g++.old-deja/g++.law/missed-error3.C: Likewise.\n\t* g++.old-deja/g++.law/operators28.C: Likewise.\n\t* g++.old-deja/g++.law/visibility28.C: Likewise.\n\t* g++.old-deja/g++.martin/eval1.C: Likewise.\n\t* g++.old-deja/g++.martin/pmf2.C: Remove qualifier in constructor\n\tname.\n\t* g++.old-deja/g++.mike/hog1.C: Remove stray semicolon.\n\t* g++.old-deja/g++.mike/net34.C: Likewise.\n\t* g++.old-deja/g++.mike/net36.C: Likewise.\n\t* g++.old-deja/g++.mike/ns2.C: Likewise.\n\t* g++.old-deja/g++.mike/p12306.C: Likewise.\n\t* g++.old-deja/g++.mike/p646.C: Adjust for removal of named return\n\tvalue extension.\n\t* g++.old-deja/g++.mike/p700.C: Likewise.\n\t* g++.old-deja/g++.mike/p701.C: Remove stray semicolon.\n\t* g++.old-deja/g++.mike/p710.C: Likewise.\n\t* g++.old-deja/g++.mike/p784.C: Adjust for removal of named return\n\tvalue extension.\n\t* g++.old-deja/g++.mike/pmf7.C: Remove stray semicolon.\n\t* g++.old-deja/g++.mike/pmf9.C: Likewise.\n\t* g++.old-deja/g++.ns/crash2.C: Likewise.\n\t* g++.old-deja/g++.ns/crash3.C: Likewise.\n\t* g++.old-deja/g++.ns/invalid1.C: Likewise.\n\t* g++.old-deja/g++.ns/ns17.C: Likewise.\n\t* g++.old-deja/g++.ns/template16.C: Likewise.\n\t* g++.old-deja/g++.ns/template5.C: Remove invalid use of template\n\tkeyword.\n\t* g++.old-deja/g++.ns/template6.C: Remove stray semicolon.\n\t* g++.old-deja/g++.ns/using9.C: Remove stray semicolon.\n\t* g++.old-deja/g++.oliva/nameret1.C: Now fails due to use of\n\tnamed return value extension.\n\t* g++.old-deja/g++.oliva/nameret2.C: Likewise.\n\t* g++.old-deja/g++.other/access4.C: Issue additional error\n\tmessages.\n\t* g++.old-deja/g++.other/array6.C: Remove stray semicolon.\n\t* g++.old-deja/g++.other/crash1.C: Isue additional error messages.\n\t* g++.old-deja/g++.other/crash11.C: Add missing class-key.\n\t* g++.old-deja/g++.other/crash25.C: Change error message.\n\t* g++.old-deja/g++.other/crash4.C: Change error message.\n\t* g++.old-deja/g++.other/debug7.C: Remove stray semicolon.\n\t* g++.old-deja/g++.other/decl5.C: Issue more error messages.\n\t* g++.old-deja/g++.other/defarg7.C: Remove circular dependency\n\tchecks.\n\t* g++.old-deja/g++.other/defarg8.C: Likewise.\n\t* g++.old-deja/g++.other/dtor1.C: Remove stray semicolon.\n\t* g++.old-deja/g++.other/dtor10.C: Likewise.\n\t* g++.old-deja/g++.other/incomplete.C: Likewise.\n\t* g++.old-deja/g++.other/linkage7.C: Likewise.\n\t* g++.old-deja/g++.other/lookup19.C: Now fails due to corrected\n\tlookup algorithm.\n\t* g++.old-deja/g++.other/mangle2.C: Likewise.\n\t* g++.old-deja/g++.other/refinit2.C: Likewise.\n\t* g++.old-deja/g++.other/sizeof2.C: Change error messages.\n\t* g++.old-deja/g++.other/std1.C: Remove stray semicolon.\n\t* g++.old-deja/g++.pt/crash28.C: Likewise.\n\t* g++.old-deja/g++.pt/crash29.C: Use explicit specialization\n\tsyntax.\n\t* g++.old-deja/g++.pt/crash32.C: Change error message.\n\t* g++.old-deja/g++.pt/crash43.C: Adjust error messages.\n\t* g++.old-deja/g++.pt/crash58.C: Remove stray semicolon.\n\t* g++.old-deja/g++.pt/crash65.C: Tweak to acount for change in\n\terror message position.\n\t* g++.old-deja/g++.pt/defarg5.C: Remove stray semicolon.\n\t* g++.old-deja/g++.pt/defarg8.C: Change error message.\n\t* g++.old-deja/g++.pt/eichin01.C: Use explicit specialization\n\tsyntax.\n\t* g++.old-deja/g++.pt/eichin01a.C: Define static data members.\n\t* g++.old-deja/g++.pt/eichin01b.C: Likewise.\n\t* g++.old-deja/g++.pt/enum7.C: Remove stray semicolon.\n\t* g++.old-deja/g++.pt/explicit12.C: Remove invalid use of template\n\tkeyword.\n\t* g++.old-deja/g++.pt/explicit31.C: Likewise.\n\t* g++.old-deja/g++.pt/explicit33.C: Remove stray semicolon.\n\t* g++.old-deja/g++.pt/explicit35.C: Remove invalid use of template\n\tkeyword.\n\t* g++.old-deja/g++.pt/explicit71.C: Change error message.\n\t* g++.old-deja/g++.pt/explicit80.C: Use explicit specialization\n\tsyntax.\n\t* g++.old-deja/g++.pt/friend28.C: Account for use of\n\tnon-dependent names.\n\t* g++.old-deja/g++.pt/friend29.C: Likewise.\n\t* g++.old-deja/g++.pt/friend46.C: Adjust for correct name lookup\n\trules.\n\t* g++.old-deja/g++.pt/friend48.C: Remove stray semicolon.\n\t* g++.old-deja/g++.pt/instantiate1.C: Use correct class-key.\n\t* g++.old-deja/g++.pt/instantiate11.C: Adjust for correct name\n\tlookup rules.\n\t* g++.old-deja/g++.pt/instantiate8.C: Remove stray semicolon.\n\t* g++.old-deja/g++.pt/instantiate9.C: Insert missing typename\n\tkeyword.\n\t* g++.old-deja/g++.pt/memclass20.C: Likewise.\n\t* g++.old-deja/g++.pt/memclass5.C: Likewise.\n\t* g++.old-deja/g++.pt/memclass7.C: Remove invalid use of template\n\tkeyword.\n\t* g++.old-deja/g++.pt/memtemp75.C: Likewise.\n\t* g++.old-deja/g++.pt/memtemp81.C: Remove stray semicolon.\n\t* g++.old-deja/g++.pt/memtemp87.C: Add missing access specifier.\n\t* g++.old-deja/g++.pt/overload13.C: Correct error messages.\n\t* g++.old-deja/g++.pt/parms2.C: Add missing typename keyword.\n\t* g++.old-deja/g++.pt/ptrmem1.C: Remove invalid use of template\n\tkeyword.\n\t* g++.old-deja/g++.pt/spec10.C: Likewise.\n\t* g++.old-deja/g++.pt/spec28.C: Reorder declarations.\n\t* g++.old-deja/g++.pt/t10.C: Add explicit specialization syntax.\n\t* g++.old-deja/g++.pt/t32.C: Remove stray semicolon.\n\t* g++.old-deja/g++.pt/t35a.C: Add explicit specialization syntax.\n\t* g++.old-deja/g++.pt/ttp24.C: Remove stray semicolon.\n\t* g++.old-deja/g++.pt/ttp62.C: Likewise.\n\t* g++.old-deja/g++.pt/ttp64.C: Likewise.\n\t* g++.old-deja/g++.pt/typename11.C: Add missing typename keyword.\n\t* g++.old-deja/g++.pt/typename15.C: Likewise.\n\t* g++.old-deja/g++.pt/typename22.C: Likewise.\n\t* g++.old-deja/g++.pt/typename6.C: Change error messages.\n\t* g++.old-deja/g++.pt/using1.C: Remove stray semicolon.\n\t* g++.old-deja/g++.pt/virtual2.C: Likewise.\n\t* g++.old-deja/g++.robertl/eb118.C: Add explicit specialization\n\tsyntax.\n\t* g++.old-deja/g++.robertl/eb27.C: Now fails due to use of named\n\treturn value extension.\n\t* g++.old-deja/g++.robertl/eb43.C: Remove stray semicolon.\n\t* g++.old-deja/g++.robertl/eb79.C: Correct for new name lookup rules.\n\t* g++.old-deja/g++.robertl/eb82.C: Remove stray semicolons.\n\t* g++.old-deja/g++.robertl/eb86.C: Add missing forward declaration.\n\nFrom-SVN: r60559", "tree": {"sha": "53677ebe6cc9166c3b0826cc1dbf2ec72af1651a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53677ebe6cc9166c3b0826cc1dbf2ec72af1651a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "html_url": "https://github.com/Rust-GCC/gccrs/commit/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/comments", "author": null, "committer": null, "parents": [{"sha": "671aa708d903a497bde36f771b2af6b0d4c0fbe3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/671aa708d903a497bde36f771b2af6b0d4c0fbe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/671aa708d903a497bde36f771b2af6b0d4c0fbe3"}], "stats": {"total": 1204, "additions": 727, "deletions": 477}, "files": [{"sha": "cf8b61866acca622a0b1a34062d7de80c16fa6b2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 236, "deletions": 0, "changes": 236, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,3 +1,239 @@\n+2002-12-27  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* g++.dg/eh/spec4.C: Remove stray semicolon.\n+\t* g++.dg/expr/pmf-1.C: Change error message.\n+\t* g++.dg/ext/asm1.C: Remove stray semicolon.\n+\t* g++.dg/ext/typename1.C: Add missing typenames.\n+\t* g++.dg/inherit/template-as-base.C: Change error message.\n+\t* g++.dg/lookup/scoped1.C: Likewise.\n+\t* g++.dg/lookup/scoped2.C: Likewise.\n+\t* g++.dg/lookup/using2.C: Likewise.\n+\t* g++.dg/other/component1.C: Remove stray semicolon.\n+\t* g++.dg/other/do1.C: Change error message.\n+\t* g++.dg/other/error2.C: Likewise.\n+\t* g++.dg/other/init1.C: Likewise.\n+\t* g++.dg/other/packed1.C: Remove stray semicolon.\n+\t* g++.dg/other/ptrmem2.C: Change error message.\n+\t* g++.dg/parse/parameter-declaration-1.C: Remove line number\n+\tmarker.\n+\t* g++.dg/special/initp1.C: Remove invalid attribute usage.\n+\t* g++.dg/template/access3.C: Add typename keyword.\n+\t* g++.dg/template/access5.C: Remove stray semicolon.\n+\t* g++.dg/template/access6.C: Likewise.\n+\t* g++.dg/template/complit1.C: Likewise.\n+\t* g++.dg/template/crash1.C: Change error message.\n+\t* g++.dg/template/inherit2.C: Remove stray semicolon.\n+\t* g++.dg/template/instantiate2.C: Likewise.\n+\t* g++.dg/template/instantiate3.C: Change error message.\n+\t* g++.dg/template/qual1.C: Remove stray semicolon.\n+\t* g++.dg/template/qualttp18.C: Change error message.\n+\t* g++.dg/template/ref1.C: Remove stray semicolon.\n+\t* g++.dg/template/sizeof1.C (A::value): Declare it.\n+\t* g++.dg/template/spec4.C: Change error message.\n+\t* g++.dg/template/static1.C: Likewise.\n+\t* g++.dg/template/type1.C: Likewise.\n+\t* g++.dg/template/typename3.C: Likewise.\n+\t* g++.old-deja/g++.benjamin/13478.C: Change error message.\n+\t* g++.old-deja/g++.benjamin/15799.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.benjamin/bool01.C: Likewise.\n+\t* g++.old-deja/g++.benjamin/bool02.C: Likewise.\n+\t* g++.old-deja/g++.benjamin/p13417.C: Now fails due to use of\n+\tnamed return value extension.\n+\t* g++.old-deja/g++.benjamin/tem06.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.benjmain/warn01.C: Likewise.\n+\t* g++.old-deja/g++.bob/extern_C.C: Likewise.\n+\t* g++.old-deja/g++.bob/inherit2.C: Likewise.\n+\t* g++.old-deja/g++.brendan/complex1.C: Likewise.\n+\t* g++.old-deja/g++.brendan/copy5.C: Likewise.\n+\t* g++.old-deja/g++.brendan/crash13.C: Likewise.\n+\t* g++.old-deja/g++.brendan/crash15.C: Likewise.\n+\t* g++.old-deja/g++.brendan/crash18.C: Change error message.\n+\t* g++.old-deja/g++.brendan/crash37.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.brendan/crash38.C: Likewise.\n+\t* g++.old-deja/g++.brendan/crash50.C: Likewise.\n+\t* g++.old-deja/g++.brendan/crash56.C: Likewise.\n+\t* g++.old-deja/g++.brendan/crash6.C: Use explicit specialization\n+\tsyntax.\n+\t* g++.old-deja/g++.brendan/crash66.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.brendan/crash8.C: Change error message.\n+\t* g++.old-deja/g++.brendan/ctors1.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.brendan/ctors2.C: Likewise.\n+\t* g++.old-deja/g++.brendan/shadow1.C: Likewise.\n+\t* g++.old-deja/g++.brendan/template11.C: Likewise.\n+\t* g++.old-deja/g++.brendan/template26.C: Likewise.\n+\t* g++.old-deja/g++.brendan/template27.C: Use explicit\n+\tspecialization syntax.\n+\t* g++.old-deja/g++.brendan/template30.C: Likewise.\n+\t* g++.old-deja/g++.brendan/template5.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.brendan/visibility3.C: Account for use of\n+\tnon-dependent names.\n+\t* g++.old-deja/g++.brendan/warnings4.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.brendan/warnings7.C: Likewise.\n+\t* g++.old-deja/g++.bugs/900121_02.C: Likewise.\n+\t* g++.old-deja/g++.eh/catchptr1.C: Likewise.\n+\t* g++.old-deja/g++.ext/addrfunc4.C: Likewise.\n+\t* g++.old-deja/g++.ext/namedret1.C: Now fails due to use of\n+\tnamed return value extension.\n+\t* g++.old-deja/g++.ext/namedret2.C: Likewise.\n+\t* g++.old-deja/g++.ext/namedret3.C: Likewise.\n+\t* g++.old-deja/g++.ext/return1.C: Likewise.\n+\t* g++.old-deja/g++.ext/typename1.C: Add missing typename keywords.\n+\t* g++.old-deja/g++.jason/access17.C: Issue more error messages.\n+\t* g++.old-deja/g++.jason/access8.C: Likewise.\n+\t* g++.old-deja/g++.jason/bool.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.jason/destruct.C: Remove incorrect\n+\tpseudo-destructor names.\n+\t* g++.old-deja/g++.jason/dtor3.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.jason/dtor5.C: Remove incorrect\n+\tpseudo-destructor names.\n+\t* g++.old-deja/g++.jason/opeq3.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.jason/overload19.C: Likewise.\n+\t* g++.old-deja/g++.jason/overload32.C: Likewise.\n+\t* g++.old-deja/g++.jason/parse11.C: Issue error messages about\n+\tstray semicolons.\n+\t* g++.old-deja/g++.jason/pmem2.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.jason/return.C: Likewise.\n+\t* g++.old-deja/g++.jason/return2.C: Likewise.\n+\t* g++.old-deja/g++.jason/shadow1.C: Likewise.\n+\t* g++.old-deja/g++.jason/special.C: Use explicit specialization\n+\tsyntax.\n+\t* g++.old-deja/g++.jason/template10.C: Account for use of\n+\tnon-dependent names.\n+\t* g++.old-deja/g++.jason/template11.C: Use explicit specialization\n+\tsyntax.\n+\t* g++.old-deja/g++.jason/template37.C: Likewise.\n+\t* g++.old-deja/g++.law/access4.C: Change error messages.\n+\t* g++.old-deja/g++.law/arm13.C:  Remove incorrect\n+\tpseudo-destructor names.\n+\t* g++.old-deja/g++.law/code-gen5.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.law/ctors9.C: Likewise.\n+\t* g++.old-deja/g++.law/cvt22.C: Likewise.\n+\t* g++.old-deja/g++.law/dtors5.C: Likewise.\n+\t* g++.old-deja/g++.law/global-init1.C: Likewise.\n+\t* g++.old-deja/g++.law/missed-error3.C: Likewise.\n+\t* g++.old-deja/g++.law/operators28.C: Likewise.\n+\t* g++.old-deja/g++.law/visibility28.C: Likewise.\n+\t* g++.old-deja/g++.martin/eval1.C: Likewise.\n+\t* g++.old-deja/g++.martin/pmf2.C: Remove qualifier in constructor\n+\tname.\n+\t* g++.old-deja/g++.mike/hog1.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.mike/net34.C: Likewise.\n+\t* g++.old-deja/g++.mike/net36.C: Likewise.\n+\t* g++.old-deja/g++.mike/ns2.C: Likewise.\n+\t* g++.old-deja/g++.mike/p12306.C: Likewise.\n+\t* g++.old-deja/g++.mike/p646.C: Adjust for removal of named return\n+\tvalue extension.\n+\t* g++.old-deja/g++.mike/p700.C: Likewise.\n+\t* g++.old-deja/g++.mike/p701.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.mike/p710.C: Likewise.\n+\t* g++.old-deja/g++.mike/p784.C: Adjust for removal of named return\n+\tvalue extension.\n+\t* g++.old-deja/g++.mike/pmf7.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.mike/pmf9.C: Likewise.\n+\t* g++.old-deja/g++.ns/crash2.C: Likewise.\n+\t* g++.old-deja/g++.ns/crash3.C: Likewise.\n+\t* g++.old-deja/g++.ns/invalid1.C: Likewise.\n+\t* g++.old-deja/g++.ns/ns17.C: Likewise.\n+\t* g++.old-deja/g++.ns/template16.C: Likewise.\n+\t* g++.old-deja/g++.ns/template5.C: Remove invalid use of template\n+\tkeyword.\n+\t* g++.old-deja/g++.ns/template6.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.ns/using9.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.oliva/nameret1.C: Now fails due to use of\n+\tnamed return value extension.\n+\t* g++.old-deja/g++.oliva/nameret2.C: Likewise.\n+\t* g++.old-deja/g++.other/access4.C: Issue additional error\n+\tmessages.\n+\t* g++.old-deja/g++.other/array6.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.other/crash1.C: Isue additional error messages.\n+\t* g++.old-deja/g++.other/crash11.C: Add missing class-key.\n+\t* g++.old-deja/g++.other/crash25.C: Change error message.\n+\t* g++.old-deja/g++.other/crash4.C: Change error message.\n+\t* g++.old-deja/g++.other/debug7.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.other/decl5.C: Issue more error messages.\n+\t* g++.old-deja/g++.other/defarg7.C: Remove circular dependency\n+\tchecks.\n+\t* g++.old-deja/g++.other/defarg8.C: Likewise.\n+\t* g++.old-deja/g++.other/dtor1.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.other/dtor10.C: Likewise.\n+\t* g++.old-deja/g++.other/incomplete.C: Likewise.\n+\t* g++.old-deja/g++.other/linkage7.C: Likewise.\n+\t* g++.old-deja/g++.other/lookup19.C: Now fails due to corrected\n+\tlookup algorithm.\n+\t* g++.old-deja/g++.other/mangle2.C: Likewise.\n+\t* g++.old-deja/g++.other/refinit2.C: Likewise.\n+\t* g++.old-deja/g++.other/sizeof2.C: Change error messages.\n+\t* g++.old-deja/g++.other/std1.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.pt/crash28.C: Likewise.\n+\t* g++.old-deja/g++.pt/crash29.C: Use explicit specialization\n+\tsyntax.\n+\t* g++.old-deja/g++.pt/crash32.C: Change error message.\n+\t* g++.old-deja/g++.pt/crash43.C: Adjust error messages.\n+\t* g++.old-deja/g++.pt/crash58.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.pt/crash65.C: Tweak to acount for change in\n+\terror message position.\n+\t* g++.old-deja/g++.pt/defarg5.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.pt/defarg8.C: Change error message.\n+\t* g++.old-deja/g++.pt/eichin01.C: Use explicit specialization\n+\tsyntax.\n+\t* g++.old-deja/g++.pt/eichin01a.C: Define static data members.\n+\t* g++.old-deja/g++.pt/eichin01b.C: Likewise.\n+\t* g++.old-deja/g++.pt/enum7.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.pt/explicit12.C: Remove invalid use of template\n+\tkeyword.\n+\t* g++.old-deja/g++.pt/explicit31.C: Likewise.\n+\t* g++.old-deja/g++.pt/explicit33.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.pt/explicit35.C: Remove invalid use of template\n+\tkeyword.\n+\t* g++.old-deja/g++.pt/explicit71.C: Change error message.\n+\t* g++.old-deja/g++.pt/explicit80.C: Use explicit specialization\n+\tsyntax.\n+\t* g++.old-deja/g++.pt/friend28.C: Account for use of\n+\tnon-dependent names.\n+\t* g++.old-deja/g++.pt/friend29.C: Likewise.\n+\t* g++.old-deja/g++.pt/friend46.C: Adjust for correct name lookup\n+\trules.\n+\t* g++.old-deja/g++.pt/friend48.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.pt/instantiate1.C: Use correct class-key.\n+\t* g++.old-deja/g++.pt/instantiate11.C: Adjust for correct name\n+\tlookup rules.\n+\t* g++.old-deja/g++.pt/instantiate8.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.pt/instantiate9.C: Insert missing typename\n+\tkeyword.\n+\t* g++.old-deja/g++.pt/memclass20.C: Likewise.\n+\t* g++.old-deja/g++.pt/memclass5.C: Likewise.\n+\t* g++.old-deja/g++.pt/memclass7.C: Remove invalid use of template\n+\tkeyword.\n+\t* g++.old-deja/g++.pt/memtemp75.C: Likewise.\n+\t* g++.old-deja/g++.pt/memtemp81.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.pt/memtemp87.C: Add missing access specifier.\n+\t* g++.old-deja/g++.pt/overload13.C: Correct error messages.\n+\t* g++.old-deja/g++.pt/parms2.C: Add missing typename keyword.\n+\t* g++.old-deja/g++.pt/ptrmem1.C: Remove invalid use of template\t\n+\tkeyword.\n+\t* g++.old-deja/g++.pt/spec10.C: Likewise.\n+\t* g++.old-deja/g++.pt/spec28.C: Reorder declarations.\n+\t* g++.old-deja/g++.pt/t10.C: Add explicit specialization syntax.\n+\t* g++.old-deja/g++.pt/t32.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.pt/t35a.C: Add explicit specialization syntax.\n+\t* g++.old-deja/g++.pt/ttp24.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.pt/ttp62.C: Likewise.\n+\t* g++.old-deja/g++.pt/ttp64.C: Likewise.\n+\t* g++.old-deja/g++.pt/typename11.C: Add missing typename keyword.\n+\t* g++.old-deja/g++.pt/typename15.C: Likewise.\n+\t* g++.old-deja/g++.pt/typename22.C: Likewise.\n+\t* g++.old-deja/g++.pt/typename6.C: Change error messages.\n+\t* g++.old-deja/g++.pt/using1.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.pt/virtual2.C: Likewise.\n+\t* g++.old-deja/g++.robertl/eb118.C: Add explicit specialization\n+\tsyntax.\n+\t* g++.old-deja/g++.robertl/eb27.C: Now fails due to use of named\n+\treturn value extension.\n+\t* g++.old-deja/g++.robertl/eb43.C: Remove stray semicolon.\n+\t* g++.old-deja/g++.robertl/eb79.C: Correct for new name lookup rules.\n+\t* g++.old-deja/g++.robertl/eb82.C: Remove stray semicolons.\n+\t* g++.old-deja/g++.robertl/eb86.C: Add missing forward declaration.\n+\t\n 2002-12-26  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.dg/warn/inline1.C: New test."}, {"sha": "8edd3a1c6499aaff66ea837fe79b5340808e4834", "filename": "gcc/testsuite/g++.dg/eh/spec4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fspec4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fspec4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fspec4.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -14,4 +14,4 @@ public:\n \n typedef HandlerStack<std::set_terminate> Terminate;\n \n-template<> void Terminate::defaultHandler() {};\n+template<> void Terminate::defaultHandler() {}"}, {"sha": "9bb8a037d7553e14b8765cede1adb32833c092c1", "filename": "gcc/testsuite/g++.dg/expr/pmf-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fpmf-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fpmf-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fpmf-1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -13,7 +13,7 @@ struct A\n   void h()\n   {\n     void (A::*p)() = &A::f;\n-    void (A::*q)() = &(A::f);       // { dg-error \"parenthesis\" \"\" }\n+    void (A::*q)() = &(A::f);       // { dg-error \"parenthesized\" \"\" }\n     foo(&g<int>);                   // { dg-error \"\" \"\" }\n   }\n };"}, {"sha": "dd4aede2424cce6878a182463930ed8b7f239113", "filename": "gcc/testsuite/g++.dg/ext/asm1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -20,7 +20,7 @@ int foo (void)\n          [third] \"i\" (j + 2),\n          [fourth] \"i\" (100));\n   return i;\n-};\n+}\n \n template<class TYPE>\n TYPE bar (TYPE t)"}, {"sha": "f66210ff5065684f9b56a5606b33cb5de301acfe", "filename": "gcc/testsuite/g++.dg/ext/typename1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ftypename1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ftypename1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ftypename1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -2,6 +2,6 @@\n // { dg-options \"-fpermissive -w\" }\n \n template <class T> struct A { typedef int X; };\n-template <class T> struct B { typedef A<T> Y; void f (Y::X); };\n-template <class T, class T1, class T2, class T3> struct C : public B<T> { void g (Y::X); };\n+template <class T> struct B { typedef A<T> Y; void f (typename Y::X); };\n+template <class T, class T1, class T2, class T3> struct C : public B<T> { void g (typename Y::X); };\n template class B<int>;"}, {"sha": "5d34b15d8fcb4f6984dad09fb863426740b6696e", "filename": "gcc/testsuite/g++.dg/inherit/template-as-base.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Ftemplate-as-base.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Ftemplate-as-base.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Ftemplate-as-base.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -6,4 +6,4 @@ namespace N\n     template<typename> struct X { };\n }\n \n-struct A : N::X { }; // { dg-error \"invalid base-class\" \"\" }\n+struct A : N::X { }; // { dg-error \"expected class-name\" \"\" }"}, {"sha": "fc6c4b3c2691182d821189b0ad18508dfbd087b0", "filename": "gcc/testsuite/g++.dg/lookup/scoped1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fscoped1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fscoped1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fscoped1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -4,7 +4,7 @@\n struct A\n {\n   static int i1;\n-  int i2;\n+  int i2; // { dg-error \"inaccessible\" \"\" }\n   static void f1 ();\n   void f2 ();\n };\n@@ -15,7 +15,7 @@ struct C: public B\n   void g ()\n   {\n     ::A::i1 = 1;\n-    ::A::i2 = 1;\t\t// { dg-error \"access\" \"\" }\n+    ::A::i2 = 1;\t\t// { dg-error \"(access)|(context)\" \"\" }\n     ::A::f1 ();\n     ::A::f2 ();\t\t\t// { dg-error \"access\" \"\" { xfail *-*-* } }\n   }"}, {"sha": "08882d97438b99667f0ea0a33f1f1db9ce764155", "filename": "gcc/testsuite/g++.dg/lookup/scoped2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fscoped2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fscoped2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fscoped2.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -13,7 +13,7 @@ struct Derived : Base\n {\n   void Foo ()\n   {\n-    Base::Baz ();  // { dg-error \"has no member\" \"\" }\n+    Base::Baz ();  // { dg-error \"is not a member\" \"\" }\n       \n   };\n };"}, {"sha": "12ef8c8a578c3e44606c475dc30d5053ba2a1e00", "filename": "gcc/testsuite/g++.dg/lookup/scoped3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fscoped3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fscoped3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fscoped3.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -20,4 +20,4 @@ struct C : public B\n };\n \n \n-template C<int>;\n+template struct C<int>;"}, {"sha": "c7aa09c466d23de8f8cece0cd84352aaef87a787", "filename": "gcc/testsuite/g++.dg/lookup/using2.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing2.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -25,7 +25,7 @@ namespace N\n   template<int> void f() {}\n }\n \n-using N;             // { dg-error \"parse error\" \"\" }\n+using N;             // { dg-error \"(using-declaration)|(nested-name)\" \"\" }\n using ::N;           // { dg-error \"using-declaration\" \"\" }\n using N::f< 0 >;     // { dg-error \"using-declaration\" \"\" }\n \n@@ -41,6 +41,6 @@ struct B : A {\n \n struct C : A {\n   using A::f<double>; // { dg-error \"using-declaration\" \"\" }\n-  using A::X<int>;    // { dg-error \"parse error\" \"\" }\n+  using A::X<int>;    // { dg-error \"using-declaration\" \"\" }\n };\n "}, {"sha": "80b95609d0ed2cacdf6fd202a0fd2b80d8dea979", "filename": "gcc/testsuite/g++.dg/other/component1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcomponent1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcomponent1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcomponent1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,6 +1,6 @@\n // { dg-do compile }\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 28 Dec 2001 <nathan@codesourcery.com>\n \n // PR 5123. ICE\n@@ -26,4 +26,4 @@ void Foo () {\n   c.g == 1;\t\t// { dg-error \"invalid use of\" \"\" }\n   c.f == 1;\t\t// { dg-error \"invalid use of\" \"\" }\n   c.f<int> == 1;\t// { dg-error \"invalid use of\" \"\" }\n-};\n+}"}, {"sha": "8cbd1a35f1f483d74da3dbebac37ccfb841e2005", "filename": "gcc/testsuite/g++.dg/other/do1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdo1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdo1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdo1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -8,6 +8,6 @@\n void init ()\n {\n   do {  } while (0)\n-\t    obj = 0; // { dg-error \"parse error\" \"\" }\n+\t    obj = 0; // { dg-error \"expected|undeclared\" \"\" }\n      \n }"}, {"sha": "344be234f3bc08c07ec1e72267c0c591eb648b61", "filename": "gcc/testsuite/g++.dg/other/error2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror2.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -10,5 +10,5 @@ namespace N\n   class B { friend void operator>>(int, class B); };\n   class N { friend void operator>>(int,class N); };\n } \n-void N::operator>>(int, N::B)  // { dg-error \"no type `B' in `N::N'\" \"\" }\n+void N::operator>>(int, N::B)  // { dg-error \"`B' is not a member of `class N::N'|non-function|primary-expression\" \"\" }\n { } // { dg-error \"\" \"\" }"}, {"sha": "ec1986e9b7ac9195da125aa86242f008cbb480a7", "filename": "gcc/testsuite/g++.dg/other/init1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Finit1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Finit1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Finit1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,6 +1,6 @@\n // { dg-do compile }\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 13 Nov 2001 <nathan@codesourcery.com>\n \n // Bug 3154\n@@ -17,7 +17,7 @@ struct B : A\n class T\n {\n   typedef int Foo;\n-  T () : Foo () {}\t// { dg-error \"type `T::Foo' is not\" \"\" }\n+  T () : Foo () {}\t// { dg-error \"T::Foo' is not\" \"\" }\n };\n \n struct S : B"}, {"sha": "4fb7194dd9f9a836a4984aeb499afe4ab9add9bd", "filename": "gcc/testsuite/g++.dg/other/packed1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpacked1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpacked1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpacked1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -19,4 +19,4 @@ int main ()\n \n   return 0;\n   \n-};\n+}"}, {"sha": "d267df15be163dbdbef634c5e6600dc6e838847b", "filename": "gcc/testsuite/g++.dg/other/ptrmem2.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fptrmem2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fptrmem2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fptrmem2.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,14 +1,14 @@\n // { dg-do compile }\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 31 Dec 2001 <nathan@codesourcery.com>\n \n // PR 4379. We created pointers to member references and pointers to\n // member fields when we shouldn't have.\n \n struct D {\n   \n-  int &m;   // { dg-error \"member `D::m' is non-static\" \"\" }\n+  int &m;       // { dg-error \"invalid use of non-static data member\" \"\" }\n   static int &s;\n   \n   int Foo ();\n@@ -29,7 +29,7 @@ int D::Foo ()\n int Foo ()\n {\n   f1( &D::m);    // { dg-error \"cannot create pointer to ref\" \"\" }\n-  f1( &(D::m));  // { dg-error \"at this point\" \"\" }\n+  f1( &(D::m));  // { dg-error \"from this location\" \"\" }\n   f2( &D::s);    // ok\n   f2( &(D::s));  // ok\n   return 0;"}, {"sha": "22d6f214d7df03c0a5c51757dee0c067ced7cad3", "filename": "gcc/testsuite/g++.dg/parse/parameter-declaration-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparameter-declaration-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparameter-declaration-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fparameter-declaration-1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -3,4 +3,4 @@\n // { dg-do compile }\n \n struct {\n-   a(void = 0; a(0), a(0)\t// { dg-error \"\" \"\" { target *-*-* } 7 }\n+   a(void = 0; a(0), a(0)\t// { dg-error \"\" \"\" { target *-*-* } }"}, {"sha": "adde34fefa64453a7561421599bedaa57ceb5970", "filename": "gcc/testsuite/g++.dg/special/initp1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Finitp1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Finitp1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspecial%2Finitp1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -19,7 +19,7 @@ extern Two goo;\n extern Two coo[];\n extern Two koo[];\n \n-Two foo( 5, 6 ) __attribute__((init_priority(1005)));\n+Two foo __attribute__((init_priority(1005))) ( 5, 6 );\n \n Two goo __attribute__((init_priority(1007))) = Two( 7, 8 );\n "}, {"sha": "e8ee1041d13c8bff15525ec42350af6cfc00f823", "filename": "gcc/testsuite/g++.dg/template/access3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess3.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -4,7 +4,7 @@\n // Enforcing access of typename type.\n \n template <class T> struct A {\n-  typename T::X<int> x;\t\t\t// { dg-error \"this context\" }\n+  typename T::template X<int> x;\t// { dg-error \"this context\" }\n };\n \n class B {"}, {"sha": "b2da190ff4eb5feb295ce945886abeed31d5be72", "filename": "gcc/testsuite/g++.dg/template/access5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess5.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -16,6 +16,6 @@ class Outer {\n template <int dim>\n typename Outer::Inner<dim>::T  Outer::Inner<dim>::foo () {\n   return 1;\n-};\n+}\n \n-template Outer::Inner<2>;\n+template struct Outer::Inner<2>;"}, {"sha": "cbc8000d1859d6fb3f603eddfb42d16c4cc5dbe8", "filename": "gcc/testsuite/g++.dg/template/access6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess6.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -11,7 +11,7 @@ template <class> class Base {\n     \n template <class T> struct Derived : public Base<T> {\n   typedef typename Base<T>::Type Type;\n-  template <class Arg> void f(Type = Type()) {};\n+  template <class Arg> void f(Type = Type()) {}\n };\n     \n template void Derived<char>::f<int> (Type);"}, {"sha": "00eb23e83b3e29a9da7c4fe4f61237e67aeacdd4", "filename": "gcc/testsuite/g++.dg/template/complit1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcomplit1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcomplit1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcomplit1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -6,6 +6,6 @@ template <int D> struct C {\n };\n \n template<int D>\n-C<D>::C() : d((int[]){1,2,3}) {};\n+C<D>::C() : d((int[]){1,2,3}) {}\n \n template class C<1>;"}, {"sha": "3879ad5abda4ec4d54f2ec94186a6e535b23cfe5", "filename": "gcc/testsuite/g++.dg/template/crash1.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -8,10 +8,10 @@\n class S\n {\n   public:\n-  template <class I> void Foo(int (*f)(S& o) ); // { dg-error \"candidate\" \"\" }\n+  template <class I> void Foo(int (*f)(S& o) ); \n };\n \n template <class I>\n-void S::Foo(int (*f)(TYPO&o) )\n-{ // { dg-error \"template definition|variable declaration|prototype\" \"\" }\n+void S::Foo(int (*f)(TYPO&o) ) // { dg-error \"Foo\" }\n+{ // { dg-error \"expected `;'\" }\n }"}, {"sha": "4fd7ec063eeaeb6ce1a04ffbb9235de18df4f4e8", "filename": "gcc/testsuite/g++.dg/template/inherit2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finherit2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finherit2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finherit2.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -16,4 +16,4 @@ struct B: public A {\n int main() \n {\n     B<int> a; \n-};\n+}"}, {"sha": "a6faf17aea11af87c98b78479aad856cb592edab", "filename": "gcc/testsuite/g++.dg/template/instantiate2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate2.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -4,5 +4,5 @@\n // PR c++/2862\n // Default function argument and template instantiation.\n \n-template <int dim> void f (int=0) {};\n+template <int dim> void f (int=0) {}\n template void f<1> ();\t\t// { dg-error \"not match\" }"}, {"sha": "14dbcdac07958c0e49ce04156c7aa857c80b7131", "filename": "gcc/testsuite/g++.dg/template/instantiate3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate3.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -10,7 +10,7 @@ template <class TYPE>\n struct ACE_Cleanup_Adapter\n {\n   TYPE &object ()\n-  { return object_; }\t// { dg-error \"no member\" }\n+  { return object_; }\t// { dg-error \"undeclared|reported\" }\n   TYPE object_;\t\t// { dg-error \"incomplete type\" }\n };\n "}, {"sha": "8fa79b3d2e7a31ee4e37e31dbc1b38a2fdb56cb2", "filename": "gcc/testsuite/g++.dg/template/qual1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqual1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqual1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqual1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -7,7 +7,7 @@ public:\n   void sort (int (*compare) (T *const&,T *const&));\n };\n \n-int shift_compare (int *const &, int *const &) {};\n+int shift_compare (int *const &, int *const &) {}\n \n template<class T> void\n Link_array<T>::sort (int (*compare) (T *const&,T *const&)) "}, {"sha": "31dfa6a83d052e2c5c721a5a76a0be42a381a4e5", "filename": "gcc/testsuite/g++.dg/template/qualttp18.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp18.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2001 Free Software Foundation\n+// Copyright (C) 2001, 2002 Free Software Foundation\n // Contributed by Kriang Lerdsuwanakij <lerdsuwa@users.sourceforge.net>\n // { dg-do compile }\n \n@@ -14,7 +14,7 @@ template <template <class> class TT> struct X\n \n struct C\n {\n-\tX<A::template B> x; // { dg-error \"template|forbid\" }\n+\tX<A::template B> x; // { dg-error \"\" }\n };\n \n int main()"}, {"sha": "92ccc42cb11a799f1e1d3b1bf0d790e26d385075", "filename": "gcc/testsuite/g++.dg/template/ref1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fref1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fref1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fref1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,3 +1,3 @@\n class a {} a1;\n template <a & p> class b { public: b() { static_cast <a &> (p); }; };\n-int main() { b <a1> b1; };\n+int main() { b <a1> b1; }"}, {"sha": "45a7db48c926cc94bf1ea3dbf7ddac0ea664346b", "filename": "gcc/testsuite/g++.dg/template/sizeof1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsizeof1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsizeof1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsizeof1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -3,7 +3,7 @@\n \n // { dg-do compile }\n \n-template <unsigned I> struct A {};\n+template <unsigned I> struct A { static char *value; };\n \n template <typename SizeType>\n struct B"}, {"sha": "18116acb52973c9e58a361a10bc5274c1edbb4bd", "filename": "gcc/testsuite/g++.dg/template/spec4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec4.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -8,4 +8,4 @@ struct X {\n   template <int dim> void f(int=0);\n };\n \n-template <> void X::f<1> () {}\t// { dg-error \"(not match|syntax error)\" }\n+template <> void X::f<1> () {}\t// { dg-error \"(not match|declaration)\" }"}, {"sha": "98e1acb9e510921f0d26d6e60b6d1b77a7a87043", "filename": "gcc/testsuite/g++.dg/template/static1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,4 +1,4 @@\n template <typename T> struct A\n {\n-  static const int t[1][1]={{0}}; // { dg-error \"in-class\" }\n+  static const int t[1][1]={{0}}; // { dg-error \"brace-enclosed|in-class\" }\n };"}, {"sha": "98a4bd3bf03190da9473c24187b7c788d8ebb61b", "filename": "gcc/testsuite/g++.dg/template/type1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftype1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftype1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftype1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -5,4 +5,4 @@ struct A {\n };\n \n int A::B::c;\t\t\t// { dg-error \"parameters\" }\n-int A::C::d;\t\t\t// { dg-error \"no type\" }\n+int A::C::d;\t\t\t// { dg-error \"class\" }"}, {"sha": "0ad9a2a0c41ec6e21ab6b1a0678ba86bed93b4a7", "filename": "gcc/testsuite/g++.dg/template/typename3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename3.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -3,5 +3,5 @@\n \n template <class A>\n struct B {\n- typedef A::C::D E;  // { dg-error \"no type|parse error\" }\n+ typedef A::C::D E;  // { dg-error \"\" }\n };"}, {"sha": "47f634b1fdb1dc301a855a24defed85a2b59e51d", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/13478.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F13478.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F13478.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F13478.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -19,7 +19,7 @@ protected:\n   static const hand_table table_1[];\n   static const AData \t  table_2;\n private:\n-  void foo (void);                  // ERROR - candidate\n+  void foo (void);\n };\n \n const hand_table Agent::table_1[] = "}, {"sha": "713e3fb90aaf6b702bb70d1e67e4947657ddb96c", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/15799.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15799.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15799.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15799.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -24,6 +24,6 @@ enum { first, last};\n \n void foo(void) {\n   sanjose obj(first); // ERROR -  // ERROR -\n-};\n+}\n \n "}, {"sha": "bd4d3f06f3f51ef314b026854b6e0f18a8a12abe", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/bool01.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Fbool01.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Fbool01.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Fbool01.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -4,8 +4,8 @@\n #include <assert.h>\n #include <limits.h>\n \n-void bar ( bool  x ) {};\n-void bars ( short  x ) {};\n+void bar ( bool  x ) {}\n+void bars ( short  x ) {}\n \n /* 980326 bkoz this is not initialized and so can have indeterminate value. */\n #if 0"}, {"sha": "a7730f07899a4d29a8dc58073b4689e327e01aab", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/bool02.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Fbool02.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Fbool02.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Fbool02.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -4,8 +4,8 @@\n #include <assert.h>\n \n \n-void bar ( bool  x ) {};\n-void bars ( short  x ) {};\n+void bar ( bool  x ) {}\n+void bars ( short  x ) {}\n \n #if 0\n int andb(){"}, {"sha": "75253f2c0c566ebcec8f8be0fea0f1f6f9a2cc06", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/p13417.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Fp13417.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Fp13417.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Fp13417.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -7,5 +7,5 @@ public:\n   explicit Foo (int){}\n };\n Foo f(10);\n-Foo blat() return f(4){}; //this should not give an error\n+Foo blat() return f(4){} // ERROR - named return value\n  "}, {"sha": "1dae2a97eae3e4b6c3dd8058bcf9d58adbd2ce92", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/tem03.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftem03.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftem03.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftem03.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -126,7 +126,7 @@ public:\n   template <class T161>\n   friend bool foo(T161 u)\n     {\n-      Xseven<T161, 5, int> obj;\n+      Xseven<T161, 5, int> obj; // ERROR - .*\n       return (obj.inst == u.inst);\n     }\n "}, {"sha": "7ccfc16fd7f3dc1cea0bbc89189ade90f1b7933d", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/tem06.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftem06.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftem06.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Ftem06.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -17,7 +17,7 @@ template<class T>\n void blah (const T &) {\n   T y;\n   x (4);\n-};\n+}\n \n int main () {\n   const foo<int> v;"}, {"sha": "9e7839a253b1d9d05e70b282eca334735f145402", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/warn01.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Fwarn01.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Fwarn01.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Fwarn01.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -12,7 +12,7 @@ void f (void) {\n    catch( int)\n     {    \n     }\n-};\n+}\n \n //\n //2 g++/12923 __attribute__((__unused__)) not working for objects\n@@ -77,7 +77,7 @@ int foofunc(T x){\n   Mutex sm(2);\n   AutoMutex m(&sm);\n   return 0;\n-};\n+}\n \n \n //5 sanity check to make sure other attributes cannot be used"}, {"sha": "18311ce13b543787ee235d1ea19b5a769273d35c", "filename": "gcc/testsuite/g++.old-deja/g++.bob/extern_C.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bob%2Fextern_C.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bob%2Fextern_C.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bob%2Fextern_C.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -4,6 +4,6 @@ extern \"C\" {\n   public:\n     void a();\n   };\n-};\n+}\n \n void A::a() {}"}, {"sha": "bf5f0895f9c8b4a6073722d8b9bd7055efbd672a", "filename": "gcc/testsuite/g++.old-deja/g++.bob/inherit2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bob%2Finherit2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bob%2Finherit2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bob%2Finherit2.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -16,7 +16,7 @@ public:\n };\n \n void f(B b) {\n-};\n+}\n \n void g() {\n   B h;"}, {"sha": "0e3f4f6f685b990a2993dc4d0a9c9616ecb5d33e", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/complex1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcomplex1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcomplex1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcomplex1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -9,7 +9,7 @@ extern \"C\" {\n int printf (const char *, ...);\n void exit (int);\n void abort (void);\n-};\n+}\n \n __complex__ double cd;\n "}, {"sha": "4c8620b128be5747197c477865f13c023bb4208d", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/copy5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcopy5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcopy5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcopy5.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -49,7 +49,7 @@ void BaseClass::Increm( int r )\n     i += r;\n   else\n     die ();\n-};\n+}\n \n class DerivedClass : public BaseClass {\n public:"}, {"sha": "d4496f5128eece934b563811bcb807315830c731", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash13.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash13.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -31,7 +31,7 @@ gen_op Spul_U_axis()\n {\n   gen_op U1;\n   U1 = Fe();\n-}; // ERROR - reaches end of non-void function\n+} // ERROR - reaches end of non-void function\n \n int\n-main () {};\n+main () {}"}, {"sha": "62ad08956387c9706b28e32414596d409d3069eb", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash15.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash15.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -4,12 +4,12 @@\n \n class A {\n  public:\n-  virtual ~A() {std::cout << \"executed ~A()\\n\";};\n+  virtual ~A() {std::cout << \"executed ~A()\\n\";}\n };\n \n class B : public A {\n  public:\n-  virtual ~B() {std::cout << \"executed ~B()\\n\";};\n+  virtual ~B() {std::cout << \"executed ~B()\\n\";}\n };\n \n int\n@@ -18,5 +18,5 @@ main() {\n   B b;\n   b.~A();// ERROR -  destructor\n   std::cout << \"done\\n\";\n-};\n+}\n "}, {"sha": "8cccfcb6d884741cebe7cb5776f4597f7be00e4e", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash18.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash18.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -13,5 +13,5 @@ public:\n         { return v != index; }// ERROR - .*\n private:\n //    friend class List<T>;\n-    element *index;\n+    element *index; // ERROR - invalid use of member\n };"}, {"sha": "8dafcf9b2e577ff41dc5ef7b0b22a7e8f33a3245", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash37.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash37.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash37.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash37.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -6,7 +6,7 @@ extern \"C\" {\n }\n extern \"C\" {\n         extern void foo();\n-};\n+}\n class SS {\n         friend void foo();\n protected:"}, {"sha": "e6f1b6c791ac534d0c705c8b4d4c315537d62700", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash38.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash38.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash38.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash38.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -37,7 +37,7 @@ main()\n   Implicit<Implicit<INTEGER, 2> ,  3> y;\n \n   y = 10;\n-};\n+}\n \n \n "}, {"sha": "52e05887ddf6bfbe14820a095783b2b38d9580fa", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash50.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash50.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash50.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash50.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -5,7 +5,7 @@ class B\n public:\n         int i;\n         };\n-int operator & (const B &s) { return ( s.i  );};\n+int operator & (const B &s) { return ( s.i  );}\n \n \n "}, {"sha": "739dfcba0301da9c91896861784ffd663839a187", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash56.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash56.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash56.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash56.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -341,7 +341,7 @@ operator>=(const SetLD<T>& a, const SetLD<T>& b)\n { return ! (a < b); }\n class String { };\n class IcaseString: public String { };\n-class SetLD< IcaseString >: public SetLD<    String  > {\tpublic:\t SetLD (): SetLD<    String  >() { };\t SetLD (const ListD<   IcaseString  >& other): SetLD<    String  >()\t{ ListD<   IcaseString  >::Vix x;\tfor (other.first(x); 0 != x; other.next(x))\tadd(other(x)); };\t SetLD (const  SetLD & other): SetLD<    String  >(other) { };\tconst    IcaseString  & operator()(const Vix& x) const\t{ return (   IcaseString  &) SetLD<    String  >::operator()(x); }\t}; \ttypedef SetLD<  String > SetLD_String_IcaseString_old_tmp99;\ttypedef SetLD< IcaseString > SetLD_String_IcaseString_new_tmp99;\t\n+template <> class SetLD< IcaseString >: public SetLD<    String  > {\tpublic:\t SetLD (): SetLD<    String  >() { };\t SetLD (const ListD<   IcaseString  >& other): SetLD<    String  >()\t{ ListD<   IcaseString  >::Vix x;\tfor (other.first(x); 0 != x; other.next(x))\tadd(other(x)); };\t SetLD (const  SetLD & other): SetLD<    String  >(other) { };\tconst    IcaseString  & operator()(const Vix& x) const\t{ return (   IcaseString  &) SetLD<    String  >::operator()(x); }\t}; \ttypedef SetLD<  String > SetLD_String_IcaseString_old_tmp99;\ttypedef SetLD< IcaseString > SetLD_String_IcaseString_new_tmp99;\t\n inline int\t operator== (const SetLD_String_IcaseString_new_tmp99& a,\tconst SetLD_String_IcaseString_new_tmp99& b)\n {// ERROR - candidate for call\n const SetLD_String_IcaseString_old_tmp99& oa = a;\n@@ -371,7 +371,7 @@ inline int\t operator>= (const SetLD_String_IcaseString_new_tmp99& a,\tconst SetLD\n {\n const SetLD_String_IcaseString_old_tmp99& oa = a;\n const SetLD_String_IcaseString_old_tmp99& ob = b;\n-return  operator>= (oa, ob);\t}   ;\n+return  operator>= (oa, ob);\t}   \n typedef SetLD<IcaseString> SLDiS;\n static void\n nop(int i)"}, {"sha": "2472ed4de8b2e092b4d26b28b9b9cc0794034ca3", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash6.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash6.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -9,6 +9,7 @@ template<int>\n class Program {\n } ;\n \n+template<>\n class Program<0> {\n public:\n    inline friend float EvalNextArg()"}, {"sha": "d15993196aba2da2c2b8a860bbb7127886a0347a", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash66.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash66.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash66.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash66.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -23,7 +23,7 @@ swaplong(ulong value)\n {\n     ulong v = (value << 16) | (value >> 16);\n     return ((v >> 8) & 0x00ff00ff) | ((v << 8) & 0xff00ff00);\n-};\n+}\n struct elong\n {\n     ulong\tdata;\t\t\t "}, {"sha": "f7906c5ddb3c5753ca0574b3e41d8edbcd183334", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash8.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -8,5 +8,5 @@ class Elvis\n template<int a>\n class Elvis<0>\n { // ERROR - incorrect number of parameters\n-  int geta() { return a ; } // ERROR - not in a class\n+  int geta() { return a ; }\n } ;"}, {"sha": "0a48eef950dc2c7234e66d45be341e0c849f5ea1", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/ctors1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fctors1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fctors1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fctors1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -24,4 +24,4 @@ base::base(int arg1, int arg2)\n {\n \tf1 = arg1;\n \tf2 = arg2;\n-};\n+}"}, {"sha": "127dd36b895e2ff763bf4d40c72a11fcf221d14e", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/ctors2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fctors2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fctors2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fctors2.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -25,4 +25,4 @@ base::base(int arg1, int arg2)\n {\n \tf1 = arg1;\n \tf2 = arg2;\n-};\n+}"}, {"sha": "b9b36367c3d9c34436be3e8ded7c9fd20be1cb71", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/shadow1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fshadow1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fshadow1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fshadow1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -5,4 +5,4 @@ void f( int a) {\n \t{\n \t\tint a;\n \t}\n-};\n+}"}, {"sha": "8316c2f5641e2456e7bfc5a233dd35cc0f86ee2f", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/template11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ftemplate11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ftemplate11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ftemplate11.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -24,7 +24,7 @@ aCallback<Called>::aCallback(Called& obj,\n                              int (Called::*met)()) :\n object(obj),\n method(met)\n-{};\n+{}\n \n template <class Called>\n int aCallback<Called>::callback()"}, {"sha": "d245423abc620a51385b29c83afcffe6e7328235", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/template26.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ftemplate26.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ftemplate26.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ftemplate26.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -18,10 +18,10 @@ template <int I> class BB : public virtual V {\n   BB(int);\n   };\n \n-template <int I> AA<I>::AA() {};\n-template <int I> AA<I>::AA(int i): V(i) {};\n-template <int I> BB<I>::BB() {};\n-template <int I> BB<I>::BB(int i) {};\n+template <int I> AA<I>::AA() {}\n+template <int I> AA<I>::AA(int i): V(i) {}\n+template <int I> BB<I>::BB() {}\n+template <int I> BB<I>::BB(int i) {}\n \n class CC : public AA<1>, public BB<2> {\n  public:"}, {"sha": "25752160a14580ee7f65dfc6a7b3d6d46d3f1094", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/template27.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ftemplate27.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ftemplate27.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ftemplate27.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -5,7 +5,8 @@\n         class X1 { };\n         class RefProto { };\n         template<class REP> class Ref { };\n-        \n+\n+        template <>\n         class MapLS<String, Ref<X1> >: public MapLS<String, RefProto> {\n         public:\n             ~MapLS();"}, {"sha": "dcbd9c19da5f3b37f6f11256c6fc4f3949903b3d", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/template30.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ftemplate30.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ftemplate30.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ftemplate30.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -6,7 +6,8 @@\n         class X1 { };\n         class RefProto { };\n         template<class REP> class Ref { };\n-        \n+\n+        template <>        \n         class MapLS<String, Ref<X1> >: public MapLS<String, RefProto> {\n         public:\n             ~MapLS();"}, {"sha": "810f0cb0c132c8af2d96211c18ed9b8d7f90e18a", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/template5.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ftemplate5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ftemplate5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ftemplate5.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -18,16 +18,16 @@ Vector<T>::Vector(int x)\n {\n     sz = x;\n     v = new T (sz);\n-} ;\n+} \n \n template<class T>\n Vector<T>::~Vector()\n-    { delete [] v; } ;\n+    { delete [] v; } \n \n template<class T>\n T &\n Vector<T>::operator [] (int i)\n-    { return v[i]; } ;\n+    { return v[i]; } \n \n int\n main(int, char **)"}, {"sha": "62cdfeef4bbe535237d4fbda35c3f33eaf121f20", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/visibility3.C", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fvisibility3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fvisibility3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fvisibility3.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -6,6 +6,13 @@\n \n class A {};\n \n+template <class TP>\n+class B;\n+\n+template <class TP>\n+inline A &\n+operator<< (A &o, const B<TP> &m);\n+\n template <class TP>\n class B\n {"}, {"sha": "f22a57e7e0b610124bc2cca6d6b455a6ce850e89", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/warnings4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fwarnings4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fwarnings4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fwarnings4.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -7,4 +7,4 @@ main ()\n   int * foo = &x; // in C++ it's perfectly legal to do this\n \n   return 0;\n-};\n+}"}, {"sha": "2fc2892a4ac731178a35565be63dcc6ef120718d", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/warnings7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fwarnings7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fwarnings7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fwarnings7.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -18,4 +18,4 @@ x()\n     x.kill(0);\n     X<Y> y;\n     y.kill(0);\n-};\n+}"}, {"sha": "79a669cd4291fb83a5fcdfd98de3e4d4fd9b87d9", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900121_02.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900121_02.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900121_02.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900121_02.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -44,6 +44,6 @@ void function ()\n   u0 u0_object_1;\n \n   u0_object_0 = u0_object_1;\n-};\n+}\n \n int main () { return 0; }"}, {"sha": "bddca378b5db29c5cf6c1c58a57464f5df8b85b1", "filename": "gcc/testsuite/g++.old-deja/g++.eh/catchptr1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fcatchptr1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fcatchptr1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fcatchptr1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,10 +1,10 @@\n // Test pointer chain catching\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2002 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 9 Apr 2000 <nathan@nathan@codesourcery.com>\n \n #include <stdio.h>\n \n-void fn () {};\n+void fn () {}\n struct A {void fn () {}};\n static int var = 1;\n static const int const_var = 2;"}, {"sha": "a4949f60d4c10de416c74030b7ccfee01c8c1179", "filename": "gcc/testsuite/g++.old-deja/g++.ext/addrfunc4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Faddrfunc4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Faddrfunc4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Faddrfunc4.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -21,4 +21,4 @@ int main()\n   fn1 = a.f; \n   fn1 = (pmf1)a.f;\n   fn2 = (pmf2)a.f;\n-};\n+}"}, {"sha": "30c4510e7c7d4572141a0902112087367b492c7e", "filename": "gcc/testsuite/g++.old-deja/g++.ext/default.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fdefault.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fdefault.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fdefault.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -5,8 +5,8 @@ extern \"C\" int printf (const char *, ...);\n \n class A {\n public:\n-  static A*func (int = 3);\n-  static A*(*ptr)(int = 4);\n+  static A*func (int = 3); \n+  static A*(*ptr)(int = 4); // ERROR - .*\n };\n \n A*(*A::ptr)(int) = &A::func;\n@@ -15,7 +15,7 @@ int main()\n {\n   A foo;\n \n-  A::ptr();\n+  A::ptr(); // ERROR - .*\n   A::ptr(47);\n }\n "}, {"sha": "ad1e36f77dbcf86a09b60176147fdaf2c31ce88d", "filename": "gcc/testsuite/g++.old-deja/g++.ext/namedret1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fnamedret1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fnamedret1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fnamedret1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,6 +1,6 @@\n // Special g++ Options: -Wno-deprecated\n \n-int f(int x) return y(x) { }\n+int f(int x) return y(x) { } // ERROR - \n \n extern \"C\" void abort ();\n "}, {"sha": "277a9964f843e7ce734a83d0d3d46392af328d45", "filename": "gcc/testsuite/g++.old-deja/g++.ext/namedret2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fnamedret2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fnamedret2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fnamedret2.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -5,7 +5,7 @@\n // The Alpha ABI specifies that 32-bit return values have bit 31 propagated,\n // i.e. the value is sign-extended even if the unpromoted type is unsigned.\n \n-unsigned int f(unsigned int x) return y(x) { }\n+unsigned int f(unsigned int x) return y(x) { } // ERROR - \n \n extern \"C\" void abort ();\n "}, {"sha": "7ea66137276d1d87c930ed9835357227d564b056", "filename": "gcc/testsuite/g++.old-deja/g++.ext/namedret3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fnamedret3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fnamedret3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fnamedret3.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -8,9 +8,9 @@ int f2(int *x)\n   return 2;\n }\n \n-int f1() return x\n+int f1() return x // ERROR - \n {\n-  f2(&x);\n+  f2(&x); // ERROR - \n }\n \n void g()"}, {"sha": "53d0c6fb1b9f86c18f877ee97445beec2217218b", "filename": "gcc/testsuite/g++.old-deja/g++.ext/return1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Freturn1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Freturn1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Freturn1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -7,9 +7,9 @@ void f (int &i)\n   i = 42;\n }\n \n-int g () return r\n+int g () return r // ERROR - named return value\n {\n-  f (r);\n+  f (r); // ERROR - undeclared\n }\n \n int main ()"}, {"sha": "2e489ab10fbf2055e3d476af90e5ab78d4396dc2", "filename": "gcc/testsuite/g++.old-deja/g++.ext/typename1.C", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Ftypename1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Ftypename1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Ftypename1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,8 +1,6 @@\n // Bug: g++ forgets about the instantiation of class1 when looking up\n // class11_value, and tries to look things up in class1<class2>.\n \n-// Special g++ Options:\n-\n template<class ItIsInt>\n struct class1 {\n   struct class11 {\n@@ -18,7 +16,7 @@ struct class3 {\n template<class ItIsClass2>\n int class3<ItIsClass2>::f()\n {\n-  return class1<typename ItIsClass2::class2_value>::class11::class11_value(10);\n+  return typename class1<typename ItIsClass2::class2_value>::class11::class11_value(10);\n }\n \n struct class2 {"}, {"sha": "8f41b5f8e0b3fa269c32e614d4cf0dc94986afc5", "filename": "gcc/testsuite/g++.old-deja/g++.jason/access17.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Faccess17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Faccess17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Faccess17.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -12,8 +12,8 @@ struct B: public A {\n   static int (A::*fp)();\n };\n \n-int A::* B::p = &A::i;\n-int (A::* B::fp)() = &A::f;\n+int A::* B::p = &A::i;         // ERROR - \n+int (A::* B::fp)() = &A::f;    // ERROR -\n \n struct C {\n   static int A::*p;"}, {"sha": "c0c46ff7c89b2dc3dae5da76d80152313adb43bc", "filename": "gcc/testsuite/g++.old-deja/g++.jason/access8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Faccess8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Faccess8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Faccess8.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -3,7 +3,7 @@\n // Bug: g++ forgets access decls after the definition.\n // Build don't link:\n \n-class inh {\n+class inh { // ERROR - inaccessible\n         int a;\n protected:\n         void myf(int);"}, {"sha": "30eb23fa06340f6f2f04f5206b6c9cb7b95acefd", "filename": "gcc/testsuite/g++.old-deja/g++.jason/bool.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fbool.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fbool.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fbool.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -31,7 +31,7 @@ void g ()\n template <class T> struct F { };\n template class F<bool>;\n \n-template <class T> void f (T, bool) { };\n+template <class T> void f (T, bool) { }\n template void f (bool, bool);\n \n /* Special cases.  */"}, {"sha": "6c9c2964d3346dc23f8f97c27503297f096e2e41", "filename": "gcc/testsuite/g++.old-deja/g++.jason/destruct.C", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fdestruct.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fdestruct.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fdestruct.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -14,6 +14,7 @@ public:\n };\n \n typedef char * cp;\n+typedef int I;\n \n int main ()\n {\n@@ -22,10 +23,10 @@ int main ()\n   int i;\n   cp c;\n \n-  i.~int();\n-  i.int::~int();\n-  (&i)->~int();\n-  (&i)->int::~int();\n+  i.~I();\n+  i.I::~I();\n+  (&i)->~I();\n+  (&i)->I::~I();\n   c.~cp();\n   c.cp::~cp();\n   (&c)->~cp();"}, {"sha": "5b17bcc540bbd78b1f260bccdd0d12fa57cf01b6", "filename": "gcc/testsuite/g++.old-deja/g++.jason/dtor3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fdtor3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fdtor3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fdtor3.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -4,7 +4,7 @@\n \n #include <stddef.h>\n \n-void *operator new(size_t Size, void* pThing) { return pThing; };\n+void *operator new(size_t Size, void* pThing) { return pThing; }\n \n template <class T> class Stack {\n public:"}, {"sha": "4f4016c6b5eeb3fc027dc137d484c27da138abc0", "filename": "gcc/testsuite/g++.old-deja/g++.jason/dtor5.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fdtor5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fdtor5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fdtor5.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -18,7 +18,8 @@ int main()\n \n   int* p = (int*) new char[sizeof (int)];\n   new (p + r++) int;\n-  p[--r].~int();\n+  typedef int I;\n+  p[--r].~I();\n   \n   return r;\n }"}, {"sha": "1152aa089176f2f71dc37805eff417389b49c610", "filename": "gcc/testsuite/g++.old-deja/g++.jason/opeq3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fopeq3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fopeq3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fopeq3.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -12,4 +12,4 @@ void foo ()\n   int one=1, two=2;\n   X a(one), b(two);\n   a = b;\t\t\t// ERROR - no assignment semantics defined\n-};\n+}"}, {"sha": "99dcc915d98b6a3dca7930b69fb7ec3f88ee556e", "filename": "gcc/testsuite/g++.old-deja/g++.jason/overload19.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload19.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -3,7 +3,7 @@\n \n enum E { A=5, B=32, C=100 };\n \n-E operator|(E a, E b) { return C; };\n+E operator|(E a, E b) { return C; }\n \n int main()\n {"}, {"sha": "6e207be325795f521603cb19c6c6f7224f5d288d", "filename": "gcc/testsuite/g++.old-deja/g++.jason/overload32.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload32.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload32.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload32.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -16,4 +16,4 @@ void f( const D & );\n void g( const X & x )\n {\n    f( x );\n-};\n+}"}, {"sha": "6c9c1fa64926008727ede6d35b1d3e115c4f310b", "filename": "gcc/testsuite/g++.old-deja/g++.jason/parse11.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fparse11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fparse11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fparse11.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -3,7 +3,7 @@\n \n class aClass \n { \n-  ;\n+  ; // ERROR - missing declaration\n private: \n-  ;   // This line causes problems \n+  ; // ERROR - missing declaration\n }; "}, {"sha": "d34809cb3e12da4a0cf1eef0ff422f0e33503f1a", "filename": "gcc/testsuite/g++.old-deja/g++.jason/pmem2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fpmem2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fpmem2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fpmem2.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -20,7 +20,7 @@ aCallback<Called>::aCallback(Called& obj,\n                              int (Called::*met)()) :\n object(obj),\n method(met)\n-{};\n+{}\n \n template <class Called>\n int aCallback<Called>::callback()"}, {"sha": "c20d2506ee1c7c6e075e00d9b338c64efd5a8087", "filename": "gcc/testsuite/g++.old-deja/g++.jason/return.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Freturn.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Freturn.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Freturn.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -12,7 +12,7 @@ struct X {\n \n const X foo() { \n   return X(3); \n-};\n+}\n \n int main()\n {"}, {"sha": "29da5b28e5873f1fd7f12dffd1e096d63e1a2765", "filename": "gcc/testsuite/g++.old-deja/g++.jason/return2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Freturn2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Freturn2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Freturn2.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -14,7 +14,7 @@ struct Y {\n \n Y foo() { \n   return X(3); \n-};\n+}\n \n int main()\n {"}, {"sha": "f3f4d17979cf12e65a8f5cc5eb3b312204c835e0", "filename": "gcc/testsuite/g++.old-deja/g++.jason/shadow1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fshadow1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fshadow1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fshadow1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -8,7 +8,7 @@ private:\n         int foo;\n };\n \n-void x::fun() { };\n+void x::fun() { }\n \n main ()\n {"}, {"sha": "41fae60b9fdba766cc1a6be47d7f5e1754ae8382", "filename": "gcc/testsuite/g++.old-deja/g++.jason/special.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fspecial.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fspecial.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fspecial.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,6 +1,6 @@\n // Make sure that forward declarations of specializations work...\n \n template <class T> class A { };\n-class A<int>;\n+template <> class A<int>;\n A<int> a;\t\t\t// ERROR - incomplete type\n-class A<int> { };\n+template <> class A<int> { };"}, {"sha": "c63e1d031559ab92acc9d78d4d9bd3a60f40ff09", "filename": "gcc/testsuite/g++.old-deja/g++.jason/template10.C", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate10.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -3,6 +3,11 @@\n \n class ostream;\n \n+template <class TP> class smanip;\n+\n+template<class TP>\n+ostream& operator<<(ostream& o, const smanip<TP>& m);\n+\n template <class TP> class smanip {\n public:\n   friend ostream& operator<< <>(ostream &o, const smanip<TP>&m);"}, {"sha": "fed322e8415d06b2e43c3afaefc0225e75c6e1b5", "filename": "gcc/testsuite/g++.old-deja/g++.jason/template11.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate11.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -6,6 +6,7 @@ template <class T> struct A {\n \n int foo () { return 1; }\n \n+template <>\n int A<int>::t = foo ();\n \n int main ()"}, {"sha": "dd3ec29919152a509d7a30be35e3e1466dbfeadb", "filename": "gcc/testsuite/g++.old-deja/g++.jason/template37.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate37.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate37.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate37.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -17,6 +17,7 @@\n   {\n   }\n \n+  template <>\n   class ONE<int>\n   {\n     public:"}, {"sha": "17f0db8f38ca07650834d94d71ea9c623be48699", "filename": "gcc/testsuite/g++.old-deja/g++.law/access4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Faccess4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Faccess4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Faccess4.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -6,7 +6,7 @@\n // Subject:  g++ 2.5.5 doesn't warn about inaccessible virtual base ctor\n // Message-ID: <9403030024.AA04534@ses.com>\n \n-class ForceLeafSterile {\n+class ForceLeafSterile { // ERROR - \n     friend class Sterile;\n       ForceLeafSterile() {} // ERROR - \n };"}, {"sha": "a33f5229d89cc95605880dc16db53fedc7bb0e2f", "filename": "gcc/testsuite/g++.old-deja/g++.law/arm13.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farm13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farm13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farm13.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -8,7 +8,8 @@ int main()\n {\n   int* p = (int*) malloc(sizeof(int));\n   (void) new (p) int(1);\n-  p->int::~int();\n+  typedef int I;\n+  p->I::~I();\n   free(p);\n   printf (\"PASS\\n\");\n }"}, {"sha": "f150a7235426b9827275f358fb7261139bc5437b", "filename": "gcc/testsuite/g++.old-deja/g++.law/code-gen5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcode-gen5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcode-gen5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcode-gen5.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -248,7 +248,7 @@ operator double()\n {\n \tassert( v.r->vec != 0 );\n \treturn *v.r->vec;\n-};\n+}\n \n double VecElem::\n operator=( double d )"}, {"sha": "88ff255cc7583c9a202335fafef7da25e7856cd6", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors9.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -28,7 +28,7 @@ struct var_Foo: public Foo\n int blort(Foo& f)\n {\n   return f->a;\n-};\n+}\n \n int main()\n {"}, {"sha": "b26a88743bf3592f0aadd45764e08934a51938f9", "filename": "gcc/testsuite/g++.old-deja/g++.law/cvt22.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt22.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -11,4 +11,4 @@ typedef int A[10];\n int main()\n {\n    int* a1 = new A;\n-};\n+}"}, {"sha": "302acd5f044e09f5a32759537851e7f70f60c5b0", "filename": "gcc/testsuite/g++.old-deja/g++.law/dtors5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fdtors5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fdtors5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fdtors5.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -21,7 +21,7 @@ public:\n void\n sub(foo f) {\n    ;\n-};\n+}\n \n \n int main() {"}, {"sha": "9047067c81f7de7b7e624955c2afb78d31123e28", "filename": "gcc/testsuite/g++.old-deja/g++.law/global-init1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fglobal-init1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fglobal-init1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fglobal-init1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -9,7 +9,7 @@\n struct S { int  a; int  c; };\n int i = 3;\n S s = {6, i};\n-S * the_s  () { return &s; };\n+S * the_s  () { return &s; }\n int main ()\n {\n   S * cls = the_s ();"}, {"sha": "d80bae27e4b542c2da1a69066ebd45eb8877c4b0", "filename": "gcc/testsuite/g++.old-deja/g++.law/missed-error3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fmissed-error3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fmissed-error3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fmissed-error3.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -120,5 +120,5 @@ public:\n void Fixed_List::go_offleft() const\n {\n     cursor_position = 0;// ERROR - \n-};\n+}\n "}, {"sha": "e089382a027a4086e05e7ab1b4f05b1108762c20", "filename": "gcc/testsuite/g++.old-deja/g++.law/operators28.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators28.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -19,12 +19,12 @@ void* new_test::operator new(size_t sz, int count, int type)\n   p = new char[sz * count];\n   ((new_test *)p)->type = type;\n   return p;\n-};\n+}\n \n int main()\n {\n   new_test *test;\n   int count = 13;\n \n   test = new(count, 1) new_test;\n-};\n+}"}, {"sha": "086a18ed7b6d533182e42e0462722ab5c44a8f4b", "filename": "gcc/testsuite/g++.old-deja/g++.law/visibility28.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility28.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -4,13 +4,13 @@ extern \"C\" int printf( const char *, ...);\n \n class B {\n public:\n-        B() { };\n-        virtual ~B() { printf( \"B::~B\\n\"); };\n+        B() { }\n+        virtual ~B() { printf( \"B::~B\\n\"); }\n };\n \n class D : public B {\n public:\n-        virtual ~D() { printf( \"D::~D\\n\"); };\n+        virtual ~D() { printf( \"D::~D\\n\"); }\n   void operator = ( int i) { this->~B(); }// ERROR - D has no ~B part to it\n };\n \n@@ -21,4 +21,4 @@ main()\n         B * pb = pd;\n         delete pb;\n         return 0;\n-};\n+}"}, {"sha": "ad7f2e478c4cf6c7bf87dc5ba58a9e237b22c1e6", "filename": "gcc/testsuite/g++.old-deja/g++.martin/eval1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.martin%2Feval1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.martin%2Feval1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.martin%2Feval1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -9,7 +9,7 @@ struct S\n S* S::foo(){\n   i = 0;\n   return this;\n-};\n+}\n \n int S::i = 1;\n int main(void)"}, {"sha": "fea7ebf4589598717e4bc9c1a9633761af42589c", "filename": "gcc/testsuite/g++.old-deja/g++.martin/pmf2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.martin%2Fpmf2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.martin%2Fpmf2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.martin%2Fpmf2.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -4,7 +4,7 @@\n \n struct A{\n   int i;\n-  A::A():i(1){}\n+  A () :i(1){}\n   virtual void foo();\n }a;\n "}, {"sha": "3cd9bc86b1eb1af43504d7f3b27a46c27f798ecf", "filename": "gcc/testsuite/g++.old-deja/g++.mike/eh41.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Feh41.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Feh41.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Feh41.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -26,4 +26,4 @@ int main () {\n     return 0;\n   }\n   return 1;\n-};\n+}"}, {"sha": "4d677ba9e330c0c2caf386dda1bc23685a415039", "filename": "gcc/testsuite/g++.old-deja/g++.mike/hog1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fhog1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fhog1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fhog1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -184,4 +184,4 @@ void super::operator++(void)\n \n int main(void)\n {\n-};\n+}"}, {"sha": "0756e2e90366f8381d94e7c87586dd08c1a1f9b5", "filename": "gcc/testsuite/g++.old-deja/g++.mike/net34.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet34.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet34.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet34.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -17,7 +17,7 @@ public:\n \n class bar_2 : public foo {\n public:\n-    bar_2(int i) : foo(i) {};\n+    bar_2(int i) : foo(i) {}\n         int get_k() {return k;}\n };\n "}, {"sha": "c9d0fe9cb941acc5833c6e765e2c21544d569b1a", "filename": "gcc/testsuite/g++.old-deja/g++.mike/net36.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet36.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet36.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet36.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -16,4 +16,4 @@ public:\n \n void f(B* b) {\n   b->setHandler(A::handlerFn);\t// ERROR - \n-};\n+}"}, {"sha": "8e2a1713022621797ede36f82a1981316313638f", "filename": "gcc/testsuite/g++.old-deja/g++.mike/ns2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fns2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fns2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fns2.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,6 +1,6 @@\n namespace N {\n   int i;\n-};\n+}\n \n using namespace N;\n "}, {"sha": "d156c6f89246aaba9a63fbd904ef1dfa8c3d0a50", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p12306.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp12306.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp12306.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp12306.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -72,4 +72,4 @@ int main(int argc, char **argv) {\n   Sim_Event_Manager foo;\n   foo.post_event();\n   return fail;\n-};\n+}"}, {"sha": "372965060df1fb5b267540fa54b4e4710234ff92", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p3579.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp3579.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp3579.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp3579.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -36,4 +36,4 @@ int main (int, char **) {\n     }\n     printf(\"PASS\\n\");\n     return 0;\n-};\n+}"}, {"sha": "226ac3a321fbc05f878e56314b180ad8b4249bc6", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p646.C", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp646.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp646.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp646.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -82,13 +82,6 @@ return_foo ()\n   return f;\n }\n \n-foo\n-return_named_foo () return f\n-{\n-  printf (\"returning named foo\\n\");\n-  return f;\n-}\n-\n foo\n foo_parm_returns_foo (foo f)\n {\n@@ -132,12 +125,6 @@ warn_return_foo ()\n   printf (\"returning foo\\n\");\n }                              // WARNING - control reaches end\n \n-foo\n-nowarn_return_named_foo () return f\n-{\n-  printf (\"returning named foo\\n\");\n-}\n-\n foo\n warn_foo_parm_returns_foo (foo f)\n {\n@@ -155,7 +142,7 @@ main ()\n   int k = return_sum (-69, 69);\n   if (k != 0)\n     abort_because (\"wrong value returned\");\n-  foo f1 = return_named_foo ();\n+  foo f1 = return_foo ();\n   if (foo::si != 1)\n     abort_because (\"wrong number of foos\");\n   f1.i = 5;"}, {"sha": "814604fcab935fe10f463d4d85b139eb1e8cfebd", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p700.C", "status": "modified", "additions": 134, "deletions": 134, "changes": 268, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp700.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp700.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp700.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -249,73 +249,73 @@ inline  int& operator >>=(int& a,  const Int &   b)\n //# 289 \"../../../../libg++/etc/benchmarks/Int.h\"\n \n \n-inline  Int  operator -  (const Int &   a) return r(a)\n-{ r.negate();  }\n-inline  Int  operator ~  (const Int &   a) return r(a)\n-{ r.complement();  }\n-\n-inline  Int  operator +  (const Int &   a, const Int &   b) return r(a)\n-{ r += b.Int::val();  }\n-inline  Int  operator -  (const Int &   a, const Int &   b) return r(a)\n-{ r -= b.Int::val();  }\n-inline  Int  operator *  (const Int &   a, const Int &   b) return r(a)\n-{ r *= b.Int::val();  }\n-inline  Int  operator /  (const Int &   a, const Int &   b) return r(a)\n-{ r /= b.Int::val();  }\n-inline  Int  operator %  (const Int &   a, const Int &   b) return r(a)\n-{ r %= b.Int::val();  }\n-inline  Int  operator << (const Int &   a, const Int &   b) return r(a)\n-{ r <<= b.Int::val();  }\n-inline  Int  operator >> (const Int &   a, const Int &   b) return r(a)\n-{ r >>= b.Int::val();  }\n-inline  Int  operator &  (const Int &   a, const Int &   b) return r(a)\n-{ r &= b.Int::val();  }\n-inline  Int  operator |  (const Int &   a, const Int &   b) return r(a)\n-{ r |= b.Int::val();  }\n-inline  Int  operator ^  (const Int &   a, const Int &   b) return r(a)\n-{ r ^= b.Int::val();  }\n-\n-inline  Int  operator +  (const Int &   a, const int b) return r(a)\n-{ r += b;  }\n-inline  Int  operator -  (const Int &   a, const int b) return r(a)\n-{ r -= b;  }\n-inline  Int  operator *  (const Int &   a, const int b) return r(a)\n-{ r *= b;  }\n-inline  Int  operator /  (const Int &   a, const int b) return r(a)\n-{ r /= b;  }\n-inline  Int  operator %  (const Int &   a, const int b) return r(a)\n-{ r %= b;  }\n-inline  Int  operator << (const Int &   a, const int b) return r(a)\n-{ r <<= b;  }\n-inline  Int  operator >> (const Int &   a, const int b) return r(a)\n-{ r >>= b;  }\n-inline  Int  operator &  (const Int &   a, const int b) return r(a)\n-{ r &= b;  }\n-inline  Int  operator |  (const Int &   a, const int b) return r(a)\n-{ r |= b;  }\n-inline  Int  operator ^  (const Int &   a, const int b) return r(a)\n-{ r ^= b;  }\n-\n-inline  Int  operator +  (const int a, const Int &   b) return r(a)\n-{ r += b.Int::val();  }\n-inline  Int  operator -  (const int a, const Int &   b) return r(a)\n-{ r -= b.Int::val();  }\n-inline  Int  operator *  (const int a, const Int &   b) return r(a)\n-{ r *= b.Int::val();  }\n-inline  Int  operator /  (const int a, const Int &   b) return r(a)\n-{ r /= b.Int::val();  }\n-inline  Int  operator %  (const int a, const Int &   b) return r(a)\n-{ r %= b.Int::val();  }\n-inline  Int  operator << (const int a, const Int &   b) return r(a)\n-{ r <<= b.Int::val();  }\n-inline  Int  operator >> (const int a, const Int &   b) return r(a)\n-{ r >>= b.Int::val();  }\n-inline  Int  operator &  (const int a, const Int &   b) return r(a)\n-{ r &= b.Int::val();  }\n-inline  Int  operator |  (const int a, const Int &   b) return r(a)\n-{ r |= b.Int::val();  }\n-inline  Int  operator ^  (const int a, const Int &   b) return r(a)\n-{ r ^= b.Int::val();  }\n+inline  Int  operator -  (const Int &   a) return r(a) // ERROR - \n+{ r.negate();  } // ERROR - \n+inline  Int  operator ~  (const Int &   a) return r(a) // ERROR - \n+{ r.complement();  } // ERROR - \n+\n+inline  Int  operator +  (const Int &   a, const Int &   b) return r(a) // ERROR - \n+{ r += b.Int::val();  } // ERROR - \n+inline  Int  operator -  (const Int &   a, const Int &   b) return r(a) // ERROR - \n+{ r -= b.Int::val();  } // ERROR - \n+inline  Int  operator *  (const Int &   a, const Int &   b) return r(a) // ERROR - \n+{ r *= b.Int::val();  } // ERROR - \n+inline  Int  operator /  (const Int &   a, const Int &   b) return r(a) // ERROR - \n+{ r /= b.Int::val();  } // ERROR - \n+inline  Int  operator %  (const Int &   a, const Int &   b) return r(a) // ERROR - \n+{ r %= b.Int::val();  } // ERROR - \n+inline  Int  operator << (const Int &   a, const Int &   b) return r(a) // ERROR - \n+{ r <<= b.Int::val();  } // ERROR - \n+inline  Int  operator >> (const Int &   a, const Int &   b) return r(a) // ERROR - \n+{ r >>= b.Int::val();  } // ERROR - \n+inline  Int  operator &  (const Int &   a, const Int &   b) return r(a) // ERROR - \n+{ r &= b.Int::val();  } // ERROR - \n+inline  Int  operator |  (const Int &   a, const Int &   b) return r(a) // ERROR - \n+{ r |= b.Int::val();  } // ERROR - \n+inline  Int  operator ^  (const Int &   a, const Int &   b) return r(a) // ERROR - \n+{ r ^= b.Int::val();  } // ERROR - \n+\n+inline  Int  operator +  (const Int &   a, const int b) return r(a) // ERROR - \n+{ r += b;  } // ERROR - \n+inline  Int  operator -  (const Int &   a, const int b) return r(a) // ERROR - \n+{ r -= b;  } // ERROR - \n+inline  Int  operator *  (const Int &   a, const int b) return r(a) // ERROR - \n+{ r *= b;  } // ERROR - \n+inline  Int  operator /  (const Int &   a, const int b) return r(a) // ERROR - \n+{ r /= b;  } // ERROR - \n+inline  Int  operator %  (const Int &   a, const int b) return r(a) // ERROR - \n+{ r %= b;  } // ERROR - \n+inline  Int  operator << (const Int &   a, const int b) return r(a) // ERROR - \n+{ r <<= b;  } // ERROR - \n+inline  Int  operator >> (const Int &   a, const int b) return r(a) // ERROR - \n+{ r >>= b;  } // ERROR - \n+inline  Int  operator &  (const Int &   a, const int b) return r(a) // ERROR - \n+{ r &= b;  } // ERROR - \n+inline  Int  operator |  (const Int &   a, const int b) return r(a) // ERROR - \n+{ r |= b;  } // ERROR - \n+inline  Int  operator ^  (const Int &   a, const int b) return r(a) // ERROR - \n+{ r ^= b;  } // ERROR - \n+\n+inline  Int  operator +  (const int a, const Int &   b) return r(a) // ERROR - \n+{ r += b.Int::val();  } // ERROR - \n+inline  Int  operator -  (const int a, const Int &   b) return r(a) // ERROR - \n+{ r -= b.Int::val();  } // ERROR - \n+inline  Int  operator *  (const int a, const Int &   b) return r(a) // ERROR - \n+{ r *= b.Int::val();  } // ERROR - \n+inline  Int  operator /  (const int a, const Int &   b) return r(a) // ERROR - \n+{ r /= b.Int::val();  } // ERROR - \n+inline  Int  operator %  (const int a, const Int &   b) return r(a) // ERROR - \n+{ r %= b.Int::val();  } // ERROR - \n+inline  Int  operator << (const int a, const Int &   b) return r(a) // ERROR - \n+{ r <<= b.Int::val();  } // ERROR - \n+inline  Int  operator >> (const int a, const Int &   b) return r(a) // ERROR - \n+{ r >>= b.Int::val();  } // ERROR - \n+inline  Int  operator &  (const int a, const Int &   b) return r(a) // ERROR - \n+{ r &= b.Int::val();  } // ERROR - \n+inline  Int  operator |  (const int a, const Int &   b) return r(a) // ERROR - \n+{ r |= b.Int::val();  } // ERROR - \n+inline  Int  operator ^  (const int a, const Int &   b) return r(a) // ERROR - \n+{ r ^= b.Int::val();  } // ERROR - \n \n \n \n@@ -588,73 +588,73 @@ inline  char& operator >>=(char& a,  const Char &   b)\n //# 291 \"../../../../libg++/etc/benchmarks/Char.h\"\n \n \n-inline  Char  operator -  (const Char &   a) return r(a)\n-{ r.negate();  }\n-inline  Char  operator ~  (const Char &   a) return r(a)\n-{ r.complement();  }\n-\n-inline  Char  operator +  (const Char &   a, const Char &   b) return r(a)\n-{ r += b.Char::val();  }\n-inline  Char  operator -  (const Char &   a, const Char &   b) return r(a)\n-{ r -= b.Char::val();  }\n-inline  Char  operator *  (const Char &   a, const Char &   b) return r(a)\n-{ r *= b.Char::val();  }\n-inline  Char  operator /  (const Char &   a, const Char &   b) return r(a)\n-{ r /= b.Char::val();  }\n-inline  Char  operator %  (const Char &   a, const Char &   b) return r(a)\n-{ r %= b.Char::val();  }\n-inline  Char  operator << (const Char &   a, const Char &   b) return r(a)\n-{ r <<= b.Char::val();  }\n-inline  Char  operator >> (const Char &   a, const Char &   b) return r(a)\n-{ r >>= b.Char::val();  }\n-inline  Char  operator &  (const Char &   a, const Char &   b) return r(a)\n-{ r &= b.Char::val();  }\n-inline  Char  operator |  (const Char &   a, const Char &   b) return r(a)\n-{ r |= b.Char::val();  }\n-inline  Char  operator ^  (const Char &   a, const Char &   b) return r(a)\n-{ r ^= b.Char::val();  }\n-\n-inline  Char  operator +  (const Char &   a, const char b) return r(a)\n-{ r += b;  }\n-inline  Char  operator -  (const Char &   a, const char b) return r(a)\n-{ r -= b;  }\n-inline  Char  operator *  (const Char &   a, const char b) return r(a)\n-{ r *= b;  }\n-inline  Char  operator /  (const Char &   a, const char b) return r(a)\n-{ r /= b;  }\n-inline  Char  operator %  (const Char &   a, const char b) return r(a)\n-{ r %= b;  }\n-inline  Char  operator << (const Char &   a, const char b) return r(a)\n-{ r <<= b;  }\n-inline  Char  operator >> (const Char &   a, const char b) return r(a)\n-{ r >>= b;  }\n-inline  Char  operator &  (const Char &   a, const char b) return r(a)\n-{ r &= b;  }\n-inline  Char  operator |  (const Char &   a, const char b) return r(a)\n-{ r |= b;  }\n-inline  Char  operator ^  (const Char &   a, const char b) return r(a)\n-{ r ^= b;  }\n-\n-inline  Char  operator +  (const char a, const Char &   b) return r(a)\n-{ r += b.Char::val();  }\n-inline  Char  operator -  (const char a, const Char &   b) return r(a)\n-{ r -= b.Char::val();  }\n-inline  Char  operator *  (const char a, const Char &   b) return r(a)\n-{ r *= b.Char::val();  }\n-inline  Char  operator /  (const char a, const Char &   b) return r(a)\n-{ r /= b.Char::val();  }\n-inline  Char  operator %  (const char a, const Char &   b) return r(a)\n-{ r %= b.Char::val();  }\n-inline  Char  operator << (const char a, const Char &   b) return r(a)\n-{ r <<= b.Char::val();  }\n-inline  Char  operator >> (const char a, const Char &   b) return r(a)\n-{ r >>= b.Char::val();  }\n-inline  Char  operator &  (const char a, const Char &   b) return r(a)\n-{ r &= b.Char::val();  }\n-inline  Char  operator |  (const char a, const Char &   b) return r(a)\n-{ r |= b.Char::val();  }\n-inline  Char  operator ^  (const char a, const Char &   b) return r(a)\n-{ r ^= b.Char::val();  }\n+inline  Char  operator -  (const Char &   a) return r(a) // ERROR - \n+{ r.negate();  } // ERROR - \n+inline  Char  operator ~  (const Char &   a) return r(a) // ERROR - \n+{ r.complement();  } // ERROR - \n+\n+inline  Char  operator +  (const Char &   a, const Char &   b) return r(a) // ERROR - \n+{ r += b.Char::val();  } // ERROR - \n+inline  Char  operator -  (const Char &   a, const Char &   b) return r(a) // ERROR - \n+{ r -= b.Char::val();  } // ERROR - \n+inline  Char  operator *  (const Char &   a, const Char &   b) return r(a) // ERROR - \n+{ r *= b.Char::val();  } // ERROR - \n+inline  Char  operator /  (const Char &   a, const Char &   b) return r(a) // ERROR - \n+{ r /= b.Char::val();  } // ERROR - \n+inline  Char  operator %  (const Char &   a, const Char &   b) return r(a) // ERROR - \n+{ r %= b.Char::val();  } // ERROR - \n+inline  Char  operator << (const Char &   a, const Char &   b) return r(a) // ERROR - \n+{ r <<= b.Char::val();  } // ERROR - \n+inline  Char  operator >> (const Char &   a, const Char &   b) return r(a) // ERROR - \n+{ r >>= b.Char::val();  } // ERROR - \n+inline  Char  operator &  (const Char &   a, const Char &   b) return r(a) // ERROR - \n+{ r &= b.Char::val();  } // ERROR - \n+inline  Char  operator |  (const Char &   a, const Char &   b) return r(a) // ERROR - \n+{ r |= b.Char::val();  } // ERROR - \n+inline  Char  operator ^  (const Char &   a, const Char &   b) return r(a) // ERROR - \n+{ r ^= b.Char::val();  } // ERROR - \n+\n+inline  Char  operator +  (const Char &   a, const char b) return r(a) // ERROR - \n+{ r += b;  } // ERROR - \n+inline  Char  operator -  (const Char &   a, const char b) return r(a) // ERROR - \n+{ r -= b;  } // ERROR - \n+inline  Char  operator *  (const Char &   a, const char b) return r(a) // ERROR - \n+{ r *= b;  } // ERROR - \n+inline  Char  operator /  (const Char &   a, const char b) return r(a) // ERROR - \n+{ r /= b;  } // ERROR - \n+inline  Char  operator %  (const Char &   a, const char b) return r(a) // ERROR - \n+{ r %= b;  } // ERROR - \n+inline  Char  operator << (const Char &   a, const char b) return r(a) // ERROR - \n+{ r <<= b;  } // ERROR - \n+inline  Char  operator >> (const Char &   a, const char b) return r(a) // ERROR - \n+{ r >>= b;  } // ERROR - \n+inline  Char  operator &  (const Char &   a, const char b) return r(a) // ERROR - \n+{ r &= b;  } // ERROR - \n+inline  Char  operator |  (const Char &   a, const char b) return r(a) // ERROR - \n+{ r |= b;  } // ERROR - \n+inline  Char  operator ^  (const Char &   a, const char b) return r(a) // ERROR - \n+{ r ^= b;  } // ERROR - \n+\n+inline  Char  operator +  (const char a, const Char &   b) return r(a) // ERROR - \n+{ r += b.Char::val();  } // ERROR - \n+inline  Char  operator -  (const char a, const Char &   b) return r(a) // ERROR - \n+{ r -= b.Char::val();  } // ERROR - \n+inline  Char  operator *  (const char a, const Char &   b) return r(a) // ERROR - \n+{ r *= b.Char::val();  } // ERROR - \n+inline  Char  operator /  (const char a, const Char &   b) return r(a) // ERROR - \n+{ r /= b.Char::val();  } // ERROR - \n+inline  Char  operator %  (const char a, const Char &   b) return r(a) // ERROR - \n+{ r %= b.Char::val();  } // ERROR - \n+inline  Char  operator << (const char a, const Char &   b) return r(a) // ERROR - \n+{ r <<= b.Char::val();  } // ERROR - \n+inline  Char  operator >> (const char a, const Char &   b) return r(a) // ERROR - \n+{ r >>= b.Char::val();  } // ERROR - \n+inline  Char  operator &  (const char a, const Char &   b) return r(a) // ERROR - \n+{ r &= b.Char::val();  } // ERROR - \n+inline  Char  operator |  (const char a, const Char &   b) return r(a) // ERROR - \n+{ r |= b.Char::val();  } // ERROR - \n+inline  Char  operator ^  (const char a, const Char &   b) return r(a) // ERROR - \n+{ r ^= b.Char::val();  } // ERROR - \n \n \n "}, {"sha": "f4e7f9341f0beaf77b745c8d9b38c2e411dd83ca", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p701.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp701.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp701.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp701.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -4,7 +4,7 @@\n extern \"C\" \n {\n   int printf(const char *, ...);\n-};\n+}\n \n \n void Munge(int& x) "}, {"sha": "4e9e602a4bb1dace7292f46d00eddb560d14a380", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p710.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp710.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp710.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp710.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -19,7 +19,7 @@\n extern \"C\" \n {\n    int printf(const char*, ...);\n-};\n+}\n \n \n "}, {"sha": "f83baf2b06bdc1e0e4bf814f6983eaf72b00ac4b", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p784.C", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp784.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp784.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp784.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -5,7 +5,7 @@\n //# 1 \"GctSymbol.GctSymbol.CHMap.cc\"\n // This may look like C code, but it is really -*- C++ -*-\n /*\n-Copyright (C) 1988, 2000 Free Software Foundation\n+Copyright (C) 1988, 2000, 2002 Free Software Foundation\n     written by Doug Lea (dl@rocky.oswego.edu)\n \n This file is part of the GNU C++ Library.  This library is free\n@@ -1602,74 +1602,74 @@ inline void String:: operator +=(char y)\n \n \n \n-inline String operator + (const String& x, const String& y) return r;\n+inline String operator + (const String& x, const String& y) return r; // ERROR - \n {\n-  cat(x, y, r);\n+  cat(x, y, r); // ERROR - \n }\n \n-inline String operator + (const String& x, const SubString& y) return r;\n+inline String operator + (const String& x, const SubString& y) return r; // ERROR - \n {\n-  cat(x, y, r);\n+  cat(x, y, r); // ERROR - \n }\n \n-inline String operator + (const String& x, const char* y) return r;\n+inline String operator + (const String& x, const char* y) return r; // ERROR - \n {\n-  cat(x, y, r);\n+  cat(x, y, r); // ERROR - \n }\n \n-inline String operator + (const String& x, char y) return r;\n+inline String operator + (const String& x, char y) return r; // ERROR - \n {\n-  cat(x, y, r);\n+  cat(x, y, r); // ERROR - \n }\n \n-inline String operator + (const SubString& x, const String& y) return r;\n+inline String operator + (const SubString& x, const String& y) return r; // ERROR - \n {\n-  cat(x, y, r);\n+  cat(x, y, r); // ERROR - \n }\n \n-inline String operator + (const SubString& x, const SubString& y) return r;\n+inline String operator + (const SubString& x, const SubString& y) return r; // ERROR - \n {\n-  cat(x, y, r);\n+  cat(x, y, r); // ERROR - \n }\n \n-inline String operator + (const SubString& x, const char* y) return r;\n+inline String operator + (const SubString& x, const char* y) return r; // ERROR - \n {\n-  cat(x, y, r);\n+  cat(x, y, r); // ERROR - \n }\n \n-inline String operator + (const SubString& x, char y) return r;\n+inline String operator + (const SubString& x, char y) return r; // ERROR - \n {\n-  cat(x, y, r);\n+  cat(x, y, r); // ERROR - \n }\n \n-inline String operator + (const char* x, const String& y) return r;\n+inline String operator + (const char* x, const String& y) return r; // ERROR - \n {\n-  cat(x, y, r);\n+  cat(x, y, r); // ERROR - \n }\n \n-inline String operator + (const char* x, const SubString& y) return r;\n+inline String operator + (const char* x, const SubString& y) return r; // ERROR - \n {\n-  cat(x, y, r);\n+  cat(x, y, r); // ERROR - \n }\n \n-inline String reverse(const String& x) return r;\n+inline String reverse(const String& x) return r; // ERROR - \n {\n-  r.rep = Sreverse(x.rep, r.rep);\n+  r.rep = Sreverse(x.rep, r.rep); // ERROR - \n }\n \n-inline String upcase(const String& x) return r;\n+inline String upcase(const String& x) return r; // ERROR - \n {\n-  r.rep = Supcase(x.rep, r.rep);\n+  r.rep = Supcase(x.rep, r.rep); // ERROR - \n }\n \n-inline String downcase(const String& x) return r;\n+inline String downcase(const String& x) return r; // ERROR - \n {\n-  r.rep = Sdowncase(x.rep, r.rep);\n+  r.rep = Sdowncase(x.rep, r.rep); // ERROR - \n }\n \n-inline String capitalize(const String& x) return r;\n+inline String capitalize(const String& x) return r; // ERROR - \n {\n-  r.rep = Scapitalize(x.rep, r.rep);\n+  r.rep = Scapitalize(x.rep, r.rep); // ERROR - \n }\n \n //# 883 \"/projects/gnu-cygnus/gnu-cygnus-8/common/g++-include/String.h\""}, {"sha": "ceea3bf963e5e1e05bae5b73ed4378810454d3b0", "filename": "gcc/testsuite/g++.old-deja/g++.mike/pmf7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fpmf7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fpmf7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fpmf7.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -10,7 +10,7 @@ public:\n template<class SP, class CB> SP& call_dummy(SP* sp, CB cb) {\n   sp->dummy(cb);\n   return *sp;\n-};\n+}\n \n class A {\n public:"}, {"sha": "9a352301c7ef91e768000e6df339a344bf63e9f9", "filename": "gcc/testsuite/g++.old-deja/g++.mike/pmf9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fpmf9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fpmf9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fpmf9.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -13,7 +13,7 @@ private:\n \n int Q::g() {\n   return (kp->f)(42);\n-};\n+}\n \n \n int main () {"}, {"sha": "a4b1ba3d958c476564bbcc682ec00cab6c02dc1a", "filename": "gcc/testsuite/g++.old-deja/g++.ns/crash2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fcrash2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fcrash2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fcrash2.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -7,6 +7,6 @@\n namespace hei {\n   class CSomeClass {};\n   extern CSomeClass SomeClass;\n-};\n+}\n \n-hei::CSomeClass hei::CSomeClass; // ERROR - should be hei::SomeClass\n+hei::CSomeClass hei::CSomeClass; // ERROR - should be hei::SomeClass - XFAIL *-*-*"}, {"sha": "dbffae1b9af8c4a4aafdb27a4f21e4b79120fff4", "filename": "gcc/testsuite/g++.old-deja/g++.ns/crash3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fcrash3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fcrash3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fcrash3.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -2,7 +2,7 @@\n \n namespace N {\n   template <class T> struct S;\n-};\n+}\n \n void f()\n {"}, {"sha": "9ec2adfe8558f16fd6a3a0d7ce69251a07d17dd0", "filename": "gcc/testsuite/g++.old-deja/g++.ns/invalid1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Finvalid1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Finvalid1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Finvalid1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,5 +1,5 @@\n //Build don't link:\n-namespace x { };\n+namespace x { }\n \n void f(int);\n "}, {"sha": "2357c5f01f9a3c838bc4e87854b4a628d983869a", "filename": "gcc/testsuite/g++.old-deja/g++.ns/ns17.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fns17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fns17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fns17.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -4,7 +4,7 @@ namespace foo\n   class c\n   {\n   };\n-};\n+}\n \n int\n foo::c:fn ()  // ERROR - syntax error"}, {"sha": "9d5367995cf2ee419aedf1172d28409d123142a8", "filename": "gcc/testsuite/g++.old-deja/g++.ns/template16.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Ftemplate16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Ftemplate16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Ftemplate16.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -6,10 +6,10 @@\n namespace N {\n   template <class T> void f () { }\n   template <class T> struct A { friend void f<T>(); };\n-};\n+}\n \n namespace M {\n   struct B;\n-};\n+}\n \n struct M::B: public N::A<int> { };"}, {"sha": "d9b487bc92184f832301ebc22aa8183ca800089c", "filename": "gcc/testsuite/g++.old-deja/g++.ns/template5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Ftemplate5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Ftemplate5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Ftemplate5.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -23,7 +23,7 @@ int main()\n   X::Y<int> z;\n   if (z.f(4) != 1)\n     return 1;\n-  z.template g<long>();\n+  z.g<long>();\n \n   Y<int> z1;\n   if (z1.f(5) != 2)"}, {"sha": "f0137b4cffe6d6b2b6235f51b5c87bb7d1b367fa", "filename": "gcc/testsuite/g++.old-deja/g++.ns/template6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Ftemplate6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Ftemplate6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Ftemplate6.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -15,7 +15,7 @@ namespace A {\n       template <>\n          const unsigned B<int,int>::count = 2; // ERROR - duplicate init\n    }\n-};\n+}\n \n int\n main()"}, {"sha": "e664ccde5dfd678c2548871b482275a0f7aefe58", "filename": "gcc/testsuite/g++.old-deja/g++.ns/using9.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fusing9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fusing9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fusing9.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -3,8 +3,8 @@\n // Build don't link:\n \n namespace standard \n-{ void print(int) {};\n-  void dump(int)  {};\n+{ void print(int) {}\n+  void dump(int)  {}\n }\n namespace A { using standard::print; }\n namespace B { using namespace standard; }"}, {"sha": "9ef5131e8750d7810d9005d3a83ab546a168eba4", "filename": "gcc/testsuite/g++.old-deja/g++.oliva/nameret1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fnameret1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fnameret1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fnameret1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,13 +1,13 @@\n // Build don't link:\n-// Copyright (C) 1999, 2000 Free Software Foundation\n+// Copyright (C) 1999, 2000, 2002 Free Software Foundation\n \n // by Alexandre Oliva <oliva@lsd.ic.unicamp.br>\n \n // distilled from libg++'s Rational.cc\n \n // Special g++ Options: -Wno-deprecated\n \n-inline int bar () return r {}\n+inline int bar () return r {} // ERROR - \n \n int foo () {\n   return bar ();"}, {"sha": "092e4cd5747707b537c0f164b44d87c6471bcfee", "filename": "gcc/testsuite/g++.old-deja/g++.oliva/nameret2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fnameret2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fnameret2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fnameret2.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,13 +1,13 @@\n // Build don't link:\n-// Copyright (C) 1999, 2000 Free Software Foundation\n+// Copyright (C) 1999, 2000, 2002 Free Software Foundation\n \n // by Alexandre Oliva <oliva@lsd.ic.unicamp.br>\n \n // distilled from libg++'s Integer.cc\n \n // Special g++ Options: -O1 -Wno-deprecated\n \n-inline int bar () return r {}\n+inline int bar () return r {} // ERROR - \n \n int& foo (int& x) {\n   bar ();"}, {"sha": "7cf472fb980d7f7a2122175aead646816c49b87d", "filename": "gcc/testsuite/g++.old-deja/g++.other/access4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Faccess4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Faccess4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Faccess4.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,11 +1,11 @@\n // Build don't link:\n \n-struct A {\n+struct A { // ERROR - inaccessible\n   static int i;\n };\n \n struct B : private A { };\n \n struct C : public B {\n-  int f () { return A::i; }\n+  int f () { return A::i; } // ERROR - context\n };"}, {"sha": "e824850a44aafa35df77fb51e6bc7542564473f6", "filename": "gcc/testsuite/g++.old-deja/g++.other/array6.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Farray6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Farray6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Farray6.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -5,16 +5,16 @@ int count = 0;\n double foo () {\n   count++;\n   return 0;\n-};\n+}\n \n double bar () {\n   const double x[1] = { foo() };\n   return x[0];\n-};\n+}\n \n int main () \n {\n   bar();\n   if (count != 1)\n     return 1;\n-};\n+}"}, {"sha": "a4734122641500f3d6aad2794d18f32075a49217", "filename": "gcc/testsuite/g++.old-deja/g++.other/crash1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,6 +1,6 @@\n class A\n {\n-        enum B { ONE, TWO, THREE };\n+  enum B { ONE, TWO, THREE }; // ERROR - private\n };\n \n-class A::B; // ERROR - A::B is not a class type\n+class A::B; // ERROR - A::B is not a class type, context"}, {"sha": "6b78b2f8b7fb467f85e2e84f2b763e1e29ccd764", "filename": "gcc/testsuite/g++.old-deja/g++.other/crash11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash11.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -18,4 +18,4 @@ struct string\n   max_size() const { return size; }\n };\n \n-template string <char>;\n+template struct string <char>;"}, {"sha": "6c9e1a1c08417b27ca8926db943d8823e252b67e", "filename": "gcc/testsuite/g++.old-deja/g++.other/crash25.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash25.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash25.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash25.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -11,6 +11,6 @@ X::x()\n {\t\t\t\t// ERROR - \n }\n \n-X::~x()\n-{\t\t\t\t// ERROR - \n+X::~x()                         // ERROR - \n+{\t\t\t\t\n }"}, {"sha": "cedaa5041bb95d0f9f3b06ec3f61d496d8562d05", "filename": "gcc/testsuite/g++.old-deja/g++.other/crash4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash4.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -4,4 +4,4 @@ struct T {\n   struct S __attribute__ ((packed)) { // ERROR - parse error\n     int i;                            \n   };\n-}; // ERROR - parse error\n+};"}, {"sha": "8b3efccefedaea8adeea7e80de8550a14f7c44e6", "filename": "gcc/testsuite/g++.old-deja/g++.other/debug7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdebug7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdebug7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdebug7.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -4,7 +4,7 @@\n \n namespace std {\n   const int __stl_chunk_size = 7;\n-};\n+}\n \n int main ()\n {"}, {"sha": "00086d0035fe9d47a148742978b8c840789fa674", "filename": "gcc/testsuite/g++.old-deja/g++.other/decl5.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdecl5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdecl5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdecl5.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,6 +1,6 @@\n // Build don't link:\n \n-// Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+// Copyright (C) 1999, 2000, 2002 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 22 Apr 1999 <nathan@acm.org>\n // derived from a bug report by <rch@larissa.sd.bi.ruhr-uni-bochum.de>\n // http://gcc.gnu.org/ml/gcc-bugs/1999-04n/msg00631.html\n@@ -26,12 +26,12 @@ struct B {\n   struct A::fink {    // ERROR - no such member\n   int m;\n   };\n-  struct A::Z {       // ERROR XFAIL - A::Z not a member of B\n+  struct A::Z {       // ERROR - A::Z not a member of B XFAIL \n     int m;\n   };\n   int m;\n   int n;\n-  struct ::Q {        // ERROR XFAIL - ::Q not a member of B\n+  struct ::Q {        // ERROR - ::Q not a member of B XFAIL \n     int m;\n   };\n   int A::fn() {       // ERROR - A::fn not a member of B\n@@ -66,7 +66,7 @@ namespace NMS\n   int N::fn() {       // ERROR - N::fn not a member of NMS\n     return 0;\n   }\n-  struct N::F {       // ERROR XFAIL - N::F not a member of NMS\n+  struct N::F {       // ERROR - N::F not a member of NMS XFAIL \n     int i;\n   };\n }"}, {"sha": "e4a27a39bc9d00c778d7e760496c61fa6be9a452", "filename": "gcc/testsuite/g++.old-deja/g++.other/defarg7.C", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdefarg7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdefarg7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdefarg7.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,15 +1,18 @@\n // Build don't link:\n \n-// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2002 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 7 Jan 2001 <nathan@codesourcery.com>\n \n+// As of G++ 3.4, we no longer attempt to detect dependencies; the\n+// standard does not require that we do.\n+\n // Bug 1038. Default args on class members can produce circular dependencies.\n // Make sure we spot them, and don't depend on a particular ordering.\n \n struct A\n {\n-  static int Foo (int = Baz ());    // WARNING - circular\n-  static int Baz (int = Foo ());    // WARNING - circular\n+  static int Foo (int = Baz ()); // ERROR - \n+  static int Baz (int = Foo ());\n };\n \n struct Test\n@@ -21,7 +24,7 @@ struct Test\n struct B\n {\n   static int Bar (int = Foo (1));\n-  static int Foo (int = Baz ());\n+  static int Foo (int = Baz ()); // ERROR - \n   static int Baz (int = Foo (1));\n };\n "}, {"sha": "42ddcb8f4d44c7d426a9469a91d64dd710a9e361", "filename": "gcc/testsuite/g++.old-deja/g++.other/defarg8.C", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdefarg8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdefarg8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdefarg8.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,23 +1,26 @@\n // Build don't link:\n // Special g++ options: -pedantic-errors -ansi -w\n \n-// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2002 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 7 Jan 2001 <nathan@codesourcery.com>\n \n+// As of G++ 3.4, we no longer attempt to detect dependencies; the\n+// standard does not require that we do.\n+\n // Bug 1038. Default args on class members can produce circular dependencies.\n // Make sure we spot them, and don't depend on a particular ordering.\n \n struct AA\n {\n-  static int Foo (int = Baz ());    // ERROR - candidate\n-  static int Baz (int = Foo ());    // ERROR - candidate\n+  static int Foo (int = Baz ()); // ERROR - not yet been parsed\n+  static int Baz (int = Foo ());\n };\n \n int main ()\n {\n-  AA::Foo ();   // ERROR - no candidate\n+  AA::Foo ();\n   AA::Foo (1);\n-  AA::Baz ();   // ERROR - no candidate\n+  AA::Baz ();\n   AA::Baz (1);\n   \n   return 0;"}, {"sha": "18ab8b05821568e70937e7f54fd922f6e50b9800", "filename": "gcc/testsuite/g++.old-deja/g++.other/dtor1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdtor1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdtor1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdtor1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -14,4 +14,4 @@ main ()\n {\n   X* p = new (bar) X;\n   p->~foo();\n-};\n+}"}, {"sha": "78bf613eefd93b68b022f16f3d93006a9ba1fc7d", "filename": "gcc/testsuite/g++.old-deja/g++.other/dtor10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdtor10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdtor10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdtor10.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -31,7 +31,7 @@ T f () {\n }\n \n void g (S) {\n-};\n+}\n \n int main ()\n {"}, {"sha": "1bdccbd607ec036622eb270133b3125e1abaad64", "filename": "gcc/testsuite/g++.old-deja/g++.other/incomplete.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fincomplete.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fincomplete.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fincomplete.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -8,8 +8,8 @@ struct S; // ERROR - forward ref\n \n void f(S);            // ok\n void f(S s) {}        // ERROR - incomplete type\n-void j (int){};       // ok\n-void k (){};          // ok\n+void j (int){}        // ok\n+void k (){}           // ok\n void q (void){}       // ok\n void t (void t);      // ERROR - incomplete\n void r (void, ...);   // ERROR - incomplete"}, {"sha": "561181bbe75db957ec02908441aabc82bb3219e9", "filename": "gcc/testsuite/g++.old-deja/g++.other/linkage7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flinkage7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flinkage7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flinkage7.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -7,7 +7,7 @@ namespace N {\n   void f () {\n     i = 3;\n   }\n-};\n+}\n \n int i;\n "}, {"sha": "12663e701eb2b7891b5017f75ad01494017f3619", "filename": "gcc/testsuite/g++.old-deja/g++.other/lookup19.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flookup19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flookup19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flookup19.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -6,10 +6,10 @@ typedef int B;\n struct A\n {\n   int B;\n-  operator B *();\n+  operator B *(); // ERROR - \n };\n \n-A::operator B * ()\n+A::operator B * () // ERROR - \n {\n   return 0;\n }\n@@ -48,7 +48,7 @@ struct G\n };\n \n typedef double H;\n-G::operator H * ()\t\t// ERROR - mismatch\n+G::operator H * ()\n {\n   return 0;\n }"}, {"sha": "2a8065ec482cf73cafb587dccc86a7295cded441", "filename": "gcc/testsuite/g++.old-deja/g++.other/mangle2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fmangle2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fmangle2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fmangle2.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -13,7 +13,7 @@ inline bool operator!=(const c& x, const c& y)\n {\n   return x.a != y.a;\n }\n-};\n+}\n \n void foo();\n "}, {"sha": "6b0211c395e0ccf98094003d0c2bf612c3401949", "filename": "gcc/testsuite/g++.old-deja/g++.other/refinit2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Frefinit2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Frefinit2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Frefinit2.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,14 +1,14 @@\n // Build don't link:\n // \n-// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2002 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 10 Aug 2000 <nathan@codesourcery.com>\n \n // bug 381. We gave slightly different diagnostics, when binding an rvalue to\n // a non-const reference, depending on the precise type to the rvalue.\n \n namespace A { \n template <class T> void f(T) {}\n-};\n+}\n void (* &h)(int) = A::f<int>;       // ERROR - rvalue to non-const\n void (*const volatile &i)(int) = A::f<int>;  // ERROR - rvalue to volatile\n void (*const &j)(int) = A::f<int>;"}, {"sha": "1a45fe385e459d4bd28697906b2c38eb4ecd60d9", "filename": "gcc/testsuite/g++.old-deja/g++.other/sizeof2.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsizeof2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsizeof2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsizeof2.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -3,13 +3,13 @@\n \n struct S\n {\n-  int j; // ERROR - member\n-  int i[2]; // ERROR - member\n+  int j; // ERROR - non-static data member\n+  int i[2]; // ERROR - non-static data member\n };\n \n void f ()\n {\n-  sizeof (S::j); // ERROR - non-static data member\n-  sizeof (S::i[0]); //  ERROR - non-static data member\n+  sizeof (S::j); // ERROR - used here\n+  sizeof (S::i[0]); //  ERROR - used here\n }\n "}, {"sha": "6761404859029329027d37ce2b3888aea827a117", "filename": "gcc/testsuite/g++.old-deja/g++.other/std1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstd1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstd1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fstd1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -9,4 +9,4 @@ namespace std {\n void f () {\n   memcmp (0, 0, 0);\n }\n-};\n+}"}, {"sha": "6b0df69f16aac61c1a93d158bc0af84ea6d546c7", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash28.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash28.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -11,4 +11,4 @@ void f(unsigned int n) {\n   int x[n];\n \n   asize(x); // ERROR - no matching function\n-};\n+}"}, {"sha": "5334cd30c5c768a5c5d9ef7a2cac6ebc1631408b", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash29.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash29.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash29.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash29.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -50,6 +50,7 @@ public:\n \t\t\t\t: MetaClassGeneric( TypeIDInit<T>::info ) {}\n };\n \n+template <>\n class MetaClass<UUId>\n : public NameInfo<UUId>\n {"}, {"sha": "80864db73cde738e819fb85a5189e6e4c4cc1032", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash32.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash32.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash32.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash32.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -8,6 +8,6 @@ template <class T> struct A\n \n template<class T> struct C\n {\n-  friend typename A<T>::B; // ERROR - struct is required\n+  friend typename A<T>::B; // ERROR - `typename' not allowed\n };\n "}, {"sha": "802e01d0849f2d9483b759520c9159c7dd56ffde", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash43.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash43.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash43.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash43.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -7,15 +7,15 @@ struct S {\n   struct Y {};\n \n   template <int U>\n-  friend struct S<U>::X; // ERROR - typename as friend\n+  friend struct S<U>::X;\n \n   template <int U>\n   friend typename S<U>::Y; // ERROR - typename as friend\n };\n \n struct T {\n   template <int T>\n-  friend struct S<T>::X; // ERROR - typename as friend\n+  friend struct S<T>::X;\n };\n \n struct U {"}, {"sha": "387b5f545719603b43c829402b74fc5b7ffcb60f", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash58.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash58.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash58.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash58.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,13 +1,13 @@\n // Build don't link:\n // \n-// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2002 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 5 Sept 2000 <nathan@codesourcery.com>\n \n // bug 147. We ICE'd on an unprocessed LOOKUP_EXPR during tsubsting\n \n namespace EManip {\n     template <class T> void do_assign(T* d);  // ERROR - candidate\n-};\n+}\n template <class T> void do_assign(T* d);    // ERROR - candidate\n \n template <class T>"}, {"sha": "2e66d5d92c38bc4509cb26ff4deb6df64005b852", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash65.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash65.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash65.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash65.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,6 +1,6 @@\n // Build don't link:\n \n-// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2002 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 11 Jan 2001 <nathan@codesourcery.com>\n \n // Bug 1506. We ICE'd on a struct definition inside a template parms.\n@@ -10,3 +10,4 @@\n \n template<class T =\n struct W {};    // ERROR - inside template parms\n+> struct S{};"}, {"sha": "facd0b67158458dbbfc713118ebbdd33b5b2c9d2", "filename": "gcc/testsuite/g++.old-deja/g++.pt/defarg5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fdefarg5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fdefarg5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fdefarg5.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -21,4 +21,4 @@ template <>\n void bar<2>::foo (Point<2> p) {\n   const int dim = 2;\n   Point<dim> q = p;\n-};\n+}"}, {"sha": "b267409974bb7afd46060cefa327d4d86623826d", "filename": "gcc/testsuite/g++.old-deja/g++.pt/defarg8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fdefarg8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fdefarg8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fdefarg8.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -8,7 +8,7 @@ template <class T, class U> class foo2;\n \n struct bar {\n   template <class T, class U>\n-  bar(int i = foo1<T>::baz, // ok\n+  bar(int i = foo1<T>::baz, // gets bogus error - XFAIL *-*-*\n       int j = int(foo2<T, U>::baz), // ok\n       int k = foo2<T, U>::baz) {} // gets bogus error - before > - XFAIL *-*-*\n };"}, {"sha": "102ab290edcf056ab2793242b3301f8ccb65a650", "filename": "gcc/testsuite/g++.old-deja/g++.pt/eichin01.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Feichin01.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Feichin01.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Feichin01.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -15,8 +15,8 @@ public:\n   void sz(X s) { sss = s; }\n };\n \n-float TC<float>::sss;\n-long TC<long>::sss;\n+template <> float TC<float>::sss = 0.0;\n+template <> long TC<long>::sss = 0;\n \n TC<long> xjj(1,2);\n "}, {"sha": "a4c5f1643c1c110d12caef92a48879e76609b07f", "filename": "gcc/testsuite/g++.old-deja/g++.pt/eichin01a.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Feichin01a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Feichin01a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Feichin01a.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -8,8 +8,8 @@ public:\n };\n \n \n-long TC<long>::sss;\n-float TC<float>::sss;\n+template <> long TC<long>::sss = 0;\n+template <> float TC<float>::sss = 0.0;\n \n TC<long> xjj(1,2);\n "}, {"sha": "25f269ce89d39b38ddc8d4fa097d090a7a98ae17", "filename": "gcc/testsuite/g++.old-deja/g++.pt/eichin01b.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Feichin01b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Feichin01b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Feichin01b.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -8,8 +8,8 @@ public:\n   void syy(X syarg) { sss = syarg; }\n };\n \n-long TC<long>::sss;\n-float TC<float>::sss;\n+template <> long TC<long>::sss = 0;\n+template <> float TC<float>::sss = 0.0;\n \n TC<long> xjj(1,2);\n "}, {"sha": "d2ea2016d7d7c362435f3a2e96b6a88f74ba41c2", "filename": "gcc/testsuite/g++.old-deja/g++.pt/enum7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fenum7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fenum7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fenum7.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -8,7 +8,7 @@ int f()\n       E e;\n       e = a;\n       return (int) e;\n-    };\n+    }\n   };\n \n   S s;"}, {"sha": "03355a7639fcfc812ef0374aa3515cc1e82a3092", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit12.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit12.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -16,5 +16,5 @@ void S<char*>::foo<int>(int) {}\n int main()\n {\n   S<char*> s;\n-  s.template foo<int>(3.0);\n+  s.foo<int>(3.0);\n }"}, {"sha": "54f0b6c2270f2f96cdaa6046115004828e39d3a1", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit31.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit31.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -11,7 +11,7 @@ struct S\n \n int main()\n {\n-  double d = S<int>::template foo<char>(3.3);\n+  double d = S<int>::foo<char>(3.3);\n \n   return (d >= 3.1);\n }"}, {"sha": "d9d3b07322bdab954b959e9f4ba023b165a9de29", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit33.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit33.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit33.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit33.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -4,6 +4,6 @@ template <class T>\n void foo(T t);\n \n template <>\n-void foo(int) {};\n+void foo(int) {}\n \n void foo(int) {}"}, {"sha": "1aee1317514d565391833b0316ec9982a0bf88d5", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit35.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit35.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit35.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit35.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -13,5 +13,5 @@ void S::foo<int>(int i) { }\n int main()\n {\n   S s;\n-  s.template foo<int>(3.0);\n+  s.foo<int>(3.0);\n }"}, {"sha": "23c8d276b14a7280ca16b78b7c0dadd38dbc5d4c", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit71.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit71.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit71.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit71.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -12,4 +12,4 @@ class bug {\n };\n template <class X> \n template <>\t\t\t// ERROR - invalid specialization\n-class bug<X>::a<char> {};\t// ERROR -  \"\"\n+class bug<X>::a<char> {};\t"}, {"sha": "2cbdeab0cb65a6ba6973f5b41b2e4ffe280ad491", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit80.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit80.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit80.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit80.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -10,7 +10,7 @@ struct A\n   class B;\n };\n \n-class A<int>::B { };\n+template <> class A<int>::B { };\n \n template class A<int>;\n template class A<double>;"}, {"sha": "84e39941e4daf80df5340484066c94d1ed9fa33c", "filename": "gcc/testsuite/g++.old-deja/g++.pt/friend28.C", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend28.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -2,15 +2,17 @@\n \n class mystream;\n \n+template <class T> class a;\n+\n+template <class T> mystream& operator>>( mystream& s, a<T>& thea );\n+\n template <class T> class a {\n public:\n \tfriend mystream& operator>> <>( mystream&, a<T>& thea );\n private:\n \tT amember;\n };\n \n-template <class T> mystream& operator>>( mystream& s, a<T>& thea );\n-\n template<> mystream& operator>> <int>( mystream& s, a<int>& thea );\n \n template class a<int>;"}, {"sha": "7eea65398cfaedc9d9f7a54e561c1681a822efb1", "filename": "gcc/testsuite/g++.old-deja/g++.pt/friend29.C", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend29.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend29.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend29.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,5 +1,9 @@\n // Build don't link:\n \n+template <class T> class a;\n+\n+template <class T> void foo( a<T>& thea );\n+\n template <class T> class a {\n public:\n \tfriend void foo<>( a<T>& thea );"}, {"sha": "d8b33fdf98993b740e504056e0291d639bb96d23", "filename": "gcc/testsuite/g++.old-deja/g++.pt/friend46.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend46.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend46.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend46.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,5 +1,5 @@\n // Build don't link:\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2002 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 17 Nov 2000 <nathan@codesourcery.com>\n \n // bug 43. Two failings, bison parser ickiness caused us to find the member\n@@ -17,7 +17,7 @@ namespace X {\n     V (const T&);\n   \n     void operator- ();\n-    friend void operator-<> (const P<T>& a);\n+    friend void X::operator-<> (const P<T>& a);\n   };\n }\n "}, {"sha": "3e087f1e12f856dec6964f53c314db2864fc002f", "filename": "gcc/testsuite/g++.old-deja/g++.pt/friend48.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend48.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend48.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend48.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -14,4 +14,4 @@ class D {\n   template <class U>\n   friend class N::D;\n };\n-};\n+}"}, {"sha": "b2759bbfaac716062b1e940f406d1210b2396543", "filename": "gcc/testsuite/g++.old-deja/g++.pt/instantiate1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finstantiate1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finstantiate1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finstantiate1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -16,7 +16,7 @@ struct S\n };\n \n \n-template S<char>;\n+template struct S<char>;\n template void S<int>::bar(int);\n template void S<double>::baz<short>(short);\n template void S<long>::baz<>(char);"}, {"sha": "7e9af2a74aee1df8ab968dc4474644685f3c7a9a", "filename": "gcc/testsuite/g++.old-deja/g++.pt/instantiate11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finstantiate11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finstantiate11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finstantiate11.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -15,7 +15,7 @@ public:\n \n   vect<t>& operator=( const vect<t>& v );\n   vect<t>  operator-( void ) const;\n-  friend vect<t> operator- <>( const vect<t>&, const vect<t>& );\n+  friend vect<t> (::operator- <>)( const vect<t>&, const vect<t>& );\n \n private:\n   t a_;"}, {"sha": "5c4945d35c221ea316c0ffd1b50fbc09d9c0f0e7", "filename": "gcc/testsuite/g++.old-deja/g++.pt/instantiate8.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finstantiate8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finstantiate8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finstantiate8.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,5 +1,5 @@\n // Build don't link:\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2002 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 14 Nov 2000 <nathan@codesourcery.com>\n \n // bug 616. We failed to complete the type of decls in templates, leading to\n@@ -35,6 +35,6 @@ void f()\n   const X<dim+1> y[3];\n   Z z2;           // ERROR - incomplete\n   typedef Z z3;   // ok\n-};\n+}\n \n template void f<3> ();"}, {"sha": "37c132e182b811273f8caee123f0ca31c3d18106", "filename": "gcc/testsuite/g++.old-deja/g++.pt/instantiate9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finstantiate9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finstantiate9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Finstantiate9.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -14,7 +14,7 @@ struct A {\n \n template <typename T1>\n struct B {\n-   A<T1>::C<int> s1;\n+   typename A<T1>::template C<int> s1;\n };\n \n int main()"}, {"sha": "3f456e631d608284df02b5f3f649a727a108fa6e", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memclass20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemclass20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemclass20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemclass20.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -12,7 +12,7 @@ struct S<int, X> {\n \n template <class T>\n void f() {\n-  typename S<T, T>::I<T> si;\n+  typename S<T, T>::template I<T> si;\n }\n \n template void f<int>();"}, {"sha": "6fc72199b6458376bad918423674f91c2e7192f9", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memclass5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemclass5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemclass5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemclass5.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -9,7 +9,7 @@ template <class T, class U>\n void f ()\n {\n   A<T>::template B<U>::template f<T> ();\n-  typename A<T>::B<U> b;\n+  typename A<T>::template B<U> b;\n   typename A<T>::template B<U> b2;\n   b.A<T>::template B<U>::~B();\n }"}, {"sha": "1ae4230bf7347eb26294f3a7ca80469c62495d07", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memclass7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemclass7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemclass7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemclass7.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -15,5 +15,5 @@ void S::Y<char>::foo<int>(int i) { }\n int main()\n {\n   S::Y<char> s;\n-  s.template foo<int>(3.0);\n+  s.foo<int>(3.0);\n }"}, {"sha": "d9a58e5b8fc7808b09e842a91f07eaeb4f090cbb", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memtemp75.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp75.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp75.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp75.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -21,5 +21,5 @@ int\n main()\n {\n   bar<int>\tb;\n-  b.template doit<print>(2);\n+  b.doit<print>(2);\n }"}, {"sha": "73a7a7ebc6f30599dda2a15e721452694ca6ac4a", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memtemp81.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp81.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp81.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp81.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -7,7 +7,7 @@ int  k;\n \n template <int j> int f() const { return this->f<j-1>(); }\n \n-int g() const { return f<i>(); };\n+int g() const { return f<i>(); }\n };\n \n template <>"}, {"sha": "7632049a14c78159cec2d5a7ac222b43ee6ed08c", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memtemp87.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp87.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp87.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp87.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -2,9 +2,10 @@\n // crash test - XFAIL *-*-*\n \n // by Paul Burchard <burchard@pobox.com>, Level Set Systems, Inc.\n-// Copyright (C) 1999 Free Software Foundation\n+// Copyright (C) 1999, 2002 Free Software Foundation\n \n class Q {\n+public:\n \ttemplate<class>\n \tclass X {\n \t};"}, {"sha": "37a8d8b37bfc472e2fc683cc011d11d80f37a168", "filename": "gcc/testsuite/g++.old-deja/g++.pt/overload13.C", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Foverload13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Foverload13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Foverload13.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,8 +1,3 @@\n-// Test that .template limits overload resolution to member templates.\n-\n-// Note that the standard doesn't seem to require this behavior, but\n-// EDG works this way.\n-\n struct A {\n   template <class T> int f (T) { return 0; }\n   int f (int) { return 1; }\n@@ -11,5 +6,5 @@ struct A {\n int main ()\n {\n   A a;\n-  return a.template f (0); // gets bogus error XFAIL *-*-*\n+  return a.template f (0); // ERROR - \n }"}, {"sha": "d7a644c2073a735a8452ff69dfe267d98edf6a5f", "filename": "gcc/testsuite/g++.old-deja/g++.pt/parms2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fparms2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fparms2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fparms2.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -20,11 +20,11 @@ struct Ethel {\n struct Fred {\n    \n   template <class Q, class LA, class LB>\n-  Ethel<typename Q::Sig<typename LA::WrappedType>::Third> baz ();\n+  Ethel<typename Q::template Sig<typename LA::WrappedType>::Third> baz ();\n \n \n   template <class Z, class A, class B>\n-  Ethel<typename Z::Sig<A>::Third>\n+  Ethel<typename Z::template Sig<A>::Third>\n   foo ( const Z&, const Ethel<A>&, const Ethel<B>&) const;\n };\n "}, {"sha": "5bf7dd77f0a0c53b28fef20582da14e076c27c50", "filename": "gcc/testsuite/g++.old-deja/g++.pt/ptrmem1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fptrmem1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fptrmem1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fptrmem1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -10,7 +10,7 @@ main()\n {\n   foo f;\n   \n-  int (foo::*s)() = &foo::template bar<int>;\n+  int (foo::*s)() = &foo::bar<int>;\n   if ((f.*s)() == 7)\n     return 0;\n   else "}, {"sha": "e86f220cfc743a7170071f203f6d50de4b82ef82", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec10.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec10.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -19,9 +19,9 @@ int main()\n {\n   S<double> s;\n \n-  if (s.template f<7>(3) != 10)\n+  if (s.f<7>(3) != 10)\n     abort();\n \n-  if (s.template f<8>(3) != 11)\n+  if (s.f<8>(3) != 11)\n     abort();\n }"}, {"sha": "a6fdc064a7c74a9ce920b9c03141c6b00735be8f", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec28.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec28.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,5 +1,8 @@\n // Build don't link:\n \n+template <class T>\n+bool f(T);\n+\n template <class T> \n struct S1 {\n   typedef T X;\n@@ -15,9 +18,6 @@ struct S2<S1<T> > {\n   typedef typename S1<T>::X Y;\n };\n \n-template <class T>\n-bool f(T);\n-\n template <class T>\n typename S2<S1<T> >::Y\n f(const S1<T>&);"}, {"sha": "c70b902366cf9f5ee600b7009a7540d7485d618e", "filename": "gcc/testsuite/g++.old-deja/g++.pt/t10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft10.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,6 +1,6 @@\n // Build don't link: \n \n template <class A> class B { public: A a; B(); };\n-class B<char> { public: int y[10]; };\n+template <> class B<char> { public: int y[10]; };\n static B<int> bi;\n static B<char> bc;"}, {"sha": "f2614f8789ad579f363aeaf4204c6c1e70ae59fa", "filename": "gcc/testsuite/g++.old-deja/g++.pt/t32.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft32.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft32.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft32.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -7,7 +7,7 @@ template <class X> struct A {\n   inline int z () { return 5; }\n };\n \n-template <class Y> int A<Y>::fooo (int t) { return (this->*(x?&A<Y>::y : &A<Y>::z))() + t; };\t// gets bogus error\n+template <class Y> int A<Y>::fooo (int t) { return (this->*(x?&A<Y>::y : &A<Y>::z))() + t; }\t// gets bogus error\n \n A<int> ai;\n "}, {"sha": "71712bf50193cdceb05834aa1ee8e134a48e9ea2", "filename": "gcc/testsuite/g++.old-deja/g++.pt/t35a.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft35a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft35a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft35a.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,5 +1,5 @@\n // Build don't link: \n \n template <class X> struct A {  };\n-struct A<int> { int foo (); };\n+template <> struct A<int> { int foo (); };\n int A<int>::foo () { return 37; }"}, {"sha": "b73d1a1b1c764e0679d03ac0d02a299f15d49d5b", "filename": "gcc/testsuite/g++.old-deja/g++.pt/ttp24.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fttp24.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fttp24.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fttp24.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -13,7 +13,7 @@ template<template<class> class D,class E> int f()\n {\n \tD<E> d;\n \treturn d.f();\n-};\n+}\n \n int main()\n {"}, {"sha": "1ff649d71befb798b96cf317677e7c728eeae04d", "filename": "gcc/testsuite/g++.old-deja/g++.pt/ttp62.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fttp62.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fttp62.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fttp62.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -18,7 +18,7 @@ template <class X> struct D { };\n template <class T>\n bool is_C (const T&) {\n    return is_instance_of<C,T>::answer;\n-};\n+}\n \n int main() {\n    if (!is_C(C<int>()))"}, {"sha": "bfbc425d58d6646d4b924b1a3435717cba011b67", "filename": "gcc/testsuite/g++.old-deja/g++.pt/ttp64.C", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fttp64.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fttp64.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fttp64.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -7,40 +7,40 @@\n \n template <class T> class A2 {\n public:\n-   A2() {};\n-   virtual ~A2() {};\n+   A2() {}\n+   virtual ~A2() {}\n    template <class other> A2 & operator=(const A2<other> o) {\n       i=o.i;\n       return *this;\n-   };\n+   }\n    T i;\n    T j;\n };\n \n template <class T> class A1 {\n public:\n-   A1() {};\n-   virtual ~A1() {};\n+   A1() {}\n+   virtual ~A1() {}\n    template <class other> A1 & operator=(const A1<other> o) {\n       i=o.i;\n       return *this;\n-   };\n+   }\n    template <class other> A1 & operator=(const A2<other> o) {\n       i=o.i;\n       return *this;\n-   };\n+   }\n    T i;\n };\n \n template <template <class U> class T> class B {\n public:\n-   B(){};\n-   virtual ~B(){};\n+   B(){}\n+   virtual ~B(){}\n    template <template <class U2> class O> struct rebind { typedef B<O> other ;};\n    template <template <class U2> class O> B & operator=(const B<O> o) {\n       i=o.i;\n       return *this;\n-   };\n+   }\n    T<int> i;\n };\n "}, {"sha": "1cee212c90327bb4b23dd18d8da506144cc171ed", "filename": "gcc/testsuite/g++.old-deja/g++.pt/typename11.C", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename11.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,15 +1,14 @@\n // Build don't link:\n-// Special g++ Options: -Wno-deprecated\n \n template <class T, int I>\n struct S {\n   struct X {};\n };\n \n template <class T, class U, int I>\n-S<T,I>::X f(T, U) {   // WARNING - implicit typename\n-  S<T, I>::X();\n-  return S<T, I>::X();\n+typename S<T,I>::X f(T, U) {\n+  typename S<T, I>::X();\n+  return typename S<T, I>::X();\n }\n \n template S<int, 3>::X f<int, double, 3>(int, double);"}, {"sha": "8f263f03903aac2effb031fc294dab8191cc92f8", "filename": "gcc/testsuite/g++.old-deja/g++.pt/typename15.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename15.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -12,7 +12,7 @@ struct S : public R <T, B> {\n \n template <class T> void f() \n {\n-  S<T>::X();\n+  typename S<T>::X();\n }\n \n template void f<int>();"}, {"sha": "ba9da1bc952c58bfd7662f2298b63735277be979", "filename": "gcc/testsuite/g++.old-deja/g++.pt/typename22.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename22.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -14,4 +14,4 @@ struct S {\n \n template <class T>\n template <class U>\n-typename S<T>::I<U>::X S<T>::I<U>::f() {}\n+typename S<T>::template I<U>::X S<T>::I<U>::f() {}"}, {"sha": "1f72cec1169e1e3a6d3f641807af5aba9d4418e1", "filename": "gcc/testsuite/g++.old-deja/g++.pt/typename6.C", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename6.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,7 +1,4 @@\n-// We don't try to make implicit typename handle this case.\n-\n // Build don't link:\n-// Special g++ Options:\n \n template <class T>\n struct A\n@@ -13,10 +10,10 @@ struct A\n template <class U>\n struct B : public A<U>\n {\n-  A_Type Func();\t\t// ERROR - candidate\n+  A_Type Func();\t\t// ERROR - declaration\n };\n \n template <class U>\n-A<U>::A_Type B<U>::Func()\n-{\t\t\t\t// ERROR - no match\n+A<U>::A_Type B<U>::Func()       // ERROR - function\n+{\t\t\t\t\n }"}, {"sha": "3857d701af2db545c71b116f6cc59060ad4f8d52", "filename": "gcc/testsuite/g++.old-deja/g++.pt/using1.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fusing1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fusing1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fusing1.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,12 +1,12 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 26 Feb 2001 <nathan@codesourcery.com>\n \n // Bug 1981. using declarations in namespace scope were not remembered.\n \n namespace A\n {\n   void swap () {}\n-};\n+}\n \n template <class T> void f()\n {\n@@ -28,7 +28,7 @@ namespace B\n     return foo (1);\n   }\n   template int baz<float> ();\n-};\n+}\n \n int main ()\n {"}, {"sha": "59fab8952a5c35b0f8c0443d25ec346c74d37aa4", "filename": "gcc/testsuite/g++.old-deja/g++.pt/virtual2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fvirtual2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fvirtual2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fvirtual2.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -14,7 +14,7 @@ struct D : public B<T> {\n \n void g() {\n   B<int>* bi = new D<int>;\n-};\n+}\n \n template <class T>\n void B<T>::f() {}"}, {"sha": "51d86af42315670fb9b06297712f2877b8f70692", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb118.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb118.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb118.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb118.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -16,6 +16,7 @@ A<T>::test(){\n   std::cerr << \"test for \" << typeid(*this).name() << std::endl;\n }\n // Specialization declaration\n+template <> \n void                           \n A<double>::test();\n "}, {"sha": "4e2d5eafb7c0178564e12d4ff9e68f3e78db87f8", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb27.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb27.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb27.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb27.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -28,8 +28,8 @@ class test\n \n // named return value version\n template <class T>\n-test<T> operator + (const test<T>& a, const test<T>& b) return c(a);\n-{ c += b; };\n+test<T> operator + (const test<T>& a, const test<T>& b) return c(a);// ERROR - named return value\n+{ c += b; } // ERROR - c undeclared\n \n int main()\n {"}, {"sha": "c4cf02804c74e3c3b32f130b881e345140a61634", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb43.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb43.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb43.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb43.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -17,7 +17,7 @@ public :\n };\n \n template <class T >\n-inline bool compare(const Expr<T> a, const Expr<T> b){ return true; };\n+inline bool compare(const Expr<T> a, const Expr<T> b){ return true; }\n \n int main()\n {"}, {"sha": "b95bfafeb36c27d5cf405a8b586626e54bfbb32f", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb79.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb79.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb79.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb79.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -19,7 +19,7 @@ int main()\n   double d = 1234.5678;\n \n   cout.precision(12);\n-  cout << max(d, i) << endl;  // #1\n-  cout << max(i, d) << endl;  // #2\n+  cout << max(d, i) << endl;  // ERROR - \n+  cout << max(i, d) << endl;  // ERROR - \n   return 0;\n }"}, {"sha": "7492c8f9446854850c488db30399df2c197ca733", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb82.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb82.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb82.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb82.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,12 +1,12 @@\n #include <stdio.h>\n \n template <int n1>\n-double val <int> ()\n-{                          // ERROR - bogus code\n+double val <int> () // ERROR - bogus code\n+{                          \n    return (double) n1;\n-};\n+}\n \n int main ()\n {\n-   printf (\"%d\\n\", val<(int)3> ());\n+   printf (\"%d\\n\", val<(int)3> ()); // ERROR - val undeclared\n }"}, {"sha": "1922dc290f3c70a1c9cfef957e92d9e2f3987dd5", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb86.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb86.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876200a8b7c2cb7e4af9c2d01c712fe78d7bc197/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb86.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb86.C?ref=876200a8b7c2cb7e4af9c2d01c712fe78d7bc197", "patch": "@@ -1,4 +1,6 @@\n // Build don't link: \n+template <class T> void foo ();\n+\n template <class T>\n class Q {\n     friend void foo<T> ();"}]}