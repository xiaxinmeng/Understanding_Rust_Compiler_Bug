{"sha": "5af46aa9c5a32ba14603a49d3c4ebe029c5e3cd9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFmNDZhYTljNWEzMmJhMTQ2MDNhNDlkM2M0ZWJlMDI5YzVlM2NkOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-23T09:59:41Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-23T09:59:41Z"}, "message": "[multiple changes]\n\n2013-04-23  Yannick Moy  <moy@adacore.com>\n\n\t* exp_ch5.adb: Minor typo.\n\n2013-04-23  Thomas Quinot  <quinot@adacore.com>\n\n\t* gnat_ugn.texi: Fix typo.\n\n2013-04-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* einfo.ads: Minor documentation clarification.\n\n2013-04-23  Bob Duff  <duff@adacore.com>\n\n\t* types.ads: Fix incorrect comment.\n\nFrom-SVN: r198189", "tree": {"sha": "f9ee283aa492f7a8c4d741949f1fde5933e1a11d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9ee283aa492f7a8c4d741949f1fde5933e1a11d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5af46aa9c5a32ba14603a49d3c4ebe029c5e3cd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5af46aa9c5a32ba14603a49d3c4ebe029c5e3cd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5af46aa9c5a32ba14603a49d3c4ebe029c5e3cd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5af46aa9c5a32ba14603a49d3c4ebe029c5e3cd9/comments", "author": null, "committer": null, "parents": [{"sha": "0fbcb11c6251ed09ef715f9552e27321059cef35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fbcb11c6251ed09ef715f9552e27321059cef35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fbcb11c6251ed09ef715f9552e27321059cef35"}], "stats": {"total": 46, "additions": 32, "deletions": 14}, "files": [{"sha": "c563eb2382831a5a0eaf76865e5d3aed5038beec", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5af46aa9c5a32ba14603a49d3c4ebe029c5e3cd9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5af46aa9c5a32ba14603a49d3c4ebe029c5e3cd9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5af46aa9c5a32ba14603a49d3c4ebe029c5e3cd9", "patch": "@@ -1,3 +1,19 @@\n+2013-04-23  Yannick Moy  <moy@adacore.com>\n+\n+\t* exp_ch5.adb: Minor typo.\n+\n+2013-04-23  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* gnat_ugn.texi: Fix typo.\n+\n+2013-04-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* einfo.ads: Minor documentation clarification.\n+\n+2013-04-23  Bob Duff  <duff@adacore.com>\n+\n+\t* types.ads: Fix incorrect comment.\n+\n 2013-04-23  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_aux.adb sem_aux.ads (Effectively_has_Constrained_Partial_View):"}, {"sha": "f3be43d504cf910ea81e5fa21935355d255a1895", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5af46aa9c5a32ba14603a49d3c4ebe029c5e3cd9/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5af46aa9c5a32ba14603a49d3c4ebe029c5e3cd9/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=5af46aa9c5a32ba14603a49d3c4ebe029c5e3cd9", "patch": "@@ -1429,11 +1429,12 @@ package Einfo is\n --       type has no discriminants and the full view has discriminants with\n --       defaults. In Ada 2005 heap-allocated objects of such types are not\n --       constrained, and can change their discriminants with full assignment.\n---       Sem_Aux.Effectively_Has_Constrained_Partial_View should be always\n---       used by callers, rather than reading this attribute directly because,\n---       according to RM 3.10.2 (27/2), untagged generic formal private types\n---       and subtypes are also considered to have a constrained partial view\n---       [when in a generic body].\n+\n+--       Ada 2012 has an additional rule (3.3. (23/10.3)) concerning objects\n+--       declared in a generic package body. Objects whose type is an untagged\n+--       generic formal private type are considered to have a constrained\n+--       partial view. The predicate Object_Type_Has_Constrained_Partial_View\n+--       in sem_aux is used to test for this case.\n \n --    Has_Contiguous_Rep (Flag181)\n --       Defined in enumeration types. True if the type as a representation"}, {"sha": "999ded7d0c51dc0f9e83e1d29150e4282aa411c9", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5af46aa9c5a32ba14603a49d3c4ebe029c5e3cd9/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5af46aa9c5a32ba14603a49d3c4ebe029c5e3cd9/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=5af46aa9c5a32ba14603a49d3c4ebe029c5e3cd9", "patch": "@@ -1818,7 +1818,7 @@ package body Exp_Ch5 is\n          LE  := Node (LE_Elmt);\n          Typ := Etype (Prefix (LE));\n \n-         --  Declare a constant to capture the value of the previx of each\n+         --  Declare a constant to capture the value of the prefix of each\n          --  Loop_Entry attribute.\n \n          --  Generate:"}, {"sha": "31d8fd7ea802b10670efbbb0752103959f03c5dd", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5af46aa9c5a32ba14603a49d3c4ebe029c5e3cd9/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5af46aa9c5a32ba14603a49d3c4ebe029c5e3cd9/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=5af46aa9c5a32ba14603a49d3c4ebe029c5e3cd9", "patch": "@@ -4529,7 +4529,7 @@ Additional details on incorrect parameters\n \n @item -gnatjnn\n @cindex @option{-gnatjnn} (@command{gcc})\n-In normal operation mode (or if @option{-gnatj0} is used, then error messages\n+In normal operation mode (or if @option{-gnatj0} is used), then error messages\n with continuation lines are treated as though the continuation lines were\n separate messages (and so a warning with two continuation lines counts as\n three warnings, and is listed as three separate messages).\n@@ -9448,12 +9448,13 @@ object and ALI files in the directory where it found the dummy file.\n @item ^-j^/PROCESSES=^@var{n}\n @cindex @option{^-j^/PROCESSES^} (@command{gnatmake})\n @cindex Parallel make\n-Use @var{n} processes to carry out the (re)compilations. On a\n-multiprocessor machine compilations will occur in parallel. In the\n-event of compilation errors, messages from various compilations might\n-get interspersed (but @command{gnatmake} will give you the full ordered\n-list of failing compiles at the end). If this is problematic, rerun\n-the make process with n set to 1 to get a clean list of messages.\n+Use @var{n} processes to carry out the (re)compilations. On a multiprocessor\n+machine compilations will occur in parallel. If @var{n} is 0, then the\n+maximum number of parallel compilations is the number of core processors\n+on the platform. In the event of compilation errors, messages from various\n+compilations might get interspersed (but @command{gnatmake} will give you the\n+full ordered list of failing compiles at the end). If this is problematic,\n+rerun the make process with n set to 1 to get a clean list of messages.\n \n @item ^-k^/CONTINUE_ON_ERROR^\n @cindex @option{^-k^/CONTINUE_ON_ERROR^} (@command{gnatmake})"}, {"sha": "df6f97e6eb5835ae09295a7e37a63f13fe788bf7", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5af46aa9c5a32ba14603a49d3c4ebe029c5e3cd9/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5af46aa9c5a32ba14603a49d3c4ebe029c5e3cd9/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=5af46aa9c5a32ba14603a49d3c4ebe029c5e3cd9", "patch": "@@ -577,7 +577,7 @@ package Types is\n    --  the source file (we assume that the host system has the concept of a\n    --  file time stamp which is modified when a file is modified). These\n    --  time stamps are used to ensure consistency of the set of units that\n-   --  constitutes a library. Time stamps are 12 character strings with\n+   --  constitutes a library. Time stamps are 14-character strings with\n    --  with the following format:\n \n    --     YYYYMMDDHHMMSS"}]}