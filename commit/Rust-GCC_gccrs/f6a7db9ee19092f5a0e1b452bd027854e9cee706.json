{"sha": "f6a7db9ee19092f5a0e1b452bd027854e9cee706", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZhN2RiOWVlMTkwOTJmNWEwZTFiNDUyYmQwMjc4NTRlOWNlZTcwNg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-11-09T19:15:25Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-11-09T19:15:25Z"}, "message": "locale_facets.tcc (_M_insert_int, [...]): Move a couple of vars inside an if block.\n\n2003-11-09  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/locale_facets.tcc (_M_insert_int,\n\t_M_insert_float): Move a couple of vars inside an if block.\n\nFrom-SVN: r73395", "tree": {"sha": "bd938f1f1f0f537d96188e98b6c26f884decf3b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd938f1f1f0f537d96188e98b6c26f884decf3b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6a7db9ee19092f5a0e1b452bd027854e9cee706", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6a7db9ee19092f5a0e1b452bd027854e9cee706", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6a7db9ee19092f5a0e1b452bd027854e9cee706", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6a7db9ee19092f5a0e1b452bd027854e9cee706/comments", "author": null, "committer": null, "parents": [{"sha": "647af4a91c4035fe99c8db7ab9d726c091e7e153", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/647af4a91c4035fe99c8db7ab9d726c091e7e153", "html_url": "https://github.com/Rust-GCC/gccrs/commit/647af4a91c4035fe99c8db7ab9d726c091e7e153"}], "stats": {"total": 44, "additions": 23, "deletions": 21}, "files": [{"sha": "5255ff4d61a516802cd56fd140121e4cc06afcad", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6a7db9ee19092f5a0e1b452bd027854e9cee706/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6a7db9ee19092f5a0e1b452bd027854e9cee706/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f6a7db9ee19092f5a0e1b452bd027854e9cee706", "patch": "@@ -1,3 +1,8 @@\n+2003-11-09  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/locale_facets.tcc (_M_insert_int,\n+\t_M_insert_float): Move a couple of vars inside an if block.\n+\n 2003-11-09  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/12971\n@@ -34,22 +39,22 @@\n \n 2003-11-07  Robert Millan  <robertmh@gnu.org>\n \n-        * configure.host: Add kfreebsd*-gnu and knetbsd*-gnu.\n-        * crossconfig.m4: Likewise.\n-        * configure: Regenerate.\n+\t* configure.host: Add kfreebsd*-gnu and knetbsd*-gnu.\n+\t* crossconfig.m4: Likewise.\n+\t* configure: Regenerate.\n \n 2003-11-07  Carlo Wood  <carlo@alinoe.com>\n \n-        * include/bits/demangle.h\n-        (qualifier_list<Allocator>::decode_qualifiers(string_type&,\n-        string_type&, bool member_function_pointer_qualifiers):\n-        Always seperate the '[' of an array type with a space from\n-        what is left of it, except when that is the closing bracket\n-        of another array dimension.\n+\t* include/bits/demangle.h\n+\t(qualifier_list<Allocator>::decode_qualifiers(string_type&,\n+\tstring_type&, bool member_function_pointer_qualifiers):\n+\tAlways separate the '[' of an array type with a space from\n+\twhat is left of it, except when that is the closing bracket\n+\tof another array dimension.\n \n 2003-11-07  Carlo Wood  <carlo@alinoe.com>\n \n-        * include/bits/demangle.h\n+\t* include/bits/demangle.h\n \t(qualifier_list<Allocator>::decode_qualifiers(string_type&,\n \tstring_type&, bool) const): Made const.\n \t(qualifier_list<Allocator>::M_printing_suppressed): Added mutable."}, {"sha": "43cca12323ee0000926e675c43d26125171c1eaf", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6a7db9ee19092f5a0e1b452bd027854e9cee706/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6a7db9ee19092f5a0e1b452bd027854e9cee706/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=f6a7db9ee19092f5a0e1b452bd027854e9cee706", "patch": "@@ -816,25 +816,23 @@ namespace std\n \t__cs += __ilen - __len;\n \t\n \t// Add grouping, if necessary. \n-\t_CharT* __cs2;\n \tif (__lc->_M_use_grouping)\n \t  {\n \t    // Grouping can add (almost) as many separators as the\n \t    // number of digits, but no more.\n-\t    __cs2 = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) \n-\t\t\t\t\t\t\t  * __len * 2));\n+\t    _CharT* __cs2 = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) \n+\t\t\t\t\t\t\t\t  * __len * 2));\n \t    _M_group_int(__lc->_M_grouping, __lc->_M_thousands_sep, __io, \n \t\t\t __cs2, __cs, __len);\n \t    __cs = __cs2;\n \t  }\n \t\n \t// Pad.\n-\t_CharT* __cs3;\n \tconst streamsize __w = __io.width();\n \tif (__w > static_cast<streamsize>(__len))\n \t  {\n-\t    __cs3 = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) \n-\t\t\t\t\t\t\t  * __w));\n+\t    _CharT* __cs3 = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) \n+\t\t\t\t\t\t\t\t  * __w));\n \t    _M_pad(__fill, __w, __io, __cs3, __cs, __len);\n \t    __cs = __cs3;\n \t  }\n@@ -967,24 +965,23 @@ namespace std\n \t__ws[__p - __ws] = __dec;\n \n       // Add grouping, if necessary. \n-      _CharT* __ws2;\n       if (__lc->_M_use_grouping)\n \t{\n \t  // Grouping can add (almost) as many separators as the\n \t  // number of digits, but no more.\n-\t  __ws2 = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) \n-\t\t\t\t\t\t\t* __len * 2));\n+\t  _CharT* __ws2 = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) \n+\t\t\t\t\t\t\t\t* __len * 2));\n \t  _M_group_float(__lc->_M_grouping, __lc->_M_thousands_sep, __p,\n \t\t\t __ws2, __ws, __len);\n \t  __ws = __ws2;\n \t}\n \n       // Pad.\n-      _CharT* __ws3;\n       const streamsize __w = __io.width();\n       if (__w > static_cast<streamsize>(__len))\n \t{\n-\t  __ws3 = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) * __w));\n+\t  _CharT* __ws3 = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)\n+\t\t\t\t\t\t\t\t* __w));\n \t  _M_pad(__fill, __w, __io, __ws3, __ws, __len);\n \t  __ws = __ws3;\n \t}"}]}