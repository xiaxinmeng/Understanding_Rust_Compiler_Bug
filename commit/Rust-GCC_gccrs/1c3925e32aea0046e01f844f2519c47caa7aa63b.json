{"sha": "1c3925e32aea0046e01f844f2519c47caa7aa63b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWMzOTI1ZTMyYWVhMDA0NmUwMWY4NDRmMjUxOWM0N2NhYTdhYTYzYg==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-08-17T14:27:07Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2019-08-17T14:27:07Z"}, "message": "re PR fortran/78719 ([F03] ICE in gfc_get_symbol_decl, at fortran/trans-decl.c:1438)\n\n2019-08-17  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/78719\n\t* decl.c (get_proc_name): Check for a CLASS entity when trying to\n\tadd attributes to an entity that already has an explicit interface.\n\n2019-08-17  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/78719\n\t* gfortran.dg/pr78719_1.f90: New test.\n\t* gfortran.dg/pr78719_2.f90: Ditto.\n\t* gfortran.dg/pr78719_3.f90: Ditto.\n\nFrom-SVN: r274604", "tree": {"sha": "343613919d05f3edd5f09529f42cf469b64aa7f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/343613919d05f3edd5f09529f42cf469b64aa7f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c3925e32aea0046e01f844f2519c47caa7aa63b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c3925e32aea0046e01f844f2519c47caa7aa63b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c3925e32aea0046e01f844f2519c47caa7aa63b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c3925e32aea0046e01f844f2519c47caa7aa63b/comments", "author": null, "committer": null, "parents": [{"sha": "4f81c2a3c54d8ea9ebd7c703eef9f6d09088eb29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f81c2a3c54d8ea9ebd7c703eef9f6d09088eb29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f81c2a3c54d8ea9ebd7c703eef9f6d09088eb29"}], "stats": {"total": 112, "additions": 109, "deletions": 3}, "files": [{"sha": "2de3532f3f0b6b0693afc94cf0f914d2ceeb0189", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3925e32aea0046e01f844f2519c47caa7aa63b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3925e32aea0046e01f844f2519c47caa7aa63b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1c3925e32aea0046e01f844f2519c47caa7aa63b", "patch": "@@ -1,3 +1,9 @@\n+2019-08-17  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/78719\n+\t* decl.c (get_proc_name): Check for a CLASS entity when trying to\n+\tadd attributes to an entity that already has an explicit interface.\n+\n 2019-08-17  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/91471"}, {"sha": "5f12fe17b02d15822d304fab2d410aaeb436d22d", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3925e32aea0046e01f844f2519c47caa7aa63b/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3925e32aea0046e01f844f2519c47caa7aa63b/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=1c3925e32aea0046e01f844f2519c47caa7aa63b", "patch": "@@ -1363,9 +1363,9 @@ get_proc_name (const char *name, gfc_symbol **result, bool module_fcn_entry)\n \t}\n \n       /* Trap declarations of attributes in encompassing scope.  The\n-\t signature for this is that ts.kind is set.  Legitimate\n-\t references only set ts.type.  */\n-      if (sym->ts.kind != 0\n+\t signature for this is that ts.kind is nonzero for no-CLASS\n+\t entity.  For a CLASS entity, ts.kind is zero.  */\n+      if ((sym->ts.kind != 0 || sym->ts.type == BT_CLASS)\n \t  && !sym->attr.implicit_type\n \t  && sym->attr.proc == 0\n \t  && gfc_current_ns->parent != NULL"}, {"sha": "1ab8b9e0ab035637b5d06efab13b94b8959b1a71", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3925e32aea0046e01f844f2519c47caa7aa63b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3925e32aea0046e01f844f2519c47caa7aa63b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1c3925e32aea0046e01f844f2519c47caa7aa63b", "patch": "@@ -1,3 +1,10 @@\n+2019-08-17  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/78719\n+\t* gfortran.dg/pr78719_1.f90: New test.\n+\t* gfortran.dg/pr78719_2.f90: Ditto.\n+\t* gfortran.dg/pr78719_3.f90: Ditto.\n+\n 2019-08-17  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/91471"}, {"sha": "f5a99c23eeee011aade120d7dfb87ce8655f9d28", "filename": "gcc/testsuite/gfortran.dg/pr78719_1.f90", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3925e32aea0046e01f844f2519c47caa7aa63b/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78719_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3925e32aea0046e01f844f2519c47caa7aa63b/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78719_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78719_1.f90?ref=1c3925e32aea0046e01f844f2519c47caa7aa63b", "patch": "@@ -0,0 +1,29 @@\n+! { dg-do run }\n+! PR fortran/78719\n+! Code contributed by Gerhard Steinmetz \n+program p\n+\n+   type t\n+      integer :: n\n+   end type\n+\n+   abstract interface\n+      subroutine h\n+      end\n+   end interface\n+\n+   procedure(h), pointer :: s\n+\n+   s => f\n+   call s\n+   s => g\n+   call s\n+\n+   contains\n+\n+      subroutine f\n+      end\n+\n+      subroutine g\n+      end\n+end program p"}, {"sha": "59abebedd169c4bd89a9629d140fa81be7a1f4e7", "filename": "gcc/testsuite/gfortran.dg/pr78719_2.f90", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3925e32aea0046e01f844f2519c47caa7aa63b/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78719_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3925e32aea0046e01f844f2519c47caa7aa63b/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78719_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78719_2.f90?ref=1c3925e32aea0046e01f844f2519c47caa7aa63b", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do compile }\n+! PR fortran/78719\n+! Code contributed by Gerhard Steinmetz \n+program p\n+\n+   type t\n+      integer :: n\n+   end type\n+\n+   real :: g\n+\n+   abstract interface\n+      subroutine h\n+      end\n+   end interface\n+\n+   procedure(h), pointer :: s\n+\n+   s => f\n+   call s\n+   s => g            ! { dg-error \"Invalid procedure pointer\" }\n+   call s\n+\n+   contains\n+\n+      subroutine f\n+      end\n+\n+      subroutine g   ! { dg-error \"has an explicit interface\" }\n+      end\n+\n+end program p        ! { dg-error \"Syntax error\" }"}, {"sha": "8e7f6ac9781e0474496bb6d0af027ef90bfe7eba", "filename": "gcc/testsuite/gfortran.dg/pr78719_3.f90", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c3925e32aea0046e01f844f2519c47caa7aa63b/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78719_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c3925e32aea0046e01f844f2519c47caa7aa63b/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78719_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr78719_3.f90?ref=1c3925e32aea0046e01f844f2519c47caa7aa63b", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do compile }\n+! PR fortran/78719\n+! Code contributed by Gerhard Steinmetz \n+program p\n+\n+   type t\n+      integer :: n\n+   end type\n+\n+   class(t) :: g     ! { dg-error \"must be dummy, allocatable or pointer\" }\n+\n+   abstract interface\n+      subroutine h\n+      end\n+   end interface\n+\n+   procedure(h), pointer :: s\n+\n+   s => f\n+   call s\n+   s => g            ! { dg-error \"Invalid procedure pointer\" }\n+   call s\n+\n+   contains\n+\n+      subroutine f\n+      end\n+\n+      subroutine g   ! { dg-error \"has an explicit interface\" }\n+      end\n+\n+end program p        ! { dg-error \"Syntax error\" }"}]}