{"sha": "b97190553d2798af4c5c8e6e775b942e458ba09e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk3MTkwNTUzZDI3OThhZjRjNWM4ZTZlNzc1Yjk0MmU0NThiYTA5ZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-03-08T20:50:21Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-03-08T20:50:21Z"}, "message": "predicates.md (indirect_branch_operand): Simplify.\n\n\t* config/i386/predicates.md (indirect_branch_operand): Simplify.\n\nFrom-SVN: r185111", "tree": {"sha": "c08526dfe5c468a8637bcbf8da90d50602ec8a37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c08526dfe5c468a8637bcbf8da90d50602ec8a37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b97190553d2798af4c5c8e6e775b942e458ba09e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b97190553d2798af4c5c8e6e775b942e458ba09e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b97190553d2798af4c5c8e6e775b942e458ba09e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b97190553d2798af4c5c8e6e775b942e458ba09e/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "232d1950fd1cc440b0d7673246614c360744984e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/232d1950fd1cc440b0d7673246614c360744984e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/232d1950fd1cc440b0d7673246614c360744984e"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "5f7d9fbc53b7ddac1e64080387dfc88bfba70005", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b97190553d2798af4c5c8e6e775b942e458ba09e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b97190553d2798af4c5c8e6e775b942e458ba09e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b97190553d2798af4c5c8e6e775b942e458ba09e", "patch": "@@ -1,3 +1,7 @@\n+2012-03-08  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/predicates.md (indirect_branch_operand): Simplify.\n+\n 2012-03-08  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* config/avr/avr.md (*addhi3, addhi3_clobber): Add \"w\" alternative"}, {"sha": "dad8bf3d29a6402ddb0793be3a9035825b653123", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b97190553d2798af4c5c8e6e775b942e458ba09e/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b97190553d2798af4c5c8e6e775b942e458ba09e/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=b97190553d2798af4c5c8e6e775b942e458ba09e", "patch": "@@ -566,9 +566,9 @@\n \n ;; Test for a valid operand for indirect branch.\n (define_predicate \"indirect_branch_operand\"\n-  (if_then_else (match_test \"TARGET_X32\")\n-    (match_operand 0 \"register_operand\")\n-    (match_operand 0 \"nonimmediate_operand\")))\n+  (ior (match_operand 0 \"register_operand\")\n+       (and (not (match_test \"TARGET_X32\"))\n+\t    (match_operand 0 \"memory_operand\"))))\n \n ;; Test for a valid operand for a call instruction.\n (define_predicate \"call_insn_operand\""}]}