{"sha": "2be921271333c81ec9fcf71ba49110bf23971d09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJlOTIxMjcxMzMzYzgxZWM5ZmNmNzFiYTQ5MTEwYmYyMzk3MWQwOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-10-21T17:00:59Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-10-21T17:00:59Z"}, "message": "LWG2725 Fix error reporting for filesystem::exists\n\n\t* include/experimental/bits/fs_ops.h\n\t(exists(const path&, error_code&)): Clear error if status is known\n\t(LWG 2725).\n\t(status(const path&, error_code&)): Handle EOVERFLOW.\n\t* testsuite/experimental/filesystem/operations/exists.cc: Test\n\toverload taking an error_code.\n\nFrom-SVN: r241417", "tree": {"sha": "b8178b78f1624dff2b5fe484dcb72077cf54e82a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8178b78f1624dff2b5fe484dcb72077cf54e82a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2be921271333c81ec9fcf71ba49110bf23971d09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2be921271333c81ec9fcf71ba49110bf23971d09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2be921271333c81ec9fcf71ba49110bf23971d09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2be921271333c81ec9fcf71ba49110bf23971d09/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e59e183f69dcfac77e043854ca2ef37120c6eda1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e59e183f69dcfac77e043854ca2ef37120c6eda1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e59e183f69dcfac77e043854ca2ef37120c6eda1"}], "stats": {"total": 81, "additions": 73, "deletions": 8}, "files": [{"sha": "d4250ee529a023076b35ce81d3b1a50ab218c6fb", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2be921271333c81ec9fcf71ba49110bf23971d09/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2be921271333c81ec9fcf71ba49110bf23971d09/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2be921271333c81ec9fcf71ba49110bf23971d09", "patch": "@@ -1,5 +1,12 @@\n 2016-10-21  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/experimental/bits/fs_ops.h\n+\t(exists(const path&, error_code&)): Clear error if status is known\n+\t(LWG 2725).\n+\t(status(const path&, error_code&)): Handle EOVERFLOW.\n+\t* testsuite/experimental/filesystem/operations/exists.cc: Test\n+\toverload taking an error_code.\n+\n \t* include/experimental/bits/fs_path.h (path::path(string_type&&))\n \t(path::operator=(string&&), path::assign(string_type&&)): Define\n \tconstruction and assignment from string_type rvalues (LWG 2707)."}, {"sha": "62a9826d6e5ebe4923e730b71f2db02999d802ca", "filename": "libstdc++-v3/include/experimental/bits/fs_ops.h", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2be921271333c81ec9fcf71ba49110bf23971d09/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_ops.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2be921271333c81ec9fcf71ba49110bf23971d09/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_ops.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_ops.h?ref=2be921271333c81ec9fcf71ba49110bf23971d09", "patch": "@@ -112,6 +112,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   void current_path(const path& __p);\n   void current_path(const path& __p, error_code& __ec) noexcept;\n \n+  bool\n+  equivalent(const path& __p1, const path& __p2);\n+\n+  bool\n+  equivalent(const path& __p1, const path& __p2, error_code& __ec) noexcept;\n+\n   inline bool\n   exists(file_status __s) noexcept\n   { return status_known(__s) && __s.type() != file_type::not_found; }\n@@ -122,13 +128,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   inline bool\n   exists(const path& __p, error_code& __ec) noexcept\n-  { return exists(status(__p, __ec)); }\n-\n-  bool\n-  equivalent(const path& __p1, const path& __p2);\n-\n-  bool\n-  equivalent(const path& __p1, const path& __p2, error_code& __ec) noexcept;\n+  {\n+    auto __s = status(__p, __ec);\n+    if (status_known(__s))\n+      __ec.clear();\n+    return exists(__s);\n+  }\n \n   uintmax_t file_size(const path& __p);\n   uintmax_t file_size(const path& __p, error_code& __ec) noexcept;"}, {"sha": "6b38584bff8267f1a49f447ef897df62bf0e62c1", "filename": "libstdc++-v3/src/filesystem/ops.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2be921271333c81ec9fcf71ba49110bf23971d09/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2be921271333c81ec9fcf71ba49110bf23971d09/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc?ref=2be921271333c81ec9fcf71ba49110bf23971d09", "patch": "@@ -1297,7 +1297,7 @@ fs::space(const path& p, error_code& ec) noexcept\n \n #ifdef _GLIBCXX_HAVE_SYS_STAT_H\n fs::file_status\n-fs::status(const fs::path& p, std::error_code& ec) noexcept\n+fs::status(const fs::path& p, error_code& ec) noexcept\n {\n   file_status status;\n   stat_type st;\n@@ -1307,6 +1307,10 @@ fs::status(const fs::path& p, std::error_code& ec) noexcept\n       ec.assign(err, std::generic_category());\n       if (is_not_found_errno(err))\n \tstatus.type(file_type::not_found);\n+#ifdef EOVERFLOW\n+      else if (err == EOVERFLOW)\n+\tstatus.type(file_type::unknown);\n+#endif\n     }\n   else\n     {"}, {"sha": "7dbc8e96db91d4ebd7bb8ef9bc11b56704e651cc", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/exists.cc", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2be921271333c81ec9fcf71ba49110bf23971d09/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fexists.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2be921271333c81ec9fcf71ba49110bf23971d09/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fexists.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Fexists.cc?ref=2be921271333c81ec9fcf71ba49110bf23971d09", "patch": "@@ -33,20 +33,68 @@ test01()\n   VERIFY( exists(path{\".\"}) );\n   VERIFY( exists(path{\"..\"}) );\n   VERIFY( exists(std::experimental::filesystem::current_path()) );\n+\n+  std::error_code ec = std::make_error_code(std::errc::invalid_argument);\n+  VERIFY( exists(path{\"/\"}, ec) );\n+  VERIFY( !ec );\n+  VERIFY( exists(path{\"/.\"}, ec) );\n+  VERIFY( !ec );\n+  VERIFY( exists(path{\".\"}, ec) );\n+  VERIFY( !ec );\n+  VERIFY( exists(path{\"..\"}, ec) );\n+  VERIFY( !ec );\n+  VERIFY( exists(std::experimental::filesystem::current_path(), ec) );\n+  VERIFY( !ec );\n }\n \n void\n test02()\n {\n   path rel = __gnu_test::nonexistent_path();\n   VERIFY( !exists(rel) );\n+\n+  std::error_code ec = std::make_error_code(std::errc::invalid_argument);\n+  VERIFY( !exists(rel, ec) );\n+  VERIFY( !ec ); // DR 2725\n }\n \n void\n test03()\n {\n   path abs = absolute(__gnu_test::nonexistent_path());\n   VERIFY( !exists(abs) );\n+\n+  std::error_code ec = std::make_error_code(std::errc::invalid_argument);\n+  VERIFY( !exists(abs, ec) );\n+  VERIFY( !ec ); // DR 2725\n+}\n+\n+void\n+test04()\n+{\n+  using perms = std::experimental::filesystem::perms;\n+  path p = __gnu_test::nonexistent_path();\n+  create_directory(p);\n+  permissions(p, perms::all | perms::remove_perms);\n+\n+  auto unr = p / \"unreachable\";\n+  std::error_code ec;\n+  VERIFY( !exists(unr, ec) );\n+  VERIFY( ec == std::errc::permission_denied );\n+  ec.clear();\n+  try\n+  {\n+    exists(unr);\n+  }\n+  catch(const std::experimental::filesystem::filesystem_error& ex)\n+  {\n+    ec = ex.code();\n+    VERIFY( ex.path1() == unr );\n+  }\n+  VERIFY( ec == std::errc::permission_denied );\n+\n+  permissions(p, perms::owner_all);\n+  remove(p);\n }\n \n int\n@@ -55,4 +103,5 @@ main()\n   test01();\n   test02();\n   test03();\n+  test04();\n }"}]}