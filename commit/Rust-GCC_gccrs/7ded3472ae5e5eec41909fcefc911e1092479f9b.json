{"sha": "7ded3472ae5e5eec41909fcefc911e1092479f9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RlZDM0NzJhZTVlNWVlYzQxOTA5ZmNlZmM5MTFlMTA5MjQ3OWY5Yg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-05-17T20:16:13Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-05-17T20:16:13Z"}, "message": "libgo: add \"vendor\" to pkgpath for vendored standard packages\n    \n    Ensure that the packages vendored into the standard library do not\n    have the same pkgpath as the actual packages.  If we don't, attempts\n    to build and test the actual packages will get confused.  The specific\n    error I was seeing was import loops, causing some of the packages to\n    fail to get initialized, causing an obscure run time crash.\n    \n    Reviewed-on: https://go-review.googlesource.com/43610\n\nFrom-SVN: r248168", "tree": {"sha": "2ba2a473fd80e8c4744b9b1352dfb3bb06f134fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ba2a473fd80e8c4744b9b1352dfb3bb06f134fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ded3472ae5e5eec41909fcefc911e1092479f9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ded3472ae5e5eec41909fcefc911e1092479f9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ded3472ae5e5eec41909fcefc911e1092479f9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ded3472ae5e5eec41909fcefc911e1092479f9b/comments", "author": null, "committer": null, "parents": [{"sha": "c8ded43049f35d69287fed9a1f25f3f283080014", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8ded43049f35d69287fed9a1f25f3f283080014", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8ded43049f35d69287fed9a1f25f3f283080014"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "f7e19d32bd6c7b07a4fee734a9e1a6d2116cbf24", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ded3472ae5e5eec41909fcefc911e1092479f9b/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ded3472ae5e5eec41909fcefc911e1092479f9b/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=7ded3472ae5e5eec41909fcefc911e1092479f9b", "patch": "@@ -1,4 +1,4 @@\n-924a1fcc5658a5d66f5015921d7258e3a77519bc\n+ba68a42618d1e8516e38da093d3af731d7fd4f06\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "8bbd43771447719ecb86638ba1defa121a2bac0b", "filename": "libgo/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ded3472ae5e5eec41909fcefc911e1092479f9b/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ded3472ae5e5eec41909fcefc911e1092479f9b/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=7ded3472ae5e5eec41909fcefc911e1092479f9b", "patch": "@@ -910,7 +910,7 @@ BUILDDEPS = \\\n BUILDPACKAGE = \\\n \t$(MKDIR_P) $(@D); \\\n \tfiles=`echo $^ | sed -e 's/[^ ]*\\.gox//g' -e 's/[^ ]*\\.dep//'`; \\\n-\t$(LTGOCOMPILE) -I . -c -fgo-pkgpath=`echo $@ | sed -e 's/.lo$$//'` $($(subst -,_,$(subst .,_,$(subst /,_,$@)))_GOCFLAGS) -o $@ $$files\n+\t$(LTGOCOMPILE) -I . -c -fgo-pkgpath=`echo $@ | sed -e 's/.lo$$//' -e 's|golang_org|vendor/golang_org|'` $($(subst -,_,$(subst .,_,$(subst /,_,$@)))_GOCFLAGS) -o $@ $$files\n \n # How to build a .gox file from a .lo file.\n # Matching .o file can either be in the same directory as the .lo (non-PIC"}, {"sha": "cbdd37998369be3ded6df43d9ab7dba72a2d94a9", "filename": "libgo/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ded3472ae5e5eec41909fcefc911e1092479f9b/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ded3472ae5e5eec41909fcefc911e1092479f9b/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=7ded3472ae5e5eec41909fcefc911e1092479f9b", "patch": "@@ -1063,7 +1063,7 @@ BUILDDEPS = \\\n BUILDPACKAGE = \\\n \t$(MKDIR_P) $(@D); \\\n \tfiles=`echo $^ | sed -e 's/[^ ]*\\.gox//g' -e 's/[^ ]*\\.dep//'`; \\\n-\t$(LTGOCOMPILE) -I . -c -fgo-pkgpath=`echo $@ | sed -e 's/.lo$$//'` $($(subst -,_,$(subst .,_,$(subst /,_,$@)))_GOCFLAGS) -o $@ $$files\n+\t$(LTGOCOMPILE) -I . -c -fgo-pkgpath=`echo $@ | sed -e 's/.lo$$//' -e 's|golang_org|vendor/golang_org|'` $($(subst -,_,$(subst .,_,$(subst /,_,$@)))_GOCFLAGS) -o $@ $$files\n \n \n # How to build a .gox file from a .lo file."}]}