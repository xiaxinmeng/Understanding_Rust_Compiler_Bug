{"sha": "d4731b80de2a377fdbfa24dec34b15b5b680691c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ3MzFiODBkZTJhMzc3ZmRiZmEyNGRlYzM0YjE1YjViNjgwNjkxYw==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2007-10-15T13:55:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-10-15T13:55:27Z"}, "message": "sem_case.adb, [...]: Replace use of Heap_Sort_A (passing'Unrestricted_Access of nested subprograms...\n\n2007-10-15  Bob Duff  <duff@adacore.com>\n\n\t* sem_case.adb, sem_ch13.adb, lib-sort.adb: Replace use of Heap_Sort_A\n\t(passing'Unrestricted_Access of nested subprograms to Sort) with use of\n\tthe generic Heap_Sort_G, in order to avoid trampolines.\n\nFrom-SVN: r129327", "tree": {"sha": "4b05e6da4711a3ed03e4096c21cd8542543f6ae5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b05e6da4711a3ed03e4096c21cd8542543f6ae5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4731b80de2a377fdbfa24dec34b15b5b680691c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4731b80de2a377fdbfa24dec34b15b5b680691c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4731b80de2a377fdbfa24dec34b15b5b680691c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4731b80de2a377fdbfa24dec34b15b5b680691c/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "28eba57cf2cbcbce62d2551b53e057a76a5f1d89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28eba57cf2cbcbce62d2551b53e057a76a5f1d89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28eba57cf2cbcbce62d2551b53e057a76a5f1d89"}], "stats": {"total": 45, "additions": 24, "deletions": 21}, "files": [{"sha": "24c11f02716ca4a5890f15dde14f4678bb31e45f", "filename": "gcc/ada/lib-sort.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4731b80de2a377fdbfa24dec34b15b5b680691c/gcc%2Fada%2Flib-sort.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4731b80de2a377fdbfa24dec34b15b5b680691c/gcc%2Fada%2Flib-sort.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-sort.adb?ref=d4731b80de2a377fdbfa24dec34b15b5b680691c", "patch": "@@ -31,7 +31,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with GNAT.Heap_Sort_A; use GNAT.Heap_Sort_A;\n+with GNAT.Heap_Sort_G;\n \n separate (Lib)\n procedure Sort (Tbl : in out Unit_Ref_Table) is\n@@ -48,6 +48,8 @@ procedure Sort (Tbl : in out Unit_Ref_Table) is\n    procedure Move_Uname (From : Natural; To : Natural);\n    --  Move routine needed by the sorting routine below\n \n+   package Sorting is new GNAT.Heap_Sort_G (Move_Uname, Lt_Uname);\n+\n    --------------\n    -- Lt_Uname --\n    --------------\n@@ -88,8 +90,7 @@ begin\n          T (I) := Tbl (Int (I) - 1 + Tbl'First);\n       end loop;\n \n-      Sort (T'Last,\n-        Move_Uname'Unrestricted_Access, Lt_Uname'Unrestricted_Access);\n+      Sorting.Sort (T'Last);\n \n    --  Sort is complete, copy result back into place\n "}, {"sha": "3a3e09f0199f8e857ef987810e5563fd0dd00529", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4731b80de2a377fdbfa24dec34b15b5b680691c/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4731b80de2a377fdbfa24dec34b15b5b680691c/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=d4731b80de2a377fdbfa24dec34b15b5b680691c", "patch": "@@ -41,7 +41,7 @@ with Sinfo;    use Sinfo;\n with Tbuild;   use Tbuild;\n with Uintp;    use Uintp;\n \n-with GNAT.Heap_Sort_A; use GNAT.Heap_Sort_A;\n+with GNAT.Heap_Sort_G;\n \n package body Sem_Case is\n \n@@ -104,6 +104,8 @@ package body Sem_Case is\n       procedure Move_Choice (From : Natural; To : Natural);\n       --  Move routine for sorting the Choice_Table\n \n+      package Sorting is new GNAT.Heap_Sort_G (Move_Choice, Lt_Choice);\n+\n       procedure Issue_Msg (Value1 : Node_Id; Value2 : Node_Id);\n       procedure Issue_Msg (Value1 : Node_Id; Value2 : Uint);\n       procedure Issue_Msg (Value1 : Uint;    Value2 : Node_Id);\n@@ -215,10 +217,7 @@ package body Sem_Case is\n          return;\n       end if;\n \n-      Sort\n-        (Positive (Choice_Table'Last),\n-         Move_Choice'Unrestricted_Access,\n-         Lt_Choice'Unrestricted_Access);\n+      Sorting.Sort (Positive (Choice_Table'Last));\n \n       Lo      := Expr_Value (Choice_Table (1).Lo);\n       Hi      := Expr_Value (Choice_Table (1).Hi);"}, {"sha": "df61a8e7cc0b8eff6dad039074478750c068d1e2", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4731b80de2a377fdbfa24dec34b15b5b680691c/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4731b80de2a377fdbfa24dec34b15b5b680691c/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=d4731b80de2a377fdbfa24dec34b15b5b680691c", "patch": "@@ -54,7 +54,7 @@ with Ttypes;   use Ttypes;\n with Tbuild;   use Tbuild;\n with Urealp;   use Urealp;\n \n-with GNAT.Heap_Sort_A; use GNAT.Heap_Sort_A;\n+with GNAT.Heap_Sort_G;\n \n package body Sem_Ch13 is\n \n@@ -296,13 +296,15 @@ package body Sem_Ch13 is\n       declare\n          Comps : array (0 .. Num_CC) of Entity_Id;\n          --  Array to collect component and discrimninant entities. The data\n-         --  starts at index 1, the 0'th entry is for GNAT.Heap_Sort_A.\n+         --  starts at index 1, the 0'th entry is for the sort routine.\n \n          function CP_Lt (Op1, Op2 : Natural) return Boolean;\n-         --  Compare routine for Sort (See GNAT.Heap_Sort_A)\n+         --  Compare routine for Sort\n \n          procedure CP_Move (From : Natural; To : Natural);\n-         --  Move routine for Sort (see GNAT.Heap_Sort_A)\n+         --  Move routine for Sort\n+\n+         package Sorting is new GNAT.Heap_Sort_G (CP_Move, CP_Lt);\n \n          Start : Natural;\n          Stop  : Natural;\n@@ -353,7 +355,7 @@ package body Sem_Ch13 is\n \n          --  Sort by ascending position number\n \n-         Sort (Num_CC, CP_Move'Unrestricted_Access, CP_Lt'Unrestricted_Access);\n+         Sorting.Sort (Num_CC);\n \n          --  We now have all the components whose size does not exceed the max\n          --  machine scalar value, sorted by starting position. In this loop\n@@ -1107,7 +1109,7 @@ package body Sem_Ch13 is\n \n             if VM_Target = No_VM then\n                Set_Has_External_Tag_Rep_Clause (U_Ent);\n-            else\n+            elsif not Inspector_Mode then\n                Error_Msg_Name_1 := Attr;\n                Error_Msg_N\n                  (\"% attribute unsupported in this configuration\", Nam);\n@@ -1169,8 +1171,10 @@ package body Sem_Ch13 is\n          --  Object_Size attribute definition clause\n \n          when Attribute_Object_Size => Object_Size : declare\n-            Size   : constant Uint := Static_Integer (Expr);\n+            Size : constant Uint := Static_Integer (Expr);\n+\n             Biased : Boolean;\n+            pragma Warnings (Off, Biased);\n \n          begin\n             if not Is_Type (U_Ent) then\n@@ -2438,10 +2442,12 @@ package body Sem_Ch13 is\n             --  Count of entries in OC_Fbit and OC_Lbit\n \n             function OC_Lt (Op1, Op2 : Natural) return Boolean;\n-            --  Compare routine for Sort (See GNAT.Heap_Sort_A)\n+            --  Compare routine for Sort\n \n             procedure OC_Move (From : Natural; To : Natural);\n-            --  Move routine for Sort (see GNAT.Heap_Sort_A)\n+            --  Move routine for Sort\n+\n+            package Sorting is new GNAT.Heap_Sort_G (OC_Move, OC_Lt);\n \n             function OC_Lt (Op1, Op2 : Natural) return Boolean is\n             begin\n@@ -2476,10 +2482,7 @@ package body Sem_Ch13 is\n                Next (CC);\n             end loop;\n \n-            Sort\n-              (OC_Count,\n-               OC_Move'Unrestricted_Access,\n-               OC_Lt'Unrestricted_Access);\n+            Sorting.Sort (OC_Count);\n \n             Overlap_Check_Required := False;\n             for J in 1 .. OC_Count - 1 loop"}]}