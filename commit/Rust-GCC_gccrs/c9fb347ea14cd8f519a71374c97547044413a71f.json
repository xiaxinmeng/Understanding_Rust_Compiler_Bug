{"sha": "c9fb347ea14cd8f519a71374c97547044413a71f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzlmYjM0N2VhMTRjZDhmNTE5YTcxMzc0Yzk3NTQ3MDQ0NDEzYTcxZg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2018-10-31T14:51:54Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2018-10-31T14:51:54Z"}, "message": "[3/7] Preprocessor macro loc\n\nhttps://gcc.gnu.org/ml/gcc-patches/2018-10/msg02039.html\n\t* include/cpplib.h (cpp_macro_definition_location): Make inline.\n\t* macro.c (warn_of_redefinition): Fix comments, examine macro\n\ttype, use C++ for.\n\t(cpp_macro_definition_location): Don't define here.\n\nFrom-SVN: r265688", "tree": {"sha": "a075488d4fef537b97d9429136a5011de627d980", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a075488d4fef537b97d9429136a5011de627d980"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9fb347ea14cd8f519a71374c97547044413a71f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9fb347ea14cd8f519a71374c97547044413a71f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9fb347ea14cd8f519a71374c97547044413a71f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9fb347ea14cd8f519a71374c97547044413a71f/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "43af5ef1cefc671f7baf3d0e33d46ab7f9a7d8b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43af5ef1cefc671f7baf3d0e33d46ab7f9a7d8b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43af5ef1cefc671f7baf3d0e33d46ab7f9a7d8b1"}], "stats": {"total": 30, "additions": 14, "deletions": 16}, "files": [{"sha": "a02a335eae9a50d92471944aaee4996a90a67e03", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9fb347ea14cd8f519a71374c97547044413a71f/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9fb347ea14cd8f519a71374c97547044413a71f/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=c9fb347ea14cd8f519a71374c97547044413a71f", "patch": "@@ -1,5 +1,10 @@\n 2018-10-31  Nathan Sidwell  <nathan@acm.org>\n \n+\t* include/cpplib.h (cpp_macro_definition_location): Make inline.\n+\t* macro.c (warn_of_redefinition): Fix comments, examine macro\n+\ttype, use C++ for.\n+\t(cpp_macro_definition_location): Don't define here.\n+\n \t* include/cpplib.h (HT_NODE): Don't cast NODE.\n \t(NODE_LEN, NODE_NAME): Use HT_NODE.\n "}, {"sha": "a2dab5237dd07c450ce7778d09bbb0e1451ee122", "filename": "libcpp/include/cpplib.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9fb347ea14cd8f519a71374c97547044413a71f/libcpp%2Finclude%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9fb347ea14cd8f519a71374c97547044413a71f/libcpp%2Finclude%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fcpplib.h?ref=c9fb347ea14cd8f519a71374c97547044413a71f", "patch": "@@ -1017,7 +1017,10 @@ inline bool cpp_fun_like_macro_p (cpp_hashnode *node)\n \n extern const unsigned char *cpp_macro_definition (cpp_reader *,\n \t\t\t\t\t\t  cpp_hashnode *);\n-extern source_location cpp_macro_definition_location (cpp_hashnode *);\n+inline source_location cpp_macro_definition_location (cpp_hashnode *node)\n+{\n+  return node->value.macro->line;\n+}\n extern void _cpp_backup_tokens (cpp_reader *, unsigned int);\n extern const cpp_token *cpp_peek_token (cpp_reader *, int);\n "}, {"sha": "bb3d95899d3a616dfc031fd31137a5922ff3f085", "filename": "libcpp/macro.c", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9fb347ea14cd8f519a71374c97547044413a71f/libcpp%2Fmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9fb347ea14cd8f519a71374c97547044413a71f/libcpp%2Fmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fmacro.c?ref=c9fb347ea14cd8f519a71374c97547044413a71f", "patch": "@@ -2980,13 +2980,11 @@ _cpp_backup_tokens (cpp_reader *pfile, unsigned int count)\n \n /* #define directive parsing and handling.  */\n \n-/* Returns nonzero if a macro redefinition warning is required.  */\n+/* Returns true if a macro redefinition warning is required.  */\n static bool\n warn_of_redefinition (cpp_reader *pfile, cpp_hashnode *node,\n \t\t      const cpp_macro *macro2)\n {\n-  unsigned int i;\n-\n   /* Some redefinitions need to be warned about regardless.  */\n   if (node->flags & NODE_WARN)\n     return true;\n@@ -3021,18 +3019,18 @@ warn_of_redefinition (cpp_reader *pfile, cpp_hashnode *node,\n     return true;\n \n   /* Check parameter spellings.  */\n-  for (i = 0; i < macro1->paramc; i++)\n+  for (unsigned i = macro1->paramc; i--; )\n     if (macro1->parm.params[i] != macro2->parm.params[i])\n       return true;\n \n   /* Check the replacement text or tokens.  */\n-  if (CPP_OPTION (pfile, traditional))\n+  if (macro1->kind == cmk_traditional)\n     return _cpp_expansions_different_trad (macro1, macro2);\n \n   if (macro1->count != macro2->count)\n     return true;\n \n-  for (i = 0; i < macro1->count; i++)\n+  for (unsigned i= macro1->count; i--; )\n     if (!_cpp_equiv_tokens (&macro1->exp.tokens[i], &macro2->exp.tokens[i]))\n       return true;\n \n@@ -3439,7 +3437,7 @@ create_iso_definition (cpp_reader *pfile)\n     (pfile, sizeof (cpp_macro) - sizeof (cpp_token)\n      + sizeof (cpp_token) * macro->count);\n \n-  /* Clear whitespace on first token for warn_of_redefinition().  */\n+  /* Clear whitespace on first token.  */\n   if (macro->count)\n     macro->exp.tokens[0].flags &= ~PREV_WHITE;\n \n@@ -3767,11 +3765,3 @@ cpp_macro_definition (cpp_reader *pfile, cpp_hashnode *node)\n   *buffer = '\\0';\n   return pfile->macro_buffer;\n }\n-\n-/* Get the line at which the macro was defined.  */\n-\n-source_location\n-cpp_macro_definition_location (cpp_hashnode *node)\n-{\n-  return node->value.macro->line;\n-}"}]}