{"sha": "bf997c7d649c2c87140b11003b03500c015d139e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY5OTdjN2Q2NDljMmM4NzE0MGIxMTAwM2IwMzUwMGMwMTVkMTM5ZQ==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-02-29T08:30:48Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-02-29T08:30:48Z"}, "message": "invoke.texi (-msoft-atomic): Add more detailed description.\n\n\t* doc/invoke.texi (-msoft-atomic): Add more detailed description.\n\t(-mbranch-cost, -mcbranchdi -mcmpeqdi -mfused-madd\n\t-mpretend-cmove): New.\n\nFrom-SVN: r184654", "tree": {"sha": "221dc3b4405ecc94db52101d7050cb27d4381de0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/221dc3b4405ecc94db52101d7050cb27d4381de0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf997c7d649c2c87140b11003b03500c015d139e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf997c7d649c2c87140b11003b03500c015d139e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf997c7d649c2c87140b11003b03500c015d139e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf997c7d649c2c87140b11003b03500c015d139e/comments", "author": null, "committer": null, "parents": [{"sha": "9b7316d7091034a6e728dbe41ab1090754ebc8da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b7316d7091034a6e728dbe41ab1090754ebc8da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b7316d7091034a6e728dbe41ab1090754ebc8da"}], "stats": {"total": 46, "additions": 43, "deletions": 3}, "files": [{"sha": "d53ff229059b2c9c24d926ce74e97afe13a1a5e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf997c7d649c2c87140b11003b03500c015d139e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf997c7d649c2c87140b11003b03500c015d139e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf997c7d649c2c87140b11003b03500c015d139e", "patch": "@@ -1,3 +1,9 @@\n+2012-02-29  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\t* doc/invoke.texi (-msoft-atomic): Add more detailed description.\n+\t(-mbranch-cost, -mcbranchdi -mcmpeqdi -mfused-madd\n+\t-mpretend-cmove): New.\n+\n 2012-02-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/52397"}, {"sha": "e57f586fe222a36dedbe6f7f7786a7b79224e251", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 37, "deletions": 3, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf997c7d649c2c87140b11003b03500c015d139e/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf997c7d649c2c87140b11003b03500c015d139e/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=bf997c7d649c2c87140b11003b03500c015d139e", "patch": "@@ -886,7 +886,8 @@ See RS/6000 and PowerPC Options.\n -mprefergot  -musermode -multcost=@var{number} -mdiv=@var{strategy} @gol\n -mdivsi3_libfunc=@var{name} -mfixed-range=@var{register-range} @gol\n -madjust-unroll -mindexed-addressing -mgettrcost=@var{number} -mpt-fixed @gol\n--maccumulate-outgoing-args -minvalid-symbols -msoft-atomic}\n+-maccumulate-outgoing-args -minvalid-symbols -msoft-atomic @gol\n+-mbranch-cost=@var{num} -mcbranchdi -mcmpeqdi -mfused-madd -mpretend-cmove}\n \n @emph{Solaris 2 Options}\n @gccoptlist{-mimpure-text  -mno-impure-text @gol\n@@ -17821,8 +17822,12 @@ which is incompatible with the SH ABI@.\n \n @item -msoft-atomic\n @opindex msoft-atomic\n-Generate software atomic sequences for the atomic operations.\n-This is the default when the target is @code{sh-*-linux*}.\n+Generate GNU/Linux compatible gUSA software atomic sequences for the atomic\n+built-in functions.  The generated atomic sequences require support from the \n+interrupt / exception handling code of the system and are only suitable for\n+single-core systems.  They will not perform correctly on multi-core systems.\n+This option is enabled by default when the target is @code{sh-*-linux*}.\n+For details on the atomic built-in functions see @ref{__atomic Builtins}.\n \n @item -mspace\n @opindex mspace\n@@ -17953,6 +17958,35 @@ to generate symbols that will cause ptabs / ptrel to trap.\n This option is only meaningful when @option{-mno-pt-fixed} is in effect.\n It will then prevent cross-basic-block cse, hoisting and most scheduling\n of symbol loads.  The default is @option{-mno-invalid-symbols}.\n+\n+@item -mbranch-cost=@var{num}\n+@opindex mbranch-cost=@var{num}\n+Assume @var{num} to be the cost for a branch instruction.  Higher numbers\n+will make the compiler try to generate more branch-free code if possible.  \n+If not specified the value is selected depending on the processor type that\n+is being compiled for.\n+\n+@item -mcbranchdi\n+@opindex mcbranchdi\n+Enable the @code{cbranchdi4} instruction pattern.\n+\n+@item -mcmpeqdi\n+@opindex mcmpeqdi\n+Emit the @code{cmpeqdi_t} instruction pattern even when @option{-mcbranchdi}\n+is in effect.\n+\n+@item -mfused-madd\n+@opindex mfused-madd\n+Allow the usage of the @code{fmac} instruction (floating-point\n+multiply-accumulate) if the processor type supports it.  Enabling this\n+option might generate code that produces different numeric floating-point\n+results compared to strict IEEE 754 arithmetic.\n+\n+@item -mpretend-cmove\n+@opindex mpretend-cmove\n+Prefer zero-displacement conditional branches for conditional move instruction\n+patterns.  This can result in faster code on the SH4 processor.\n+\n @end table\n \n @node Solaris 2 Options"}]}