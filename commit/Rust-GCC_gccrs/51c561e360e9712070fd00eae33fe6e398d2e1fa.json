{"sha": "51c561e360e9712070fd00eae33fe6e398d2e1fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFjNTYxZTM2MGU5NzEyMDcwZmQwMGVhZTMzZmU2ZTM5OGQyZTFmYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-01-16T19:01:31Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-01-16T19:01:31Z"}, "message": "alpha.c (some_small_symbolic_mem_operand): Look into (and:DI () (const_int -8)).\n\n\t* config/alpha/alpha.c (some_small_symbolic_mem_operand): Look into\n\t(and:DI () (const_int -8)).\n\t(split_small_symbolic_mem_operand): Split\n\t(mem (and:DI () (const_int -8)).\n\n\t* gcc.dg/20020116-1.c: New test.\n\nFrom-SVN: r48920", "tree": {"sha": "05ef909315d82a879a012d00b6ef1433f2dad614", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05ef909315d82a879a012d00b6ef1433f2dad614"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51c561e360e9712070fd00eae33fe6e398d2e1fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51c561e360e9712070fd00eae33fe6e398d2e1fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51c561e360e9712070fd00eae33fe6e398d2e1fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51c561e360e9712070fd00eae33fe6e398d2e1fa/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8c1a6b8175da581b6d613e579f94948e2ca6394", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8c1a6b8175da581b6d613e579f94948e2ca6394", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8c1a6b8175da581b6d613e579f94948e2ca6394"}], "stats": {"total": 53, "additions": 47, "deletions": 6}, "files": [{"sha": "9cb28eef7742d408c84b7e4ec00027a667fbf5c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c561e360e9712070fd00eae33fe6e398d2e1fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c561e360e9712070fd00eae33fe6e398d2e1fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=51c561e360e9712070fd00eae33fe6e398d2e1fa", "patch": "@@ -1,3 +1,10 @@\n+2002-01-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/alpha/alpha.c (some_small_symbolic_mem_operand): Look into\n+\t(and:DI () (const_int -8)).\n+\t(split_small_symbolic_mem_operand): Split\n+\t(mem (and:DI () (const_int -8)).\n+\n 2002-01-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/5309:"}, {"sha": "8204c782cdfc6a7d20b3036483be78c78c0619d7", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c561e360e9712070fd00eae33fe6e398d2e1fa/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c561e360e9712070fd00eae33fe6e398d2e1fa/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=51c561e360e9712070fd00eae33fe6e398d2e1fa", "patch": "@@ -1878,8 +1878,16 @@ some_small_symbolic_mem_operand (x, mode)\n   while (GET_RTX_CLASS (GET_CODE (x)) == '1')\n     x = XEXP (x, 0);\n \n-  return (GET_CODE (x) == MEM\n-\t  && small_symbolic_operand (XEXP (x, 0), Pmode));\n+  if (GET_CODE (x) != MEM)\n+    return 0;\n+\n+  x = XEXP (x, 0);\n+  /* If this is an ldq_u type address, discard the outer AND.  */\n+  if (GET_CODE (x) == AND && GET_MODE (x) == DImode\n+      && GET_CODE (XEXP (x, 1)) == CONST_INT\n+      && INTVAL (XEXP (x, 1)) == -8)\n+    x = XEXP (x, 0);\n+  return small_symbolic_operand (x, Pmode);\n }\n \n rtx\n@@ -1890,7 +1898,17 @@ split_small_symbolic_mem_operand (x)\n \n   if (GET_CODE (x) == MEM)\n     {\n-      rtx tmp = gen_rtx_LO_SUM (DImode, pic_offset_table_rtx, XEXP (x, 0));\n+      rtx tmp = XEXP (x, 0);\n+\n+      if (GET_CODE (tmp) == AND && GET_MODE (tmp) == DImode\n+\t  && GET_CODE (XEXP (tmp, 1)) == CONST_INT\n+\t  && INTVAL (XEXP (tmp, 1)) == -8)\n+\t{\n+\t  tmp = gen_rtx_LO_SUM (DImode, pic_offset_table_rtx, XEXP (tmp, 0));\n+\t  tmp = gen_rtx_AND (DImode, tmp, GEN_INT (-8));\n+\t}\n+      else\n+\ttmp = gen_rtx_LO_SUM (DImode, pic_offset_table_rtx, tmp);\n       return replace_equiv_address (x, tmp);\n     }\n "}, {"sha": "0e049be589d14cbdbe64f5496ffd1f3463806720", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c561e360e9712070fd00eae33fe6e398d2e1fa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c561e360e9712070fd00eae33fe6e398d2e1fa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=51c561e360e9712070fd00eae33fe6e398d2e1fa", "patch": "@@ -1,10 +1,10 @@\n 2002-01-16  Jakub Jelinek  <jakub@redhat.com>\n \n-\t* gcc.dg/ultrasp4.c: New test.\n+\t* gcc.dg/20020116-2.c: New test.\n \n-2002-01-16  Jakub Jelinek  <jakub@redhat.com>\n+\t* gcc.dg/ultrasp4.c: New test.\n \n-\t* gcc.dg/20020116-2.c: New test.\n+\t* gcc.dg/20020116-1.c: New test.\n \n 2002-01-15  Geoffrey Keating  <geoffk@redhat.com>\n "}, {"sha": "d554675bc69034e40ea3e943c429ee8bcf236113", "filename": "gcc/testsuite/gcc.dg/20020116-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51c561e360e9712070fd00eae33fe6e398d2e1fa/gcc%2Ftestsuite%2Fgcc.dg%2F20020116-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51c561e360e9712070fd00eae33fe6e398d2e1fa/gcc%2Ftestsuite%2Fgcc.dg%2F20020116-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020116-1.c?ref=51c561e360e9712070fd00eae33fe6e398d2e1fa", "patch": "@@ -0,0 +1,16 @@\n+/* This testcase ICEd on Alpha because ldq_u argument was not subject to\n+   small_symbolic_mem_operand splitting.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -fpic -mexplicit-relocs -mcpu=ev4\" { target alpha*-*-* } } */\n+\n+static char a;\n+char *b;\n+\n+void foo (void)\n+{\n+  register char *c;\n+\n+  c = b;\n+  *c = a;\n+}"}]}