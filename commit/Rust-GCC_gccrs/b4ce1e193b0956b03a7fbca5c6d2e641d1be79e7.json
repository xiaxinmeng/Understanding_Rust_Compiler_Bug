{"sha": "b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRjZTFlMTkzYjA5NTZiMDNhN2ZiY2E1YzZkMmU2NDFkMWJlNzllNw==", "commit": {"author": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-07-06T08:40:35Z"}, "committer": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-07-06T08:40:35Z"}, "message": "f2cext.c (system_clock_): Remove (just f90 intrinsic).\n\n1998-07-05  Dave Love  <d.love@dl.ac.uk>\n\t* f2cext.c (system_clock_): Remove (just f90 intrinsic).\n\t* Makefile.in (F2CEXT): Add datetime, remove sclock.\n\t(UOBJ): Add libU77/datetime_.o.\n\t* libU77/config.h.in: Add HAVE_GETTIMEOFDAY.\n\t* libU77/configure.in: Check for gettimeofday.\n\t* libU77/datetime_.c: New file.\n\t* libU77/sys_clock_.c: Allow optional args.\n\t* libU77/Makefile.in (G77DIR): Fix for current directory\n\tstructure.\n\t(SRCS, OBJS): Add datetime.\n\t* libU77/u77-test.f: Call date_and_time.  Call system_clock\n\tomitting args.\n\nFrom-SVN: r20940", "tree": {"sha": "0b946c62d3bdd5f63c936e9ac94d3dda7b43513b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b946c62d3bdd5f63c936e9ac94d3dda7b43513b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7/comments", "author": null, "committer": null, "parents": [{"sha": "4b6a9e508e62937c0a78e746d0663314963bf902", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b6a9e508e62937c0a78e746d0663314963bf902", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b6a9e508e62937c0a78e746d0663314963bf902"}], "stats": {"total": 64, "additions": 35, "deletions": 29}, "files": [{"sha": "85542932eeb4a8a9a49cc86b78e393088a5429a4", "filename": "libf2c/libU77/Makefile.in", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7/libf2c%2FlibU77%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7/libf2c%2FlibU77%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2FMakefile.in?ref=b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7", "patch": "@@ -46,7 +46,7 @@ ALL_CFLAGS = -I. -I$(srcdir) -I$(G2C_H_DIR)/libI77 -I$(F2C_H_DIR)/libI77 -I$(G2C\n \n # This could probably be done more elegantly, but it's currently\n # just for running the u77-test test.\n-G77DIR = ../../../\n+G77DIR = ../../../gcc/\n \n .SUFFIXES:\n .SUFFIXES: .c .o\n@@ -63,7 +63,7 @@ OBJS =  VersionU.o gerror_.o perror_.o ierrno_.o itime_.o time_.o \\\n \tbes.o dbes.o \\\n \tchdir_.o chmod_.o lnblnk_.o hostnm_.o rename_.o fgetc_.o fputc_.o \\\n         umask_.o sys_clock_.o date_.o second_.o flush1_.o mclock_.o \\\n-\talarm_.o\n+\talarm_.o datetime_.o\n SRCS =  Version.c gerror_.c perror_.c ierrno_.c itime_.c time_.c \\\n \tunlink_.c fnum_.c getpid_.c getuid_.c getgid_.c kill_.c rand_.c \\\n \tsrand_.c irand_.c sleep_.c idate_.c ctime_.c etime_.c \\\n@@ -73,7 +73,7 @@ SRCS =  Version.c gerror_.c perror_.c ierrno_.c itime_.c time_.c \\\n \tbes.c dbes.c \\\n \tchdir_.c chmod_.c lnblnk_.c hostnm_.c rename_.c fgetc_.c fputc_.c \\\n \tumask_.c sys_clock_.c date_.c second_.c flush1_.c mclock_.c \\\n-\talarm_.c\n+\talarm_.c datetime_.c\n \n all: $(OBJS)\n \n@@ -136,12 +136,13 @@ umask_.o: umask_.c\n flush1_.o: flush1_.c\n mclock_.o: mclock_.c\n alarm_.o: alarm_.c\n+datetime_.o: datetime_.c\n \n lint:\n \tlint $(ALL_CFLAGS) $(SRCS)\n \n check:\n-\t-$(G77DIR)g77 -B$(G77DIR) -L.. -g $(srcdir)/u77-test.f $(lib) && ./a.out\n+\t-$(G77DIR)g77 -B$(G77DIR) -ff90-intrinsics-enable -L.. -g $(srcdir)/u77-test.f $(lib) && ./a.out\n \trm -f a.out\n \n .PHONY: lint check all"}, {"sha": "a20aae6d8f21ac02b3555bfeede7b71465722f9e", "filename": "libf2c/libU77/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7/libf2c%2FlibU77%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7/libf2c%2FlibU77%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fconfig.h.in?ref=b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7", "patch": "@@ -54,6 +54,9 @@\n /* Define if you have the getrusage function.  */\n #undef HAVE_GETRUSAGE\n \n+/* Define if you have the gettimeofday function.  */\n+#undef HAVE_GETTIMEOFDAY\n+\n /* Define if you have the getuid function.  */\n #undef HAVE_GETUID\n "}, {"sha": "71582362e821ba71255ed1c00f280a86556f062e", "filename": "libf2c/libU77/configure", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7/libf2c%2FlibU77%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7/libf2c%2FlibU77%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fconfigure?ref=b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7", "patch": "@@ -1343,15 +1343,16 @@ fi\n \n \n for ac_func in symlink getcwd getwd lstat gethostname strerror clock \\\n-  getrusage times alarm getlogin getgid getuid kill link ttyname\n+  getrusage times alarm getlogin getgid getuid kill link ttyname \\\n+  gettimeofday\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1350: checking for $ac_func\" >&5\n+echo \"configure:1351: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1355 \"configure\"\n+#line 1356 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1374,7 +1375,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1378: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+if { (eval echo configure:1379: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else"}, {"sha": "0eb44e7fe7631099be1f3b21f351146b6114fa7c", "filename": "libf2c/libU77/configure.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7/libf2c%2FlibU77%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7/libf2c%2FlibU77%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fconfigure.in?ref=b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7", "patch": "@@ -98,7 +98,8 @@ AC_STRUCT_TM\n dnl Checks for library functions.\n \n AC_CHECK_FUNCS(symlink getcwd getwd lstat gethostname strerror clock \\\n-  getrusage times alarm getlogin getgid getuid kill link ttyname)\n+  getrusage times alarm getlogin getgid getuid kill link ttyname \\\n+  gettimeofday)\n test $ac_cv_func_symlink = yes && MAYBES=\"$MAYBES symlnk_.o\"\n test $ac_cv_func_lstat = yes && MAYBES=\"$MAYBES lstat_.o\"\n test $ac_cv_func_gethostname = yes && MAYBES=\"$MAYBES hostnm_.o\""}, {"sha": "a4b99b8cf22ac8738b35cea63da794bd4e7eaeb4", "filename": "libf2c/libU77/sys_clock_.c", "status": "modified", "additions": 11, "deletions": 18, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7/libf2c%2FlibU77%2Fsys_clock_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7/libf2c%2FlibU77%2Fsys_clock_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fsys_clock_.c?ref=b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7", "patch": "@@ -29,14 +29,11 @@ Boston, MA 02111-1307, USA.  */\n #  include <time.h>\n # endif\n #endif\n-#if HAVE_SYS_TIMES_H\n-#  include <sys/times.h>\n-#endif\n+#include <sys/times.h>\n #include <limits.h>\n #if HAVE_UNISTD_H\n #  include <unistd.h>\n #endif\n-#include <errno.h>\t\t/* for ENOSYS */\n #include \"f2c.h\"\n \n #ifdef KR_headers\n@@ -46,29 +43,25 @@ int G77_system_clock_0 (count, count_rate, count_max)\n int G77_system_clock_0 (integer *count, integer *count_rate, integer *count_max)\n #endif\n {\n-#if defined (HAVE_TIMES)\n   struct tms buffer;\n   unsigned long cnt;\n+  if (count_rate) {\n #ifdef _SC_CLK_TCK\n-  *count_rate = sysconf(_SC_CLK_TCK);\n+    *count_rate = sysconf(_SC_CLK_TCK);\n #elif defined CLOCKS_PER_SECOND\n-  *count_rate = CLOCKS_PER_SECOND;\n+    *count_rate = CLOCKS_PER_SECOND;\n #elif defined CLK_TCK\n-  *count_rate = CLK_TCK;\n-#elif defined HZ\n-  *count_rate = HZ;\n+    *count_rate = CLK_TCK;\n #else\n-  #error Dont know clock tick length\n+#error Dont know clock tick length\n #endif\n-  *count_max = INT_MAX;\t\t/* dubious */\n+  }\n+  if (count_max)\t\t/* optional arg present? */\n+    *count_max = INT_MAX;\t\t/* dubious */\n   cnt = times (&buffer);\n-  if (cnt > (unsigned long) (*count_max))\n-    *count = *count_max;\t/* also dubious */\n+  if (cnt > (unsigned long) (INT_MAX))\n+    *count = INT_MAX;\t\t/* also dubious */\n   else\n     *count = cnt;\n   return 0;\n-#else /* ! HAVE_TIMES */\n-  errno = ENOSYS;\n-  return -1;\n-#endif /* ! HAVE_TIMES */\n }"}, {"sha": "e86161778e2c371963d939c5f72973b13062c23c", "filename": "libf2c/libU77/u77-test.f", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7/libf2c%2FlibU77%2Fu77-test.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7/libf2c%2FlibU77%2Fu77-test.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fu77-test.f?ref=b4ce1e193b0956b03a7fbca5c6d2e641d1be79e7", "patch": "@@ -11,14 +11,16 @@\n      +     fnum, isatty, getarg, access, unlink, fstat,\n      +     stat, lstat, getcwd, gmtime, hostnm, etime, chmod,\n      +     chdir, fgetc, fputc, system_clock, second, idate, secnds,\n-     +     time, ctime, fdate, ttynam\n+     +     time, ctime, fdate, ttynam, date_and_time\n       external lenstr\n       integer lenstr\n       logical l\n       character gerr*80, c*1\n-      character ctim*25, line*80, lognam*20, wd*100, line2*80\n+      character ctim*25, line*80, lognam*20, wd*100, line2*80, ddate*8,\n+     +     ttime*10, zone*5\n       integer fstatb (13), statb (13)\n       integer *2 i2zero\n+      integer values(8)\n \n       ctim = ctime(time())\n       WRITE (6,'(A/)') '1 GNU libU77 test at: ' // ctim\n@@ -61,8 +63,13 @@\n       write (6,'(1x,a,9i4)') 'LTIME returns:', ltarray\n       call gmtime (j, ltarray)\n       write (6,'(1x,a,9i4)') 'GMTIME returns:', ltarray\n+      call system_clock(count)  ! omitting optional args\n       call system_clock(count, rate, count_max)\n       write(6,*) 'SYSTEM_CLOCK returns: ', count, rate, count_max\n+      call date_and_time(ddate)  ! omitting optional args\n+      call date_and_time(ddate, ttime, zone, values)\n+      write(6, *) 'DATE_AND_TIME returns: ', ddate, ' ', ttime, ' ',\n+     +     zone, ' ', values\n \n       write (6,*) 'Sleeping for 1 second (SLEEP) ...'\n       call sleep (1)"}]}