{"sha": "407eaad25f45ccba6e45e6f07d6c69c51cc567f3", "node_id": "C_kwDOANBUbNoAKDQwN2VhYWQyNWY0NWNjYmE2ZTQ1ZTZmMDdkNmM2OWM1MWNjNTY3ZjM", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-11-11T16:27:00Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-11-11T16:27:00Z"}, "message": "Fortran/openmp: Add support for 2 argument num_teams clause\n\nFortran part to commit r12-5146-g48d7327f2aaf65\n\ngcc/fortran/ChangeLog:\n\n\t* gfortran.h (struct gfc_omp_clauses): Rename num_teams to\n\tnum_teams_upper, add num_teams_upper.\n\t* dump-parse-tree.c (show_omp_clauses): Update to handle\n\tlower-bound num_teams clause.\n\t* frontend-passes.c (gfc_code_walker): Likewise\n\t* openmp.c (gfc_free_omp_clauses, gfc_match_omp_clauses,\n\tresolve_omp_clauses): Likewise.\n\t* trans-openmp.c (gfc_trans_omp_clauses, gfc_split_omp_clauses,\n\tgfc_trans_omp_target): Likewise.\n\nlibgomp/ChangeLog:\n\n\t* testsuite/libgomp.fortran/teams-1.f90: New test.", "tree": {"sha": "d47e4ef29dbdf0ad836c7a4b48e989c1520fee35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d47e4ef29dbdf0ad836c7a4b48e989c1520fee35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/407eaad25f45ccba6e45e6f07d6c69c51cc567f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/407eaad25f45ccba6e45e6f07d6c69c51cc567f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/407eaad25f45ccba6e45e6f07d6c69c51cc567f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/407eaad25f45ccba6e45e6f07d6c69c51cc567f3/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1b218d1748136d02c99a5e5f3f664e9c5a563ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1b218d1748136d02c99a5e5f3f664e9c5a563ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1b218d1748136d02c99a5e5f3f664e9c5a563ed"}], "stats": {"total": 194, "additions": 175, "deletions": 19}, "files": [{"sha": "04660d5074aaf7242190a5e56fe7fe7ed2b0cd82", "filename": "gcc/fortran/dump-parse-tree.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/407eaad25f45ccba6e45e6f07d6c69c51cc567f3/gcc%2Ffortran%2Fdump-parse-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/407eaad25f45ccba6e45e6f07d6c69c51cc567f3/gcc%2Ffortran%2Fdump-parse-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdump-parse-tree.c?ref=407eaad25f45ccba6e45e6f07d6c69c51cc567f3", "patch": "@@ -1741,10 +1741,15 @@ show_omp_clauses (gfc_omp_clauses *omp_clauses)\n \t}\n       fprintf (dumpfile, \" BIND(%s)\", type);\n     }\n-  if (omp_clauses->num_teams)\n+  if (omp_clauses->num_teams_upper)\n     {\n       fputs (\" NUM_TEAMS(\", dumpfile);\n-      show_expr (omp_clauses->num_teams);\n+      if (omp_clauses->num_teams_lower)\n+\t{\n+\t  show_expr (omp_clauses->num_teams_lower);\n+\t  fputc (':', dumpfile);\n+\t}\n+      show_expr (omp_clauses->num_teams_upper);\n       fputc (')', dumpfile);\n     }\n   if (omp_clauses->device)"}, {"sha": "f5ba7cecd545a8943d7155a73d8fd826af5389d6", "filename": "gcc/fortran/frontend-passes.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/407eaad25f45ccba6e45e6f07d6c69c51cc567f3/gcc%2Ffortran%2Ffrontend-passes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/407eaad25f45ccba6e45e6f07d6c69c51cc567f3/gcc%2Ffortran%2Ffrontend-passes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ffrontend-passes.c?ref=407eaad25f45ccba6e45e6f07d6c69c51cc567f3", "patch": "@@ -5634,7 +5634,8 @@ gfc_code_walker (gfc_code **c, walk_code_fn_t codefn, walk_expr_fn_t exprfn,\n \t\t  WALK_SUBEXPR (co->ext.omp_clauses->chunk_size);\n \t\t  WALK_SUBEXPR (co->ext.omp_clauses->safelen_expr);\n \t\t  WALK_SUBEXPR (co->ext.omp_clauses->simdlen_expr);\n-\t\t  WALK_SUBEXPR (co->ext.omp_clauses->num_teams);\n+\t\t  WALK_SUBEXPR (co->ext.omp_clauses->num_teams_lower);\n+\t\t  WALK_SUBEXPR (co->ext.omp_clauses->num_teams_upper);\n \t\t  WALK_SUBEXPR (co->ext.omp_clauses->device);\n \t\t  WALK_SUBEXPR (co->ext.omp_clauses->thread_limit);\n \t\t  WALK_SUBEXPR (co->ext.omp_clauses->dist_chunk_size);"}, {"sha": "1ad2f0df702b7488ad9aa8ab1cebc45da7b3dabd", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/407eaad25f45ccba6e45e6f07d6c69c51cc567f3/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/407eaad25f45ccba6e45e6f07d6c69c51cc567f3/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=407eaad25f45ccba6e45e6f07d6c69c51cc567f3", "patch": "@@ -1502,7 +1502,8 @@ typedef struct gfc_omp_clauses\n   struct gfc_expr *chunk_size;\n   struct gfc_expr *safelen_expr;\n   struct gfc_expr *simdlen_expr;\n-  struct gfc_expr *num_teams;\n+  struct gfc_expr *num_teams_lower;\n+  struct gfc_expr *num_teams_upper;\n   struct gfc_expr *device;\n   struct gfc_expr *thread_limit;\n   struct gfc_expr *grainsize;"}, {"sha": "7b2df0d0be36630c3a6d2d803dfe6d5be3d9add0", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 27, "deletions": 5, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/407eaad25f45ccba6e45e6f07d6c69c51cc567f3/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/407eaad25f45ccba6e45e6f07d6c69c51cc567f3/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=407eaad25f45ccba6e45e6f07d6c69c51cc567f3", "patch": "@@ -85,7 +85,8 @@ gfc_free_omp_clauses (gfc_omp_clauses *c)\n   gfc_free_expr (c->chunk_size);\n   gfc_free_expr (c->safelen_expr);\n   gfc_free_expr (c->simdlen_expr);\n-  gfc_free_expr (c->num_teams);\n+  gfc_free_expr (c->num_teams_lower);\n+  gfc_free_expr (c->num_teams_upper);\n   gfc_free_expr (c->device);\n   gfc_free_expr (c->thread_limit);\n   gfc_free_expr (c->dist_chunk_size);\n@@ -2420,11 +2421,22 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, const omp_mask mask,\n \t      continue;\n \t    }\n \t  if ((mask & OMP_CLAUSE_NUM_TEAMS)\n-\t      && (m = gfc_match_dupl_check (!c->num_teams, \"num_teams\", true,\n-\t\t\t\t\t    &c->num_teams)) != MATCH_NO)\n+\t      && (m = gfc_match_dupl_check (!c->num_teams_upper, \"num_teams\",\n+\t\t\t\t\t    true)) != MATCH_NO)\n \t    {\n \t      if (m == MATCH_ERROR)\n \t\tgoto error;\n+\t      if (gfc_match (\"%e \", &c->num_teams_upper) != MATCH_YES)\n+\t\tgoto error;\n+\t      if (gfc_peek_ascii_char () == ':')\n+\t\t{\n+\t\t  c->num_teams_lower = c->num_teams_upper;\n+\t\t  c->num_teams_upper = NULL;\n+\t\t  if (gfc_match (\": %e \", &c->num_teams_upper) != MATCH_YES)\n+\t\t    goto error;\n+\t\t}\n+\t      if (gfc_match (\") \") != MATCH_YES)\n+\t\tgoto error;\n \t      continue;\n \t    }\n \t  if ((mask & OMP_CLAUSE_NUM_THREADS)\n@@ -7293,8 +7305,18 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n     resolve_positive_int_expr (omp_clauses->safelen_expr, \"SAFELEN\");\n   if (omp_clauses->simdlen_expr)\n     resolve_positive_int_expr (omp_clauses->simdlen_expr, \"SIMDLEN\");\n-  if (omp_clauses->num_teams)\n-    resolve_positive_int_expr (omp_clauses->num_teams, \"NUM_TEAMS\");\n+  if (omp_clauses->num_teams_lower)\n+    resolve_positive_int_expr (omp_clauses->num_teams_lower, \"NUM_TEAMS\");\n+  if (omp_clauses->num_teams_upper)\n+    resolve_positive_int_expr (omp_clauses->num_teams_upper, \"NUM_TEAMS\");\n+  if (omp_clauses->num_teams_lower\n+      && omp_clauses->num_teams_lower->expr_type == EXPR_CONSTANT\n+      && omp_clauses->num_teams_upper->expr_type == EXPR_CONSTANT\n+      && mpz_cmp (omp_clauses->num_teams_lower->value.integer,\n+\t\t  omp_clauses->num_teams_upper->value.integer) > 0)\n+    gfc_warning (0, \"NUM_TEAMS lower bound at %L larger than upper bound at %L\",\n+\t\t &omp_clauses->num_teams_lower->where,\n+\t\t &omp_clauses->num_teams_upper->where);\n   if (omp_clauses->device)\n     resolve_nonnegative_int_expr (omp_clauses->device, \"DEVICE\");\n   if (omp_clauses->filter)"}, {"sha": "6bc7e9a6017ed43305a4e1880c176d85f4c9b338", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 25, "deletions": 10, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/407eaad25f45ccba6e45e6f07d6c69c51cc567f3/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/407eaad25f45ccba6e45e6f07d6c69c51cc567f3/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=407eaad25f45ccba6e45e6f07d6c69c51cc567f3", "patch": "@@ -3927,18 +3927,27 @@ gfc_trans_omp_clauses (stmtblock_t *block, gfc_omp_clauses *clauses,\n \t}\n     }\n \n-  if (clauses->num_teams)\n+  if (clauses->num_teams_upper)\n     {\n-      tree num_teams;\n+      tree num_teams_lower = NULL_TREE, num_teams_upper;\n \n       gfc_init_se (&se, NULL);\n-      gfc_conv_expr (&se, clauses->num_teams);\n+      gfc_conv_expr (&se, clauses->num_teams_upper);\n       gfc_add_block_to_block (block, &se.pre);\n-      num_teams = gfc_evaluate_now (se.expr, block);\n+      num_teams_upper = gfc_evaluate_now (se.expr, block);\n       gfc_add_block_to_block (block, &se.post);\n \n+      if (clauses->num_teams_lower)\n+\t{\n+\t  gfc_init_se (&se, NULL);\n+\t  gfc_conv_expr (&se, clauses->num_teams_lower);\n+\t  gfc_add_block_to_block (block, &se.pre);\n+\t  num_teams_lower = gfc_evaluate_now (se.expr, block);\n+\t  gfc_add_block_to_block (block, &se.post);\n+\t}\n       c = build_omp_clause (gfc_get_location (&where), OMP_CLAUSE_NUM_TEAMS);\n-      OMP_CLAUSE_NUM_TEAMS_UPPER_EXPR (c) = num_teams;\n+      OMP_CLAUSE_NUM_TEAMS_LOWER_EXPR (c) = num_teams_lower;\n+      OMP_CLAUSE_NUM_TEAMS_UPPER_EXPR (c) = num_teams_upper;\n       omp_clauses = gfc_trans_add_clause (c, omp_clauses);\n     }\n \n@@ -5873,8 +5882,10 @@ gfc_split_omp_clauses (gfc_code *code,\n       if (mask & GFC_OMP_MASK_TEAMS)\n \t{\n \t  /* First the clauses that are unique to some constructs.  */\n-\t  clausesa[GFC_OMP_SPLIT_TEAMS].num_teams\n-\t    = code->ext.omp_clauses->num_teams;\n+\t  clausesa[GFC_OMP_SPLIT_TEAMS].num_teams_lower\n+\t    = code->ext.omp_clauses->num_teams_lower;\n+\t  clausesa[GFC_OMP_SPLIT_TEAMS].num_teams_upper\n+\t    = code->ext.omp_clauses->num_teams_upper;\n \t  clausesa[GFC_OMP_SPLIT_TEAMS].thread_limit\n \t    = code->ext.omp_clauses->thread_limit;\n \t  /* Shared and default clauses are allowed on parallel, teams\n@@ -6649,7 +6660,7 @@ gfc_trans_omp_target (gfc_code *code)\n       break;\n     default:\n       if (flag_openmp\n-\t  && (clausesa[GFC_OMP_SPLIT_TEAMS].num_teams\n+\t  && (clausesa[GFC_OMP_SPLIT_TEAMS].num_teams_upper\n \t      || clausesa[GFC_OMP_SPLIT_TEAMS].thread_limit))\n \t{\n \t  gfc_omp_clauses clausesb;\n@@ -6658,9 +6669,13 @@ gfc_trans_omp_target (gfc_code *code)\n \t     thread_limit clauses are evaluated before entering the\n \t     target construct.  */\n \t  memset (&clausesb, '\\0', sizeof (clausesb));\n-\t  clausesb.num_teams = clausesa[GFC_OMP_SPLIT_TEAMS].num_teams;\n+\t  clausesb.num_teams_lower\n+\t    = clausesa[GFC_OMP_SPLIT_TEAMS].num_teams_lower;\n+\t  clausesb.num_teams_upper\n+\t    = clausesa[GFC_OMP_SPLIT_TEAMS].num_teams_upper;\n \t  clausesb.thread_limit = clausesa[GFC_OMP_SPLIT_TEAMS].thread_limit;\n-\t  clausesa[GFC_OMP_SPLIT_TEAMS].num_teams = NULL;\n+\t  clausesa[GFC_OMP_SPLIT_TEAMS].num_teams_lower = NULL;\n+\t  clausesa[GFC_OMP_SPLIT_TEAMS].num_teams_upper = NULL;\n \t  clausesa[GFC_OMP_SPLIT_TEAMS].thread_limit = NULL;\n \t  teams_clauses\n \t    = gfc_trans_omp_clauses (&block, &clausesb, code->loc);"}, {"sha": "df31cc7884b124c690b004f913e59277b70ab71a", "filename": "gcc/testsuite/gfortran.dg/gomp/num-teams-1.f90", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/407eaad25f45ccba6e45e6f07d6c69c51cc567f3/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnum-teams-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/407eaad25f45ccba6e45e6f07d6c69c51cc567f3/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnum-teams-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnum-teams-1.f90?ref=407eaad25f45ccba6e45e6f07d6c69c51cc567f3", "patch": "@@ -0,0 +1,53 @@\n+module m\n+  implicit none (type, external)\n+\n+  interface\n+  integer function fn(i); integer :: i; end\n+  end interface\n+\n+contains\n+\n+subroutine foo\n+  !$omp teams num_teams (4 : 6)\n+  !$omp end teams\n+\n+  !$omp teams num_teams (7)\n+  !$omp end teams\n+end \n+\n+subroutine bar\n+  !$omp target teams num_teams (5 : 19)\n+  !$omp end target teams\n+\n+  !$omp target teams num_teams (21)\n+  !$omp end target teams\n+end\n+\n+subroutine baz\n+  !$omp teams num_teams (fn (1) : fn (2))\n+  !$omp end teams\n+\n+  !$omp teams num_teams (fn (3))\n+  !$omp end teams\n+end\n+\n+subroutine qux\n+  !$omp target teams num_teams (fn (4) : fn (5))\n+  !$omp end target teams\n+\n+  !$omp target teams num_teams (fn (6))\n+  !$omp end target teams\n+end\n+\n+subroutine corge\n+  !$omp target\n+    !$omp teams num_teams (fn (7) : fn (8))\n+    !$omp end teams\n+  !$omp end target\n+\n+  !$omp target\n+    !$omp teams num_teams (fn (9))\n+    !$omp end teams\n+  !$omp end target\n+end\n+end module m"}, {"sha": "e7814a11a5a4694666053cc0d39ab39e171fea99", "filename": "gcc/testsuite/gfortran.dg/gomp/num-teams-2.f90", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/407eaad25f45ccba6e45e6f07d6c69c51cc567f3/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnum-teams-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/407eaad25f45ccba6e45e6f07d6c69c51cc567f3/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnum-teams-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fnum-teams-2.f90?ref=407eaad25f45ccba6e45e6f07d6c69c51cc567f3", "patch": "@@ -0,0 +1,37 @@\n+module m\n+  implicit none (type, external)\n+\n+contains\n+\n+subroutine foo (i)\n+  integer :: i\n+\n+  !$omp teams num_teams (6 : 4)\t\t! { dg-warning \"NUM_TEAMS lower bound at .1. larger than upper bound at .2.\" }\n+  !$omp end teams\n+\n+  !$omp teams num_teams (-7)\t\t! { dg-warning \"INTEGER expression of NUM_TEAMS clause at .1. must be positive\" }\n+  !$omp end teams\n+\n+  !$omp teams num_teams (i : -7)\t\t! { dg-warning \"INTEGER expression of NUM_TEAMS clause at .1. must be positive\" }\n+  !$omp end teams\n+\n+  !$omp teams num_teams (-7 : 8)\t\t! { dg-warning \"INTEGER expression of NUM_TEAMS clause at .1. must be positive\" }\n+  !$omp end teams\n+end\n+\n+subroutine bar (i)\n+  integer :: i\n+\n+  !$omp target teams num_teams (6 : 4)\t! { dg-warning \"NUM_TEAMS lower bound at .1. larger than upper bound at .2.\" }\n+  !$omp end target teams\n+\n+  !$omp target teams num_teams (-7)\t! { dg-warning \"INTEGER expression of NUM_TEAMS clause at .1. must be positive\" }\n+  !$omp end target teams\n+\n+  !$omp target teams num_teams (i : -7)\t! { dg-warning \"INTEGER expression of NUM_TEAMS clause at .1. must be positive\" }\n+  !$omp end target teams\n+\n+  !$omp target teams num_teams (-7 : 8)\t! { dg-warning \"INTEGER expression of NUM_TEAMS clause at .1. must be positive\" }\n+  !$omp end target teams\n+end\n+end module"}, {"sha": "9969fe48884088c132bf3910826e10b18a3ec5d6", "filename": "libgomp/testsuite/libgomp.fortran/teams-1.f90", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/407eaad25f45ccba6e45e6f07d6c69c51cc567f3/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fteams-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/407eaad25f45ccba6e45e6f07d6c69c51cc567f3/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fteams-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fteams-1.f90?ref=407eaad25f45ccba6e45e6f07d6c69c51cc567f3", "patch": "@@ -0,0 +1,22 @@\n+program main\n+  use omp_lib\n+  implicit none (type, external)\n+  integer :: i\n+\n+  !$omp teams num_teams (5)\n+    if (omp_get_num_teams () /= 5) stop 1\n+    !$omp distribute dist_schedule(static,1)\n+    do i = 0, 4\n+      if (omp_get_team_num () /= i) stop 2\n+    end do\n+  !$omp end teams\n+\n+  !$omp teams num_teams (7 : 9)\n+    if (omp_get_num_teams () < 7 .or. omp_get_num_teams () > 9) &\n+      stop 3\n+    !$omp distribute dist_schedule(static,1)\n+    do i = 0, omp_get_num_teams () - 1\n+      if (omp_get_team_num () /= i) stop 4\n+    end do\n+  !$omp end teams\n+end program main"}]}