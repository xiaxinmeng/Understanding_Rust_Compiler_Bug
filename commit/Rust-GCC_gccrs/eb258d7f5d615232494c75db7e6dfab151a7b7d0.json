{"sha": "eb258d7f5d615232494c75db7e6dfab151a7b7d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIyNThkN2Y1ZDYxNTIzMjQ5NGM3NWRiN2U2ZGZhYjE1MWE3YjdkMA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-04-01T14:05:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-04-01T14:05:49Z"}, "message": "re PR tree-optimization/43607 (ICE in gimple_op, at gimple.h:1633 with -fipa-type-escape)\n\n2010-04-01  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/43607\n\t* ipa-type-escape.c (check_call): Do not access non-existing\n\targuments.\n\nFrom-SVN: r157911", "tree": {"sha": "e8a3d5be1c8a1026f65b79eb2d1f8f50a888ae56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8a3d5be1c8a1026f65b79eb2d1f8f50a888ae56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb258d7f5d615232494c75db7e6dfab151a7b7d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb258d7f5d615232494c75db7e6dfab151a7b7d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb258d7f5d615232494c75db7e6dfab151a7b7d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb258d7f5d615232494c75db7e6dfab151a7b7d0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d3f76f836f6693c6be521aad717120e31daf7a91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3f76f836f6693c6be521aad717120e31daf7a91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3f76f836f6693c6be521aad717120e31daf7a91"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "2e70ef8f246c2f1956ba4962e92a961c8ca027c7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb258d7f5d615232494c75db7e6dfab151a7b7d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb258d7f5d615232494c75db7e6dfab151a7b7d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb258d7f5d615232494c75db7e6dfab151a7b7d0", "patch": "@@ -1,3 +1,9 @@\n+2010-04-01  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43607\n+\t* ipa-type-escape.c (check_call): Do not access non-existing\n+\targuments.\n+\n 2010-04-01  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/43602"}, {"sha": "fa971e47f79e5aa5db7acf71922cfdb4e1f63b24", "filename": "gcc/ipa-type-escape.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb258d7f5d615232494c75db7e6dfab151a7b7d0/gcc%2Fipa-type-escape.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb258d7f5d615232494c75db7e6dfab151a7b7d0/gcc%2Fipa-type-escape.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-type-escape.c?ref=eb258d7f5d615232494c75db7e6dfab151a7b7d0", "patch": "@@ -1340,7 +1340,8 @@ check_call (gimple call)\n       if (TYPE_ARG_TYPES (TREE_TYPE (callee_t)))\n \t{\n \t  for (arg_type = TYPE_ARG_TYPES (TREE_TYPE (callee_t)), i = 0;\n-\t       arg_type && TREE_VALUE (arg_type) != void_type_node;\n+\t       arg_type && TREE_VALUE (arg_type) != void_type_node\n+\t       && i < gimple_call_num_args (call);\n \t       arg_type = TREE_CHAIN (arg_type), i++)\n \t    {\n \t      tree operand = gimple_call_arg (call, i);\n@@ -1362,7 +1363,7 @@ check_call (gimple call)\n \t     have to do this; the front ends should always process\n \t     the arg list from the TYPE_ARG_LIST. */\n \t  for (arg_type = DECL_ARGUMENTS (callee_t), i = 0;\n-\t       arg_type;\n+\t       arg_type && i < gimple_call_num_args (call);\n \t       arg_type = TREE_CHAIN (arg_type), i++)\n \t    {\n \t      tree operand = gimple_call_arg (call, i);"}]}