{"sha": "f4ea99bd34969e6d0da33cf61bb70074d797aa6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRlYTk5YmQzNDk2OWU2ZDBkYTMzY2Y2MWJiNzAwNzRkNzk3YWE2Yw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-03-01T19:01:14Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-03-01T19:01:14Z"}, "message": "Fix long lines.\n\nFrom-SVN: r144530", "tree": {"sha": "739b5004d7f5cdc986c6721e64c4f69710091bdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/739b5004d7f5cdc986c6721e64c4f69710091bdb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4ea99bd34969e6d0da33cf61bb70074d797aa6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4ea99bd34969e6d0da33cf61bb70074d797aa6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4ea99bd34969e6d0da33cf61bb70074d797aa6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4ea99bd34969e6d0da33cf61bb70074d797aa6c/comments", "author": null, "committer": null, "parents": [{"sha": "526d73abffb96e977cd32581125fa323f795a499", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/526d73abffb96e977cd32581125fa323f795a499", "html_url": "https://github.com/Rust-GCC/gccrs/commit/526d73abffb96e977cd32581125fa323f795a499"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "1365b591649cae35ded92d500bcab5da8e79af6e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4ea99bd34969e6d0da33cf61bb70074d797aa6c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4ea99bd34969e6d0da33cf61bb70074d797aa6c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4ea99bd34969e6d0da33cf61bb70074d797aa6c", "patch": "@@ -4,15 +4,18 @@\n \t* tree.h (BLOCK_NONLOCALIZED_VARS, BLOCK_NUM_NONLOCALIZED_VARS,\n \tBLOCK_NONLOCALIZED_VAR): New macros.\n \t(tree_block): Add nonlocalized_vars.\n-\t* dwarf2out.c (gen_formal_parameter_die, gen_variable_die, gen_decl_die): Add\n-\torigin argument; allow generation of die with origin at hand only.\n+\t* dwarf2out.c (gen_formal_parameter_die, gen_variable_die,\n+\tgen_decl_die): Add origin argument.  Allow generation of die with\n+\torigin at hand only.\n \t(gen_member_die, gen_type_die_with_usage, force_decl_die,\n-\tdeclare_in_namespace, gen_namescpace_die, dwarf2out_decl): Update use of gen_*.\n+\tdeclare_in_namespace, gen_namescpace_die, dwarf2out_decl): Update use\n+\tof gen_*.\n \t(gen_block_die): Fix checking for unused blocks.\n \t(process_scope_var): Break out from .... ; work with origins only.\n \t(decls_for_scope) ... here; process nonlocalized list.\n \t(dwarf2out_ignore_block): Look for nonlocalized vars.\n-\t* tree-ssa-live.c (remove_unused_scope_block_p): Look for nonlocalized vars.\n+\t* tree-ssa-live.c (remove_unused_scope_block_p): Look for nonlocalized\n+\tvars.\n \t(dump_scope_block): Dump them.\n \t* tree-inline.c (remap_decls): Handle nonlocalized vars.\n \t(remap_block): Likewise."}]}