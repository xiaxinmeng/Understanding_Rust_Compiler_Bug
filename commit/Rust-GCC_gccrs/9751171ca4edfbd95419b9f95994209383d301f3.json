{"sha": "9751171ca4edfbd95419b9f95994209383d301f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc1MTE3MWNhNGVkZmJkOTU0MTliOWY5NTk5NDIwOTM4M2QzMDFmMw==", "commit": {"author": {"name": "Ramana Radhakrishnan", "email": "ramana.radhakrishnan@linaro.org", "date": "2011-03-15T17:05:51Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2011-03-15T17:05:51Z"}, "message": "Fixup last commit.\n\nFixed PR target/46788 and not PR 47688\n\nFrom-SVN: r171002", "tree": {"sha": "343a3617f1c34aaacddedff072aea46911bdf35e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/343a3617f1c34aaacddedff072aea46911bdf35e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9751171ca4edfbd95419b9f95994209383d301f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9751171ca4edfbd95419b9f95994209383d301f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9751171ca4edfbd95419b9f95994209383d301f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9751171ca4edfbd95419b9f95994209383d301f3/comments", "author": null, "committer": null, "parents": [{"sha": "80fffdef8fb97cc8e1774cfdaf2eabd07c9a7867", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80fffdef8fb97cc8e1774cfdaf2eabd07c9a7867", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80fffdef8fb97cc8e1774cfdaf2eabd07c9a7867"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "f9b2d76e6e78ea0f7461013e58e21d9bd959a963", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9751171ca4edfbd95419b9f95994209383d301f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9751171ca4edfbd95419b9f95994209383d301f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9751171ca4edfbd95419b9f95994209383d301f3", "patch": "@@ -1,6 +1,6 @@\n 2011-03-15  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n \n-\tPR target/47668\n+\tPR target/46778\n \t* config/arm/arm.md (arm_movtas_ze): Use 'L' instead of 'c'\n \tin the output template.\n "}, {"sha": "13161bfb9f144668644cc1b0b327df6e57eed023", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9751171ca4edfbd95419b9f95994209383d301f3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9751171ca4edfbd95419b9f95994209383d301f3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9751171ca4edfbd95419b9f95994209383d301f3", "patch": "@@ -1,7 +1,7 @@\n 2011-03-15  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n \n-\tPR target/47688\n-\t* gcc.target/arm/pr47688.c: New.\n+\tPR target/46788\n+\t* gcc.target/arm/pr46788.c: New.\n \n 2011-03-15  Richard Guenther  <rguenther@suse.de>\n "}, {"sha": "2236769461aa0fa396b0401a3430db46f9bf2b50", "filename": "gcc/testsuite/gcc.target/arm/pr46788.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9751171ca4edfbd95419b9f95994209383d301f3/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr46788.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9751171ca4edfbd95419b9f95994209383d301f3/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr46788.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr46788.c?ref=9751171ca4edfbd95419b9f95994209383d301f3", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-options \"-mthumb -O2\" }  */\n+/* { dg-require-effective-target arm_thumb2_ok } */\n+/* { dg-final { scan-assembler-not \"-32768\" } } */\n+\n+typedef union\n+{\n+  unsigned long int u_32_value;\n+  struct \n+  {\n+    unsigned short int u_16_value_0;\n+    unsigned short int u_16_value_1;\n+  } u_16_values;\n+} my_union;\n+\n+\n+unsigned long int Test(const unsigned short int wXe)\n+{\n+  my_union dwCalcVal;\n+  \n+  dwCalcVal.u_16_values.u_16_value_0=wXe;\n+  dwCalcVal.u_16_values.u_16_value_1=0x8000u;\n+\n+  dwCalcVal.u_32_value /=3;\n+  \n+  return (dwCalcVal.u_32_value);\n+}"}]}