{"sha": "e7e4d2302eb07595a1dfa10c74299ced88f47f3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdlNGQyMzAyZWIwNzU5NWExZGZhMTBjNzQyOTljZWQ4OGY0N2YzZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-18T14:04:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-18T14:04:31Z"}, "message": "[multiple changes]\n\n2010-06-18  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch4.adb: Minor reformatting.\n\n2010-06-18  Javier Miranda  <miranda@adacore.com>\n\n\t* debug.ads Add documentation on -gnatd.Z.\n\nFrom-SVN: r160993", "tree": {"sha": "d042a128667d613cdcc0a81910116bef7da4bda5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d042a128667d613cdcc0a81910116bef7da4bda5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7e4d2302eb07595a1dfa10c74299ced88f47f3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7e4d2302eb07595a1dfa10c74299ced88f47f3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7e4d2302eb07595a1dfa10c74299ced88f47f3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7e4d2302eb07595a1dfa10c74299ced88f47f3e/comments", "author": null, "committer": null, "parents": [{"sha": "7b3f937f00f4d14bb1606407b3af663645863446", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b3f937f00f4d14bb1606407b3af663645863446", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b3f937f00f4d14bb1606407b3af663645863446"}], "stats": {"total": 71, "additions": 38, "deletions": 33}, "files": [{"sha": "151c841974462b600b379c6c7989debcc93d2b64", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7e4d2302eb07595a1dfa10c74299ced88f47f3e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7e4d2302eb07595a1dfa10c74299ced88f47f3e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e7e4d2302eb07595a1dfa10c74299ced88f47f3e", "patch": "@@ -1,3 +1,11 @@\n+2010-06-18  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch4.adb: Minor reformatting.\n+\n+2010-06-18  Javier Miranda  <miranda@adacore.com>\n+\n+\t* debug.ads Add documentation on -gnatd.Z.\n+\n 2010-06-18  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_elim.adb: Proper error message on improperly eliminated instances"}, {"sha": "3032267a1c1bee39dce9ef3d740d8d064a4d7948", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7e4d2302eb07595a1dfa10c74299ced88f47f3e/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7e4d2302eb07595a1dfa10c74299ced88f47f3e/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=e7e4d2302eb07595a1dfa10c74299ced88f47f3e", "patch": "@@ -143,7 +143,7 @@ package body Debug is\n    --  d.W  Print out debugging information for Walk_Library_Items\n    --  d.X  Use Expression_With_Actions\n    --  d.Y  Do not use Expression_With_Actions\n-   --  d.Z\n+   --  d.Z  Generate call-graph information\n \n    --  d1   Error msgs have node numbers where possible\n    --  d2   Eliminate error flags in verbose form error messages"}, {"sha": "bf35c42ae523c1fc0c7714d325b65aa1253f53d9", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 29, "deletions": 32, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7e4d2302eb07595a1dfa10c74299ced88f47f3e/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7e4d2302eb07595a1dfa10c74299ced88f47f3e/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=e7e4d2302eb07595a1dfa10c74299ced88f47f3e", "patch": "@@ -8190,15 +8190,13 @@ package body Exp_Ch4 is\n          --  renaming, since this is an error situation which will be caught by\n          --  Sem_Ch8, and the expansion can interfere with this error check.\n \n-         if Is_Access_Type (Target_Type)\n-           and then Is_Renamed_Object (N)\n-         then\n+         if Is_Access_Type (Target_Type) and then Is_Renamed_Object (N) then\n             return;\n          end if;\n \n          --  Otherwise, proceed with processing tagged conversion\n \n-         declare\n+         Tagged_Conversion : declare\n             Actual_Op_Typ   : Entity_Id;\n             Actual_Targ_Typ : Entity_Id;\n             Make_Conversion : Boolean := False;\n@@ -8253,7 +8251,7 @@ package body Exp_Ch4 is\n                    Reason    => CE_Tag_Check_Failed));\n             end Make_Tag_Check;\n \n-         --  Start of processing\n+         --  Start of processing for Tagged_Conversion\n \n          begin\n             if Is_Access_Type (Target_Type) then\n@@ -8350,7 +8348,7 @@ package body Exp_Ch4 is\n                   end;\n                end if;\n             end if;\n-         end;\n+         end Tagged_Conversion;\n \n       --  Case of other access type conversions\n \n@@ -8387,9 +8385,9 @@ package body Exp_Ch4 is\n          end if;\n \n          --  Otherwise do correct fixed-conversion, but skip these if the\n-         --  Conversion_OK flag is set, because from a semantic point of\n-         --  view these are simple integer conversions needing no further\n-         --  processing (the backend will simply treat them as integers)\n+         --  Conversion_OK flag is set, because from a semantic point of view\n+         --  these are simple integer conversions needing no further processing\n+         --  (the backend will simply treat them as integers).\n \n          if not Conversion_OK (N) then\n             if Is_Fixed_Point_Type (Etype (N)) then\n@@ -8443,7 +8441,7 @@ package body Exp_Ch4 is\n          --  with the end-point. But that can lose precision in some cases, and\n          --  give a wrong result. Converting the operand to Universal_Real is\n          --  helpful, but still does not catch all cases with 64-bit integers\n-         --  on targets with only 64-bit floats\n+         --  on targets with only 64-bit floats.\n \n          --  The above comment seems obsoleted by Apply_Float_Conversion_Check\n          --  Can this code be removed ???\n@@ -8526,7 +8524,7 @@ package body Exp_Ch4 is\n       elsif Is_Enumeration_Type (Target_Type) then\n \n          --  Special processing is required if there is a change of\n-         --  representation (from enumeration representation clauses)\n+         --  representation (from enumeration representation clauses).\n \n          if not Same_Representation (Target_Type, Operand_Type) then\n \n@@ -8552,9 +8550,8 @@ package body Exp_Ch4 is\n       end if;\n \n       --  At this stage, either the conversion node has been transformed into\n-      --  some other equivalent expression, or left as a conversion that can\n-      --  be handled by Gigi. The conversions that Gigi can handle are the\n-      --  following:\n+      --  some other equivalent expression, or left as a conversion that can be\n+      --  handled by Gigi, in the following cases:\n \n       --    Conversions with no change of representation or type\n \n@@ -8607,7 +8604,7 @@ package body Exp_Ch4 is\n                end if;\n \n                --  Reset overflow flag, since the range check will include\n-               --  dealing with possible overflow, and generate the check If\n+               --  dealing with possible overflow, and generate the check. If\n                --  Address is either a source type or target type, suppress\n                --  range check to avoid typing anomalies when it is a visible\n                --  integer type.\n@@ -8638,16 +8635,16 @@ package body Exp_Ch4 is\n    -- Expand_N_Unchecked_Expression --\n    -----------------------------------\n \n-   --  Remove the unchecked expression node from the tree. It's job was simply\n+   --  Remove the unchecked expression node from the tree. Its job was simply\n    --  to make sure that its constituent expression was handled with checks\n    --  off, and now that that is done, we can remove it from the tree, and\n-   --  indeed must, since gigi does not expect to see these nodes.\n+   --  indeed must, since Gigi does not expect to see these nodes.\n \n    procedure Expand_N_Unchecked_Expression (N : Node_Id) is\n       Exp : constant Node_Id := Expression (N);\n \n    begin\n-      Set_Assignment_OK (Exp, Assignment_OK (N) or Assignment_OK (Exp));\n+      Set_Assignment_OK (Exp, Assignment_OK (N) or else Assignment_OK (Exp));\n       Rewrite (N, Exp);\n    end Expand_N_Unchecked_Expression;\n \n@@ -8666,9 +8663,11 @@ package body Exp_Ch4 is\n    begin\n       --  Nothing at all to do if conversion is to the identical type so remove\n       --  the conversion completely, it is useless, except that it may carry\n-      --  an Assignment_OK indication which must be proprgated to the operand.\n+      --  an Assignment_OK indication which must be propagated to the operand.\n \n       if Operand_Type = Target_Type then\n+         --  Code duplicates Expand_N_Unchecked_Expression above, factor???\n+\n          if Assignment_OK (N) then\n             Set_Assignment_OK (Operand);\n          end if;\n@@ -9178,7 +9177,7 @@ package body Exp_Ch4 is\n          then\n             Owner := Scope (Return_Applies_To (Scope (PtrT)));\n \n-         --  Case of an access discriminant, or (Ada 2005), of an anonymous\n+         --  Case of an access discriminant, or (Ada 2005) of an anonymous\n          --  access component or anonymous access function result: find the\n          --  final list associated with the scope of the type. (In the\n          --  anonymous access component kind, a list controller will have\n@@ -9825,7 +9824,7 @@ package body Exp_Ch4 is\n       --  in the call to Compile_Time_Compare. If this call results in a\n       --  clear result of always True or Always False, that's decisive and\n       --  we are done. Otherwise we repeat the processing with Assume_Valid\n-      --  set to True to generate additional warnings. We can stil that step\n+      --  set to True to generate additional warnings. We can skip that step\n       --  if Constant_Condition_Warnings is False.\n \n       for AV in False .. True loop\n@@ -9914,9 +9913,9 @@ package body Exp_Ch4 is\n                end if;\n \n             --  If this is the second iteration (AV = True), and the original\n-            --  node comes from source and we are not in an instance, then\n-            --  give a warning if we know result would be True or False. Note\n-            --  we know Constant_Condition_Warnings is set if we get here.\n+            --  node comes from source and we are not in an instance, then give\n+            --  a warning if we know result would be True or False. Note: we\n+            --  know Constant_Condition_Warnings is set if we get here.\n \n             elsif Comes_From_Source (Original_Node (N))\n               and then not In_Instance\n@@ -9934,9 +9933,9 @@ package body Exp_Ch4 is\n          end;\n \n          --  Skip second iteration if not warning on constant conditions or\n-         --  if the first iteration already generated a warning of some kind\n-         --  or if we are in any case assuming all values are valid (so that\n-         --  the first iteration took care of the valid case).\n+         --  if the first iteration already generated a warning of some kind or\n+         --  if we are in any case assuming all values are valid (so that the\n+         --  first iteration took care of the valid case).\n \n          exit when not Constant_Condition_Warnings;\n          exit when Warning_Generated;\n@@ -10003,7 +10002,7 @@ package body Exp_Ch4 is\n          end if;\n       end Is_Safe_Operand;\n \n-      --  Start of processing for Is_Safe_In_Place_Array_Op\n+   --  Start of processing for Is_Safe_In_Place_Array_Op\n \n    begin\n       --  Skip this processing if the component size is different from system\n@@ -10024,12 +10023,10 @@ package body Exp_Ch4 is\n \n       elsif not Is_Unaliased (Lhs) then\n          return False;\n+\n       else\n          Target := Entity (Lhs);\n-\n-         return\n-           Is_Safe_Operand (Op1)\n-             and then Is_Safe_Operand (Op2);\n+         return Is_Safe_Operand (Op1) and then Is_Safe_Operand (Op2);\n       end if;\n    end Safe_In_Place_Array_Op;\n "}]}