{"sha": "001db6cf52711f785459558508ca6fa97e10bcae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAxZGI2Y2Y1MjcxMWY3ODU0NTk1NTg1MDhjYTZmYTk3ZTEwYmNhZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-04-04T19:19:34Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-04-04T19:19:34Z"}, "message": "PR c++/85006 - -fconcepts ICE with A<auto...> return type\n\n\t* pt.c (tsubst_pack_expansion): Allow unsubstituted auto pack.\n\nFrom-SVN: r259100", "tree": {"sha": "bb89ebc44f8ea8f5cb643ab6b3af74a4d11807bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb89ebc44f8ea8f5cb643ab6b3af74a4d11807bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/001db6cf52711f785459558508ca6fa97e10bcae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/001db6cf52711f785459558508ca6fa97e10bcae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/001db6cf52711f785459558508ca6fa97e10bcae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/001db6cf52711f785459558508ca6fa97e10bcae/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8859913ea3cbefdcf1aaec654744a358420d8138", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8859913ea3cbefdcf1aaec654744a358420d8138", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8859913ea3cbefdcf1aaec654744a358420d8138"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "04670a3acaa6d1222eb31a6b7335bdf741771edb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/001db6cf52711f785459558508ca6fa97e10bcae/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/001db6cf52711f785459558508ca6fa97e10bcae/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=001db6cf52711f785459558508ca6fa97e10bcae", "patch": "@@ -1,5 +1,8 @@\n 2018-04-04  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/85006 - -fconcepts ICE with A<auto...> return type\n+\t* pt.c (tsubst_pack_expansion): Allow unsubstituted auto pack.\n+\n \tPR c++/85200 - ICE with constexpr if in generic lambda.\n \t* tree.c (cp_walk_subtrees): Walk into DECL_EXPR in templates.\n "}, {"sha": "dbbc76667212ddf63998dfc7861238c90f307192", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/001db6cf52711f785459558508ca6fa97e10bcae/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/001db6cf52711f785459558508ca6fa97e10bcae/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=001db6cf52711f785459558508ca6fa97e10bcae", "patch": "@@ -11860,7 +11860,7 @@ tsubst_pack_expansion (tree t, tree args, tsubst_flags_t complain,\n \t  /* We can't substitute for this parameter pack.  We use a flag as\n \t     well as the missing_level counter because function parameter\n \t     packs don't have a level.  */\n-\t  gcc_assert (processing_template_decl);\n+\t  gcc_assert (processing_template_decl || is_auto (parm_pack));\n \t  unsubstituted_packs = true;\n \t}\n     }"}, {"sha": "e80341ec0387b7ba8f4c3e6025d677a3b3a07f4e", "filename": "gcc/testsuite/g++.dg/concepts/auto4.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/001db6cf52711f785459558508ca6fa97e10bcae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/001db6cf52711f785459558508ca6fa97e10bcae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fauto4.C?ref=001db6cf52711f785459558508ca6fa97e10bcae", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/85006\n+// { dg-additional-options \"-std=c++17 -fconcepts\" }\n+\n+template<typename... Ts> struct A {};\n+\n+template<typename... Us> A<auto...> foo() { return A{}; }\n+\n+void bar()\n+{\n+  foo();\n+}"}]}