{"sha": "ae33543ca51ec15393064ab2075fed28c33ce2d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUzMzU0M2NhNTFlYzE1MzkzMDY0YWIyMDc1ZmVkMjhjMzNjZTJkMA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2017-01-23T11:29:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-23T11:29:17Z"}, "message": "scans.ads: New token At_Sign.\n\n2017-01-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* scans.ads: New token At_Sign. Remove '@' from list of illegal\n\tcharacters for future version of the language. '@' is legal name.\n\t* scng.ads, scng.adb (Scan):  Handle '@' appropriately.\n\t* scn.adb (Scan_Reserved_Identifier): An occurrence of '@'\n\tdenotes a Target_Name.\n\t* par-ch4.adb (P_Name, P_Primary): Handle Target_Name.\n\t* sinfo.ads, sinfo.adb (N_Target_Name): New non-terminal node.\n\t(Has_Target_Names): New flag on N_Assignment_Statement, to\n\tindicate that RHS has occurrences of N_Target_Name.\n\t* sem.adb: Call Analyze_Target_Name.\n\t* sem_ch5.ads, sem_ch5.adb (Analyze_Target_Name): New subpogram.\n\t(urrent_LHS): Global variable that denotes LHS of assignment,\n\tused in the analysis of Target_Name nodes.\n\t* sem_res.adb (Resolve_Target_Name): New procedure.\n\t* exp_ch5.adb (Expand_Assign_With_Target_Names): (AI12-0125):\n\tN is an assignment statement whose RHS contains occurences of @\n\tthat designate the value of the LHS of the assignment. If the\n\tLHS is side-effect free the target names can be replaced with\n\ta copy of the LHS; otherwise the semantics of the assignment\n\tis described in terms of a procedure with an in-out parameter,\n\tand expanded as such.\n\t(Expand_N_Assignment_Statement): Call\n\tExpand_Assign_With_Target_Names when needed.\n\t* exp_util.adb (Insert_Actions): Take into account N_Target_Name.\n\t* sprint.adb: Handle N_Target_Name.\n\nFrom-SVN: r244783", "tree": {"sha": "0d42deb5fa5f86755159535db76effcdd549b3f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d42deb5fa5f86755159535db76effcdd549b3f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae33543ca51ec15393064ab2075fed28c33ce2d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae33543ca51ec15393064ab2075fed28c33ce2d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae33543ca51ec15393064ab2075fed28c33ce2d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae33543ca51ec15393064ab2075fed28c33ce2d0/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "13230c68da020c55d3369b489c0b49032637e242", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13230c68da020c55d3369b489c0b49032637e242", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13230c68da020c55d3369b489c0b49032637e242"}], "stats": {"total": 348, "additions": 333, "deletions": 15}, "files": [{"sha": "8a676d89a61f9559665c44f9ce7da64b53daf9ab", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ae33543ca51ec15393064ab2075fed28c33ce2d0", "patch": "@@ -1,3 +1,31 @@\n+2017-01-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* scans.ads: New token At_Sign. Remove '@' from list of illegal\n+\tcharacters for future version of the language. '@' is legal name.\n+\t* scng.ads, scng.adb (Scan):  Handle '@' appropriately.\n+\t* scn.adb (Scan_Reserved_Identifier): An occurrence of '@'\n+\tdenotes a Target_Name.\n+\t* par-ch4.adb (P_Name, P_Primary): Handle Target_Name.\n+\t* sinfo.ads, sinfo.adb (N_Target_Name): New non-terminal node.\n+\t(Has_Target_Names): New flag on N_Assignment_Statement, to\n+\tindicate that RHS has occurrences of N_Target_Name.\n+\t* sem.adb: Call Analyze_Target_Name.\n+\t* sem_ch5.ads, sem_ch5.adb (Analyze_Target_Name): New subpogram.\n+\t(urrent_LHS): Global variable that denotes LHS of assignment,\n+\tused in the analysis of Target_Name nodes.\n+\t* sem_res.adb (Resolve_Target_Name): New procedure.\n+\t* exp_ch5.adb (Expand_Assign_With_Target_Names): (AI12-0125):\n+\tN is an assignment statement whose RHS contains occurences of @\n+\tthat designate the value of the LHS of the assignment. If the\n+\tLHS is side-effect free the target names can be replaced with\n+\ta copy of the LHS; otherwise the semantics of the assignment\n+\tis described in terms of a procedure with an in-out parameter,\n+\tand expanded as such.\n+\t(Expand_N_Assignment_Statement): Call\n+\tExpand_Assign_With_Target_Names when needed.\n+\t* exp_util.adb (Insert_Actions): Take into account N_Target_Name.\n+\t* sprint.adb: Handle N_Target_Name.\n+\n 2017-01-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* checks.adb: Minor fix in comment."}, {"sha": "17233c2554ad4c641e80bb6438324ed17fa7bb40", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 122, "deletions": 0, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=ae33543ca51ec15393064ab2075fed28c33ce2d0", "patch": "@@ -115,6 +115,13 @@ package body Exp_Ch5 is\n    --  clause (this last case is required because holes in the tagged type\n    --  might be filled with components from child types).\n \n+   procedure Expand_Assign_With_Target_Names (N : Node_Id);\n+   --  (AI12-0125): N is an assignment statement whose RHS contains occurrences\n+   --  of @ that designate the value of the LHS of the assignment. If the LHS\n+   --  is side-effect free the target names can be replaced with a copy of the\n+   --  LHS; otherwise the semantics of the assignment is described in terms of\n+   --  a procedure with an in-out parameter, and expanded as such.\n+\n    procedure Expand_Formal_Container_Loop (N : Node_Id);\n    --  Use the primitives specified in an Iterable aspect to expand a loop\n    --  over a so-called formal container, primarily for SPARK usage.\n@@ -1605,6 +1612,111 @@ package body Exp_Ch5 is\n       end;\n    end Expand_Assign_Record;\n \n+   -------------------------------------\n+   -- Expand_Assign_With_Target_Names --\n+   -------------------------------------\n+\n+   procedure Expand_Assign_With_Target_Names (N : Node_Id) is\n+      Loc : constant Source_Ptr := Sloc (N);\n+      LHS : constant Node_Id := Name (N);\n+      RHS : constant Node_Id := Expression (N);\n+      Ent : Entity_Id;\n+\n+      New_RHS : Node_Id;\n+\n+      function  Replace_Target (N : Node_Id) return Traverse_Result;\n+      --  Replace occurrences of the target name by the proper entity: either\n+      --  the entity of the LHS in simple cases, or the formal of the\n+      --  constructed procedure otherwise.\n+\n+      --------------------\n+      -- Replace_Target --\n+      --------------------\n+\n+      function  Replace_Target (N : Node_Id) return Traverse_Result is\n+      begin\n+         if Nkind (N) = N_Target_Name then\n+            Rewrite (N, New_Occurrence_Of (Ent, Sloc (N)));\n+         end if;\n+\n+         Set_Analyzed (N, False);\n+         return OK;\n+      end Replace_Target;\n+\n+      procedure Replace_Target_Name is new Traverse_Proc (Replace_Target);\n+\n+   begin\n+\n+      New_RHS := New_Copy_Tree (RHS);\n+\n+      if Is_Entity_Name (LHS)\n+         and then not Is_Renaming_Of_Object (Entity (LHS))\n+      then\n+         Ent := Entity (LHS);\n+         Replace_Target_Name (New_RHS);\n+         Rewrite (N,\n+           Make_Assignment_Statement (Loc,\n+             Name => Relocate_Node (LHS),\n+             Expression => New_RHS));\n+\n+      elsif Side_Effect_Free (LHS) then\n+         Ent := Make_Temporary (Loc, 'T');\n+         Insert_Before_And_Analyze (N,\n+           Make_Object_Declaration (Loc,\n+             Defining_Identifier => Ent,\n+             Object_Definition   => New_Occurrence_Of (Etype (LHS), Loc),\n+             Expression          => New_Copy_Tree (LHS)));\n+         Replace_Target_Name (New_RHS);\n+         Rewrite (N,\n+           Make_Assignment_Statement (Loc,\n+             Name => Relocate_Node (LHS),\n+             Expression => New_RHS));\n+\n+      else\n+         Ent := Make_Temporary (Loc, 'T');\n+\n+         declare\n+            Proc : constant Entity_Id :=\n+              Make_Defining_Identifier (Loc, Chars => New_Internal_Name ('P'));\n+            Formals : constant List_Id := New_List (\n+              Make_Parameter_Specification (Loc,\n+                Defining_Identifier => Ent,\n+                In_Present          => True,\n+                Out_Present         => True,\n+                Parameter_Type      => New_Occurrence_Of (Etype (LHS), Loc)));\n+            Spec : constant Node_Id :=\n+              Make_Procedure_Specification (Loc,\n+                 Defining_Unit_Name => Proc,\n+                 Parameter_Specifications => Formals);\n+            Subp_Body : Node_Id;\n+            Call      : Node_Id;\n+         begin\n+            Replace_Target_Name (New_RHS);\n+\n+            Subp_Body :=\n+               Make_Subprogram_Body (Loc,\n+                  Specification => Spec,\n+                  Declarations  => Empty_List,\n+                  Handled_Statement_Sequence =>\n+                  Make_Handled_Sequence_Of_Statements (Loc,\n+                    Statements => New_List (\n+                      Make_Assignment_Statement (Loc,\n+                         Name => New_Occurrence_Of (Ent, Loc),\n+                         Expression => New_RHS))));\n+\n+            Insert_Before_And_Analyze (N, Subp_Body);\n+            Call := Make_Procedure_Call_Statement (Loc,\n+              Name => New_Occurrence_Of (Proc, Loc),\n+              Parameter_Associations => New_List (Relocate_Node (LHS)));\n+            Rewrite (N, Call);\n+         end;\n+      end if;\n+\n+      --  Analyze rewritten node, either as assignment or procedure call.\n+\n+      Analyze (N);\n+   end Expand_Assign_With_Target_Names;\n+\n    -----------------------------------\n    -- Expand_N_Assignment_Statement --\n    -----------------------------------\n@@ -1647,6 +1759,16 @@ package body Exp_Ch5 is\n          Check_Valid_Lvalue_Subscripts (Lhs);\n       end if;\n \n+      --  Separate expansion if RHS contain target names. Note that assignment\n+      --  may already have been expanded if RHS is aggregate.\n+\n+      if Nkind (N) = N_Assignment_Statement\n+        and then Has_Target_Names (N)\n+      then\n+         Expand_Assign_With_Target_Names (N);\n+         return;\n+      end if;\n+\n       --  Ada 2005 (AI-327): Handle assignment to priority of protected object\n \n       --  Rewrite an assignment to X'Priority into a run-time call"}, {"sha": "f181bede2f941c7961cfb481fcef3673532a1339", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=ae33543ca51ec15393064ab2075fed28c33ce2d0", "patch": "@@ -5930,6 +5930,7 @@ package body Exp_Util is\n                | N_String_Literal\n                | N_Subtype_Indication\n                | N_Subunit\n+               | N_Target_Name\n                | N_Task_Definition\n                | N_Terminate_Alternative\n                | N_Triggering_Alternative"}, {"sha": "af2ed879ca515f0d91682cc416a34813449459e8", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=ae33543ca51ec15393064ab2075fed28c33ce2d0", "patch": "@@ -1,4 +1,4 @@\n-------------------------------------------------------------------------------\n+-----------------------------------------------------------------------------\n --                                                                          --\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n@@ -145,7 +145,7 @@ package body Ch4 is\n    --  | INDEXED_COMPONENT  | SLICE\n    --  | SELECTED_COMPONENT | ATTRIBUTE\n    --  | TYPE_CONVERSION    | FUNCTION_CALL\n-   --  | CHARACTER_LITERAL\n+   --  | CHARACTER_LITERAL  | TARGET_NAME\n \n    --  DIRECT_NAME ::= IDENTIFIER | OPERATOR_SYMBOL\n \n@@ -181,6 +181,8 @@ package body Ch4 is\n \n    --  EXPLICIT_ACTUAL_PARAMETER ::= EXPRESSION | variable_NAME\n \n+   --  TARGET_NAME ::= @   (AI12-0125-3: abbreviation for LHS)\n+\n    --  Note: syntactically a procedure call looks just like a function call,\n    --  so this routine is in practice used to scan out procedure calls as well.\n \n@@ -229,6 +231,10 @@ package body Ch4 is\n       end if;\n \n       --  Loop through designators in qualified name\n+      --  AI12-0125 : target_name\n+      if Token = Tok_At_Sign then\n+         Scan_Reserved_Identifier (Force_Msg => False);\n+      end if;\n \n       Name_Node := Token_Node;\n \n@@ -2332,8 +2338,8 @@ package body Ch4 is\n       if Token = Tok_Dot then\n          Error_Msg_SC (\"prefix for selection is not a name\");\n \n-         --  If qualified expression, comment and continue, otherwise something\n-         --  is pretty nasty so do an Error_Resync call.\n+         --  If qualified expression, comment and continue, otherwise\n+         --  something is pretty nasty so do an Error_Resync call.\n \n          if Ada_Version < Ada_2012\n            and then Nkind (Node1) = N_Qualified_Expression\n@@ -2791,6 +2797,15 @@ package body Ch4 is\n                Error_Msg_SC (\"parentheses required for unary minus\");\n                Scan; -- past minus\n \n+            when Tok_At_Sign =>    --  AI12-0125 : target_name\n+               if not Extensions_Allowed then\n+                  Error_Msg_SC (\"target name is an Ada 2020 extension\");\n+                  Error_Msg_SC (\"\\compile with -gnatX\");\n+               end if;\n+\n+               Node1 := P_Name;\n+               return Node1;\n+\n             --  Anything else is illegal as the first token of a primary, but\n             --  we test for some common errors, to improve error messages.\n "}, {"sha": "8ff3f9d0e292ff69c03b347626832c980ab65e59", "filename": "gcc/ada/scans.ads", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fscans.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fscans.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscans.ads?ref=ae33543ca51ec15393064ab2075fed28c33ce2d0", "patch": "@@ -61,6 +61,8 @@ package Scans is\n \n       Tok_Identifier,      -- identifier   Name, Lit_Or_Name, Desig\n \n+      Tok_At_Sign,         -- @  AI12-0125-3 : target name\n+\n       Tok_Double_Asterisk, -- **\n \n       Tok_Ampersand,       -- &            Binary_Addop\n@@ -213,8 +215,10 @@ package Scans is\n       --  also when scanning project files (where it is needed because of ???)\n \n       Tok_Special,\n-      --  Used only in preprocessor scanning (to represent one of the\n-      --  characters '#', '$', '?', '@', '`', '\\', '^', '~', or '_'. The\n+      --  AI12-0125-03 : target name as abbreviation for LHS\n+\n+      --  Otherwise used only in preprocessor scanning (to represent one of\n+      --  the characters '#', '$', '?', '@', '`', '\\', '^', '~', or '_'. The\n       --  character value itself is stored in Scans.Special_Character.\n \n       Tok_SPARK_Hide,\n@@ -269,12 +273,13 @@ package Scans is\n    --  of Pascal style not equal operator).\n \n    subtype Token_Class_Name is\n-     Token_Type range Tok_Char_Literal .. Tok_Identifier;\n+   Token_Type range Tok_Char_Literal .. Tok_At_Sign;\n    --  First token of name (4.1),\n    --    (identifier, char literal, operator symbol)\n+   --  Includes '@' after Ada2012 corrigendum.\n \n    subtype Token_Class_Desig is\n-     Token_Type range Tok_Operator_Symbol .. Tok_Identifier;\n+     Token_Type range Tok_Operator_Symbol .. Tok_At_Sign;\n    --  Token which can be a Designator (identifier, operator symbol)\n \n    subtype Token_Class_Namext is\n@@ -397,6 +402,11 @@ package Scans is\n    --  file being compiled. This CRC includes only program tokens, and\n    --  excludes comments.\n \n+   Limited_Checksum : Word := 0;\n+   --  Used to accumulate a CRC representing significant tokens in the\n+   --  limited view of a package, i.e. visible type names and related\n+   --  tagged indicators.\n+\n    First_Non_Blank_Location : Source_Ptr := No_Location; -- init for -gnatVa\n    --  Location of first non-blank character on the line containing the\n    --  current token (i.e. the location of the character whose column number\n@@ -461,8 +471,9 @@ package Scans is\n    --  Wide_Character).\n \n    Special_Character : Character;\n+   --  AI12-0125-03 : '@' as target name is handled elsewhere.\n    --  Valid only when Token = Tok_Special. Returns one of the characters\n-   --  '#', '$', '?', '@', '`', '\\', '^', '~', or '_'.\n+   --  '#', '$', '?', '`', '\\', '^', '~', or '_'.\n    --\n    --  Why only this set? What about wide characters???\n "}, {"sha": "ef0311619d51029ccc3c7b3dba471c9932b4d6db", "filename": "gcc/ada/scn.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fscn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fscn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscn.adb?ref=ae33543ca51ec15393064ab2075fed28c33ce2d0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -383,6 +383,14 @@ package body Scn is\n       Token_Chars : constant String := Token_Type'Image (Token);\n \n    begin\n+      --  AI12-0125 : '@' denotes the target_name, i.e. serves as an\n+      --  abbreviation for the LHS of an assignment.\n+\n+      if Token = Tok_At_Sign then\n+         Token_Node := New_Node (N_Target_Name, Token_Ptr);\n+         return;\n+      end if;\n+\n       --  We have in Token_Chars the image of the Token name, i.e. Tok_xxx.\n       --  This code extracts the xxx and makes an identifier out of it.\n "}, {"sha": "6c9cab7fbd93ca684570b800ce7e59a9a8130f8b", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=ae33543ca51ec15393064ab2075fed28c33ce2d0", "patch": "@@ -158,6 +158,7 @@ package body Scng is\n             | Tok_And\n             | Tok_Apostrophe\n             | Tok_Array\n+            | Tok_At_Sign\n             | Tok_Asterisk\n             | Tok_At\n             | Tok_Body\n@@ -302,6 +303,7 @@ package body Scng is\n             | Tok_Array\n             | Tok_Asterisk\n             | Tok_At\n+            | Tok_At_Sign\n             | Tok_Body\n             | Tok_Box\n             | Tok_Char_Literal\n@@ -1609,6 +1611,19 @@ package body Scng is\n                return;\n             end if;\n \n+         when '@' =>\n+            if not Extensions_Allowed then\n+               Error_Illegal_Character;\n+               Scan_Ptr := Scan_Ptr + 1;\n+\n+            else\n+               --  AI12-0125-03 : @ is target_name\n+               Accumulate_Checksum ('@');\n+               Scan_Ptr := Scan_Ptr + 1;\n+               Token := Tok_At_Sign;\n+               return;\n+            end if;\n+\n          --  Asterisk (can be multiplication operator or double asterisk which\n          --  is the exponentiation compound delimiter).\n \n@@ -2421,8 +2436,9 @@ package body Scng is\n             Error_Illegal_Character;\n \n          --  Invalid graphic characters\n-\n-         when '#' | '$' | '?' | '@' | '`' | '\\' | '^' | '~' =>\n+         --  Note that '@' is handled elsewhere, because following AI12-125\n+         --  it denotes the target_name of an assignment.\n+         when '#' | '$' | '?' | '`' | '\\' | '^' | '~' =>\n \n             --  If Set_Special_Character has been called for this character,\n             --  set Scans.Special_Character and return a Special token."}, {"sha": "d25ed54e51c1838e6c0c9dbefe3e7e7fd4a67822", "filename": "gcc/ada/scng.ads", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fscng.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fscng.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.ads?ref=ae33543ca51ec15393064ab2075fed28c33ce2d0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -78,8 +78,10 @@ package Scng is\n    --  either a keyword or an identifier. See also package Casing.\n \n    procedure Set_Special_Character (C : Character);\n-   --  Indicate that one of the following character '#', '$', '?', '@', '`',\n+   --  Indicate that one of the following character '#', '$', '?',  '`',\n    --  '\\', '^', '_' or '~', when found is a Special token.\n+   --  AI12-0125-03 : target name (ES) is not in this list because '@' is\n+   --  handled as a special token as abbreviation of LHS of assignment.\n \n    procedure Reset_Special_Characters;\n    --  Indicate that there is no characters that are Special tokens., which"}, {"sha": "36b561e79c9c772758f3a0cbc62d4fa0bf49bd8f", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=ae33543ca51ec15393064ab2075fed28c33ce2d0", "patch": "@@ -563,6 +563,9 @@ package body Sem is\n          when N_Subunit =>\n             Analyze_Subunit (N);\n \n+         when N_Target_Name =>\n+            Analyze_Target_Name (N);\n+\n          when N_Task_Body =>\n             Analyze_Task_Body (N);\n "}, {"sha": "6abcdb26d8d3e0802985efda798ab9a1e6b683b7", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=ae33543ca51ec15393064ab2075fed28c33ce2d0", "patch": "@@ -64,6 +64,11 @@ with Uintp;    use Uintp;\n \n package body Sem_Ch5 is\n \n+   Current_LHS : Node_Id := Empty;\n+   --  Holds the left-hand side of the assignment statement being analyzed.\n+   --  Used to determine the type of a target_name appearing on the RHS, for\n+   --  AI12-0125 and the use of '@' as an abbreviation for the LHS.\n+\n    Unblocked_Exit_Count : Nat := 0;\n    --  This variable is used when processing if statements, case statements,\n    --  and block statements. It counts the number of exit points that are not\n@@ -279,6 +284,9 @@ package body Sem_Ch5 is\n    --  Start of processing for Analyze_Assignment\n \n    begin\n+      --  Save LHS for use in target names (AI12-125).\n+      Current_LHS := Lhs;\n+\n       Mark_Coextensions (N, Rhs);\n \n       --  Analyze the target of the assignment first in case the expression\n@@ -558,8 +566,20 @@ package body Sem_Ch5 is\n       --  Now we can complete the resolution of the right hand side\n \n       Set_Assignment_Type (Lhs, T1);\n+\n       Resolve (Rhs, T1);\n \n+      --  If the right-hand side contains target names, expansion has been\n+      --  disabled to prevent expansion that might move target names out of\n+      --  the context of the assignment statement. Restore the expander mode\n+      --  now so that assignment statement can be properly expanded.\n+\n+      if  Nkind (N) = N_Assignment_Statement\n+        and then Has_Target_Names (N)\n+      then\n+         Expander_Mode_Restore;\n+      end if;\n+\n       --  This is the point at which we check for an unset reference\n \n       Check_Unset_Reference (Rhs);\n@@ -918,6 +938,7 @@ package body Sem_Ch5 is\n       Analyze_Dimension (N);\n \n    <<Leave>>\n+      Current_LHS := Empty;\n       Restore_Ghost_Mode (Mode);\n    end Analyze_Assignment;\n \n@@ -3513,6 +3534,30 @@ package body Sem_Ch5 is\n       null;\n    end Analyze_Null_Statement;\n \n+   -------------------------\n+   -- Analyze_Target_Name --\n+   -------------------------\n+\n+   procedure Analyze_Target_Name (N : Node_Id) is\n+   begin\n+      if No (Current_LHS) then\n+         Error_Msg_N (\"target name can only appear within an assignment\", N);\n+         Set_Etype (N, Any_Type);\n+      else\n+         Set_Has_Target_Names (Parent (Current_LHS));\n+         Set_Etype (N, Etype (Current_LHS));\n+\n+         --  Disable expansion for the rest of the analysis of the current\n+         --  right-hand side. The enclosing assignment statement will be\n+         --  rewritten during expansion, together with occurrences of the\n+         --  target name.\n+\n+         if Expander_Active then\n+            Expander_Mode_Save_And_Set (False);\n+         end if;\n+      end if;\n+   end Analyze_Target_Name;\n+\n    ------------------------\n    -- Analyze_Statements --\n    ------------------------"}, {"sha": "0f4ac500ca00a3492d110d68b97aeff6b0f09171", "filename": "gcc/ada/sem_ch5.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fsem_ch5.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fsem_ch5.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.ads?ref=ae33543ca51ec15393064ab2075fed28c33ce2d0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,6 +41,7 @@ package Sem_Ch5 is\n    procedure Analyze_Loop_Parameter_Specification (N : Node_Id);\n    procedure Analyze_Loop_Statement               (N : Node_Id);\n    procedure Analyze_Null_Statement               (N : Node_Id);\n+   procedure Analyze_Target_Name                  (N : Node_Id);\n    procedure Analyze_Statements                   (L : List_Id);\n \n    procedure Analyze_Label_Entity (E : Entity_Id);"}, {"sha": "33d3b60c61933876d5756bf2587b8f0559f3dbcf", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=ae33543ca51ec15393064ab2075fed28c33ce2d0", "patch": "@@ -203,6 +203,7 @@ package body Sem_Res is\n    procedure Resolve_Short_Circuit             (N : Node_Id; Typ : Entity_Id);\n    procedure Resolve_Slice                     (N : Node_Id; Typ : Entity_Id);\n    procedure Resolve_String_Literal            (N : Node_Id; Typ : Entity_Id);\n+   procedure Resolve_Target_Name               (N : Node_Id; Typ : Entity_Id);\n    procedure Resolve_Type_Conversion           (N : Node_Id; Typ : Entity_Id);\n    procedure Resolve_Unary_Op                  (N : Node_Id; Typ : Entity_Id);\n    procedure Resolve_Unchecked_Expression      (N : Node_Id; Typ : Entity_Id);\n@@ -2985,6 +2986,9 @@ package body Sem_Res is\n             when N_String_Literal =>\n                Resolve_String_Literal            (N, Ctx_Type);\n \n+            when N_Target_Name =>\n+               Resolve_Target_Name               (N, Ctx_Type);\n+\n             when N_Type_Conversion =>\n                Resolve_Type_Conversion           (N, Ctx_Type);\n \n@@ -10638,6 +10642,15 @@ package body Sem_Res is\n       end;\n    end Resolve_String_Literal;\n \n+   -------------------------\n+   -- Resolve_Target_Name --\n+   -------------------------\n+\n+   procedure Resolve_Target_Name (N : Node_Id; Typ : Entity_Id) is\n+   begin\n+      Set_Etype (N, Typ);\n+   end Resolve_Target_Name;\n+\n    -----------------------------\n    -- Resolve_Type_Conversion --\n    -----------------------------"}, {"sha": "d52c43c17d80c733efca509a07e07d85226beb02", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=ae33543ca51ec15393064ab2075fed28c33ce2d0", "patch": "@@ -1606,6 +1606,14 @@ package body Sinfo is\n       return Flag5 (N);\n    end Has_Storage_Size_Pragma;\n \n+   function Has_Target_Names\n+      (N : Node_Id) return Boolean is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Assignment_Statement);\n+      return Flag8 (N);\n+   end Has_Target_Names;\n+\n    function Has_Wide_Character\n       (N : Node_Id) return Boolean is\n    begin\n@@ -4898,6 +4906,14 @@ package body Sinfo is\n       Set_Flag5 (N, Val);\n    end Set_Has_Storage_Size_Pragma;\n \n+   procedure Set_Has_Target_Names\n+      (N : Node_Id; Val : Boolean := True) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_Assignment_Statement);\n+      Set_Flag8 (N, Val);\n+   end Set_Has_Target_Names;\n+\n    procedure Set_Has_Wide_Character\n       (N : Node_Id; Val : Boolean := True) is\n    begin"}, {"sha": "56c774500e6c865565c5f5d6a1933d71645bdb48", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=ae33543ca51ec15393064ab2075fed28c33ce2d0", "patch": "@@ -1543,6 +1543,10 @@ package Sinfo is\n    --    code outside the Character range but within Wide_Character range)\n    --    appears in the string. Used to implement pragma preference rules.\n \n+   --  Has_Target_Names (Flag8-Sem)\n+   --    Present in assignment statements. Indicates that the RHS contains\n+   --    target names (see AI12-0125-3) and must be expanded accordingly.\n+\n    --  Has_Wide_Wide_Character (Flag13-Sem)\n    --    Present in string literals, set if any wide character (i.e. character\n    --    code outside the Wide_Character range) appears in the string. Used to\n@@ -4794,6 +4798,7 @@ package Sinfo is\n       --  Forwards_OK (Flag5-Sem)\n       --  Backwards_OK (Flag6-Sem)\n       --  No_Ctrl_Actions (Flag7-Sem)\n+      --  Has_Target_Names (Flag8-Sem)\n       --  Componentwise_Assignment (Flag14-Sem)\n       --  Suppress_Assignment_Checks (Flag18-Sem)\n \n@@ -4808,6 +4813,19 @@ package Sinfo is\n       --  case the front end must generate an extra temporary and initialize\n       --  this temporary as required (the temporary itself is not atomic).\n \n+      ------------------\n+      --  Target_Name --\n+      ------------------\n+\n+      --  N_Target_Name\n+      --  Sloc points to @\n+      --  Etype (Node5-Sem)\n+\n+      --  Note (Ada 2020): node is used during analysis as a placeholder for\n+      --  the value of the LHS of the enclosing assignment statement. Node is\n+      --  eventually rewritten together with enclosing assignment, and backends\n+      --  are not aware of it.\n+\n       -----------------------\n       -- 5.3  If Statement --\n       -----------------------\n@@ -8463,6 +8481,7 @@ package Sinfo is\n       N_Reference,\n       N_Selected_Component,\n       N_Slice,\n+      N_Target_Name,\n       N_Type_Conversion,\n       N_Unchecked_Expression,\n       N_Unchecked_Type_Conversion,\n@@ -9385,6 +9404,9 @@ package Sinfo is\n    function Has_Storage_Size_Pragma\n      (N : Node_Id) return Boolean;    -- Flag5\n \n+   function Has_Target_Names\n+     (N : Node_Id) return Boolean;    -- Flag8\n+\n    function Has_Wide_Character\n      (N : Node_Id) return Boolean;    -- Flag11\n \n@@ -10438,6 +10460,9 @@ package Sinfo is\n    procedure Set_Has_Storage_Size_Pragma\n      (N : Node_Id; Val : Boolean := True);    -- Flag5\n \n+   procedure Set_Has_Target_Names\n+     (N : Node_Id; Val : Boolean := True);    -- Flag8\n+\n    procedure Set_Has_Wide_Character\n      (N : Node_Id; Val : Boolean := True);    -- Flag11\n \n@@ -11737,6 +11762,13 @@ package Sinfo is\n         4 => False,   --  unused\n         5 => False),  --  unused\n \n+     N_Target_Name =>\n+       (1 => False,   --  unused\n+        2 => False,   --  unused\n+        3 => False,   --  unused\n+        4 => False,   --  unused\n+        5 => False),  --  Etype (Node5-Sem)\n+\n      N_If_Statement =>\n        (1 => True,    --  Condition (Node1)\n         2 => True,    --  Then_Statements (List2)\n@@ -12944,6 +12976,7 @@ package Sinfo is\n    pragma Inline (Has_Private_View);\n    pragma Inline (Has_Relative_Deadline_Pragma);\n    pragma Inline (Has_Storage_Size_Pragma);\n+   pragma Inline (Has_Target_Names);\n    pragma Inline (Has_Wide_Character);\n    pragma Inline (Has_Wide_Wide_Character);\n    pragma Inline (Header_Size_Added);\n@@ -13292,6 +13325,7 @@ package Sinfo is\n    pragma Inline (Set_Has_Self_Reference);\n    pragma Inline (Set_Has_SP_Choice);\n    pragma Inline (Set_Has_Storage_Size_Pragma);\n+   pragma Inline (Set_Has_Target_Names);\n    pragma Inline (Set_Has_Wide_Character);\n    pragma Inline (Set_Has_Wide_Wide_Character);\n    pragma Inline (Set_Header_Size_Added);"}, {"sha": "bed39b52df4834b923f7abd73f6633323e9f9b61", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae33543ca51ec15393064ab2075fed28c33ce2d0/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=ae33543ca51ec15393064ab2075fed28c33ce2d0", "patch": "@@ -3287,6 +3287,9 @@ package body Sprint is\n             Extra_Blank_Line;\n             Sprint_Node (Proper_Body (Node));\n \n+         when N_Target_Name =>\n+            Write_Char ('@');\n+\n          when N_Task_Body =>\n             Write_Indent_Str_Sloc (\"task body \");\n             Write_Id (Defining_Identifier (Node));"}]}