{"sha": "facfa16502ba988917c46d40d0b2cad07c989bc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFjZmExNjUwMmJhOTg4OTE3YzQ2ZDQwZDBiMmNhZDA3Yzk4OWJjMw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-07-30T14:15:28Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-30T14:15:28Z"}, "message": "inline.adb, [...]: Minor reformatting.\n\n2014-07-30  Robert Dewar  <dewar@adacore.com>\n\n\t* inline.adb, a-coorse.adb, a-coorse.ads, a-cohase.adb, a-cohase.ads,\n\ta-tasatt.adb: Minor reformatting.\n\n2014-07-30  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch4.adb: Minor reformatting.\n\nFrom-SVN: r213278", "tree": {"sha": "cf2ba8b793ff4183412fbdc50c4ca5ebd4a21013", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf2ba8b793ff4183412fbdc50c4ca5ebd4a21013"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/facfa16502ba988917c46d40d0b2cad07c989bc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/facfa16502ba988917c46d40d0b2cad07c989bc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/facfa16502ba988917c46d40d0b2cad07c989bc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/facfa16502ba988917c46d40d0b2cad07c989bc3/comments", "author": null, "committer": null, "parents": [{"sha": "29ad9ea52944cd89ea5414c034d468f0862b6c18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29ad9ea52944cd89ea5414c034d468f0862b6c18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29ad9ea52944cd89ea5414c034d468f0862b6c18"}], "stats": {"total": 60, "additions": 32, "deletions": 28}, "files": [{"sha": "5c4a30b127a367895b0bdde9226a4188ab1c0fe3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facfa16502ba988917c46d40d0b2cad07c989bc3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facfa16502ba988917c46d40d0b2cad07c989bc3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=facfa16502ba988917c46d40d0b2cad07c989bc3", "patch": "@@ -1,3 +1,12 @@\n+2014-07-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* inline.adb, a-coorse.adb, a-coorse.ads, a-cohase.adb, a-cohase.ads,\n+\ta-tasatt.adb: Minor reformatting.\n+\n+2014-07-30  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch4.adb: Minor reformatting.\n+\n 2014-07-30  Ed Schonberg  <schonberg@adacore.com>\n \n \t* a-coorse.adb, a-coorse.ads (Generic_Keys): Add a"}, {"sha": "b0c16df907bb943e37f5f0cabf84e611dad58c61", "filename": "gcc/ada/a-cohase.adb", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facfa16502ba988917c46d40d0b2cad07c989bc3/gcc%2Fada%2Fa-cohase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facfa16502ba988917c46d40d0b2cad07c989bc3/gcc%2Fada%2Fa-cohase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohase.adb?ref=facfa16502ba988917c46d40d0b2cad07c989bc3", "patch": "@@ -136,7 +136,6 @@ package body Ada.Containers.Hashed_Sets is\n      (C    : in out Set;\n       Indx : Hash_Type;\n       X    : in out Node_Access);\n-\n    --  Delete a node whose bucket position is known. Used to remove a node\n    --  whose element has been modified through a key_preserving reference.\n    --  We cannot use the value of the element precisely because the current\n@@ -878,7 +877,7 @@ package body Ada.Containers.Hashed_Sets is\n \n       if HT.Busy > 0 then\n          raise Program_Error with\n-           \"attempt tp tamper with cursors (set is busy)\";\n+           \"attempt to tamper with cursors (set is busy)\";\n       end if;\n \n       Local_Insert (HT, New_Item, Node, Inserted);\n@@ -2140,7 +2139,7 @@ package body Ada.Containers.Hashed_Sets is\n             if Hash (Key (Element (Control.Old_Pos))) /= Control.Old_Hash\n             then\n                Delete_Node\n-                (Control.Container.all, Control.Index,  Control.Old_Pos.Node);\n+                 (Control.Container.all, Control.Index,  Control.Old_Pos.Node);\n                raise Program_Error with \"key not preserved in reference\";\n             end if;\n \n@@ -2245,22 +2244,22 @@ package body Ada.Containers.Hashed_Sets is\n \n       begin\n          if Node = null then\n-            raise Constraint_Error with \"Key not in set\";\n+            raise Constraint_Error with \"key not in set\";\n          end if;\n \n          declare\n             HT : Hash_Table_Type renames Container.HT;\n-            B : Natural renames HT.Busy;\n-            L : Natural renames HT.Lock;\n-            P : constant Cursor := Find (Container, Key);\n+            B  : Natural renames HT.Busy;\n+            L  : Natural renames HT.Lock;\n+            P  : constant Cursor := Find (Container, Key);\n          begin\n             return R : constant Reference_Type :=\n               (Element  => Node.Element'Access,\n                Control  =>\n                  (Controlled with\n                    Container'Unrestricted_Access,\n-                   Index  => HT_Ops.Index (HT, P.Node),\n-                   Old_Pos => P,\n+                   Index    => HT_Ops.Index (HT, P.Node),\n+                   Old_Pos  => P,\n                    Old_Hash => Hash (Key)))\n             do\n                B := B + 1;"}, {"sha": "a9990ce6b8d7aae76506f8701135cc1a009e7c71", "filename": "gcc/ada/a-cohase.ads", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facfa16502ba988917c46d40d0b2cad07c989bc3/gcc%2Fada%2Fa-cohase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facfa16502ba988917c46d40d0b2cad07c989bc3/gcc%2Fada%2Fa-cohase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohase.ads?ref=facfa16502ba988917c46d40d0b2cad07c989bc3", "patch": "@@ -34,8 +34,8 @@\n with Ada.Iterator_Interfaces;\n \n private with Ada.Containers.Hash_Tables;\n-private with Ada.Streams;\n private with Ada.Finalization;\n+private with Ada.Streams;\n \n generic\n    type Element_Type is private;\n@@ -460,12 +460,10 @@ package Ada.Containers.Hashed_Sets is\n          Old_Hash  : Hash_Type;\n       end record;\n \n-      overriding procedure\n-         Adjust (Control : in out Reference_Control_Type);\n+      overriding procedure Adjust (Control : in out Reference_Control_Type);\n       pragma Inline (Adjust);\n \n-      overriding procedure\n-         Finalize (Control : in out Reference_Control_Type);\n+      overriding procedure Finalize (Control : in out Reference_Control_Type);\n       pragma Inline (Finalize);\n \n       type Reference_Type (Element : not null access Element_Type) is record"}, {"sha": "0f45308d6696f9d2880d9532a9498b5450e2c426", "filename": "gcc/ada/a-coorse.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facfa16502ba988917c46d40d0b2cad07c989bc3/gcc%2Fada%2Fa-coorse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facfa16502ba988917c46d40d0b2cad07c989bc3/gcc%2Fada%2Fa-coorse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorse.adb?ref=facfa16502ba988917c46d40d0b2cad07c989bc3", "patch": "@@ -820,8 +820,8 @@ package body Ada.Containers.Ordered_Sets is\n          if Control.Container /= null then\n             declare\n                Tree : Tree_Type renames Control.Container.Tree;\n-               B : Natural renames Tree.Busy;\n-               L : Natural renames Tree.Lock;\n+               B    : Natural renames Tree.Busy;\n+               L    : Natural renames Tree.Lock;\n             begin\n                B := B - 1;\n                L := L - 1;"}, {"sha": "315134554e9d2da6ca9c1242720391530c1d2dc5", "filename": "gcc/ada/a-coorse.ads", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facfa16502ba988917c46d40d0b2cad07c989bc3/gcc%2Fada%2Fa-coorse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facfa16502ba988917c46d40d0b2cad07c989bc3/gcc%2Fada%2Fa-coorse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorse.ads?ref=facfa16502ba988917c46d40d0b2cad07c989bc3", "patch": "@@ -291,12 +291,10 @@ package Ada.Containers.Ordered_Sets is\n          Old_Key   : Key_Access;\n       end record;\n \n-      overriding procedure\n-         Adjust (Control : in out Reference_Control_Type);\n+      overriding procedure Adjust (Control : in out Reference_Control_Type);\n       pragma Inline (Adjust);\n \n-      overriding procedure\n-         Finalize (Control : in out Reference_Control_Type);\n+      overriding procedure Finalize (Control : in out Reference_Control_Type);\n       pragma Inline (Finalize);\n \n       type Reference_Type (Element : not null access Element_Type) is record"}, {"sha": "e0ef9b22fb5d39372a07f59fadf9cf2b69d41e92", "filename": "gcc/ada/a-tasatt.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facfa16502ba988917c46d40d0b2cad07c989bc3/gcc%2Fada%2Fa-tasatt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facfa16502ba988917c46d40d0b2cad07c989bc3/gcc%2Fada%2Fa-tasatt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tasatt.adb?ref=facfa16502ba988917c46d40d0b2cad07c989bc3", "patch": "@@ -106,8 +106,8 @@ package body Ada.Task_Attributes is\n \n    pragma Warnings (On);\n \n-   function To_Task_Id is new Ada.Unchecked_Conversion\n-     (Task_Identification.Task_Id, Task_Id);\n+   function To_Task_Id is new\n+     Ada.Unchecked_Conversion (Task_Identification.Task_Id, Task_Id);\n    --  To access TCB of identified task\n \n    procedure Free is new\n@@ -119,8 +119,8 @@ package body Ada.Task_Attributes is\n                    and then To_Address (Initial_Value) = 0;\n    --  If the attribute fits in an Atomic_Address (both size and alignment)\n    --  and Initial_Value is 0 (or null), then we will map the attribute\n-   --  directly into ATCB.Attributes (Index), otherwise we will create a level\n-   --  of indirection and instead use Attributes (Index) as a\n+   --  directly into ATCB.Attributes (Index), otherwise we will create\n+   --  a level of indirection and instead use Attributes (Index) as a\n    --  Real_Attribute_Access.\n \n    Index : constant Integer :="}, {"sha": "70153fe493384eef75922fdc225e4492ddb4e7e6", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facfa16502ba988917c46d40d0b2cad07c989bc3/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facfa16502ba988917c46d40d0b2cad07c989bc3/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=facfa16502ba988917c46d40d0b2cad07c989bc3", "patch": "@@ -7364,10 +7364,10 @@ package body Exp_Ch4 is\n \n                if Comes_From_Source (N) then\n                   Error_Msg_N\n-                    (\"??Unchecked_Union discriminants cannot be determined\",\n+                    (\"Unchecked_Union discriminants cannot be determined??\",\n                      N);\n                   Error_Msg_N\n-                    (\"\\Program_Error will be raised for equality operation\",\n+                    (\"\\Program_Error will be raised for equality operation??\",\n                      N);\n                end if;\n "}, {"sha": "a856ad716dcd3c565e137615e83b8c6dbee02e22", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/facfa16502ba988917c46d40d0b2cad07c989bc3/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/facfa16502ba988917c46d40d0b2cad07c989bc3/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=facfa16502ba988917c46d40d0b2cad07c989bc3", "patch": "@@ -1940,8 +1940,8 @@ package body Inline is\n \n          function Has_Single_Return_In_GNATprove_Mode return Boolean;\n          --  This function is called only in GNATprove mode, and it returns\n-         --  True if the subprogram has no or a single return statement as\n-         --  last statement.\n+         --  True if the subprogram has no return statement or a single return\n+         --  statement as last statement.\n \n          function Returns_Compile_Time_Constant (N : Node_Id) return Boolean;\n          --  Return True if all the return statements of the function body N"}]}