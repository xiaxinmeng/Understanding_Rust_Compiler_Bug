{"sha": "41683e1a62f06f2791c9651d739cc69a5a60b07e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE2ODNlMWE2MmYwNmYyNzkxYzk2NTFkNzM5Y2M2OWE1YTYwYjA3ZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-10-10T10:09:13Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-10-10T10:09:13Z"}, "message": "decl.c (gnat_to_gnu_entity): Put volatile qualifier on types at the very end of the processing.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity): Put volatile qualifier\n\ton types at the very end of the processing.\n\t(gnat_to_gnu_param): Remove redundant test.\n\t(change_qualified_type): Do nothing for unconstrained array types.\n\nFrom-SVN: r240915", "tree": {"sha": "58d6af9e18050531b9e5b4a6ea7aad9bc2fb0f39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58d6af9e18050531b9e5b4a6ea7aad9bc2fb0f39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41683e1a62f06f2791c9651d739cc69a5a60b07e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41683e1a62f06f2791c9651d739cc69a5a60b07e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41683e1a62f06f2791c9651d739cc69a5a60b07e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41683e1a62f06f2791c9651d739cc69a5a60b07e/comments", "author": null, "committer": null, "parents": [{"sha": "036a2fa23eae8f57d860bb5e0faf2551e5f3fed4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/036a2fa23eae8f57d860bb5e0faf2551e5f3fed4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/036a2fa23eae8f57d860bb5e0faf2551e5f3fed4"}], "stats": {"total": 54, "additions": 40, "deletions": 14}, "files": [{"sha": "c324b85b3b8587f8065195653e8f0c6398a49bfb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41683e1a62f06f2791c9651d739cc69a5a60b07e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41683e1a62f06f2791c9651d739cc69a5a60b07e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=41683e1a62f06f2791c9651d739cc69a5a60b07e", "patch": "@@ -1,3 +1,10 @@\n+2016-10-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity): Put volatile qualifier\n+\ton types at the very end of the processing.\n+\t(gnat_to_gnu_param): Remove redundant test.\n+\t(change_qualified_type): Do nothing for unconstrained array types.\n+\n 2016-10-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/utils2.c (find_common_type): Do not return the LHS type"}, {"sha": "0d45392a0b37d710b84d3f427438840f12e7ec1a", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41683e1a62f06f2791c9651d739cc69a5a60b07e/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41683e1a62f06f2791c9651d739cc69a5a60b07e/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=41683e1a62f06f2791c9651d739cc69a5a60b07e", "patch": "@@ -4728,14 +4728,6 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \t      && AGGREGATE_TYPE_P (gnu_type)\n \t      && TYPE_BY_REFERENCE_P (gnu_type))\n \t    SET_TYPE_MODE (gnu_type, BLKmode);\n-\n-\t  if (Treat_As_Volatile (gnat_entity))\n-\t    {\n-\t      const int quals\n-\t\t= TYPE_QUAL_VOLATILE\n-\t\t  | (Is_Atomic_Or_VFA (gnat_entity) ? TYPE_QUAL_ATOMIC : 0);\n-\t      gnu_type = change_qualified_type (gnu_type, quals);\n-\t    }\n \t}\n \n       /* If this is a derived type, relate its alias set to that of its parent\n@@ -4816,6 +4808,14 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \t\t\t     ? ALIAS_SET_COPY : ALIAS_SET_SUPERSET);\n \t}\n \n+      if (Treat_As_Volatile (gnat_entity))\n+\t{\n+\t  const int quals\n+\t    = TYPE_QUAL_VOLATILE\n+\t      | (Is_Atomic_Or_VFA (gnat_entity) ? TYPE_QUAL_ATOMIC : 0);\n+\t  gnu_type = change_qualified_type (gnu_type, quals);\n+\t}\n+\n       if (!gnu_decl)\n \tgnu_decl = create_type_decl (gnu_entity_name, gnu_type,\n \t\t\t\t     artificial_p, debug_info_p,\n@@ -5386,12 +5386,9 @@ gnat_to_gnu_param (Entity_Id gnat_param, tree gnu_param_type, bool first,\n     }\n \n   /* If this is a read-only parameter, make a variant of the type that is\n-     read-only.  ??? However, if this is an unconstrained array, that type\n-     can be very complex, so skip it for now.  Likewise for any other\n-     self-referential type.  */\n-  if (ro_param\n-      && TREE_CODE (gnu_param_type) != UNCONSTRAINED_ARRAY_TYPE\n-      && !CONTAINS_PLACEHOLDER_P (TYPE_SIZE (gnu_param_type)))\n+     read-only.  ??? However, if this is a self-referential type, the type\n+     can be very complex, so skip it for now.  */\n+  if (ro_param && !CONTAINS_PLACEHOLDER_P (TYPE_SIZE (gnu_param_type)))\n     gnu_param_type = change_qualified_type (gnu_param_type, TYPE_QUAL_CONST);\n \n   /* For foreign conventions, pass arrays as pointers to the element type.\n@@ -6254,6 +6251,10 @@ gnu_ext_name_for_subprog (Entity_Id gnat_subprog, tree gnu_entity_name)\n static tree\n change_qualified_type (tree type, int type_quals)\n {\n+  /* Qualifiers must be put on the associated array type.  */\n+  if (TREE_CODE (type) == UNCONSTRAINED_ARRAY_TYPE)\n+    return type;\n+\n   return build_qualified_type (type, TYPE_QUALS (type) | type_quals);\n }\n "}, {"sha": "da295904afead24b79b2b2a998dcbe8c25832543", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41683e1a62f06f2791c9651d739cc69a5a60b07e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41683e1a62f06f2791c9651d739cc69a5a60b07e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=41683e1a62f06f2791c9651d739cc69a5a60b07e", "patch": "@@ -1,3 +1,7 @@\n+2016-10-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/specs/vfa.ads: New test.\n+\n 2016-10-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/inline13.ad[sb]: New test."}, {"sha": "a63be969d55a5e7984cb202c2067233b48877d53", "filename": "gcc/testsuite/gnat.dg/specs/vfa.ads", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41683e1a62f06f2791c9651d739cc69a5a60b07e/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fvfa.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41683e1a62f06f2791c9651d739cc69a5a60b07e/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fvfa.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Fvfa.ads?ref=41683e1a62f06f2791c9651d739cc69a5a60b07e", "patch": "@@ -0,0 +1,14 @@\n+-- { dg-do compile }\n+-- { dg-options \"-g\" }\n+\n+package VFA is\n+\n+  type Rec is record\n+    A : Short_Integer;\n+    B : Short_Integer;\n+  end record;\n+\n+  type Rec_VFA is new Rec;\n+  pragma Volatile_Full_Access (Rec_VFA);\n+\n+end VFA;"}]}