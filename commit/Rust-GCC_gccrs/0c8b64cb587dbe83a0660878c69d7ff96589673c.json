{"sha": "0c8b64cb587dbe83a0660878c69d7ff96589673c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM4YjY0Y2I1ODdkYmU4M2EwNjYwODc4YzY5ZDdmZjk2NTg5NjczYw==", "commit": {"author": {"name": "Ilya Enkovich", "email": "enkovich.gnu@gmail.com", "date": "2016-03-17T10:58:26Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2016-03-17T10:58:26Z"}, "message": "match.pd (A + (B vcmp C ? 1 : 0) -> A - (B vcmp C)): Apply for boolean vector with vector mode only.\n\ngcc/\n\n\t* match.pd (A + (B vcmp C ? 1 : 0) -> A - (B vcmp C)): Apply\n\tfor boolean vector with vector mode only.\n\t(A - (B vcmp C ? 1 : 0) -> A + (B vcmp C)): Likewise.\n\ngcc/testsuite/\n\n\t* gcc.target/i386/pr70251.c: New test.\n\nFrom-SVN: r234283", "tree": {"sha": "df813d10b32fa201cc0b67533f0f01f5bee67085", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df813d10b32fa201cc0b67533f0f01f5bee67085"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c8b64cb587dbe83a0660878c69d7ff96589673c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c8b64cb587dbe83a0660878c69d7ff96589673c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c8b64cb587dbe83a0660878c69d7ff96589673c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c8b64cb587dbe83a0660878c69d7ff96589673c/comments", "author": null, "committer": null, "parents": [{"sha": "a7ceba7d02ca7eb946aa99b6f97195cc5a4e5123", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7ceba7d02ca7eb946aa99b6f97195cc5a4e5123", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7ceba7d02ca7eb946aa99b6f97195cc5a4e5123"}], "stats": {"total": 64, "additions": 64, "deletions": 0}, "files": [{"sha": "78f4697b1336423507508a6627386cfbdbc798e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c8b64cb587dbe83a0660878c69d7ff96589673c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c8b64cb587dbe83a0660878c69d7ff96589673c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c8b64cb587dbe83a0660878c69d7ff96589673c", "patch": "@@ -1,3 +1,9 @@\n+2016-03-17  Ilya Enkovich  <enkovich.gnu@gmail.com>\n+\n+\t* match.pd (A + (B vcmp C ? 1 : 0) -> A - (B vcmp C)): Apply\n+\tfor boolean vector with vector mode only.\n+\t(A - (B vcmp C ? 1 : 0) -> A + (B vcmp C)): Likewise.\n+\n 2016-03-17  Nick Clifton  <nickc@redhat.com>\n \n \tPR target/70162"}, {"sha": "7245ff4bb2fa1df7099ddff35ef1d7a5c0eaea46", "filename": "gcc/match.pd", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c8b64cb587dbe83a0660878c69d7ff96589673c/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c8b64cb587dbe83a0660878c69d7ff96589673c/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=0c8b64cb587dbe83a0660878c69d7ff96589673c", "patch": "@@ -1759,6 +1759,7 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n (simplify\n  (plus:c @3 (view_convert? (vec_cond @0 integer_each_onep@1 integer_zerop@2)))\n  (if (VECTOR_TYPE_P (type)\n+      && VECTOR_MODE_P (TYPE_MODE (TREE_TYPE (@0)))\n       && TYPE_VECTOR_SUBPARTS (type) == TYPE_VECTOR_SUBPARTS (TREE_TYPE (@0))\n       && (TYPE_MODE (TREE_TYPE (type))\n           == TYPE_MODE (TREE_TYPE (TREE_TYPE (@0)))))\n@@ -1768,6 +1769,7 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n (simplify\n  (minus @3 (view_convert? (vec_cond @0 integer_each_onep@1 integer_zerop@2)))\n  (if (VECTOR_TYPE_P (type)\n+      && VECTOR_MODE_P (TYPE_MODE (TREE_TYPE (@0)))\n       && TYPE_VECTOR_SUBPARTS (type) == TYPE_VECTOR_SUBPARTS (TREE_TYPE (@0))\n       && (TYPE_MODE (TREE_TYPE (type))\n           == TYPE_MODE (TREE_TYPE (TREE_TYPE (@0)))))"}, {"sha": "d305b0f5900a3984e83d2308d324b97c3f2e9059", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c8b64cb587dbe83a0660878c69d7ff96589673c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c8b64cb587dbe83a0660878c69d7ff96589673c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0c8b64cb587dbe83a0660878c69d7ff96589673c", "patch": "@@ -1,3 +1,7 @@\n+2016-03-17  Ilya Enkovich  <enkovich.gnu@gmail.com>\n+\n+\t* gcc.target/i386/pr70251.c: New test.\n+\n 2016-03-17  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/70194"}, {"sha": "97078cd4795e3e9c66a43dd3ac644291c643f4ec", "filename": "gcc/testsuite/gcc.target/i386/pr70251.c", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c8b64cb587dbe83a0660878c69d7ff96589673c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70251.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c8b64cb587dbe83a0660878c69d7ff96589673c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70251.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70251.c?ref=0c8b64cb587dbe83a0660878c69d7ff96589673c", "patch": "@@ -0,0 +1,52 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3 -mavx512bw\" } */\n+/* { dg-require-effective-target avx512bw } */\n+\n+#define AVX512BW\n+#include \"avx512f-helper.h\"\n+\n+unsigned long long int\n+hash(unsigned long long int seed, unsigned long long int v)\n+{\n+  return seed ^ (v + 0x9e3779b9 + (seed<<6) + (seed>>2));\n+}\n+\n+unsigned int a [100];\n+signed char b [100];\n+signed char c [100];\n+\n+void\n+init ()\n+{\n+  for (int i = 0; i < 100; ++i)\n+    {\n+      a [i] = 1000L;\n+      b [i] = 10;\n+      c [i] = 5;\n+    }\n+}\n+\n+void\n+foo ()\n+{\n+  for (int i = 0; i < 100; ++i)\n+    b [i] = (!b [i] ^ (a [i] >= b [i])) + c [i];\n+}\n+\n+unsigned long long int\n+checksum ()\n+{\n+  unsigned long long int seed = 0ULL;\n+  for (int i = 0; i < 100; ++i)\n+    seed = hash (seed, b[i]);\n+  return seed;\n+}\n+\n+void\n+TEST ()\n+{\n+  init ();\n+  foo ();\n+  if (checksum () != 5785906989299578598ULL)\n+    __builtin_abort ();\n+}"}]}