{"sha": "163674a7f1a3bbc38a699dee6b2438afbd9313bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTYzNjc0YTdmMWEzYmJjMzhhNjk5ZGVlNmIyNDM4YWZiZDkzMTNiYw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-05T07:52:37Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-05T07:52:37Z"}, "message": "(record_initial): Reject insns that store into subregs.\n\nFrom-SVN: r4632", "tree": {"sha": "971789913ea661ec8f3163fb4f5b93bbbb90fcc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/971789913ea661ec8f3163fb4f5b93bbbb90fcc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/163674a7f1a3bbc38a699dee6b2438afbd9313bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/163674a7f1a3bbc38a699dee6b2438afbd9313bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/163674a7f1a3bbc38a699dee6b2438afbd9313bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/163674a7f1a3bbc38a699dee6b2438afbd9313bc/comments", "author": null, "committer": null, "parents": [{"sha": "1cd88c716e9e71672859051a4a1aeac24863d525", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cd88c716e9e71672859051a4a1aeac24863d525", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cd88c716e9e71672859051a4a1aeac24863d525"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "84a6fdf51cc9ea94a20781603674e96e642aa619", "filename": "gcc/loop.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/163674a7f1a3bbc38a699dee6b2438afbd9313bc/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/163674a7f1a3bbc38a699dee6b2438afbd9313bc/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=163674a7f1a3bbc38a699dee6b2438afbd9313bc", "patch": "@@ -6200,7 +6200,9 @@ record_initial (dest, set)\n \n   if (GET_CODE (dest) != REG\n       || REGNO (dest) >= max_reg_before_loop\n-      || reg_iv_type[REGNO (dest)] != BASIC_INDUCT)\n+      || reg_iv_type[REGNO (dest)] != BASIC_INDUCT\n+      /* Reject this insn if the source isn't valid for the mode of DEST.  */\n+      || GET_MODE (dest) != GET_MODE (SET_DEST (set)))\n     return;\n \n   bl = reg_biv_class[REGNO (dest)];"}]}