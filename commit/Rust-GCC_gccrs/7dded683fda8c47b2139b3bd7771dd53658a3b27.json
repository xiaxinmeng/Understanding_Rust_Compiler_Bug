{"sha": "7dded683fda8c47b2139b3bd7771dd53658a3b27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RkZWQ2ODNmZGE4YzQ3YjIxMzliM2JkNzc3MWRkNTM2NThhM2IyNw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-09-22T20:10:52Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-09-22T20:10:52Z"}, "message": "sourcebuild.texi: Document dg-add-options mips16_attribute.\n\ngcc/\n\t* doc/sourcebuild.texi: Document dg-add-options mips16_attribute.\n\ngcc/testsuite/\n\t* lib/target-supports.exp (add_options_for_mips16_attribute)\n\t(check_effective_target_mips16_attribute): New functions.\n\t* gcc.target/mips/mips.exp: Define MIPS16 and NOMIPS16 on the\n\tcommand line.\n\t(dg-mips-options) Remove -mno-mips16 handling.  Add options to\n\textra_test_flags.\n\t* gcc.target/mips/asm-1.c (NOMIPS16): Delete.\n\t* gcc.target/mips/atomic-memory-1.c (NOMIPS16): Likewise.\n\t* gcc.target/mips/atomic-memory-2.c (NOMIPS16): Likewise.\n\t* gcc.target/mips/branch-1.c (NOMIPS16): Likewise.\n\t* gcc.target/mips/dspr2-MULT.c (NOMIPS16): Likewise.\n\t* gcc.target/mips/dspr2-MULTU.c (NOMIPS16): Likewise.\n\t* gcc.target/mips/fpcmp-1.c (NOMIPS16): Likewise.\n\t* gcc.target/mips/fpcmp-2.c (NOMIPS16): Likewise.\n\t* gcc.target/mips/ins-1.c (NOMIPS16): Likewise.\n\t* gcc.target/mips/madd-3.c (NOMIPS16): Likewise.\n\t* gcc.target/mips/maddu-3.c (NOMIPS16): Likewise.\n\t* gcc.target/mips/mips32-dsp-run.c (NOMIPS16): Likewise.\n\t* gcc.target/mips/mips32-dspr2-type.c (NOMIPS16): Likewise.\n\t* gcc.target/mips/msub-3.c (NOMIPS16): Likewise.\n\t* gcc.target/mips/msubu-3.c (NOMIPS16): Likewise.\n\t* gcc.target/mips/near-far-3.c (NOMIPS16): Likewise.\n\t* gcc.target/mips/near-far-4.c (NOMIPS16): Likewise.\n\t* gcc.target/mips/neg-abs-1.c (NOMIPS16): Likewise.\n\t* gcc.target/mips/smartmips-lwxs.c (NOMIPS16): Likewise.\n\t* gcc.target/mips/smartmips-ror-1.c (NOMIPS16): Likewise.\n\t* gcc.target/mips/smartmips-ror-2.c (NOMIPS16): Likewise.\n\t* gcc.target/mips/smartmips-ror-3.c (NOMIPS16): Likewise.\n\t* gcc.target/mips/smartmips-ror-4.c (NOMIPS16): Likewise.\n\t* gcc.target/mips/pr26765.c: Use dg-mips-options instead of dg-options.\n\t(NOMIPS16): Delete.\n\t* gcc.target/mips/20020620-1.c: Use dg-mips-options instead\n\tof dg-options.\n\t* gcc.target/mips/call-saved-1.c: Remove -mips16 and -mno-abicalls\n\toptions.  Require { target mips16_attribute } and use dg-add-options\n\tto add the associated options.\n\t(foo): Use MIPS16.\n\t* gcc.target/mips/call-saved-2.c: As for call-saved-1.c.\n\t* gcc.target/mips/call-saved-3.c: Likewise.\n\t* gcc.target/mips/code-readable-1.c: Require { target\n\tmips16_attribute } and use dg-add-options to add the associated\n\toptions.  Remove trailing whitespace.\n\t(NOMIPS16): Delete.\n\t* gcc.target/mips/code-readable-2.c: Likewise.\n\t* gcc.target/mips/code-readable-3.c: Likewise.\n\t* gcc.target/mips/mips16-attributes-2.c: Likewise.\n\t* gcc.target/mips/mips16e-extends.c: Remove -mips16 option.\n\tRequire { target mips16_attribute } and use dg-add-options to\n\tadd the associated options.\n\t(cksum16, cksum8): Use MIPS16.\n\t* gcc.target/mips/save-restore-1.c: Remove -mips16 option.\n\tRequire { target mips16_attribute } and use dg-add-options to\n\tadd the associated options.\n\t(foo): Use MIPS16.\n\t* gcc.target/mips/save-restore-2.c: Likewise.\n\t* gcc.target/mips/save-restore-3.c: Likewise.\n\t* gcc.target/mips/save-restore-4.c: Likewise.\n\t* gcc.target/mips/save-restore-5.c: Likewise.  Also remove\n\t-mno-abicalls.\n\t* gcc.target/mips/mips-sched-madd.c: Remove -mno-mips16.\n\t(foo): Use NOMIPS16.\n\nFrom-SVN: r128674", "tree": {"sha": "f67aef60b2bcdf686cfcf7cea3028051ee7c0bcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f67aef60b2bcdf686cfcf7cea3028051ee7c0bcb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7dded683fda8c47b2139b3bd7771dd53658a3b27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dded683fda8c47b2139b3bd7771dd53658a3b27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dded683fda8c47b2139b3bd7771dd53658a3b27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dded683fda8c47b2139b3bd7771dd53658a3b27/comments", "author": null, "committer": null, "parents": [{"sha": "d8eff1b8e4ca36200a7f01c233317dad63888727", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8eff1b8e4ca36200a7f01c233317dad63888727", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8eff1b8e4ca36200a7f01c233317dad63888727"}], "stats": {"total": 240, "additions": 150, "deletions": 90}, "files": [{"sha": "85934036f35792cb6dd7a97064ab66e1ae191e16", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,3 +1,7 @@\n+2007-09-22  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* doc/sourcebuild.texi: Document dg-add-options mips16_attribute.\n+\n 2007-09-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree-inline.c (remap_type_1): Correctly chain variants."}, {"sha": "6f6dcd01e9024a5dde40004ee6a0813042003023", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -983,6 +983,10 @@ The supported values of @var{feature} are:\n @table @code\n @item c99_runtime\n The target's C99 runtime (both headers and libraries).\n+\n+@item mips16_attribute\n+@code{mips16} function attributes.  Only MIPS targets support this feature,\n+and only then in certain modes.\n @end table\n \n @item @{ dg-skip-if @var{comment} @{ @var{selector} @} @{ @var{include-opts} @} @{ @var{exclude-opts} @} @}"}, {"sha": "0dd4f60088c21a6a9c9c7cc37f4f3ae5497fb2ed", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,3 +1,67 @@\n+2007-09-22  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* lib/target-supports.exp (add_options_for_mips16_attribute)\n+\t(check_effective_target_mips16_attribute): New functions.\n+\t* gcc.target/mips/mips.exp: Define MIPS16 and NOMIPS16 on the\n+\tcommand line.\n+\t(dg-mips-options) Remove -mno-mips16 handling.  Add options to\n+\textra_test_flags.\n+\t* gcc.target/mips/asm-1.c (NOMIPS16): Delete.\n+\t* gcc.target/mips/atomic-memory-1.c (NOMIPS16): Likewise.\n+\t* gcc.target/mips/atomic-memory-2.c (NOMIPS16): Likewise.\n+\t* gcc.target/mips/branch-1.c (NOMIPS16): Likewise.\n+\t* gcc.target/mips/dspr2-MULT.c (NOMIPS16): Likewise.\n+\t* gcc.target/mips/dspr2-MULTU.c (NOMIPS16): Likewise.\n+\t* gcc.target/mips/fpcmp-1.c (NOMIPS16): Likewise.\n+\t* gcc.target/mips/fpcmp-2.c (NOMIPS16): Likewise.\n+\t* gcc.target/mips/ins-1.c (NOMIPS16): Likewise.\n+\t* gcc.target/mips/madd-3.c (NOMIPS16): Likewise.\n+\t* gcc.target/mips/maddu-3.c (NOMIPS16): Likewise.\n+\t* gcc.target/mips/mips32-dsp-run.c (NOMIPS16): Likewise.\n+\t* gcc.target/mips/mips32-dspr2-type.c (NOMIPS16): Likewise.\n+\t* gcc.target/mips/msub-3.c (NOMIPS16): Likewise.\n+\t* gcc.target/mips/msubu-3.c (NOMIPS16): Likewise.\n+\t* gcc.target/mips/near-far-3.c (NOMIPS16): Likewise.\n+\t* gcc.target/mips/near-far-4.c (NOMIPS16): Likewise.\n+\t* gcc.target/mips/neg-abs-1.c (NOMIPS16): Likewise.\n+\t* gcc.target/mips/smartmips-lwxs.c (NOMIPS16): Likewise.\n+\t* gcc.target/mips/smartmips-ror-1.c (NOMIPS16): Likewise.\n+\t* gcc.target/mips/smartmips-ror-2.c (NOMIPS16): Likewise.\n+\t* gcc.target/mips/smartmips-ror-3.c (NOMIPS16): Likewise.\n+\t* gcc.target/mips/smartmips-ror-4.c (NOMIPS16): Likewise.\n+\t* gcc.target/mips/pr26765.c: Use dg-mips-options instead of dg-options.\n+\t(NOMIPS16): Delete.\n+\t* gcc.target/mips/20020620-1.c: Use dg-mips-options instead\n+\tof dg-options.\n+\t* gcc.target/mips/call-saved-1.c: Remove -mips16 and -mno-abicalls\n+\toptions.  Require { target mips16_attribute } and use dg-add-options\n+\tto add the associated options.\n+\t(foo): Use MIPS16.\n+\t* gcc.target/mips/call-saved-2.c: As for call-saved-1.c.\n+\t* gcc.target/mips/call-saved-3.c: Likewise.\n+\t* gcc.target/mips/code-readable-1.c: Require { target\n+\tmips16_attribute } and use dg-add-options to add the associated\n+\toptions.  Remove trailing whitespace.\n+\t(NOMIPS16): Delete.\n+\t* gcc.target/mips/code-readable-2.c: Likewise.\n+\t* gcc.target/mips/code-readable-3.c: Likewise.\n+\t* gcc.target/mips/mips16-attributes-2.c: Likewise.\n+\t* gcc.target/mips/mips16e-extends.c: Remove -mips16 option.\n+\tRequire { target mips16_attribute } and use dg-add-options to\n+\tadd the associated options.\n+\t(cksum16, cksum8): Use MIPS16.\n+\t* gcc.target/mips/save-restore-1.c: Remove -mips16 option.\n+\tRequire { target mips16_attribute } and use dg-add-options to\n+\tadd the associated options.\n+\t(foo): Use MIPS16.\n+\t* gcc.target/mips/save-restore-2.c: Likewise.\n+\t* gcc.target/mips/save-restore-3.c: Likewise.\n+\t* gcc.target/mips/save-restore-4.c: Likewise.\n+\t* gcc.target/mips/save-restore-5.c: Likewise.  Also remove\n+\t-mno-abicalls.\n+\t* gcc.target/mips/mips-sched-madd.c: Remove -mno-mips16.\n+\t(foo): Use NOMIPS16.\n+\n 2007-09-22  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/33337"}, {"sha": "f4828f439e7d43598438529cbecba7809f11e6bf", "filename": "gcc/testsuite/gcc.target/mips/20020620-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2F20020620-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2F20020620-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2F20020620-1.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target mips64*-*-* mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -mlong64\" } */\n+/* { dg-mips-options \"-O2 -mlong64\" } */\n int foo (int *x, int i)\n {\n   return x[i] + i;"}, {"sha": "ab5d8f8c480402e9b3f0cc2749b3b262d2179a8b", "filename": "gcc/testsuite/gcc.target/mips/asm-1.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fasm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fasm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fasm-1.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -3,8 +3,6 @@\n /* { dg-do assemble } */\n /* { dg-mips-options \"-O\" } */\n \n-#define NOMIPS16 __attribute__ ((nomips16)) \n-\n NOMIPS16 int foo (int n)\n {\n   register int k asm (\"$16\") = n;"}, {"sha": "e9a95eaa4fc4751c6bb8751f4fded35644bdc409", "filename": "gcc/testsuite/gcc.target/mips/atomic-memory-1.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fatomic-memory-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fatomic-memory-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fatomic-memory-1.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -2,8 +2,6 @@\n extern void abort (void);\n extern void exit (int);\n \n-#define NOMIPS16 __attribute__ ((nomips16))\n-\n NOMIPS16 int main ()\n {\n #ifdef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4"}, {"sha": "34214e4476a85c13ae38b4b4161dfdb33f14784d", "filename": "gcc/testsuite/gcc.target/mips/atomic-memory-2.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fatomic-memory-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fatomic-memory-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fatomic-memory-2.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -3,8 +3,6 @@\n /* { dg-final { scan-assembler \"addiu\" } } */\n /* { dg-final { scan-assembler-not \"subu\" } } */\n \n-#define NOMIPS16 __attribute__ ((nomips16))\n-\n NOMIPS16 unsigned long\n f(unsigned long *p)\n {"}, {"sha": "8c991dd9ff1e461fae2d5de523e1bf6ba196ddbb", "filename": "gcc/testsuite/gcc.target/mips/branch-1.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fbranch-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fbranch-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fbranch-1.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -2,8 +2,6 @@\n    followed by a branch on zero.  */\n /* { dg-mips-options \"-O2\" } */\n \n-#define NOMIPS16 __attribute__ ((nomips16)) \n-\n void bar (void);\n NOMIPS16 void f1 (int x) { if (x & 4) bar (); }\n NOMIPS16 void f2 (int x) { if ((x >> 2) & 1) bar (); }"}, {"sha": "42d2dfbfadad4d1405d2b5cf641a129c09d27995", "filename": "gcc/testsuite/gcc.target/mips/call-saved-1.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcall-saved-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcall-saved-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcall-saved-1.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,9 +1,12 @@\n /* Check that we save all call-saved GPRs in a MIPS16 __builtin_eh_return\n    function.  */\n-/* { dg-mips-options \"-mips2 -mips16 -mno-abicalls\" } */\n+/* { dg-do compile { target mips16_attribute } } */\n+/* { dg-mips-options \"-mips2\" } */\n+/* { dg-add-options mips16_attribute } */\n \n void bar (void);\n-void\n+\n+MIPS16 void\n foo (int x)\n {\n   __builtin_unwind_init ();"}, {"sha": "80ca92cf1a10e2b1050f449865746329e4ccdd4e", "filename": "gcc/testsuite/gcc.target/mips/call-saved-2.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcall-saved-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcall-saved-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcall-saved-2.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,7 +1,9 @@\n /* Check that we save non-MIPS16 GPRs if they are explicitly clobbered.  */\n-/* { dg-mips-options \"-mips2 -mips16 -mno-abicalls -O2\" } */\n+/* { dg-do compile { target mips16_attribute } } */\n+/* { dg-mips-options \"-mips2 -O2\" } */\n+/* { dg-add-options mips16_attribute } */\n \n-void\n+MIPS16 void\n foo (void)\n {\n   asm volatile (\"\" ::: \"$19\", \"$23\", \"$24\", \"$30\");"}, {"sha": "5f71c85ec4ab5dc1323ea775edf8de3b1bc33fc0", "filename": "gcc/testsuite/gcc.target/mips/call-saved-3.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcall-saved-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcall-saved-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcall-saved-3.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,10 +1,13 @@\n /* Check that we save all call-saved GPRs in a MIPS16 __builtin_setjmp\n    function.  */\n-/* { dg-mips-options \"-mips2 -mips16 -mno-abicalls -O2\" } */\n+/* { dg-do compile { target mips16_attribute } } */\n+/* { dg-mips-options \"-mips2 -O2\" } */\n+/* { dg-add-options mips16_attribute } */\n \n void bar (void);\n extern int buf[];\n-void\n+\n+MIPS16 void\n foo (int x)\n {\n   if (__builtin_setjmp (buf) == 0)"}, {"sha": "7a58457d9294fe6fa03c7d24a2ce993267afbe2e", "filename": "gcc/testsuite/gcc.target/mips/code-readable-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcode-readable-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcode-readable-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcode-readable-1.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,8 +1,8 @@\n+/* { dg-do compile { target mips16_attribute } } */\n /* { dg-mips-options \"-mcode-readable=yes -mgp32\" } */\n+/* { dg-add-options mips16_attribute } */\n \n-#define MIPS16 __attribute__ ((mips16)) \n-\n-MIPS16 int \n+MIPS16 int\n foo (int i)\n {\n   switch (i)"}, {"sha": "18a1218eb388beaa9529c8886a75174187086598", "filename": "gcc/testsuite/gcc.target/mips/code-readable-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcode-readable-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcode-readable-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcode-readable-2.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,6 +1,6 @@\n+/* { dg-do compile { target mips16_attribute } } */\n /* { dg-mips-options \"-mcode-readable=pcrel -mgp32\" } */\n-\n-#define MIPS16 __attribute__ ((mips16))\n+/* { dg-add-options mips16_attribute } */\n \n MIPS16 int\n foo (int i)"}, {"sha": "5afa136c1c5f86a29035d404d7b6e0c61d5a0a62", "filename": "gcc/testsuite/gcc.target/mips/code-readable-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcode-readable-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcode-readable-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcode-readable-3.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,6 +1,6 @@\n+/* { dg-do compile { target mips16_attribute } } */\n /* { dg-mips-options \"-mcode-readable=no -mgp32\" } */\n-\n-#define MIPS16 __attribute__ ((mips16))\n+/* { dg-add-options mips16_attribute } */\n \n MIPS16 int\n foo (int i)"}, {"sha": "bc6f3cc10de37eddc42cd5fcbe883d7669d203e1", "filename": "gcc/testsuite/gcc.target/mips/dspr2-MULT.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdspr2-MULT.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdspr2-MULT.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdspr2-MULT.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -7,8 +7,6 @@\n /* { dg-final { scan-assembler \"ac2\" } } */\n /* { dg-final { scan-assembler \"ac3\" } } */\n \n-#define NOMIPS16 __attribute__ ((nomips16)) \n-\n typedef long long a64;\n a64 a[4];\n int b[4], c[4];"}, {"sha": "c6fef7eab78d68662f9561004004458e2a8727c1", "filename": "gcc/testsuite/gcc.target/mips/dspr2-MULTU.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdspr2-MULTU.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdspr2-MULTU.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdspr2-MULTU.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -7,8 +7,6 @@\n /* { dg-final { scan-assembler \"ac2\" } } */\n /* { dg-final { scan-assembler \"ac3\" } } */\n \n-#define NOMIPS16 __attribute__ ((nomips16)) \n-\n typedef long long a64;\n a64 a[4];\n unsigned int b[4], c[4];"}, {"sha": "19e66f96b7829e9764bdd9b3c19cec1a3e3f97a6", "filename": "gcc/testsuite/gcc.target/mips/fpcmp-1.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpcmp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpcmp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpcmp-1.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,7 +1,5 @@\n /* We used to use c.lt.fmt instead of c.ule.fmt here.  */\n /* { dg-mips-options \"-mhard-float -O2\" } */\n-#define NOMIPS16 __attribute__ ((nomips16))\n-\n NOMIPS16 int f1 (float x, float y) { return __builtin_isless (x, y); }\n NOMIPS16 int f2 (double x, double y) { return __builtin_isless (x, y); }\n /* { dg-final { scan-assembler \"c\\\\.ule\\\\.s\" } } */"}, {"sha": "9c1090bb4bac89f93ee8b3600ec82919be9a295a", "filename": "gcc/testsuite/gcc.target/mips/fpcmp-2.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpcmp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpcmp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpcmp-2.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,7 +1,5 @@\n /* We used to use c.le.fmt instead of c.ult.fmt here.  */\n /* { dg-mips-options \"-mhard-float -O2\" } */\n-#define NOMIPS16 __attribute__ ((nomips16))\n-\n NOMIPS16 int f1 (float x, float y) { return __builtin_islessequal (x, y); }\n NOMIPS16 int f2 (double x, double y) { return __builtin_islessequal (x, y); }\n /* { dg-final { scan-assembler \"c\\\\.ult\\\\.s\" } } */"}, {"sha": "77047af60b953e1ecbca185282f5835b360c9845", "filename": "gcc/testsuite/gcc.target/mips/ins-1.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fins-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fins-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fins-1.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -2,8 +2,6 @@\n /* { dg-mips-options \"-O -march=mips32r2\" } */\n /* { dg-final { scan-assembler \"\\tins\\t\" } } */\n \n-#define NOMIPS16 __attribute__ ((nomips16)) \n-\n struct\n {\n   unsigned int i : 2;"}, {"sha": "8526a5e18063326b563ea034e5e59634fe125c7f", "filename": "gcc/testsuite/gcc.target/mips/madd-3.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-3.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -2,8 +2,6 @@\n /* { dg-mips-options \"-O2 -mips32 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmadd\\t\" 3 } } */\n \n-#define NOMIPS16 __attribute__ ((nomips16)) \n-\n NOMIPS16 long long\n f1 (int x, int y, long long z)\n {"}, {"sha": "b3cc5105554da85a8b01d78751f270d7cb0f8130", "filename": "gcc/testsuite/gcc.target/mips/maddu-3.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-3.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -2,8 +2,6 @@\n /* { dg-mips-options \"-O2 -mips32 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmaddu\\t\" 3 } } */\n \n-#define NOMIPS16 __attribute__ ((nomips16)) \n-\n typedef unsigned int ui;\n typedef unsigned long long ull;\n "}, {"sha": "92f14e1f3bcff2c517c8613469c8df061d29f00e", "filename": "gcc/testsuite/gcc.target/mips/mips-sched-madd.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-sched-madd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-sched-madd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-sched-madd.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,9 +1,9 @@\n /* Test for case where another independent multiply insn may interfere\n    with a macc chain.  */\n /* { dg-do compile } */\n-/* { dg-mips-options \"-Os -march=24kf -mno-mips16\" } */\n+/* { dg-mips-options \"-Os -march=24kf\" } */\n \n-int foo (int a, int b, int c, int d, int e, int f, int g)\n+NOMIPS16 int foo (int a, int b, int c, int d, int e, int f, int g)\n {\n   int temp;\n   int acc;"}, {"sha": "0aaa2a7d9510d2946ab45d520c06e2bdfe47e0e2", "filename": "gcc/testsuite/gcc.target/mips/mips.exp", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -122,9 +122,6 @@ proc is_gp32_flag {flag} {\n #\tif the other flags don't do so.  Skip the test if the multilib\n #\tflags force a 32-bit ABI or a 32-bit architecture.\n #\n-#    -mno-mips16\n-#\tSkip the test for MIPS16 targets.\n-#\n #    -march=*\n #    -mips*\n #\tSelect the target architecture.  Skip the test for MIPS16 targets\n@@ -194,11 +191,7 @@ proc dg-mips-options {args} {\n     }\n     # Handle the other options.\n     foreach flag $flags {\n-\tif {$flag == \"-mno-mips16\"} {\n-\t    if {$mips_mips16} {\n-\t\tset matches 0\n-\t    }\n-\t} elseif {$flag == \"-mfp64\"} {\n+\tif {$flag == \"-mfp64\"} {\n \t    if {$mips_isa < 33 || $mips_float != \"hard\"} {\n \t\tset matches 0\n \t    }\n@@ -230,7 +223,7 @@ proc dg-mips-options {args} {\n \t}\n     }\n     if {$matches} {\n-\tset extra_tool_flags $flags\n+\tappend extra_tool_flags \" \" $flags\n     } else {\n \tset do_what [list [lindex $do_what 0] \"N\" \"P\"]\n     }\n@@ -239,5 +232,6 @@ proc dg-mips-options {args} {\n setup_mips_tests\n \n dg-init\n-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c]] \"\" \"\"\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c]] \"\" \\\n+    \"-DMIPS16=__attribute__((mips16)) -DNOMIPS16=__attribute__((nomips16))\"\n dg-finish"}, {"sha": "edab378c218138872080ddffa7816b6109783bd0", "filename": "gcc/testsuite/gcc.target/mips/mips16-attributes-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16-attributes-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16-attributes-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16-attributes-2.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,4 +1,6 @@\n+/* { dg-do compile { target mips16_attribute } } */\n /* { dg-skip-if \"\" { *-*-* } { \"-mflip-mips16\" } { \"\" } } */\n+/* { dg-add-options mips16_attribute } */\n \n void f1 (void);\n void __attribute__((mips16)) f1 (void) {} /* { dg-error \"conflicting\" } */"}, {"sha": "df43c415cd1b709939bd6f3db8a6bdcb55850fca", "filename": "gcc/testsuite/gcc.target/mips/mips16e-extends.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16e-extends.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16e-extends.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16e-extends.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,14 +1,15 @@\n-/* { dg-do compile } */\n-/* { dg-mips-options \"-Os -march=mips32 -mips16\" } */\n+/* { dg-do compile { target mips16_attribute } } */\n+/* { dg-mips-options \"-Os -march=mips32\" } */\n+/* { dg-add-options mips16_attribute } */\n \n-short cksum16 (unsigned long n)\n+MIPS16 short cksum16 (unsigned long n)\n {\n   unsigned long l;\n   l = validate (n, (n >> 16) + (n & 0xffff));\n   return l;\n }\n \n-signed char cksum8 (unsigned long n)\n+MIPS16 signed char cksum8 (unsigned long n)\n {\n   unsigned long l;\n   l = validate (n, (n >> 8) + (n & 0xff));"}, {"sha": "c82f68ee38f8cd72f68e26a95814a02048ecf0bf", "filename": "gcc/testsuite/gcc.target/mips/mips32-dsp-run.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp-run.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp-run.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp-run.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -2,8 +2,6 @@\n /* { dg-do run { target mipsisa32r2*-*-* } } */\n /* { dg-mips-options \"-march=mips32r2 -mdsp -O2\" } */\n \n-#define NOMIPS16 __attribute__ ((nomips16)) \n-\n #include <stdlib.h>\n #include <stdio.h>\n "}, {"sha": "5d231983b22b6eaa04191575b626260fa620aee0", "filename": "gcc/testsuite/gcc.target/mips/mips32-dspr2-type.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dspr2-type.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dspr2-type.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dspr2-type.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -3,8 +3,6 @@\n /* { dg-mips-options \"-march=mips32r2 -mdspr2\" } */\n /* { dg-final { scan-assembler \"\\tmul.ph\\t\" } } */\n \n-#define NOMIPS16 __attribute__ ((nomips16))\n-\n typedef short v2hi __attribute__ ((vector_size(4)));\n \n NOMIPS16 v2hi mul_v2hi (v2hi a, v2hi b)"}, {"sha": "97dccf2fd9724cb125d0292e69db54b0e3ea6fbf", "filename": "gcc/testsuite/gcc.target/mips/msub-3.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-3.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -2,8 +2,6 @@\n /* { dg-mips-options \"-O2 -mips32 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmsub\\t\" 2 } } */\n \n-#define NOMIPS16 __attribute__ ((nomips16))\n-\n NOMIPS16 long long\n f1 (int x, int y, long long z)\n {"}, {"sha": "ee5dd6a9cf902cdf460b51327921074908d3377e", "filename": "gcc/testsuite/gcc.target/mips/msubu-3.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-3.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -2,8 +2,6 @@\n /* { dg-mips-options \"-O2 -mips32 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmsubu\\t\" 2 } } */\n \n-#define NOMIPS16 __attribute__ ((nomips16)) \n-\n typedef unsigned int ui;\n typedef unsigned long long ull;\n "}, {"sha": "bde44e54366aff65d72af67a35a3c64ea7ee1624", "filename": "gcc/testsuite/gcc.target/mips/near-far-3.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnear-far-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnear-far-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnear-far-3.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -2,8 +2,6 @@\n /* { dg-mips-options \"-mlong-calls -O2\" } */\n /* { dg-require-effective-target nonpic } */\n \n-#define NOMIPS16 __attribute__ ((nomips16)) \n-\n NOMIPS16 extern int long_call_func () __attribute__((long_call));\n NOMIPS16 extern int far_func () __attribute__((far));\n NOMIPS16 extern int near_func () __attribute__((near));"}, {"sha": "f79216860bacf1f56d51e6fe5ef3a18ddaeb506f", "filename": "gcc/testsuite/gcc.target/mips/near-far-4.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnear-far-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnear-far-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnear-far-4.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -2,8 +2,6 @@\n /* { dg-mips-options \"-mno-long-calls -O2\" } */\n /* { dg-require-effective-target nonpic } */\n \n-#define NOMIPS16 __attribute__ ((nomips16)) \n-\n NOMIPS16 extern int long_call_func () __attribute__((long_call));\n NOMIPS16 extern int far_func () __attribute__((far));\n NOMIPS16 extern int near_func () __attribute__((near));"}, {"sha": "e5daa291af05ea0fb0fca00bd361d33f9e85f254", "filename": "gcc/testsuite/gcc.target/mips/neg-abs-1.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fneg-abs-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fneg-abs-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fneg-abs-1.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -7,8 +7,6 @@\n /* { dg-final { scan-assembler \"abs.s\" } } */\n /* { dg-final { scan-assembler \"abs.d\" } } */\n \n-#define NOMIPS16 __attribute__ ((nomips16))\n-\n NOMIPS16 float f1 (float f) { return -f; }\n NOMIPS16 float f2 (float f) { return __builtin_fabsf (f); }\n NOMIPS16 double d1 (double d) { return -d; }"}, {"sha": "bf90f2791749147d3d17c842a738d488f17fb57a", "filename": "gcc/testsuite/gcc.target/mips/pr26765.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr26765.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr26765.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr26765.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -2,12 +2,10 @@\n    This testcase used to trigger an unrecognizable insn.  */\n \n /* { dg-do compile } */\n-/* { dg-options \"-O2 -w\" } */\n+/* { dg-mips-options \"-O2 -w\" } */\n \n __thread int *a = 0;\n \n-#define NOMIPS16 __attribute__ ((nomips16))\n-\n NOMIPS16 void foo (void)\n {\n   extern int *b;"}, {"sha": "721d60122718fc849a5680c61ecf457c55d0a3ec", "filename": "gcc/testsuite/gcc.target/mips/save-restore-1.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-1.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,10 +1,13 @@\n /* Check that we can use the save instruction to save varargs.  */\n-/* { dg-mips-options \"-mips32r2 -mgp32 -mips16 -O2\" } */\n+/* { dg-do compile { target mips16_attribute } } */\n+/* { dg-mips-options \"-mips32r2 -mgp32 -O2\" } */\n+/* { dg-add-options mips16_attribute } */\n+\n #include <stdarg.h>\n \n int bar (int, va_list ap);\n \n-int\n+MIPS16 int\n foo (int n, ...)\n {\n   va_list ap;"}, {"sha": "b7f8c07e3c2bb8fb87cdc11b26b617d77efa4e56", "filename": "gcc/testsuite/gcc.target/mips/save-restore-2.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-2.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,6 +1,9 @@\n /* Check that we can use the save instruction to save spilled arguments.  */\n-/* { dg-mips-options \"-mips32r2 -mgp32 -mips16 -O2\" } */\n-void\n+/* { dg-do compile { target mips16_attribute } } */\n+/* { dg-mips-options \"-mips32r2 -mgp32 -O2\" } */\n+/* { dg-add-options mips16_attribute } */\n+\n+MIPS16 void\n foo (int *a, int b, int c)\n {\n   asm volatile (\"\" ::: \"$2\", \"$3\", \"$4\", \"$5\", \"$6\", \"$7\", \"$8\","}, {"sha": "18b871f830ab8be122eb3c185cb171e45733327a", "filename": "gcc/testsuite/gcc.target/mips/save-restore-3.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-3.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,9 +1,12 @@\n /* Check that we can use the save instruction to save spilled arguments\n    when the argument save area is out of range of a direct load or store.  */\n-/* { dg-mips-options \"-mips32r2 -mgp32 -mips16 -O2\" } */\n+/* { dg-do compile { target mips16_attribute } } */\n+/* { dg-mips-options \"-mips32r2 -mgp32 -O2\" } */\n+/* { dg-add-options mips16_attribute } */\n+\n void bar (int *);\n \n-void\n+MIPS16 void\n foo (int *a, int b, int c)\n {\n   int x[0x4000];"}, {"sha": "4a8f13634ed7636ddf16eff9f8fe58d8a2026e1e", "filename": "gcc/testsuite/gcc.target/mips/save-restore-4.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-4.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,7 +1,11 @@\n /* Check that we can use the save instruction to save $16, $17 and $31.  */\n-/* { dg-mips-options \"-mips32r2 -mgp32 -mips16 -O2\" } */\n+/* { dg-do compile { target mips16_attribute } } */\n+/* { dg-mips-options \"-mips32r2 -mgp32 -O2\" } */\n+/* { dg-add-options mips16_attribute } */\n+\n void bar (void);\n-void\n+\n+MIPS16 void\n foo (void)\n {\n   bar ();"}, {"sha": "a7e82ba144fd4159b6c8caae4c30a97a53db4cf3", "filename": "gcc/testsuite/gcc.target/mips/save-restore-5.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-5.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,11 +1,12 @@\n /* Check that we don't try to save the same register twice.  */\n-/* { dg-do assemble } */\n-/* { dg-mips-options \"-mips32r2 -mgp32 -mips16 -mno-abicalls -O2\" } */\n+/* { dg-do assemble { target mips16_attribute } } */\n+/* { dg-mips-options \"-mips32r2 -mgp32 -O2\" } */\n+/* { dg-add-options mips16_attribute } */\n \n int bar (int, int, int, int);\n void frob (void);\n \n-void\n+MIPS16 void\n foo (int a1, int a2, int a3, int a4)\n {\n   asm volatile (\"\" ::: \"$2\", \"$3\", \"$4\", \"$5\", \"$6\", \"$7\", \"$8\","}, {"sha": "17b2ddfefb36f85d0d585f53cd6970579bfddb52", "filename": "gcc/testsuite/gcc.target/mips/smartmips-lwxs.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-lwxs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-lwxs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-lwxs.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,8 +1,6 @@\n /* { dg-do compile } */\n /* { dg-mips-options \"-O -msmartmips\" } */\n \n-#define NOMIPS16 __attribute__ ((nomips16)) \n-\n NOMIPS16 int scaled_indexed_word_load (int a[], int b)\n {\n   return a[b];"}, {"sha": "c36964624f52c2358b612643fb8a2579d359fddb", "filename": "gcc/testsuite/gcc.target/mips/smartmips-ror-1.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-1.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,8 +1,6 @@\n /* { dg-do compile } */\n /* { dg-mips-options \"-O -msmartmips\" } */\n \n-#define NOMIPS16 __attribute__ ((nomips16)) \n-\n NOMIPS16 int rotate_left (unsigned a, unsigned s)\n {\n   return (a << s) | (a >> (32 - s));"}, {"sha": "73561c8b3c172a7c936a7ef190e3dc98fd7e93f7", "filename": "gcc/testsuite/gcc.target/mips/smartmips-ror-2.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-2.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,8 +1,6 @@\n /* { dg-do compile } */\n /* { dg-mips-options \"-O -msmartmips\" } */\n \n-#define NOMIPS16 __attribute__ ((nomips16)) \n-\n NOMIPS16 int rotate_right (unsigned a, unsigned s)\n {\n   return (a >> s) | (a << (32 - s));"}, {"sha": "dada19efc719068b825d8a97c41efcdfdc70ff29", "filename": "gcc/testsuite/gcc.target/mips/smartmips-ror-3.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-3.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,8 +1,6 @@\n /* { dg-do compile } */\n /* { dg-mips-options \"-O -msmartmips\" } */\n \n-#define NOMIPS16 __attribute__ ((nomips16)) \n-\n #define S 13\n \n NOMIPS16 int rotate_left_constant (unsigned a)"}, {"sha": "ee063614d7406c63f0593b770a7299aaa459993d", "filename": "gcc/testsuite/gcc.target/mips/smartmips-ror-4.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-4.c?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -1,8 +1,6 @@\n /* { dg-do compile } */\n /* { dg-mips-options \"-O -msmartmips\" } */\n \n-#define NOMIPS16 __attribute__ ((nomips16)) \n-\n #define S 13\n \n NOMIPS16 int rotate_right_constant (unsigned a)"}, {"sha": "c7c0ceeab74f26dd3f0b079cd8bb6476c696d98f", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dded683fda8c47b2139b3bd7771dd53658a3b27/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=7dded683fda8c47b2139b3bd7771dd53658a3b27", "patch": "@@ -625,6 +625,23 @@ proc check_effective_target_mips64 { } {\n     }]\n }\n \n+# Add the options needed for MIPS16 function attributes.  At the moment,\n+# we don't support MIPS16 PIC.\n+\n+proc add_options_for_mips16_attribute { flags } {\n+    return \"$flags -mno-abicalls -fno-pic\"\n+}\n+\n+# Return true if we can force a mode that allows MIPS16 code generation.\n+\n+proc check_effective_target_mips16_attribute { } {\n+    return [check_no_compiler_messages mips16_attribute assembly {\n+\t#if __PIC__\n+\t#error FOO\n+\t#endif\n+    } [add_options_for_mips16_attribute \"\"]]\n+}\n+\n # Return 1 if the current multilib does not generate PIC by default.\n \n proc check_effective_target_nonpic { } {"}]}