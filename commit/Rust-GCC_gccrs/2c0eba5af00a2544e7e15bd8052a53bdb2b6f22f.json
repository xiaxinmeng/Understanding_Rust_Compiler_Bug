{"sha": "2c0eba5af00a2544e7e15bd8052a53bdb2b6f22f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmMwZWJhNWFmMDBhMjU0NGU3ZTE1YmQ4MDUyYTUzYmRiMmI2ZjIyZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-04-22T21:57:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-04-22T21:57:52Z"}, "message": "re PR c/39855 (Shift optimization discards operands' side effects)\n\n\tPR c/39855\n\t* fold-const.c (fold_binary) <case LSHIFT_EXPR>: When optimizing\n\tinto 0, use omit_one_operand.\n\n\t* gcc.dg/torture/pr39855.c: New test.\n\nFrom-SVN: r146617", "tree": {"sha": "9490a0f1996cc98864effb946df615d1062f9693", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9490a0f1996cc98864effb946df615d1062f9693"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c0eba5af00a2544e7e15bd8052a53bdb2b6f22f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c0eba5af00a2544e7e15bd8052a53bdb2b6f22f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c0eba5af00a2544e7e15bd8052a53bdb2b6f22f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c0eba5af00a2544e7e15bd8052a53bdb2b6f22f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "023f059b5c168cb31e8818d2c983f5687b169df4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/023f059b5c168cb31e8818d2c983f5687b169df4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/023f059b5c168cb31e8818d2c983f5687b169df4"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "7bc4f330f6af56e0194bd7b779230d6401c71b10", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c0eba5af00a2544e7e15bd8052a53bdb2b6f22f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c0eba5af00a2544e7e15bd8052a53bdb2b6f22f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c0eba5af00a2544e7e15bd8052a53bdb2b6f22f", "patch": "@@ -3,6 +3,10 @@\n \t* alias.c (find_base_term): Move around LO_SUM case, so that\n \tCONST falls through into PLUS/MINUS handling.\n \n+\tPR c/39855\n+\t* fold-const.c (fold_binary) <case LSHIFT_EXPR>: When optimizing\n+\tinto 0, use omit_one_operand.\n+\n 2009-04-23  Ben Elliston  <bje@au.ibm.com>\n \n \t* config/rs6000/linux-unwind.h (get_regs): Remove type"}, {"sha": "f0ff5b69fc182c32823f95f4000d9cbe5bfd2de6", "filename": "gcc/fold-const.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c0eba5af00a2544e7e15bd8052a53bdb2b6f22f/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c0eba5af00a2544e7e15bd8052a53bdb2b6f22f/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=2c0eba5af00a2544e7e15bd8052a53bdb2b6f22f", "patch": "@@ -11880,7 +11880,8 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \t      if (code == LROTATE_EXPR || code == RROTATE_EXPR)\n \t        low = low % TYPE_PRECISION (type);\n \t      else if (TYPE_UNSIGNED (type) || code == LSHIFT_EXPR)\n-\t        return build_int_cst (type, 0);\n+\t\treturn omit_one_operand (type, build_int_cst (type, 0),\n+\t\t\t\t\t TREE_OPERAND (arg0, 0));\n \t      else\n \t\tlow = TYPE_PRECISION (type) - 1;\n \t    }"}, {"sha": "7af7fccfe0206ce6215f4c53c4f7f3c3ee7c0b36", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c0eba5af00a2544e7e15bd8052a53bdb2b6f22f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c0eba5af00a2544e7e15bd8052a53bdb2b6f22f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2c0eba5af00a2544e7e15bd8052a53bdb2b6f22f", "patch": "@@ -1,3 +1,8 @@\n+2009-04-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/39855\n+\t* gcc.dg/torture/pr39855.c: New test.\n+\n 2009-04-22  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/39639"}, {"sha": "6d75c38a907a7f2b5941bade58b988ea1b2f101f", "filename": "gcc/testsuite/gcc.dg/torture/pr39855.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c0eba5af00a2544e7e15bd8052a53bdb2b6f22f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr39855.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c0eba5af00a2544e7e15bd8052a53bdb2b6f22f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr39855.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr39855.c?ref=2c0eba5af00a2544e7e15bd8052a53bdb2b6f22f", "patch": "@@ -0,0 +1,24 @@\n+/* PR c/39855 */\n+/* { dg-do run { target { int32plus } } } */\n+\n+extern void abort (void);\n+\n+int i, j, k;\n+\n+int\n+foo (void)\n+{\n+  return ++i;\n+}\n+\n+int\n+main ()\n+{\n+  if (__CHAR_BIT__ != 8 || sizeof (int) != 4)\n+    return 0;\n+  j = foo () << 30 << 2;\n+  k = (unsigned) foo () >> 16 >> 16;\n+  if (i != 2 || j != 0 || k != 0)\n+    abort ();\n+  return 0;\n+}"}]}