{"sha": "e50b19cef333ab672a98a7b3a78f9d4f3f7b939e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUwYjE5Y2VmMzMzYWI2NzJhOThhN2IzYTc4ZjlkNGYzZjdiOTM5ZQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2002-06-24T16:25:30Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2002-06-24T16:25:30Z"}, "message": "changelog entry for generic simd patch\n\nFrom-SVN: r54956", "tree": {"sha": "8975e03a7c55fdd70199db21250655d43b71e0ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8975e03a7c55fdd70199db21250655d43b71e0ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e50b19cef333ab672a98a7b3a78f9d4f3f7b939e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e50b19cef333ab672a98a7b3a78f9d4f3f7b939e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e50b19cef333ab672a98a7b3a78f9d4f3f7b939e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e50b19cef333ab672a98a7b3a78f9d4f3f7b939e/comments", "author": null, "committer": null, "parents": [{"sha": "cad61762327f196e508c3adbbfcb4f1ab2b61a32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cad61762327f196e508c3adbbfcb4f1ab2b61a32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cad61762327f196e508c3adbbfcb4f1ab2b61a32"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "665473f358a5bc88408af3df97c6c3c6c9eed992", "filename": "gcc/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e50b19cef333ab672a98a7b3a78f9d4f3f7b939e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e50b19cef333ab672a98a7b3a78f9d4f3f7b939e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e50b19cef333ab672a98a7b3a78f9d4f3f7b939e", "patch": "@@ -353,6 +353,45 @@ Thu Jun 20 12:14:01 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.md (xorqi_1_slp, xorqi_2_slp): New patterns.\n \n+2002-06-16  Aldy Hernandez  <aldyh@redhat.com>\n+\t\n+\t* gcc.c-torture/execute/simd-1.c: New.\n+\n+\t* gcc.dg/simd-1.c: New.\n+\n+\t* doc/extend.texi (Vector Extensions): Document that we can\n+\tspecify simd types not specifically supported by the hardware.\n+\tDocument that simd types can be used as function arguments.\n+\tDocument that signness does make a difference in SIMD types.\n+\tMisc cleanups and revisions to the vector extensions section.\n+\n+\t* simplify-rtx.c (simplify_subreg): Simplify subregs of vector\n+\tconstants.\n+\n+\t* expr.c (vector_mode_valid_p): New.\n+\n+\t* expr.h: Add vector_mode_valid_p.\n+\n+\t* defaults.h (VECTOR_MODE_SUPPORTED_P): Set default.\n+\n+\t* c-common.c (type_for_mode): Always build vector nodes regardless\n+\tof VECTOR_MODE_SUPPORTED_P.\n+\t(handle_mode_attribute): Error if we can't emulate a nonexisting\n+\tvector mode.\n+\t(handle_vector_size_attribute): Same.\n+\n+\t* optabs.c (expand_binop): Open-code vector operations.\n+\t(expand_unop): Open-code vector unops.\n+\t(expand_vector_binop): New.\n+\t(expand_vector_unop): New.\n+\t\n+\t* c-typeck.c (build_binary_op): Allow vectors in binops.\n+\tAllow vectors in conditional operatiors.\n+\t(build_unary_op): Allow vectors in unary minus.\n+\n+\t* config/rs6000/rs6000.h (ALTIVEC_VECTOR_MODE): Conditionalize on\n+\tTARGET_ALTIVEC.\n+\n 2002-05-20  Richard Henderson  <rth@redhat.com>\n \n \t* c-common.c (c_common_get_alias_set): Correctly handle characters."}]}