{"sha": "53c87bfd9cb9ee6dd7c44daaabdea298913f033f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNjODdiZmQ5Y2I5ZWU2ZGQ3YzQ0ZGFhYWJkZWEyOTg5MTNmMDMzZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-04-13T19:34:53Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-04-13T19:34:53Z"}, "message": "(ASM_SPEC): Define.\n\n(STRUCT_VALUE_REGNUM, STATIC_CHAIN_REGNUM, INITIALIZE_TRAMPOLINE):\nRemove definitions, undoing the change of Mar 20 1996.\n\nFrom-SVN: r13894", "tree": {"sha": "46c83573b46efee9a8c971157c2e3746ac04dd62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46c83573b46efee9a8c971157c2e3746ac04dd62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53c87bfd9cb9ee6dd7c44daaabdea298913f033f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53c87bfd9cb9ee6dd7c44daaabdea298913f033f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53c87bfd9cb9ee6dd7c44daaabdea298913f033f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53c87bfd9cb9ee6dd7c44daaabdea298913f033f/comments", "author": null, "committer": null, "parents": [{"sha": "75ef7cf8dab2f3bc3996850f03e30e9fb2050a0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75ef7cf8dab2f3bc3996850f03e30e9fb2050a0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75ef7cf8dab2f3bc3996850f03e30e9fb2050a0d"}], "stats": {"total": 38, "additions": 7, "deletions": 31}, "files": [{"sha": "7e9641cb844043875d2db63644edd91717c47627", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 7, "deletions": 31, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53c87bfd9cb9ee6dd7c44daaabdea298913f033f/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53c87bfd9cb9ee6dd7c44daaabdea298913f033f/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=53c87bfd9cb9ee6dd7c44daaabdea298913f033f", "patch": "@@ -112,6 +112,13 @@ Boston, MA 02111-1307, USA.  */\n   \"%{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{m68881:-D__HAVE_68881__} %{posix:-D_POSIX_SOURCE}\"\n #endif\n \n+/* We override the ASM_SPEC from svr4.h because we must pass -m68040 down\n+   to the assembler.  */\n+#undef ASM_SPEC\n+#define ASM_SPEC \\\n+  \"%{v:-V} %{Qy:} %{!Qn:-Qy} %{n} %{T} %{Ym,*} %{Yd,*} %{Wa,*:%*} \\\n+%{m68040} %{m68060:-m68040}\"\n+\n /* Provide a LINK_SPEC appropriate for Linux.  Here we provide support\n    for the special GCC options -static and -shared, which allow us to\n    link things in one of these three modes by applying the appropriate\n@@ -199,19 +206,6 @@ Boston, MA 02111-1307, USA.  */\n     fprintf (FILE, \"\\tjbsr _mcount\\n\");\t\t\t\t\t\\\n }\n \n-/* Register in which address to store a structure value is passed to a\n-   function.  The default in m68k.h is a1.  For m68k/SVR4 it is a0. */\n-\n-#undef STRUCT_VALUE_REGNUM\n-#define STRUCT_VALUE_REGNUM 8\n-\n-/* Register in which static-chain is passed to a function.  The\n-   default in m68k.h is a0, but that is already the struct value\n-   regnum.  Make it a1 instead.  */\n-\n-#undef STATIC_CHAIN_REGNUM\n-#define STATIC_CHAIN_REGNUM 9\n-\n /* How to renumber registers for dbx and gdb.\n    On the Sun-3, the floating point registers have numbers\n    18 to 25, not 16 to 23 as they do in the compiler.  */\n@@ -306,24 +300,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n #undef PCC_STATIC_STRUCT_RETURN\n #define DEFAULT_PCC_STRUCT_RETURN 0\n \n-/* Emit RTL insns to initialize the variable parts of a trampoline.\n-   FNADDR is an RTX for the address of the function's pure code.\n-   CXT is an RTX for the static chain value for the function.  */\n-\n-/* This is different from the generic version in that we use a1 as the\n-   static call chain.  */\n-\n-#undef INITIALIZE_TRAMPOLINE\n-#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT)\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  emit_move_insn (gen_rtx (MEM, HImode, TRAMP), GEN_INT (0x227C));\t\\\n-  emit_move_insn (gen_rtx (MEM, SImode, plus_constant (TRAMP, 2)), CXT); \\\n-  emit_move_insn (gen_rtx (MEM, HImode, plus_constant (TRAMP, 6)),\t\\\n-\t\t  GEN_INT (0x4EF9));\t\t\t\t\t\\\n-  emit_move_insn (gen_rtx (MEM, SImode, plus_constant (TRAMP, 8)), FNADDR); \\\n-  FINALIZE_TRAMPOLINE (TRAMP);\t\t\t\t\t\t\\\n-}\n-\n /* Finalize the trampoline by flushing the insn cache.  */\n \n #undef FINALIZE_TRAMPOLINE"}]}