{"sha": "f66af4aa7fe664c2a2b3172b1a32002c6d5317f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY2YWY0YWE3ZmU2NjRjMmEyYjMxNzJiMWEzMjAwMmM2ZDUzMTdmOA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2014-12-12T20:11:10Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2014-12-12T20:11:10Z"}, "message": "re PR rtl-optimization/64110 (ICE: Max. number of generated reload insns per insn is achieved (90))\n\n2014-12-12  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR target/64110\n\t* lra-constraints.c (process_alt_operands): Refuse alternative\n\twhen reload pseudo of given class can not hold value of given\n\tmode.\n\n2014-12-12  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR target/64110\n\t* gcc.target/i386/pr64110.c: New.\n\nFrom-SVN: r218688", "tree": {"sha": "73a1ac6159c8150cb22eff72c59163fb46ebb19f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73a1ac6159c8150cb22eff72c59163fb46ebb19f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f66af4aa7fe664c2a2b3172b1a32002c6d5317f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f66af4aa7fe664c2a2b3172b1a32002c6d5317f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f66af4aa7fe664c2a2b3172b1a32002c6d5317f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f66af4aa7fe664c2a2b3172b1a32002c6d5317f8/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88c7eae209d973c8f7e72ba199e4153aef18992b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88c7eae209d973c8f7e72ba199e4153aef18992b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88c7eae209d973c8f7e72ba199e4153aef18992b"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "689c4fdd985ed172dad16656d231d3887f57532c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f66af4aa7fe664c2a2b3172b1a32002c6d5317f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f66af4aa7fe664c2a2b3172b1a32002c6d5317f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f66af4aa7fe664c2a2b3172b1a32002c6d5317f8", "patch": "@@ -1,3 +1,10 @@\n+2014-12-12  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/64110\n+\t* lra-constraints.c (process_alt_operands): Refuse alternative\n+\twhen reload pseudo of given class can not hold value of given\n+\tmode.\n+\n 2014-12-12  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* gimple-walk.c (walk_gimple_op) <GIMPLE_OMP_FOR>: Also check"}, {"sha": "e0d4c1950d7679f4ba904e69bb1a65c74b065adf", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f66af4aa7fe664c2a2b3172b1a32002c6d5317f8/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f66af4aa7fe664c2a2b3172b1a32002c6d5317f8/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=f66af4aa7fe664c2a2b3172b1a32002c6d5317f8", "patch": "@@ -2267,6 +2267,29 @@ process_alt_operands (int only_alternative)\n \t\t  goto fail;\n \t\t}\n \n+\t      /* Alternative loses if it required class pseudo can not\n+\t\t hold value of required mode.  Such insns can be\n+\t\t described by insn definitions with mode iterators.\n+\t\t Don't use ira_prohibited_class_mode_regs here as it\n+\t\t is common practice for constraints to use a class\n+\t\t which does not have actually enough regs to hold the\n+\t\t value (e.g. x86 AREG for mode requiring more one\n+\t\t general reg).  */\n+\t      if (GET_MODE (*curr_id->operand_loc[nop]) != VOIDmode\n+\t\t  && ! hard_reg_set_empty_p (this_alternative_set)\n+\t\t  && ! HARD_REGNO_MODE_OK (ira_class_hard_regs\n+\t\t\t\t\t   [this_alternative][0],\n+\t\t\t\t\t   GET_MODE (*curr_id->operand_loc[nop])))\n+\t\t{\n+\t\t  if (lra_dump_file != NULL)\n+\t\t    fprintf\n+\t\t      (lra_dump_file,\n+\t\t       \"            alt=%d: reload pseudo for op %d \"\n+\t\t       \" can not hold the mode value -- refuse\\n\",\n+\t\t       nalt, nop);\n+\t\t  goto fail;\n+\t\t}\n+\n \t      /* Check strong discouragement of reload of non-constant\n \t\t into class THIS_ALTERNATIVE.  */\n \t      if (! CONSTANT_P (op) && ! no_regs_p"}, {"sha": "d0796b640f6b95ab600a5f040ca08225f2aae231", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f66af4aa7fe664c2a2b3172b1a32002c6d5317f8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f66af4aa7fe664c2a2b3172b1a32002c6d5317f8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f66af4aa7fe664c2a2b3172b1a32002c6d5317f8", "patch": "@@ -1,3 +1,8 @@\n+2014-12-12  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/64110\n+\t* gcc.target/i386/pr64110.c: New.\n+\n 2014-12-12  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* c-c++-common/gomp/nesting-1.c: New file."}, {"sha": "84d884374cdc85003ecd00e48b1edfc138d27e88", "filename": "gcc/testsuite/gcc.target/i386/pr64110.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f66af4aa7fe664c2a2b3172b1a32002c6d5317f8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr64110.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f66af4aa7fe664c2a2b3172b1a32002c6d5317f8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr64110.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr64110.c?ref=f66af4aa7fe664c2a2b3172b1a32002c6d5317f8", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -march=core-avx2\" } */\n+\n+int foo (void);\n+int a;\n+short *b;\n+\n+void\n+bar (short x)\n+{\n+  while (a--)\n+    {\n+      int i, j = foo ();\n+      for (i = 0; i < j; ++i)\n+\t*b++ = x;\n+    }\n+}"}]}