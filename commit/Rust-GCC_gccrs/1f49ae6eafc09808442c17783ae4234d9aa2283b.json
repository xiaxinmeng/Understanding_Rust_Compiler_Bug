{"sha": "1f49ae6eafc09808442c17783ae4234d9aa2283b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY0OWFlNmVhZmMwOTgwODQ0MmMxNzc4M2FlNDIzNGQ5YWEyMjgzYg==", "commit": {"author": {"name": "Trevor Smigiel", "email": "Trevor_Smigiel@playstation.sony.com", "date": "2006-12-12T23:59:35Z"}, "committer": {"name": "Trevor Smigiel", "email": "tsmigiel@gcc.gnu.org", "date": "2006-12-12T23:59:35Z"}, "message": "spu.c (cpat_info): Fix an incorrectly identified case.\n\n\t* config/spu/spu.c (cpat_info): Fix an incorrectly identified case.\n\n\t* gcc.target/spu/cpat-1.c: New test.\n\t* gcc.target/spu/cpat-2.c: New test.\n\t* gcc.target/spu/cpat-3.c: New test.\n\t* gcc.target/spu/cpat-4.c: New test.\n\nFrom-SVN: r119807", "tree": {"sha": "3c663954454d1b10658e49cb13736eba3f39d230", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c663954454d1b10658e49cb13736eba3f39d230"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f49ae6eafc09808442c17783ae4234d9aa2283b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f49ae6eafc09808442c17783ae4234d9aa2283b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f49ae6eafc09808442c17783ae4234d9aa2283b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f49ae6eafc09808442c17783ae4234d9aa2283b/comments", "author": null, "committer": null, "parents": [{"sha": "606e938d0fe11a96d8683840ffce4210b439ebe6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/606e938d0fe11a96d8683840ffce4210b439ebe6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/606e938d0fe11a96d8683840ffce4210b439ebe6"}], "stats": {"total": 262, "additions": 261, "deletions": 1}, "files": [{"sha": "9914f2de487e1afb29b232720f2cfc7b89e24e61", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f49ae6eafc09808442c17783ae4234d9aa2283b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f49ae6eafc09808442c17783ae4234d9aa2283b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f49ae6eafc09808442c17783ae4234d9aa2283b", "patch": "@@ -1,3 +1,7 @@\n+2006-12-12  Trevor Smigiel  <trevor_smigiel@playstation.sony.com>\n+\n+\t* config/spu/spu.c (cpat_info): Fix an incorrectly identified case.\n+\n 2006-12-12  Geoffrey Keating  <geoffk@apple.com>\n \n \t* doc/tm.texi (Alignment Output): Document that ASM_OUTPUT_SKIP"}, {"sha": "52b21e2e72a8b05a6979b513c8881897f9252086", "filename": "gcc/config/spu/spu.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f49ae6eafc09808442c17783ae4234d9aa2283b/gcc%2Fconfig%2Fspu%2Fspu.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f49ae6eafc09808442c17783ae4234d9aa2283b/gcc%2Fconfig%2Fspu%2Fspu.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.c?ref=1f49ae6eafc09808442c17783ae4234d9aa2283b", "patch": "@@ -2360,7 +2360,7 @@ cpat_info(unsigned char *arr, int size, int *prun, int *pstart)\n \telse\n \t  cpat = 0;\n       }\n-  if (cpat)\n+  if (cpat && (run || size < 16))\n     {\n       if (run == 0)\n \trun = 1;"}, {"sha": "b2026db27f22db7633c5ab45e34b9fde54f21f3f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f49ae6eafc09808442c17783ae4234d9aa2283b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f49ae6eafc09808442c17783ae4234d9aa2283b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1f49ae6eafc09808442c17783ae4234d9aa2283b", "patch": "@@ -1,3 +1,10 @@\n+2006-12-12  Trevor Smigiel  <trevor_smigiel@playstation.sony.com>\n+\n+\t* gcc.target/spu/cpat-1.c: New test.\n+\t* gcc.target/spu/cpat-2.c: New test.\n+\t* gcc.target/spu/cpat-3.c: New test.\n+\t* gcc.target/spu/cpat-4.c: New test.\n+\n 2006-12-12  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR tree-opt/28436"}, {"sha": "6fe2925621590180981cecf1e0f1abd6786ed364", "filename": "gcc/testsuite/gcc.target/spu/cpat-1.c", "status": "added", "additions": 104, "deletions": 0, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f49ae6eafc09808442c17783ae4234d9aa2283b/gcc%2Ftestsuite%2Fgcc.target%2Fspu%2Fcpat-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f49ae6eafc09808442c17783ae4234d9aa2283b/gcc%2Ftestsuite%2Fgcc.target%2Fspu%2Fcpat-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fspu%2Fcpat-1.c?ref=1f49ae6eafc09808442c17783ae4234d9aa2283b", "patch": "@@ -0,0 +1,104 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -w\" } */\n+/* { dg-final { scan-assembler-times \"lqr\\t.3,.LC\" 4 } } */\n+/* { dg-final { scan-assembler-times \"cbd\\t.3,0\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\\t.3,1\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\\t.3,2\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\\t.3,3\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\\t.3,4\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\\t.3,5\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\\t.3,6\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\\t.3,7\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\\t.3,8\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\\t.3,9\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\\t.3,10\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\\t.3,11\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\\t.3,12\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\\t.3,13\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\\t.3,14\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\\t.3,15\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"chd\\t.3,0\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"chd\\t.3,2\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"chd\\t.3,4\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"chd\\t.3,6\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"chd\\t.3,8\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"chd\\t.3,10\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"chd\\t.3,12\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"chd\\t.3,14\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cwd\\t.3,0\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cwd\\t.3,4\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cwd\\t.3,8\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cwd\\t.3,12\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cdd\\t.3,0\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cdd\\t.3,8\\\\(.sp\\\\)\" 1 } } */\n+\n+__vector unsigned char\n+not_cpat0()\n+{\n+  /* Contains no runs */\n+  return (__vector unsigned char) {\n+\t    0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,\n+\t    0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F};\n+}\n+\n+__vector unsigned char\n+not_cpat1()\n+{\n+  /* Includes 1 run but not in the right place. */\n+  return (__vector unsigned char) {\n+\t    0x10, 0x02, 0x03, 0x13, 0x14, 0x15, 0x16, 0x17,\n+\t    0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F};\n+}\n+\n+__vector unsigned char\n+not_cpat2()\n+{\n+  /* Includes 2 runs. */\n+  return (__vector unsigned char) {\n+\t    0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,\n+\t    0x00, 0x01, 0x02, 0x03, 0x00, 0x01, 0x02, 0x03};\n+}\n+\n+__vector unsigned char\n+not_cpat3()\n+{\n+  /* Includes 1 incorrect run. */\n+  return (__vector unsigned char) {\n+\t    0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,\n+\t    0x00, 0x01, 0x02, 0x03, 0x05, 0x06, 0x07, 0x1F};\n+}\n+\n+__vector unsigned char cbd_0() { return (__vector unsigned char) { 0x03, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char cbd_1() { return (__vector unsigned char) { 0x10, 0x03, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char cbd_2() { return (__vector unsigned char) { 0x10, 0x11, 0x03, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char cbd_3() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x03, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char cbd_4() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x13, 0x03, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char cbd_5() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x13, 0x14, 0x03, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char cbd_6() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x03, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char cbd_7() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x03, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char cbd_8() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x03, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char cbd_9() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x03, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char cbd_a() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x03, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char cbd_b() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x03, 0x1C, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char cbd_c() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x03, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char cbd_d() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x03, 0x1E, 0x1F}; }\n+__vector unsigned char cbd_e() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x03, 0x1F}; }\n+__vector unsigned char cbd_f() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x03}; }\n+\n+__vector unsigned char chd_0() { return (__vector unsigned char) { 0x02, 0x03, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char chd_2() { return (__vector unsigned char) { 0x10, 0x11, 0x02, 0x03, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char chd_4() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x13, 0x02, 0x03, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char chd_6() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x02, 0x03, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char chd_8() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x02, 0x03, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char chd_a() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x02, 0x03, 0x1C, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char chd_c() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x02, 0x03, 0x1E, 0x1F}; }\n+__vector unsigned char chd_e() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x02, 0x03}; }\n+\n+__vector unsigned char cwd_0() { return (__vector unsigned char) { 0x00, 0x01, 0x02, 0x03, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char cwd_4() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x13, 0x00, 0x01, 0x02, 0x03, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char cwd_8() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x00, 0x01, 0x02, 0x03, 0x1C, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char cwd_c() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x00, 0x01, 0x02, 0x03}; }\n+\n+__vector unsigned char cdd_0() { return (__vector unsigned char) { 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F}; }\n+__vector unsigned char cdd_8() { return (__vector unsigned char) { 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07}; }\n+"}, {"sha": "d5f86ed30ad4119efeb96bdd2eaf5436c81d4d12", "filename": "gcc/testsuite/gcc.target/spu/cpat-2.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f49ae6eafc09808442c17783ae4234d9aa2283b/gcc%2Ftestsuite%2Fgcc.target%2Fspu%2Fcpat-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f49ae6eafc09808442c17783ae4234d9aa2283b/gcc%2Ftestsuite%2Fgcc.target%2Fspu%2Fcpat-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fspu%2Fcpat-2.c?ref=1f49ae6eafc09808442c17783ae4234d9aa2283b", "patch": "@@ -0,0 +1,44 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -w\" } */\n+/* { dg-final { scan-assembler-times \"cbd\t.3,0\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\t.3,1\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\t.3,2\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\t.3,3\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\t.3,15\\\\(.sp\\\\)\" 22 } } */\n+/* { dg-final { scan-assembler-times \"chd\t.3,0\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"chd\t.3,2\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"ila\t.3,66051\" 2 } } */\n+\n+#define MAKE_UINT(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,aA,aB,aC,aD,aE,aF) ((unsigned int)(a0 << 24 | a1 << 16 | a2 << 8 | a3))\n+\n+unsigned int cbd_0() { return MAKE_UINT( 0x03, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned int cbd_1() { return MAKE_UINT( 0x10, 0x03, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned int cbd_2() { return MAKE_UINT( 0x10, 0x11, 0x03, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned int cbd_3() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x03, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned int cbd_4() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x13, 0x03, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned int cbd_5() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x03, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned int cbd_6() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x03, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned int cbd_7() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x03, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned int cbd_8() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x03, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned int cbd_9() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x03, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned int cbd_a() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x03, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned int cbd_b() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x03, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned int cbd_c() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x03, 0x1D, 0x1E, 0x1F); }\n+unsigned int cbd_d() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x03, 0x1E, 0x1F); }\n+unsigned int cbd_e() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x03, 0x1F); }\n+unsigned int cbd_f() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x03); }\n+unsigned int chd_0() { return MAKE_UINT( 0x02, 0x03, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned int chd_2() { return MAKE_UINT( 0x10, 0x11, 0x02, 0x03, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned int chd_4() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x13, 0x02, 0x03, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned int chd_6() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x02, 0x03, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned int chd_8() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x02, 0x03, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned int chd_a() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x02, 0x03, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned int chd_c() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x02, 0x03, 0x1E, 0x1F); }\n+unsigned int chd_e() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x02, 0x03); }\n+unsigned int cwd_0() { return MAKE_UINT( 0x00, 0x01, 0x02, 0x03, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned int cwd_4() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x13, 0x00, 0x01, 0x02, 0x03, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned int cwd_8() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x00, 0x01, 0x02, 0x03, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned int cwd_c() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x00, 0x01, 0x02, 0x03); }\n+unsigned int cdd_0() { return MAKE_UINT( 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned int cdd_8() { return MAKE_UINT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07); }\n+"}, {"sha": "ced50111f337fe6e7b59e439573f1cb170330cb0", "filename": "gcc/testsuite/gcc.target/spu/cpat-3.c", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f49ae6eafc09808442c17783ae4234d9aa2283b/gcc%2Ftestsuite%2Fgcc.target%2Fspu%2Fcpat-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f49ae6eafc09808442c17783ae4234d9aa2283b/gcc%2Ftestsuite%2Fgcc.target%2Fspu%2Fcpat-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fspu%2Fcpat-3.c?ref=1f49ae6eafc09808442c17783ae4234d9aa2283b", "patch": "@@ -0,0 +1,61 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -w\" } */\n+/* { dg-final { scan-assembler-times \"cbd\t.3,0\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\t.3,1\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\t.3,2\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\t.3,3\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\t.3,4\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\t.3,5\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\t.3,6\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\t.3,7\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cbd\t.3,15\\\\(.sp\\\\)\" 15 } } */\n+/* { dg-final { scan-assembler-times \"chd\t.3,0\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"chd\t.3,2\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"chd\t.3,4\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"chd\t.3,6\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cwd\t.3,0\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cwd\t.3,4\\\\(.sp\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"cdd\t.3,0\\\\(.sp\\\\)\" 1 } } */\n+\n+#define MAKE_ULLONG(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,aA,aB,aC,aD,aE,aF) \\\n+  ((unsigned long long) \\\n+    (a0##ull << 56 \\\n+     | a1##ull << 48 \\\n+     | a2##ull << 40 \\\n+     | a3##ull << 32\\\n+     | a4##ull << 24\\\n+     | a5##ull << 16 \\\n+     | a6##ull << 8 \\\n+     | a7##ull ))\n+\n+unsigned long long cbd_0() { return MAKE_ULLONG( 0x03, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned long long cbd_1() { return MAKE_ULLONG( 0x10, 0x03, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned long long cbd_2() { return MAKE_ULLONG( 0x10, 0x11, 0x03, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned long long cbd_3() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x03, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned long long cbd_4() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x13, 0x03, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned long long cbd_5() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x13, 0x14, 0x03, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned long long cbd_6() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x03, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned long long cbd_7() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x03, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned long long cbd_8() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x03, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned long long cbd_9() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x03, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned long long cbd_a() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x03, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned long long cbd_b() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x03, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned long long cbd_c() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x03, 0x1D, 0x1E, 0x1F); }\n+unsigned long long cbd_d() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x03, 0x1E, 0x1F); }\n+unsigned long long cbd_e() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x03, 0x1F); }\n+unsigned long long cbd_f() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x03); }\n+unsigned long long chd_0() { return MAKE_ULLONG( 0x02, 0x03, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned long long chd_2() { return MAKE_ULLONG( 0x10, 0x11, 0x02, 0x03, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned long long chd_4() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x13, 0x02, 0x03, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned long long chd_6() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x02, 0x03, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned long long chd_8() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x02, 0x03, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned long long chd_a() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x02, 0x03, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned long long chd_c() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x02, 0x03, 0x1E, 0x1F); }\n+unsigned long long chd_e() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x02, 0x03); }\n+unsigned long long cwd_0() { return MAKE_ULLONG( 0x00, 0x01, 0x02, 0x03, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned long long cwd_4() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x13, 0x00, 0x01, 0x02, 0x03, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned long long cwd_8() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x00, 0x01, 0x02, 0x03, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned long long cwd_c() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x00, 0x01, 0x02, 0x03); }\n+unsigned long long cdd_0() { return MAKE_ULLONG( 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned long long cdd_8() { return MAKE_ULLONG( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07); }\n+"}, {"sha": "89110a66d82937b8729bd10167e185ce949ec1a8", "filename": "gcc/testsuite/gcc.target/spu/cpat-4.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f49ae6eafc09808442c17783ae4234d9aa2283b/gcc%2Ftestsuite%2Fgcc.target%2Fspu%2Fcpat-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f49ae6eafc09808442c17783ae4234d9aa2283b/gcc%2Ftestsuite%2Fgcc.target%2Fspu%2Fcpat-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fspu%2Fcpat-4.c?ref=1f49ae6eafc09808442c17783ae4234d9aa2283b", "patch": "@@ -0,0 +1,40 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -w\" } */\n+/* { dg-final { scan-assembler-times \"il\\t.3,4611\" 1 } } */\n+/* { dg-final { scan-assembler-times \"il\\t.3,4627\" 25 } } */\n+/* { dg-final { scan-assembler-times \"il\\t.3,515\" 3 } } */\n+/* { dg-final { scan-assembler-times \"il\\t.3,787\" 1 } } */\n+\n+#define MAKE_USHORT(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,aA,aB,aC,aD,aE,aF) ((unsigned short)(a2 << 8 | a3))\n+\n+unsigned short cbd_0() { return MAKE_USHORT( 0x03, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned short cbd_1() { return MAKE_USHORT( 0x10, 0x03, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned short cbd_2() { return MAKE_USHORT( 0x10, 0x11, 0x03, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned short cbd_3() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x03, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned short cbd_4() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x13, 0x03, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned short cbd_5() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x03, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned short cbd_6() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x03, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned short cbd_7() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x03, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned short cbd_8() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x03, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned short cbd_9() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x03, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned short cbd_a() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x03, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned short cbd_b() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x03, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned short cbd_c() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x03, 0x1D, 0x1E, 0x1F); }\n+unsigned short cbd_d() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x03, 0x1E, 0x1F); }\n+unsigned short cbd_e() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x03, 0x1F); }\n+unsigned short cbd_f() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x03); }\n+unsigned short chd_0() { return MAKE_USHORT( 0x02, 0x03, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned short chd_2() { return MAKE_USHORT( 0x10, 0x11, 0x02, 0x03, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned short chd_4() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x13, 0x02, 0x03, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned short chd_6() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x02, 0x03, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned short chd_8() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x02, 0x03, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned short chd_a() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x02, 0x03, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned short chd_c() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x02, 0x03, 0x1E, 0x1F); }\n+unsigned short chd_e() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x02, 0x03); }\n+unsigned short cwd_0() { return MAKE_USHORT( 0x00, 0x01, 0x02, 0x03, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned short cwd_4() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x13, 0x00, 0x01, 0x02, 0x03, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned short cwd_8() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x00, 0x01, 0x02, 0x03, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned short cwd_c() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x00, 0x01, 0x02, 0x03); }\n+unsigned short cdd_0() { return MAKE_USHORT( 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F); }\n+unsigned short cdd_8() { return MAKE_USHORT( 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07); }\n+"}]}