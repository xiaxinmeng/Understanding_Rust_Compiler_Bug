{"sha": "3ad93a347592606340d535571e43943199cc3ab8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FkOTNhMzQ3NTkyNjA2MzQwZDUzNTU3MWU0Mzk0MzE5OWNjM2FiOA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2003-06-12T03:13:14Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-06-12T03:13:14Z"}, "message": "ClassLoader.java (loadClass): Not deprecated.\n\n\t* java/lang/ClassLoader.java (loadClass): Not deprecated.\n\t* java/io/PrintStream.java: Not deprecated.\n\nFrom-SVN: r67811", "tree": {"sha": "552d0fb445ee4a9a0a9634d507fabafa5f87bcec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/552d0fb445ee4a9a0a9634d507fabafa5f87bcec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ad93a347592606340d535571e43943199cc3ab8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ad93a347592606340d535571e43943199cc3ab8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ad93a347592606340d535571e43943199cc3ab8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ad93a347592606340d535571e43943199cc3ab8/comments", "author": null, "committer": null, "parents": [{"sha": "a28853b01b9dfd09dee90709718cee54d1836118", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a28853b01b9dfd09dee90709718cee54d1836118", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a28853b01b9dfd09dee90709718cee54d1836118"}], "stats": {"total": 38, "additions": 14, "deletions": 24}, "files": [{"sha": "461ed56955bc3cf13c2af6ea37703f2c45f9347e", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad93a347592606340d535571e43943199cc3ab8/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad93a347592606340d535571e43943199cc3ab8/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=3ad93a347592606340d535571e43943199cc3ab8", "patch": "@@ -1,3 +1,8 @@\n+2003-06-11  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/ClassLoader.java (loadClass): Not deprecated.\n+\t* java/io/PrintStream.java: Not deprecated.\n+\n 2003-06-11  Scott Gilbertson  <scottg@mantatest.com>\n \n \t* gnu/awt/j2d/IntegerGraphicsState.java (drawOval): implemented."}, {"sha": "fb12ad855322d402cdabe1cd77566d43ea646194", "filename": "libjava/java/io/PrintStream.java", "status": "modified", "additions": 9, "deletions": 23, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad93a347592606340d535571e43943199cc3ab8/libjava%2Fjava%2Fio%2FPrintStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad93a347592606340d535571e43943199cc3ab8/libjava%2Fjava%2Fio%2FPrintStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FPrintStream.java?ref=3ad93a347592606340d535571e43943199cc3ab8", "patch": "@@ -51,27 +51,22 @@\n  * created so that any writes are automatically flushed to the underlying\n  * output sink when the current line is terminated.\n  * <p>\n- * <b>Note that this class is deprecated</b>.  It exists for backward  \n- * compatibility only.  New code should be written to use \n- * <code>PrintWriter</code> instead.  \n- * <p>\n  * This class converts char's into byte's using the system default encoding.\n  *\n- * @deprecated\n- *\n  * @author Aaron M. Renn <arenn@urbanophile.com>\n  * @author Tom Tromey <tromey@cygnus.com>\n  */\n public class PrintStream extends FilterOutputStream\n {\n   /*\n-   * Ok, why is this class deprecated?  It could easily have been extended\n-   * to support character encodings.  In fact, PrintWriter is basically a\n-   * superset of this except for the write() methods.  So let's do something\n-   * tricky here and just redirect calls in this class to a hidden PrintWriter\n-   * instance.  All the functionality goes there since that is the 'real'\n-   * class.  The big win of doing this way is that the default character \n-   * encoding is done automagicially by the PrintWriter tree!\n+   * This class could easily have been extended to support character\n+   * encodings.  In fact, PrintWriter is basically a superset of this\n+   * except for the write() methods.  So let's do something tricky\n+   * here and just redirect calls in this class to a hidden\n+   * PrintWriter instance.  All the functionality goes there since\n+   * that is the 'real' class.  The big win of doing this way is that\n+   * the default character encoding is done automagicially by the\n+   * PrintWriter tree!\n    */\n \n   /**\n@@ -98,12 +93,9 @@ public class PrintStream extends FilterOutputStream\n \n   /**\n    * This method intializes a new <code>PrintStream</code> object to write\n-   * to the specified output sink.  Note that this class is deprecated in\n-   * favor of <code>PrintWriter</code>.\n+   * to the specified output sink.\n    *\n    * @param out The <code>OutputStream</code> to write to.\n-   *\n-   * @deprecated\n    */\n   public PrintStream (OutputStream out)\n   {\n@@ -116,13 +108,10 @@ public PrintStream (OutputStream out)\n    * functionality to be specified where the stream will be flushed after\n    * every line is terminated or newline character is written.\n    * <p>\n-   * Note that this class is deprecated in favor of <code>PrintWriter</code>.\n    *\n    * @param out The <code>OutputStream</code> to write to.\n    * @param auto_flush <code>true</code> to flush the stream after every \n    * line, <code>false</code> otherwise\n-   *\n-   * @deprecated\n    */\n   public PrintStream (OutputStream out, boolean auto_flush)\n   {\n@@ -138,15 +127,12 @@ public PrintStream (OutputStream out, boolean auto_flush)\n    * functionality to be specified where the stream will be flushed after\n    * every line is terminated or newline character is written.\n    * <p>\n-   * Note that this class is deprecated in favor of <code>PrintWriter</code>.\n    *\n    * @param out The <code>OutputStream</code> to write to.\n    * @param auto_flush <code>true</code> to flush the stream after every \n    * line, <code>false</code> otherwise\n    * @param encoding The name of the character encoding to use for this\n    * object.\n-   *\n-   * @deprecated\n    */\n   public PrintStream (OutputStream out, boolean auto_flush, String encoding)\n     throws UnsupportedEncodingException"}, {"sha": "5ae70cdba95f27fd2bbf7d6a45a40e0cd89b99b4", "filename": "libjava/java/lang/ClassLoader.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad93a347592606340d535571e43943199cc3ab8/libjava%2Fjava%2Flang%2FClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad93a347592606340d535571e43943199cc3ab8/libjava%2Fjava%2Flang%2FClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClassLoader.java?ref=3ad93a347592606340d535571e43943199cc3ab8", "patch": "@@ -258,7 +258,6 @@ public Class loadClass(String name)\n    * @param     link if the class should be linked.\n    * @return    the class loaded.\n    * @exception java.lang.ClassNotFoundException \n-   * @deprecated \n    */ \n   protected Class loadClass(String name, boolean link)\n     throws java.lang.ClassNotFoundException"}]}