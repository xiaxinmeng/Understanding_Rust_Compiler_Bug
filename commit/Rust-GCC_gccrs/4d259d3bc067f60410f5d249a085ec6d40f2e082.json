{"sha": "4d259d3bc067f60410f5d249a085ec6d40f2e082", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQyNTlkM2JjMDY3ZjYwNDEwZjVkMjQ5YTA4NWVjNmQ0MGYyZTA4Mg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2019-02-13T21:51:41Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2019-02-13T21:51:41Z"}, "message": "sse.md (vec_set<VI4F_256_512:mode>_0): Use nonimmediate_operand as operand 2 predicate.\n\n\t* config/i386/sse.md (vec_set<VI4F_256_512:mode>_0): Use\n\tnonimmediate_operand as operand 2 predicate.\n\t(vec_set<VF2_512_256:mode>_0): Ditto.\n\t(vec_set<VI8_AVX_AVX512F:mode>_0): Ditto.\n\t(*vec_concatv2si): Remove alternative 2.\n\t(*vec_concatv4si_0): Use vm constraint for alternative 0.\n\t(*vec_concatv4si_0): Remove preferred_for_speed attribute.\n\t(vec_concatv2di): Split alternatives 4,5,6 to ...\n\t(*vec_concatv2di_0) ... new pattern.\n\ntestsuite/ChangeLog:\n\n\t* gcc.target/i386/sse2-init-v2di-2.c (dg-final): Update scan string.\n\nFrom-SVN: r268855", "tree": {"sha": "1ba3042011f0878cf0269a188db73115eecbb90c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ba3042011f0878cf0269a188db73115eecbb90c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d259d3bc067f60410f5d249a085ec6d40f2e082", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d259d3bc067f60410f5d249a085ec6d40f2e082", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d259d3bc067f60410f5d249a085ec6d40f2e082", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d259d3bc067f60410f5d249a085ec6d40f2e082/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f83fad402e6d6503a2322977837a9dba7edf68b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f83fad402e6d6503a2322977837a9dba7edf68b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f83fad402e6d6503a2322977837a9dba7edf68b8"}], "stats": {"total": 95, "additions": 55, "deletions": 40}, "files": [{"sha": "e17956d41417bf5ef01e66178898d9f54d70fc61", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d259d3bc067f60410f5d249a085ec6d40f2e082/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d259d3bc067f60410f5d249a085ec6d40f2e082/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4d259d3bc067f60410f5d249a085ec6d40f2e082", "patch": "@@ -1,3 +1,15 @@\n+2019-02-13  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/sse.md (vec_set<VI4F_256_512:mode>_0): Use\n+\tnonimmediate_operand as operand 2 predicate.\n+\t(vec_set<VF2_512_256:mode>_0): Ditto.\n+\t(vec_set<VI8_AVX_AVX512F:mode>_0): Ditto.\n+\t(*vec_concatv2si): Remove alternative 2.\n+\t(*vec_concatv4si_0): Use vm constraint for alternative 0.\n+\t(*vec_concatv4si_0): Remove preferred_for_speed attribute.\n+\t(vec_concatv2di): Split alternatives 4,5,6 to ...\n+\t(*vec_concatv2di_0) ... new pattern.\n+\n 2019-02-13  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \tPR target/89190"}, {"sha": "fac5db62b1eb3a99d40aa248bbe6b527a58faba6", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 38, "deletions": 39, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d259d3bc067f60410f5d249a085ec6d40f2e082/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d259d3bc067f60410f5d249a085ec6d40f2e082/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=4d259d3bc067f60410f5d249a085ec6d40f2e082", "patch": "@@ -7417,7 +7417,7 @@\n   [(set (match_operand:VI4F_256_512 0 \"register_operand\" \"=v,v,v\")\n \t(vec_merge:VI4F_256_512\n \t  (vec_duplicate:VI4F_256_512\n-\t    (match_operand:<ssescalarmode> 2 \"general_operand\" \"v,m,r\"))\n+\t    (match_operand:<ssescalarmode> 2 \"nonimmediate_operand\" \"v,m,r\"))\n \t  (match_operand:VI4F_256_512 1 \"const0_operand\" \"C,C,C\")\n \t  (const_int 1)))]\n   \"TARGET_AVX\"\n@@ -9669,7 +9669,7 @@\n   [(set (match_operand:VF2_512_256 0 \"register_operand\" \"=v\")\n \t(vec_merge:VF2_512_256\n \t  (vec_duplicate:VF2_512_256\n-\t    (match_operand:<ssescalarmode> 2 \"general_operand\" \"xm\"))\n+\t    (match_operand:<ssescalarmode> 2 \"nonimmediate_operand\" \"xm\"))\n \t  (match_operand:VF2_512_256 1 \"const0_operand\" \"C\")\n \t  (const_int 1)))]\n   \"TARGET_AVX\"\n@@ -14573,22 +14573,21 @@\n ;; nonimmediate_operand for operand 2 and *not* allowing memory for the SSE\n ;; alternatives pretty much forces the MMX alternative to be chosen.\n (define_insn \"*vec_concatv2si\"\n-  [(set (match_operand:V2SI 0 \"register_operand\"     \"=x,x ,*y,x,x,*y,*y\")\n+  [(set (match_operand:V2SI 0 \"register_operand\"     \"=x,x ,x,x,*y,*y\")\n \t(vec_concat:V2SI\n-\t  (match_operand:SI 1 \"nonimmediate_operand\" \" 0,rm,rm,0,m, 0,*rm\")\n-\t  (match_operand:SI 2 \"reg_or_0_operand\"     \" x,C ,C, x,C,*y,C\")))]\n+\t  (match_operand:SI 1 \"nonimmediate_operand\" \" 0,rm,0,m, 0,rm\")\n+\t  (match_operand:SI 2 \"reg_or_0_operand\"     \" x,C ,x,C,*y,C\")))]\n   \"TARGET_SSE && !TARGET_SSE4_1\"\n   \"@\n    punpckldq\\t{%2, %0|%0, %2}\n    movd\\t{%1, %0|%0, %1}\n-   movd\\t{%1, %0|%0, %1}\n    unpcklps\\t{%2, %0|%0, %2}\n    movss\\t{%1, %0|%0, %1}\n    punpckldq\\t{%2, %0|%0, %2}\n    movd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"isa\" \"sse2,sse2,sse2,*,*,*,*\")\n-   (set_attr \"type\" \"sselog,ssemov,mmxmov,sselog,ssemov,mmxcvt,mmxmov\")\n-   (set_attr \"mode\" \"TI,TI,DI,V4SF,SF,DI,DI\")])\n+  [(set_attr \"isa\" \"sse2,sse2,*,*,*,*\")\n+   (set_attr \"type\" \"sselog,ssemov,sselog,ssemov,mmxcvt,mmxmov\")\n+   (set_attr \"mode\" \"TI,TI,V4SF,SF,DI,DI\")])\n \n (define_insn \"*vec_concatv4si\"\n   [(set (match_operand:V4SI 0 \"register_operand\"       \"=x,v,x,x,v\")\n@@ -14610,38 +14609,30 @@\n (define_insn \"*vec_concatv4si_0\"\n   [(set (match_operand:V4SI 0 \"register_operand\"       \"=v,x\")\n \t(vec_concat:V4SI\n-\t  (match_operand:V2SI 1 \"nonimmediate_operand\" \"xm,?!*y\")\n+\t  (match_operand:V2SI 1 \"nonimmediate_operand\" \"vm,?!*y\")\n \t  (match_operand:V2SI 2 \"const0_operand\"       \" C,C\")))]\n   \"TARGET_SSE2\"\n   \"@\n    %vmovq\\t{%1, %0|%0, %1}\n    movq2dq\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"maybe_vex,orig\")\n-   (set_attr \"mode\" \"TI\")\n-   (set (attr \"preferred_for_speed\")\n-     (if_then_else (eq_attr \"alternative\" \"1\")\n-       (symbol_ref \"TARGET_INTER_UNIT_MOVES_FROM_VEC\")\n-       (symbol_ref \"true\")))])\n+   (set_attr \"mode\" \"TI\")])\n \n-;; movd instead of movq is required to handle broken assemblers.\n (define_insn \"vec_concatv2di\"\n   [(set (match_operand:V2DI 0 \"register_operand\"\n-\t  \"=Yr,*x,x ,v ,v,v ,x   ,x,v ,x,x,v\")\n+\t  \"=Yr,*x,x ,v ,x,v ,x,x,v\")\n \t(vec_concat:V2DI\n-\t  (match_operand:DI 1 \"nonimmediate_operand\"\n-\t  \"  0, 0,x ,Yv,r,vm,?!*y,0,Yv,0,0,v\")\n-\t  (match_operand:DI 2 \"nonimm_or_0_operand\"\n-\t  \" rm,rm,rm,rm,C ,C ,C ,x,Yv,x,m,m\")))]\n+\t  (match_operand:DI 1 \"register_operand\"\n+\t  \"  0, 0,x ,Yv,0,Yv,0,0,v\")\n+\t  (match_operand:DI 2 \"nonimmediate_operand\"\n+\t  \" rm,rm,rm,rm,x,Yv,x,m,m\")))]\n   \"TARGET_SSE\"\n   \"@\n    pinsrq\\t{$1, %2, %0|%0, %2, 1}\n    pinsrq\\t{$1, %2, %0|%0, %2, 1}\n    vpinsrq\\t{$1, %2, %1, %0|%0, %1, %2, 1}\n    vpinsrq\\t{$1, %2, %1, %0|%0, %1, %2, 1}\n-   * return HAVE_AS_IX86_INTERUNIT_MOVQ ? \\\"%vmovq\\t{%1, %0|%0, %1}\\\" : \\\"%vmovd\\t{%1, %0|%0, %1}\\\";\n-   %vmovq\\t{%1, %0|%0, %1}\n-   movq2dq\\t{%1, %0|%0, %1}\n    punpcklqdq\\t{%2, %0|%0, %2}\n    vpunpcklqdq\\t{%2, %1, %0|%0, %1, %2}\n    movlhps\\t{%2, %0|%0, %2}\n@@ -14655,22 +14646,18 @@\n \t    (eq_attr \"alternative\" \"3\")\n \t      (const_string \"x64_avx512dq\")\n \t    (eq_attr \"alternative\" \"4\")\n-\t      (const_string \"x64_sse2\")\n-\t    (eq_attr \"alternative\" \"5,6\")\n-\t      (const_string \"sse2\")\n-\t    (eq_attr \"alternative\" \"7\")\n \t      (const_string \"sse2_noavx\")\n-\t    (eq_attr \"alternative\" \"8,11\")\n+\t    (eq_attr \"alternative\" \"5,8\")\n \t      (const_string \"avx\")\n \t   ]\n \t   (const_string \"noavx\")))\n    (set (attr \"type\")\n      (if_then_else\n-       (eq_attr \"alternative\" \"0,1,2,3,7,8\")\n+       (eq_attr \"alternative\" \"0,1,2,3,4,5\")\n        (const_string \"sselog\")\n        (const_string \"ssemov\")))\n    (set (attr \"prefix_rex\")\n-     (if_then_else (eq_attr \"alternative\" \"0,1,2,3,4\")\n+     (if_then_else (eq_attr \"alternative\" \"0,1,2,3\")\n \t\t   (const_string \"1\")\n \t\t   (const_string \"*\")))\n    (set (attr \"prefix_extra\")\n@@ -14686,18 +14673,30 @@\n \t      (const_string \"vex\")\n \t    (eq_attr \"alternative\" \"3\")\n \t      (const_string \"evex\")\n-\t    (eq_attr \"alternative\" \"4,5\")\n-\t      (const_string \"maybe_vex\")\n-\t    (eq_attr \"alternative\" \"8,11\")\n+\t    (eq_attr \"alternative\" \"5,8\")\n \t      (const_string \"maybe_evex\")\n \t   ]\n \t   (const_string \"orig\")))\n-   (set_attr \"mode\" \"TI,TI,TI,TI,TI,TI,TI,TI,TI,V4SF,V2SF,V2SF\")\n+   (set_attr \"mode\" \"TI,TI,TI,TI,TI,TI,V4SF,V2SF,V2SF\")])\n+\n+(define_insn \"*vec_concatv2di_0\"\n+  [(set (match_operand:V2DI 0 \"register_operand\"     \"=v,v ,x\")\n+\t(vec_concat:V2DI\n+\t  (match_operand:DI 1 \"nonimmediate_operand\" \" r,vm,?!*y\")\n+\t  (match_operand:DI 2 \"const0_operand\"       \" C,C ,C\")))]\n+  \"TARGET_SSE2\"\n+  \"@\n+   * return HAVE_AS_IX86_INTERUNIT_MOVQ ? \\\"%vmovq\\t{%1, %0|%0, %1}\\\" : \\\"%vmovd\\t{%1, %0|%0, %1}\\\";\n+   %vmovq\\t{%1, %0|%0, %1}\n+   movq2dq\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"isa\" \"x64,*,*\")\n+   (set_attr \"type\" \"ssemov\")\n+   (set_attr \"prefix_rex\" \"1,*,*\")\n+   (set_attr \"prefix\" \"maybe_vex,maybe_vex,orig\")\n+   (set_attr \"mode\" \"TI\")\n    (set (attr \"preferred_for_speed\")\n-     (cond [(eq_attr \"alternative\" \"4\")\n+     (cond [(eq_attr \"alternative\" \"0\")\n \t      (symbol_ref \"TARGET_INTER_UNIT_MOVES_TO_VEC\")\n-\t    (eq_attr \"alternative\" \"6\")\n-\t      (symbol_ref \"TARGET_INTER_UNIT_MOVES_FROM_VEC\")\n \t   ]\n \t   (symbol_ref \"true\")))])\n \n@@ -14706,7 +14705,7 @@\n   [(set (match_operand:VI8_AVX_AVX512F 0 \"register_operand\" \"=v,v\")\n \t(vec_merge:VI8_AVX_AVX512F\n \t  (vec_duplicate:VI8_AVX_AVX512F\n-\t    (match_operand:<ssescalarmode> 2 \"general_operand\" \"r,vm\"))\n+\t    (match_operand:<ssescalarmode> 2 \"nonimmediate_operand\" \"r,vm\"))\n \t  (match_operand:VI8_AVX_AVX512F 1 \"const0_operand\" \"C,C\")\n \t  (const_int 1)))]\n   \"TARGET_AVX\""}, {"sha": "d2d1f28b22e030e8a0b7058d572814e1c07566bd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d259d3bc067f60410f5d249a085ec6d40f2e082/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d259d3bc067f60410f5d249a085ec6d40f2e082/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4d259d3bc067f60410f5d249a085ec6d40f2e082", "patch": "@@ -1,3 +1,7 @@\n+2019-02-13  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/sse2-init-v2di-2.c (dg-final): Update scan string.\n+\n 2019-02-13  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/89297 - ICE with OVERLOAD in template."}, {"sha": "c0c7d2bba061a494218eb2281457f254fcc9cb50", "filename": "gcc/testsuite/gcc.target/i386/sse2-init-v2di-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d259d3bc067f60410f5d249a085ec6d40f2e082/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-init-v2di-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d259d3bc067f60410f5d249a085ec6d40f2e082/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-init-v2di-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-init-v2di-2.c?ref=4d259d3bc067f60410f5d249a085ec6d40f2e082", "patch": "@@ -10,4 +10,4 @@ test (long long b)\n   return _mm_cvtsi64_si128 (b); \n }\n \n-/* { dg-final { scan-assembler-times \"vec_concatv2di/4\" 1 } } */\n+/* { dg-final { scan-assembler-times \"\\\\*vec_concatv2di_0/0\" 1 } } */"}]}