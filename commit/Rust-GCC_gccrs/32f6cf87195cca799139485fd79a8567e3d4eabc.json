{"sha": "32f6cf87195cca799139485fd79a8567e3d4eabc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJmNmNmODcxOTVjY2E3OTkxMzk0ODVmZDc5YTg1NjdlM2Q0ZWFiYw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2008-11-18T20:07:59Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2008-11-18T20:07:59Z"}, "message": "* cpplib.pot: Regenerate.\n\nFrom-SVN: r141974", "tree": {"sha": "2eef9cf6906ffb839370194a30d315933b1bea2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2eef9cf6906ffb839370194a30d315933b1bea2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32f6cf87195cca799139485fd79a8567e3d4eabc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32f6cf87195cca799139485fd79a8567e3d4eabc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32f6cf87195cca799139485fd79a8567e3d4eabc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32f6cf87195cca799139485fd79a8567e3d4eabc/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc95c8b9d5d337e255ec3351e2ae4afd1e004835", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc95c8b9d5d337e255ec3351e2ae4afd1e004835", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc95c8b9d5d337e255ec3351e2ae4afd1e004835"}], "stats": {"total": 186, "additions": 95, "deletions": 91}, "files": [{"sha": "f004c992e4579d4dfbd616b0e7ac3a877beaac82", "filename": "libcpp/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32f6cf87195cca799139485fd79a8567e3d4eabc/libcpp%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32f6cf87195cca799139485fd79a8567e3d4eabc/libcpp%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2FChangeLog?ref=32f6cf87195cca799139485fd79a8567e3d4eabc", "patch": "@@ -1,3 +1,7 @@\n+2008-11-18  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* cpplib.pot: Regenerate.\n+\n 2008-11-13  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* id.po: New."}, {"sha": "c4ae3af86c0db6e717ea5dacb615ca5804b4e78d", "filename": "libcpp/po/cpplib.pot", "status": "modified", "additions": 91, "deletions": 91, "changes": 182, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32f6cf87195cca799139485fd79a8567e3d4eabc/libcpp%2Fpo%2Fcpplib.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32f6cf87195cca799139485fd79a8567e3d4eabc/libcpp%2Fpo%2Fcpplib.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2Fcpplib.pot?ref=32f6cf87195cca799139485fd79a8567e3d4eabc", "patch": "@@ -8,7 +8,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: PACKAGE VERSION\\n\"\n \"Report-Msgid-Bugs-To: http://gcc.gnu.org/bugs.html\\n\"\n-\"POT-Creation-Date: 2008-08-27 17:39+0000\\n\"\n+\"POT-Creation-Date: 2008-11-18 20:02+0000\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n \"Language-Team: LANGUAGE <LL@li.org>\\n\"\n@@ -74,7 +74,7 @@ msgid \"%.*s is not a valid universal character\"\n msgstr \"\"\n \n #: charset.c:1039\n-#: lex.c:484\n+#: lex.c:485\n msgid \"'$' in identifier or number\"\n msgstr \"\"\n \n@@ -398,7 +398,7 @@ msgid \"unterminated #%s\"\n msgstr \"\"\n \n #: directives-only.c:222\n-#: lex.c:1089\n+#: lex.c:1138\n #: traditional.c:162\n msgid \"unterminated comment\"\n msgstr \"\"\n@@ -424,203 +424,203 @@ msgstr \"\"\n msgid \"%s: %s\"\n msgstr \"\"\n \n-#: expr.c:261\n+#: expr.c:262\n msgid \"too many decimal points in number\"\n msgstr \"\"\n \n-#: expr.c:290\n-#: expr.c:365\n+#: expr.c:291\n+#: expr.c:366\n msgid \"fixed-point constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:303\n+#: expr.c:304\n #, c-format\n msgid \"invalid digit \\\"%c\\\" in binary constant\"\n msgstr \"\"\n \n-#: expr.c:305\n+#: expr.c:306\n #, c-format\n msgid \"invalid digit \\\"%c\\\" in octal constant\"\n msgstr \"\"\n \n-#: expr.c:313\n+#: expr.c:314\n msgid \"invalid prefix \\\"0b\\\" for floating constant\"\n msgstr \"\"\n \n-#: expr.c:319\n+#: expr.c:320\n msgid \"use of C99 hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:328\n+#: expr.c:329\n msgid \"exponent has no digits\"\n msgstr \"\"\n \n-#: expr.c:335\n+#: expr.c:336\n msgid \"hexadecimal floating constants require an exponent\"\n msgstr \"\"\n \n-#: expr.c:341\n+#: expr.c:342\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on floating constant\"\n msgstr \"\"\n \n-#: expr.c:351\n-#: expr.c:393\n+#: expr.c:352\n+#: expr.c:394\n #, c-format\n msgid \"traditional C rejects the \\\"%.*s\\\" suffix\"\n msgstr \"\"\n \n-#: expr.c:358\n+#: expr.c:359\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" with hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:369\n+#: expr.c:370\n msgid \"decimal float constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:379\n+#: expr.c:380\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on integer constant\"\n msgstr \"\"\n \n-#: expr.c:401\n+#: expr.c:402\n msgid \"use of C99 long long integer constant\"\n msgstr \"\"\n \n-#: expr.c:409\n+#: expr.c:410\n msgid \"imaginary constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:412\n+#: expr.c:413\n msgid \"binary constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:505\n+#: expr.c:506\n msgid \"integer constant is too large for its type\"\n msgstr \"\"\n \n-#: expr.c:517\n+#: expr.c:518\n msgid \"integer constant is so large that it is unsigned\"\n msgstr \"\"\n \n-#: expr.c:612\n+#: expr.c:613\n msgid \"missing ')' after \\\"defined\\\"\"\n msgstr \"\"\n \n-#: expr.c:619\n+#: expr.c:620\n msgid \"operator \\\"defined\\\" requires an identifier\"\n msgstr \"\"\n \n-#: expr.c:627\n+#: expr.c:628\n #, c-format\n msgid \"(\\\"%s\\\" is an alternative token for \\\"%s\\\" in C++)\"\n msgstr \"\"\n \n-#: expr.c:637\n+#: expr.c:638\n msgid \"this use of \\\"defined\\\" may not be portable\"\n msgstr \"\"\n \n-#: expr.c:690\n+#: expr.c:691\n msgid \"floating constant in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:696\n+#: expr.c:697\n msgid \"imaginary number in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:743\n+#: expr.c:744\n #, c-format\n msgid \"\\\"%s\\\" is not defined\"\n msgstr \"\"\n \n-#: expr.c:755\n+#: expr.c:756\n msgid \"assertions are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:758\n+#: expr.c:759\n msgid \"assertions are a deprecated extension\"\n msgstr \"\"\n \n-#: expr.c:890\n-#: expr.c:919\n+#: expr.c:892\n+#: expr.c:921\n #, c-format\n msgid \"missing binary operator before token \\\"%s\\\"\"\n msgstr \"\"\n \n-#: expr.c:910\n+#: expr.c:912\n #, c-format\n msgid \"token \\\"%s\\\" is not valid in preprocessor expressions\"\n msgstr \"\"\n \n-#: expr.c:927\n+#: expr.c:929\n msgid \"missing expression between '(' and ')'\"\n msgstr \"\"\n \n-#: expr.c:930\n+#: expr.c:932\n #, c-format\n msgid \"%s with no expression\"\n msgstr \"\"\n \n-#: expr.c:933\n+#: expr.c:935\n #, c-format\n msgid \"operator '%s' has no right operand\"\n msgstr \"\"\n \n-#: expr.c:938\n+#: expr.c:940\n #, c-format\n msgid \"operator '%s' has no left operand\"\n msgstr \"\"\n \n-#: expr.c:964\n+#: expr.c:966\n msgid \" ':' without preceding '?'\"\n msgstr \"\"\n \n-#: expr.c:991\n+#: expr.c:994\n #, c-format\n msgid \"unbalanced stack in %s\"\n msgstr \"\"\n \n-#: expr.c:1011\n+#: expr.c:1014\n #, c-format\n msgid \"impossible operator '%u'\"\n msgstr \"\"\n \n-#: expr.c:1101\n+#: expr.c:1115\n msgid \"missing ')' in expression\"\n msgstr \"\"\n \n-#: expr.c:1125\n+#: expr.c:1144\n msgid \"'?' without following ':'\"\n msgstr \"\"\n \n-#: expr.c:1135\n+#: expr.c:1154\n msgid \"integer overflow in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1140\n+#: expr.c:1159\n msgid \"missing '(' in expression\"\n msgstr \"\"\n \n-#: expr.c:1172\n+#: expr.c:1191\n #, c-format\n msgid \"the left operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1177\n+#: expr.c:1196\n #, c-format\n msgid \"the right operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1436\n+#: expr.c:1455\n msgid \"traditional C rejects the unary plus operator\"\n msgstr \"\"\n \n-#: expr.c:1519\n+#: expr.c:1538\n msgid \"comma operator in operand of #if\"\n msgstr \"\"\n \n-#: expr.c:1651\n+#: expr.c:1670\n msgid \"division by zero in #if\"\n msgstr \"\"\n \n@@ -660,116 +660,116 @@ msgstr \"\"\n msgid \"Multiple include guards may be useful for:\\n\"\n msgstr \"\"\n \n-#: init.c:428\n+#: init.c:451\n msgid \"cppchar_t must be an unsigned type\"\n msgstr \"\"\n \n-#: init.c:432\n+#: init.c:455\n #, c-format\n msgid \"\"\n \"preprocessor arithmetic has maximum precision of %lu bits; target requires %\"\n \"lu bits\"\n msgstr \"\"\n \n-#: init.c:439\n+#: init.c:462\n msgid \"CPP arithmetic must be at least as precise as a target int\"\n msgstr \"\"\n \n-#: init.c:442\n+#: init.c:465\n msgid \"target char is less than 8 bits wide\"\n msgstr \"\"\n \n-#: init.c:446\n+#: init.c:469\n msgid \"target wchar_t is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:450\n+#: init.c:473\n msgid \"target int is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:455\n+#: init.c:478\n msgid \"CPP half-integer narrower than CPP character\"\n msgstr \"\"\n \n-#: init.c:459\n+#: init.c:482\n #, c-format\n msgid \"\"\n \"CPP on this host cannot handle wide character constants over %lu bits, but \"\n \"the target requires %lu bits\"\n msgstr \"\"\n \n-#: lex.c:283\n+#: lex.c:284\n msgid \"backslash and newline separated by space\"\n msgstr \"\"\n \n-#: lex.c:288\n+#: lex.c:289\n msgid \"backslash-newline at end of file\"\n msgstr \"\"\n \n-#: lex.c:303\n+#: lex.c:304\n #, c-format\n msgid \"trigraph ??%c converted to %c\"\n msgstr \"\"\n \n-#: lex.c:310\n+#: lex.c:311\n #, c-format\n msgid \"trigraph ??%c ignored, use -trigraphs to enable\"\n msgstr \"\"\n \n-#: lex.c:356\n+#: lex.c:357\n msgid \"\\\"/*\\\" within comment\"\n msgstr \"\"\n \n-#: lex.c:414\n+#: lex.c:415\n #, c-format\n msgid \"%s in preprocessing directive\"\n msgstr \"\"\n \n-#: lex.c:423\n+#: lex.c:424\n msgid \"null character(s) ignored\"\n msgstr \"\"\n \n-#: lex.c:460\n+#: lex.c:461\n #, c-format\n msgid \"`%.*s' is not in NFKC\"\n msgstr \"\"\n \n-#: lex.c:463\n+#: lex.c:464\n #, c-format\n msgid \"`%.*s' is not in NFC\"\n msgstr \"\"\n \n-#: lex.c:551\n+#: lex.c:552\n #, c-format\n msgid \"attempt to use poisoned \\\"%s\\\"\"\n msgstr \"\"\n \n-#: lex.c:559\n+#: lex.c:560\n msgid \"__VA_ARGS__ can only appear in the expansion of a C99 variadic macro\"\n msgstr \"\"\n \n-#: lex.c:663\n+#: lex.c:664\n msgid \"null character(s) preserved in literal\"\n msgstr \"\"\n \n-#: lex.c:666\n+#: lex.c:667\n #, c-format\n msgid \"missing terminating %c character\"\n msgstr \"\"\n \n-#: lex.c:1100\n+#: lex.c:1149\n msgid \"C++ style comments are not allowed in ISO C90\"\n msgstr \"\"\n \n-#: lex.c:1102\n+#: lex.c:1151\n msgid \"(this will be reported only once per input file)\"\n msgstr \"\"\n \n-#: lex.c:1107\n+#: lex.c:1156\n msgid \"multi-line comment\"\n msgstr \"\"\n \n-#: lex.c:1420\n+#: lex.c:1469\n #, c-format\n msgid \"unspellable token %s\"\n msgstr \"\"\n@@ -850,67 +850,67 @@ msgid \"\"\n \"C90 and ISO C++98\"\n msgstr \"\"\n \n-#: macro.c:1449\n+#: macro.c:1453\n #, c-format\n msgid \"duplicate macro parameter \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:1495\n+#: macro.c:1499\n #, c-format\n msgid \"\\\"%s\\\" may not appear in macro parameter list\"\n msgstr \"\"\n \n-#: macro.c:1503\n+#: macro.c:1507\n msgid \"macro parameters must be comma-separated\"\n msgstr \"\"\n \n-#: macro.c:1520\n+#: macro.c:1524\n msgid \"parameter name missing\"\n msgstr \"\"\n \n-#: macro.c:1537\n+#: macro.c:1541\n msgid \"anonymous variadic macros were introduced in C99\"\n msgstr \"\"\n \n-#: macro.c:1542\n+#: macro.c:1546\n msgid \"ISO C does not permit named variadic macros\"\n msgstr \"\"\n \n-#: macro.c:1551\n+#: macro.c:1555\n msgid \"missing ')' in macro parameter list\"\n msgstr \"\"\n \n-#: macro.c:1600\n+#: macro.c:1604\n msgid \"'##' cannot appear at either end of a macro expansion\"\n msgstr \"\"\n \n-#: macro.c:1634\n+#: macro.c:1638\n msgid \"ISO C99 requires whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:1658\n+#: macro.c:1662\n msgid \"missing whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:1688\n+#: macro.c:1692\n msgid \"'#' is not followed by a macro parameter\"\n msgstr \"\"\n \n-#: macro.c:1807\n+#: macro.c:1811\n #, c-format\n msgid \"\\\"%s\\\" redefined\"\n msgstr \"\"\n \n-#: macro.c:1812\n+#: macro.c:1816\n msgid \"this is the location of the previous definition\"\n msgstr \"\"\n \n-#: macro.c:1873\n+#: macro.c:1877\n #, c-format\n msgid \"macro argument \\\"%s\\\" would be stringified in traditional C\"\n msgstr \"\"\n \n-#: macro.c:1896\n+#: macro.c:1900\n #, c-format\n msgid \"invalid hash type %d in cpp_macro_definition\"\n msgstr \"\""}]}