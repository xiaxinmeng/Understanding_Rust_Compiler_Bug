{"sha": "db69cfcb78fb580a805a52342d30d631fed15e40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI2OWNmY2I3OGZiNTgwYTgwNWE1MjM0MmQzMGQ2MzFmZWQxNWU0MA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-10T04:31:39Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-10T04:31:39Z"}, "message": "Add comments.\n\nFrom-SVN: r2094", "tree": {"sha": "c033f75d98350882c4428e5cf41b4ef843bc3ec4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c033f75d98350882c4428e5cf41b4ef843bc3ec4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db69cfcb78fb580a805a52342d30d631fed15e40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db69cfcb78fb580a805a52342d30d631fed15e40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db69cfcb78fb580a805a52342d30d631fed15e40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db69cfcb78fb580a805a52342d30d631fed15e40/comments", "author": null, "committer": null, "parents": [{"sha": "16ab04d3556f3895938a83c98dc19581f3179e2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16ab04d3556f3895938a83c98dc19581f3179e2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16ab04d3556f3895938a83c98dc19581f3179e2f"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "dc70540a1ab8862177c8f9c4c01c4ab4235aced4", "filename": "gcc/c-tree.h", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db69cfcb78fb580a805a52342d30d631fed15e40/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db69cfcb78fb580a805a52342d30d631fed15e40/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=db69cfcb78fb580a805a52342d30d631fed15e40", "patch": "@@ -27,19 +27,30 @@ struct lang_identifier\n };\n \n /* Macros for access to language-specific slots in an identifier.  */\n+/* Each of these slots contains a DECL node or null.  */\n \n+/* This represents the value which the identifier has in the\n+   file-scope namespace.  */\n #define IDENTIFIER_GLOBAL_VALUE(NODE)\t\\\n   (((struct lang_identifier *)(NODE))->global_value)\n+/* This represents the value which the identifier has in the current\n+   scope.  */\n #define IDENTIFIER_LOCAL_VALUE(NODE)\t\\\n   (((struct lang_identifier *)(NODE))->local_value)\n+/* This represents the value which the identifier has as a label in\n+   the current label scope.  */\n #define IDENTIFIER_LABEL_VALUE(NODE)\t\\\n   (((struct lang_identifier *)(NODE))->label_value)\n-/* IDENTIFIER_LIMBO_VALUE records the extern decl of this identifier,\n-   if it has had one.  */\n+/* This records the extern decl of this identifier, if it has had one\n+   at any point in this compilation.  */\n #define IDENTIFIER_LIMBO_VALUE(NODE)\t\\\n   (((struct lang_identifier *)(NODE))->limbo_value)\n+/* This records the implicit function decl of this identifier, if it\n+   has had one at any point in this compilation.  */\n #define IDENTIFIER_IMPLICIT_DECL(NODE)\t\\\n   (((struct lang_identifier *)(NODE))->implicit_decl)\n+/* This is the last function in which we printed an \"undefined variable\"\n+   message for this identifier.  Value is a FUNCTION_DECL or null.  */\n #define IDENTIFIER_ERROR_LOCUS(NODE)\t\\\n   (((struct lang_identifier *)(NODE))->error_locus)\n "}]}