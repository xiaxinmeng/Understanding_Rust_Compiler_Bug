{"sha": "f6ab27bb6d2a196cc8fdf13efbd137c520bae4ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZhYjI3YmI2ZDJhMTk2Y2M4ZmRmMTNlZmJkMTM3YzUyMGJhZTRhZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-12-03T16:57:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-12-03T16:57:44Z"}, "message": "re PR middle-end/38360 (ICE in gimple_op, at gimple.h:1636)\n\n\tPR middle-end/38360\n\t* tree-ssa-ccp.c (ccp_fold_builtin): Bail out if the builtin doesn't\n\thave the right number of arguments.\n\n\t* gcc.c-torture/compile/pr38360.c: New test.\n\nFrom-SVN: r142399", "tree": {"sha": "179bc0c86fb188da7b2fb52ee88940be78660607", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/179bc0c86fb188da7b2fb52ee88940be78660607"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6ab27bb6d2a196cc8fdf13efbd137c520bae4ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6ab27bb6d2a196cc8fdf13efbd137c520bae4ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6ab27bb6d2a196cc8fdf13efbd137c520bae4ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6ab27bb6d2a196cc8fdf13efbd137c520bae4ad/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "050bbfebe25a20cc711fc35d49be6bae5ff7a047", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/050bbfebe25a20cc711fc35d49be6bae5ff7a047", "html_url": "https://github.com/Rust-GCC/gccrs/commit/050bbfebe25a20cc711fc35d49be6bae5ff7a047"}], "stats": {"total": 45, "additions": 35, "deletions": 10}, "files": [{"sha": "29104d84018cfae11859d2fbb0b4f4a7875ea8d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6ab27bb6d2a196cc8fdf13efbd137c520bae4ad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6ab27bb6d2a196cc8fdf13efbd137c520bae4ad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6ab27bb6d2a196cc8fdf13efbd137c520bae4ad", "patch": "@@ -1,3 +1,9 @@\n+2008-12-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/38360\n+\t* tree-ssa-ccp.c (ccp_fold_builtin): Bail out if the builtin doesn't\n+\thave the right number of arguments.\n+\n 2008-12-03  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/36326"}, {"sha": "e62b98019b9cd5490996329817184554186ec06b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6ab27bb6d2a196cc8fdf13efbd137c520bae4ad/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6ab27bb6d2a196cc8fdf13efbd137c520bae4ad/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f6ab27bb6d2a196cc8fdf13efbd137c520bae4ad", "patch": "@@ -1,3 +1,8 @@\n+2008-12-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/38360\n+\t* gcc.c-torture/compile/pr38360.c: New test.\n+\n 2008-12-03  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/36326"}, {"sha": "463218d1156e0b9dd2e86dd9a9935613f0ff5730", "filename": "gcc/testsuite/gcc.c-torture/compile/pr38360.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6ab27bb6d2a196cc8fdf13efbd137c520bae4ad/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr38360.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6ab27bb6d2a196cc8fdf13efbd137c520bae4ad/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr38360.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr38360.c?ref=f6ab27bb6d2a196cc8fdf13efbd137c520bae4ad", "patch": "@@ -0,0 +1,9 @@\n+/* PR middle-end/38360 */\n+\n+int\n+main ()\n+{\n+  fputs (\"\");\n+  fputs_unlocked (\"\");\n+  return 0;\n+}"}, {"sha": "82933f81914774d74f7e0bab9b8f8cfe3505199e", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6ab27bb6d2a196cc8fdf13efbd137c520bae4ad/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6ab27bb6d2a196cc8fdf13efbd137c520bae4ad/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=f6ab27bb6d2a196cc8fdf13efbd137c520bae4ad", "patch": "@@ -2517,6 +2517,9 @@ ccp_fold_builtin (gimple stmt)\n       return NULL_TREE;\n     }\n \n+  if (arg_idx >= nargs)\n+    return NULL_TREE;\n+\n   /* Try to use the dataflow information gathered by the CCP process.  */\n   visited = BITMAP_ALLOC (NULL);\n   bitmap_clear (visited);\n@@ -2532,7 +2535,7 @@ ccp_fold_builtin (gimple stmt)\n   switch (DECL_FUNCTION_CODE (callee))\n     {\n     case BUILT_IN_STRLEN:\n-      if (val[0])\n+      if (val[0] && nargs == 1)\n \t{\n \t  tree new_val =\n               fold_convert (TREE_TYPE (gimple_call_lhs (stmt)), val[0]);\n@@ -2564,22 +2567,24 @@ ccp_fold_builtin (gimple stmt)\n       break;\n \n     case BUILT_IN_FPUTS:\n-      result = fold_builtin_fputs (gimple_call_arg (stmt, 0),\n-                                   gimple_call_arg (stmt, 1),\n-\t\t\t\t   ignore, false, val[0]);\n+      if (nargs == 2)\n+\tresult = fold_builtin_fputs (gimple_call_arg (stmt, 0),\n+\t\t\t\t     gimple_call_arg (stmt, 1),\n+\t\t\t\t     ignore, false, val[0]);\n       break;\n \n     case BUILT_IN_FPUTS_UNLOCKED:\n-      result = fold_builtin_fputs (gimple_call_arg (stmt, 0),\n-\t\t\t\t   gimple_call_arg (stmt, 1),\n-                                   ignore, true, val[0]);\n+      if (nargs == 2)\n+\tresult = fold_builtin_fputs (gimple_call_arg (stmt, 0),\n+\t\t\t\t     gimple_call_arg (stmt, 1),\n+\t\t\t\t     ignore, true, val[0]);\n       break;\n \n     case BUILT_IN_MEMCPY_CHK:\n     case BUILT_IN_MEMPCPY_CHK:\n     case BUILT_IN_MEMMOVE_CHK:\n     case BUILT_IN_MEMSET_CHK:\n-      if (val[2] && is_gimple_val (val[2]))\n+      if (val[2] && is_gimple_val (val[2]) && nargs == 4)\n \tresult = fold_builtin_memory_chk (callee,\n                                           gimple_call_arg (stmt, 0),\n                                           gimple_call_arg (stmt, 1),\n@@ -2591,7 +2596,7 @@ ccp_fold_builtin (gimple stmt)\n \n     case BUILT_IN_STRCPY_CHK:\n     case BUILT_IN_STPCPY_CHK:\n-      if (val[1] && is_gimple_val (val[1]))\n+      if (val[1] && is_gimple_val (val[1]) && nargs == 3)\n \tresult = fold_builtin_stxcpy_chk (callee,\n                                           gimple_call_arg (stmt, 0),\n                                           gimple_call_arg (stmt, 1),\n@@ -2601,7 +2606,7 @@ ccp_fold_builtin (gimple stmt)\n       break;\n \n     case BUILT_IN_STRNCPY_CHK:\n-      if (val[2] && is_gimple_val (val[2]))\n+      if (val[2] && is_gimple_val (val[2]) && nargs == 4)\n \tresult = fold_builtin_strncpy_chk (gimple_call_arg (stmt, 0),\n                                            gimple_call_arg (stmt, 1),\n                                            gimple_call_arg (stmt, 2),"}]}