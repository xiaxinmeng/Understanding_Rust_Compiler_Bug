{"sha": "29f7a2086523cb50431166360d321b4c0d4c43c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjlmN2EyMDg2NTIzY2I1MDQzMTE2NjM2MGQzMjFiNGMwZDRjNDNjMg==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2002-01-01T23:21:01Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2002-01-01T23:21:01Z"}, "message": "configure.in: Prepend ${srcdir}/config/${cpu_type}/ instead of ${srcdir}/ginclude/ to every...\n\n\t* configure.in: Prepend ${srcdir}/config/${cpu_type}/ instead of\n\t${srcdir}/ginclude/ to every entry in extra_headers.\n\t* configure: Regenerate.\n\t* ginclude/math-3300.h: Rename to config/m68k/math-3300.h.\n\t* ginclude/math-68881.h: Rename to config/m68k/math-68881.h.\n\t* ginclude/ppc-asm.h: Rename to config/rs6000/ppc-asm.h.\n\t* ginclude/proto.h: Rename to config/convex/proto.h.\n\nFrom-SVN: r48454", "tree": {"sha": "7615a5f5768452d4f23ff7d476489f2b63973ab5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7615a5f5768452d4f23ff7d476489f2b63973ab5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29f7a2086523cb50431166360d321b4c0d4c43c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29f7a2086523cb50431166360d321b4c0d4c43c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29f7a2086523cb50431166360d321b4c0d4c43c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29f7a2086523cb50431166360d321b4c0d4c43c2/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c445c4ba51f738e9b690f30cb4abda9f6639051", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c445c4ba51f738e9b690f30cb4abda9f6639051", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c445c4ba51f738e9b690f30cb4abda9f6639051"}], "stats": {"total": 38, "additions": 24, "deletions": 14}, "files": [{"sha": "1b5008b0cba7f72e45decda26203d3f3f7785135", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29f7a2086523cb50431166360d321b4c0d4c43c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29f7a2086523cb50431166360d321b4c0d4c43c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=29f7a2086523cb50431166360d321b4c0d4c43c2", "patch": "@@ -1,3 +1,13 @@\n+2002-01-01  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* configure.in: Prepend ${srcdir}/config/${cpu_type}/ instead of\n+\t${srcdir}/ginclude/ to every entry in extra_headers.\n+\t* configure: Regenerate.\n+\t* ginclude/math-3300.h: Rename to config/m68k/math-3300.h.\n+\t* ginclude/math-68881.h: Rename to config/m68k/math-68881.h.\n+\t* ginclude/ppc-asm.h: Rename to config/rs6000/ppc-asm.h.\n+\t* ginclude/proto.h: Rename to config/convex/proto.h.\n+\n Tue Jan  1 17:12:56 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* attribs.c (handle_vector_size_attribute): Use host_integerp"}, {"sha": "cc48915d842179bb33fb643db740bcce283a216a", "filename": "gcc/config/convex/proto.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29f7a2086523cb50431166360d321b4c0d4c43c2/gcc%2Fconfig%2Fconvex%2Fproto.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29f7a2086523cb50431166360d321b4c0d4c43c2/gcc%2Fconfig%2Fconvex%2Fproto.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fconvex%2Fproto.h?ref=29f7a2086523cb50431166360d321b4c0d4c43c2", "previous_filename": "gcc/ginclude/proto.h"}, {"sha": "5d7ba28f67f6ecc4a376699c7bbb5089babf4325", "filename": "gcc/config/m68k/math-3300.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29f7a2086523cb50431166360d321b4c0d4c43c2/gcc%2Fconfig%2Fm68k%2Fmath-3300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29f7a2086523cb50431166360d321b4c0d4c43c2/gcc%2Fconfig%2Fm68k%2Fmath-3300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fmath-3300.h?ref=29f7a2086523cb50431166360d321b4c0d4c43c2", "previous_filename": "gcc/ginclude/math-3300.h"}, {"sha": "7b91bc56a5dbe450982cb1ab144abcde51021662", "filename": "gcc/config/m68k/math-68881.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29f7a2086523cb50431166360d321b4c0d4c43c2/gcc%2Fconfig%2Fm68k%2Fmath-68881.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29f7a2086523cb50431166360d321b4c0d4c43c2/gcc%2Fconfig%2Fm68k%2Fmath-68881.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fmath-68881.h?ref=29f7a2086523cb50431166360d321b4c0d4c43c2", "previous_filename": "gcc/ginclude/math-68881.h"}, {"sha": "3a6fb2a8bcd4072525275747a373e39a21ab4672", "filename": "gcc/config/rs6000/ppc-asm.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29f7a2086523cb50431166360d321b4c0d4c43c2/gcc%2Fconfig%2Frs6000%2Fppc-asm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29f7a2086523cb50431166360d321b4c0d4c43c2/gcc%2Fconfig%2Frs6000%2Fppc-asm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fppc-asm.h?ref=29f7a2086523cb50431166360d321b4c0d4c43c2", "previous_filename": "gcc/ginclude/ppc-asm.h"}, {"sha": "5479946e0700ec38b8acb26bcfd9ce367086441e", "filename": "gcc/configure", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29f7a2086523cb50431166360d321b4c0d4c43c2/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29f7a2086523cb50431166360d321b4c0d4c43c2/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=29f7a2086523cb50431166360d321b4c0d4c43c2", "patch": "@@ -6786,10 +6786,10 @@ extra_headers_list=\n if test \"x$extra_headers\" = x\n then true\n else\n-\t# Prepend ${srcdir}/ginclude/ to every entry in extra_headers.\n+\t# Prepend ${srcdir}/config/${cpu_type}/ to every entry in extra_headers.\n \tfor file in $extra_headers;\n \tdo\n-\t\textra_headers_list=\"${extra_headers_list} \\$(srcdir)/ginclude/${file}\"\n+\t\textra_headers_list=\"${extra_headers_list} \\$(srcdir)/config/${cpu_type}/${file}\"\n \tdone\n fi\n \n@@ -7439,7 +7439,7 @@ EOF\n     case \"$tm_file\" in\n     *64*)\n \techo $ac_n \"checking for 64 bit support in assembler ($gcc_cv_as)\"\"... $ac_c\" 1>&6\n-echo \"configure:7442: checking for 64 bit support in assembler ($gcc_cv_as)\" >&5\n+echo \"configure:7443: checking for 64 bit support in assembler ($gcc_cv_as)\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_flags64'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7484,7 +7484,7 @@ EOF\n \n     if test \"x$gcc_cv_as_flags64\" != xno; then\n \techo $ac_n \"checking for assembler offsetable %lo() support\"\"... $ac_c\" 1>&6\n-echo \"configure:7487: checking for assembler offsetable %lo() support\" >&5\n+echo \"configure:7488: checking for assembler offsetable %lo() support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_offsetable_lo10'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -7524,7 +7524,7 @@ EOF\n \n   i[34567]86-*-* | x86_64-*-*)\n     echo $ac_n \"checking assembler instructions\"\"... $ac_c\" 1>&6\n-echo \"configure:7527: checking assembler instructions\" >&5\n+echo \"configure:7528: checking assembler instructions\" >&5\n     gcc_cv_as_instructions=\n     if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n       if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 9 -o \"$gcc_cv_gas_major_version\" -gt 2; then\n@@ -7551,7 +7551,7 @@ EOF\n     echo \"$ac_t\"\"$gcc_cv_as_instructions\" 1>&6\n \n     echo $ac_n \"checking assembler GOTOFF in data directives\"\"... $ac_c\" 1>&6\n-echo \"configure:7554: checking assembler GOTOFF in data directives\" >&5\n+echo \"configure:7555: checking assembler GOTOFF in data directives\" >&5\n     gcc_cv_as_gotoff_in_data=no\n     if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x\n     then\n@@ -7581,7 +7581,7 @@ EOF\n esac\n \n echo $ac_n \"checking assembler dwarf2 debug_line support\"\"... $ac_c\" 1>&6\n-echo \"configure:7584: checking assembler dwarf2 debug_line support\" >&5\n+echo \"configure:7585: checking assembler dwarf2 debug_line support\" >&5\n gcc_cv_as_dwarf2_debug_line=no\n # ??? Not all targets support dwarf2 debug_line, even within a version\n # of gas.  Moreover, we need to emit a valid instruction to trigger any\n@@ -7637,7 +7637,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_dwarf2_debug_line\" 1>&6\n \n echo $ac_n \"checking assembler --gdwarf2 support\"\"... $ac_c\" 1>&6\n-echo \"configure:7640: checking assembler --gdwarf2 support\" >&5\n+echo \"configure:7641: checking assembler --gdwarf2 support\" >&5\n gcc_cv_as_gdwarf2_flag=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x;\n then\n@@ -7666,7 +7666,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_gdwarf2_flag\" 1>&6\n \n echo $ac_n \"checking assembler --gstabs support\"\"... $ac_c\" 1>&6\n-echo \"configure:7669: checking assembler --gstabs support\" >&5\n+echo \"configure:7670: checking assembler --gstabs support\" >&5\n gcc_cv_as_gstabs_flag=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x;\n then\n@@ -7694,7 +7694,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_gstabs_flag\" 1>&6\n \n echo $ac_n \"checking linker PT_GNU_EH_FRAME support\"\"... $ac_c\" 1>&6\n-echo \"configure:7697: checking linker PT_GNU_EH_FRAME support\" >&5\n+echo \"configure:7698: checking linker PT_GNU_EH_FRAME support\" >&5\n gcc_cv_ld_eh_frame_hdr=no\n if test x$gcc_cv_gld_major_version != x -a x$gcc_cv_gld_minor_version != x; then\n   if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 12 -o \"$gcc_cv_gld_major_version\" -gt 2 && grep 'EMUL = elf' ../ld/Makefile > /dev/null; then\n@@ -7857,7 +7857,7 @@ fi\n \n \n echo $ac_n \"checking whether to enable maintainer-specific portions of Makefiles\"\"... $ac_c\" 1>&6\n-echo \"configure:7860: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n+echo \"configure:7861: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n     # Check whether --enable-maintainer-mode or --disable-maintainer-mode was given.\n if test \"${enable_maintainer_mode+set}\" = set; then\n   enableval=\"$enable_maintainer_mode\""}, {"sha": "11e66310f99a9d0d3e25ad67c1e723197d352835", "filename": "gcc/configure.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29f7a2086523cb50431166360d321b4c0d4c43c2/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29f7a2086523cb50431166360d321b4c0d4c43c2/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=29f7a2086523cb50431166360d321b4c0d4c43c2", "patch": "@@ -1,7 +1,7 @@\n # configure.in for GCC\n # Process this file with autoconf to generate a configuration script.\n \n-# Copyright (C) 1997, 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n+# Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n \n@@ -1136,10 +1136,10 @@ extra_headers_list=\n if test \"x$extra_headers\" = x\n then true\n else\n-\t# Prepend ${srcdir}/ginclude/ to every entry in extra_headers.\n+\t# Prepend ${srcdir}/config/${cpu_type}/ to every entry in extra_headers.\n \tfor file in $extra_headers;\n \tdo\n-\t\textra_headers_list=\"${extra_headers_list} \\$(srcdir)/ginclude/${file}\"\n+\t\textra_headers_list=\"${extra_headers_list} \\$(srcdir)/config/${cpu_type}/${file}\"\n \tdone\n fi\n "}]}