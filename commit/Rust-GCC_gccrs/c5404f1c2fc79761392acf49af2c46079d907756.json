{"sha": "c5404f1c2fc79761392acf49af2c46079d907756", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU0MDRmMWMyZmM3OTc2MTM5MmFjZjQ5YWYyYzQ2MDc5ZDkwNzc1Ng==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2015-12-04T17:43:53Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2015-12-04T17:43:53Z"}, "message": "c-common.c (maybe_warn_shift_overflow): Warn on all overflows if shifting 1 out of the sign bit.\n\ngcc:\n2015-12-04  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* c-family/c-common.c (maybe_warn_shift_overflow): Warn on all\n\toverflows if shifting 1 out of the sign bit.\n\ngcc/testsuite:\n2015-12-04  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* c-c++-common/Wshift-overflow-1.c: Test shifting 1 out of the sign bit.\n\t* c-c++-common/Wshift-overflow-2.c: Test shifting 1 out of the sign bit.\n\t* c-c++-common/Wshift-overflow-3.c: Test shifting 1 out of the sign bit.\n\t* c-c++-common/Wshift-overflow-4.c: Test shifting 1 out of the sign bit.\n\t* c-c++-common/Wshift-overflow-6.c: Test shifting 1 out of the sign bit.\n\t* c-c++-common/Wshift-overflow-7.c: Test shifting 1 out of the sign bit.\n\nFrom-SVN: r231290", "tree": {"sha": "73bbb14534693ad3de655a2066cd0059ac651d6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73bbb14534693ad3de655a2066cd0059ac651d6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5404f1c2fc79761392acf49af2c46079d907756", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5404f1c2fc79761392acf49af2c46079d907756", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5404f1c2fc79761392acf49af2c46079d907756", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5404f1c2fc79761392acf49af2c46079d907756/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "755be51d0266bc008def4de484cc9c7803283d69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/755be51d0266bc008def4de484cc9c7803283d69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/755be51d0266bc008def4de484cc9c7803283d69"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "b25e6430f9bd94bec8848bee7f219ad58691c10c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5404f1c2fc79761392acf49af2c46079d907756/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5404f1c2fc79761392acf49af2c46079d907756/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c5404f1c2fc79761392acf49af2c46079d907756", "patch": "@@ -1,3 +1,8 @@\n+2015-12-04  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* c-family/c-common.c (maybe_warn_shift_overflow): Warn on all\n+\toverflows if shifting 1 out of the sign bit.\n+\n 2015-12-04  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* (cstore<mode>4_unsigned): Use gpc_reg_operand instead of"}, {"sha": "f89deb32889f649a9554a8676fe6c2599e59cbf0", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5404f1c2fc79761392acf49af2c46079d907756/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5404f1c2fc79761392acf49af2c46079d907756/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=c5404f1c2fc79761392acf49af2c46079d907756", "patch": "@@ -12107,8 +12107,11 @@ maybe_warn_shift_overflow (location_t loc, tree op0, tree op1)\n \n   unsigned int min_prec = (wi::min_precision (op0, SIGNED)\n \t\t\t   + TREE_INT_CST_LOW (op1));\n-  /* Handle the left-shifting 1 into the sign bit case.  */\n-  if (min_prec == prec0 + 1)\n+  /* Handle the case of left-shifting 1 into the sign bit.\n+   * However, shifting 1 _out_ of the sign bit, as in\n+   * INT_MIN << 1, is considered an overflow.\n+   */\n+  if (!tree_int_cst_sign_bit(op0) && min_prec == prec0 + 1)\n     {\n       /* Never warn for C++14 onwards.  */\n       if (cxx_dialect >= cxx14)"}, {"sha": "e9ad14a12e5feb8d9e428f78668480a9971cef7f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5404f1c2fc79761392acf49af2c46079d907756/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5404f1c2fc79761392acf49af2c46079d907756/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c5404f1c2fc79761392acf49af2c46079d907756", "patch": "@@ -1,3 +1,12 @@\n+2015-12-04  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* c-c++-common/Wshift-overflow-1.c: Test shifting 1 out of the sign bit.\n+\t* c-c++-common/Wshift-overflow-2.c: Test shifting 1 out of the sign bit.\n+\t* c-c++-common/Wshift-overflow-3.c: Test shifting 1 out of the sign bit.\n+\t* c-c++-common/Wshift-overflow-4.c: Test shifting 1 out of the sign bit.\n+\t* c-c++-common/Wshift-overflow-6.c: Test shifting 1 out of the sign bit.\n+\t* c-c++-common/Wshift-overflow-7.c: Test shifting 1 out of the sign bit.\n+\n 2015-11-25  Nick Clifton  <nickc@redhat.com>\n \n \t* gcc.target/msp430/msp_abi_div_funcs.c: New test."}, {"sha": "a69f2b83464c4f14802745684b692d3a31b2858e", "filename": "gcc/testsuite/c-c++-common/Wshift-overflow-1.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5404f1c2fc79761392acf49af2c46079d907756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5404f1c2fc79761392acf49af2c46079d907756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-1.c?ref=c5404f1c2fc79761392acf49af2c46079d907756", "patch": "@@ -8,6 +8,9 @@\n #define LLONGM1 (sizeof (long long) * __CHAR_BIT__ - 1)\n #define LLONGM2 (sizeof (long long) * __CHAR_BIT__ - 2)\n \n+#define INT_MIN (-__INT_MAX__-1)\n+#define LONG_LONG_MIN (-__LONG_LONG_MAX__-1)\n+\n int i1 = 1 << INTM1;\n int i2 = 9 << INTM1; /* { dg-warning \"requires 36 bits to represent\" } */\n int i3 = 10 << INTM2; /* { dg-warning \"requires 35 bits to represent\" } */\n@@ -18,6 +21,7 @@ int i7 = -9 << INTM1; /* { dg-warning \"requires 36 bits to represent\" } */\n int i8 = -10 << INTM2; /* { dg-warning \"requires 35 bits to represent\" } */\n int i9 = -__INT_MAX__ << 2; /* { dg-warning \"requires 34 bits to represent\" } */\n int i10 = -__INT_MAX__ << INTM1; /* { dg-warning \"requires 63 bits to represent\" } */\n+int i11 = INT_MIN << 1; /* { dg-warning \"requires 33 bits to represent\" } */\n \n int r1 = 1 >> INTM1;\n int r2 = 9 >> INTM1;\n@@ -46,6 +50,7 @@ long long int l7 = -9LL << LLONGM1; /* { dg-warning \"requires 68 bits to represe\n long long int l8 = -10LL << LLONGM2; /* { dg-warning \"requires 67 bits to represent\" } */\n long long int l9 = -__LONG_LONG_MAX__ << 2; /* { dg-warning \"requires 66 bits to represent\" } */\n long long int l10 = -__LONG_LONG_MAX__ << LLONGM1; /* { dg-warning \"requires 127 bits to represent\" } */\n+long long int l11 = LONG_LONG_MIN << 1; /* { dg-warning \"requires 65 bits to represent\" } */\n \n void\n fn (void)"}, {"sha": "30fd2552df33e72d6954eee9c98ae1b72c2006dc", "filename": "gcc/testsuite/c-c++-common/Wshift-overflow-2.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5404f1c2fc79761392acf49af2c46079d907756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5404f1c2fc79761392acf49af2c46079d907756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-2.c?ref=c5404f1c2fc79761392acf49af2c46079d907756", "patch": "@@ -8,6 +8,9 @@\n #define LLONGM1 (sizeof (long long) * __CHAR_BIT__ - 1)\n #define LLONGM2 (sizeof (long long) * __CHAR_BIT__ - 2)\n \n+#define INT_MIN (-__INT_MAX__-1)\n+#define LONG_LONG_MIN (-__LONG_LONG_MAX__-1)\n+\n int i1 = 1 << INTM1;\n int i2 = 9 << INTM1;\n int i3 = 10 << INTM2;\n@@ -18,6 +21,7 @@ int i7 = -9 << INTM1;\n int i8 = -10 << INTM2;\n int i9 = -__INT_MAX__ << 2;\n int i10 = -__INT_MAX__ << INTM1;\n+int i11 = INT_MIN << 1;\n \n int r1 = 1 >> INTM1;\n int r2 = 9 >> INTM1;\n@@ -46,6 +50,7 @@ long long int l7 = -9LL << LLONGM1;\n long long int l8 = -10LL << LLONGM2;\n long long int l9 = -__LONG_LONG_MAX__ << 2;\n long long int l10 = -__LONG_LONG_MAX__ << LLONGM1;\n+long long int l11 = LONG_LONG_MIN << 1;\n \n void\n fn (void)"}, {"sha": "03b07f8092c76dcc087afe4627b69018091c815b", "filename": "gcc/testsuite/c-c++-common/Wshift-overflow-3.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5404f1c2fc79761392acf49af2c46079d907756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5404f1c2fc79761392acf49af2c46079d907756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-3.c?ref=c5404f1c2fc79761392acf49af2c46079d907756", "patch": "@@ -9,6 +9,9 @@\n #define LLONGM1 (sizeof (long long) * __CHAR_BIT__ - 1)\n #define LLONGM2 (sizeof (long long) * __CHAR_BIT__ - 2)\n \n+#define INT_MIN (-__INT_MAX__-1)\n+#define LONG_LONG_MIN (-__LONG_LONG_MAX__-1)\n+\n int i1 = 1 << INTM1;\n int i2 = 9 << INTM1; /* { dg-warning \"requires 36 bits to represent\" } */\n int i3 = 10 << INTM2; /* { dg-warning \"requires 35 bits to represent\" } */\n@@ -19,6 +22,7 @@ int i7 = -9 << INTM1; /* { dg-warning \"requires 36 bits to represent\" } */\n int i8 = -10 << INTM2; /* { dg-warning \"requires 35 bits to represent\" } */\n int i9 = -__INT_MAX__ << 2; /* { dg-warning \"requires 34 bits to represent\" } */\n int i10 = -__INT_MAX__ << INTM1; /* { dg-warning \"requires 63 bits to represent\" } */\n+int i11 = INT_MIN << 1; /* { dg-warning \"requires 33 bits to represent\" } */\n \n int r1 = 1 >> INTM1;\n int r2 = 9 >> INTM1;\n@@ -47,6 +51,7 @@ long long int l7 = -9LL << LLONGM1; /* { dg-warning \"requires 68 bits to represe\n long long int l8 = -10LL << LLONGM2; /* { dg-warning \"requires 67 bits to represent\" } */\n long long int l9 = -__LONG_LONG_MAX__ << 2; /* { dg-warning \"requires 66 bits to represent\" } */\n long long int l10 = -__LONG_LONG_MAX__ << LLONGM1; /* { dg-warning \"requires 127 bits to represent\" } */\n+long long int l11 = LONG_LONG_MIN << 1; /* { dg-warning \"requires 65 bits to represent\" } */\n \n void\n fn (void)"}, {"sha": "d44f9dc9804eb67691c3309638ed90e70038b6b5", "filename": "gcc/testsuite/c-c++-common/Wshift-overflow-4.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5404f1c2fc79761392acf49af2c46079d907756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5404f1c2fc79761392acf49af2c46079d907756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-4.c?ref=c5404f1c2fc79761392acf49af2c46079d907756", "patch": "@@ -9,6 +9,9 @@\n #define LLONGM1 (sizeof (long long) * __CHAR_BIT__ - 1)\n #define LLONGM2 (sizeof (long long) * __CHAR_BIT__ - 2)\n \n+#define INT_MIN (-__INT_MAX__-1)\n+#define LONG_LONG_MIN (-__LONG_LONG_MAX__-1)\n+\n int i1 = 1 << INTM1;\n int i2 = 9 << INTM1;\n int i3 = 10 << INTM2;\n@@ -19,6 +22,7 @@ int i7 = -9 << INTM1;\n int i8 = -10 << INTM2;\n int i9 = -__INT_MAX__ << 2;\n int i10 = -__INT_MAX__ << INTM1;\n+int i11 = INT_MIN << 1;\n \n int r1 = 1 >> INTM1;\n int r2 = 9 >> INTM1;\n@@ -47,6 +51,7 @@ long long int l7 = -9LL << LLONGM1;\n long long int l8 = -10LL << LLONGM2;\n long long int l9 = -__LONG_LONG_MAX__ << 2;\n long long int l10 = -__LONG_LONG_MAX__ << LLONGM1;\n+long long int l11 = LONG_LONG_MIN << 1;\n \n void\n fn (void)"}, {"sha": "64797f44a13fd6ce35d6af279269e074b88e85e4", "filename": "gcc/testsuite/c-c++-common/Wshift-overflow-6.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5404f1c2fc79761392acf49af2c46079d907756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5404f1c2fc79761392acf49af2c46079d907756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-6.c?ref=c5404f1c2fc79761392acf49af2c46079d907756", "patch": "@@ -34,3 +34,4 @@ int i27 = 0b1000000000000000000000000000 << 4;\n int i28 = 0b10000000000000000000000000000 << 3;\n int i29 = 0b100000000000000000000000000000 << 2;\n int i30 = 0b1000000000000000000000000000000 << 1;\n+int i31 = (int) 0b10000000000000000000000000000000u << 1; /* { dg-warning \"requires 33 bits to represent\" } */"}, {"sha": "ca99d2e46fe44281fcb337d85a39ca6719145b48", "filename": "gcc/testsuite/c-c++-common/Wshift-overflow-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5404f1c2fc79761392acf49af2c46079d907756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5404f1c2fc79761392acf49af2c46079d907756/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-7.c?ref=c5404f1c2fc79761392acf49af2c46079d907756", "patch": "@@ -34,3 +34,4 @@ int i27 = 0b1000000000000000000000000000 << 4; /* { dg-warning \"requires 33 bits\n int i28 = 0b10000000000000000000000000000 << 3; /* { dg-warning \"requires 33 bits to represent\" } */\n int i29 = 0b100000000000000000000000000000 << 2; /* { dg-warning \"requires 33 bits to represent\" } */\n int i30 = 0b1000000000000000000000000000000 << 1; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i31 = (int) 0b10000000000000000000000000000000u << 1; /* { dg-warning \"requires 33 bits to represent\" } */"}]}