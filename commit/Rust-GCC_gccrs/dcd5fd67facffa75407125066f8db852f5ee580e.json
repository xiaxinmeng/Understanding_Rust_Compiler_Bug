{"sha": "dcd5fd67facffa75407125066f8db852f5ee580e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNkNWZkNjdmYWNmZmE3NTQwNzEyNTA2NmY4ZGI4NTJmNWVlNTgwZQ==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-11-09T11:33:12Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-11-09T11:33:12Z"}, "message": "[multiple changes]\n\n2017-11-09  Yannick Moy  <moy@adacore.com>\n\n\t* binde.adb (Diagnose_Elaboration_Problem): Mark procedure No_Return.\n\t* checks.adb (Apply_Scalar_Range_Check): Rescope variable OK closer to\n\tuse.  Default initialize Hi, Lo.\n\t(Selected_Range_Checks): Retype Num_Checks more precisely.\n\t(Determine_Range, Determine_Range_R): Default initialize Hi_Right,\n\tLo_Right.\n\t* contracts.adb (Process_Contract_Cases): Mark parameter Stmts as\n\tUnmodified.\n\t(Process_Postconditions): Mark parameter Stmts as Unmodified.\n\t* exp_attr.adb (Expand_Loop_Entry_Attribute): Default initialize Blk.\n\t* exp_ch4.adb (Expand_N_Allocator): Default initialize Typ.\n\t(Expand_Concatenate): Default initialize High_Bound.\n\t(Optimize_Length_Comparison): Default initialize Ent, Index.\n\t* exp_ch5.adb (Expand_Predicated_Loop): Default initialize L_Hi and\n\tL_Lo.\n\t* exp_ch6.adb (Expand_N_Extended_Return_Statement): Default initialize\n\tReturn_Stmt.\n\t* exp_ch9.adb (Expand_Entry_Barrier): Default initialize Func_Body and\n\tremove pragma Warnings(Off).\n\t* exp_imgv.adb (Expand_Image_Attribute): Default initialize Tent.\n\t* exp_util.adb (Find_Interface_Tag): Default initialize AI_Tag.\n\t* freeze.adb (Check_Component_Storage_Order): Default initialize\n\tComp_Byte_Aligned rather than silencing messages with pragma\n\tWarnings(Off), which does not work for CodePeer initialization\n\tmessages, and given that here the possible read of an unitialized value\n\tdepends on a proper use of parameters by the caller.\n\t* inline.adb (Expand_Inlined_Call): Default initialize Lab_Decl, Targ.\n\t* sem_ch12.adb (Build_Operator_Wrapper): Default initialize Expr.\n\t* sem_ch3.adb (Build_Derived_Array_Type): Default initialize\n\tImplicit_Base.\n\t* sem_ch4.adb (List_Operand_Interps): Default initialize Nam and remove\n\tpragma Warnings(Off).\n\t(Analyze_Case_Expression): Rescope checking block within branch where\n\tOthers_Present is set by the call to Check_Choices.\n\t* sem_ch5.adb (Analyze_Assignment): Default initialize\n\tSave_Full_Analysis.\n\t* sem_ch6.adb (Analyze_Function_Return): Default initialize Obj_Decl,\n\tand restructure code to defend against previous errors, so that, in\n\tthat case, control does not flow to the elsif condition which read an\n\tuninitialized Obj_Decl.\n\t* sem_ch9.adb (Analyze_Requeue): Default initialize Synch_Type.\n\t(Check_Interfaces): Default initialize Full_T_Ifaces and Priv_T_Ifaces,\n\twhich seem to be left uninitialized and possibly read in some cases.\n\t* sem_dim.adb (Analyze_Aspect_Dimension_System): Retype Position more\n\tprecisely.  This requires to exchange the test for exiting in case of\n\ttoo many positions and the increment to Position, inside the loop.\n\t* sem_eval.adb (Eval_Concatenation): Default initialize Folded_Val,\n\twhich cannot be read uninitialized, but the reasons for that are quite\n\tsubtle.\n\t* sem_intr.adb (Check_Intrinsic_Call): Default initialize Rtyp.\n\t* sem_prag.adb (Collect_Subprogram_Inputs_Outputs): Default initialize\n\tSpec_Id.\n\t* sem_res.adb (Make_Call_Into_Operator): Default initialize Opnd_Type,\n\tand test for presence of non-null Opnd_Type before testing its scope,\n\tin a test which would read its value uninitialized, and is very rarely\n\texercized (it depends on the presence of an extension of System).\n\t* sem_spark.ads: Update comment to fix name of main analysis procedure.\n\t* sem_warn.adb (Warn_On_Known_Condition): Default initialize\n\tTest_Result.\n\t* set_targ.adb (FailN): Mark procedure with No_Return.\n\t* stylesw.adb (Save_Style_Check_Options): Delete useless code to\n\tinitialize all array Options to white space, as there is already code\n\tdoing the same for the remaining positions in Options at the end of the\n\tprocedure.\n\n2017-11-09  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* exp_ch11.adb (Possible_Local_Raise): Do not issue the warning for\n\tgeneric instantiations either.\n\nFrom-SVN: r254570", "tree": {"sha": "8e9f9f41b10b25a6f516a36c8ac12221e333155f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e9f9f41b10b25a6f516a36c8ac12221e333155f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcd5fd67facffa75407125066f8db852f5ee580e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcd5fd67facffa75407125066f8db852f5ee580e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcd5fd67facffa75407125066f8db852f5ee580e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcd5fd67facffa75407125066f8db852f5ee580e/comments", "author": null, "committer": null, "parents": [{"sha": "c312b9f280e4bf77c5b2869a9508ea3e8a6c5744", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c312b9f280e4bf77c5b2869a9508ea3e8a6c5744", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c312b9f280e4bf77c5b2869a9508ea3e8a6c5744"}], "stats": {"total": 226, "additions": 156, "deletions": 70}, "files": [{"sha": "f612544118a6066e631353697a8edc394925c1fd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -1,3 +1,75 @@\n+2017-11-09  Yannick Moy  <moy@adacore.com>\n+\n+\t* binde.adb (Diagnose_Elaboration_Problem): Mark procedure No_Return.\n+\t* checks.adb (Apply_Scalar_Range_Check): Rescope variable OK closer to\n+\tuse.  Default initialize Hi, Lo.\n+\t(Selected_Range_Checks): Retype Num_Checks more precisely.\n+\t(Determine_Range, Determine_Range_R): Default initialize Hi_Right,\n+\tLo_Right.\n+\t* contracts.adb (Process_Contract_Cases): Mark parameter Stmts as\n+\tUnmodified.\n+\t(Process_Postconditions): Mark parameter Stmts as Unmodified.\n+\t* exp_attr.adb (Expand_Loop_Entry_Attribute): Default initialize Blk.\n+\t* exp_ch4.adb (Expand_N_Allocator): Default initialize Typ.\n+\t(Expand_Concatenate): Default initialize High_Bound.\n+\t(Optimize_Length_Comparison): Default initialize Ent, Index.\n+\t* exp_ch5.adb (Expand_Predicated_Loop): Default initialize L_Hi and\n+\tL_Lo.\n+\t* exp_ch6.adb (Expand_N_Extended_Return_Statement): Default initialize\n+\tReturn_Stmt.\n+\t* exp_ch9.adb (Expand_Entry_Barrier): Default initialize Func_Body and\n+\tremove pragma Warnings(Off).\n+\t* exp_imgv.adb (Expand_Image_Attribute): Default initialize Tent.\n+\t* exp_util.adb (Find_Interface_Tag): Default initialize AI_Tag.\n+\t* freeze.adb (Check_Component_Storage_Order): Default initialize\n+\tComp_Byte_Aligned rather than silencing messages with pragma\n+\tWarnings(Off), which does not work for CodePeer initialization\n+\tmessages, and given that here the possible read of an unitialized value\n+\tdepends on a proper use of parameters by the caller.\n+\t* inline.adb (Expand_Inlined_Call): Default initialize Lab_Decl, Targ.\n+\t* sem_ch12.adb (Build_Operator_Wrapper): Default initialize Expr.\n+\t* sem_ch3.adb (Build_Derived_Array_Type): Default initialize\n+\tImplicit_Base.\n+\t* sem_ch4.adb (List_Operand_Interps): Default initialize Nam and remove\n+\tpragma Warnings(Off).\n+\t(Analyze_Case_Expression): Rescope checking block within branch where\n+\tOthers_Present is set by the call to Check_Choices.\n+\t* sem_ch5.adb (Analyze_Assignment): Default initialize\n+\tSave_Full_Analysis.\n+\t* sem_ch6.adb (Analyze_Function_Return): Default initialize Obj_Decl,\n+\tand restructure code to defend against previous errors, so that, in\n+\tthat case, control does not flow to the elsif condition which read an\n+\tuninitialized Obj_Decl.\n+\t* sem_ch9.adb (Analyze_Requeue): Default initialize Synch_Type.\n+\t(Check_Interfaces): Default initialize Full_T_Ifaces and Priv_T_Ifaces,\n+\twhich seem to be left uninitialized and possibly read in some cases.\n+\t* sem_dim.adb (Analyze_Aspect_Dimension_System): Retype Position more\n+\tprecisely.  This requires to exchange the test for exiting in case of\n+\ttoo many positions and the increment to Position, inside the loop.\n+\t* sem_eval.adb (Eval_Concatenation): Default initialize Folded_Val,\n+\twhich cannot be read uninitialized, but the reasons for that are quite\n+\tsubtle.\n+\t* sem_intr.adb (Check_Intrinsic_Call): Default initialize Rtyp.\n+\t* sem_prag.adb (Collect_Subprogram_Inputs_Outputs): Default initialize\n+\tSpec_Id.\n+\t* sem_res.adb (Make_Call_Into_Operator): Default initialize Opnd_Type,\n+\tand test for presence of non-null Opnd_Type before testing its scope,\n+\tin a test which would read its value uninitialized, and is very rarely\n+\texercized (it depends on the presence of an extension of System).\n+\t* sem_spark.ads: Update comment to fix name of main analysis procedure.\n+\t* sem_warn.adb (Warn_On_Known_Condition): Default initialize\n+\tTest_Result.\n+\t* set_targ.adb (FailN): Mark procedure with No_Return.\n+\t* stylesw.adb (Save_Style_Check_Options): Delete useless code to\n+\tinitialize all array Options to white space, as there is already code\n+\tdoing the same for the remaining positions in Options at the end of the\n+\tprocedure.\n+\n+2017-11-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_ch11.adb (Possible_Local_Raise): Do not issue the warning for\n+\tgeneric instantiations either.\n+\n 2017-11-09  Piotr Trojanek  <trojanek@adacore.com>\n \n \t* sem_prag.adb (Analyze_Part_Of): Reword error message."}, {"sha": "5a78bc824994eb315ededbc1af9c70ef8b0e6967", "filename": "gcc/ada/binde.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fbinde.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fbinde.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbinde.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -353,6 +353,7 @@ package body Binde is\n \n    procedure Diagnose_Elaboration_Problem\n      (Elab_Order : in out Unit_Id_Table);\n+   pragma No_Return (Diagnose_Elaboration_Problem);\n    --  Called when no elaboration order can be found. Outputs an appropriate\n    --  diagnosis of the problem, and then abandons the bind.\n "}, {"sha": "c4b37e788ab644177f85340463fa4b38b8842267", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -2765,7 +2765,6 @@ package body Checks is\n       S_Typ   : Entity_Id;\n       Arr     : Node_Id   := Empty;  -- initialize to prevent warning\n       Arr_Typ : Entity_Id := Empty;  -- initialize to prevent warning\n-      OK      : Boolean   := False;  -- initialize to prevent warning\n \n       Is_Subscr_Ref : Boolean;\n       --  Set true if Expr is a subscript\n@@ -2995,10 +2994,11 @@ package body Checks is\n               and then Compile_Time_Known_Value (Thi)\n             then\n                declare\n+                  OK  : Boolean := False;  -- initialize to prevent warning\n                   Hiv : constant Uint := Expr_Value (Thi);\n                   Lov : constant Uint := Expr_Value (Tlo);\n-                  Hi  : Uint;\n-                  Lo  : Uint;\n+                  Hi  : Uint := No_Uint;\n+                  Lo  : Uint := No_Uint;\n \n                begin\n                   --  If range is null, we for sure have a constraint error (we\n@@ -4370,8 +4370,8 @@ package body Checks is\n       Hi_Left : Uint;\n       --  Lo and Hi bounds of left operand\n \n-      Lo_Right : Uint;\n-      Hi_Right : Uint;\n+      Lo_Right : Uint := No_Uint;\n+      Hi_Right : Uint := No_Uint;\n       --  Lo and Hi bounds of right (or only) operand\n \n       Bound : Node_Id;\n@@ -4909,8 +4909,8 @@ package body Checks is\n       Hi_Left : Ureal;\n       --  Lo and Hi bounds of left operand\n \n-      Lo_Right : Ureal;\n-      Hi_Right : Ureal;\n+      Lo_Right : Ureal := No_Ureal;\n+      Hi_Right : Ureal := No_Ureal;\n       --  Lo and Hi bounds of right (or only) operand\n \n       Bound : Node_Id;\n@@ -9814,7 +9814,7 @@ package body Checks is\n       Do_Access   : Boolean := False;\n       Wnode       : Node_Id  := Warn_Node;\n       Ret_Result  : Check_Result := (Empty, Empty);\n-      Num_Checks  : Integer := 0;\n+      Num_Checks  : Natural := 0;\n \n       procedure Add_Check (N : Node_Id);\n       --  Adds the action given to Ret_Result if N is non-Empty"}, {"sha": "89fc286bf5b4c1224ac2e65d4339917c429046e8", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -2393,6 +2393,11 @@ package body Contracts is\n             end if;\n          end Process_Contract_Cases_For;\n \n+         pragma Unmodified (Stmts);\n+         --  Stmts is passed as IN OUT to signal that the list can be updated,\n+         --  even if the corresponding integer value representing the list does\n+         --  not change.\n+\n       --  Start of processing for Process_Contract_Cases\n \n       begin\n@@ -2535,6 +2540,11 @@ package body Contracts is\n             end loop;\n          end Process_Spec_Postconditions;\n \n+         pragma Unmodified (Stmts);\n+         --  Stmts is passed as IN OUT to signal that the list can be updated,\n+         --  even if the corresponding integer value representing the list does\n+         --  not change.\n+\n       --  Start of processing for Process_Postconditions\n \n       begin"}, {"sha": "79c6524769bd36d80d9a516c5ec0f3204dd15a77", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -1054,7 +1054,7 @@ package body Exp_Attr is\n       Base_Typ  : constant Entity_Id := Base_Type (Etype (Pref));\n       Exprs     : constant List_Id   := Expressions (N);\n       Aux_Decl  : Node_Id;\n-      Blk       : Node_Id;\n+      Blk       : Node_Id := Empty;\n       Decls     : List_Id;\n       Installed : Boolean;\n       Loc       : Source_Ptr;"}, {"sha": "c4bf096cab72ae75de2aa1a3bd1a08e24cb58a2e", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -1855,11 +1855,13 @@ package body Exp_Ch11 is\n          --  and the warning is enabled, generate the appropriate warnings.\n \n          --  ??? Do not do it for the Call_Marker nodes inserted by the ABE\n-         --  mechanism because this generates too many false positives.\n+         --  mechanism because this generates too many false positives, or\n+         --  for generic instantiations for the same reason.\n \n          elsif Warn_On_Non_Local_Exception\n            and then Restriction_Active (No_Exception_Propagation)\n            and then Nkind (N) /= N_Call_Marker\n+           and then Nkind (N) not in N_Generic_Instantiation\n          then\n             Warn_No_Exception_Propagation_Active (N);\n "}, {"sha": "a2aa25b8d59076a45a08fea28a5f88d945b2eefb", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -2766,7 +2766,7 @@ package body Exp_Ch4 is\n       --  special case of setting the right high bound for a null result.\n       --  This is of type Ityp.\n \n-      High_Bound : Node_Id;\n+      High_Bound : Node_Id := Empty;\n       --  A tree node representing the high bound of the result (of type Ityp)\n \n       Result : Node_Id;\n@@ -4800,7 +4800,7 @@ package body Exp_Ch4 is\n \n                declare\n                   Dis : Boolean := False;\n-                  Typ : Entity_Id;\n+                  Typ : Entity_Id := Empty;\n \n                begin\n                   if Has_Discriminants (T) then\n@@ -13112,10 +13112,10 @@ package body Exp_Ch4 is\n       Comp : Node_Id;\n       --  Comparison operand, set only if Is_Zero is false\n \n-      Ent : Entity_Id;\n+      Ent : Entity_Id := Empty;\n       --  Entity whose length is being compared\n \n-      Index : Node_Id;\n+      Index : Node_Id := Empty;\n       --  Integer_Literal node for length attribute expression, or Empty\n       --  if there is no such expression present.\n "}, {"sha": "d98e725d85ff260c4bae85ad16f5b9e26edf767d", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -4769,8 +4769,8 @@ package body Exp_Ch5 is\n \n             --  If the domain is an itype, note the bounds of its range.\n \n-            L_Hi  : Node_Id;\n-            L_Lo  : Node_Id;\n+            L_Hi  : Node_Id := Empty;\n+            L_Lo  : Node_Id := Empty;\n \n             function Lo_Val (N : Node_Id) return Node_Id;\n             --  Given static expression or static range, returns an identifier"}, {"sha": "357979e663ec63247b8ee7ef9ff66532ebcd7d3f", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -4721,9 +4721,11 @@ package body Exp_Ch6 is\n       Exp         : Node_Id;\n       HSS         : Node_Id;\n       Result      : Node_Id;\n-      Return_Stmt : Node_Id;\n       Stmts       : List_Id;\n \n+      Return_Stmt : Node_Id := Empty;\n+      --  Force initialization to facilitate static analysis\n+\n    --  Start of processing for Expand_N_Extended_Return_Statement\n \n    begin"}, {"sha": "2afd652ba4bcdc1ed7c44ab1c593b5a0c6c61f86", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -6189,8 +6189,7 @@ package body Exp_Ch9 is\n \n       Cond_Id    : Entity_Id;\n       Entry_Body : Node_Id;\n-      Func_Body  : Node_Id;\n-      pragma Warnings (Off, Func_Body);\n+      Func_Body  : Node_Id := Empty;\n \n    --  Start of processing for Expand_Entry_Barrier\n "}, {"sha": "6f6b008f99f5ef5c2d4cf6503e0f88ba54bb662c", "filename": "gcc/ada/exp_imgv.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fexp_imgv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fexp_imgv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_imgv.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -436,7 +436,7 @@ package body Exp_Imgv is\n       Imid      : RE_Id;\n       Ptyp      : Entity_Id;\n       Rtyp      : Entity_Id;\n-      Tent      : Entity_Id;\n+      Tent      : Entity_Id := Empty;\n       Ttyp      : Entity_Id;\n       Proc_Ent  : Entity_Id;\n       Enum_Case : Boolean;"}, {"sha": "698bf76c2c1c32fb9b4a78f6a117bcdba08390e8", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -5447,7 +5447,7 @@ package body Exp_Util is\n      (T     : Entity_Id;\n       Iface : Entity_Id) return Entity_Id\n    is\n-      AI_Tag : Entity_Id;\n+      AI_Tag : Entity_Id := Empty;\n       Found  : Boolean   := False;\n       Typ    : Entity_Id := T;\n "}, {"sha": "ba81a55cfa51bb621b6659a71a53cf22eac177c3", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -1173,8 +1173,7 @@ package body Freeze is\n \n       Component_Aliased : Boolean;\n \n-      Comp_Byte_Aligned : Boolean;\n-      pragma Warnings (Off, Comp_Byte_Aligned);\n+      Comp_Byte_Aligned : Boolean := False;\n       --  Set for the record case, True if Comp is aligned on byte boundaries\n       --  (in which case it is allowed to have different storage order).\n "}, {"sha": "f97fce782f46ced365c9ed45d8ca1d6415a24533", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -2224,13 +2224,13 @@ package body Inline is\n       Exit_Lab : Entity_Id        := Empty;\n       F        : Entity_Id;\n       A        : Node_Id;\n-      Lab_Decl : Node_Id;\n+      Lab_Decl : Node_Id          := Empty;\n       Lab_Id   : Node_Id;\n       New_A    : Node_Id;\n-      Num_Ret  : Nat := 0;\n+      Num_Ret  : Nat              := 0;\n       Ret_Type : Entity_Id;\n \n-      Targ : Node_Id;\n+      Targ : Node_Id := Empty;\n       --  The target of the call. If context is an assignment statement then\n       --  this is the left-hand side of the assignment, else it is a temporary\n       --  to which the return value is assigned prior to rewriting the call."}, {"sha": "562653f58f4a4fb73a938be23caf8d04c51b2eeb", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -5895,8 +5895,7 @@ package body Sem_Ch12 is\n                     Present (Next_Formal (First_Formal (Formal_Subp)));\n \n       Decl    : Node_Id;\n-      Expr    : Node_Id;\n-      pragma Warnings (Off, Expr);\n+      Expr    : Node_Id := Empty;\n       F1, F2  : Entity_Id;\n       Func    : Entity_Id;\n       Op_Name : Name_Id;"}, {"sha": "75c624b472a1b3c3985a159ab0dc3c5647483aeb", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -6639,7 +6639,7 @@ package body Sem_Ch3 is\n       Tdef          : constant Node_Id    := Type_Definition (N);\n       Indic         : constant Node_Id    := Subtype_Indication (Tdef);\n       Parent_Base   : constant Entity_Id  := Base_Type (Parent_Type);\n-      Implicit_Base : Entity_Id;\n+      Implicit_Base : Entity_Id           := Empty;\n       New_Indic     : Node_Id;\n \n       procedure Make_Implicit_Base;\n@@ -6751,7 +6751,7 @@ package body Sem_Ch3 is\n                                                           N_Subtype_Indication;\n \n       D_Constraint   : Node_Id;\n-      New_Constraint : Elist_Id;\n+      New_Constraint : Elist_Id := No_Elist;\n       Old_Disc       : Entity_Id;\n       New_Disc       : Entity_Id;\n       New_N          : Node_Id;"}, {"sha": "3102678c364cc1719b8f55e7e7b8eda0cde5bb2f", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -339,9 +339,8 @@ package body Sem_Ch4 is\n       --------------------------\n \n       procedure List_Operand_Interps (Opnd : Node_Id) is\n-         Nam   : Node_Id;\n-         pragma Warnings (Off, Nam);\n-         Err   : Node_Id := N;\n+         Nam : Node_Id := Empty;\n+         Err : Node_Id := N;\n \n       begin\n          if Is_Overloaded (Opnd) then\n@@ -1720,11 +1719,11 @@ package body Sem_Ch4 is\n       else\n          Analyze_Choices (Alternatives (N), Exp_Type);\n          Check_Choices (N, Alternatives (N), Exp_Type, Others_Present);\n-      end if;\n \n-      if Exp_Type = Universal_Integer and then not Others_Present then\n-         Error_Msg_N\n-           (\"case on universal integer requires OTHERS choice\", Expr);\n+         if Exp_Type = Universal_Integer and then not Others_Present then\n+            Error_Msg_N\n+              (\"case on universal integer requires OTHERS choice\", Expr);\n+         end if;\n       end if;\n    end Analyze_Case_Expression;\n "}, {"sha": "14cf2e5a732fbc04f3f8156e8572b627c7ffc384", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -391,7 +391,8 @@ package body Sem_Ch5 is\n       T1 : Entity_Id;\n       T2 : Entity_Id;\n \n-      Save_Full_Analysis : Boolean;\n+      Save_Full_Analysis : Boolean := False;\n+      --  Force initialization to facilitate static analysis\n \n       Saved_GM : constant Ghost_Mode_Type := Ghost_Mode;\n       --  Save the Ghost mode to restore on exit"}, {"sha": "266b6fef4a16ae9887cf962f6aaade047ebf9282", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -1039,7 +1039,7 @@ package body Sem_Ch6 is\n       ---------------------\n \n       Expr     : Node_Id;\n-      Obj_Decl : Node_Id;\n+      Obj_Decl : Node_Id := Empty;\n \n    --  Start of processing for Analyze_Function_Return\n \n@@ -1190,13 +1190,16 @@ package body Sem_Ch6 is\n \n       --  Case of Expr present\n \n-      if Present (Expr)\n+      if Present (Expr) then\n \n-        --  Defend against previous errors\n+         --  Defend against previous errors\n+\n+         if Nkind (Expr) = N_Empty\n+           or else No (Etype (Expr))\n+         then\n+            return;\n+         end if;\n \n-        and then Nkind (Expr) /= N_Empty\n-        and then Present (Etype (Expr))\n-      then\n          --  Apply constraint check. Note that this is done before the implicit\n          --  conversion of the expression done for anonymous access types to\n          --  ensure correct generation of the null-excluding check associated"}, {"sha": "98f2ccc47565fe80aacc78e3a20a74bf515bce40", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -2287,7 +2287,7 @@ package body Sem_Ch9 is\n       Target_Obj  : Node_Id := Empty;\n       Req_Scope   : Entity_Id;\n       Outer_Ent   : Entity_Id;\n-      Synch_Type  : Entity_Id;\n+      Synch_Type  : Entity_Id := Empty;\n \n    begin\n       --  Preserve relevant elaboration-related attributes of the context which\n@@ -3513,10 +3513,10 @@ package body Sem_Ch9 is\n       --  declarations. Search for the private type declaration.\n \n       declare\n-         Full_T_Ifaces : Elist_Id;\n+         Full_T_Ifaces : Elist_Id := No_Elist;\n          Iface         : Node_Id;\n          Priv_T        : Entity_Id;\n-         Priv_T_Ifaces : Elist_Id;\n+         Priv_T_Ifaces : Elist_Id := No_Elist;\n \n       begin\n          Priv_T := First_Entity (Scope (T));"}, {"sha": "44166002ee9028e50c59e1371c7b7f3c6f531160", "filename": "gcc/ada/sem_dim.adb", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_dim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_dim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -903,13 +903,13 @@ package body Sem_Dim is\n       Choice       : Node_Id;\n       Dim_Aggr     : Node_Id;\n       Dim_Symbol   : Node_Id;\n-      Dim_Symbols  : Symbol_Array := No_Symbols;\n-      Dim_System   : System_Type  := Null_System;\n-      Position     : Nat := 0;\n+      Dim_Symbols  : Symbol_Array       := No_Symbols;\n+      Dim_System   : System_Type        := Null_System;\n+      Position     : Dimension_Position := Invalid_Position;\n       Unit_Name    : Node_Id;\n-      Unit_Names   : Name_Array   := No_Names;\n+      Unit_Names   : Name_Array         := No_Names;\n       Unit_Symbol  : Node_Id;\n-      Unit_Symbols : Symbol_Array := No_Symbols;\n+      Unit_Symbols : Symbol_Array       := No_Symbols;\n \n       Errors_Count : Nat;\n       --  Errors_Count is a count of errors detected by the compiler so far\n@@ -949,13 +949,13 @@ package body Sem_Dim is\n       Dim_Aggr     := First (Expressions (Aggr));\n       Errors_Count := Serious_Errors_Detected;\n       while Present (Dim_Aggr) loop\n-         Position := Position + 1;\n-\n-         if Position > High_Position_Bound then\n+         if Position = High_Position_Bound then\n             Error_Msg_N (\"too many dimensions in system\", Aggr);\n             exit;\n          end if;\n \n+         Position := Position + 1;\n+\n          if Nkind (Dim_Aggr) /= N_Aggregate then\n             Error_Msg_N (\"aggregate expected\", Dim_Aggr);\n "}, {"sha": "01eb8144e68f1ad0e460d55fdfa9ca8d463aa1ee", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -2301,7 +2301,7 @@ package body Sem_Eval is\n          Left_Str   : constant Node_Id := Get_String_Val (Left);\n          Left_Len   : Nat;\n          Right_Str  : constant Node_Id := Get_String_Val (Right);\n-         Folded_Val : String_Id;\n+         Folded_Val : String_Id        := No_String;\n \n       begin\n          --  Establish new string literal, and store left operand. We make"}, {"sha": "886c2b4f4326109597b3ac9f091be9fc59e09418", "filename": "gcc/ada/sem_intr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_intr.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -101,7 +101,7 @@ package body Sem_Intr is\n       Nam  : constant Entity_Id := Entity (Name (N));\n       Arg1 : constant Node_Id   := First_Actual (N);\n       Typ  : Entity_Id;\n-      Rtyp : Entity_Id;\n+      Rtyp : Entity_Id := Empty;\n       Cnam : Name_Id;\n       Unam : Node_Id;\n "}, {"sha": "78876ffbf256e41e8a56c090d60810afc30c1d9b", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -28747,7 +28747,7 @@ package body Sem_Prag is\n       Depends   : Node_Id;\n       Formal    : Entity_Id;\n       Global    : Node_Id;\n-      Spec_Id   : Entity_Id;\n+      Spec_Id   : Entity_Id := Empty;\n       Subp_Decl : Node_Id;\n       Typ       : Entity_Id;\n "}, {"sha": "8646cc06fba9723e645f1676846326ad2c681873", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -1212,7 +1212,7 @@ package body Sem_Res is\n       Func      : constant Entity_Id := Entity (Name (N));\n       Is_Binary : constant Boolean   := Present (Act2);\n       Op_Node   : Node_Id;\n-      Opnd_Type : Entity_Id;\n+      Opnd_Type : Entity_Id := Empty;\n       Orig_Type : Entity_Id := Empty;\n       Pack      : Entity_Id;\n \n@@ -1523,6 +1523,7 @@ package body Sem_Res is\n             --  Operator may be defined in an extension of System\n \n             elsif Present (System_Aux_Id)\n+              and then Present (Opnd_Type)\n               and then Scope (Opnd_Type) = System_Aux_Id\n             then\n                null;"}, {"sha": "d6977880d47de5560867e2437e35cfbc66565bde", "filename": "gcc/ada/sem_spark.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_spark.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_spark.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_spark.ads?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -27,10 +27,10 @@\n --  rules that are enforced are defined in the anti-aliasing section of the\n --  SPARK RM 6.4.2\n --\n---  Analyze_SPARK is called by Gnat1drv, when GNATprove mode is activated. It\n---  does an analysis of the source code, looking for code that is considered\n---  as SPARK and launches another function called Analyze_Node that will do\n---  the whole analysis.\n+--  Check_Safe_Pointers is called by Gnat1drv, when GNATprove mode is\n+--  activated. It does an analysis of the source code, looking for code that is\n+--  considered as SPARK and launches another function called Analyze_Node that\n+--  will do the whole analysis.\n --\n --  A path is an abstraction of a name, of which all indices, slices (for\n --  indexed components) and function calls have been abstracted and all"}, {"sha": "ff94cf84e413fd1fdc7fc92bc02164b9e0552ac6", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -3344,7 +3344,8 @@ package body Sem_Warn is\n    -----------------------------\n \n    procedure Warn_On_Known_Condition (C : Node_Id) is\n-      Test_Result : Boolean;\n+      Test_Result : Boolean := False;\n+      --  Force initialization to facilitate static analysis\n \n       function Is_Known_Branch return Boolean;\n       --  If the type of the condition is Boolean, the constant value of the"}, {"sha": "93b71018d89f8b887498c2251a1dc83f26abd1e6", "filename": "gcc/ada/set_targ.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fset_targ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fset_targ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fset_targ.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2013-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2013-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -580,6 +580,7 @@ package body Set_Targ is\n       --  Checks that we have one or more spaces and skips them\n \n       procedure FailN (S : String);\n+      pragma No_Return (FailN);\n       --  Calls Fail adding \" name in file xxx\", where name is the currently\n       --  gathered name in Nam_Buf, surrounded by quotes, and xxx is the\n       --  name of the file."}, {"sha": "6f258626b070d533cb37a27b2997e4c89060ff95", "filename": "gcc/ada/stylesw.adb", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fstylesw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcd5fd67facffa75407125066f8db852f5ee580e/gcc%2Fada%2Fstylesw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstylesw.adb?ref=dcd5fd67facffa75407125066f8db852f5ee580e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -150,10 +150,6 @@ package body Stylesw is\n    --  Start of processing for Save_Style_Check_Options\n \n    begin\n-      for K in Options'Range loop\n-         Options (K) := ' ';\n-      end loop;\n-\n       Add (Character'Val (Style_Check_Indentation + Character'Pos ('0')),\n            Style_Check_Indentation /= 0);\n "}]}