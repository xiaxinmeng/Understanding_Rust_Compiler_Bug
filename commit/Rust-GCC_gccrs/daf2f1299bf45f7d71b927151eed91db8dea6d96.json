{"sha": "daf2f1299bf45f7d71b927151eed91db8dea6d96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFmMmYxMjk5YmY0NWY3ZDcxYjkyNzE1MWVlZDkxZGI4ZGVhNmQ5Ng==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm@polyomino.org.uk", "date": "2004-01-18T11:57:17Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-01-18T11:57:17Z"}, "message": "c-tree.texi, [...]: Remove trailing whitespace.\n\n\t* doc/c-tree.texi, doc/cpp.texi, doc/extend.texi,\n\tdoc/frontends.texi, doc/gcov.texi, doc/gty.texi, doc/install.texi,\n\tdoc/invoke.texi, doc/libgcc.texi, doc/md.texi, doc/rtl.texi,\n\tdoc/sourcebuild.texi, doc/standards.texi, doc/tm.texi,\n\tdoc/trouble.texi: Remove trailing whitespace.\n\nFrom-SVN: r76098", "tree": {"sha": "724288cd7e8211ba33316c9a033537487ba945b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/724288cd7e8211ba33316c9a033537487ba945b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/daf2f1299bf45f7d71b927151eed91db8dea6d96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daf2f1299bf45f7d71b927151eed91db8dea6d96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daf2f1299bf45f7d71b927151eed91db8dea6d96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daf2f1299bf45f7d71b927151eed91db8dea6d96/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbad4221eca55eaf1c24f64596db20cf7633e289", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbad4221eca55eaf1c24f64596db20cf7633e289", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbad4221eca55eaf1c24f64596db20cf7633e289"}], "stats": {"total": 368, "additions": 188, "deletions": 180}, "files": [{"sha": "45b335fc0a52434e0de90b69d8de46778e6c068c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=daf2f1299bf45f7d71b927151eed91db8dea6d96", "patch": "@@ -1,3 +1,11 @@\n+2004-01-18  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* doc/c-tree.texi, doc/cpp.texi, doc/extend.texi,\n+\tdoc/frontends.texi, doc/gcov.texi, doc/gty.texi, doc/install.texi,\n+\tdoc/invoke.texi, doc/libgcc.texi, doc/md.texi, doc/rtl.texi,\n+\tdoc/sourcebuild.texi, doc/standards.texi, doc/tm.texi,\n+\tdoc/trouble.texi: Remove trailing whitespace.\n+\n 2004-01-18  Richard Sandiford  <rsandifo@redhat.com>\n \n \tPR target/7618"}, {"sha": "d1afe655c7612250232dd08c34dade5595451d94", "filename": "gcc/doc/c-tree.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Fc-tree.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Fc-tree.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fc-tree.texi?ref=daf2f1299bf45f7d71b927151eed91db8dea6d96", "patch": "@@ -1024,7 +1024,7 @@ To determine the scope of a function, you can use the\n @code{NAMESPACE_DECL}) of which the function is a member.  For a virtual\n function, this macro returns the class in which the function was\n actually defined, not the base class in which the virtual declaration\n-occurred.  \n+occurred.\n \n If a friend function is defined in a class scope, the\n @code{DECL_FRIEND_CONTEXT} macro can be used to determine the class in\n@@ -1549,7 +1549,7 @@ is the type of exception that will be caught by this handler; it is\n equal (by pointer equality) to @code{NULL} if this handler is for all\n types.  @code{HANDLER_PARMS} is the @code{DECL_STMT} for the catch\n parameter, and @code{HANDLER_BODY} is the @code{COMPOUND_STMT} for the\n-block itself. \n+block itself.\n \n @item IF_STMT\n "}, {"sha": "5d1cb9b3029f27645e8412c1dfd8668c7b2f5e1d", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=daf2f1299bf45f7d71b927151eed91db8dea6d96", "patch": "@@ -258,7 +258,7 @@ At present, GNU CPP does not implement conversion from arbitrary file\n encodings to the source character set.  Use of any encoding other than\n plain ASCII or UTF-8, except in comments, will cause errors.  Use of\n encodings that are not strict supersets of ASCII, such as Shift JIS,\n-may cause errors even if non-ASCII characters appear only in comments. \n+may cause errors even if non-ASCII characters appear only in comments.\n We plan to fix this in the near future.\n \n All preprocessing work (the subject of the rest of this manual) is\n@@ -422,7 +422,7 @@ comment.\n @end group\n @end smallexample\n \n-Comments are not recognized within string literals.  \n+Comments are not recognized within string literals.\n @t{@w{\"/* blah */\"}} is the string constant @samp{@w{/* blah */}}, not\n an empty string.\n \n@@ -2067,7 +2067,7 @@ this macro directly; instead, include the appropriate headers.\n @itemx __INT_MAX__\n @itemx __LONG_MAX__\n @itemx __LONG_LONG_MAX__\n-Defined to the maximum value of the @code{signed char}, @code{wchar_t}, \n+Defined to the maximum value of the @code{signed char}, @code{wchar_t},\n @code{signed short},\n @code{signed int}, @code{signed long}, and @code{signed long long} types\n respectively.  They exist to make the standard header given numerical limits\n@@ -4135,7 +4135,7 @@ cpp [@option{-D}@var{macro}[=@var{defn}]@dots{}] [@option{-U}@var{macro}]\n     [@option{-M}|@option{-MM}] [@option{-MG}] [@option{-MF} @var{filename}]\n     [@option{-MP}] [@option{-MQ} @var{target}@dots{}]\n     [@option{-MT} @var{target}@dots{}]\n-    [@option{-P}] [@option{-fno-working-directory}] \n+    [@option{-P}] [@option{-fno-working-directory}]\n     [@option{-x} @var{language}] [@option{-std=}@var{standard}]\n     @var{infile} @var{outfile}\n \n@@ -4188,7 +4188,7 @@ Note that you can also specify places to search using options such as\n @option{-M} (@pxref{Invocation}).  These take precedence over\n environment variables, which in turn take precedence over the\n configuration of GCC@.\n- \n+\n @include cppenv.texi\n @c man end\n "}, {"sha": "9b03c77e94f77664449044c4b69cddb80239d454", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=daf2f1299bf45f7d71b927151eed91db8dea6d96", "patch": "@@ -253,7 +253,7 @@ The @code{register} specifier affects code generation only in these ways:\n \n @itemize @bullet\n @item\n-When used as part of the register variable extension, see \n+When used as part of the register variable extension, see\n @ref{Explicit Reg Vars}.\n \n @item\n@@ -594,7 +594,7 @@ bug.)\n GCC allows you to declare @dfn{local labels} in any nested block\n scope. A local label is just like an ordinary label, but you can\n only reference it (with a @code{goto} statement, or by taking its\n-address) within the block in which it was declared.  \n+address) within the block in which it was declared.\n \n A local label declaration looks like this:\n \n@@ -2394,7 +2394,7 @@ See the ELF gABI for complete details, but the short story is:\n \n @table @dfn\n @item default\n-Default visibility is the normal case for ELF.  This value is \n+Default visibility is the normal case for ELF.  This value is\n available for the visibility attribute to override other options\n that may change the assumed visibility of symbols.\n \n@@ -2451,7 +2451,7 @@ pass arguments, unless it takes a variable number of arguments.\n @cindex functions that pop the argument stack on the 386\n On the Intel 386, the @code{fastcall} attribute causes the compiler to\n pass the first two arguments in the registers ECX and EDX. Subsequent\n-arguments are passed on the stack. The called function will pop the \n+arguments are passed on the stack. The called function will pop the\n arguments off the stack. If the number of arguments is variable all\n arguments are pushed on the stack.\n \n@@ -2647,7 +2647,7 @@ attribute is applied to a symbol @emph{definition}, an error is reported.\n If a symbol previously declared @code{dllimport} is later defined, the\n attribute is ignored in subsequent references, and a warning is emitted.\n The attribute is also overridden by a subsequent declaration as\n-@code{dllexport}. \n+@code{dllexport}.\n \n When applied to C++ classes, the attribute marks non-inlined\n member functions and static data members as imports.  However, the\n@@ -2663,7 +2663,7 @@ but provides a small performance benefit by eliminating a thunk in the\n dll. The use of the @code{dllimport} attribute on imported variables was\n required on older versions of GNU ld, but can now be avoided by passing\n the @option{--enable-auto-import} switch to ld. As with functions, using\n-the attribute for a variable eliminates a thunk in the dll. \n+the attribute for a variable eliminates a thunk in the dll.\n \n One drawback to using this attribute is that a pointer to a function or\n variable marked as dllimport cannot be used as a constant address. The\n@@ -3196,7 +3196,7 @@ The @code{common} attribute requests GCC to place a variable in\n ``common'' storage.  The @code{nocommon} attribute requests the\n opposite -- to allocate space for it directly.\n \n-These attributes override the default chosen by the \n+These attributes override the default chosen by the\n @option{-fno-common} and @option{-fcommon} flags respectively.\n \n @item deprecated\n@@ -5501,7 +5501,7 @@ do not implement, a description of the parsing is in order.  The string\n is parsed as by @code{strtol}; that is, the base is recognized by\n leading @samp{0} or @samp{0x} prefixes.  The number parsed is placed\n in the significand such that the least significant bit of the number\n-is at the least significant bit of the significand.  The number is \n+is at the least significant bit of the significand.  The number is\n truncated to fit the significand field provided.  The significand is\n forced to be a quiet NaN.\n \n@@ -5518,7 +5518,7 @@ Similar to @code{__builtin_nan}, except the return type is @code{long double}.\n @end deftypefn\n \n @deftypefn {Built-in Function} double __builtin_nans (const char *str)\n-Similar to @code{__builtin_nan}, except the significand is forced \n+Similar to @code{__builtin_nan}, except the significand is forced\n to be a signaling NaN.  The @code{nans} function is proposed by\n @uref{http://std.dkuug.dk/JTC1/SC22/WG14/www/docs/n965.htm,,WG14 N965}.\n @end deftypefn"}, {"sha": "cb6987e49dae920404e8e3f27c43d65037eeed7d", "filename": "gcc/doc/frontends.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Ffrontends.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Ffrontends.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ffrontends.texi?ref=daf2f1299bf45f7d71b927151eed91db8dea6d96", "patch": "@@ -11,7 +11,7 @@\n @cindex Java\n @cindex Ada\n @cindex treelang\n-Several versions of the compiler (C, C++, Objective-C, Ada, \n+Several versions of the compiler (C, C++, Objective-C, Ada,\n Fortran, Java and treelang) are integrated; this is why we use the name\n ``GNU Compiler Collection''.  GCC can compile programs written in any of these\n languages.  The Ada, Fortran, Java and treelang compilers are described in"}, {"sha": "b219c0f18b96afd4badc212c1a3294b3199518c5", "filename": "gcc/doc/gcov.texi", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Fgcov.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Fgcov.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcov.texi?ref=daf2f1299bf45f7d71b927151eed91db8dea6d96", "patch": "@@ -211,12 +211,12 @@ Unconditional branches are normally not interesting.\n \n @end table\n \n-@command{gcov} should be run with the current directory the same as that \n-when you invoked the compiler. Otherwise it will not be able to locate \n-the source files. @command{gcov} produces files called \n-@file{@var{mangledname}.gcov} in the current directory. These contain \n-the coverage information of the source file they correspond to. \n-One @file{.gcov} file is produced for each source file containing code, \n+@command{gcov} should be run with the current directory the same as that\n+when you invoked the compiler. Otherwise it will not be able to locate\n+the source files. @command{gcov} produces files called\n+@file{@var{mangledname}.gcov} in the current directory. These contain\n+the coverage information of the source file they correspond to.\n+One @file{.gcov} file is produced for each source file containing code,\n which was compiled to produce the data files. The @var{mangledname} part\n of the output file name is usually simply the source file name, but can\n be something more complicated if the @samp{-l} or @samp{-p} options are\n@@ -280,12 +280,12 @@ Here is a sample:\n function main called 1 returned 1 blocks executed 75%\n         1:    4:@{\n         1:    5:  int i, total;\n-        -:    6:  \n+        -:    6:\n         1:    7:  total = 0;\n-        -:    8:  \n+        -:    8:\n        11:    9:  for (i = 0; i < 10; i++)\n        10:   10:    total += i;\n-        -:   11:  \n+        -:   11:\n         1:   12:  if (total != 45)\n     #####:   13:    printf (\"Failure\\n\");\n         -:   14:  else\n@@ -310,14 +310,14 @@ function main called 1 returned 1 blocks executed 75%\n         1:    4:@{\n         1:    4-block  0\n         1:    5:  int i, total;\n-        -:    6:  \n+        -:    6:\n         1:    7:  total = 0;\n-        -:    8:  \n+        -:    8:\n        11:    9:  for (i = 0; i < 10; i++)\n        11:    9-block  0\n        10:   10:    total += i;\n        10:   10-block  0\n-        -:   11:  \n+        -:   11:\n         1:   12:  if (total != 45)\n         1:   12-block  0\n     #####:   13:    printf (\"Failure\\n\");\n@@ -369,14 +369,14 @@ Here is a sample of a resulting @file{tmp.c.gcov} file:\n function main called 1 returned 1 blocks executed 75%\n         1:    4:@{\n         1:    5:  int i, total;\n-        -:    6:  \n+        -:    6:\n         1:    7:  total = 0;\n-        -:    8:  \n+        -:    8:\n        11:    9:  for (i = 0; i < 10; i++)\n branch  0 taken 91% (fallthrough)\n branch  1 taken 9%\n        10:   10:    total += i;\n-        -:   11:  \n+        -:   11:\n         1:   12:  if (total != 45)\n branch  0 taken 0% (fallthrough)\n branch  1 taken 100%"}, {"sha": "4dddc670c307aae4739a0fccf5d0a2387852163d", "filename": "gcc/doc/gty.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Fgty.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Fgty.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgty.texi?ref=daf2f1299bf45f7d71b927151eed91db8dea6d96", "patch": "@@ -48,7 +48,7 @@ These markers can be placed:\n @item\n In a structure definition, before the open brace;\n @item\n-In a global variable declaration, after the keyword @code{static} or \n+In a global variable declaration, after the keyword @code{static} or\n @code{extern}; and\n @item\n In a structure field definition, before the name of the field.\n@@ -311,19 +311,19 @@ things you need to do:\n @enumerate\n @item\n You need to add the file to the list of source files the type\n-machinery scans.  There are three cases: \n+machinery scans.  There are three cases:\n \n @enumerate a\n @item\n For a back-end file, this is usually done\n automatically; if not, you should add it to @code{target_gtfiles} in\n-the appropriate port's entries in @file{config.gcc}. \n+the appropriate port's entries in @file{config.gcc}.\n \n @item\n For files shared by all front ends, this is done by adding the\n filename to the @code{GTFILES} variable in @file{Makefile.in}.\n \n-@item \n+@item\n For any other file used by a front end, this is done by adding the\n filename to the @code{gtfiles} variable defined in\n @file{config-lang.in}.  For C, the file is @file{c-config-lang.in}.\n@@ -342,7 +342,7 @@ header file, this should be done automatically.  For a front-end header\n file, it needs to be included by the same file that includes\n @file{gtype-@var{lang}.h}.  For other header files, it needs to be\n included in @file{gtype-desc.c}, which is a generated file, so add it to\n-@code{ifiles} in @code{open_base_file} in @file{gengtype.c}.  \n+@code{ifiles} in @code{open_base_file} in @file{gengtype.c}.\n \n For source files that aren't header files, the machinery will generate a\n header file that should be included in the source file you just changed."}, {"sha": "6dae9c90bd8bcdcb64160d5dbe92127e50f5c703", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=daf2f1299bf45f7d71b927151eed91db8dea6d96", "patch": "@@ -152,7 +152,7 @@ We recommend you browse the entire generic installation instructions before\n you proceed.\n \n Lists of successful builds for released versions of GCC are\n-available at @uref{http://gcc.gnu.org/buildstat.html}. \n+available at @uref{http://gcc.gnu.org/buildstat.html}.\n These lists are updated as new information becomes available.\n \n The installation procedure itself is broken into five steps.\n@@ -256,7 +256,7 @@ use @command{bash} to be sure.  Then set @env{CONFIG_SHELL} in your\n environment to your ``good'' shell prior to running\n @command{configure}/@command{make}.\n \n-@command{zsh} is not a fully compliant POSIX shell and will not \n+@command{zsh} is not a fully compliant POSIX shell and will not\n work when configuring GCC.\n \n @item GNU binutils\n@@ -980,7 +980,7 @@ If you configure with @option{--enable-generated-files-in-srcdir} then those\n generated files will go into the source directory.  This is mainly intended\n for generating release or prerelease tarballs of the GCC sources, since it\n is not a requirement that the users of source releases to have flex, bison, or\n-makeinfo.  \n+makeinfo.\n \n @item --enable-version-specific-runtime-libs\n Specify\n@@ -1091,7 +1091,7 @@ without optimization.\n @item --enable-gather-detailed-mem-stats\n When this option is specified more detailed information on memory\n allocation is gathered.  This information is printed when using\n-@option{-fmem-report}. \n+@option{-fmem-report}.\n \n @item --enable-nls\n @itemx --disable-nls\n@@ -1205,7 +1205,7 @@ corresponding @option{--without} option.\n Now that GCC is configured, you are ready to build the compiler and\n runtime libraries.\n \n-We @strong{highly} recommend that GCC be built using GNU make; \n+We @strong{highly} recommend that GCC be built using GNU make;\n other versions may work, then again they might not.\n GNU make is required for compiling GNAT (the Ada compiler) and the Java\n runtime library.\n@@ -1537,7 +1537,7 @@ Finally, you can run the testsuite (which may take a long time):\n This will test various components of GCC, such as compiler\n front ends and runtime libraries.  While running the testsuite, DejaGnu\n might emit some harmless messages resembling\n-@samp{WARNING: Couldn't find the global config file.} or \n+@samp{WARNING: Couldn't find the global config file.} or\n @samp{WARNING: Couldn't find tool init file} that can be ignored.\n \n @section How can I run the test suite on selected tests?\n@@ -1662,8 +1662,8 @@ the libjava testsuite at @file{libjava/testsuite/libjava.jacks/jacks}.\n The result of running the testsuite are various @file{*.sum} and @file{*.log}\n files in the testsuite subdirectories.  The @file{*.log} files contain a\n detailed log of the compiler invocations and the corresponding\n-results, the @file{*.sum} files summarize the results.  These summaries \n-contain status codes for all tests: \n+results, the @file{*.sum} files summarize the results.  These summaries\n+contain status codes for all tests:\n \n @itemize @bullet\n @item\n@@ -1915,7 +1915,7 @@ OpenServer/Unixware}.\n \n @item\n Sinix/Reliant Unix---@uref{ftp://ftp.fujitsu-siemens.com/pub/pd/gnu/gcc/,,Siemens}.\n- \n+\n @item\n Solaris 2 (SPARC, Intel)---@uref{http://www.sunfreeware.com/,,Sunfreeware}.\n \n@@ -2690,7 +2690,7 @@ A modern bintuils (as well as a plethora of other development related\n GNU utilities) can be found in Support Level Supplement OSS658A, the\n \"GNU Development Tools\" package.  See the SCO web and ftp sites for details.\n That package also contains the currently \"officially supported\" version of\n-GCC, version 2.95.3.  It is useful for bootstrapping this version.  \n+GCC, version 2.95.3.  It is useful for bootstrapping this version.\n \n @html\n <hr />\n@@ -3234,7 +3234,7 @@ zSeries system (64-bit) running GNU/Linux for zSeries@.\n <hr />\n @end html\n @heading @anchor{s390x-ibm-tpf*}s390x-ibm-tpf*\n-zSeries system (64-bit) running TPF.  This platform is \n+zSeries system (64-bit) running TPF.  This platform is\n supported as cross-compilation target only.\n \n @html\n@@ -3495,7 +3495,7 @@ to do so.\n GCC's exception handling runtime requires a special ``configlette''\n module, @file{contrib/gthr_supp_vxw_5x.c}.  Follow the instructions in\n that file to add the module to your kernel build.  (Future versions of\n-VxWorks will incorporate this module.)  \n+VxWorks will incorporate this module.)\n \n @html\n <hr />"}, {"sha": "e115cf34cb4384ae49b7ffcd9358ca5ee0c6d05f", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 100, "deletions": 100, "changes": 200, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=daf2f1299bf45f7d71b927151eed91db8dea6d96", "patch": "@@ -1460,7 +1460,7 @@ inlined by default.\n @opindex Wabi\n Warn when G++ generates code that is probably not compatible with the\n vendor-neutral C++ ABI.  Although an effort has been made to warn about\n-all such cases, there are probably some cases that are not warned about, \n+all such cases, there are probably some cases that are not warned about,\n even though G++ is generating incompatible code.  There may also be\n cases where warnings are emitted even though the code that is generated\n will be compatible.\n@@ -1484,7 +1484,7 @@ struct B : public A @{ int f2 : 1; @};\n \n @noindent\n In this case, G++ will place @code{B::f2} into the same byte\n-as@code{A::f1}; other compilers will not.  You can avoid this problem \n+as@code{A::f1}; other compilers will not.  You can avoid this problem\n by explicitly padding @code{A} so that its size is a multiple of the\n byte size on your platform; that will cause G++ and other compilers to\n layout @code{B} identically.\n@@ -1521,7 +1521,7 @@ union too small by the number of bits in an @code{int}.\n \n @item\n Empty classes can be placed at incorrect offsets.  For example:\n- \n+\n @smallexample\n struct A @{@};\n \n@@ -1614,7 +1614,7 @@ Item 23:  Don't try to return a reference when you must return an object.\n \n @end itemize\n \n-Also warn about violations of the following style guidelines from \n+Also warn about violations of the following style guidelines from\n Scott Meyers' @cite{More Effective C++} book:\n \n @itemize @bullet\n@@ -1772,17 +1772,17 @@ used.\n \n @item -fno-nil-receivers\n @opindex -fno-nil-receivers\n-Assume that all Objective-C message dispatches (e.g., \n-@code{[receiver message:arg]}) in this translation unit ensure that the receiver \n-is not @code{nil}.  This allows for more efficient entry points in the runtime to be \n-used.  Currently, this option is only available in conjunction with \n+Assume that all Objective-C message dispatches (e.g.,\n+@code{[receiver message:arg]}) in this translation unit ensure that the receiver\n+is not @code{nil}.  This allows for more efficient entry points in the runtime to be\n+used.  Currently, this option is only available in conjunction with\n the NeXT runtime on Mac OS X 10.3 and later.\n \n @item -fobjc-exceptions\n @opindex -fobjc-exceptions\n-Enable syntactic support for structured exception handling in Objective-C, \n-similar to what is offered by C++ and Java.  Currently, this option is only \n-available in conjunction with the NeXT runtime on Mac OS X 10.3 and later. \n+Enable syntactic support for structured exception handling in Objective-C,\n+similar to what is offered by C++ and Java.  Currently, this option is only\n+available in conjunction with the NeXT runtime on Mac OS X 10.3 and later.\n \n @smallexample\n   @@try @{\n@@ -1811,15 +1811,15 @@ available in conjunction with the NeXT runtime on Mac OS X 10.3 and later.\n @end smallexample\n \n The @code{@@throw} statement may appear anywhere in an Objective-C or\n-Objective-C++ program; when used inside of a @code{@@catch} block, the \n-@code{@@throw} may appear without an argument (as shown above), in which case \n+Objective-C++ program; when used inside of a @code{@@catch} block, the\n+@code{@@throw} may appear without an argument (as shown above), in which case\n the object caught by the @code{@@catch} will be rethrown.\n \n Note that only (pointers to) Objective-C objects may be thrown and\n caught using this scheme.  When an object is thrown, it will be caught\n by the nearest @code{@@catch} clause capable of handling objects of that type,\n-analogously to how @code{catch} blocks work in C++ and Java.  A \n-@code{@@catch(id @dots{})} clause (as shown above) may also be provided to catch \n+analogously to how @code{catch} blocks work in C++ and Java.  A\n+@code{@@catch(id @dots{})} clause (as shown above) may also be provided to catch\n any and all Objective-C exceptions not caught by previous @code{@@catch}\n clauses (if any).\n \n@@ -1833,21 +1833,21 @@ There are several caveats to using the new exception mechanism:\n \n @itemize @bullet\n @item\n-Although currently designed to be binary compatible with @code{NS_HANDLER}-style \n+Although currently designed to be binary compatible with @code{NS_HANDLER}-style\n idioms provided by the @code{NSException} class, the new\n exceptions can only be used on Mac OS X 10.3 (Panther) and later\n systems, due to additional functionality needed in the (NeXT) Objective-C\n runtime.\n \n @item\n As mentioned above, the new exceptions do not support handling\n-types other than Objective-C objects.   Furthermore, when used from \n+types other than Objective-C objects.   Furthermore, when used from\n Objective-C++, the Objective-C exception model does not interoperate with C++\n exceptions at this time.  This means you cannot @code{@@throw} an exception\n-from Objective-C and @code{catch} it in C++, or vice versa \n+from Objective-C and @code{catch} it in C++, or vice versa\n (i.e., @code{throw @dots{} @@catch}).\n @end itemize\n- \n+\n The @option{-fobjc-exceptions} switch also enables the use of synchronization\n blocks for thread-safe execution:\n \n@@ -1860,7 +1860,7 @@ blocks for thread-safe execution:\n Upon entering the @code{@@synchronized} block, a thread of execution shall\n first check whether a lock has been placed on the corresponding @code{guard}\n object by another thread.  If it has, the current thread shall wait until\n-the other thread relinquishes its lock.  Once @code{guard} becomes available, \n+the other thread relinquishes its lock.  Once @code{guard} becomes available,\n the current thread will place its own lock on it, execute the code contained in\n the @code{@@synchronized} block, and finally relinquish the lock (thereby\n making @code{guard} available to other threads).\n@@ -1875,10 +1875,10 @@ to be unlocked properly.\n Emit a special marker instructing @command{ld(1)} not to statically link in\n the resulting object file, and allow @command{dyld(1)} to load it in at\n run time instead.  This is used in conjunction with the Fix-and-Continue\n-debugging mode, where the object file in question may be recompiled and \n+debugging mode, where the object file in question may be recompiled and\n dynamically reloaded in the course of program execution, without the need\n to restart the program itself.  Currently, Fix-and-Continue functionality\n-is only available in conjunction with the NeXT runtime on Mac OS X 10.3 \n+is only available in conjunction with the NeXT runtime on Mac OS X 10.3\n and later.\n \n @item -fzero-link\n@@ -1888,7 +1888,7 @@ to @code{objc_getClass(\"@dots{}\")} (when the name of the class is known at\n compile time) with static class references that get initialized at load time,\n which improves run-time performance.  Specifying the @option{-fzero-link} flag\n suppresses this behavior and causes calls to @code{objc_getClass(\"@dots{}\")}\n-to be retained.  This is useful in Zero-Link debugging mode, since it allows \n+to be retained.  This is useful in Zero-Link debugging mode, since it allows\n for individual class implementations to be modified during program execution.\n \n @item -gen-decls\n@@ -1923,7 +1923,7 @@ being used.\n @opindex Wundeclared-selector\n Warn if a @code{@@selector(@dots{})} expression referring to an\n undeclared selector is found.  A selector is considered undeclared if no\n-method with that name has been declared before the \n+method with that name has been declared before the\n @code{@@selector(@dots{})} expression, either explicitly in an\n @code{@@interface} or @code{@@protocol} declaration, or implicitly in\n an @code{@@implementation} section.  This option always performs its\n@@ -2158,7 +2158,7 @@ requiring a non-null value by the @code{nonnull} function attribute.\n @option{-Wnonnull} is included in @option{-Wall} and @option{-Wformat}.  It\n can be disabled with the @option{-Wno-nonnull} option.\n \n-@item -Winit-self @r{(C, C++, and Objective-C only)} \n+@item -Winit-self @r{(C, C++, and Objective-C only)}\n @opindex Winit-self\n Warn about uninitialized variables which are initialized with themselves.\n Note this option can only be used with the @option{-Wuninitialized} option,\n@@ -2940,7 +2940,7 @@ code is to provide behavior which is selectable at compile-time.\n @opindex Winline\n Warn if a function can not be inlined and it was declared as inline.\n Even with this option, the compiler will not warn about failures to\n-inline functions declared in system headers.  \n+inline functions declared in system headers.\n \n The compiler uses a variety of heuristics to determine whether or not\n to inline a function.  For example, the compiler takes into account\n@@ -3600,7 +3600,7 @@ With @option{-O}, the compiler tries to reduce code size and execution\n time, without performing any optimizations that take a great deal of\n compilation time.\n \n-@option{-O} turns on the following optimization flags: \n+@option{-O} turns on the following optimization flags:\n @gccoptlist{-fdefer-pop @gol\n -fmerge-constants @gol\n -fthread-jumps @gol\n@@ -3774,7 +3774,7 @@ use inlining heavily such as those based on recursive templates with C++.\n \n Inlining is actually controlled by a number of parameters, which may be\n specified individually by using @option{--param @var{name}=@var{value}}.\n-The @option{-finline-limit=@var{n}} option sets some of these parameters \n+The @option{-finline-limit=@var{n}} option sets some of these parameters\n as follows:\n \n @table @gcctabopt\n@@ -4085,9 +4085,9 @@ of stalled insns into the ready list, during the second scheduling pass.\n \n @item -fsched-stalled-insns-dep=@var{n}\n @opindex fsched-stalled-insns-dep\n-Define how many insn groups (cycles) will be examined for a dependency \n-on a stalled insn that is candidate for premature removal from the queue \n-of stalled insns.  Has an effect only during the second scheduling pass, \n+Define how many insn groups (cycles) will be examined for a dependency\n+on a stalled insn that is candidate for premature removal from the queue\n+of stalled insns.  Has an effect only during the second scheduling pass,\n and only if @option{-fsched-stalled-insns} is used and its value is not zero.\n \n @item -fsched2-use-superblocks\n@@ -4096,7 +4096,7 @@ When scheduling after register allocation, do use superblock scheduling\n algorithm.  Superblock scheduling allows motion across basic block boundaries\n resulting on faster schedules.  This option is experimental, as not all machine\n descriptions used by GCC model the CPU closely enough to avoid unreliable\n-results from the algorithm. \n+results from the algorithm.\n \n This only makes sense when scheduling after register allocation, i.e.@: with\n @option{-fschedule-insns2} or at @option{-O2} or higher.\n@@ -4513,7 +4513,7 @@ file  The information in this data file is very dependent on the\n structure of the generated code, so you must use the same source code\n and the same optimization options for both compilations.\n \n-With @option{-fbranch-probabilities}, GCC puts a \n+With @option{-fbranch-probabilities}, GCC puts a\n @samp{REG_BR_PROB} note on each @samp{JUMP_INSN} and @samp{CALL_INSN}.\n These can be used to improve optimization.  Currently, they are only\n used in one place: in @file{reorg.c}, instead of guessing which path a\n@@ -4598,7 +4598,7 @@ the loop is entered. This is done using the old loop unroller whose loop\n recognition is based on notes from frontend.  This usually makes programs run more slowly.\n @option{-fold-unroll-all-loops} implies the same options as\n @option{-fold-unroll-loops}.\n- \n+\n @item -funswitch-loops\n @opindex funswitch-loops\n Move branches with loop invariant conditions out of the loop, with duplicates\n@@ -4704,7 +4704,7 @@ needlessly consume memory and resources.\n @item max-inline-insns-single\n Several parameters control the tree inliner used in gcc.\n This number sets the maximum number of instructions (counted in gcc's\n-internal representation) in a single function that the tree inliner \n+internal representation) in a single function that the tree inliner\n will consider for inlining.  This only affects functions declared\n inline and methods implemented in a class declaration (C++).\n The default value is 500.\n@@ -4737,7 +4737,7 @@ The default value is 150.\n \n @item max-inline-insns-rtl\n For languages that use the RTL inliner (this happens at a later stage\n-than tree inlining), you can set the maximum allowable size (counted \n+than tree inlining), you can set the maximum allowable size (counted\n in RTL instructions) for the RTL inliner with this parameter.\n The default value is 600.\n \n@@ -5644,12 +5644,12 @@ returns the pathname.  If it does not exist, it returns the second argument.\n This way, @code{if-exists-else} can be used to select one file or another,\n based on the existence of the first.  Here is a small example of its usage:\n \n-@smallexample \n+@smallexample\n *startfile:\n crt0%O%s %:if-exists(crti%O%s) \\\n %:if-exists-else(crtbeginT%O%s crtbegin%O%s)\n @end smallexample\n-@end table \n+@end table\n \n @item %@{@code{S}@}\n Substitutes the @code{-S} switch, if that switch was given to GCC@.\n@@ -5724,7 +5724,7 @@ jim.d         -bar -boggle\n \n If @code{S} was given to GCC, substitutes @code{X}; else if @code{T} was\n given to GCC, substitutes @code{Y}; else substitutes @code{D}.  There can\n-be as many clauses as you need.  This may be combined with @code{.}, \n+be as many clauses as you need.  This may be combined with @code{.},\n @code{!}, @code{|}, and @code{*} as needed.\n \n \n@@ -6081,7 +6081,7 @@ when the compiler is configured for 68HC12-based systems.\n @itemx -m68hcs12\n @opindex m68S12\n @opindex m68hcs12\n-Generate output for a 68HCS12.  \n+Generate output for a 68HCS12.\n \n @item -mauto-incdec\n @opindex mauto-incdec\n@@ -6245,7 +6245,7 @@ the rules of the ABI@.\n @option{-mimpure-text}, used in addition to @option{-shared}, tells\n the compiler to not pass @option{-z text} to the linker when linking a\n shared object.  Using this option, you can link position-dependent\n-code into a shared object.  \n+code into a shared object.\n \n @option{-mimpure-text} suppresses the ``relocations remain against\n allocatable but non-writable sections'' linker error message.\n@@ -7310,23 +7310,23 @@ libraries.\n \n @item -mprioritize-restricted-insns=@var{priority}\n @opindex mprioritize-restricted-insns\n-This option controls the priority that is assigned to \n-dispatch-slot restricted instructions during the second scheduling \n-pass.  The argument @var{priority} takes the value @var{0/1/2} to assign \n-@var{no/highest/second-highest} priority to dispatch slot restricted \n+This option controls the priority that is assigned to\n+dispatch-slot restricted instructions during the second scheduling\n+pass.  The argument @var{priority} takes the value @var{0/1/2} to assign\n+@var{no/highest/second-highest} priority to dispatch slot restricted\n instructions.\n \n @item -msched-costly-dep=@var{dependence_type}\n @opindex msched-costly-dep\n This option controls which dependences are considered costly\n by the target during instruction scheduling.  The argument\n @var{dependence_type} takes one of the following values:\n-@var{no}: no dependence is costly, \n-@var{all}: all dependences are costly, \n+@var{no}: no dependence is costly,\n+@var{all}: all dependences are costly,\n @var{true_store_to_load}: a true dependence from store to load is costly,\n @var{store_to_load}: any dependence from store to load is costly,\n @var{number}: any dependence which latency >= @var{number} is costly.\n- \n+\n @item -minsert-sched-nops=@var{scheme}\n @opindex minsert-sched-nops\n This option controls which nop insertion scheme will be used during\n@@ -7338,7 +7338,7 @@ according to the scheduler's grouping.\n @var{regroup_exact}: Insert nops to force costly dependent insns into\n separate groups.  Insert exactly as many nops as needed to force an insn\n to a new group, according to the estimated processor grouping.\n-@var{number}: Insert nops to force costly dependent insns into \n+@var{number}: Insert nops to force costly dependent insns into\n separate groups.  Insert @var{number} nops to force an insn to a new group.\n \n @item -mcall-sysv\n@@ -7563,8 +7563,8 @@ These options are defined for all architectures running the Darwin operating\n system.  They are useful for compatibility with other Mac OS compilers.\n \n @table @gcctabopt\n-@item -all_load    \n-@opindex all_load   \n+@item -all_load\n+@opindex all_load\n Loads all members of static archive libraries.\n See man ld(1) for more information.\n \n@@ -7578,7 +7578,7 @@ to be fatal.\n Causes the output file to be marked such that the dynamic linker will\n bind all undefined references when the file is loaded or launched.\n \n-@item -bundle     \n+@item -bundle\n @opindex bundle\n Produce a Mach-o bundle format file.\n See man ld(1) for more information.\n@@ -7591,63 +7591,63 @@ output file being linked. See man ld(1) for more information.\n @item -allowable_client  @var{client_name}\n @itemx -arch_only\n \n-@itemx -client_name       \n+@itemx -client_name\n @itemx -compatibility_version\n-@itemx -current_version    \n+@itemx -current_version\n @itemx -dependency-file\n-@itemx -dylib_file    \n+@itemx -dylib_file\n @itemx -dylinker_install_name\n @itemx -dynamic\n-@itemx -dynamiclib   \n-@itemx -exported_symbols_list  \n+@itemx -dynamiclib\n+@itemx -exported_symbols_list\n @itemx -filelist\n-@itemx -flat_namespace   \n+@itemx -flat_namespace\n @itemx -force_cpusubtype_ALL\n-@itemx -force_flat_namespace   \n+@itemx -force_flat_namespace\n @itemx -headerpad_max_install_names\n-@itemx -image_base  \n+@itemx -image_base\n @itemx -init\n @itemx -install_name\n @itemx -keep_private_externs\n @itemx -multi_module\n-@itemx -multiply_defined      \n-@itemx -multiply_defined_unused      \n-@itemx -noall_load  \n+@itemx -multiply_defined\n+@itemx -multiply_defined_unused\n+@itemx -noall_load\n @itemx -nofixprebinding\n @itemx -nomultidefs\n-@itemx -noprebind     \n+@itemx -noprebind\n @itemx -noseglinkedit\n-@itemx -pagezero_size    \n+@itemx -pagezero_size\n @itemx -prebind\n @itemx -prebind_all_twolevel_modules\n @itemx -private_bundle\n @itemx -read_only_relocs\n-@itemx -sectalign  \n-@itemx -sectobjectsymbols    \n+@itemx -sectalign\n+@itemx -sectobjectsymbols\n @itemx -whyload\n-@itemx -seg1addr \n+@itemx -seg1addr\n @itemx -sectcreate\n @itemx -sectobjectsymbols\n @itemx -sectorder\n @itemx -seg_addr_table\n @itemx -seg_addr_table_filename\n @itemx -seglinkedit\n-@itemx -segprot   \n+@itemx -segprot\n @itemx -segs_read_only_addr\n @itemx -segs_read_write_addr\n-@itemx -single_module   \n+@itemx -single_module\n @itemx -static\n @itemx -sub_library\n-@itemx -sub_umbrella \n+@itemx -sub_umbrella\n @itemx -twolevel_namespace\n @itemx -umbrella\n @itemx -undefined\n @itemx -unexported_symbols_list\n @itemx -weak_reference_mismatches\n-@itemx -whatsloaded  \n+@itemx -whatsloaded\n \n @opindex allowable_client\n-@opindex arch_only    \n+@opindex arch_only\n @opindex client_name\n @opindex compatibility_version\n @opindex current_version\n@@ -7657,35 +7657,35 @@ output file being linked. See man ld(1) for more information.\n @opindex dynamic\n @opindex dynamiclib\n @opindex exported_symbols_list\n-@opindex filelist  \n-@opindex flat_namespace    \n+@opindex filelist\n+@opindex flat_namespace\n @opindex force_cpusubtype_ALL\n @opindex force_flat_namespace\n @opindex headerpad_max_install_names\n @opindex image_base\n-@opindex init     \n+@opindex init\n @opindex install_name\n @opindex keep_private_externs\n-@opindex multi_module   \n+@opindex multi_module\n @opindex multiply_defined\n-@opindex multiply_defined_unused   \n-@opindex noall_load  \n+@opindex multiply_defined_unused\n+@opindex noall_load\n @opindex nofixprebinding\n-@opindex nomultidefs   \n+@opindex nomultidefs\n @opindex noprebind\n-@opindex noseglinkedit      \n+@opindex noseglinkedit\n @opindex pagezero_size\n @opindex prebind\n @opindex prebind_all_twolevel_modules\n-@opindex private_bundle \n+@opindex private_bundle\n @opindex read_only_relocs\n-@opindex sectalign   \n-@opindex sectobjectsymbols    \n-@opindex whyload  \n+@opindex sectalign\n+@opindex sectobjectsymbols\n+@opindex whyload\n @opindex seg1addr\n-@opindex sectcreate       \n-@opindex sectobjectsymbols \n-@opindex sectorder     \n+@opindex sectcreate\n+@opindex sectobjectsymbols\n+@opindex sectorder\n @opindex seg_addr_table\n @opindex seg_addr_table_filename\n @opindex seglinkedit\n@@ -8213,7 +8213,7 @@ Use all SSE extensions enabled by @option{-msse2} as well as the new\n SSE extensions in Prescott New Instructions. @option{-mpni} also\n enables 2 builtin functions, @code{__builtin_ia32_monitor} and\n @code{__builtin_ia32_mwait}, for new instructions @code{monitor} and\n-@code{mwait}. \n+@code{mwait}.\n \n @item sse,387\n Attempt to utilize both instruction sets at once.  This effectively double the\n@@ -8292,22 +8292,22 @@ without that switch.\n @itemx -m128bit-long-double\n @opindex m96bit-long-double\n @opindex m128bit-long-double\n-These switches control the size of @code{long double} type. The i386 \n-application binary interface specifies the size to be 96 bits, \n+These switches control the size of @code{long double} type. The i386\n+application binary interface specifies the size to be 96 bits,\n so @option{-m96bit-long-double} is the default in 32 bit mode.\n \n Modern architectures (Pentium and newer) would prefer @code{long double}\n-to be aligned to an 8 or 16 byte boundary.  In arrays or structures \n-conforming to the ABI, this would not be possible.  So specifying a \n+to be aligned to an 8 or 16 byte boundary.  In arrays or structures\n+conforming to the ABI, this would not be possible.  So specifying a\n @option{-m128bit-long-double} will align @code{long double}\n to a 16 byte boundary by padding the @code{long double} with an additional\n-32 bit zero. \n+32 bit zero.\n \n In the x86-64 compiler, @option{-m128bit-long-double} is the default choice as\n its ABI specifies that @code{long double} is to be aligned on 16 byte boundary.\n- \n+\n Notice that neither of these options enable any extra precision over the x87\n-standard of 80 bits for a @code{long double}. \n+standard of 80 bits for a @code{long double}.\n \n @strong{Warning:} if you override the default value for your target ABI, the\n structures and arrays containing @code{long double} will change their size as\n@@ -9569,7 +9569,7 @@ the compiler.  This setting is the default.\n @item -mno-app-regs\n @opindex mno-app-regs\n This option will cause r2 and r5 to be treated as fixed registers.\n-  \n+\n @item -mv850e1\n @opindex mv850e1\n Specify that the target processor is the V850E1.  The preprocessor\n@@ -10116,9 +10116,9 @@ targets default to @option{-m64}.\n @itemx -mesa\n @opindex mzarch\n @opindex mesa\n-When @option{-mzarch} is specified, generate code using the \n-instructions available on z/Architecture. \n-When @option{-mesa} is specified, generate code using the \n+When @option{-mzarch} is specified, generate code using the\n+instructions available on z/Architecture.\n+When @option{-mesa} is specified, generate code using the\n instructions available on ESA/390. Note that @option{-mesa} is\n not possible with @option{-m64}.\n When generating code compliant to the GNU/Linux for S/390 ABI,"}, {"sha": "41e214e1612711d556c4cefa8aededa7144c0e0d", "filename": "gcc/doc/libgcc.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Flibgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Flibgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Flibgcc.texi?ref=daf2f1299bf45f7d71b927151eed91db8dea6d96", "patch": "@@ -40,7 +40,7 @@ and @code{@w{unsigned int}} correspond to @code{SImode}; @code{long} and\n * Integer library routines::\n * Soft float library routines::\n * Exception handling routines::\n-* Miscellaneous routines:: \n+* Miscellaneous routines::\n @end menu\n \n @node Integer library routines"}, {"sha": "a77e8caf183454d89556255f93fd15b618517224", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=daf2f1299bf45f7d71b927151eed91db8dea6d96", "patch": "@@ -1256,7 +1256,7 @@ instruction is defined:\n   @dots{})\n @end smallexample\n @end ifset\n-GCC can only handle one commutative pair in an asm; if you use more, \n+GCC can only handle one commutative pair in an asm; if you use more,\n the compiler may fail.\n \n @cindex @samp{#} in constraint\n@@ -3429,7 +3429,7 @@ built.  It is intended to handle non-trivial actions needed along\n the abnormal return path.\n \n The address of the exception handler to which the function should return\n-is passed as operand to this pattern.  It will normally need to copied by \n+is passed as operand to this pattern.  It will normally need to copied by\n the pattern to some special register or memory location.\n If the pattern needs to determine the location of the target call\n frame in order to do so, it may use @code{EH_RETURN_STACKADJ_RTX},\n@@ -3871,7 +3871,7 @@ first operand.\n @item\n In combinations of @code{neg}, @code{mult}, @code{plus}, and\n @code{minus}, the @code{neg} operations (if any) will be moved inside\n-the operations as far as possible.  For instance, \n+the operations as far as possible.  For instance,\n @code{(neg (mult A B))} is canonicalized as @code{(mult (neg A) B)}, but\n @code{(plus (mult (neg A) B) C)} is canonicalized as\n @code{(minus A (mult B C))}.\n@@ -5482,13 +5482,13 @@ processors.\n The task of exploiting more processor parallelism is solved by an\n instruction scheduler.  For a better solution to this problem, the\n instruction scheduler has to have an adequate description of the\n-processor parallelism (or @dfn{pipeline description}).  Currently GCC \n+processor parallelism (or @dfn{pipeline description}).  Currently GCC\n provides two alternative ways to describe processor parallelism,\n both described below.  The first method is outlined in the next section;\n it was once the only method provided by GCC, and thus is used in a number\n of exiting ports.  The second, and preferred method, specifies functional\n unit reservations for groups of instructions with the aid of @dfn{regular\n-expressions}.  This is called the @dfn{automaton based description}.\t\n+expressions}.  This is called the @dfn{automaton based description}.\n \n The GCC instruction scheduler uses a @dfn{pipeline hazard recognizer} to\n figure out the possibility of the instruction issue by the processor\n@@ -5657,7 +5657,7 @@ The following optional construction describes names of automata\n generated and used for the pipeline hazards recognition.  Sometimes\n the generated finite state automaton used by the pipeline hazard\n recognizer is large.  If we use more than one automaton and bind functional\n-units to the automata, the total size of the automata is usually \n+units to the automata, the total size of the automata is usually\n less than the size of the single automaton.  If there is no one such\n construction, only one finite state automaton is generated.\n \n@@ -5771,7 +5771,7 @@ expression according to the following syntax:\n \n        allof = allof \"+\" repeat\n              | repeat\n- \n+\n        repeat = element \"*\" number\n               | element\n \n@@ -6078,7 +6078,7 @@ construction\n The old instruction level parallelism description and the pipeline\n hazards recognizer based on it have the following drawbacks in\n comparison with the @acronym{DFA}-based ones:\n-  \n+\n @itemize @bullet\n @item\n Each functional unit is believed to be reserved at the instruction"}, {"sha": "6fcce634f8187bbe1a5d333cb51df3aec90b3000", "filename": "gcc/doc/rtl.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Frtl.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Frtl.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Frtl.texi?ref=daf2f1299bf45f7d71b927151eed91db8dea6d96", "patch": "@@ -2378,7 +2378,7 @@ rest of the register receives an undefined value.  Likewise, if\n the mode of the register, the rest of the register can be changed in\n an undefined way.\n \n-If @var{lval} is a @code{strict_low_part} or @code{zero_extract} \n+If @var{lval} is a @code{strict_low_part} or @code{zero_extract}\n of a @code{subreg}, then the part of the register specified by the\n machine mode of the @code{subreg} is given the value @var{x} and\n the rest of the register is not changed.\n@@ -2462,7 +2462,7 @@ trouble to describe the values that are stored, but it is essential to\n inform the compiler that the registers will be altered, lest it\n attempt to keep data in them across the string instruction.\n \n-If @var{x} is @code{(mem:BLK (const_int 0))} or \n+If @var{x} is @code{(mem:BLK (const_int 0))} or\n @code{(mem:BLK (scratch))}, it means that all memory\n locations must be presumed clobbered.  If @var{x} is a @code{parallel},\n it has the same meaning as a @code{parallel} in a @code{set} expression."}, {"sha": "4e913fe97e53e49a57f59c4a2cb9c8fa3292926d", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=daf2f1299bf45f7d71b927151eed91db8dea6d96", "patch": "@@ -192,8 +192,8 @@ files, kept in the top level directory, are used.  FIXME: when is the\n the top level one) used?\n \n @item The file @file{config.gcc} is used to handle configuration\n-specific to the particular target machine.  The file \n-@file{config.build} is used to handle configuration specific to the \n+specific to the particular target machine.  The file\n+@file{config.build} is used to handle configuration specific to the\n particular build machine.  The file @file{config.host} is used to handle\n configuration specific to the particular host machine.  (In general,\n these should only be used for features that cannot reasonably be tested in\n@@ -276,7 +276,7 @@ headers to work with GCC, some other headers may also be installed in\n @file{config} to be installed on some systems.\n \n GCC installs its own version of @code{<float.h>}, from @file{ginclude/float.h}.\n-This is done to cope with command-line options that change the \n+This is done to cope with command-line options that change the\n representation of floating point numbers.\n \n GCC also installs its own version of @code{<limits.h>}; this is generated\n@@ -901,13 +901,13 @@ GCC contains the following C language test suites, in the\n \n @table @file\n @item gcc.dg\n-This contains tests of particular features of the C compiler, using the \n+This contains tests of particular features of the C compiler, using the\n more modern @samp{dg} harness.  Correctness tests for various compiler\n features should go here if possible.\n \n-Magic comments determine whether the file \n-is preprocessed, compiled, linked or run.  In these tests, error and warning \n-message texts are compared against expected texts or regular expressions \n+Magic comments determine whether the file\n+is preprocessed, compiled, linked or run.  In these tests, error and warning\n+message texts are compared against expected texts or regular expressions\n given in comments.  These tests are run with the options @samp{-ansi -pedantic}\n unless other options are given in the test.  Except as noted below they\n are not run with multiple optimization options.\n@@ -936,7 +936,7 @@ FIXME: describe this.\n This contains particular code fragments which have historically broken easily.\n These tests are run with multiple optimization options, so tests for features\n which only break at some optimization levels belong here.  This also contains\n-tests to check that certain optimizations occur.  It might be worthwhile to \n+tests to check that certain optimizations occur.  It might be worthwhile to\n separate the correctness tests cleanly from the code quality tests, but\n it hasn't been done yet.\n "}, {"sha": "9fba4b079c40b01f7579141b61fa23552ef213b4", "filename": "gcc/doc/standards.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Fstandards.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Fstandards.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fstandards.texi?ref=daf2f1299bf45f7d71b927151eed91db8dea6d96", "patch": "@@ -145,10 +145,10 @@ GNU C library).  @xref{Standard Libraries,,Standard Libraries}.\n Most of the compiler support routines used by GCC are present in\n @file{libgcc}, but there are a few exceptions.  GCC requires the\n freestanding environment provide @code{memcpy}, @code{memmove},\n-@code{memset} and @code{memcmp}.  Some older ports of GCC are \n+@code{memset} and @code{memcmp}.  Some older ports of GCC are\n configured to use the BSD @code{bcopy}, @code{bzero} and @code{bcmp}\n functions instead, but this is deprecated for new ports.\n-Finally, if @code{__builtin_trap} is used, and the target does \n+Finally, if @code{__builtin_trap} is used, and the target does\n not implement the @code{trap} pattern, then GCC will emit a call\n to @code{abort}.\n "}, {"sha": "fd2b37055617f994c8c2671010c2915cb1d2da74", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=daf2f1299bf45f7d71b927151eed91db8dea6d96", "patch": "@@ -5666,23 +5666,23 @@ insns with indexes greater than given index.\n \n @deftypefn {Target Hook} bool IS_COSTLY_DEPENDENCE (rtx @var{insn1}, rtx @var{insn2}, rtx @var{dep_link}, int @var{dep_cost}, int @var{distance})\n This hook is used to define which dependences are considered costly by\n-the target, so costly that it is not advisable to schedule the insns that \n+the target, so costly that it is not advisable to schedule the insns that\n are involved in the dependence too close to one another.  The parameters\n-to this hook are as follows:  The second parameter @var{insn2} is dependent \n-upon the first parameter @var{insn1}.  The dependence between @var{insn1} \n-and @var{insn2} is represented by the third parameter @var{dep_link}.  The \n-fourth parameter @var{cost} is the cost of the dependence, and the fifth \n-parameter @var{distance} is the distance in cycles between the two insns. \n+to this hook are as follows:  The second parameter @var{insn2} is dependent\n+upon the first parameter @var{insn1}.  The dependence between @var{insn1}\n+and @var{insn2} is represented by the third parameter @var{dep_link}.  The\n+fourth parameter @var{cost} is the cost of the dependence, and the fifth\n+parameter @var{distance} is the distance in cycles between the two insns.\n The hook returns @code{true} if considering the distance between the two\n insns the dependence between them is considered costly by the target,\n and @code{false} otherwise.\n \n Defining this hook can be useful in multiple-issue out-of-order machines,\n-where (a) it's practically hopeless to predict the actual data/resource \n+where (a) it's practically hopeless to predict the actual data/resource\n delays, however: (b) there's a better chance to predict the actual grouping\n-that will be formed, and (c) correctly emulating the grouping can be very \n+that will be formed, and (c) correctly emulating the grouping can be very\n important.  In such targets one may want to allow issuing dependent insns\n-closer to one another - i.e, closer than the dependence distance;  however, \n+closer to one another - i.e, closer than the dependence distance;  however,\n not in cases of \"costly dependences\", which this hooks allows to define.\n @end deftypefn\n "}, {"sha": "5ee77635f25e54a0d27fb0595e20969c5b7bf0e9", "filename": "gcc/doc/trouble.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Ftrouble.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/daf2f1299bf45f7d71b927151eed91db8dea6d96/gcc%2Fdoc%2Ftrouble.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftrouble.texi?ref=daf2f1299bf45f7d71b927151eed91db8dea6d96", "patch": "@@ -974,7 +974,7 @@ type @code{Derived<T>*}, so is obviously dependent), or using\n into scope by a @code{using}-declaration.\n \n Another, similar example involves calling member functions of a base\n-class: \n+class:\n \n @smallexample\n   template <typename T> struct Base @{"}]}