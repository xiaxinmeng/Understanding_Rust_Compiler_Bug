{"sha": "d25b6044317a741d650fad5bd1cddb12bbcb89b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI1YjYwNDQzMTdhNzQxZDY1MGZhZDViZDFjZGRiMTJiYmNiODliNQ==", "commit": {"author": {"name": "Charles Hannum", "email": "mycroft@gnu.org", "date": "1989-08-13T19:24:27Z"}, "committer": {"name": "Charles Hannum", "email": "mycroft@gnu.org", "date": "1989-08-13T19:24:27Z"}, "message": "entered into RCS\n\nFrom-SVN: r3", "tree": {"sha": "f77e3eda05a39665e2ac4c7fd4dffb53099c4187", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f77e3eda05a39665e2ac4c7fd4dffb53099c4187"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d25b6044317a741d650fad5bd1cddb12bbcb89b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d25b6044317a741d650fad5bd1cddb12bbcb89b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d25b6044317a741d650fad5bd1cddb12bbcb89b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d25b6044317a741d650fad5bd1cddb12bbcb89b5/comments", "author": null, "committer": null, "parents": [{"sha": "6f39d4ff6715973bbdf6510a69fccc46f9a746b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f39d4ff6715973bbdf6510a69fccc46f9a746b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f39d4ff6715973bbdf6510a69fccc46f9a746b9"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "b16604253617cb4347ef0fa0038fd4c2218f5c68", "filename": "gcc/typeclass.h", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d25b6044317a741d650fad5bd1cddb12bbcb89b5/gcc%2Ftypeclass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d25b6044317a741d650fad5bd1cddb12bbcb89b5/gcc%2Ftypeclass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftypeclass.h?ref=d25b6044317a741d650fad5bd1cddb12bbcb89b5", "patch": "@@ -0,0 +1,14 @@\n+/* Values returned by __builtin_classify_type.  */\n+\n+enum type_class\n+{\n+  no_type_class = -1,\n+  void_type_class, integer_type_class, char_type_class,\n+  enumeral_type_class, boolean_type_class,\n+  pointer_type_class, reference_type_class, offset_type_class,\n+  real_type_class, complex_type_class,\n+  function_type_class, method_type_class,\n+  record_type_class, union_type_class,\n+  array_type_class, string_type_class, set_type_class, file_type_class,\n+  lang_type_class\n+};"}]}