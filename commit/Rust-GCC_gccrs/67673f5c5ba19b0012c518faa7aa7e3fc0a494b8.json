{"sha": "67673f5c5ba19b0012c518faa7aa7e3fc0a494b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc2NzNmNWM1YmExOWIwMDEyYzUxOGZhYTdhYTdlM2ZjMGE0OTRiOA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2000-10-18T05:45:37Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-10-18T05:45:37Z"}, "message": "c-common.c (back_end_hook): New variable.\n\n\t* c-common.c (back_end_hook): New variable.\n\t* c-common.h (back_end_hook): Declare it.\n\t* c-lang.c (finish_file): Use it.\n\n\t* emit-rtl.c (init_emit_once): Initialize the const_int_htab\n\tearlier.\n\n\t* cp-tree.h (back_end_hook): Remove declaration.\n\t* decl2.c (back_end_hook): Remove definition.\n\n\t* dump.c (dequeue_and_dump): Dump TREE_USED.\n\nFrom-SVN: r36928", "tree": {"sha": "a423e6df5b432920d8f9fbe1c1a2321d11a04ed2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a423e6df5b432920d8f9fbe1c1a2321d11a04ed2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67673f5c5ba19b0012c518faa7aa7e3fc0a494b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67673f5c5ba19b0012c518faa7aa7e3fc0a494b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67673f5c5ba19b0012c518faa7aa7e3fc0a494b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67673f5c5ba19b0012c518faa7aa7e3fc0a494b8/comments", "author": null, "committer": null, "parents": [{"sha": "265dab10ab0055accb4959a658f3c907d906b6fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/265dab10ab0055accb4959a658f3c907d906b6fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/265dab10ab0055accb4959a658f3c907d906b6fe"}], "stats": {"total": 57, "additions": 40, "deletions": 17}, "files": [{"sha": "fc1f8db160c410adbbae1b6a37c105ba87135d7c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67673f5c5ba19b0012c518faa7aa7e3fc0a494b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67673f5c5ba19b0012c518faa7aa7e3fc0a494b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=67673f5c5ba19b0012c518faa7aa7e3fc0a494b8", "patch": "@@ -1,3 +1,12 @@\n+2000-10-17  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* c-common.c (back_end_hook): New variable.\n+\t* c-common.h (back_end_hook): Declare it.\n+\t* c-lang.c (finish_file): Use it.\n+\n+\t* emit-rtl.c (init_emit_once): Initialize the const_int_htab\n+\tearlier.\n+\t\n 2000-10-18  Jan Hubikca  <jh@suse.cz>\n \n         * i386.c (ix86_comparison_operator, put_condition_code,"}, {"sha": "72118c8f8d879dfb0b77535c6cbc897904b725cf", "filename": "gcc/c-common.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67673f5c5ba19b0012c518faa7aa7e3fc0a494b8/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67673f5c5ba19b0012c518faa7aa7e3fc0a494b8/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=67673f5c5ba19b0012c518faa7aa7e3fc0a494b8", "patch": "@@ -158,6 +158,10 @@ int (*lang_statement_code_p)           PARAMS ((enum tree_code));\n    any action required right before expand_function_end is called.  */\n void (*lang_expand_function_end)       PARAMS ((void));\n \n+/* If this variable is defined to a non-NULL value, it will be called\n+   after the file has been completely parsed.  */\n+void (*back_end_hook) PARAMS ((tree));\n+\n /* Nonzero means the expression being parsed will never be evaluated.\n    This is a count, since unevaluated expressions can nest.  */\n int skip_evaluation;"}, {"sha": "a4bd09e9274b4cffbef12f2a3433dc2707567a7e", "filename": "gcc/c-common.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67673f5c5ba19b0012c518faa7aa7e3fc0a494b8/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67673f5c5ba19b0012c518faa7aa7e3fc0a494b8/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=67673f5c5ba19b0012c518faa7aa7e3fc0a494b8", "patch": "@@ -697,6 +697,12 @@ extern tree c_add_case_label                    PARAMS ((splay_tree,\n \n extern tree build_function_call\t\t\tPARAMS ((tree, tree));\n \n+/* If this variable is defined to a non-NULL value, it will be called\n+   after the file has been completely parsed.  The argument will be\n+   the GLOBAL_NAMESPACE in C++, or the list of top-level declarations\n+   in C.  */\n+extern void (*back_end_hook) PARAMS ((tree));\n+\n #ifdef RTX_CODE\n \n extern struct rtx_def *c_expand_expr            PARAMS ((tree, rtx,\n@@ -720,3 +726,5 @@ struct c_fileinfo *get_fileinfo\t\t\tPARAMS ((const char *));\n extern void dump_time_statistics\t\tPARAMS ((void));\n \n #endif\n+\n+"}, {"sha": "ab36a2ea37ef548e8cdaaa92baf4579804a00519", "filename": "gcc/c-lang.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67673f5c5ba19b0012c518faa7aa7e3fc0a494b8/gcc%2Fc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67673f5c5ba19b0012c518faa7aa7e3fc0a494b8/gcc%2Fc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.c?ref=67673f5c5ba19b0012c518faa7aa7e3fc0a494b8", "patch": "@@ -242,6 +242,9 @@ finish_file ()\n       assemble_destructor (IDENTIFIER_POINTER (fnname));\n     }\n #endif\n+  \n+  if (back_end_hook)\n+    (*back_end_hook) (getdecls ());\n }\n \n /* Called during diagnostic message formatting process to print a"}, {"sha": "d4f8e47f4dce050bde1695ed720222c95e8be25b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67673f5c5ba19b0012c518faa7aa7e3fc0a494b8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67673f5c5ba19b0012c518faa7aa7e3fc0a494b8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=67673f5c5ba19b0012c518faa7aa7e3fc0a494b8", "patch": "@@ -1,3 +1,10 @@\n+2000-10-17  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* cp-tree.h (back_end_hook): Remove declaration.\n+\t* decl2.c (back_end_hook): Remove definition.\n+\n+\t* dump.c (dequeue_and_dump): Dump TREE_USED.\n+\n Tue Oct 17 20:19:06 2000  Brad Lucier <lucier@math.purdue.edu>\n \n \t* spew.c (snarf_defarg): Cast 2nd arg to obstack_blank to (int)."}, {"sha": "689c859599e2849e2cae2e48547e130244ba3800", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67673f5c5ba19b0012c518faa7aa7e3fc0a494b8/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67673f5c5ba19b0012c518faa7aa7e3fc0a494b8/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=67673f5c5ba19b0012c518faa7aa7e3fc0a494b8", "patch": "@@ -1170,12 +1170,6 @@ extern int flag_access_control;\n \n extern int flag_check_new;\n \n-/* If this variable is defined to a non-NULL value, it will be called\n-   after the file has been completely parsed.  The argument will be\n-   the GLOBAL_NAMESPACE.  */\n-\n-extern void (*back_end_hook) PARAMS ((tree));\n-\n \f\n /* C++ language-specific tree codes.  */\n #define DEFTREECODE(SYM, NAME, TYPE, LENGTH) SYM,"}, {"sha": "fc319b7d7ae727f94dc3dafb0940bd05b57014b1", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67673f5c5ba19b0012c518faa7aa7e3fc0a494b8/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67673f5c5ba19b0012c518faa7aa7e3fc0a494b8/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=67673f5c5ba19b0012c518faa7aa7e3fc0a494b8", "patch": "@@ -490,11 +490,6 @@ int flag_permissive;\n \n int flag_enforce_eh_specs = 1;\n \n-/* If this variable is defined to a non-NULL value, it will be called\n-   after the file has been completely parsed.  */\n-\n-void (*back_end_hook) PARAMS ((tree));\n-\n /* The variant of the C language being processed.  */\n \n c_language_kind c_language = clk_cplusplus;"}, {"sha": "83c7db060587f02ddc91a6a4e5b152f2c371ba7d", "filename": "gcc/cp/dump.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67673f5c5ba19b0012c518faa7aa7e3fc0a494b8/gcc%2Fcp%2Fdump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67673f5c5ba19b0012c518faa7aa7e3fc0a494b8/gcc%2Fcp%2Fdump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdump.c?ref=67673f5c5ba19b0012c518faa7aa7e3fc0a494b8", "patch": "@@ -555,6 +555,9 @@ dequeue_and_dump (di)\n \t  if (DECL_FIELD_OFFSET (t))\n \t    dump_child (\"bpos\", bit_position (t));\n \t}\n+      else if (TREE_CODE (t) == VAR_DECL \n+\t       || TREE_CODE (t) == PARM_DECL)\n+\tdump_int (di, \"used\", TREE_USED (t));\n       break;\n \n     case FUNCTION_DECL:"}, {"sha": "3929e8820cfd0174b57fd04da4d2a0a25bbf3f5b", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67673f5c5ba19b0012c518faa7aa7e3fc0a494b8/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67673f5c5ba19b0012c518faa7aa7e3fc0a494b8/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=67673f5c5ba19b0012c518faa7aa7e3fc0a494b8", "patch": "@@ -4008,6 +4008,12 @@ init_emit_once (line_numbers)\n   enum machine_mode mode;\n   enum machine_mode double_mode;\n \n+  /* Initialize the CONST_INT hash table.  */\n+  const_int_htab = htab_create (37, const_int_htab_hash, \n+\t\t\t\tconst_int_htab_eq, NULL);\n+  ggc_add_root (&const_int_htab, 1, sizeof (const_int_htab), \n+\t\trtx_htab_mark);\n+\n   no_line_numbers = ! line_numbers;\n \n   /* Compute the word and byte modes.  */\n@@ -4191,12 +4197,6 @@ init_emit_once (line_numbers)\n   ggc_add_rtx_root (&static_chain_rtx, 1);\n   ggc_add_rtx_root (&static_chain_incoming_rtx, 1);\n   ggc_add_rtx_root (&return_address_pointer_rtx, 1);\n-\n-  /* Initialize the CONST_INT hash table.  */\n-  const_int_htab = htab_create (37, const_int_htab_hash, \n-\t\t\t\tconst_int_htab_eq, NULL);\n-  ggc_add_root (&const_int_htab, 1, sizeof (const_int_htab), \n-\t\trtx_htab_mark);\n }\n \f\n /* Query and clear/ restore no_line_numbers.  This is used by the"}]}