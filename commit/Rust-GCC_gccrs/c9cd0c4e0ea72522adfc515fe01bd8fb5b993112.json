{"sha": "c9cd0c4e0ea72522adfc515fe01bd8fb5b993112", "node_id": "C_kwDOANBUbNoAKGM5Y2QwYzRlMGVhNzI1MjJhZGZjNTE1ZmUwMWJkOGZiNWI5OTMxMTI", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-13T20:54:44Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-11-14T08:35:03Z"}, "message": "Partially revert d3fe767c16e7c528e4fc71c8a68ac14b4573d880.\n\ngcc/ChangeLog:\n\n\t* doc/cpp/pragmas.rst: Revert.", "tree": {"sha": "1b4cf8c660643560d3194fff3cf2518086e957ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b4cf8c660643560d3194fff3cf2518086e957ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9cd0c4e0ea72522adfc515fe01bd8fb5b993112", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9cd0c4e0ea72522adfc515fe01bd8fb5b993112", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9cd0c4e0ea72522adfc515fe01bd8fb5b993112", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9cd0c4e0ea72522adfc515fe01bd8fb5b993112/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "943401b36d128de29e33ce54b663e56c60d4a678", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/943401b36d128de29e33ce54b663e56c60d4a678", "html_url": "https://github.com/Rust-GCC/gccrs/commit/943401b36d128de29e33ce54b663e56c60d4a678"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "da07cebf4a1ae6650a69d3b4b30e9399f362b9e2", "filename": "gcc/doc/cpp/pragmas.rst", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9cd0c4e0ea72522adfc515fe01bd8fb5b993112/gcc%2Fdoc%2Fcpp%2Fpragmas.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9cd0c4e0ea72522adfc515fe01bd8fb5b993112/gcc%2Fdoc%2Fcpp%2Fpragmas.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp%2Fpragmas.rst?ref=c9cd0c4e0ea72522adfc515fe01bd8fb5b993112", "patch": "@@ -119,6 +119,3 @@ GCC plugins may provide their own pragmas.\n   file will never be read again, no matter what.  It is a less-portable\n   alternative to using :samp:`#ifndef` to guard the contents of header files\n   against multiple inclusions.\n-\n-``#pragma region {tokens}...``, ``#pragma endregion {tokens}...``\n-  These pragmas are accepted, but have no effect."}]}