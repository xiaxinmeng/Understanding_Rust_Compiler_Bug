{"sha": "f9ae4df84ec291d01a49251ef5ffa17fa9674fce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjlhZTRkZjg0ZWMyOTFkMDFhNDkyNTFlZjVmZmExN2ZhOTY3NGZjZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-01-23T08:24:38Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-01-23T08:24:38Z"}, "message": "re PR target/52125 (Problems with LO16 asm operands on MIPS)\n\ngcc/\n\tPR target/52125\n\t* rtl.h (get_referenced_operands): Declare.\n\t* recog.c (get_referenced_operands): New function.\n\t* config/mips/mips.c (mips_reorg_process_insns): Check which asm\n\toperands have been referenced when recording LO_SUM references.\n\ngcc/testsuite/\n\tPR target/52125\n\t* gcc.dg/pr48774.c: Remove skip for mips_rel.\n\t* gcc.target/mips/pr52125.c: New test.\n\nFrom-SVN: r206955", "tree": {"sha": "bf94a0c87d742a1c445f545a8cbf5dfc3bbab8cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf94a0c87d742a1c445f545a8cbf5dfc3bbab8cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9ae4df84ec291d01a49251ef5ffa17fa9674fce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9ae4df84ec291d01a49251ef5ffa17fa9674fce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9ae4df84ec291d01a49251ef5ffa17fa9674fce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9ae4df84ec291d01a49251ef5ffa17fa9674fce/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e50f5f2e0d3396bd4ab2f799135309de39c96d58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e50f5f2e0d3396bd4ab2f799135309de39c96d58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e50f5f2e0d3396bd4ab2f799135309de39c96d58"}], "stats": {"total": 98, "additions": 96, "deletions": 2}, "files": [{"sha": "b2540ec79f6fe56a8be83b8f26604e388a865376", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9ae4df84ec291d01a49251ef5ffa17fa9674fce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9ae4df84ec291d01a49251ef5ffa17fa9674fce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f9ae4df84ec291d01a49251ef5ffa17fa9674fce", "patch": "@@ -1,3 +1,11 @@\n+2014-01-23  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\tPR target/52125\n+\t* rtl.h (get_referenced_operands): Declare.\n+\t* recog.c (get_referenced_operands): New function.\n+\t* config/mips/mips.c (mips_reorg_process_insns): Check which asm\n+\toperands have been referenced when recording LO_SUM references.\n+\n 2014-01-22  David Holsgrove <david.holsgrove@xilinx.com>\n \n \t* config/microblaze/microblaze.md: Correct bswaphi2 insn."}, {"sha": "5bad0f8b12272765b955b379c25be5b2f26dffd8", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9ae4df84ec291d01a49251ef5ffa17fa9674fce/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9ae4df84ec291d01a49251ef5ffa17fa9674fce/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=f9ae4df84ec291d01a49251ef5ffa17fa9674fce", "patch": "@@ -16097,7 +16097,23 @@ mips_reorg_process_insns (void)\n   for (insn = get_insns (); insn != 0; insn = NEXT_INSN (insn))\n     FOR_EACH_SUBINSN (subinsn, insn)\n       if (USEFUL_INSN_P (subinsn))\n-\tfor_each_rtx (&PATTERN (subinsn), mips_record_lo_sum, &htab);\n+\t{\n+\t  rtx body = PATTERN (insn);\n+\t  int noperands = asm_noperands (body);\n+\t  if (noperands >= 0)\n+\t    {\n+\t      rtx *ops = XALLOCAVEC (rtx, noperands);\n+\t      bool *used = XALLOCAVEC (bool, noperands);\n+\t      const char *string = decode_asm_operands (body, ops, NULL, NULL,\n+\t\t\t\t\t\t\tNULL, NULL);\n+\t      get_referenced_operands (string, used, noperands);\n+\t      for (int i = 0; i < noperands; ++i)\n+\t\tif (used[i])\n+\t\t  for_each_rtx (&ops[i], mips_record_lo_sum, &htab);\n+\t    }\n+\t  else\n+\t    for_each_rtx (&PATTERN (subinsn), mips_record_lo_sum, &htab);\n+\t}\n \n   last_insn = 0;\n   hilo_delay = 2;"}, {"sha": "e2caf9859d8301309676a73656819a787c1e8b77", "filename": "gcc/recog.c", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9ae4df84ec291d01a49251ef5ffa17fa9674fce/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9ae4df84ec291d01a49251ef5ffa17fa9674fce/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=f9ae4df84ec291d01a49251ef5ffa17fa9674fce", "patch": "@@ -1620,6 +1620,50 @@ decode_asm_operands (rtx body, rtx *operands, rtx **operand_locs,\n   return ASM_OPERANDS_TEMPLATE (asmop);\n }\n \n+/* Parse inline assembly string STRING and determine which operands are\n+   referenced by % markers.  For the first NOPERANDS operands, set USED[I]\n+   to true if operand I is referenced.\n+\n+   This is intended to distinguish barrier-like asms such as:\n+\n+      asm (\"\" : \"=m\" (...));\n+\n+   from real references such as:\n+\n+      asm (\"sw\\t$0, %0\" : \"=m\" (...));  */\n+\n+void\n+get_referenced_operands (const char *string, bool *used,\n+\t\t\t unsigned int noperands)\n+{\n+  memset (used, 0, sizeof (bool) * noperands);\n+  const char *p = string;\n+  while (*p)\n+    switch (*p)\n+      {\n+      case '%':\n+\tp += 1;\n+\t/* A letter followed by a digit indicates an operand number.  */\n+\tif (ISALPHA (p[0]) && ISDIGIT (p[1]))\n+\t  p += 1;\n+\tif (ISDIGIT (*p))\n+\t  {\n+\t    char *endptr;\n+\t    unsigned long opnum = strtoul (p, &endptr, 10);\n+\t    if (endptr != p && opnum < noperands)\n+\t      used[opnum] = true;\n+\t    p = endptr;\n+\t  }\n+\telse\n+\t  p += 1;\n+\tbreak;\n+\n+      default:\n+\tp++;\n+\tbreak;\n+      }\n+}\n+\n /* Check if an asm_operand matches its constraints.\n    Return > 0 if ok, = 0 if bad, < 0 if inconclusive.  */\n "}, {"sha": "f1cda4c04b59a94829c6841341ecdd7b4242aae6", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9ae4df84ec291d01a49251ef5ffa17fa9674fce/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9ae4df84ec291d01a49251ef5ffa17fa9674fce/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=f9ae4df84ec291d01a49251ef5ffa17fa9674fce", "patch": "@@ -2169,6 +2169,7 @@ extern rtx extract_asm_operands (rtx);\n extern int asm_noperands (const_rtx);\n extern const char *decode_asm_operands (rtx, rtx *, rtx **, const char **,\n \t\t\t\t\tenum machine_mode *, location_t *);\n+extern void get_referenced_operands (const char *, bool *, unsigned int);\n \n extern enum reg_class reg_preferred_class (int);\n extern enum reg_class reg_alternate_class (int);"}, {"sha": "4c085c63da18241db689214cb0feafeb33bbdff8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9ae4df84ec291d01a49251ef5ffa17fa9674fce/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9ae4df84ec291d01a49251ef5ffa17fa9674fce/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f9ae4df84ec291d01a49251ef5ffa17fa9674fce", "patch": "@@ -1,3 +1,9 @@\n+2014-01-23  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\tPR target/52125\n+\t* gcc.dg/pr48774.c: Remove skip for mips_rel.\n+\t* gcc.target/mips/pr52125.c: New test.\n+\n 2014-01-22  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/59891"}, {"sha": "91ce361ccb38645ce4a249d80bc526b382d96ae6", "filename": "gcc/testsuite/gcc.dg/pr48774.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9ae4df84ec291d01a49251ef5ffa17fa9674fce/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48774.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9ae4df84ec291d01a49251ef5ffa17fa9674fce/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48774.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr48774.c?ref=f9ae4df84ec291d01a49251ef5ffa17fa9674fce", "patch": "@@ -1,6 +1,5 @@\n /* PR target/48774 */\n /* { dg-do run } */\n-/* { dg-skip-if \"PR 52125\" { mips_rel } { \"*\" } { \"\" } } */\n /* { dg-options \"-O2 -funroll-loops\" } */\n \n extern void abort (void);"}, {"sha": "cfa8d68d10b913d6b490a2374b99357216222eb5", "filename": "gcc/testsuite/gcc.target/mips/pr52125.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9ae4df84ec291d01a49251ef5ffa17fa9674fce/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr52125.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9ae4df84ec291d01a49251ef5ffa17fa9674fce/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr52125.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr52125.c?ref=f9ae4df84ec291d01a49251ef5ffa17fa9674fce", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-options \"addressing=absolute\" } */\n+\n+int a, b, c, d;\n+\n+NOMIPS16 void\n+foo (void)\n+{\n+  asm (\"%1 %z3\"\n+       : \"=m\" (a), \"=m\" (b)\n+       : \"m\" (c), \"m\" (d));\n+}\n+\n+/* { dg-final { scan-assembler-not \"%hi\\\\(a\\\\)\" } } */\n+/* { dg-final { scan-assembler-not \"%lo\\\\(a\\\\)\" } } */\n+/* { dg-final { scan-assembler \"%hi\\\\(b\\\\)\" } } */\n+/* { dg-final { scan-assembler \"%lo\\\\(b\\\\)\" } } */\n+/* { dg-final { scan-assembler-not \"%hi\\\\(c\\\\)\" } } */\n+/* { dg-final { scan-assembler-not \"%lo\\\\(c\\\\)\" } } */\n+/* { dg-final { scan-assembler \"%hi\\\\(d\\\\)\" } } */\n+/* { dg-final { scan-assembler \"%lo\\\\(d\\\\)\" } } */"}]}