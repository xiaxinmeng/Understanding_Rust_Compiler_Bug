{"sha": "323b18d54b960d3ef64f60ad20838ef958334dc0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIzYjE4ZDU0Yjk2MGQzZWY2NGY2MGFkMjA4MzhlZjk1ODMzNGRjMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-05-07T08:37:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-05-07T08:37:52Z"}, "message": "i386: Fix up 8-byte vcond* with -mxop [PR100445]\n\nix86_expand_sse_movcc has special TARGET_XOP handling and the recent\naddition of support of v*cond* patterns for MMXMODEI modes results in\nICEs because the expected pattern doesn't exist.  We can handle it\nusing 128-bit vpcmov (if we ignore the upper 64 bits like we ignore in\nother TARGET_MMX_WITH_SSE support).\n\n2021-05-07  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/100445\n\t* config/i386/mmx.md (*xop_pcmov_<mode>): New define_insn.\n\n\t* gcc.target/i386/pr100445.c: New test.", "tree": {"sha": "c4b8adf8b90d62ce8bc615f8600cd275a17003cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4b8adf8b90d62ce8bc615f8600cd275a17003cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/323b18d54b960d3ef64f60ad20838ef958334dc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/323b18d54b960d3ef64f60ad20838ef958334dc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/323b18d54b960d3ef64f60ad20838ef958334dc0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/323b18d54b960d3ef64f60ad20838ef958334dc0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfe82a0cbe72baa723f7d89502cdf59c0e87fff4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfe82a0cbe72baa723f7d89502cdf59c0e87fff4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfe82a0cbe72baa723f7d89502cdf59c0e87fff4"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "295501dec2fd2c4e38049ba667e390cddbf07440", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/323b18d54b960d3ef64f60ad20838ef958334dc0/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/323b18d54b960d3ef64f60ad20838ef958334dc0/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=323b18d54b960d3ef64f60ad20838ef958334dc0", "patch": "@@ -1700,6 +1700,17 @@\n   DONE;\n })\n \n+;; XOP parallel XMM conditional moves\n+(define_insn \"*xop_pcmov_<mode>\"\n+  [(set (match_operand:MMXMODEI 0 \"register_operand\" \"=x\")\n+        (if_then_else:MMXMODEI\n+          (match_operand:MMXMODEI 3 \"register_operand\" \"x\")\n+          (match_operand:MMXMODEI 1 \"register_operand\" \"x\")\n+          (match_operand:MMXMODEI 2 \"register_operand\" \"x\")))]\n+  \"TARGET_XOP && TARGET_MMX_WITH_SSE\"\n+  \"vpcmov\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  [(set_attr \"type\" \"sse4arg\")])\n+\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;\n ;; Parallel integral logical operations"}, {"sha": "2f54fec7899abdd7bfeebbfa266feff40c2ae31d", "filename": "gcc/testsuite/gcc.target/i386/pr100445.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/323b18d54b960d3ef64f60ad20838ef958334dc0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100445.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/323b18d54b960d3ef64f60ad20838ef958334dc0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100445.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100445.c?ref=323b18d54b960d3ef64f60ad20838ef958334dc0", "patch": "@@ -0,0 +1,12 @@\n+/* PR target/100445 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -mxop\" } */\n+\n+int a, b[3];\n+\n+void\n+foo (void)\n+{\n+  for (; a < 3; a++)\n+    b[a] = (a - 1) / 2;\n+}"}]}