{"sha": "6206a883fe7a741dbb9e09d88255a170a75950f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIwNmE4ODNmZTdhNzQxZGJiOWUwOWQ4ODI1NWExNzBhNzU5NTBmNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-01-31T08:20:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-01-31T08:20:45Z"}, "message": "re PR sanitizer/89124 (__attribute__((no_sanitize_address)) interferes with __attribute__((target(xxx))))\n\n\tPR sanitizer/89124\n\t* ipa-inline.c (sanitize_attrs_match_for_inline_p): Allow inlining\n\talways_inline callees into no_sanitize_address callers.\n\n\t* c-c++-common/asan/pr89124.c: New test.\n\nFrom-SVN: r268415", "tree": {"sha": "f4ecfa951d1abeab8f4816a41a8447acb267d6ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4ecfa951d1abeab8f4816a41a8447acb267d6ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6206a883fe7a741dbb9e09d88255a170a75950f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6206a883fe7a741dbb9e09d88255a170a75950f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6206a883fe7a741dbb9e09d88255a170a75950f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6206a883fe7a741dbb9e09d88255a170a75950f5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f4caead02f75bf6c2d1de2e35498fcf6a32936e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4caead02f75bf6c2d1de2e35498fcf6a32936e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4caead02f75bf6c2d1de2e35498fcf6a32936e2"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "a220d57560052d508aba57c686703ac1bade9e90", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6206a883fe7a741dbb9e09d88255a170a75950f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6206a883fe7a741dbb9e09d88255a170a75950f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6206a883fe7a741dbb9e09d88255a170a75950f5", "patch": "@@ -1,3 +1,9 @@\n+2019-01-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/89124\n+\t* ipa-inline.c (sanitize_attrs_match_for_inline_p): Allow inlining\n+\talways_inline callees into no_sanitize_address callers.\n+\n 2019-01-31  Richard Biener  <rguenther@suse.de>\n \n \tPR rtl-optimization/89115"}, {"sha": "4ddbfdf772ce034d54dbac37e2a2f5a455879ba7", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6206a883fe7a741dbb9e09d88255a170a75950f5/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6206a883fe7a741dbb9e09d88255a170a75950f5/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=6206a883fe7a741dbb9e09d88255a170a75950f5", "patch": "@@ -264,6 +264,12 @@ sanitize_attrs_match_for_inline_p (const_tree caller, const_tree callee)\n   if (!caller || !callee)\n     return true;\n \n+  /* Allow inlining always_inline functions into no_sanitize_address\n+     functions.  */\n+  if (!sanitize_flags_p (SANITIZE_ADDRESS, caller)\n+      && lookup_attribute (\"always_inline\", DECL_ATTRIBUTES (callee)))\n+    return true;\n+\n   return ((sanitize_flags_p (SANITIZE_ADDRESS, caller)\n \t   == sanitize_flags_p (SANITIZE_ADDRESS, callee))\n \t  && (sanitize_flags_p (SANITIZE_POINTER_COMPARE, caller)"}, {"sha": "48f4bbddd88b0a77abf1c2d69679ddaff7af6214", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6206a883fe7a741dbb9e09d88255a170a75950f5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6206a883fe7a741dbb9e09d88255a170a75950f5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6206a883fe7a741dbb9e09d88255a170a75950f5", "patch": "@@ -1,3 +1,8 @@\n+2019-01-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/89124\n+\t* c-c++-common/asan/pr89124.c: New test.\n+\n 2019-01-30  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/52564"}, {"sha": "c9c870b76c6cdd0764a7d69ccf93d0d0f27881fb", "filename": "gcc/testsuite/c-c++-common/asan/pr89124.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6206a883fe7a741dbb9e09d88255a170a75950f5/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpr89124.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6206a883fe7a741dbb9e09d88255a170a75950f5/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpr89124.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpr89124.c?ref=6206a883fe7a741dbb9e09d88255a170a75950f5", "patch": "@@ -0,0 +1,14 @@\n+/* PR sanitizer/89124 */\n+/* { dg-do compile } */\n+\n+static int inline __attribute__ ((always_inline))\n+foo (int x)\n+{\n+  return x + 1;\n+}\n+\n+__attribute__ ((no_sanitize_address)) int\n+bar (int x)\n+{\n+  return foo (x);\n+}"}]}