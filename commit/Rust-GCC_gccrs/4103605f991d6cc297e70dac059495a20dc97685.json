{"sha": "4103605f991d6cc297e70dac059495a20dc97685", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDEwMzYwNWY5OTFkNmNjMjk3ZTcwZGFjMDU5NDk1YTIwZGM5NzY4NQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-09-23T17:44:57Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-09-23T17:44:57Z"}, "message": "* config/avr/avr.c: Fix some typos in comments.\n\nFrom-SVN: r179127", "tree": {"sha": "31ad07806891d3aabb8e7e6110fda178a2d5d26b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31ad07806891d3aabb8e7e6110fda178a2d5d26b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4103605f991d6cc297e70dac059495a20dc97685", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4103605f991d6cc297e70dac059495a20dc97685", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4103605f991d6cc297e70dac059495a20dc97685", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4103605f991d6cc297e70dac059495a20dc97685/comments", "author": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25837a2f78a9baa97f88b289a43a93a362c4d538", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25837a2f78a9baa97f88b289a43a93a362c4d538", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25837a2f78a9baa97f88b289a43a93a362c4d538"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "fbc9b972a1de6b48e44b587836f618d1fa6c74e9", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4103605f991d6cc297e70dac059495a20dc97685/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4103605f991d6cc297e70dac059495a20dc97685/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=4103605f991d6cc297e70dac059495a20dc97685", "patch": "@@ -446,15 +446,15 @@ signal_function_p (tree func)\n   return avr_lookup_function_attribute1 (func, \"signal\");\n }\n \n-/* Return nonzero if FUNC is a OS_task function.  */\n+/* Return nonzero if FUNC is an OS_task function.  */\n \n static int\n avr_OS_task_function_p (tree func)\n {\n   return avr_lookup_function_attribute1 (func, \"OS_task\");\n }\n \n-/* Return nonzero if FUNC is a OS_main function.  */\n+/* Return nonzero if FUNC is an OS_main function.  */\n \n static int\n avr_OS_main_function_p (tree func)\n@@ -477,7 +477,7 @@ avr_regs_to_save (HARD_REG_SET *set)\n   count = 0;\n \n   /* No need to save any registers if the function never returns or \n-     is have \"OS_task\" or \"OS_main\" attribute.  */\n+     has the \"OS_task\" or \"OS_main\" attribute.  */\n   if (TREE_THIS_VOLATILE (current_function_decl)\n       || cfun->machine->is_OS_task\n       || cfun->machine->is_OS_main)\n@@ -550,7 +550,7 @@ avr_return_addr_rtx (int count, rtx tem)\n {\n   rtx r;\n     \n-  /* Can only return this functions return address. Others not supported.  */\n+  /* Can only return this function's return address. Others not supported.  */\n   if (count)\n      return NULL;\n \n@@ -828,7 +828,7 @@ expand_prologue (void)\n                     fp=sp\n                     fp-=size\n                     sp=fp\n-                OR\n+                  OR\n                     sp-=size\n                     fp=sp\n               the optimum method depends on function type, stack and frame size.\n@@ -5084,7 +5084,7 @@ avr_rotate_bytes (rtx operands[])\n }\n \n /* Modifies the length assigned to instruction INSN\n- LEN is the initially computed length of the insn.  */\n+   LEN is the initially computed length of the insn.  */\n \n int\n adjust_insn_length (rtx insn, int len)\n@@ -7403,7 +7403,7 @@ output_reload_insisf_1 (rtx *op, rtx clobber_reg, int *len, bool clear_p)\n \n    LEN == NULL: Output instructions.\n    \n-   LEN != NULL: Output nothing.  Increment *LEN by number of words occupied\n+   LEN != NULL: Output nothing.  Set *LEN to number of words occupied\n                 by the insns printed.\n \n    Return \"\".  */"}]}