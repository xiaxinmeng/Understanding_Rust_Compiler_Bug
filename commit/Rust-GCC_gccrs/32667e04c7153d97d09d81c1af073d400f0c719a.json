{"sha": "32667e04c7153d97d09d81c1af073d400f0c719a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI2NjdlMDRjNzE1M2Q5N2QwOWQ4MWMxYWYwNzNkNDAwZjBjNzE5YQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-23T19:08:22Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-23T19:08:22Z"}, "message": "postreload: Fix up postreload combine [PR93402]\n\nThe following testcase is miscompiled, because the postreload pass changes:\n-(insn 14 13 23 2 (parallel [\n-            (set (reg:DI 1 dx [94])\n-                (plus:DI (reg:DI 1 dx [95])\n-                    (reg:DI 5 di [92])))\n-            (clobber (reg:CC 17 flags))\n-        ]) \"pr93402.c\":8:30 186 {*adddi_1}\n-     (expr_list:REG_EQUAL (plus:DI (reg:DI 5 di [92])\n-            (const_int 111111111111 [0x19debd01c7]))\n-        (nil)))\n-(insn 23 14 25 2 (set (reg:SI 0 ax)\n+(insn 23 13 25 2 (set (reg:SI 0 ax)\n         (const_int 0 [0])) \"pr93402.c\":10:1 67 {*movsi_internal}\n      (nil))\n (insn 25 23 26 2 (use (reg:SI 0 ax)) \"pr93402.c\":10:1 -1\n      (nil))\n-(insn 26 25 35 2 (use (reg:DI 1 dx)) \"pr93402.c\":10:1 -1\n+(insn 26 25 35 2 (use (plus:DI (reg:DI 1 dx [95])\n+            (reg:DI 5 di [92]))) \"pr93402.c\":10:1 -1\n      (nil))\nA USE insn is not a normal insn and verify_changes called from\napply_change_group is happy about any changes into it.\nThe following patch avoids this optimization if we were to change\nthe USE operand (this routine only changes a reg into (plus reg reg2)).\n\n2020-01-23  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR rtl-optimization/93402\n\t* postreload.c (reload_combine_recognize_pattern): Don't try to adjust\n\tUSE insns.\n\n\t* gcc.c-torture/execute/pr93402.c: New test.", "tree": {"sha": "4ced83b6cceb8099b652aaad1cc3763029314ccb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ced83b6cceb8099b652aaad1cc3763029314ccb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32667e04c7153d97d09d81c1af073d400f0c719a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32667e04c7153d97d09d81c1af073d400f0c719a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32667e04c7153d97d09d81c1af073d400f0c719a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32667e04c7153d97d09d81c1af073d400f0c719a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c91072247eb066ec9c6cd0b0f949c7dae691e46c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c91072247eb066ec9c6cd0b0f949c7dae691e46c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c91072247eb066ec9c6cd0b0f949c7dae691e46c"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "f2f77b7cdbcc999c08c2a6babaf38875c301e9fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32667e04c7153d97d09d81c1af073d400f0c719a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32667e04c7153d97d09d81c1af073d400f0c719a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=32667e04c7153d97d09d81c1af073d400f0c719a", "patch": "@@ -1,3 +1,9 @@\n+2020-01-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/93402\n+\t* postreload.c (reload_combine_recognize_pattern): Don't try to adjust\n+\tUSE insns.\n+\n 2020-01-23  Dragan Mladjenovic  <dmladjenovic@wavecomp.com>\n \n \t* config.in: Regenerated."}, {"sha": "7cd5c7fc55f7dee89e9e754a44f3b6914998aa0b", "filename": "gcc/postreload.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32667e04c7153d97d09d81c1af073d400f0c719a/gcc%2Fpostreload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32667e04c7153d97d09d81c1af073d400f0c719a/gcc%2Fpostreload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload.c?ref=32667e04c7153d97d09d81c1af073d400f0c719a", "patch": "@@ -1078,6 +1078,10 @@ reload_combine_recognize_pattern (rtx_insn *insn)\n       struct reg_use *use = reg_state[regno].reg_use + i;\n       if (GET_MODE (*use->usep) != mode)\n \treturn false;\n+      /* Don't try to adjust (use (REGX)).  */\n+      if (GET_CODE (PATTERN (use->insn)) == USE\n+\t  && &XEXP (PATTERN (use->insn), 0) == use->usep)\n+\treturn false;\n     }\n \n   /* Look for (set (REGX) (CONST_INT))"}, {"sha": "05b239ff4be4661194083298d340ed6d92b1875f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32667e04c7153d97d09d81c1af073d400f0c719a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32667e04c7153d97d09d81c1af073d400f0c719a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=32667e04c7153d97d09d81c1af073d400f0c719a", "patch": "@@ -1,3 +1,8 @@\n+2020-01-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/93402\n+\t* gcc.c-torture/execute/pr93402.c: New test.\n+\n 2020-01-23  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/92804"}, {"sha": "6487797d0aa9317a558e03899845b0aabc1fe4a7", "filename": "gcc/testsuite/gcc.c-torture/execute/pr93402.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32667e04c7153d97d09d81c1af073d400f0c719a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr93402.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32667e04c7153d97d09d81c1af073d400f0c719a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr93402.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr93402.c?ref=32667e04c7153d97d09d81c1af073d400f0c719a", "patch": "@@ -0,0 +1,21 @@\n+/* PR rtl-optimization/93402 */\n+\n+struct S { unsigned int a; unsigned long long b; };\n+\n+__attribute__((noipa)) struct S\n+foo (unsigned long long x)\n+{\n+  struct S ret;\n+  ret.a = 0;\n+  ret.b = x * 11111111111ULL + 111111111111ULL;\n+  return ret;\n+}\n+\n+int\n+main ()\n+{\n+  struct S a = foo (1);\n+  if (a.a != 0 || a.b != 122222222222ULL)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}