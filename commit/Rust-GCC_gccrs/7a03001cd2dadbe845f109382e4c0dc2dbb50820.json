{"sha": "7a03001cd2dadbe845f109382e4c0dc2dbb50820", "node_id": "C_kwDOANBUbNoAKDdhMDMwMDFjZDJkYWRiZTg0NWYxMDkzODJlNGMwZGMyZGJiNTA4MjA", "commit": {"author": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-06-30T11:35:10Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-13T10:01:15Z"}, "message": "[Ada] Fix if expression returning slice\n\nThe compiler incorrectly assumed the prefix for a slice returned in one\nbranch of an if expression has its bounds known at compile time and would\ncrash when this is not true.\n\ngcc/ada/\n\n\t* exp_ch4.adb (Expand_N_If_Expression): Test for compile time\n\tknown bounds when handling slices.", "tree": {"sha": "eeaccc1856354ecb8769dd3cfb9681d085329572", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eeaccc1856354ecb8769dd3cfb9681d085329572"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a03001cd2dadbe845f109382e4c0dc2dbb50820", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a03001cd2dadbe845f109382e4c0dc2dbb50820", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a03001cd2dadbe845f109382e4c0dc2dbb50820", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a03001cd2dadbe845f109382e4c0dc2dbb50820/comments", "author": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94425248c769d45b5932079321311392e4d8e952", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94425248c769d45b5932079321311392e4d8e952", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94425248c769d45b5932079321311392e4d8e952"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "18fb88f3f9f42eaaba63049e0b25f85f2f21acf3", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a03001cd2dadbe845f109382e4c0dc2dbb50820/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a03001cd2dadbe845f109382e4c0dc2dbb50820/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=7a03001cd2dadbe845f109382e4c0dc2dbb50820", "patch": "@@ -6174,7 +6174,13 @@ package body Exp_Ch4 is\n                Slice_Bnd : Node_Id) return Node_Id is\n \n             begin\n-               if Nkind (Elsex) = N_Slice then\n+               --  We need to use the special processing for slices only if\n+               --  they do not have compile-time known bounds; if they do, they\n+               --  can be treated like any other expressions.\n+\n+               if Nkind (Elsex) = N_Slice\n+                 and then not Compile_Time_Known_Bounds (Etype (Elsex))\n+               then\n                   if Compile_Time_Known_Value (Slice_Bnd)\n                     and then Expr_Value (Slice_Bnd) = Then_Bnd\n                   then\n@@ -6230,7 +6236,11 @@ package body Exp_Ch4 is\n          begin\n             Get_First_Index_Bounds (Etype (Thenx), Then_Lo, Then_Hi);\n \n-            if Nkind (Elsex) = N_Slice then\n+            --  See the rationale in Build_New_Bound\n+\n+            if Nkind (Elsex) = N_Slice\n+              and then not Compile_Time_Known_Bounds (Etype (Elsex))\n+            then\n                Slice_Lo := Low_Bound (Discrete_Range (Elsex));\n                Slice_Hi := High_Bound (Discrete_Range (Elsex));\n                Get_First_Index_Bounds\n@@ -6289,7 +6299,11 @@ package body Exp_Ch4 is\n \n             Set_Suppress_Assignment_Checks (Last (Then_List));\n \n-            if Nkind (Elsex) = N_Slice then\n+            --  See the rationale in Build_New_Bound\n+\n+            if Nkind (Elsex) = N_Slice\n+              and then not Compile_Time_Known_Bounds (Etype (Elsex))\n+            then\n                Else_List := New_List (\n                  Make_Assignment_Statement (Loc,\n                    Name       =>"}]}