{"sha": "e3bbcfb270b06145ce7bacff5cebea021cc3b4a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNiYmNmYjI3MGIwNjE0NWNlN2JhY2ZmNWNlYmVhMDIxY2MzYjRhNQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-06-01T18:12:00Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-06-01T18:12:00Z"}, "message": "pr60969.C (dg-do compile): Change ilp32 target to ia32.\n\n\t* g++.dg/pr60969.C (dg-do compile): Change ilp32 target to ia32.\n\nFrom-SVN: r211114", "tree": {"sha": "3274bd1c18e56db327bc147f38aca20271d32cb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3274bd1c18e56db327bc147f38aca20271d32cb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3bbcfb270b06145ce7bacff5cebea021cc3b4a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3bbcfb270b06145ce7bacff5cebea021cc3b4a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3bbcfb270b06145ce7bacff5cebea021cc3b4a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3bbcfb270b06145ce7bacff5cebea021cc3b4a5/comments", "author": null, "committer": null, "parents": [{"sha": "16545743c6c5e1766eac9f896040c50993e77dfd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16545743c6c5e1766eac9f896040c50993e77dfd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16545743c6c5e1766eac9f896040c50993e77dfd"}], "stats": {"total": 141, "additions": 71, "deletions": 70}, "files": [{"sha": "b4ba1c310d939ceca02e693a89749a5f1a0f565b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 70, "deletions": 69, "changes": 139, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3bbcfb270b06145ce7bacff5cebea021cc3b4a5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3bbcfb270b06145ce7bacff5cebea021cc3b4a5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e3bbcfb270b06145ce7bacff5cebea021cc3b4a5", "patch": "@@ -1,3 +1,7 @@\n+2014-06-01  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* g++.dg/pr60969.C (dg-do compile): Change ilp32 target to ia32.\n+\n 2014-06-01  Kai Tietz  <ktietz@redhat.com>\n \n \tPR target/61377\n@@ -36,15 +40,13 @@\n \t* g++.dg/asan/asan_test.C: Add -std=c++11 and\n \t-DSANITIZER_USE_DEJAGNU_GTEST=1 to dg-options, remove\n \t-DASAN_USE_DEJAGNU_GTEST=1.\n-\t* g++.dg/asan/asan_mem_test.cc: Updated from upstream\n-\tr209283.\n+\t* g++.dg/asan/asan_mem_test.cc: Updated from upstream r209283.\n \t* g++.dg/asan/asan_oob_test.cc: Likewise.\n \t* g++.dg/asan/sanitizer_test_utils.h: Likewise.\n \t* g++.dg/asan/asan_str_test.cc: Likewise.\n \t* g++.dg/asan/asan_test_utils.h: Likewise.\n \t* g++.dg/asan/sanitizer_test_config.h: Likewise.\n-\t* g++.dg/asan/asan_test.cc: Likewise.  Allow size 12\n-\tfor long double.\n+\t* g++.dg/asan/asan_test.cc: Likewise.  Allow size 12 for long double.\n \t* g++.dg/asan/sanitizer_pthread_wrappers.h: New file.\n \tImported from upstream r209283.\n \t* g++.dg/asan/asan_test_config.h: Likewise.\n@@ -61,42 +63,42 @@\n \n 2014-04-30  Alan Lawrence  <alan.lawrence@arm.com>\n \n-\tgcc.target/arm/simd/vrev16p8_1.c: New file.\n-\tgcc.target/arm/simd/vrev16qp8_1.c: New file.\n-\tgcc.target/arm/simd/vrev16qs8_1.c: New file.\n-\tgcc.target/arm/simd/vrev16qu8_1.c: New file.\n-\tgcc.target/arm/simd/vrev16s8_1.c: New file.\n-\tgcc.target/arm/simd/vrev16u8_1.c: New file.\n-\tgcc.target/arm/simd/vrev32p16_1.c: New file.\n-\tgcc.target/arm/simd/vrev32p8_1.c: New file.\n-\tgcc.target/arm/simd/vrev32qp16_1.c: New file.\n-\tgcc.target/arm/simd/vrev32qp8_1.c: New file.\n-\tgcc.target/arm/simd/vrev32qs16_1.c: New file.\n-\tgcc.target/arm/simd/vrev32qs8_1.c: New file.\n-\tgcc.target/arm/simd/vrev32qu16_1.c: New file.\n-\tgcc.target/arm/simd/vrev32qu8_1.c: New file.\n-\tgcc.target/arm/simd/vrev32s16_1.c: New file.\n-\tgcc.target/arm/simd/vrev32s8_1.c: New file.\n-\tgcc.target/arm/simd/vrev32u16_1.c: New file.\n-\tgcc.target/arm/simd/vrev32u8_1.c: New file.\n-\tgcc.target/arm/simd/vrev64f32_1.c: New file.\n-\tgcc.target/arm/simd/vrev64p16_1.c: New file.\n-\tgcc.target/arm/simd/vrev64p8_1.c: New file.\n-\tgcc.target/arm/simd/vrev64qf32_1.c: New file.\n-\tgcc.target/arm/simd/vrev64qp16_1.c: New file.\n-\tgcc.target/arm/simd/vrev64qp8_1.c: New file.\n-\tgcc.target/arm/simd/vrev64qs16_1.c: New file.\n-\tgcc.target/arm/simd/vrev64qs32_1.c: New file.\n-\tgcc.target/arm/simd/vrev64qs8_1.c: New file.\n-\tgcc.target/arm/simd/vrev64qu16_1.c: New file.\n-\tgcc.target/arm/simd/vrev64qu32_1.c: New file.\n-\tgcc.target/arm/simd/vrev64qu8_1.c: New file.\n-\tgcc.target/arm/simd/vrev64s16_1.c: New file.\n-\tgcc.target/arm/simd/vrev64s32_1.c: New file.\n-\tgcc.target/arm/simd/vrev64s8_1.c: New file.\n-\tgcc.target/arm/simd/vrev64u16_1.c: New file.\n-\tgcc.target/arm/simd/vrev64u32_1.c: New file.\n-\tgcc.target/arm/simd/vrev64u8_1.c: New file.\n+\t* gcc.target/arm/simd/vrev16p8_1.c: New file.\n+\t* gcc.target/arm/simd/vrev16qp8_1.c: New file.\n+\t* gcc.target/arm/simd/vrev16qs8_1.c: New file.\n+\t* gcc.target/arm/simd/vrev16qu8_1.c: New file.\n+\t* gcc.target/arm/simd/vrev16s8_1.c: New file.\n+\t* gcc.target/arm/simd/vrev16u8_1.c: New file.\n+\t* gcc.target/arm/simd/vrev32p16_1.c: New file.\n+\t* gcc.target/arm/simd/vrev32p8_1.c: New file.\n+\t* gcc.target/arm/simd/vrev32qp16_1.c: New file.\n+\t* gcc.target/arm/simd/vrev32qp8_1.c: New file.\n+\t* gcc.target/arm/simd/vrev32qs16_1.c: New file.\n+\t* gcc.target/arm/simd/vrev32qs8_1.c: New file.\n+\t* gcc.target/arm/simd/vrev32qu16_1.c: New file.\n+\t* gcc.target/arm/simd/vrev32qu8_1.c: New file.\n+\t* gcc.target/arm/simd/vrev32s16_1.c: New file.\n+\t* gcc.target/arm/simd/vrev32s8_1.c: New file.\n+\t* gcc.target/arm/simd/vrev32u16_1.c: New file.\n+\t* gcc.target/arm/simd/vrev32u8_1.c: New file.\n+\t* gcc.target/arm/simd/vrev64f32_1.c: New file.\n+\t* gcc.target/arm/simd/vrev64p16_1.c: New file.\n+\t* gcc.target/arm/simd/vrev64p8_1.c: New file.\n+\t* gcc.target/arm/simd/vrev64qf32_1.c: New file.\n+\t* gcc.target/arm/simd/vrev64qp16_1.c: New file.\n+\t* gcc.target/arm/simd/vrev64qp8_1.c: New file.\n+\t* gcc.target/arm/simd/vrev64qs16_1.c: New file.\n+\t* gcc.target/arm/simd/vrev64qs32_1.c: New file.\n+\t* gcc.target/arm/simd/vrev64qs8_1.c: New file.\n+\t* gcc.target/arm/simd/vrev64qu16_1.c: New file.\n+\t* gcc.target/arm/simd/vrev64qu32_1.c: New file.\n+\t* gcc.target/arm/simd/vrev64qu8_1.c: New file.\n+\t* gcc.target/arm/simd/vrev64s16_1.c: New file.\n+\t* gcc.target/arm/simd/vrev64s32_1.c: New file.\n+\t* gcc.target/arm/simd/vrev64s8_1.c: New file.\n+\t* gcc.target/arm/simd/vrev64u16_1.c: New file.\n+\t* gcc.target/arm/simd/vrev64u32_1.c: New file.\n+\t* gcc.target/arm/simd/vrev64u8_1.c: New file.\n \n 2014-05-29  Vladimir Makarov  <vmakarov@redhat.com>\n \n@@ -105,33 +107,33 @@\n \n 2014-05-29  Alan Lawrence  <alan.lawrence@arm.com>\n \n-\tgcc.target/arm/simd/vextQf32_1.c: New file.\n-\tgcc.target/arm/simd/vextQp16_1.c: New file.\n-\tgcc.target/arm/simd/vextQp8_1.c: New file.\n-\tgcc.target/arm/simd/vextQs16_1.c: New file.\n-\tgcc.target/arm/simd/vextQs32_1.c: New file.\n-\tgcc.target/arm/simd/vextQs64_1.c: New file.\n-\tgcc.target/arm/simd/vextQs8_1.c: New file.\n-\tgcc.target/arm/simd/vextQu16_1.c: New file.\n-\tgcc.target/arm/simd/vextQu32_1.c: New file.\n-\tgcc.target/arm/simd/vextQu64_1.c: New file.\n-\tgcc.target/arm/simd/vextQu8_1.c: New file.\n-\tgcc.target/arm/simd/vextQp64_1.c: New file.\n-\tgcc.target/arm/simd/vextf32_1.c: New file.\n-\tgcc.target/arm/simd/vextp16_1.c: New file.\n-\tgcc.target/arm/simd/vextp8_1.c: New file.\n-\tgcc.target/arm/simd/vexts16_1.c: New file.\n-\tgcc.target/arm/simd/vexts32_1.c: New file.\n-\tgcc.target/arm/simd/vexts64_1.c: New file.\n-\tgcc.target/arm/simd/vexts8_1.c: New file.\n-\tgcc.target/arm/simd/vextu16_1.c: New file.\n-\tgcc.target/arm/simd/vextu32_1.c: New file.\n-\tgcc.target/arm/simd/vextu64_1.c: New file.\n-\tgcc.target/arm/simd/vextu8_1.c: New file.\n-\tgcc.target/arm/simd/vextp64_1.c: New file.\n+\t* gcc.target/arm/simd/vextQf32_1.c: New file.\n+\t* gcc.target/arm/simd/vextQp16_1.c: New file.\n+\t* gcc.target/arm/simd/vextQp8_1.c: New file.\n+\t* gcc.target/arm/simd/vextQs16_1.c: New file.\n+\t* gcc.target/arm/simd/vextQs32_1.c: New file.\n+\t* gcc.target/arm/simd/vextQs64_1.c: New file.\n+\t* gcc.target/arm/simd/vextQs8_1.c: New file.\n+\t* gcc.target/arm/simd/vextQu16_1.c: New file.\n+\t* gcc.target/arm/simd/vextQu32_1.c: New file.\n+\t* gcc.target/arm/simd/vextQu64_1.c: New file.\n+\t* gcc.target/arm/simd/vextQu8_1.c: New file.\n+\t* gcc.target/arm/simd/vextQp64_1.c: New file.\n+\t* gcc.target/arm/simd/vextf32_1.c: New file.\n+\t* gcc.target/arm/simd/vextp16_1.c: New file.\n+\t* gcc.target/arm/simd/vextp8_1.c: New file.\n+\t* gcc.target/arm/simd/vexts16_1.c: New file.\n+\t* gcc.target/arm/simd/vexts32_1.c: New file.\n+\t* gcc.target/arm/simd/vexts64_1.c: New file.\n+\t* gcc.target/arm/simd/vexts8_1.c: New file.\n+\t* gcc.target/arm/simd/vextu16_1.c: New file.\n+\t* gcc.target/arm/simd/vextu32_1.c: New file.\n+\t* gcc.target/arm/simd/vextu64_1.c: New file.\n+\t* gcc.target/arm/simd/vextu8_1.c: New file.\n+\t* gcc.target/arm/simd/vextp64_1.c: New file.\n \n 2014-05-29  Radovan Obradovic  <robradovic@mips.com>\n-            Tom de Vries  <tom@codesourcery.com>\n+\t    Tom de Vries  <tom@codesourcery.com>\n \n \t* gcc.target/mips/mips.exp: Add use-caller-save to -ffoo/-fno-foo\n \toptions.\n@@ -260,12 +262,11 @@\n 2014-05-24  Jerry DeLisle  <jvdelisle@gcc.gnu>\n \n \tPR libfortran/61173\n-\tgfortran.dg/arrayio_14.f90: New test.\n+\t* gfortran.dg/arrayio_14.f90: New test.\n \n 2014-05-24  Andreas Schwab  <schwab@suse.de>\n \n-\t* gcc.c-torture/execute/bswap-2.c (main): Handle more bitfield\n-\tlayouts.\n+\t* gcc.c-torture/execute/bswap-2.c (main): Handle more bitfield layouts.\n \n 2014-05-24  Dominique d'Humieres <dominiq@lps.ens.fr>\n \n@@ -397,7 +398,7 @@\n 2014-05-20  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR tree-optimization/60899\n-\tg++.dg/ipa/devirt-11.C: Update template.\n+\t* g++.dg/ipa/devirt-11.C: Update template.\n \n 2014-05-20  Edward Smith-Rowland  <3dw4rd@verizon.net>\n "}, {"sha": "4012e2ce72fbfccf696c44e5a4a0bc36921238f6", "filename": "gcc/testsuite/g++.dg/pr60969.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3bbcfb270b06145ce7bacff5cebea021cc3b4a5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr60969.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3bbcfb270b06145ce7bacff5cebea021cc3b4a5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr60969.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr60969.C?ref=e3bbcfb270b06145ce7bacff5cebea021cc3b4a5", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-O2 -ftree-vectorize -march=pentium4 -mfpmath=387\" } */\n \n struct A"}]}