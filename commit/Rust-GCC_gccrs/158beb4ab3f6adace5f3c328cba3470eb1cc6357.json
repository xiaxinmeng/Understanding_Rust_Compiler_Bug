{"sha": "158beb4ab3f6adace5f3c328cba3470eb1cc6357", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU4YmViNGFiM2Y2YWRhY2U1ZjNjMzI4Y2JhMzQ3MGViMWNjNjM1Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-06-06T18:35:03Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-06-06T18:35:03Z"}, "message": "re PR tree-optimization/71259 (GCC trunk emits wrong code)\n\n\tPR tree-optimization/71259\n\t* tree-vect-slp.c (vect_get_constant_vectors): For\n\tVECTOR_BOOLEAN_TYPE_P, return all ones constant instead of\n\tone for constant op, and use COND_EXPR for non-constant.\n\n\t* gcc.dg/vect/pr71259.c: New test.\n\nFrom-SVN: r237147", "tree": {"sha": "1f0552a56d612f2fbe874cd5e779d99ca7f51555", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f0552a56d612f2fbe874cd5e779d99ca7f51555"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/158beb4ab3f6adace5f3c328cba3470eb1cc6357", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/158beb4ab3f6adace5f3c328cba3470eb1cc6357", "html_url": "https://github.com/Rust-GCC/gccrs/commit/158beb4ab3f6adace5f3c328cba3470eb1cc6357", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/158beb4ab3f6adace5f3c328cba3470eb1cc6357/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8af83210748a6ef2d0a7f92c103d7f2baddbcabc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8af83210748a6ef2d0a7f92c103d7f2baddbcabc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8af83210748a6ef2d0a7f92c103d7f2baddbcabc"}], "stats": {"total": 50, "additions": 48, "deletions": 2}, "files": [{"sha": "ccabd6f6f42ef9c6335c7be7d2721f297fbab0c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158beb4ab3f6adace5f3c328cba3470eb1cc6357/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158beb4ab3f6adace5f3c328cba3470eb1cc6357/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=158beb4ab3f6adace5f3c328cba3470eb1cc6357", "patch": "@@ -1,3 +1,10 @@\n+2016-06-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/71259\n+\t* tree-vect-slp.c (vect_get_constant_vectors): For\n+\tVECTOR_BOOLEAN_TYPE_P, return all ones constant instead of\n+\tone for constant op, and use COND_EXPR for non-constant.\n+\n 2016-06-06  David Malcolm  <dmalcolm@redhat.com>\n \n \t* Makefile.in (OBJS): Add function-tests.o,"}, {"sha": "fa5d7009d16c2ebfe32334fa99d7259647fbd0f3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158beb4ab3f6adace5f3c328cba3470eb1cc6357/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158beb4ab3f6adace5f3c328cba3470eb1cc6357/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=158beb4ab3f6adace5f3c328cba3470eb1cc6357", "patch": "@@ -1,3 +1,8 @@\n+2016-06-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/71259\n+\t* gcc.dg/vect/pr71259.c: New test.\n+\n 2016-06-06  David Malcolm  <dmalcolm@redhat.com>\n \n \t* gcc.dg/plugin/levenshtein-test-1.c: Delete."}, {"sha": "eefa243322507280e86bf28e1809b559f85a88bd", "filename": "gcc/testsuite/gcc.dg/vect/pr71259.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158beb4ab3f6adace5f3c328cba3470eb1cc6357/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr71259.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158beb4ab3f6adace5f3c328cba3470eb1cc6357/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr71259.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr71259.c?ref=158beb4ab3f6adace5f3c328cba3470eb1cc6357", "patch": "@@ -0,0 +1,28 @@\n+/* PR tree-optimization/71259 */\n+/* { dg-do run } */\n+/* { dg-options \"-O3\" } */\n+/* { dg-additional-options \"-mavx\" { target avx_runtime } } */\n+\n+#include \"tree-vect.h\"\n+\n+long a, b[1][44][2];\n+long long c[44][17][2];\n+\n+int\n+main ()\n+{\n+  int i, j, k;\n+  check_vect ();\n+  asm volatile (\"\" : : : \"memory\");\n+  for (i = 0; i < 44; i++)\n+    for (j = 0; j < 17; j++)\n+      for (k = 0; k < 2; k++)\n+\tc[i][j][k] = (30995740 >= *(k + *(j + *b)) != (a != 8)) - 5105075050047261684;\n+  asm volatile (\"\" : : : \"memory\");\n+  for (i = 0; i < 44; i++) \n+    for (j = 0; j < 17; j++)\n+      for (k = 0; k < 2; k++)\n+\tif (c[i][j][k] != -5105075050047261684)\n+\t  __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "91120948114527af98620c13825ec00108fafd12", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158beb4ab3f6adace5f3c328cba3470eb1cc6357/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158beb4ab3f6adace5f3c328cba3470eb1cc6357/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=158beb4ab3f6adace5f3c328cba3470eb1cc6357", "patch": "@@ -3056,7 +3056,7 @@ vect_get_constant_vectors (tree op, slp_tree slp_node,\n \t\t      if (integer_zerop (op))\n \t\t\top = build_int_cst (TREE_TYPE (vector_type), 0);\n \t\t      else if (integer_onep (op))\n-\t\t\top = build_int_cst (TREE_TYPE (vector_type), 1);\n+\t\t\top = build_all_ones_cst (TREE_TYPE (vector_type));\n \t\t      else\n \t\t\tgcc_unreachable ();\n \t\t    }\n@@ -3071,8 +3071,14 @@ vect_get_constant_vectors (tree op, slp_tree slp_node,\n \t\t  gimple *init_stmt;\n \t\t  if (VECTOR_BOOLEAN_TYPE_P (vector_type))\n \t\t    {\n+\t\t      tree true_val\n+\t\t\t= build_all_ones_cst (TREE_TYPE (vector_type));\n+\t\t      tree false_val\n+\t\t\t= build_zero_cst (TREE_TYPE (vector_type));\n \t\t      gcc_assert (INTEGRAL_TYPE_P (TREE_TYPE (op)));\n-\t\t      init_stmt = gimple_build_assign (new_temp, NOP_EXPR, op);\n+\t\t      init_stmt = gimple_build_assign (new_temp, COND_EXPR,\n+\t\t\t\t\t\t       op, true_val,\n+\t\t\t\t\t\t       false_val);\n \t\t    }\n \t\t  else\n \t\t    {"}]}