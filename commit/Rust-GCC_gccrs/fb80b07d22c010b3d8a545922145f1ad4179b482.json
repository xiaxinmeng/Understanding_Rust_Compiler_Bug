{"sha": "fb80b07d22c010b3d8a545922145f1ad4179b482", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI4MGIwN2QyMmMwMTBiM2Q4YTU0NTkyMjE0NWYxYWQ0MTc5YjQ4Mg==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.ch", "date": "2003-03-22T10:45:04Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2003-03-22T10:45:04Z"}, "message": "jni.exp: Add compilation/link fix dor darwin dylibs.\n\n2003-03-22  Andreas Tobler <a.tobler@schweiz.ch>\n\n        * libjava.jni/jni.exp: Add compilation/link fix dor darwin dylibs.\n\nFrom-SVN: r64704", "tree": {"sha": "69ae42fbcd92f4ef32b7e84724b373bfc06349e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69ae42fbcd92f4ef32b7e84724b373bfc06349e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb80b07d22c010b3d8a545922145f1ad4179b482", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb80b07d22c010b3d8a545922145f1ad4179b482", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb80b07d22c010b3d8a545922145f1ad4179b482", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb80b07d22c010b3d8a545922145f1ad4179b482/comments", "author": null, "committer": null, "parents": [{"sha": "70e1b8fc746e1dfa471f3a39ef27166a5063c6ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70e1b8fc746e1dfa471f3a39ef27166a5063c6ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70e1b8fc746e1dfa471f3a39ef27166a5063c6ae"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "2ad8cf79c23eee48c5559af9a847f8cdd53980a8", "filename": "libjava/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb80b07d22c010b3d8a545922145f1ad4179b482/libjava%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb80b07d22c010b3d8a545922145f1ad4179b482/libjava%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FChangeLog?ref=fb80b07d22c010b3d8a545922145f1ad4179b482", "patch": "@@ -1,3 +1,7 @@\n+2003-03-22  Andreas Tobler <a.tobler@schweiz.ch>\n+\n+\t* libjava.jni/jni.exp: Add compilation/link fix dor darwin dylibs.\n+\n 2003-03-22  Tom Tromey  <tromey@redhat.com>\n \n \t* lib/libjava.exp (gcj_invoke): Moved..."}, {"sha": "7dad519d415380d43116439bef7159b4b84e28af", "filename": "libjava/testsuite/libjava.jni/jni.exp", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb80b07d22c010b3d8a545922145f1ad4179b482/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb80b07d22c010b3d8a545922145f1ad4179b482/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp?ref=fb80b07d22c010b3d8a545922145f1ad4179b482", "patch": "@@ -5,11 +5,26 @@\n # success.\n proc gcj_jni_compile_c_to_so {file {options {}}} {\n   global srcdir\n-\n+  global host_triplet\n+  verbose \"options: $options\"\n+  set options_cxx $options\n+  set options \"\"\n+\n+# apple uses a different extension for shared/dynamic libraries\n+# so we check against powerpc-apple-darwin and set them to \n+# dylib, else we assume it's .so\n+\n+  if { [ regexp {powerpc-apple-darwin} $host_triplet] } {\n+      set so_extension \"dylib\"\n+      set so_flag \"-dynamiclib\"\n+  } else {\n+      set so_extension \"so\"\n+      set so_flag \"-shared\"\n+  }\n   set name [file rootname [file tail $file]]\n-  set soname lib${name}.so\n+  set soname lib${name}.${so_extension}\n \n-  lappend options \"additional_flags=-shared -fPIC\"\n+  lappend options \"additional_flags=${so_flag} -fPIC\"\n   # Find the generated header.\n   lappend options \"additional_flags=-I. -I..\"\n   # Find jni.h.\n@@ -46,6 +61,17 @@ proc gcj_jni_build_header {file} {\n # Do all the work for a single JNI test.  Return 0 on failure.\n proc gcj_jni_test_one {file} {\n   global runtests\n+  global host_triplet\n+\n+# apple uses a different extension for shared/dynamic libraries\n+# so we check against powerpc-apple-darwin and set them to \n+# dylib, else we assume it's .so\n+\n+  if { [ regexp {powerpc-apple-darwin} $host_triplet] } {\n+      set so_extension \"dylib\"\n+  } else {\n+      set so_extension \"so\"\n+  }\n \n   # The base name.  We use it for several purposes.\n   set main [file rootname [file tail $file]]\n@@ -112,7 +138,7 @@ proc gcj_jni_test_one {file} {\n   }\n \n   # When we succeed we remove all our clutter.\n-  eval gcj_cleanup [glob -nocomplain -- ${main}.*] [list $main lib${main}.so]\n+  eval gcj_cleanup [glob -nocomplain -- ${main}.*] [list $main lib${main}.${so_extension}]\n \n   return 1\n }"}]}