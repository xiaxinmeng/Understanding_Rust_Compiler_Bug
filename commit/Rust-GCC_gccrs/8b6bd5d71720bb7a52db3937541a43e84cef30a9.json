{"sha": "8b6bd5d71720bb7a52db3937541a43e84cef30a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI2YmQ1ZDcxNzIwYmI3YTUyZGIzOTM3NTQxYTQzZTg0Y2VmMzBhOQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2004-01-02T18:06:16Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2004-01-02T18:06:16Z"}, "message": "cgraphunit.c (cgraph_optimize_function): Call optimize_inline_calls when there is nothing to inline but warnings are...\n\n\t* cgraphunit.c (cgraph_optimize_function):  Call optimize_inline_calls\n\twhen there is nothing to inline but warnings are requested.\n\t(cgraph_decide_inlining):  Fix memory leak.\n\nFrom-SVN: r75333", "tree": {"sha": "0608c40aa387e85b1471f45d9d4c14ebd1077b51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0608c40aa387e85b1471f45d9d4c14ebd1077b51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b6bd5d71720bb7a52db3937541a43e84cef30a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b6bd5d71720bb7a52db3937541a43e84cef30a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b6bd5d71720bb7a52db3937541a43e84cef30a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b6bd5d71720bb7a52db3937541a43e84cef30a9/comments", "author": null, "committer": null, "parents": [{"sha": "fa0e53a48a09a5b0095777763001266518b7c3a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa0e53a48a09a5b0095777763001266518b7c3a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa0e53a48a09a5b0095777763001266518b7c3a4"}], "stats": {"total": 28, "additions": 17, "deletions": 11}, "files": [{"sha": "35dfeb86e231f215d3239b6496594e34b81ba4cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b6bd5d71720bb7a52db3937541a43e84cef30a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b6bd5d71720bb7a52db3937541a43e84cef30a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8b6bd5d71720bb7a52db3937541a43e84cef30a9", "patch": "@@ -1,3 +1,9 @@\n+2004-01-02  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cgraphunit.c (cgraph_optimize_function):  Call optimize_inline_calls\n+\twhen there is nothing to inline but warnings are requested.\n+\t(cgraph_decide_inlining):  Fix memory leak.\n+\n 2004-01-02  Jan Hubicka  <jh@suse.cz>\n \n \t* expr.c (store_constructor):  Fix pasto in previous patch."}, {"sha": "932c418a073c5cf1830be26b45b5fe84c1ca618f", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b6bd5d71720bb7a52db3937541a43e84cef30a9/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b6bd5d71720bb7a52db3937541a43e84cef30a9/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=8b6bd5d71720bb7a52db3937541a43e84cef30a9", "patch": "@@ -476,7 +476,7 @@ cgraph_optimize_function (struct cgraph_node *node)\n       struct cgraph_edge *e;\n \n       for (e = node->callees; e; e = e->next_callee)\n-\tif (e->inline_call)\n+\tif (e->inline_call || warn_inline)\n \t  break;\n       if (e)\n         optimize_inline_calls (decl);\n@@ -1213,17 +1213,17 @@ cgraph_decide_inlining (void)\n \t\t}\n \t    }\n \t}\n-\n-      if (cgraph_dump_file)\n-\tfprintf (cgraph_dump_file,\n-\t\t \"\\nInlined %i calls, eliminated %i functions, \"\n-\t\t \"%i insns turned to %i insns.\\n\\n\",\n-\t\t ncalls_inlined, nfunctions_inlined, initial_insns,\n-\t\t overall_insns);\n-      free (order);\n-      free (inlined);\n-      free (inlined_callees);\n     }\n+\n+  if (cgraph_dump_file)\n+    fprintf (cgraph_dump_file,\n+\t     \"\\nInlined %i calls, eliminated %i functions, \"\n+\t     \"%i insns turned to %i insns.\\n\\n\",\n+\t     ncalls_inlined, nfunctions_inlined, initial_insns,\n+\t     overall_insns);\n+  free (order);\n+  free (inlined);\n+  free (inlined_callees);\n }\n \n /* Decide on the inlining.  We do so in the topological order to avoid"}]}