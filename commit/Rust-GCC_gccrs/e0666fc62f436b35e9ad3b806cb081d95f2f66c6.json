{"sha": "e0666fc62f436b35e9ad3b806cb081d95f2f66c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA2NjZmYzYyZjQzNmIzNWU5YWQzYjgwNmNiMDgxZDk1ZjJmNjZjNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T13:58:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T13:58:36Z"}, "message": "[multiple changes]\n\n2017-04-25  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_util.adb, exp_ch4.adb: Minor reformatting.\n\n2017-04-25  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* checks.adb: Code clean up in various routines.\n\t(Generate_Range_Check): Do not generate a range check when the\n\texpander is not active or when index/range checks are suppressed\n\ton the target type.\n\t(Insert_List_After_And_Analyze, Insert_List_Before_And_Analyze):\n\tRemove variants that include a Supress parameter. These routines\n\tare never used, and were introduced before the current scope-based\n\tcheck suppression method.\n\n2017-04-25  Vasiliy Fofanov  <fofanov@adacore.com>\n\n\t* prj-part.adb, cstreams.c, osint.adb, osint.ads: Remove VMS specific\n\tcode and some subprogram calls that are now noop.\n\nFrom-SVN: r247242", "tree": {"sha": "3907423b9fe4823d28c7700b2b8e7544d5ceda0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3907423b9fe4823d28c7700b2b8e7544d5ceda0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0666fc62f436b35e9ad3b806cb081d95f2f66c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0666fc62f436b35e9ad3b806cb081d95f2f66c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0666fc62f436b35e9ad3b806cb081d95f2f66c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0666fc62f436b35e9ad3b806cb081d95f2f66c6/comments", "author": null, "committer": null, "parents": [{"sha": "5ca28c1d5f5f8c435d534ed6142e8215b0babb65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ca28c1d5f5f8c435d534ed6142e8215b0babb65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ca28c1d5f5f8c435d534ed6142e8215b0babb65"}], "stats": {"total": 334, "additions": 74, "deletions": 260}, "files": [{"sha": "c93ddcbe9b12a5211554d48d50b82aa49486e0bc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0666fc62f436b35e9ad3b806cb081d95f2f66c6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0666fc62f436b35e9ad3b806cb081d95f2f66c6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e0666fc62f436b35e9ad3b806cb081d95f2f66c6", "patch": "@@ -1,3 +1,23 @@\n+2017-04-25  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_util.adb, exp_ch4.adb: Minor reformatting.\n+\n+2017-04-25  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* checks.adb: Code clean up in various routines.\n+\t(Generate_Range_Check): Do not generate a range check when the\n+\texpander is not active or when index/range checks are suppressed\n+\ton the target type.\n+\t(Insert_List_After_And_Analyze, Insert_List_Before_And_Analyze):\n+\tRemove variants that include a Supress parameter. These routines\n+\tare never used, and were introduced before the current scope-based\n+\tcheck suppression method.\n+\n+2017-04-25  Vasiliy Fofanov  <fofanov@adacore.com>\n+\n+\t* prj-part.adb, cstreams.c, osint.adb, osint.ads: Remove VMS specific\n+\tcode and some subprogram calls that are now noop.\n+\n 2017-04-25  Arnaud Charlet  <charlet@adacore.com>\n \n \t* exp_ch4.adb (Expand_N_Case_Expression): Take"}, {"sha": "6f0dace3f9c15884100e228dc10ab479d6fbb2b8", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 36, "deletions": 20, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0666fc62f436b35e9ad3b806cb081d95f2f66c6/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0666fc62f436b35e9ad3b806cb081d95f2f66c6/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=e0666fc62f436b35e9ad3b806cb081d95f2f66c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -489,17 +489,18 @@ package body Checks is\n       Static_Sloc  : Source_Ptr;\n       Flag_Node    : Node_Id)\n    is\n+      Checks_On : constant Boolean :=\n+                    not Index_Checks_Suppressed (Suppress_Typ)\n+                      or else\n+                    not Range_Checks_Suppressed (Suppress_Typ);\n+\n       Internal_Flag_Node   : constant Node_Id    := Flag_Node;\n       Internal_Static_Sloc : constant Source_Ptr := Static_Sloc;\n \n-      Checks_On : constant Boolean :=\n-        (not Index_Checks_Suppressed (Suppress_Typ))\n-         or else (not Range_Checks_Suppressed (Suppress_Typ));\n-\n    begin\n-      --  For now we just return if Checks_On is false, however this should\n-      --  be enhanced to check for an always True value in the condition\n-      --  and to generate a compilation warning???\n+      --  For now we just return if Checks_On is false, however this should be\n+      --  enhanced to check for an always True value in the condition and to\n+      --  generate a compilation warning???\n \n       if not Checks_On then\n          return;\n@@ -3116,14 +3117,16 @@ package body Checks is\n       Source_Typ : Entity_Id;\n       Do_Static  : Boolean)\n    is\n+      Checks_On : constant Boolean :=\n+                    not Index_Checks_Suppressed (Target_Typ)\n+                      or else\n+                    not Length_Checks_Suppressed (Target_Typ);\n+\n+      Loc : constant Source_Ptr := Sloc (Ck_Node);\n+\n       Cond     : Node_Id;\n-      R_Result : Check_Result;\n       R_Cno    : Node_Id;\n-\n-      Loc         : constant Source_Ptr := Sloc (Ck_Node);\n-      Checks_On   : constant Boolean :=\n-        (not Index_Checks_Suppressed (Target_Typ))\n-          or else (not Length_Checks_Suppressed (Target_Typ));\n+      R_Result : Check_Result;\n \n    begin\n       --  Only apply checks when generating code\n@@ -3228,12 +3231,13 @@ package body Checks is\n       Source_Typ : Entity_Id;\n       Do_Static  : Boolean)\n    is\n-      Loc       : constant Source_Ptr := Sloc (Ck_Node);\n       Checks_On : constant Boolean :=\n                     not Index_Checks_Suppressed (Target_Typ)\n                       or else\n                     not Range_Checks_Suppressed (Target_Typ);\n \n+      Loc : constant Source_Ptr := Sloc (Ck_Node);\n+\n       Cond     : Node_Id;\n       R_Cno    : Node_Id;\n       R_Result : Check_Result;\n@@ -6693,9 +6697,20 @@ package body Checks is\n          Set_Etype (N, Target_Base_Type);\n       end Convert_And_Check_Range;\n \n+      --  Local variables\n+\n+      Checks_On : constant Boolean :=\n+                    not Index_Checks_Suppressed (Target_Type)\n+                      or else\n+                    not Range_Checks_Suppressed (Target_Type);\n+\n    --  Start of processing for Generate_Range_Check\n \n    begin\n+      if not Expander_Active or not Checks_On then\n+         return;\n+      end if;\n+\n       --  First special case, if the source type is already within the range\n       --  of the target type, then no check is needed (probably we should have\n       --  stopped Do_Range_Check from being set in the first place, but better\n@@ -7155,14 +7170,15 @@ package body Checks is\n       Flag_Node    : Node_Id    := Empty;\n       Do_Before    : Boolean    := False)\n    is\n+      Checks_On  : constant Boolean :=\n+                     not Index_Checks_Suppressed (Suppress_Typ)\n+                       or else\n+                     not Range_Checks_Suppressed (Suppress_Typ);\n+\n+      Check_Node           : Node_Id;\n       Internal_Flag_Node   : Node_Id    := Flag_Node;\n       Internal_Static_Sloc : Source_Ptr := Static_Sloc;\n \n-      Check_Node : Node_Id;\n-      Checks_On  : constant Boolean :=\n-        (not Index_Checks_Suppressed (Suppress_Typ))\n-         or else (not Range_Checks_Suppressed (Suppress_Typ));\n-\n    begin\n       --  For now we just return if Checks_On is false, however this should be\n       --  enhanced to check for an always True value in the condition and to"}, {"sha": "e4e614744b38898a44b75a3174bf74ddbc3087d8", "filename": "gcc/ada/cstreams.c", "status": "modified", "additions": 1, "deletions": 22, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0666fc62f436b35e9ad3b806cb081d95f2f66c6/gcc%2Fada%2Fcstreams.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0666fc62f436b35e9ad3b806cb081d95f2f66c6/gcc%2Fada%2Fcstreams.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstreams.c?ref=e0666fc62f436b35e9ad3b806cb081d95f2f66c6", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *              Auxiliary C functions for Interfaces.C.Streams              *\n  *                                                                          *\n- *          Copyright (C) 1992-2015, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2017, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -67,10 +67,6 @@\n extern \"C\" {\n #endif\n \n-#ifdef VMS\n-#include <unixlib.h>\n-#endif\n-\n #ifdef __linux__\n /* Don't use macros on GNU/Linux since they cause incompatible changes between\n    glibc 2.0 and 2.1 */\n@@ -202,23 +198,6 @@ __gnat_full_name (char *nam, char *buffer)\n      getcwd approach instead. */\n   realpath (nam, buffer);\n \n-#elif defined (VMS)\n-  strncpy (buffer, __gnat_to_canonical_file_spec (nam), __gnat_max_path_len);\n-\n-  if (buffer[0] == '/' || strchr (buffer, '!'))  /* '!' means decnet node */\n-    strncpy (buffer, __gnat_to_host_file_spec (buffer), __gnat_max_path_len);\n-  else\n-    {\n-      char *nambuffer = alloca (__gnat_max_path_len);\n-\n-      strncpy (nambuffer, buffer, __gnat_max_path_len);\n-      strncpy\n-\t(buffer, getcwd (buffer, __gnat_max_path_len, 0), __gnat_max_path_len);\n-      strncat (buffer, \"/\", __gnat_max_path_len);\n-      strncat (buffer, nambuffer, __gnat_max_path_len);\n-      strncpy (buffer, __gnat_to_host_file_spec (buffer), __gnat_max_path_len);\n-    }\n-\n #elif defined (__vxworks)\n \n   /* On VxWorks systems, an absolute path can be represented (depending on"}, {"sha": "f54779956fafcfdd61f98869c49337fa30955133", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0666fc62f436b35e9ad3b806cb081d95f2f66c6/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0666fc62f436b35e9ad3b806cb081d95f2f66c6/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=e0666fc62f436b35e9ad3b806cb081d95f2f66c6", "patch": "@@ -4718,6 +4718,7 @@ package body Exp_Ch4 is\n    ------------------------------\n \n    procedure Expand_N_Case_Expression (N : Node_Id) is\n+\n       function Is_Copy_Type (Typ : Entity_Id) return Boolean;\n       --  Return True if we can copy objects of this type when expanding a case\n       --  expression.\n@@ -4728,7 +4729,7 @@ package body Exp_Ch4 is\n \n       function Is_Copy_Type (Typ : Entity_Id) return Boolean is\n       begin\n-         --  if Minimize_Expression_With_Actions is True, we can afford to copy\n+         --  If Minimize_Expression_With_Actions is True, we can afford to copy\n          --  large objects, as long as they are constrained and not limited.\n \n          return\n@@ -4818,7 +4819,7 @@ package body Exp_Ch4 is\n \n       --  This approach avoids extra copies of potentially large objects. It\n       --  also allows handling of values of limited or unconstrained types.\n-      --  Note that we do the copy also for constrained, non limited types\n+      --  Note that we do the copy also for constrained, nonlimited types\n       --  when minimizing expressions with actions (e.g. when generating C\n       --  code) since it allows us to do the optimization below in more cases.\n \n@@ -4852,7 +4853,7 @@ package body Exp_Ch4 is\n          Target_Typ := Typ;\n \n          --  ??? Do not perform the optimization when the return statement is\n-         --  within a predicate function as this causes spurious errors. Could\n+         --  within a predicate function, as this causes spurious errors. Could\n          --  this be a possible mismatch in handling this case somewhere else\n          --  in semantic analysis?\n \n@@ -5479,7 +5480,7 @@ package body Exp_Ch4 is\n       end if;\n \n       --  Fall through here for either the limited expansion, or the case of\n-      --  inserting actions for non-limited types. In both these cases, we must\n+      --  inserting actions for nonlimited types. In both these cases, we must\n       --  move the SLOC of the parent If statement to the newly created one and\n       --  change it to the SLOC of the expression which, after expansion, will\n       --  correspond to what is being evaluated."}, {"sha": "88c1ea67d09c2558523c69a12af76223ca4af45f", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0666fc62f436b35e9ad3b806cb081d95f2f66c6/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0666fc62f436b35e9ad3b806cb081d95f2f66c6/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=e0666fc62f436b35e9ad3b806cb081d95f2f66c6", "patch": "@@ -5199,7 +5199,7 @@ package body Exp_Util is\n \n       Calls_OK : Boolean := False;\n       --  This flag is set to True when expression Expr contains at least one\n-      --  call to a non-dispatching primitive function of Typ.\n+      --  call to a nondispatching primitive function of Typ.\n \n       function Search_Primitive_Calls (N : Node_Id) return Traverse_Result;\n       --  Search for nondispatching calls to primitive functions of type Typ\n@@ -5213,15 +5213,15 @@ package body Exp_Util is\n          Subp     : Entity_Id;\n \n       begin\n-         --  Detect a function call which could denote a non-dispatching\n+         --  Detect a function call that could denote a nondispatching\n          --  primitive of the input type.\n \n          if Nkind (N) = N_Function_Call\n            and then Is_Entity_Name (Name (N))\n          then\n             Subp := Entity (Name (N));\n \n-            --  Do not consider function calls with a controlling argument as\n+            --  Do not consider function calls with a controlling argument, as\n             --  those are always dispatching calls.\n \n             if Is_Dispatching_Operation (Subp)\n@@ -5237,7 +5237,7 @@ package body Exp_Util is\n                then\n                   Calls_OK := True;\n \n-                  --  There is no need to continue the traversal as one such\n+                  --  There is no need to continue the traversal, as one such\n                   --  call suffices.\n \n                   return Abandon;"}, {"sha": "7dbb84cfb2d003cee7f32a0215a42bf6758841f6", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 2, "deletions": 118, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0666fc62f436b35e9ad3b806cb081d95f2f66c6/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0666fc62f436b35e9ad3b806cb081d95f2f66c6/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=e0666fc62f436b35e9ad3b806cb081d95f2f66c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -474,16 +474,9 @@ package body Osint is\n          if Additional_Source_Dir then\n             Search_Path := Getenv (Ada_Include_Path);\n \n-            if Search_Path'Length > 0 then\n-               Search_Path := To_Canonical_Path_Spec (Search_Path.all);\n-            end if;\n-\n          else\n             Search_Path := Getenv (Ada_Objects_Path);\n \n-            if Search_Path'Length > 0 then\n-               Search_Path := To_Canonical_Path_Spec (Search_Path.all);\n-            end if;\n          end if;\n \n          Get_Next_Dir_In_Path_Init (Search_Path);\n@@ -1524,7 +1517,7 @@ package body Osint is\n          Default_Suffix_Dir := new String'(\"adalib\");\n       end if;\n \n-      Norm_Search_Dir := To_Canonical_Path_Spec (Local_Search_Dir.all);\n+      Norm_Search_Dir := Local_Search_Dir;\n \n       if Is_Absolute_Path (Norm_Search_Dir.all) then\n \n@@ -2920,47 +2913,6 @@ package body Osint is\n       return Name;\n    end Strip_Suffix;\n \n-   ---------------------------\n-   -- To_Canonical_Dir_Spec --\n-   ---------------------------\n-\n-   function To_Canonical_Dir_Spec\n-     (Host_Dir     : String;\n-      Prefix_Style : Boolean) return String_Access\n-   is\n-      function To_Canonical_Dir_Spec\n-        (Host_Dir    : Address;\n-         Prefix_Flag : Integer) return Address;\n-      pragma Import (C, To_Canonical_Dir_Spec, \"__gnat_to_canonical_dir_spec\");\n-\n-      C_Host_Dir         : String (1 .. Host_Dir'Length + 1);\n-      Canonical_Dir_Addr : Address;\n-      Canonical_Dir_Len  : CRTL.size_t;\n-\n-   begin\n-      C_Host_Dir (1 .. Host_Dir'Length) := Host_Dir;\n-      C_Host_Dir (C_Host_Dir'Last)      := ASCII.NUL;\n-\n-      if Prefix_Style then\n-         Canonical_Dir_Addr := To_Canonical_Dir_Spec (C_Host_Dir'Address, 1);\n-      else\n-         Canonical_Dir_Addr := To_Canonical_Dir_Spec (C_Host_Dir'Address, 0);\n-      end if;\n-\n-      Canonical_Dir_Len := C_String_Length (Canonical_Dir_Addr);\n-\n-      if Canonical_Dir_Len = 0 then\n-         return null;\n-      else\n-         return To_Path_String_Access (Canonical_Dir_Addr, Canonical_Dir_Len);\n-      end if;\n-\n-   exception\n-      when others =>\n-         Fail (\"invalid directory spec: \" & Host_Dir);\n-         return null;\n-   end To_Canonical_Dir_Spec;\n-\n    ---------------------------\n    -- To_Canonical_File_List --\n    ---------------------------\n@@ -3019,74 +2971,6 @@ package body Osint is\n       end;\n    end To_Canonical_File_List;\n \n-   ----------------------------\n-   -- To_Canonical_File_Spec --\n-   ----------------------------\n-\n-   function To_Canonical_File_Spec\n-     (Host_File : String) return String_Access\n-   is\n-      function To_Canonical_File_Spec (Host_File : Address) return Address;\n-      pragma Import\n-        (C, To_Canonical_File_Spec, \"__gnat_to_canonical_file_spec\");\n-\n-      C_Host_File         : String (1 .. Host_File'Length + 1);\n-      Canonical_File_Addr : Address;\n-      Canonical_File_Len  : CRTL.size_t;\n-\n-   begin\n-      C_Host_File (1 .. Host_File'Length) := Host_File;\n-      C_Host_File (C_Host_File'Last)      := ASCII.NUL;\n-\n-      Canonical_File_Addr := To_Canonical_File_Spec (C_Host_File'Address);\n-      Canonical_File_Len  := C_String_Length (Canonical_File_Addr);\n-\n-      if Canonical_File_Len = 0 then\n-         return null;\n-      else\n-         return To_Path_String_Access\n-                  (Canonical_File_Addr, Canonical_File_Len);\n-      end if;\n-\n-   exception\n-      when others =>\n-         Fail (\"invalid file spec: \" & Host_File);\n-         return null;\n-   end To_Canonical_File_Spec;\n-\n-   ----------------------------\n-   -- To_Canonical_Path_Spec --\n-   ----------------------------\n-\n-   function To_Canonical_Path_Spec\n-     (Host_Path : String) return String_Access\n-   is\n-      function To_Canonical_Path_Spec (Host_Path : Address) return Address;\n-      pragma Import\n-        (C, To_Canonical_Path_Spec, \"__gnat_to_canonical_path_spec\");\n-\n-      C_Host_Path         : String (1 .. Host_Path'Length + 1);\n-      Canonical_Path_Addr : Address;\n-      Canonical_Path_Len  : CRTL.size_t;\n-\n-   begin\n-      C_Host_Path (1 .. Host_Path'Length) := Host_Path;\n-      C_Host_Path (C_Host_Path'Last)      := ASCII.NUL;\n-\n-      Canonical_Path_Addr := To_Canonical_Path_Spec (C_Host_Path'Address);\n-      Canonical_Path_Len  := C_String_Length (Canonical_Path_Addr);\n-\n-      --  Return a null string (vice a null) for zero length paths, for\n-      --  compatibility with getenv().\n-\n-      return To_Path_String_Access (Canonical_Path_Addr, Canonical_Path_Len);\n-\n-   exception\n-      when others =>\n-         Fail (\"invalid path spec: \" & Host_Path);\n-         return null;\n-   end To_Canonical_Path_Spec;\n-\n    ----------------------\n    -- To_Host_Dir_Spec --\n    ----------------------"}, {"sha": "056b88f51b97dc5d6fe7ded9a82370c08055e273", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0666fc62f436b35e9ad3b806cb081d95f2f66c6/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0666fc62f436b35e9ad3b806cb081d95f2f66c6/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=e0666fc62f436b35e9ad3b806cb081d95f2f66c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -214,24 +214,6 @@ package Osint is\n    --  a list of valid Unix syntax file or directory specs. If Only_Dirs is\n    --  True, then only return directories.\n \n-   function To_Canonical_Dir_Spec\n-     (Host_Dir     : String;\n-      Prefix_Style : Boolean) return String_Access;\n-   --  Convert a host syntax directory specification to canonical (Unix)\n-   --  syntax. If Prefix_Style then make it a valid file specification prefix.\n-   --  A file specification prefix is a directory specification that can be\n-   --  appended with a simple file specification to yield a valid absolute\n-   --  or relative path to a file. On a conversion to Unix syntax this simply\n-   --  means the spec has a trailing slash (\"/\").\n-\n-   function To_Canonical_File_Spec\n-     (Host_File : String) return String_Access;\n-   --  Convert a host syntax file specification to canonical (Unix) syntax\n-\n-   function To_Canonical_Path_Spec\n-     (Host_Path : String) return String_Access;\n-   --  Convert a host syntax Path specification to canonical (Unix) syntax\n-\n    function To_Host_Dir_Spec\n      (Canonical_Dir : String;\n       Prefix_Style  : Boolean) return String_Access;"}, {"sha": "7afe8c0a3d0771dc95382cb9f1124003de09756d", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0666fc62f436b35e9ad3b806cb081d95f2f66c6/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0666fc62f436b35e9ad3b806cb081d95f2f66c6/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=e0666fc62f436b35e9ad3b806cb081d95f2f66c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -546,9 +546,6 @@ package body Prj.Part is\n       Dummy : Boolean;\n       pragma Warnings (Off, Dummy);\n \n-      Real_Project_File_Name : String_Access :=\n-                                 Osint.To_Canonical_File_Spec\n-                                   (Project_File_Name);\n       Path_Name_Id : Path_Name_Type;\n \n    begin\n@@ -561,17 +558,12 @@ package body Prj.Part is\n            (Env.Project_Path, Target_Name);\n       end if;\n \n-      if Real_Project_File_Name = null then\n-         Real_Project_File_Name := new String'(Project_File_Name);\n-      end if;\n-\n       Project := Empty_Node;\n \n       Find_Project (Env.Project_Path,\n-                    Project_File_Name => Real_Project_File_Name.all,\n+                    Project_File_Name => Project_File_Name,\n                     Directory         => Current_Directory,\n                     Path              => Path_Name_Id);\n-      Free (Real_Project_File_Name);\n \n       if Errout_Handling /= Never_Finalize then\n          Prj.Err.Initialize;"}, {"sha": "7ad34ee3182bec155c05abff162032c4f4ca46d7", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0666fc62f436b35e9ad3b806cb081d95f2f66c6/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0666fc62f436b35e9ad3b806cb081d95f2f66c6/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=e0666fc62f436b35e9ad3b806cb081d95f2f66c6", "patch": "@@ -1181,32 +1181,6 @@ package body Sem is\n       end if;\n    end Insert_List_After_And_Analyze;\n \n-   --  Version with check(s) suppressed\n-\n-   procedure Insert_List_After_And_Analyze\n-     (N : Node_Id; L : List_Id; Suppress : Check_Id)\n-   is\n-   begin\n-      if Suppress = All_Checks then\n-         declare\n-            Svs : constant Suppress_Array := Scope_Suppress.Suppress;\n-         begin\n-            Scope_Suppress.Suppress := (others => True);\n-            Insert_List_After_And_Analyze (N, L);\n-            Scope_Suppress.Suppress := Svs;\n-         end;\n-\n-      else\n-         declare\n-            Svg : constant Boolean := Scope_Suppress.Suppress (Suppress);\n-         begin\n-            Scope_Suppress.Suppress (Suppress) := True;\n-            Insert_List_After_And_Analyze (N, L);\n-            Scope_Suppress.Suppress (Suppress) := Svg;\n-         end;\n-      end if;\n-   end Insert_List_After_And_Analyze;\n-\n    ------------------------------------\n    -- Insert_List_Before_And_Analyze --\n    ------------------------------------\n@@ -1239,32 +1213,6 @@ package body Sem is\n       end if;\n    end Insert_List_Before_And_Analyze;\n \n-   --  Version with check(s) suppressed\n-\n-   procedure Insert_List_Before_And_Analyze\n-     (N : Node_Id; L : List_Id; Suppress : Check_Id)\n-   is\n-   begin\n-      if Suppress = All_Checks then\n-         declare\n-            Svs : constant Suppress_Array := Scope_Suppress.Suppress;\n-         begin\n-            Scope_Suppress.Suppress := (others => True);\n-            Insert_List_Before_And_Analyze (N, L);\n-            Scope_Suppress.Suppress := Svs;\n-         end;\n-\n-      else\n-         declare\n-            Svg : constant Boolean := Scope_Suppress.Suppress (Suppress);\n-         begin\n-            Scope_Suppress.Suppress (Suppress) := True;\n-            Insert_List_Before_And_Analyze (N, L);\n-            Scope_Suppress.Suppress (Suppress) := Svg;\n-         end;\n-      end if;\n-   end Insert_List_Before_And_Analyze;\n-\n    ----------\n    -- Lock --\n    ----------"}, {"sha": "fca920a8a008dbc9f032d50ba68aa10da6649d5c", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0666fc62f436b35e9ad3b806cb081d95f2f66c6/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0666fc62f436b35e9ad3b806cb081d95f2f66c6/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=e0666fc62f436b35e9ad3b806cb081d95f2f66c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -628,25 +628,17 @@ package Sem is\n \n    procedure Insert_List_After_And_Analyze\n      (N : Node_Id; L : List_Id);\n-   procedure Insert_List_After_And_Analyze\n-     (N : Node_Id; L : List_Id; Suppress : Check_Id);\n    --  Inserts list L after node N using Nlists.Insert_List_After, and then,\n    --  after this insertion is complete, analyzes all the nodes in the list,\n    --  including any additional nodes generated by this analysis. If the list\n-   --  is empty or No_List, the call has no effect. If the Suppress argument is\n-   --  present, then the analysis is done with the specified check suppressed\n-   --  (can be All_Checks to suppress all checks).\n+   --  is empty or No_List, the call has no effect.\n \n    procedure Insert_List_Before_And_Analyze\n      (N : Node_Id; L : List_Id);\n-   procedure Insert_List_Before_And_Analyze\n-     (N : Node_Id; L : List_Id; Suppress : Check_Id);\n    --  Inserts list L before node N using Nlists.Insert_List_Before, and then,\n    --  after this insertion is complete, analyzes all the nodes in the list,\n    --  including any additional nodes generated by this analysis. If the list\n-   --  is empty or No_List, the call has no effect. If the Suppress argument is\n-   --  present, then the analysis is done with the specified check suppressed\n-   --  (can be All_Checks to suppress all checks).\n+   --  is empty or No_List, the call has no effect.\n \n    procedure Insert_After_And_Analyze\n      (N : Node_Id; M : Node_Id);"}]}