{"sha": "a0ce4616fbfc372de08a3b0d73ce96bb6ac40549", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBjZTQ2MTZmYmZjMzcyZGUwOGEzYjBkNzNjZTk2YmI2YWM0MDU0OQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-09-25T20:58:46Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-09-25T20:58:46Z"}, "message": "revert: testsuite_error.h: Add empty default constructor to __gnu_test::test_category and...\n\n2011-09-25  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tRevert (no longer necessary post r179130):\n\n\t2010-04-27  Fabien Ch\u00eane  <fabien.chene@gmail.com>\n\n\t* testsuite/util/testsuite_error.h: Add empty default constructor\n\tto __gnu_test::test_category and\n\t__gnu_test::test_derived_category.\n\t* src/future.cc: Add empty default constructor to\n\tfuture_error_category.\n\t* src/system_error.cc: Add default ctor to generic_error_category\n\tand system_error_category.\n\nFrom-SVN: r179172", "tree": {"sha": "beb76ebb0cacf10dea842baa19bd21192051bbab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/beb76ebb0cacf10dea842baa19bd21192051bbab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0ce4616fbfc372de08a3b0d73ce96bb6ac40549", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0ce4616fbfc372de08a3b0d73ce96bb6ac40549", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0ce4616fbfc372de08a3b0d73ce96bb6ac40549", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0ce4616fbfc372de08a3b0d73ce96bb6ac40549/comments", "author": null, "committer": null, "parents": [{"sha": "ad1d36bafd1f18e33bd03169af788c6467f09c4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad1d36bafd1f18e33bd03169af788c6467f09c4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad1d36bafd1f18e33bd03169af788c6467f09c4d"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "9830cca2ef5969687eda9ee4e51694dc6483f6cf", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0ce4616fbfc372de08a3b0d73ce96bb6ac40549/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0ce4616fbfc372de08a3b0d73ce96bb6ac40549/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a0ce4616fbfc372de08a3b0d73ce96bb6ac40549", "patch": "@@ -1,3 +1,17 @@\n+2011-09-25  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tRevert (no longer necessary post r179130):\n+\n+\t2010-04-27  Fabien Ch\u00eane  <fabien.chene@gmail.com>\n+\n+\t* testsuite/util/testsuite_error.h: Add empty default constructor\n+\tto __gnu_test::test_category and\n+\t__gnu_test::test_derived_category.\n+\t* src/future.cc: Add empty default constructor to\n+\tfuture_error_category.\n+\t* src/system_error.cc: Add default ctor to generic_error_category\n+\tand system_error_category.\n+\n 2011-09-24  John Salmon  <john.salmon@deshaw.com>\n \n \tPR libstdc++/50510"}, {"sha": "8569bf0af3b0abc564f679d6db7caa7dc72fceb4", "filename": "libstdc++-v3/src/future.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0ce4616fbfc372de08a3b0d73ce96bb6ac40549/libstdc%2B%2B-v3%2Fsrc%2Ffuture.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0ce4616fbfc372de08a3b0d73ce96bb6ac40549/libstdc%2B%2B-v3%2Fsrc%2Ffuture.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffuture.cc?ref=a0ce4616fbfc372de08a3b0d73ce96bb6ac40549", "patch": "@@ -28,8 +28,6 @@ namespace\n {\n   struct future_error_category : public std::error_category\n   {\n-    future_error_category() noexcept {}\n-\n     virtual const char*\n     name() const noexcept\n     { return \"future\"; }"}, {"sha": "3ee1d9b0b0afc15a3dd6b4d9119147061f4b041e", "filename": "libstdc++-v3/src/system_error.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0ce4616fbfc372de08a3b0d73ce96bb6ac40549/libstdc%2B%2B-v3%2Fsrc%2Fsystem_error.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0ce4616fbfc372de08a3b0d73ce96bb6ac40549/libstdc%2B%2B-v3%2Fsrc%2Fsystem_error.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fsystem_error.cc?ref=a0ce4616fbfc372de08a3b0d73ce96bb6ac40549", "patch": "@@ -34,8 +34,6 @@ namespace\n   \n   struct generic_error_category : public std::error_category\n   {\n-    generic_error_category() {}\n-\n     virtual const char*\n     name() const noexcept\n     { return \"generic\"; }\n@@ -51,8 +49,6 @@ namespace\n \n   struct system_error_category : public std::error_category\n   {\n-    system_error_category() {}\n-\n     virtual const char*\n     name() const noexcept\n     { return \"system\"; }"}, {"sha": "69a90fbecfca80422baafe511ea25e0478088550", "filename": "libstdc++-v3/testsuite/util/testsuite_error.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0ce4616fbfc372de08a3b0d73ce96bb6ac40549/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_error.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0ce4616fbfc372de08a3b0d73ce96bb6ac40549/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_error.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_error.h?ref=a0ce4616fbfc372de08a3b0d73ce96bb6ac40549", "patch": "@@ -29,8 +29,6 @@ namespace __gnu_test\n {\n   struct test_category : public std::error_category\n   { \n-    test_category() {}\n-\n     virtual const char*\n     name() const noexcept\n     {\n@@ -45,8 +43,6 @@ namespace __gnu_test\n \n   struct test_derived_category : public test_category\n   { \n-    test_derived_category() {}\n-\n     virtual const char*\n     name() const noexcept\n     {"}]}