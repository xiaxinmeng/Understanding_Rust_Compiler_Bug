{"sha": "ce3867d414bd7d9e5b6fb2a51b1fb3d9e9e1eae9", "node_id": "C_kwDOANBUbNoAKGNlMzg2N2Q0MTRiZDdkOWU1YjZmYjJhNTFiMWZiM2Q5ZTllMWVhZTk", "commit": {"author": {"name": "Takayuki 'January June' Suwa", "email": "jjsuwa_sys3175@yahoo.co.jp", "date": "2022-06-14T03:53:04Z"}, "committer": {"name": "Max Filippov", "email": "jcmvbkbc@gmail.com", "date": "2022-06-15T23:55:36Z"}, "message": "xtensa: Eliminate [DS]Cmode hard register clobber that is immediately followed by whole overwrite the register\n\nRTL expansion of substitution to [DS]Cmode hard register includes obstructive\nregister clobber.\n\nA simplest example:\n\n    double _Complex test(double _Complex c) {\n      return c;\n    }\n\nwill be converted to:\n\n    (set (reg:DF 42 [ c ]) (reg:DF 2 a2))\n    (set (reg:DF 43 [ c+8 ]) (reg:DF 4 a4))\n    (clobber (reg:DC 2 a2))\n    (set (reg:DF 2 a2) (reg:DF 42 [ c ]))\n    (set (reg:DF 4 a4) (reg:DF 43 [ c+8 ]))\n    (use (reg:DC 2 a2))\n    (return)\n\nand then finally:\n\n    test:\n\tmov\ta8, a2\n\tmov\ta9, a3\n\tmov\ta6, a4\n\tmov\ta7, a5\n\tmov\ta2, a8\n\tmov\ta3, a9\n\tmov\ta4, a6\n\tmov\ta5, a7\n\tret\n\nAs you see, it is so ridiculous.\n\nThis patch eliminates such clobber in order to prune away the wasted move\ninstructions by the optimizer:\n\n    test:\n\tret\n\ngcc/ChangeLog:\n\n\t* config/xtensa/xtensa.md (DSC): New split pattern and mode iterator.", "tree": {"sha": "c2054d38d52990d22da106d50d64e68a16f0acb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2054d38d52990d22da106d50d64e68a16f0acb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce3867d414bd7d9e5b6fb2a51b1fb3d9e9e1eae9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce3867d414bd7d9e5b6fb2a51b1fb3d9e9e1eae9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce3867d414bd7d9e5b6fb2a51b1fb3d9e9e1eae9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce3867d414bd7d9e5b6fb2a51b1fb3d9e9e1eae9/comments", "author": {"login": "jjsuwa-sys3175", "id": 73290592, "node_id": "MDQ6VXNlcjczMjkwNTky", "avatar_url": "https://avatars.githubusercontent.com/u/73290592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjsuwa-sys3175", "html_url": "https://github.com/jjsuwa-sys3175", "followers_url": "https://api.github.com/users/jjsuwa-sys3175/followers", "following_url": "https://api.github.com/users/jjsuwa-sys3175/following{/other_user}", "gists_url": "https://api.github.com/users/jjsuwa-sys3175/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjsuwa-sys3175/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjsuwa-sys3175/subscriptions", "organizations_url": "https://api.github.com/users/jjsuwa-sys3175/orgs", "repos_url": "https://api.github.com/users/jjsuwa-sys3175/repos", "events_url": "https://api.github.com/users/jjsuwa-sys3175/events{/privacy}", "received_events_url": "https://api.github.com/users/jjsuwa-sys3175/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jcmvbkbc", "id": 166731, "node_id": "MDQ6VXNlcjE2NjczMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmvbkbc", "html_url": "https://github.com/jcmvbkbc", "followers_url": "https://api.github.com/users/jcmvbkbc/followers", "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}", "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions", "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs", "repos_url": "https://api.github.com/users/jcmvbkbc/repos", "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfad4856fa46abc878934a9433d0bfc2482ccf00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfad4856fa46abc878934a9433d0bfc2482ccf00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfad4856fa46abc878934a9433d0bfc2482ccf00"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "ef6bbc451b050685f0e4271b43ec0e398c3037db", "filename": "gcc/config/xtensa/xtensa.md", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce3867d414bd7d9e5b6fb2a51b1fb3d9e9e1eae9/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce3867d414bd7d9e5b6fb2a51b1fb3d9e9e1eae9/gcc%2Fconfig%2Fxtensa%2Fxtensa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.md?ref=ce3867d414bd7d9e5b6fb2a51b1fb3d9e9e1eae9", "patch": "@@ -87,6 +87,10 @@\n ;; This code iterator is for *shlrd and its variants.\n (define_code_iterator ior_op [ior plus])\n \n+;; This mode iterator allows the DC and SC patterns to be defined from\n+;; the same template.\n+(define_mode_iterator DSC [DC SC])\n+\n \f\n ;; Attributes.\n \n@@ -2780,3 +2784,27 @@\n   operands[6] = gen_rtx_MEM (SFmode, XEXP (operands[6], 0));\n   operands[7] = gen_rtx_MEM (SFmode, XEXP (operands[7], 0));\n })\n+\n+(define_split\n+  [(clobber (match_operand:DSC 0 \"register_operand\"))]\n+  \"GP_REG_P (REGNO (operands[0]))\"\n+  [(const_int 0)]\n+{\n+  unsigned int regno = REGNO (operands[0]);\n+  machine_mode inner_mode = GET_MODE_INNER (<MODE>mode);\n+  rtx_insn *insn;\n+  rtx x;\n+  if (! ((insn = next_nonnote_nondebug_insn (curr_insn))\n+\t && NONJUMP_INSN_P (insn)\n+\t && GET_CODE (x = PATTERN (insn)) == SET\n+\t && REG_P (x = XEXP (x, 0))\n+\t && GET_MODE (x) == inner_mode\n+\t && REGNO (x) == regno\n+\t && (insn = next_nonnote_nondebug_insn (insn))\n+\t && NONJUMP_INSN_P (insn)\n+\t && GET_CODE (x = PATTERN (insn)) == SET\n+\t && REG_P (x = XEXP (x, 0))\n+\t && GET_MODE (x) == inner_mode\n+\t && REGNO (x) == regno + REG_NREGS (operands[0]) / 2))\n+    FAIL;\n+})"}]}