{"sha": "bd8d449d1d953e904fbe12d8b39a4cd09937a0b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ4ZDQ0OWQxZDk1M2U5MDRmYmUxMmQ4YjM5YTRjZDA5OTM3YTBiMw==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2002-06-17T17:41:11Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2002-06-17T17:41:11Z"}, "message": "Fixed warning from __objc_get_forward_imp not returning a value\n\nFrom-SVN: r54707", "tree": {"sha": "5355c7b610dceb99f7e865ce21a3ab21276bcdab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5355c7b610dceb99f7e865ce21a3ab21276bcdab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd8d449d1d953e904fbe12d8b39a4cd09937a0b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd8d449d1d953e904fbe12d8b39a4cd09937a0b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd8d449d1d953e904fbe12d8b39a4cd09937a0b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd8d449d1d953e904fbe12d8b39a4cd09937a0b3/comments", "author": null, "committer": null, "parents": [{"sha": "97272202aa3752f8a6771332ce2b39d6dc7aceeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97272202aa3752f8a6771332ce2b39d6dc7aceeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97272202aa3752f8a6771332ce2b39d6dc7aceeb"}], "stats": {"total": 58, "additions": 31, "deletions": 27}, "files": [{"sha": "eafecd7efa660436f668630d431b99bddf2b0002", "filename": "libobjc/sendmsg.c", "status": "modified", "additions": 31, "deletions": 27, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd8d449d1d953e904fbe12d8b39a4cd09937a0b3/libobjc%2Fsendmsg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd8d449d1d953e904fbe12d8b39a4cd09937a0b3/libobjc%2Fsendmsg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fsendmsg.c?ref=bd8d449d1d953e904fbe12d8b39a4cd09937a0b3", "patch": "@@ -78,33 +78,37 @@ static Method_t search_for_method_in_hierarchy (Class class, SEL sel);\n Method_t search_for_method_in_list(MethodList_t list, SEL op);\n id nil_method(id, SEL, ...);\n \n-/* Given a selector, return the proper forwarding implementation. */\n-__inline__\n-IMP\n-__objc_get_forward_imp (SEL sel)\n-{\n-  if (__objc_msg_forward)\n-    {\n-      IMP result;\n-      if ((result = __objc_msg_forward (sel)))\n-        return result;\n-    }\n-  else\n-    {\n-      const char *t = sel->sel_types;\n-\n-      if (t && (*t == '[' || *t == '(' || *t == '{')\n-#ifdef OBJC_MAX_STRUCT_BY_VALUE\n-          && objc_sizeof_type(t) > OBJC_MAX_STRUCT_BY_VALUE\n-#endif\n-          )\n-        return (IMP)__objc_block_forward;\n-      else if (t && (*t == 'f' || *t == 'd'))\n-        return (IMP)__objc_double_forward;\n-      else\n-        return (IMP)__objc_word_forward;\n-    }\n-}\n+/* Given a selector, return the proper forwarding implementation.  */\n+__inline__ \n+IMP \n+__objc_get_forward_imp (SEL sel) \n+{ \n+  /* If a custom forwarding hook was registered, try getting a forwarding\n+   * function from it.  */\n+  if (__objc_msg_forward) \n+    { \n+      IMP result; \n+      if ((result = __objc_msg_forward (sel)) != NULL) \n+        return result; \n+    } \n+\n+  /* In all other cases, use the default forwarding functions built using\n+   * __builtin_apply and friends.  */\n+  { \n+    const char *t = sel->sel_types; \n+ \n+    if (t && (*t == '[' || *t == '(' || *t == '{') \n+#ifdef OBJC_MAX_STRUCT_BY_VALUE \n+        && objc_sizeof_type(t) > OBJC_MAX_STRUCT_BY_VALUE \n+#endif \n+        ) \n+      return (IMP)__objc_block_forward; \n+    else if (t && (*t == 'f' || *t == 'd')) \n+      return (IMP)__objc_double_forward; \n+    else \n+      return (IMP)__objc_word_forward; \n+  } \n+} \n \n /* Given a class and selector, return the selector's implementation.  */\n __inline__"}]}