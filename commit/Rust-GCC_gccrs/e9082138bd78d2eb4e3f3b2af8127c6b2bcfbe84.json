{"sha": "e9082138bd78d2eb4e3f3b2af8127c6b2bcfbe84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTkwODIxMzhiZDc4ZDJlYjRlM2YzYjJhZjgxMjdjNmIyYmNmYmU4NA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-12-03T20:35:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-12-03T20:35:08Z"}, "message": "re PR c/59708 (clang-compatible checked arithmetic builtins)\n\n\tPR c/59708\n\t* expmed.c (expand_widening_mult): Return const0_rtx if\n\tcoeff is 0.\n\nFrom-SVN: r218331", "tree": {"sha": "b0a37d5c035d1b078e8b2a87a5ebefb755e18305", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0a37d5c035d1b078e8b2a87a5ebefb755e18305"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9082138bd78d2eb4e3f3b2af8127c6b2bcfbe84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9082138bd78d2eb4e3f3b2af8127c6b2bcfbe84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9082138bd78d2eb4e3f3b2af8127c6b2bcfbe84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9082138bd78d2eb4e3f3b2af8127c6b2bcfbe84/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c3d79243214c8fbfc6696c249232ccfb033a59ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3d79243214c8fbfc6696c249232ccfb033a59ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3d79243214c8fbfc6696c249232ccfb033a59ef"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "aa2f9589e5f5acd85c2d0335b8c05fc37f6233c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9082138bd78d2eb4e3f3b2af8127c6b2bcfbe84/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9082138bd78d2eb4e3f3b2af8127c6b2bcfbe84/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e9082138bd78d2eb4e3f3b2af8127c6b2bcfbe84", "patch": "@@ -1,5 +1,9 @@\n 2014-12-03  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c/59708\n+\t* expmed.c (expand_widening_mult): Return const0_rtx if\n+\tcoeff is 0.\n+\n \t* doc/gimple.texi (gimple_build_assign_with_ops): Remove.\n \t(gimple_build_assign): Document the new overloads.\n "}, {"sha": "708f04f11c5bcd8b1013009b4fed0475e4da5362", "filename": "gcc/expmed.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9082138bd78d2eb4e3f3b2af8127c6b2bcfbe84/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9082138bd78d2eb4e3f3b2af8127c6b2bcfbe84/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=e9082138bd78d2eb4e3f3b2af8127c6b2bcfbe84", "patch": "@@ -3289,6 +3289,9 @@ expand_widening_mult (machine_mode mode, rtx op0, rtx op1, rtx target,\n       enum mult_variant variant;\n       struct algorithm algorithm;\n \n+      if (coeff == 0)\n+\treturn CONST0_RTX (mode);\n+\n       /* Special case powers of two.  */\n       if (EXACT_POWER_OF_2_OR_ZERO_P (coeff))\n \t{"}]}