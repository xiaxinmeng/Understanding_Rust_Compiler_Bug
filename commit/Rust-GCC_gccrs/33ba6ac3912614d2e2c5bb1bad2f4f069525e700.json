{"sha": "33ba6ac3912614d2e2c5bb1bad2f4f069525e700", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNiYTZhYzM5MTI2MTRkMmUyYzViYjFiYWQyZjRmMDY5NTI1ZTcwMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-09-23T17:48:00Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-09-23T17:48:00Z"}, "message": "PR c++/91809 - bit-field and ellipsis.\n\ndecay_conversion converts a bit-field access to its declared type, which\nisn't what we want here; it even has a comment that the caller is expected\nto have already used default_conversion to perform integral promotion.  This\nfunction handles arithmetic promotion differently, but we still don't want\nto call decay_conversion before that happens.\n\n\t* call.c (convert_arg_to_ellipsis): Don't call decay_conversion for\n\tarithmetic arguments.\n\nFrom-SVN: r276059", "tree": {"sha": "a4484a7075b47ffc96663cea3b6083ede11733b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4484a7075b47ffc96663cea3b6083ede11733b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33ba6ac3912614d2e2c5bb1bad2f4f069525e700", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33ba6ac3912614d2e2c5bb1bad2f4f069525e700", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33ba6ac3912614d2e2c5bb1bad2f4f069525e700", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33ba6ac3912614d2e2c5bb1bad2f4f069525e700/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1a09197cb1bc05a71d1866d1220937289da02c5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a09197cb1bc05a71d1866d1220937289da02c5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a09197cb1bc05a71d1866d1220937289da02c5e"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "541d018b53e4ede6617b5b0a21ccfc988308f433", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33ba6ac3912614d2e2c5bb1bad2f4f069525e700/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33ba6ac3912614d2e2c5bb1bad2f4f069525e700/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=33ba6ac3912614d2e2c5bb1bad2f4f069525e700", "patch": "@@ -1,3 +1,9 @@\n+2019-09-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/91809 - bit-field and ellipsis.\n+\t* call.c (convert_arg_to_ellipsis): Don't call decay_conversion for\n+\tarithmetic arguments.\n+\n 2019-09-23  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/91844 - Implement CWG 2352, Similar types and reference binding."}, {"sha": "77f10a9f5f1b7162f2924abaa80e11ff574bc5ac", "filename": "gcc/cp/call.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33ba6ac3912614d2e2c5bb1bad2f4f069525e700/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33ba6ac3912614d2e2c5bb1bad2f4f069525e700/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=33ba6ac3912614d2e2c5bb1bad2f4f069525e700", "patch": "@@ -7485,15 +7485,9 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n tree\n convert_arg_to_ellipsis (tree arg, tsubst_flags_t complain)\n {\n-  tree arg_type;\n+  tree arg_type = TREE_TYPE (arg);\n   location_t loc = cp_expr_loc_or_input_loc (arg);\n \n-  /* [expr.call]\n-\n-     The lvalue-to-rvalue, array-to-pointer, and function-to-pointer\n-     standard conversions are performed.  */\n-  arg = decay_conversion (arg, complain);\n-  arg_type = TREE_TYPE (arg);\n   /* [expr.call]\n \n      If the argument has integral or enumeration type that is subject\n@@ -7536,6 +7530,12 @@ convert_arg_to_ellipsis (tree arg, tsubst_flags_t complain)\n       else\n \targ = cp_perform_integral_promotions (arg, complain);\n     }\n+  else\n+    /* [expr.call]\n+\n+       The lvalue-to-rvalue, array-to-pointer, and function-to-pointer\n+       standard conversions are performed.  */\n+    arg = decay_conversion (arg, complain);\n \n   arg = require_complete_type_sfinae (arg, complain);\n   arg_type = TREE_TYPE (arg);"}, {"sha": "9bade5af330a3a5b4b1d67bf2c862b00b22f7691", "filename": "gcc/testsuite/g++.dg/overload/ellipsis4.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33ba6ac3912614d2e2c5bb1bad2f4f069525e700/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fellipsis4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33ba6ac3912614d2e2c5bb1bad2f4f069525e700/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fellipsis4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fellipsis4.C?ref=33ba6ac3912614d2e2c5bb1bad2f4f069525e700", "patch": "@@ -0,0 +1,12 @@\n+// { dg-additional-options \"-Wformat\" }\n+\n+extern \"C\" int printf (const char *, ...);\n+\n+struct X {\n+  unsigned long long a: 1;\n+} x;\n+\n+void foo()\n+{\n+  printf(\"%d\", x.a);\n+}"}]}