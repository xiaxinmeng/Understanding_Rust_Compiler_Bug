{"sha": "e68954309d6a19f6008491b90da7bf0c78b3b6b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY4OTU0MzA5ZDZhMTlmNjAwODQ5MWI5MGRhN2JmMGM3OGIzYjZiMQ==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2008-05-28T21:27:56Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2008-05-28T21:27:56Z"}, "message": "re PR fortran/36325 (specific or generic INTERFACE implies the EXTERNAL attribute)\n\n2008-05-28  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/36325\n\tPR fortran/35830\n\t* interface.c (gfc_procedure_use): Enable argument checking for\n\texternal procedures with explicit interface.\n\t* symbol.c (check_conflict): Fix conflict checking for externals.\n\t(copy_formal_args): Fix handling of arrays.\n\t* resolve.c (resolve_specific_f0, resolve_specific_s0): Fix handling\n\tof intrinsics.\n\t* parse.c (parse_interface): Non-abstract INTERFACE statement implies\n\tEXTERNAL attribute.\n\n\n2008-05-28  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/36325\n\tPR fortran/35830\n\t* gfortran.dg/interface_23.f90: New.\n\t* gfortran.dg/gomp/reduction3.f90: Fixed invalid code.\n\t* gfortran.dg/proc_decl_12.f90: New:\n\t* gfortran.dg/external_procedures_1.f90: Fixed error message.\n\nFrom-SVN: r136130", "tree": {"sha": "222a6e4ef029746c2fd84e3d767c20b3d51f3ba1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/222a6e4ef029746c2fd84e3d767c20b3d51f3ba1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e68954309d6a19f6008491b90da7bf0c78b3b6b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e68954309d6a19f6008491b90da7bf0c78b3b6b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e68954309d6a19f6008491b90da7bf0c78b3b6b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e68954309d6a19f6008491b90da7bf0c78b3b6b1/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "691da334bca13d0056d6d6e6f919995c1f1f9e4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/691da334bca13d0056d6d6e6f919995c1f1f9e4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/691da334bca13d0056d6d6e6f919995c1f1f9e4e"}], "stats": {"total": 127, "additions": 113, "deletions": 14}, "files": [{"sha": "cf05afcf665e3ef42abfcacec1247b17a44cc7e5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e68954309d6a19f6008491b90da7bf0c78b3b6b1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e68954309d6a19f6008491b90da7bf0c78b3b6b1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e68954309d6a19f6008491b90da7bf0c78b3b6b1", "patch": "@@ -1,3 +1,16 @@\n+2008-05-28  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/36325\n+\tPR fortran/35830\n+\t* interface.c (gfc_procedure_use): Enable argument checking for\n+\texternal procedures with explicit interface.\n+\t* symbol.c (check_conflict): Fix conflict checking for externals.\n+\t(copy_formal_args): Fix handling of arrays.\n+\t* resolve.c (resolve_specific_f0, resolve_specific_s0): Fix handling\n+\tof intrinsics.\n+\t* parse.c (parse_interface): Non-abstract INTERFACE statement implies\n+\tEXTERNAL attribute.\n+\n 2008-05-28  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/36319"}, {"sha": "f2ad4f6734e62741194cc992ddd8ffd284327465", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e68954309d6a19f6008491b90da7bf0c78b3b6b1/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e68954309d6a19f6008491b90da7bf0c78b3b6b1/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=e68954309d6a19f6008491b90da7bf0c78b3b6b1", "patch": "@@ -2421,8 +2421,7 @@ gfc_procedure_use (gfc_symbol *sym, gfc_actual_arglist **ap, locus *where)\n \t}\n     }\n \n-  if (sym->attr.external\n-      || sym->attr.if_source == IFSRC_UNKNOWN)\n+  if (sym->attr.if_source == IFSRC_UNKNOWN)\n     {\n       gfc_actual_arglist *a;\n       for (a = *ap; a; a = a->next)"}, {"sha": "b7e63919e8ecb78ca829a18dfc8033c2833fef1a", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e68954309d6a19f6008491b90da7bf0c78b3b6b1/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e68954309d6a19f6008491b90da7bf0c78b3b6b1/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=e68954309d6a19f6008491b90da7bf0c78b3b6b1", "patch": "@@ -1917,12 +1917,28 @@ parse_interface (void)\n       new_state = COMP_SUBROUTINE;\n       gfc_add_explicit_interface (gfc_new_block, IFSRC_IFBODY,\n \t\t\t\t  gfc_new_block->formal, NULL);\n+      if (current_interface.type != INTERFACE_ABSTRACT &&\n+\t !gfc_new_block->attr.dummy &&\n+\t gfc_add_external (&gfc_new_block->attr, &gfc_current_locus) == FAILURE)\n+\t{\n+\t  reject_statement ();\n+\t  gfc_free_namespace (gfc_current_ns);\n+\t  goto loop;\n+\t}\n       break;\n \n     case ST_FUNCTION:\n       new_state = COMP_FUNCTION;\n       gfc_add_explicit_interface (gfc_new_block, IFSRC_IFBODY,\n \t\t\t\t  gfc_new_block->formal, NULL);\n+      if (current_interface.type != INTERFACE_ABSTRACT &&\n+\t !gfc_new_block->attr.dummy &&\n+\t gfc_add_external (&gfc_new_block->attr, &gfc_current_locus) == FAILURE)\n+\t{\n+\t  reject_statement ();\n+\t  gfc_free_namespace (gfc_current_ns);\n+\t  goto loop;\n+\t}\n       break;\n \n     case ST_PROCEDURE:"}, {"sha": "8044990b7dda40afda7c53770a76c2d9f096f3bb", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e68954309d6a19f6008491b90da7bf0c78b3b6b1/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e68954309d6a19f6008491b90da7bf0c78b3b6b1/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=e68954309d6a19f6008491b90da7bf0c78b3b6b1", "patch": "@@ -1571,7 +1571,8 @@ resolve_specific_f0 (gfc_symbol *sym, gfc_expr *expr)\n       /* Existance of isym should be checked already.  */\n       gcc_assert (isym);\n \n-      sym->ts = isym->ts;\n+      sym->ts.type = isym->ts.type;\n+      sym->ts.kind = isym->ts.kind;\n       sym->attr.function = 1;\n       sym->attr.proc = PROC_EXTERNAL;\n       goto found;\n@@ -2646,8 +2647,9 @@ resolve_specific_s0 (gfc_code *c, gfc_symbol *sym)\n       /* Existance of isym should be checked already.  */\n       gcc_assert (isym);\n \n-      sym->ts = isym->ts;\n-      sym->attr.function = 1;\n+      sym->ts.type = isym->ts.type;\n+      sym->ts.kind = isym->ts.kind;\n+      sym->attr.subroutine = 1;\n       goto found;\n     }\n "}, {"sha": "e98a19c57fa6ecbf6414211aefb23ab2c59a5274", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e68954309d6a19f6008491b90da7bf0c78b3b6b1/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e68954309d6a19f6008491b90da7bf0c78b3b6b1/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=e68954309d6a19f6008491b90da7bf0c78b3b6b1", "patch": "@@ -434,12 +434,14 @@ check_conflict (symbol_attribute *attr, const char *name, locus *where)\n \n   conf (target, external);\n   conf (target, intrinsic);\n-  conf (external, dimension);   /* See Fortran 95's R504.  */\n+\n+  if (!attr->if_source)\n+    conf (external, dimension);   /* See Fortran 95's R504.  */\n \n   conf (external, intrinsic);\n   conf (entry, intrinsic);\n \n-  if ((attr->if_source && !attr->procedure) || attr->contained)\n+  if ((attr->if_source == IFSRC_DECL && !attr->procedure) || attr->contained)\n     {\n       conf (external, subroutine);\n       conf (external, function);\n@@ -3664,6 +3666,7 @@ copy_formal_args (gfc_symbol *dest, gfc_symbol *src)\n       /* May need to copy more info for the symbol.  */\n       formal_arg->sym->attr = curr_arg->sym->attr;\n       formal_arg->sym->ts = curr_arg->sym->ts;\n+      formal_arg->sym->as = gfc_copy_array_spec (curr_arg->sym->as);\n \n       /* If this isn't the first arg, set up the next ptr.  For the\n         last arg built, the formal_arg->next will never get set to"}, {"sha": "c28d1fc3eca72de5aa120033aae4a767fe06cb38", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e68954309d6a19f6008491b90da7bf0c78b3b6b1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e68954309d6a19f6008491b90da7bf0c78b3b6b1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e68954309d6a19f6008491b90da7bf0c78b3b6b1", "patch": "@@ -1,3 +1,12 @@\n+2008-05-28  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/36325\n+\tPR fortran/35830\n+\t* gfortran.dg/interface_23.f90: New.\n+\t* gfortran.dg/gomp/reduction3.f90: Fixed invalid code.\n+\t* gfortran.dg/proc_decl_12.f90: New:\n+\t* gfortran.dg/external_procedures_1.f90: Fixed error message.\n+\t\n 2008-05-28  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/36319"}, {"sha": "6e833be16e2eb2ed86af42ff5c8f86b73371602e", "filename": "gcc/testsuite/gfortran.dg/external_procedures_1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e68954309d6a19f6008491b90da7bf0c78b3b6b1/gcc%2Ftestsuite%2Fgfortran.dg%2Fexternal_procedures_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e68954309d6a19f6008491b90da7bf0c78b3b6b1/gcc%2Ftestsuite%2Fgfortran.dg%2Fexternal_procedures_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fexternal_procedures_1.f90?ref=e68954309d6a19f6008491b90da7bf0c78b3b6b1", "patch": "@@ -24,7 +24,7 @@ program main\n   interface\n     function ext1 (y)\n       real ext1, y\n-      external ext1  ! { dg-error \"EXTERNAL attribute conflicts with FUNCTION\" }\n+      external ext1  ! { dg-error \"Duplicate EXTERNAL attribute\" }\n     end function ext1\n   end interface\n   inval = 1.0\n@@ -38,4 +38,4 @@ function inv (y)\n     inv = y * y * y\n   end function inv\n end program main\n-\r\n+"}, {"sha": "0272a7415960e7cee6fb0031edf2fccc07dfbc2e", "filename": "gcc/testsuite/gfortran.dg/gomp/reduction3.f90", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e68954309d6a19f6008491b90da7bf0c78b3b6b1/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Freduction3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e68954309d6a19f6008491b90da7bf0c78b3b6b1/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Freduction3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Freduction3.f90?ref=e68954309d6a19f6008491b90da7bf0c78b3b6b1", "patch": "@@ -33,11 +33,6 @@ function ior (a, b)\n end subroutine f2\n subroutine f3\n   integer :: i\n-  interface\n-    function ior (a, b)\n-      integer :: ior, a, b\n-    end function\n-  end interface\n   intrinsic ior\n   i = 6\n !$omp parallel reduction (ior:i)"}, {"sha": "60b6e79690881ab77a105293d194bef338226a5d", "filename": "gcc/testsuite/gfortran.dg/interface_23.f90", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e68954309d6a19f6008491b90da7bf0c78b3b6b1/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_23.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e68954309d6a19f6008491b90da7bf0c78b3b6b1/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_23.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_23.f90?ref=e68954309d6a19f6008491b90da7bf0c78b3b6b1", "patch": "@@ -0,0 +1,35 @@\n+! { dg-do compile }\n+!\n+! This tests the fix for PR36325, which corrected for the fact that a\n+! specific or generic INTERFACE statement implies the EXTERNAL attibute.\n+!\n+! Contributed by Janus Weil <janus@gcc.gnu.org>\n+\n+module a\n+  interface\n+    subroutine foo\n+    end subroutine\n+  end interface\n+  external foo  ! { dg-error \"Duplicate EXTERNAL attribute\" }\n+end module\n+\n+module b\n+  interface\n+    function sin (x)\n+      real :: sin, x\n+    end function\n+  end interface\n+  intrinsic sin  ! { dg-error \"EXTERNAL attribute conflicts with INTRINSIC attribute\" }\n+end module\n+\n+! argument checking was not done for external procedures with explicit interface\n+program c\n+  interface\n+    subroutine bar(x)\n+      real :: x\n+    end subroutine\n+  end interface\n+  call bar()  ! { dg-error \"Missing actual argument\" }\n+end program\n+\n+! { dg-final { cleanup-modules \"a b\" } }"}, {"sha": "092c24d3614125dcba184063c5e4476714787e3d", "filename": "gcc/testsuite/gfortran.dg/proc_decl_12.f90", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e68954309d6a19f6008491b90da7bf0c78b3b6b1/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_decl_12.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e68954309d6a19f6008491b90da7bf0c78b3b6b1/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_decl_12.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_decl_12.f90?ref=e68954309d6a19f6008491b90da7bf0c78b3b6b1", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do run }\n+!\n+! This tests the (partial) fix for PR35830, i.e. handling array arguments\n+! with the PROCEDURE statement.\n+!\n+! Contributed by Janus Weil <janus@gcc.gnu.org>\n+\n+module m\n+contains\n+  subroutine one(a)\n+      integer a(1:3)\n+      if (any(a /= [1,2,3])) call abort()\n+  end subroutine one\n+end module m\n+\n+program test\n+  use m\n+  implicit none\n+  call foo(one)\n+contains\n+  subroutine foo(f)\n+    procedure(one) :: f\n+    call f([1,2,3])\n+  end subroutine foo\n+end program test\n+\n+! { dg-final { cleanup-modules \"m\" } }"}]}