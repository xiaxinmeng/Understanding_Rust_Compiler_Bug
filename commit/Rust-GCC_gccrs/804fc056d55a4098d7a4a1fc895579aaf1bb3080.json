{"sha": "804fc056d55a4098d7a4a1fc895579aaf1bb3080", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA0ZmMwNTZkNTVhNDA5OGQ3YTRhMWZjODk1NTc5YWFmMWJiMzA4MA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-01T13:21:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-01T13:21:34Z"}, "message": "[multiple changes]\n\n2012-10-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* checks.adb (Apply_Predicate_Check): If the predicate is a\n\tstatic one and the operand is static, evaluate the predicate at\n\tcompile time.\n\t* sem_eval.ads, sem_eval.adb (Eval_Static_Predicate_Check): new\n\tprocedure, to evaluate a static predicate check whenever possible.\n\t* sem_res.adb (Resolve_Type_Conversion): Apply predicate check\n\ton the conversion if the target type has predicates.\n\n2012-10-01  Vincent Pucci  <pucci@adacore.com>\n\n\t* sem_dim.adb (Has_Symbols): Complain if parameter Symbol has been\n\tprovided by the user in the dimension output call.\n\nFrom-SVN: r191921", "tree": {"sha": "3e50d4f87942db537688cbf1da9753c4af48b621", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e50d4f87942db537688cbf1da9753c4af48b621"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/804fc056d55a4098d7a4a1fc895579aaf1bb3080", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/804fc056d55a4098d7a4a1fc895579aaf1bb3080", "html_url": "https://github.com/Rust-GCC/gccrs/commit/804fc056d55a4098d7a4a1fc895579aaf1bb3080", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/804fc056d55a4098d7a4a1fc895579aaf1bb3080/comments", "author": null, "committer": null, "parents": [{"sha": "a91e9ac73ddc90a31f5f9afcbc73558cb0e56006", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a91e9ac73ddc90a31f5f9afcbc73558cb0e56006", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a91e9ac73ddc90a31f5f9afcbc73558cb0e56006"}], "stats": {"total": 130, "additions": 124, "deletions": 6}, "files": [{"sha": "cfade45d743de2217debd3639e94458042a16d42", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804fc056d55a4098d7a4a1fc895579aaf1bb3080/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804fc056d55a4098d7a4a1fc895579aaf1bb3080/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=804fc056d55a4098d7a4a1fc895579aaf1bb3080", "patch": "@@ -1,3 +1,18 @@\n+2012-10-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* checks.adb (Apply_Predicate_Check): If the predicate is a\n+\tstatic one and the operand is static, evaluate the predicate at\n+\tcompile time.\n+\t* sem_eval.ads, sem_eval.adb (Eval_Static_Predicate_Check): new\n+\tprocedure, to evaluate a static predicate check whenever possible.\n+\t* sem_res.adb (Resolve_Type_Conversion): Apply predicate check\n+\ton the conversion if the target type has predicates.\n+\n+2012-10-01  Vincent Pucci  <pucci@adacore.com>\n+\n+\t* sem_dim.adb (Has_Symbols): Complain if parameter Symbol has been\n+\tprovided by the user in the dimension output call.\n+\n 2012-10-01  Robert Dewar  <dewar@adacore.com>\n \n \t* checks.adb (Apply_Divide_Checks): New name for"}, {"sha": "12c2b6a28057b03dd31ed83343f59b90b96d1785", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804fc056d55a4098d7a4a1fc895579aaf1bb3080/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804fc056d55a4098d7a4a1fc895579aaf1bb3080/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=804fc056d55a4098d7a4a1fc895579aaf1bb3080", "patch": "@@ -2337,6 +2337,23 @@ package body Checks is\n                  (Sloc (N), Reason => SE_Infinite_Recursion));\n \n          else\n+\n+            --  If the predicate is a static predicate and the operand is\n+            --  static, the predicate must be evaluated statically. If the\n+            --  evaluation fails this is a static constraint error.\n+\n+            if Is_OK_Static_Expression (N) then\n+               if  Present (Static_Predicate (Typ)) then\n+                  if Eval_Static_Predicate_Check (N, Typ) then\n+                     return;\n+                  else\n+                     Error_Msg_NE\n+                       (\"static expression fails static predicate check on&\",\n+                          N, Typ);\n+                  end if;\n+               end if;\n+            end if;\n+\n             Insert_Action (N,\n               Make_Predicate_Check (Typ, Duplicate_Subexpr (N)));\n          end if;"}, {"sha": "4902ae35ca5113e6c524e01e5a30fe3315521422", "filename": "gcc/ada/sem_dim.adb", "status": "modified", "additions": 40, "deletions": 6, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804fc056d55a4098d7a4a1fc895579aaf1bb3080/gcc%2Fada%2Fsem_dim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804fc056d55a4098d7a4a1fc895579aaf1bb3080/gcc%2Fada%2Fsem_dim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.adb?ref=804fc056d55a4098d7a4a1fc895579aaf1bb3080", "patch": "@@ -2703,24 +2703,58 @@ package body Sem_Dim is\n       -----------------\n \n       function Has_Symbols return Boolean is\n-         Actual : Node_Id;\n+         Actual     : Node_Id;\n+         Actual_Str : Node_Id;\n \n       begin\n          Actual := First (Actuals);\n \n          --  Look for a symbols parameter association in the list of actuals\n \n          while Present (Actual) loop\n-            if Nkind (Actual) = N_Parameter_Association\n+            --  Positional parameter association case when the actual is a\n+            --  string literal.\n+\n+            if Nkind (Actual) = N_String_Literal then\n+               Actual_Str := Actual;\n+\n+            --  Named parameter association case when the selector name is\n+            --  Symbol.\n+\n+            elsif Nkind (Actual) = N_Parameter_Association\n               and then Chars (Selector_Name (Actual)) = Name_Symbol\n             then\n+               Actual_Str := Explicit_Actual_Parameter (Actual);\n+\n+            --  Ignore all other cases\n+\n+            else\n+               Actual_Str := Empty;\n+            end if;\n+\n+            if Present (Actual_Str) then\n                --  Return True if the actual comes from source or if the string\n                --  of symbols doesn't have the default value (i.e. it is \"\").\n \n-               return Comes_From_Source (Actual)\n-                 or else\n-                   String_Length\n-                     (Strval (Explicit_Actual_Parameter (Actual))) /= 0;\n+               if Comes_From_Source (Actual)\n+                 or else String_Length (Strval (Actual_Str)) /= 0\n+               then\n+                  --  Complain only if the actual comes from source or if it\n+                  --  hasn't been fully analyzed yet.\n+\n+                  if Comes_From_Source (Actual)\n+                    or else not Analyzed (Actual)\n+                  then\n+                     Error_Msg_N (\"Symbol parameter should not be provided\",\n+                                  Actual);\n+                     Error_Msg_N (\"\\reserved for compiler use only\", Actual);\n+                  end if;\n+\n+                  return True;\n+\n+               else\n+                  return False;\n+               end if;\n             end if;\n \n             Next (Actual);"}, {"sha": "933211a2d32a814732b6f0fdfa64c9602ecccefb", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804fc056d55a4098d7a4a1fc895579aaf1bb3080/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804fc056d55a4098d7a4a1fc895579aaf1bb3080/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=804fc056d55a4098d7a4a1fc895579aaf1bb3080", "patch": "@@ -3249,6 +3249,37 @@ package body Sem_Eval is\n       end if;\n    end Eval_Slice;\n \n+   ---------------------------------\n+   -- Eval_Static_Predicate_Check --\n+   ---------------------------------\n+\n+   function Eval_Static_Predicate_Check\n+     (N   : Node_Id;\n+      Typ : Entity_Id) return Boolean\n+   is\n+      Loc  : constant Source_Ptr := Sloc (N);\n+      Pred : constant List_Id := Static_Predicate (Typ);\n+      Test : Node_Id;\n+   begin\n+      if No (Pred) then\n+         return True;\n+      end if;\n+\n+      --  The static predicate is a list of alternatives in the proper format\n+      --  for an Ada 2012 membership test. If the argument is a literal, the\n+      --  membership test can be evaluated statically. The caller transforms\n+      --  a result of False into a static contraint error.\n+\n+      Test := Make_In (Loc,\n+         Left_Opnd    => New_Copy_Tree (N),\n+         Right_Opnd   => Empty,\n+         Alternatives => Pred);\n+      Analyze_And_Resolve (Test, Standard_Boolean);\n+\n+      return Nkind (Test) = N_Identifier\n+        and then Entity (Test) = Standard_True;\n+   end Eval_Static_Predicate_Check;\n+\n    -------------------------\n    -- Eval_String_Literal --\n    -------------------------"}, {"sha": "787e6d346c86334de7799e92c7e6b79acd666370", "filename": "gcc/ada/sem_eval.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804fc056d55a4098d7a4a1fc895579aaf1bb3080/gcc%2Fada%2Fsem_eval.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804fc056d55a4098d7a4a1fc895579aaf1bb3080/gcc%2Fada%2Fsem_eval.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.ads?ref=804fc056d55a4098d7a4a1fc895579aaf1bb3080", "patch": "@@ -317,6 +317,11 @@ package Sem_Eval is\n    procedure Eval_Unary_Op               (N : Node_Id);\n    procedure Eval_Unchecked_Conversion   (N : Node_Id);\n \n+   function Eval_Static_Predicate_Check\n+     (N  : Node_Id;\n+     Typ : Entity_Id) return Boolean;\n+   --  Evaluate a static predicate check applied to a scalar literal.\n+\n    procedure Fold_Str (N : Node_Id; Val : String_Id; Static : Boolean);\n    --  Rewrite N with a new N_String_Literal node as the result of the compile\n    --  time evaluation of the node N. Val is the resulting string value from"}, {"sha": "d2baee4d64554b4d12afc05f4e5a17d6f49aeb3e", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/804fc056d55a4098d7a4a1fc895579aaf1bb3080/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/804fc056d55a4098d7a4a1fc895579aaf1bb3080/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=804fc056d55a4098d7a4a1fc895579aaf1bb3080", "patch": "@@ -9713,6 +9713,22 @@ package body Sem_Res is\n             end if;\n          end;\n       end if;\n+\n+      --  Ada 2012: if target type has predicates, the result requires a\n+      --  predicate check. If the context is a call to another predicate\n+      --  check we must prevent infinite recursion.\n+\n+      if Has_Predicates (Target_Typ) then\n+         if Nkind (Parent (N)) = N_Function_Call\n+           and then Present (Name (Parent (N)))\n+           and then Has_Predicates (Entity (Name (Parent (N))))\n+         then\n+            null;\n+\n+         else\n+            Apply_Predicate_Check (N, Target_Typ);\n+         end if;\n+      end if;\n    end Resolve_Type_Conversion;\n \n    ----------------------"}]}