{"sha": "4ac0968744362763aa58b43608edb0c7997cb35b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFjMDk2ODc0NDM2Mjc2M2FhNThiNDM2MDhlZGIwYzc5OTdjYjM1Yg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-16T20:18:54Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-16T20:18:54Z"}, "message": "Use #ifdef TARGET_EDOM, not #if.\n\nFrom-SVN: r7307", "tree": {"sha": "b7cd28edfbd1d8f64a125d9c409dc9576d0c1b09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7cd28edfbd1d8f64a125d9c409dc9576d0c1b09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ac0968744362763aa58b43608edb0c7997cb35b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ac0968744362763aa58b43608edb0c7997cb35b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ac0968744362763aa58b43608edb0c7997cb35b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ac0968744362763aa58b43608edb0c7997cb35b/comments", "author": null, "committer": null, "parents": [{"sha": "930b4e398ec14f8ea10acb0451655802ed4bb134", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/930b4e398ec14f8ea10acb0451655802ed4bb134", "html_url": "https://github.com/Rust-GCC/gccrs/commit/930b4e398ec14f8ea10acb0451655802ed4bb134"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "9910a5a59c73de13032683023790a210a988bf6e", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac0968744362763aa58b43608edb0c7997cb35b/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac0968744362763aa58b43608edb0c7997cb35b/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=4ac0968744362763aa58b43608edb0c7997cb35b", "patch": "@@ -6805,7 +6805,7 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \t  emit_cmp_insn (target, target, EQ, 0, GET_MODE (target), 0, 0);\n \t  emit_jump_insn (gen_beq (lab1));\n \n-#if TARGET_EDOM\n+#ifdef TARGET_EDOM\n \t  {\n #ifdef GEN_ERRNO_RTX\n \t    rtx errno_rtx = GEN_ERRNO_RTX;"}]}