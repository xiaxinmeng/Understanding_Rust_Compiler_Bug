{"sha": "6c52831d98b00d02a3c11b46fbf80991ef0dc0fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM1MjgzMWQ5OGIwMGQwMmEzYzExYjQ2ZmJmODA5OTFlZjBkYzBmYQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-05-23T14:28:35Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-05-23T14:28:35Z"}, "message": "Move symtab_node::dump_table to symbol_table::dump\n\n2017-05-23  Martin Liska  <mliska@suse.cz>\n\n\t* cgraph.h: Move symtab_node::dump_table to symbol_table::dump\n\tand symtab_node::debug_symtab to symbol_table::debug.\n\t* cgraphunit.c (analyze_functions): Use the renamed function.\n\t(symbol_table::compile): Likewise.\n\t* ipa-cp.c (ipcp_verify_propagated_values): Likewise.\n\t* ipa-icf.c (sem_item_optimizer::execute): Likewise.\n\t* passes.c (execute_todo): Likewise.\n\t* symtab.c (symbol_table::dump): New function.\n\t* tree-ssa-structalias.c (ipa_pta_execute): Use the renamed function.\n2017-05-23  Martin Liska  <mliska@suse.cz>\n\n\t* lto.c (read_cgraph_and_symbols): Use the renamed function.\n\t(do_whole_program_analysis): Use the renamed function.\n\nFrom-SVN: r248368", "tree": {"sha": "ace1eea3c695f1c68c60b7dfba0d5ba8292ddef7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ace1eea3c695f1c68c60b7dfba0d5ba8292ddef7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3494e738cf975b8220002a25c9de4d616a60ac46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3494e738cf975b8220002a25c9de4d616a60ac46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3494e738cf975b8220002a25c9de4d616a60ac46"}], "stats": {"total": 67, "additions": 38, "deletions": 29}, "files": [{"sha": "4c0b64d7b4079680c59b38cc7bd4d971fd7c839c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c52831d98b00d02a3c11b46fbf80991ef0dc0fa", "patch": "@@ -1,3 +1,15 @@\n+2017-05-23  Martin Liska  <mliska@suse.cz>\n+\n+\t* cgraph.h: Move symtab_node::dump_table to symbol_table::dump\n+\tand symtab_node::debug_symtab to symbol_table::debug.\n+\t* cgraphunit.c (analyze_functions): Use the renamed function.\n+\t(symbol_table::compile): Likewise.\n+\t* ipa-cp.c (ipcp_verify_propagated_values): Likewise.\n+\t* ipa-icf.c (sem_item_optimizer::execute): Likewise.\n+\t* passes.c (execute_todo): Likewise.\n+\t* symtab.c (symbol_table::dump): New function.\n+\t* tree-ssa-structalias.c (ipa_pta_execute): Use the renamed function.\n+\n 2017-05-23  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-fnsummary.c (estimate_node_size_and_time): Do not sanity check"}, {"sha": "e07a7dd425037cfcf0c39185ddfba5262ec75934", "filename": "gcc/cgraph.h", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=6c52831d98b00d02a3c11b46fbf80991ef0dc0fa", "patch": "@@ -411,12 +411,6 @@ class GTY((desc (\"%h.type\"), tag (\"SYMTAB_SYMBOL\"),\n      Return NULL if there's no such node.  */\n   static symtab_node *get_for_asmname (const_tree asmname);\n \n-  /* Dump symbol table to F.  */\n-  static void dump_table (FILE *);\n-\n-  /* Dump symbol table to stderr.  */\n-  static void DEBUG_FUNCTION debug_symtab (void);\n-\n   /* Verify symbol table for internal consistency.  */\n   static DEBUG_FUNCTION void verify_symtab_nodes (void);\n \n@@ -2178,6 +2172,15 @@ class GTY((tag (\"SYMTAB\"))) symbol_table\n   /* Set the DECL_ASSEMBLER_NAME and update symtab hashtables.  */\n   void change_decl_assembler_name (tree decl, tree name);\n \n+  /* Dump symbol table to F.  */\n+  void dump (FILE *f);\n+\n+  /* Dump symbol table to stderr.  */\n+  inline DEBUG_FUNCTION void debug (void)\n+  {\n+    dump (stderr);\n+  }\n+\n   /* Return true if assembler names NAME1 and NAME2 leads to the same symbol\n      name.  */\n   static bool assembler_names_equal_p (const char *name1, const char *name2);"}, {"sha": "34f8aaba128ddd42dc7fc48fdc4d0f91e3b30376", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=6c52831d98b00d02a3c11b46fbf80991ef0dc0fa", "patch": "@@ -1208,7 +1208,7 @@ analyze_functions (bool first_time)\n   if (symtab->dump_file)\n     {\n       fprintf (symtab->dump_file, \"\\n\\nInitial \");\n-      symtab_node::dump_table (symtab->dump_file);\n+      symtab->dump (symtab->dump_file);\n     }\n \n   if (first_time)\n@@ -1278,7 +1278,7 @@ analyze_functions (bool first_time)\n   if (symtab->dump_file)\n     {\n       fprintf (symtab->dump_file, \"\\n\\nReclaimed \");\n-      symtab_node::dump_table (symtab->dump_file);\n+      symtab->dump (symtab->dump_file);\n     }\n   bitmap_obstack_release (NULL);\n   ggc_collect ();\n@@ -2485,7 +2485,7 @@ symbol_table::compile (void)\n   if (dump_file)\n     {\n       fprintf (dump_file, \"Optimized \");\n-      symtab_node:: dump_table (dump_file);\n+      symtab->dump (dump_file);\n     }\n   if (post_ipa_mem_report)\n     {\n@@ -2551,7 +2551,7 @@ symbol_table::compile (void)\n   if (dump_file)\n     {\n       fprintf (dump_file, \"\\nFinal \");\n-      symtab_node::dump_table (dump_file);\n+      symtab->dump (dump_file);\n     }\n   if (!flag_checking)\n     return;"}, {"sha": "f35e5159a765e67440c22b86aa59266df7720118", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=6c52831d98b00d02a3c11b46fbf80991ef0dc0fa", "patch": "@@ -1399,7 +1399,7 @@ ipcp_verify_propagated_values (void)\n \t    {\n \t      if (dump_file)\n \t\t{\n-\t\t  symtab_node::dump_table (dump_file);\n+\t\t  symtab->dump (dump_file);\n \t\t  fprintf (dump_file, \"\\nIPA lattices after constant \"\n \t\t\t   \"propagation, before gcc_unreachable:\\n\");\n \t\t  print_all_lattices (dump_file, true, false);"}, {"sha": "c5b5bd34d67d7eb71233c3400a18fc7ad05e9847", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=6c52831d98b00d02a3c11b46fbf80991ef0dc0fa", "patch": "@@ -2643,7 +2643,7 @@ sem_item_optimizer::execute (void)\n   bool merged_p = merge_classes (prev_class_count);\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n-    symtab_node::dump_table (dump_file);\n+    symtab->dump (dump_file);\n \n   return merged_p;\n }"}, {"sha": "2d8e95b8c313f6cfdde04227bd483183530a3cc5", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=6c52831d98b00d02a3c11b46fbf80991ef0dc0fa", "patch": "@@ -1,3 +1,8 @@\n+2017-05-23  Martin Liska  <mliska@suse.cz>\n+\n+\t* lto.c (read_cgraph_and_symbols): Use the renamed function.\n+\t(do_whole_program_analysis): Use the renamed function.\n+\n 2017-05-22  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* lto.c: Replace ipa-inline.h by ipa-fnsummary.h"}, {"sha": "6671d8a9622fca805c7d152fc0f566761617cb64", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=6c52831d98b00d02a3c11b46fbf80991ef0dc0fa", "patch": "@@ -2927,7 +2927,7 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n   if (symtab->dump_file)\n     {\n       fprintf (symtab->dump_file, \"Before merging:\\n\");\n-      symtab_node::dump_table (symtab->dump_file);\n+      symtab->dump (symtab->dump_file);\n     }\n   if (!flag_ltrans)\n     {\n@@ -3092,7 +3092,7 @@ do_whole_program_analysis (void)\n   symtab->function_flags_ready = true;\n \n   if (symtab->dump_file)\n-    symtab_node::dump_table (symtab->dump_file);\n+    symtab->dump (symtab->dump_file);\n   bitmap_obstack_initialize (NULL);\n   symtab->state = IPA_SSA;\n \n@@ -3105,7 +3105,7 @@ do_whole_program_analysis (void)\n   if (symtab->dump_file)\n     {\n       fprintf (symtab->dump_file, \"Optimized \");\n-      symtab_node::dump_table (symtab->dump_file);\n+      symtab->dump (symtab->dump_file);\n     }\n \n   symtab_node::checking_verify_symtab_nodes ();"}, {"sha": "98e05e4ba7add538d9e2882c2bda5c3096f23a13", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=6c52831d98b00d02a3c11b46fbf80991ef0dc0fa", "patch": "@@ -2040,7 +2040,7 @@ execute_todo (unsigned int flags)\n   if ((flags & TODO_dump_symtab) && dump_file && !current_function_decl)\n     {\n       gcc_assert (!cfun);\n-      symtab_node::dump_table (dump_file);\n+      symtab->dump (dump_file);\n       /* Flush the file.  If verification fails, we won't be able to\n \t close the file before aborting.  */\n       fflush (dump_file);"}, {"sha": "13dca7f0dbda23db3576f26e713ebeadc85a74b5", "filename": "gcc/symtab.c", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa/gcc%2Fsymtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa/gcc%2Fsymtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsymtab.c?ref=6c52831d98b00d02a3c11b46fbf80991ef0dc0fa", "patch": "@@ -913,26 +913,15 @@ symtab_node::dump (FILE *f)\n     vnode->dump (f);\n }\n \n-/* Dump symbol table to F.  */\n-\n void\n-symtab_node::dump_table (FILE *f)\n+symbol_table::dump (FILE *f)\n {\n   symtab_node *node;\n   fprintf (f, \"Symbol table:\\n\\n\");\n   FOR_EACH_SYMBOL (node)\n     node->dump (f);\n }\n \n-/* Dump symbol table to stderr.  */\n-\n-DEBUG_FUNCTION void\n-symtab_node::debug_symtab (void)\n-{\n-  dump_table (stderr);\n-}\n-\n-\n /* Return the cgraph node that has ASMNAME for its DECL_ASSEMBLER_NAME.\n    Return NULL if there's no such node.  */\n "}, {"sha": "a4abd28c57ac06f1dee49263e881343bdd1a86c7", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c52831d98b00d02a3c11b46fbf80991ef0dc0fa/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=6c52831d98b00d02a3c11b46fbf80991ef0dc0fa", "patch": "@@ -7800,7 +7800,7 @@ ipa_pta_execute (void)\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n-      symtab_node::dump_table (dump_file);\n+      symtab->dump (dump_file);\n       fprintf (dump_file, \"\\n\");\n     }\n "}]}