{"sha": "c704c83cbd4edda438c056fcd2c9f27eeb2497fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzcwNGM4M2NiZDRlZGRhNDM4YzA1NmZjZDJjOWYyN2VlYjI0OTdmYw==", "commit": {"author": {"name": "Anthony Green", "email": "green@cygnus.com", "date": "1999-07-05T13:35:21Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "1999-07-05T13:35:21Z"}, "message": "URL.java (equals): Compare strings using String.equals.\n\n\t* java/net/URL.java (equals): Compare strings using String.equals.\n\t* java/net/URL.java (sameFile): Ditto.\n\nFrom-SVN: r27947", "tree": {"sha": "55d01fcc3072c77eb98a8cd5ef64451f2ed1c8c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55d01fcc3072c77eb98a8cd5ef64451f2ed1c8c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c704c83cbd4edda438c056fcd2c9f27eeb2497fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c704c83cbd4edda438c056fcd2c9f27eeb2497fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c704c83cbd4edda438c056fcd2c9f27eeb2497fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c704c83cbd4edda438c056fcd2c9f27eeb2497fc/comments", "author": null, "committer": null, "parents": [{"sha": "9d59f3071fe2cfa08960063b0d1c78f86d4b5e0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d59f3071fe2cfa08960063b0d1c78f86d4b5e0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d59f3071fe2cfa08960063b0d1c78f86d4b5e0e"}], "stats": {"total": 37, "additions": 27, "deletions": 10}, "files": [{"sha": "fc983da443a28e01499f09e48195db92a11c14ea", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c704c83cbd4edda438c056fcd2c9f27eeb2497fc/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c704c83cbd4edda438c056fcd2c9f27eeb2497fc/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=c704c83cbd4edda438c056fcd2c9f27eeb2497fc", "patch": "@@ -1,3 +1,8 @@\n+Mon Jul  5 12:01:35 1999  Anthony Green  <green@cygnus.com>\n+\n+\t* java/net/URL.java (equals): Compare strings using String.equals.\n+\t* java/net/URL.java (sameFile): Ditto.\n+\n 1999-07-02  Warren Levy  <warrenl@cygnus.com>\n \n \t* configure: Rebuilt."}, {"sha": "d2f0bc23dd9aef7e1d7a75f171280d86112183a1", "filename": "libjava/java/net/URL.java", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c704c83cbd4edda438c056fcd2c9f27eeb2497fc/libjava%2Fjava%2Fnet%2FURL.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c704c83cbd4edda438c056fcd2c9f27eeb2497fc/libjava%2Fjava%2Fnet%2FURL.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURL.java?ref=c704c83cbd4edda438c056fcd2c9f27eeb2497fc", "patch": "@@ -189,11 +189,18 @@ public boolean equals(Object obj)\n       return false;\n \n     URL uObj = (URL) obj;\n-    if (protocol != uObj.protocol || host != uObj.host || port != uObj.port ||\n-\tfile != uObj.file || ref != uObj.ref)\n-      return false;\n-\n-    return true;\n+    \n+    // This comparison is very conservative.  It assumes that any\n+    // field can be null.\n+    return (port == uObj.port\n+\t    && ((protocol == null && uObj.protocol == null)\n+\t\t|| (protocol != null && protocol.equals(uObj.protocol)))\n+\t    && ((host == null && uObj.host == null)\n+\t\t|| (host != null && host.equals(uObj.host)))\n+\t    && ((file == null && uObj.file == null)\n+\t\t|| (file != null && file.equals(uObj.file)))\n+\t    && ((ref == null && uObj.ref == null)\n+\t\t|| (ref != null && ref.equals(uObj.ref))));\n   }\n \n   public final Object getContent() throws IOException\n@@ -258,11 +265,16 @@ public final InputStream openStream() throws IOException\n \n   public boolean sameFile(URL other)\n   {\n-    if (other == null || protocol != other.protocol || host != other.host ||\n-\tport != other.port || file != other.file)\n-      return false;\n-\n-    return true;\n+    // This comparison is very conservative.  It assumes that any\n+    // field can be null.\n+    return (other != null \n+\t    && port == other.port\n+\t    && ((protocol == null && other.protocol == null)\n+\t\t|| (protocol != null && protocol.equals(other.protocol)))\n+\t    && ((host == null && other.host == null)\n+\t\t|| (host != null && host.equals(other.host)))\n+\t    && ((file == null && other.file == null)\n+\t\t|| (file != null && file.equals(other.file))));\n   }\n \n   protected void set(String protocol, String host, int port, String file,"}]}