{"sha": "51d49bc21877f8fb9850e30ef168f71ea6d164e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFkNDliYzIxODc3ZjhmYjk4NTBlMzBlZjE2OGY3MWVhNmQxNjRlOA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-07-08T08:12:07Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-07-08T08:12:07Z"}, "message": "dwarf2out.c (AT_linkage_name): Delete.\n\n\t* dwarf2out.c (AT_linkage_name): Delete.\n\t(add_linkage_attr): New function.\n\t(add_linkage_name): Call it to emit the linkage attribute.\n\t(dwarf2out_finish): Likewise.\n\t(move_linkage_attr): Explicitly accept both attribute variants.\n\nFrom-SVN: r161944", "tree": {"sha": "26d0738f7dca8510662fa1bf2b76f5b8bff98445", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26d0738f7dca8510662fa1bf2b76f5b8bff98445"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51d49bc21877f8fb9850e30ef168f71ea6d164e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51d49bc21877f8fb9850e30ef168f71ea6d164e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51d49bc21877f8fb9850e30ef168f71ea6d164e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51d49bc21877f8fb9850e30ef168f71ea6d164e8/comments", "author": null, "committer": null, "parents": [{"sha": "718f9c0f875a2f6d0fd5ed20a78113f1a69d6bed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/718f9c0f875a2f6d0fd5ed20a78113f1a69d6bed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/718f9c0f875a2f6d0fd5ed20a78113f1a69d6bed"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "e374743e85417acc01e4c4ab80120a506176b4f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51d49bc21877f8fb9850e30ef168f71ea6d164e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51d49bc21877f8fb9850e30ef168f71ea6d164e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=51d49bc21877f8fb9850e30ef168f71ea6d164e8", "patch": "@@ -1,3 +1,11 @@\n+2010-07-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* dwarf2out.c (AT_linkage_name): Delete.\n+\t(add_linkage_attr): New function.\n+\t(add_linkage_name): Call it to emit the linkage attribute.\n+\t(dwarf2out_finish): Likewise.\n+\t(move_linkage_attr): Explicitly accept both attribute variants.\n+\n 2010-07-08  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \t* toplev.h: Do not include diagnostic-core.h."}, {"sha": "5340ffc64f4519f35b6086131fe1ea639456fdb1", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51d49bc21877f8fb9850e30ef168f71ea6d164e8/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51d49bc21877f8fb9850e30ef168f71ea6d164e8/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=51d49bc21877f8fb9850e30ef168f71ea6d164e8", "patch": "@@ -6385,11 +6385,6 @@ static void gen_remaining_tmpl_value_param_die_attribute (void);\n #define DEBUG_MACINFO_SECTION_LABEL     \"Ldebug_macinfo\"\n #endif\n \n-/* Mangled name attribute to use.  This used to be a vendor extension\n-   until DWARF 4 standardized it.  */\n-#define AT_linkage_name \\\n-  (dwarf_version >= 4 ? DW_AT_linkage_name : DW_AT_MIPS_linkage_name)\n-\n \n /* Definitions of defaults for formats and names of various special\n    (artificial) labels which may be generated within this file (when the -g\n@@ -17384,6 +17379,25 @@ add_pure_or_virtual_attribute (dw_die_ref die, tree func_decl)\n     }\n }\n \f\n+/* Add a DW_AT_linkage_name or DW_AT_MIPS_linkage_name attribute for the\n+   given decl.  This used to be a vendor extension until after DWARF 4\n+   standardized it.  */\n+\n+static void\n+add_linkage_attr (dw_die_ref die, tree decl)\n+{\n+  const char *name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n+\n+  /* Mimic what assemble_name_raw does with a leading '*'.  */\n+  if (name[0] == '*')\n+    name = &name[1];\n+\n+  if (dwarf_version >= 4)\n+    add_AT_string (die, DW_AT_linkage_name, name);\n+  else\n+    add_AT_string (die, DW_AT_MIPS_linkage_name, name);\n+}\n+\n /* Add source coordinate attributes for the given decl.  */\n \n static void\n@@ -17418,8 +17432,7 @@ add_linkage_name (dw_die_ref die, tree decl)\n \t  deferred_asm_name = asm_name;\n \t}\n       else if (DECL_ASSEMBLER_NAME (decl) != DECL_NAME (decl))\n-\tadd_AT_string (die, AT_linkage_name,\n-\t\t       IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl)));\n+\tadd_linkage_attr (die, decl);\n     }\n }\n \n@@ -22017,7 +22030,8 @@ move_linkage_attr (dw_die_ref die)\n   unsigned ix = VEC_length (dw_attr_node, die->die_attr);\n   dw_attr_node linkage = *VEC_index (dw_attr_node, die->die_attr, ix - 1);\n \n-  gcc_assert (linkage.dw_attr == AT_linkage_name);\n+  gcc_assert (linkage.dw_attr == DW_AT_linkage_name\n+\t      || linkage.dw_attr == DW_AT_MIPS_linkage_name);\n \n   while (--ix > 0)\n     {\n@@ -22250,8 +22264,7 @@ dwarf2out_finish (const char *filename)\n       tree decl = node->created_for;\n       if (DECL_ASSEMBLER_NAME (decl) != DECL_NAME (decl))\n \t{\n-\t  add_AT_string (node->die, AT_linkage_name,\n-\t\t\t IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl)));\n+\t  add_linkage_attr (node->die, decl);\n \t  move_linkage_attr (node->die);\n \t}\n     }"}]}