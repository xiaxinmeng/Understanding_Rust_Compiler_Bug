{"sha": "4143349751326d2804faad1a7d2cc55e647bd4ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE0MzM0OTc1MTMyNmQyODA0ZmFhZDFhN2QyY2M1NWU2NDdiZDRhZA==", "commit": {"author": {"name": "Bernhard Fischer", "email": "aldot@gcc.gnu.org", "date": "2006-10-31T23:38:58Z"}, "committer": {"name": "Bernhard Reutner-Fischer", "email": "aldot@gcc.gnu.org", "date": "2006-10-31T23:38:58Z"}, "message": "re PR fortran/29537 (ICE in gfc_match_common for blank common in BLOCK DATA unit)\n\nfortran/ChangeLog:\n2006-11-01  Bernhard Fischer  <aldot@gcc.gnu.org>\n\n        PR fortran/29537\n        * trans-common.c (gfc_trans_common): If the blank common is\n        in a procedure or program without a name then proc_name is null, so use\n        the locus of the common.\n        (gfc_sym_mangled_common_id): Fix whitespace.\n        * match.c (gfc_match_common): Emit warning about blank common in\n        block data.\n\ntestsuite/ChangeLog:\n2006-11-01  Bernhard Fischer  <aldot@gcc.gnu.org>\n\n        PR fortran/29537\n        * gfortran.dg/blockdata_1.f90: Add warning about blank common in block\n\tdata.\n        * gfortran.dg/blockdata_2.f90: New testcase.\n\nFrom-SVN: r118347", "tree": {"sha": "c625ef375d766085812e0b32d7cc941024b9531e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c625ef375d766085812e0b32d7cc941024b9531e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4143349751326d2804faad1a7d2cc55e647bd4ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4143349751326d2804faad1a7d2cc55e647bd4ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4143349751326d2804faad1a7d2cc55e647bd4ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4143349751326d2804faad1a7d2cc55e647bd4ad/comments", "author": null, "committer": null, "parents": [{"sha": "af9d09936281796e6341ad77b210f5a9b257aad3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af9d09936281796e6341ad77b210f5a9b257aad3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af9d09936281796e6341ad77b210f5a9b257aad3"}], "stats": {"total": 45, "additions": 39, "deletions": 6}, "files": [{"sha": "e9ba75fe3b4b2eb6ce38c061869a073f28c419dc", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4143349751326d2804faad1a7d2cc55e647bd4ad/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4143349751326d2804faad1a7d2cc55e647bd4ad/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4143349751326d2804faad1a7d2cc55e647bd4ad", "patch": "@@ -1,3 +1,13 @@\n+2006-11-01  Bernhard Fischer  <aldot@gcc.gnu.org>\n+\n+\tPR fortran/29537\n+\t* trans-common.c (gfc_trans_common): If the blank common is\n+\tin a procedure or program without a name then proc_name is null, so\n+\tuse the locus of the common.\n+\t(gfc_sym_mangled_common_id): Fix whitespace.\n+\t* match.c (gfc_match_common): Emit warning about blank common in\n+\tblock data.\n+\n 2006-10-31  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR fortran/29067"}, {"sha": "5012c3588ee368fce1295439d76049a063cb308a", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4143349751326d2804faad1a7d2cc55e647bd4ad/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4143349751326d2804faad1a7d2cc55e647bd4ad/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=4143349751326d2804faad1a7d2cc55e647bd4ad", "patch": "@@ -2327,16 +2327,19 @@ gfc_match_common (void)\n \n       if (name[0] == '\\0')\n \t{\n+\t  if (gfc_current_ns->is_block_data)\n+\t    {\n+\t      gfc_warning (\"BLOCK DATA unit cannot contain blank COMMON at %C\");\n+\t    }\n \t  t = &gfc_current_ns->blank_common;\n \t  if (t->head == NULL)\n \t    t->where = gfc_current_locus;\n-\t  head = &t->head;\n \t}\n       else\n \t{\n \t  t = gfc_get_common (name, 0);\n-\t  head = &t->head;\n \t}\n+      head = &t->head;\n \n       if (*head == NULL)\n \ttail = NULL;"}, {"sha": "83da32f52347aa9d1b41c2426fb5882f9ffb1909", "filename": "gcc/fortran/trans-common.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4143349751326d2804faad1a7d2cc55e647bd4ad/gcc%2Ffortran%2Ftrans-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4143349751326d2804faad1a7d2cc55e647bd4ad/gcc%2Ffortran%2Ftrans-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-common.c?ref=4143349751326d2804faad1a7d2cc55e647bd4ad", "patch": "@@ -219,7 +219,7 @@ add_segments (segment_info *list, segment_info *v)\n /* Construct mangled common block name from symbol name.  */\n \n static tree\n-gfc_sym_mangled_common_id (const char  *name)\n+gfc_sym_mangled_common_id (const char *name)\n {\n   int has_underscore;\n   char mangled_name[GFC_MAX_MANGLED_SYMBOL_LEN + 1];\n@@ -1054,13 +1054,18 @@ gfc_trans_common (gfc_namespace *ns)\n   if (ns->blank_common.head != NULL)\n     {\n       c = gfc_get_common_head ();\n+\n       /* We've lost the real location, so use the location of the\n \t enclosing procedure.  */\n-      c->where = ns->proc_name->declared_at;\n+      if (ns->proc_name != NULL)\n+\tc->where = ns->proc_name->declared_at;\n+      else\n+\tc->where = ns->blank_common.head->common_head->where;\n+\n       strcpy (c->name, BLANK_COMMON_NAME);\n       translate_common (c, ns->blank_common.head);\n     }\n- \n+\n   /* Translate all named common blocks.  */\n   gfc_traverse_symtree (ns->common_root, named_common);\n "}, {"sha": "12e6d5d58a0b2b3bd86b524c575c33e3c209fb6a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4143349751326d2804faad1a7d2cc55e647bd4ad/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4143349751326d2804faad1a7d2cc55e647bd4ad/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4143349751326d2804faad1a7d2cc55e647bd4ad", "patch": "@@ -1,3 +1,10 @@\n+2006-11-01  Bernhard Fischer  <aldot@gcc.gnu.org>\n+\n+\tPR fortran/29537\n+\t* gfortran.dg/blockdata_1.f90: Add warning about blank common in block\n+\tdata.\n+\t* gfortran.dg/blockdata_2.f90: New testcase.\n+\n 2006-10-31  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \tPR libfortran/29627"}, {"sha": "81cd02cc90b5d9ece62d151670823f2cd06bba8d", "filename": "gcc/testsuite/gfortran.dg/blockdata_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4143349751326d2804faad1a7d2cc55e647bd4ad/gcc%2Ftestsuite%2Fgfortran.dg%2Fblockdata_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4143349751326d2804faad1a7d2cc55e647bd4ad/gcc%2Ftestsuite%2Fgfortran.dg%2Fblockdata_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fblockdata_1.f90?ref=4143349751326d2804faad1a7d2cc55e647bd4ad", "patch": "@@ -14,7 +14,7 @@\n \n block data d2\n  common /b/ u\n- common j\n+ common j ! { dg-warning \"cannot contain blank COMMON\" }\n  data j /1/\n end block data d2\n !"}, {"sha": "a1370c8b54b8d34f80767749eac1472385882c77", "filename": "gcc/testsuite/gfortran.dg/blockdata_2.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4143349751326d2804faad1a7d2cc55e647bd4ad/gcc%2Ftestsuite%2Fgfortran.dg%2Fblockdata_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4143349751326d2804faad1a7d2cc55e647bd4ad/gcc%2Ftestsuite%2Fgfortran.dg%2Fblockdata_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fblockdata_2.f90?ref=4143349751326d2804faad1a7d2cc55e647bd4ad", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile }\n+! Test for pr29537 where we did ICE trying to dereference the NULL\n+! proc_name from an unnamed block data which we intended to use as locus\n+! for a blank common.\n+block data\n+  common c ! { dg-warning \"cannot contain blank COMMON\" }\n+end !block data\n+end"}]}