{"sha": "8c86248e5830cf6c3c05c8ab851b1e8fe90551d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM4NjI0OGU1ODMwY2Y2YzNjMDVjOGFiODUxYjFlOGZlOTA1NTFkMA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-12-01T19:13:12Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-12-01T19:13:12Z"}, "message": "lto-streamer-out.c (hash_tree): Do not stream TYPE_ALIAS_SET.\n\n\t* lto-streamer-out.c (hash_tree): Do not stream TYPE_ALIAS_SET.\n\t* tree-streamer-out.c (pack_ts_type_common_value_fields): Do not\n\tstream TYPE_ALIAS_SET.\n\t* tree-streamer-in.c (unpack_ts_type_common_value_fields): Do not\n\tstream TYPE_ALIAS_SET.\n\n\t* lto.c (compare_tree_sccs_1): Do not compare TYPE_ALIAS_SET.\n\nFrom-SVN: r231124", "tree": {"sha": "c3f43c3a966b65d89c40c0d8c8ccc277127f2c44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3f43c3a966b65d89c40c0d8c8ccc277127f2c44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c86248e5830cf6c3c05c8ab851b1e8fe90551d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c86248e5830cf6c3c05c8ab851b1e8fe90551d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c86248e5830cf6c3c05c8ab851b1e8fe90551d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c86248e5830cf6c3c05c8ab851b1e8fe90551d0/comments", "author": null, "committer": null, "parents": [{"sha": "ac8560785fa3acc879722cfc1a8afd0b911880c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac8560785fa3acc879722cfc1a8afd0b911880c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac8560785fa3acc879722cfc1a8afd0b911880c6"}], "stats": {"total": 31, "additions": 18, "deletions": 13}, "files": [{"sha": "d5aa3d6e3c80b6facd5ccaabf5e9f8563060f611", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c86248e5830cf6c3c05c8ab851b1e8fe90551d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c86248e5830cf6c3c05c8ab851b1e8fe90551d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c86248e5830cf6c3c05c8ab851b1e8fe90551d0", "patch": "@@ -1,3 +1,11 @@\n+2015-12-01  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* lto-streamer-out.c (hash_tree): Do not stream TYPE_ALIAS_SET.\n+\t* tree-streamer-out.c (pack_ts_type_common_value_fields): Do not\n+\tstream TYPE_ALIAS_SET.\n+\t* tree-streamer-in.c (unpack_ts_type_common_value_fields): Do not\n+\tstream TYPE_ALIAS_SET.\n+\n 2015-12-01  Nathan Sidwell  <nathan@acm.org>\n \n \t* config/nvptx/nvptx.c (nvptx_function_arg_advance): Don't"}, {"sha": "8928873bcc2be6d26ce20fbf8e7cb6c8a4ba15e8", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c86248e5830cf6c3c05c8ab851b1e8fe90551d0/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c86248e5830cf6c3c05c8ab851b1e8fe90551d0/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=8c86248e5830cf6c3c05c8ab851b1e8fe90551d0", "patch": "@@ -1109,10 +1109,6 @@ hash_tree (struct streamer_tree_cache_d *cache, hash_map<tree, hashval_t> *map,\n       hstate.commit_flag ();\n       hstate.add_int (TYPE_PRECISION (t));\n       hstate.add_int (TYPE_ALIGN (t));\n-      hstate.add_int ((TYPE_ALIAS_SET (t) == 0\n-\t\t\t\t\t || (!in_lto_p\n-\t\t\t\t\t     && get_alias_set (t) == 0))\n-\t\t\t\t\t? 0 : -1);\n     }\n \n   if (CODE_CONTAINS_STRUCT (code, TS_TRANSLATION_UNIT_DECL))"}, {"sha": "a508999e0f6558f3e374f0c9bf17852d2f2b5244", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c86248e5830cf6c3c05c8ab851b1e8fe90551d0/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c86248e5830cf6c3c05c8ab851b1e8fe90551d0/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=8c86248e5830cf6c3c05c8ab851b1e8fe90551d0", "patch": "@@ -1,3 +1,7 @@\n+2015-12-01  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* lto.c (compare_tree_sccs_1): Do not compare TYPE_ALIAS_SET.\n+\n 2015-11-25  Jan Hubicka  <jh@suse.cz>\n \n \t* lto-lang.c (lto_post_options): Process flag_lto_linker_output."}, {"sha": "dcfa3c868f34b5b7ce0149f0d0f70eef8c0d0467", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c86248e5830cf6c3c05c8ab851b1e8fe90551d0/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c86248e5830cf6c3c05c8ab851b1e8fe90551d0/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=8c86248e5830cf6c3c05c8ab851b1e8fe90551d0", "patch": "@@ -1166,7 +1166,9 @@ compare_tree_sccs_1 (tree t1, tree t2, tree **map)\n       compare_values (TYPE_READONLY);\n       compare_values (TYPE_PRECISION);\n       compare_values (TYPE_ALIGN);\n-      compare_values (TYPE_ALIAS_SET);\n+      /* Do not compare TYPE_ALIAS_SET.  Doing so introduce ordering issues\n+         with calls to get_alias_set which may initialize it for streamed\n+ \t in types.  */\n     }\n \n   /* We don't want to compare locations, so there is nothing do compare"}, {"sha": "3162d1ae2b5ad600eceb0ae9bc0cbdeff1b05a7c", "filename": "gcc/tree-streamer-in.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c86248e5830cf6c3c05c8ab851b1e8fe90551d0/gcc%2Ftree-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c86248e5830cf6c3c05c8ab851b1e8fe90551d0/gcc%2Ftree-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-in.c?ref=8c86248e5830cf6c3c05c8ab851b1e8fe90551d0", "patch": "@@ -366,7 +366,6 @@ unpack_ts_type_common_value_fields (struct bitpack_d *bp, tree expr)\n   TYPE_RESTRICT (expr) = (unsigned) bp_unpack_value (bp, 1);\n   TYPE_USER_ALIGN (expr) = (unsigned) bp_unpack_value (bp, 1);\n   TYPE_READONLY (expr) = (unsigned) bp_unpack_value (bp, 1);\n-  TYPE_ALIAS_SET (expr) = bp_unpack_value (bp, 1) ? 0 : -1;\n   if (RECORD_OR_UNION_TYPE_P (expr))\n     {\n       TYPE_TRANSPARENT_AGGR (expr) = (unsigned) bp_unpack_value (bp, 1);"}, {"sha": "bfd06449ecbc9bbe2cfe2e28fc44c8c783f1fbbe", "filename": "gcc/tree-streamer-out.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c86248e5830cf6c3c05c8ab851b1e8fe90551d0/gcc%2Ftree-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c86248e5830cf6c3c05c8ab851b1e8fe90551d0/gcc%2Ftree-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-out.c?ref=8c86248e5830cf6c3c05c8ab851b1e8fe90551d0", "patch": "@@ -317,13 +317,9 @@ pack_ts_type_common_value_fields (struct bitpack_d *bp, tree expr)\n   bp_pack_value (bp, TYPE_RESTRICT (expr), 1);\n   bp_pack_value (bp, TYPE_USER_ALIGN (expr), 1);\n   bp_pack_value (bp, TYPE_READONLY (expr), 1);\n-  /* Make sure to preserve the fact whether the frontend would assign\n-     alias-set zero to this type.  Do that only for main variants, because\n-     type variants alias sets are never computed.\n-     FIXME:  This does not work for pre-streamed builtin types.  */\n-  bp_pack_value (bp, (TYPE_ALIAS_SET (expr) == 0\n-\t\t      || (!in_lto_p && TYPE_MAIN_VARIANT (expr) == expr\n-\t\t\t  && get_alias_set (expr) == 0)), 1);\n+  /* We used to stream TYPE_ALIAS_SET == 0 information to let frontends mark\n+     types that are opaque for TBAA.  This however did not work as intended,\n+     becuase TYPE_ALIAS_SET == 0 was regularly lost in type merging.  */\n   if (RECORD_OR_UNION_TYPE_P (expr))\n     {\n       bp_pack_value (bp, TYPE_TRANSPARENT_AGGR (expr), 1);"}]}