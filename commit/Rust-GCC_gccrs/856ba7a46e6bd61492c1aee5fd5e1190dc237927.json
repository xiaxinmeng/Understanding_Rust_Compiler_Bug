{"sha": "856ba7a46e6bd61492c1aee5fd5e1190dc237927", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU2YmE3YTQ2ZTZiZDYxNDkyYzFhZWU1ZmQ1ZTExOTBkYzIzNzkyNw==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2012-09-11T19:52:18Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2012-09-11T19:52:18Z"}, "message": "neon-vset_lanes8.c, [...]: Fix for big-endian support.\n\n2012-09-11  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\tgcc/testsuite/\n\t* gcc.target/arm/neon-vset_lanes8.c, gcc.target/arm/pr51835.c,\n\tgcc.target/arm/pr48252.c: Fix for big-endian support.\n\nFrom-SVN: r191200", "tree": {"sha": "60a2e8673157cd9413d68f0959252eee97d3b44f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60a2e8673157cd9413d68f0959252eee97d3b44f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/856ba7a46e6bd61492c1aee5fd5e1190dc237927", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/856ba7a46e6bd61492c1aee5fd5e1190dc237927", "html_url": "https://github.com/Rust-GCC/gccrs/commit/856ba7a46e6bd61492c1aee5fd5e1190dc237927", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/856ba7a46e6bd61492c1aee5fd5e1190dc237927/comments", "author": null, "committer": null, "parents": [{"sha": "148e45e516e599de2e633a2b066fd773cf4b26e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/148e45e516e599de2e633a2b066fd773cf4b26e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/148e45e516e599de2e633a2b066fd773cf4b26e4"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "04d912b4b7a68bfb110683765bb7bd4db6c47ba2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/856ba7a46e6bd61492c1aee5fd5e1190dc237927/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/856ba7a46e6bd61492c1aee5fd5e1190dc237927/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=856ba7a46e6bd61492c1aee5fd5e1190dc237927", "patch": "@@ -1,3 +1,9 @@\n+2012-09-11  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\tgcc/testsuite/\n+\t* gcc.target/arm/neon-vset_lanes8.c, gcc.target/arm/pr51835.c,\n+\tgcc.target/arm/pr48252.c: Fix for big-endian support.\n+\n 2012-09-11  Marc Glisse  <marc.glisse@inria.fr>\n \n         * gcc.dg/tree-ssa/forwprop-22.c: New testcase."}, {"sha": "51d38fd1dfc7f439e651dd50416423f6cd38a2ab", "filename": "gcc/testsuite/gcc.target/arm/neon-vset_lanes8.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/856ba7a46e6bd61492c1aee5fd5e1190dc237927/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vset_lanes8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/856ba7a46e6bd61492c1aee5fd5e1190dc237927/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vset_lanes8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vset_lanes8.c?ref=856ba7a46e6bd61492c1aee5fd5e1190dc237927", "patch": "@@ -9,11 +9,14 @@\n #include <stdlib.h>\n #include <string.h>\n \n-int8x8_t x = { 1, 2, 3, 4, 5, 6, 7, 8 };\n-int8x8_t y = { 1, 2, 3, 16, 5, 6, 7, 8 };\n+int8_t x_init[8] = { 1, 2, 3, 4, 5, 6, 7, 8 };\n+int8_t y_init[8] = { 1, 2, 3, 16, 5, 6, 7, 8 };\n \n int main (void)\n {\n+  int8x8_t x = vld1_s8 (x_init);\n+  int8x8_t y = vld1_s8 (y_init);\n+\n   x = vset_lane_s8 (16, x, 3);\n   if (memcmp (&x, &y, sizeof (x)) != 0)\n     abort();"}, {"sha": "17f729bb3411cd3e2cf73826bf6b90a1be1bda6e", "filename": "gcc/testsuite/gcc.target/arm/pr48252.c", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/856ba7a46e6bd61492c1aee5fd5e1190dc237927/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr48252.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/856ba7a46e6bd61492c1aee5fd5e1190dc237927/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr48252.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr48252.c?ref=856ba7a46e6bd61492c1aee5fd5e1190dc237927", "patch": "@@ -8,11 +8,14 @@\n \n int main(void)\n {\n-    uint8x8_t v1 = {1, 1, 1, 1, 1, 1, 1, 1};\n-    uint8x8_t v2 = {2, 2, 2, 2, 2, 2, 2, 2};\n+    uint8_t v1_init[8] = {1, 1, 1, 1, 1, 1, 1, 1};\n+    uint8_t v2_init[8] = {2, 2, 2, 2, 2, 2, 2, 2};\n+    uint8x8_t v1 = vld1_u8 (v1_init);\n+    uint8x8_t v2 = vld1_u8 (v2_init);\n     uint8x8x2_t vd1, vd2;\n     union {uint8x8_t v; uint8_t buf[8];} d1, d2, d3, d4;\n     int i;\n+    uint8_t odd, even;\n \n     vd1 = vzip_u8(v1, vdup_n_u8(0));\n     vd2 = vzip_u8(v2, vdup_n_u8(0));\n@@ -22,9 +25,17 @@ int main(void)\n     vst1_u8(d3.buf, vd2.val[0]);\n     vst1_u8(d4.buf, vd2.val[1]);\n \n+#ifdef __ARMEL__\n+    odd = 1;\n+    even = 0;\n+#else\n+    odd = 0;\n+    even = 1;\n+#endif\n+\n     for (i = 0; i < 8; i++)\n-      if ((i % 2 == 0 && d4.buf[i] != 2)\n-          || (i % 2 == 1 && d4.buf[i] != 0))\n+      if ((i % 2 == even && d4.buf[i] != 2)\n+          || (i % 2 == odd && d4.buf[i] != 0))\n          abort ();\n \n     return 0;"}, {"sha": "500eb6e9f7bc3cf7f6aa11a6fc9ce1e633ebc642", "filename": "gcc/testsuite/gcc.target/arm/pr51835.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/856ba7a46e6bd61492c1aee5fd5e1190dc237927/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr51835.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/856ba7a46e6bd61492c1aee5fd5e1190dc237927/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr51835.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr51835.c?ref=856ba7a46e6bd61492c1aee5fd5e1190dc237927", "patch": "@@ -11,4 +11,5 @@ unsigned int func2 (double d)\n   return (unsigned int)d;\n }\n \n-/* { dg-final { scan-assembler-times \"fmrrd\\[\\\\t \\]+r0,\\[\\\\t \\]*r1,\\[\\\\t \\]*d0\" 2 } } */\n+/* { dg-final { scan-assembler-times \"fmrrd\\[\\\\t \\]+r0,\\[\\\\t \\]*r1,\\[\\\\t \\]*d0\" 2 { target { arm_little_endian } } } } */\n+/* { dg-final { scan-assembler-times \"fmrrd\\[\\\\t \\]+r1,\\[\\\\t \\]*r0,\\[\\\\t \\]*d0\" 2 { target { ! arm_little_endian } } } } */"}]}