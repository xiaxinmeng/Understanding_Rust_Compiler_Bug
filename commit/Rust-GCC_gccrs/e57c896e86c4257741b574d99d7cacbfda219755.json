{"sha": "e57c896e86c4257741b574d99d7cacbfda219755", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU3Yzg5NmU4NmM0MjU3NzQxYjU3NGQ5OWQ3Y2FjYmZkYTIxOTc1NQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-07-04T13:56:12Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-07-04T13:56:12Z"}, "message": "re PR ipa/91062 (gcc.dg/ipa/ipa-pta-1.c dump contains garbage when gcc was configured with --enable-checking=all)\n\n2019-07-04  Richard Biener  <rguenther@suse.de>\n\n\tPR ipa/91062\n\t* tree-pass.h (execute_all_ipa_transforms): Add a flag\n\tparameter whether to disable GC collection.\n\t* passes.c (execute_one_ipa_transform_pass): Likewise, and\n\thonor it.\n\t(execute_all_ipa_transforms): Likewise and pass it down.\n\t* cgraph.c (cgraph_node::get_body): Do not invoke garbage\n\tcollection from applying IPA transforms.\n\t* cgraphunit.c (cgraph_node::expand): Allow garbage collection\n\tfrom applying IPA transforms.\n\nFrom-SVN: r273083", "tree": {"sha": "eefa1b0cc672ec65c4f32d9cfa4e91c878d4c478", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eefa1b0cc672ec65c4f32d9cfa4e91c878d4c478"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e57c896e86c4257741b574d99d7cacbfda219755", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e57c896e86c4257741b574d99d7cacbfda219755", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e57c896e86c4257741b574d99d7cacbfda219755", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e57c896e86c4257741b574d99d7cacbfda219755/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5cee32399049534903f3ddb0bf55657b909492f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cee32399049534903f3ddb0bf55657b909492f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cee32399049534903f3ddb0bf55657b909492f4"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "19ab956a98cf0a659a5e9c311b97ef5928b8f792", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e57c896e86c4257741b574d99d7cacbfda219755/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e57c896e86c4257741b574d99d7cacbfda219755/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e57c896e86c4257741b574d99d7cacbfda219755", "patch": "@@ -1,3 +1,16 @@\n+2019-07-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/91062\n+\t* tree-pass.h (execute_all_ipa_transforms): Add a flag\n+\tparameter whether to disable GC collection.\n+\t* passes.c (execute_one_ipa_transform_pass): Likewise, and\n+\thonor it.\n+\t(execute_all_ipa_transforms): Likewise and pass it down.\n+\t* cgraph.c (cgraph_node::get_body): Do not invoke garbage\n+\tcollection from applying IPA transforms.\n+\t* cgraphunit.c (cgraph_node::expand): Allow garbage collection\n+\tfrom applying IPA transforms.\n+\n 2019-07-04  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/90911"}, {"sha": "a7e3bcf2132629e32a10c3d62b20e1bca602d3c5", "filename": "gcc/cgraph.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e57c896e86c4257741b574d99d7cacbfda219755/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e57c896e86c4257741b574d99d7cacbfda219755/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=e57c896e86c4257741b574d99d7cacbfda219755", "patch": "@@ -3618,7 +3618,7 @@ cgraph_node::get_body (void)\n       set_dump_file (NULL);\n \n       push_cfun (DECL_STRUCT_FUNCTION (decl));\n-      execute_all_ipa_transforms ();\n+      execute_all_ipa_transforms (true);\n       cgraph_edge::rebuild_edges ();\n       free_dominance_info (CDI_DOMINATORS);\n       free_dominance_info (CDI_POST_DOMINATORS);"}, {"sha": "5999b9e0de8df22b71d6d36363bcf588e90c5b83", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e57c896e86c4257741b574d99d7cacbfda219755/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e57c896e86c4257741b574d99d7cacbfda219755/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=e57c896e86c4257741b574d99d7cacbfda219755", "patch": "@@ -2184,7 +2184,7 @@ cgraph_node::expand (void)\n \n   bitmap_obstack_initialize (&reg_obstack); /* FIXME, only at RTL generation*/\n \n-  execute_all_ipa_transforms ();\n+  execute_all_ipa_transforms (false);\n \n   /* Perform all tree transforms and optimizations.  */\n "}, {"sha": "bd56004d909be5c872ac414900c9fe1451dbeb6c", "filename": "gcc/passes.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e57c896e86c4257741b574d99d7cacbfda219755/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e57c896e86c4257741b574d99d7cacbfda219755/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=e57c896e86c4257741b574d99d7cacbfda219755", "patch": "@@ -2182,7 +2182,7 @@ execute_ipa_summary_passes (ipa_opt_pass_d *ipa_pass)\n \n static void\n execute_one_ipa_transform_pass (struct cgraph_node *node,\n-\t\t\t\tipa_opt_pass_d *ipa_pass)\n+\t\t\t\tipa_opt_pass_d *ipa_pass, bool do_not_collect)\n {\n   opt_pass *pass = ipa_pass;\n   unsigned int todo_after = 0;\n@@ -2228,14 +2228,14 @@ execute_one_ipa_transform_pass (struct cgraph_node *node,\n   redirect_edge_var_map_empty ();\n \n   /* Signal this is a suitable GC collection point.  */\n-  if (!(todo_after & TODO_do_not_ggc_collect))\n+  if (!do_not_collect && !(todo_after & TODO_do_not_ggc_collect))\n     ggc_collect ();\n }\n \n /* For the current function, execute all ipa transforms. */\n \n void\n-execute_all_ipa_transforms (void)\n+execute_all_ipa_transforms (bool do_not_collect)\n {\n   struct cgraph_node *node;\n   if (!cfun)\n@@ -2247,7 +2247,8 @@ execute_all_ipa_transforms (void)\n       unsigned int i;\n \n       for (i = 0; i < node->ipa_transforms_to_apply.length (); i++)\n-\texecute_one_ipa_transform_pass (node, node->ipa_transforms_to_apply[i]);\n+\texecute_one_ipa_transform_pass (node, node->ipa_transforms_to_apply[i],\n+\t\t\t\t\tdo_not_collect);\n       node->ipa_transforms_to_apply.release ();\n     }\n }"}, {"sha": "b27dbdd0cb7d0e9033f52a9df103354364dfc5e1", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e57c896e86c4257741b574d99d7cacbfda219755/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e57c896e86c4257741b574d99d7cacbfda219755/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=e57c896e86c4257741b574d99d7cacbfda219755", "patch": "@@ -632,7 +632,7 @@ extern bool execute_one_pass (opt_pass *);\n extern void execute_pass_list (function *, opt_pass *);\n extern void execute_ipa_pass_list (opt_pass *);\n extern void execute_ipa_summary_passes (ipa_opt_pass_d *);\n-extern void execute_all_ipa_transforms (void);\n+extern void execute_all_ipa_transforms (bool);\n extern void execute_all_ipa_stmt_fixups (struct cgraph_node *, gimple **);\n extern bool pass_init_dump_file (opt_pass *);\n extern void pass_fini_dump_file (opt_pass *);"}]}