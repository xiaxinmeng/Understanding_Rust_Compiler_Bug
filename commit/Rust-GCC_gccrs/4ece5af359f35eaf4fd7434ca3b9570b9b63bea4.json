{"sha": "4ece5af359f35eaf4fd7434ca3b9570b9b63bea4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVjZTVhZjM1OWYzNWVhZjRmZDc0MzRjYTNiOTU3MGI5YjYzYmVhNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-06-28T10:18:27Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-06-28T10:18:27Z"}, "message": "dwarf2out.c (gen_subprogram_die): Use is_unit_die when deciding whether to not re-use a DIE.\n\n2018-06-28  Richard Biener  <rguenther@suse.de>\n\n\t* dwarf2out.c (gen_subprogram_die): Use is_unit_die when\n\tdeciding whether to not re-use a DIE.\n\nFrom-SVN: r262217", "tree": {"sha": "6573462017a2f3f42ed189f7c3894d8e82338e36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6573462017a2f3f42ed189f7c3894d8e82338e36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ece5af359f35eaf4fd7434ca3b9570b9b63bea4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ece5af359f35eaf4fd7434ca3b9570b9b63bea4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ece5af359f35eaf4fd7434ca3b9570b9b63bea4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ece5af359f35eaf4fd7434ca3b9570b9b63bea4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8e236ddde7aaadb69bc4b2cc33b61b8964ebbcee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e236ddde7aaadb69bc4b2cc33b61b8964ebbcee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e236ddde7aaadb69bc4b2cc33b61b8964ebbcee"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "c9f7236b837fcc5292c8c7b35e8e0435bff59b6a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ece5af359f35eaf4fd7434ca3b9570b9b63bea4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ece5af359f35eaf4fd7434ca3b9570b9b63bea4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ece5af359f35eaf4fd7434ca3b9570b9b63bea4", "patch": "@@ -1,3 +1,8 @@\n+2018-06-28  Richard Biener  <rguenther@suse.de>\n+\n+\t* dwarf2out.c (gen_subprogram_die): Use is_unit_die when\n+\tdeciding whether to not re-use a DIE.\n+\n 2018-06-28  Richard Biener  <rguenther@suse.de>\n \n \t* dwarf2out.c (gen_subprogram_die): Always re-use DIEs with an"}, {"sha": "db9f6397cc1aba27e6e385b5e6798177b3f6e575", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ece5af359f35eaf4fd7434ca3b9570b9b63bea4/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ece5af359f35eaf4fd7434ca3b9570b9b63bea4/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=4ece5af359f35eaf4fd7434ca3b9570b9b63bea4", "patch": "@@ -22780,7 +22780,7 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n \t apply; we just use the old DIE.  */\n       expanded_location s = expand_location (DECL_SOURCE_LOCATION (decl));\n       struct dwarf_file_data * file_index = lookup_filename (s.file);\n-      if (((is_cu_die (old_die->die_parent)\n+      if (((is_unit_die (old_die->die_parent)\n \t    /* This condition fixes the inconsistency/ICE with the\n \t       following Fortran test (or some derivative thereof) while\n \t       building libgfortran:\n@@ -22796,9 +22796,6 @@ gen_subprogram_die (tree decl, dw_die_ref context_die)\n \t\t&& old_die->die_parent->die_tag == DW_TAG_module)\n \t    || context_die == NULL)\n \t   && (DECL_ARTIFICIAL (decl)\n-\t       /* The location attributes may be in the abstract origin\n-\t\t  which in the case of LTO might be not available to\n-\t\t  look at.  */\n \t       || (get_AT_file (old_die, DW_AT_decl_file) == file_index\n \t\t   && (get_AT_unsigned (old_die, DW_AT_decl_line)\n \t\t       == (unsigned) s.line)"}]}