{"sha": "6cda3ab6615347beffbeef3d296d9b49d530e50d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNkYTNhYjY2MTUzNDdiZWZmYmVlZjNkMjk2ZDliNDlkNTMwZTUwZA==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2016-02-13T08:03:44Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2016-02-13T08:03:44Z"}, "message": "re PR target/67260 ([sh] Register spill bug for sibcall+complex+softfloat)\n\ngcc/\n\tPR target/67260\n\t* config/sh/sh.md (sibcall_value_pcrel): Replace =&k scratch reg with\n\tfixed R1_REG scratch reg.\n\t(sibcall_value_pcrel_fdpic): Likewise.\n\ngcc/testsuite/\n\tPR target/67260\n\t* gcc.target/sh/torture/pr67260.c: New.\n\nFrom-SVN: r233399", "tree": {"sha": "b1b5cf03c5d5f6988deec65ac51e4787d536938c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1b5cf03c5d5f6988deec65ac51e4787d536938c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cda3ab6615347beffbeef3d296d9b49d530e50d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cda3ab6615347beffbeef3d296d9b49d530e50d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cda3ab6615347beffbeef3d296d9b49d530e50d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cda3ab6615347beffbeef3d296d9b49d530e50d/comments", "author": null, "committer": null, "parents": [{"sha": "6786e598faebc3585c3ecec1ec4408946e897dfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6786e598faebc3585c3ecec1ec4408946e897dfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6786e598faebc3585c3ecec1ec4408946e897dfa"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "0fce0c3bfe00577462f0dcddb52a5a8c8b7bb69d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cda3ab6615347beffbeef3d296d9b49d530e50d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cda3ab6615347beffbeef3d296d9b49d530e50d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6cda3ab6615347beffbeef3d296d9b49d530e50d", "patch": "@@ -1,3 +1,10 @@\n+2016-02-13  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/67260\n+\t* config/sh/sh.md (sibcall_value_pcrel): Replace =&k scratch reg with\n+\tfixed R1_REG scratch reg.\n+\t(sibcall_value_pcrel_fdpic): Likewise.\n+\n 2016-02-13  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/67636"}, {"sha": "9fa835b1a29d73625d54ea77d831e07eaf790767", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cda3ab6615347beffbeef3d296d9b49d530e50d/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cda3ab6615347beffbeef3d296d9b49d530e50d/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=6cda3ab6615347beffbeef3d296d9b49d530e50d", "patch": "@@ -10476,12 +10476,16 @@ label:\n \t\t      (const_string \"single\") (const_string \"double\")))\n    (set_attr \"type\" \"jump_ind\")])\n \n+;; sibcall_value_pcrel used to have a =&k clobber for the scratch register\n+;; that it needs for the branch address.  This causes troubles when there\n+;; is a big overlap of argument and return value registers.  Hence, use a\n+;; fixed call clobbered register for the address.  See also PR 67260.\n (define_insn_and_split \"sibcall_value_pcrel\"\n   [(set (match_operand 0 \"\" \"=rf\")\n \t(call (mem:SI (match_operand:SI 1 \"symbol_ref_operand\" \"\"))\n \t      (match_operand 2 \"\" \"\")))\n    (use (reg:SI FPSCR_MODES_REG))\n-   (clobber (match_scratch:SI 3 \"=&k\"))\n+   (clobber (reg:SI R1_REG))\n    (return)]\n   \"TARGET_SH2 && !TARGET_FDPIC\"\n   \"#\"\n@@ -10491,6 +10495,8 @@ label:\n   rtx lab = PATTERN (gen_call_site ());\n   rtx call_insn;\n \n+  operands[3] =  gen_rtx_REG (SImode, R1_REG);\n+\n   sh_expand_sym_label2reg (operands[3], operands[1], lab, true);\n   call_insn = emit_call_insn (gen_sibcall_valuei_pcrel (operands[0],\n \t\t\t\t\t\t\toperands[3],\n@@ -10505,13 +10511,15 @@ label:\n \t\t      (const_string \"single\") (const_string \"double\")))\n    (set_attr \"type\" \"jump_ind\")])\n \n+;; Like for sibcall_value_pcrel, use a fixed call clobbered register for\n+;; the branch address.\n (define_insn_and_split \"sibcall_value_pcrel_fdpic\"\n   [(set (match_operand 0 \"\" \"=rf\")\n \t(call (mem:SI (match_operand:SI 1 \"symbol_ref_operand\"))\n \t      (match_operand 2)))\n    (use (reg:SI FPSCR_MODES_REG))\n    (use (reg:SI PIC_REG))\n-   (clobber (match_scratch:SI 3 \"=k\"))\n+   (clobber (reg:SI R1_REG))\n    (return)]\n   \"TARGET_SH2 && TARGET_FDPIC\"\n   \"#\"\n@@ -10520,6 +10528,8 @@ label:\n {\n   rtx lab = PATTERN (gen_call_site ());\n \n+  operands[3] =  gen_rtx_REG (SImode, R1_REG);\n+\n   sh_expand_sym_label2reg (operands[3], operands[1], lab, true);\n   rtx i = emit_call_insn (gen_sibcall_valuei_pcrel_fdpic (operands[0],\n \t\t\t\t\t\t\t  operands[3],"}, {"sha": "0acf5311f2f5b255de5a8fa9a31a8ccd77ee05bd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cda3ab6615347beffbeef3d296d9b49d530e50d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cda3ab6615347beffbeef3d296d9b49d530e50d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6cda3ab6615347beffbeef3d296d9b49d530e50d", "patch": "@@ -1,3 +1,8 @@\n+2016-02-13  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/67260\n+\t* gcc.target/sh/torture/pr67260.c: New.\n+\n 2016-02-12  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* gcc.dg/pr67964.c: Add dg-require-alias."}, {"sha": "7bd176ed547d6f207a9cd93427a5fddb43233b20", "filename": "gcc/testsuite/gcc.target/sh/torture/pr67260.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cda3ab6615347beffbeef3d296d9b49d530e50d/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Ftorture%2Fpr67260.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cda3ab6615347beffbeef3d296d9b49d530e50d/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Ftorture%2Fpr67260.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Ftorture%2Fpr67260.c?ref=6cda3ab6615347beffbeef3d296d9b49d530e50d", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-additional-options \"-std=gnu99\" }  */\n+/* { dg-do compile }  */\n+\n+#pragma GCC visibility push(hidden)\n+\n+double _Complex foo (double _Complex arg);\n+\n+double _Complex\n+bar (double _Complex arg)\n+{\n+  return foo (arg);\n+}"}]}