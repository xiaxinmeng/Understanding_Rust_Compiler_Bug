{"sha": "2418d7da3a08b5ea0c2e59a2e078193b70980b48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQxOGQ3ZGEzYTA4YjVlYTBjMmU1OWEyZTA3ODE5M2I3MDk4MGI0OA==", "commit": {"author": {"name": "Adam Butcher", "email": "adam@jessamine.co.uk", "date": "2014-01-06T18:22:38Z"}, "committer": {"name": "Adam Butcher", "email": "abutcher@gcc.gnu.org", "date": "2014-01-06T18:22:38Z"}, "message": "re PR c++/59629 ([c++11] ICE with invalid use of auto in lambda function)\n\nFix PR c++/59629\n\n\tPR c++/59629\n\t* cp/parser.c (cp_parser_lambda_expression): Save/reset/restore\n\tauto_is_implicit_function_template_parm_p around lambda body.\n\n\t* g++.dg/cpp1y/pr59629.C: New testcase.\n\nFrom-SVN: r206370", "tree": {"sha": "98f27766ce9d3705e0c917a0c5c88bda27448558", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98f27766ce9d3705e0c917a0c5c88bda27448558"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2418d7da3a08b5ea0c2e59a2e078193b70980b48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2418d7da3a08b5ea0c2e59a2e078193b70980b48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2418d7da3a08b5ea0c2e59a2e078193b70980b48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2418d7da3a08b5ea0c2e59a2e078193b70980b48/comments", "author": {"login": "abutcher-gh", "id": 10379705, "node_id": "MDQ6VXNlcjEwMzc5NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/10379705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abutcher-gh", "html_url": "https://github.com/abutcher-gh", "followers_url": "https://api.github.com/users/abutcher-gh/followers", "following_url": "https://api.github.com/users/abutcher-gh/following{/other_user}", "gists_url": "https://api.github.com/users/abutcher-gh/gists{/gist_id}", "starred_url": "https://api.github.com/users/abutcher-gh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abutcher-gh/subscriptions", "organizations_url": "https://api.github.com/users/abutcher-gh/orgs", "repos_url": "https://api.github.com/users/abutcher-gh/repos", "events_url": "https://api.github.com/users/abutcher-gh/events{/privacy}", "received_events_url": "https://api.github.com/users/abutcher-gh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "81fdaa176d937936a21bb3e42eb482f042f42b77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81fdaa176d937936a21bb3e42eb482f042f42b77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81fdaa176d937936a21bb3e42eb482f042f42b77"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "c58594602436b1570af2746bf7602e9260c23183", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2418d7da3a08b5ea0c2e59a2e078193b70980b48/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2418d7da3a08b5ea0c2e59a2e078193b70980b48/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2418d7da3a08b5ea0c2e59a2e078193b70980b48", "patch": "@@ -8,6 +8,10 @@\n \t* cp/parser.c (cp_parser_template_parameter): Early out with\n \terror_mark_node if parameter declaration was not parsed.\n \n+\tPR c++/59629\n+\t* cp/parser.c (cp_parser_lambda_expression): Save/reset/restore\n+\tauto_is_implicit_function_template_parm_p around lambda body.\n+\n 2014-01-03  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR c++/58950"}, {"sha": "6668f2ce5c02c306fd6b8969cf7edeac9b11196c", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2418d7da3a08b5ea0c2e59a2e078193b70980b48/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2418d7da3a08b5ea0c2e59a2e078193b70980b48/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=2418d7da3a08b5ea0c2e59a2e078193b70980b48", "patch": "@@ -8738,13 +8738,16 @@ cp_parser_lambda_expression (cp_parser* parser)\n         = parser->fully_implicit_function_template_p;\n     tree implicit_template_parms = parser->implicit_template_parms;\n     cp_binding_level* implicit_template_scope = parser->implicit_template_scope;\n+    bool auto_is_implicit_function_template_parm_p\n+        = parser->auto_is_implicit_function_template_parm_p;\n \n     parser->num_template_parameter_lists = 0;\n     parser->in_statement = 0;\n     parser->in_switch_statement_p = false;\n     parser->fully_implicit_function_template_p = false;\n     parser->implicit_template_parms = 0;\n     parser->implicit_template_scope = 0;\n+    parser->auto_is_implicit_function_template_parm_p = false;\n \n     /* By virtue of defining a local class, a lambda expression has access to\n        the private variables of enclosing classes.  */\n@@ -8772,6 +8775,8 @@ cp_parser_lambda_expression (cp_parser* parser)\n \t= fully_implicit_function_template_p;\n     parser->implicit_template_parms = implicit_template_parms;\n     parser->implicit_template_scope = implicit_template_scope;\n+    parser->auto_is_implicit_function_template_parm_p\n+\t= auto_is_implicit_function_template_parm_p;\n   }\n \n   pop_deferring_access_checks ();"}, {"sha": "036b91adf4a68a8ea9394cae79ea4a6807b5731b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2418d7da3a08b5ea0c2e59a2e078193b70980b48/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2418d7da3a08b5ea0c2e59a2e078193b70980b48/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2418d7da3a08b5ea0c2e59a2e078193b70980b48", "patch": "@@ -2,8 +2,10 @@\n \n \tPR c++/59635\n \tPR c++/59636\n+\tPR c++/59629\n \t* g++.dg/cpp1y/pr59635.C: New testcase.\n \t* g++.dg/cpp1y/pr59636.C: New testcase.\n+\t* g++.dg/cpp1y/pr59629.C: New testcase.\n \n 2014-01-06  Martin Jambor  <mjambor@suse.cz>\n "}, {"sha": "a0c9209791eeb035ee96beee09d6c3033b685749", "filename": "gcc/testsuite/g++.dg/cpp1y/pr59629.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2418d7da3a08b5ea0c2e59a2e078193b70980b48/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr59629.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2418d7da3a08b5ea0c2e59a2e078193b70980b48/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr59629.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr59629.C?ref=2418d7da3a08b5ea0c2e59a2e078193b70980b48", "patch": "@@ -0,0 +1,7 @@\n+// { dg-do compile }\n+// { dg-options \"-std=c++1y\" }\n+\n+// PR c++/59629\n+\n+void foo(int i = []{ auto 0; }()); // { dg-error \"expected|could not convert\" }\n+"}]}