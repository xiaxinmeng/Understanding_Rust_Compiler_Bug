{"sha": "48f22ed28f579852f74a63a8afcba9db5e6f94de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhmMjJlZDI4ZjU3OTg1MmY3NGE2M2E4YWZjYmE5ZGI1ZTZmOTRkZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2001-02-17T00:12:44Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-02-17T00:12:44Z"}, "message": "cp-tree.h (DECL_USE_VTT_PARM): Remove.\n\n        * cp-tree.h (DECL_USE_VTT_PARM): Remove.\n        * decl2.c (maybe_retrofit_in_chrg): Don't create it.\n        * optimize.c (maybe_clone_body): Don't substitute it.\n        * call.c (build_new_method_call): Check in_chrg instead.\n        * init.c (expand_virtual_init): Likewise.\n\nFrom-SVN: r39785", "tree": {"sha": "f194211fd660947872ff5a314a043c01f7665c3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f194211fd660947872ff5a314a043c01f7665c3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48f22ed28f579852f74a63a8afcba9db5e6f94de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48f22ed28f579852f74a63a8afcba9db5e6f94de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48f22ed28f579852f74a63a8afcba9db5e6f94de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48f22ed28f579852f74a63a8afcba9db5e6f94de/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8f971fc25adb70d8f9e7cff24f86e9f7d7ee83b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8f971fc25adb70d8f9e7cff24f86e9f7d7ee83b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8f971fc25adb70d8f9e7cff24f86e9f7d7ee83b"}], "stats": {"total": 35, "additions": 14, "deletions": 21}, "files": [{"sha": "12050699c92dfe5d8a1cc49a3cf588edebad7ee3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f22ed28f579852f74a63a8afcba9db5e6f94de/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f22ed28f579852f74a63a8afcba9db5e6f94de/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=48f22ed28f579852f74a63a8afcba9db5e6f94de", "patch": "@@ -1,3 +1,11 @@\n+2001-02-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* cp-tree.h (DECL_USE_VTT_PARM): Remove.\n+\t* decl2.c (maybe_retrofit_in_chrg): Don't create it.\n+\t* optimize.c (maybe_clone_body): Don't substitute it.\n+\t* call.c (build_new_method_call): Check in_chrg instead.\n+\t* init.c (expand_virtual_init): Likewise.\n+\n 2001-02-16  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* decl.c (check_tag_decl): Make sure a typedef for an anonymous"}, {"sha": "d3e5ff39e534dfb5f0850e77c00a417ae3d1a7bc", "filename": "gcc/cp/call.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f22ed28f579852f74a63a8afcba9db5e6f94de/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f22ed28f579852f74a63a8afcba9db5e6f94de/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=48f22ed28f579852f74a63a8afcba9db5e6f94de", "patch": "@@ -4426,17 +4426,17 @@ build_new_method_call (instance, name, args, basetype_path, flags)\n \t     or destructor, then we fetch the VTT directly.\n \t     Otherwise, we look it up using the VTT we were given.  */\n \t  vtt = IDENTIFIER_GLOBAL_VALUE (get_vtt_name (current_class_type));\n-\t  vtt = build_unary_op (ADDR_EXPR, vtt, /*noconvert=*/1);\n-\t  vtt = build (COND_EXPR, TREE_TYPE (vtt), \n-\t\t       DECL_USE_VTT_PARM (current_function_decl),\n+\t  vtt = decay_conversion (vtt);\n+\t  vtt = build (COND_EXPR, TREE_TYPE (vtt),\n+\t\t       build (EQ_EXPR, boolean_type_node,\n+\t\t\t      current_in_charge_parm, integer_zero_node),\n \t\t       DECL_VTT_PARM (current_function_decl),\n \t\t       vtt);\n \t  if (TREE_VIA_VIRTUAL (basebinfo))\n \t    basebinfo = binfo_for_vbase (basetype, current_class_type);\n \t  my_friendly_assert (BINFO_SUBVTT_INDEX (basebinfo), 20010110);\n \t  sub_vtt = build (PLUS_EXPR, TREE_TYPE (vtt), vtt,\n \t\t\t   BINFO_SUBVTT_INDEX (basebinfo));\n-\t  sub_vtt = build_indirect_ref (sub_vtt, NULL);\n \n \t  args = tree_cons (NULL_TREE, sub_vtt, args);\n \t}"}, {"sha": "f35dd95ce8fa748683e6b8d53fc522c87a8c712b", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f22ed28f579852f74a63a8afcba9db5e6f94de/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f22ed28f579852f74a63a8afcba9db5e6f94de/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=48f22ed28f579852f74a63a8afcba9db5e6f94de", "patch": "@@ -1983,13 +1983,6 @@ struct lang_decl\n #define DECL_VTT_PARM(NODE) \\\n   (DECL_LANG_SPECIFIC (NODE)->u2.vtt_parm)\n \n-/* If there's a DECL_VTT_PARM, this is a magic variable that indicates\n-   whether or not the VTT parm should be used.  In a subobject\n-   constructor, `true' is substituted for this value; in a complete\n-   object constructor, `false' is substituted instead.  */\n-#define DECL_USE_VTT_PARM(NODE) \\\n-  (TREE_CHAIN (DECL_VTT_PARM (NODE)))\n-\n /* Non-zero if NODE is a FUNCTION_DECL for which a VTT parameter is\n    required.  */\n #define DECL_NEEDS_VTT_PARM_P(NODE)\t\t\t\\"}, {"sha": "9f79148534ed069c9dd62889fd013250e8f47c67", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f22ed28f579852f74a63a8afcba9db5e6f94de/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f22ed28f579852f74a63a8afcba9db5e6f94de/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=48f22ed28f579852f74a63a8afcba9db5e6f94de", "patch": "@@ -980,9 +980,6 @@ maybe_retrofit_in_chrg (fn)\n       DECL_VTT_PARM (fn) = build_artificial_parm (vtt_parm_identifier, \n \t\t\t\t\t\t  vtt_parm_type);\n       DECL_CONTEXT (DECL_VTT_PARM (fn)) = fn;\n-      DECL_USE_VTT_PARM (fn) = build_artificial_parm (NULL_TREE,\n-\t\t\t\t\t\t      boolean_type_node);\n-      DECL_CONTEXT (DECL_USE_VTT_PARM (fn)) = fn;\n     }\n }\n "}, {"sha": "6386f67f8c352df22d2a2f10606d036d48bb93a6", "filename": "gcc/cp/init.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f22ed28f579852f74a63a8afcba9db5e6f94de/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f22ed28f579852f74a63a8afcba9db5e6f94de/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=48f22ed28f579852f74a63a8afcba9db5e6f94de", "patch": "@@ -872,7 +872,8 @@ expand_virtual_init (binfo, decl)\n \t the vtt_parm in the case of the non-subobject constructor.  */\n       vtbl = build (COND_EXPR, \n \t\t    TREE_TYPE (vtbl), \n-\t\t    DECL_USE_VTT_PARM (current_function_decl),\n+\t\t    build (EQ_EXPR, boolean_type_node,\n+\t\t\t   current_in_charge_parm, integer_zero_node),\n \t\t    vtbl2, \n \t\t    vtbl);\n     }"}, {"sha": "442cac0d5511f07f180bcd5058bab96729f15550", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f22ed28f579852f74a63a8afcba9db5e6f94de/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f22ed28f579852f74a63a8afcba9db5e6f94de/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=48f22ed28f579852f74a63a8afcba9db5e6f94de", "patch": "@@ -990,9 +990,6 @@ maybe_clone_body (fn)\n \t\t  splay_tree_insert (id.decl_map,\n \t\t\t\t     (splay_tree_key) DECL_VTT_PARM (fn),\n \t\t\t\t     (splay_tree_value) clone_parm);\n-\t\t  splay_tree_insert (id.decl_map,\n-\t\t\t\t     (splay_tree_key) DECL_USE_VTT_PARM (fn),\n-\t\t\t\t     (splay_tree_value) boolean_true_node);\n \t\t  clone_parm = TREE_CHAIN (clone_parm);\n \t\t}\n \t      /* Otherwise, map the VTT parameter to `NULL'.  */\n@@ -1001,9 +998,6 @@ maybe_clone_body (fn)\n \t\t  splay_tree_insert (id.decl_map,\n \t\t\t\t     (splay_tree_key) DECL_VTT_PARM (fn),\n \t\t\t\t     (splay_tree_value) null_pointer_node);\n-\t\t  splay_tree_insert (id.decl_map,\n-\t\t\t\t     (splay_tree_key) DECL_USE_VTT_PARM (fn),\n-\t\t\t\t     (splay_tree_value) boolean_false_node);\n \t\t}\n \t    }\n \t  /* Map other parameters to their equivalents in the cloned"}]}