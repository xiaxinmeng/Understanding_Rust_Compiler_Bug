{"sha": "4433aa086a963903e36d515dc0cb0167fdad955e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQzM2FhMDg2YTk2MzkwM2UzNmQ1MTVkYzBjYjAxNjdmZGFkOTU1ZQ==", "commit": {"author": {"name": "Nala Ginrut", "email": "mulei@gnu.org", "date": "2020-06-04T18:08:15Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T21:13:16Z"}, "message": "Add comments on the algorithm of name resolution", "tree": {"sha": "69398644f9b4cb26b4b5d0558e844dd441e6506d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69398644f9b4cb26b4b5d0558e844dd441e6506d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4433aa086a963903e36d515dc0cb0167fdad955e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4433aa086a963903e36d515dc0cb0167fdad955e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4433aa086a963903e36d515dc0cb0167fdad955e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4433aa086a963903e36d515dc0cb0167fdad955e/comments", "author": {"login": "NalaGinrut", "id": 19734, "node_id": "MDQ6VXNlcjE5NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/19734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NalaGinrut", "html_url": "https://github.com/NalaGinrut", "followers_url": "https://api.github.com/users/NalaGinrut/followers", "following_url": "https://api.github.com/users/NalaGinrut/following{/other_user}", "gists_url": "https://api.github.com/users/NalaGinrut/gists{/gist_id}", "starred_url": "https://api.github.com/users/NalaGinrut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NalaGinrut/subscriptions", "organizations_url": "https://api.github.com/users/NalaGinrut/orgs", "repos_url": "https://api.github.com/users/NalaGinrut/repos", "events_url": "https://api.github.com/users/NalaGinrut/events{/privacy}", "received_events_url": "https://api.github.com/users/NalaGinrut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de6bc4da463e949ed63a636c3d8fdac0859d1c4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de6bc4da463e949ed63a636c3d8fdac0859d1c4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de6bc4da463e949ed63a636c3d8fdac0859d1c4f"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "c05bfcb7e4f4569537b7050be0e6588bb4afe4e5", "filename": "gcc/rust/analysis/rust-name-resolution.cc", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4433aa086a963903e36d515dc0cb0167fdad955e/gcc%2Frust%2Fanalysis%2Frust-name-resolution.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4433aa086a963903e36d515dc0cb0167fdad955e/gcc%2Frust%2Fanalysis%2Frust-name-resolution.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fanalysis%2Frust-name-resolution.cc?ref=4433aa086a963903e36d515dc0cb0167fdad955e", "patch": "@@ -1,6 +1,46 @@\n #include \"rust-name-resolution.h\"\n #include \"rust-diagnostics.h\"\n \n+/*\n+ * The principles of name resolution:\n+ * 1. If a name resolves to a binding then it should always resolve to that\n+ * binding, and if resolving a name produces an error, it should always produce\n+ * an error.\n+ * 2. Avoid errors due to the resolver being stuck.\n+ * 3. Names should be able to be used before they are declared, but the order of\n+ * declarations should be irrelevant.\n+ * 4. Macros should be hygiene and manually expandable.\n+ * 5. Glob imports should be manually expandable.\n+ */\n+\n+/* The algorithm of name resolution\n+ * 1. When encouter items which bind a name, add the name to the binding table.\n+ * 2. When we find an import which can't be resolved, we add it to a work list.\n+ * 3. When we find a glob import, we have to record a 'back link', so that when\n+ *    a public name is added for the supplying module, we can add it for the\n+ *    importing module.\n+ * 4. Loop over the work list and try to lookup names.\n+ *    a. If a name has exactly one best binding then we use it (and record the\n+ *       binding on a list of resolved names).\n+ *    b. If there are zero then we put it back on the work list.\n+ *    c. If there is more than one binding, then we record an ambiguity error.\n+ *    d. When the work list no longer changes, then we are done.\n+ *    e. If the work list is empty, then expansion/import resolution succeeded.\n+ *       Otherwise there are names not found, or ambiguous names, then failed.\n+ * 5. When looking up names, we record the resolutions in the binding table.\n+ *    a. If the name a glob import, we add bindings for every accessible name\n+ *       currently known.\n+ * 6. To expand a macro, we try to resolve the macro's name.\n+ *    a. If that fails, we put it on the work list.\n+ *       Otherwise, we expand that macro by parsing the arguments,\n+ *       pattern matching, and doing hygienic expansion.\n+ *    b. We then parse the generated code in the same way as we parsed the\n+ *       original program. We add new names to the binding table, and expand any\n+ *       new macro uses.\n+ * 7. If we add names for a module which has back links, we must follow them and\n+ *    add these names to the importing module (if they are accessible).\n+ */\n+\n namespace Rust {\n namespace Analysis {\n "}]}