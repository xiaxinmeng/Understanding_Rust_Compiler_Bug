{"sha": "13f5d5e0828e1c2ccba67f9a5f0f8d50f5b42a77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNmNWQ1ZTA4MjhlMWMyY2NiYTY3ZjlhNWYwZjhkNTBmNWI0MmE3Nw==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2017-11-21T11:37:42Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2017-11-21T11:37:42Z"}, "message": "Don't split call from its call arg location.\n\ngcc/\n2017-11-21  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* cfgrtl.c (force_nonfallthru_and_redirect): Don't split a call\n\tand its corresponding call arg location note.\n\ntestsuite/\n2017-11-21  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* gcc.target/arc/loop-5.cpp: New test.\n\nFrom-SVN: r254998", "tree": {"sha": "ffbea3856ef8325931ae3fa7fd5db723090c8877", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffbea3856ef8325931ae3fa7fd5db723090c8877"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13f5d5e0828e1c2ccba67f9a5f0f8d50f5b42a77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13f5d5e0828e1c2ccba67f9a5f0f8d50f5b42a77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13f5d5e0828e1c2ccba67f9a5f0f8d50f5b42a77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13f5d5e0828e1c2ccba67f9a5f0f8d50f5b42a77/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6fe5e235f962f8ac1ab95446de1f18f1c05524b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fe5e235f962f8ac1ab95446de1f18f1c05524b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fe5e235f962f8ac1ab95446de1f18f1c05524b2"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "bc504258ddeaacf4de075f904750f9a039411970", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f5d5e0828e1c2ccba67f9a5f0f8d50f5b42a77/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f5d5e0828e1c2ccba67f9a5f0f8d50f5b42a77/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=13f5d5e0828e1c2ccba67f9a5f0f8d50f5b42a77", "patch": "@@ -1,3 +1,8 @@\n+2017-11-21  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* cfgrtl.c (force_nonfallthru_and_redirect): Don't split a call\n+\tand its corresponding call arg location note.\n+\n 2017-11-21  Claudiu Zissulescu  <claziss@synopsys.com>\n \t    Andrew Burgess  <andrew.burgess@embecosm.com>\n "}, {"sha": "d6e5ac05475d22f1daa4e7d401123827ca46fc56", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f5d5e0828e1c2ccba67f9a5f0f8d50f5b42a77/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f5d5e0828e1c2ccba67f9a5f0f8d50f5b42a77/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=13f5d5e0828e1c2ccba67f9a5f0f8d50f5b42a77", "patch": "@@ -1626,6 +1626,11 @@ force_nonfallthru_and_redirect (edge e, basic_block target, rtx jump_label)\n       else\n \tnew_head = BB_END (e->src);\n       new_head = NEXT_INSN (new_head);\n+      /* Make sure we don't split a call and its corresponding\n+\t CALL_ARG_LOCATION note.  */\n+      if (new_head && NOTE_P (new_head)\n+\t  && NOTE_KIND (new_head) == NOTE_INSN_CALL_ARG_LOCATION)\n+\tnew_head = NEXT_INSN (new_head);\n \n       jump_block = create_basic_block (new_head, NULL, e->src);\n       jump_block->count = count;"}, {"sha": "8d64a22d5c1c92b956557f8b9c46d8f53aef534b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f5d5e0828e1c2ccba67f9a5f0f8d50f5b42a77/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f5d5e0828e1c2ccba67f9a5f0f8d50f5b42a77/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=13f5d5e0828e1c2ccba67f9a5f0f8d50f5b42a77", "patch": "@@ -1,3 +1,7 @@\n+2017-11-21  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* gcc.target/arc/loop-5.cpp: New test.\n+\n 2017-11-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/83047"}, {"sha": "b9b188da61d36824d0c548f1f463d419ed22b021", "filename": "gcc/testsuite/gcc.target/arc/loop-5.cpp", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13f5d5e0828e1c2ccba67f9a5f0f8d50f5b42a77/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Floop-5.cpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13f5d5e0828e1c2ccba67f9a5f0f8d50f5b42a77/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Floop-5.cpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Floop-5.cpp?ref=13f5d5e0828e1c2ccba67f9a5f0f8d50f5b42a77", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -g\" } */\n+\n+/* Check if gcc splits a call from its CALL_ARG_LOCATION note.  If so,\n+   we get an ICE in dwarf2out_var_location.  */\n+\n+typedef void Trans_NS_std_new_handler();\n+void *operator new(unsigned)\n+{\n+  void *p;\n+  while (__builtin_expect(p == 0, false))\n+    {\n+      Trans_NS_std_new_handler handler;\n+      try {\n+\thandler();\n+      } catch (int) {\n+      }\n+    }\n+  return (void*) 0xdead;\n+}"}]}