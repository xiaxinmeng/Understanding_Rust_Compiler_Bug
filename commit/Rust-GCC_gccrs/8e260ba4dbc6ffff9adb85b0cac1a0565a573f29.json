{"sha": "8e260ba4dbc6ffff9adb85b0cac1a0565a573f29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUyNjBiYTRkYmM2ZmZmZjlhZGI4NWIwY2FjMWEwNTY1YTU3M2YyOQ==", "commit": {"author": {"name": "Mumit Khan", "email": "khan@xraylith.wisc.edu", "date": "1999-08-28T22:58:42Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-08-28T22:58:42Z"}, "message": "Mumit Khan  <khan@xraylith.wisc.edu>\n\n        * i386/winnt.c (export_list): New type.\n        (exports_head): Rename to\n        (export_head):  this.\n        (i386_pe_record_exported_symbol): Add is_data flag.\n        (i386_pe_asm_file_end): Emit directive for exported variables.\n        * i386/cygwin.h (i386_pe_record_exported_symbol): Update\n        prototype.\n        * i386/cygwin.h (ASM_OUTPUT_COMMON): Specify symbol type.\n        (ASM_DECLARE_OBJECT_NAME): Likewise.\n        (ASM_DECLARE_FUNCTION_NAME): Likewise.\n        * i386/uwin.h (ASM_DECLARE_FUNCTION_NAME): Likewise.\n\nFrom-SVN: r28944", "tree": {"sha": "b47137ea5466259aece8f5960501a6a93f954699", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b47137ea5466259aece8f5960501a6a93f954699"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e260ba4dbc6ffff9adb85b0cac1a0565a573f29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e260ba4dbc6ffff9adb85b0cac1a0565a573f29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e260ba4dbc6ffff9adb85b0cac1a0565a573f29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e260ba4dbc6ffff9adb85b0cac1a0565a573f29/comments", "author": null, "committer": null, "parents": [{"sha": "acef433b61b5e8001133d37e66250c2f0ab2a042", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acef433b61b5e8001133d37e66250c2f0ab2a042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acef433b61b5e8001133d37e66250c2f0ab2a042"}], "stats": {"total": 61, "additions": 45, "deletions": 16}, "files": [{"sha": "29cd896aa3bc214446b3b9c5ac68627819549fce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e260ba4dbc6ffff9adb85b0cac1a0565a573f29/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e260ba4dbc6ffff9adb85b0cac1a0565a573f29/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e260ba4dbc6ffff9adb85b0cac1a0565a573f29", "patch": "@@ -1,3 +1,17 @@\n+Sat Aug 28 15:58:16 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n+\n+\t* i386/winnt.c (export_list): New type.\n+\t(exports_head): Rename to\n+\t(export_head):  this.\n+\t(i386_pe_record_exported_symbol): Add is_data flag.\n+\t(i386_pe_asm_file_end): Emit directive for exported variables.\n+\t* i386/cygwin.h (i386_pe_record_exported_symbol): Update\n+\tprototype.\n+\t* i386/cygwin.h (ASM_OUTPUT_COMMON): Specify symbol type.\n+\t(ASM_DECLARE_OBJECT_NAME): Likewise.\n+\t(ASM_DECLARE_FUNCTION_NAME): Likewise.\n+\t* i386/uwin.h (ASM_DECLARE_FUNCTION_NAME): Likewise.\n+\n Fri Aug 27 15:35:24 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* cse.c (fold_rtx): Work around bug in Sun V5.0 compilers."}, {"sha": "f19ea50d3f99030230c9fe3595102eaa7382c859", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e260ba4dbc6ffff9adb85b0cac1a0565a573f29/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e260ba4dbc6ffff9adb85b0cac1a0565a573f29/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=8e260ba4dbc6ffff9adb85b0cac1a0565a573f29", "patch": "@@ -327,7 +327,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_COMMON(STREAM, NAME, SIZE, ROUNDED)\t\\\n do {\t\t\t\t\t\t\t\\\n   if (i386_pe_dllexport_name_p (NAME))\t\t\t\\\n-    i386_pe_record_exported_symbol (NAME);\t\t\\\n+    i386_pe_record_exported_symbol (NAME, 1);\t\t\\\n   if (! i386_pe_dllimport_name_p (NAME))\t\t\\\n     {\t\t\t\t\t\t\t\\\n       fprintf ((STREAM), \"\\t.comm\\t\"); \t\t\t\\\n@@ -342,7 +342,7 @@ do {\t\t\t\t\t\t\t\\\n #define ASM_DECLARE_OBJECT_NAME(STREAM, NAME, DECL) \t\\\n do {\t\t\t\t\t\t\t\\\n   if (i386_pe_dllexport_name_p (NAME))\t\t\t\\\n-    i386_pe_record_exported_symbol (NAME);\t\t\\\n+    i386_pe_record_exported_symbol (NAME, 1);\t\t\\\n   ASM_OUTPUT_LABEL ((STREAM), (NAME));\t\t\t\\\n } while (0)\n \n@@ -438,7 +438,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       if (i386_pe_dllexport_name_p (NAME))\t\t\t\t\\\n-\ti386_pe_record_exported_symbol (NAME);\t\t\t\t\\\n+\ti386_pe_record_exported_symbol (NAME, 0);\t\t\t\\\n       if (write_symbols != SDB_DEBUG)\t\t\t\t\t\\\n \ti386_pe_declare_function_type (FILE, NAME, TREE_PUBLIC (DECL));\t\\\n       ASM_OUTPUT_LABEL (FILE, NAME);\t\t\t\t\t\\\n@@ -509,7 +509,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n extern void i386_pe_record_external_function PROTO((char *));\n extern void i386_pe_declare_function_type STDIO_PROTO((FILE *, char *, int));\n-extern void i386_pe_record_exported_symbol PROTO((char *));\n+extern void i386_pe_record_exported_symbol PROTO((char *, int));\n extern void i386_pe_asm_file_end STDIO_PROTO((FILE *));\n \n /* For Win32 ABI compatibility */"}, {"sha": "84604fb9b00e09ac064d0c0b601190157b2da171", "filename": "gcc/config/i386/uwin.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e260ba4dbc6ffff9adb85b0cac1a0565a573f29/gcc%2Fconfig%2Fi386%2Fuwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e260ba4dbc6ffff9adb85b0cac1a0565a573f29/gcc%2Fconfig%2Fi386%2Fuwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fuwin.h?ref=8e260ba4dbc6ffff9adb85b0cac1a0565a573f29", "patch": "@@ -79,7 +79,7 @@ Boston, MA 02111-1307, USA. */\n   do\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       if (i386_pe_dllexport_name_p (NAME))\t\t\t\t\\\n-\ti386_pe_record_exported_symbol (NAME);\t\t\t\t\\\n+\ti386_pe_record_exported_symbol (NAME, 0);\t\t\t\\\n       /* UWIN binutils bug workaround. */\t\t\t\t\\\n       if (0 && write_symbols != SDB_DEBUG)\t\t\t\t\\\n \ti386_pe_declare_function_type (FILE, NAME, TREE_PUBLIC (DECL));\t\\"}, {"sha": "90cae270a88d4b8f85dde6400c0563b33af9b4a0", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 26, "deletions": 11, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e260ba4dbc6ffff9adb85b0cac1a0565a573f29/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e260ba4dbc6ffff9adb85b0cac1a0565a573f29/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=8e260ba4dbc6ffff9adb85b0cac1a0565a573f29", "patch": "@@ -546,7 +546,16 @@ i386_pe_record_external_function (name)\n   extern_head = p;\n }\n \n-static struct extern_list *exports_head;\n+/* Keep a list of exported symbols.  */\n+\n+struct export_list\n+{\n+  struct export_list *next;\n+  char *name;\n+  int is_data;\t\t/* used to type tag exported symbols. */\n+};\n+\n+static struct export_list *export_head;\n \n /* Assemble an export symbol entry.  We need to keep a list of\n    these, so that we can output the export list at the end of the\n@@ -555,15 +564,17 @@ static struct extern_list *exports_head;\n    linkonce.  */\n \n void\n-i386_pe_record_exported_symbol (name)\n+i386_pe_record_exported_symbol (name, is_data)\n      char *name;\n+     int is_data;\n {\n-  struct extern_list *p;\n+  struct export_list *p;\n \n-  p = (struct extern_list *) permalloc (sizeof *p);\n-  p->next = exports_head;\n+  p = (struct export_list *) permalloc (sizeof *p);\n+  p->next = export_head;\n   p->name = name;\n-  exports_head = p;\n+  p->is_data = is_data;\n+  export_head = p;\n }\n \n /* This is called at the end of assembly.  For each external function\n@@ -590,12 +601,16 @@ i386_pe_asm_file_end (file)\n \t}\n     }\n \n-  if (exports_head)\n-    drectve_section ();\n-  for (p = exports_head; p != NULL; p = p->next)\n+  if (export_head)\n     {\n-      fprintf (file, \"\\t.ascii \\\" -export:%s\\\"\\n\",\n-               I386_PE_STRIP_ENCODING (p->name));\n+      struct export_list *q;\n+      drectve_section ();\n+      for (q = export_head; q != NULL; q = q->next)\n+\t{\n+\t  fprintf (file, \"\\t.ascii \\\" -export:%s%s\\\"\\n\",\n+\t\t   I386_PE_STRIP_ENCODING (q->name),\n+\t\t   (q->is_data) ? \",data\" : \"\");\n+\t}\n     }\n }\n "}]}