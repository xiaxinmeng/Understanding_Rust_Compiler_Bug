{"sha": "a6fb11e20d44c00c276779e502a31ccad53b7bf2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZmYjExZTIwZDQ0YzAwYzI3Njc3OWU1MDJhMzFjY2FkNTNiN2JmMg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-02-09T13:50:42Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-02-09T13:50:42Z"}, "message": "200x-xx-xx  Nathan Sidwell  <nathan@codesourcery.com>\n\ngcc/testsuite/\n\t* gcc.c-torture/execute/builtins/memops-asm-lib.c: Do the copy or\n\tset before checking whether it was allowed.\n\t* gcc.c-torture/execute/builtins/lib/memset.c: Do the memset\n\tbefore checking inside_main.\n\nFrom-SVN: r121746", "tree": {"sha": "8fb42e4e78bc33e08e1ad7c23f8143c2bad147b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fb42e4e78bc33e08e1ad7c23f8143c2bad147b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6fb11e20d44c00c276779e502a31ccad53b7bf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6fb11e20d44c00c276779e502a31ccad53b7bf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6fb11e20d44c00c276779e502a31ccad53b7bf2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6fb11e20d44c00c276779e502a31ccad53b7bf2/comments", "author": null, "committer": null, "parents": [{"sha": "4a799f3d0d1e0df351710114be061459c76bdc0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a799f3d0d1e0df351710114be061459c76bdc0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a799f3d0d1e0df351710114be061459c76bdc0e"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "f30c006c9bdadcda51575adb46af8f63c0e8319a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6fb11e20d44c00c276779e502a31ccad53b7bf2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6fb11e20d44c00c276779e502a31ccad53b7bf2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a6fb11e20d44c00c276779e502a31ccad53b7bf2", "patch": "@@ -1,3 +1,10 @@\n+2007-02-09  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* gcc.c-torture/execute/builtins/memops-asm-lib.c: Do the copy or\n+\tset before checking whether it was allowed.\n+\t* gcc.c-torture/execute/builtins/lib/memset.c: Do the memset\n+\tbefore checking inside_main.\n+\n 2007-02-09  Richard Sandiford  <richard@codesourcery.com>\n \n \t* gcc.dg/compat/struct-layout-1.h (v16sf): Define to v4sf on"}, {"sha": "4bfa33ea66f3666a5d0626a90c4b479c83fc0f89", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/lib/memset.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6fb11e20d44c00c276779e502a31ccad53b7bf2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Flib%2Fmemset.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6fb11e20d44c00c276779e502a31ccad53b7bf2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Flib%2Fmemset.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Flib%2Fmemset.c?ref=a6fb11e20d44c00c276779e502a31ccad53b7bf2", "patch": "@@ -4,15 +4,16 @@ extern int inside_main;\n void *\n memset (void *dst, int c, __SIZE_TYPE__ n)\n {\n+  while (n-- != 0)\n+    n[(char *) dst] = c;\n+\n   /* Single-byte memsets should be done inline when optimisation\n-     is enabled.  */\n+     is enabled.  Do this after the copy in case we're being called to\n+     initialize bss.  */\n #ifdef __OPTIMIZE__\n   if (inside_main && n < 2)\n     abort ();\n #endif\n \n-  while (n-- != 0)\n-    n[(char *) dst] = c;\n-\n   return dst;\n }"}, {"sha": "2edd0ffa748147e95f7a093312ded0b4dc4f2124", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/memops-asm-lib.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6fb11e20d44c00c276779e502a31ccad53b7bf2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemops-asm-lib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6fb11e20d44c00c276779e502a31ccad53b7bf2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemops-asm-lib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fmemops-asm-lib.c?ref=a6fb11e20d44c00c276779e502a31ccad53b7bf2", "patch": "@@ -51,27 +51,29 @@ my_bzero (void *d, size_t n)\n void *\n memcpy (void *d, const void *s, size_t n)\n {\n+  void *result = my_memcpy (d, s, n);\n   TEST_ABORT;\n-  return my_memcpy (d, s, n);\n+  return result;\n }\n \n void\n bcopy (const void *s, void *d, size_t n)\n {\n-  TEST_ABORT;\n   my_bcopy (s, d, n);\n+  TEST_ABORT;\n }\n \n void *\n memset (void *d, int c, size_t n)\n {\n+  void *result = my_memset (d, c, n);\n   TEST_ABORT;\n-  return my_memset (d, c, n);\n+  return result;\n }\n \n void\n bzero (void *d, size_t n)\n {\n-  TEST_ABORT;\n   my_bzero (d, n);\n+  TEST_ABORT;\n }"}]}