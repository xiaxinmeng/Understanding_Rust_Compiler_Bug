{"sha": "6d80a8545be028be5d341b98f4619ab09178c2ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ4MGE4NTQ1YmUwMjhiZTVkMzQxYjk4ZjQ2MTlhYjA5MTc4YzJlYQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@multimania.com", "date": "2002-07-15T23:59:02Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-07-15T23:59:02Z"}, "message": "re PR middle-end/7153 (bad operands for 'movsbl' error)\n\n        PR optimization/7153\n        * regmove.c (optimize_reg_copy_3): Don't optimize if the register\n        dies in more than one insn.\n\nFrom-SVN: r55468", "tree": {"sha": "0bd5bce9e9a6dee5dbbedc0753d8616b8d49aa5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bd5bce9e9a6dee5dbbedc0753d8616b8d49aa5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d80a8545be028be5d341b98f4619ab09178c2ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d80a8545be028be5d341b98f4619ab09178c2ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d80a8545be028be5d341b98f4619ab09178c2ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d80a8545be028be5d341b98f4619ab09178c2ea/comments", "author": null, "committer": null, "parents": [{"sha": "0cb45d38bb94c48dea0493029073722cb5ab428c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cb45d38bb94c48dea0493029073722cb5ab428c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cb45d38bb94c48dea0493029073722cb5ab428c"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "5c659805be5fc367edba1c74057af8f476148938", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d80a8545be028be5d341b98f4619ab09178c2ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d80a8545be028be5d341b98f4619ab09178c2ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d80a8545be028be5d341b98f4619ab09178c2ea", "patch": "@@ -1,3 +1,9 @@\n+2002-07-15  Eric Botcazou  <ebotcazou@multimania.com>\n+\n+\tPR optimization/7153\n+\t* regmove.c (optimize_reg_copy_3): Don't optimize if the register\n+\tdies in more than one insn.\n+\n 2002-07-15  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* config/sparc/netbsd-elf.h (TRANSFER_FROM_TRAMPOLINE): Remove."}, {"sha": "1a1fffe097525299d16d5bd69706f35fd6219c00", "filename": "gcc/regmove.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d80a8545be028be5d341b98f4619ab09178c2ea/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d80a8545be028be5d341b98f4619ab09178c2ea/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=6d80a8545be028be5d341b98f4619ab09178c2ea", "patch": "@@ -664,6 +664,7 @@ optimize_reg_copy_3 (insn, dest, src)\n   if (src_no < FIRST_PSEUDO_REGISTER\n       || dst_no < FIRST_PSEUDO_REGISTER\n       || ! find_reg_note (insn, REG_DEAD, src_reg)\n+      || REG_N_DEATHS (src_no) != 1\n       || REG_N_SETS (src_no) != 1)\n     return;\n   for (p = PREV_INSN (insn); p && ! reg_set_p (src_reg, p); p = PREV_INSN (p))"}, {"sha": "5294133f37b088cdc8fb8ba3d51784ffc0a77d2d", "filename": "gcc/testsuite/gcc.c-torture/compile/20020715-1.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d80a8545be028be5d341b98f4619ab09178c2ea/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020715-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d80a8545be028be5d341b98f4619ab09178c2ea/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020715-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020715-1.c?ref=6d80a8545be028be5d341b98f4619ab09178c2ea", "patch": "@@ -0,0 +1,22 @@\n+/* PR optimization/7153 */\n+/* Verify that GCC doesn't promote a register when its\n+   lifetime is not limited to one basic block. */\n+\n+void f(char);\n+void g(void);\n+\n+void scale(void)\n+{\n+  int width;\n+  char bytes;\n+  char *src;\n+\n+  if (width)\n+  {\n+    bytes = *src;\n+    g();\n+    width *= bytes;\n+  }\n+\n+  f(bytes);\n+}"}]}