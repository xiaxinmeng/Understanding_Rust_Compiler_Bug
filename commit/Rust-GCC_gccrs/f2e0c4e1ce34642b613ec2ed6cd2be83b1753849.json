{"sha": "f2e0c4e1ce34642b613ec2ed6cd2be83b1753849", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJlMGM0ZTFjZTM0NjQyYjYxM2VjMmVkNmNkMmJlODNiMTc1Mzg0OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-09-27T07:52:28Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-09-27T07:52:28Z"}, "message": "re PR fortran/77666 (ICE in gfc_omp_clause_default_ctor, at fortran/trans-openmp.c:471)\n\n\tPR fortran/77666\n\t* trans-openmp.c (gfc_omp_private_outer_ref): Return true even for\n\treferences to allocatable arrays.\n\n\t* gfortran.dg/gomp/pr77666.f90: New test.\n\nFrom-SVN: r240522", "tree": {"sha": "d17be163d5873dd2df5a75cc7d91cd0976c4bd21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d17be163d5873dd2df5a75cc7d91cd0976c4bd21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2e0c4e1ce34642b613ec2ed6cd2be83b1753849", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2e0c4e1ce34642b613ec2ed6cd2be83b1753849", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2e0c4e1ce34642b613ec2ed6cd2be83b1753849", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2e0c4e1ce34642b613ec2ed6cd2be83b1753849/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0fbac2d130600a37414c33ecf2c12c9c8945f353", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fbac2d130600a37414c33ecf2c12c9c8945f353", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fbac2d130600a37414c33ecf2c12c9c8945f353"}], "stats": {"total": 43, "additions": 40, "deletions": 3}, "files": [{"sha": "2aa7c69e3f68977db4705b63ba007a154c846ff9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e0c4e1ce34642b613ec2ed6cd2be83b1753849/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e0c4e1ce34642b613ec2ed6cd2be83b1753849/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f2e0c4e1ce34642b613ec2ed6cd2be83b1753849", "patch": "@@ -1,3 +1,9 @@\n+2016-09-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/77666\n+\t* trans-openmp.c (gfc_omp_private_outer_ref): Return true even for\n+\treferences to allocatable arrays.\n+\n 2016-09-26  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/77420"}, {"sha": "b8b8576f366e504dd63903a8c886348ad7ed474f", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e0c4e1ce34642b613ec2ed6cd2be83b1753849/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e0c4e1ce34642b613ec2ed6cd2be83b1753849/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=f2e0c4e1ce34642b613ec2ed6cd2be83b1753849", "patch": "@@ -207,16 +207,16 @@ gfc_omp_private_outer_ref (tree decl)\n {\n   tree type = TREE_TYPE (decl);\n \n+  if (gfc_omp_privatize_by_reference (decl))\n+    type = TREE_TYPE (type);\n+\n   if (GFC_DESCRIPTOR_TYPE_P (type)\n       && GFC_TYPE_ARRAY_AKIND (type) == GFC_ARRAY_ALLOCATABLE)\n     return true;\n \n   if (GFC_DECL_GET_SCALAR_ALLOCATABLE (decl))\n     return true;\n \n-  if (gfc_omp_privatize_by_reference (decl))\n-    type = TREE_TYPE (type);\n-\n   if (gfc_has_alloc_comps (type, decl))\n     return true;\n "}, {"sha": "353fd073a0a64a8f3bbcbe59de5e6d560fa21392", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e0c4e1ce34642b613ec2ed6cd2be83b1753849/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e0c4e1ce34642b613ec2ed6cd2be83b1753849/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f2e0c4e1ce34642b613ec2ed6cd2be83b1753849", "patch": "@@ -1,3 +1,8 @@\n+2016-09-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/77666\n+\t* gfortran.dg/gomp/pr77666.f90: New test.\n+\n 2016-09-27  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \tPR ipa/77677"}, {"sha": "18e039efa52253e51c1fd7c74fd8e8be47370888", "filename": "gcc/testsuite/gfortran.dg/gomp/pr77666.f90", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2e0c4e1ce34642b613ec2ed6cd2be83b1753849/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr77666.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2e0c4e1ce34642b613ec2ed6cd2be83b1753849/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr77666.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr77666.f90?ref=f2e0c4e1ce34642b613ec2ed6cd2be83b1753849", "patch": "@@ -0,0 +1,26 @@\n+! PR fortran/77666\n+! { dg-do compile }\n+\n+subroutine foo(x)\n+  interface\n+    subroutine baz(x, y)\n+      integer, allocatable :: x(:), y\n+    end subroutine\n+  end interface\n+  integer, allocatable :: x(:), y\n+!$omp parallel private(x, y)\n+  call baz (x, y)\n+!$omp end parallel\n+end\n+subroutine bar\n+  interface\n+    subroutine baz(x, y)\n+      integer, allocatable :: x(:), y\n+    end subroutine\n+  end interface\n+  integer, allocatable :: x(:), y\n+  call baz (x, y)\n+!$omp parallel private(x, y)\n+  call baz (x, y)\n+!$omp end parallel\n+end"}]}