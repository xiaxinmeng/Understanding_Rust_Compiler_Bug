{"sha": "1f0e2ace93ef562291720eab89f23c1637ed4ffd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWYwZTJhY2U5M2VmNTYyMjkxNzIwZWFiODlmMjNjMTYzN2VkNGZmZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2006-01-04T08:17:15Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2006-01-04T08:17:15Z"}, "message": "pmm_malloc.h (posix_memalign): If __cplusplus, make the prototype extern \"C\" and add throw ().\n\n\t* config/i386/pmm_malloc.h (posix_memalign): If __cplusplus,\n\tmake the prototype extern \"C\" and add throw ().\n\n\t* g++.dg/other/i386-2.C: New test.\n\nFrom-SVN: r109318", "tree": {"sha": "bae9453026f19b86e9cd465ff527ba1d45a962cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bae9453026f19b86e9cd465ff527ba1d45a962cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f0e2ace93ef562291720eab89f23c1637ed4ffd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f0e2ace93ef562291720eab89f23c1637ed4ffd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f0e2ace93ef562291720eab89f23c1637ed4ffd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f0e2ace93ef562291720eab89f23c1637ed4ffd/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d90ee6be660e3da0871af961be1d2171cf15c622", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d90ee6be660e3da0871af961be1d2171cf15c622", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d90ee6be660e3da0871af961be1d2171cf15c622"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "90d37de683d33bf9b2ece42e8512c3c37baa27f9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0e2ace93ef562291720eab89f23c1637ed4ffd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0e2ace93ef562291720eab89f23c1637ed4ffd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f0e2ace93ef562291720eab89f23c1637ed4ffd", "patch": "@@ -1,5 +1,8 @@\n 2006-01-04  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* config/i386/pmm_malloc.h (posix_memalign): If __cplusplus,\n+\tmake the prototype extern \"C\" and add throw ().\n+\n \tPR target/25554\n \t* config/i386/i386.md (testqi_ext_3): Ensure len is positive\n \tand pos non-negative and pos + len <= 32."}, {"sha": "744ac6d41cc1453a19646a7af691bce2a9109857", "filename": "gcc/config/i386/pmm_malloc.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0e2ace93ef562291720eab89f23c1637ed4ffd/gcc%2Fconfig%2Fi386%2Fpmm_malloc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0e2ace93ef562291720eab89f23c1637ed4ffd/gcc%2Fconfig%2Fi386%2Fpmm_malloc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpmm_malloc.h?ref=1f0e2ace93ef562291720eab89f23c1637ed4ffd", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2004 Free Software Foundation, Inc.\n+/* Copyright (C) 2004, 2006 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -31,7 +31,11 @@\n \n /* We can't depend on <stdlib.h> since the prototype of posix_memalign\n    may not be visible.  */\n+#ifndef __cplusplus\n extern int posix_memalign (void **, size_t, size_t);\n+#else\n+extern \"C\" int posix_memalign (void **, size_t, size_t) throw ();\n+#endif\n \n static __inline void *\n _mm_malloc (size_t size, size_t alignment)"}, {"sha": "1e33d4c9c634a8a461e805edc004a7ec8c7c65e4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0e2ace93ef562291720eab89f23c1637ed4ffd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0e2ace93ef562291720eab89f23c1637ed4ffd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1f0e2ace93ef562291720eab89f23c1637ed4ffd", "patch": "@@ -1,5 +1,7 @@\n 2006-01-04  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* g++.dg/other/i386-2.C: New test.\n+\n \tPR target/25554\n \t* gcc.c-torture/compile/20051228-1.c: New test.\n "}, {"sha": "b988f9d93da184f2a9cb4a08b2451f3b6dde299e", "filename": "gcc/testsuite/g++.dg/other/i386-2.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0e2ace93ef562291720eab89f23c1637ed4ffd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0e2ace93ef562291720eab89f23c1637ed4ffd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-2.C?ref=1f0e2ace93ef562291720eab89f23c1637ed4ffd", "patch": "@@ -0,0 +1,12 @@\n+/* Test that {,x,e,p}mmintrin.h and mm_malloc.h are\n+   usable with -pedantic-errors.  */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-pedantic-errors -msse3\" } */\n+\n+#include <mmintrin.h>\n+#include <xmmintrin.h>\n+#include <emmintrin.h>\n+#include <pmmintrin.h>\n+#include <mm_malloc.h>\n+\n+int dummy;"}]}