{"sha": "e8b97ccd59010685e183b437b1f192e01e2809ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThiOTdjY2Q1OTAxMDY4NWUxODNiNDM3YjFmMTkyZTAxZTI4MDlhZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2011-03-22T20:04:58Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-03-22T20:04:58Z"}, "message": "combine.c (simplify_set): Try harder to find the best CC mode when simplifying a nested COMPARE on the RHS.\n\n\t* combine.c (simplify_set): Try harder to find the best CC mode when\n\tsimplifying a nested COMPARE on the RHS.\n\nFrom-SVN: r171304", "tree": {"sha": "d4c27b860570439ad5f74e0502248939bc81a27e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4c27b860570439ad5f74e0502248939bc81a27e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8b97ccd59010685e183b437b1f192e01e2809ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8b97ccd59010685e183b437b1f192e01e2809ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8b97ccd59010685e183b437b1f192e01e2809ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8b97ccd59010685e183b437b1f192e01e2809ad/comments", "author": null, "committer": null, "parents": [{"sha": "56f8587a5bdc641ab06e81d8dbdb4a441431344a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56f8587a5bdc641ab06e81d8dbdb4a441431344a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56f8587a5bdc641ab06e81d8dbdb4a441431344a"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "a6fa3ddfc8cf126aec6b86beb0ad4c4222986935", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8b97ccd59010685e183b437b1f192e01e2809ad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8b97ccd59010685e183b437b1f192e01e2809ad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8b97ccd59010685e183b437b1f192e01e2809ad", "patch": "@@ -1,3 +1,8 @@\n+2011-03-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* combine.c (simplify_set): Try harder to find the best CC mode when\n+\tsimplifying a nested COMPARE on the RHS.\n+\n 2011-03-22  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/alpha/gnu.h: Remove."}, {"sha": "60bd9eedd5538e2ffed927018bf6b330ef58b1ac", "filename": "gcc/combine.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8b97ccd59010685e183b437b1f192e01e2809ad/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8b97ccd59010685e183b437b1f192e01e2809ad/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=e8b97ccd59010685e183b437b1f192e01e2809ad", "patch": "@@ -6240,10 +6240,18 @@ simplify_set (rtx x)\n       enum rtx_code new_code;\n       rtx op0, op1, tmp;\n       int other_changed = 0;\n+      rtx inner_compare = NULL_RTX;\n       enum machine_mode compare_mode = GET_MODE (dest);\n \n       if (GET_CODE (src) == COMPARE)\n-\top0 = XEXP (src, 0), op1 = XEXP (src, 1);\n+\t{\n+\t  op0 = XEXP (src, 0), op1 = XEXP (src, 1);\n+\t  if (GET_CODE (op0) == COMPARE && op1 == const0_rtx)\n+\t    {\n+\t      inner_compare = op0;\n+\t      op0 = XEXP (inner_compare, 0), op1 = XEXP (inner_compare, 1);\n+\t    }\n+\t}\n       else\n \top0 = src, op1 = CONST0_RTX (GET_MODE (src));\n \n@@ -6285,6 +6293,12 @@ simplify_set (rtx x)\n \t need to use a different CC mode here.  */\n       if (GET_MODE_CLASS (GET_MODE (op0)) == MODE_CC)\n \tcompare_mode = GET_MODE (op0);\n+      else if (inner_compare\n+\t       && GET_MODE_CLASS (GET_MODE (inner_compare)) == MODE_CC\n+\t       && new_code == old_code\n+\t       && op0 == XEXP (inner_compare, 0)\n+\t       && op1 == XEXP (inner_compare, 1))\n+\tcompare_mode = GET_MODE (inner_compare);\n       else\n \tcompare_mode = SELECT_CC_MODE (new_code, op0, op1);\n "}]}