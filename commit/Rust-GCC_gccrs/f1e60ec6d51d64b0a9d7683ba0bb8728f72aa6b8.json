{"sha": "f1e60ec6d51d64b0a9d7683ba0bb8728f72aa6b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFlNjBlYzZkNTFkNjRiMGE5ZDc2ODNiYTBiYjg3MjhmNzJhYTZiOA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-10T01:56:55Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-10T01:56:55Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r951", "tree": {"sha": "d28034accfc4bade6354b6324e6ad63ef09ff6cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d28034accfc4bade6354b6324e6ad63ef09ff6cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1e60ec6d51d64b0a9d7683ba0bb8728f72aa6b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1e60ec6d51d64b0a9d7683ba0bb8728f72aa6b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1e60ec6d51d64b0a9d7683ba0bb8728f72aa6b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1e60ec6d51d64b0a9d7683ba0bb8728f72aa6b8/comments", "author": null, "committer": null, "parents": [{"sha": "95d3562b5a4f0f6b30e36a99d4de2e15fd98637f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95d3562b5a4f0f6b30e36a99d4de2e15fd98637f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95d3562b5a4f0f6b30e36a99d4de2e15fd98637f"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "75f5c18eee11e36ee437b390107ac5d9f2b5971b", "filename": "gcc/fold-const.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e60ec6d51d64b0a9d7683ba0bb8728f72aa6b8/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e60ec6d51d64b0a9d7683ba0bb8728f72aa6b8/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=f1e60ec6d51d64b0a9d7683ba0bb8728f72aa6b8", "patch": "@@ -2027,24 +2027,26 @@ optimize_bit_field_compare (code, compare_type, lhs, rhs)\n   int lvolatilep = 0, rvolatilep = 0;\n   tree linner, rinner;\n   tree mask;\n+  tree offset;\n \n   /* Get all the information about the extractions being done.  If the bit size\n      if the same as the size of the underlying object, we aren't doing an\n      extraction at all and so can do nothing.  */\n-  linner = get_inner_reference (lhs, &lbitsize, &lbitpos, &lmode,\n+  linner = get_inner_reference (lhs, &lbitsize, &lbitpos, &offset, &lmode,\n \t\t\t\t&lunsignedp, &lvolatilep);\n-  if (lbitsize == GET_MODE_BITSIZE (lmode) || lbitsize < 0)\n+  if (lbitsize == GET_MODE_BITSIZE (lmode) || lbitsize < 0\n+      || offset != 0)\n     return 0;\n \n  if (!const_p)\n    {\n      /* If this is not a constant, we can only do something if bit positions,\n \tsizes, and signedness are the same.   */\n-     rinner = get_inner_reference (rhs, &rbitsize, &rbitpos,\n+     rinner = get_inner_reference (rhs, &rbitsize, &rbitpos, &offset,\n \t\t\t\t   &rmode, &runsignedp, &rvolatilep);\n \n      if (lbitpos != rbitpos || lbitsize != rbitsize\n-\t || lunsignedp != runsignedp)\n+\t || lunsignedp != runsignedp || offset != 0)\n        return 0;\n    }\n \n@@ -2204,6 +2206,7 @@ decode_field_reference (exp, pbitsize, pbitpos, pmode, punsignedp,\n {\n   tree mask = 0;\n   tree inner;\n+  tree offset;\n \n   STRIP_NOPS (exp);\n \n@@ -2220,9 +2223,9 @@ decode_field_reference (exp, pbitsize, pbitpos, pmode, punsignedp,\n       && TREE_CODE (exp) != BIT_FIELD_REF)\n     return 0;\n \n-  inner = get_inner_reference (exp, pbitsize, pbitpos, pmode,\n+  inner = get_inner_reference (exp, pbitsize, pbitpos, &offset, pmode,\n \t\t\t       punsignedp, pvolatilep);\n-  if (*pbitsize < 0)\n+  if (*pbitsize < 0 || offset != 0)\n     return 0;\n   \n   if (mask == 0)"}]}