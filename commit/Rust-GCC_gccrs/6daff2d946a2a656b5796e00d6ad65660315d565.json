{"sha": "6daff2d946a2a656b5796e00d6ad65660315d565", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRhZmYyZDk0NmEyYTY1NmI1Nzk2ZTAwZDZhZDY1NjYwMzE1ZDU2NQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-10-24T16:45:51Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-10-24T16:45:51Z"}, "message": "PR71337 fix filesystem::temp_directory_path error handling\n\n\tPR libstdc++/71337\n\t* src/filesystem/ops.cc (temp_directory_path): Pass error_code\n\targument to other filesystem operations.\n\t* testsuite/experimental/filesystem/operations/temp_directory_path.cc:\n\tAdd testcase for inaccessible directory.\n\nFrom-SVN: r241487", "tree": {"sha": "2fdbe7c11d477c3df27aa4e6f0894e21230764f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fdbe7c11d477c3df27aa4e6f0894e21230764f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6daff2d946a2a656b5796e00d6ad65660315d565", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6daff2d946a2a656b5796e00d6ad65660315d565", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6daff2d946a2a656b5796e00d6ad65660315d565", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6daff2d946a2a656b5796e00d6ad65660315d565/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb52a7e324258d55eef28d2b1c473b3973507da2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb52a7e324258d55eef28d2b1c473b3973507da2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb52a7e324258d55eef28d2b1c473b3973507da2"}], "stats": {"total": 65, "additions": 61, "deletions": 4}, "files": [{"sha": "bc9a215e20a5e113f238c53811da9850b9347d40", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6daff2d946a2a656b5796e00d6ad65660315d565/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6daff2d946a2a656b5796e00d6ad65660315d565/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6daff2d946a2a656b5796e00d6ad65660315d565", "patch": "@@ -1,5 +1,11 @@\n 2016-10-24  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/71337\n+\t* src/filesystem/ops.cc (temp_directory_path): Pass error_code\n+\targument to other filesystem operations.\n+\t* testsuite/experimental/filesystem/operations/temp_directory_path.cc:\n+\tAdd testcase for inaccessible directory.\n+\n \t* src/filesystem/dir.cc (open_dir): Return same value for errors\n \twhether ignored or not.\n \t(_Dir::advance(error_code*, directory_options)): Return false on"}, {"sha": "90c225b03391fe75eaf6288049eb3a53d4151f3f", "filename": "libstdc++-v3/src/filesystem/ops.cc", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6daff2d946a2a656b5796e00d6ad65660315d565/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6daff2d946a2a656b5796e00d6ad65660315d565/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fops.cc?ref=6daff2d946a2a656b5796e00d6ad65660315d565", "patch": "@@ -1428,12 +1428,17 @@ fs::path fs::temp_directory_path(error_code& ec)\n   for (auto e = env; tmpdir == nullptr && *e != nullptr; ++e)\n     tmpdir = ::getenv(*e);\n   path p = tmpdir ? tmpdir : \"/tmp\";\n-  if (exists(p) && is_directory(p))\n+  auto st = status(p, ec);\n+  if (!ec)\n     {\n-      ec.clear();\n-      return p;\n+      if (is_directory(st))\n+\t{\n+\t  ec.clear();\n+\t  return p;\n+\t}\n+      else\n+\tec = std::make_error_code(std::errc::not_a_directory);\n     }\n-  ec = std::make_error_code(std::errc::not_a_directory);\n   return {};\n #endif\n }"}, {"sha": "7f7e9fd7f26d10739293af5887170b5c75454cb8", "filename": "libstdc++-v3/testsuite/experimental/filesystem/operations/temp_directory_path.cc", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6daff2d946a2a656b5796e00d6ad65660315d565/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Ftemp_directory_path.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6daff2d946a2a656b5796e00d6ad65660315d565/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Ftemp_directory_path.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Foperations%2Ftemp_directory_path.cc?ref=6daff2d946a2a656b5796e00d6ad65660315d565", "patch": "@@ -45,6 +45,7 @@ test01()\n \n   std::error_code ec;\n   fs::path p1 = fs::temp_directory_path(ec);\n+  VERIFY( !ec );\n   VERIFY( exists(p1) );\n \n   fs::path p2 = fs::temp_directory_path();\n@@ -62,6 +63,7 @@ test02()\n   std::error_code ec;\n   fs::path p = fs::temp_directory_path(ec);\n   VERIFY( ec );\n+  VERIFY( p == fs::path() );\n \n   std::error_code ec2;\n   try {\n@@ -72,10 +74,54 @@ test02()\n   VERIFY( ec2 == ec );\n }\n \n+void\n+test03()\n+{\n+  auto p = __gnu_test::nonexistent_path();\n+  create_directories(p/\"tmp\");\n+  permissions(p, fs::perms::none);\n+  setenv(\"TMPDIR\", (p/\"tmp\").c_str(), 1);\n+  std::error_code ec;\n+  auto r = fs::temp_directory_path(ec); // libstdc++/PR71337\n+  VERIFY( ec == std::make_error_code(std::errc::permission_denied) );\n+  VERIFY( r == fs::path() );\n+\n+  std::error_code ec2;\n+  try {\n+    fs::temp_directory_path();\n+  } catch (const fs::filesystem_error& e) {\n+    ec2 = e.code();\n+  }\n+  VERIFY( ec2 == ec );\n+\n+  permissions(p, fs::perms::owner_all, ec);\n+  remove_all(p, ec);\n+}\n+\n+void\n+test04()\n+{\n+  __gnu_test::scoped_file f;\n+  setenv(\"TMPDIR\", f.path.c_str(), 1);\n+  std::error_code ec;\n+  auto r = fs::temp_directory_path(ec);\n+  VERIFY( ec == std::make_error_code(std::errc::not_a_directory) );\n+  VERIFY( r == fs::path() );\n+\n+  std::error_code ec2;\n+  try {\n+    fs::temp_directory_path();\n+  } catch (const fs::filesystem_error& e) {\n+    ec2 = e.code();\n+  }\n+  VERIFY( ec2 == ec );\n+}\n \n int\n main()\n {\n   test01();\n   test02();\n+  test03();\n+  test04();\n }"}]}