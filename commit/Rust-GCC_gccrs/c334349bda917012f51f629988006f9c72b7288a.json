{"sha": "c334349bda917012f51f629988006f9c72b7288a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzMzNDM0OWJkYTkxNzAxMmY1MWY2Mjk5ODgwMDZmOWM3MmI3Mjg4YQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-07-13T04:43:47Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-07-13T04:43:47Z"}, "message": "gcc.c (execute): If a subprocess gets a fatal signal...\n\n\t* gcc.c (execute): If a subprocess gets a fatal signal, report\n\tstrsignal() of the signal number, and ask for a bug report.\n\tDo not do this for SIGPIPE if there's already been an error.\n\n\t* tradcpp.c: Don't include signal.h.  Don't catch SIGPIPE.\n\tDelete pipe_closed.\n\nFrom-SVN: r35006", "tree": {"sha": "6de36bf7b8f48857cc3e90312c8d4589da6c3f6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6de36bf7b8f48857cc3e90312c8d4589da6c3f6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c334349bda917012f51f629988006f9c72b7288a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c334349bda917012f51f629988006f9c72b7288a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c334349bda917012f51f629988006f9c72b7288a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c334349bda917012f51f629988006f9c72b7288a/comments", "author": null, "committer": null, "parents": [{"sha": "dcacfa04fe67a4f0c957d0b37e0c750d2036d34d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcacfa04fe67a4f0c957d0b37e0c750d2036d34d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcacfa04fe67a4f0c957d0b37e0c750d2036d34d"}], "stats": {"total": 136, "additions": 72, "deletions": 64}, "files": [{"sha": "0081c8a1547ffe0b39e7d096242903566a01e088", "filename": "gcc/ChangeLog", "status": "modified", "additions": 44, "deletions": 35, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c334349bda917012f51f629988006f9c72b7288a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c334349bda917012f51f629988006f9c72b7288a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c334349bda917012f51f629988006f9c72b7288a", "patch": "@@ -1,3 +1,12 @@\n+2000-07-12  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* gcc.c (execute): If a subprocess gets a fatal signal, report\n+\tstrsignal() of the signal number, and ask for a bug report.\n+\tDo not do this for SIGPIPE if there's already been an error.\n+\n+\t* tradcpp.c: Don't include signal.h.  Don't catch SIGPIPE.\n+\tDelete pipe_closed.\n+\n 2000-07-12  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* final.c (profile_function): Do not emit profile counters in\n@@ -63,13 +72,13 @@ Wed Jul 12 13:24:30 2000  Jeffrey A Law  (law@cygnus.com)\n \n \t* gcc.c (C specs [!USE_CPPLIB]): Invoke tradcpp if any of\n \t-traditional, -ftraditional, or -traditional-cpp was given.\n-\tDo not pass -traditional to the preprocessor.              \n+\tDo not pass -traditional to the preprocessor.\n \t(.S spec): Likewise.  Don't bother defining __ASSEMBLER__, the\n \tpreprocessor does it automatically.\n \t* objc/lang-specs.h: Likewise.  Don't bother defining __OBJC__.\n \n \t* ch/lang-specs.h: Always use tradcpp.  Do not pass\n-\t-traditional, -trigraphs, or -pedantic to the preprocessor.  \n+\t-traditional, -trigraphs, or -pedantic to the preprocessor.\n \t* f/lang-specs.h (.F spec): Likewise.  Don't bother defining\n \t_LANGUAGE_FORTRAN.\n \n@@ -109,7 +118,7 @@ Wed Jul 12 13:15:16 2000  Marc Espie <espie@openbsd.org>\n \n \t* c-decl.c (set_current_function_name_declared, anon_aggr_type_p,\n \tlang_expand_stmt): Mark parameters with ATTRIBUTE_UNUSED.\n-\t\n+\n \t* c-parse.in (stmt): Delete unused variables.\n \n \t* convert.c (convert_to_vector): Likewise.\n@@ -159,7 +168,7 @@ Wed Jul 12 13:15:16 2000  Marc Espie <espie@openbsd.org>\n \t* c-parse.y: Likewise.\n \t* objc/objc-parse.c: Likewise.\n \t* objc/objc-pasre.y: Likewise.\n-\t\n+\n 2000-07-11  Rodney Brown  <RodneyBrown@pmsc.com>\n \n \t* gcc.texi: Fix minor typos\n@@ -188,7 +197,7 @@ Wed Jul 12 13:15:16 2000  Marc Espie <espie@openbsd.org>\n \tline_wrap_cutoff, ideal_line_wrap_cutoff, prefix_was_emitted_for,\n \tprefixing_policy, output_buffer_ptr_to_format_args): New macros\n \t(set_real_maximum_length, output_set_maximum_length,\n-\toutput_set_prefix, output_get_prefix, output_set_maximum_length, \n+\toutput_set_prefix, output_get_prefix, output_set_maximum_length,\n \toutput_destroy_prefix, init_output_buffer,\n \treshape_diagnostic_buffer, output_space_left, output_emit_prefix,\n \toutput_add_newline, output_add_character, output_add_space,\n@@ -200,8 +209,8 @@ Wed Jul 12 13:15:16 2000  Marc Espie <espie@openbsd.org>\n \t(struct output_state): Move to...\n \n \t* diagnostic.h: ...Here\n-\t(struct output_buffer): Adjust. \n-\t\n+\t(struct output_buffer): Adjust.\n+\n 2000-07-11  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* cpplex.c (parse_name): No longer inline (premature optimization).\n@@ -324,7 +333,7 @@ Tue Jul 11 16:26:17 2000  Clinton Popetz  <cpopetz@cygnus.com>\n \t(output_format): Adjust arguments extraction. Tweak.\n \t(output_verbatim, verbatim): End variable argument list.\n \t(report_diagnostic): Improve documentation.\n-\t\n+\n 2000-07-10  Benjamin Chelf  <chelf@codesourcery.com>\n \n \t* c-common.h (build_stmt): Declare.\n@@ -349,7 +358,7 @@ Tue Jul 11 16:26:17 2000  Clinton Popetz  <cpopetz@cygnus.com>\n \n \t* c-parse.y: Regenerate.\n \t* c-pasre.c: Likewise.\n-\t\n+\n 2000-07-09  Jason Merrill  <jason@redhat.com>\n \n \t* expr.c (expand_expr): Bail earlier if we get an error_mark_node.\n@@ -377,7 +386,7 @@ Tue Jul 11 16:26:17 2000  Clinton Popetz  <cpopetz@cygnus.com>\n \t(report_diagnostic): Define.\n \n \t* diagnostic.h (report_diagnostic): Prototype.\n-\t\n+\n 2000-07-09  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* cppexp.c (_cpp_parse_expr): Don't use unary plus.\n@@ -409,7 +418,7 @@ Tue Jul 11 16:26:17 2000  Clinton Popetz  <cpopetz@cygnus.com>\n \t(output_state): New data type.\n \t(digit_buffer): Make global.\n \t(output_add_integer): Rename to output_decimal. Squeeze\n-\tdigit_buffer. \n+\tdigit_buffer.\n \t(output_long_decimal, output_unsigned_decimal,\n \toutput_long_unsigned_decimal, output_octal, output_long_octal,\n \toutput_hexadecimal, output_long_hexadecimal): New functions.\n@@ -423,7 +432,7 @@ Tue Jul 11 16:26:17 2000  Clinton Popetz  <cpopetz@cygnus.com>\n \t(output_printf): Tweak.\n \t(line_wrapper_printf): Likewise.\n \t(vline_wrapper_message_with_location): Adjust call to renamed\n-\tfunctions. \n+\tfunctions.\n \t(v_message_with_decl): Likewise.\n \t(default_print_error_function): Likewise.\n \t(save_output_state): New function.\n@@ -477,12 +486,12 @@ Tue Jul 11 16:26:17 2000  Clinton Popetz  <cpopetz@cygnus.com>\n \tnode pointer.  Inline.\n \t(maybe_paste_with_next): If the result of paste is a NAME,\n \tthen look up the pasted text and store its node pointer.\n-\t(lex_line): Adjust for new parse_name interface.  \n+\t(lex_line): Adjust for new parse_name interface.\n \tCheck for L\"str\", L'str' using spec_nodes->n_L.\n \t(spell_token): SPELL_IDENT tokens have their spelling in\n \tval.node->name.  Handle SPELL_STRING tokens that don't have\n \tstring delimiters.\n-\t(_cpp_expand_name_space, \n+\t(_cpp_expand_name_space,\n \t(can_paste): Check for L ## \"str\" using spec_nodes->n_L.\n \t(cpp_get_token, special_symbol): No need to call cpp_lookup.\n \t(cpp_idcmp): Now cpp_ideq; take a token * and a const char *;\n@@ -508,7 +517,7 @@ Tue Jul 11 16:26:17 2000  Clinton Popetz  <cpopetz@cygnus.com>\n \t(_cpp_init_stacks): Also initialize the spec_nodes structure.\n \n \t* cppinit.c (cpp_reader_init): Call _cpp_init_stacks after\n-\t_cpp_init_macros. \n+\t_cpp_init_macros.\n \t(cpp_cleanup): Free pfile->spec_nodes.  Call _cpp_cleanup_* in\n \treverse order from the corresponding _cpp_init_* routines.\n \n@@ -820,7 +829,7 @@ Mon Jul  3 21:31:43 2000  Clinton Popetz  <cpopetz@cygnus.com>\n \t(strtoul_for_line, get_define_node, dump_macro_name,\n \t_cpp_check_linemarker, _cpp_parse_assertion): New.\n \t(_cpp_handle_directive, do_pragma_default): Delete.\n-\t\n+\n \t* cpphash.h (struct predicate): Now struct answer.\n \t(enum spell_type, struct token_spelling, struct directive,\n \tdirective_handler): New.\n@@ -829,7 +838,7 @@ Mon Jul  3 21:31:43 2000  Clinton Popetz  <cpopetz@cygnus.com>\n \tstructure definitions, and fields.\n \n \t* cpperror.c (print_containing_files, v_message): Adjust.\n-\t* cppexp.c (parse_assertion, lex, parse_escape, \n+\t* cppexp.c (parse_assertion, lex, parse_escape,\n \t_cpp_parse_expr): Adjust.\n \t* cppfiles.c (open_include_file, _cpp_execute_include,\n \t_cpp_compare_file_date, cpp_read_file, read_include_file):\n@@ -936,7 +945,7 @@ Mon Jul  3 00:32:47 2000  Jeffrey A Law  (law@cygnus.com)\n \t(genrtl_finish_compound_stmt): Likewise.\n \t(genrtl_compound_stmt): Change to return void.\n \n-\t* c-semantics.c (genrtl_begin_compound_stmt): Remove function and \n+\t* c-semantics.c (genrtl_begin_compound_stmt): Remove function and\n \tmove code from here to ...\n \t(genrtl_compound_stmt): ... here.\n \t(genrtl_finish_compound_stmt): Remove.\n@@ -964,7 +973,7 @@ Mon Jul  3 00:32:47 2000  Jeffrey A Law  (law@cygnus.com)\n \n \t* Makefile.in (C_AND_OBJC_OBJS): Added c-semantics.o.\n \t(c-semantics.o): New target.\n-\t\n+\n \t* c-common.h (TREE_LANG_FLAG_?): Added documentation.\n \t(genrtl_do_pushlevel): Moved from cp/cp-tree.h.\n \t(genrtl_clear_out_block): Likewise.\n@@ -1006,15 +1015,15 @@ Mon Jul  3 00:32:47 2000  Jeffrey A Law  (law@cygnus.com)\n \t(anon_aggr_type_p): Likewise.\n \t(lang_expand_expr_stmt): Likewise.\n \t(build_case_label): Likewise.\n-\t\n+\n \t* c-decl.c (lang_expand_expr_stmt): Initialize.\n \t(stmts_are_full_exprs_p): Define.\n \t(current_function_name_declared): Likewise.\n \t(do_case): Likewise.\n \t(lang_expand_stmt): Likewise.\n \t(set_current_function_name_declared): Likewise.\n \t(anon_aggr_type_p): Likewise.\n-\t\n+\n \t* c-semantics.c: New file.\n \t(expand_cond): Moved from cp/semantics.c.\n \t(genrtl_do_pushlevel): Likewise.\n@@ -1044,7 +1053,7 @@ Mon Jul  3 00:32:47 2000  Jeffrey A Law  (law@cygnus.com)\n \t* c-tree.h: (c_expand_asm_operands): Moved to c-common.h.\n \t(c_expand_return): Likewise.\n \t(c_expand_start_case): Likewise.\n-\t\t\n+\n 2000-07-01  Richard Henderson  <rth@cygnus.com>\n \n \t* config/ia64/ia64.c (symbolic_operand): Reject CONST expressions\n@@ -1067,7 +1076,7 @@ Mon Jul  3 00:32:47 2000  Jeffrey A Law  (law@cygnus.com)\n \t(NORID): Likewise.\n \t(RID_FIRST_MODIFIER): Likewise.\n \t(ridpointers): Likewise.\n-\t\n+\n 2000-06-30  J. David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* pa/som.h (ASM_WEAKEN_LABEL): Export weak data symbols so that they\n@@ -1079,7 +1088,7 @@ Mon Jul  3 00:32:47 2000  Jeffrey A Law  (law@cygnus.com)\n \talways an error.\n \n 2000-06-30  Catherine Moore  <clm@cygnus.com>\n- \n+\n \t* c-common.c (decl_attributes):  Differentiate between\n \ttypes and type decls for alignment.\n \n@@ -1143,11 +1152,11 @@ Mon Jul  3 00:32:47 2000  Jeffrey A Law  (law@cygnus.com)\n \t(flag_traditional): Likewise.\n \t(flag_isoc99): Likewise.\n \t(warn_parentheses): Likewise.\n-\t\n+\n 2000-06-29  James E. Wilson  <wilson@cygnus.com>\n \n \t* config/ia64/linux.h (LINK_SPEC): Change so.1 to so.2.\n-\t\n+\n \t* config/ia64/ia64.h (MODES_TIEABLE_P): Only tie if mode class is the\n \tsame.  Only tie XFmode with XFmode.\n \n@@ -1221,7 +1230,7 @@ Wed Jun 28 15:39:26 2000  Donn Terry (donnte@microsoft.com)\n 2000-06-28  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* cppfiles.c (open_include_file): If open(2) returns EMFILE or\n-\tENFILE, close all cached file descriptors and try again.      \n+\tENFILE, close all cached file descriptors and try again.\n \t(_cpp_execute_include): Keep a count of the number of times\n \teach header is included.\n \t(close_cached_fd): New function.\n@@ -1244,7 +1253,7 @@ Wed Jun 28 14:46:58 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n \n 2000-06-27  Andrew Macleod <amacleod@cygnus.com>\n \n-\t* dwarf2out.c (ASM_OUTPUT_DWARF_DATA2): Provide default when no \n+\t* dwarf2out.c (ASM_OUTPUT_DWARF_DATA2): Provide default when no\n \tunsigned macros available.\n \n 2000-06-27  Richard Henderson  <rth@cygnus.com>\n@@ -1297,7 +1306,7 @@ Tue Jun 27 12:03:03 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n \t* riscix.h: Likewise.\n \t* c4x.h: Likewise.\n \t* clipper.h: Likewise.\n-\t* convex.h: Likewise. \n+\t* convex.h: Likewise.\n \t* elxsi.h: Likewise.\n \t* fr30.h: Likewise.\n \t* fx80.h: Likewise.\n@@ -1408,11 +1417,11 @@ Tue Jun 27 12:03:03 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n \tand comments.\n \t(rename_equivalent_regs_in_insn): Don't handle SUBREGs specially.\n \t(rename_equivalent_regs): Expand SEQUENCEs out to individual insns.\n-\t\n+\n 2000-06-26  Andrew Macleod <amacleod@cygnus.com>\n \t    Jason Merrill <jason@redhat.com>\n \n-\t* dwarf2.h (enum dwarf_call_frame_info): Add \n+\t* dwarf2.h (enum dwarf_call_frame_info): Add\n \tDW_CFA_def_cfa_expression.\n \t* dwarf2out.c (union dw_cfi_oprnd_struct): Add a pointer to a\n \tdw_loc_descr_struct entry.\n@@ -1432,7 +1441,7 @@ Tue Jun 27 12:03:03 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n \tsequences for the new DW_CFA_def_cfa_expression record.\n \t(dwarf2out_frame_debug): Use new variables/fields.A\n \t(output_cfi): Handle DW_CFA_def_cfa_expression.\n-\t(output_cfa_loc): New function to generate a CFI record for \n+\t(output_cfa_loc): New function to generate a CFI record for\n \tDW_CFA_def_cfa_expression.\n \t(get_cfa_from_loc_descr): New function to get a cfa_loc record from\n \ta dw_loc_descr sequeunce.\n@@ -1513,7 +1522,7 @@ Tue Jun 27 12:03:03 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n \tcompiler found.\n \tAM_GNU_GETTEXT: Don't set CATALOGS if create_catalogs=no.\n \t* configure: Rebuilt.\n-\t\n+\n 2000-06-25  John David Anglin  <dave.anglin@nrc.ca>\n \n \t* config/vax/vax.h (TARGET_SWITCHES): Provide descriptions.\n@@ -1585,7 +1594,7 @@ Tue Jun 27 12:03:03 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n \n 2000-06-24  Nathan Sidwell  <nathan@codesourcery.com>\n \n-\t* cpp.texi: Clarify #pragma GCC namespace.\t\n+\t* cpp.texi: Clarify #pragma GCC namespace.\n \n 2000-06-24  Philipp Thomas  <pthomas@suse.de>\n \n@@ -1677,7 +1686,7 @@ Tue Jun 27 12:03:03 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n \t* cppinit.c: Include splay-tree.h.\n \t(cpp_reader_init, cpp_cleanup): Update.\n \n-\t* cpplib.h (struct cpp_buffer): Change ihash field to \n+\t* cpplib.h (struct cpp_buffer): Change ihash field to\n \t'struct include_file *inc'.  Remove system_header_p.\n \t(struct cpp_reader): Change all_include_files to a\n \tstruct splay_tree_s *."}, {"sha": "c2e2a472e8e3f26a5f54f73edf636458bfa658c0", "filename": "gcc/gcc.c", "status": "modified", "additions": 28, "deletions": 15, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c334349bda917012f51f629988006f9c72b7288a/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c334349bda917012f51f629988006f9c72b7288a/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=c334349bda917012f51f629988006f9c72b7288a", "patch": "@@ -2653,22 +2653,35 @@ execute ()\n \t  if (commands[j].pid == pid)\n \t    {\n \t      i++;\n-\t      if (status != 0)\n+\t      if (WIFSIGNALED (status))\n \t\t{\n-\t\t  if (WIFSIGNALED (status))\n-\t\t    {\n-\t\t      fatal (\"Internal compiler error: program %s got fatal signal %d\",\n-\t\t\t     commands[j].prog, WTERMSIG (status));\n-\t\t      signal_count++;\n-\t\t      ret_code = -1;\n-\t\t    }\n-\t\t  else if (WIFEXITED (status)\n-\t\t\t   && WEXITSTATUS (status) >= MIN_FATAL_STATUS)\n-\t\t    {\n-\t\t      if (WEXITSTATUS (status) > greatest_status)\n-\t\t\tgreatest_status = WEXITSTATUS (status);\n-\t\t      ret_code = -1;\n-\t\t    }\n+#ifdef SIGPIPE\n+\t\t  /* SIGPIPE is a special case.  It happens in -pipe mode\n+\t\t     when the compiler dies before the preprocessor is\n+\t\t     done, or the assembler dies before the compiler is\n+\t\t     done.  There's generally been an error already, and\n+\t\t     this is just fallout.  So don't generate another error\n+\t\t     unless we would otherwise have succeeded.  */\n+\t\t  if (WTERMSIG (status) == SIGPIPE\n+\t\t      && (signal_count || greatest_status >= MIN_FATAL_STATUS))\n+\t\t    ;\n+\t\t  else\n+#endif\n+\t\t    fatal (\"\\\n+Internal error: %s (program %s)\\n\\\n+Please submit a full bug report.\\n\\\n+See %s for instructions.\",\n+\t\t\t   strsignal (WTERMSIG (status)), commands[j].prog,\n+\t\t\t   GCCBUGURL);\n+\t\t  signal_count++;\n+\t\t  ret_code = -1;\n+\t\t}\n+\t      else if (WIFEXITED (status)\n+\t\t       && WEXITSTATUS (status) >= MIN_FATAL_STATUS)\n+\t\t{\n+\t\t  if (WEXITSTATUS (status) > greatest_status)\n+\t\t    greatest_status = WEXITSTATUS (status);\n+\t\t  ret_code = -1;\n \t\t}\n #ifdef HAVE_GETRUSAGE\n \t      if (report_times && ut + st != 0)"}, {"sha": "971dfeffdb1912034bbac39b704563d21d60621d", "filename": "gcc/tradcpp.c", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c334349bda917012f51f629988006f9c72b7288a/gcc%2Ftradcpp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c334349bda917012f51f629988006f9c72b7288a/gcc%2Ftradcpp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftradcpp.c?ref=c334349bda917012f51f629988006f9c72b7288a", "patch": "@@ -28,8 +28,6 @@ Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.\n #include \"version.h\"\n #include \"cppdefault.h\"\n \n-#include <signal.h>\n-\n typedef unsigned char U_CHAR;\n \n /* Name under which this program was invoked.  */\n@@ -387,7 +385,6 @@ U_CHAR *skip_to_end_of_comment PARAMS ((FILE_BUF *, int *));\n U_CHAR *skip_quoted_string     PARAMS ((U_CHAR *, U_CHAR *, int,\n \t\t\t\t\tint *, int *, int *));\n \n-void pipe_closed\tPARAMS ((int));\n int main\t\tPARAMS ((int, char **));\n \n /* Convenience.  Write U\"string\" to get an unsigned string constant.  */\n@@ -457,15 +454,6 @@ int deps_column;\n /* Nonzero means -I- has been seen,\n    so don't look for #include \"foo\" the source-file directory.  */\n int ignore_srcdir;\n-\f\n-/* Handler for SIGPIPE.  */\n-\n-void\n-pipe_closed (dummy)\n-     int dummy ATTRIBUTE_UNUSED;\n-{\n-  exit (FATAL_EXIT_CODE);\n-}\n \n int\n main (argc, argv)\n@@ -515,8 +503,6 @@ main (argc, argv)\n   dump_macros = 0;\n   no_output = 0;\n \n-  signal (SIGPIPE, pipe_closed);\n-\n   max_include_len = cpp_GCC_INCLUDE_DIR_len + 7;  /* ??? */\n \n   memset (pend_files, 0, argc * sizeof (char *));"}]}