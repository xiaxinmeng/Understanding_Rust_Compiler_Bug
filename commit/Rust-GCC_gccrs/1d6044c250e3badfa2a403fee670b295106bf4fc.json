{"sha": "1d6044c250e3badfa2a403fee670b295106bf4fc", "node_id": "C_kwDOANBUbNoAKDFkNjA0NGMyNTBlM2JhZGZhMmE0MDNmZWU2NzBiMjk1MTA2YmY0ZmM", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2022-06-17T14:22:20Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2022-06-17T14:23:12Z"}, "message": "i386: Fix VPMOV splitter [PR105993]\n\nREGNO should not be used with register_operand before reload because\nsubregs of registers or even subregs of memory match the predicate.\nThe build with RTL checking enabled does not tolerate REGNO with\nnon-reg operand.\nThe patch splits the splitter into two related splitters and uses\n(match_dup ...) RTXes instead of REGNO comparisons.\n\n2022-06-17  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/ChangeLog:\n\n\tPR target/105993\n\t* config/i386/sse.md (vpmov splitter): Use (match_dup ...)\n\tinstead of REGNO comparisons in combine splitter.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/105993\n\t* gcc.target/i386/pr105993.c: New test.", "tree": {"sha": "41cd82c1adc36b5c292b657960679dba4f7ae308", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41cd82c1adc36b5c292b657960679dba4f7ae308"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d6044c250e3badfa2a403fee670b295106bf4fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d6044c250e3badfa2a403fee670b295106bf4fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d6044c250e3badfa2a403fee670b295106bf4fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d6044c250e3badfa2a403fee670b295106bf4fc/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06a1b0418fb31b833119089ea37d5d3df372a13e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06a1b0418fb31b833119089ea37d5d3df372a13e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06a1b0418fb31b833119089ea37d5d3df372a13e"}], "stats": {"total": 48, "additions": 34, "deletions": 14}, "files": [{"sha": "64ac490d2728c905b03c8afe40bc1f58b1f24e95", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d6044c250e3badfa2a403fee670b295106bf4fc/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d6044c250e3badfa2a403fee670b295106bf4fc/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=1d6044c250e3badfa2a403fee670b295106bf4fc", "patch": "@@ -23875,21 +23875,23 @@\n \t    (xor:V_128_256 (match_operand:V_128_256 1 \"register_operand\")\n \t\t\t   (match_operand:V_128_256 2 \"register_operand\"))\n \t    (match_operand:V_128_256 3 \"nonimmediate_operand\"))\n-\t  (match_operand:V_128_256 4 \"register_operand\")))]\n-  \"TARGET_XOP\n-   && (REGNO (operands[4]) == REGNO (operands[1])\n-       || REGNO (operands[4]) == REGNO (operands[2]))\"\n+\t  (match_dup 1)))]\n+  \"TARGET_XOP\"\n   [(set (match_dup 0) (if_then_else:V_128_256 (match_dup 3)\n-\t\t\t\t\t      (match_dup 5)\n-\t\t\t\t\t      (match_dup 4)))]\n-{\n-  /* To handle the commutivity of XOR, operands[4] is either operands[1]\n-     or operands[2], we need operands[5] to be the other one.  */\n-  if (REGNO (operands[4]) == REGNO (operands[1]))\n-    operands[5] = operands[2];\n-  else\n-    operands[5] = operands[1];\n-})\n+\t\t\t\t\t      (match_dup 2)\n+\t\t\t\t\t      (match_dup 1)))])\n+(define_split\n+  [(set (match_operand:V_128_256 0 \"register_operand\")\n+\t(xor:V_128_256\n+\t  (and:V_128_256\n+\t    (xor:V_128_256 (match_operand:V_128_256 1 \"register_operand\")\n+\t\t\t   (match_operand:V_128_256 2 \"register_operand\"))\n+\t    (match_operand:V_128_256 3 \"nonimmediate_operand\"))\n+\t  (match_dup 2)))]\n+  \"TARGET_XOP\"\n+  [(set (match_dup 0) (if_then_else:V_128_256 (match_dup 3)\n+\t\t\t\t\t      (match_dup 1)\n+\t\t\t\t\t      (match_dup 2)))])\n \n ;; XOP horizontal add/subtract instructions\n (define_insn \"xop_phadd<u>bw\""}, {"sha": "79e3414f67b7d8c3bdf1e2cab8b5ab10175feb92", "filename": "gcc/testsuite/gcc.target/i386/pr105993.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d6044c250e3badfa2a403fee670b295106bf4fc/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr105993.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d6044c250e3badfa2a403fee670b295106bf4fc/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr105993.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr105993.c?ref=1d6044c250e3badfa2a403fee670b295106bf4fc", "patch": "@@ -0,0 +1,18 @@\n+/* PR target/105993 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -mxop\" } */\n+\n+typedef unsigned short __attribute__((__vector_size__ (16))) V;\n+V x, y, z;\n+\n+char c;\n+short s;\n+\n+V\n+foo (void)\n+{\n+  V u = __builtin_shufflevector (z, y, 2, 1, 0, 8, 4, 1, 7, 2);\n+  V v = ~(__builtin_bswap16 (s) & (u ^ c));\n+\n+  return v;\n+}"}]}