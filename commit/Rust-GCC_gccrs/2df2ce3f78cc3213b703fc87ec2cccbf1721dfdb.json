{"sha": "2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRmMmNlM2Y3OGNjMzIxM2I3MDNmYzg3ZWMyY2NjYmYxNzIxZGZkYg==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-05-29T20:55:58Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-05-29T20:55:58Z"}, "message": "re PR target/51340 (SH Target: Make -mfused-madd enabled by default)\n\n\tPR target/51340\n\t* config/sh/sh.c (sh_option_override): Set TARGET_FMAC if\n\tflag_unsafe_math_optimizations is set.\n\t* doc/invoke.texi (SH Options): Add -mno-fused-madd description.\n\tUpdate description of -mfused-madd.\n\n\tPR target/51340\n\t* gcc.target/sh/pr51340-1.c: New.\n\t* gcc.target/sh/pr51340-2.c: New.\n\t* gcc.target/sh/pr51340-3.c: New.\n\nFrom-SVN: r187988", "tree": {"sha": "232a604a7727185b7aee464bb2b66c1fc81f3832", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/232a604a7727185b7aee464bb2b66c1fc81f3832"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb/comments", "author": null, "committer": null, "parents": [{"sha": "c11394f8eddda4ee9f06d66d8431ddad6ef76666", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c11394f8eddda4ee9f06d66d8431ddad6ef76666", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c11394f8eddda4ee9f06d66d8431ddad6ef76666"}], "stats": {"total": 77, "additions": 71, "deletions": 6}, "files": [{"sha": "078ad6d531f53f45a0a6a6b62f5ed3543573c09e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb", "patch": "@@ -1,3 +1,11 @@\n+2012-05-29  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/51340\n+\t* config/sh/sh.c (sh_option_override): Set TARGET_FMAC if\n+\tflag_unsafe_math_optimizations is set.\n+\t* doc/invoke.texi (SH Options): Add -mno-fused-madd description.\n+\tUpdate description of -mfused-madd.\n+\n 2012-05-29  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/52941"}, {"sha": "20e67c63628460f823920ac0b48d21dda87921bf", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb", "patch": "@@ -876,6 +876,13 @@ sh_option_override (void)\n \talign_functions = min_align;\n     }\n \n+  /* Enable fmac insn for \"a * b + c\" SFmode calculations when -ffast-math\n+     is enabled and -mno-fused-madd is not specified by the user.\n+     The fmac insn can't be enabled by default due to the implied\n+     FMA semantics.   See also PR target/29100.  */\n+  if (global_options_set.x_TARGET_FMAC == 0 && flag_unsafe_math_optimizations)\n+    TARGET_FMAC = 1;\n+\n   if (sh_fixed_range_str)\n     sh_fix_range (sh_fixed_range_str);\n "}, {"sha": "1102aff1d8c336ed58566f5cc2d1ae880054630f", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb", "patch": "@@ -885,8 +885,8 @@ See RS/6000 and PowerPC Options.\n -mdivsi3_libfunc=@var{name} -mfixed-range=@var{register-range} @gol\n -mindexed-addressing -mgettrcost=@var{number} -mpt-fixed @gol\n -maccumulate-outgoing-args -minvalid-symbols -msoft-atomic -mhard-atomic @gol\n--mbranch-cost=@var{num} -mcbranchdi -mcmpeqdi -mfused-madd -mpretend-cmove @gol\n--menable-tas}\n+-mbranch-cost=@var{num} -mcbranchdi -mcmpeqdi -mfused-madd -mno-fused-madd @gol\n+-mpretend-cmove -menable-tas}\n \n @emph{Solaris 2 Options}\n @gccoptlist{-mimpure-text  -mno-impure-text @gol\n@@ -18250,11 +18250,17 @@ Emit the @code{cmpeqdi_t} instruction pattern even when @option{-mcbranchdi}\n is in effect.\n \n @item -mfused-madd\n+@itemx -mno-fused-madd\n @opindex mfused-madd\n-Allow the usage of the @code{fmac} instruction (floating-point\n-multiply-accumulate) if the processor type supports it.  Enabling this\n-option might generate code that produces different numeric floating-point\n-results compared to strict IEEE 754 arithmetic.\n+@opindex mno-fused-madd\n+If the processor type supports it, setting @code{-mfused-madd} will allow the\n+usage of the @code{fmac} instruction (floating-point multiply-accumulate) for\n+regular calculations.  Enabling this option might generate faster code but also\n+produce different numeric floating-point results compared to strict IEEE 754\n+arithmetic.  @code{-mfused-madd} is enabled by default by option\n+@option{-funsafe-math-optimizations}.  Setting @code{-mno-fused-madd} will\n+disallow the usage of the @code{fmac} instruction for regular calculations\n+even if @option{-funsafe-math-optimizations} is in effect.\n \n @item -mpretend-cmove\n @opindex mpretend-cmove"}, {"sha": "ea8b09da53c97fdaecc333308aa93154e11f9949", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb", "patch": "@@ -1,3 +1,10 @@\n+2012-05-29  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/51340\n+\t* gcc.target/sh/pr51340-1.c: New.\n+\t* gcc.target/sh/pr51340-2.c: New.\n+\t* gcc.target/sh/pr51340-3.c: New.\n+\n 2012-05-29  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/53516"}, {"sha": "337d502b9f813f2a8f7bd7288e35d255ec9d5431", "filename": "gcc/testsuite/gcc.target/sh/pr51340-1.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr51340-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr51340-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr51340-1.c?ref=2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb", "patch": "@@ -0,0 +1,13 @@\n+/* Check that the fmac insn is generated when -funsafe-math-optimizations\n+   is specified.  */\n+/* { dg-do compile { target \"sh*-*-*\" } } */\n+/* { dg-options \"-O1 -funsafe-math-optimizations\" } */\n+/* { dg-skip-if \"\" { \"sh*-*-*\" } { \"-m1\" \"-m2\" \"-m4al\" \"*nofpu\" \"-m4-340*\" \"-m4-400*\" \"-m4-500*\" \"-m5*\" } { \"\" } }  */\n+/* { dg-final { scan-assembler \"fmac\" } } */\n+\n+float\n+test_func (float a, float b, float c, float d, float e, float f)\n+{\n+  return a * b + c * d + e * f;\n+}\n+"}, {"sha": "ef9622ec47f5fab45efa81d67b3f1ca318d61945", "filename": "gcc/testsuite/gcc.target/sh/pr51340-2.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr51340-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr51340-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr51340-2.c?ref=2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb", "patch": "@@ -0,0 +1,12 @@\n+/* Check that the fmac insn is not generated when -mno-fused-madd is specified.  */\n+/* { dg-do compile { target \"sh*-*-*\" } } */\n+/* { dg-options \"-O1 -funsafe-math-optimizations -mno-fused-madd\" } */\n+/* { dg-skip-if \"\" { \"sh*-*-*\" } { \"-m1\" \"-m2\" \"-m4al\" \"*nofpu\" \"-m4-340*\" \"-m4-400*\" \"-m4-500*\" \"-m5*\" } { \"\" } }  */\n+/* { dg-final { scan-assembler-not \"fmac\" } } */\n+\n+float\n+test_func (float a, float b, float c, float d, float e, float f)\n+{\n+  return a * b + c * d + e * f;\n+}\n+"}, {"sha": "d641ae3534e44944207ed03beda67fad89542ec1", "filename": "gcc/testsuite/gcc.target/sh/pr51340-3.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr51340-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr51340-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr51340-3.c?ref=2df2ce3f78cc3213b703fc87ec2cccbf1721dfdb", "patch": "@@ -0,0 +1,12 @@\n+/* Check that the fmac insn is generated when -mfused-madd is specified.  */\n+/* { dg-do compile { target \"sh*-*-*\" } } */\n+/* { dg-options \"-O1 -mfused-madd\" } */\n+/* { dg-skip-if \"\" { \"sh*-*-*\" } { \"-m1\" \"-m2\" \"-m4al\" \"*nofpu\" \"-m4-340*\" \"-m4-400*\" \"-m4-500*\" \"-m5*\" } { \"\" } }  */\n+/* { dg-final { scan-assembler \"fmac\" } } */\n+\n+float\n+test_func (float a, float b, float c, float d, float e, float f)\n+{\n+  return a * b + c * d + e * f;\n+}\n+"}]}