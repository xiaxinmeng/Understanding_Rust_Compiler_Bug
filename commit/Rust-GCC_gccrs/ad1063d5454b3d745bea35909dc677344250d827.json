{"sha": "ad1063d5454b3d745bea35909dc677344250d827", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQxMDYzZDU0NTRiM2Q3NDViZWEzNTkwOWRjNjc3MzQ0MjUwZDgyNw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-12-03T09:51:39Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-12-03T09:51:39Z"}, "message": "re PR c++/18318 (ICE: error: Multiple inline callers)\n\ncp:\n\tPR c++/18318\n\t* parser.c (cp_parser_new_type_id): Move array size expression\n\tchecks from here ...\n\t* init.c (build_new): ... to here.\ntestsuite:\n\tPR c++/18318\n\t* g++.dg/template/new1.C: New.\n\nFrom-SVN: r91678", "tree": {"sha": "c21f55ff3fc59c4b4156189cb31525a6dc08b3e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c21f55ff3fc59c4b4156189cb31525a6dc08b3e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad1063d5454b3d745bea35909dc677344250d827", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad1063d5454b3d745bea35909dc677344250d827", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad1063d5454b3d745bea35909dc677344250d827", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad1063d5454b3d745bea35909dc677344250d827/comments", "author": null, "committer": null, "parents": [{"sha": "2085a21fd654d26bc4019121cdee41a30cead0ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2085a21fd654d26bc4019121cdee41a30cead0ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2085a21fd654d26bc4019121cdee41a30cead0ff"}], "stats": {"total": 79, "additions": 69, "deletions": 10}, "files": [{"sha": "5ac6cd74b0756f098ea2a568252235eef0ec0c6a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1063d5454b3d745bea35909dc677344250d827/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1063d5454b3d745bea35909dc677344250d827/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ad1063d5454b3d745bea35909dc677344250d827", "patch": "@@ -1,3 +1,10 @@\n+2004-12-02  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/18318\n+\t* parser.c (cp_parser_new_type_id): Move array size expression\n+\tchecks from here ...\n+\t* init.c (build_new): ... to here.\n+\n 2004-12-02  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/18758\n@@ -18,7 +25,8 @@\n \n 2004-12-01  Matt Austern  <austern@apple.com>\n \n-\t* name-lookup.c (namespace_binding): Omit alias check for global namespace.\n+\t* name-lookup.c (namespace_binding): Omit alias check for global\n+\tnamespace.\n \n 2004-12-01  Nathan Sidwell  <nathan@codesourcery.com>\n "}, {"sha": "7dd15d2e1df5e4b1ce4c1edfa05ada5b6b9030cc", "filename": "gcc/cp/init.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1063d5454b3d745bea35909dc677344250d827/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1063d5454b3d745bea35909dc677344250d827/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=ad1063d5454b3d745bea35909dc677344250d827", "patch": "@@ -1633,6 +1633,15 @@ build_new (tree placement, tree type, tree nelts, tree init,\n       return rval;\n     }\n \n+  if (nelts)\n+    {\n+      if (!build_expr_type_conversion (WANT_INT | WANT_ENUM, nelts, false))\n+\tpedwarn (\"size in array new must have integral type\");\n+      nelts = save_expr (cp_convert (sizetype, nelts));\n+      if (nelts == integer_zero_node)\n+\twarning (\"zero size array reserves no space\");\n+    }\n+\n   /* ``A reference cannot be created by the new operator.  A reference\n      is not an object (8.2.2, 8.4.3), so a pointer to it could not be\n      returned by new.'' ARM 5.3.3 */"}, {"sha": "46b9385d176753a036be207d2ecb4fa2c322949f", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1063d5454b3d745bea35909dc677344250d827/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1063d5454b3d745bea35909dc677344250d827/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=ad1063d5454b3d745bea35909dc677344250d827", "patch": "@@ -4901,15 +4901,7 @@ cp_parser_new_type_id (cp_parser* parser, tree *nelts)\n       *nelts = declarator->u.array.bounds;\n       if (*nelts == error_mark_node)\n \t*nelts = integer_one_node;\n-      else if (!processing_template_decl)\n-\t{\n-\t  if (!build_expr_type_conversion (WANT_INT | WANT_ENUM, *nelts,\n-\t\t\t\t\t   false))\n-\t    pedwarn (\"size in array new must have integral type\");\n-\t  *nelts = save_expr (cp_convert (sizetype, *nelts));\n-\t  if (*nelts == integer_zero_node)\n-\t    warning (\"zero size array reserves no space\");\n-\t}\n+      \n       if (outer_declarator)\n \touter_declarator->declarator = declarator->declarator;\n       else"}, {"sha": "a24a39e359a230d316b502c059e41cbfe36512f4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1063d5454b3d745bea35909dc677344250d827/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1063d5454b3d745bea35909dc677344250d827/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ad1063d5454b3d745bea35909dc677344250d827", "patch": "@@ -1,3 +1,8 @@\n+2004-12-03  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/18318\n+\t* g++.dg/template/new1.C: New.\n+\n 2004-12-02  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \tPR fortran/18710"}, {"sha": "63ee2f924d106144ebe67d708ec2a8e553f7c6ae", "filename": "gcc/testsuite/g++.dg/template/new1.C", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1063d5454b3d745bea35909dc677344250d827/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnew1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1063d5454b3d745bea35909dc677344250d827/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnew1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnew1.C?ref=ad1063d5454b3d745bea35909dc677344250d827", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do run }\n+// { dg-options \"-O2\" }\n+\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 2 Dec 2004 <nathan@codesourcery.com>\n+\n+// PR 18318. ICE with template new[]\n+// Origin:Elliot Hughes <enh@jessies.org>\n+// Andrew Pinski <pinskia@gcc.gnu.org>\n+\n+struct Aint\n+{\n+  ~Aint ();\n+  Aint ();\n+};\n+\n+Aint::Aint () {}\n+Aint::~Aint () {}\n+\n+static int count;\n+\n+template <class T>\n+struct A\n+{\n+  unsigned Blksize() const;\n+  \n+  void f()\n+  {\n+    new T[Blksize()];\n+  }\n+};\n+\n+template <class T> unsigned A<T>::Blksize () const\n+{\n+  count++;\n+  return 1;\n+}\n+\n+int main ()\n+{\n+  A<Aint> a;\n+  a.f();\n+  \n+  return count != 1;\n+}"}]}