{"sha": "cda800dd90c3dcc6452b0567c62327c651c628dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RhODAwZGQ5MGMzZGNjNjQ1MmIwNTY3YzYyMzI3YzY1MWM2MjhkZA==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-08-18T09:49:35Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-22T12:11:23Z"}, "message": "[Ada] Refactor appending to possibly empty lists\n\ngcc/ada/\n\n\t* exp_prag.adb (Expand_Pragma_Contract_Cases,\n\tExpand_Pragma_Loop_Variant): Reuse Append_New_To.\n\t* sem_prag.adb (Analyze_Contract_Cases_In_Decl_Part): Fix typo.\n\t(Analyze_Pre_Post_Condition): Refactor repeated calls to\n\tDefining_Entity.", "tree": {"sha": "30852f13a86ad09a14f06ac7a1c2f4b5a5c39360", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30852f13a86ad09a14f06ac7a1c2f4b5a5c39360"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cda800dd90c3dcc6452b0567c62327c651c628dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cda800dd90c3dcc6452b0567c62327c651c628dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cda800dd90c3dcc6452b0567c62327c651c628dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cda800dd90c3dcc6452b0567c62327c651c628dd/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea56c18c501657906e72a693dba7775b2f39a004", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea56c18c501657906e72a693dba7775b2f39a004", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea56c18c501657906e72a693dba7775b2f39a004"}], "stats": {"total": 22, "additions": 5, "deletions": 17}, "files": [{"sha": "d3c63f457a0456daf0c23619f97c97072e563243", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cda800dd90c3dcc6452b0567c62327c651c628dd/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cda800dd90c3dcc6452b0567c62327c651c628dd/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=cda800dd90c3dcc6452b0567c62327c651c628dd", "patch": "@@ -1831,11 +1831,7 @@ package body Exp_Prag is\n       --  Raise Assertion_Error when the corresponding consequence of a case\n       --  guard that evaluated to True fails.\n \n-      if No (Stmts) then\n-         Stmts := New_List;\n-      end if;\n-\n-      Append_To (Stmts, Conseq_Checks);\n+      Append_New_To (Stmts, Conseq_Checks);\n \n       In_Assertion_Expr := In_Assertion_Expr - 1;\n    end Expand_Pragma_Contract_Cases;\n@@ -2451,28 +2447,20 @@ package body Exp_Prag is\n \n          --  Step 3: Store value of the expression from the previous iteration\n \n-         if No (Old_Assign) then\n-            Old_Assign := New_List;\n-         end if;\n-\n          --  Generate:\n          --    Old := Curr;\n \n-         Append_To (Old_Assign,\n+         Append_New_To (Old_Assign,\n            Make_Assignment_Statement (Loc,\n              Name       => New_Occurrence_Of (Old_Id, Loc),\n              Expression => New_Occurrence_Of (Curr_Id, Loc)));\n \n          --  Step 4: Store the current value of the expression\n \n-         if No (Curr_Assign) then\n-            Curr_Assign := New_List;\n-         end if;\n-\n          --  Generate:\n          --    Curr := <Expr>;\n \n-         Append_To (Curr_Assign,\n+         Append_New_To (Curr_Assign,\n            Make_Assignment_Statement (Loc,\n              Name       => New_Occurrence_Of (Curr_Id, Loc),\n              Expression => Relocate_Node (Expr)));"}, {"sha": "b4744bfa59226a816d336d74c2ae7c0f197c8e72", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cda800dd90c3dcc6452b0567c62327c651c628dd/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cda800dd90c3dcc6452b0567c62327c651c628dd/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=cda800dd90c3dcc6452b0567c62327c651c628dd", "patch": "@@ -544,7 +544,7 @@ package body Sem_Prag is\n       Set_Ghost_Mode (N);\n \n       --  Single and multiple contract cases must appear in aggregate form. If\n-      --  this is not the case, then either the parser of the analysis of the\n+      --  this is not the case, then either the parser or the analysis of the\n       --  pragma failed to produce an aggregate.\n \n       pragma Assert (Nkind (CCases) = N_Aggregate);\n@@ -4798,7 +4798,7 @@ package body Sem_Prag is\n          --  Chain the pragma on the contract for further processing by\n          --  Analyze_Pre_Post_Condition_In_Decl_Part.\n \n-         Add_Contract_Item (N, Defining_Entity (Subp_Decl));\n+         Add_Contract_Item (N, Subp_Id);\n \n          --  Fully analyze the pragma when it appears inside an entry or\n          --  subprogram body because it cannot benefit from forward references."}]}