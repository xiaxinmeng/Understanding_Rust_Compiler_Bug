{"sha": "e8fc888de958caac184e708b40ef24df3507c943", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThmYzg4OGRlOTU4Y2FhYzE4NGU3MDhiNDBlZjI0ZGYzNTA3Yzk0Mw==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2008-02-26T14:01:02Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2008-02-26T14:01:02Z"}, "message": "common.opt (Wlarger-than=): New.\n\n2008-02-26  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n\n\t* common.opt (Wlarger-than=): New.\n\t* doc/invoke.texi (Warning Options): Replace -Wlarger-than- with\n\t-Wlarger-than=.\n\t* opts.c (common_handle_option): Handle -Wlarger-than=.\n\t* optc-gen.awk: Likewise.\n\t* opth-gen.awk: Likewise.\n\t* stor-layout.c (layout_decl): Use -Wlarger-than= for warning.\n\t* tree-optimize.c (tree_rest_of_compilation): Likewise.\ntestsuite/\n\t* gcc.dg/Wlarger-than2.c: New.\n\nFrom-SVN: r132674", "tree": {"sha": "b3244e29a5cc16d545e033e9f075d8de9433269f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3244e29a5cc16d545e033e9f075d8de9433269f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8fc888de958caac184e708b40ef24df3507c943", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8fc888de958caac184e708b40ef24df3507c943", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8fc888de958caac184e708b40ef24df3507c943", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8fc888de958caac184e708b40ef24df3507c943/comments", "author": null, "committer": null, "parents": [{"sha": "185a6cc15950f65b1adbcaa528b4c1d5683d7ace", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/185a6cc15950f65b1adbcaa528b4c1d5683d7ace", "html_url": "https://github.com/Rust-GCC/gccrs/commit/185a6cc15950f65b1adbcaa528b4c1d5683d7ace"}], "stats": {"total": 49, "additions": 40, "deletions": 9}, "files": [{"sha": "fefe8c2f3dd002320a3e627c4e5332a2962a0127", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8fc888de958caac184e708b40ef24df3507c943/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8fc888de958caac184e708b40ef24df3507c943/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8fc888de958caac184e708b40ef24df3507c943", "patch": "@@ -1,3 +1,14 @@\n+2008-02-26  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\t* common.opt (Wlarger-than=): New.\n+\t* doc/invoke.texi (Warning Options): Replace -Wlarger-than- with\n+\t-Wlarger-than=.\n+\t* opts.c (common_handle_option): Handle -Wlarger-than=.\n+\t* optc-gen.awk: Likewise.\n+\t* opth-gen.awk: Likewise.\n+\t* stor-layout.c (layout_decl): Use -Wlarger-than= for warning.\n+\t* tree-optimize.c (tree_rest_of_compilation): Likewise.\n+\t\n 2008-02-26  Manuel Lopez-Ibanez <manu@gcc.gnu.org>\n \n \t* c-common.c (match_case_to_enum_1): Add appropriate"}, {"sha": "5c62510f7000270fe2e58030543d58a36857135d", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8fc888de958caac184e708b40ef24df3507c943/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8fc888de958caac184e708b40ef24df3507c943/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=e8fc888de958caac184e708b40ef24df3507c943", "patch": "@@ -127,7 +127,10 @@ Warn when an inlined function cannot be inlined\n \n Wlarger-than-\n Common RejectNegative Joined UInteger Warning\n--Wlarger-than-<number>\tWarn if an object is larger than <number> bytes\n+\n+Wlarger-than=\n+Common RejectNegative Joined UInteger Warning\n+-Wlarger-than=<number>\tWarn if an object is larger than <number> bytes\n \n Wlogical-op\n Common Warning Var(warn_logical_op)"}, {"sha": "6a80373e43dd01965801d044bcae2389c7d72832", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8fc888de958caac184e708b40ef24df3507c943/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8fc888de958caac184e708b40ef24df3507c943/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=e8fc888de958caac184e708b40ef24df3507c943", "patch": "@@ -241,7 +241,7 @@ Objective-C and Objective-C++ Dialects}.\n -Wimplicit  -Wimplicit-function-declaration  -Wimplicit-int @gol\n -Wimport  -Wno-import  -Winit-self  -Winline @gol\n -Wno-int-to-pointer-cast -Wno-invalid-offsetof @gol\n--Winvalid-pch -Wlarger-than-@var{len}  -Wunsafe-loop-optimizations @gol\n+-Winvalid-pch -Wlarger-than=@var{len}  -Wunsafe-loop-optimizations @gol\n -Wlogical-op -Wlong-long @gol\n -Wmain  -Wmissing-braces  -Wmissing-field-initializers @gol\n -Wmissing-format-attribute  -Wmissing-include-dirs @gol\n@@ -3516,7 +3516,8 @@ Do not warn whenever an @samp{#else} or an @samp{#endif} are followed by text.\n Warn whenever a local variable shadows another local variable, parameter or\n global variable or whenever a built-in function is shadowed.\n \n-@item -Wlarger-than-@var{len}\n+@item -Wlarger-than=@var{len}\n+@opindex Wlarger-than=@var{len}\n @opindex Wlarger-than-@var{len}\n Warn whenever an object of larger than @var{len} bytes is defined.\n "}, {"sha": "cd1024406daf9f0d59a83e92d641215bf1e873ea", "filename": "gcc/optc-gen.awk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8fc888de958caac184e708b40ef24df3507c943/gcc%2Foptc-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8fc888de958caac184e708b40ef24df3507c943/gcc%2Foptc-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptc-gen.awk?ref=e8fc888de958caac184e708b40ef24df3507c943", "patch": "@@ -150,7 +150,7 @@ for (i = 0; i < n_opts; i++) {\n \n \tlen = length (opts[i]);\n \tenum = \"OPT_\" opts[i]\n-\tif (opts[i] == \"finline-limit=\")\n+\tif (opts[i] == \"finline-limit=\" || opts[i] == \"Wlarger-than=\")\n \t\tenum = enum \"eq\"\n \tgsub (\"[^A-Za-z0-9]\", \"_\", enum)\n "}, {"sha": "9aa18a12ad93e816b6b9b9bd9d8049678b79bd2b", "filename": "gcc/opth-gen.awk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8fc888de958caac184e708b40ef24df3507c943/gcc%2Fopth-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8fc888de958caac184e708b40ef24df3507c943/gcc%2Fopth-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopth-gen.awk?ref=e8fc888de958caac184e708b40ef24df3507c943", "patch": "@@ -160,7 +160,7 @@ for (i = 0; i < n_opts; i++) {\n \n \tlen = length (opts[i]);\n \tenum = \"OPT_\" opts[i]\n-\tif (opts[i] == \"finline-limit=\")\n+\tif (opts[i] == \"finline-limit=\" || opts[i] == \"Wlarger-than=\")\n \t\tenum = enum \"eq\"\n \tgsub (\"[^A-Za-z0-9]\", \"_\", enum)\n "}, {"sha": "445cec3729635281db0d99d85a40b5b7daaa9e1f", "filename": "gcc/opts.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8fc888de958caac184e708b40ef24df3507c943/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8fc888de958caac184e708b40ef24df3507c943/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=e8fc888de958caac184e708b40ef24df3507c943", "patch": "@@ -1540,6 +1540,11 @@ common_handle_option (size_t scode, const char *arg, int value,\n       break;\n \n     case OPT_Wlarger_than_:\n+      /* This form corresponds to -Wlarger-than-.  \n+\t Kept for backward compatibility. \n+\t Don't use it as the first argument of warning().  */\n+\n+    case OPT_Wlarger_than_eq:\n       larger_than_size = value;\n       warn_larger_than = value != -1;\n       break;"}, {"sha": "67e4c25fbdc25104e25947f5c3d20a6026baf888", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8fc888de958caac184e708b40ef24df3507c943/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8fc888de958caac184e708b40ef24df3507c943/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=e8fc888de958caac184e708b40ef24df3507c943", "patch": "@@ -464,9 +464,9 @@ layout_decl (tree decl, unsigned int known_align)\n \t  int size_as_int = TREE_INT_CST_LOW (size);\n \n \t  if (compare_tree_int (size, size_as_int) == 0)\n-\t    warning (OPT_Wlarger_than_, \"size of %q+D is %d bytes\", decl, size_as_int);\n+\t    warning (OPT_Wlarger_than_eq, \"size of %q+D is %d bytes\", decl, size_as_int);\n \t  else\n-\t    warning (OPT_Wlarger_than_, \"size of %q+D is larger than %wd bytes\",\n+\t    warning (OPT_Wlarger_than_eq, \"size of %q+D is larger than %wd bytes\",\n                      decl, larger_than_size);\n \t}\n     }"}, {"sha": "8fb14f23f53da0bab2f4774b7caf586ac6d4a2ee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8fc888de958caac184e708b40ef24df3507c943/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8fc888de958caac184e708b40ef24df3507c943/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e8fc888de958caac184e708b40ef24df3507c943", "patch": "@@ -1,3 +1,7 @@\n+2008-02-26  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\t* gcc.dg/Wlarger-than2.c: New.\n+\t\n 2008-02-26  Paolo Carlini  <pcarlini@suse.de>\n \n         PR c++/35323"}, {"sha": "eac67f48b5a972684575858767d5c83c19e42ee5", "filename": "gcc/testsuite/gcc.dg/Wlarger-than2.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8fc888de958caac184e708b40ef24df3507c943/gcc%2Ftestsuite%2Fgcc.dg%2FWlarger-than2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8fc888de958caac184e708b40ef24df3507c943/gcc%2Ftestsuite%2Fgcc.dg%2FWlarger-than2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWlarger-than2.c?ref=e8fc888de958caac184e708b40ef24df3507c943", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wlarger-than=8\" } */\n+static void foo (void) \n+{\n+  char buf[9]; /* { dg-warning \"size of.*9 bytes\" } */\n+}\n+"}, {"sha": "544d75daabec7fb55180540e20f0a2f8c6b7291f", "filename": "gcc/tree-optimize.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8fc888de958caac184e708b40ef24df3507c943/gcc%2Ftree-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8fc888de958caac184e708b40ef24df3507c943/gcc%2Ftree-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-optimize.c?ref=e8fc888de958caac184e708b40ef24df3507c943", "patch": "@@ -427,10 +427,10 @@ tree_rest_of_compilation (tree fndecl)\n \t    = TREE_INT_CST_LOW (TYPE_SIZE_UNIT (ret_type));\n \n \t  if (compare_tree_int (TYPE_SIZE_UNIT (ret_type), size_as_int) == 0)\n-\t    warning (OPT_Wlarger_than_, \"size of return value of %q+D is %u bytes\",\n+\t    warning (OPT_Wlarger_than_eq, \"size of return value of %q+D is %u bytes\",\n                      fndecl, size_as_int);\n \t  else\n-\t    warning (OPT_Wlarger_than_, \"size of return value of %q+D is larger than %wd bytes\",\n+\t    warning (OPT_Wlarger_than_eq, \"size of return value of %q+D is larger than %wd bytes\",\n                      fndecl, larger_than_size);\n \t}\n     }"}]}