{"sha": "c8effb4f399d8f1d59c2a2aafdfbfeaf1313de73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzhlZmZiNGYzOTlkOGYxZDU5YzJhMmFhZmRmYmZlYWYxMzEzZGU3Mw==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2005-07-04T13:31:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-07-04T13:31:15Z"}, "message": "makegpr.adb (Build_Global_Archive): Make sure the list of sources is correctly computed and the main project data...\n\n2005-07-04  Vincent Celier  <celier@adacore.com>\n\n\t* makegpr.adb (Build_Global_Archive): Make sure the list of sources is\n\tcorrectly computed and the main project data is not modified while\n\tdoing so.\n\t(Add_C_Plus_Plus_Link_For_Gnatmake): Always link with the C++ compiler\n\t(Choose_C_Plus_Plus_Link_Process): Do not generate shell script\n\tc++linker as this does not work on some platforms.\n\nFrom-SVN: r101596", "tree": {"sha": "5e3dcb10aceb1e33894bc02acebe129e061e295c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e3dcb10aceb1e33894bc02acebe129e061e295c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8effb4f399d8f1d59c2a2aafdfbfeaf1313de73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8effb4f399d8f1d59c2a2aafdfbfeaf1313de73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8effb4f399d8f1d59c2a2aafdfbfeaf1313de73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8effb4f399d8f1d59c2a2aafdfbfeaf1313de73/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "65d5180d8c8fae3c99d372ce939caf36b85de599", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65d5180d8c8fae3c99d372ce939caf36b85de599", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65d5180d8c8fae3c99d372ce939caf36b85de599"}], "stats": {"total": 83, "additions": 27, "deletions": 56}, "files": [{"sha": "20df5d43644d9935c8e4294c4642a35979d1f26e", "filename": "gcc/ada/makegpr.adb", "status": "modified", "additions": 27, "deletions": 56, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8effb4f399d8f1d59c2a2aafdfbfeaf1313de73/gcc%2Fada%2Fmakegpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8effb4f399d8f1d59c2a2aafdfbfeaf1313de73/gcc%2Fada%2Fmakegpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakegpr.adb?ref=c8effb4f399d8f1d59c2a2aafdfbfeaf1313de73", "patch": "@@ -60,10 +60,6 @@ package body Makegpr is\n    --  The maximum number of arguments for a single invocation of the\n    --  Archive Indexer (ar).\n \n-   Cpp_Linker : constant String := \"c++linker\";\n-   --  The name of a linking script, built one the fly, when there are C++\n-   --  sources and the C++ compiler is not g++.\n-\n    No_Argument : aliased Argument_List := (1 .. 0 => null);\n    --  Null argument list representing case of no arguments\n \n@@ -1023,6 +1019,7 @@ package body Makegpr is\n       Data      : Project_Data :=\n                     Project_Tree.Projects.Table (Main_Project);\n       Source_Id : Other_Source_Id;\n+      S_Id      : Other_Source_Id;\n       Source    : Other_Source;\n       Success   : Boolean;\n \n@@ -1090,22 +1087,28 @@ package body Makegpr is\n                --  Put all sources of language other than Ada in\n                --  Source_Indexes.\n \n-               for Proj in Project_Table.First ..\n-                           Project_Table.Last (Project_Tree.Projects)\n-               loop\n-                  Data := Project_Tree.Projects.Table (Proj);\n+               declare\n+                  Local_Data : Project_Data;\n \n-                  if not Data.Library then\n-                     Last_Source := 0;\n-                     Source_Id := Data.First_Other_Source;\n+               begin\n+                  Last_Source := 0;\n \n-                     while Source_Id /= No_Other_Source loop\n-                        Add_Source_Id (Proj, Source_Id);\n-                        Source_Id := Project_Tree.Other_Sources.Table\n-                                       (Source_Id).Next;\n-                     end loop;\n-                  end if;\n-               end loop;\n+                  for Proj in Project_Table.First ..\n+                    Project_Table.Last (Project_Tree.Projects)\n+                  loop\n+                     Local_Data := Project_Tree.Projects.Table (Proj);\n+\n+                     if not Local_Data.Library then\n+                        Source_Id := Local_Data.First_Other_Source;\n+\n+                        while Source_Id /= No_Other_Source loop\n+                           Add_Source_Id (Proj, Source_Id);\n+                           Source_Id := Project_Tree.Other_Sources.Table\n+                             (Source_Id).Next;\n+                        end loop;\n+                     end if;\n+                  end loop;\n+               end;\n \n                --  Read the dependency file, line by line\n \n@@ -1120,16 +1123,16 @@ package body Makegpr is\n                   --  Check if this object file is for a source of this project\n \n                   for S in 1 .. Last_Source loop\n-                     Source_Id := Source_Indexes (S).Id;\n-                     Source := Project_Tree.Other_Sources.Table\n-                                 (Source_Id);\n+                     S_Id := Source_Indexes (S).Id;\n+                     Source := Project_Tree.Other_Sources.Table (S_Id);\n \n                      if (not Source_Indexes (S).Found)\n                        and then Source.Object_Path = Object_Path\n                      then\n                         --  We have found the object file: get the source\n                         --  data, and mark it as found.\n \n+                        Source_Id := S_Id;\n                         Source_Indexes (S).Found := True;\n                         exit;\n                      end if;\n@@ -3369,18 +3372,9 @@ package body Makegpr is\n \n       procedure Add_C_Plus_Plus_Link_For_Gnatmake is\n       begin\n-         if Compiler_Is_Gcc (C_Plus_Plus_Language_Index) then\n-            Add_Argument\n-              (\"--LINK=\" & Compiler_Names (C_Plus_Plus_Language_Index).all,\n-               Verbose_Mode);\n-\n-         else\n-            Add_Argument\n-              (\"--LINK=\" &\n-               Object_Dir & Directory_Separator &\n-               Cpp_Linker,\n-               Verbose_Mode);\n-         end if;\n+         Add_Argument\n+           (\"--LINK=\" & Compiler_Names (C_Plus_Plus_Language_Index).all,\n+            Verbose_Mode);\n       end Add_C_Plus_Plus_Link_For_Gnatmake;\n \n       -----------------------\n@@ -3449,29 +3443,6 @@ package body Makegpr is\n          if Compiler_Names (C_Plus_Plus_Language_Index) = null then\n             Get_Compiler (C_Plus_Plus_Language_Index);\n          end if;\n-\n-         if not Compiler_Is_Gcc (C_Plus_Plus_Language_Index) then\n-            Change_Dir (Object_Dir);\n-\n-            declare\n-               File : Ada.Text_IO.File_Type;\n-               use Ada.Text_IO;\n-\n-            begin\n-               Create (File, Out_File, Cpp_Linker);\n-\n-               Put_Line (File, \"#!/bin/sh\");\n-\n-               Put_Line (File, \"LIBGCC=`gcc -print-libgcc-file-name`\");\n-               Put_Line\n-                 (File,\n-                  Compiler_Names (C_Plus_Plus_Language_Index).all &\n-                  \" $* ${LIBGCC}\");\n-\n-               Close (File);\n-               Set_Executable (Cpp_Linker);\n-            end;\n-         end if;\n       end Choose_C_Plus_Plus_Link_Process;\n \n       ------------------"}]}