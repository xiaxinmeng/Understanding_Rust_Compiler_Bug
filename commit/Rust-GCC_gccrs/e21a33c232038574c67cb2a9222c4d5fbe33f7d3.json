{"sha": "e21a33c232038574c67cb2a9222c4d5fbe33f7d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIxYTMzYzIzMjAzODU3NGM2N2NiMmE5MjIyYzRkNWZiZTMzZjdkMw==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2020-07-20T23:15:36Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2020-07-20T23:17:26Z"}, "message": "mmix: support -fstack-usage\n\nMMIX has two stacks; the regular one using register $254 as a\nconvention and the register-stack, pushed and popped by call\ninstructions (usually).  The decision to only report the stack usage\nof the regular stack (and not of the register stack) may be updated,\nperhaps the sum is better.  This initial decision is helped a little\nbit by the order of passes: the size of the register-stack is\ncalculated only later (in the machine-dependent reorg pass), long\nafter finalization of the stack-usage info (in the prologue/epilogue\npass).  No regressions for mmix-knuth-mmixware (but a whole lot more\nPASSes), committed.\n\ngcc:\n\t* config/mmix/mmix.c (mmix_expand_prologue): Calculate the total\n\tallocated size and set current_function_static_stack_size, if\n\tflag_stack_usage_info.", "tree": {"sha": "b01f7867bce03f8b7ad395543012a9a5166ad62e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b01f7867bce03f8b7ad395543012a9a5166ad62e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e21a33c232038574c67cb2a9222c4d5fbe33f7d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e21a33c232038574c67cb2a9222c4d5fbe33f7d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e21a33c232038574c67cb2a9222c4d5fbe33f7d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e21a33c232038574c67cb2a9222c4d5fbe33f7d3/comments", "author": null, "committer": null, "parents": [{"sha": "932fbc868ad429167a3d4d5625aa9d6dc0b4506b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/932fbc868ad429167a3d4d5625aa9d6dc0b4506b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/932fbc868ad429167a3d4d5625aa9d6dc0b4506b"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "b7263a3119035d298e992a9dda21ba0af3e5f568", "filename": "gcc/config/mmix/mmix.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e21a33c232038574c67cb2a9222c4d5fbe33f7d3/gcc%2Fconfig%2Fmmix%2Fmmix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e21a33c232038574c67cb2a9222c4d5fbe33f7d3/gcc%2Fconfig%2Fmmix%2Fmmix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.c?ref=e21a33c232038574c67cb2a9222c4d5fbe33f7d3", "patch": "@@ -2014,6 +2014,7 @@ mmix_expand_prologue (void)\n        + crtl->args.pretend_args_size\n        + locals_size + 7) & ~7;\n   HOST_WIDE_INT offset = -8;\n+  HOST_WIDE_INT total_allocated_stack_space = 0;\n \n   /* Add room needed to save global non-register-stack registers.  */\n   for (regno = 255;\n@@ -2063,6 +2064,8 @@ mmix_expand_prologue (void)\n \t\t? (256 - 8) : stack_space_to_allocate;\n \n \t      mmix_emit_sp_add (-stack_chunk);\n+\t      total_allocated_stack_space += stack_chunk;\n+\n \t      offset += stack_chunk;\n \t      stack_space_to_allocate -= stack_chunk;\n \t    }\n@@ -2091,6 +2094,7 @@ mmix_expand_prologue (void)\n \t    ? (256 - 8 - 8) : stack_space_to_allocate;\n \n \t  mmix_emit_sp_add (-stack_chunk);\n+\t  total_allocated_stack_space += stack_chunk;\n \n \t  offset += stack_chunk;\n \t  stack_space_to_allocate -= stack_chunk;\n@@ -2126,6 +2130,7 @@ mmix_expand_prologue (void)\n \t    ? (256 - 8 - 8) : stack_space_to_allocate;\n \n \t  mmix_emit_sp_add (-stack_chunk);\n+\t  total_allocated_stack_space += stack_chunk;\n \n \t  offset += stack_chunk;\n \t  stack_space_to_allocate -= stack_chunk;\n@@ -2170,6 +2175,7 @@ mmix_expand_prologue (void)\n \t    ? (256 - 8 - 8) : stack_space_to_allocate;\n \n \t  mmix_emit_sp_add (-stack_chunk);\n+\t  total_allocated_stack_space += stack_chunk;\n \n \t  offset += stack_chunk;\n \t  stack_space_to_allocate -= stack_chunk;\n@@ -2220,6 +2226,8 @@ mmix_expand_prologue (void)\n \t\t ? (256 - offset - 8) : stack_space_to_allocate);\n \n \t    mmix_emit_sp_add (-stack_chunk);\n+\t    total_allocated_stack_space += stack_chunk;\n+\n \t    offset += stack_chunk;\n \t    stack_space_to_allocate -= stack_chunk;\n \t  }\n@@ -2237,6 +2245,14 @@ mmix_expand_prologue (void)\n      wasn't allocated above.  */\n   if (stack_space_to_allocate)\n     mmix_emit_sp_add (-stack_space_to_allocate);\n+  total_allocated_stack_space += stack_space_to_allocate;\n+\n+  /* Let's assume that reporting the usage of the regular stack on its\n+     own, is more useful than either not supporting -fstack-usage or\n+     reporting the sum of the usages of the regular stack and the\n+     register stack.  */\n+  if (flag_stack_usage_info)\n+    current_function_static_stack_size = total_allocated_stack_space;\n }\n \n /* Expands the function epilogue into RTX.  */"}]}