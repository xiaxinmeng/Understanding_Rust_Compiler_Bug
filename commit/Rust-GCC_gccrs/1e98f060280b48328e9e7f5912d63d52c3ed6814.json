{"sha": "1e98f060280b48328e9e7f5912d63d52c3ed6814", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU5OGYwNjAyODBiNDgzMjhlOWU3ZjU5MTJkNjNkNTJjM2VkNjgxNA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2020-07-05T23:51:42Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2020-07-06T00:35:54Z"}, "message": "cris: Correct gcc_assert for atomic_fetch_op pattern\n\nYet another misnumbering of operands: the asserted non-overlap\nwould be the only benign operands overlap.  \"Suddenly\" exposed\nby g++.dg/cpp0x/pr81325.C when testing unrelated changes\naffecting register allocation.\n\nTo wit, operands 2 and 1 are the only ones that are safe for\noverlap, it's only that it doesn't seem to make much sense to\nwrite the address of the atomic data as the atomic data.\n\ngcc:\n\t* config/cris/sync.md (\"cris_atomic_fetch_<atomic_op_name><mode>_1\"):\n\tCorrect gcc_assert of overlapping operands.", "tree": {"sha": "4a734bd4b45c41c4b7f5558a1fcc52d9b581dcd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a734bd4b45c41c4b7f5558a1fcc52d9b581dcd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e98f060280b48328e9e7f5912d63d52c3ed6814", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e98f060280b48328e9e7f5912d63d52c3ed6814", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e98f060280b48328e9e7f5912d63d52c3ed6814", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e98f060280b48328e9e7f5912d63d52c3ed6814/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df66f280ec449ee1c8aaf353956b8b3d54e1d901", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df66f280ec449ee1c8aaf353956b8b3d54e1d901", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df66f280ec449ee1c8aaf353956b8b3d54e1d901"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "70640dbd55be08e8fd71228936cae02efd3a7961", "filename": "gcc/config/cris/sync.md", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e98f060280b48328e9e7f5912d63d52c3ed6814/gcc%2Fconfig%2Fcris%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e98f060280b48328e9e7f5912d63d52c3ed6814/gcc%2Fconfig%2Fcris%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fsync.md?ref=1e98f060280b48328e9e7f5912d63d52c3ed6814", "patch": "@@ -128,7 +128,11 @@\n   \"<MODE>mode == QImode || !TARGET_ATOMICS_MAY_CALL_LIBFUNCS\"\n {\n   /* Can't be too sure; better ICE if this happens.  */\n-  gcc_assert (!reg_overlap_mentioned_p (operands[2], operands[1]));\n+  gcc_assert (!reg_overlap_mentioned_p (operands[0], operands[1])\n+\t      && !reg_overlap_mentioned_p (operands[0], operands[2])\n+\t      && !reg_overlap_mentioned_p (operands[0], operands[3])\n+\t      && !reg_overlap_mentioned_p (operands[1], operands[3])\n+\t      && !reg_overlap_mentioned_p (operands[2], operands[3]));\n \n   if (cris_cpu_version == 10)\n     return"}]}