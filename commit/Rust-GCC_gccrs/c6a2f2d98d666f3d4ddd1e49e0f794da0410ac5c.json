{"sha": "c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZhMmYyZDk4ZDY2NmYzZDRkZGQxZTQ5ZTBmNzk0ZGEwNDEwYWM1Yw==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2015-06-22T19:16:58Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-06-22T19:16:58Z"}, "message": "c-ada-spec.h (cpp_operation): Add HAS_DEPENDENT_TEMPLATE_ARGS.\n\nc-family/\n\t* c-ada-spec.h (cpp_operation): Add HAS_DEPENDENT_TEMPLATE_ARGS.\n\t* c-ada-spec.c (collect_ada_nodes): Skip NAMESPACE_DECL\n\t(dump_ada_template): Skip partially specialized types.\ncp/\n\t* decl2.c (cpp_check): Deal with HAS_DEPENDENT_TEMPLATE_ARGS.\n\nFrom-SVN: r224754", "tree": {"sha": "c497bf6f8e2455a359a6622c01e4cc1045a02da5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c497bf6f8e2455a359a6622c01e4cc1045a02da5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c/comments", "author": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a42e72d1d26d9ffedaa0bcdfec8a058f9d5ad474", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a42e72d1d26d9ffedaa0bcdfec8a058f9d5ad474", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a42e72d1d26d9ffedaa0bcdfec8a058f9d5ad474"}], "stats": {"total": 102, "additions": 98, "deletions": 4}, "files": [{"sha": "a721ab58183c2f6f01463f42aabb1065c22eb889", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c", "patch": "@@ -1,3 +1,9 @@\n+2015-06-22  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* c-ada-spec.h (cpp_operation): Add HAS_DEPENDENT_TEMPLATE_ARGS.\n+\t* c-ada-spec.c (collect_ada_nodes): Skip NAMESPACE_DECL\n+\t(dump_ada_template): Skip partially specialized types.\n+\n 2015-06-22  Mikhail Maltsev  <maltsevm@gmail.com>\n \n \t* c-common.c (scalar_to_vector): Use std::swap instead of manually"}, {"sha": "ab29f863e4095bad172598dcd215bf0477de2374", "filename": "gcc/c-family/c-ada-spec.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c/gcc%2Fc-family%2Fc-ada-spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c/gcc%2Fc-family%2Fc-ada-spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.c?ref=c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c", "patch": "@@ -593,9 +593,12 @@ collect_ada_nodes (tree t, const char *source_file)\n   tree n;\n   int i = to_dump_count;\n \n-  /* Count the likely relevant nodes.  */\n+  /* Count the likely relevant nodes: do not dump builtins (they are irrelevant\n+     in the context of bindings) and namespaces (we do not handle them properly\n+     yet).  */\n   for (n = t; n; n = TREE_CHAIN (n))\n     if (!DECL_IS_BUILTIN (n)\n+\t&& TREE_CODE (n) != NAMESPACE_DECL\n \t&& LOCATION_FILE (decl_sloc (n, false)) == source_file)\n       to_dump_count++;\n \n@@ -605,6 +608,7 @@ collect_ada_nodes (tree t, const char *source_file)\n   /* Store the relevant nodes.  */\n   for (n = t; n; n = TREE_CHAIN (n))\n     if (!DECL_IS_BUILTIN (n)\n+\t&& TREE_CODE (n) != NAMESPACE_DECL\n \t&& LOCATION_FILE (decl_sloc (n, false)) == source_file)\n       to_dump[i++] = n;\n }\n@@ -1745,7 +1749,7 @@ dump_ada_template (pretty_printer *buffer, tree t, int spc)\n       != LOCATION_FILE (decl_sloc (t, false)))\n     return 0;\n \n-  while (inst && inst != error_mark_node)\n+  for (; inst && inst != error_mark_node; inst = TREE_CHAIN (inst))\n     {\n       tree types = TREE_PURPOSE (inst);\n       tree instance = TREE_VALUE (inst);\n@@ -1756,6 +1760,13 @@ dump_ada_template (pretty_printer *buffer, tree t, int spc)\n       if (!RECORD_OR_UNION_TYPE_P (instance) || !TYPE_METHODS (instance))\n \tbreak;\n \n+      /* We are interested in concrete template instantiations only: skip\n+\t partially specialized nodes.  */\n+      if ((TREE_CODE (instance) == RECORD_TYPE\n+\t   || TREE_CODE (instance) == UNION_TYPE)\n+\t  && cpp_check && cpp_check (instance, HAS_DEPENDENT_TEMPLATE_ARGS))\n+\tcontinue;\n+\n       num_inst++;\n       INDENT (spc);\n       pp_string (buffer, \"package \");\n@@ -1791,8 +1802,6 @@ dump_ada_template (pretty_printer *buffer, tree t, int spc)\n       pp_semicolon (buffer);\n       pp_newline (buffer);\n       pp_newline (buffer);\n-\n-      inst = TREE_CHAIN (inst);\n     }\n \n   return num_inst > 0;"}, {"sha": "e922968626fe19c2d56c3987218ce03264867f5d", "filename": "gcc/c-family/c-ada-spec.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c/gcc%2Fc-family%2Fc-ada-spec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c/gcc%2Fc-family%2Fc-ada-spec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.h?ref=c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c", "patch": "@@ -25,6 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n /* In c-ada-spec.c  */\n \n typedef enum {\n+  HAS_DEPENDENT_TEMPLATE_ARGS,\n   IS_ABSTRACT,\n   IS_CONSTRUCTOR,\n   IS_DESTRUCTOR,"}, {"sha": "f8ad21b17c70faeb8ed7f97107f9646d0478d782", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c", "patch": "@@ -1,3 +1,7 @@\n+2015-06-22  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* decl2.c (cpp_check): Deal with HAS_DEPENDENT_TEMPLATE_ARGS.\n+\n 2015-06-22  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* decl.c (grokdeclarator): Use declspecs->locations[ds_virtual]."}, {"sha": "e24d2d66c078ad701396ba3f9d5df3a7ce679aea", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c", "patch": "@@ -4057,6 +4057,16 @@ cpp_check (tree t, cpp_operation op)\n {\n   switch (op)\n     {\n+      case HAS_DEPENDENT_TEMPLATE_ARGS:\n+\t{\n+\t  tree ti = CLASSTYPE_TEMPLATE_INFO (t);\n+\t  if (!ti)\n+\t    return 0;\n+\t  ++processing_template_decl;\n+\t  const bool dep = any_dependent_template_arguments_p (TI_ARGS (ti));\n+\t  --processing_template_decl;\n+\t  return dep;\n+\t}\n       case IS_ABSTRACT:\n \treturn DECL_PURE_VIRTUAL_P (t);\n       case IS_CONSTRUCTOR:"}, {"sha": "fac610723d2a286d606cf63139523ca3e4076012", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c", "patch": "@@ -1,3 +1,9 @@\n+2015-06-22  Pierre-Marie de Rodat  <derodat@adacore.com>\n+\n+\t* g++.dg/other/dump-ada-spec-5.C: New test.\n+\t* g++.dg/other/dump-ada-spec-6.C: Likewise.\n+\t* g++.dg/other/dump-ada-spec-7.C: Likewise.\n+\n 2015-06-22  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* g++.dg/inherit/pure1.C: Test location too."}, {"sha": "4a106c56bc4b9482f66a5c5e8e4395ce2e5b55d2", "filename": "gcc/testsuite/g++.dg/other/dump-ada-spec-5.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdump-ada-spec-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdump-ada-spec-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdump-ada-spec-5.C?ref=c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fdump-ada-spec\" } */\n+\n+namespace foo\n+{\n+  int bar = 0;\n+}\n+\n+namespace bar = foo;\n+\n+/* { dg-final { cleanup-ada-spec } } */"}, {"sha": "9659c505d703a5e504d0ca5937c2daea00ed3c10", "filename": "gcc/testsuite/g++.dg/other/dump-ada-spec-6.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdump-ada-spec-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdump-ada-spec-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdump-ada-spec-6.C?ref=c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fdump-ada-spec\" } */\n+\n+template<typename T, bool b> class Foo;\n+\n+template<typename T>\n+class Foo<T, false>\n+{\n+public:\n+  // This checks that we do not crash on static members from partially\n+  // specialized class templates.\n+  static int bar;\n+\n+  int f();\n+};\n+\n+int func()\n+{\n+  Foo<int, false> f;\n+  return f.f();\n+}\n+\n+/* { dg-final { cleanup-ada-spec } } */"}, {"sha": "de47ec30fe365291d35837446f7497ff2148e57b", "filename": "gcc/testsuite/g++.dg/other/dump-ada-spec-7.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdump-ada-spec-7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdump-ada-spec-7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdump-ada-spec-7.C?ref=c6a2f2d98d666f3d4ddd1e49e0f794da0410ac5c", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fdump-ada-spec\" } */\n+\n+template<int n>\n+void bar ()\n+{\n+  return;\n+}\n+\n+class Foo\n+{\n+  // This check that we properly skip the specification for templated\n+  // members of non-templated classes.\n+  template<int n>\n+  void bar ();\n+};\n+\n+template<int n>\n+void Foo::bar ()\n+{\n+  return;\n+}\n+\n+/* { dg-final { cleanup-ada-spec } } */"}]}