{"sha": "314efb66cf1d5f8eaa3676eee83ac7787d4e09d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE0ZWZiNjZjZjFkNWY4ZWFhMzY3NmVlZTgzYWM3Nzg3ZDRlMDlkNw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-06-01T22:35:42Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-06-01T22:35:42Z"}, "message": "uses_allocator.h (__uses_allocator_helper): Simplify.\n\n\t* include/bits/uses_allocator.h (__uses_allocator_helper): Simplify.\n\t(__uses_allocator_arg): Remove unused type.\n\t(__uses_alloc0): Turn into a trivial type.\n\t(__uses_alloc): Add missing template parameter in primary template.\n\t(__uses_alloc_impl): Rename to __uses_alloc_t.\n\nFrom-SVN: r211121", "tree": {"sha": "ccee8705d27798aa0956d514e5236e7c0c094400", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccee8705d27798aa0956d514e5236e7c0c094400"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/314efb66cf1d5f8eaa3676eee83ac7787d4e09d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/314efb66cf1d5f8eaa3676eee83ac7787d4e09d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/314efb66cf1d5f8eaa3676eee83ac7787d4e09d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/314efb66cf1d5f8eaa3676eee83ac7787d4e09d7/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54dbf90c373372e90014fd8bbc1ad44fd824c31d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54dbf90c373372e90014fd8bbc1ad44fd824c31d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54dbf90c373372e90014fd8bbc1ad44fd824c31d"}], "stats": {"total": 37, "additions": 20, "deletions": 17}, "files": [{"sha": "56e7d3472d7eec9280de426a82f2153561d187fa", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/314efb66cf1d5f8eaa3676eee83ac7787d4e09d7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/314efb66cf1d5f8eaa3676eee83ac7787d4e09d7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=314efb66cf1d5f8eaa3676eee83ac7787d4e09d7", "patch": "@@ -19,6 +19,12 @@\n \tLikewise.\n \t* testsuite/experimental/string_view/operations/to_string/1.cc: New.\n \n+\t* include/bits/uses_allocator.h (__uses_allocator_helper): Simplify.\n+\t(__uses_allocator_arg): Remove unused type.\n+\t(__uses_alloc0): Turn into a trivial type.\n+\t(__uses_alloc): Add missing template parameter in primary template.\n+\t(__uses_alloc_impl): Rename to __uses_alloc_t.\n+\n 2014-05-30  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/lib/libstdc++.exp (libstdc++_init): Adjust regexp to"}, {"sha": "7281508fc06e40899c8d7ec576592d41aaec6e13", "filename": "libstdc++-v3/include/bits/uses_allocator.h", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/314efb66cf1d5f8eaa3676eee83ac7787d4e09d7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fuses_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/314efb66cf1d5f8eaa3676eee83ac7787d4e09d7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fuses_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fuses_allocator.h?ref=314efb66cf1d5f8eaa3676eee83ac7787d4e09d7", "patch": "@@ -45,35 +45,33 @@ _GLIBCXX_HAS_NESTED_TYPE(allocator_type)\n   template<typename _Tp, typename _Alloc,\n \t   bool = __has_allocator_type<_Tp>::value>\n     struct __uses_allocator_helper\n-    : public false_type { };\n+    : false_type { };\n \n   template<typename _Tp, typename _Alloc>\n     struct __uses_allocator_helper<_Tp, _Alloc, true>\n-    : public integral_constant<bool, is_convertible<_Alloc,\n-\t\t\t\t     typename _Tp::allocator_type>::value>\n+    : is_convertible<_Alloc, typename _Tp::allocator_type>::type\n     { };\n \n   /// [allocator.uses.trait]\n   template<typename _Tp, typename _Alloc>\n     struct uses_allocator\n-    : public integral_constant<bool,\n-\t\t\t       __uses_allocator_helper<_Tp, _Alloc>::value>\n+    : __uses_allocator_helper<_Tp, _Alloc>::type\n     { };\n \n-  template<typename _Tp, typename _Alloc, typename... _Args>\n-    struct __uses_allocator_arg\n-    : is_constructible<_Tp, _Alloc, _Args...>\n-    { static_assert( uses_allocator<_Tp, _Alloc>::value, \"uses allocator\" ); };\n-\n   struct __uses_alloc_base { };\n+\n   struct __uses_alloc0 : __uses_alloc_base\n-  { struct _Anything { _Anything(...) { } } _M_a; };\n+  {\n+    struct _Sink { void operator=(const void*) { } } _M_a;\n+  };\n+\n   template<typename _Alloc>\n     struct __uses_alloc1 : __uses_alloc_base { const _Alloc* _M_a; };\n+\n   template<typename _Alloc>\n     struct __uses_alloc2 : __uses_alloc_base { const _Alloc* _M_a; };\n \n-  template<bool, typename _Alloc, typename... _Args>\n+  template<bool, typename _Tp, typename _Alloc, typename... _Args>\n     struct __uses_alloc;\n \n   template<typename _Tp, typename _Alloc, typename... _Args>\n@@ -89,15 +87,14 @@ _GLIBCXX_HAS_NESTED_TYPE(allocator_type)\n     : __uses_alloc0 { };\n \n   template<typename _Tp, typename _Alloc, typename... _Args>\n-    struct __uses_alloc_impl\n-    : __uses_alloc<uses_allocator<_Tp, _Alloc>::value, _Tp,  _Alloc, _Args...>\n-    { };\n+    using __uses_alloc_t =\n+      __uses_alloc<uses_allocator<_Tp, _Alloc>::value, _Tp, _Alloc, _Args...>;\n \n   template<typename _Tp, typename _Alloc, typename... _Args>\n-    __uses_alloc_impl<_Tp, _Alloc, _Args...>\n+    inline __uses_alloc_t<_Tp, _Alloc, _Args...>\n     __use_alloc(const _Alloc& __a)\n     {\n-      __uses_alloc_impl<_Tp, _Alloc, _Args...> __ret;\n+      __uses_alloc_t<_Tp, _Alloc, _Args...> __ret;\n       __ret._M_a = &__a;\n       return __ret;\n     }"}]}