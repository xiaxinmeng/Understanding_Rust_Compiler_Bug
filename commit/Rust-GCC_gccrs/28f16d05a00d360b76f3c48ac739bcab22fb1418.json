{"sha": "28f16d05a00d360b76f3c48ac739bcab22fb1418", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhmMTZkMDVhMDBkMzYwYjc2ZjNjNDhhYzczOWJjYWIyMmZiMTQxOA==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2008-07-09T10:58:13Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2008-07-09T10:58:13Z"}, "message": "sh.c (sh_canonical_va_list_type): New.\n\n\t* config/sh/sh.c (sh_canonical_va_list_type): New.\n\t(TARGET_CANONICAL_VA_LIST_TYPE): Define.\n\nFrom-SVN: r137656", "tree": {"sha": "aae7c0570dd29bcd58ce3c63b412b1b33069d8d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aae7c0570dd29bcd58ce3c63b412b1b33069d8d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28f16d05a00d360b76f3c48ac739bcab22fb1418", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28f16d05a00d360b76f3c48ac739bcab22fb1418", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28f16d05a00d360b76f3c48ac739bcab22fb1418", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28f16d05a00d360b76f3c48ac739bcab22fb1418/comments", "author": null, "committer": null, "parents": [{"sha": "1ebc7e681079e61300e75a5c0f3b2da335720cc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ebc7e681079e61300e75a5c0f3b2da335720cc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ebc7e681079e61300e75a5c0f3b2da335720cc7"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "c579c50da1d097d46fcd8c145fcc26ae8a5622d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28f16d05a00d360b76f3c48ac739bcab22fb1418/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28f16d05a00d360b76f3c48ac739bcab22fb1418/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=28f16d05a00d360b76f3c48ac739bcab22fb1418", "patch": "@@ -1,3 +1,8 @@\n+2008-07-09  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config/sh/sh.c (sh_canonical_va_list_type): New.\n+\t(TARGET_CANONICAL_VA_LIST_TYPE): Define.\n+\n 2008-07-09  Raksit Ashok <raksit@google.com>\n \n \t* doc/invoke.texi (Option Summary): Mention new option"}, {"sha": "e311362de6cf082420db826d17364c9e6869e554", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28f16d05a00d360b76f3c48ac739bcab22fb1418/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28f16d05a00d360b76f3c48ac739bcab22fb1418/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=28f16d05a00d360b76f3c48ac739bcab22fb1418", "patch": "@@ -260,6 +260,7 @@ static void sh_setup_incoming_varargs (CUMULATIVE_ARGS *, enum machine_mode, tre\n static bool sh_strict_argument_naming (CUMULATIVE_ARGS *);\n static bool sh_pretend_outgoing_varargs_named (CUMULATIVE_ARGS *);\n static tree sh_build_builtin_va_list (void);\n+static tree sh_canonical_va_list_type (tree);\n static void sh_va_start (tree, rtx);\n static tree sh_gimplify_va_arg_expr (tree, tree, tree *, tree *);\n static bool sh_pass_by_reference (CUMULATIVE_ARGS *, enum machine_mode,\n@@ -441,6 +442,8 @@ static int sh2a_function_vector_p (tree);\n \n #undef TARGET_BUILD_BUILTIN_VA_LIST\n #define TARGET_BUILD_BUILTIN_VA_LIST sh_build_builtin_va_list\n+#undef TARGET_CANONICAL_VA_LIST_TYPE\n+#define TARGET_CANONICAL_VA_LIST_TYPE sh_canonical_va_list_type\n #undef TARGET_EXPAND_BUILTIN_VA_START\n #define TARGET_EXPAND_BUILTIN_VA_START sh_va_start\n #undef TARGET_GIMPLIFY_VA_ARG_EXPR\n@@ -7145,6 +7148,14 @@ sh_build_builtin_va_list (void)\n   return record;\n }\n \n+/* Return always va_list_type_node.  */\n+\n+static tree\n+sh_canonical_va_list_type (tree type ATTRIBUTE_UNUSED)\n+{\n+  return va_list_type_node;\n+}\n+\n /* Implement `va_start' for varargs and stdarg.  */\n \n static void"}]}