{"sha": "ff78f7732cf4bf15d75d11d696ea5563d76ac1fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY3OGY3NzMyY2Y0YmYxNWQ3NWQxMWQ2OTZlYTU1NjNkNzZhYzFmYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-05T10:57:19Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-05T10:57:19Z"}, "message": "(expand_expr, case SAVE_EXPR): Pass promoted type to store_expr.\n\nFrom-SVN: r4022", "tree": {"sha": "98c5cd9f078d1b880d3a855b614267a11e8f264a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98c5cd9f078d1b880d3a855b614267a11e8f264a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff78f7732cf4bf15d75d11d696ea5563d76ac1fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff78f7732cf4bf15d75d11d696ea5563d76ac1fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff78f7732cf4bf15d75d11d696ea5563d76ac1fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff78f7732cf4bf15d75d11d696ea5563d76ac1fa/comments", "author": null, "committer": null, "parents": [{"sha": "597bb7f10b5819fa4209fb5d981f5d660661fb00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/597bb7f10b5819fa4209fb5d981f5d660661fb00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/597bb7f10b5819fa4209fb5d981f5d660661fb00"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "4f54ca50857107384c58891e8f5681256a315988", "filename": "gcc/expr.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff78f7732cf4bf15d75d11d696ea5563d76ac1fa/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff78f7732cf4bf15d75d11d696ea5563d76ac1fa/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=ff78f7732cf4bf15d75d11d696ea5563d76ac1fa", "patch": "@@ -3491,10 +3491,24 @@ expand_expr (exp, target, tmode, modifier)\n \t    }\n \n \t  SAVE_EXPR_RTL (exp) = temp;\n-\t  store_expr (TREE_OPERAND (exp, 0), temp, 0);\n \t  if (!optimize && GET_CODE (temp) == REG)\n \t    save_expr_regs = gen_rtx (EXPR_LIST, VOIDmode, temp,\n \t\t\t\t      save_expr_regs);\n+\n+\t  /* If the mode of TEMP does not match that of the expression, it\n+\t     must be a promoted value.  We pass store_expr a SUBREG of the\n+\t     wanted mode but mark it so that we know that it was already\n+\t     extended.  Note that `unsignedp' was modified above in\n+\t     this case.  */\n+\n+\t  if (GET_CODE (temp) == REG && GET_MODE (temp) != mode)\n+\t    {\n+\t      temp = gen_rtx (SUBREG, mode, SAVE_EXPR_RTL (exp), 0);\n+\t      SUBREG_PROMOTED_VAR_P (temp) = 1;\n+\t      SUBREG_PROMOTED_UNSIGNED_P (temp) = unsignedp;\n+\t    }\n+\n+\t  store_expr (TREE_OPERAND (exp, 0), temp, 0);\n \t}\n \n       /* If the mode of SAVE_EXPR_RTL does not match that of the expression, it"}]}