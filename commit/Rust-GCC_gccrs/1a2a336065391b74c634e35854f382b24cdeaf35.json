{"sha": "1a2a336065391b74c634e35854f382b24cdeaf35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWEyYTMzNjA2NTM5MWI3NGM2MzRlMzU4NTRmMzgyYjI0Y2RlYWYzNQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2014-11-25T17:10:00Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2014-11-25T17:10:00Z"}, "message": "Add verify_sese\n\n2014-11-25  Tom de Vries  <tom@codesourcery.com>\n\n\t* tree-cfg.c (verify_sese): New function.\n\t(move_sese_region_to_fn): Call verify_sese.\n\t* tree-cfg.h (verify_sese): Declare.\n\nFrom-SVN: r218051", "tree": {"sha": "d0ef821524c5d3565845754d9ffcdfa2a4e3a89c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0ef821524c5d3565845754d9ffcdfa2a4e3a89c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a2a336065391b74c634e35854f382b24cdeaf35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a2a336065391b74c634e35854f382b24cdeaf35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a2a336065391b74c634e35854f382b24cdeaf35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a2a336065391b74c634e35854f382b24cdeaf35/comments", "author": null, "committer": null, "parents": [{"sha": "fdb424cfea0d021be66d0e335ff7e72c504acbc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdb424cfea0d021be66d0e335ff7e72c504acbc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdb424cfea0d021be66d0e335ff7e72c504acbc5"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "8b0d92b647abdfbb5373c8095dabe1836c198440", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a2a336065391b74c634e35854f382b24cdeaf35/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a2a336065391b74c634e35854f382b24cdeaf35/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a2a336065391b74c634e35854f382b24cdeaf35", "patch": "@@ -1,3 +1,9 @@\n+2014-11-25  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* tree-cfg.c (verify_sese): New function.\n+\t(move_sese_region_to_fn): Call verify_sese.\n+\t* tree-cfg.h (verify_sese): Declare.\n+\n 2014-11-25  Richard Biener  <rguenther@suse.de>\n \n \tPR lto/64065"}, {"sha": "0a8d7a9f6ad475664ba63f08f3b25a65816bd239", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a2a336065391b74c634e35854f382b24cdeaf35/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a2a336065391b74c634e35854f382b24cdeaf35/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=1a2a336065391b74c634e35854f382b24cdeaf35", "patch": "@@ -6870,6 +6870,61 @@ fixup_loop_arrays_after_move (struct function *fn1, struct function *fn2,\n     fixup_loop_arrays_after_move (fn1, fn2, loop);\n }\n \n+/* Verify that the blocks in BBS_P are a single-entry, single-exit region\n+   delimited by ENTRY_BB and EXIT_BB, possibly containing noreturn blocks.  */\n+\n+DEBUG_FUNCTION void\n+verify_sese (basic_block entry, basic_block exit, vec<basic_block> *bbs_p)\n+{\n+  basic_block bb;\n+  edge_iterator ei;\n+  edge e;\n+  bitmap bbs = BITMAP_ALLOC (NULL);\n+  int i;\n+\n+  gcc_assert (entry != NULL);\n+  gcc_assert (entry != exit);\n+  gcc_assert (bbs_p != NULL);\n+\n+  gcc_assert (bbs_p->length () > 0);\n+\n+  FOR_EACH_VEC_ELT (*bbs_p, i, bb)\n+    bitmap_set_bit (bbs, bb->index);\n+\n+  gcc_assert (bitmap_bit_p (bbs, entry->index));\n+  gcc_assert (exit == NULL || bitmap_bit_p (bbs, exit->index));\n+\n+  FOR_EACH_VEC_ELT (*bbs_p, i, bb)\n+    {\n+      if (bb == entry)\n+\t{\n+\t  gcc_assert (single_pred_p (entry));\n+\t  gcc_assert (!bitmap_bit_p (bbs, single_pred (entry)->index));\n+\t}\n+      else\n+\tfor (ei = ei_start (bb->preds); !ei_end_p (ei); ei_next (&ei))\n+\t  {\n+\t    e = ei_edge (ei);\n+\t    gcc_assert (bitmap_bit_p (bbs, e->src->index));\n+\t  }\n+\n+      if (bb == exit)\n+\t{\n+\t  gcc_assert (single_succ_p (exit));\n+\t  gcc_assert (!bitmap_bit_p (bbs, single_succ (exit)->index));\n+\t}\n+      else\n+\tfor (ei = ei_start (bb->succs); !ei_end_p (ei); ei_next (&ei))\n+\t  {\n+\t    e = ei_edge (ei);\n+\t    gcc_assert (bitmap_bit_p (bbs, e->dest->index));\n+\t  }\n+    }\n+\n+  BITMAP_FREE (bbs);\n+}\n+\n+\n /* Move a single-entry, single-exit region delimited by ENTRY_BB and\n    EXIT_BB to function DEST_CFUN.  The whole region is replaced by a\n    single basic block in the original CFG and the new basic block is\n@@ -6918,6 +6973,9 @@ move_sese_region_to_fn (struct function *dest_cfun, basic_block entry_bb,\n   bbs.create (0);\n   bbs.safe_push (entry_bb);\n   gather_blocks_in_sese_region (entry_bb, exit_bb, &bbs);\n+#ifdef ENABLE_CHECKING\n+  verify_sese (entry_bb, exit_bb, &bbs);\n+#endif\n \n   /* The blocks that used to be dominated by something in BBS will now be\n      dominated by the new block.  */"}, {"sha": "d35e5ba41a666e1cfe314c734cef872128bcfb75", "filename": "gcc/tree-cfg.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a2a336065391b74c634e35854f382b24cdeaf35/gcc%2Ftree-cfg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a2a336065391b74c634e35854f382b24cdeaf35/gcc%2Ftree-cfg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.h?ref=1a2a336065391b74c634e35854f382b24cdeaf35", "patch": "@@ -73,6 +73,7 @@ extern bool gimple_duplicate_sese_tail (edge, edge, basic_block *, unsigned,\n \t\t\t\t      basic_block *);\n extern void gather_blocks_in_sese_region (basic_block entry, basic_block exit,\n \t\t\t\t\t  vec<basic_block> *bbs_p);\n+extern void verify_sese (basic_block, basic_block, vec<basic_block> *);\n extern basic_block move_sese_region_to_fn (struct function *, basic_block,\n \t\t\t\t           basic_block, tree);\n extern void dump_function_to_file (tree, FILE *, int);"}]}