{"sha": "8b4c365c560219ff8d4cf1f34857bcbf7d109325", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI0YzM2NWM1NjAyMTlmZjhkNGNmMWYzNDg1N2JjYmY3ZDEwOTMyNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-07-19T15:39:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-07-19T15:39:51Z"}, "message": "re PR rtl-optimization/44941 (ICE: RTL check: expected code 'mem', have 'reg' in emit_block_move_hints, at expr.c:1189)\n\n2010-07-19  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/44941\n\t* expr.c (emit_block_move_hints): Move zero size check first.\n\tMove asserts to more useful places.\n\t* calls.c (load_register_parameters): Check for zero size.\n\n\t* gcc.c-torture/compile/pr44941.c: New testcase.\n\nFrom-SVN: r162308", "tree": {"sha": "0ae59fd9f0d195c2d6333012468dd2a2a43fcd65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ae59fd9f0d195c2d6333012468dd2a2a43fcd65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b4c365c560219ff8d4cf1f34857bcbf7d109325", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b4c365c560219ff8d4cf1f34857bcbf7d109325", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b4c365c560219ff8d4cf1f34857bcbf7d109325", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b4c365c560219ff8d4cf1f34857bcbf7d109325/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ab73eba8bf38a703e40b5e5077b51408fb715d67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab73eba8bf38a703e40b5e5077b51408fb715d67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab73eba8bf38a703e40b5e5077b51408fb715d67"}], "stats": {"total": 36, "additions": 28, "deletions": 8}, "files": [{"sha": "a98d044d562aa5f43602f07c59675ff1f6fe204b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b4c365c560219ff8d4cf1f34857bcbf7d109325/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b4c365c560219ff8d4cf1f34857bcbf7d109325/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8b4c365c560219ff8d4cf1f34857bcbf7d109325", "patch": "@@ -1,3 +1,10 @@\n+2010-07-19  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/44941\n+\t* expr.c (emit_block_move_hints): Move zero size check first.\n+\tMove asserts to more useful places.\n+\t* calls.c (load_register_parameters): Check for zero size.\n+\n 2010-07-19  Richard Henderson  <rth@redhat.com>\n \n \t* tree-optimize.c (execute_all_early_local_passes): New.  Change"}, {"sha": "73771092a4887baf29d60966d7762209addc9ffa", "filename": "gcc/calls.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b4c365c560219ff8d4cf1f34857bcbf7d109325/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b4c365c560219ff8d4cf1f34857bcbf7d109325/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=8b4c365c560219ff8d4cf1f34857bcbf7d109325", "patch": "@@ -1668,7 +1668,8 @@ load_register_parameters (struct arg_data *args, int num_actuals,\n \t      emit_move_insn (gen_rtx_REG (word_mode, REGNO (reg) + j),\n \t\t\t      args[i].aligned_regs[j]);\n \n-\t  else if (partial == 0 || args[i].pass_on_stack)\n+\t  else if ((partial == 0 || args[i].pass_on_stack)\n+\t\t   && size != 0)\n \t    {\n \t      rtx mem = validize_mem (args[i].value);\n "}, {"sha": "3e5d18bdebc7639d6622b3f1567ed3b0d628e3d5", "filename": "gcc/expr.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b4c365c560219ff8d4cf1f34857bcbf7d109325/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b4c365c560219ff8d4cf1f34857bcbf7d109325/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=8b4c365c560219ff8d4cf1f34857bcbf7d109325", "patch": "@@ -1120,6 +1120,11 @@ emit_block_move_hints (rtx x, rtx y, rtx size, enum block_op_methods method,\n   rtx retval = 0;\n   unsigned int align;\n \n+  gcc_assert (size);\n+  if (CONST_INT_P (size)\n+      && INTVAL (size) == 0)\n+    return 0;\n+\n   switch (method)\n     {\n     case BLOCK_OP_NORMAL:\n@@ -1143,13 +1148,10 @@ emit_block_move_hints (rtx x, rtx y, rtx size, enum block_op_methods method,\n       gcc_unreachable ();\n     }\n \n+  gcc_assert (MEM_P (x) && MEM_P (y));\n   align = MIN (MEM_ALIGN (x), MEM_ALIGN (y));\n   gcc_assert (align >= BITS_PER_UNIT);\n \n-  gcc_assert (MEM_P (x));\n-  gcc_assert (MEM_P (y));\n-  gcc_assert (size);\n-\n   /* Make sure we've got BLKmode addresses; store_one_arg can decide that\n      block copy is more efficient for other large modes, e.g. DCmode.  */\n   x = adjust_address (x, BLKmode, 0);\n@@ -1159,9 +1161,6 @@ emit_block_move_hints (rtx x, rtx y, rtx size, enum block_op_methods method,\n      can be incorrect is coming from __builtin_memcpy.  */\n   if (CONST_INT_P (size))\n     {\n-      if (INTVAL (size) == 0)\n-\treturn 0;\n-\n       x = shallow_copy_rtx (x);\n       y = shallow_copy_rtx (y);\n       set_mem_size (x, size);"}, {"sha": "202252dfb42ec3e12aedf085c498a807e7eb078e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b4c365c560219ff8d4cf1f34857bcbf7d109325/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b4c365c560219ff8d4cf1f34857bcbf7d109325/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8b4c365c560219ff8d4cf1f34857bcbf7d109325", "patch": "@@ -1,3 +1,8 @@\n+2010-07-19  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/44941\n+\t* gcc.c-torture/compile/pr44941.c: New testcase.\n+\n 2010-07-19  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/44969"}, {"sha": "7d9cc8372fc4104c8dd8aa3447c1e236adf015e9", "filename": "gcc/testsuite/gcc.c-torture/compile/pr44941.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b4c365c560219ff8d4cf1f34857bcbf7d109325/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr44941.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b4c365c560219ff8d4cf1f34857bcbf7d109325/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr44941.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr44941.c?ref=8b4c365c560219ff8d4cf1f34857bcbf7d109325", "patch": "@@ -0,0 +1,8 @@\n+struct S { };\n+\n+extern void bar(struct S);\n+\n+void foo (int i)\n+{\n+  bar (*(struct S *)&i);\n+}"}]}