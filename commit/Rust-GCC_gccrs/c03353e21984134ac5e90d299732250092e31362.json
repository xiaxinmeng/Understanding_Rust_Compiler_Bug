{"sha": "c03353e21984134ac5e90d299732250092e31362", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzAzMzUzZTIxOTg0MTM0YWM1ZTkwZDI5OTczMjI1MDA5MmUzMTM2Mg==", "commit": {"author": {"name": "Rask Ingemann Lambertsen", "email": "rask@sygehus.dk", "date": "2007-09-10T14:20:10Z"}, "committer": {"name": "Rask Ingemann Lambertsen", "email": "rask@gcc.gnu.org", "date": "2007-09-10T14:20:10Z"}, "message": "re PR other/32154 (sim-crt0.o/crt0.o isn't found during configure due to missing -L or -B)\n\n\tPR other/32154\n\t* configure.ac: For libgloss targets, point the linker to the linker\n\tscript, startup code and simulator library.\n\t* configure: Regenerate.\n\nFrom-SVN: r128344", "tree": {"sha": "d6afc533f093267bfe0b9bdd8131c2ff470f0c5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6afc533f093267bfe0b9bdd8131c2ff470f0c5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c03353e21984134ac5e90d299732250092e31362", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c03353e21984134ac5e90d299732250092e31362", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c03353e21984134ac5e90d299732250092e31362", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c03353e21984134ac5e90d299732250092e31362/comments", "author": null, "committer": null, "parents": [{"sha": "67186a97fee72340e779378f7059d9b71d0f7912", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67186a97fee72340e779378f7059d9b71d0f7912", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67186a97fee72340e779378f7059d9b71d0f7912"}], "stats": {"total": 109, "additions": 89, "deletions": 20}, "files": [{"sha": "90d5d0393b0715a3df804c27f4f931055130f942", "filename": "ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c03353e21984134ac5e90d299732250092e31362/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c03353e21984134ac5e90d299732250092e31362/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=c03353e21984134ac5e90d299732250092e31362", "patch": "@@ -1,3 +1,10 @@\n+2007-09-10  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n+\n+\tPR other/32154\n+\t* configure.ac: For libgloss targets, point the linker to the linker\n+\tscript, startup code and simulator library.\n+\t* configure: Regenerate.\n+\n 2007-09-07  Andrew Haley  <aph@redhat.com>\n \n \t* configure.ac (noconfigdirs): Remove target-libffi and"}, {"sha": "01346cbc45709a8b24503c9e1a7ffe50c09880ef", "filename": "configure", "status": "modified", "additions": 41, "deletions": 10, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c03353e21984134ac5e90d299732250092e31362/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c03353e21984134ac5e90d299732250092e31362/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=c03353e21984134ac5e90d299732250092e31362", "patch": "@@ -2122,6 +2122,8 @@ if test x$enable_libgomp = x ; then\n     esac\n fi\n \n+# Default libgloss CPU subdirectory.\n+libgloss_dir=\"$target_cpu\"\n \n case \"${target}\" in\n   *-*-chorusos)\n@@ -2228,6 +2230,7 @@ case \"${target}\" in\n       *) noconfigdirs=\"$noconfigdirs gdb readline\"\n \t ;;\n     esac\n+    libgloss_dir=wince\n     ;;\n   arc-*-*)\n     noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n@@ -2236,19 +2239,23 @@ case \"${target}\" in\n     ;;\n   arm-*-coff | strongarm-*-coff | xscale-*-coff)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n+    libgloss_dir=arm\n     ;;\n   arm-*-elf* | strongarm-*-elf* | xscale-*-elf* | arm*-*-eabi* )\n     noconfigdirs=\"$noconfigdirs target-libffi target-qthreads\"\n+    libgloss_dir=arm\n     ;;\n   arm*-*-linux-gnueabi)\n     noconfigdirs=\"$noconfigdirs target-qthreads\"\n     noconfigdirs=\"$noconfigdirs target-libobjc\"\n     case ${with_newlib} in\n       no) noconfigdirs=\"$noconfigdirs target-newlib target-libgloss\"\n     esac\n+    libgloss_dir=arm\n     ;;\n   arm*-*-symbianelf*)\n     noconfigdirs=\"$noconfigdirs ${libgcj} target-libiberty\"\n+    libgloss_dir=arm\n     ;;\n   arm-*-pe*)\n     noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n@@ -2295,6 +2302,7 @@ case \"${target}\" in\n \tunsupported_languages=\"$unsupported_languages fortran\"\n \tnoconfigdirs=\"$noconfigdirs ${libgcj} target-newlib target-libgloss\";;\n     esac\n+    libgloss_dir=cris\n     ;;\n   crx-*-*)\n     noconfigdirs=\"$noconfigdirs target-libstdc++-v3 target-mudflap ${libgcj}\"\n@@ -2305,6 +2313,9 @@ case \"${target}\" in\n   d30v-*-*)\n     noconfigdirs=\"$noconfigdirs ${libgcj} gdb\"\n     ;;\n+  ep9312-*-elf | ep9312-*-coff)\n+    libgloss_dir=arm\n+    ;;\n   fr30-*-elf*)\n     noconfigdirs=\"$noconfigdirs ${libgcj} gdb\"\n     ;;\n@@ -2336,6 +2347,9 @@ case \"${target}\" in\n   hppa*-hp-hpux11*)\n     noconfigdirs=\"$noconfigdirs ld shellutils\"\n     ;;\n+  hppa*-*-pro*)\n+    libgloss_dir=pa\n+    ;;\n   hppa*-*-*)\n     # According to Alexandre Oliva <aoliva@redhat.com>, libjava won't\n     # build on HP-UX 10.20.\n@@ -2356,6 +2370,7 @@ case \"${target}\" in\n     ;;\n   i[3456789]86-*-coff | i[3456789]86-*-elf)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n+    libgloss_dir=i386\n     ;;\n   i[3456789]86-*-linux*)\n     # The GCC port for glibc1 has no MD_FALLBACK_FRAME_STATE_FOR, so let's\n@@ -2425,13 +2440,17 @@ case \"${target}\" in\n     ;;\n   m68hc11-*-*|m6811-*-*|m68hc12-*-*|m6812-*-*)\n     noconfigdirs=\"$noconfigdirs target-libiberty target-libstdc++-v3 ${libgcj}\"\n+    libgloss_dir=m68hc11\n     ;;\n   m68k-*-elf*)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n     ;;\n   m68k-*-coff*)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n     ;;\n+  m68*-*-* | fido-*-*)\n+    libgloss_dir=m68k\n+    ;;\n   mcore-*-pe*)\n   # The EPOC C++ environment does not support exceptions or rtti,\n   # and so building libstdc++-v3 tends not to always work.\n@@ -2463,14 +2482,17 @@ case \"${target}\" in\n     # This is temporary until we can link against shared libraries\n   powerpcle-*-solaris*)\n     noconfigdirs=\"$noconfigdirs gdb sim make tcl tk expect itcl gnuserv ${libgcj}\"\n+    libgloss_dir=rs6000\n     ;;\n   powerpc-*-beos*)\n     noconfigdirs=\"$noconfigdirs gdb target-newlib target-libgloss ${libgcj}\"\n     ;;\n   powerpc-*-eabi)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n+    libgloss_dir=rs6000\n     ;;\n   powerpc-*-eabi* | powerpcle-*-eabi* | powerpc-*-rtems* )\n+    libgloss_dir=rs6000\n     ;;\n   rs6000-*-lynxos*)\n     noconfigdirs=\"$noconfigdirs target-newlib gprof ${libgcj}\"\n@@ -2505,6 +2527,7 @@ case \"${target}\" in\n     ;;\n   mips*-*-*)\n     noconfigdirs=\"$noconfigdirs gprof ${libgcj}\"\n+    libgloss_dir=mips\n     ;;\n   romp-*-*)\n     noconfigdirs=\"$noconfigdirs bfd binutils ld gas opcodes target-libgloss ${libgcj}\"\n@@ -2518,14 +2541,19 @@ case \"${target}\" in\n     esac\n     noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     ;;\n+  sparclet-*-aout* | sparc86x-*-*)\n+    libgloss_dir=sparc\n+    ;;\n   sparc-*-elf*)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n     ;;\n   sparc64-*-elf*)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n+    libgloss_dir=sparc\n     ;;\n   sparclite-*-*)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n+    libgloss_dir=sparc\n     ;;\n   sparc-*-sunos4*)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n@@ -5791,6 +5819,19 @@ case \" $target_configdirs \" in\n       # for any libc-related directories first (so make it the last -B\n       # switch).\n       FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$$r/$(TARGET_SUBDIR)/newlib/ -isystem $$r/$(TARGET_SUBDIR)/newlib/targ-include -isystem $$s/newlib/libc/include'\n+\n+      # If we're building libgloss, find the startup file, simulator library\n+      # and linker script.\n+      case \" $target_configdirs \" in\n+\t*\" libgloss \"*)\n+\t# Look for startup file, simulator library and maybe linker script.\n+\tFLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$$r/$(TARGET_SUBDIR)/libgloss/'\"$libgloss_dir\"\n+\t# Look for libnosys.a in case the target needs it.\n+\tFLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/$(TARGET_SUBDIR)/libgloss/libnosys'\n+\t# Most targets have the linker script in the source directory.\n+\tFLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$s/libgloss/'\"$libgloss_dir\"\n+\t;;\n+      esac\n       ;;\n    esac\n    ;;\n@@ -5824,16 +5865,6 @@ fi\n \n # Search for other target-specific linker scripts and such.\n case \"${target}\" in\n-  m32c-*-* )\n-    if test -d ${srcdir}/libgloss/m32c; then\n-      # This is for crt0.o\n-      FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$$r/$(TARGET_SUBDIR)/libgloss/m32c'\n-      # This is for r8c.ld\n-      FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/$(TARGET_SUBDIR)/libgloss/m32c'\n-      # This is for libnosys.a\n-      FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/$(TARGET_SUBDIR)/libgloss/libnosys'\n-    fi\n-    ;;\n   mep*)\n     FLAGS_FOR_TARGET=\"$FLAGS_FOR_TARGET -mlibrary\"\n     ;;"}, {"sha": "61d72e4b76afab165228f2885a6057d6ae90232c", "filename": "configure.ac", "status": "modified", "additions": 41, "deletions": 10, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c03353e21984134ac5e90d299732250092e31362/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c03353e21984134ac5e90d299732250092e31362/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=c03353e21984134ac5e90d299732250092e31362", "patch": "@@ -398,6 +398,8 @@ if test x$enable_libgomp = x ; then\n     esac\n fi\n \n+# Default libgloss CPU subdirectory.\n+libgloss_dir=\"$target_cpu\"\n \n case \"${target}\" in\n   *-*-chorusos)\n@@ -504,6 +506,7 @@ case \"${target}\" in\n       *) noconfigdirs=\"$noconfigdirs gdb readline\"\n \t ;;\n     esac\n+    libgloss_dir=wince\n     ;;\n   arc-*-*)\n     noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n@@ -512,19 +515,23 @@ case \"${target}\" in\n     ;;\n   arm-*-coff | strongarm-*-coff | xscale-*-coff)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n+    libgloss_dir=arm\n     ;;\n   arm-*-elf* | strongarm-*-elf* | xscale-*-elf* | arm*-*-eabi* )\n     noconfigdirs=\"$noconfigdirs target-libffi target-qthreads\"\n+    libgloss_dir=arm\n     ;;\n   arm*-*-linux-gnueabi)\n     noconfigdirs=\"$noconfigdirs target-qthreads\"\n     noconfigdirs=\"$noconfigdirs target-libobjc\"\n     case ${with_newlib} in\n       no) noconfigdirs=\"$noconfigdirs target-newlib target-libgloss\"\n     esac\n+    libgloss_dir=arm\n     ;;\n   arm*-*-symbianelf*)\n     noconfigdirs=\"$noconfigdirs ${libgcj} target-libiberty\"\n+    libgloss_dir=arm\n     ;;\n   arm-*-pe*)\n     noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n@@ -571,6 +578,7 @@ case \"${target}\" in\n \tunsupported_languages=\"$unsupported_languages fortran\"\n \tnoconfigdirs=\"$noconfigdirs ${libgcj} target-newlib target-libgloss\";;\n     esac\n+    libgloss_dir=cris\n     ;;\n   crx-*-*)\n     noconfigdirs=\"$noconfigdirs target-libstdc++-v3 target-mudflap ${libgcj}\"\n@@ -581,6 +589,9 @@ case \"${target}\" in\n   d30v-*-*)\n     noconfigdirs=\"$noconfigdirs ${libgcj} gdb\"\n     ;;\n+  ep9312-*-elf | ep9312-*-coff)\n+    libgloss_dir=arm\n+    ;;\n   fr30-*-elf*)\n     noconfigdirs=\"$noconfigdirs ${libgcj} gdb\"\n     ;;\n@@ -612,6 +623,9 @@ case \"${target}\" in\n   hppa*-hp-hpux11*)\n     noconfigdirs=\"$noconfigdirs ld shellutils\"\n     ;;\n+  hppa*-*-pro*)\n+    libgloss_dir=pa\n+    ;;\n   hppa*-*-*)\n     # According to Alexandre Oliva <aoliva@redhat.com>, libjava won't\n     # build on HP-UX 10.20.\n@@ -632,6 +646,7 @@ case \"${target}\" in\n     ;;\n   i[[3456789]]86-*-coff | i[[3456789]]86-*-elf)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n+    libgloss_dir=i386\n     ;;\n   i[[3456789]]86-*-linux*)\n     # The GCC port for glibc1 has no MD_FALLBACK_FRAME_STATE_FOR, so let's\n@@ -701,13 +716,17 @@ case \"${target}\" in\n     ;;\n   m68hc11-*-*|m6811-*-*|m68hc12-*-*|m6812-*-*)\n     noconfigdirs=\"$noconfigdirs target-libiberty target-libstdc++-v3 ${libgcj}\"\n+    libgloss_dir=m68hc11\n     ;;\n   m68k-*-elf*)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n     ;;\n   m68k-*-coff*)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n     ;;\n+  m68*-*-* | fido-*-*)\n+    libgloss_dir=m68k\n+    ;;\n   mcore-*-pe*)\n   # The EPOC C++ environment does not support exceptions or rtti,\n   # and so building libstdc++-v3 tends not to always work.\n@@ -739,14 +758,17 @@ case \"${target}\" in\n     # This is temporary until we can link against shared libraries\n   powerpcle-*-solaris*)\n     noconfigdirs=\"$noconfigdirs gdb sim make tcl tk expect itcl gnuserv ${libgcj}\"\n+    libgloss_dir=rs6000\n     ;;\n   powerpc-*-beos*)\n     noconfigdirs=\"$noconfigdirs gdb target-newlib target-libgloss ${libgcj}\"\n     ;;\n   powerpc-*-eabi)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n+    libgloss_dir=rs6000\n     ;;\n   powerpc-*-eabi* | powerpcle-*-eabi* | powerpc-*-rtems* )\n+    libgloss_dir=rs6000\n     ;;\n   rs6000-*-lynxos*)\n     noconfigdirs=\"$noconfigdirs target-newlib gprof ${libgcj}\"\n@@ -781,6 +803,7 @@ case \"${target}\" in\n     ;;\n   mips*-*-*)\n     noconfigdirs=\"$noconfigdirs gprof ${libgcj}\"\n+    libgloss_dir=mips\n     ;;\n   romp-*-*)\n     noconfigdirs=\"$noconfigdirs bfd binutils ld gas opcodes target-libgloss ${libgcj}\"\n@@ -794,14 +817,19 @@ case \"${target}\" in\n     esac\n     noconfigdirs=\"$noconfigdirs target-libgloss ${libgcj}\"\n     ;;\n+  sparclet-*-aout* | sparc86x-*-*)\n+    libgloss_dir=sparc\n+    ;;\n   sparc-*-elf*)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n     ;;\n   sparc64-*-elf*)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n+    libgloss_dir=sparc\n     ;;\n   sparclite-*-*)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n+    libgloss_dir=sparc\n     ;;\n   sparc-*-sunos4*)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n@@ -2301,6 +2329,19 @@ case \" $target_configdirs \" in\n       # for any libc-related directories first (so make it the last -B\n       # switch).\n       FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$$r/$(TARGET_SUBDIR)/newlib/ -isystem $$r/$(TARGET_SUBDIR)/newlib/targ-include -isystem $$s/newlib/libc/include'\n+\n+      # If we're building libgloss, find the startup file, simulator library\n+      # and linker script.\n+      case \" $target_configdirs \" in\n+\t*\" libgloss \"*)\n+\t# Look for startup file, simulator library and maybe linker script.\n+\tFLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$$r/$(TARGET_SUBDIR)/libgloss/'\"$libgloss_dir\"\n+\t# Look for libnosys.a in case the target needs it.\n+\tFLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/$(TARGET_SUBDIR)/libgloss/libnosys'\n+\t# Most targets have the linker script in the source directory.\n+\tFLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$s/libgloss/'\"$libgloss_dir\"\n+\t;;\n+      esac\n       ;;\n    esac\n    ;;\n@@ -2334,16 +2375,6 @@ fi\n \n # Search for other target-specific linker scripts and such.\n case \"${target}\" in\n-  m32c-*-* )\n-    if test -d ${srcdir}/libgloss/m32c; then\n-      # This is for crt0.o\n-      FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$$r/$(TARGET_SUBDIR)/libgloss/m32c'\n-      # This is for r8c.ld\n-      FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/$(TARGET_SUBDIR)/libgloss/m32c'\n-      # This is for libnosys.a\n-      FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/$(TARGET_SUBDIR)/libgloss/libnosys'\n-    fi\n-    ;;\n   mep*)\n     FLAGS_FOR_TARGET=\"$FLAGS_FOR_TARGET -mlibrary\"\n     ;;"}]}