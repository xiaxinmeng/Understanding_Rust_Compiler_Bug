{"sha": "a57fc74385ddb5fb8f77122f6d4d8846900579b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU3ZmM3NDM4NWRkYjVmYjhmNzcxMjJmNmQ0ZDg4NDY5MDA1NzliMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-01-10T09:25:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-01-10T09:25:12Z"}, "message": "re PR middle-end/55921 (Crash in verify_ssa for asm to side-steps complex pessimization)\n\n\tPR tree-optimization/55921\n\t* tree-complex.c (expand_complex_asm): New function.\n\t(expand_complex_operations_1): Call it for GIMPLE_ASM.\n\n\t* gcc.c-torture/compile/pr55921.c: New test.\n\nFrom-SVN: r195080", "tree": {"sha": "5fb721c2a5ba20d25a6c8cdc53b3a983151a4708", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fb721c2a5ba20d25a6c8cdc53b3a983151a4708"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a57fc74385ddb5fb8f77122f6d4d8846900579b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a57fc74385ddb5fb8f77122f6d4d8846900579b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a57fc74385ddb5fb8f77122f6d4d8846900579b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a57fc74385ddb5fb8f77122f6d4d8846900579b1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0ff4390dd359f76dd76b835a0ccf9d473d9ebe28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ff4390dd359f76dd76b835a0ccf9d473d9ebe28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ff4390dd359f76dd76b835a0ccf9d473d9ebe28"}], "stats": {"total": 70, "additions": 69, "deletions": 1}, "files": [{"sha": "e73df4bea82dc05692eb03da19d8763550f21d16", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a57fc74385ddb5fb8f77122f6d4d8846900579b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a57fc74385ddb5fb8f77122f6d4d8846900579b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a57fc74385ddb5fb8f77122f6d4d8846900579b1", "patch": "@@ -1,3 +1,9 @@\n+2013-01-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/55921\n+\t* tree-complex.c (expand_complex_asm): New function.\n+\t(expand_complex_operations_1): Call it for GIMPLE_ASM.\n+\n 2013-01-10  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \tPR target/55718"}, {"sha": "0df71a57a3f1231ea839e8d789a5b40628499f64", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a57fc74385ddb5fb8f77122f6d4d8846900579b1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a57fc74385ddb5fb8f77122f6d4d8846900579b1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a57fc74385ddb5fb8f77122f6d4d8846900579b1", "patch": "@@ -1,3 +1,8 @@\n+2013-01-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/55921\n+\t* gcc.c-torture/compile/pr55921.c: New test.\n+\n 2013-01-09  Jan Hubicka  <jh@suse.cz>\n \n \tPR tree-optimization/55569"}, {"sha": "8ac9e9b6a64eb869871773643976e96f6150f395", "filename": "gcc/testsuite/gcc.c-torture/compile/pr55921.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a57fc74385ddb5fb8f77122f6d4d8846900579b1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr55921.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a57fc74385ddb5fb8f77122f6d4d8846900579b1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr55921.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr55921.c?ref=a57fc74385ddb5fb8f77122f6d4d8846900579b1", "patch": "@@ -0,0 +1,21 @@\n+/* PR tree-optimization/55921 */\n+\n+typedef union\n+{\n+  _Complex float cf;\n+  long long ll;\n+} ucf;\n+\n+void\n+foo (ucf *in, ucf *out, _Complex float r)\n+{\n+  int i;\n+  ucf ucf1;\n+  _Complex float cf;\n+\n+  ucf1.ll = in[i].ll;\n+  __asm (\"\" : \"=r\" (cf) : \"0\" (ucf1.ll));\n+  cf *= r;\n+  __asm (\"\" : \"=r\" (ucf1.ll) : \"0\" (cf));\n+  out[i].ll = ucf1.ll;\n+}"}, {"sha": "477a77399951fd2c8a04c08ca87baa9807eb0595", "filename": "gcc/tree-complex.c", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a57fc74385ddb5fb8f77122f6d4d8846900579b1/gcc%2Ftree-complex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a57fc74385ddb5fb8f77122f6d4d8846900579b1/gcc%2Ftree-complex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-complex.c?ref=a57fc74385ddb5fb8f77122f6d4d8846900579b1", "patch": "@@ -1,5 +1,5 @@\n /* Lower complex number operations to scalar operations.\n-   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n+   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -1391,6 +1391,36 @@ expand_complex_comparison (gimple_stmt_iterator *gsi, tree ar, tree ai,\n   update_stmt (stmt);\n }\n \n+/* Expand inline asm that sets some complex SSA_NAMEs.  */\n+\n+static void\n+expand_complex_asm (gimple_stmt_iterator *gsi)\n+{\n+  gimple stmt = gsi_stmt (*gsi);\n+  unsigned int i;\n+\n+  for (i = 0; i < gimple_asm_noutputs (stmt); ++i)\n+    {\n+      tree link = gimple_asm_output_op (stmt, i);\n+      tree op = TREE_VALUE (link);\n+      if (TREE_CODE (op) == SSA_NAME\n+\t  && TREE_CODE (TREE_TYPE (op)) == COMPLEX_TYPE)\n+\t{\n+\t  tree type = TREE_TYPE (op);\n+\t  tree inner_type = TREE_TYPE (type);\n+\t  tree r = build1 (REALPART_EXPR, inner_type, op);\n+\t  tree i = build1 (IMAGPART_EXPR, inner_type, op);\n+\t  gimple_seq list = set_component_ssa_name (op, false, r);\n+\n+\t  if (list)\n+\t    gsi_insert_seq_after (gsi, list, GSI_CONTINUE_LINKING);\n+\n+\t  list = set_component_ssa_name (op, true, i);\n+\t  if (list)\n+\t    gsi_insert_seq_after (gsi, list, GSI_CONTINUE_LINKING);\n+\t}\n+    }\n+}\n \n /* Process one statement.  If we identify a complex operation, expand it.  */\n \n@@ -1403,6 +1433,12 @@ expand_complex_operations_1 (gimple_stmt_iterator *gsi)\n   complex_lattice_t al, bl;\n   enum tree_code code;\n \n+  if (gimple_code (stmt) == GIMPLE_ASM)\n+    {\n+      expand_complex_asm (gsi);\n+      return;\n+    }\n+\n   lhs = gimple_get_lhs (stmt);\n   if (!lhs && gimple_code (stmt) != GIMPLE_COND)\n     return;"}]}