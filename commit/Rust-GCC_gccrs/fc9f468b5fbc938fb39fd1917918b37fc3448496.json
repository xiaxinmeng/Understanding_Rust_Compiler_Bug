{"sha": "fc9f468b5fbc938fb39fd1917918b37fc3448496", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM5ZjQ2OGI1ZmJjOTM4ZmIzOWZkMTkxNzkxOGIzN2ZjMzQ0ODQ5Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-06-12T07:01:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-06-12T07:01:25Z"}, "message": "dwarf2out.c (last_var_location_insn): New variable.\n\n\t* dwarf2out.c (last_var_location_insn): New variable.\n\t(dwarf2out_end_epilogue): Clear last_var_location_insn.\n\t(dwarf2out_var_location): Don't record anything after last real\n\tinsn.  Only change labels if there were any real instructions\n\tin between last note and this one, or if changed sections.\n\nFrom-SVN: r148415", "tree": {"sha": "26471718ca071deba2fbcb634efbc189ca5fc700", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26471718ca071deba2fbcb634efbc189ca5fc700"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc9f468b5fbc938fb39fd1917918b37fc3448496", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc9f468b5fbc938fb39fd1917918b37fc3448496", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc9f468b5fbc938fb39fd1917918b37fc3448496", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc9f468b5fbc938fb39fd1917918b37fc3448496/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "15cb981aa34233d3842213b60d6081b807a4bc98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15cb981aa34233d3842213b60d6081b807a4bc98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15cb981aa34233d3842213b60d6081b807a4bc98"}], "stats": {"total": 45, "additions": 31, "deletions": 14}, "files": [{"sha": "1f8312f54571132dcc6ae5829e22854543f9417b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc9f468b5fbc938fb39fd1917918b37fc3448496/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc9f468b5fbc938fb39fd1917918b37fc3448496/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc9f468b5fbc938fb39fd1917918b37fc3448496", "patch": "@@ -1,3 +1,11 @@\n+2009-06-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* dwarf2out.c (last_var_location_insn): New variable.\n+\t(dwarf2out_end_epilogue): Clear last_var_location_insn.\n+\t(dwarf2out_var_location): Don't record anything after last real\n+\tinsn.  Only change labels if there were any real instructions\n+\tin between last note and this one, or if changed sections.\n+\n 2009-06-11  Richard Henderson  <rth@redhat.com>\n \n         * alpha.c (alpha_expand_prologue): Add a REF_CFA_REGISTER"}, {"sha": "367bda86a7eb4bab66f115c617ef6fec30f84b1e", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc9f468b5fbc938fb39fd1917918b37fc3448496/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc9f468b5fbc938fb39fd1917918b37fc3448496/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=fc9f468b5fbc938fb39fd1917918b37fc3448496", "patch": "@@ -92,6 +92,8 @@ along with GCC; see the file COPYING3.  If not see\n \n #ifdef DWARF2_DEBUGGING_INFO\n static void dwarf2out_source_line (unsigned int, const char *, int);\n+\n+static rtx last_var_location_insn;\n #endif\n \n #ifndef DWARF2_FRAME_INFO\n@@ -3693,6 +3695,10 @@ dwarf2out_end_epilogue (unsigned int line ATTRIBUTE_UNUSED,\n   dw_fde_ref fde;\n   char label[MAX_ARTIFICIAL_LABEL_BYTES];\n \n+#ifdef DWARF2_DEBUGGING_INFO\n+  last_var_location_insn = NULL_RTX;\n+#endif\n+\n   if (dwarf2out_do_cfi_asm ())\n     fprintf (asm_out_file, \"\\t.cfi_endproc\\n\");\n \n@@ -16202,6 +16208,7 @@ dwarf2out_set_name (tree decl, tree name)\n   else\n     add_name_attribute (die, dwarf2_name (name, 0));\n }\n+\n /* Called by the final INSN scan whenever we see a var location.  We\n    use it to drop labels in the right places, and throw the location in\n    our lookup table.  */\n@@ -16211,26 +16218,27 @@ dwarf2out_var_location (rtx loc_note)\n {\n   char loclabel[MAX_ARTIFICIAL_LABEL_BYTES];\n   struct var_loc_node *newloc;\n-  rtx prev_insn;\n-  static rtx last_insn;\n+  rtx next_real;\n   static const char *last_label;\n+  static bool last_in_cold_section_p;\n   tree decl;\n \n   if (!DECL_P (NOTE_VAR_LOCATION_DECL (loc_note)))\n     return;\n-  prev_insn = PREV_INSN (loc_note);\n+\n+  next_real = next_real_insn (loc_note);\n+  /* If there are no instructions which would be affected by this note,\n+     don't do anything.  */\n+  if (next_real == NULL_RTX)\n+    return;\n \n   newloc = GGC_CNEW (struct var_loc_node);\n-  /* If the insn we processed last time is the previous insn\n-     and it is also a var location note, use the label we emitted\n-     last time.  */\n-  if (last_insn != NULL_RTX\n-      && last_insn == prev_insn\n-      && NOTE_P (prev_insn)\n-      && NOTE_KIND (prev_insn) == NOTE_INSN_VAR_LOCATION)\n-    {\n-      newloc->label = last_label;\n-    }\n+  /* If there were no real insns between note we processed last time\n+     and this note, use the label we emitted last time.  */\n+  if (last_var_location_insn != NULL_RTX\n+      && last_var_location_insn == next_real\n+      && last_in_cold_section_p == in_cold_section_p)\n+    newloc->label = last_label;\n   else\n     {\n       ASM_GENERATE_INTERNAL_LABEL (loclabel, \"LVL\", loclabel_num);\n@@ -16246,8 +16254,9 @@ dwarf2out_var_location (rtx loc_note)\n   else\n     newloc->section_label = text_section_label;\n \n-  last_insn = loc_note;\n+  last_var_location_insn = next_real;\n   last_label = newloc->label;\n+  last_in_cold_section_p = in_cold_section_p;\n   decl = NOTE_VAR_LOCATION_DECL (loc_note);\n   add_var_loc_to_decl (decl, newloc);\n }"}]}