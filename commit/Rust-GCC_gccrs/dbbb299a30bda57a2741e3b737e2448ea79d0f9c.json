{"sha": "dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJiYjI5OWEzMGJkYTU3YTI3NDFlM2I3MzdlMjQ0OGVhNzlkMGY5Yw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2011-07-09T19:25:11Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-07-09T19:25:11Z"}, "message": "Add x32 support to GCC testsuite.\n\n2011-07-09  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* c-c++-common/dfp/func-vararg-alternate-d128-2.c: Support x32.\n\t* c-c++-common/dfp/func-vararg-mixed-2.c: Likewise.\n\t* g++.dg/abi/bitfield3.C: Likewise.\n\t* g++.dg/eh/pr38662.C: Likewise.\n\t* g++.dg/ext/attrib36.C: Likewise.\n\t* g++.dg/ext/attrib37.C: Likewise.\n\t* g++.dg/ext/attrib8.C: Likewise.\n\t* g++.dg/ext/tmplattr1.C: Likewise.\n\t* g++.dg/inherit/override-attribs.C: Likewise.\n\t* g++.dg/opt/inline9.C: Likewise.\n\t* g++.dg/opt/life1.C: Likewise.\n\t* g++.dg/opt/longbranch2.C: Likewise.\n\t* g++.dg/opt/nrv12.C: Likewise.\n\t* g++.dg/opt/reg-stack4.C: Likewise.\n\t* g++.dg/other/pr35504.C: Likewise.\n\t* g++.dg/other/pr39496.C: Likewise.\n\t* g++.dg/torture/stackalign/eh-fastcall-1.C: Likewise.\n\t* g++.dg/torture/stackalign/eh-thiscall-1.C: Likewise.\n\t* g++.dg/torture/stackalign/stdcall-1.C: Likewise.\n\t* g++.dg/torture/stackalign/unwind-0.C: Likewise.\n\t* g++.dg/torture/stackalign/unwind-1.C: Likewise.\n\t* g++.dg/torture/stackalign/unwind-2.C: Likewise.\n\t* g++.dg/torture/stackalign/unwind-3.C: Likewise.\n\t* g++.dg/torture/stackalign/unwind-4.C: Likewise.\n\t* g++.dg/torture/stackalign/unwind-5.C: Likewise.\n\t* g++.dg/torture/stackalign/unwind-6.C: Likewise.\n\t* g++.dg/warn/pr15774-1.C: Likewise.\n\t* g++.dg/warn/pr15774-2.C: Likewise.\n\t* g++.old-deja/g++.ext/attrib1.C: Likewise.\n\t* g++.old-deja/g++.ext/attrib2.C: Likewise.\n\t* g++.old-deja/g++.ext/attrib3.C: Likewise.\n\t* g++.old-deja/g++.pt/asm2.C: Likewise.\n\t* gcc.c-torture/compile/20000804-1.c: Likewise.\n\t* gcc.c-torture/compile/pr16566-2.c: Likewise.\n\t* gcc.c-torture/execute/ieee/ieee.exp: Likewise.\n\t* gcc.dg/20020108-1.c: Likewise.\n\t* gcc.dg/20020122-2.c: Likewise.\n\t* gcc.dg/20020122-3.c: Likewise.\n\t* gcc.dg/20020206-1.c: Likewise.\n\t* gcc.dg/20020219-1.c: Likewise.\n\t* gcc.dg/20020310-1.c: Likewise.\n\t* gcc.dg/20020411-1.c: Likewise.\n\t* gcc.dg/20020418-2.c: Likewise.\n\t* gcc.dg/20020426-2.c: Likewise.\n\t* gcc.dg/20020517-1.c: Likewise.\n\t* gcc.dg/20030204-1.c: Likewise.\n\t* gcc.dg/20030826-2.c: Likewise.\n\t* gcc.dg/20031102-1.c: Likewise.\n\t* gcc.dg/20031202-1.c: Likewise.\n\t* gcc.dg/20050111-1.c: Likewise.\n\t* gcc.dg/20050503-1.c: Likewise.\n\t* gcc.dg/array-init-1.c: Likewise.\n\t* gcc.dg/builtin-apply4.c: Likewise.\n\t* gcc.dg/dfp/pr31344.c: Likewise.\n\t* gcc.dg/gomp/atomic-11.c: Likewise.\n\t* gcc.dg/graphite/pr40281.c: Likewise.\n\t* gcc.dg/ia64-sync-1.c: Likewise.\n\t* gcc.dg/ia64-sync-2.c: Likewise.\n\t* gcc.dg/ia64-sync-3.c: Likewise.\n\t* gcc.dg/ia64-sync-4.c: Likewise.\n\t* gcc.dg/ifcvt-fabs-1.c: Likewise.\n\t* gcc.dg/invalid-call-1.c: Likewise.\n\t* gcc.dg/loop-3.c: Likewise.\n\t* gcc.dg/lower-subreg-1.c: Likewise.\n\t* gcc.dg/lto/pr47259_0.c: Likewise.\n\t* gcc.dg/nested-calls-1.c: Likewise.\n\t* gcc.dg/pr20017.c: Likewise.\n\t* gcc.dg/pr25023.c: Likewise.\n\t* gcc.dg/pr27671-2.c: Likewise.\n\t* gcc.dg/pr32176.c: Likewise.\n\t* gcc.dg/pr33676.c: Likewise.\n\t* gcc.dg/pr35045.c: Likewise.\n\t* gcc.dg/pr36015.c: Likewise.\n\t* gcc.dg/pr36584.c: Likewise.\n\t* gcc.dg/pr36998.c: Likewise.\n\t* gcc.dg/pr37438.c: Likewise.\n\t* gcc.dg/pr37908.c: Likewise.\n\t* gcc.dg/pr41241.c: Likewise.\n\t* gcc.dg/pr41340.c: Likewise.\n\t* gcc.dg/pr44136.c: Likewise.\n\t* gcc.dg/pr44194-1.c: Likewise.\n\t* gcc.dg/pr46212.c: Likewise.\n\t* gcc.dg/prefetch-loop-arrays-1.c: Likewise.\n\t* gcc.dg/setjmp-2.c: Likewise.\n\t* gcc.dg/short-compare-1.c: Likewise.\n\t* gcc.dg/short-compare-2.c: Likewise.\n\t* gcc.dg/smod-1.c: Likewise.\n\t* gcc.dg/sync-2.c: Likewise.\n\t* gcc.dg/sync-3.c: Likewise.\n\t* gcc.dg/tls/opt-1.c: Likewise.\n\t* gcc.dg/tls/opt-2.c: Likewise.\n\t* gcc.dg/tls/opt-3.c: Likewise.\n\t* gcc.dg/torture/badshift.c: Likewise.\n\t* gcc.dg/torture/fp-int-convert-float80-timode.c: Likewise.\n\t* gcc.dg/torture/pr20314-2.c: Likewise.\n\t* gcc.dg/torture/pr36891.c: Likewise.\n\t* gcc.dg/torture/pr38774.c: Likewise.\n\t* gcc.dg/torture/stackalign/alloca-2.c: Likewise.\n\t* gcc.dg/torture/stackalign/alloca-4.c: Likewise.\n\t* gcc.dg/torture/stackalign/alloca-5.c: Likewise.\n\t* gcc.dg/torture/stackalign/alloca-6.c: Likewise.\n\t* gcc.dg/torture/stackalign/fastcall-1.c: Likewise.\n\t* gcc.dg/torture/stackalign/push-1.c: Likewise.\n\t* gcc.dg/torture/stackalign/regparm-1.c: Likewise.\n\t* gcc.dg/torture/stackalign/thiscall-1.c: Likewise.\n\t* gcc.dg/tree-ssa/loop-28.c: Likewise.\n\t* gcc.dg/tree-ssa/prefetch-3.c: Likewise.\n\t* gcc.dg/tree-ssa/prefetch-4.c: Likewise.\n\t* gcc.dg/tree-ssa/prefetch-5.c: Likewise.\n\t* gcc.dg/tree-ssa/prefetch-6.c: Likewise.\n\t* gcc.dg/tree-ssa/prefetch-7.c: Likewise.\n\t* gcc.dg/tree-ssa/prefetch-8.c: Likewise.\n\t* gcc.dg/tree-ssa/prefetch-9.c: Likewise.\n\t* gcc.dg/tree-ssa/stdarg-2.c: Likewise.\n\t* gcc.dg/tree-ssa/stdarg-3.c: Likewise.\n\t* gcc.dg/tree-ssa/stdarg-4.c: Likewise.\n\t* gcc.dg/tree-ssa/stdarg-5.c: Likewise.\n\t* gcc.dg/tree-ssa/update-unroll-1.c: Likewise.\n\t* gcc.dg/unroll-1.c: Likewise.\n\t* gcc.dg/vect/costmodel/x86_64/x86_64-costmodel-vect.exp: Likewise.\n\t* gcc.misc-tests/i386-pf-3dnow-1.c: Likewise.\n\t* gcc.misc-tests/i386-pf-athlon-1.c: Likewise.\n\t* gcc.misc-tests/i386-pf-none-1.c: Likewise.\n\t* gcc.misc-tests/i386-pf-sse-1.c: Likewise.\n\t* gcc.target/i386/20000609-1.c: Likewise.\n\t* gcc.target/i386/20000720-1.c: Likewise.\n\t* gcc.target/i386/20000724-1.c: Likewise.\n\t* gcc.target/i386/20011107-1.c: Likewise.\n\t* gcc.target/i386/20011119-1.c: Likewise.\n\t* gcc.target/i386/20020201-3.c: Likewise.\n\t* gcc.target/i386/20020218-1.c: Likewise.\n\t* gcc.target/i386/20020729-1.c: Likewise.\n\t* gcc.target/i386/20030926-1.c: Likewise.\n\t* gcc.target/i386/20060125-1.c: Likewise.\n\t* gcc.target/i386/20060125-2.c: Likewise.\n\t* gcc.target/i386/20060512-1.c: Likewise.\n\t* gcc.target/i386/20060512-2.c: Likewise.\n\t* gcc.target/i386/20060512-3.c: Likewise.\n\t* gcc.target/i386/20060512-4.c: Likewise.\n\t* gcc.target/i386/387-1.c: Likewise.\n\t* gcc.target/i386/387-2.c: Likewise.\n\t* gcc.target/i386/387-5.c: Likewise.\n\t* gcc.target/i386/387-6.c: Likewise.\n\t* gcc.target/i386/980312-1.c: Likewise.\n\t* gcc.target/i386/980313-1.c: Likewise.\n\t* gcc.target/i386/990117-1.c: Likewise.\n\t* gcc.target/i386/990424-1.c: Likewise.\n\t* gcc.target/i386/990524-1.c: Likewise.\n\t* gcc.target/i386/991129-1.c: Likewise.\n\t* gcc.target/i386/991214-1.c: Likewise.\n\t* gcc.target/i386/991230-1.c: Likewise.\n\t* gcc.target/i386/addr-sel-1.c: Likewise.\n\t* gcc.target/i386/aggregate-ret1.c: Likewise.\n\t* gcc.target/i386/aggregate-ret2.c: Likewise.\n\t* gcc.target/i386/align-main-3.c: Likewise.\n\t* gcc.target/i386/amd64-abi-1.c: Likewise.\n\t* gcc.target/i386/amd64-abi-2.c: Likewise.\n\t* gcc.target/i386/amd64-abi-4.c: Likewise.\n\t* gcc.target/i386/amd64-abi-5.c: Likewise.\n\t* gcc.target/i386/amd64-abi-6.c: Likewise.\n\t* gcc.target/i386/asm-1.c: Likewise.\n\t* gcc.target/i386/asm-3.c: Likewise.\n\t* gcc.target/i386/asm-5.c: Likewise.\n\t* gcc.target/i386/attributes-error.c: Likewise.\n\t* gcc.target/i386/avx-vcvtsd2si-2.c: Likewise.\n\t* gcc.target/i386/avx-vcvtsi2sd-2.c: Likewise.\n\t* gcc.target/i386/avx-vcvtsi2ss-2.c: Likewise.\n\t* gcc.target/i386/avx-vcvtss2si-2.c: Likewise.\n\t* gcc.target/i386/avx-vcvttsd2si-2.c: Likewise.\n\t* gcc.target/i386/avx-vcvttss2si-2.c: Likewise.\n\t* gcc.target/i386/avx-vinsertps-3.c: Likewise.\n\t* gcc.target/i386/avx-vmovd-2.c: Likewise.\n\t* gcc.target/i386/avx-vmovq-2.c: Likewise.\n\t* gcc.target/i386/avx-vmovq-3.c: Likewise.\n\t* gcc.target/i386/avx-vpextrq-1.c: Likewise.\n\t* gcc.target/i386/avx-vpinsrq-1.c: Likewise.\n\t* gcc.target/i386/avx-vzeroupper-16.c: Likewise.\n\t* gcc.target/i386/avx-vzeroupper-17.c: Likewise.\n\t* gcc.target/i386/avx-vzeroupper-18.c: Likewise.\n\t* gcc.target/i386/bitfield1.c: Likewise.\n\t* gcc.target/i386/bitfield2.c: Likewise.\n\t* gcc.target/i386/bmi-2.c: Likewise.\n\t* gcc.target/i386/bmi-5.c: Likewise.\n\t* gcc.target/i386/builtin-unreachable.c: Likewise.\n\t* gcc.target/i386/cleanup-2.c: Likewise.\n\t* gcc.target/i386/clobbers.c: Likewise.\n\t* gcc.target/i386/cmov8.c: Likewise.\n\t* gcc.target/i386/cmpxchg16b-1.c: Likewise.\n\t* gcc.target/i386/compress-float-387-pic.c: Likewise.\n\t* gcc.target/i386/compress-float-387.c: Likewise.\n\t* gcc.target/i386/compress-float-sse-pic.c: Likewise.\n\t* gcc.target/i386/compress-float-sse.c: Likewise.\n\t* gcc.target/i386/crc32-2.c: Likewise.\n\t* gcc.target/i386/crc32-3.c: Likewise.\n\t* gcc.target/i386/divmod-7.c: Likewise.\n\t* gcc.target/i386/divmod-8.c: Likewise.\n\t* gcc.target/i386/fastcall-sseregparm.c: Likewise.\n\t* gcc.target/i386/fma3-builtin.c: Likewise.\n\t* gcc.target/i386/fma3-fma.c: Likewise.\n\t* gcc.target/i386/fma4-256-vector.c: Likewise.\n\t* gcc.target/i386/fma4-builtin.c: Likewise.\n\t* gcc.target/i386/fma4-fma-2.c: Likewise.\n\t* gcc.target/i386/fma4-fma.c: Likewise.\n\t* gcc.target/i386/fma4-vector-2.c: Likewise.\n\t* gcc.target/i386/fma4-vector.c: Likewise.\n\t* gcc.target/i386/funcspec-1.c: Likewise.\n\t* gcc.target/i386/funcspec-10.c: Likewise.\n\t* gcc.target/i386/funcspec-11.c: Likewise.\n\t* gcc.target/i386/funcspec-2.c: Likewise.\n\t* gcc.target/i386/funcspec-5.c: Likewise.\n\t* gcc.target/i386/funcspec-6.c: Likewise.\n\t* gcc.target/i386/gcc-have-sync-compare-and-swap-1.c: Likewise.\n\t* gcc.target/i386/gcc-have-sync-compare-and-swap-2.c: Likewise.\n\t* gcc.target/i386/gcc-have-sync-compare-and-swap-3.c: Likewise.\n\t* gcc.target/i386/gcc-have-sync-compare-and-swap-4.c: Likewise.\n\t* gcc.target/i386/incoming-1.c: Likewise.\n\t* gcc.target/i386/incoming-10.c: Likewise.\n\t* gcc.target/i386/incoming-11.c: Likewise.\n\t* gcc.target/i386/incoming-12.c: Likewise.\n\t* gcc.target/i386/incoming-13.c: Likewise.\n\t* gcc.target/i386/incoming-14.c: Likewise.\n\t* gcc.target/i386/incoming-15.c: Likewise.\n\t* gcc.target/i386/incoming-2.c: Likewise.\n\t* gcc.target/i386/incoming-3.c: Likewise.\n\t* gcc.target/i386/incoming-4.c: Likewise.\n\t* gcc.target/i386/incoming-5.c: Likewise.\n\t* gcc.target/i386/incoming-6.c: Likewise.\n\t* gcc.target/i386/incoming-7.c: Likewise.\n\t* gcc.target/i386/incoming-8.c: Likewise.\n\t* gcc.target/i386/incoming-9.c: Likewise.\n\t* gcc.target/i386/lea.c: Likewise.\n\t* gcc.target/i386/local.c: Likewise.\n\t* gcc.target/i386/loop-1.c: Likewise.\n\t* gcc.target/i386/loop-2.c: Likewise.\n\t* gcc.target/i386/loop-3.c: Likewise.\n\t* gcc.target/i386/max-stack-align.c: Likewise.\n\t* gcc.target/i386/memcpy-1.c: Likewise.\n\t* gcc.target/i386/movbe-2.c: Likewise.\n\t* gcc.target/i386/movq-2.c: Likewise.\n\t* gcc.target/i386/movq.c: Likewise.\n\t* gcc.target/i386/nrv1.c: Likewise.\n\t* gcc.target/i386/pad-4.c: Likewise.\n\t* gcc.target/i386/pad-5a.c: Likewise.\n\t* gcc.target/i386/pad-5b.c: Likewise.\n\t* gcc.target/i386/pad-6a.c: Likewise.\n\t* gcc.target/i386/pad-6b.c: Likewise.\n\t* gcc.target/i386/pad-7.c: Likewise.\n\t* gcc.target/i386/pad-9.c: Likewise.\n\t* gcc.target/i386/pentium4-not-mull.c: Likewise.\n\t* gcc.target/i386/pic-1.c: Likewise.\n\t* gcc.target/i386/pr12092-1.c: Likewise.\n\t* gcc.target/i386/pr12329.c: Likewise.\n\t* gcc.target/i386/pr21518.c: Likewise.\n\t* gcc.target/i386/pr22362.c: Likewise.\n\t* gcc.target/i386/pr22585.c: Likewise.\n\t* gcc.target/i386/pr23098.c: Likewise.\n\t* gcc.target/i386/pr25196.c: Likewise.\n\t* gcc.target/i386/pr25293.c: Likewise.\n\t* gcc.target/i386/pr25654.c: Likewise.\n\t* gcc.target/i386/pr26449.c: Likewise.\n\t* gcc.target/i386/pr26778.c: Likewise.\n\t* gcc.target/i386/pr26826.c: Likewise.\n\t* gcc.target/i386/pr27266.c: Likewise.\n\t* gcc.target/i386/pr29978.c: Likewise.\n\t* gcc.target/i386/pr30505.c: Likewise.\n\t* gcc.target/i386/pr30961-1.c: Likewise.\n\t* gcc.target/i386/pr31628.c: Likewise.\n\t* gcc.target/i386/pr32000-2.c: Likewise.\n\t* gcc.target/i386/pr32661-1.c: Likewise.\n\t* gcc.target/i386/pr32708-2.c: Likewise.\n\t* gcc.target/i386/pr32708-3.c: Likewise.\n\t* gcc.target/i386/pr34256.c: Likewise.\n\t* gcc.target/i386/pr34312.c: Likewise.\n\t* gcc.target/i386/pr34522.c: Likewise.\n\t* gcc.target/i386/pr35160.c: Likewise.\n\t* gcc.target/i386/pr35281.c: Likewise.\n\t* gcc.target/i386/pr36246.c: Likewise.\n\t* gcc.target/i386/pr36786.c: Likewise.\n\t* gcc.target/i386/pr37275.c: Likewise.\n\t* gcc.target/i386/pr37843-3.c: Likewise.\n\t* gcc.target/i386/pr37843-4.c: Likewise.\n\t* gcc.target/i386/pr39082-1.c: Likewise.\n\t* gcc.target/i386/pr39431.c: Likewise.\n\t* gcc.target/i386/pr39496.c: Likewise.\n\t* gcc.target/i386/pr39543-2.c: Likewise.\n\t* gcc.target/i386/pr39911.c: Likewise.\n\t* gcc.target/i386/pr40718.c: Likewise.\n\t* gcc.target/i386/pr40906-1.c: Likewise.\n\t* gcc.target/i386/pr40906-2.c: Likewise.\n\t* gcc.target/i386/pr40906-3.c: Likewise.\n\t* gcc.target/i386/pr40934.c: Likewise.\n\t* gcc.target/i386/pr41900.c: Likewise.\n\t* gcc.target/i386/pr42589.c: Likewise.\n\t* gcc.target/i386/pr43662.c: Likewise.\n\t* gcc.target/i386/pr43671.c: Likewise.\n\t* gcc.target/i386/pr43766.c: Likewise.\n\t* gcc.target/i386/pr43869.c: Likewise.\n\t* gcc.target/i386/pr44942.c: Likewise.\n\t* gcc.target/i386/pr44948-2a.c: Likewise.\n\t* gcc.target/i386/pr45234.c: Likewise.\n\t* gcc.target/i386/pr45336-2.c: Likewise.\n\t* gcc.target/i386/pr45336-4.c: Likewise.\n\t* gcc.target/i386/pr45852.c: Likewise.\n\t* gcc.target/i386/pr46470.c: Likewise.\n\t* gcc.target/i386/pr48037-1.c: Likewise.\n\t* gcc.target/i386/pr48389.c: Likewise.\n\t* gcc.target/i386/pr49095.c: Likewise.\n\t* gcc.target/i386/pr9771-1.c: Likewise.\n\t* gcc.target/i386/rdfsbase-1.c: Likewise.\n\t* gcc.target/i386/rdfsbase-2.c: Likewise.\n\t* gcc.target/i386/rdgsbase-1.c: Likewise.\n\t* gcc.target/i386/rdgsbase-2.c: Likewise.\n\t* gcc.target/i386/rdrand-3.c: Likewise.\n\t* gcc.target/i386/regparm-stdcall.c: Likewise.\n\t* gcc.target/i386/regparm.c: Likewise.\n\t* gcc.target/i386/reload-1.c: Likewise.\n\t* gcc.target/i386/rotate-2.c: Likewise.\n\t* gcc.target/i386/sibcall-5.c: Likewise.\n\t* gcc.target/i386/signbit-1.c: Likewise.\n\t* gcc.target/i386/signbit-2.c: Likewise.\n\t* gcc.target/i386/signbit-3.c: Likewise.\n\t* gcc.target/i386/sse-5.c: Likewise.\n\t* gcc.target/i386/sse-8.c: Likewise.\n\t* gcc.target/i386/sse-cvtsi2ss-2.c: Likewise.\n\t* gcc.target/i386/sse-cvtss2si-2.c: Likewise.\n\t* gcc.target/i386/sse-cvttss2si-2.c: Likewise.\n\t* gcc.target/i386/sse2-cvtsd2si-2.c: Likewise.\n\t* gcc.target/i386/sse2-cvtsi2sd-2.c: Likewise.\n\t* gcc.target/i386/sse2-cvttsd2si-2.c: Likewise.\n\t* gcc.target/i386/sse2-init-v2di-2.c: Likewise.\n\t* gcc.target/i386/sse2-movq-2.c: Likewise.\n\t* gcc.target/i386/sse2-movq-3.c: Likewise.\n\t* gcc.target/i386/sse4_1-insertps-3.c: Likewise.\n\t* gcc.target/i386/sse4_1-pextrq.c: Likewise.\n\t* gcc.target/i386/sse4_1-pinsrq.c: Likewise.\n\t* gcc.target/i386/sse4_2-crc32q.c: Likewise.\n\t* gcc.target/i386/sse4_2-popcntq.c: Likewise.\n\t* gcc.target/i386/ssefn-1.c: Likewise.\n\t* gcc.target/i386/ssefn-2.c: Likewise.\n\t* gcc.target/i386/sseregparm-1.c: Likewise.\n\t* gcc.target/i386/sseregparm-2.c: Likewise.\n\t* gcc.target/i386/sseregparm-3.c: Likewise.\n\t* gcc.target/i386/sseregparm-4.c: Likewise.\n\t* gcc.target/i386/sseregparm-5.c: Likewise.\n\t* gcc.target/i386/sseregparm-6.c: Likewise.\n\t* gcc.target/i386/sseregparm-7.c: Likewise.\n\t* gcc.target/i386/sseregparm-8.c: Likewise.\n\t* gcc.target/i386/stack-realign.c: Likewise.\n\t* gcc.target/i386/stack-usage-realign.c: Likewise.\n\t* gcc.target/i386/stackalign/asm-1.c: Likewise.\n\t* gcc.target/i386/stackalign/longlong-1.c: Likewise.\n\t* gcc.target/i386/stackalign/longlong-2.c: Likewise.\n\t* gcc.target/i386/stackalign/return-1.c: Likewise.\n\t* gcc.target/i386/stackalign/return-2.c: Likewise.\n\t* gcc.target/i386/stackalign/return-3.c: Likewise.\n\t* gcc.target/i386/tailcall-1.c: Likewise.\n\t* gcc.target/i386/tbm-2.c: Likewise.\n\t* gcc.target/i386/udivmod-7.c: Likewise.\n\t* gcc.target/i386/udivmod-8.c: Likewise.\n\t* gcc.target/i386/unroll-1.c: Likewise.\n\t* gcc.target/i386/vararg-1.c: Likewise.\n\t* gcc.target/i386/vararg-2.c: Likewise.\n\t* gcc.target/i386/vect8-ret.c: Likewise.\n\t* gcc.target/i386/vectorize5.c: Likewise.\n\t* gcc.target/i386/wmul-1.c: Likewise.\n\t* gcc.target/i386/wmul-2.c: Likewise.\n\t* gcc.target/i386/wrfsbase-1.c: Likewise.\n\t* gcc.target/i386/wrfsbase-2.c: Likewise.\n\t* gcc.target/i386/wrgsbase-1.c: Likewise.\n\t* gcc.target/i386/wrgsbase-2.c: Likewise.\n\t* gcc.target/i386/xop-pcmov.c: Likewise.\n\t* gcc.target/i386/xop-pcmov2.c: Likewise.\n\t* gcc.target/i386/xop-rotate1-vector.c: Likewise.\n\t* gcc.target/i386/xop-rotate2-vector.c: Likewise.\n\t* gcc.target/i386/xop-rotate3-vector.c: Likewise.\n\t* gcc.target/i386/xop-shift1-vector.c: Likewise.\n\t* gcc.target/i386/xop-shift2-vector.c: Likewise.\n\t* gcc.target/i386/xop-shift3-vector.c: Likewise.\n\t* gcc.target/i386/zee.c: Likewise.\n\t* gcc.target/x86_64/abi/callabi/callabi.exp: Likewise.\n\t* gfortran.dg/compiler-directive_2.f: Likewise.\n\t* gfortran.dg/g77/20010216-1.f: Likewise.\n\t* gfortran.dg/gomp/pr39152.f90: Likewise.\n\t* gfortran.dg/pr33794.f90: Likewise.\n\nFrom-SVN: r176090", "tree": {"sha": "d8dbc57a585707de7a5d9a618511443a63e56d53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8dbc57a585707de7a5d9a618511443a63e56d53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4dc694b226b1d9372fc5e224495a5c303809387c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dc694b226b1d9372fc5e224495a5c303809387c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dc694b226b1d9372fc5e224495a5c303809387c"}], "stats": {"total": 1411, "additions": 844, "deletions": 567}, "files": [{"sha": "fa71dde0df1c5bb7171d12dce064748bf679f014", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 387, "deletions": 0, "changes": 387, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,3 +1,390 @@\n+2011-07-09  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* c-c++-common/dfp/func-vararg-alternate-d128-2.c: Support x32.\n+\t* c-c++-common/dfp/func-vararg-mixed-2.c: Likewise.\n+\t* g++.dg/abi/bitfield3.C: Likewise.\n+\t* g++.dg/eh/pr38662.C: Likewise.\n+\t* g++.dg/ext/attrib36.C: Likewise.\n+\t* g++.dg/ext/attrib37.C: Likewise.\n+\t* g++.dg/ext/attrib8.C: Likewise.\n+\t* g++.dg/ext/tmplattr1.C: Likewise.\n+\t* g++.dg/inherit/override-attribs.C: Likewise.\n+\t* g++.dg/opt/inline9.C: Likewise.\n+\t* g++.dg/opt/life1.C: Likewise.\n+\t* g++.dg/opt/longbranch2.C: Likewise.\n+\t* g++.dg/opt/nrv12.C: Likewise.\n+\t* g++.dg/opt/reg-stack4.C: Likewise.\n+\t* g++.dg/other/pr35504.C: Likewise.\n+\t* g++.dg/other/pr39496.C: Likewise.\n+\t* g++.dg/torture/stackalign/eh-fastcall-1.C: Likewise.\n+\t* g++.dg/torture/stackalign/eh-thiscall-1.C: Likewise.\n+\t* g++.dg/torture/stackalign/stdcall-1.C: Likewise.\n+\t* g++.dg/torture/stackalign/unwind-0.C: Likewise.\n+\t* g++.dg/torture/stackalign/unwind-1.C: Likewise.\n+\t* g++.dg/torture/stackalign/unwind-2.C: Likewise.\n+\t* g++.dg/torture/stackalign/unwind-3.C: Likewise.\n+\t* g++.dg/torture/stackalign/unwind-4.C: Likewise.\n+\t* g++.dg/torture/stackalign/unwind-5.C: Likewise.\n+\t* g++.dg/torture/stackalign/unwind-6.C: Likewise.\n+\t* g++.dg/warn/pr15774-1.C: Likewise.\n+\t* g++.dg/warn/pr15774-2.C: Likewise.\n+\t* g++.old-deja/g++.ext/attrib1.C: Likewise.\n+\t* g++.old-deja/g++.ext/attrib2.C: Likewise.\n+\t* g++.old-deja/g++.ext/attrib3.C: Likewise.\n+\t* g++.old-deja/g++.pt/asm2.C: Likewise.\n+\t* gcc.c-torture/compile/20000804-1.c: Likewise.\n+\t* gcc.c-torture/compile/pr16566-2.c: Likewise.\n+\t* gcc.c-torture/execute/ieee/ieee.exp: Likewise.\n+\t* gcc.dg/20020108-1.c: Likewise.\n+\t* gcc.dg/20020122-2.c: Likewise.\n+\t* gcc.dg/20020122-3.c: Likewise.\n+\t* gcc.dg/20020206-1.c: Likewise.\n+\t* gcc.dg/20020219-1.c: Likewise.\n+\t* gcc.dg/20020310-1.c: Likewise.\n+\t* gcc.dg/20020411-1.c: Likewise.\n+\t* gcc.dg/20020418-2.c: Likewise.\n+\t* gcc.dg/20020426-2.c: Likewise.\n+\t* gcc.dg/20020517-1.c: Likewise.\n+\t* gcc.dg/20030204-1.c: Likewise.\n+\t* gcc.dg/20030826-2.c: Likewise.\n+\t* gcc.dg/20031102-1.c: Likewise.\n+\t* gcc.dg/20031202-1.c: Likewise.\n+\t* gcc.dg/20050111-1.c: Likewise.\n+\t* gcc.dg/20050503-1.c: Likewise.\n+\t* gcc.dg/array-init-1.c: Likewise.\n+\t* gcc.dg/builtin-apply4.c: Likewise.\n+\t* gcc.dg/dfp/pr31344.c: Likewise.\n+\t* gcc.dg/gomp/atomic-11.c: Likewise.\n+\t* gcc.dg/graphite/pr40281.c: Likewise.\n+\t* gcc.dg/ia64-sync-1.c: Likewise.\n+\t* gcc.dg/ia64-sync-2.c: Likewise.\n+\t* gcc.dg/ia64-sync-3.c: Likewise.\n+\t* gcc.dg/ia64-sync-4.c: Likewise.\n+\t* gcc.dg/ifcvt-fabs-1.c: Likewise.\n+\t* gcc.dg/invalid-call-1.c: Likewise.\n+\t* gcc.dg/loop-3.c: Likewise.\n+\t* gcc.dg/lower-subreg-1.c: Likewise.\n+\t* gcc.dg/lto/pr47259_0.c: Likewise.\n+\t* gcc.dg/nested-calls-1.c: Likewise.\n+\t* gcc.dg/pr20017.c: Likewise.\n+\t* gcc.dg/pr25023.c: Likewise.\n+\t* gcc.dg/pr27671-2.c: Likewise.\n+\t* gcc.dg/pr32176.c: Likewise.\n+\t* gcc.dg/pr33676.c: Likewise.\n+\t* gcc.dg/pr35045.c: Likewise.\n+\t* gcc.dg/pr36015.c: Likewise.\n+\t* gcc.dg/pr36584.c: Likewise.\n+\t* gcc.dg/pr36998.c: Likewise.\n+\t* gcc.dg/pr37438.c: Likewise.\n+\t* gcc.dg/pr37908.c: Likewise.\n+\t* gcc.dg/pr41241.c: Likewise.\n+\t* gcc.dg/pr41340.c: Likewise.\n+\t* gcc.dg/pr44136.c: Likewise.\n+\t* gcc.dg/pr44194-1.c: Likewise.\n+\t* gcc.dg/pr46212.c: Likewise.\n+\t* gcc.dg/prefetch-loop-arrays-1.c: Likewise.\n+\t* gcc.dg/setjmp-2.c: Likewise.\n+\t* gcc.dg/short-compare-1.c: Likewise.\n+\t* gcc.dg/short-compare-2.c: Likewise.\n+\t* gcc.dg/smod-1.c: Likewise.\n+\t* gcc.dg/sync-2.c: Likewise.\n+\t* gcc.dg/sync-3.c: Likewise.\n+\t* gcc.dg/tls/opt-1.c: Likewise.\n+\t* gcc.dg/tls/opt-2.c: Likewise.\n+\t* gcc.dg/tls/opt-3.c: Likewise.\n+\t* gcc.dg/torture/badshift.c: Likewise.\n+\t* gcc.dg/torture/fp-int-convert-float80-timode.c: Likewise.\n+\t* gcc.dg/torture/pr20314-2.c: Likewise.\n+\t* gcc.dg/torture/pr36891.c: Likewise.\n+\t* gcc.dg/torture/pr38774.c: Likewise.\n+\t* gcc.dg/torture/stackalign/alloca-2.c: Likewise.\n+\t* gcc.dg/torture/stackalign/alloca-4.c: Likewise.\n+\t* gcc.dg/torture/stackalign/alloca-5.c: Likewise.\n+\t* gcc.dg/torture/stackalign/alloca-6.c: Likewise.\n+\t* gcc.dg/torture/stackalign/fastcall-1.c: Likewise.\n+\t* gcc.dg/torture/stackalign/push-1.c: Likewise.\n+\t* gcc.dg/torture/stackalign/regparm-1.c: Likewise.\n+\t* gcc.dg/torture/stackalign/thiscall-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/loop-28.c: Likewise.\n+\t* gcc.dg/tree-ssa/prefetch-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/prefetch-4.c: Likewise.\n+\t* gcc.dg/tree-ssa/prefetch-5.c: Likewise.\n+\t* gcc.dg/tree-ssa/prefetch-6.c: Likewise.\n+\t* gcc.dg/tree-ssa/prefetch-7.c: Likewise.\n+\t* gcc.dg/tree-ssa/prefetch-8.c: Likewise.\n+\t* gcc.dg/tree-ssa/prefetch-9.c: Likewise.\n+\t* gcc.dg/tree-ssa/stdarg-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/stdarg-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/stdarg-4.c: Likewise.\n+\t* gcc.dg/tree-ssa/stdarg-5.c: Likewise.\n+\t* gcc.dg/tree-ssa/update-unroll-1.c: Likewise.\n+\t* gcc.dg/unroll-1.c: Likewise.\n+\t* gcc.dg/vect/costmodel/x86_64/x86_64-costmodel-vect.exp: Likewise.\n+\t* gcc.misc-tests/i386-pf-3dnow-1.c: Likewise.\n+\t* gcc.misc-tests/i386-pf-athlon-1.c: Likewise.\n+\t* gcc.misc-tests/i386-pf-none-1.c: Likewise.\n+\t* gcc.misc-tests/i386-pf-sse-1.c: Likewise.\n+\t* gcc.target/i386/20000609-1.c: Likewise.\n+\t* gcc.target/i386/20000720-1.c: Likewise.\n+\t* gcc.target/i386/20000724-1.c: Likewise.\n+\t* gcc.target/i386/20011107-1.c: Likewise.\n+\t* gcc.target/i386/20011119-1.c: Likewise.\n+\t* gcc.target/i386/20020201-3.c: Likewise.\n+\t* gcc.target/i386/20020218-1.c: Likewise.\n+\t* gcc.target/i386/20020729-1.c: Likewise.\n+\t* gcc.target/i386/20030926-1.c: Likewise.\n+\t* gcc.target/i386/20060125-1.c: Likewise.\n+\t* gcc.target/i386/20060125-2.c: Likewise.\n+\t* gcc.target/i386/20060512-1.c: Likewise.\n+\t* gcc.target/i386/20060512-2.c: Likewise.\n+\t* gcc.target/i386/20060512-3.c: Likewise.\n+\t* gcc.target/i386/20060512-4.c: Likewise.\n+\t* gcc.target/i386/387-1.c: Likewise.\n+\t* gcc.target/i386/387-2.c: Likewise.\n+\t* gcc.target/i386/387-5.c: Likewise.\n+\t* gcc.target/i386/387-6.c: Likewise.\n+\t* gcc.target/i386/980312-1.c: Likewise.\n+\t* gcc.target/i386/980313-1.c: Likewise.\n+\t* gcc.target/i386/990117-1.c: Likewise.\n+\t* gcc.target/i386/990424-1.c: Likewise.\n+\t* gcc.target/i386/990524-1.c: Likewise.\n+\t* gcc.target/i386/991129-1.c: Likewise.\n+\t* gcc.target/i386/991214-1.c: Likewise.\n+\t* gcc.target/i386/991230-1.c: Likewise.\n+\t* gcc.target/i386/addr-sel-1.c: Likewise.\n+\t* gcc.target/i386/aggregate-ret1.c: Likewise.\n+\t* gcc.target/i386/aggregate-ret2.c: Likewise.\n+\t* gcc.target/i386/align-main-3.c: Likewise.\n+\t* gcc.target/i386/amd64-abi-1.c: Likewise.\n+\t* gcc.target/i386/amd64-abi-2.c: Likewise.\n+\t* gcc.target/i386/amd64-abi-4.c: Likewise.\n+\t* gcc.target/i386/amd64-abi-5.c: Likewise.\n+\t* gcc.target/i386/amd64-abi-6.c: Likewise.\n+\t* gcc.target/i386/asm-1.c: Likewise.\n+\t* gcc.target/i386/asm-3.c: Likewise.\n+\t* gcc.target/i386/asm-5.c: Likewise.\n+\t* gcc.target/i386/attributes-error.c: Likewise.\n+\t* gcc.target/i386/avx-vcvtsd2si-2.c: Likewise.\n+\t* gcc.target/i386/avx-vcvtsi2sd-2.c: Likewise.\n+\t* gcc.target/i386/avx-vcvtsi2ss-2.c: Likewise.\n+\t* gcc.target/i386/avx-vcvtss2si-2.c: Likewise.\n+\t* gcc.target/i386/avx-vcvttsd2si-2.c: Likewise.\n+\t* gcc.target/i386/avx-vcvttss2si-2.c: Likewise.\n+\t* gcc.target/i386/avx-vinsertps-3.c: Likewise.\n+\t* gcc.target/i386/avx-vmovd-2.c: Likewise.\n+\t* gcc.target/i386/avx-vmovq-2.c: Likewise.\n+\t* gcc.target/i386/avx-vmovq-3.c: Likewise.\n+\t* gcc.target/i386/avx-vpextrq-1.c: Likewise.\n+\t* gcc.target/i386/avx-vpinsrq-1.c: Likewise.\n+\t* gcc.target/i386/avx-vzeroupper-16.c: Likewise.\n+\t* gcc.target/i386/avx-vzeroupper-17.c: Likewise.\n+\t* gcc.target/i386/avx-vzeroupper-18.c: Likewise.\n+\t* gcc.target/i386/bitfield1.c: Likewise.\n+\t* gcc.target/i386/bitfield2.c: Likewise.\n+\t* gcc.target/i386/bmi-2.c: Likewise.\n+\t* gcc.target/i386/bmi-5.c: Likewise.\n+\t* gcc.target/i386/builtin-unreachable.c: Likewise.\n+\t* gcc.target/i386/cleanup-2.c: Likewise.\n+\t* gcc.target/i386/clobbers.c: Likewise.\n+\t* gcc.target/i386/cmov8.c: Likewise.\n+\t* gcc.target/i386/cmpxchg16b-1.c: Likewise.\n+\t* gcc.target/i386/compress-float-387-pic.c: Likewise.\n+\t* gcc.target/i386/compress-float-387.c: Likewise.\n+\t* gcc.target/i386/compress-float-sse-pic.c: Likewise.\n+\t* gcc.target/i386/compress-float-sse.c: Likewise.\n+\t* gcc.target/i386/crc32-2.c: Likewise.\n+\t* gcc.target/i386/crc32-3.c: Likewise.\n+\t* gcc.target/i386/divmod-7.c: Likewise.\n+\t* gcc.target/i386/divmod-8.c: Likewise.\n+\t* gcc.target/i386/fastcall-sseregparm.c: Likewise.\n+\t* gcc.target/i386/fma3-builtin.c: Likewise.\n+\t* gcc.target/i386/fma3-fma.c: Likewise.\n+\t* gcc.target/i386/fma4-256-vector.c: Likewise.\n+\t* gcc.target/i386/fma4-builtin.c: Likewise.\n+\t* gcc.target/i386/fma4-fma-2.c: Likewise.\n+\t* gcc.target/i386/fma4-fma.c: Likewise.\n+\t* gcc.target/i386/fma4-vector-2.c: Likewise.\n+\t* gcc.target/i386/fma4-vector.c: Likewise.\n+\t* gcc.target/i386/funcspec-1.c: Likewise.\n+\t* gcc.target/i386/funcspec-10.c: Likewise.\n+\t* gcc.target/i386/funcspec-11.c: Likewise.\n+\t* gcc.target/i386/funcspec-2.c: Likewise.\n+\t* gcc.target/i386/funcspec-5.c: Likewise.\n+\t* gcc.target/i386/funcspec-6.c: Likewise.\n+\t* gcc.target/i386/gcc-have-sync-compare-and-swap-1.c: Likewise.\n+\t* gcc.target/i386/gcc-have-sync-compare-and-swap-2.c: Likewise.\n+\t* gcc.target/i386/gcc-have-sync-compare-and-swap-3.c: Likewise.\n+\t* gcc.target/i386/gcc-have-sync-compare-and-swap-4.c: Likewise.\n+\t* gcc.target/i386/incoming-1.c: Likewise.\n+\t* gcc.target/i386/incoming-10.c: Likewise.\n+\t* gcc.target/i386/incoming-11.c: Likewise.\n+\t* gcc.target/i386/incoming-12.c: Likewise.\n+\t* gcc.target/i386/incoming-13.c: Likewise.\n+\t* gcc.target/i386/incoming-14.c: Likewise.\n+\t* gcc.target/i386/incoming-15.c: Likewise.\n+\t* gcc.target/i386/incoming-2.c: Likewise.\n+\t* gcc.target/i386/incoming-3.c: Likewise.\n+\t* gcc.target/i386/incoming-4.c: Likewise.\n+\t* gcc.target/i386/incoming-5.c: Likewise.\n+\t* gcc.target/i386/incoming-6.c: Likewise.\n+\t* gcc.target/i386/incoming-7.c: Likewise.\n+\t* gcc.target/i386/incoming-8.c: Likewise.\n+\t* gcc.target/i386/incoming-9.c: Likewise.\n+\t* gcc.target/i386/lea.c: Likewise.\n+\t* gcc.target/i386/local.c: Likewise.\n+\t* gcc.target/i386/loop-1.c: Likewise.\n+\t* gcc.target/i386/loop-2.c: Likewise.\n+\t* gcc.target/i386/loop-3.c: Likewise.\n+\t* gcc.target/i386/max-stack-align.c: Likewise.\n+\t* gcc.target/i386/memcpy-1.c: Likewise.\n+\t* gcc.target/i386/movbe-2.c: Likewise.\n+\t* gcc.target/i386/movq-2.c: Likewise.\n+\t* gcc.target/i386/movq.c: Likewise.\n+\t* gcc.target/i386/nrv1.c: Likewise.\n+\t* gcc.target/i386/pad-4.c: Likewise.\n+\t* gcc.target/i386/pad-5a.c: Likewise.\n+\t* gcc.target/i386/pad-5b.c: Likewise.\n+\t* gcc.target/i386/pad-6a.c: Likewise.\n+\t* gcc.target/i386/pad-6b.c: Likewise.\n+\t* gcc.target/i386/pad-7.c: Likewise.\n+\t* gcc.target/i386/pad-9.c: Likewise.\n+\t* gcc.target/i386/pentium4-not-mull.c: Likewise.\n+\t* gcc.target/i386/pic-1.c: Likewise.\n+\t* gcc.target/i386/pr12092-1.c: Likewise.\n+\t* gcc.target/i386/pr12329.c: Likewise.\n+\t* gcc.target/i386/pr21518.c: Likewise.\n+\t* gcc.target/i386/pr22362.c: Likewise.\n+\t* gcc.target/i386/pr22585.c: Likewise.\n+\t* gcc.target/i386/pr23098.c: Likewise.\n+\t* gcc.target/i386/pr25196.c: Likewise.\n+\t* gcc.target/i386/pr25293.c: Likewise.\n+\t* gcc.target/i386/pr25654.c: Likewise.\n+\t* gcc.target/i386/pr26449.c: Likewise.\n+\t* gcc.target/i386/pr26778.c: Likewise.\n+\t* gcc.target/i386/pr26826.c: Likewise.\n+\t* gcc.target/i386/pr27266.c: Likewise.\n+\t* gcc.target/i386/pr29978.c: Likewise.\n+\t* gcc.target/i386/pr30505.c: Likewise.\n+\t* gcc.target/i386/pr30961-1.c: Likewise.\n+\t* gcc.target/i386/pr31628.c: Likewise.\n+\t* gcc.target/i386/pr32000-2.c: Likewise.\n+\t* gcc.target/i386/pr32661-1.c: Likewise.\n+\t* gcc.target/i386/pr32708-2.c: Likewise.\n+\t* gcc.target/i386/pr32708-3.c: Likewise.\n+\t* gcc.target/i386/pr34256.c: Likewise.\n+\t* gcc.target/i386/pr34312.c: Likewise.\n+\t* gcc.target/i386/pr34522.c: Likewise.\n+\t* gcc.target/i386/pr35160.c: Likewise.\n+\t* gcc.target/i386/pr35281.c: Likewise.\n+\t* gcc.target/i386/pr36246.c: Likewise.\n+\t* gcc.target/i386/pr36786.c: Likewise.\n+\t* gcc.target/i386/pr37275.c: Likewise.\n+\t* gcc.target/i386/pr37843-3.c: Likewise.\n+\t* gcc.target/i386/pr37843-4.c: Likewise.\n+\t* gcc.target/i386/pr39082-1.c: Likewise.\n+\t* gcc.target/i386/pr39431.c: Likewise.\n+\t* gcc.target/i386/pr39496.c: Likewise.\n+\t* gcc.target/i386/pr39543-2.c: Likewise.\n+\t* gcc.target/i386/pr39911.c: Likewise.\n+\t* gcc.target/i386/pr40718.c: Likewise.\n+\t* gcc.target/i386/pr40906-1.c: Likewise.\n+\t* gcc.target/i386/pr40906-2.c: Likewise.\n+\t* gcc.target/i386/pr40906-3.c: Likewise.\n+\t* gcc.target/i386/pr40934.c: Likewise.\n+\t* gcc.target/i386/pr41900.c: Likewise.\n+\t* gcc.target/i386/pr42589.c: Likewise.\n+\t* gcc.target/i386/pr43662.c: Likewise.\n+\t* gcc.target/i386/pr43671.c: Likewise.\n+\t* gcc.target/i386/pr43766.c: Likewise.\n+\t* gcc.target/i386/pr43869.c: Likewise.\n+\t* gcc.target/i386/pr44942.c: Likewise.\n+\t* gcc.target/i386/pr44948-2a.c: Likewise.\n+\t* gcc.target/i386/pr45234.c: Likewise.\n+\t* gcc.target/i386/pr45336-2.c: Likewise.\n+\t* gcc.target/i386/pr45336-4.c: Likewise.\n+\t* gcc.target/i386/pr45852.c: Likewise.\n+\t* gcc.target/i386/pr46470.c: Likewise.\n+\t* gcc.target/i386/pr48037-1.c: Likewise.\n+\t* gcc.target/i386/pr48389.c: Likewise.\n+\t* gcc.target/i386/pr49095.c: Likewise.\n+\t* gcc.target/i386/pr9771-1.c: Likewise.\n+\t* gcc.target/i386/rdfsbase-1.c: Likewise.\n+\t* gcc.target/i386/rdfsbase-2.c: Likewise.\n+\t* gcc.target/i386/rdgsbase-1.c: Likewise.\n+\t* gcc.target/i386/rdgsbase-2.c: Likewise.\n+\t* gcc.target/i386/rdrand-3.c: Likewise.\n+\t* gcc.target/i386/regparm-stdcall.c: Likewise.\n+\t* gcc.target/i386/regparm.c: Likewise.\n+\t* gcc.target/i386/reload-1.c: Likewise.\n+\t* gcc.target/i386/rotate-2.c: Likewise.\n+\t* gcc.target/i386/sibcall-5.c: Likewise.\n+\t* gcc.target/i386/signbit-1.c: Likewise.\n+\t* gcc.target/i386/signbit-2.c: Likewise.\n+\t* gcc.target/i386/signbit-3.c: Likewise.\n+\t* gcc.target/i386/sse-5.c: Likewise.\n+\t* gcc.target/i386/sse-8.c: Likewise.\n+\t* gcc.target/i386/sse-cvtsi2ss-2.c: Likewise.\n+\t* gcc.target/i386/sse-cvtss2si-2.c: Likewise.\n+\t* gcc.target/i386/sse-cvttss2si-2.c: Likewise.\n+\t* gcc.target/i386/sse2-cvtsd2si-2.c: Likewise.\n+\t* gcc.target/i386/sse2-cvtsi2sd-2.c: Likewise.\n+\t* gcc.target/i386/sse2-cvttsd2si-2.c: Likewise.\n+\t* gcc.target/i386/sse2-init-v2di-2.c: Likewise.\n+\t* gcc.target/i386/sse2-movq-2.c: Likewise.\n+\t* gcc.target/i386/sse2-movq-3.c: Likewise.\n+\t* gcc.target/i386/sse4_1-insertps-3.c: Likewise.\n+\t* gcc.target/i386/sse4_1-pextrq.c: Likewise.\n+\t* gcc.target/i386/sse4_1-pinsrq.c: Likewise.\n+\t* gcc.target/i386/sse4_2-crc32q.c: Likewise.\n+\t* gcc.target/i386/sse4_2-popcntq.c: Likewise.\n+\t* gcc.target/i386/ssefn-1.c: Likewise.\n+\t* gcc.target/i386/ssefn-2.c: Likewise.\n+\t* gcc.target/i386/sseregparm-1.c: Likewise.\n+\t* gcc.target/i386/sseregparm-2.c: Likewise.\n+\t* gcc.target/i386/sseregparm-3.c: Likewise.\n+\t* gcc.target/i386/sseregparm-4.c: Likewise.\n+\t* gcc.target/i386/sseregparm-5.c: Likewise.\n+\t* gcc.target/i386/sseregparm-6.c: Likewise.\n+\t* gcc.target/i386/sseregparm-7.c: Likewise.\n+\t* gcc.target/i386/sseregparm-8.c: Likewise.\n+\t* gcc.target/i386/stack-realign.c: Likewise.\n+\t* gcc.target/i386/stack-usage-realign.c: Likewise.\n+\t* gcc.target/i386/stackalign/asm-1.c: Likewise.\n+\t* gcc.target/i386/stackalign/longlong-1.c: Likewise.\n+\t* gcc.target/i386/stackalign/longlong-2.c: Likewise.\n+\t* gcc.target/i386/stackalign/return-1.c: Likewise.\n+\t* gcc.target/i386/stackalign/return-2.c: Likewise.\n+\t* gcc.target/i386/stackalign/return-3.c: Likewise.\n+\t* gcc.target/i386/tailcall-1.c: Likewise.\n+\t* gcc.target/i386/tbm-2.c: Likewise.\n+\t* gcc.target/i386/udivmod-7.c: Likewise.\n+\t* gcc.target/i386/udivmod-8.c: Likewise.\n+\t* gcc.target/i386/unroll-1.c: Likewise.\n+\t* gcc.target/i386/vararg-1.c: Likewise.\n+\t* gcc.target/i386/vararg-2.c: Likewise.\n+\t* gcc.target/i386/vect8-ret.c: Likewise.\n+\t* gcc.target/i386/vectorize5.c: Likewise.\n+\t* gcc.target/i386/wmul-1.c: Likewise.\n+\t* gcc.target/i386/wmul-2.c: Likewise.\n+\t* gcc.target/i386/wrfsbase-1.c: Likewise.\n+\t* gcc.target/i386/wrfsbase-2.c: Likewise.\n+\t* gcc.target/i386/wrgsbase-1.c: Likewise.\n+\t* gcc.target/i386/wrgsbase-2.c: Likewise.\n+\t* gcc.target/i386/xop-pcmov.c: Likewise.\n+\t* gcc.target/i386/xop-pcmov2.c: Likewise.\n+\t* gcc.target/i386/xop-rotate1-vector.c: Likewise.\n+\t* gcc.target/i386/xop-rotate2-vector.c: Likewise.\n+\t* gcc.target/i386/xop-rotate3-vector.c: Likewise.\n+\t* gcc.target/i386/xop-shift1-vector.c: Likewise.\n+\t* gcc.target/i386/xop-shift2-vector.c: Likewise.\n+\t* gcc.target/i386/xop-shift3-vector.c: Likewise.\n+\t* gcc.target/i386/zee.c: Likewise.\n+\t* gcc.target/x86_64/abi/callabi/callabi.exp: Likewise.\n+\t* gfortran.dg/compiler-directive_2.f: Likewise.\n+\t* gfortran.dg/g77/20010216-1.f: Likewise.\n+\t* gfortran.dg/gomp/pr39152.f90: Likewise.\n+\t* gfortran.dg/pr33794.f90: Likewise.\n+\n 2011-07-09  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/regress/regress5.C: New."}, {"sha": "f2e4dee238813d19d7d1a7ccd4da05e730117233", "filename": "gcc/testsuite/c-c++-common/dfp/func-vararg-alternate-d128-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fdfp%2Ffunc-vararg-alternate-d128-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fdfp%2Ffunc-vararg-alternate-d128-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fdfp%2Ffunc-vararg-alternate-d128-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-mpreferred-stack-boundary=2\" } */\n \n /* Simple test of vararg passing for problematic types with and without"}, {"sha": "02cafb016d10cc43dc17c8ff8372738cf194300b", "filename": "gcc/testsuite/c-c++-common/dfp/func-vararg-mixed-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fdfp%2Ffunc-vararg-mixed-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fdfp%2Ffunc-vararg-mixed-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fdfp%2Ffunc-vararg-mixed-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-mpreferred-stack-boundary=2\" } */\n \n /* C99 6.5.2.2 Function calls."}, {"sha": "632bc5ca2f9c9887e751d369bc9e9749231aa343", "filename": "gcc/testsuite/g++.dg/abi/bitfield3.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fbitfield3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fbitfield3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fbitfield3.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,10 +1,9 @@\n // Test for oversized bitfield alignment in structs on IA-32\n-// { dg-do run { target i?86-*-* x86_64-*-* } }\n+// { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n // { dg-options \"-O2\" }\n // Cygwin and mingw32 default to MASK_ALIGN_DOUBLE. Override to ensure\n // 4-byte alignment.\n // { dg-options \"-mno-align-double\" { target i?86-*-cygwin* i?86-*-mingw* } }\n-// { dg-require-effective-target ilp32 }\n \n struct A\n {"}, {"sha": "294a12941f30b0d6189fb955376e22f25f33137f", "filename": "gcc/testsuite/g++.dg/eh/pr38662.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fpr38662.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fpr38662.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fpr38662.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do compile { target { { i?86-*-* x86_64-*-* } && ilp32 } } }\n+// { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n class E { };\n \n class T {"}, {"sha": "625ffe6bb69c31fed08f27e0d6dd40d2698aac4b", "filename": "gcc/testsuite/g++.dg/ext/attrib36.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib36.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib36.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib36.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n // PR c++/43031\n-// { dg-do compile { target { { i?86-*-* x86_64-*-* } && ilp32 } } }\n+// { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n \n class T;\n class L { };"}, {"sha": "5aacac62c482da6fec9844ff50098d22305bada8", "filename": "gcc/testsuite/g++.dg/ext/attrib37.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib37.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib37.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib37.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n // PR c++/43093\n-// { dg-do compile { target { { i?86-*-* x86_64-*-* } && ilp32 } } }\n+// { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n \n struct S {\n   int x;"}, {"sha": "130fe258701fd6e787d6d26ed3a1c188e422ad29", "filename": "gcc/testsuite/g++.dg/ext/attrib8.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fattrib8.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,5 @@\n // PR 8656\n-// { dg-do compile { target i?86-*-* x86_64-*-* } }\n-// { dg-require-effective-target ilp32 }\n+// { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n \n extern int * (__attribute__((stdcall)) *fooPtr)( void);\n int * __attribute__((stdcall)) myFn01( void) { return 0; }"}, {"sha": "16a32ce6b36ebbe8d2c33b804932b8b09178d75f", "filename": "gcc/testsuite/g++.dg/ext/tmplattr1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ftmplattr1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ftmplattr1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ftmplattr1.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,5 @@\n // PR c++/24260\n-// { dg-do compile { target i?86-*-* x86_64-*-* } }\n-// { dg-require-effective-target ilp32 }\n+// { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n \n #define stdcall __attribute__((stdcall))\n "}, {"sha": "6f5c9288e86bfbe2826748a2436d4b1eb7f33828", "filename": "gcc/testsuite/g++.dg/inherit/override-attribs.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Foverride-attribs.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Foverride-attribs.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Foverride-attribs.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,5 @@\n // PR c++/14688\n-// { dg-do compile { target i?86-*-* x86_64-*-* } }\n-// { dg-require-effective-target ilp32 }\n+// { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n \n class one\n {"}, {"sha": "4fc556f287bbfd75040c616b636741155bfacf1b", "filename": "gcc/testsuite/g++.dg/opt/inline9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finline9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finline9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Finline9.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -3,7 +3,7 @@\n // Testcase by Alan Modra <amodra@bigpond.net.au>\n // { dg-do run }\n // { dg-options \"-O\" }\n-// { dg-options \"-O -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } }\n+// { dg-options \"-O -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n \n struct thread_info\n {"}, {"sha": "42fd7444693069ef1a09596f10c9733fe0d1f493", "filename": "gcc/testsuite/g++.dg/opt/life1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Flife1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Flife1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Flife1.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,6 @@\n // This testcase did not set up the pic register on IA-32 due\n // to bug in calculate_global_regs_live EH edge handling.\n-// { dg-do compile { target i?86-*-linux* x86_64-*-linux* } }\n-// { dg-require-effective-target ilp32 }\n+// { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n // { dg-require-effective-target fpic }\n // { dg-options \"-O2 -fPIC\" }\n "}, {"sha": "de63f697fcffee9034cc2350056a246360397bc3", "filename": "gcc/testsuite/g++.dg/opt/longbranch2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Flongbranch2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Flongbranch2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Flongbranch2.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -2,7 +2,7 @@\n // Originator: thor@math.tu-berlin.de\n \n // { dg-do compile }\n-// { dg-options \"-O3 -funroll-loops -mtune=k6 -fomit-frame-pointer\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } }\n+// { dg-options \"-O3 -funroll-loops -mtune=k6 -fomit-frame-pointer\" { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n \n \n // This used to fail to assemble because of an out-of-range 'loop' instructions."}, {"sha": "55933753c7d32fbef7f3d3c935e474837dd2418f", "filename": "gcc/testsuite/g++.dg/opt/nrv12.C", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fnrv12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fnrv12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fnrv12.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,6 @@\n-/* Verify that gimple-level NRV is occurring even for RESULT_DECLs.  *./\n-/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+/* Verify that gimple-level NRV is occurring even for RESULT_DECLs.  */\n+/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-O -fdump-tree-optimized\" } */\n-/* { dg-require-effective-target ilp32 } */\n \n struct P\n {"}, {"sha": "5707a38ca82ef4c01c0e05e8f24eca0aa4c0a9bd", "filename": "gcc/testsuite/g++.dg/opt/reg-stack4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Freg-stack4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Freg-stack4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Freg-stack4.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -5,7 +5,7 @@\n // deleted a valid edge.\n \n // { dg-do compile }\n-// { dg-options \"-mtune=i586 -O2\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } }\n+// { dg-options \"-mtune=i586 -O2\" { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n \n struct array {\n   double data;"}, {"sha": "a37b8b37160f4c8ed7d32bdae9de600187e6241c", "filename": "gcc/testsuite/g++.dg/other/pr35504.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr35504.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr35504.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr35504.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } }\n+// { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n \n #define ATTR0 __attribute__((__regparm__(0)))\n #define ATTR1 __attribute__((__regparm__(1)))"}, {"sha": "f7f2433595ab8cf553abbd4e23830f0519bfcdac", "filename": "gcc/testsuite/g++.dg/other/pr39496.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr39496.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr39496.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr39496.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n // PR target/39496\n-// { dg-do compile { target { { i?86-*-linux* x86_64-*-linux* } && ilp32 } } }\n+// { dg-do compile { target { { i?86-*-linux* x86_64-*-linux* } && ia32 } } }\n // { dg-options \"-O0 -fverbose-asm -fno-omit-frame-pointer -mtune=i686 -msse2 -mfpmath=sse\" }\n // { dg-require-effective-target sse2 }\n // Verify that {foo,bar}{,2}param are all passed on the stack, using"}, {"sha": "2c24ea3bcf11f8fdc737fedf4a4a70e92f009453", "filename": "gcc/testsuite/g++.dg/torture/stackalign/eh-fastcall-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Feh-fastcall-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Feh-fastcall-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Feh-fastcall-1.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n #include \"check.h\"\n "}, {"sha": "403497a9a64eca5f5fdc114925dac610d310f56f", "filename": "gcc/testsuite/g++.dg/torture/stackalign/eh-thiscall-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Feh-thiscall-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Feh-thiscall-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Feh-thiscall-1.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n #include \"check.h\"\n "}, {"sha": "18c02be09d326c8c7790fc7f6e7f956a2cf9b80c", "filename": "gcc/testsuite/g++.dg/torture/stackalign/stdcall-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Fstdcall-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Fstdcall-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Fstdcall-1.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do compile { target { { i?86-*-* x86_64-*-* } && ilp32 } } }\n+// { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n \n // This case is to detect an assertion failure in stack branch development.\n "}, {"sha": "b1e79d8920331523233331bb085e16e792e75bb3", "filename": "gcc/testsuite/g++.dg/torture/stackalign/unwind-0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-0.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n #include \"test-unwind.h\"\n "}, {"sha": "d61b1ba7558bc5e6c90aec9f0a2e1af75b5dacc1", "filename": "gcc/testsuite/g++.dg/torture/stackalign/unwind-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-1.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n #include \"test-unwind.h\"\n "}, {"sha": "7ed0a8d1466f92a1f5b47e66b86815d74b6fc011", "filename": "gcc/testsuite/g++.dg/torture/stackalign/unwind-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-2.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n #include \"test-unwind.h\"\n "}, {"sha": "e3368bfd9cb651942246a5fd9605e8463dbad176", "filename": "gcc/testsuite/g++.dg/torture/stackalign/unwind-3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-3.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n #include \"test-unwind.h\"\n "}, {"sha": "fddf27625705c083b5f0426219986025d7784a37", "filename": "gcc/testsuite/g++.dg/torture/stackalign/unwind-4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-4.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n #include \"test-unwind.h\"\n "}, {"sha": "e3e1a855fb2d7f26ede3dfe1def561f4843edf02", "filename": "gcc/testsuite/g++.dg/torture/stackalign/unwind-5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-5.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n #include \"test-unwind.h\"\n "}, {"sha": "f1188f8a27d9ffeddbd182212d8f1caa7baa8a2c", "filename": "gcc/testsuite/g++.dg/torture/stackalign/unwind-6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Funwind-6.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n #include \"test-unwind.h\"\n "}, {"sha": "116ec835d90bee65baff699f0bbd7a78da70d4db", "filename": "gcc/testsuite/g++.dg/warn/pr15774-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr15774-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr15774-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr15774-1.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do compile { target { { i?86-*-* x86_64-*-* } && ilp32 } } }\n+// { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n // Test that an new declartion with different attributes then old one fail.\n extern void foo (int); // { dg-error \"ambiguates old declaration\" }\n "}, {"sha": "5002d54658845e10682e207871fbe5c2814dd779", "filename": "gcc/testsuite/g++.dg/warn/pr15774-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr15774-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr15774-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr15774-2.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do compile { target { { i?86-*-* x86_64-*-* } && ilp32 } } }\n+// { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n // Test that old declaration is used, if new one has no attributes.\n extern void __attribute__((stdcall)) foo (int);\n "}, {"sha": "99f48e4a8ce9f4c5185a745aae148307e4ea83eb", "filename": "gcc/testsuite/g++.old-deja/g++.ext/attrib1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fattrib1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fattrib1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fattrib1.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do assemble { target i?86-*-* x86_64-*-* } }\n-// { dg-require-effective-target ilp32 }\n+// { dg-do assemble { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n // Test for using prefix attributes in a parameter decl.\n // Contributed by Jason Merrill <jason@cygnus.com>\n "}, {"sha": "c79677b1f6acd849aff1a60f100419523202548e", "filename": "gcc/testsuite/g++.old-deja/g++.ext/attrib2.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fattrib2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fattrib2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fattrib2.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do run { target i?86-*-* x86_64-*-* } }\n-// { dg-require-effective-target ilp32 }\n+// { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n // Test that stdcall doesn't prevent us from using op delete.\n // Contributed by Jason Merrill <jason@cygnus.com>\n "}, {"sha": "db9e189d3c5ef0fe41621bb4913d46606e758b77", "filename": "gcc/testsuite/g++.old-deja/g++.ext/attrib3.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fattrib3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fattrib3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fattrib3.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do run { target i?86-*-* x86_64-*-* } }\n-// { dg-require-effective-target ilp32 }\n+// { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n // Test for proper handling of attributes in template instantiation.\n // Contributed by Jason Merrill <jason@cygnus.com>\n "}, {"sha": "b8572c87ce8830a8c5d0ab02d0222bd920fa328c", "filename": "gcc/testsuite/g++.old-deja/g++.pt/asm2.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fasm2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fasm2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fasm2.C?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do assemble { target i?86-*-linux* x86_64-*-linux* } }\n-// { dg-require-effective-target ilp32 }\n+// { dg-do assemble { target { { i?86-*-* x86_64-*-* } && ia32 } } }\n // We'd use ebx with 32-bit pic code, so require nonpic.\n // { dg-require-effective-target nonpic }\n // Origin: \"Weidmann, Nicholas\" <nicholas.weidmann@swx.ch>"}, {"sha": "38e42be2040cb67604a3d983e44c8f95ecb5c522", "filename": "gcc/testsuite/gcc.c-torture/compile/20000804-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20000804-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20000804-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20000804-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* This does not work on h8300 due to the use of an asm\n    statement to force a 'long long' (64-bits) to go in a register.  */\n /* { dg-do assemble } */\n-/* { dg-skip-if \"\" { { i?86-*-* x86_64-*-* } && { ilp32 && { ! nonpic } } } { \"*\" } { \"\" } } */\n+/* { dg-skip-if \"\" { { i?86-*-* x86_64-*-* } && { ia32 && { ! nonpic } } } { \"*\" } { \"\" } } */\n /* { dg-skip-if \"No 64-bit registers\" { m32c-*-* } { \"*\" } { \"\" } } */\n /* { dg-skip-if \"Not enough 64-bit registers\" { pdp11-*-* } { \"-O0\" } { \"\" } } */\n /* { dg-xfail-if \"\" { h8300-*-* } { \"*\" } { \"\" } } */"}, {"sha": "73cf05a0d5dd259516c56cd9020384c01d6df4d1", "filename": "gcc/testsuite/gcc.c-torture/compile/pr16566-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr16566-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr16566-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr16566-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* ICE with flexible arrays in non-lvalue structures.  Bug 16566\n    (comment #5).  */\n-/* { dg-options \"-Wno-psabi\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } */\n+/* { dg-options \"-Wno-psabi\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } */\n \n struct A\n {"}, {"sha": "d15e90a525ae1b0ae2dd3dc508bf3e0cf71a98f8", "filename": "gcc/testsuite/gcc.c-torture/execute/ieee/ieee.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fieee.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fieee.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fieee%2Fieee.exp?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -44,7 +44,7 @@ set additional_flags \"-fno-inline\"\n if [istarget \"i\\[34567\\]86-*-*\"] then {\n   lappend additional_flags \"-ffloat-store\"\n }\n-if { [istarget \"x86_64-*-*\"] && [check_effective_target_ilp32] } then {\n+if { [istarget \"x86_64-*-*\"] && [check_effective_target_ia32] } then {\n   lappend additional_flags \"-ffloat-store\"\n }\n if [istarget \"m68k-*-*\"] then {"}, {"sha": "579a22852964466d28c4c57a1f2d5f0e58f21614", "filename": "gcc/testsuite/gcc.dg/20020108-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20020108-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20020108-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020108-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -5,7 +5,7 @@\n    is not valid general_operand in HImode.  */\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n-/* { dg-options \"-O2 -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O2 -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n \n void"}, {"sha": "2499221853172ada051cdad2de7a4bb2b69373b1", "filename": "gcc/testsuite/gcc.dg/20020122-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20020122-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20020122-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020122-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -3,7 +3,7 @@\n   \n /* { dg-do compile } */\n /* { dg-options \"-O2 -fprefetch-loop-arrays -w\" } */\n-/* { dg-options \"-O2 -fprefetch-loop-arrays -march=athlon\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O2 -fprefetch-loop-arrays -march=athlon\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n extern int access( char* );\n extern int a();"}, {"sha": "e39bd23a5aaf1c7043401a69c93f6d95d825ce11", "filename": "gcc/testsuite/gcc.dg/20020122-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20020122-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20020122-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020122-3.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -4,7 +4,7 @@\n \n /* { dg-do compile } */\n /* { dg-options \"-Os -fprefetch-loop-arrays -w\" } */\n-/* { dg-options \"-Os -fprefetch-loop-arrays -mtune=pentium3 -w\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-Os -fprefetch-loop-arrays -mtune=pentium3 -w\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n int foo (int *p, int n)\n {"}, {"sha": "4b3d0fc767a36d626abdf8b01347dff628f599d7", "filename": "gcc/testsuite/gcc.dg/20020206-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20020206-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20020206-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020206-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -4,7 +4,7 @@\n \n /* { dg-do run } */\n /* { dg-options \"-O2 -fprefetch-loop-arrays -w\" } */\n-/* { dg-options \"-O2 -fprefetch-loop-arrays -mtune=pentium3 -w\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O2 -fprefetch-loop-arrays -mtune=pentium3 -w\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n \n struct reload"}, {"sha": "ffdf19a43c1fdd437ef6c95f85d8e0a2790f86a8", "filename": "gcc/testsuite/gcc.dg/20020219-1.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20020219-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20020219-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020219-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -8,11 +8,13 @@\n    IA64 hpux in ILP32 mode because extending x - 1 before adding the\n    array offset gives a different answer then adding first and then\n    extending.  The underlying problem is the same as with hppa, x - 1 is\n-   not a legal data address.  */\n+   not a legal data address.  It also fails on x32 targets for the\n+   same reason.  */\n /* { dg-do run } */\n /* { dg-options \"-O2\" } */\n /* { dg-options \"-O2 -mdisable-indexing\" { target hppa*-*-hpux* } } */\n /* { dg-skip-if \"\" { \"ia64-*-hpux*\" } \"*\" \"-mlp64\" } */\n+/* { dg-skip-if \"\" { { i?86-*-* x86_64-*-* } && x32 } { \"*\" } { \"\" } } */\n \n /* Disable the test entirely for 16-bit targets.  */\n #if __INT_MAX__ > 32767"}, {"sha": "7f35e9b0953f63780c1b4631703a18478765bab6", "filename": "gcc/testsuite/gcc.dg/20020310-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20020310-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20020310-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020310-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -2,7 +2,7 @@\n    This testcase was miscompiled because of an rtx sharing bug.  */\n /* { dg-do run } */\n /* { dg-options \"-O2\" } */\n-/* { dg-options \"-O2 -mtune=i586\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O2 -mtune=i586\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n struct A\n {"}, {"sha": "55ca2997c17cf634228c71e1273489d074924341", "filename": "gcc/testsuite/gcc.dg/20020411-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20020411-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20020411-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020411-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -3,7 +3,7 @@\n    for its mode.  */\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n-/* { dg-options \"-O2 -march=i686\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O2 -march=i686\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n #if __INT_MAX__ > 32767\n "}, {"sha": "56094e71cd666b83cf875ef0b1a6f6adb020e42a", "filename": "gcc/testsuite/gcc.dg/20020418-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20020418-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20020418-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020418-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR optimization/6010 */\n /* { dg-do compile } */\n /* { dg-options \"-O2 -funroll-all-loops\" } */\n-/* { dg-options \"-O2 -funroll-all-loops -march=pentium3\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O2 -funroll-all-loops -march=pentium3\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n void bar (float);\n "}, {"sha": "9ad7a54f6016e78aaf301653c755a00e0ff061ce", "filename": "gcc/testsuite/gcc.dg/20020426-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20020426-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20020426-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020426-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -2,7 +2,7 @@\n    Distilled from zlib sources.  */\n /* { dg-do run } */\n /* { dg-options \"-O2\" } */\n-/* { dg-options \"-O2 -frename-registers -fomit-frame-pointer -fPIC -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && { ilp32 && fpic } } } } */\n+/* { dg-options \"-O2 -frename-registers -fomit-frame-pointer -fPIC -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && { ia32 && fpic } } } } */\n \n extern void exit (int);\n "}, {"sha": "74c6b3e6eab516675bfb51d9255f7595e5f77b8d", "filename": "gcc/testsuite/gcc.dg/20020517-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20020517-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20020517-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020517-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -2,7 +2,7 @@\n    was not sign-extended for QImode.  */\n /* { dg-do run } */\n /* { dg-options \"-O2\" } */\n-/* { dg-options \"-O2 -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O2 -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n #include <limits.h>\n "}, {"sha": "6b8ea4daa9ef9c6fdd37bdf979f4da104b127a1f", "filename": "gcc/testsuite/gcc.dg/20030204-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20030204-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20030204-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20030204-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR optimization/8555 */\n /* { dg-do compile } */\n /* { dg-options \"-O -ffast-math -funroll-loops\" } */\n-/* { dg-options \"-march=pentium3 -O -ffast-math -funroll-loops\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-march=pentium3 -O -ffast-math -funroll-loops\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n \n float foo (float *a, int i)"}, {"sha": "552c77e7e51a20baa9458aadb40632de60fc45a7", "filename": "gcc/testsuite/gcc.dg/20030826-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20030826-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20030826-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20030826-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -fomit-frame-pointer\" } */\n-/* { dg-options \"-O2 -fomit-frame-pointer -march=i386\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O2 -fomit-frame-pointer -march=i386\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n extern void abort (void);\n extern void exit (int);"}, {"sha": "2148381a43bd9264714675d19f89267de06ce67c", "filename": "gcc/testsuite/gcc.dg/20031102-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20031102-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20031102-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20031102-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -3,7 +3,7 @@\n \n /* { dg-do run } */\n /* { dg-options \"-O2\" } */\n-/* { dg-options \"-O2 -march=i686\" { target { { i686-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O2 -march=i686\" { target { { i686-*-* x86_64-*-* } && ia32 } } } */\n \n /* Verify that reload_cse_move2add doesn't add unexpected CLOBBERs. */\n "}, {"sha": "a5e78456ba9ef4f48a1e58033f8640235763a2c5", "filename": "gcc/testsuite/gcc.dg/20031202-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20031202-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20031202-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20031202-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-O2\" } */\n-/* { dg-options \"-O2 -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O2 -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n extern void abort (void);\n extern void exit (int);"}, {"sha": "0ad256fec4be4f78ceed1ca87804f7370ccae00a", "filename": "gcc/testsuite/gcc.dg/20050111-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20050111-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20050111-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20050111-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR middle-end/19084, rtl-optimization/19348 */\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n-/* { dg-options \"-O2 -march=i686\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O2 -march=i686\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n unsigned int\n foo (unsigned long long x)"}, {"sha": "200494fa7595ead46f9a294a435cf21706a57b3f", "filename": "gcc/testsuite/gcc.dg/20050503-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20050503-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2F20050503-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20050503-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -2,7 +2,7 @@\n    Test whether tail call information is propagated through builtin\n    expanders.  */\n /* { dg-do compile } */\n-/* { dg-skip-if \"\" { { i?86-*-* x86_64-*-* } && { ilp32 && { ! nonpic } } } { \"*\" } { \"\" } } */\n+/* { dg-skip-if \"\" { { i?86-*-* x86_64-*-* } && { ia32 && { ! nonpic } } } { \"*\" } { \"\" } } */\n /* { dg-options \"-O2\" } */\n \n typedef __SIZE_TYPE__ size_t;"}, {"sha": "14ec9552e8097d6f6572b06b436047071c47c0da", "filename": "gcc/testsuite/gcc.dg/array-init-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Farray-init-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Farray-init-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Farray-init-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* Test that both arrays are initialized by store_by_pieces.  */\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n-/* { dg-options \"-O2 -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O2 -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n struct A { char c[10]; };\n extern void baz (struct A *);"}, {"sha": "530da7115810e14df08d42ea23c1c4d74a1de312", "filename": "gcc/testsuite/gcc.dg/builtin-apply4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-apply4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-apply4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-apply4.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* PR tree-optimization/20076 */\n /* { dg-options \"-O2 -Wmissing-noreturn\" } */\n-/* { dg-options \"-O2 -mno-mmx\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O2 -mno-mmx\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-do run } */\n \n extern void abort (void);"}, {"sha": "506eef4507e382ef632a62c0eda057b3fd99c45a", "filename": "gcc/testsuite/gcc.dg/dfp/pr31344.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr31344.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr31344.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr31344.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -mtune=i386\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O -mtune=i386\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-O\" } */\n \n typedef struct"}, {"sha": "b5647b0bd81747b23e3652864bfbb6ab26bd3f34", "filename": "gcc/testsuite/gcc.dg/gomp/atomic-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fatomic-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fatomic-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fatomic-11.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR middle-end/36877 */\n /* { dg-do compile } */\n /* { dg-options \"-fopenmp\" } */\n-/* { dg-options \"-fopenmp -march=i386\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-fopenmp -march=i386\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n int i;\n float f;"}, {"sha": "d242754a2bd39253e8d2b92a3694d6f48f8feab2", "filename": "gcc/testsuite/gcc.dg/graphite/pr40281.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr40281.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr40281.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr40281.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* { dg-options \"-O -fprefetch-loop-arrays -w\" } */\n-/* { dg-options \"-O -fprefetch-loop-arrays -march=i686 -msse -w\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n-/* { dg-require-effective-target sse { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O -fprefetch-loop-arrays -march=i686 -msse -w\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n+/* { dg-require-effective-target sse { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n void foo(int);\n void bar(int n)"}, {"sha": "2cfc144b9b637af72c15a3648b97ff83a9aeb79f", "filename": "gcc/testsuite/gcc.dg/ia64-sync-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do run } */\n /* { dg-require-effective-target sync_int_long } */\n /* { dg-options } */\n-/* { dg-options \"-march=i486\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-march=i486\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-mcpu=v9\" { target sparc*-*-* } } */\n \n /* { dg-message \"note: '__sync_fetch_and_nand' changed semantics in GCC 4.4\" \"\" { target *-*-* } 0 } */"}, {"sha": "d8d4082ce0c6dc5c2cdb1cbcaa0c0d5b93fcf786", "filename": "gcc/testsuite/gcc.dg/ia64-sync-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do run } */\n /* { dg-require-effective-target sync_int_long } */\n /* { dg-options } */\n-/* { dg-options \"-march=i486\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-march=i486\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-mcpu=v9\" { target sparc*-*-* } } */\n \n /* { dg-message \"note: '__sync_fetch_and_nand' changed semantics in GCC 4.4\" \"\" { target *-*-* } 0 } */"}, {"sha": "621e9027728fd16f0eab3777f3474ccceeb63700", "filename": "gcc/testsuite/gcc.dg/ia64-sync-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-3.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do run } */\n /* { dg-require-effective-target sync_int_long } */\n /* { dg-options } */\n-/* { dg-options \"-march=i486\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-march=i486\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-mcpu=v9\" { target sparc*-*-* } } */\n \n /* Test basic functionality of the intrinsics.  */"}, {"sha": "eec472f388e195d288b92eb280c7d26299625cd9", "filename": "gcc/testsuite/gcc.dg/ia64-sync-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fia64-sync-4.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target sync_int_long } */\n /* { dg-options \"-O2 -finline-functions\" } */\n-/* { dg-options \"-march=i486\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-march=i486\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-mcpu=v9\" { target sparc*-*-* } } */\n \n /* Test inlining __sync_bool_compare_and_swap.  */"}, {"sha": "40c57d83616ad0500ffcbb3d870d9b0230e6a39d", "filename": "gcc/testsuite/gcc.dg/ifcvt-fabs-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-fabs-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-fabs-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-fabs-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-O\" } */\n-/* { dg-options \"-O -march=i686\" { target { { i686-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O -march=i686\" { target { { i686-*-* x86_64-*-* } && ia32 } } } */\n \n extern void abort(void);\n "}, {"sha": "31f66b9266889f3bfaa098fca7bda8aefe1b496f", "filename": "gcc/testsuite/gcc.dg/invalid-call-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Finvalid-call-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Finvalid-call-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Finvalid-call-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -3,7 +3,7 @@\n \n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n-/* { dg-options \"-O2 -march=i586\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O2 -march=i586\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n typedef void (*fp)(void);\n extern char* bar(void* a1, int a2);"}, {"sha": "6bdb5ef5697793ac979652bd6845867d08731b9c", "filename": "gcc/testsuite/gcc.dg/loop-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Floop-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Floop-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Floop-3.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -3,7 +3,7 @@\n \n /* { dg-do compile } */\n /* { dg-options \"-O3\" } */\n-/* { dg-options \"-O3 -mtune=i386\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O3 -mtune=i386\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n #if defined(STACK_SIZE) && (STACK_SIZE < 65536)\n # define BYTEMEM_SIZE 10000L"}, {"sha": "33be4c4eaccfaf622e57caa37af85d7e650c01ed", "filename": "gcc/testsuite/gcc.dg/lower-subreg-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Flower-subreg-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Flower-subreg-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flower-subreg-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile { target { { { ! mips64 } && { ! ia64-*-* } } && { ! spu-*-* } } } } */\n /* { dg-options \"-O -fdump-rtl-subreg1\" } */\n+/* { dg-skip-if \"\" { { i?86-*-* x86_64-*-* } && x32 } { \"*\" } { \"\" } } */\n /* { dg-require-effective-target ilp32 } */\n \n long long test (long long a, long long b) { return a | b; }"}, {"sha": "7900e5a8b048babffcde09f9c098b5850dcf6692", "filename": "gcc/testsuite/gcc.dg/lto/pr47259_0.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr47259_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr47259_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr47259_0.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,6 @@\n /* { dg-lto-do link } */\n /* { dg-skip-if \"\" { ! { x86_64-*-* } } { \"*\" } { \"\" } } */\n /* { dg-lto-options { { -O2 -flto -w } } } */\n-/* { dg-require-effective-target lp64 } */\n \n register int r asm(\"esi\");\n "}, {"sha": "500fed2fb770f0a680537e41a8f32bfa9b1e7bda", "filename": "gcc/testsuite/gcc.dg/nested-calls-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fnested-calls-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fnested-calls-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnested-calls-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -3,7 +3,7 @@\n \n /* { dg-do run } */\n /* { dg-options \"-std=c99 -O -fno-inline\" } */\n-/* { dg-options \"-std=c99 -O -fno-inline -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-std=c99 -O -fno-inline -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n #include <limits.h>\n "}, {"sha": "47c048fdc62e905e95b32ab9161f3860da3d9362", "filename": "gcc/testsuite/gcc.dg/pr20017.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr20017.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr20017.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr20017.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -6,7 +6,7 @@\n \n /* { dg-do compile } */\n /* { dg-options \"-O1\" } */\n-/* { dg-options \"-O1 -march=i386\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O1 -march=i386\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n int\n foo (int *buf, int *p)"}, {"sha": "58d962c2980805b8425f699ff5b0af45f7ab0efa", "filename": "gcc/testsuite/gcc.dg/pr25023.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25023.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25023.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr25023.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR debug/25023 */\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n-/* { dg-options \"-O2 -mtune=i686\" { target { { i?86-*-* || x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O2 -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n extern unsigned char v;\n "}, {"sha": "11dae10b187d58c13623e8e680e86d16ac0adc05", "filename": "gcc/testsuite/gcc.dg/pr27671-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr27671-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr27671-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr27671-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -3,7 +3,7 @@\n    simplify_relational_operation_1 in simplify-rtx.c.  */\n /* { dg-do run } */\n /* { dg-options \"-O1\" } */\n-/* { dg-options \"-O1 -march=pentium4\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O1 -march=pentium4\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n extern void abort (void) __attribute__ ((noreturn));\n extern void exit (int) __attribute__ ((noreturn));"}, {"sha": "3017c34e3c64ed23fb4f71f2c88de6834d9e5ab0", "filename": "gcc/testsuite/gcc.dg/pr32176.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32176.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32176.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32176.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -2,7 +2,7 @@\n \n /* { dg-do compile } */\n /* { dg-options \"-O2 -fprefetch-loop-arrays -w\" } */\n-/* { dg-options \"-O2 -fprefetch-loop-arrays -march=i686 -msse\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O2 -fprefetch-loop-arrays -march=i686 -msse\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n void foo (void)\n {"}, {"sha": "79c830eabfb216ec544cc2e19212ba073c4d4f60", "filename": "gcc/testsuite/gcc.dg/pr33676.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33676.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33676.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33676.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-O0 -mtune=i386 -fomit-frame-pointer\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O0 -mtune=i386 -fomit-frame-pointer\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n __attribute__((noreturn,noinline)) void abrt (const char *fi, const char *fu)\n {"}, {"sha": "bcd01d7515060c48ed8268fd02de22cb9951a554", "filename": "gcc/testsuite/gcc.dg/pr35045.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35045.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35045.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35045.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-skip-if \"\" { { i?86-*-* x86_64-*-* } && { ilp32 && { ! nonpic } } } { \"*\" } { \"\" } } */\n+/* { dg-skip-if \"\" { { i?86-*-* x86_64-*-* } && { ia32 && { ! nonpic } } } { \"*\" } { \"\" } } */\n /* { dg-options \"-O2 -fgcse-after-reload\" } */\n \n extern void abort (void);"}, {"sha": "fc31535598d0b19788911b9f42156e923c267f83", "filename": "gcc/testsuite/gcc.dg/pr36015.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36015.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36015.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36015.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR target/36015 */\n /* { dg-do run } */\n /* { dg-options \"-O0\" } */\n-/* { dg-options \"-O0 -mregparm=3\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O0 -mregparm=3\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n static int test ();\n "}, {"sha": "1b6e38ca43004617d0d9571a2d4721882b432dc6", "filename": "gcc/testsuite/gcc.dg/pr36584.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36584.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36584.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36584.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -lm\" } */\n-/* { dg-options \"-O2 -msse2 -mfpmath=sse\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n-/* { dg-require-effective-target sse2_runtime { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O2 -msse2 -mfpmath=sse\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n+/* { dg-require-effective-target sse2_runtime { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n extern double fabs (double);\n extern void abort (void);"}, {"sha": "bf08ed1233a6c45d6be8414bf8fb298a21ee6dd1", "filename": "gcc/testsuite/gcc.dg/pr36998.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36998.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36998.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36998.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR rtl-optimization/36998 */\n /* { dg-do compile } */\n /* { dg-options \"-Os -fasynchronous-unwind-tables\" } */\n-/* { dg-options \"-Os -mpreferred-stack-boundary=2 -fasynchronous-unwind-tables\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-Os -mpreferred-stack-boundary=2 -fasynchronous-unwind-tables\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-fno-omit-frame-pointer\" { target { avr-*-* } } } */\n \n void foo (const char *, ...) __attribute__ ((noreturn));"}, {"sha": "7365dc9e7396e0ba4ee7cc0229e82ea486cd9bd1", "filename": "gcc/testsuite/gcc.dg/pr37438.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr37438.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr37438.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr37438.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR target/37438 */\n /* { dg-do compile } */\n /* { dg-options \"-Os\" } */\n-/* { dg-options \"-Os -march=i486\" { target { { i686-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-Os -march=i486\" { target { { i686-*-* x86_64-*-* } && ia32 } } } */\n \n extern int bar (unsigned long long int);\n extern int baz (const char *, unsigned int, unsigned short);"}, {"sha": "32946d1b43e2602d379e8186e94dc6cea3d4a301", "filename": "gcc/testsuite/gcc.dg/pr37908.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr37908.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr37908.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr37908.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do run } */\n /* { dg-require-effective-target sync_char_short } */\n /* { dg-options \"-Wsync-nand\" } */\n-/* { dg-options \"-Wsync-nand -march=i486\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-Wsync-nand -march=i486\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-Wsync-nand -mcpu=v9\" { target sparc*-*-* } } */\n \n "}, {"sha": "42fb2f7e5c7a28251a55ac9704aacc041d25fdaa", "filename": "gcc/testsuite/gcc.dg/pr41241.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41241.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41241.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41241.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR bootstrap/41241 */\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fcompare-debug -g\" } */\n-/* { dg-options \"-O2 -fcompare-debug -g -march=i586 -mtune=i586 -fomit-frame-pointer\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O2 -fcompare-debug -g -march=i586 -mtune=i586 -fomit-frame-pointer\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n typedef struct { int t1; int t2; int t3; } *T;\n typedef struct { int s; } S;"}, {"sha": "439046af89ed53d54af21fd28bb3f1ec76561e2b", "filename": "gcc/testsuite/gcc.dg/pr41340.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41340.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41340.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr41340.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR debug/41340 */\n /* { dg-do compile } */\n /* { dg-options \"-O3 -g -fcompare-debug\" } */\n-/* { dg-options \"-O3 -g -fcompare-debug -march=i686\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O3 -g -fcompare-debug -march=i686\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-skip-if \"no long pointers\" {  { ! ilp32 } && { ! lp64 } } } */\n \n typedef struct { int t; } *T;"}, {"sha": "31f1924619aa13b9c49eb357325f3f12659a865e", "filename": "gcc/testsuite/gcc.dg/pr44136.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44136.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44136.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44136.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR debug/44136 */\n /* { dg-do compile } */\n /* { dg-options \"-w -O2 -g\" } */\n-/* { dg-options \"-w -Wno-psabi -O2 -g -mno-sse\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-w -Wno-psabi -O2 -g -mno-sse\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n #define vector __attribute((vector_size(16)))\n vector float a;"}, {"sha": "cb6536356820bc0cfa90aeed71fb3c9fcb561dca", "filename": "gcc/testsuite/gcc.dg/pr44194-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44194-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44194-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr44194-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,5 @@\n-/* { dg-do compile } */\n+/* { dg-do compile { target { { { i?86-*-* x86_64-*-* } && x32 } || lp64 } } } */\n /* { dg-options \"-O2 -fdump-rtl-dse1\" } */\n-/* { dg-require-effective-target lp64 } */\n /* Restricting to 64-bit targets since 32-bit targets return\n    structures in memory.  */\n "}, {"sha": "3329ed5f47ce857eef772ebf3e223dcdc724a1ff", "filename": "gcc/testsuite/gcc.dg/pr46212.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46212.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46212.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46212.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR rtl-optimization/46212 */\n /* { dg-do compile } */\n /* { dg-options \"-O3 -funroll-loops\" } */\n-/* { dg-options \"-O3 -funroll-loops -march=i386\" { target { { i686-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O3 -funroll-loops -march=i386\" { target { { i686-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-require-effective-target int32plus } */\n \n static inline unsigned"}, {"sha": "024cc1af56a832cf2d55293bfa36462eb7377269", "filename": "gcc/testsuite/gcc.dg/prefetch-loop-arrays-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fprefetch-loop-arrays-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fprefetch-loop-arrays-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fprefetch-loop-arrays-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR tree-optimization/28887 */\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fprefetch-loop-arrays -w\" } */\n-/* { dg-options \"-O2 -fprefetch-loop-arrays -march=i686 -msse -w\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O2 -fprefetch-loop-arrays -march=i686 -msse -w\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n __extension__ typedef __SIZE_TYPE__ size_t;\n "}, {"sha": "f31f6b2926847a4e9e992f13fbb6ca187538e075", "filename": "gcc/testsuite/gcc.dg/setjmp-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fsetjmp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fsetjmp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsetjmp-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -2,7 +2,7 @@\n /* Origin: Tom Hughes <tom@compton.nu> */\n /* { dg-do run { target i?86-*-linux* x86_64-*-linux* } } */\n /* { dg-options \"-O -fomit-frame-pointer\" } */\n-/* { dg-options \"-O -fomit-frame-pointer -march=i386\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O -fomit-frame-pointer -march=i386\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n #include <setjmp.h>\n #include <signal.h>"}, {"sha": "b5e01c1c588381a817298a753c09b3576a3445d4", "filename": "gcc/testsuite/gcc.dg/short-compare-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fshort-compare-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fshort-compare-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fshort-compare-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -3,7 +3,7 @@\n \n /* { dg-do run } */\n /* { dg-options \"-O\" } */\n-/* { dg-options \"-O -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n extern void abort(void);\n "}, {"sha": "bf4e6b4bad37abac34dbec4d2ee176ab0d766b93", "filename": "gcc/testsuite/gcc.dg/short-compare-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fshort-compare-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fshort-compare-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fshort-compare-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -4,7 +4,7 @@\n \n /* { dg-do run } */\n /* { dg-options \"-O\" } */\n-/* { dg-options \"-O -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n extern void abort();\n "}, {"sha": "9a847a1d664108985ddeff8f79de136c02732c3d", "filename": "gcc/testsuite/gcc.dg/smod-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fsmod-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fsmod-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsmod-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -3,7 +3,7 @@\n \n /* { dg-do run } */\n /* { dg-options \"-std=c99\" } */\n-/* { dg-options \"-std=c99 -mtune=i486\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-std=c99 -mtune=i486\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n #include <limits.h>\n "}, {"sha": "e94248cbc5c48026dd2fb18a536c7c5bd19c07af", "filename": "gcc/testsuite/gcc.dg/sync-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fsync-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fsync-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsync-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do run } */\n /* { dg-require-effective-target sync_char_short } */\n /* { dg-options \"-ansi\" } */\n-/* { dg-options \"-march=i486\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-march=i486\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-mcpu=v9\" { target sparc*-*-* } } */\n \n /* { dg-message \"note: '__sync_fetch_and_nand' changed semantics in GCC 4.4\" \"\" { target *-*-* } 0 } */"}, {"sha": "255faaabc6d7732ef0d0fc6469875bc9747e67f8", "filename": "gcc/testsuite/gcc.dg/sync-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fsync-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fsync-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsync-3.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do run } */\n /* { dg-require-effective-target sync_char_short } */\n /* { dg-options \"-ansi\" } */\n-/* { dg-options \"-march=i486\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-march=i486\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-mcpu=v9\" { target sparc*-*-* } } */\n \n /* Test functionality of the intrinsics for 'short' and 'char'.  */"}, {"sha": "658fc67c7feafc6d539fd891b03254bcce5c9334", "filename": "gcc/testsuite/gcc.dg/tls/opt-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fPIC\" } */\n-/* { dg-options \"-O2 -fPIC -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O2 -fPIC -mtune=i686\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-require-effective-target tls } */\n /* { dg-require-effective-target fpic } */\n "}, {"sha": "868b97c5b339c02234fab6f60d501450914f660c", "filename": "gcc/testsuite/gcc.dg/tls/opt-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -4,7 +4,7 @@\n    on IA-32.  */\n /* { dg-do link } */\n /* { dg-options \"-O2 -ftls-model=initial-exec\" } */\n-/* { dg-options \"-O2 -ftls-model=initial-exec -march=i686\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O2 -ftls-model=initial-exec -march=i686\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-require-effective-target tls } */\n /* { dg-require-effective-target tls_runtime  } */\n "}, {"sha": "0f1bbfcd62bc007980b6647cfa084341f8b37795", "filename": "gcc/testsuite/gcc.dg/tls/opt-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fopt-3.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fpic\" } */\n-/* { dg-options \"-O2 -fpic -mregparm=3\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-O2 -fpic -mregparm=3\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-require-effective-target tls } */\n /* { dg-require-effective-target fpic } */\n "}, {"sha": "39d123b134fdeb2d6482445357b4c066f5d98554", "filename": "gcc/testsuite/gcc.dg/torture/badshift.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbadshift.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbadshift.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbadshift.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -2,7 +2,7 @@\n \n /* { dg-do run } */\n /* { dg-options \"\" } */\n-/* { dg-options \"-march=i386\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-march=i386\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n /* We used to optimize the DImode shift-by-32 to zero because in combine\n    we turned:"}, {"sha": "7600994b4bd8484f32dfdeb977dd140f9230cdfe", "filename": "gcc/testsuite/gcc.dg/torture/fp-int-convert-float80-timode.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffp-int-convert-float80-timode.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffp-int-convert-float80-timode.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffp-int-convert-float80-timode.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -2,7 +2,7 @@\n /* Origin: Joseph Myers <joseph@codesourcery.com> */\n /* { dg-do run { target i?86-*-* x86_64-*-* ia64-*-* } } */\n /* { dg-options \"\" } */\n-/* { dg-options \"-mmmx\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-mmmx\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n #include \"fp-int-convert.h\"\n "}, {"sha": "aac02ddfa3ab7ec4a05246dafb3bda2a9b9f0038", "filename": "gcc/testsuite/gcc.dg/torture/pr20314-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr20314-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr20314-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr20314-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR inline-asm/20314 */\n-/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && lp64 } } } */\n+/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } */\n /* { dg-do compile { target ia64-*-* powerpc*-*-* } } */\n \n int a, b, c, d, e, f, g, h, i, j, k, l;"}, {"sha": "5a8e5c32e3eafcbd8585141bb8ad0f9fca9c7201", "filename": "gcc/testsuite/gcc.dg/torture/pr36891.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr36891.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr36891.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr36891.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-ffast-math\" } */\n-/* { dg-options \"-ffast-math -msse\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n-/* { dg-require-effective-target sse { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-ffast-math -msse\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n+/* { dg-require-effective-target sse { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n #define __vector __attribute__((vector_size(16) ))\n __vector float f(void);"}, {"sha": "b62619416ef9a8f723f94c4500dc93411953ef11", "filename": "gcc/testsuite/gcc.dg/torture/pr38774.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr38774.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr38774.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr38774.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR rtl-optimization/38774 */\n /* { dg-do compile } */\n /* { dg-options \"\" } */\n-/* { dg-options \"-march=i686\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-march=i686\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n extern int bar (void);\n volatile int g;"}, {"sha": "744d72aa5419a3de0426c5c78fb73d68c68f9cc2", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/alloca-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Falloca-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Falloca-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Falloca-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR middle-end/37009 */\n-/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-msse2\" } */\n /* { dg-require-effective-target sse2_runtime } */\n "}, {"sha": "b23fdf646259d771fad7b67db57d1e0770c088f6", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/alloca-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Falloca-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Falloca-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Falloca-4.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR middle-end/37009 */\n-/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-mincoming-stack-boundary=2 -mpreferred-stack-boundary=2\" } */\n \n #include \"check.h\""}, {"sha": "7b7ed686fb503a494f1d2784dfd7b8e4fee66c30", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/alloca-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Falloca-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Falloca-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Falloca-5.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR middle-end/45234 */\n-/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-mincoming-stack-boundary=2 -mpreferred-stack-boundary=2\" } */\n \n #include \"check.h\""}, {"sha": "24c8e5a6e925151c42ec5d49db085b47cc2f7ee3", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/alloca-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Falloca-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Falloca-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Falloca-6.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR middle-end/45234 */\n-/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-mincoming-stack-boundary=2 -mpreferred-stack-boundary=2\" } */\n \n #include \"check.h\""}, {"sha": "24dab4d13ccd67eff848ce775010617a7279d938", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/fastcall-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Ffastcall-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Ffastcall-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Ffastcall-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n #include \"check.h\"\n "}, {"sha": "787f99fc6dc43e8bcefb363fbc6d46a8ad395c15", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/push-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fpush-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fpush-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fpush-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR middle-end/37010 */\n-/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-msse2 -mpreferred-stack-boundary=2\" } */\n /* { dg-require-effective-target sse2_runtime } */\n "}, {"sha": "b9acacf9ed592efffd381b568c49401fa8df6272", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/regparm-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fregparm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fregparm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fregparm-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n #include \"check.h\"\n "}, {"sha": "27b71b60ceac8bb6851c878f7e7248272ae76405", "filename": "gcc/testsuite/gcc.dg/torture/stackalign/thiscall-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fthiscall-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fthiscall-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fstackalign%2Fthiscall-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-do run { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n #include \"check.h\"\n "}, {"sha": "479355eb664f687956393b492996989408df9703", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-28.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-28.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-28.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-28.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-O2 -fprefetch-loop-arrays -march=athlon -fdump-tree-optimized -fdump-tree-aprefetch --param max-unrolled-insns=1000\" } */\n \n char x[100000];"}, {"sha": "dc19150ecfb52b633dca73d53cf004f50b9a8aa4", "filename": "gcc/testsuite/gcc.dg/tree-ssa/prefetch-3.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-3.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,6 @@\n /* Prefetching used to prefer nonsensical unroll factor of 5 in this testcase.  */\n \n-/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-O2 -fprefetch-loop-arrays -march=athlon -msse2 -mfpmath=sse -fdump-tree-aprefetch-details\" } */\n \n #define N 1000000"}, {"sha": "11fd41f0b93cee19937d0be2aab2f173c748029e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/prefetch-4.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-4.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,6 @@\n /* The loop rolls too little, hence the prefetching would not be useful.  */\n \n-/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-O2 -fprefetch-loop-arrays -march=athlon -fdump-tree-optimized\" } */\n \n int xxx[20];"}, {"sha": "1ccf50693eb2caf0756a3d5a13d7c3c2e398f2d8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/prefetch-5.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-5.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-O2 --param min-insn-to-prefetch-ratio=5 -fprefetch-loop-arrays -march=athlon -fdump-tree-aprefetch-details\" } */\n \n /* These are common idioms for writing variable-length arrays at the end"}, {"sha": "176830580a9e216d02ba84d0904a9713ee881a73", "filename": "gcc/testsuite/gcc.dg/tree-ssa/prefetch-6.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-6.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-require-effective-target sse2 } */\n /* { dg-options \"-O2 -fprefetch-loop-arrays -march=athlon -msse2 -mfpmath=sse --param simultaneous-prefetches=100 --param min-insn-to-prefetch-ratio=6 -fdump-tree-aprefetch-details\" } */\n "}, {"sha": "5c469ba00e58bc40c278ece7f6721c263077ae9a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/prefetch-7.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-7.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-require-effective-target sse2 } */\n /* { dg-skip-if \"\" { i?86-*-* x86_64-*-* } { \"-march=*\" } { \"-march=athlon\" } } */\n /* { dg-options \"-O2 -fprefetch-loop-arrays -march=athlon -msse2 -mfpmath=sse --param simultaneous-prefetches=100 -fdump-tree-aprefetch-details -fdump-tree-optimized\" } */"}, {"sha": "705d35fe24f895acca8261d5e9777a3c7d517405", "filename": "gcc/testsuite/gcc.dg/tree-ssa/prefetch-8.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-8.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-require-effective-target sse2 } */\n /* { dg-skip-if \"\" { i?86-*-* x86_64-*-* } { \"-march=*\" } { \"-march=athlon\" } } */\n /* { dg-options \"-O2 -fprefetch-loop-arrays -march=athlon -msse2 -mfpmath=sse --param simultaneous-prefetches=100 -fdump-tree-aprefetch-details -fdump-tree-optimized\" } */"}, {"sha": "f78bea3a49b8e2e271815e0db84473595fb1b3b7", "filename": "gcc/testsuite/gcc.dg/tree-ssa/prefetch-9.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fprefetch-9.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-require-effective-target sse2 } */\n /* { dg-skip-if \"\" { i?86-*-* x86_64-*-* } { \"-march=*\" } { \"-march=athlon\" } } */\n /* { dg-options \"-O2 -fprefetch-loop-arrays -march=athlon -msse2 -mfpmath=sse --param simultaneous-prefetches=100 -fdump-tree-aprefetch-details -fdump-tree-optimized\" } */"}, {"sha": "3cac558718d3e5b2b3e36ea5c2c5f2a8f1394ab2", "filename": "gcc/testsuite/gcc.dg/tree-ssa/stdarg-2.c", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -21,11 +21,11 @@ f1 (int i, ...)\n   va_start (ap, i);\n   va_end (ap);\n }\n-/* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save 0 GPR units and 0 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save 0 GPR units and 0 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save 0 GPR units and 0 FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save 0 GPR units and 0 FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save 0 GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save 0 GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save 0 GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save 0 GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save 0 GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -41,11 +41,11 @@ f2 (int i, ...)\n }\n /* Assume the counters can be number of registers or bytes on 32-bit\n    architecture or bytes on 64-bit architecture.  */\n-/* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save \\[148\\] GPR units and 0 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save \\[148\\] GPR units and 0 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save \\[148\\] GPR units and 0 FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save 8 GPR units and 1\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save 1 GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -57,11 +57,11 @@ f3 (int i, ...)\n   d = va_arg (ap, double);\n   va_end (ap);\n }\n-/* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && { powerpc_fprs && ilp32 } } } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 0 GPR units and 1 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 8 GPR units and 2\" \"stdarg\" { target alpha*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save \\[1-9\\]\\[0-9\\]* GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save \\[1-9\\]\\[0-9\\]* GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save \\[1-9\\]\\[0-9\\]* GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save \\[1-9\\]\\[0-9\\]* GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -74,11 +74,11 @@ f4 (int i, ...)\n   foo (i, ap);\n   va_end (ap);\n }\n-/* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -92,11 +92,11 @@ f5 (int i, ...)\n   va_end (ap);\n   va_end (gap);\n }\n-/* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -112,11 +112,11 @@ f6 (int i, ...)\n   bar (x);\n   va_end (ap);\n }\n-/* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save (3|12|24) GPR units and 0 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save (3|12|24) GPR units and 0 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save (3|12|24) GPR units and 0 FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save 24 GPR units and 1\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save 3 GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save (3|12|24) GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save (3|12|24) GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save (3|12|24) GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save (3|12|24) GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -129,11 +129,11 @@ f7 (int i, ...)\n   bar (6);\n   va_end (ap);\n }\n-/* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -148,11 +148,11 @@ f8 (int i, ...)\n   bar (x);\n   va_end (ap);\n }\n-/* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -165,11 +165,11 @@ f9 (int i, ...)\n   bar (6);\n   va_end (ap);\n }\n-/* { dg-final { scan-tree-dump \"f9: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f9: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f9: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f9: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f9: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f9: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f9: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f9: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f9: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -184,11 +184,11 @@ f10 (int i, ...)\n   bar (x);\n   va_end (ap);\n }\n-/* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -204,11 +204,11 @@ f11 (int i, ...)\n   bar (x);\n   va_end (ap);\n }\n-/* { dg-final { scan-tree-dump \"f11: va_list escapes 0, needs to save (3|12|24) GPR units and 0 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f11: va_list escapes 0, needs to save (3|12|24) GPR units and 0 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f11: va_list escapes 0, needs to save (3|12|24) GPR units and 0 FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f11: va_list escapes 0, needs to save 24 GPR units and 1\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f11: va_list escapes 0, needs to save 3 GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f11: va_list escapes 0, needs to save (3|12|24) GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f11: va_list escapes 0, needs to save (3|12|24) GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f11: va_list escapes 0, needs to save (3|12|24) GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f11: va_list escapes 0, needs to save (3|12|24) GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -224,11 +224,11 @@ f12 (int i, ...)\n   bar (x);\n   va_end (ap);\n }\n-/* { dg-final { scan-tree-dump \"f12: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f12: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && { powerpc_fprs && ilp32 } } } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 0, needs to save 24 GPR units and 2\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 0, needs to save 0 GPR units and 3 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f12: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f12: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -244,11 +244,11 @@ f13 (int i, ...)\n   bar (x);\n   va_end (ap);\n }\n-/* { dg-final { scan-tree-dump \"f13: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f13: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f13: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && { powerpc_fprs && ilp32 } } } } } */\n /* { dg-final { scan-tree-dump \"f13: va_list escapes 0, needs to save 24 GPR units and 2\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f13: va_list escapes 0, needs to save 0 GPR units and 3 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f13: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f13: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f13: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f13: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -264,11 +264,11 @@ f14 (int i, ...)\n   bar (x);\n   va_end (ap);\n }\n-/* { dg-final { scan-tree-dump \"f14: va_list escapes 0, needs to save \\[148\\] GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f14: va_list escapes 0, needs to save \\[148\\] GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f14: va_list escapes 0, needs to save \\[148\\] GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && { powerpc_fprs && ilp32 } } } } } */\n /* { dg-final { scan-tree-dump \"f14: va_list escapes 0, needs to save 24 GPR units and 3\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f14: va_list escapes 0, needs to save 1 GPR units and 2 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f14: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f14: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f14: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f14: va_list escapes 0, needs to save \\[1-9]\\[0-9\\]* GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -288,11 +288,11 @@ f15 (int i, ...)\n   f15_1 (ap);\n   va_end (ap);\n }\n-/* { dg-final { scan-tree-dump \"f15: va_list escapes 0, needs to save \\[148\\] GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f15: va_list escapes 0, needs to save \\[148\\] GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f15: va_list escapes 0, needs to save \\[148\\] GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && { powerpc_fprs && ilp32 } } } } } */\n /* { dg-final { scan-tree-dump \"f15: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f15: va_list escapes 0, needs to save 1 GPR units and 2 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump-not \"f15: va_list escapes 0, needs to save 0 GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump-not \"f15: va_list escapes 0, needs to save 0 GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump-not \"f15: va_list escapes 0, needs to save 0 GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump-not \"f15: va_list escapes 0, needs to save 0 GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n /* { dg-final { cleanup-tree-dump \"stdarg\" } } */"}, {"sha": "d9c55a87e8c4cbf0a4b90f8b3816ead799f61f8d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/stdarg-3.c", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-3.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -20,11 +20,11 @@ f1 (int i, ...)\n   x = va_arg (gap, long);\n   va_end (gap);\n }\n-/* { dg-final { scan-tree-dump \"f1: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f1: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f1: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f1: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -35,11 +35,11 @@ f2 (int i, ...)\n   bar (i);\n   va_end (gap);\n }\n-/* { dg-final { scan-tree-dump \"f2: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f2: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f2: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f2: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -53,11 +53,11 @@ f3 (int i, ...)\n   x = va_arg (aps[4], long);\n   va_end (aps[4]);\n }\n-/* { dg-final { scan-tree-dump \"f3: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f3: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f3: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f3: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -69,11 +69,11 @@ f4 (int i, ...)\n   bar (i);\n   va_end (aps[4]);\n }\n-/* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -85,11 +85,11 @@ f5 (int i, ...)\n   foo (i, aps[4]);\n   va_end (aps[4]);\n }\n-/* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -103,11 +103,11 @@ f6 (int i, ...)\n   x = va_arg (a.g, long);\n   va_end (a.g);\n }\n-/* { dg-final { scan-tree-dump \"f6: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f6: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f6: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f6: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -119,11 +119,11 @@ f7 (int i, ...)\n   bar (i);\n   va_end (a.g);\n }\n-/* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -135,11 +135,11 @@ f8 (int i, ...)\n   foo (i, a.g);\n   va_end (a.g);\n }\n-/* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f8: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -151,11 +151,11 @@ f10 (int i, ...)\n   x = va_arg (a.h[1], long);\n   va_end (a.h[1]);\n }\n-/* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f10: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -167,11 +167,11 @@ f11 (int i, ...)\n   bar (i);\n   va_end (a.h[1]);\n }\n-/* { dg-final { scan-tree-dump \"f11: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f11: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f11: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f11: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f11: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f11: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f11: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f11: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f11: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -183,11 +183,11 @@ f12 (int i, ...)\n   foo (i, a.h[1]);\n   va_end (a.h[1]);\n }\n-/* { dg-final { scan-tree-dump \"f12: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f12: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 1, needs to save all GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f12: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f12: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f12: va_list escapes 1, needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n /* { dg-final { cleanup-tree-dump \"stdarg\" } } */"}, {"sha": "2d2d6d0bd30999ffdf8ed8803e23105a10dcacc4", "filename": "gcc/testsuite/gcc.dg/tree-ssa/stdarg-4.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-4.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -23,11 +23,11 @@ f1 (int i, ...)\n     x = va_arg (ap, long);\n   va_end (ap);\n }\n-/* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save all GPR units and 0 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save all GPR units and 0 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { x32 || { ! { ia32 } } } } } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save all GPR units and 0 FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save all GPR units and 1\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save all GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f1: va_list escapes \\[01\\], needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f1: va_list escapes \\[01\\], needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes \\[01\\], needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes \\[01\\], needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -40,11 +40,11 @@ f2 (int i, ...)\n     d = va_arg (ap, double);\n   va_end (ap);\n }\n-/* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save 0 GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save 0 GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { x32 || { ! { ia32 } } } } } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save 0 GPR units and all FPR units\" \"stdarg\" { target { powerpc*-*-linux* && { powerpc_fprs && ilp32 } } } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save all GPR units and 2\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save 0 GPR units and all FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f2: va_list escapes \\[01\\], needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f2: va_list escapes \\[01\\], needs to save all GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes \\[01\\], needs to save all GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes \\[01\\], needs to save all GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -63,11 +63,11 @@ f3 (int i, ...)\n       bar (x);\n     }\n }\n-/* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save \\[148\\] GPR units and 0 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save \\[148\\] GPR units and 0 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save \\[148\\] GPR units and 0 FPR units\" \"stdarg\" { target { powerpc*-*-linux* && ilp32 } } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 8 GPR units and 1\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 1 GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n \n@@ -84,11 +84,11 @@ f4 (int i, ...)\n       bar (d + 2.5);\n     }\n }\n-/* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 0 GPR units and \\[1-9\\]\\[0-9\\]* FPR units\" \"stdarg\" { target { powerpc*-*-linux* && { powerpc_fprs && ilp32 } } } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 8 GPR units and 2\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 0 GPR units and 1 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n-/* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } } */\n+/* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target ia64-*-* } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save \\[148\\] GPR units\" \"stdarg\" { target { powerpc*-*-* && lp64 } } } } */\n /* { dg-final { cleanup-tree-dump \"stdarg\" } } */"}, {"sha": "2de9e829b8ce8f271af3948007c12dfd3f9d40cd", "filename": "gcc/testsuite/gcc.dg/tree-ssa/stdarg-5.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstdarg-5.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -22,7 +22,7 @@ f1 (int i, ...)\n     s1 = va_arg (ap, struct S1);\n   va_end (ap);\n }\n-/* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save 0 GPR units and 0 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save 0 GPR units and 0 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save all GPR units and 1\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f1: va_list escapes 0, needs to save all GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n \n@@ -35,7 +35,7 @@ f2 (int i, ...)\n     s2 = va_arg (ap, struct S2);\n   va_end (ap);\n }\n-/* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save all GPR units and all FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save all GPR units and 1\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f2: va_list escapes 0, needs to save all GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n \n@@ -53,7 +53,7 @@ f3 (int i, ...)\n       bar (s1.i);\n     }\n }\n-/* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 0 GPR units and 0 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 0 GPR units and 0 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 32 GPR units and 1\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f3: va_list escapes 0, needs to save 1 GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n \n@@ -71,7 +71,7 @@ f4 (int i, ...)\n       bar (s2.i);\n     }\n }\n-/* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 16 GPR units and 16 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 16 GPR units and 16 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 24 GPR units and 1\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f4: va_list escapes 0, needs to save 2 GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n \n@@ -85,7 +85,7 @@ f5 (int i, ...)\n   va_end (ap);\n   bar (__real__ ci + __imag__ ci);\n }\n-/* { dg-final { scan-tree-dump \"f5: va_list escapes 0, needs to save 16 GPR units and 0 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f5: va_list escapes 0, needs to save 16 GPR units and 0 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 0, needs to save 32 GPR units and 1\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f5: va_list escapes 0, needs to save (4|2) GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n \n@@ -99,7 +99,7 @@ f6 (int i, ...)\n   va_end (ap);\n   bar (__real__ ci + __imag__ cd);\n }\n-/* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save 8 GPR units and 32 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save 8 GPR units and 32 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save 32 GPR units and 3\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f6: va_list escapes 0, needs to save (3|2) GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n \n@@ -113,7 +113,7 @@ f7 (int i, ...)\n   va_end (ap);\n   bar (__real__ cd + __imag__ cd);\n }\n-/* { dg-final { scan-tree-dump \"f7: va_list escapes 0, needs to save 0 GPR units and 64 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && lp64 } } } } */\n+/* { dg-final { scan-tree-dump \"f7: va_list escapes 0, needs to save 0 GPR units and 64 FPR units\" \"stdarg\" { target { { i?86-*-* x86_64-*-* } && { ! { ia32 } } } } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 0, needs to save 32 GPR units and 2\" \"stdarg\" { target alpha*-*-linux* } } } */\n /* { dg-final { scan-tree-dump \"f7: va_list escapes 0, needs to save 2 GPR units and 0 FPR units\" \"stdarg\" { target s390*-*-linux* } } } */\n /* { dg-final { cleanup-tree-dump \"stdarg\" } } */"}, {"sha": "a933102496473bad950e9dcb5b32fe97f63e0beb", "filename": "gcc/testsuite/gcc.dg/tree-ssa/update-unroll-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fupdate-unroll-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fupdate-unroll-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fupdate-unroll-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n /* { dg-options \"-O1 -fprefetch-loop-arrays -march=athlon -fdump-tree-aprefetch-blocks\" } */\n \n int a[10000];"}, {"sha": "e7032891823f9e55c36bb82eca52da37b5bfa2f5", "filename": "gcc/testsuite/gcc.dg/unroll-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Funroll-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Funroll-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funroll-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR optimization/8599 */\n /* { dg-do run } */\n /* { dg-options \"-O2 -funroll-loops\" } */\n-/* { dg-options \"-mtune=k6 -O2 -funroll-loops\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+/* { dg-options \"-mtune=k6 -O2 -funroll-loops\" { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n \n extern void abort (void);"}, {"sha": "a11aa3be21273c9a93dfcef6147b5bf22455a45e", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/x86_64/x86_64-costmodel-vect.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fx86_64-costmodel-vect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fx86_64-costmodel-vect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fx86_64-costmodel-vect.exp?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -22,7 +22,7 @@ load_lib gcc-dg.exp\n \n # Exit immediately if this isn't a x86 target.\n if { (![istarget x86_64-*-*] && ![istarget i?86-*-*])\n-     || ![is-effective-target lp64] } then {\n+     || (![is-effective-target x32] && ![is-effective-target lp64]) } then {\n   return\n }\n "}, {"sha": "638749a5a6892b764edb5cbaa9970478934ae149", "filename": "gcc/testsuite/gcc.misc-tests/i386-pf-3dnow-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-3dnow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-3dnow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-3dnow-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,8 +1,7 @@\n /* Test that the correct data prefetch instructions are generated for i386\n    variants that use 3DNow! prefetch instructions.  */\n \n-/* { dg-do compile { target i?86-*-* x86_64-*-*} } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n extern void exit (int);\n "}, {"sha": "d793437f17529f2fe79a0f24471b0ff7f562b041", "filename": "gcc/testsuite/gcc.misc-tests/i386-pf-athlon-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-athlon-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-athlon-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-athlon-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -2,8 +2,7 @@\n    variants that use 3DNow! prefetchw or SSE prefetch instructions with\n    locality hints.  */\n \n-/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n extern void exit (int);\n "}, {"sha": "04e814d5a9ca07bcc220fe37cc5bde31ceba725c", "filename": "gcc/testsuite/gcc.misc-tests/i386-pf-none-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-none-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-none-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-none-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,8 +1,7 @@\n /* Test that data prefetch instructions are not generated for i386 variants\n    that do not support those instructions.  */\n \n-/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n extern void exit (int);\n "}, {"sha": "3707c7074bec3f44b51bbdb67a172132c69bdd9d", "filename": "gcc/testsuite/gcc.misc-tests/i386-pf-sse-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-sse-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-sse-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-sse-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,8 +1,7 @@\n /* Test that the correct data prefetch instructions are generated for i386\n    variants that use SSE prefetch instructions.  */\n \n-/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && ia32 } } } */\n \n extern void exit (int);\n "}, {"sha": "a083a5d53adfb6a10c27498f8da52b69db6444a9", "filename": "gcc/testsuite/gcc.target/i386/20000609-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20000609-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20000609-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20000609-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O1 -ffast-math -march=i686\" } */\n \n "}, {"sha": "84e136c52f655aa62f3c0bf7bf48d665aa61bff1", "filename": "gcc/testsuite/gcc.target/i386/20000720-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20000720-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20000720-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20000720-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-mpreferred-stack-boundary=2 -march=i586 -O2 -fomit-frame-pointer\" } */\n \n extern void *foo(void *a, const void *b, unsigned c);"}, {"sha": "cbcd4f1f1d68fd12cc9d9620d463a5d24f9ba8c9", "filename": "gcc/testsuite/gcc.target/i386/20000724-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20000724-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20000724-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20000724-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run { target *-*-linux* } } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -fomit-frame-pointer\" } */\n \n extern void abort (void);"}, {"sha": "c1cfe88a4e0f8bdc11ae61c9b4bc8ff2f27f64a5", "filename": "gcc/testsuite/gcc.target/i386/20011107-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20011107-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20011107-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20011107-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -mtune=k6\" } */\n \n void"}, {"sha": "9e85f6f5a2231015a5b19739c06e06459f9f32d1", "filename": "gcc/testsuite/gcc.target/i386/20011119-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20011119-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20011119-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20011119-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* Test for reload failing to eliminate from argp to sp.  */\n /* { dg-do run } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-require-effective-target nonpic } */\n /* { dg-options \"-O2 -fomit-frame-pointer\" } */\n "}, {"sha": "9d7265457d053ec1df30d269fb45d023b309cdb3", "filename": "gcc/testsuite/gcc.target/i386/20020201-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20020201-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20020201-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20020201-3.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* This testcase ICEd because a SFmode variable was given a MMX register\n    for which there is no movsf exists.  */\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -march=i686 -mmmx -fno-strict-aliasing\" } */\n \n struct A { unsigned int a, b; };"}, {"sha": "4d3d256afcca6ffa248d8cbb9410a04cf01bcfbe", "filename": "gcc/testsuite/gcc.target/i386/20020218-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20020218-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20020218-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20020218-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* Verify that X86-64 only SSE registers aren't restored on IA-32.  */\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -msse\" } */\n /* { dg-final { scan-assembler-not \"xmm8\" } } */\n "}, {"sha": "7e1abafd2c99994ba34d2838545ce467a3fcdeb6", "filename": "gcc/testsuite/gcc.target/i386/20020729-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20020729-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20020729-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20020729-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -march=k6\" } */\n \n static inline void *"}, {"sha": "ebde340851137fb122bd93f04a4583cebd694eff", "filename": "gcc/testsuite/gcc.target/i386/20030926-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20030926-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20030926-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20030926-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR optimization/11741  */\n /* { dg-do compile } */\n /* { dg-options \"-O2 -minline-all-stringops\" } */\n-/* { dg-options \"-O2 -minline-all-stringops -march=pentium4\" { target ilp32 } } */\n+/* { dg-options \"-O2 -minline-all-stringops -march=pentium4\" { target ia32 } } */\n \n extern void *memcpy (void *, const void *, __SIZE_TYPE__);\n extern __SIZE_TYPE__ strlen (const char *);"}, {"sha": "ed9dcce84e873cefbe6a916751840f7c8cea91b0", "filename": "gcc/testsuite/gcc.target/i386/20060125-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060125-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060125-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060125-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* PR rtl-optimization/25703 */\n /* { dg-do run } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -mtune=i486\" } */\n \n extern void abort (void);"}, {"sha": "1747a634dc3ade8827fd7dad6988ebec3d4200a8", "filename": "gcc/testsuite/gcc.target/i386/20060125-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060125-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060125-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060125-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* PR rtl-optimization/25703 */\n /* { dg-do run } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -mtune=pentiumpro\" } */\n \n extern void abort (void);"}, {"sha": "374d18aea575f34d8717bfea7b1f67e6d67f6d95", "filename": "gcc/testsuite/gcc.target/i386/20060512-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060512-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060512-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060512-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-std=gnu99 -msse2 -mpreferred-stack-boundary=4\" } */\n /* { dg-require-effective-target sse2 } */\n "}, {"sha": "d3a779cb4e2d76fa960a7bb3323fd2e3fedbad3d", "filename": "gcc/testsuite/gcc.target/i386/20060512-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060512-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060512-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060512-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-std=gnu99 -mpreferred-stack-boundary=4\" } */\n int\n outer_function (int x, int y)"}, {"sha": "3370b9ec25afb2aa727c8f8f4f14e351816644b8", "filename": "gcc/testsuite/gcc.target/i386/20060512-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060512-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060512-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060512-3.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-require-effective-target sse2 } */\n /* { dg-options \"-std=gnu99 -msse2 -mstackrealign -mpreferred-stack-boundary=4\" } */\n "}, {"sha": "bf769379977fb1d88fc628a15b9b1418df14a2b5", "filename": "gcc/testsuite/gcc.target/i386/20060512-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060512-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060512-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060512-4.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-mstackrealign -mpreferred-stack-boundary=4\" } */\n int\n outer_function (int x, int y)"}, {"sha": "c4ea1e7d4ccb671a2f98a894ebd2d2d93c761fe6", "filename": "gcc/testsuite/gcc.target/i386/387-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* Verify that -mno-fancy-math-387 works.  */\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-skip-if \"\" { i?86-*-* x86_64-*-* } { \"-march=*\" } { \"-march=i386\" } } */\n /* { dg-options \"-O -ffast-math -mfpmath=387 -mno-fancy-math-387 -march=i386\" } */\n /* { dg-final { scan-assembler \"call\\t(.*)sin\" } } */"}, {"sha": "8d5dba1f9c5a3010a4736a4ff2d598ace290bf35", "filename": "gcc/testsuite/gcc.target/i386/387-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* Verify that -march overrides -mno-fancy-math-387.  */\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-skip-if \"\" { i?86-*-* x86_64-*-* } { \"-march=*\" } { \"-march=i686\" } } */\n /* { dg-options \"-O -ffast-math -mfpmath=387 -march=i686 -mno-fancy-math-387\" } */\n /* { dg-final { scan-assembler \"fsin\" } } */"}, {"sha": "a39f77a588b5e2db5bb686c14b486ebafef71a25", "filename": "gcc/testsuite/gcc.target/i386/387-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-5.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* Verify that -mno-fancy-math-387 works.  */\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-skip-if \"\" { i?86-*-* x86_64-*-* } { \"-march=*\" } { \"-march=i386\" } } */\n /* { dg-options \"-O -ffast-math -mfpmath=387 -mno-fancy-math-387 -march=i386\" } */\n /* { dg-final { scan-assembler \"call\\t(.*)atan\" } } */"}, {"sha": "f9506ba79e2c1e5568b9d611a7ed001ed50eba7d", "filename": "gcc/testsuite/gcc.target/i386/387-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F387-6.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* Verify that -march overrides -mno-fancy-math-387.  */\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-skip-if \"\" { i?86-*-* x86_64-*-* } { \"-march=*\" } { \"-march=i686\" } } */\n /* { dg-options \"-O -ffast-math -mfpmath=387 -march=i686 -mno-fancy-math-387\" } */\n /* { dg-final { scan-assembler \"fpatan\" } } */"}, {"sha": "3a125f2598e49238b16184e917a6cbcc3e25fde7", "filename": "gcc/testsuite/gcc.target/i386/980312-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F980312-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F980312-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F980312-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do link } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -march=pentiumpro\" } */\n \n extern __inline  double"}, {"sha": "8698aa61c778c4aae44e2b04786fd9950f732a99", "filename": "gcc/testsuite/gcc.target/i386/980313-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F980313-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F980313-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F980313-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do link } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -march=pentiumpro\" } */\n \n extern __inline  double"}, {"sha": "a89dad119a69e42914c986c0e7c631a44bda302f", "filename": "gcc/testsuite/gcc.target/i386/990117-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F990117-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F990117-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F990117-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -march=pentiumpro\" } */\n \n extern __inline  double"}, {"sha": "dd291399242b4be2d63cfd009c855ff046f4e160", "filename": "gcc/testsuite/gcc.target/i386/990424-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F990424-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F990424-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F990424-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -2,7 +2,7 @@\n    with stdcall functions.  */\n \n /* { dg-do run } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options -mpreferred-stack-boundary=4 } */\n \n void __attribute__((stdcall)) foo(int a, int b, int c);"}, {"sha": "295ffacc9bce9425a3faccaa41ddaf5b1363c06c", "filename": "gcc/testsuite/gcc.target/i386/990524-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F990524-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F990524-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F990524-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -march=pentiumpro\" } */\n \n typedef struct t_anim_info {"}, {"sha": "038979a778bd338cc898479b74dae612f102d7ac", "filename": "gcc/testsuite/gcc.target/i386/991129-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F991129-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F991129-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F991129-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* Test against a problem in push_reload.  */\n \n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2\" } */\n \n unsigned long foo (unsigned long long x, unsigned long y)"}, {"sha": "74b603da7f0e09ca850b2ade22e44a35d3e9c7e2", "filename": "gcc/testsuite/gcc.target/i386/991214-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F991214-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F991214-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F991214-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2\" } */\n \n /* Test against a problem with the combiner substituting explicit hard reg"}, {"sha": "2c9f011ceaee6867d76234f3c7b0f9be8a505fb6", "filename": "gcc/testsuite/gcc.target/i386/991230-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F991230-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F991230-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F991230-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O -ffast-math -mtune=i486\" } */\n \n /* Test that floating point greater-than tests are compiled correctly with"}, {"sha": "27623ffd96cc5237a4b91efec2c602ed34902cd6", "filename": "gcc/testsuite/gcc.target/i386/addr-sel-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Faddr-sel-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Faddr-sel-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Faddr-sel-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -2,7 +2,7 @@\n /* Origin: Lev Makhlis <lmakhlis@bmc.com> */\n \n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-require-effective-target nonpic } */\n /* { dg-options \"-O2 -mtune=i686\" } */\n "}, {"sha": "6d46dc5ef733a1152cca0ef7d8fe657deaba7110", "filename": "gcc/testsuite/gcc.target/i386/aggregate-ret1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Faggregate-ret1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Faggregate-ret1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Faggregate-ret1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -3,7 +3,7 @@\n    not pop the stack for the implicit pointer arg when returning a large\n    structure in memory.  */\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n \n struct foo {\n   int a;"}, {"sha": "16e0109ef4f800a491d034484dbb26ca27efafc8", "filename": "gcc/testsuite/gcc.target/i386/aggregate-ret2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Faggregate-ret2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Faggregate-ret2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Faggregate-ret2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -3,7 +3,7 @@\n    pops the stack for the implicit pointer arg when returning a large\n    structure in memory.  */\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n \n struct foo {\n   int a;"}, {"sha": "6f8c758035c5cce26ea62063f06c95663422ad09", "filename": "gcc/testsuite/gcc.target/i386/align-main-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Falign-main-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Falign-main-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Falign-main-3.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* Test for stack alignment with sibcall optimization.  */\n-/* { dg-do compile { target { *-*-linux* && ilp32 } } } */\n+/* { dg-do compile { target { *-*-linux* && ia32 } } } */\n /* { dg-options \"-O2 -mpreferred-stack-boundary=4 -mincoming-stack-boundary=2\" } */\n /* { dg-final { scan-assembler \"andl\\[\\\\t \\]*\\\\$-16,\\[\\\\t \\]*%\\[re\\]?sp\" } } */\n /* { dg-final { scan-assembler \"call\\[\\\\t \\]*foo\" } } */"}, {"sha": "6aa7063f5471ed6576d5131e2881e19b338b05a1", "filename": "gcc/testsuite/gcc.target/i386/amd64-abi-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-mno-sse\" } */\n \n double foo(void) { return 0; }\t/* { dg-error \"SSE disabled\" } */"}, {"sha": "acc2a9e6e1923efb1436b49e27dac9c89ebdbd8b", "filename": "gcc/testsuite/gcc.target/i386/amd64-abi-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,5 @@\n /* PR target/26223 */\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-mno-80387\" } */\n long double foo(long double x) { return x; } /* { dg-error \"x87 disabled\" } */\n long double bar(long double x) { return x; }"}, {"sha": "e88fde6affa02db2d24fc80112a00f25c9590389", "filename": "gcc/testsuite/gcc.target/i386/amd64-abi-4.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-4.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do run { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -mno-sse\" } */\n \n #include <stdarg.h>"}, {"sha": "da2a14ee42c4d858830035771e437f92110778bf", "filename": "gcc/testsuite/gcc.target/i386/amd64-abi-5.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-5.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do run { target { ! { ia32 } } } } */\n /* { dg-options \"-O2\" } */\n \n #include <stdarg.h>"}, {"sha": "6d076ad381ee595c4e699c8120ecc06d4371bf41", "filename": "gcc/testsuite/gcc.target/i386/amd64-abi-6.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Famd64-abi-6.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do run { target { ! { ia32 } } } } */\n /* { dg-options \"-O2\" } */\n \n #include <stdarg.h>"}, {"sha": "999c5767966dccbba76f17b2f4f84c0befe241e3", "filename": "gcc/testsuite/gcc.target/i386/asm-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fasm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fasm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fasm-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-m32\" } */\n \n register unsigned int EAX asm (\"r14\"); /* { dg-error \"register name\" } */"}, {"sha": "ec37898ab73034b4accbd8802da609b1b69bf580", "filename": "gcc/testsuite/gcc.target/i386/asm-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fasm-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fasm-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fasm-3.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* PR inline-asm/6806 */\n /* { dg-do run } */\n-/* { dg-skip-if \"\" { ilp32 && { ! nonpic } } { \"*\" } { \"\" } } */\n+/* { dg-skip-if \"\" { ia32 && { ! nonpic } } { \"*\" } { \"\" } } */\n /* { dg-options \"-O2\" } */\n \n extern void abort (void);"}, {"sha": "d412980238c56daa398d447ecade8f6ed847ea28", "filename": "gcc/testsuite/gcc.target/i386/asm-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fasm-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fasm-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fasm-5.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* PR inline-asm/11676 */\n /* { dg-do run } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2\" } */\n \n extern void abort (void);"}, {"sha": "405eda50105eb144cb9613dc97eb1ec19d432bd7", "filename": "gcc/testsuite/gcc.target/i386/attributes-error.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fattributes-error.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fattributes-error.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fattributes-error.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n \n void foo1(int i, int j) __attribute__((fastcall, cdecl)); /* { dg-error \"not compatible\" } */\n void foo2(int i, int j) __attribute__((fastcall, stdcall)); /* { dg-error \"not compatible\" } */"}, {"sha": "f462c63651523baa888dcf2892a982b0d6a08b6f", "filename": "gcc/testsuite/gcc.target/i386/avx-vcvtsd2si-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vcvtsd2si-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vcvtsd2si-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vcvtsd2si-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,5 @@\n-/* { dg-do run } */\n+/* { dg-do run { target { ! { ia32 } } } } */\n /* { dg-require-effective-target avx } */\n-/* { dg-require-effective-target lp64 } */\n /* { dg-options \"-O2 -mavx\" } */\n \n #define CHECK_H \"avx-check.h\""}, {"sha": "36f411e59bdae5c97457f732086450e1cac64d2f", "filename": "gcc/testsuite/gcc.target/i386/avx-vcvtsi2sd-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vcvtsi2sd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vcvtsi2sd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vcvtsi2sd-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,5 @@\n-/* { dg-do run } */\n+/* { dg-do run { target { ! { ia32 } } } } */\n /* { dg-require-effective-target avx } */\n-/* { dg-require-effective-target lp64 } */\n /* { dg-options \"-O2 -mavx\" } */\n \n #define CHECK_H \"avx-check.h\""}, {"sha": "8dc0b35c18c5a0ccb0dd73714debfedafb08929f", "filename": "gcc/testsuite/gcc.target/i386/avx-vcvtsi2ss-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vcvtsi2ss-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vcvtsi2ss-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vcvtsi2ss-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,5 @@\n-/* { dg-do run } */\n+/* { dg-do run { target { ! { ia32 } } } } */\n /* { dg-require-effective-target avx } */\n-/* { dg-require-effective-target lp64 } */\n /* { dg-options \"-O2 -mavx\" } */\n \n #define CHECK_H \"avx-check.h\""}, {"sha": "b9afab7f6a5af3a7fa6c086487665d2e9b551175", "filename": "gcc/testsuite/gcc.target/i386/avx-vcvtss2si-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vcvtss2si-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vcvtss2si-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vcvtss2si-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,5 @@\n-/* { dg-do run } */\n+/* { dg-do run { target { ! { ia32 } } } } */\n /* { dg-require-effective-target avx } */\n-/* { dg-require-effective-target lp64 } */\n /* { dg-options \"-O2 -mavx\" } */\n \n #define CHECK_H \"avx-check.h\""}, {"sha": "84bdb9f3af8a76edb7adaa302fce005e4bf630ff", "filename": "gcc/testsuite/gcc.target/i386/avx-vcvttsd2si-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vcvttsd2si-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vcvttsd2si-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vcvttsd2si-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,5 @@\n-/* { dg-do run } */\n+/* { dg-do run { target { ! { ia32 } } } } */\n /* { dg-require-effective-target avx } */\n-/* { dg-require-effective-target lp64 } */\n /* { dg-options \"-O2 -mavx\" } */\n \n #define CHECK_H \"avx-check.h\""}, {"sha": "b3c68eaf6932a78c2dc5716494247639076a203f", "filename": "gcc/testsuite/gcc.target/i386/avx-vcvttss2si-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vcvttss2si-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vcvttss2si-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vcvttss2si-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,5 @@\n-/* { dg-do run } */\n+/* { dg-do run { target { ! { ia32 } } } } */\n /* { dg-require-effective-target avx } */\n-/* { dg-require-effective-target lp64 } */\n /* { dg-options \"-O2 -mavx\" } */\n \n #define CHECK_H \"avx-check.h\""}, {"sha": "515ee418cba016ac48ad62dd8f27cab9670c19e2", "filename": "gcc/testsuite/gcc.target/i386/avx-vinsertps-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vinsertps-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vinsertps-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vinsertps-3.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target ilp32 } } */\n+/* { dg-do run { target ia32 } } */\n /* { dg-require-effective-target avx } */\n /* { dg-options \"-O2 -mfpmath=sse -mavx -mtune=geode\" } */\n "}, {"sha": "02b0d2229da795e77f06cf458afb409656e24fc2", "filename": "gcc/testsuite/gcc.target/i386/avx-vmovd-2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vmovd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vmovd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vmovd-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do run } */\n /* { dg-require-effective-target avx } */\n-/* { dg-require-effective-target lp64 } */\n /* { dg-options \"-O2 -mavx\" } */\n \n #define CHECK_H \"avx-check.h\""}, {"sha": "8306d39cc3b51b5d78fc5e09e5a66290f090ea61", "filename": "gcc/testsuite/gcc.target/i386/avx-vmovq-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vmovq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vmovq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vmovq-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,5 @@\n-/* { dg-do run } */\n+/* { dg-do run { target { ! { ia32 } } } } */\n /* { dg-require-effective-target avx } */\n-/* { dg-require-effective-target lp64 } */\n /* { dg-options \"-O2 -mavx\" } */\n \n #define CHECK_H \"avx-check.h\""}, {"sha": "a6d624749ada6e96694976d154cda6962a47e5ab", "filename": "gcc/testsuite/gcc.target/i386/avx-vmovq-3.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vmovq-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vmovq-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vmovq-3.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,5 @@\n-/* { dg-do run } */\n+/* { dg-do run { target { ! { ia32 } } } } */\n /* { dg-require-effective-target avx } */\n-/* { dg-require-effective-target lp64 } */\n /* { dg-options \"-O2 -mavx\" } */\n \n #define CHECK_H \"avx-check.h\""}, {"sha": "59e70b2d85491c9847d7dedb717600068598d59d", "filename": "gcc/testsuite/gcc.target/i386/avx-vpextrq-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpextrq-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpextrq-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpextrq-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,5 @@\n-/* { dg-do run } */\n+/* { dg-do run { target { ! { ia32 } } } } */\n /* { dg-require-effective-target avx } */\n-/* { dg-require-effective-target lp64 } */\n /* { dg-options \"-O2 -mavx\" } */\n \n #define CHECK_H \"avx-check.h\""}, {"sha": "595fc1baa397779274d3e988579d6fa0d2b98f14", "filename": "gcc/testsuite/gcc.target/i386/avx-vpinsrq-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpinsrq-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpinsrq-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vpinsrq-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,5 @@\n-/* { dg-do run } */\n+/* { dg-do run { target { ! { ia32 } } } } */\n /* { dg-require-effective-target avx } */\n-/* { dg-require-effective-target lp64 } */\n /* { dg-options \"-O2 -mavx\" } */\n \n #define CHECK_H \"avx-check.h\""}, {"sha": "095640a5b9c52e4749e4d939470de38a0b25a2fe", "filename": "gcc/testsuite/gcc.target/i386/avx-vzeroupper-16.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-16.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -mavx -mabi=ms -mtune=generic -dp\" } */\n \n typedef float __m256 __attribute__ ((__vector_size__ (32), __may_alias__));"}, {"sha": "ef293b3d633ba6668d465e556c5572fe8e036f08", "filename": "gcc/testsuite/gcc.target/i386/avx-vzeroupper-17.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-17.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -mavx -mabi=ms -mtune=generic -dp\" } */\n \n typedef float __m256 __attribute__ ((__vector_size__ (32), __may_alias__));"}, {"sha": "046b7ef1f8ebe79cf9fa8587cd2b284eda75e38c", "filename": "gcc/testsuite/gcc.target/i386/avx-vzeroupper-18.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-vzeroupper-18.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O0 -mavx -mabi=ms -mtune=generic -dp\" } */\n \n typedef float __m256 __attribute__ ((__vector_size__ (32), __may_alias__));"}, {"sha": "00b7bfd716ee454be7f94069f12376a65c5f283d", "filename": "gcc/testsuite/gcc.target/i386/bitfield1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbitfield1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbitfield1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbitfield1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n // Test for bitfield alignment in structs on IA-32\n // { dg-do run }\n-// { dg-require-effective-target ilp32 }\n+// { dg-require-effective-target ia32 }\n // { dg-options \"-O2\" }\n // { dg-options \"-mno-align-double -mno-ms-bitfields\" { target i?86-*-interix* i?86-*-cygwin* i?86-*-mingw*} }\n "}, {"sha": "e400598920a94175b529da4479abd45f508c2e9b", "filename": "gcc/testsuite/gcc.target/i386/bitfield2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbitfield2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbitfield2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbitfield2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n // Test for bitfield alignment in structs on IA-32\n // { dg-do run }\n-// { dg-require-effective-target ilp32 }\n+// { dg-require-effective-target ia32 }\n // { dg-options \"-O2\" }\n // { dg-options \"-mno-align-double -mno-ms-bitfields\" { target i?86-*-interix* i?86-*-cygwin* i?86-*-mingw* } }\n "}, {"sha": "56f73876d0c4c44eab8121c1495c30db5b52c778", "filename": "gcc/testsuite/gcc.target/i386/bmi-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 }  } } } */\n /* { dg-options \"-O2 -mbmi \" } */\n /* { dg-final { scan-assembler \"andn\\[^\\\\n]*(%|)rax\" } } */\n /* { dg-final { scan-assembler \"bextr\\[^\\\\n]*(%|)rax\" } } */"}, {"sha": "546a593c8ffc77fe7cdd4aaa870e561b1b05e2d5", "filename": "gcc/testsuite/gcc.target/i386/bmi-5.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbmi-5.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do link } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do link { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -mbmi\" } */\n \n #include <x86intrin.h>"}, {"sha": "91923a2dffca4452c2416c43306d77373b13649a", "filename": "gcc/testsuite/gcc.target/i386/builtin-unreachable.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin-unreachable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin-unreachable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin-unreachable.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* This should return 1 without setting up a stack frame or\n    jumping.  */\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -fomit-frame-pointer\" } */\n int h (char *p)\n {"}, {"sha": "36dd80da9106a60793a1750e4838763453791ed0", "filename": "gcc/testsuite/gcc.target/i386/cleanup-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcleanup-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcleanup-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcleanup-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do run { target *-*-linux* } } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do run { target { *-*-linux* && { ! { ia32 } } } } } */\n /* { dg-options \"-fexceptions -fnon-call-exceptions -fasynchronous-unwind-tables -O2\" } */\n /* Test complex CFA value expressions.  */\n "}, {"sha": "1a70688d743788bcbd860d8981acb975844165ea", "filename": "gcc/testsuite/gcc.target/i386/clobbers.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fclobbers.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fclobbers.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fclobbers.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -16,7 +16,7 @@ int main ()\n \t   Ditto for any x86 system that is ilp32 && pic.\n \t*/\n #if !(defined (__MACH__))\n-#if ! defined (__PIC__) || defined (__LP64__)\n+#if ! defined (__PIC__) || defined (__x86_64__)\n         __asm__ (\"movl $1,%0\\n\\txorl %%ebx,%%ebx\" : \"=r\" (i) : : \"ebx\");\n         if (i != 1)\n                 abort ();"}, {"sha": "2d95c25da0f6edd3854fcd0a0b91e7eaed7ffb00", "filename": "gcc/testsuite/gcc.target/i386/cmov8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcmov8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcmov8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcmov8.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* PR target/36936 */\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -march=i686\" } */\n /* { dg-final { scan-assembler \"cmov\\[^8\\]\" } } */\n "}, {"sha": "a78017aa2c556dae24adeb243e0cf68c1b0d38af", "filename": "gcc/testsuite/gcc.target/i386/cmpxchg16b-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcmpxchg16b-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcmpxchg16b-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcmpxchg16b-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -mcx16\" } */\n \n typedef int TItype __attribute__ ((mode (TI)));"}, {"sha": "e4d71c21c472ce2693d2441a172f0116020e695c", "filename": "gcc/testsuite/gcc.target/i386/compress-float-387-pic.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcompress-float-387-pic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcompress-float-387-pic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcompress-float-387-pic.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-require-effective-target fpic } */\n /* { dg-options \"-O2 -march=pentium4 -mtune=prescott -mfpmath=387 -fpic\" } */\n double foo (double x) {"}, {"sha": "03a834d2b3c1e11f4f08cfb34b272d687c20f77d", "filename": "gcc/testsuite/gcc.target/i386/compress-float-387.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcompress-float-387.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcompress-float-387.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcompress-float-387.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -march=pentium4 -mtune=prescott -mfpmath=387\" } */\n double foo (double x) {\n   return x + 1.75;"}, {"sha": "ef024dd0b01bfbd4b1e02c83feee1c447315c1be", "filename": "gcc/testsuite/gcc.target/i386/compress-float-sse-pic.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcompress-float-sse-pic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcompress-float-sse-pic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcompress-float-sse-pic.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-require-effective-target fpic } */\n /* { dg-options \"-O2 -march=pentium4 -mtune=prescott -mfpmath=sse -fpic\" } */\n double foo (double x) {"}, {"sha": "c56be1300ee4ffa2e10e26f10397873e3a437c8b", "filename": "gcc/testsuite/gcc.target/i386/compress-float-sse.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcompress-float-sse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcompress-float-sse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcompress-float-sse.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -march=pentium4 -mtune=prescott -mfpmath=sse\" } */\n double foo (double x) {\n   return x + 1.75;"}, {"sha": "678cfd5a45ae9e74142bb0b594529c96f03da5b7", "filename": "gcc/testsuite/gcc.target/i386/crc32-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcrc32-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcrc32-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcrc32-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -mcrc32\" } */\n-/* { dg-final { scan-assembler \"crc32q\\[^\\\\n\\]*rax\" { target lp64 } } } */\n+/* { dg-final { scan-assembler \"crc32q\\[^\\\\n\\]*rax\" { target { ! { ia32 } } } } } */\n \n unsigned long long\n crc32d (unsigned long long x, unsigned long long y)"}, {"sha": "7518a45269c7e5e6d671b3819bb50258168dc85d", "filename": "gcc/testsuite/gcc.target/i386/crc32-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcrc32-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcrc32-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fcrc32-3.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -mcrc32\" } */\n /* { dg-final { scan-assembler \"__builtin_ia32_crc32di\" } } */\n "}, {"sha": "de4a1fb9399dcbea46fc13a7cf7839e4ce158f9e", "filename": "gcc/testsuite/gcc.target/i386/divmod-7.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fdivmod-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fdivmod-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fdivmod-7.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,5 @@\n-/* { dg-do compile } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -m8bit-idiv\" } */\n-/* { dg-require-effective-target lp64 } */\n \n extern void abort (void);\n "}, {"sha": "eb09a6d7b2c006b9d83b2a4493d24504eb89c5c8", "filename": "gcc/testsuite/gcc.target/i386/divmod-8.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fdivmod-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fdivmod-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fdivmod-8.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -m8bit-idiv\" } */\n \n extern void foo (long long, long long, long long, long long,"}, {"sha": "3f33f6b21ac08401e362b259f299e62686e85439", "filename": "gcc/testsuite/gcc.target/i386/fastcall-sseregparm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffastcall-sseregparm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffastcall-sseregparm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffastcall-sseregparm.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-mpreferred-stack-boundary=4 -msse\" } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-require-effective-target sse } */\n \n #include \"sse-check.h\""}, {"sha": "2d9c5c73a97058ac234fd83daa4344ec1c072130", "filename": "gcc/testsuite/gcc.target/i386/fma3-builtin.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma3-builtin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma3-builtin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma3-builtin.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,8 +1,7 @@\n /* Test that the compiler properly generates floating point multiply\n    and add instructions FMA3 systems.  */\n \n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -mfma -mno-fma4\" } */\n \n #ifndef __FP_FAST_FMAF"}, {"sha": "f18f97bf3c77c71125b341d88191612ad9eee34d", "filename": "gcc/testsuite/gcc.target/i386/fma3-fma.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma3-fma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma3-fma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma3-fma.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,8 +1,7 @@\n /* Test that the compiler properly optimizes floating point multiply\n    and add instructions FMA3 systems.  */\n \n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -mfma -mno-fma4\" } */\n \n extern void exit (int);"}, {"sha": "edaa21a2d3aad308722e72f564f152e969903b53", "filename": "gcc/testsuite/gcc.target/i386/fma4-256-vector.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-256-vector.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-256-vector.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-256-vector.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,8 +1,7 @@\n /* Test that the compiler properly optimizes floating point multiply and add\n    instructions vector into vfmaddps on FMA4 systems.  */\n \n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -mfma4 -ftree-vectorize -mtune=generic\" } */\n \n extern void exit (int);"}, {"sha": "7135cc93393cbf8d0ef05c3b34547078a7b5e399", "filename": "gcc/testsuite/gcc.target/i386/fma4-builtin.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-builtin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-builtin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-builtin.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,8 +1,7 @@\n /* Test that the compiler properly generates floating point multiply\n    and add instructions FMA4 systems.  */\n \n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -mfma4\" } */\n \n #ifndef __FP_FAST_FMAF"}, {"sha": "c15be1edace91c81010137a26077212024f26c61", "filename": "gcc/testsuite/gcc.target/i386/fma4-fma-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-fma-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-fma-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-fma-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -2,8 +2,7 @@\n    and add instructions into vfmaddss, vfmsubss, vfnmaddss,\n    vfnmsubss on FMA4 systems.  */\n \n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -funsafe-math-optimizations -mfma4\" } */\n \n extern void exit (int);"}, {"sha": "63b35dc4bcb9a93c3a75487cabc8a9d46daa22f4", "filename": "gcc/testsuite/gcc.target/i386/fma4-fma.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-fma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-fma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-fma.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -2,8 +2,7 @@\n    and add instructions into vfmaddss, vfmsubss, vfnmaddss,\n    vfnmsubss on FMA4 systems.  */\n \n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -mfma4\" } */\n \n extern void exit (int);"}, {"sha": "d8b0d0813bc6a85d18e34988e2abb52024e4145e", "filename": "gcc/testsuite/gcc.target/i386/fma4-vector-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-vector-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-vector-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-vector-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -mfma4 -ftree-vectorize -mtune=generic\" } */\n \n float r[256], s[256];"}, {"sha": "db5ffdd3391c88efb3893f14c998522e16bf71c4", "filename": "gcc/testsuite/gcc.target/i386/fma4-vector.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-vector.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-vector.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma4-vector.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,8 +1,7 @@\n /* Test that the compiler properly optimizes floating point multiply and add\n    instructions vector into vfmaddps on FMA4 systems.  */\n \n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -mfma4 -ftree-vectorize -mtune=generic\" } */\n \n extern void exit (int);"}, {"sha": "6eceac2a5a74338f5b2f374f385f18f8068eeb2f", "filename": "gcc/testsuite/gcc.target/i386/funcspec-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -2,7 +2,7 @@\n    32-bit, which does not generate SSE2 by default, but still generate 387 code\n    for a function that doesn't use attribute((option)).  */\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-skip-if \"\" { i?86-*-* x86_64-*-* } { \"-march=*\" } { \"-march=i386\" } } */\n /* { dg-options \"-O3 -ftree-vectorize -march=i386\" } */\n /* { dg-final { scan-assembler \"addps\\[ \\t\\]\" } } */"}, {"sha": "de39ff00e7180a7b47920b37ec88aa673eccabab", "filename": "gcc/testsuite/gcc.target/i386/funcspec-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-10.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* PR target/36936 */\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -march=i686\" } */\n /* { dg-final { scan-assembler-not \"cmov\" } } */\n "}, {"sha": "7c39f4cd2a1edac40e112556236b417ff09b312b", "filename": "gcc/testsuite/gcc.target/i386/funcspec-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-11.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* PR target/36936 */\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -march=i386\" } */\n /* { dg-final { scan-assembler \"cmov\" } } */\n "}, {"sha": "88c14b29b28b12b85089fa81eed1bef31bb31c84", "filename": "gcc/testsuite/gcc.target/i386/funcspec-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,5 @@\n /* Test whether using target specific options, we can generate FMA4 code.  */\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -march=k8\" } */\n \n extern void exit (int);"}, {"sha": "8dd17e5ab0937fb2326d53cc68c6afd465c60365", "filename": "gcc/testsuite/gcc.target/i386/funcspec-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-5.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* Test whether all of the 32-bit function specific options are accepted\n    without error.  */\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n \n extern void test_abm (void)\t\t\t__attribute__((__target__(\"abm\")));\n extern void test_aes (void)\t\t\t__attribute__((__target__(\"aes\")));"}, {"sha": "62818d902f90c89b57b42b2cea8e2715d12ee093", "filename": "gcc/testsuite/gcc.target/i386/funcspec-6.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffuncspec-6.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,6 @@\n /* Test whether all of the 64-bit function specific options are accepted\n    without error.  */\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n \n extern void test_abm (void)\t\t\t__attribute__((__target__(\"abm\")));\n extern void test_aes (void)\t\t\t__attribute__((__target__(\"aes\")));"}, {"sha": "6d6ce992b1feacd32975c01ebe0c7d42a5d877dd", "filename": "gcc/testsuite/gcc.target/i386/gcc-have-sync-compare-and-swap-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do preprocess } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-skip-if \"\" { i?86-*-* x86_64-*-* } { \"-march=*\" } { \"-march=i386\" } } */\n /* { dg-options \"-march=i386\" } */\n "}, {"sha": "08c4e0b854fa375ac9707e8b6e1749e3f6ff3342", "filename": "gcc/testsuite/gcc.target/i386/gcc-have-sync-compare-and-swap-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do preprocess } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-skip-if \"\" { i?86-*-* x86_64-*-* } { \"-march=*\" } { \"-march=i486\" } } */\n /* { dg-options \"-march=i486\" } */\n "}, {"sha": "40dd9357fe3695b1aac562025072bbd8c7251ffb", "filename": "gcc/testsuite/gcc.target/i386/gcc-have-sync-compare-and-swap-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-3.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do preprocess } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-march=i586\" } */\n \n #ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1"}, {"sha": "ab250ddfabeee10ccc83b884a52603813bafce0e", "filename": "gcc/testsuite/gcc.target/i386/gcc-have-sync-compare-and-swap-4.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fgcc-have-sync-compare-and-swap-4.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do preprocess } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do preprocess { target { ! { ia32 } } } } */\n /* { dg-options \"-mcx16\" } */\n \n #ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1"}, {"sha": "c59b208a6f6864f7b77174524c06033bad839a66", "filename": "gcc/testsuite/gcc.target/i386/incoming-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR middle-end/37009 */\n-/* { dg-do compile { target { { ! *-*-darwin* } && ilp32 } } } */\n+/* { dg-do compile { target { { ! *-*-darwin* } && ia32 } } } */\n /* { dg-options \"-w -msse2 -mpreferred-stack-boundary=2\" } */\n \n #include <emmintrin.h>"}, {"sha": "1fb9ef4f0f933190aee0b8cbd34e247b36deb300", "filename": "gcc/testsuite/gcc.target/i386/incoming-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-10.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR target/40838 */\n-/* { dg-do compile { target { { ! *-*-darwin* } && ilp32 } } } */\n+/* { dg-do compile { target { { ! *-*-darwin* } && ia32 } } } */\n /* { dg-options \"-w -mstackrealign -fomit-frame-pointer -O3 -march=barcelona -mpreferred-stack-boundary=4\" } */\n \n struct s {"}, {"sha": "a7b7db53aa8a996a68cb94f512ee8f9f08775adc", "filename": "gcc/testsuite/gcc.target/i386/incoming-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-11.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR target/40838 */\n-/* { dg-do compile { target { { ! *-*-darwin* } && ilp32 } } } */\n+/* { dg-do compile { target { { ! *-*-darwin* } && ia32 } } } */\n /* { dg-options \"-w -mstackrealign -fomit-frame-pointer -O3 -march=barcelona -mpreferred-stack-boundary=4\" } */\n \n void g();"}, {"sha": "21f3f01f7f9c7e6969e8cb3efb885f5435359454", "filename": "gcc/testsuite/gcc.target/i386/incoming-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-12.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR target/40838 */\n-/* { dg-do compile { target { { ! *-*-darwin* } && ilp32 } } } */\n+/* { dg-do compile { target { { ! *-*-darwin* } && ia32 } } } */\n /* { dg-options \"-w -mstackrealign -O2 -msse2 -mpreferred-stack-boundary=4\" } */\n \n typedef int v4si __attribute__ ((vector_size (16)));"}, {"sha": "cad47a9c6b95f80964f31dfc156f305e24a9c827", "filename": "gcc/testsuite/gcc.target/i386/incoming-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-13.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR target/40838 */\n-/* { dg-do compile { target { { ! *-*-darwin* } && ilp32 } } } */\n+/* { dg-do compile { target { { ! *-*-darwin* } && ia32 } } } */\n /* { dg-options \"-w -mstackrealign -O2 -mpreferred-stack-boundary=4\" } */\n \n extern double y(double *s3);"}, {"sha": "03ef50b693e1dfa19d920e9778249355c3248100", "filename": "gcc/testsuite/gcc.target/i386/incoming-14.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-14.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR target/40838 */\n-/* { dg-do compile { target { { ! *-*-darwin* } && ilp32 } } } */\n+/* { dg-do compile { target { { ! *-*-darwin* } && ia32 } } } */\n /* { dg-options \"-w -mstackrealign -O2 -mpreferred-stack-boundary=4\" } */\n \n extern int y(int *s3);"}, {"sha": "897f3bc3cd97c6e574f40fe2929b0ee4e1a63b1b", "filename": "gcc/testsuite/gcc.target/i386/incoming-15.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-15.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR target/40838 */\n-/* { dg-do compile { target { { ! *-*-darwin* } && ilp32 } } } */\n+/* { dg-do compile { target { { ! *-*-darwin* } && ia32 } } } */\n /* { dg-options \"-w -mstackrealign -O2 -mpreferred-stack-boundary=4\" } */\n \n extern long long y(long long *s3);"}, {"sha": "4fc5629f0de39e6f482f6f71df9c3bcce38a23e9", "filename": "gcc/testsuite/gcc.target/i386/incoming-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR middle-end/37009 */\n-/* { dg-do compile { target { { ! *-*-darwin* } && ilp32 } } } */\n+/* { dg-do compile { target { { ! *-*-darwin* } && ia32 } } } */\n /* { dg-options \"-w -msse2 -mpreferred-stack-boundary=2\" } */\n \n #include <emmintrin.h>"}, {"sha": "1d39b03f8b2cd520b29083fb9c911471b2098b66", "filename": "gcc/testsuite/gcc.target/i386/incoming-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-3.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR middle-end/37009 */\n-/* { dg-do compile { target { { ! *-*-darwin* } && ilp32 } } } */\n+/* { dg-do compile { target { { ! *-*-darwin* } && ia32 } } } */\n /* { dg-options \"-w -msse2 -mpreferred-stack-boundary=2\" } */\n \n #include <emmintrin.h>"}, {"sha": "c3be961bc6c4d5293661a0dadea47db7e2ade735", "filename": "gcc/testsuite/gcc.target/i386/incoming-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-4.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR middle-end/37009 */\n-/* { dg-do compile { target { { ! *-*-darwin* } && ilp32 } } } */\n+/* { dg-do compile { target { { ! *-*-darwin* } && ia32 } } } */\n /* { dg-options \"-w -msse2 -mpreferred-stack-boundary=2\" } */\n \n #include <stdarg.h>"}, {"sha": "9bbecdb95e13f31bce6878400ee12a8c0ef9271e", "filename": "gcc/testsuite/gcc.target/i386/incoming-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-5.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR middle-end/37009 */\n-/* { dg-do compile { target { { ! *-*-darwin* } && ilp32 } } } */\n+/* { dg-do compile { target { { ! *-*-darwin* } && ia32 } } } */\n /* { dg-options \"-m32 -mincoming-stack-boundary=2 -mpreferred-stack-boundary=2\" } */\n \n extern void bar (double *);"}, {"sha": "a2448ec3a3c69ae398fa8c410f3c897ba275c922", "filename": "gcc/testsuite/gcc.target/i386/incoming-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-6.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR target/40838 */\n-/* { dg-do compile { target { { ! *-*-darwin* } && ilp32 } } } */\n+/* { dg-do compile { target { { ! *-*-darwin* } && ia32 } } } */\n /* { dg-options \"-w -mstackrealign -O2 -msse2 -mpreferred-stack-boundary=4\" } */\n \n typedef int v4si __attribute__ ((vector_size (16)));"}, {"sha": "0b8bbd5702361a848ff35d4d5c5ea4fe2d73d2c4", "filename": "gcc/testsuite/gcc.target/i386/incoming-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-7.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR target/40838 */\n-/* { dg-do compile { target { { ! *-*-darwin* } && ilp32 } } } */\n+/* { dg-do compile { target { { ! *-*-darwin* } && ia32 } } } */\n /* { dg-options \"-w -mstackrealign -O2 -msse2 -mpreferred-stack-boundary=4\" } */\n \n typedef int v4si __attribute__ ((vector_size (16)));"}, {"sha": "61d9cb37d724fe1c03cc907820c11fe5bb7eddbe", "filename": "gcc/testsuite/gcc.target/i386/incoming-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-8.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR target/40838 */\n-/* { dg-do compile { target { { ! *-*-darwin* } && ilp32 } } } */\n+/* { dg-do compile { target { { ! *-*-darwin* } && ia32 } } } */\n /* { dg-options \"-w -mstackrealign -O3 -msse2 -mno-avx -mpreferred-stack-boundary=4\" } */\n \n float"}, {"sha": "178693791f8981180f037a18c82163cf49dd2e39", "filename": "gcc/testsuite/gcc.target/i386/incoming-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-9.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR target/40838 */\n-/* { dg-do compile { target { { ! *-*-darwin* } && ilp32 } } } */\n+/* { dg-do compile { target { { ! *-*-darwin* } && ia32 } } } */\n /* { dg-options \"-w -mstackrealign -O3 -mno-sse -mpreferred-stack-boundary=4\" } */\n \n float"}, {"sha": "bba345ef0c7d0457ab2c95b4107ea9bf1c534d33", "filename": "gcc/testsuite/gcc.target/i386/lea.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Flea.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Flea.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Flea.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-skip-if \"\" { i?86-*-* x86_64-*-* } { \"-march=*\" } { \"-march=pentiumpro\" } } */\n /* { dg-options \"-O2 -march=pentiumpro\" } */\n /* { dg-final { scan-assembler \"leal\" } } */"}, {"sha": "872fd4d808b8101cb83bc3bf88f9d53ac141faa9", "filename": "gcc/testsuite/gcc.target/i386/local.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Flocal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Flocal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Flocal.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -funit-at-a-time\" } */\n-/* { dg-final { scan-assembler \"magic\\[^\\\\n\\]*eax\" { target ilp32 } } } */\n-/* { dg-final { scan-assembler \"magic\\[^\\\\n\\]*edi\" { target lp64 } } } */\n+/* { dg-final { scan-assembler \"magic\\[^\\\\n\\]*eax\" { target ia32 } } } */\n+/* { dg-final { scan-assembler \"magic\\[^\\\\n\\]*edi\" { target { ! { ia32 } } } } } */\n \n /* Verify that local calling convention is used.  */\n static t(int) __attribute__ ((noinline));"}, {"sha": "1af62f28490a5e4e3e4af6cc4874c3c3c6604ed1", "filename": "gcc/testsuite/gcc.target/i386/loop-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Floop-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Floop-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Floop-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* PR optimization/9888 */\n /* { dg-do run } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-mtune=k6 -O3\" } */\n \n /* Verify that GCC doesn't emit out of range 'loop' instructions.  */"}, {"sha": "eec71636ed733ce30e561e875e68a943deaf7a79", "filename": "gcc/testsuite/gcc.target/i386/loop-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Floop-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Floop-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Floop-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR optimization/9888 */\n /* Originator: Jim Bray <jb@as220.org> */\n /* { dg-do run } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-mtune=k6 -Os\" } */\n \n enum reload_type"}, {"sha": "4fcd390729f721b0abbdc8a672fff58fae7e9e66", "filename": "gcc/testsuite/gcc.target/i386/loop-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Floop-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Floop-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Floop-3.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -2,7 +2,7 @@\n /* Originator: Tim McGrath <misty-@charter.net> */\n /* Testcase contributed by Eric Botcazou <ebotcazou@libertysurf.fr> */\n /* { dg-do run } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-mtune=k6 -O3 -ffast-math -funroll-loops\" } */\n \n extern void *memset (void *, int, __SIZE_TYPE__);"}, {"sha": "9f37a63e017cdad626ca2c78c7ee112395395bb3", "filename": "gcc/testsuite/gcc.target/i386/max-stack-align.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmax-stack-align.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmax-stack-align.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmax-stack-align.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,5 @@\n-/* { dg-do compile } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-fomit-frame-pointer\" } */\n-/* { dg-require-effective-target lp64 } */\n \n void foo()\n {"}, {"sha": "bc6f95ab6b49baf1a982a8e0877dbb5a4f596345", "filename": "gcc/testsuite/gcc.target/i386/memcpy-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmemcpy-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -march=pentiumpro -minline-all-stringops\" } */\n /* { dg-final { scan-assembler \"rep\" } } */\n /* { dg-final { scan-assembler \"movs\" } } */"}, {"sha": "b322f774aa655bd05413ecdbe9ff795125b16af6", "filename": "gcc/testsuite/gcc.target/i386/movbe-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmovbe-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmovbe-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmovbe-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -15,5 +15,5 @@ bar ()\n   return __builtin_bswap64 (x);\n }\n \n-/* { dg-final { scan-assembler-times \"movbe\\[ \\t\\]\" 4 { target ilp32 } } } */\n-/* { dg-final { scan-assembler-times \"movbe\\[ \\t\\]\" 2 { target lp64 } } } */\n+/* { dg-final { scan-assembler-times \"movbe\\[ \\t\\]\" 4 { target ia32 } } } */\n+/* { dg-final { scan-assembler-times \"movbe\\[ \\t\\]\" 2 { target { ! { ia32 } } } } } */"}, {"sha": "37194b88d979482cb2984c82b01a0e45efe16fb0", "filename": "gcc/testsuite/gcc.target/i386/movq-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmovq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmovq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmovq-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR target/25199 */\n /* { dg-do compile } */\n /* { dg-options \"-Os -mtune=pentium4\" } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n \n struct S\n {"}, {"sha": "53cb42143ce1437d7c7b5175512facf3c870c474", "filename": "gcc/testsuite/gcc.target/i386/movq.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmovq.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmovq.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmovq.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile }\n /* { dg-options \"-Os -march=pentium4 -mtune=prescott\" } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n \n register char foo asm(\"edi\");\n char x;"}, {"sha": "a02823697e974a58adb573fb2de7df3fb84d5b55", "filename": "gcc/testsuite/gcc.target/i386/nrv1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fnrv1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fnrv1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fnrv1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* Verify that gimple-level NRV is occurring even for SSA_NAMEs.  *./\n /* { dg-do compile } */\n /* { dg-options \"-O -fdump-tree-optimized\" } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n \n _Complex double foo (_Complex double x)\n {"}, {"sha": "91bf0dba08ed0f475073159150cff567ddc0fdec", "filename": "gcc/testsuite/gcc.target/i386/pad-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-4.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-require-effective-target fpic } */\n /* { dg-options \"-O2 -fomit-frame-pointer -march=atom -fPIC\" } */\n /* { dg-final { scan-assembler-times \"nop\" 8 } } */"}, {"sha": "7aa04dbcf07490d27ec465bfcced66fbf1b49e7e", "filename": "gcc/testsuite/gcc.target/i386/pad-5a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-5a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-5a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-5a.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -fomit-frame-pointer -march=atom\" } */\n /* { dg-final { scan-assembler-times \"nop\" 2 } } */\n /* { dg-final { scan-assembler-not \"rep\" } } */"}, {"sha": "e4bb8610f14826120436f002b9fed1bf626bcea6", "filename": "gcc/testsuite/gcc.target/i386/pad-5b.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-5b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-5b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-5b.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -fomit-frame-pointer -march=atom\" } */\n /* { dg-final { scan-assembler-times \"nop\" 4 } } */\n /* { dg-final { scan-assembler-not \"rep\" } } */"}, {"sha": "532e38f1d2b8ed493d483134b12f3e4a0621674a", "filename": "gcc/testsuite/gcc.target/i386/pad-6a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-6a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-6a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-6a.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -fomit-frame-pointer -march=atom\" } */\n /* { dg-final { scan-assembler-times \"nop\" 4 } } */\n /* { dg-final { scan-assembler-not \"rep\" } } */"}, {"sha": "5cb64ff8e6c94f395dca8a70edf3d1722cf59643", "filename": "gcc/testsuite/gcc.target/i386/pad-6b.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-6b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-6b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-6b.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -fomit-frame-pointer -march=atom\" } */\n /* { dg-final { scan-assembler-times \"nop\" 6 } } */\n /* { dg-final { scan-assembler-not \"rep\" } } */"}, {"sha": "65c18ffa8f9ded63196affbddd72cec364a06a74", "filename": "gcc/testsuite/gcc.target/i386/pad-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-7.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -fomit-frame-pointer -march=atom\" } */\n /* { dg-final { scan-assembler-not \"nop\" } } */\n /* { dg-final { scan-assembler-not \"rep\" } } */"}, {"sha": "dd6d3b3d761cbbc5fc18a0f1412ee21f273d9a1c", "filename": "gcc/testsuite/gcc.target/i386/pad-9.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpad-9.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -fomit-frame-pointer -march=atom\" } */\n /* { dg-final { scan-assembler-times \"nop\" 4 } } */\n /* { dg-final { scan-assembler-not \"rep\" } } */"}, {"sha": "c840c47e381f0ff919f54ce1af153119c292f04c", "filename": "gcc/testsuite/gcc.target/i386/pentium4-not-mull.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpentium4-not-mull.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpentium4-not-mull.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpentium4-not-mull.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-skip-if \"\" { i?86-*-* x86_64-*-* } { \"-march=*\" } { \"-march=pentium4\" } } */\n /* { dg-options \"-O2 -march=pentium4\" } */\n /* { dg-final { scan-assembler-not \"imull\" } } */"}, {"sha": "af2424b075b2bf284bf6ed338214926b2fa975ac", "filename": "gcc/testsuite/gcc.target/i386/pic-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpic-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpic-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpic-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* PR target/8340 */\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-require-effective-target fpic } */\n /* { dg-skip-if \"No Windows PIC\" { *-*-mingw* *-*-cygwin } { \"*\" } { \"\" } } */\n /* { dg-options \"-fPIC\" } */"}, {"sha": "c230c84b7b168f6d19f2a99cfd0b759614c9909a", "filename": "gcc/testsuite/gcc.target/i386/pr12092-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr12092-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr12092-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr12092-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR rtl-optimization/12092  */\n /* Test case reduced by Andrew Pinski <pinskia@physics.uc.edu> */\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -mtune=i486 -march=pentium4 -fprefetch-loop-arrays\" } */\n \n void DecodeAC(int index,int *matrix)"}, {"sha": "e7b43a78ea3dc26ab1bb87d6c5321e5d8fab4db8", "filename": "gcc/testsuite/gcc.target/i386/pr12329.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr12329.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr12329.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr12329.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2\" } */\n \n extern void abort (void);"}, {"sha": "52cbed6f460f99f130106dbfc6437088c2bccf48", "filename": "gcc/testsuite/gcc.target/i386/pr21518.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr21518.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr21518.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr21518.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fPIC -fno-tree-pre\" } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-require-effective-target fpic } */\n \n extern void __attribute__ ((regparm (3)))"}, {"sha": "04d6b27069cc5f9e78a4fa40ca1859674fadbd55", "filename": "gcc/testsuite/gcc.target/i386/pr22362.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22362.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22362.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22362.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR target/22362 */\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n \n register unsigned int reg0 __asm__ (\"esi\");\n register unsigned int reg1 __asm__ (\"edi\");"}, {"sha": "e5f027ce862e78c5c770abad24181d8e652c174f", "filename": "gcc/testsuite/gcc.target/i386/pr22585.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22585.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22585.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22585.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -2,7 +2,7 @@\n /* Testcase reduced by Volker Reichelt */\n /* { dg-do compile } */\n /* { dg-options \"-march=i386 -O -ffast-math\" } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n \n int\n foo (long double d, int i)"}, {"sha": "66ab0e1222e09257be7f5a329eec177937e9417b", "filename": "gcc/testsuite/gcc.target/i386/pr23098.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr23098.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr23098.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr23098.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -2,7 +2,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fPIC\" } */\n /* { dg-final { scan-assembler-not \"\\.LC\\[0-9\\]\" { xfail *-*-vxworks* } } } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-require-effective-target fpic } */\n \n double foo (float);"}, {"sha": "6ebdee1748a94bffc3598d10f3ef58093df49f4d", "filename": "gcc/testsuite/gcc.target/i386/pr25196.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr25196.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr25196.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr25196.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-march=i386 -O3 -fomit-frame-pointer\" } */\n \n /* For this test case, we used to do an invalid load motion after"}, {"sha": "94923aba1b3e2b7e86566c49d65c5169901ad9c6", "filename": "gcc/testsuite/gcc.target/i386/pr25293.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr25293.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr25293.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr25293.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR target/25293 */\n /* { dg-do compile } */\n /* { dg-options \"-mpreferred-stack-boundary=2 -mtune=i586 -O2 -fomit-frame-pointer -g\" } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n \n struct T { unsigned short t1, t2, t3, t4, t5, t6, t7; };\n struct S { struct T s1; unsigned short s2, s3; };"}, {"sha": "d53a297947dde76090079de30f8cf466582a25a9", "filename": "gcc/testsuite/gcc.target/i386/pr25654.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr25654.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr25654.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr25654.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -mpreferred-stack-boundary=2 -march=i686 -frename-registers\" } */\n \n extern void abort (void) __attribute__((noreturn));"}, {"sha": "4a976ff7fa5d7d82b450345353fe6965debbea18", "filename": "gcc/testsuite/gcc.target/i386/pr26449.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr26449.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr26449.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr26449.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O1 -ftree-vectorize -march=pentium4 -std=c99\" } */\n \n void matmul_i4 (int bbase_yn, int xcount)"}, {"sha": "f871b5d61f37391d154ae4cdea42a05414a70d68", "filename": "gcc/testsuite/gcc.target/i386/pr26778.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr26778.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr26778.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr26778.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -march=pentium3\" } */\n \n typedef union {"}, {"sha": "062e1737f6cd1a1885a9211d012db46636a777e0", "filename": "gcc/testsuite/gcc.target/i386/pr26826.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr26826.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr26826.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr26826.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O -fomit-frame-pointer -march=i586\" } */\n \n void foo(char* p, char c, int i)"}, {"sha": "8735780c7764ef10b16b94d81b72c18bab92318d", "filename": "gcc/testsuite/gcc.target/i386/pr27266.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr27266.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr27266.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr27266.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -2,7 +2,7 @@\n    The testcase below used to trigger an ICE.  */\n \n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-march=pentium\" } */\n \n signed long long sll;"}, {"sha": "e27bbdcd82c8d7ddf424f04a4b0bb9f9014e894d", "filename": "gcc/testsuite/gcc.target/i386/pr29978.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr29978.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr29978.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr29978.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -13,4 +13,4 @@ f (long long v)\n }\n \n /* Verify there are no redundant jumps jl .L2; jle .L2 */\n-/* { dg-final { scan-assembler-not \"jl\\[^e\\]*\\\\.L\" { target ilp32 } } } */\n+/* { dg-final { scan-assembler-not \"jl\\[^e\\]*\\\\.L\" { target ia32 } } } */"}, {"sha": "3cebbe6953f8b418144723b1767c4ba2f12783e1", "filename": "gcc/testsuite/gcc.target/i386/pr30505.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr30505.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr30505.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr30505.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* PR inline-asm/30505 */\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2\" } */\n \n unsigned long long a, c;"}, {"sha": "c7c5e53833c40e3bc303936e076e5f00cb5e093f", "filename": "gcc/testsuite/gcc.target/i386/pr30961-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr30961-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr30961-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr30961-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2\" } */\n \n double"}, {"sha": "eece2a0dbee009b85b64f9c67a329e6ec92311d9", "filename": "gcc/testsuite/gcc.target/i386/pr31628.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr31628.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr31628.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr31628.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -fPIC\" } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-require-effective-target fpic } */\n \n typedef int tt, *lptt;"}, {"sha": "374b23f83492822b375c6c1217c935bb835cf507", "filename": "gcc/testsuite/gcc.target/i386/pr32000-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr32000-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr32000-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr32000-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-skip-if \"\" { ! { ilp32 && dfp } } { \"*\" } { \"\" } } */\n+/* { dg-skip-if \"\" { ! { ia32 && dfp } } { \"*\" } { \"\" } } */\n /* { dg-options \"-O -msse2 -std=gnu99 -mpreferred-stack-boundary=2\" } */\n /* { dg-require-effective-target sse2 } */\n "}, {"sha": "39cd8f90c835be9056f63ef438856166d5ed9dff", "filename": "gcc/testsuite/gcc.target/i386/pr32661-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr32661-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr32661-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr32661-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -fomit-frame-pointer\" } */\n \n typedef long long __m128i __attribute__ ((__vector_size__ (16)));"}, {"sha": "f28caf91a138e0dd08454b58d3101236e7052cbb", "filename": "gcc/testsuite/gcc.target/i386/pr32708-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr32708-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr32708-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr32708-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -mtune=k8\" } */\n \n typedef long long __v2di __attribute__ ((__vector_size__ (16)));"}, {"sha": "77e50b241b3999e647415b75bfe899c3be2f9c2a", "filename": "gcc/testsuite/gcc.target/i386/pr32708-3.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr32708-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr32708-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr32708-3.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -mtune=core2\" } */\n \n typedef long long __v2di __attribute__ ((__vector_size__ (16)));"}, {"sha": "4ce7e30c5f6bb3ad3ccdcdcd206bd419cd56146c", "filename": "gcc/testsuite/gcc.target/i386/pr34256.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr34256.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr34256.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr34256.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -fomit-frame-pointer -march=core2\" } */\n \n #include <mmintrin.h>"}, {"sha": "876ac40401d0e4d44c8ea0a84538c08d7364370c", "filename": "gcc/testsuite/gcc.target/i386/pr34312.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr34312.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr34312.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr34312.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-require-effective-target fpic } */\n /* { dg-options \"-O2 -march=pentium-m -fpic\" } */\n "}, {"sha": "eb1e03a77cbf8c5b7b5ea4f2a86a92984bd2f8ad", "filename": "gcc/testsuite/gcc.target/i386/pr34522.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr34522.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr34522.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr34522.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* { dg-options \"-O2\" } */\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n \n int test(long long a, long long b)\n {"}, {"sha": "259c2a3eae3a7e195fbaaec6714b1cc138177a3b", "filename": "gcc/testsuite/gcc.target/i386/pr35160.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr35160.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr35160.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr35160.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* PR inline-asm/35160 */\n /* { dg-do run } */\n-/* { dg-skip-if \"\" { ilp32 && { ! nonpic } } { \"*\" } { \"\" } } */\n+/* { dg-skip-if \"\" { ia32 && { ! nonpic } } { \"*\" } { \"\" } } */\n /* { dg-options \"-O2\" } */\n \n extern void abort (void);"}, {"sha": "efd5c3d63acc1d0c82490658e133b63b9b8ba880", "filename": "gcc/testsuite/gcc.target/i386/pr35281.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr35281.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr35281.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr35281.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* { dg-options \"-O2\" } */\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n \n unsigned long long a;\n unsigned int b;"}, {"sha": "51b8c349b5d95d66c762b91bd84d4ce906758790", "filename": "gcc/testsuite/gcc.target/i386/pr36246.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36246.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36246.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36246.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2 -fomit-frame-pointer -mtune=generic\" } */\n \n typedef long long __m128i __attribute__ ((__vector_size__ (16), __may_alias__));"}, {"sha": "6b62e80e75f38324e58490e97bbe9713605fa04c", "filename": "gcc/testsuite/gcc.target/i386/pr36786.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36786.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36786.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr36786.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n \n typedef int DItype __attribute__ ((mode (DI)));\n typedef unsigned int UDItype __attribute__ ((mode (DI)));"}, {"sha": "cf748879e86d2dedfbef0c1ac71bcf960e160f6b", "filename": "gcc/testsuite/gcc.target/i386/pr37275.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37275.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37275.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37275.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR middle-end/37275 */\n-/* { dg-do compile { target ilp32 } } */\n+/* { dg-do compile { target ia32 } } */\n /* { dg-options \"-g -dA -O2 -march=i686 -fstack-protector\" } */\n /* { dg-require-visibility \"\" } */\n "}, {"sha": "56f1170ebae44507aed2b6221d10b2f9f18caa1b", "filename": "gcc/testsuite/gcc.target/i386/pr37843-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37843-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37843-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37843-3.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* Test for stack alignment with sibcall optimization.  */\n-/* { dg-do compile { target { ilp32 && nonpic } } } */\n+/* { dg-do compile { target { ia32 && nonpic } } } */\n /* { dg-options \"-O2 -msse2 -mpreferred-stack-boundary=4 -mstackrealign\" } */\n /* { dg-require-effective-target sse2 } */\n /* { dg-final { scan-assembler-not \"andl\\[\\\\t \\]*\\\\$-16,\\[\\\\t \\]*%\\[re\\]?sp\" } } */"}, {"sha": "f70692f0e4ed49c4307ceff0e09e6c39f10134f4", "filename": "gcc/testsuite/gcc.target/i386/pr37843-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37843-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37843-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr37843-4.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* Test for stack alignment with sibcall optimization.  */\n-/* { dg-do compile { target { ilp32 && nonpic } } } */\n+/* { dg-do compile { target { ia32 && nonpic } } } */\n /* { dg-options \"-O2 -msse2 -mpreferred-stack-boundary=4 -mstackrealign\" } */\n /* { dg-require-effective-target sse2 } */\n /* { dg-final { scan-assembler-not \"andl\\[\\\\t \\]*\\\\$-16,\\[\\\\t \\]*%\\[re\\]?sp\" } } */"}, {"sha": "f2a1fdf98170d61568be764f00d86ed0c483ac92", "filename": "gcc/testsuite/gcc.target/i386/pr39082-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39082-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39082-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39082-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,5 @@\n /* PR target/39082 */\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2\" } */\n \n union un"}, {"sha": "0db7d5643036bcd79ad03b86dd5edab5c2ac2183", "filename": "gcc/testsuite/gcc.target/i386/pr39431.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39431.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39431.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39431.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR target/39431 */\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n-/* { dg-options \"-O2 -march=i686 -fpic\" { target { ilp32 && fpic } } } */\n+/* { dg-options \"-O2 -march=i686 -fpic\" { target { ia32 && fpic } } } */\n \n extern void bar (char *, int);\n "}, {"sha": "e14c87513cadf19737fa6c9408cad4398d0f9cb1", "filename": "gcc/testsuite/gcc.target/i386/pr39496.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39496.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39496.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39496.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR target/39496 */\n-/* { dg-do compile { target { { i?86-*-linux* x86_64-*-linux* } && ilp32 } } } */\n+/* { dg-do compile { target { { i?86-*-linux* x86_64-*-linux* } && ia32 } } } */\n /* { dg-options \"-O0 -fverbose-asm -fno-omit-frame-pointer -mtune=i686 -msse2 -mfpmath=sse\" } */\n /* Verify that {foo,bar}{,2}param are all passed on the stack, using\n    normal calling conventions, when not optimizing.  */"}, {"sha": "7f4e5a42a14da1fdd6a227405e5447fe95769608", "filename": "gcc/testsuite/gcc.target/i386/pr39543-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39543-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39543-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39543-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR inline-asm/39543 */\n /* { dg-do compile } */\n /* { dg-options \"-O3\" } */\n-/* { dg-skip-if \"\" { ilp32 && { ! nonpic } } { \"*\" } { \"\" } } */\n+/* { dg-skip-if \"\" { ia32 && { ! nonpic } } { \"*\" } { \"\" } } */\n \n float __attribute__ ((aligned (16))) s0[128];\n const float s1 = 0.707;"}, {"sha": "8a78c0a289f44ec8b2e1ae29f969515b0df77fb5", "filename": "gcc/testsuite/gcc.target/i386/pr39911.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39911.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39911.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39911.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -33,11 +33,13 @@ bar3 ()\n   asm volatile (\"mov%z0 %1, %0\": \"=r\" (foo): \"ir\" (-23));\n   asm volatile (\"add%z0 %1, %0\": \"+r\" (foo): \"ir\" (23));\n \n+#ifndef __x86_64__\n   if (sizeof (void *) == sizeof (int))\n     {\n       asm volatile (\"pop%z0 %0\": \"=m\" (foo));\n       asm volatile (\"pop%z0 %0\": \"=r\" (foo));\n     }\n+#endif\n }\n \n void"}, {"sha": "1df3548e0ec9647a0c502bb5a088de3036cd38b0", "filename": "gcc/testsuite/gcc.target/i386/pr40718.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40718.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40718.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40718.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O1 -foptimize-sibling-calls\" } */\n \n void abort (void);"}, {"sha": "e1c3771bb16ecbba8ea4d0e2a5f9744c117ccc7c", "filename": "gcc/testsuite/gcc.target/i386/pr40906-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40906-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40906-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40906-1.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -fomit-frame-pointer -fno-asynchronous-unwind-tables -mpush-args -mno-accumulate-outgoing-args\" } */\n \n void abort (void);"}, {"sha": "5a7bd6c270f8e8df4c504e32793366d2486fdd42", "filename": "gcc/testsuite/gcc.target/i386/pr40906-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40906-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40906-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40906-2.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -Wno-psabi -fomit-frame-pointer -fno-asynchronous-unwind-tables -mpush-args -mno-accumulate-outgoing-args -m128bit-long-double\" } */\n \n void abort (void);"}, {"sha": "ac7d183b71a1dfaec90f5a21689b5ca08f10e5d1", "filename": "gcc/testsuite/gcc.target/i386/pr40906-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40906-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40906-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40906-3.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run { target *-*-linux* } } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-require-effective-target sse2 } */\n /* { dg-options \"-O2 -fomit-frame-pointer -fno-asynchronous-unwind-tables -msse2 -mpush-args -mno-accumulate-outgoing-args\" } */\n "}, {"sha": "651172299e7fc06a2b9d57d1624fb367e4d452b0", "filename": "gcc/testsuite/gcc.target/i386/pr40934.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40934.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40934.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40934.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -march=i586 -ffast-math\" } */\n \n extern double host_frametime;"}, {"sha": "a23214c76f8638d7e6114028c6dacbd14e2e016c", "filename": "gcc/testsuite/gcc.target/i386/pr41900.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr41900.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr41900.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr41900.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-O2 -fomit-frame-pointer -mpreferred-stack-boundary=2\" } */\n \n int main ()"}, {"sha": "863372b56212e908e84e25325d6ae1d86fc45647", "filename": "gcc/testsuite/gcc.target/i386/pr42589.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42589.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42589.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr42589.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-skip-if \"\" { i?86-*-* x86_64-*-* } { \"-march=*\" } { \"-march=i486\" } } */\n /* { dg-options \"-O2 -march=i486\" } */\n "}, {"sha": "5e75dc541905f6cfa487fd1857007b3244d1f3ba", "filename": "gcc/testsuite/gcc.target/i386/pr43662.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43662.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43662.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43662.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do compile } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n /* { dg-options \"-O2\" } */\n \n void __attribute__ ((ms_abi)) foo (void)"}, {"sha": "388cd65e039115d2a5d38822e29d15bffa2cf57b", "filename": "gcc/testsuite/gcc.target/i386/pr43671.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43671.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43671.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43671.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-options \"-mtune=i686 -O1 -fpeel-loops -fschedule-insns2 -ftree-vectorize -fsched2-use-superblocks\" } */\n \n extern void abort ();"}, {"sha": "8ac16137f78ba9ee9dc188e8078364a18a3b902e", "filename": "gcc/testsuite/gcc.target/i386/pr43766.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43766.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43766.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43766.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n-/* { dg-options \"-O2 -msse -mregparm=3\" { target ilp32 } } */\n+/* { dg-options \"-O2 -msse -mregparm=3\" { target ia32 } } */\n \n void p (int *a, int i)\n {"}, {"sha": "5513b19f50e75324a63d1bfab63aecb200d92893", "filename": "gcc/testsuite/gcc.target/i386/pr43869.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43869.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43869.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr43869.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,4 @@\n-/* { dg-do run } */\n-/* { dg-require-effective-target lp64 } */\n+/* { dg-do compile { target { ! { ia32 } } } } */\n \n int __attribute__((__noinline__))\n bugged(float f1, float f2, float f3, float f4,"}, {"sha": "d8164845c0dc91e09d593d7fd02d41cc7b525746", "filename": "gcc/testsuite/gcc.target/i386/pr44942.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44942.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44942.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44942.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,5 +1,5 @@\n /* PR target/44942 */\n-/* { dg-do run { target lp64 } } */\n+/* { dg-do run { target { ! { ia32 } } } } */\n \n #include <stdarg.h>\n #include <emmintrin.h>"}, {"sha": "d84d1a6b9a15f0f917dee9c708a81ab692f45788", "filename": "gcc/testsuite/gcc.target/i386/pr44948-2a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44948-2a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbbb299a30bda57a2741e3b737e2448ea79d0f9c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44948-2a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr44948-2a.c?ref=dbbb299a30bda57a2741e3b737e2448ea79d0f9c", "patch": "@@ -1,7 +1,7 @@\n /* PR target/44948 */\n /* { dg-do run } */\n /* { dg-options \"-O -Wno-psabi -mno-sse -mtune=generic\" } */\n-/* { dg-require-effective-target ilp32 } */\n+/* { dg-require-effective-target ia32 } */\n /* { dg-require-effective-target sse2_runtime } */\n /* { dg-additional-sources pr44948-2b.c } */\n "}]}