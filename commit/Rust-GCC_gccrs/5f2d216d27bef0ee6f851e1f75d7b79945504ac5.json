{"sha": "5f2d216d27bef0ee6f851e1f75d7b79945504ac5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYyZDIxNmQyN2JlZjBlZTZmODUxZTFmNzVkN2I3OTk0NTUwNGFjNQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2009-08-17T10:30:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-08-17T10:30:39Z"}, "message": "a-crbtgk.adb, [...]: Minor code reorganization (use conditional expressions)\n\n2009-08-17  Robert Dewar  <dewar@adacore.com>\n\n\t* a-crbtgk.adb, a-crdlli.adb, a-direct.adb:\n\tMinor code reorganization (use conditional expressions)\n\nFrom-SVN: r150837", "tree": {"sha": "7a21d420ca26189894adc6664109661232cf267e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a21d420ca26189894adc6664109661232cf267e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f2d216d27bef0ee6f851e1f75d7b79945504ac5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f2d216d27bef0ee6f851e1f75d7b79945504ac5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f2d216d27bef0ee6f851e1f75d7b79945504ac5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f2d216d27bef0ee6f851e1f75d7b79945504ac5/comments", "author": null, "committer": null, "parents": [{"sha": "1257ae4a477c0e71499dd84331114365ed79fcd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1257ae4a477c0e71499dd84331114365ed79fcd0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1257ae4a477c0e71499dd84331114365ed79fcd0"}], "stats": {"total": 40, "additions": 10, "deletions": 30}, "files": [{"sha": "d77bb1afbf4b7c95cb04a72421549514be5a8a66", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f2d216d27bef0ee6f851e1f75d7b79945504ac5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f2d216d27bef0ee6f851e1f75d7b79945504ac5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5f2d216d27bef0ee6f851e1f75d7b79945504ac5", "patch": "@@ -1,8 +1,9 @@\n 2009-08-17  Robert Dewar  <dewar@adacore.com>\n \n-\t* a-caldel-vms.adb, a-calend-vms.adb, a-calfor.adb, a-cdlili.adb,\n-\ta-chahan.adb, a-cidlli.adb, a-coinve.adb, a-comlin.adb: Minor code\n-\treorganization (use conditional expressions).\n+\t* a-crbtgk.adb, a-crdlli.adb, a-direct.adb, a-caldel-vms.adb,\n+\ta-calend-vms.adb, a-calfor.adb, a-cdlili.adb, a-chahan.adb,\n+\ta-cidlli.adb, a-coinve.adb, a-comlin.adb: Minor code reorganization\n+\t(use conditional expressions).\n \n 2009-08-17  Robert Dewar  <dewar@adacore.com>\n "}, {"sha": "59d25be4557139f2fa1233ad3bf63f3ae6351f71", "filename": "gcc/ada/a-crbtgk.adb", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f2d216d27bef0ee6f851e1f75d7b79945504ac5/gcc%2Fada%2Fa-crbtgk.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f2d216d27bef0ee6f851e1f75d7b79945504ac5/gcc%2Fada%2Fa-crbtgk.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-crbtgk.adb?ref=5f2d216d27bef0ee6f851e1f75d7b79945504ac5", "patch": "@@ -125,12 +125,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Keys is\n       while X /= null loop\n          Y := X;\n          Inserted := Is_Less_Key_Node (Key, X);\n-\n-         if Inserted then\n-            X := Ops.Left (X);\n-         else\n-            X := Ops.Right (X);\n-         end if;\n+         X := (if Inserted then Ops.Left (X) else Ops.Right (X));\n       end loop;\n \n       --  If Inserted is True, then this means either that Tree is\n@@ -440,12 +435,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Keys is\n       while X /= null loop\n          Y := X;\n          Before := Is_Less_Key_Node (Key, X);\n-\n-         if Before then\n-            X := Ops.Left (X);\n-         else\n-            X := Ops.Right (X);\n-         end if;\n+         X := (if Before then Ops.Left (X) else Ops.Right (X));\n       end loop;\n \n       Insert_Post (Tree, Y, Before, Node);"}, {"sha": "137290b11e0885c9d978587031d6357efc113e7f", "filename": "gcc/ada/a-crdlli.adb", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f2d216d27bef0ee6f851e1f75d7b79945504ac5/gcc%2Fada%2Fa-crdlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f2d216d27bef0ee6f851e1f75d7b79945504ac5/gcc%2Fada%2Fa-crdlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-crdlli.adb?ref=5f2d216d27bef0ee6f851e1f75d7b79945504ac5", "patch": "@@ -561,15 +561,9 @@ package body Ada.Containers.Restricted_Doubly_Linked_Lists is\n          ----------\n \n          procedure Sort (Front, Back : Count_Type) is\n-            Pivot : Count_Type;\n-\n+            Pivot : constant Count_Type :=\n+                      (if Front = 0 then Container.First else N (Front).Next);\n          begin\n-            if Front = 0 then\n-               Pivot := Container.First;\n-            else\n-               Pivot := N (Front).Next;\n-            end if;\n-\n             if Pivot /= Back then\n                Partition (Pivot, Back);\n                Sort (Front, Pivot);"}, {"sha": "f0182c68e7a159841d06f5aae309dd1573de998a", "filename": "gcc/ada/a-direct.adb", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f2d216d27bef0ee6f851e1f75d7b79945504ac5/gcc%2Fada%2Fa-direct.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f2d216d27bef0ee6f851e1f75d7b79945504ac5/gcc%2Fada%2Fa-direct.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direct.adb?ref=5f2d216d27bef0ee6f851e1f75d7b79945504ac5", "patch": "@@ -1065,14 +1065,9 @@ package body Ada.Directories is\n          Cut_End   : Natural;\n \n       begin\n-         --  Cut_Start point to the first simple name character\n+         --  Cut_Start pointS to the first simple name character\n \n-         if Cut_Start = 0 then\n-            Cut_Start := Path'First;\n-\n-         else\n-            Cut_Start := Cut_Start + 1;\n-         end if;\n+         Cut_Start := (if Cut_Start = 0 then Path'First else Cut_Start + 1);\n \n          --  Cut_End point to the last simple name character\n "}]}