{"sha": "6495f8e61f6bd2eb279d1df529cdbbac1cc12214", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ5NWY4ZTYxZjZiZDJlYjI3OWQxZGY1MjljZGJiYWMxY2MxMjIxNA==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2013-11-14T18:53:25Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2013-11-14T18:53:25Z"}, "message": "arc.md (doloop_begin_i): Remove extra alignment; use (.&-4) idiom.\n\n\t* config/arc/arc.md (doloop_begin_i): Remove extra alignment;\n\tuse (.&-4) idiom.\n\nFrom-SVN: r204810", "tree": {"sha": "2face44bf8029d1504f886c9261ad0ff90a7bd3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2face44bf8029d1504f886c9261ad0ff90a7bd3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6495f8e61f6bd2eb279d1df529cdbbac1cc12214", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6495f8e61f6bd2eb279d1df529cdbbac1cc12214", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6495f8e61f6bd2eb279d1df529cdbbac1cc12214", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6495f8e61f6bd2eb279d1df529cdbbac1cc12214/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5b101aaed11648a471d156ed26b92fa839036cda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b101aaed11648a471d156ed26b92fa839036cda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b101aaed11648a471d156ed26b92fa839036cda"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "e9ae5c939bad830a508aeaae832b7831c44b2fea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6495f8e61f6bd2eb279d1df529cdbbac1cc12214/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6495f8e61f6bd2eb279d1df529cdbbac1cc12214/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6495f8e61f6bd2eb279d1df529cdbbac1cc12214", "patch": "@@ -1,3 +1,8 @@\n+2013-11-14  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\t* config/arc/arc.md (doloop_begin_i): Remove extra alignment;\n+\tuse (.&-4) idiom.\n+\n 2013-11-14  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \t* config/rs6000/sysv4le.h (LINUX64_DEFAULT_ABI_ELFv2): Define."}, {"sha": "64b4162a8779a7bc614f57b39f122b7c324b1e67", "filename": "gcc/config/arc/arc.md", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6495f8e61f6bd2eb279d1df529cdbbac1cc12214/gcc%2Fconfig%2Farc%2Farc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6495f8e61f6bd2eb279d1df529cdbbac1cc12214/gcc%2Fconfig%2Farc%2Farc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.md?ref=6495f8e61f6bd2eb279d1df529cdbbac1cc12214", "patch": "@@ -4789,8 +4789,7 @@\n     {\n       /* ??? Can do better for when a scratch register\n \t is known.  But that would require extra testing.  */\n-      arc_clear_unalign ();\n-      return \".p2align 2\\;push_s r0\\;add r0,pcl,%4-.+2\\;sr r0,[2]; LP_START\\;add r0,pcl,.L__GCC__LP%1-.+2\\;sr r0,[3]; LP_END\\;pop_s r0\";\n+      return \"push_s r0\\;add r0,pcl,%4-(.&-4)\\;sr r0,[2]; LP_START\\;add r0,pcl,.L__GCC__LP%1-(.&-4)\\;sr r0,[3]; LP_END\\;pop_s r0\";\n     }\n   /* Check if the loop end is in range to be set by the lp instruction.  */\n   size = INTVAL (operands[3]) < 2 ? 0 : 2048;"}]}