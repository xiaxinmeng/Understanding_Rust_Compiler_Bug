{"sha": "240e6b6bd06f94341224a54acb2576188b737d6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQwZTZiNmJkMDZmOTQzNDEyMjRhNTRhY2IyNTc2MTg4YjczN2Q2ZQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2006-11-29T18:34:56Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2006-11-29T18:34:56Z"}, "message": "decRound.c: Move declarations to new file, update comments.\n\nlibdecnumber/\n\t* decRound.c: Move declarations to new file, update comments.\n\t* decRound.h: New file.\ngcc/\n\t* mklibgcc.in: Fix dependencies for dfp-bit.c.\n\t* config/dfp-bit.h (CONTEXT_ROUND): Delete.\n\t(DFP_INIT_ROUNDMODE): Define.\n\t* config/dfp-bit.c: Replace CONTEXT_ROUND with DFP_INIT_ROUNDMODE.\n\nFrom-SVN: r119329", "tree": {"sha": "0e45af83e880d77674ad22929e17ff16e2f1a5e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e45af83e880d77674ad22929e17ff16e2f1a5e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/240e6b6bd06f94341224a54acb2576188b737d6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/240e6b6bd06f94341224a54acb2576188b737d6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/240e6b6bd06f94341224a54acb2576188b737d6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/240e6b6bd06f94341224a54acb2576188b737d6e/comments", "author": null, "committer": null, "parents": [{"sha": "07c02828326880b3df56dd0dfbf00847688351c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07c02828326880b3df56dd0dfbf00847688351c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07c02828326880b3df56dd0dfbf00847688351c3"}], "stats": {"total": 81, "additions": 63, "deletions": 18}, "files": [{"sha": "e80cb3c00fd8573e24418b70c7a54cf0c12fd139", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240e6b6bd06f94341224a54acb2576188b737d6e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240e6b6bd06f94341224a54acb2576188b737d6e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=240e6b6bd06f94341224a54acb2576188b737d6e", "patch": "@@ -1,3 +1,10 @@\n+2006-11-29  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* config/dfp-bit.h (CONTEXT_ROUND): Delete.\n+\t(DFP_INIT_ROUNDMODE): Define.\n+\t* config/dfp-bit.c: Replace CONTEXT_ROUND with DFP_INIT_ROUNDMODE.\n+\t* mklibgcc.in: Fix dependencies for dfp-bit.c.\n+\n 2006-11-29  Tehila Meyzels  <tehila@il.ibm.com>\n \n \t* haifa-sched.c: Remove define LINE_NOTE(INSN).  Remove line_note_head."}, {"sha": "9ffdd8a13f95a469306885761e631de1f6d2b737", "filename": "gcc/config/dfp-bit.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240e6b6bd06f94341224a54acb2576188b737d6e/gcc%2Fconfig%2Fdfp-bit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240e6b6bd06f94341224a54acb2576188b737d6e/gcc%2Fconfig%2Fdfp-bit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdfp-bit.c?ref=240e6b6bd06f94341224a54acb2576188b737d6e", "patch": "@@ -81,7 +81,7 @@ dfp_unary_op (dfp_unary_func op, DFP_C_TYPE arg)\n   HOST_TO_IEEE (arg, &a);\n \n   decContextDefault (&context, CONTEXT_INIT);\n-  context.round = CONTEXT_ROUND;\n+  DFP_INIT_ROUNDMODE (context.round);\n \n   TO_INTERNAL (&a, &arg1);\n \n@@ -107,7 +107,7 @@ dfp_binary_op (dfp_binary_func op, DFP_C_TYPE arg_a, DFP_C_TYPE arg_b)\n   HOST_TO_IEEE (arg_b, &b);\n \n   decContextDefault (&context, CONTEXT_INIT);\n-  context.round = CONTEXT_ROUND;\n+  DFP_INIT_ROUNDMODE (context.round);\n \n   TO_INTERNAL (&a, &arg1);\n   TO_INTERNAL (&b, &arg2);\n@@ -134,7 +134,7 @@ dfp_compare_op (dfp_binary_func op, DFP_C_TYPE arg_a, DFP_C_TYPE arg_b)\n   HOST_TO_IEEE (arg_b, &b);\n \n   decContextDefault (&context, CONTEXT_INIT);\n-  context.round = CONTEXT_ROUND;\n+  DFP_INIT_ROUNDMODE (context.round);\n \n   TO_INTERNAL (&a, &arg1);\n   TO_INTERNAL (&b, &arg2);\n@@ -365,7 +365,7 @@ DFP_TO_DFP (DFP_C_TYPE f_from)\n   decContext context;\n \n   decContextDefault (&context, CONTEXT_INIT);\n-  context.round = CONTEXT_ROUND;\n+  DFP_INIT_ROUNDMODE (context.round);\n \n   HOST_TO_IEEE (f_from, &s_from);\n   TO_INTERNAL (&s_from, &d);\n@@ -394,7 +394,7 @@ DFP_TO_INT (DFP_C_TYPE x)\n \n   decContextDefault (&context, CONTEXT_INIT);\n   /* Need non-default rounding mode here.  */\n-  context.round = DEC_ROUND_DOWN;\n+  DFP_INIT_ROUNDMODE (context.round);\n \n   HOST_TO_IEEE (x, &s);\n   TO_INTERNAL (&s, &n1);\n@@ -428,7 +428,7 @@ INT_TO_DFP (INT_TYPE i)\n   decContext context;\n \n   decContextDefault (&context, CONTEXT_INIT);\n-  context.round = CONTEXT_ROUND;\n+  DFP_INIT_ROUNDMODE (context.round);\n \n   /* Use a C library function to get a floating point string.  */\n   sprintf (buf, INT_FMT \".0\", CAST_FOR_FMT(i));\n@@ -470,7 +470,7 @@ BFP_TO_DFP (BFP_TYPE x)\n   decContext context;\n \n   decContextDefault (&context, CONTEXT_INIT);\n-  context.round = CONTEXT_ROUND;\n+  DFP_INIT_ROUNDMODE (context.round);\n \n   /* Use a C library function to write the floating point value to a string.  */\n #ifdef BFP_VIA_TYPE"}, {"sha": "e68f7df416b7885ee6c09da1a70f5d76e071c04a", "filename": "gcc/config/dfp-bit.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240e6b6bd06f94341224a54acb2576188b737d6e/gcc%2Fconfig%2Fdfp-bit.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240e6b6bd06f94341224a54acb2576188b737d6e/gcc%2Fconfig%2Fdfp-bit.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdfp-bit.h?ref=240e6b6bd06f94341224a54acb2576188b737d6e", "patch": "@@ -30,6 +30,8 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n #ifndef _DFPBIT_H\n #define _DFPBIT_H\n \n+#include <fenv.h>\n+#include <decRound.h>\n #include \"tconfig.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n@@ -114,9 +116,9 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n #define CONTEXT_INIT DEC_INIT_DECIMAL128\n #endif\n \n-/* Define CONTEXT_ROUND to obtain the current decNumber rounding mode.  */\n-extern enum rounding\t__decGetRound (void);\n-#define CONTEXT_ROUND\t__decGetRound ()\n+#ifndef DFP_INIT_ROUNDMODE\n+#define DFP_INIT_ROUNDMODE(A) A = DEC_ROUND_HALF_EVEN\n+#endif\n \n /* Conversions between different decimal float types use WIDTH_TO to\n    determine additional macros to define.  */"}, {"sha": "8987ff9a2ade26bf22c70c6f88297461234d742b", "filename": "gcc/mklibgcc.in", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240e6b6bd06f94341224a54acb2576188b737d6e/gcc%2Fmklibgcc.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240e6b6bd06f94341224a54acb2576188b737d6e/gcc%2Fmklibgcc.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmklibgcc.in?ref=240e6b6bd06f94341224a54acb2576188b737d6e", "patch": "@@ -145,6 +145,9 @@ decnumber_dep='stmp-dirs $(srcdir)/../libdecnumber/decContext.h $(srcdir)/../lib\n \t$(srcdir)/../libdecnumber/decNumberLocal.h $(srcdir)/../libdecnumber/decimal32.h $(srcdir)/../libdecnumber/decimal64.h\n \t$(srcdir)/../libdecnumber/decimal128.h $(srcdir)/../libdecnumber/decDPD.h $(srcdir)/../libdecnumber/decUtility.h'\n \n+# Dependencies for dfp-bit.c\n+dfpbit_c_dep='$(srcdir)/../libdecnumber/decRound.h'\" $libgcc_dep $decnumber_dep\"\n+\n # Flag whether we need eh_dummy.c\n need_eh_dummy=\n \n@@ -456,7 +459,7 @@ for ml in $MULTILIBS; do\n       if [ \"$dpbit\" ]; then\n         for name in $dpfuncs; do\n           out=\"libgcc/${dir}/${name}${objext}\"\n-\t  echo $out: config/dfp-bit.h config/dfp-bit.c $fpbit_c_dep\n+\t  echo $out: config/dfp-bit.h config/dfp-bit.c $dfpbit_c_dep\n \t  echo \"\t$gcc_compile\" -DFINE_GRAINED_LIBRARIES $flags -DL$name -DWIDTH=$dpwidth \\\n \t      $DFP_CFLAGS -c $\\(srcdir\\)/config/dfp-bit.c -o $out\n \t  echo $libgcc_a: $out"}, {"sha": "0994aee40e74b783364d182d795f5da4593fe4e3", "filename": "libdecnumber/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240e6b6bd06f94341224a54acb2576188b737d6e/libdecnumber%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240e6b6bd06f94341224a54acb2576188b737d6e/libdecnumber%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FChangeLog?ref=240e6b6bd06f94341224a54acb2576188b737d6e", "patch": "@@ -1,3 +1,8 @@\n+2006-11-29  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* decRound.c: Move declarations to new file, update comments.\n+\t* decRound.h: New file.\n+\n 2006-11-21  Janis Johnson  <janis187@us.ibm.com>\n \n \t* decLibrary.c (__dec_type_swap): Add prototype."}, {"sha": "45c642f1c76d9bcd21e9f6bcb6f9713fa8161b6a", "filename": "libdecnumber/decRound.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240e6b6bd06f94341224a54acb2576188b737d6e/libdecnumber%2FdecRound.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240e6b6bd06f94341224a54acb2576188b737d6e/libdecnumber%2FdecRound.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FdecRound.c?ref=240e6b6bd06f94341224a54acb2576188b737d6e", "patch": "@@ -1,5 +1,6 @@\n-/* Temporary support for a libc-like fp environment for decimal float.\n-   Copyright (C) 2005 Free Software Foundation, Inc.\n+/* Internal testing support for rounding for decimal float.\n+\n+   Copyright (C) 2005, 2006 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -20,6 +21,10 @@\n \n #include \"config.h\"\n #include \"decContext.h\"\n+#include \"decRound.h\"\n+\n+/* Internal, non-documented functions for testing libgcc functions.\n+   This support is not sufficient for application use.  */\n \n #define FE_DEC_DOWNWARD 0\n #define FE_DEC_TONEAREST 1\n@@ -28,11 +33,6 @@\n #define FE_DEC_UPWARD 4\n #define FE_DEC_MAX 5\n \n-extern void __dfp_set_round (int);\n-extern int __dfp_get_round (void);\n-extern enum rounding __decGetRound (void);\n-\n-/* FIXME: these should be in thread-local storage for runtime support.  */\n static enum rounding __dfp_rounding_mode = DEC_ROUND_HALF_EVEN;\n \n /* Set the decNumber rounding mode from the FE_DEC_* value in MODE.  */ "}, {"sha": "2a708f8cb17e79a594bef4ba22d1052e539e8bf4", "filename": "libdecnumber/decRound.h", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/240e6b6bd06f94341224a54acb2576188b737d6e/libdecnumber%2FdecRound.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/240e6b6bd06f94341224a54acb2576188b737d6e/libdecnumber%2FdecRound.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FdecRound.h?ref=240e6b6bd06f94341224a54acb2576188b737d6e", "patch": "@@ -0,0 +1,28 @@\n+/* Internal testing support for rounding for decimal float.\n+\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING.  If not, write to the Free\n+   Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n+   02110-1301, USA.  */\n+\n+#include \"decContext.h\"\n+\n+#define DFP_INIT_ROUNDMODE(A)  A = __decGetRound()\n+\n+extern void __dfp_set_round (int);\n+extern int __dfp_get_round (void);\n+extern enum rounding __decGetRound (void);"}]}