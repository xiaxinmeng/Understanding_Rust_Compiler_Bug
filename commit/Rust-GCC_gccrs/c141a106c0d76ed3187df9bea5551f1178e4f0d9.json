{"sha": "c141a106c0d76ed3187df9bea5551f1178e4f0d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE0MWExMDZjMGQ3NmVkMzE4N2RmOWJlYTU1NTFmMTE3OGU0ZjBkOQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-01T02:55:05Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-01T02:55:05Z"}, "message": "(subst, case COMPARE): Use SELECT_CC_MODE even if HAVE_CC0.\n\nFrom-SVN: r4291", "tree": {"sha": "09b6dbe4db05d6155389d6c7f0dd241ce7dc0aac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09b6dbe4db05d6155389d6c7f0dd241ce7dc0aac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c141a106c0d76ed3187df9bea5551f1178e4f0d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c141a106c0d76ed3187df9bea5551f1178e4f0d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c141a106c0d76ed3187df9bea5551f1178e4f0d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c141a106c0d76ed3187df9bea5551f1178e4f0d9/comments", "author": null, "committer": null, "parents": [{"sha": "317417a2bccb881f5059b32fc479c0efcd849edd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/317417a2bccb881f5059b32fc479c0efcd849edd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/317417a2bccb881f5059b32fc479c0efcd849edd"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "ee9c56b02d54947bb3e4325d5edc8d291fc42db9", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c141a106c0d76ed3187df9bea5551f1178e4f0d9/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c141a106c0d76ed3187df9bea5551f1178e4f0d9/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=c141a106c0d76ed3187df9bea5551f1178e4f0d9", "patch": "@@ -3817,11 +3817,13 @@ subst (x, from, to, in_dest, unique_copy)\n \t  /* Simplify our comparison, if possible.  */\n \t  new_code = simplify_comparison (old_code, &op0, &op1);\n \n-#if !defined (HAVE_cc0) && defined (EXTRA_CC_MODES)\n+#ifdef EXTRA_CC_MODES\n \t  /* If this machine has CC modes other than CCmode, check to see\n \t     if we need to use a different CC mode here.  */\n \t  compare_mode = SELECT_CC_MODE (new_code, op0, op1);\n+#endif /* EXTRA_CC_MODES */\n \n+#if !defined (HAVE_cc0) && defined (EXTRA_CC_MODES)\n \t  /* If the mode changed, we have to change SET_DEST, the mode\n \t     in the compare, and the mode in the place SET_DEST is used.\n \t     If SET_DEST is a hard register, just build new versions with"}]}