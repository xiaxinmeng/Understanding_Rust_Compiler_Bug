{"sha": "37ef10540dd0ccd42bf25190e0b8fd2311383be5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdlZjEwNTQwZGQwY2NkNDJiZjI1MTkwZTBiOGZkMjMxMTM4M2JlNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-02-16T12:55:15Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-02-16T12:55:15Z"}, "message": "(__negdi2, __lshrdi3, __ashldi3, __ashrdi3, __ffsdi2):\n\nUse ANSI style definition with full prototype.\n(__muldi3, __udiv_w_sdiv, __udivmoddi4, __divdi3, __moddi3) : Likewise.\n(__udivmoddi4, __udivdi3, __cmpdi2, __ucmpdi2) : Likewise.\n(__fixunstfdi, __fixtfdi, __fixunsxfdi, __fixxfdi) : Likewise.\n(__fixunsdfdi, __fixdfdi, __floatdixf, __floatditf) : Likewise.\n(__floatdidf, __floatdisf, __fixunsxfsi, __fixunsdfsi) : Likewise.\n(__gcc_bcmp, __eprintf, gopen, gclose, __bb_init_file) : Likewise.\n(__bb_init_trace_func, __clear_cache, mprotect) : Likewise.\n(__enable_execute_stack, cacheflush, exit) : Likewise.\n(find_exception_table, __find_first_exception_table_match) : Likewise.\n\nFrom-SVN: r13658", "tree": {"sha": "e56e8fee42ce2970d173d017a4e1c8dcb9f52c5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e56e8fee42ce2970d173d017a4e1c8dcb9f52c5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37ef10540dd0ccd42bf25190e0b8fd2311383be5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37ef10540dd0ccd42bf25190e0b8fd2311383be5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37ef10540dd0ccd42bf25190e0b8fd2311383be5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37ef10540dd0ccd42bf25190e0b8fd2311383be5/comments", "author": null, "committer": null, "parents": [{"sha": "7598db11d03c0cd73fc271836fa3719702ea641c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7598db11d03c0cd73fc271836fa3719702ea641c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7598db11d03c0cd73fc271836fa3719702ea641c"}], "stats": {"total": 138, "additions": 44, "deletions": 94}, "files": [{"sha": "16b15fff3f85e0c7d2ae441a2cdfcb50588e3aa2", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 44, "deletions": 94, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ef10540dd0ccd42bf25190e0b8fd2311383be5/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ef10540dd0ccd42bf25190e0b8fd2311383be5/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=37ef10540dd0ccd42bf25190e0b8fd2311383be5", "patch": "@@ -1,6 +1,6 @@\n /* More subroutines needed by GCC output code on some machines.  */\n /* Compile this one with gcc.  */\n-/* Copyright (C) 1989, 92, 93, 94, 95, 1996 Free Software Foundation, Inc.\n+/* Copyright (C) 1989, 92, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -138,8 +138,7 @@ extern DItype __fixunstfdi (TFtype a);\n static inline\n #endif\n DItype\n-__negdi2 (u)\n-     DItype u;\n+__negdi2 (DItype u)\n {\n   DIunion w;\n   DIunion uu;\n@@ -153,11 +152,11 @@ __negdi2 (u)\n }\n #endif\n \f\n+/* Unless shift functions are defined whith full ANSI prototypes,\n+   parameter b will be promoted to int if word_type is smaller than an int.  */\n #ifdef L_lshrdi3\n DItype\n-__lshrdi3 (u, b)\n-     DItype u;\n-     word_type b;\n+__lshrdi3 (DItype u, word_type b)\n {\n   DIunion w;\n   word_type bm;\n@@ -187,9 +186,7 @@ __lshrdi3 (u, b)\n \n #ifdef L_ashldi3\n DItype\n-__ashldi3 (u, b)\n-     DItype u;\n-     word_type b;\n+__ashldi3 (DItype u, word_type b)\n {\n   DIunion w;\n   word_type bm;\n@@ -219,9 +216,7 @@ __ashldi3 (u, b)\n \n #ifdef L_ashrdi3\n DItype\n-__ashrdi3 (u, b)\n-     DItype u;\n-     word_type b;\n+__ashrdi3 (DItype u, word_type b)\n {\n   DIunion w;\n   word_type bm;\n@@ -252,8 +247,7 @@ __ashrdi3 (u, b)\n \f\n #ifdef L_ffsdi2\n DItype\n-__ffsdi2 (u)\n-     DItype u;\n+__ffsdi2 (DItype u)\n {\n   DIunion uu, w;\n   uu.ll = u;\n@@ -273,8 +267,7 @@ __ffsdi2 (u)\n \f\n #ifdef L_muldi3\n DItype\n-__muldi3 (u, v)\n-     DItype u, v;\n+__muldi3 (DItype u, DItype v)\n {\n   DIunion w;\n   DIunion uu, vv;\n@@ -293,8 +286,7 @@ __muldi3 (u, v)\n #ifdef L_udiv_w_sdiv\n #if defined (sdiv_qrnnd)\n USItype\n-__udiv_w_sdiv (rp, a1, a0, d)\n-     USItype *rp, a1, a0, d;\n+__udiv_w_sdiv (USItype *rp, USItype a1, USItype a0, USItype d)\n {\n   USItype q, r;\n   USItype c0, c1, b1;\n@@ -392,8 +384,7 @@ __udiv_w_sdiv (rp, a1, a0, d)\n #else\n /* If sdiv_qrnnd doesn't exist, define dummy __udiv_w_sdiv.  */\n USItype\n-__udiv_w_sdiv (rp, a1, a0, d)\n-     USItype *rp, a1, a0, d;\n+__udiv_w_sdiv (USItype *rp, USItype a1, USItype a0, USItype d)\n {}\n #endif\n #endif\n@@ -421,9 +412,7 @@ static const UQItype __clz_tab[] =\n static inline\n #endif\n UDItype\n-__udivmoddi4 (n, d, rp)\n-     UDItype n, d;\n-     UDItype *rp;\n+__udivmoddi4 (UDItype n, UDItype d, UDItype *rp)\n {\n   DIunion ww;\n   DIunion nn, dd;\n@@ -644,8 +633,7 @@ __udivmoddi4 (n, d, rp)\n UDItype __udivmoddi4 ();\n \n DItype\n-__divdi3 (u, v)\n-     DItype u, v;\n+__divdi3 (DItype u, DItype v)\n {\n   word_type c = 0;\n   DIunion uu, vv;\n@@ -672,8 +660,7 @@ __divdi3 (u, v)\n #ifdef L_moddi3\n UDItype __udivmoddi4 ();\n DItype\n-__moddi3 (u, v)\n-     DItype u, v;\n+__moddi3 (DItype u, DItype v)\n {\n   word_type c = 0;\n   DIunion uu, vv;\n@@ -699,8 +686,7 @@ __moddi3 (u, v)\n #ifdef L_umoddi3\n UDItype __udivmoddi4 ();\n UDItype\n-__umoddi3 (u, v)\n-     UDItype u, v;\n+__umoddi3 (UDItype u, UDItype v)\n {\n   UDItype w;\n \n@@ -713,17 +699,15 @@ __umoddi3 (u, v)\n #ifdef L_udivdi3\n UDItype __udivmoddi4 ();\n UDItype\n-__udivdi3 (n, d)\n-     UDItype n, d;\n+__udivdi3 (UDItype n, UDItype d)\n {\n   return __udivmoddi4 (n, d, (UDItype *) 0);\n }\n #endif\n \f\n #ifdef L_cmpdi2\n word_type\n-__cmpdi2 (a, b)\n-     DItype a, b;\n+__cmpdi2 (DItype a, DItype b)\n {\n   DIunion au, bu;\n \n@@ -743,8 +727,7 @@ __cmpdi2 (a, b)\n \n #ifdef L_ucmpdi2\n word_type\n-__ucmpdi2 (a, b)\n-     DItype a, b;\n+__ucmpdi2 (DItype a, DItype b)\n {\n   DIunion au, bu;\n \n@@ -767,8 +750,7 @@ __ucmpdi2 (a, b)\n #define HIGH_WORD_COEFF (((UDItype) 1) << WORD_SIZE)\n \n DItype\n-__fixunstfdi (a)\n-     TFtype a;\n+__fixunstfdi (TFtype a)\n {\n   TFtype b;\n   UDItype v;\n@@ -797,8 +779,7 @@ __fixunstfdi (a)\n \n #if defined(L_fixtfdi) && (LONG_DOUBLE_TYPE_SIZE == 128)\n DItype\n-__fixtfdi (a)\n-     TFtype a;\n+__fixtfdi (TFtype a)\n {\n   if (a < 0)\n     return - __fixunstfdi (-a);\n@@ -811,8 +792,7 @@ __fixtfdi (a)\n #define HIGH_WORD_COEFF (((UDItype) 1) << WORD_SIZE)\n \n DItype\n-__fixunsxfdi (a)\n-     XFtype a;\n+__fixunsxfdi (XFtype a)\n {\n   XFtype b;\n   UDItype v;\n@@ -841,8 +821,7 @@ __fixunsxfdi (a)\n \n #if defined(L_fixxfdi) && (LONG_DOUBLE_TYPE_SIZE == 96)\n DItype\n-__fixxfdi (a)\n-     XFtype a;\n+__fixxfdi (XFtype a)\n {\n   if (a < 0)\n     return - __fixunsxfdi (-a);\n@@ -855,8 +834,7 @@ __fixxfdi (a)\n #define HIGH_WORD_COEFF (((UDItype) 1) << WORD_SIZE)\n \n DItype\n-__fixunsdfdi (a)\n-     DFtype a;\n+__fixunsdfdi (DFtype a)\n {\n   DFtype b;\n   UDItype v;\n@@ -885,8 +863,7 @@ __fixunsdfdi (a)\n \n #ifdef L_fixdfdi\n DItype\n-__fixdfdi (a)\n-     DFtype a;\n+__fixdfdi (DFtype a)\n {\n   if (a < 0)\n     return - __fixunsdfdi (-a);\n@@ -946,8 +923,7 @@ __fixsfdi (SFtype a)\n #define HIGH_WORD_COEFF (((UDItype) 1) << WORD_SIZE)\n \n XFtype\n-__floatdixf (u)\n-     DItype u;\n+__floatdixf (DItype u)\n {\n   XFtype d;\n   SItype negate = 0;\n@@ -970,8 +946,7 @@ __floatdixf (u)\n #define HIGH_WORD_COEFF (((UDItype) 1) << WORD_SIZE)\n \n TFtype\n-__floatditf (u)\n-     DItype u;\n+__floatditf (DItype u)\n {\n   TFtype d;\n   SItype negate = 0;\n@@ -994,8 +969,7 @@ __floatditf (u)\n #define HIGH_WORD_COEFF (((UDItype) 1) << WORD_SIZE)\n \n DFtype\n-__floatdidf (u)\n-     DItype u;\n+__floatdidf (DItype u)\n {\n   DFtype d;\n   SItype negate = 0;\n@@ -1047,8 +1021,7 @@ __floatdidf (u)\n #endif\n \n SFtype\n-__floatdisf (u)\n-     DItype u;\n+__floatdisf (DItype u)\n {\n   /* Do the calculation in DFmode\n      so that we don't lose any of the precision of the high word\n@@ -1098,8 +1071,7 @@ __floatdisf (u)\n #include <limits.h>\n \n USItype\n-__fixunsxfsi (a)\n-     XFtype a;\n+__fixunsxfsi (XFtype a)\n {\n   if (a >= - (DFtype) LONG_MIN)\n     return (SItype) (a + LONG_MIN) - LONG_MIN;\n@@ -1121,8 +1093,7 @@ __fixunsxfsi (a)\n #include <limits.h>\n \n USItype\n-__fixunsdfsi (a)\n-     DFtype a;\n+__fixunsdfsi (DFtype a)\n {\n   if (a >= - (DFtype) LONG_MIN)\n     return (SItype) (a + LONG_MIN) - LONG_MIN;\n@@ -1176,9 +1147,7 @@ __fixunssfsi (SFtype a)\n    positive if S1 is greater, 0 if S1 and S2 are equal.  */\n \n int\n-__gcc_bcmp (s1, s2, size)\n-     unsigned char *s1, *s2;\n-     size_t size;\n+__gcc_bcmp (unsigned char *s1, unsigned char *s2, size_t size)\n {\n   while (size > 0)\n     {\n@@ -1424,11 +1393,8 @@ __builtin_saveregs ()\n #include <stdio.h>\n /* This is used by the `assert' macro.  */\n void\n-__eprintf (string, expression, line, filename)\n-     const char *string;\n-     const char *expression;\n-     int line;\n-     const char *filename;\n+__eprintf (const char *string, const char *expression,\n+\t   int line, const char *filename)\n {\n   fprintf (stderr, string, expression, line, filename);\n   fflush (stderr);\n@@ -1720,9 +1686,7 @@ bb_mode & 8 != 0   :   Insert return instructions in basic block flow.\n    '.gz' from any first parameter to gopen.  */\n \n static FILE *\n-gopen (fn, mode)\n-     char *fn;\n-     char *mode;\n+gopen (char *fn, char *mode)\n {\n   int use_gzip;\n   char *p;\n@@ -1770,8 +1734,7 @@ gopen (fn, mode)\n }\n \n static int\n-gclose (f)\n-     FILE *f;\n+gclose (FILE *f)\n {\n   struct stat buf;\n \n@@ -2228,8 +2191,7 @@ __bb_trace_func_ret ()\n /* Called upon entering the first function of a file.  */\n \n static void\n-__bb_init_file (blocks)\n-     struct bb *blocks;\n+__bb_init_file (struct bb *blocks)\n {\n \n   const struct bb_func *p;\n@@ -2290,9 +2252,7 @@ __bb_trace_ret ()\n /* Called when entering a function.  */\n \n void\n-__bb_init_trace_func (blocks, blockno)\n-     struct bb *blocks;\n-     unsigned long blockno;\n+__bb_init_trace_func (struct bb *blocks, unsigned long blockno)\n {\n   static int trace_init = 0;\n \n@@ -2529,8 +2489,7 @@ unsigned int __shtab[] = {\n #define INSN_CACHE_PLANE_SIZE (INSN_CACHE_SIZE / INSN_CACHE_DEPTH)\n \n void\n-__clear_cache (beg, end)\n-     char *beg, *end;\n+__clear_cache (char *beg, char *end)\n {\n #ifdef CLEAR_INSN_CACHE \n   CLEAR_INSN_CACHE (beg, end);\n@@ -2653,9 +2612,7 @@ long getpagesize()\n #endif\n }\n \n-int mprotect(addr, len, prot)\n-  char *addr;\n-  int len, prot;\n+int mprotect(char *addr, int len, int prot)\n {\n   int np, op;\n \n@@ -2690,8 +2647,7 @@ TRANSFER_FROM_TRAMPOLINE\n #endif\n \n void\n-__enable_execute_stack (addr)\n-     char *addr;\n+__enable_execute_stack (char *addr)\n {\n   kern_return_t r;\n   char *eaddr = addr + TRAMPOLINE_SIZE;\n@@ -2815,10 +2771,7 @@ __enable_execute_stack ()\n    defined in config/mips/mips.h.  */\n \n void\n-cacheflush (beg,size,flag)\n-     char *beg;\n-     int size;\n-     int flag;\n+cacheflush (char *beg, int size, int flag)\n {\n   if (syscall (SYS_sysnews, NEWS_CACHEFLUSH, beg, size, FLUSH_BCACHE))\n     {\n@@ -2988,8 +2941,7 @@ extern void _cleanup ();\n extern void _exit () __attribute__ ((noreturn));\n \n void \n-exit (status)\n-     int status;\n+exit (int status)\n {\n #if !defined (INIT_SECTION_ASM_OP) || !defined (OBJECT_FORMAT_ELF)\n #ifdef NEED_ATEXIT\n@@ -3045,8 +2997,7 @@ struct exception_table_node {\n static struct exception_table_node *exception_table_list;\n \n static exception_table *\n-find_exception_table (pc)\n-     void *pc;\n+find_exception_table (void *pc)\n {\n   register struct exception_table_node *table = exception_table_list;\n   for ( ; table != 0; table = table->next)\n@@ -3082,8 +3033,7 @@ find_exception_table (pc)\n    an inner block.  */\n \n void *\n-__find_first_exception_table_match (pc)\n-     void *pc;\n+__find_first_exception_table_match (void *pc)\n {\n   exception_table *table = find_exception_table (pc);\n   int pos = 0;"}]}