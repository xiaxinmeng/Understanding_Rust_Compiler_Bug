{"sha": "3f069011019c9df670969ea283fd4d139f34a925", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YwNjkwMTEwMTljOWRmNjcwOTY5ZWEyODNmZDRkMTM5ZjM0YTkyNQ==", "commit": {"author": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2020-06-30T09:15:05Z"}, "committer": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2020-07-13T14:11:45Z"}, "message": "Fortran  :  ICE in gfc_find_array_ref(): No ref found PR95981\n\nWhen looking for an array reference allow NULL references.  If\nno array reference is found dim_rank_check should return false.\n\n2020-07-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n\ngcc/fortran/\n\n\tPR fortran/95981\n\t* check.c (dim_rank_check): Allow NULL references in call to\n\tgfc_find_array_ref and return false if no reference is found.\n\n2020-07-13  Mark Eggleston  <markeggleston@gcc.gnu.org>\n\ngcc/testsuite/\n\n\tPR fortran/95981\n\t* gfortran.dg/pr95981.f90: New test.", "tree": {"sha": "127481e64e7228960e35f124f96ef9ff5db11ef0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/127481e64e7228960e35f124f96ef9ff5db11ef0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f069011019c9df670969ea283fd4d139f34a925", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f069011019c9df670969ea283fd4d139f34a925", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f069011019c9df670969ea283fd4d139f34a925", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f069011019c9df670969ea283fd4d139f34a925/comments", "author": null, "committer": null, "parents": [{"sha": "a1faa8e2470b33e92f6274804bf7941fbb6e2d38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1faa8e2470b33e92f6274804bf7941fbb6e2d38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1faa8e2470b33e92f6274804bf7941fbb6e2d38"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "89cc158fab11019b9410e399de03960aef86fdec", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f069011019c9df670969ea283fd4d139f34a925/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f069011019c9df670969ea283fd4d139f34a925/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=3f069011019c9df670969ea283fd4d139f34a925", "patch": "@@ -1142,7 +1142,9 @@ dim_rank_check (gfc_expr *dim, gfc_expr *array, int allow_assumed)\n \n   if (array->expr_type == EXPR_VARIABLE)\n     {\n-      ar = gfc_find_array_ref (array);\n+      ar = gfc_find_array_ref (array, true);\n+      if (!ar)\n+\treturn false;\n       if (ar->as->type == AS_ASSUMED_SIZE\n \t  && !allow_assumed\n \t  && ar->type != AR_ELEMENT"}, {"sha": "7da6e9bd3dd52a6811fa79fc2bba96b56d184651", "filename": "gcc/testsuite/gfortran.dg/pr95981.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f069011019c9df670969ea283fd4d139f34a925/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95981.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f069011019c9df670969ea283fd4d139f34a925/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95981.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr95981.f90?ref=3f069011019c9df670969ea283fd4d139f34a925", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do compile }\n+\n+program p\n+   type t\n+   end type\n+   class(t) :: x(:)        ! { dg-error \"must be dummy, allocatable or pointer\" }\n+   type(t) :: y(size(x,1)) ! { dg-error \"must be constant of INTEGER type\" }\n+end\n+"}]}