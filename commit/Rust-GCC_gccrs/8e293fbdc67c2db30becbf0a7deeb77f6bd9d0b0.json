{"sha": "8e293fbdc67c2db30becbf0a7deeb77f6bd9d0b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUyOTNmYmRjNjdjMmRiMzBiZWNiZjBhN2RlZWI3N2Y2YmQ5ZDBiMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T08:00:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T08:00:37Z"}, "message": "[multiple changes]\n\n2011-08-04  Jerome Lambourg  <lambourg@adacore.com>\n\n\t* g-comlin.adb (For_Each_Simple_Switch.Is_In_Config): Remove the\n\tinvalid checks of the Parameter, making Remove_Switch not working\n\tcorrectly.\n\n2011-08-04  Arnaud Charlet  <charlet@adacore.com>\n\n\t* targparm.ads: Update header: no run-time exception is needed on this\n\tfile.\n\n2011-08-04  Vincent Celier  <celier@adacore.com>\n\n\t* a-fihema.adb: Use System.IO instead of GNAT.IO\n\n2011-08-04  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch3.adb (Access_Definition): Anonymous access to subprogram types\n\tare forbidden in Compiler_Unit mode.\n\nFrom-SVN: r177323", "tree": {"sha": "cbd8cdc0a509cc509008b337b29e163fa5ef0628", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbd8cdc0a509cc509008b337b29e163fa5ef0628"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e293fbdc67c2db30becbf0a7deeb77f6bd9d0b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e293fbdc67c2db30becbf0a7deeb77f6bd9d0b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e293fbdc67c2db30becbf0a7deeb77f6bd9d0b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e293fbdc67c2db30becbf0a7deeb77f6bd9d0b0/comments", "author": null, "committer": null, "parents": [{"sha": "cfae2bed7e333ce6366be60f5631adedab373b61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfae2bed7e333ce6366be60f5631adedab373b61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfae2bed7e333ce6366be60f5631adedab373b61"}], "stats": {"total": 70, "additions": 42, "deletions": 28}, "files": [{"sha": "3289f77df69468876ab43e720fac691299b77a12", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e293fbdc67c2db30becbf0a7deeb77f6bd9d0b0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e293fbdc67c2db30becbf0a7deeb77f6bd9d0b0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8e293fbdc67c2db30becbf0a7deeb77f6bd9d0b0", "patch": "@@ -1,3 +1,23 @@\n+2011-08-04  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* g-comlin.adb (For_Each_Simple_Switch.Is_In_Config): Remove the\n+\tinvalid checks of the Parameter, making Remove_Switch not working\n+\tcorrectly.\n+\n+2011-08-04  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* targparm.ads: Update header: no run-time exception is needed on this\n+\tfile.\n+\n+2011-08-04  Vincent Celier  <celier@adacore.com>\n+\n+\t* a-fihema.adb: Use System.IO instead of GNAT.IO\n+\n+2011-08-04  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch3.adb (Access_Definition): Anonymous access to subprogram types\n+\tare forbidden in Compiler_Unit mode.\n+\n 2011-08-04  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_util.adb: Minor reformatting."}, {"sha": "0383de0170e9ab7936f13882bfcc04754d48b858", "filename": "gcc/ada/a-fihema.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e293fbdc67c2db30becbf0a7deeb77f6bd9d0b0/gcc%2Fada%2Fa-fihema.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e293fbdc67c2db30becbf0a7deeb77f6bd9d0b0/gcc%2Fada%2Fa-fihema.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-fihema.adb?ref=8e293fbdc67c2db30becbf0a7deeb77f6bd9d0b0", "patch": "@@ -33,10 +33,9 @@ with Ada.Exceptions;          use Ada.Exceptions;\n with Ada.Unchecked_Conversion;\n with Ada.Unchecked_Deallocation;\n \n-with GNAT.IO;                 use GNAT.IO;\n-\n with System;                  use System;\n with System.Address_Image;\n+with System.IO;               use System.IO;\n with System.Soft_Links;       use System.Soft_Links;\n with System.Storage_Elements; use System.Storage_Elements;\n with System.Storage_Pools;    use System.Storage_Pools;"}, {"sha": "b39c57ae2005ef1efb7e3daedb79a6a85c6de346", "filename": "gcc/ada/g-comlin.adb", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e293fbdc67c2db30becbf0a7deeb77f6bd9d0b0/gcc%2Fada%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e293fbdc67c2db30becbf0a7deeb77f6bd9d0b0/gcc%2Fada%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.adb?ref=8e293fbdc67c2db30becbf0a7deeb77f6bd9d0b0", "patch": "@@ -1917,25 +1917,19 @@ package body GNAT.Command_Line is\n                   end if;\n \n                when Parameter_With_Optional_Space =>\n-                  if Parameter /= \"\" then\n-                     Callback (Switch, \" \", Parameter, Index => Index);\n-                     Found_In_Config := True;\n-                     return False;\n-                  end if;\n+                  Callback (Switch, \" \", Parameter, Index => Index);\n+                  Found_In_Config := True;\n+                  return False;\n \n                when Parameter_With_Space_Or_Equal =>\n-                  if Parameter /= \"\" then\n-                     Callback (Switch, \"=\", Parameter, Index => Index);\n-                     Found_In_Config := True;\n-                     return False;\n-                  end if;\n+                  Callback (Switch, \"=\", Parameter, Index => Index);\n+                  Found_In_Config := True;\n+                  return False;\n \n                when Parameter_No_Space =>\n-                  if Parameter /= \"\" then\n-                     Callback (Switch, \"\", Parameter, Index);\n-                     Found_In_Config := True;\n-                     return False;\n-                  end if;\n+                  Callback (Switch, \"\", Parameter, Index);\n+                  Found_In_Config := True;\n+                  return False;\n \n                when Parameter_Optional =>\n                   Callback (Switch, \"\", Parameter, Index);"}, {"sha": "283f8405bce58caba1c6b50b145385a49bb52267", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e293fbdc67c2db30becbf0a7deeb77f6bd9d0b0/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e293fbdc67c2db30becbf0a7deeb77f6bd9d0b0/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=8e293fbdc67c2db30becbf0a7deeb77f6bd9d0b0", "patch": "@@ -793,6 +793,13 @@ package body Sem_Ch3 is\n       --  the corresponding semantic routine\n \n       if Present (Access_To_Subprogram_Definition (N)) then\n+\n+         --  Compiler runtime units are compiled in Ada 2005 mode when building\n+         --  the runtime library but must also be compilable in Ada 95 mode\n+         --  (when bootstrapping the compiler).\n+\n+         Check_Compiler_Unit (N);\n+\n          Access_Subprogram_Declaration\n            (T_Name => Anon_Type,\n             T_Def  => Access_To_Subprogram_Definition (N));"}, {"sha": "7db350be24c95c675af1e1f5fd60b5f0970a7c14", "filename": "gcc/ada/targparm.ads", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e293fbdc67c2db30becbf0a7deeb77f6bd9d0b0/gcc%2Fada%2Ftargparm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e293fbdc67c2db30becbf0a7deeb77f6bd9d0b0/gcc%2Fada%2Ftargparm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.ads?ref=8e293fbdc67c2db30becbf0a7deeb77f6bd9d0b0", "patch": "@@ -6,23 +6,17 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1999-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n -- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n -- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n -- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n+-- http://www.gnu.org/licenses for a complete copy of the license.          --\n --                                                                          --\n -- GNAT was originally developed  by the GNAT team at  New York University. --\n -- Extensive contributions were provided by Ada Core Technologies Inc.      --"}]}