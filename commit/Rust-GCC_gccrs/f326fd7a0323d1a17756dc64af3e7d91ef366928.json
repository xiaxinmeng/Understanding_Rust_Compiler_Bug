{"sha": "f326fd7a0323d1a17756dc64af3e7d91ef366928", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjMyNmZkN2EwMzIzZDFhMTc3NTZkYzY0YWYzZTdkOTFlZjM2NjkyOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2007-04-20T19:05:24Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2007-04-20T19:05:24Z"}, "message": "alpha.h (CPP_SPEC, [...]): Remove.\n\n        * config/alpha/alpha.h (CPP_SPEC, CPP_SUBTARGET_SPEC): Remove.\n        (EXTRA_SPECS, SUBTARGET_EXTRA_SPECS): Remove.\n        * config/alpha/linux.h (CPP_SPEC): Undef before redefine.\n        * config/alpha/linux-elf.h (EXTRA_SPECS): Rename SUBTARGET_EXTRA_SPECS.\n        * config/alpha/freebsd.h (EXTRA_SPECS): Rename SUBTARGET_EXTRA_SPECS.\n        (CPP_SPEC): Don't include %(cpp_subtarget).\n        * config/alpha/netbsd.h (CPP_SPEC): Rename CPP_SUBTARGET_SPEC.\n        (EXTRA_SPECS): Rename SUBTARGET_EXTRA_SPECS.\n        * config/alpha/osf.h (CPP_SPEC, EXTRA_SPECS): Similarly.\n\nFrom-SVN: r123999", "tree": {"sha": "e62364dbe54bb67bb6fcaaf7e8c385b263c96bbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e62364dbe54bb67bb6fcaaf7e8c385b263c96bbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f326fd7a0323d1a17756dc64af3e7d91ef366928", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f326fd7a0323d1a17756dc64af3e7d91ef366928", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f326fd7a0323d1a17756dc64af3e7d91ef366928", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f326fd7a0323d1a17756dc64af3e7d91ef366928/comments", "author": null, "committer": null, "parents": [{"sha": "bf6a0a18386d932017f0c9ed9d5cb986d234f6db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf6a0a18386d932017f0c9ed9d5cb986d234f6db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf6a0a18386d932017f0c9ed9d5cb986d234f6db"}], "stats": {"total": 71, "additions": 29, "deletions": 42}, "files": [{"sha": "d208773855d43b78e036614deb4d10e3e6a33f64", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f326fd7a0323d1a17756dc64af3e7d91ef366928/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f326fd7a0323d1a17756dc64af3e7d91ef366928/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f326fd7a0323d1a17756dc64af3e7d91ef366928", "patch": "@@ -1,3 +1,15 @@\n+2007-04-20  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.h (CPP_SPEC, CPP_SUBTARGET_SPEC): Remove.\n+\t(EXTRA_SPECS, SUBTARGET_EXTRA_SPECS): Remove.\n+\t* config/alpha/linux.h (CPP_SPEC): Undef before redefine.\n+\t* config/alpha/linux-elf.h (EXTRA_SPECS): Rename SUBTARGET_EXTRA_SPECS.\n+\t* config/alpha/freebsd.h (EXTRA_SPECS): Rename SUBTARGET_EXTRA_SPECS.\n+\t(CPP_SPEC): Don't include %(cpp_subtarget).\n+\t* config/alpha/netbsd.h (CPP_SPEC): Rename CPP_SUBTARGET_SPEC.\n+\t(EXTRA_SPECS): Rename SUBTARGET_EXTRA_SPECS.\n+\t* config/alpha/osf.h (CPP_SPEC, EXTRA_SPECS): Similarly.\n+\n 2007-04-20  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/i386.c (bdesc_2arg): Use ORDERED rather than UNORDERED"}, {"sha": "6e30d7b3658514eb501cb7fb428946f940496e73", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f326fd7a0323d1a17756dc64af3e7d91ef366928/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f326fd7a0323d1a17756dc64af3e7d91ef366928/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=f326fd7a0323d1a17756dc64af3e7d91ef366928", "patch": "@@ -96,12 +96,6 @@ Boston, MA 02110-1301, USA.  */\n   while (0)\n #endif\n \n-#define CPP_SPEC \"%(cpp_subtarget)\"\n-\n-#ifndef CPP_SUBTARGET_SPEC\n-#define CPP_SUBTARGET_SPEC \"\"\n-#endif\n-\n #define WORD_SWITCH_TAKES_ARG(STR)\t\t\\\n  (!strcmp (STR, \"rpath\") || DEFAULT_WORD_SWITCH_TAKES_ARG(STR))\n \n@@ -215,25 +209,6 @@ extern enum alpha_fp_trap_mode alpha_fptm;\n   {\"cpu\", \"%{!mcpu=*:-mcpu=%(VALUE)}\" }, \\\n   {\"tune\", \"%{!mtune=*:-mtune=%(VALUE)}\" }\n \n-/* This macro defines names of additional specifications to put in the\n-   specs that can be used in various specifications like CC1_SPEC.  Its\n-   definition is an initializer with a subgrouping for each command option.\n-\n-   Each subgrouping contains a string constant, that defines the\n-   specification name, and a string constant that used by the GCC driver\n-   program.\n-\n-   Do not define this macro if it does not need to do anything.  */\n-\n-#ifndef SUBTARGET_EXTRA_SPECS\n-#define SUBTARGET_EXTRA_SPECS\n-#endif\n-\n-#define EXTRA_SPECS\t\t\t\t\\\n-  { \"cpp_subtarget\", CPP_SUBTARGET_SPEC },\t\\\n-  SUBTARGET_EXTRA_SPECS\n-\n-\n /* Sometimes certain combinations of command options do not make sense\n    on a particular target machine.  You can define a macro\n    `OVERRIDE_OPTIONS' to take account of this.  This macro, if"}, {"sha": "e8f8bfa8bdd3c121c9e6be2fb86f63c8e77b5bc1", "filename": "gcc/config/alpha/freebsd.h", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f326fd7a0323d1a17756dc64af3e7d91ef366928/gcc%2Fconfig%2Falpha%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f326fd7a0323d1a17756dc64af3e7d91ef366928/gcc%2Fconfig%2Falpha%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Ffreebsd.h?ref=f326fd7a0323d1a17756dc64af3e7d91ef366928", "patch": "@@ -20,16 +20,15 @@ the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n Boston, MA 02110-1301, USA.  */\n \n \n-#undef  SUBTARGET_EXTRA_SPECS\n-#define SUBTARGET_EXTRA_SPECS \\\n+#undef  EXTRA_SPECS\n+#define EXTRA_SPECS \\\n   { \"fbsd_dynamic_linker\", FBSD_DYNAMIC_LINKER }\n \n-/* Provide a CPP_SPEC appropriate for FreeBSD/alpha.  Besides the\n-   dealing with the GCC option `-posix', we must deal with the Alpha's\n-   FP issues.  */\n+/* Provide a CPP_SPEC appropriate for FreeBSD/alpha -- dealing with\n+   the GCC option `-posix'.  */\n \n #undef  CPP_SPEC\n-#define CPP_SPEC \"%(cpp_subtarget) %{posix:-D_POSIX_SOURCE}\"\n+#define CPP_SPEC \"%{posix:-D_POSIX_SOURCE}\"\n \n #define LINK_SPEC \"%{G*} %{relax:-relax}\t\t\t\t\\\n   %{p:%nconsider using `-pg' instead of `-p' with gprof(1)}\t\t\\"}, {"sha": "ff31da822c69cf7f12cf820f6d5179065df4a997", "filename": "gcc/config/alpha/linux-elf.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f326fd7a0323d1a17756dc64af3e7d91ef366928/gcc%2Fconfig%2Falpha%2Flinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f326fd7a0323d1a17756dc64af3e7d91ef366928/gcc%2Fconfig%2Falpha%2Flinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Flinux-elf.h?ref=f326fd7a0323d1a17756dc64af3e7d91ef366928", "patch": "@@ -24,8 +24,8 @@ Boston, MA 02110-1301, USA.  */\n #undef TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (Alpha GNU/Linux for ELF)\");\n \n-#undef SUBTARGET_EXTRA_SPECS\n-#define SUBTARGET_EXTRA_SPECS \\\n+#undef EXTRA_SPECS\n+#define EXTRA_SPECS \\\n { \"elf_dynamic_linker\", ELF_DYNAMIC_LINKER },\n \n #define GLIBC_DYNAMIC_LINKER\t\"/lib/ld-linux.so.2\""}, {"sha": "da9608bb606c73ba1dd20c0e21026be8911c62fe", "filename": "gcc/config/alpha/linux.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f326fd7a0323d1a17756dc64af3e7d91ef366928/gcc%2Fconfig%2Falpha%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f326fd7a0323d1a17756dc64af3e7d91ef366928/gcc%2Fconfig%2Falpha%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Flinux.h?ref=f326fd7a0323d1a17756dc64af3e7d91ef366928", "patch": "@@ -44,6 +44,7 @@ Boston, MA 02110-1301, USA.  */\n    %{shared:-lc} \\\n    %{!shared: %{profile:-lc_p}%{!profile:-lc}}\"\n \n+#undef CPP_SPEC\n #define CPP_SPEC \"%{posix:-D_POSIX_SOURCE} %{pthread:-D_REENTRANT}\"\n \n /* Show that we need a GP when profiling.  */"}, {"sha": "63ff8375ec7f9dc4ca36ec0f95d4458b568cd1e1", "filename": "gcc/config/alpha/netbsd.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f326fd7a0323d1a17756dc64af3e7d91ef366928/gcc%2Fconfig%2Falpha%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f326fd7a0323d1a17756dc64af3e7d91ef366928/gcc%2Fconfig%2Falpha%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fnetbsd.h?ref=f326fd7a0323d1a17756dc64af3e7d91ef366928", "patch": "@@ -38,14 +38,14 @@ Boston, MA 02110-1301, USA.  */\n #define TARGET_PROFILING_NEEDS_GP 1\n \n \n-/* Provide a CPP_SUBTARGET_SPEC appropriate for NetBSD/alpha.  We use\n+/* Provide a CPP_SPEC appropriate for NetBSD/alpha.  We use\n    this to pull in CPP specs that all NetBSD configurations need.  */\n \n-#undef CPP_SUBTARGET_SPEC\n-#define CPP_SUBTARGET_SPEC NETBSD_CPP_SPEC\n+#undef CPP_SPEC\n+#define CPP_SPEC NETBSD_CPP_SPEC\n \n-#undef SUBTARGET_EXTRA_SPECS\n-#define SUBTARGET_EXTRA_SPECS\t\t\t\\\n+#undef EXTRA_SPECS\n+#define EXTRA_SPECS\t\t\t\\\n   { \"netbsd_link_spec\", NETBSD_LINK_SPEC_ELF },\t\\\n   { \"netbsd_entry_point\", NETBSD_ENTRY_POINT },\t\\\n   { \"netbsd_endfile_spec\", NETBSD_ENDFILE_SPEC },"}, {"sha": "5bc829dd93c9e2063b79939cf05c7e6b88008f57", "filename": "gcc/config/alpha/osf.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f326fd7a0323d1a17756dc64af3e7d91ef366928/gcc%2Fconfig%2Falpha%2Fosf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f326fd7a0323d1a17756dc64af3e7d91ef366928/gcc%2Fconfig%2Falpha%2Fosf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fosf.h?ref=f326fd7a0323d1a17756dc64af3e7d91ef366928", "patch": "@@ -61,8 +61,8 @@ Boston, MA 02110-1301, USA.  */\n    instead of PTHREAD_USE_D4 since both have the same effect and the former\n    doesn't invade the users' namespace.  */\n \n-#undef CPP_SUBTARGET_SPEC\n-#define CPP_SUBTARGET_SPEC \\\n+#undef CPP_SPEC\n+#define CPP_SPEC \\\n \"%{pthread|threads:-D_REENTRANT} %{threads:-D_PTHREAD_USE_D4}\"\n \n /* Under OSF4, -p and -pg require -lprof1, and -lprof1 requires -lpdf.  */\n@@ -134,8 +134,8 @@ Boston, MA 02110-1301, USA.  */\n \n #endif\n \n-#undef SUBTARGET_EXTRA_SPECS\n-#define SUBTARGET_EXTRA_SPECS { \"asm_oldas\", ASM_OLDAS_SPEC }\n+#undef EXTRA_SPECS\n+#define EXTRA_SPECS { \"asm_oldas\", ASM_OLDAS_SPEC }\n \n /* Indicate that we have a stamp.h to use.  */\n #ifndef CROSS_DIRECTORY_STRUCTURE"}]}