{"sha": "040a4493a64b308366d1d2fcb5611143d90c3c6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQwYTQ0OTNhNjRiMzA4MzY2ZDFkMmZjYjU2MTExNDNkOTBjM2M2ZA==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2017-12-18T05:38:59Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2017-12-18T05:38:59Z"}, "message": "extend.texi (x86 Function Attributes): Reformat nocf_check example\tto avoid overfull hbox.\n\n2017-12-17  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tgcc/\n\t* doc/extend.texi (x86 Function Attributes): Reformat nocf_check\n\texample\tto avoid overfull hbox.\n\t* doc/invoke.texi (Option Summary): Add missing @gol.\n\t(C++ Dialect Options): Reformat -Wnoexcept-type example to avoid \n\toverfull hbox.\n\nFrom-SVN: r255774", "tree": {"sha": "a4cc2e8e24d31ac8d98f7bbeacbaf8634de3d605", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4cc2e8e24d31ac8d98f7bbeacbaf8634de3d605"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/040a4493a64b308366d1d2fcb5611143d90c3c6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040a4493a64b308366d1d2fcb5611143d90c3c6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/040a4493a64b308366d1d2fcb5611143d90c3c6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040a4493a64b308366d1d2fcb5611143d90c3c6d/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "23f504aa21cbab3e84bfb4b2f344a0b657181900", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23f504aa21cbab3e84bfb4b2f344a0b657181900", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23f504aa21cbab3e84bfb4b2f344a0b657181900"}], "stats": {"total": 38, "additions": 29, "deletions": 9}, "files": [{"sha": "2a875d3ae7bb2a982f35177b6835a5aa5acf5007", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040a4493a64b308366d1d2fcb5611143d90c3c6d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040a4493a64b308366d1d2fcb5611143d90c3c6d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=040a4493a64b308366d1d2fcb5611143d90c3c6d", "patch": "@@ -1,3 +1,11 @@\n+2017-12-17  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* doc/extend.texi (x86 Function Attributes): Reformat nocf_check\n+\texample\tto avoid overfull hbox.\n+\t* doc/invoke.texi (Option Summary): Add missing @gol.\n+\t(C++ Dialect Options): Reformat -Wnoexcept-type example to avoid \n+\toverfull hbox.\n+\t\n 2017-12-17  Sandra Loosemore  <sandra@codesourcery.com>\n \t    Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n "}, {"sha": "677897bba38b0441c9fe695436c31afd2f6903d9", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040a4493a64b308366d1d2fcb5611143d90c3c6d/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040a4493a64b308366d1d2fcb5611143d90c3c6d/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=040a4493a64b308366d1d2fcb5611143d90c3c6d", "patch": "@@ -5765,21 +5765,27 @@ int foo (void) __attribute__(nocf_check);\n void (*foo1)(void) __attribute__(nocf_check);\n void (*foo2)(void);\n \n+/* foo's address is assumed to be valid.  */\n int\n-foo (void) /* The function's address is assumed to be valid.  */\n+foo (void) \n \n-  /* This call site is not checked for control-flow validity.  */\n+  /* This call site is not checked for control-flow \n+     validity.  */\n   (*foo1)();\n \n-  foo1 = foo2; /* A warning is printed about attribute mismatch.  */\n-  /* This call site is still not checked for control-flow validity.  */\n+  /* A warning is issued about attribute mismatch.  */\n+  foo1 = foo2; \n+\n+  /* This call site is still not checked.  */\n   (*foo1)();\n \n-  /* This call site is checked for control-flow validity.  */\n+  /* This call site is checked.  */\n   (*foo2)();\n \n-  foo2 = foo1; /* A warning is printed about attribute mismatch.  */\n-  /* This call site is still checked for control-flow validity.  */\n+  /* A warning is issued about attribute mismatch.  */\n+  foo2 = foo1; \n+\n+  /* This call site is still checked.  */\n   (*foo2)();\n \n   return 0;"}, {"sha": "2049c2789db09b85e9fda6e850a695e89a021a29", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040a4493a64b308366d1d2fcb5611143d90c3c6d/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040a4493a64b308366d1d2fcb5611143d90c3c6d/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=040a4493a64b308366d1d2fcb5611143d90c3c6d", "patch": "@@ -549,7 +549,7 @@ Objective-C and Objective-C++ Dialects}.\n -fdisable-tree-@var{pass-name}=@var{range-list} @gol\n -fdump-noaddr  -fdump-unnumbered  -fdump-unnumbered-links @gol\n -fdump-class-hierarchy@r{[}-@var{n}@r{]} @gol\n--fdump-final-insns@r{[}=@var{file}@r{]}\n+-fdump-final-insns@r{[}=@var{file}@r{]} @gol\n -fdump-ipa-all  -fdump-ipa-cgraph  -fdump-ipa-inline @gol\n -fdump-lang-all @gol\n -fdump-lang-@var{switch} @gol\n@@ -2935,12 +2935,18 @@ Warn if the C++17 feature making @code{noexcept} part of a function\n type changes the mangled name of a symbol relative to C++14.  Enabled\n by @option{-Wabi} and @option{-Wc++17-compat}.\n \n+As an example:\n+\n @smallexample\n template <class T> void f(T t) @{ t(); @};\n void g() noexcept;\n-void h() @{ f(g); @} // in C++14 calls f<void(*)()>, in C++17 calls f<void(*)()noexcept>\n+void h() @{ f(g); @} \n @end smallexample\n \n+@noindent\n+In C++14, @code{f} calls calls @code{f<void(*)()>}, but in\n+C++17 it calls @code{f<void(*)()noexcept>}.\n+\n @item -Wclass-memaccess @r{(C++ and Objective-C++ only)}\n @opindex Wclass-memaccess\n Warn when the destination of a call to a raw memory function such as"}]}