{"sha": "54f3b5c2f14c4041de7a05c245988a2a5e17fb14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRmM2I1YzJmMTRjNDA0MWRlN2EwNWMyNDU5ODhhMmE1ZTE3ZmIxNA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1999-11-22T23:56:34Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1999-11-22T23:56:34Z"}, "message": "combine.c (combine_simplify_rtx): When handling a SUBREG, take SUBREG_WORD into account.\n\n\t* combine.c (combine_simplify_rtx): When handling a SUBREG,\n\ttake SUBREG_WORD into account.\n\t(if_then_else_cond): Likewise.\n\nFrom-SVN: r30623", "tree": {"sha": "b53937dbff310868363d7902d40a1327a0ded2f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b53937dbff310868363d7902d40a1327a0ded2f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54f3b5c2f14c4041de7a05c245988a2a5e17fb14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54f3b5c2f14c4041de7a05c245988a2a5e17fb14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54f3b5c2f14c4041de7a05c245988a2a5e17fb14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54f3b5c2f14c4041de7a05c245988a2a5e17fb14/comments", "author": null, "committer": null, "parents": [{"sha": "b49df33399b7267485bf2b6f519e32e1b3443d9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b49df33399b7267485bf2b6f519e32e1b3443d9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b49df33399b7267485bf2b6f519e32e1b3443d9f"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "82f73ada28ecd5f2a1840f73513b03a3b14c03a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f3b5c2f14c4041de7a05c245988a2a5e17fb14/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f3b5c2f14c4041de7a05c245988a2a5e17fb14/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=54f3b5c2f14c4041de7a05c245988a2a5e17fb14", "patch": "@@ -1,3 +1,9 @@\n+Mon Nov 22 23:53:50 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* combine.c (combine_simplify_rtx): When handling a SUBREG,\n+\ttake SUBREG_WORD into account.\n+\t(if_then_else_cond): Likewise.\n+\n 1999-11-22  Jason Merrill  <jason@casey.cygnus.com>\n \n \t* gmon.c, i386/gmon-sol2.c, sparc/gmon-sol2.c: Remove advertising "}, {"sha": "a853129da8f2db140628c53ec819bdb4aa878e8b", "filename": "gcc/combine.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54f3b5c2f14c4041de7a05c245988a2a5e17fb14/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54f3b5c2f14c4041de7a05c245988a2a5e17fb14/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=54f3b5c2f14c4041de7a05c245988a2a5e17fb14", "patch": "@@ -3698,7 +3698,12 @@ combine_simplify_rtx (x, op0_mode, last, in_dest)\n \t since we are saying that the high bits don't matter.  */\n       if (CONSTANT_P (SUBREG_REG (x)) && GET_MODE (SUBREG_REG (x)) == VOIDmode\n \t  && GET_MODE_SIZE (mode) > GET_MODE_SIZE (op0_mode))\n-\treturn SUBREG_REG (x);\n+\t{\n+\t  if (GET_MODE_SIZE (GET_MODE (SUBREG_REG (x))) > UNITS_PER_WORD\n+\t      && (WORDS_BIG_ENDIAN || SUBREG_WORD (x) != 0))\n+\t    return operand_subword (SUBREG_REG (x), SUBREG_WORD (x), 0, mode);\n+\t  return SUBREG_REG (x);\n+\t}\n \n       /* Note that we cannot do any narrowing for non-constants since\n \t we might have been counting on using the fact that some bits were\n@@ -7112,6 +7117,12 @@ if_then_else_cond (x, ptrue, pfalse)\n \t   && 0 != (cond0 = if_then_else_cond (SUBREG_REG (x),\n \t\t\t\t\t       &true0, &false0)))\n     {\n+      if (GET_MODE_SIZE (GET_MODE (SUBREG_REG (x))) > UNITS_PER_WORD\n+\t  && (WORDS_BIG_ENDIAN || SUBREG_WORD (x) != 0))\n+\t{\n+\t  true0 = operand_subword (true0, SUBREG_WORD (x), 0, mode);\n+\t  false0 = operand_subword (false0, SUBREG_WORD (x), 0, mode);\n+\t}\n       *ptrue = force_to_mode (true0, mode, GET_MODE_MASK (mode), NULL_RTX, 0);\n       *pfalse\n \t= force_to_mode (false0, mode, GET_MODE_MASK (mode), NULL_RTX, 0);"}]}