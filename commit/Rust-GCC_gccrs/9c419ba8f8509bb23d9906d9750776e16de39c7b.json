{"sha": "9c419ba8f8509bb23d9906d9750776e16de39c7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM0MTliYThmODUwOWJiMjNkOTkwNmQ5NzUwNzc2ZTE2ZGUzOWM3Yg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2009-12-23T14:08:23Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-12-23T14:08:23Z"}, "message": "20000715-1.c: Remove target selector.\n\n\t* gcc.target/alpha/20000715-1.c: Remove target selector.\n\t* gcc.target/alpha/20011018-1.c: Ditto.\n\t* gcc.target/alpha/980217-1.c: Ditto.\n\t* gcc.target/alpha/asm-1.c: Ditto.\n\t* gcc.target/alpha/base-1.c: Ditto.\n\t* gcc.target/alpha/base-2.c: Ditto.\n\t* gcc.target/alpha/cix-1.c: Ditto.\n\t* gcc.target/alpha/cix-2.c: Ditto.\n\t* gcc.target/alpha/max-1.c: Ditto.\n\t* gcc.target/alpha/max-2.c: Ditto.\n\nFrom-SVN: r155426", "tree": {"sha": "d786d85716ee799b80a06e99c0501981af8c338a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d786d85716ee799b80a06e99c0501981af8c338a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c419ba8f8509bb23d9906d9750776e16de39c7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c419ba8f8509bb23d9906d9750776e16de39c7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c419ba8f8509bb23d9906d9750776e16de39c7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c419ba8f8509bb23d9906d9750776e16de39c7b/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b3abda87deea44c55a7f5ad342f671d87775a8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b3abda87deea44c55a7f5ad342f671d87775a8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b3abda87deea44c55a7f5ad342f671d87775a8a"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "afb5a9f1b27e9034f1a468f9e3e84cb7d234baca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c419ba8f8509bb23d9906d9750776e16de39c7b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c419ba8f8509bb23d9906d9750776e16de39c7b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9c419ba8f8509bb23d9906d9750776e16de39c7b", "patch": "@@ -1,3 +1,16 @@\n+2009-12-23  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/alpha/20000715-1.c: Remove target selector.\n+\t* gcc.target/alpha/20011018-1.c: Ditto.\n+\t* gcc.target/alpha/980217-1.c: Ditto.\n+\t* gcc.target/alpha/asm-1.c: Ditto.\n+\t* gcc.target/alpha/base-1.c: Ditto.\n+\t* gcc.target/alpha/base-2.c: Ditto.\n+\t* gcc.target/alpha/cix-1.c: Ditto.\n+\t* gcc.target/alpha/cix-2.c: Ditto.\n+\t* gcc.target/alpha/max-1.c: Ditto.\n+\t* gcc.target/alpha/max-2.c: Ditto.\n+\n 2009-12-23  Sebastian Pop  <sebpop@gmail.com>\n \n \t* g++.dg/graphite/id-1.C: New."}, {"sha": "3ff15604eb96800cb0f6907220e521e2b3b59ebc", "filename": "gcc/testsuite/gcc.target/alpha/20000715-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c419ba8f8509bb23d9906d9750776e16de39c7b/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2F20000715-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c419ba8f8509bb23d9906d9750776e16de39c7b/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2F20000715-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2F20000715-1.c?ref=9c419ba8f8509bb23d9906d9750776e16de39c7b", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target alpha*-*-* } } */\n+/* { dg-do compile } */\n /* { dg-options \"-O2 -mieee\" } */\n \n float foo(unsigned char n)"}, {"sha": "e01fcf5c4ad92a11438d3a8bbf41fd327a1a5a4d", "filename": "gcc/testsuite/gcc.target/alpha/20011018-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c419ba8f8509bb23d9906d9750776e16de39c7b/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2F20011018-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c419ba8f8509bb23d9906d9750776e16de39c7b/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2F20011018-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2F20011018-1.c?ref=9c419ba8f8509bb23d9906d9750776e16de39c7b", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target alpha*-*-* } } */\n+/* { dg-do compile } */\n /* { dg-options \"-O2 -mieee\" } */\n \n double foo (void);"}, {"sha": "e4ecf69fda23b03684c0a7fdae701c40c3d56cb5", "filename": "gcc/testsuite/gcc.target/alpha/980217-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c419ba8f8509bb23d9906d9750776e16de39c7b/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2F980217-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c419ba8f8509bb23d9906d9750776e16de39c7b/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2F980217-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2F980217-1.c?ref=9c419ba8f8509bb23d9906d9750776e16de39c7b", "patch": "@@ -1,6 +1,6 @@\n /* Test float on alpha. */\n \n-/* { dg-do run { target alpha*-*-* } } */\n+/* { dg-do run } */\n /* { dg-options \"-mieee -O2\" } */\n \n extern void abort(void);"}, {"sha": "4bb5ecbb73cff466dda49947fc5b15a35b34eb5f", "filename": "gcc/testsuite/gcc.target/alpha/asm-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c419ba8f8509bb23d9906d9750776e16de39c7b/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fasm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c419ba8f8509bb23d9906d9750776e16de39c7b/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fasm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fasm-1.c?ref=9c419ba8f8509bb23d9906d9750776e16de39c7b", "patch": "@@ -1,7 +1,7 @@\n /* Asm operands that are given as hard registers must keep the same\n    hard register all the way through compilation.  Example derived\n    from glibc source.  */\n-/* { dg-do compile { target alpha*-*-* } } */\n+/* { dg-do compile } */\n /* { dg-options \"-O2 -frename-registers -fcprop-registers\" } */\n /* { dg-final { scan-assembler \"callsys1 .0 .19 .0 .16 .17\" } } */\n /* { dg-final { scan-assembler \"callsys2 .0 .19 .0 .16 .17\" } } */"}, {"sha": "bca3bf56db98cdff10ff4d724ebae44048802ac9", "filename": "gcc/testsuite/gcc.target/alpha/base-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c419ba8f8509bb23d9906d9750776e16de39c7b/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fbase-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c419ba8f8509bb23d9906d9750776e16de39c7b/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fbase-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fbase-1.c?ref=9c419ba8f8509bb23d9906d9750776e16de39c7b", "patch": "@@ -1,5 +1,5 @@\n /* Test that the base isa builtins compile.  */\n-/* { dg-do link { target alpha*-*-* } } */\n+/* { dg-do link } */\n /* { dg-options \"-mcpu=ev4\" } */\n \n void test_BASE (long x, long y)"}, {"sha": "830dbc7b03838bfa82d1108f5b0f363b1ca8a319", "filename": "gcc/testsuite/gcc.target/alpha/base-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c419ba8f8509bb23d9906d9750776e16de39c7b/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fbase-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c419ba8f8509bb23d9906d9750776e16de39c7b/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fbase-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fbase-2.c?ref=9c419ba8f8509bb23d9906d9750776e16de39c7b", "patch": "@@ -1,5 +1,5 @@\n /* Test that alpha-base-1.c compiles with optimization.  */\n-/* { dg-do link { target alpha*-*-* } } */\n+/* { dg-do link } */\n /* { dg-options \"-mcpu=ev4 -O2\" } */\n \n #include \"base-1.c\""}, {"sha": "53aa6efd8e871b979030896f0f6d869f7b647018", "filename": "gcc/testsuite/gcc.target/alpha/cix-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c419ba8f8509bb23d9906d9750776e16de39c7b/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fcix-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c419ba8f8509bb23d9906d9750776e16de39c7b/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fcix-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fcix-1.c?ref=9c419ba8f8509bb23d9906d9750776e16de39c7b", "patch": "@@ -1,5 +1,5 @@\n /* Test that the CIX isa builtins compile.  */\n-/* { dg-do link { target alpha*-*-* } } */\n+/* { dg-do link } */\n /* { dg-options \"-mcpu=ev67\" } */\n \n void test_CIX (long x)"}, {"sha": "c34c3c68b464d87238db8f3a658d17c72694cd61", "filename": "gcc/testsuite/gcc.target/alpha/cix-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c419ba8f8509bb23d9906d9750776e16de39c7b/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fcix-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c419ba8f8509bb23d9906d9750776e16de39c7b/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fcix-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fcix-2.c?ref=9c419ba8f8509bb23d9906d9750776e16de39c7b", "patch": "@@ -1,5 +1,5 @@\n /* Test that alpha-cix-1.c compiles with optimization.  */\n-/* { dg-do link { target alpha*-*-* } } */\n+/* { dg-do link } */\n /* { dg-options \"-mcpu=ev67 -O2\" } */\n \n #include \"cix-1.c\""}, {"sha": "3f86160f2055927e37f36f5c6e8be2951dc6a06f", "filename": "gcc/testsuite/gcc.target/alpha/max-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c419ba8f8509bb23d9906d9750776e16de39c7b/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fmax-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c419ba8f8509bb23d9906d9750776e16de39c7b/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fmax-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fmax-1.c?ref=9c419ba8f8509bb23d9906d9750776e16de39c7b", "patch": "@@ -1,5 +1,5 @@\n /* Test that the MAX isa builtins compile.  */\n-/* { dg-do link { target alpha*-*-* } } */\n+/* { dg-do link } */\n /* { dg-options \"-mcpu=pca56\" } */\n \n void test_MAX (long x, long y)"}, {"sha": "c5491eaba96efea6c471e67018302cfa253071b6", "filename": "gcc/testsuite/gcc.target/alpha/max-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c419ba8f8509bb23d9906d9750776e16de39c7b/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fmax-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c419ba8f8509bb23d9906d9750776e16de39c7b/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fmax-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Falpha%2Fmax-2.c?ref=9c419ba8f8509bb23d9906d9750776e16de39c7b", "patch": "@@ -1,5 +1,5 @@\n /* Test that alpha-max-1.c compiles with optimization.  */\n-/* { dg-do link { target alpha*-*-* } } */\n+/* { dg-do link } */\n /* { dg-options \"-mcpu=pca56 -O2\" } */\n \n #include \"max-1.c\""}]}