{"sha": "29cc57cf00eff8c71527418fe0dfacd8a00bfdf3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjljYzU3Y2YwMGVmZjhjNzE1Mjc0MThmZTBkZmFjZDhhMDBiZmRmMw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-08-20T16:11:37Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-08-20T16:11:37Z"}, "message": "c-objc-common.h (LANG_HOOKS_DUP_LANG_SPECIFIC_DECL): Do not define.\n\n2009-08-20  Richard Guenther  <rguenther@suse.de>\n\n\t* c-objc-common.h (LANG_HOOKS_DUP_LANG_SPECIFIC_DECL): Do not\n\tdefine.\n\t* c-tree.h (c_dup_lang_specific_decl): Remove.\n\t(struct lang_decl, struct lang_type): Move definitions ...\n\t* c-lang.h: ... here.  New file.\n\t* c-decl.c: Include c-lang.h.\n\t(c_dup_lang_specific_decl): Remove.\n\t* c-typeck.c: Include c-lang.h.\n\t* Makefile.in (c-decl.o): Add c-lang.h dependency.\n\t(c-typeck.o): Likewise.\n\t* c-config-lang.in (gtfiles): Add c-lang.h.\n\t* gengtype.c (get_output_file_with_visibility): Handle c-lang.h\n\tlike c-tree.h.\n\n\tobjc/\n\t* objc-act.c: Include c-lang.h\n\t* Make-lang.in (objc/objc-act.o): Add c-lang.h dependency.\n\nFrom-SVN: r150966", "tree": {"sha": "47877120796b184d02e9c93347333278c46c1f26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47877120796b184d02e9c93347333278c46c1f26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f88facfe93adbbb0b297c603a11c5f723896bba0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f88facfe93adbbb0b297c603a11c5f723896bba0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f88facfe93adbbb0b297c603a11c5f723896bba0"}], "stats": {"total": 146, "additions": 90, "deletions": 56}, "files": [{"sha": "e5b01aadd8a6b3661c94ed6ae5ac8e059171240b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=29cc57cf00eff8c71527418fe0dfacd8a00bfdf3", "patch": "@@ -1,3 +1,19 @@\n+2009-08-20  Richard Guenther  <rguenther@suse.de>\n+\n+\t* c-objc-common.h (LANG_HOOKS_DUP_LANG_SPECIFIC_DECL): Do not\n+\tdefine.\n+\t* c-tree.h (c_dup_lang_specific_decl): Remove.\n+\t(struct lang_decl, struct lang_type): Move definitions ...\n+\t* c-lang.h: ... here.  New file.\n+\t* c-decl.c: Include c-lang.h.\n+\t(c_dup_lang_specific_decl): Remove.\n+\t* c-typeck.c: Include c-lang.h.\n+\t* Makefile.in (c-decl.o): Add c-lang.h dependency.\n+\t(c-typeck.o): Likewise.\n+\t* c-config-lang.in (gtfiles): Add c-lang.h.\n+\t* gengtype.c (get_output_file_with_visibility): Handle c-lang.h\n+\tlike c-tree.h.\n+\n 2009-08-20  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/alpha/alpha.c (alpha_end_function): Do not clear"}, {"sha": "9e8325464a4733b20715ffdb9c51048330c8e0b4", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=29cc57cf00eff8c71527418fe0dfacd8a00bfdf3", "patch": "@@ -1925,11 +1925,11 @@ c-decl.o : c-decl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n     opts.h $(C_PRAGMA_H) gt-c-decl.h $(CGRAPH_H) $(HASHTAB_H) libfuncs.h \\\n     $(EXCEPT_H) $(LANGHOOKS_DEF_H) $(TREE_DUMP_H) $(C_COMMON_H) $(CPPLIB_H) \\\n     $(DIAGNOSTIC_H) $(INPUT_H) langhooks.h $(GIMPLE_H) tree-mudflap.h  \\\n-    pointer-set.h $(BASIC_BLOCK_H) $(GIMPLE_H) tree-iterator.h\n+    pointer-set.h $(BASIC_BLOCK_H) $(GIMPLE_H) tree-iterator.h c-lang.h\n c-typeck.o : c-typeck.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n     $(TREE_H) $(C_TREE_H) $(TARGET_H) $(FLAGS_H) intl.h output.h $(EXPR_H) \\\n     $(RTL_H) $(TOPLEV_H) $(TM_P_H) langhooks.h $(GGC_H) $(TREE_FLOW_H) \\\n-    $(GIMPLE_H) tree-iterator.h\n+    $(GIMPLE_H) tree-iterator.h c-lang.h\n c-lang.o : c-lang.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n     $(C_TREE_H) $(DIAGNOSTIC_H) \\\n     $(GGC_H) langhooks.h $(LANGHOOKS_DEF_H) $(C_COMMON_H) gtype-c.h \\"}, {"sha": "d3cd6f9efeab387916cafc2472aaf41cb7259960", "filename": "gcc/c-config-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2Fc-config-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2Fc-config-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-config-lang.in?ref=29cc57cf00eff8c71527418fe0dfacd8a00bfdf3", "patch": "@@ -22,4 +22,4 @@\n # files used by C that have garbage collection GTY macros in them\n # which therefore need to be scanned by gengtype.c.\n \n-gtfiles=\"\\$(srcdir)/c-lang.c \\$(srcdir)/c-tree.h \\$(srcdir)/c-decl.c \\$(srcdir)/c-common.c \\$(srcdir)/c-common.h \\$(srcdir)/c-pragma.h \\$(srcdir)/c-pragma.c \\$(srcdir)/c-objc-common.c \\$(srcdir)/c-parser.c\"\n+gtfiles=\"\\$(srcdir)/c-lang.c \\$(srcdir)/c-tree.h \\$(srcdir)/c-decl.c \\$(srcdir)/c-common.c \\$(srcdir)/c-common.h \\$(srcdir)/c-pragma.h \\$(srcdir)/c-pragma.c \\$(srcdir)/c-objc-common.c \\$(srcdir)/c-parser.c \\$(srcdir)/c-lang.h\""}, {"sha": "9940f928ae8e1d05a5758819a31872c1da476fcc", "filename": "gcc/c-decl.c", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=29cc57cf00eff8c71527418fe0dfacd8a00bfdf3", "patch": "@@ -50,6 +50,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"timevar.h\"\n #include \"c-common.h\"\n #include \"c-pragma.h\"\n+#include \"c-lang.h\"\n #include \"langhooks.h\"\n #include \"tree-mudflap.h\"\n #include \"gimple.h\"\n@@ -8136,21 +8137,6 @@ c_pop_function_context (void)\n   warn_about_return_type = p->warn_about_return_type;\n }\n \n-/* Copy the DECL_LANG_SPECIFIC data associated with DECL.  */\n-\n-void\n-c_dup_lang_specific_decl (tree decl)\n-{\n-  struct lang_decl *ld;\n-\n-  if (!DECL_LANG_SPECIFIC (decl))\n-    return;\n-\n-  ld = GGC_NEW (struct lang_decl);\n-  memcpy (ld, DECL_LANG_SPECIFIC (decl), sizeof (struct lang_decl));\n-  DECL_LANG_SPECIFIC (decl) = ld;\n-}\n-\n /* The functions below are required for functionality of doing\n    function at once processing in the C front end. Currently these\n    functions are not called from anywhere in the C front end, but as"}, {"sha": "beed5071c66c755a79277324cd91be7379a9aa5a", "filename": "gcc/c-lang.h", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2Fc-lang.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2Fc-lang.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lang.h?ref=29cc57cf00eff8c71527418fe0dfacd8a00bfdf3", "patch": "@@ -0,0 +1,60 @@\n+/* Definitions for C language specific types.\n+   Copyright (C) 2009\n+   Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_C_LANG_H\n+#define GCC_C_LANG_H\n+\n+#include \"c-common.h\"\n+#include \"ggc.h\"\n+\n+struct GTY(()) lang_type {\n+  /* In a RECORD_TYPE, a sorted array of the fields of the type.  */\n+  struct sorted_fields_type * GTY ((reorder (\"resort_sorted_fields\"))) s;\n+  /* In an ENUMERAL_TYPE, the min and max values.  */\n+  tree enum_min;\n+  tree enum_max;\n+  /* In a RECORD_TYPE, information specific to Objective-C, such\n+     as a list of adopted protocols or a pointer to a corresponding\n+     @interface.  See objc/objc-act.h for details.  */\n+  tree objc_info;\n+};\n+\n+struct GTY(()) lang_decl {\n+  char dummy;\n+};\n+\n+/* Save and restore the variables in this file and elsewhere\n+   that keep track of the progress of compilation of the current function.\n+   Used for nested functions.  */\n+\n+struct GTY(()) language_function {\n+  struct c_language_function base;\n+  tree x_break_label;\n+  tree x_cont_label;\n+  struct c_switch * GTY((skip)) x_switch_stack;\n+  struct c_arg_info * GTY((skip)) arg_info;\n+  int returns_value;\n+  int returns_null;\n+  int returns_abnormally;\n+  int warn_about_return_type;\n+};\n+\n+\n+#endif /* ! GCC_C_LANG_H */"}, {"sha": "e90236e96c84c004a242d71dd79d622374325dd0", "filename": "gcc/c-objc-common.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2Fc-objc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2Fc-objc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-objc-common.h?ref=29cc57cf00eff8c71527418fe0dfacd8a00bfdf3", "patch": "@@ -54,8 +54,6 @@ along with GCC; see the file COPYING3.  If not see\n #define LANG_HOOKS_TYPES_COMPATIBLE_P c_types_compatible_p\n #undef LANG_HOOKS_MISSING_NORETURN_OK_P\n #define LANG_HOOKS_MISSING_NORETURN_OK_P c_missing_noreturn_ok_p\n-#undef LANG_HOOKS_DUP_LANG_SPECIFIC_DECL\n-#define LANG_HOOKS_DUP_LANG_SPECIFIC_DECL c_dup_lang_specific_decl\n #undef  LANG_HOOKS_BUILTIN_FUNCTION\n #define LANG_HOOKS_BUILTIN_FUNCTION c_builtin_function\n #undef  LANG_HOOKS_BUILTIN_FUNCTION_EXT_SCOPE"}, {"sha": "502e6efd1520d80a72e19adf2ec7f6fa36b4a693", "filename": "gcc/c-tree.h", "status": "modified", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=29cc57cf00eff8c71527418fe0dfacd8a00bfdf3", "patch": "@@ -31,12 +31,6 @@ along with GCC; see the file COPYING3.  If not see\n #define C_SIZEOF_STRUCT_LANG_IDENTIFIER \\\n   (sizeof (struct c_common_identifier) + 3 * sizeof (void *))\n \n-/* Language-specific declaration information.  */\n-\n-struct GTY(()) lang_decl {\n-  char dummy;\n-};\n-\n /* In a RECORD_TYPE or UNION_TYPE, nonzero if any component is read-only.  */\n #define C_TYPE_FIELDS_READONLY(TYPE) TREE_LANG_FLAG_1 (TYPE)\n \n@@ -56,18 +50,6 @@ struct GTY(()) lang_decl {\n    and C_RID_YYCODE is the token number wanted by Yacc.  */\n #define C_IS_RESERVED_WORD(ID) TREE_LANG_FLAG_0 (ID)\n \n-struct GTY(()) lang_type {\n-  /* In a RECORD_TYPE, a sorted array of the fields of the type.  */\n-  struct sorted_fields_type * GTY ((reorder (\"resort_sorted_fields\"))) s;\n-  /* In an ENUMERAL_TYPE, the min and max values.  */\n-  tree enum_min;\n-  tree enum_max;\n-  /* In a RECORD_TYPE, information specific to Objective-C, such\n-     as a list of adopted protocols or a pointer to a corresponding\n-     @interface.  See objc/objc-act.h for details.  */\n-  tree objc_info;\n-};\n-\n /* Record whether a type or decl was written with nonconstant size.\n    Note that TYPE_SIZE may have simplified to a constant.  */\n #define C_TYPE_VARIABLE_SIZE(TYPE) TYPE_LANG_FLAG_1 (TYPE)\n@@ -382,22 +364,6 @@ struct c_parm {\n   struct c_declarator *declarator;\n };\n \n-/* Save and restore the variables in this file and elsewhere\n-   that keep track of the progress of compilation of the current function.\n-   Used for nested functions.  */\n-\n-struct GTY(()) language_function {\n-  struct c_language_function base;\n-  tree x_break_label;\n-  tree x_cont_label;\n-  struct c_switch * GTY((skip)) x_switch_stack;\n-  struct c_arg_info * GTY((skip)) arg_info;\n-  int returns_value;\n-  int returns_null;\n-  int returns_abnormally;\n-  int warn_about_return_type;\n-};\n-\n /* Used when parsing an enum.  Initialized by start_enum.  */\n struct c_enum_contents\n {\n@@ -444,7 +410,6 @@ extern void c_bindings_end_stmt_expr (struct c_spot_bindings *);\n extern void record_inline_static (location_t, tree, tree,\n \t\t\t\t  enum c_inline_static_type);\n extern void c_init_decl_processing (void);\n-extern void c_dup_lang_specific_decl (tree);\n extern void c_print_identifier (FILE *, tree, int);\n extern int quals_from_declspecs (const struct c_declspecs *);\n extern struct c_declarator *build_array_declarator (location_t, tree,"}, {"sha": "abd78804aece585ac233bf7a451964333f0bd0a0", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=29cc57cf00eff8c71527418fe0dfacd8a00bfdf3", "patch": "@@ -33,6 +33,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"langhooks.h\"\n #include \"c-tree.h\"\n+#include \"c-lang.h\"\n #include \"tm_p.h\"\n #include \"flags.h\"\n #include \"output.h\""}, {"sha": "7bc6a9e413df14c200d8e56f2703360dca57f8e2", "filename": "gcc/gengtype.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=29cc57cf00eff8c71527418fe0dfacd8a00bfdf3", "patch": "@@ -1741,6 +1741,8 @@ get_output_file_with_visibility (const char *input_file)\n      headers with source files (and their special purpose gt-*.h headers).  */\n   else if (strcmp (basename, \"c-common.h\") == 0)\n     output_name = \"gt-c-common.h\", for_name = \"c-common.c\";\n+  else if (strcmp (basename, \"c-lang.h\") == 0)\n+    output_name = \"gt-c-decl.h\", for_name = \"c-decl.c\";\n   else if (strcmp (basename, \"c-tree.h\") == 0)\n     output_name = \"gt-c-decl.h\", for_name = \"c-decl.c\";\n   else if (strncmp (basename, \"cp\", 2) == 0 && IS_DIR_SEPARATOR (basename[2])"}, {"sha": "f1b57228f66f81292091d2e5b0e7945aa9a49fc0", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=29cc57cf00eff8c71527418fe0dfacd8a00bfdf3", "patch": "@@ -1,3 +1,8 @@\n+2009-08-20  Richard Guenther  <rguenther@suse.de>\n+\n+\t* objc-act.c: Include c-lang.h\n+\t* Make-lang.in (objc/objc-act.o): Add c-lang.h dependency.\n+\n 2009-07-17  Aldy Hernandez  <aldyh@redhat.com>\n \t    Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n "}, {"sha": "a09849717b2b7cfca21f7031134d0b683b2dec38", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=29cc57cf00eff8c71527418fe0dfacd8a00bfdf3", "patch": "@@ -79,7 +79,7 @@ objc/objc-act.o : objc/objc-act.c \\\n    $(EXPR_H) $(TARGET_H) $(C_TREE_H) $(DIAGNOSTIC_H) toplev.h $(FLAGS_H) \\\n    objc/objc-act.h input.h $(FUNCTION_H) output.h debug.h langhooks.h \\\n    $(LANGHOOKS_DEF_H) $(HASHTAB_H) $(C_PRAGMA_H) gt-objc-objc-act.h \\\n-   $(GIMPLE_H)\n+   $(GIMPLE_H) c-lang.h\n \n objc.srcextra:\n "}, {"sha": "8b1a596c3237859e11c73906e42cf9870fee960b", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29cc57cf00eff8c71527418fe0dfacd8a00bfdf3/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=29cc57cf00eff8c71527418fe0dfacd8a00bfdf3", "patch": "@@ -52,6 +52,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cp-tree.h\"\n #else\n #include \"c-tree.h\"\n+#include \"c-lang.h\"\n #endif\n \n #include \"c-common.h\""}]}