{"sha": "4fb639a7fee5df32a2d1e7afa40fdf31d280464b", "node_id": "C_kwDOANBUbNoAKDRmYjYzOWE3ZmVlNWRmMzJhMmQxZTdhZmE0MGZkZjMxZDI4MDQ2NGI", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-01-03T11:12:35Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-01-03T11:12:35Z"}, "message": "cfgrtl: Don't try to redirect asm goto to EXIT [PR108263]\n\nThe following testcase distilled from Linux kernel on ppc64le ICEs,\nbecause fixup_reorder_chain sees a bb with a single fallthru edge\nfalling into a bb with simple return and decides to redirect\nthat fallthru edge to EXIT.  That is possible if the bb ending\nin the fallthru edge doesn't end with a jump or ends with a normal\nunconditional jump, but not when the bb ends with asm goto which can despite\na single fallthru have multiple labels to the fallthrough basic block.\n\nThe following patch makes sure we never try to redirect such cases to EXIT.\n\n2023-01-03  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR rtl-optimization/108263\n\t* cfgrtl.cc (fixup_reorder_chain): Avoid trying to redirect\n\tasm goto to EXIT.\n\n\t* gcc.dg/pr108263.c: New test.", "tree": {"sha": "a9a9bfea30476fc781043db1c39b9b6c96b50783", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9a9bfea30476fc781043db1c39b9b6c96b50783"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fb639a7fee5df32a2d1e7afa40fdf31d280464b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fb639a7fee5df32a2d1e7afa40fdf31d280464b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fb639a7fee5df32a2d1e7afa40fdf31d280464b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fb639a7fee5df32a2d1e7afa40fdf31d280464b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "201c21b0e847679645df1af3dd13459274f41047", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/201c21b0e847679645df1af3dd13459274f41047", "html_url": "https://github.com/Rust-GCC/gccrs/commit/201c21b0e847679645df1af3dd13459274f41047"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "1d84b29ce61a4941b612b0bda7669cca77a14e58", "filename": "gcc/cfgrtl.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fb639a7fee5df32a2d1e7afa40fdf31d280464b/gcc%2Fcfgrtl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fb639a7fee5df32a2d1e7afa40fdf31d280464b/gcc%2Fcfgrtl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.cc?ref=4fb639a7fee5df32a2d1e7afa40fdf31d280464b", "patch": "@@ -3910,6 +3910,7 @@ fixup_reorder_chain (void)\n       rtx ret_label = NULL_RTX;\n       basic_block nb;\n       edge_iterator ei;\n+      bool asm_goto = false;\n \n       if (EDGE_COUNT (bb->succs) == 0)\n \tcontinue;\n@@ -4016,7 +4017,9 @@ fixup_reorder_chain (void)\n \t\t  || e_fall->dest == EXIT_BLOCK_PTR_FOR_FN (cfun))\n \t\tcontinue;\n \n-\t      /* Otherwise we'll have to use the fallthru fixup below.  */\n+\t      /* Otherwise we'll have to use the fallthru fixup below.\n+\t\t But avoid redirecting asm goto to EXIT.  */\n+\t      asm_goto = true;\n \t    }\n \t  else\n \t    {\n@@ -4048,7 +4051,8 @@ fixup_reorder_chain (void)\n \t return rather than a jump to the return block.  */\n       rtx_insn *ret, *use;\n       basic_block dest;\n-      if (bb_is_just_return (e_fall->dest, &ret, &use)\n+      if (!asm_goto\n+\t  && bb_is_just_return (e_fall->dest, &ret, &use)\n \t  && ((PATTERN (ret) == simple_return_rtx && targetm.have_simple_return ())\n \t      || (PATTERN (ret) == ret_rtx && targetm.have_return ())))\n \t{"}, {"sha": "688df326653e87a9a99559151d6b6051a690862b", "filename": "gcc/testsuite/gcc.dg/pr108263.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fb639a7fee5df32a2d1e7afa40fdf31d280464b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108263.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fb639a7fee5df32a2d1e7afa40fdf31d280464b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108263.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108263.c?ref=4fb639a7fee5df32a2d1e7afa40fdf31d280464b", "patch": "@@ -0,0 +1,25 @@\n+/* PR rtl-optimization/108263 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int v, *p;\n+\n+void\n+foo (void)\n+{\n+  int i;\n+  for (i = 0; ; i++)\n+    {\n+      if (v)\n+\t{\n+\t  __label__ l1;\n+\t  asm goto (\"\" : : : : l1);\n+\tl1:\n+\t  return;\n+\t}\n+      if (p[i])\n+\tbreak;\n+    }\n+  asm goto (\"\" : : \"r\" (i) : : l2);\n+l2:;\n+}"}]}