{"sha": "efd1582926f3278a5e57ebab7d87fc870f06ecea", "node_id": "C_kwDOANBUbNoAKGVmZDE1ODI5MjZmMzI3OGE1ZTU3ZWJhYjdkODdmYzg3MGYwNmVjZWE", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-03-15T08:15:27Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-03-15T08:15:27Z"}, "message": "c++: Fix up cp_parser_skip_to_pragma_eol [PR104623]\n\nWe ICE on the following testcase, because we tentatively parse it multiple\ntimes and the erroneous attribute syntax results in\ncp_parser_skip_to_end_of_statement, which when seeing CPP_PRAGMA (can be\nany deferred one, OpenMP/OpenACC/ivdep etc.) it calls\ncp_parser_skip_to_pragma_eol, which calls cp_lexer_purge_tokens_after.\nThat call purges all the tokens from CPP_PRAGMA until CPP_PRAGMA_EOL,\nexcluding the initial CPP_PRAGMA though (but including the final\nCPP_PRAGMA_EOL).  This means the second time we parse this, we see\nCPP_PRAGMA with no tokens after it from the pragma, most importantly\nnot the CPP_PRAGMA_EOL, so either if it is the last pragma in the TU,\nwe ICE, or if there are other pragmas we treat everything in between\nas a pragma.\n\nI've tried various things, including making the CPP_PRAGMA token\nitself also purged, or changing the cp_parser_skip_to_end_of_statement\n(and cp_parser_skip_to_end_of_block_or_statement) to call it with\nNULL instead of token, so that this purging isn't done there,\nbut each patch resulted in lots of regressions.\nBut removing the purging altogether surprisingly doesn't regress anything,\nand I think it is the right thing, if we e.g. parse tentatively, why can't\nwe parse the pragma multiple times or at least skip over it?\n\n2022-03-15  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/104623\n\t* parser.cc (cp_parser_skip_to_pragma_eol): Don't purge any tokens.\n\n\t* g++.dg/gomp/pr104623.C: New test.", "tree": {"sha": "a806957e5961f4f7f3f12e77338abf217b3e4ba4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a806957e5961f4f7f3f12e77338abf217b3e4ba4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efd1582926f3278a5e57ebab7d87fc870f06ecea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efd1582926f3278a5e57ebab7d87fc870f06ecea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efd1582926f3278a5e57ebab7d87fc870f06ecea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efd1582926f3278a5e57ebab7d87fc870f06ecea/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2645cd8fb33b36d737b310e26f4c47401305c7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2645cd8fb33b36d737b310e26f4c47401305c7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2645cd8fb33b36d737b310e26f4c47401305c7b"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "15ad6400730de7082aaef1a1dcbed838bb17ff9d", "filename": "gcc/cp/parser.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efd1582926f3278a5e57ebab7d87fc870f06ecea/gcc%2Fcp%2Fparser.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efd1582926f3278a5e57ebab7d87fc870f06ecea/gcc%2Fcp%2Fparser.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.cc?ref=efd1582926f3278a5e57ebab7d87fc870f06ecea", "patch": "@@ -4111,8 +4111,6 @@ cp_parser_skip_to_pragma_eol (cp_parser* parser, cp_token *pragma_tok)\n \n   if (pragma_tok)\n     {\n-      /* Ensure that the pragma is not parsed again.  */\n-      cp_lexer_purge_tokens_after (parser->lexer, pragma_tok);\n       parser->lexer->in_pragma = false;\n       if (parser->lexer->in_omp_attribute_pragma\n \t  && cp_lexer_next_token_is (parser->lexer, CPP_EOF))"}, {"sha": "725e19e8c26260617a20b6e5ae277637eec0f7b4", "filename": "gcc/testsuite/g++.dg/gomp/pr104623.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efd1582926f3278a5e57ebab7d87fc870f06ecea/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr104623.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efd1582926f3278a5e57ebab7d87fc870f06ecea/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr104623.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr104623.C?ref=efd1582926f3278a5e57ebab7d87fc870f06ecea", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/104623\n+// { dg-do compile }\n+\n+void\n+foo ()\n+{\n+  struct __attribute__() a\t// { dg-error \"expected primary-expression before\" }\n+  #pragma omp task\n+}"}]}