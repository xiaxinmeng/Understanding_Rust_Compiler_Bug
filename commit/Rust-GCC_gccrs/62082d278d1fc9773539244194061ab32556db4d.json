{"sha": "62082d278d1fc9773539244194061ab32556db4d", "node_id": "C_kwDOANBUbNoAKDYyMDgyZDI3OGQxZmM5NzczNTM5MjQ0MTk0MDYxYWIzMjU1NmRiNGQ", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2022-04-12T12:35:27Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2022-04-12T12:38:44Z"}, "message": "arm: fix testsuite failure of reg_equal_test.c [PR101755]\n\nThe test failure in PR101755 is due to the gimple optimizers getting\nsmarter.  But really we are just testing that RTL expansion is doing\nthe right thing and annotating a constant accordingly.  So rework the\ntest to use GIMPLE input and simplify the code entirely.  Also, this\ntest only ever worked on architecture versions with the MOVW/MOVT\ninstructions, so check for this before running.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/101755\n\t* gcc.target/arm/reg_equal_test.c: Convert to gimple test.  Restrict\n\tto architectures with MOVW/MOVT.", "tree": {"sha": "d48feb501e518937555a57466cedb7f945832dbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d48feb501e518937555a57466cedb7f945832dbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62082d278d1fc9773539244194061ab32556db4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62082d278d1fc9773539244194061ab32556db4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62082d278d1fc9773539244194061ab32556db4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62082d278d1fc9773539244194061ab32556db4d/comments", "author": null, "committer": null, "parents": [{"sha": "31cccadcf2d3cc8acb7a5f36ed57ca847f7ea0ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31cccadcf2d3cc8acb7a5f36ed57ca847f7ea0ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31cccadcf2d3cc8acb7a5f36ed57ca847f7ea0ea"}], "stats": {"total": 25, "additions": 8, "deletions": 17}, "files": [{"sha": "d87c75cc27c45daaff059c5c74600fcaf95a71cc", "filename": "gcc/testsuite/gcc.target/arm/reg_equal_test.c", "status": "modified", "additions": 8, "deletions": 17, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62082d278d1fc9773539244194061ab32556db4d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Freg_equal_test.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62082d278d1fc9773539244194061ab32556db4d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Freg_equal_test.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Freg_equal_test.c?ref=62082d278d1fc9773539244194061ab32556db4d", "patch": "@@ -1,24 +1,15 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -fdump-rtl-expand\" } */\n+/* { dg-options \"-fgimple -O1 -fdump-rtl-expand\" } */\n+/* { dg-skip-if \"\" { ! { arm_thumb2_ok || arm_thumb1_movt_ok } } } */\n \n-extern void abort (void);\n-unsigned int a = 1;\n-\n-int\n-main (void)\n+void __GIMPLE (ssa,startwith (\"expand\"))\n+x ()\n {\n-  unsigned int b, c, d;\n-\n-  if (sizeof (int) != 4 || (int) 0xc7d24b5e > 0)\n-    return 0;\n-\n-  c = 0xc7d24b5e;\n-  d = a | -2;\n-  b = (d == 0) ? c : (c % d);\n-  if (b != c)\n-    abort ();\n+  unsigned int d;\n \n-  return 0;\n+  __BB(2,guessed_local(1073741824)):\n+  d_1 = 3352447838u;\n+  return;\n }\n \n /* { dg-final { scan-rtl-dump \"expr_list:REG_EQUAL \\\\(const_int -942519458\" \"expand\" } } */"}]}