{"sha": "85e71e35052b106c8a7de44a7c209292b2e9f560", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODVlNzFlMzUwNTJiMTA2YzhhN2RlNDRhN2MyMDkyOTJiMmU5ZjU2MA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-06-10T22:21:34Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-06-10T22:21:34Z"}, "message": "rs6000: Factor out emit_split_stack_prologue\n\nThis is a first patch to make the prologue code more manageable.\n\n\n\t* config/rs6000/rs6000.c (emit_split_stack_prologue): New function,\n\tfactored out from ...\n\t(rs6000_emit_prologue): ... here.\n\nFrom-SVN: r249095", "tree": {"sha": "582399e89d12205dff4671c13c554f48cfa5ca4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/582399e89d12205dff4671c13c554f48cfa5ca4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85e71e35052b106c8a7de44a7c209292b2e9f560", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85e71e35052b106c8a7de44a7c209292b2e9f560", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85e71e35052b106c8a7de44a7c209292b2e9f560", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85e71e35052b106c8a7de44a7c209292b2e9f560/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e525ddf40fff65b421e6d00615b1c15c69e5b946", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e525ddf40fff65b421e6d00615b1c15c69e5b946", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e525ddf40fff65b421e6d00615b1c15c69e5b946"}], "stats": {"total": 92, "additions": 53, "deletions": 39}, "files": [{"sha": "0ff3f68f5d4ae06ed0b08798400e3c64df18ab49", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85e71e35052b106c8a7de44a7c209292b2e9f560/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85e71e35052b106c8a7de44a7c209292b2e9f560/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=85e71e35052b106c8a7de44a7c209292b2e9f560", "patch": "@@ -1,3 +1,9 @@\n+2017-06-10  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.c (emit_split_stack_prologue): New function,\n+\tfactored out from ...\n+\t(rs6000_emit_prologue): ... here.\n+\n 2017-06-10  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* predict.c (drop_profile): Also drop individual bb/edge and cgraph"}, {"sha": "90d028c6aee1b644f14ee1becc067fde5bacadd8", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 47, "deletions": 39, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85e71e35052b106c8a7de44a7c209292b2e9f560/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85e71e35052b106c8a7de44a7c209292b2e9f560/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=85e71e35052b106c8a7de44a7c209292b2e9f560", "patch": "@@ -28106,6 +28106,51 @@ rs6000_set_handled_components (sbitmap components)\n     cfun->machine->lr_is_wrapped_separately = true;\n }\n \n+/* Set up the arg pointer (r12) for -fsplit-stack code.  If __morestack was\n+   called, it left the arg pointer to the old stack in r29.  Otherwise, the\n+   arg pointer is the top of the current frame.  */\n+static void\n+emit_split_stack_prologue (rs6000_stack_t *info, rtx_insn *sp_adjust,\n+\t\t\t   HOST_WIDE_INT frame_off, rtx frame_reg_rtx)\n+{\n+  cfun->machine->split_stack_argp_used = true;\n+\n+  if (sp_adjust)\n+    {\n+      rtx r12 = gen_rtx_REG (Pmode, 12);\n+      rtx sp_reg_rtx = gen_rtx_REG (Pmode, STACK_POINTER_REGNUM);\n+      rtx set_r12 = gen_rtx_SET (r12, sp_reg_rtx);\n+      emit_insn_before (set_r12, sp_adjust);\n+    }\n+  else if (frame_off != 0 || REGNO (frame_reg_rtx) != 12)\n+    {\n+      rtx r12 = gen_rtx_REG (Pmode, 12);\n+      if (frame_off == 0)\n+\temit_move_insn (r12, frame_reg_rtx);\n+      else\n+\temit_insn (gen_add3_insn (r12, frame_reg_rtx, GEN_INT (frame_off)));\n+    }\n+\n+  if (info->push_p)\n+    {\n+      rtx r12 = gen_rtx_REG (Pmode, 12);\n+      rtx r29 = gen_rtx_REG (Pmode, 29);\n+      rtx cr7 = gen_rtx_REG (CCUNSmode, CR7_REGNO);\n+      rtx not_more = gen_label_rtx ();\n+      rtx jump;\n+\n+      jump = gen_rtx_IF_THEN_ELSE (VOIDmode,\n+\t\t\t\t   gen_rtx_GEU (VOIDmode, cr7, const0_rtx),\n+\t\t\t\t   gen_rtx_LABEL_REF (VOIDmode, not_more),\n+\t\t\t\t   pc_rtx);\n+      jump = emit_jump_insn (gen_rtx_SET (pc_rtx, jump));\n+      JUMP_LABEL (jump) = not_more;\n+      LABEL_NUSES (not_more) += 1;\n+      emit_move_insn (r12, r29);\n+      emit_label (not_more);\n+    }\n+}\n+\n /* Emit function prologue as insns.  */\n \n void\n@@ -29006,46 +29051,9 @@ rs6000_emit_prologue (void)\n       emit_insn (gen_frame_store (reg, sp_reg_rtx, RS6000_TOC_SAVE_SLOT));\n     }\n \n+  /* Set up the arg pointer (r12) for -fsplit-stack code.  */\n   if (using_split_stack && split_stack_arg_pointer_used_p ())\n-    {\n-      /* Set up the arg pointer (r12) for -fsplit-stack code.  If\n-\t __morestack was called, it left the arg pointer to the old\n-\t stack in r29.  Otherwise, the arg pointer is the top of the\n-\t current frame.  */\n-      cfun->machine->split_stack_argp_used = true;\n-      if (sp_adjust)\n-\t{\n-\t  rtx r12 = gen_rtx_REG (Pmode, 12);\n-\t  rtx set_r12 = gen_rtx_SET (r12, sp_reg_rtx);\n-\t  emit_insn_before (set_r12, sp_adjust);\n-\t}\n-      else if (frame_off != 0 || REGNO (frame_reg_rtx) != 12)\n-\t{\n-\t  rtx r12 = gen_rtx_REG (Pmode, 12);\n-\t  if (frame_off == 0)\n-\t    emit_move_insn (r12, frame_reg_rtx);\n-\t  else\n-\t    emit_insn (gen_add3_insn (r12, frame_reg_rtx, GEN_INT (frame_off)));\n-\t}\n-      if (info->push_p)\n-\t{\n-\t  rtx r12 = gen_rtx_REG (Pmode, 12);\n-\t  rtx r29 = gen_rtx_REG (Pmode, 29);\n-\t  rtx cr7 = gen_rtx_REG (CCUNSmode, CR7_REGNO);\n-\t  rtx not_more = gen_label_rtx ();\n-\t  rtx jump;\n-\n-\t  jump = gen_rtx_IF_THEN_ELSE (VOIDmode,\n-\t\t\t\t       gen_rtx_GEU (VOIDmode, cr7, const0_rtx),\n-\t\t\t\t       gen_rtx_LABEL_REF (VOIDmode, not_more),\n-\t\t\t\t       pc_rtx);\n-\t  jump = emit_jump_insn (gen_rtx_SET (pc_rtx, jump));\n-\t  JUMP_LABEL (jump) = not_more;\n-\t  LABEL_NUSES (not_more) += 1;\n-\t  emit_move_insn (r12, r29);\n-\t  emit_label (not_more);\n-\t}\n-    }\n+    emit_split_stack_prologue (info, sp_adjust, frame_off, frame_reg_rtx);\n }\n \n /* Output .extern statements for the save/restore routines we use.  */"}]}