{"sha": "7cc6af0cdabb9deb55e357df71094931da1e91e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NjNmFmMGNkYWJiOWRlYjU1ZTM1N2RmNzEwOTQ5MzFkYTFlOTFlOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-12-16T09:40:31Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-12-16T09:40:31Z"}, "message": "re PR target/19005 (Error: bad register name `%sil')\n\n        PR target/19005\n        * config/i386/i386.md (swaphi_1): Swap with swaphi_2, allow with\n        optimize_size.\n        (swapqi_1): Rename from swapqi.  Enable only for no partial reg\n        stall and optimize_size.\n        (swapqi_2): New.\n        (swaphi_1, swaphi_2, swapqi_1): Add athlon_decode.\n        (swapsi, swaphi_1, swaphi_2, swapqi_1, swapdi): Remove modrm override.\n\nFrom-SVN: r92250", "tree": {"sha": "7bf43c97c7b7e34bb5ba428504694325b8a811a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bf43c97c7b7e34bb5ba428504694325b8a811a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cc6af0cdabb9deb55e357df71094931da1e91e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cc6af0cdabb9deb55e357df71094931da1e91e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cc6af0cdabb9deb55e357df71094931da1e91e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cc6af0cdabb9deb55e357df71094931da1e91e8/comments", "author": null, "committer": null, "parents": [{"sha": "692308bbd46d093d4e9a1c8fdbed1d5b245db2f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/692308bbd46d093d4e9a1c8fdbed1d5b245db2f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/692308bbd46d093d4e9a1c8fdbed1d5b245db2f6"}], "stats": {"total": 62, "additions": 41, "deletions": 21}, "files": [{"sha": "d40af365f9da980ecd48d772a925aa5a11200667", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cc6af0cdabb9deb55e357df71094931da1e91e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cc6af0cdabb9deb55e357df71094931da1e91e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7cc6af0cdabb9deb55e357df71094931da1e91e8", "patch": "@@ -1,3 +1,14 @@\n+2004-12-15  Richard Henderson  <rth@redhat.com>\n+\n+\tPR target/19005\n+\t* config/i386/i386.md (swaphi_1): Swap with swaphi_2, allow with\n+\toptimize_size.\n+\t(swapqi_1): Rename from swapqi.  Enable only for no partial reg\n+\tstall and optimize_size.\n+\t(swapqi_2): New.\n+\t(swaphi_1, swaphi_2, swapqi_1): Add athlon_decode.\n+\t(swapsi, swaphi_1, swaphi_2, swapqi_1, swapdi): Remove modrm override.\n+\n 2004-12-16  Uros Bizjak  <uros@kss-loka.si>\n \n \t* config/i386/i386.md (*floathisf2_i387, *floathidf2_i387):\n@@ -57,13 +68,13 @@\n \ton the STMT_EXPR wrapping up the inlined body.\n \n 2004-12-15  Vladimir Makarov  <vmakarov@redhat.com>\n-            Steven Bosscher  <stevenb@suse.de>\n+\t    Steven Bosscher  <stevenb@suse.de>\n \tPR middle end/17340\n \n \t* global.c: Update comments in a few places.\n \t(check_earlyclobber): Return true if there are early clobber\n \tclasses.\n-        (calculate_local_reg_bb_info): Do not try to mark earlyclobber\n+\t(calculate_local_reg_bb_info): Do not try to mark earlyclobber\n \tregs if there are none.\n \t(bb_info, allocate_bb_info, free_bb_info, modify_reg_pav,\n \tmake_accurate_live_analysis): Rename pavin, pavout to live_pavin,"}, {"sha": "db6a724d34c83abcf7a3f7c4e6464eb30d332905", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 28, "deletions": 19, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cc6af0cdabb9deb55e357df71094931da1e91e8/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cc6af0cdabb9deb55e357df71094931da1e91e8/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=7cc6af0cdabb9deb55e357df71094931da1e91e8", "patch": "@@ -1238,10 +1238,9 @@\n   \"\"\n   \"xchg{l}\\t%1, %0\"\n   [(set_attr \"type\" \"imov\")\n-   (set_attr \"pent_pair\" \"np\")\n-   (set_attr \"athlon_decode\" \"vector\")\n    (set_attr \"mode\" \"SI\")\n-   (set_attr \"modrm\" \"0\")])\n+   (set_attr \"pent_pair\" \"np\")\n+   (set_attr \"athlon_decode\" \"vector\")])\n \n (define_expand \"movhi\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n@@ -1355,24 +1354,24 @@\n \t(match_operand:HI 1 \"register_operand\" \"+r\"))\n    (set (match_dup 1)\n \t(match_dup 0))]\n-  \"TARGET_PARTIAL_REG_STALL\"\n-  \"xchg{w}\\t%1, %0\"\n+  \"!TARGET_PARTIAL_REG_STALL || optimize_size\"\n+  \"xchg{l}\\t%k1, %k0\"\n   [(set_attr \"type\" \"imov\")\n+   (set_attr \"mode\" \"SI\")\n    (set_attr \"pent_pair\" \"np\")\n-   (set_attr \"mode\" \"HI\")\n-   (set_attr \"modrm\" \"0\")])\n+   (set_attr \"athlon_decode\" \"vector\")])\n \n (define_insn \"*swaphi_2\"\n   [(set (match_operand:HI 0 \"register_operand\" \"+r\")\n \t(match_operand:HI 1 \"register_operand\" \"+r\"))\n    (set (match_dup 1)\n \t(match_dup 0))]\n-  \"! TARGET_PARTIAL_REG_STALL\"\n-  \"xchg{l}\\t%k1, %k0\"\n+  \"TARGET_PARTIAL_REG_STALL\"\n+  \"xchg{w}\\t%1, %0\"\n   [(set_attr \"type\" \"imov\")\n+   (set_attr \"mode\" \"HI\")\n    (set_attr \"pent_pair\" \"np\")\n-   (set_attr \"mode\" \"SI\")\n-   (set_attr \"modrm\" \"0\")])\n+   (set_attr \"athlon_decode\" \"vector\")])\n \n (define_expand \"movstricthi\"\n   [(set (strict_low_part (match_operand:HI 0 \"nonimmediate_operand\" \"\"))\n@@ -1521,17 +1520,29 @@\n   DONE;\n })\n \n-(define_insn \"*swapqi\"\n+(define_insn \"*swapqi_1\"\n   [(set (match_operand:QI 0 \"register_operand\" \"+r\")\n \t(match_operand:QI 1 \"register_operand\" \"+r\"))\n    (set (match_dup 1)\n \t(match_dup 0))]\n-  \"\"\n-  \"xchg{b}\\t%1, %0\"\n+  \"!TARGET_PARTIAL_REG_STALL || optimize_size\"\n+  \"xchg{l}\\t%k1, %k0\"\n   [(set_attr \"type\" \"imov\")\n+   (set_attr \"mode\" \"SI\")\n    (set_attr \"pent_pair\" \"np\")\n+   (set_attr \"athlon_decode\" \"vector\")])\n+\n+(define_insn \"*swapqi_2\"\n+  [(set (match_operand:QI 0 \"register_operand\" \"+q\")\n+\t(match_operand:QI 1 \"register_operand\" \"+q\"))\n+   (set (match_dup 1)\n+\t(match_dup 0))]\n+  \"TARGET_PARTIAL_REG_STALL\"\n+  \"xchg{b}\\t%1, %0\"\n+  [(set_attr \"type\" \"imov\")\n    (set_attr \"mode\" \"QI\")\n-   (set_attr \"modrm\" \"0\")])\n+   (set_attr \"pent_pair\" \"np\")\n+   (set_attr \"athlon_decode\" \"vector\")])\n \n (define_expand \"movstrictqi\"\n   [(set (strict_low_part (match_operand:QI 0 \"nonimmediate_operand\" \"\"))\n@@ -2094,12 +2105,10 @@\n   \"TARGET_64BIT\"\n   \"xchg{q}\\t%1, %0\"\n   [(set_attr \"type\" \"imov\")\n-   (set_attr \"pent_pair\" \"np\")\n-   (set_attr \"athlon_decode\" \"vector\")\n    (set_attr \"mode\" \"DI\")\n-   (set_attr \"modrm\" \"0\")])\n+   (set_attr \"pent_pair\" \"np\")\n+   (set_attr \"athlon_decode\" \"vector\")])\n \n-  \n (define_expand \"movsf\"\n   [(set (match_operand:SF 0 \"nonimmediate_operand\" \"\")\n \t(match_operand:SF 1 \"general_operand\" \"\"))]"}]}