{"sha": "6a9c4aed1a6cce4cb8d40759c500607835f758e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE5YzRhZWQxYTZjY2U0Y2I4ZDQwNzU5YzUwMDYwNzgzNWY3NThlMw==", "commit": {"author": {"name": "Mumit Khan", "email": "khan@xraylith.wisc.edu", "date": "1999-04-26T22:51:09Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-04-26T22:51:09Z"}, "message": "function.c (put_var_into_stack): Change ptr_mode to Pmode in setup for chkr_set_right_libfunc calls.\n\n        * function.c (put_var_into_stack): Change ptr_mode to Pmode\n        in setup for chkr_set_right_libfunc calls.\n        (assign_params): Likewise.\n        * expr.c (emit_push_insn): Change ptr_mode to Pmode in\n        setup for chkr_copy_bitmap_libfunc and chkr_set_right_libfunc calls.\n        (expand_assignment): Change ptr_mode to Pmode in\n        setup for chkr_add_libfunc and chkr_copy_bitmap_libfunc.\n        (store_expr): Change ptr_mode to Pmode in\n        setup for chkr_add_libfunc and chkr_copy_bitmap_libfunc.\n        (expand_expr): Change ptr_mode to Pmode in\n        setup for chkr_check_addr_libfunc.\n        (expand_builtin): Change ptr_mode to Pmode in\n        setup for chkr_check_str_libfunc, chkr_copy_bitmap_libfunc and\n        chkr_check_addr_libfunc.\n        * calls.c (rtx_for_function_call): Change ptr_mode to Pmode in\n        setup for chkr_check_exec_libfunc.\n        (expand_call): Change ptr_mode to Pmode in\n        setup for chkr_set_right_libfunc.\n        (expand_call): Change ptr_mode to Pmode in\n        setup for chkr_set_right_libfunc.\n        (store_one_arg): Change ptr_mode to Pmode in\n        setup for chkr_set_right_libfunc.\n\nCo-Authored-By: Donn Terry <donn@interix.com>\n\nFrom-SVN: r26664", "tree": {"sha": "639805e55460141c93c728306d3cfa5bb9e473ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/639805e55460141c93c728306d3cfa5bb9e473ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a9c4aed1a6cce4cb8d40759c500607835f758e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a9c4aed1a6cce4cb8d40759c500607835f758e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a9c4aed1a6cce4cb8d40759c500607835f758e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a9c4aed1a6cce4cb8d40759c500607835f758e3/comments", "author": null, "committer": null, "parents": [{"sha": "112cedb09bddd98884385587645c29b8e74f8d74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/112cedb09bddd98884385587645c29b8e74f8d74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/112cedb09bddd98884385587645c29b8e74f8d74"}], "stats": {"total": 81, "additions": 52, "deletions": 29}, "files": [{"sha": "4827a15618d25be135463552a4bf847c3d5e205c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9c4aed1a6cce4cb8d40759c500607835f758e3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9c4aed1a6cce4cb8d40759c500607835f758e3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a9c4aed1a6cce4cb8d40759c500607835f758e3", "patch": "@@ -1,6 +1,29 @@\n Mon Apr 26 23:28:54 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n                           Donn Terry  <donn@interix.com>\n \n+\t* function.c (put_var_into_stack): Change ptr_mode to Pmode\n+\tin setup for chkr_set_right_libfunc calls.\n+\t(assign_params): Likewise.\n+\t* expr.c (emit_push_insn): Change ptr_mode to Pmode in\n+\tsetup for chkr_copy_bitmap_libfunc and chkr_set_right_libfunc calls.\n+\t(expand_assignment): Change ptr_mode to Pmode in\n+\tsetup for chkr_add_libfunc and chkr_copy_bitmap_libfunc.\n+\t(store_expr): Change ptr_mode to Pmode in\n+\tsetup for chkr_add_libfunc and chkr_copy_bitmap_libfunc.\n+\t(expand_expr): Change ptr_mode to Pmode in\n+\tsetup for chkr_check_addr_libfunc.\n+\t(expand_builtin): Change ptr_mode to Pmode in\n+\tsetup for chkr_check_str_libfunc, chkr_copy_bitmap_libfunc and\n+\tchkr_check_addr_libfunc.\n+\t* calls.c (rtx_for_function_call): Change ptr_mode to Pmode in\n+\tsetup for chkr_check_exec_libfunc.\n+\t(expand_call): Change ptr_mode to Pmode in\n+\tsetup for chkr_set_right_libfunc.\n+\t(expand_call): Change ptr_mode to Pmode in\n+\tsetup for chkr_set_right_libfunc.\n+\t(store_one_arg): Change ptr_mode to Pmode in\n+\tsetup for chkr_set_right_libfunc.\n+\n         * c-parse.in (absdcl1): Allow attributes in explicit typespecs.\n         (%expect): Update.\n         * c-parse.y: Regenerate."}, {"sha": "466c7785c6e0673d8927c9a37c383f43bd4d94a3", "filename": "gcc/calls.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9c4aed1a6cce4cb8d40759c500607835f758e3/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9c4aed1a6cce4cb8d40759c500607835f758e3/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=6a9c4aed1a6cce4cb8d40759c500607835f758e3", "patch": "@@ -1415,7 +1415,7 @@ rtx_for_function_call (fndecl, exp)\n       if (current_function_check_memory_usage)\n \temit_library_call (chkr_check_exec_libfunc, 1,\n \t\t\t   VOIDmode, 1,\n-\t\t\t   funexp, ptr_mode);\n+\t\t\t   funexp, Pmode);\n       emit_queue ();\n     }\n   return funexp;\n@@ -2256,7 +2256,7 @@ expand_call (exp, target, ignore)\n       if (current_function_check_memory_usage)\n \temit_library_call (chkr_set_right_libfunc, 1,\n \t\t\t   VOIDmode, 3,\n-\t\t\t   structure_value_addr, ptr_mode, \n+\t\t\t   structure_value_addr, Pmode, \n \t\t\t   GEN_INT (struct_value_size), TYPE_MODE (sizetype),\n \t\t\t   GEN_INT (MEMORY_USE_WO),\n \t\t\t   TYPE_MODE (integer_type_node));\n@@ -3826,7 +3826,7 @@ store_one_arg (arg, argblock, may_be_alloca, variable_size,\n       if (current_function_check_memory_usage && GET_CODE (arg->stack) == MEM)\n \t{\n \t  emit_library_call (chkr_set_right_libfunc, 1, VOIDmode, 3,\n-\t\t\t     XEXP (arg->stack, 0), ptr_mode, \n+\t\t\t     XEXP (arg->stack, 0), Pmode, \n \t\t\t     ARGS_SIZE_RTX (arg->size),\n \t\t\t     TYPE_MODE (sizetype),\n \t\t\t     GEN_INT (MEMORY_USE_RW),"}, {"sha": "d2426df6822580dc8a66e7fa15a9d9a6afb23324", "filename": "gcc/expr.c", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9c4aed1a6cce4cb8d40759c500607835f758e3/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9c4aed1a6cce4cb8d40759c500607835f758e3/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=6a9c4aed1a6cce4cb8d40759c500607835f758e3", "patch": "@@ -2894,13 +2894,13 @@ emit_push_insn (x, mode, type, size, align, partial, reg, extra,\n \t      temp = get_push_address (INTVAL(size) - used);\n \t      if (GET_CODE (x) == MEM && type && AGGREGATE_TYPE_P (type))\n \t\temit_library_call (chkr_copy_bitmap_libfunc, 1, VOIDmode, 3,\n-\t\t\t\t   temp, ptr_mode,\n-\t\t\t\t   XEXP (xinner, 0), ptr_mode,\n+\t\t\t\t   temp, Pmode,\n+\t\t\t\t   XEXP (xinner, 0), Pmode,\n \t\t\t\t   GEN_INT (INTVAL(size) - used),\n \t\t\t\t   TYPE_MODE (sizetype));\n \t      else\n \t\temit_library_call (chkr_set_right_libfunc, 1, VOIDmode, 3,\n-\t\t\t\t   temp, ptr_mode,\n+\t\t\t\t   temp, Pmode,\n \t\t\t \t   GEN_INT (INTVAL(size) - used),\n \t\t\t\t   TYPE_MODE (sizetype),\n \t\t\t\t   GEN_INT (MEMORY_USE_RW),\n@@ -2951,12 +2951,12 @@ emit_push_insn (x, mode, type, size, align, partial, reg, extra,\n \t      target = copy_to_reg (temp);\n \t      if (GET_CODE (x) == MEM && type && AGGREGATE_TYPE_P (type))\n \t\temit_library_call (chkr_copy_bitmap_libfunc, 1, VOIDmode, 3,\n-\t\t\t\t   target, ptr_mode,\n-\t\t\t\t   XEXP (xinner, 0), ptr_mode,\n+\t\t\t\t   target, Pmode,\n+\t\t\t\t   XEXP (xinner, 0), Pmode,\n \t\t\t\t   size, TYPE_MODE (sizetype));\n \t      else\n \t        emit_library_call (chkr_set_right_libfunc, 1, VOIDmode, 3,\n-\t\t\t\t   target, ptr_mode,\n+\t\t\t\t   target, Pmode,\n \t\t\t \t   size, TYPE_MODE (sizetype),\n \t\t\t\t   GEN_INT (MEMORY_USE_RW),\n \t\t\t\t   TYPE_MODE (integer_type_node));\n@@ -3150,13 +3150,13 @@ emit_push_insn (x, mode, type, size, align, partial, reg, extra,\n \n \t  if (GET_CODE (x) == MEM && type && AGGREGATE_TYPE_P (type))\n \t    emit_library_call (chkr_copy_bitmap_libfunc, 1, VOIDmode, 3,\n-\t\t\t       target, ptr_mode,\n-\t\t\t       XEXP (x, 0), ptr_mode,\n+\t\t\t       target, Pmode,\n+\t\t\t       XEXP (x, 0), Pmode,\n \t\t\t       GEN_INT (GET_MODE_SIZE (mode)),\n \t\t\t       TYPE_MODE (sizetype));\n \t  else\n \t    emit_library_call (chkr_set_right_libfunc, 1, VOIDmode, 3,\n-\t\t\t       target, ptr_mode,\n+\t\t\t       target, Pmode,\n \t\t\t       GEN_INT (GET_MODE_SIZE (mode)),\n \t\t\t       TYPE_MODE (sizetype),\n \t\t\t       GEN_INT (MEMORY_USE_RW),\n@@ -3334,7 +3334,7 @@ expand_assignment (to, from, want_value, suggest_reg)\n \t  /* Check the access right of the pointer.  */\n \t  if (size)\n \t    emit_library_call (chkr_check_addr_libfunc, 1, VOIDmode, 3,\n-\t\t\t       to_addr, ptr_mode,\n+\t\t\t       to_addr, Pmode,\n \t\t\t       GEN_INT (size), TYPE_MODE (sizetype),\n \t\t\t       GEN_INT (MEMORY_USE_WO),\n \t\t\t       TYPE_MODE (integer_type_node));\n@@ -3448,8 +3448,8 @@ expand_assignment (to, from, want_value, suggest_reg)\n       /* Copy the rights of the bitmap.  */\n       if (current_function_check_memory_usage)\n \temit_library_call (chkr_copy_bitmap_libfunc, 1, VOIDmode, 3,\n-\t\t\t   XEXP (to_rtx, 0), ptr_mode,\n-\t\t\t   XEXP (from_rtx, 0), ptr_mode,\n+\t\t\t   XEXP (to_rtx, 0), Pmode,\n+\t\t\t   XEXP (from_rtx, 0), Pmode,\n \t\t\t   convert_to_mode (TYPE_MODE (sizetype),\n \t\t\t\t\t    size, TREE_UNSIGNED (sizetype)),\n \t\t\t   TYPE_MODE (sizetype));\n@@ -3674,12 +3674,12 @@ store_expr (exp, target, want_value)\n     {\n       if (GET_CODE (temp) == MEM)\n         emit_library_call (chkr_copy_bitmap_libfunc, 1, VOIDmode, 3,\n-\t\t\t   XEXP (target, 0), ptr_mode,\n-\t\t\t   XEXP (temp, 0), ptr_mode,\n+\t\t\t   XEXP (target, 0), Pmode,\n+\t\t\t   XEXP (temp, 0), Pmode,\n \t\t\t   expr_size (exp), TYPE_MODE (sizetype));\n       else\n         emit_library_call (chkr_check_addr_libfunc, 1, VOIDmode, 3,\n-\t\t\t   XEXP (target, 0), ptr_mode, \n+\t\t\t   XEXP (target, 0), Pmode, \n \t\t\t   expr_size (exp), TYPE_MODE (sizetype),\n \t\t\t   GEN_INT (MEMORY_USE_WO), \n \t\t\t   TYPE_MODE (integer_type_node));\n@@ -3784,7 +3784,7 @@ store_expr (exp, target, want_value)\n \t\t  /* Be sure we can write on ADDR.  */\n \t\t  if (current_function_check_memory_usage)\n \t\t    emit_library_call (chkr_check_addr_libfunc, 1, VOIDmode, 3,\n-\t\t\t\t       addr, ptr_mode,\n+\t\t\t\t       addr, Pmode,\n \t\t\t\t       size, TYPE_MODE (sizetype),\n  \t\t\t\t       GEN_INT (MEMORY_USE_WO), \n \t\t\t\t       TYPE_MODE (integer_type_node));\n@@ -5665,7 +5665,7 @@ expand_expr (exp, target, tmode, modifier)\n \n \t  if (memory_usage != MEMORY_USE_DONT)\n \t    emit_library_call (chkr_check_addr_libfunc, 1, VOIDmode, 3,\n-\t\t\t       XEXP (DECL_RTL (exp), 0), ptr_mode,\n+\t\t\t       XEXP (DECL_RTL (exp), 0), Pmode,\n \t\t\t       GEN_INT (int_size_in_bytes (type)),\n \t\t\t       TYPE_MODE (sizetype),\n \t\t\t       GEN_INT (memory_usage),\n@@ -6182,7 +6182,7 @@ expand_expr (exp, target, tmode, modifier)\n \t      {\n \t\tin_check_memory_usage = 1;\n \t\temit_library_call (chkr_check_addr_libfunc, 1, VOIDmode, 3,\n-\t\t\t\t   op0, ptr_mode,\n+\t\t\t\t   op0, Pmode,\n \t\t\t\t   GEN_INT (int_size_in_bytes (type)),\n \t\t\t\t   TYPE_MODE (sizetype),\n \t\t\t\t   GEN_INT (memory_usage),\n@@ -6477,7 +6477,7 @@ expand_expr (exp, target, tmode, modifier)\n         \t/* Check the access right of the pointer.  */\n \t\tif (size > BITS_PER_UNIT)\n \t\t  emit_library_call (chkr_check_addr_libfunc, 1, VOIDmode, 3,\n-\t\t\t\t     to, ptr_mode,\n+\t\t\t\t     to, Pmode,\n \t\t\t\t     GEN_INT (size / BITS_PER_UNIT),\n \t\t\t\t     TYPE_MODE (sizetype),\n \t\t\t\t     GEN_INT (memory_usage), \n@@ -9253,7 +9253,7 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \t  /* Check the string is readable and has an end.  */\n \t  if (current_function_check_memory_usage)\n \t    emit_library_call (chkr_check_str_libfunc, 1, VOIDmode, 2,\n-\t\t\t       src_rtx, ptr_mode,\n+\t\t\t       src_rtx, Pmode,\n \t\t\t       GEN_INT (MEMORY_USE_RO),\n \t\t\t       TYPE_MODE (integer_type_node));\n \n@@ -9346,8 +9346,8 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \t  /* Just copy the rights of SRC to the rights of DEST.  */\n \t  if (current_function_check_memory_usage)\n \t    emit_library_call (chkr_copy_bitmap_libfunc, 1, VOIDmode, 3,\n-\t\t\t       XEXP (dest_mem, 0), ptr_mode,\n-\t\t\t       XEXP (src_mem, 0), ptr_mode,\n+\t\t\t       XEXP (dest_mem, 0), Pmode,\n+\t\t\t       XEXP (src_mem, 0), Pmode,\n \t\t\t       len_rtx, TYPE_MODE (sizetype));\n \n \t  /* Copy word part most expediently.  */\n@@ -9417,7 +9417,7 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \t  /* Just check DST is writable and mark it as readable.  */\n \t  if (current_function_check_memory_usage)\n \t    emit_library_call (chkr_check_addr_libfunc, 1, VOIDmode, 3,\n-\t\t\t       XEXP (dest_mem, 0), ptr_mode,\n+\t\t\t       XEXP (dest_mem, 0), Pmode,\n \t\t\t       len_rtx, TYPE_MODE (sizetype),\n \t\t\t       GEN_INT (MEMORY_USE_WO),\n \t\t\t       TYPE_MODE (integer_type_node));"}, {"sha": "e6fb7866378c7d1e3d7eedc50c441ef983f26059", "filename": "gcc/function.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a9c4aed1a6cce4cb8d40759c500607835f758e3/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a9c4aed1a6cce4cb8d40759c500607835f758e3/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=6a9c4aed1a6cce4cb8d40759c500607835f758e3", "patch": "@@ -1645,7 +1645,7 @@ put_var_into_stack (decl)\n   \n   if (current_function_check_memory_usage)\n     emit_library_call (chkr_set_right_libfunc, 1, VOIDmode, 3,\n-\t\t       XEXP (reg, 0), ptr_mode,\n+\t\t       XEXP (reg, 0), Pmode,\n \t\t       GEN_INT (GET_MODE_SIZE (GET_MODE (reg))),\n \t\t       TYPE_MODE (sizetype),\n \t\t       GEN_INT (MEMORY_USE_RW),\n@@ -4841,7 +4841,7 @@ assign_parms (fndecl, second_time)\n \t      emit_move_insn (parmreg, XEXP (copy, 0));\n \t      if (current_function_check_memory_usage)\n \t\temit_library_call (chkr_set_right_libfunc, 1, VOIDmode, 3,\n-\t\t\t\t   XEXP (copy, 0), ptr_mode,\n+\t\t\t\t   XEXP (copy, 0), Pmode,\n \t\t\t\t   GEN_INT (int_size_in_bytes (type)),\n \t\t\t\t   TYPE_MODE (sizetype),\n \t\t\t\t   GEN_INT (MEMORY_USE_RW),\n@@ -5008,7 +5008,7 @@ assign_parms (fndecl, second_time)\n \t    {\n \t      push_to_sequence (conversion_insns);\n \t      emit_library_call (chkr_set_right_libfunc, 1, VOIDmode, 3,\n-\t\t\t\t XEXP (stack_parm, 0), ptr_mode,\n+\t\t\t\t XEXP (stack_parm, 0), Pmode,\n \t\t\t\t GEN_INT (GET_MODE_SIZE (GET_MODE \n \t\t\t\t\t\t\t (entry_parm))),\n \t\t\t\t TYPE_MODE (sizetype),"}]}