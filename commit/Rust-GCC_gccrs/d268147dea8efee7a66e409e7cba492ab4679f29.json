{"sha": "d268147dea8efee7a66e409e7cba492ab4679f29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI2ODE0N2RlYThlZmVlN2E2NmU0MDllN2NiYTQ5MmFiNDY3OWYyOQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2017-01-23T13:31:43Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-23T13:31:43Z"}, "message": "sem_prag.adb (Default_Initial_Condition): If the desired type declaration is a derived type declaration with discriminants...\n\n2017-01-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_prag.adb (Default_Initial_Condition): If the desired type\n\tdeclaration is a derived type declaration with discriminants,\n\tit is rewritten as a private type declaration.\n\t* sem_ch13.adb (Replace_Type_References_Generic,\n\tVisible_Component): A discriminated private type with descriminnts\n\thas components that must be rewritten as selected components\n\tif they appear as identifiers in an aspect expression such as\n\ta Default_Initial_Condition.\n\t* sem_util.adb (Defining_Entity): support N_Iterator_Specification\n\tnodes.\n\nFrom-SVN: r244809", "tree": {"sha": "cd6a7a5446c06599bb38427f0ad658fcfda1bae7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd6a7a5446c06599bb38427f0ad658fcfda1bae7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d268147dea8efee7a66e409e7cba492ab4679f29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d268147dea8efee7a66e409e7cba492ab4679f29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d268147dea8efee7a66e409e7cba492ab4679f29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d268147dea8efee7a66e409e7cba492ab4679f29/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dafe11cd1851fecb7b7bc780410be394fc99142a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dafe11cd1851fecb7b7bc780410be394fc99142a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dafe11cd1851fecb7b7bc780410be394fc99142a"}], "stats": {"total": 37, "additions": 30, "deletions": 7}, "files": [{"sha": "53d4bc31e619808a797a02d107c9a5c76f9c7862", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d268147dea8efee7a66e409e7cba492ab4679f29/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d268147dea8efee7a66e409e7cba492ab4679f29/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d268147dea8efee7a66e409e7cba492ab4679f29", "patch": "@@ -1,3 +1,16 @@\n+2017-01-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_prag.adb (Default_Initial_Condition): If the desired type\n+\tdeclaration is a derived type declaration with discriminants,\n+\tit is rewritten as a private type declaration.\n+\t* sem_ch13.adb (Replace_Type_References_Generic,\n+\tVisible_Component): A discriminated private type with descriminnts\n+\thas components that must be rewritten as selected components\n+\tif they appear as identifiers in an aspect expression such as\n+\ta Default_Initial_Condition.\n+\t* sem_util.adb (Defining_Entity): support N_Iterator_Specification\n+\tnodes.\n+\n 2017-01-23  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* ghost.ads, ghost.adb (Is_Ignored_Ghost_Unit): New routine."}, {"sha": "ac1e02cfee3b9ce4a7dc5999c05b7dfb25110ba5", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d268147dea8efee7a66e409e7cba492ab4679f29/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d268147dea8efee7a66e409e7cba492ab4679f29/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=d268147dea8efee7a66e409e7cba492ab4679f29", "patch": "@@ -12688,10 +12688,13 @@ package body Sem_Ch13 is\n          E : Entity_Id;\n \n       begin\n-         if Ekind (T) /= E_Record_Type then\n-            return Empty;\n \n-         else\n+         --  Types with nameable components are records and discriminated\n+         --  private types.\n+\n+         if Ekind (T) = E_Record_Type\n+           or else (Is_Private_Type (T) and then Has_Discriminants (T))\n+         then\n             E := First_Entity (T);\n             while Present (E) loop\n                if Comes_From_Source (E) and then Chars (E) = Comp then\n@@ -12700,9 +12703,11 @@ package body Sem_Ch13 is\n \n                Next_Entity (E);\n             end loop;\n-\n-            return Empty;\n          end if;\n+\n+         --  Nothing by that name, or type has no components.\n+\n+         return Empty;\n       end Visible_Component;\n \n    --  Start of processing for Replace_Type_References_Generic"}, {"sha": "cae36e65caf7d31c5e3aa0a3f62c2447e74b5331", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d268147dea8efee7a66e409e7cba492ab4679f29/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d268147dea8efee7a66e409e7cba492ab4679f29/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=d268147dea8efee7a66e409e7cba492ab4679f29", "patch": "@@ -13840,9 +13840,13 @@ package body Sem_Prag is\n                      Error_Msg_N (\"pragma % duplicates pragma declared#\", N);\n                   end if;\n \n-               --  Skip internally generated code\n+               --  Skip internally generated code. Note that derived type\n+               --  declarations of untagged types with discriminants are\n+               --  rewritten as private type declarations.\n \n-               elsif not Comes_From_Source (Stmt) then\n+               elsif not Comes_From_Source (Stmt)\n+                 and then Nkind (Stmt) /= N_Private_Type_Declaration\n+               then\n                   null;\n \n                --  The associated private type [extension] has been found, stop"}, {"sha": "c5d5473c37e4e8814adf8f21e871872c882eb413", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d268147dea8efee7a66e409e7cba492ab4679f29/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d268147dea8efee7a66e409e7cba492ab4679f29/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=d268147dea8efee7a66e409e7cba492ab4679f29", "patch": "@@ -5238,6 +5238,7 @@ package body Sem_Util is\n             | N_Full_Type_Declaration\n             | N_Implicit_Label_Declaration\n             | N_Incomplete_Type_Declaration\n+            | N_Iterator_Specification\n             | N_Loop_Parameter_Specification\n             | N_Number_Declaration\n             | N_Object_Declaration"}]}