{"sha": "389578d7a660986712eefc1785c9278d3457cd7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzg5NTc4ZDdhNjYwOTg2NzEyZWVmYzE3ODVjOTI3OGQzNDU3Y2Q3YQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-01-10T15:42:23Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-01-10T15:42:23Z"}, "message": "re PR c/82922 (Request: add -Wstrict-prototypes to -Wextra as K&R style is obsolescent)\n\n\tPR c/82922\n\n    runtime, syscall: use full prototypes in C code\n    \n    Based on patch by Martin Sebor.\n    \n    Reviewed-on: https://go-review.googlesource.com/86815\n\nFrom-SVN: r256437", "tree": {"sha": "4591603963109113adf2823a973632dfe302707f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4591603963109113adf2823a973632dfe302707f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/389578d7a660986712eefc1785c9278d3457cd7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/389578d7a660986712eefc1785c9278d3457cd7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/389578d7a660986712eefc1785c9278d3457cd7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/389578d7a660986712eefc1785c9278d3457cd7a/comments", "author": null, "committer": null, "parents": [{"sha": "cd3410cc7b57fe3745f0fe764f5c322e0265ea1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd3410cc7b57fe3745f0fe764f5c322e0265ea1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd3410cc7b57fe3745f0fe764f5c322e0265ea1a"}], "stats": {"total": 20, "additions": 8, "deletions": 12}, "files": [{"sha": "e66cc488769fdd58a843c9fd4d111f3d8a61ba9d", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/389578d7a660986712eefc1785c9278d3457cd7a/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/389578d7a660986712eefc1785c9278d3457cd7a/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=389578d7a660986712eefc1785c9278d3457cd7a", "patch": "@@ -1,4 +1,4 @@\n-4b8036b3f995cdb0b99a9fa26c2af1e2420b4fa2\n+9705a1f4c37ad2c099e9fe6cd587d22a2a2ab2c3\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "1e822f108cc5b2b5b4d8554084b2172f40a6ac65", "filename": "libgo/go/syscall/errno.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/389578d7a660986712eefc1785c9278d3457cd7a/libgo%2Fgo%2Fsyscall%2Ferrno.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/389578d7a660986712eefc1785c9278d3457cd7a/libgo%2Fgo%2Fsyscall%2Ferrno.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Ferrno.c?ref=389578d7a660986712eefc1785c9278d3457cd7a", "patch": "@@ -11,11 +11,11 @@\n /* errno is typically a macro. These functions set \n    and get errno specific to the libc being used.  */\n \n-uintptr_t GetErrno() __asm__ (GOSYM_PREFIX \"syscall.GetErrno\");\n+uintptr_t GetErrno(void) __asm__ (GOSYM_PREFIX \"syscall.GetErrno\");\n void SetErrno(uintptr_t) __asm__ (GOSYM_PREFIX \"syscall.SetErrno\");\n \n uintptr_t\n-GetErrno()\n+GetErrno(void)\n {\n   return (uintptr_t) errno;\n }"}, {"sha": "a45890bfd5aac00a04b3079782cbf0fb764368cf", "filename": "libgo/runtime/go-now.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/389578d7a660986712eefc1785c9278d3457cd7a/libgo%2Fruntime%2Fgo-now.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/389578d7a660986712eefc1785c9278d3457cd7a/libgo%2Fruntime%2Fgo-now.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-now.c?ref=389578d7a660986712eefc1785c9278d3457cd7a", "patch": "@@ -16,11 +16,11 @@ struct walltime_ret\n   int32_t nsec;\n };\n \n-struct walltime_ret now() __asm__ (GOSYM_PREFIX \"runtime.walltime\")\n+struct walltime_ret now(void) __asm__ (GOSYM_PREFIX \"runtime.walltime\")\n   __attribute__ ((no_split_stack));\n \n struct walltime_ret\n-now()\n+now(void)\n {\n   struct timespec ts;\n   struct walltime_ret ret;"}, {"sha": "5edbeebdcf472f540ec8d3e3fd7b4dfc4eb35aaa", "filename": "libgo/runtime/go-runtime-error.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/389578d7a660986712eefc1785c9278d3457cd7a/libgo%2Fruntime%2Fgo-runtime-error.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/389578d7a660986712eefc1785c9278d3457cd7a/libgo%2Fruntime%2Fgo-runtime-error.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-runtime-error.c?ref=389578d7a660986712eefc1785c9278d3457cd7a", "patch": "@@ -55,7 +55,7 @@ enum\n   GO_NIL = 11\n };\n \n-extern void __go_runtime_error () __attribute__ ((noreturn));\n+extern void __go_runtime_error (int32) __attribute__ ((noreturn));\n \n void\n __go_runtime_error (int32 i)"}, {"sha": "556d86fb7d6c8ab5f218a3ba65f15e10ff52a862", "filename": "libgo/runtime/proc.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/389578d7a660986712eefc1785c9278d3457cd7a/libgo%2Fruntime%2Fproc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/389578d7a660986712eefc1785c9278d3457cd7a/libgo%2Fruntime%2Fproc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fproc.c?ref=389578d7a660986712eefc1785c9278d3457cd7a", "patch": "@@ -369,8 +369,6 @@ runtime_mcall(FuncVal *fv)\n //\n // Design doc at http://golang.org/s/go11sched.\n \n-extern bool* runtime_getCgoHasExtraM()\n-  __asm__ (GOSYM_PREFIX \"runtime.getCgoHasExtraM\");\n extern G* allocg(void)\n   __asm__ (GOSYM_PREFIX \"runtime.allocg\");\n \n@@ -560,7 +558,7 @@ void setGContext(void) __asm__ (GOSYM_PREFIX \"runtime.setGContext\");\n \n // setGContext sets up a new goroutine context for the current g.\n void\n-setGContext()\n+setGContext(void)\n {\n \tint val;\n \tG *gp;"}, {"sha": "28d550deee510d291f80b92878067afaddf90126", "filename": "libgo/runtime/runtime.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/389578d7a660986712eefc1785c9278d3457cd7a/libgo%2Fruntime%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/389578d7a660986712eefc1785c9278d3457cd7a/libgo%2Fruntime%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fruntime.h?ref=389578d7a660986712eefc1785c9278d3457cd7a", "patch": "@@ -473,9 +473,7 @@ extern void typedmemmove(const Type *, void *, const void *)\n   __asm__ (GOSYM_PREFIX \"runtime.typedmemmove\");\n extern void setncpu(int32)\n   __asm__(GOSYM_PREFIX \"runtime.setncpu\");\n-extern P** runtime_getAllP()\n-  __asm__ (GOSYM_PREFIX \"runtime.getAllP\");\n-extern Sched* runtime_getsched()\n+extern Sched* runtime_getsched(void)\n   __asm__ (GOSYM_PREFIX \"runtime.getsched\");\n extern void setpagesize(uintptr_t)\n   __asm__(GOSYM_PREFIX \"runtime.setpagesize\");"}]}