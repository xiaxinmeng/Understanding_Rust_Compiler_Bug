{"sha": "4e1f0f8e1fee97fc492f6204c02447a29673a954", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUxZjBmOGUxZmVlOTdmYzQ5MmY2MjA0YzAyNDQ3YTI5NjczYTk1NA==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2003-04-19T10:04:47Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-04-19T10:04:47Z"}, "message": "cppexp.c (eval_token): Permit true and false even if pedantic.\n\n\t* cppexp.c (eval_token): Permit true and false even if pedantic.\ntestsuite:\n\t* gcc.dg/cpp/truefalse.cpp: New test.\n\t* gcc.dg/cpp/cpp.exp: Update.\n\nFrom-SVN: r65811", "tree": {"sha": "95f32f4463e62cdb21c1f10503cffc8f1bba5e93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95f32f4463e62cdb21c1f10503cffc8f1bba5e93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e1f0f8e1fee97fc492f6204c02447a29673a954", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e1f0f8e1fee97fc492f6204c02447a29673a954", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e1f0f8e1fee97fc492f6204c02447a29673a954", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e1f0f8e1fee97fc492f6204c02447a29673a954/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bf805def610dbb7c1d685ea1f5696ad503aff7aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf805def610dbb7c1d685ea1f5696ad503aff7aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf805def610dbb7c1d685ea1f5696ad503aff7aa"}], "stats": {"total": 36, "additions": 27, "deletions": 9}, "files": [{"sha": "5be40867c900da5f3c8f87180f0b842e849692a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e1f0f8e1fee97fc492f6204c02447a29673a954/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e1f0f8e1fee97fc492f6204c02447a29673a954/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e1f0f8e1fee97fc492f6204c02447a29673a954", "patch": "@@ -1,3 +1,7 @@\n+2003-04-19  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* cppexp.c (eval_token): Permit true and false even if pedantic.\n+\n 2003-04-19  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* cpplex.c (skip_whitespace): Rearrange to avoid stage1 ICE."}, {"sha": "9ab7b5fa14bea09d56416357e63d35d07e7843b9", "filename": "gcc/cppexp.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e1f0f8e1fee97fc492f6204c02447a29673a954/gcc%2Fcppexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e1f0f8e1fee97fc492f6204c02447a29673a954/gcc%2Fcppexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppexp.c?ref=4e1f0f8e1fee97fc492f6204c02447a29673a954", "patch": "@@ -590,14 +590,6 @@ eval_token (pfile, token)\n \t{\n \t  result.high = 0;\n \t  result.low = (token->val.node == pfile->spec_nodes.n_true);\n-\n-\t  /* Warn about use of true or false in #if when pedantic\n-\t     and stdbool.h has not been included.  */\n-\t  if (CPP_PEDANTIC (pfile)\n-\t      && ! cpp_defined (pfile, DSC(\"__bool_true_false_are_defined\")))\n-\t    cpp_error (pfile, DL_PEDWARN,\n-\t\t       \"ISO C++ does not permit \\\"%s\\\" in #if\",\n-\t\t       NODE_NAME (token->val.node));\n \t}\n       else\n \t{"}, {"sha": "0eae036feb31075192b7cd8cd23913720d874135", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e1f0f8e1fee97fc492f6204c02447a29673a954/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e1f0f8e1fee97fc492f6204c02447a29673a954/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4e1f0f8e1fee97fc492f6204c02447a29673a954", "patch": "@@ -1,3 +1,8 @@\n+2003-04-19  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* gcc.dg/cpp/truefalse.cpp: New test.\n+\t* gcc.dg/cpp/cpp.exp: Update.\n+\n 2003-04-19  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* gcc.dg/cpp/_Pragma4.c: Remove stray space."}, {"sha": "47c20ffb201bc42d26b000d774ee7282994fcd5a", "filename": "gcc/testsuite/gcc.dg/cpp/cpp.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e1f0f8e1fee97fc492f6204c02447a29673a954/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcpp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e1f0f8e1fee97fc492f6204c02447a29673a954/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcpp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcpp.exp?ref=4e1f0f8e1fee97fc492f6204c02447a29673a954", "patch": "@@ -36,7 +36,7 @@ if ![info exists DEFAULT_CFLAGS] then {\n dg-init\n \n # Main loop.\n-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cCS\\]]] \\\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.{c,cpp,S} ]] \\\n \t\"\" $DEFAULT_CFLAGS\n \n # All done."}, {"sha": "d852d4e2f212e9bba89a1d966c8e1915932aceaa", "filename": "gcc/testsuite/gcc.dg/cpp/truefalse.cpp", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e1f0f8e1fee97fc492f6204c02447a29673a954/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftruefalse.cpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e1f0f8e1fee97fc492f6204c02447a29673a954/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftruefalse.cpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftruefalse.cpp?ref=4e1f0f8e1fee97fc492f6204c02447a29673a954", "patch": "@@ -0,0 +1,17 @@\n+/* Copyright (C) 2003 Free Software Foundation, Inc.  */\n+\n+/* Source: Neil Booth, 18 Apr 2003.  */\n+\n+/* { dg-do preprocess } */\n+/* { dg-options \"-ansi -pedantic -Wundef\" } */\n+\n+/* Check that for C++ we handle true and false correctly, and do not\n+   treat them as undefined identifiers.  */\n+\n+#if true\t\t/* { dg-bogus \"is not defined\" } */\n+#error foo\t\t/* { dg-error \"foo\" } */\n+#endif\n+\n+#if false\t\t/* { dg-bogus \"is not defined\" } */\n+#error foo\t\t/* { dg-bogus \"foo\" } */\n+#endif"}]}