{"sha": "026ae646e7183e6186100c3aa2582b5ecdddaffc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI2YWU2NDZlNzE4M2U2MTg2MTAwYzNhYTI1ODJiNWVjZGRkYWZmYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-07-16T15:47:26Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-07-16T15:47:26Z"}, "message": "random: Minor formatting and cosmetic tweaks.\n\n2014-07-16  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/ext/random: Minor formatting and cosmetic tweaks.\n\t(uniform_on_sphere_distribution<>::operator==\n\t(const uniform_on_sphere_distribution&,\n\tconst uniform_on_sphere_distribution&)): Compare the _M_nds.\n\t(uniform_on_sphere_distribution<>::reset): Reset _M_nd.\n\t(operator!=(const uniform_on_sphere_distribution&,\n\tconst uniform_on_sphere_distribution&)): Adjust.\n\t* include/ext/random.tcc: Minor cosmetc tweaks.\n\nFrom-SVN: r212674", "tree": {"sha": "d194ec2ed603084dcb2025a569da758181602618", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d194ec2ed603084dcb2025a569da758181602618"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/026ae646e7183e6186100c3aa2582b5ecdddaffc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/026ae646e7183e6186100c3aa2582b5ecdddaffc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/026ae646e7183e6186100c3aa2582b5ecdddaffc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/026ae646e7183e6186100c3aa2582b5ecdddaffc/comments", "author": null, "committer": null, "parents": [{"sha": "9dc30a5f18d3827d10f118b1758e8453f7aca994", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dc30a5f18d3827d10f118b1758e8453f7aca994", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dc30a5f18d3827d10f118b1758e8453f7aca994"}], "stats": {"total": 50, "additions": 31, "deletions": 19}, "files": [{"sha": "fcaa8a146519e90a5e7db2dce7a245577544702a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/026ae646e7183e6186100c3aa2582b5ecdddaffc/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/026ae646e7183e6186100c3aa2582b5ecdddaffc/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=026ae646e7183e6186100c3aa2582b5ecdddaffc", "patch": "@@ -1,3 +1,14 @@\n+2014-07-16  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/ext/random: Minor formatting and cosmetic tweaks.\n+\t(uniform_on_sphere_distribution<>::operator==\n+\t(const uniform_on_sphere_distribution&,\n+\tconst uniform_on_sphere_distribution&)): Compare the _M_nds.\n+\t(uniform_on_sphere_distribution<>::reset): Reset _M_nd.\n+\t(operator!=(const uniform_on_sphere_distribution&,\n+\tconst uniform_on_sphere_distribution&)): Adjust.\n+\t* include/ext/random.tcc: Minor cosmetc tweaks.\n+\n 2014-07-15  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* python/libstdcxx/v6/printers.py (TemplateTypePrinter): Add type"}, {"sha": "a5336d42c660e9cd4aefe8796203d3ac4a4f652e", "filename": "libstdc++-v3/include/ext/random", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/026ae646e7183e6186100c3aa2582b5ecdddaffc/libstdc%2B%2B-v3%2Finclude%2Fext%2Frandom", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/026ae646e7183e6186100c3aa2582b5ecdddaffc/libstdc%2B%2B-v3%2Finclude%2Fext%2Frandom", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Frandom?ref=026ae646e7183e6186100c3aa2582b5ecdddaffc", "patch": "@@ -598,7 +598,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     inline bool\n     operator!=(const __gnu_cxx::beta_distribution<_RealType>& __d1,\n \t       const __gnu_cxx::beta_distribution<_RealType>& __d2)\n-   { return !(__d1 == __d2); }\n+    { return !(__d1 == __d2); }\n \n \n   /**\n@@ -2575,7 +2575,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     inline bool\n     operator!=(const __gnu_cxx::triangular_distribution<_RealType>& __d1,\n \t       const __gnu_cxx::triangular_distribution<_RealType>& __d2)\n-   { return !(__d1 == __d2); }\n+    { return !(__d1 == __d2); }\n \n \n   /**\n@@ -2810,7 +2810,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     inline bool\n     operator!=(const __gnu_cxx::von_mises_distribution<_RealType>& __d1,\n \t       const __gnu_cxx::von_mises_distribution<_RealType>& __d2)\n-   { return !(__d1 == __d2); }\n+    { return !(__d1 == __d2); }\n \n \n   /**\n@@ -3328,20 +3328,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       explicit\n       uniform_on_sphere_distribution()\n-      : _M_param(), _M_n(_RealType(0), _RealType(1))\n+      : _M_param(), _M_nd()\n       { }\n \n       explicit\n       uniform_on_sphere_distribution(const param_type& __p)\n-      : _M_param(__p), _M_n(_RealType(0), _RealType(1))\n+      : _M_param(__p), _M_nd()\n       { }\n \n       /**\n        * @brief Resets the distribution state.\n        */\n       void\n       reset()\n-      { }\n+      { _M_nd.reset(); }\n \n       /**\n        * @brief Returns the parameter set of the distribution.\n@@ -3425,14 +3425,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       friend bool\n       operator==(const uniform_on_sphere_distribution& __d1,\n \t\t const uniform_on_sphere_distribution& __d2)\n-      { return true; }\n+      { return __d1._M_nd == __d2._M_nd; }\n \n       /**\n-       * @brief Inserts a %uniform_on_sphere_distribution random number distribution\n-       * @p __x into the output stream @p __os.\n+       * @brief Inserts a %uniform_on_sphere_distribution random number\n+       *        distribution @p __x into the output stream @p __os.\n        *\n        * @param __os An output stream.\n-       * @param __x  A %uniform_on_sphere_distribution random number distribution.\n+       * @param __x  A %uniform_on_sphere_distribution random number\n+       *             distribution.\n        *\n        * @returns The output stream with the state of @p __x inserted or in\n        * an error state.\n@@ -3446,11 +3447,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t   __x);\n \n       /**\n-       * @brief Extracts a %uniform_on_sphere_distribution random number distribution\n+       * @brief Extracts a %uniform_on_sphere_distribution random number\n+       *        distribution\n        * @p __x from the input stream @p __is.\n        *\n        * @param __is An input stream.\n-       * @param __x  A %uniform_on_sphere_distribution random number generator engine.\n+       * @param __x  A %uniform_on_sphere_distribution random number\n+       *             generator engine.\n        *\n        * @returns The input stream with @p __x extracted or in an error state.\n        */\n@@ -3470,7 +3473,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t\t\tconst param_type& __p);\n \n       param_type _M_param;\n-      std::normal_distribution<_RealType> _M_n;\n+      std::normal_distribution<_RealType> _M_nd;\n     };\n \n   /**\n@@ -3482,7 +3485,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t       _RealType>& __d1,\n \t       const __gnu_cxx::uniform_on_sphere_distribution<_Dimen,\n \t       _RealType>& __d2)\n-   { return false; }\n+    { return !(__d1 == __d2); }\n \n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace __gnu_cxx"}, {"sha": "432865cb548653a208251758aa2a68f0fd42c007", "filename": "libstdc++-v3/include/ext/random.tcc", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/026ae646e7183e6186100c3aa2582b5ecdddaffc/libstdc%2B%2B-v3%2Finclude%2Fext%2Frandom.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/026ae646e7183e6186100c3aa2582b5ecdddaffc/libstdc%2B%2B-v3%2Finclude%2Fext%2Frandom.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Frandom.tcc?ref=026ae646e7183e6186100c3aa2582b5ecdddaffc", "patch": "@@ -1551,7 +1551,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t_RealType __sum = _RealType(0);\n \n \tstd::generate(__ret.begin(), __ret.end(),\n-\t\t      [&__urng, &__sum, this](){ _RealType __t = _M_n(__urng);\n+\t\t      [&__urng, &__sum, this](){ _RealType __t = _M_nd(__urng);\n \t\t\t\t\t\t __sum += __t * __t;\n \t\t\t\t\t\t return __t; });\n \tauto __norm = std::sqrt(__sum);\n@@ -1583,8 +1583,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t       const __gnu_cxx::uniform_on_sphere_distribution<_Dimen,\n \t\t\t\t\t\t\t       _RealType>& __x)\n     {\n-      // The distribution has no state, nothing to save.\n-      return __os << __x._M_n;\n+      return __os << __x._M_nd;\n     }\n \n   template<std::size_t _Dimen, typename _RealType, typename _CharT,\n@@ -1594,8 +1593,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t       __gnu_cxx::uniform_on_sphere_distribution<_Dimen,\n \t\t\t\t\t\t\t _RealType>& __x)\n     {\n-      // The distribution has no state, nothing to restore.\n-      return __is >> __x._M_n;\n+      return __is >> __x._M_nd;\n     }\n \n _GLIBCXX_END_NAMESPACE_VERSION"}]}