{"sha": "a2e70f503da0b5f2b9d75d3c34db1c1c289e9eb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJlNzBmNTAzZGEwYjVmMmI5ZDc1ZDNjMzRkYjFjMWMyODllOWViMw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-10-10T16:14:52Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-10-10T16:14:52Z"}, "message": "re PR libstdc++/49561 ([C++0x] std::list::size complexity)\n\n\tPR libstdc++/49561\n\t* acinclude.m4 (GLIBCXX_ENABLE_LIBSTDCXX_CXX11_ABI): Define.\n\t* configure.ac: Use GLIBCXX_ENABLE_LIBSTDCXX_CXX11_ABI.\n\t* configure: Regenerate.\n\t* include/Makefile.am (stamp-cxx11-abi): New target.\n\t(c++config.h): Set _GLIBCXX_USE_CXX11_ABI macro.\n\t* include/Makefile.in: Regenerate.\n\t* include/bits/c++config: Add _GLIBCXX_USE_CXX11_ABI placeholder and\n\tdefine _GLIBCXX_DEFAULT_ABI_TAG.\n\t* include/bits/list.tcc (list::emplace(const_iterator, _Args&...)):\n\tIncrement size.\n\t(list::emplace(const_iterator, const value_type&)): Likewise.\n\t(list::merge(list&), list::merge(list&, _StrictWeakOrdering)): Adjust\n\tlist sizes.\n\t* include/bits/stl_list.h (_List_base, list): Add ABI tag macro.\n\t(_List_base::_M_size): New data member in cxx11 ABI mode.\n\t(_List_base::_S_distance(_List_node_base*, _List_node_base*)): New\n\tfunction.\n\t(_List_base::_M_get_size(), _List_base::_M_set_size(size_t),\n\t_List_base::_M_inc_size(size_t), _List_base::_M_dec_size(size_t),\n\t_List_base::_M_distance, _List_base::_M_node_count): New functions for\n\taccessing list size correctly for the ABI mode.\n\t(_List_base::_List_base(_List_base&&)): Copy size and reset source.\n\t(_List_base::_M_init()): Initialize size member.\n\t(list::size()): Use _List_base::_M_node_count.\n\t(list::swap(list&)): Swap sizes.\n\t(list::splice(iterator, list&)): Update sizes.\n\t(list::splice(iterator, list&, iterator)): Likewise.\n\t(list::insert(iterator, const value_type&)): Update size.\n\t(list::insert(iterator, _Args&&...)): Likewise.\n\t(list::_M_erase(iterator)): Likewise.\n\t* testsuite/23_containers/list/requirements/dr438/assign_neg.cc:\n\tAdjust.\n\t* testsuite/23_containers/list/requirements/dr438/constructor_1_neg.cc:\n\tAdjust.\n\t* testsuite/23_containers/list/requirements/dr438/constructor_2_neg.cc:\n\tAdjust.\n\t* testsuite/23_containers/list/requirements/dr438/insert_neg.cc:\n\tAdjust.\n\t* testsuite/ext/profile/mutex_extensions_neg.cc: Adjust.\n# End of auto-generated commit message\nFix date and whitespace in libstdc++-v3/ChangeLog\n\nFrom-SVN: r216097", "tree": {"sha": "feacd5b67a17acbe7c9eacf2233b82359976f8f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/feacd5b67a17acbe7c9eacf2233b82359976f8f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2e70f503da0b5f2b9d75d3c34db1c1c289e9eb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2e70f503da0b5f2b9d75d3c34db1c1c289e9eb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2e70f503da0b5f2b9d75d3c34db1c1c289e9eb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2e70f503da0b5f2b9d75d3c34db1c1c289e9eb3/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "069d7fc5a4f28fa0ee577b156e506852f98c557e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/069d7fc5a4f28fa0ee577b156e506852f98c557e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/069d7fc5a4f28fa0ee577b156e506852f98c557e"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "5a18e30bd3e0733cd0d8e03c45b6f1deaa740b13", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2e70f503da0b5f2b9d75d3c34db1c1c289e9eb3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2e70f503da0b5f2b9d75d3c34db1c1c289e9eb3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a2e70f503da0b5f2b9d75d3c34db1c1c289e9eb3", "patch": "@@ -1,4 +1,4 @@\n-2014-10-07  Jonathan Wakely  <jwakely@redhat.com>\n+2014-10-10  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/49561\n \t* acinclude.m4 (GLIBCXX_ENABLE_LIBSTDCXX_CXX11_ABI): Define.\n@@ -58,14 +58,14 @@\n \n \tPR libstdc++/60132\n \t* include/std/type_traits (is_trivially_copyable,\n-    \tis_trivially_constructible, is_trivially_default_constructible,\n-    \tis_trivially_copy_constructible, is_trivially_move_constructible,\n-    \tis_trivially_assignable, is_trivially_copy_assignable,\n-    \tis_trivially_move_assignable): New.\n+\tis_trivially_constructible, is_trivially_default_constructible,\n+\tis_trivially_copy_constructible, is_trivially_move_constructible,\n+\tis_trivially_assignable, is_trivially_copy_assignable,\n+\tis_trivially_move_assignable): New.\n \t* testsuite/20_util/is_trivially_assignable/requirements/\n-    \ttypedefs.cc: Likewise.\n+\ttypedefs.cc: Likewise.\n \t* testsuite/20_util/is_trivially_assignable/requirements/\n-    \texplicit_instantiation.cc: Likewise.\n+\texplicit_instantiation.cc: Likewise.\n \t* testsuite/20_util/is_trivially_assignable/value.cc: Likewise.\n \t* testsuite/20_util/is_trivially_constructible/requirements/\n \ttypedefs.cc: Likewise.\n@@ -88,20 +88,20 @@\n \texplicit_instantiation.cc: Likewise.\n \t* testsuite/20_util/is_trivially_copy_constructible/value.cc: Likewise.\n \t* testsuite/20_util/is_trivially_default_constructible/requirements/\n-    \ttypedefs.cc: Likewise.\n+\ttypedefs.cc: Likewise.\n \t* testsuite/20_util/is_trivially_default_constructible/requirements/\n-    \texplicit_instantiation.cc: Likewise.\n+\texplicit_instantiation.cc: Likewise.\n \t* testsuite/20_util/is_trivially_default_constructible/\n \tvalue.cc: Likewise.\n \t* testsuite/20_util/is_trivially_move_assignable/requirements/\n-    \ttypedefs.cc: Likewise.\n+\ttypedefs.cc: Likewise.\n \t* testsuite/20_util/is_trivially_move_assignable/requirements/\n-    \texplicit_instantiation.cc: Likewise.\n+\texplicit_instantiation.cc: Likewise.\n \t* testsuite/20_util/is_trivially_move_assignable/value.cc: Likewise.\n \t* testsuite/20_util/is_trivially_move_constructible/requirements/\n-    \ttypedefs.cc: Likewise.\n+\ttypedefs.cc: Likewise.\n \t* testsuite/20_util/is_trivially_move_constructible/requirements/\n-    \texplicit_instantiation.cc: Likewise.\n+\texplicit_instantiation.cc: Likewise.\n \t* testsuite/20_util/is_trivially_move_constructible/value.cc:\n \tLikewise.\n \t* testsuite/20_util/declval/requirements/1_neg.cc: Adjust dg-error"}]}