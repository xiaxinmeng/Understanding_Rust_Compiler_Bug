{"sha": "6fa5e0ed90b7c720526aaf00987828b50165d19a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZhNWUwZWQ5MGI3YzcyMDUyNmFhZjAwOTg3ODI4YjUwMTY1ZDE5YQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-02-27T14:01:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-02-27T14:01:08Z"}, "message": "re PR middle-end/56461 (GCC is leaking lots of memory)\n\n\tPR middle-end/56461\n\t* tree-flow.h (edge_var_map_vector): Change into va_heap, vl_embed\n\tvector.\n\t* tree-ssa.c (redirect_edge_var_map_add): Use vec_safe_reserve and\n\tvec_safe_push, always update *slot.\n\t(redirect_edge_var_map_clear): Use vec_free.\n\t(redirect_edge_var_map_dup): Use vec_safe_copy and vec_safe_reserve.\n\t(free_var_map_entry): Use vec_free.\n\t* tree-cfgcleanup.c (remove_forwarder_block_with_phi): Use\n\tFOR_EACH_VEC_SAFE_ELT instead of FOR_EACH_VEC_ELT.\n\nFrom-SVN: r196313", "tree": {"sha": "f2b0dbceeb47d6576b17174120930c4e096ff48e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2b0dbceeb47d6576b17174120930c4e096ff48e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fa5e0ed90b7c720526aaf00987828b50165d19a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fa5e0ed90b7c720526aaf00987828b50165d19a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fa5e0ed90b7c720526aaf00987828b50165d19a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fa5e0ed90b7c720526aaf00987828b50165d19a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d809887a669e7c2c709d1ca37d2f0e44ecfdb341", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d809887a669e7c2c709d1ca37d2f0e44ecfdb341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d809887a669e7c2c709d1ca37d2f0e44ecfdb341"}], "stats": {"total": 38, "additions": 23, "deletions": 15}, "files": [{"sha": "51a19f56aaa81c03ad2003af350975105c88fb5c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fa5e0ed90b7c720526aaf00987828b50165d19a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fa5e0ed90b7c720526aaf00987828b50165d19a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6fa5e0ed90b7c720526aaf00987828b50165d19a", "patch": "@@ -1,10 +1,21 @@\n+2013-02-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/56461\n+\t* tree-flow.h (edge_var_map_vector): Change into va_heap, vl_embed\n+\tvector.\n+\t* tree-ssa.c (redirect_edge_var_map_add): Use vec_safe_reserve and\n+\tvec_safe_push, always update *slot.\n+\t(redirect_edge_var_map_clear): Use vec_free.\n+\t(redirect_edge_var_map_dup): Use vec_safe_copy and vec_safe_reserve.\n+\t(free_var_map_entry): Use vec_free.\n+\t* tree-cfgcleanup.c (remove_forwarder_block_with_phi): Use\n+\tFOR_EACH_VEC_SAFE_ELT instead of FOR_EACH_VEC_ELT.\n+\n 2013-02-27  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR middle-end/45472\n-\t\n \t* sel-sched-ir.c (merge_expr): Also change vinsn of merged expr\n \twhen the may_trap_p bit of the exprs being merged differs.\n-\n \tReorder tests for speculativeness in the logical and operator.\n \n 2013-02-27  Jakub Jelinek  <jakub@redhat.com>"}, {"sha": "064d994ad3da27ee72b03e39363d98b68c7b7495", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fa5e0ed90b7c720526aaf00987828b50165d19a/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fa5e0ed90b7c720526aaf00987828b50165d19a/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=6fa5e0ed90b7c720526aaf00987828b50165d19a", "patch": "@@ -822,7 +822,7 @@ remove_forwarder_block_with_phi (basic_block bb)\n \t\t redirection, replace it with the PHI argument that used\n \t\t to be on E.  */\n \t      head = redirect_edge_var_map_vector (e);\n-\t      FOR_EACH_VEC_ELT (*head, i, vm)\n+\t      FOR_EACH_VEC_SAFE_ELT (head, i, vm)\n \t\t{\n \t\t  tree old_arg = redirect_edge_var_map_result (vm);\n \t\t  tree new_arg = redirect_edge_var_map_def (vm);"}, {"sha": "20584b8c60faf75bc970776c3c91de90e99f485f", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fa5e0ed90b7c720526aaf00987828b50165d19a/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fa5e0ed90b7c720526aaf00987828b50165d19a/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=6fa5e0ed90b7c720526aaf00987828b50165d19a", "patch": "@@ -481,7 +481,7 @@ typedef struct _edge_var_map edge_var_map;\n \n \n /* A vector of var maps.  */\n-typedef vec<edge_var_map> edge_var_map_vector;\n+typedef vec<edge_var_map, va_heap, vl_embed> edge_var_map_vector;\n \n extern void init_tree_ssa (struct function *);\n extern void redirect_edge_var_map_add (edge, tree, tree, source_location);"}, {"sha": "b0619faefd5bfb910d8257d7ca71f481c1f5372d", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fa5e0ed90b7c720526aaf00987828b50165d19a/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fa5e0ed90b7c720526aaf00987828b50165d19a/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=6fa5e0ed90b7c720526aaf00987828b50165d19a", "patch": "@@ -59,16 +59,13 @@ redirect_edge_var_map_add (edge e, tree result, tree def, source_location locus)\n   slot = pointer_map_insert (edge_var_maps, e);\n   head = (edge_var_map_vector *) *slot;\n   if (!head)\n-    {\n-      head = new edge_var_map_vector;\n-      head->create (5);\n-      *slot = head;\n-    }\n+    vec_safe_reserve (head, 5);\n   new_node.def = def;\n   new_node.result = result;\n   new_node.locus = locus;\n \n-  head->safe_push (new_node);\n+  vec_safe_push (head, new_node);\n+  *slot = head;\n }\n \n \n@@ -88,7 +85,7 @@ redirect_edge_var_map_clear (edge e)\n   if (slot)\n     {\n       head = (edge_var_map_vector *) *slot;\n-      delete head;\n+      vec_free (head);\n       *slot = NULL;\n     }\n }\n@@ -115,11 +112,11 @@ redirect_edge_var_map_dup (edge newe, edge olde)\n     return;\n   head = (edge_var_map_vector *) *old_slot;\n \n-  edge_var_map_vector *new_head = new edge_var_map_vector;\n+  edge_var_map_vector *new_head = NULL;\n   if (head)\n-    *new_head = head->copy ();\n+    new_head = vec_safe_copy (head);\n   else\n-    new_head->create (5);\n+    vec_safe_reserve (new_head, 5);\n   *new_slot = new_head;\n }\n \n@@ -151,7 +148,7 @@ free_var_map_entry (const void *key ATTRIBUTE_UNUSED,\n \t\t    void *data ATTRIBUTE_UNUSED)\n {\n   edge_var_map_vector *head = (edge_var_map_vector *) *value;\n-  delete head;\n+  vec_free (head);\n   return true;\n }\n "}]}