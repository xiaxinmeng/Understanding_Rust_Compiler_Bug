{"sha": "4369d499f711933b8f204f896cb654423e99b039", "node_id": "C_kwDOANBUbNoAKDQzNjlkNDk5ZjcxMTkzM2I4ZjIwNGY4OTZjYjY1NDQyM2U5OWIwMzk", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-01-19T07:02:58Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-01-27T10:02:15Z"}, "message": "RISC-V: Fix pred_mov constraint for vle.v\n\nThe original constraint is incorrect in pred_mov pattern.\nTake a look at Alternative 2, the operands[0] is \"vr\",\noperands[1] which is mask operand can be \"vm\".\nSuch alternative matching will give the wrong codegen (vle.v v0,0(a5),v0.t)\nThis is illegal according to RVV ISA.\n\nTo fix this issue and not destroy the RA performance, fix this pattern in\nthis patch.\n\ngcc/ChangeLog:\n\n\t* config/riscv/vector.md: Fix constraints.", "tree": {"sha": "a92190869fe9bd58852a4ab0f7195f8c348f3aad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a92190869fe9bd58852a4ab0f7195f8c348f3aad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4369d499f711933b8f204f896cb654423e99b039", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4369d499f711933b8f204f896cb654423e99b039", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4369d499f711933b8f204f896cb654423e99b039", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4369d499f711933b8f204f896cb654423e99b039/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f024ff988aeaacd8d0f967c5f841ab20fb40c19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f024ff988aeaacd8d0f967c5f841ab20fb40c19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f024ff988aeaacd8d0f967c5f841ab20fb40c19"}], "stats": {"total": 29, "additions": 15, "deletions": 14}, "files": [{"sha": "1dd81aefe4ee46b38109bf740dc020cef136f450", "filename": "gcc/config/riscv/vector.md", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4369d499f711933b8f204f896cb654423e99b039/gcc%2Fconfig%2Friscv%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4369d499f711933b8f204f896cb654423e99b039/gcc%2Fconfig%2Friscv%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fvector.md?ref=4369d499f711933b8f204f896cb654423e99b039", "patch": "@@ -653,22 +653,23 @@\n ;;    2. (const_vector:VNx1SF repeat [\n ;;                (const_double:SF 0.0 [0x0.0p+0])]).\n (define_insn_and_split \"@pred_mov<mode>\"\n-  [(set (match_operand:V 0 \"nonimmediate_operand\"          \"=vd,    vr,     m,    vr,    vr\")\n-\t(if_then_else:V\n-\t  (unspec:<VM>\n-\t    [(match_operand:<VM> 1 \"vector_mask_operand\" \"vmWc1, vmWc1, vmWc1,   Wc1,   Wc1\")\n-\t     (match_operand 4 \"vector_length_operand\"    \"   rK,    rK,    rK,    rK,    rK\")\n-\t     (match_operand 5 \"const_int_operand\"        \"    i,     i,     i,     i,     i\")\n-\t     (match_operand 6 \"const_int_operand\"        \"    i,     i,     i,     i,     i\")\n-\t     (match_operand 7 \"const_int_operand\"        \"    i,     i,     i,     i,     i\")\n-\t     (reg:SI VL_REGNUM)\n-\t     (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n-\t  (match_operand:V 3 \"vector_move_operand\"       \"    m,     m,    vr,    vr, viWc0\")\n-\t  (match_operand:V 2 \"vector_merge_operand\"      \"    0,    vu,    vu,   vu0,   vu0\")))]\n+  [(set (match_operand:V 0 \"nonimmediate_operand\"      \"=vr,    vr,    vd,     m,    vr,    vr\")\n+    (if_then_else:V\n+      (unspec:<VM>\n+        [(match_operand:<VM> 1 \"vector_mask_operand\" \"vmWc1,   Wc1,    vm, vmWc1,   Wc1,   Wc1\")\n+         (match_operand 4 \"vector_length_operand\"    \"   rK,    rK,    rK,    rK,    rK,    rK\")\n+         (match_operand 5 \"const_int_operand\"        \"    i,     i,     i,     i,     i,     i\")\n+         (match_operand 6 \"const_int_operand\"        \"    i,     i,     i,     i,     i,     i\")\n+         (match_operand 7 \"const_int_operand\"        \"    i,     i,     i,     i,     i,     i\")\n+         (reg:SI VL_REGNUM)\n+         (reg:SI VTYPE_REGNUM)] UNSPEC_VPREDICATE)\n+      (match_operand:V 3 \"vector_move_operand\"       \"    m,     m,     m,    vr,    vr, viWc0\")\n+      (match_operand:V 2 \"vector_merge_operand\"      \"    0,    vu,    vu,    vu,   vu0,   vu0\")))]\n   \"TARGET_VECTOR\"\n   \"@\n    vle<sew>.v\\t%0,%3%p1\n-   vle<sew>.v\\t%0,%3%p1\n+   vle<sew>.v\\t%0,%3\n+   vle<sew>.v\\t%0,%3,%1.t\n    vse<sew>.v\\t%3,%0%p1\n    vmv.v.v\\t%0,%3\n    vmv.v.i\\t%0,%v3\"\n@@ -677,7 +678,7 @@\n    && satisfies_constraint_vu (operands[2])\"\n   [(set (match_dup 0) (match_dup 3))]\n   \"\"\n-  [(set_attr \"type\" \"vlde,vlde,vste,vimov,vimov\")\n+  [(set_attr \"type\" \"vlde,vlde,vlde,vste,vimov,vimov\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n ;; Dedicated pattern for vse.v instruction since we can't reuse pred_mov pattern to include"}]}