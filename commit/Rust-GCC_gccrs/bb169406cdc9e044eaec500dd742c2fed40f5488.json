{"sha": "bb169406cdc9e044eaec500dd742c2fed40f5488", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmIxNjk0MDZjZGM5ZTA0NGVhZWM1MDBkZDc0MmMyZmVkNDBmNTQ4OA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-08-09T08:19:10Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-08-10T07:27:49Z"}, "message": "middle-end/101824 - properly handle volatiles in nested fn lowering\n\nWhen we build the COMPONENT_REF of a formerly volatile local off\nthe FRAME decl we have to make sure to mark the COMPONENT_REF\nas TREE_THIS_VOLATILE.  While the GIMPLE operand scanner looks\nat the FIELD_DECL this is not how volatile GENERIC refs work.\n\n2021-08-09  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/101824\n\t* tree-nested.c (get_frame_field): Mark the COMPONENT_REF as\n\tvolatile in case the variable was.\n\n\t* gcc.dg/tree-ssa/pr101824.c: New testcase.", "tree": {"sha": "f89b60e9073bc859ecfdc044a91bb65cf63bdf49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f89b60e9073bc859ecfdc044a91bb65cf63bdf49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb169406cdc9e044eaec500dd742c2fed40f5488", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb169406cdc9e044eaec500dd742c2fed40f5488", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb169406cdc9e044eaec500dd742c2fed40f5488", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb169406cdc9e044eaec500dd742c2fed40f5488/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0631faf87a197145acd833249bf8f20a1c4aaabf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0631faf87a197145acd833249bf8f20a1c4aaabf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0631faf87a197145acd833249bf8f20a1c4aaabf"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "d5987e14360cf7fa8eb195c2ca00b167a0e9eb1a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr101824.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb169406cdc9e044eaec500dd742c2fed40f5488/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr101824.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb169406cdc9e044eaec500dd742c2fed40f5488/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr101824.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr101824.c?ref=bb169406cdc9e044eaec500dd742c2fed40f5488", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fdump-tree-pcom-details -fdump-tree-optimized\" } */\n+\n+int main()\n+{\n+  volatile int y;\n+  void bar()\n+    {\n+      __builtin_printf (\"%d\", y);\n+    }\n+  while (y)\n+    ;\n+  return 0;\n+}\n+\n+/* Make sure the load from y is correctly interpreted as volatile, even\n+   when going through FRAME.  */\n+/* { dg-final { scan-tree-dump-not \"Executing predictive commoning\" \"pcom\" } } */\n+/* { dg-final { scan-tree-dump \" ={v} FRAME\" \"optimized\" } } */"}, {"sha": "cc59526dab80d86f134895abc2c8569d2b965d90", "filename": "gcc/tree-nested.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb169406cdc9e044eaec500dd742c2fed40f5488/gcc%2Ftree-nested.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb169406cdc9e044eaec500dd742c2fed40f5488/gcc%2Ftree-nested.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-nested.c?ref=bb169406cdc9e044eaec500dd742c2fed40f5488", "patch": "@@ -1033,6 +1033,7 @@ get_frame_field (struct nesting_info *info, tree target_context,\n     }\n \n   x = build3 (COMPONENT_REF, TREE_TYPE (field), x, field, NULL_TREE);\n+  TREE_THIS_VOLATILE (x) = TREE_THIS_VOLATILE (field);\n   return x;\n }\n "}]}