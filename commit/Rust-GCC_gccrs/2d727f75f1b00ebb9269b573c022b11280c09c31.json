{"sha": "2d727f75f1b00ebb9269b573c022b11280c09c31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ3MjdmNzVmMWIwMGViYjkyNjliNTczYzAyMmIxMTI4MGMwOWMzMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2008-11-14T00:38:20Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2008-11-14T00:38:20Z"}, "message": "re PR c++/37932 (narrowing conversion with -std=c++0x)\n\n        PR c++/37932\n        * typeck2.c (process_init_constructor_record): Update bitfield\n        handling.\n        (check_narrowing): Update bitfield handling, print source type.\n\nFrom-SVN: r141843", "tree": {"sha": "e1b712fe6fd456e38f890070bb379fee30d6f1f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1b712fe6fd456e38f890070bb379fee30d6f1f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d727f75f1b00ebb9269b573c022b11280c09c31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d727f75f1b00ebb9269b573c022b11280c09c31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d727f75f1b00ebb9269b573c022b11280c09c31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d727f75f1b00ebb9269b573c022b11280c09c31/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "03c715aa1d8a984529cbf1b84020de9ea8746e17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03c715aa1d8a984529cbf1b84020de9ea8746e17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03c715aa1d8a984529cbf1b84020de9ea8746e17"}], "stats": {"total": 50, "additions": 46, "deletions": 4}, "files": [{"sha": "2c936efc99b4d62cb4ddf1b7cb70b55a9ea8d19b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d727f75f1b00ebb9269b573c022b11280c09c31/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d727f75f1b00ebb9269b573c022b11280c09c31/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2d727f75f1b00ebb9269b573c022b11280c09c31", "patch": "@@ -1,3 +1,10 @@\n+2008-11-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/37932\n+\t* typeck2.c (process_init_constructor_record): Update bitfield\n+\thandling.\n+\t(check_narrowing): Update bitfield handling, print source type.\n+\t\n 2008-11-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/36478"}, {"sha": "207dd9917d9db1f6ff4d1ccc8af1b165cea736e1", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d727f75f1b00ebb9269b573c022b11280c09c31/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d727f75f1b00ebb9269b573c022b11280c09c31/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=2d727f75f1b00ebb9269b573c022b11280c09c31", "patch": "@@ -650,7 +650,7 @@ store_init_value (tree decl, tree init)\n void\n check_narrowing (tree type, tree init)\n {\n-  tree ftype = TREE_TYPE (init);\n+  tree ftype = unlowered_expr_type (init);\n   bool ok = true;\n   REAL_VALUE_TYPE d;\n   bool was_decl = false;\n@@ -704,8 +704,8 @@ check_narrowing (tree type, tree init)\n     }\n \n   if (!ok)\n-    permerror (input_location, \"narrowing conversion of %qE to %qT inside { }\",\n-\t       init, type);\n+    permerror (input_location, \"narrowing conversion of %qE from %qT to %qT inside { }\",\n+\t       init, ftype, type);\n }\n \n /* Process the initializer INIT for a variable of type TYPE, emitting\n@@ -993,6 +993,7 @@ process_init_constructor_record (tree type, tree init)\n   for (field = TYPE_FIELDS (type); field; field = TREE_CHAIN (field))\n     {\n       tree next;\n+      tree type;\n \n       if (!DECL_NAME (field) && DECL_C_BIT_FIELD (field))\n \t{\n@@ -1004,6 +1005,11 @@ process_init_constructor_record (tree type, tree init)\n       if (TREE_CODE (field) != FIELD_DECL || DECL_ARTIFICIAL (field))\n \tcontinue;\n \n+      /* If this is a bitfield, first convert to the declared type.  */\n+      type = TREE_TYPE (field);\n+      if (DECL_BIT_FIELD_TYPE (field))\n+\ttype = DECL_BIT_FIELD_TYPE (field);\n+\n       if (idx < VEC_length (constructor_elt, CONSTRUCTOR_ELTS (init)))\n \t{\n \t  constructor_elt *ce = VEC_index (constructor_elt,\n@@ -1024,7 +1030,7 @@ process_init_constructor_record (tree type, tree init)\n \t    }\n \n \t  gcc_assert (ce->value);\n-\t  next = digest_init_r (TREE_TYPE (field), ce->value, true);\n+\t  next = digest_init_r (type, ce->value, true);\n \t  ++idx;\n \t}\n       else if (TYPE_NEEDS_CONSTRUCTING (TREE_TYPE (field)))\n@@ -1068,6 +1074,9 @@ process_init_constructor_record (tree type, tree init)\n \t    continue;\n \t}\n \n+      /* If this is a bitfield, now convert to the lowered type.  */\n+      if (type != TREE_TYPE (field))\n+\tnext = cp_convert_and_check (TREE_TYPE (field), next);\n       flags |= picflag_from_initializer (next);\n       CONSTRUCTOR_APPEND_ELT (v, field, next);\n     }"}, {"sha": "898aaf24150373e661f1d50a82e90cce83a3c449", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d727f75f1b00ebb9269b573c022b11280c09c31/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d727f75f1b00ebb9269b573c022b11280c09c31/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2d727f75f1b00ebb9269b573c022b11280c09c31", "patch": "@@ -1,3 +1,9 @@\n+2008-11-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/37932\n+\t* g++.dg/conversion/bitfield11.C: New test.\n+\t* g++.dg/cpp0x/initlist7.C: New test.\n+\n 2008-11-13  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* gcc.target/mips/loongson-muldiv-1.c: New test."}, {"sha": "e36539c64b5ec8d2937414ccf90eb27b2ecef164", "filename": "gcc/testsuite/g++.dg/conversion/bitfield11.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d727f75f1b00ebb9269b573c022b11280c09c31/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fbitfield11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d727f75f1b00ebb9269b573c022b11280c09c31/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fbitfield11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fbitfield11.C?ref=2d727f75f1b00ebb9269b573c022b11280c09c31", "patch": "@@ -0,0 +1,8 @@\n+// Make sure that digest_init converts to the declared type of the\n+// bitfield, not just the lowered type.\n+\n+enum E { EA, EB };\n+\n+struct A { E e: 8; };\n+\n+A a = { 0 };\t\t\t// { dg-error \"invalid conversion\" }"}, {"sha": "7913ed7edb1ab566556e9661174685554a771b66", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist7.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d727f75f1b00ebb9269b573c022b11280c09c31/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d727f75f1b00ebb9269b573c022b11280c09c31/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist7.C?ref=2d727f75f1b00ebb9269b573c022b11280c09c31", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/37932\n+// { dg-options \"-std=c++0x\" }\n+\n+typedef enum { AA=1, BB=2 } my_enum;\n+\n+typedef struct { my_enum a:4 ; unsigned b:28; } stru;\n+\n+void foo (char c, my_enum x, int i)\n+{\n+  char arr[2] = {c+'0', 0};\t// { dg-error \"narrowing\" }\n+  stru s = {x,0};\n+}"}]}