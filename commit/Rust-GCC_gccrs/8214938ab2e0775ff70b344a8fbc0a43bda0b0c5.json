{"sha": "8214938ab2e0775ff70b344a8fbc0a43bda0b0c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIxNDkzOGFiMmUwNzc1ZmY3MGIzNDRhOGZiYzBhNDNiZGEwYjBjNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-02-15T15:48:15Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-08T07:51:01Z"}, "message": "[Ada] Do not warn on partial access to atomic object with address clause\n\n2020-06-08  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* sem_res.adb (Resolve_Indexed_Component): Do not give a warning\n\tfor a nonatomic component of an atomic array which is subject to\n\tan address clause in Ada 2020 mode.\n\t(Resolve_Selected_Component): Likewise for an atomic record.", "tree": {"sha": "edbde544c0449a7632b45c3872808d8b93c9ad1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edbde544c0449a7632b45c3872808d8b93c9ad1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8214938ab2e0775ff70b344a8fbc0a43bda0b0c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8214938ab2e0775ff70b344a8fbc0a43bda0b0c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8214938ab2e0775ff70b344a8fbc0a43bda0b0c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8214938ab2e0775ff70b344a8fbc0a43bda0b0c5/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "591bdee0fa1087daeab3c0f901d5139c6776469d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/591bdee0fa1087daeab3c0f901d5139c6776469d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/591bdee0fa1087daeab3c0f901d5139c6776469d"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "303f4dbad4a4cc8de589684bd0c4bf498e23b3f8", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8214938ab2e0775ff70b344a8fbc0a43bda0b0c5/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8214938ab2e0775ff70b344a8fbc0a43bda0b0c5/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=8214938ab2e0775ff70b344a8fbc0a43bda0b0c5", "patch": "@@ -9034,10 +9034,10 @@ package body Sem_Res is\n          Eval_Indexed_Component (N);\n       end if;\n \n-      --  If the array type is atomic, and the component is not atomic, then\n-      --  this is worth a warning, since we have a situation where the access\n-      --  to the component may cause extra read/writes of the atomic array\n-      --  object, or partial word accesses, which could be unexpected.\n+      --  If the array type is atomic and the component is not, then this is\n+      --  worth a warning before Ada 2020, since we have a situation where the\n+      --  access to the component may cause extra read/writes of the atomic\n+      --  object, or partial word accesses, both of which may be unexpected.\n \n       if Nkind (N) = N_Indexed_Component\n         and then Is_Atomic_Ref_With_Address (N)\n@@ -9046,6 +9046,7 @@ package body Sem_Res is\n                                  and then Has_Atomic_Components\n                                             (Entity (Prefix (N)))))\n         and then not Is_Atomic (Component_Type (Array_Type))\n+        and then Ada_Version < Ada_2020\n       then\n          Error_Msg_N\n            (\"??access to non-atomic component of atomic array\", Prefix (N));\n@@ -10727,15 +10728,16 @@ package body Sem_Res is\n       --  Note: No Eval processing is required, because the prefix is of a\n       --  record type, or protected type, and neither can possibly be static.\n \n-      --  If the record type is atomic, and the component is non-atomic, then\n-      --  this is worth a warning, since we have a situation where the access\n-      --  to the component may cause extra read/writes of the atomic array\n+      --  If the record type is atomic and the component is not, then this is\n+      --  worth a warning before Ada 2020, since we have a situation where the\n+      --  access to the component may cause extra read/writes of the atomic\n       --  object, or partial word accesses, both of which may be unexpected.\n \n       if Nkind (N) = N_Selected_Component\n         and then Is_Atomic_Ref_With_Address (N)\n         and then not Is_Atomic (Entity (S))\n         and then not Is_Atomic (Etype (Entity (S)))\n+        and then Ada_Version < Ada_2020\n       then\n          Error_Msg_N\n            (\"??access to non-atomic component of atomic record\","}]}