{"sha": "ea3373cd2d2da9752daf0679351945a3b49fd6ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWEzMzczY2QyZDJkYTk3NTJkYWYwNjc5MzUxOTQ1YTNiNDlmZDZlZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-25T15:30:29Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-08-25T15:30:29Z"}, "message": "(type_lists_compatible_p): Treat transparent unions just like unnamed\nones.\n\nFrom-SVN: r7979", "tree": {"sha": "5fb722ec35acc163c1d96607141e4a25736db4ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fb722ec35acc163c1d96607141e4a25736db4ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea3373cd2d2da9752daf0679351945a3b49fd6ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea3373cd2d2da9752daf0679351945a3b49fd6ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea3373cd2d2da9752daf0679351945a3b49fd6ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea3373cd2d2da9752daf0679351945a3b49fd6ee/comments", "author": null, "committer": null, "parents": [{"sha": "e0a920510371119420a09281f5858786cd427334", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0a920510371119420a09281f5858786cd427334", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0a920510371119420a09281f5858786cd427334"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "d828ce7bdaf386361c251455e44eebce783e65ef", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea3373cd2d2da9752daf0679351945a3b49fd6ee/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea3373cd2d2da9752daf0679351945a3b49fd6ee/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=ea3373cd2d2da9752daf0679351945a3b49fd6ee", "patch": "@@ -655,7 +655,8 @@ type_lists_compatible_p (args1, args2)\n \t  /* Allow  wait (union {union wait *u; int *i} *)\n \t     and  wait (union wait *)  to be compatible.  */\n \t  if (TREE_CODE (TREE_VALUE (args1)) == UNION_TYPE\n-\t      && TYPE_NAME (TREE_VALUE (args1)) == 0\n+\t      && (TYPE_NAME (TREE_VALUE (args1)) == 0\n+\t\t  || TYPE_TRANSPARENT_UNION (TREE_VALUE (args1)))\n \t      && TREE_CODE (TYPE_SIZE (TREE_VALUE (args1))) == INTEGER_CST\n \t      && tree_int_cst_equal (TYPE_SIZE (TREE_VALUE (args1)),\n \t\t\t\t     TYPE_SIZE (TREE_VALUE (args2))))\n@@ -669,7 +670,8 @@ type_lists_compatible_p (args1, args2)\n \t\treturn 0;\n \t    }\n \t  else if (TREE_CODE (TREE_VALUE (args2)) == UNION_TYPE\n-\t\t   && TYPE_NAME (TREE_VALUE (args2)) == 0\n+\t\t   && (TYPE_NAME (TREE_VALUE (args2)) == 0\n+\t\t       || TYPE_TRANSPARENT_UNION (TREE_VALUE (args2)))\n \t\t   && TREE_CODE (TYPE_SIZE (TREE_VALUE (args2))) == INTEGER_CST\n \t\t   && tree_int_cst_equal (TYPE_SIZE (TREE_VALUE (args2)),\n \t\t\t\t\t  TYPE_SIZE (TREE_VALUE (args1))))"}]}