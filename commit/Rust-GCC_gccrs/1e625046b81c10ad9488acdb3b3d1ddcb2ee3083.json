{"sha": "1e625046b81c10ad9488acdb3b3d1ddcb2ee3083", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU2MjUwNDZiODFjMTBhZDk0ODhhY2RiM2IzZDFkZGNiMmVlMzA4Mw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-05-08T02:17:54Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-05-08T02:17:54Z"}, "message": "class.c (vtbl_init_data_s): Change the type of fns to VEC(tree,gc)*.\n\n\t* class.c (vtbl_init_data_s): Change the type of fns to\n\tVEC(tree,gc)*.\n\t(build_vtbl_initializer, add_vcall_offset, add_vcall_offset):\n\tUse VEC instead of VARRAY.\n\nFrom-SVN: r99376", "tree": {"sha": "8fb10aa6914022465955027d7b51eca2f86f7666", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fb10aa6914022465955027d7b51eca2f86f7666"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e625046b81c10ad9488acdb3b3d1ddcb2ee3083", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e625046b81c10ad9488acdb3b3d1ddcb2ee3083", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e625046b81c10ad9488acdb3b3d1ddcb2ee3083", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e625046b81c10ad9488acdb3b3d1ddcb2ee3083/comments", "author": null, "committer": null, "parents": [{"sha": "d7d461f7658bd3327da07593ed6718e861106639", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7d461f7658bd3327da07593ed6718e861106639", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7d461f7658bd3327da07593ed6718e861106639"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "50523410176553ae82fb188a5733ee5bb063e5ba", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e625046b81c10ad9488acdb3b3d1ddcb2ee3083/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e625046b81c10ad9488acdb3b3d1ddcb2ee3083/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1e625046b81c10ad9488acdb3b3d1ddcb2ee3083", "patch": "@@ -1,3 +1,10 @@\n+2005-05-08  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* class.c (vtbl_init_data_s): Change the type of fns to\n+\tVEC(tree,gc)*.\n+\t(build_vtbl_initializer, add_vcall_offset, add_vcall_offset):\n+\tUse VEC instead of VARRAY.\n+\n 2005-05-07  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* mangle.c: Remove a reference to the MIPS -mint64 option."}, {"sha": "b70fb1f21650da9dfc6de74f46bb54f61c86980a", "filename": "gcc/cp/class.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e625046b81c10ad9488acdb3b3d1ddcb2ee3083/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e625046b81c10ad9488acdb3b3d1ddcb2ee3083/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=1e625046b81c10ad9488acdb3b3d1ddcb2ee3083", "patch": "@@ -80,7 +80,7 @@ typedef struct vtbl_init_data_s\n   tree vbase;\n   /* The functions in vbase for which we have already provided vcall\n      offsets.  */\n-  varray_type fns;\n+  VEC(tree,gc) *fns;\n   /* The vtable index of the next vcall or vbase offset.  */\n   tree index;\n   /* Nonzero if we are building the initializer for the primary\n@@ -7150,7 +7150,7 @@ build_vtbl_initializer (tree binfo,\n   /* Create an array for keeping track of the functions we've\n      processed.  When we see multiple functions with the same\n      signature, we share the vcall offsets.  */\n-  VARRAY_TREE_INIT (vid.fns, 32, \"fns\");\n+  vid.fns = VEC_alloc (tree, gc, 32);\n   /* Add the vcall and vbase offset entries.  */\n   build_vcall_and_vbase_vtbl_entries (binfo, &vid);\n   \n@@ -7575,16 +7575,14 @@ add_vcall_offset (tree orig_fn, tree binfo, vtbl_init_data *vid)\n {\n   size_t i;\n   tree vcall_offset;\n+  tree derived_entry;\n \n   /* If there is already an entry for a function with the same\n      signature as FN, then we do not need a second vcall offset.\n      Check the list of functions already present in the derived\n      class vtable.  */\n-  for (i = 0; i < VARRAY_ACTIVE_SIZE (vid->fns); ++i) \n+  for (i = 0; VEC_iterate (tree, vid->fns, i, derived_entry); ++i) \n     {\n-      tree derived_entry;\n-\n-      derived_entry = VARRAY_TREE (vid->fns, i);\n       if (same_signature_p (derived_entry, orig_fn)\n \t  /* We only use one vcall offset for virtual destructors,\n \t     even though there are two virtual table entries.  */\n@@ -7611,7 +7609,7 @@ add_vcall_offset (tree orig_fn, tree binfo, vtbl_init_data *vid)\n \t\t\t   ssize_int (TARGET_VTABLE_DATA_ENTRY_DISTANCE));\n \n   /* Keep track of this function.  */\n-  VARRAY_PUSH_TREE (vid->fns, orig_fn);\n+  VEC_safe_push (tree, gc, vid->fns, orig_fn);\n \n   if (vid->generate_vcall_entries)\n     {"}]}