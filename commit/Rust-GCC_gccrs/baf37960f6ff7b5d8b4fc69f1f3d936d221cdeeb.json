{"sha": "baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFmMzc5NjBmNmZmN2I1ZDhiNGZjNjlmMWYzZDkzNmQyMjFjZGVlYg==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2015-10-11T00:48:02Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2015-10-11T00:48:02Z"}, "message": "always define SETUP_FRAME_ADDRESSES\n\ngcc/ChangeLog:\n\n2015-10-10  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* defaults.h (SETUP_FRAME_ADDRESSES): New default definition.\n\t* builtins.c (expand_builtin_return_addr): Adjust.\n\t* doc/tm.texi: Likewise.\n\t* doc/tm.texi.in: Likewise.\n\t* except.c (expand_builtin_unwind_init): Likewise.\n\nFrom-SVN: r228686", "tree": {"sha": "08dd3e988e224f0a00655ec21a68d7566526182f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08dd3e988e224f0a00655ec21a68d7566526182f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb/comments", "author": null, "committer": null, "parents": [{"sha": "579f294624827c80f01af119cc3f52265371a353", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/579f294624827c80f01af119cc3f52265371a353", "html_url": "https://github.com/Rust-GCC/gccrs/commit/579f294624827c80f01af119cc3f52265371a353"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "0d9ab5cde4841b1bcca280cb31ebf972eb99bebd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb", "patch": "@@ -1,3 +1,11 @@\n+2015-10-10  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* defaults.h (SETUP_FRAME_ADDRESSES): New default definition.\n+\t* builtins.c (expand_builtin_return_addr): Adjust.\n+\t* doc/tm.texi: Likewise.\n+\t* doc/tm.texi.in: Likewise.\n+\t* except.c (expand_builtin_unwind_init): Likewise.\n+\n 2015-10-10  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* builtins.c (expand_builtin_return_addr): Adjust."}, {"sha": "bd95acbca9334558c81237293e039cf495ce9e60", "filename": "gcc/builtins.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb", "patch": "@@ -784,13 +784,8 @@ expand_builtin_return_addr (enum built_in_function fndecl_code, int count)\n \t}\n     }\n \n-  /* Some machines need special handling before we can access\n-     arbitrary frames.  For example, on the SPARC, we must first flush\n-     all register windows to the stack.  */\n-#ifdef SETUP_FRAME_ADDRESSES\n   if (count > 0)\n     SETUP_FRAME_ADDRESSES ();\n-#endif\n \n   /* On the SPARC, the return address is not in the frame, it is in a\n      register.  There is no way to access it off of the current frame"}, {"sha": "5f1ea7674bb7bc6332cbe7f60030a0bd2087659c", "filename": "gcc/defaults.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb", "patch": "@@ -1281,6 +1281,10 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define INITIAL_FRAME_ADDRESS_RTX NULL\n #endif\n \n+#ifndef SETUP_FRAME_ADDRESSES\n+#define SETUP_FRAME_ADDRESSES() do { } while (0)\n+#endif\n+\n #ifdef GCC_INSN_FLAGS_H\n /* Dependent default target macro definitions\n "}, {"sha": "d09e6461683a1ae25ab9bcd2531be9706053897e", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb", "patch": "@@ -3020,11 +3020,11 @@ address of the stack word that points to the previous frame.\n @end defmac\n \n @defmac SETUP_FRAME_ADDRESSES\n-If defined, a C expression that produces the machine-specific code to\n+A C expression that produces the machine-specific code to\n setup the stack so that arbitrary frames can be accessed.  For example,\n on the SPARC, we must flush all of the register windows to the stack\n before we can access arbitrary stack frames.  You will seldom need to\n-define this macro.\n+define this macro.  The default is to do nothing.\n @end defmac\n \n @deftypefn {Target Hook} rtx TARGET_BUILTIN_SETJMP_FRAME_VALUE (void)"}, {"sha": "33939ec77f4d32bb2e8c8faff7f10e5940c18e55", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb", "patch": "@@ -2626,11 +2626,11 @@ address of the stack word that points to the previous frame.\n @end defmac\n \n @defmac SETUP_FRAME_ADDRESSES\n-If defined, a C expression that produces the machine-specific code to\n+A C expression that produces the machine-specific code to\n setup the stack so that arbitrary frames can be accessed.  For example,\n on the SPARC, we must flush all of the register windows to the stack\n before we can access arbitrary stack frames.  You will seldom need to\n-define this macro.\n+define this macro.  The default is to do nothing.\n @end defmac\n \n @hook TARGET_BUILTIN_SETJMP_FRAME_VALUE"}, {"sha": "8f776532e4230c960501219567bc261d2c590321", "filename": "gcc/except.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=baf37960f6ff7b5d8b4fc69f1f3d936d221cdeeb", "patch": "@@ -2120,9 +2120,7 @@ expand_builtin_unwind_init (void)\n      able to copy the saved values for any registers from frames we unwind.  */\n   crtl->saves_all_registers = 1;\n \n-#ifdef SETUP_FRAME_ADDRESSES\n   SETUP_FRAME_ADDRESSES ();\n-#endif\n }\n \n /* Map a non-negative number to an eh return data register number; expands"}]}