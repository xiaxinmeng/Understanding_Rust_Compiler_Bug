{"sha": "3f1923dcc183ad589948318c2099b6548fc82e93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YxOTIzZGNjMTgzYWQ1ODk5NDgzMThjMjA5OWI2NTQ4ZmM4MmU5Mw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2003-08-20T15:32:23Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-08-20T15:32:23Z"}, "message": "re PR libgcj/9125 (VMClassLoader should cache the result of Runtime.(internal)loadLibrary())\n\n\tFix for PR libgcj/9125:\n\t* gnu/gcj/runtime/natVMClassLoader.cc (findClass): Find Runtime\n\tobject outside of loop.  Respect lib_control setting.\n\t* gnu/gcj/runtime/VMClassLoader.java (tried_libraries): New\n\tfield.\n\t(lib_control): New field.\n\t(LIB_FULL, LIB_CACHE, LIB_NEVER): New constants.\n\t(VMClassLoader): Initialize new field.\n\nFrom-SVN: r70600", "tree": {"sha": "9dc3ee43232dc76c5cf29cca667d555d8d9c62e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9dc3ee43232dc76c5cf29cca667d555d8d9c62e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f1923dcc183ad589948318c2099b6548fc82e93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f1923dcc183ad589948318c2099b6548fc82e93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f1923dcc183ad589948318c2099b6548fc82e93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f1923dcc183ad589948318c2099b6548fc82e93/comments", "author": null, "committer": null, "parents": [{"sha": "9c6f74cd3f4fa7711ab1eb9e7a176450aa699e54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c6f74cd3f4fa7711ab1eb9e7a176450aa699e54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c6f74cd3f4fa7711ab1eb9e7a176450aa699e54"}], "stats": {"total": 57, "additions": 51, "deletions": 6}, "files": [{"sha": "1cf3b82b944da8cee401e85375033be179ffe84f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f1923dcc183ad589948318c2099b6548fc82e93/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f1923dcc183ad589948318c2099b6548fc82e93/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=3f1923dcc183ad589948318c2099b6548fc82e93", "patch": "@@ -1,5 +1,14 @@\n 2003-08-20  Tom Tromey  <tromey@redhat.com>\n \n+\tFix for PR libgcj/9125:\n+\t* gnu/gcj/runtime/natVMClassLoader.cc (findClass): Find Runtime\n+\tobject outside of loop.  Respect lib_control setting.\n+\t* gnu/gcj/runtime/VMClassLoader.java (tried_libraries): New\n+\tfield.\n+\t(lib_control): New field.\n+\t(LIB_FULL, LIB_CACHE, LIB_NEVER): New constants.\n+\t(VMClassLoader): Initialize new field.\n+\n \t* java/lang/ref/natReference.cc (finalize_referred_to_object):\n \tSet `list->reference' to DELETED_REFERENCE when removing dead\n \tobject."}, {"sha": "ca0f663c9ccb4a202ae0f4d2feb8b055cc27de38", "filename": "libjava/gnu/gcj/runtime/VMClassLoader.java", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f1923dcc183ad589948318c2099b6548fc82e93/libjava%2Fgnu%2Fgcj%2Fruntime%2FVMClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f1923dcc183ad589948318c2099b6548fc82e93/libjava%2Fgnu%2Fgcj%2Fruntime%2FVMClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FVMClassLoader.java?ref=3f1923dcc183ad589948318c2099b6548fc82e93", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1999, 2001, 2002  Free Software Foundation\n+/* Copyright (C) 1999, 2001, 2002, 2003  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -12,13 +12,28 @@\n \n import java.io.*;\n import java.util.StringTokenizer;\n+import java.util.HashSet;\n import java.net.URL;\n \n public final class VMClassLoader extends java.net.URLClassLoader\n {\n   private VMClassLoader ()\n   {\t\n     super (init());\n+    String p\n+      = System.getProperty (\"gnu.gcj.runtime.VMClassLoader.library_control\",\n+\t\t\t    \"\");\n+    if (\"never\".equals(p))\n+      lib_control = LIB_NEVER;\n+    else if (\"cache\".equals(p))\n+      lib_control = LIB_CACHE;\n+    else if (\"full\".equals(p))\n+      {\n+\t// In case we ever want to change the default.\n+\tlib_control = LIB_FULL;\n+      }\n+    else\n+      lib_control = LIB_FULL;\n   }\n \n   private static URL[] init() \n@@ -67,6 +82,17 @@ private static URL[] init()\n   protected native Class findClass(String name) \n     throws java.lang.ClassNotFoundException;\n \n+  // This keeps track of shared libraries we've already tried to load.\n+  private HashSet tried_libraries = new HashSet();\n+\n+  // Holds one of the LIB_* constants; used to determine how shared\n+  // library loads are done.\n+  private int lib_control;\n+\n   // The only VMClassLoader that can exist.\n-  public static VMClassLoader instance = new VMClassLoader ();\n+  public static VMClassLoader instance = new VMClassLoader();\n+\n+  private static final int LIB_FULL = 0;\n+  private static final int LIB_CACHE = 1;\n+  private static final int LIB_NEVER = 2;\n }"}, {"sha": "42ac2a02107b2f41cf9bb029bfd2582575084737", "filename": "libjava/gnu/gcj/runtime/natVMClassLoader.cc", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f1923dcc183ad589948318c2099b6548fc82e93/libjava%2Fgnu%2Fgcj%2Fruntime%2FnatVMClassLoader.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f1923dcc183ad589948318c2099b6548fc82e93/libjava%2Fgnu%2Fgcj%2Fruntime%2FnatVMClassLoader.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FnatVMClassLoader.cc?ref=3f1923dcc183ad589948318c2099b6548fc82e93", "patch": "@@ -1,6 +1,6 @@\n // Native code for VMClassLoader\n \n-/* Copyright (C) 2002  Free Software Foundation\n+/* Copyright (C) 2002, 2003  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -18,14 +18,15 @@ details.  */\n #include <java/lang/StringBuffer.h>\n #include <java/net/URLClassLoader.h>\n #include <java/lang/Runtime.h>\n+#include <java/util/HashSet.h>\n \n jclass\n gnu::gcj::runtime::VMClassLoader::findClass (jstring name)\n {\n   _Jv_Utf8Const *name_u = _Jv_makeUtf8Const (name);\n   jclass klass = _Jv_FindClassInCache (name_u, 0);\n \n-  if (! klass)\n+  if (! klass && lib_control != LIB_NEVER)\n     {\n       // Turn `gnu.pkg.quux' into `lib-gnu-pkg-quux'.  Then search for\n       // a module named (eg, on Linux) `lib-gnu-pkg-quux.so', followed\n@@ -41,11 +42,20 @@ gnu::gcj::runtime::VMClassLoader::findClass (jstring name)\n \tcn = name->substring (0, ci);\n       jstring so_base_name = (sb->append (cn)->toString ())->replace ('.', '-');\n \n+      using namespace ::java::lang;\n+      Runtime *rt = Runtime::getRuntime();\n+\n       // Compare against `3' because that is the length of \"lib\".\n       while (! klass && so_base_name && so_base_name->length() > 3)\n \t{\n-\t  using namespace ::java::lang;\n-\t  Runtime *rt = Runtime::getRuntime();\n+\t  if (lib_control == LIB_CACHE)\n+\t    {\n+\t      // If we've already tried this name, we're done.\n+\t      if (tried_libraries->contains(so_base_name))\n+\t\tbreak;\n+\t      tried_libraries->add(so_base_name);\n+\t    }\n+\n \t  jboolean loaded = rt->loadLibraryInternal (so_base_name);\n \n \t  jint nd = so_base_name->lastIndexOf ('-');"}]}