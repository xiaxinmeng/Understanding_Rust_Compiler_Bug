{"sha": "abd3817fd52ffa5dc4b6de525225a35b35696c87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJkMzgxN2ZkNTJmZmE1ZGM0YjZkZTUyNTIyNWEzNWIzNTY5NmM4Nw==", "commit": {"author": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2004-01-21T00:23:04Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2004-01-21T00:23:04Z"}, "message": "reorder struct exception hacks and only bypass glibc for proper C++ handling\n\nFrom-SVN: r76246", "tree": {"sha": "6f989545921a22ce56b00101591a79ced68212c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f989545921a22ce56b00101591a79ced68212c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abd3817fd52ffa5dc4b6de525225a35b35696c87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abd3817fd52ffa5dc4b6de525225a35b35696c87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abd3817fd52ffa5dc4b6de525225a35b35696c87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abd3817fd52ffa5dc4b6de525225a35b35696c87/comments", "author": null, "committer": null, "parents": [{"sha": "0144d441ac6f194f909fee412177685337b99903", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0144d441ac6f194f909fee412177685337b99903", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0144d441ac6f194f909fee412177685337b99903"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "52fa3f399962b6322721744439aa1e551d625b08", "filename": "gcc/fixinc/tests/base/math.h", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abd3817fd52ffa5dc4b6de525225a35b35696c87/gcc%2Ffixinc%2Ftests%2Fbase%2Fmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abd3817fd52ffa5dc4b6de525225a35b35696c87/gcc%2Ffixinc%2Ftests%2Fbase%2Fmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fmath.h?ref=abd3817fd52ffa5dc4b6de525225a35b35696c87", "patch": "@@ -7,16 +7,16 @@\n     This had to be done to correct non-standard usages in the\n     original, manufacturer supplied header file.  */\n \n-#ifndef FIXINC_WRAP_MATH_H_SUNOS_MATHERR_DECL\n-#define FIXINC_WRAP_MATH_H_SUNOS_MATHERR_DECL 1\n-\n-struct exception;\n #ifndef FIXINC_WRAP_MATH_H_MATH_EXCEPTION\n #define FIXINC_WRAP_MATH_H_MATH_EXCEPTION 1\n \n #ifdef __cplusplus\n #define exception __math_exception\n #endif\n+#ifndef FIXINC_WRAP_MATH_H_EXCEPTION_STRUCTURE\n+#define FIXINC_WRAP_MATH_H_EXCEPTION_STRUCTURE 1\n+\n+struct exception;\n \n \n #if defined( BROKEN_CABS_CHECK )\n@@ -31,6 +31,11 @@ struct exception;\n #endif  /* BROKEN_CABS_CHECK */\n \n \n+#if defined( EXCEPTION_STRUCTURE_CHECK )\n+extern int matherr();\n+#endif  /* EXCEPTION_STRUCTURE_CHECK */\n+\n+\n #if defined( HPUX11_CPP_POW_INLINE_CHECK )\n \n #endif  /* HPUX11_CPP_POW_INLINE_CHECK */\n@@ -100,11 +105,6 @@ int foo;\n #endif  /* STRICT_ANSI_NOT_CTD_CHECK */\n \n \n-#if defined( SUNOS_MATHERR_DECL_CHECK )\n-extern int matherr();\n-#endif  /* SUNOS_MATHERR_DECL_CHECK */\n-\n-\n #if defined( SVR4__P_CHECK )\n #ifndef __P\n #define __P(a) a\n@@ -126,10 +126,10 @@ extern double atof(const char *__nptr);\n #if defined( WINDISS_MATH2_CHECK )\n #endif /* __GNUC__ */\n #endif  /* WINDISS_MATH2_CHECK */\n+\n+#endif  /* FIXINC_WRAP_MATH_H_EXCEPTION_STRUCTURE */\n #ifdef __cplusplus\n #undef exception\n #endif\n \n #endif  /* FIXINC_WRAP_MATH_H_MATH_EXCEPTION */\n-\n-#endif  /* FIXINC_WRAP_MATH_H_SUNOS_MATHERR_DECL */"}]}