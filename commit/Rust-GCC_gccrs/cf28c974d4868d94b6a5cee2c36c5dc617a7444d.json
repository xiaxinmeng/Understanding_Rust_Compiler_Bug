{"sha": "cf28c974d4868d94b6a5cee2c36c5dc617a7444d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YyOGM5NzRkNDg2OGQ5NGI2YTVjZWUyYzM2YzVkYzYxN2E3NDQ0ZA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-07-18T09:34:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-18T09:34:17Z"}, "message": "sem_attr.adb, [...]: Minor reformatting.\n\n2014-07-18  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_attr.adb, s-os_lib.ads, prj-tree.adb: Minor reformatting.\n\t* types.h: Fix typo.\n\n2014-07-18  Robert Dewar  <dewar@adacore.com>\n\n\t* freeze.adb (Check_Address_Clause): Use Kill_Rep_Clause (no\n\tfunctional change).\n\t* gnat_ugn.texi: Document that -gnatI removes rep clauses from\n\tASIS trees.\n\t* sem_ch13.adb (Kill_Rep_Clause): New procedure\n\t(Analyze_Attribute_Definition_Clause): Use\n\tKill_Rep_Clause. This is just a cleanup, no functional effect.\n\t(Analyze_Enumeration_Representation_Clause):\n\tUse Kill_Rep_Clause. This means that enum rep\n\tclauses are now properly removed from -gnatct trees.\n\t(Analyze_Record_Representation_Clause): Same change.\n\t* sem_ch13.ads (Kill_Rep_Clause): New procedure.\n\nFrom-SVN: r212789", "tree": {"sha": "d7fb80a81af0997f5b112651970b927c9f5380b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7fb80a81af0997f5b112651970b927c9f5380b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf28c974d4868d94b6a5cee2c36c5dc617a7444d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf28c974d4868d94b6a5cee2c36c5dc617a7444d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf28c974d4868d94b6a5cee2c36c5dc617a7444d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf28c974d4868d94b6a5cee2c36c5dc617a7444d/comments", "author": null, "committer": null, "parents": [{"sha": "c3d01e19a33b26764c40d67e6f3f86efbd86b203", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3d01e19a33b26764c40d67e6f3f86efbd86b203", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3d01e19a33b26764c40d67e6f3f86efbd86b203"}], "stats": {"total": 88, "additions": 67, "deletions": 21}, "files": [{"sha": "90853093d7855882b7fb2d99b3f2e01044fd6daa", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf28c974d4868d94b6a5cee2c36c5dc617a7444d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf28c974d4868d94b6a5cee2c36c5dc617a7444d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cf28c974d4868d94b6a5cee2c36c5dc617a7444d", "patch": "@@ -1,3 +1,23 @@\n+2014-07-18  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_attr.adb, s-os_lib.ads, prj-tree.adb: Minor reformatting.\n+\t* types.h: Fix typo.\n+\n+2014-07-18  Robert Dewar  <dewar@adacore.com>\n+\n+\t* freeze.adb (Check_Address_Clause): Use Kill_Rep_Clause (no\n+\tfunctional change).\n+\t* gnat_ugn.texi: Document that -gnatI removes rep clauses from\n+\tASIS trees.\n+\t* sem_ch13.adb (Kill_Rep_Clause): New procedure\n+\t(Analyze_Attribute_Definition_Clause): Use\n+\tKill_Rep_Clause. This is just a cleanup, no functional effect.\n+\t(Analyze_Enumeration_Representation_Clause):\n+\tUse Kill_Rep_Clause. This means that enum rep\n+\tclauses are now properly removed from -gnatct trees.\n+\t(Analyze_Record_Representation_Clause): Same change.\n+\t* sem_ch13.ads (Kill_Rep_Clause): New procedure.\n+\n 2014-07-18  Pascal Obry  <obry@adacore.com>\n \n \t* s-os_lib.ads, s-os_lib.adb (GM_Time_Of): New routine to create an"}, {"sha": "84914106097b043a2e1cfc64f46598c96ce8ff72", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf28c974d4868d94b6a5cee2c36c5dc617a7444d/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf28c974d4868d94b6a5cee2c36c5dc617a7444d/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=cf28c974d4868d94b6a5cee2c36c5dc617a7444d", "patch": "@@ -604,7 +604,9 @@ package body Freeze is\n                end if;\n             end;\n \n-            Rewrite (Addr, Make_Null_Statement (Sloc (E)));\n+            --  And now remove the address clause\n+\n+            Kill_Rep_Clause (Addr);\n \n          elsif not Error_Posted (Expr)\n            and then not Needs_Finalization (Typ)"}, {"sha": "c8b8ca699062f7020ac1935fdf798e049fa097b4", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf28c974d4868d94b6a5cee2c36c5dc617a7444d/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf28c974d4868d94b6a5cee2c36c5dc617a7444d/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=cf28c974d4868d94b6a5cee2c36c5dc617a7444d", "patch": "@@ -4091,6 +4091,12 @@ Object_Size, Size, Small, Stream_Size, and Value_Size.\n Note that this option should be used only for compiling -- the\n code is likely to malfunction at run time.\n \n+Note that when @code{-gnatct} is used to generate trees for input\n+into @code{ASIS} tools, these representation clauses are removed\n+from the tree. This means that the tool will not see them. For\n+example, if you use @command{gnatpp} with @code{-gnatI}, the pretty printed\n+output will not include the ignored representation clauses.\n+\n @item -gnatjnn\n @cindex @option{-gnatjnn} (@command{gcc})\n Reformat error messages to fit on nn character lines"}, {"sha": "2ff5a9fff18043e828b332bf2e4eeb56e41e3cd9", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf28c974d4868d94b6a5cee2c36c5dc617a7444d/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf28c974d4868d94b6a5cee2c36c5dc617a7444d/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=cf28c974d4868d94b6a5cee2c36c5dc617a7444d", "patch": "@@ -1121,20 +1121,19 @@ package body Prj.Tree is\n       In_Tree   : Project_Node_Tree_Ref;\n       With_Name : Name_Id) return Project_Node_Id\n    is\n-      With_Clause : Project_Node_Id :=\n-        First_With_Clause_Of (Project, In_Tree);\n+      With_Clause : Project_Node_Id;\n       Result      : Project_Node_Id := Empty_Node;\n \n    begin\n       --  First check all the imported projects\n \n+      With_Clause := First_With_Clause_Of (Project, In_Tree);\n       while Present (With_Clause) loop\n \n-         --  Only non limited imported project may be used as prefix\n-         --  of variable or attributes.\n+         --  Only non limited imported project may be used as prefix of\n+         --  variables or attributes.\n \n          Result := Non_Limited_Project_Node_Of (With_Clause, In_Tree);\n-\n          while Present (Result) loop\n             if Name_Of (Result, In_Tree) = With_Name then\n                return Result;"}, {"sha": "50574a932e44a6c56612e2828862ad777a741d51", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf28c974d4868d94b6a5cee2c36c5dc617a7444d/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf28c974d4868d94b6a5cee2c36c5dc617a7444d/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=cf28c974d4868d94b6a5cee2c36c5dc617a7444d", "patch": "@@ -159,9 +159,9 @@ package System.OS_Lib is\n       Hour   : Hour_Type;\n       Minute : Minute_Type;\n       Second : Second_Type) return OS_Time;\n-   --  Analogous to the Time_Of routine in Ada.Calendar, takes a set of\n-   --  time component parts and returns an OS_Time. Returns Invalid_Time\n-   --  if the creation fails.\n+   --  Analogous to the Time_Of routine in Ada.Calendar, takes a set of time\n+   --  component parts and returns an OS_Time. Returns Invalid_Time if the\n+   --  creation fails.\n \n    ----------------\n    -- File Stuff --"}, {"sha": "d76f8ce341734fa17d814819bf0ed78d3c400673", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf28c974d4868d94b6a5cee2c36c5dc617a7444d/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf28c974d4868d94b6a5cee2c36c5dc617a7444d/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=cf28c974d4868d94b6a5cee2c36c5dc617a7444d", "patch": "@@ -6336,11 +6336,13 @@ package body Sem_Attr is\n                               Hi := High_Bound (Index);\n \n                               Analyze_And_Resolve (Lo, Etype (Index_Type));\n+\n                               if not Is_OK_Static_Expression (Lo) then\n                                  Set_Do_Range_Check (Lo);\n                               end if;\n \n                               Analyze_And_Resolve (Hi, Etype (Index_Type));\n+\n                               if not Is_OK_Static_Expression (Hi) then\n                                  Set_Do_Range_Check (Hi);\n                               end if;"}, {"sha": "aab0ea10df4b654a8a7e4e8331e331cc5c049672", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf28c974d4868d94b6a5cee2c36c5dc617a7444d/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf28c974d4868d94b6a5cee2c36c5dc617a7444d/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=cf28c974d4868d94b6a5cee2c36c5dc617a7444d", "patch": "@@ -3647,19 +3647,12 @@ package body Sem_Ch13 is\n                  Attribute_Machine_Radix  |\n                  Attribute_Object_Size    |\n                  Attribute_Size           |\n+                 Attribute_Small          |\n                  Attribute_Stream_Size    |\n                  Attribute_Value_Size     =>\n-               Rewrite (N, Make_Null_Statement (Sloc (N)));\n+               Kill_Rep_Clause (N);\n                return;\n \n-            --  Perhaps 'Small should not be ignored by Ignore_Rep_Clauses ???\n-\n-            when Attribute_Small =>\n-               if Ignore_Rep_Clauses then\n-                  Rewrite (N, Make_Null_Statement (Sloc (N)));\n-                  return;\n-               end if;\n-\n             --  The following should not be ignored, because in the first place\n             --  they are reasonably portable, and should not cause problems in\n             --  compiling code from another target, and also they do affect\n@@ -3676,6 +3669,13 @@ package body Sem_Ch13 is\n                  Attribute_Write               =>\n                null;\n \n+            --  We do not do anything here with address clauses, they will be\n+            --  removed by Freeze later on, but for now, it works better to\n+            --  keep then in the tree.\n+\n+            when Attribute_Address =>\n+               null;\n+\n             --  Other cases are errors (\"attribute& cannot be set with\n             --  definition clause\"), which will be caught below.\n \n@@ -3830,7 +3830,7 @@ package body Sem_Ch13 is\n \n             --  Even when ignoring rep clauses we need to indicate that the\n             --  entity has an address clause and thus it is legal to declare\n-            --  it imported.\n+            --  it imported. Freeze will get rid of the address clause later.\n \n             if Ignore_Rep_Clauses then\n                if Ekind_In (U_Ent, E_Variable, E_Constant) then\n@@ -5365,6 +5365,7 @@ package body Sem_Ch13 is\n \n    begin\n       if Ignore_Rep_Clauses then\n+         Kill_Rep_Clause (N);\n          return;\n       end if;\n \n@@ -5740,6 +5741,7 @@ package body Sem_Ch13 is\n \n    begin\n       if Ignore_Rep_Clauses then\n+         Kill_Rep_Clause (N);\n          return;\n       end if;\n \n@@ -10286,6 +10288,16 @@ package body Sem_Ch13 is\n       end if;\n    end Is_Operational_Item;\n \n+   ---------------------\n+   -- Kill_Rep_Clause --\n+   ---------------------\n+\n+   procedure Kill_Rep_Clause (N : Node_Id) is\n+   begin\n+      pragma Assert (Ignore_Rep_Clauses);\n+      Rewrite (N, Make_Null_Statement (Sloc (N)));\n+   end Kill_Rep_Clause;\n+\n    ------------------\n    -- Minimum_Size --\n    ------------------"}, {"sha": "9bef91cc3849f6f240bb4e9530a6992bb5e5a7df", "filename": "gcc/ada/sem_ch13.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf28c974d4868d94b6a5cee2c36c5dc617a7444d/gcc%2Fada%2Fsem_ch13.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf28c974d4868d94b6a5cee2c36c5dc617a7444d/gcc%2Fada%2Fsem_ch13.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.ads?ref=cf28c974d4868d94b6a5cee2c36c5dc617a7444d", "patch": "@@ -79,6 +79,11 @@ package Sem_Ch13 is\n    procedure Initialize;\n    --  Initialize internal tables for new compilation\n \n+   procedure Kill_Rep_Clause (N : Node_Id);\n+   --  This procedure is called for a rep clause N when we are in -gnatI mode\n+   --  (Ignore_Rep_Clauses). It rewrites the node N to a null statement. This\n+   --  is only called if Ignore_Rep_Clauses is True.\n+\n    procedure Set_Enum_Esize (T : Entity_Id);\n    --  This routine sets the Esize field for an enumeration type T, based\n    --  on the current representation information available for T. Note that"}, {"sha": "dc3f82fec31c3c1f8837a38071c0be4e59c33970", "filename": "gcc/ada/types.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf28c974d4868d94b6a5cee2c36c5dc617a7444d/gcc%2Fada%2Ftypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf28c974d4868d94b6a5cee2c36c5dc617a7444d/gcc%2Fada%2Ftypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.h?ref=cf28c974d4868d94b6a5cee2c36c5dc617a7444d", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2013, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2014, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -375,7 +375,7 @@ typedef Int Mechanism_Type;\n #define PE_Address_Of_Intrinsic            16\n #define PE_Aliased_Parameters              17\n #define PE_All_Guards_Closed               18\n-#define PE_Bad_Attribute_For_Predicate     19\n+#define PE_Bad_Predicated_Generic_Type     19\n #define PE_Current_Task_In_Entry_Body      20\n #define PE_Duplicated_Entry_Address        21\n #define PE_Explicit_Raise                  22"}]}