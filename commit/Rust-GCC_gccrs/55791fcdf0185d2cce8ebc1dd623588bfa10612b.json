{"sha": "55791fcdf0185d2cce8ebc1dd623588bfa10612b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU3OTFmY2RmMDE4NWQyY2NlOGViYzFkZDYyMzU4OGJmYTEwNjEyYg==", "commit": {"author": {"name": "Xinliang David Li", "email": "davidxl@google.com", "date": "2010-07-27T19:23:39Z"}, "committer": {"name": "Xinliang David Li", "email": "davidxl@gcc.gnu.org", "date": "2010-07-27T19:23:39Z"}, "message": "adjusting iv update stmt position to enable inst combining. Regression tested on x86-64/linux\n\nFrom-SVN: r162587", "tree": {"sha": "1173bd3a5ecc3849bc2fcf7356b67cab97ada905", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1173bd3a5ecc3849bc2fcf7356b67cab97ada905"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55791fcdf0185d2cce8ebc1dd623588bfa10612b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55791fcdf0185d2cce8ebc1dd623588bfa10612b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55791fcdf0185d2cce8ebc1dd623588bfa10612b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55791fcdf0185d2cce8ebc1dd623588bfa10612b/comments", "author": {"login": "vns-mn", "id": 57157229, "node_id": "MDQ6VXNlcjU3MTU3MjI5", "avatar_url": "https://avatars.githubusercontent.com/u/57157229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vns-mn", "html_url": "https://github.com/vns-mn", "followers_url": "https://api.github.com/users/vns-mn/followers", "following_url": "https://api.github.com/users/vns-mn/following{/other_user}", "gists_url": "https://api.github.com/users/vns-mn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vns-mn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vns-mn/subscriptions", "organizations_url": "https://api.github.com/users/vns-mn/orgs", "repos_url": "https://api.github.com/users/vns-mn/repos", "events_url": "https://api.github.com/users/vns-mn/events{/privacy}", "received_events_url": "https://api.github.com/users/vns-mn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62a3f636a22301e50039522b042daea292b49bfd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62a3f636a22301e50039522b042daea292b49bfd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62a3f636a22301e50039522b042daea292b49bfd"}], "stats": {"total": 89, "additions": 89, "deletions": 0}, "files": [{"sha": "a5c7e48d6c6b8ae864627885a437f65c752f9e53", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55791fcdf0185d2cce8ebc1dd623588bfa10612b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55791fcdf0185d2cce8ebc1dd623588bfa10612b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=55791fcdf0185d2cce8ebc1dd623588bfa10612b", "patch": "@@ -1,3 +1,8 @@\n+2010-07-27  Xinliang David Li  <davidxl@google.com>\n+\n+\t* tree-ssa-loop-ivopts.c (adjust_iv_update_pos): New function.\n+\t(rewrite_use_address): Adjust iv update position when needed.\n+\n 2010-07-27  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \t* dbgcnt.def (hoist_insn): New debug counter."}, {"sha": "ae299886064a697ea7265955457e5541d4bb7032", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55791fcdf0185d2cce8ebc1dd623588bfa10612b/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55791fcdf0185d2cce8ebc1dd623588bfa10612b/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=55791fcdf0185d2cce8ebc1dd623588bfa10612b", "patch": "@@ -5653,6 +5653,89 @@ copy_ref_info (tree new_ref, tree old_ref)\n     }\n }\n \n+/* Performs a peephole optimization to reorder the iv update statement with\n+   a mem ref to enable instruction combining in later phases. The mem ref uses\n+   the iv value before the update, so the reordering transformation requires\n+   adjustment of the offset. CAND is the selected IV_CAND.\n+\n+   Example:\n+\n+   t = MEM_REF (base, iv1, 8, 16);  // base, index, stride, offset\n+   iv2 = iv1 + 1;\n+\n+   if (t < val)      (1)\n+     goto L;\n+   goto Head;\n+\n+\n+   directly propagating t over to (1) will introduce overlapping live range\n+   thus increase register pressure. This peephole transform it into:\n+\n+\n+   iv2 = iv1 + 1;\n+   t = MEM_REF (base, iv2, 8, 8);\n+   if (t < val)\n+     goto L;\n+   goto Head;\n+*/\n+\n+static void\n+adjust_iv_update_pos (struct iv_cand *cand, struct iv_use *use)\n+{\n+  tree var_after;\n+  gimple iv_update, stmt;\n+  basic_block bb;\n+  gimple_stmt_iterator gsi, gsi_iv;\n+\n+  if (cand->pos != IP_NORMAL)\n+    return;\n+\n+  var_after = cand->var_after;\n+  iv_update = SSA_NAME_DEF_STMT (var_after);\n+\n+  bb = gimple_bb (iv_update);\n+  gsi = gsi_last_nondebug_bb (bb);\n+  stmt = gsi_stmt (gsi);\n+\n+  /* Only handle conditional statement for now.  */\n+  if (gimple_code (stmt) != GIMPLE_COND)\n+    return;\n+\n+  gsi_prev_nondebug (&gsi);\n+  stmt = gsi_stmt (gsi);\n+  if (stmt != iv_update)\n+    return;\n+\n+  gsi_prev_nondebug (&gsi);\n+  if (gsi_end_p (gsi))\n+    return;\n+\n+  stmt = gsi_stmt (gsi);\n+  if (gimple_code (stmt) != GIMPLE_ASSIGN)\n+    return;\n+\n+  if (stmt != use->stmt)\n+    return;\n+\n+  if (TREE_CODE (gimple_assign_lhs (stmt)) != SSA_NAME)\n+    return;\n+\n+  if (dump_file && (dump_flags & TDF_DETAILS))\n+    {\n+      fprintf (dump_file, \"Reordering \\n\");\n+      print_gimple_stmt (dump_file, iv_update, 0, 0);\n+      print_gimple_stmt (dump_file, use->stmt, 0, 0);\n+      fprintf (dump_file, \"\\n\");\n+    }\n+\n+  gsi = gsi_for_stmt (use->stmt);\n+  gsi_iv = gsi_for_stmt (iv_update);\n+  gsi_move_before (&gsi_iv, &gsi);\n+\n+  cand->pos = IP_BEFORE_USE;\n+  cand->incremented_at = use->stmt;\n+}\n+\n /* Rewrites USE (address that is an iv) using candidate CAND.  */\n \n static void\n@@ -5665,6 +5748,7 @@ rewrite_use_address (struct ivopts_data *data,\n   tree ref;\n   bool ok;\n \n+  adjust_iv_update_pos (cand, use);\n   ok = get_computation_aff (data->current_loop, use, cand, use->stmt, &aff);\n   gcc_assert (ok);\n   unshare_aff_combination (&aff);"}]}