{"sha": "b970a21d1d35e0be3f32b967f56b6219f42aeb61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk3MGEyMWQxZDM1ZTBiZTNmMzJiOTY3ZjU2YjYyMTlmNDJhZWI2MQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2002-04-25T01:05:25Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-04-25T01:05:25Z"}, "message": "mangle.c (write_type): Don't use TYPE_MAIN_VARIANT when writing out an array type.\n\n\t* mangle.c (write_type): Don't use TYPE_MAIN_VARIANT when writing\n\tout an array type.\n\t(write_CV_qualifiers_for_type): Use TYPE_QUALS, not cp_type_quals,\n\tto determine qualifiers.\n\nFrom-SVN: r52749", "tree": {"sha": "8c3b7ca21c4b39b3beb16b79e48cc412d56b4838", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c3b7ca21c4b39b3beb16b79e48cc412d56b4838"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b970a21d1d35e0be3f32b967f56b6219f42aeb61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b970a21d1d35e0be3f32b967f56b6219f42aeb61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b970a21d1d35e0be3f32b967f56b6219f42aeb61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b970a21d1d35e0be3f32b967f56b6219f42aeb61/comments", "author": null, "committer": null, "parents": [{"sha": "a49cfba81bf9021a62ca111e7f7baea84213a19a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a49cfba81bf9021a62ca111e7f7baea84213a19a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a49cfba81bf9021a62ca111e7f7baea84213a19a"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "322769cca6c7d2f2f6a2913b838a32d501725412", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b970a21d1d35e0be3f32b967f56b6219f42aeb61/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b970a21d1d35e0be3f32b967f56b6219f42aeb61/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=b970a21d1d35e0be3f32b967f56b6219f42aeb61", "patch": "@@ -1358,6 +1358,11 @@ write_type (type)\n        since both the qualified and uqualified types are substitution\n        candidates.  */\n     write_type (TYPE_MAIN_VARIANT (type));\n+  else if (TREE_CODE (type) == ARRAY_TYPE)\n+    /* It is important not to use the TYPE_MAIN_VARIANT of TYPE here\n+       so that the cv-qualification of the element type is available\n+       in write_array_type.  */\n+    write_array_type (type);\n   else\n     {\n       /* See through any typedefs.  */\n@@ -1404,10 +1409,6 @@ write_type (type)\n \t  write_nested_name (TYPE_STUB_DECL (type));\n \t  break;\n \n-\tcase ARRAY_TYPE:\n-\t  write_array_type (type);\n-\t  break;\n-\n \tcase POINTER_TYPE:\n \t  /* A pointer-to-member variable is represented by a POINTER_TYPE\n \t     to an OFFSET_TYPE, so check for this first.  */\n@@ -1474,19 +1475,23 @@ write_CV_qualifiers_for_type (type)\n \n        \"In cases where multiple order-insensitive qualifiers are\n        present, they should be ordered 'K' (closest to the base type),\n-       'V', 'r', and 'U' (farthest from the base type) ...\"  */\n+       'V', 'r', and 'U' (farthest from the base type) ...\"  \n+\n+     Note that we do not use cp_type_quals below; given \"const\n+     int[3]\", the \"const\" is emitted with the \"int\", not with the\n+     array.  */\n \n-  if (CP_TYPE_RESTRICT_P (type))\n+  if (TYPE_QUALS (type) & TYPE_QUAL_RESTRICT)\n     {\n       write_char ('r');\n       ++num_qualifiers;\n     }\n-  if (CP_TYPE_VOLATILE_P (type))\n+  if (TYPE_QUALS (type) & TYPE_QUAL_VOLATILE)\n     {\n       write_char ('V');\n       ++num_qualifiers;\n     }\n-  if (CP_TYPE_CONST_P (type))\n+  if (TYPE_QUALS (type) & TYPE_QUAL_CONST)\n     {\n       write_char ('K');\n       ++num_qualifiers;"}, {"sha": "4f30310ad41dfb657690cc1e939dd33826021aa8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b970a21d1d35e0be3f32b967f56b6219f42aeb61/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b970a21d1d35e0be3f32b967f56b6219f42aeb61/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b970a21d1d35e0be3f32b967f56b6219f42aeb61", "patch": "@@ -1,5 +1,7 @@\n 2002-04-24  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* g++.dg/abi/mange7.C: New test.\n+\n \tPR c++/6438.\n \t* g++.dg/parse/stmtexpr2.C: New test.\n "}, {"sha": "af178d3e599a592756f32b33374852c5f4927b10", "filename": "gcc/testsuite/g++.dg/abi/mangle7.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b970a21d1d35e0be3f32b967f56b6219f42aeb61/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b970a21d1d35e0be3f32b967f56b6219f42aeb61/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle7.C?ref=b970a21d1d35e0be3f32b967f56b6219f42aeb61", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do compile } */\n+\n+typedef void *const t1[2];\n+float const f1(t1 (&)[79], ...) {}\n+\n+/* { dg-final { scan-assembler _Z2f1RA79_A2_KPvz } } */"}]}