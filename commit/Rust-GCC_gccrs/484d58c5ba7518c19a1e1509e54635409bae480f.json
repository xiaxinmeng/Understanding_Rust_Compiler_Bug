{"sha": "484d58c5ba7518c19a1e1509e54635409bae480f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg0ZDU4YzViYTc1MThjMTlhMWUxNTA5ZTU0NjM1NDA5YmFlNDgwZg==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-04-28T16:10:10Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-19T08:17:14Z"}, "message": "[Ada] Decorate record delta aggregate for GNATprove\n\n2020-06-19  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* sem_aggr.adb (Resolve_Delta_Record_Aggregate): Modify a nested\n\tGet_Component_Type routine to return a component and not just\n\tits type; use this routine to decorate the identifier within the\n\tdelta aggregate.", "tree": {"sha": "89fabcb5b5823d8d4214bc14e90736aa0be5ae25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89fabcb5b5823d8d4214bc14e90736aa0be5ae25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/484d58c5ba7518c19a1e1509e54635409bae480f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/484d58c5ba7518c19a1e1509e54635409bae480f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/484d58c5ba7518c19a1e1509e54635409bae480f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/484d58c5ba7518c19a1e1509e54635409bae480f/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a022cc933a07a32ca2b2fbf95d56da576613868", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a022cc933a07a32ca2b2fbf95d56da576613868", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a022cc933a07a32ca2b2fbf95d56da576613868"}], "stats": {"total": 36, "additions": 24, "deletions": 12}, "files": [{"sha": "a17f156ee6750b97c6b1c2812247fb5eae7b4695", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 24, "deletions": 12, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/484d58c5ba7518c19a1e1509e54635409bae480f/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/484d58c5ba7518c19a1e1509e54635409bae480f/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=484d58c5ba7518c19a1e1509e54635409bae480f", "patch": "@@ -2762,9 +2762,9 @@ package body Sem_Aggr is\n       --  part, verify that it is within the same variant as that of previous\n       --  specified variant components of the delta.\n \n-      function Get_Component_Type (Nam : Node_Id) return Entity_Id;\n-      --  Locate component with a given name and return its type. If none found\n-      --  report error.\n+      function Get_Component (Nam : Node_Id) return Entity_Id;\n+      --  Locate component with a given name and return it. If none found then\n+      --  report error and return Empty.\n \n       function Nested_In (V1 : Node_Id; V2 : Node_Id) return Boolean;\n       --  Determine whether variant V1 is within variant V2\n@@ -2828,11 +2828,11 @@ package body Sem_Aggr is\n          end if;\n       end Check_Variant;\n \n-      ------------------------\n-      -- Get_Component_Type --\n-      ------------------------\n+      -------------------\n+      -- Get_Component --\n+      -------------------\n \n-      function Get_Component_Type (Nam : Node_Id) return Entity_Id is\n+      function Get_Component (Nam : Node_Id) return Entity_Id is\n          Comp : Entity_Id;\n \n       begin\n@@ -2843,15 +2843,15 @@ package body Sem_Aggr is\n                   Error_Msg_N (\"delta cannot apply to discriminant\", Nam);\n                end if;\n \n-               return Etype (Comp);\n+               return Comp;\n             end if;\n \n             Next_Entity (Comp);\n          end loop;\n \n          Error_Msg_NE (\"type& has no component with this name\", Nam, Typ);\n-         return Any_Type;\n-      end Get_Component_Type;\n+         return Empty;\n+      end Get_Component;\n \n       ---------------\n       -- Nested_In --\n@@ -2898,6 +2898,7 @@ package body Sem_Aggr is\n \n       Assoc     : Node_Id;\n       Choice    : Node_Id;\n+      Comp      : Entity_Id;\n       Comp_Type : Entity_Id := Empty; -- init to avoid warning\n \n    --  Start of processing for Resolve_Delta_Record_Aggregate\n@@ -2909,10 +2910,21 @@ package body Sem_Aggr is\n       while Present (Assoc) loop\n          Choice := First (Choice_List (Assoc));\n          while Present (Choice) loop\n-            Comp_Type := Get_Component_Type (Choice);\n+            Comp := Get_Component (Choice);\n \n-            if Comp_Type /= Any_Type then\n+            if Present (Comp) then\n                Check_Variant (Choice);\n+\n+               Comp_Type := Etype (Comp);\n+\n+               --  Decorate the component reference by setting its entity and\n+               --  type, as otherwise backends like GNATprove would have to\n+               --  rediscover this information by themselves.\n+\n+               Set_Entity (Choice, Comp);\n+               Set_Etype  (Choice, Comp_Type);\n+            else\n+               Comp_Type := Any_Type;\n             end if;\n \n             Next (Choice);"}]}