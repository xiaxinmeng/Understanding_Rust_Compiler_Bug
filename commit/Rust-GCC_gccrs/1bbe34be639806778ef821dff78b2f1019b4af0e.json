{"sha": "1bbe34be639806778ef821dff78b2f1019b4af0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJiZTM0YmU2Mzk4MDY3NzhlZjgyMWRmZjc4YjJmMTAxOWI0YWYwZQ==", "commit": {"author": {"name": "Manfred Hollstein", "email": "manfred@gcc.gnu.org", "date": "1998-03-12T00:29:12Z"}, "committer": {"name": "Manfred Hollstein", "email": "manfred@gcc.gnu.org", "date": "1998-03-12T00:29:12Z"}, "message": "W\nIn gcc/:\n\t* bitmap.c (bitmap_element_allocate): Remove unused parameter;\n\tchange callers accordingly.\n\t* cplus-dem.c (arm_special): Remove unused parameter work in prototype\n\tand definition; change all callers accordingly.\n\t* except.c (init_eh): Avoid assignment of unused return value of\n\tbuild_pointer_type; cast it to void, instead, and remove unused\n\tvariable type.\n\t* gcc.c (lang_specific_driver): Define prototype only #ifdef\n\tLANG_SPECIFIC_DRIVER.\n\t(temp_names): Define only #ifdef MKTEMP_EACH_FILE.\n\t* genoutput.c (output_epilogue): Initialize next_name to 0.\n\t* real.c (efrexp): #if 0 prototype and function definition.\n\t(eremain): Likewise.\n\t(uditoe): Likewise.\n\t(ditoe): Likewise.\n\t(etoudi): Likewise.\n\t(etodi): Likewise.\n\t(esqrt): Likewise.\n\t* reload.c (push_secondary_reload): Define prototype only\n\t#ifdef HAVE_SECONDARY_RELOADS.\n\t* varasm.c (assemble_static_space): Define rounded only\n\t#ifndef ASM_OUTPUT_ALIGNED_LOCAL.\nIn gcc/cp/:\n\t* call.c (default_parm_conversions): Remove prototype definition.\n\t(build_method_call): Remove unused variable result.\n\t* cvt.c (ocp_convert): Remove unused variable conversion.\n\t* decl2.c (ambiguous_decl): Add explicit parameter definition for name.\n\t* except.c (do_unwind): #if 0 definition of unused variables fcall\n\tand next_pc.\n\t* expr.c (extract_scalar_init): #if 0 prototype and function definition.\n\t* init.c (expand_aggr_init_1): Remove unused variable init_type.\n\t(build_new_1): Remove unused variable t.\n\t* pt.c (instantiate_class_template): Remove unused variable newtag;\n\tcast called function return value to void.\n\t(do_decl_instantiation): Remove unused variables name and fn.\n\t* tree.c (get_type_decl): Add default return to shut up compiler from\n\tcomplaining control reaches end of non-void function.\n\t* typeck.c (build_x_conditional_expr): Remove unused variable rval.\n\nFrom-SVN: r18496", "tree": {"sha": "ed29cf261fc1dcd80efafa909f87a33dd26d8cee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed29cf261fc1dcd80efafa909f87a33dd26d8cee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bbe34be639806778ef821dff78b2f1019b4af0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bbe34be639806778ef821dff78b2f1019b4af0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bbe34be639806778ef821dff78b2f1019b4af0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bbe34be639806778ef821dff78b2f1019b4af0e/comments", "author": null, "committer": null, "parents": [{"sha": "8468c4a45851e30c73f778140f9e8162afa33e23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8468c4a45851e30c73f778140f9e8162afa33e23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8468c4a45851e30c73f778140f9e8162afa33e23"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "aa229d4330bbea405e8ff87675b8bea32089f220", "filename": "gcc/cp/expr.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bbe34be639806778ef821dff78b2f1019b4af0e/gcc%2Fcp%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bbe34be639806778ef821dff78b2f1019b4af0e/gcc%2Fcp%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexpr.c?ref=1bbe34be639806778ef821dff78b2f1019b4af0e", "patch": "@@ -29,7 +29,9 @@ Boston, MA 02111-1307, USA.  */\n #include \"cp-tree.h\"\n \n static tree extract_aggr_init PROTO((tree, tree));\n+#if 0\n static tree extract_scalar_init PROTO((tree, tree));\n+#endif\n static rtx cplus_expand_expr PROTO((tree, rtx, enum machine_mode,\n \t\t\t\t    enum expand_modifier));\n \n@@ -244,6 +246,7 @@ extract_aggr_init (decl, init)\n   return 0;\n }\n \n+#if 0\n static tree\n extract_scalar_init (decl, init)\n      tree decl, init;\n@@ -294,6 +297,7 @@ extract_scalar_init (decl, init)\n \n   return t; \n }\n+#endif\n \n int\n extract_init (decl, init)"}]}