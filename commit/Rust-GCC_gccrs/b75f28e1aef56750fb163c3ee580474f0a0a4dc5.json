{"sha": "b75f28e1aef56750fb163c3ee580474f0a0a4dc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjc1ZjI4ZTFhZWY1Njc1MGZiMTYzYzNlZTU4MDQ3NGYwYTBhNGRjNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-03-04T08:47:55Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-03-04T08:47:55Z"}, "message": "re PR tree-optimization/60382 (ICE on valid code at -O3 on x86_64-linux-gnu (in vect_create_epilog_for_reduction, at tree-vect-loop.c:4352))\n\n2014-03-04  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/60382\n\t* tree-vect-loop.c (vect_is_simple_reduction_1): Do not consider\n\tdead PHIs a reduction.\n\n\t* gcc.dg/vect/pr60382.c: New testcase.\n\nFrom-SVN: r208305", "tree": {"sha": "d20b75cfb74602234e8c13fa55fab3138dcc0945", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d20b75cfb74602234e8c13fa55fab3138dcc0945"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b75f28e1aef56750fb163c3ee580474f0a0a4dc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b75f28e1aef56750fb163c3ee580474f0a0a4dc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b75f28e1aef56750fb163c3ee580474f0a0a4dc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b75f28e1aef56750fb163c3ee580474f0a0a4dc5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "03aac9ce62d5be02e786965125bcca50fe9f0106", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03aac9ce62d5be02e786965125bcca50fe9f0106", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03aac9ce62d5be02e786965125bcca50fe9f0106"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "ee70301094af991b951ab71115c2414b37b2e254", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b75f28e1aef56750fb163c3ee580474f0a0a4dc5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b75f28e1aef56750fb163c3ee580474f0a0a4dc5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b75f28e1aef56750fb163c3ee580474f0a0a4dc5", "patch": "@@ -1,3 +1,9 @@\n+2014-03-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/60382\n+\t* tree-vect-loop.c (vect_is_simple_reduction_1): Do not consider\n+\tdead PHIs a reduction.\n+\n 2014-03-03  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/xmmintrin.h (enum _mm_hint) <_MM_HINT_ET0>: Correct"}, {"sha": "7ba86f7198551f0a752a457f2f8d063cc04ad784", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b75f28e1aef56750fb163c3ee580474f0a0a4dc5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b75f28e1aef56750fb163c3ee580474f0a0a4dc5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b75f28e1aef56750fb163c3ee580474f0a0a4dc5", "patch": "@@ -1,3 +1,8 @@\n+2014-03-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/60382\n+\t* gcc.dg/vect/pr60382.c: New testcase.\n+\n 2014-03-03  Jerry DeLisle  <jvdelisle@gcc.gnu>\n \n \tPR libfortran/60148"}, {"sha": "a28c6313c40fa481c28553b21991faf0bbcb8615", "filename": "gcc/testsuite/gcc.dg/vect/pr60382.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b75f28e1aef56750fb163c3ee580474f0a0a4dc5/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr60382.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b75f28e1aef56750fb163c3ee580474f0a0a4dc5/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr60382.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr60382.c?ref=b75f28e1aef56750fb163c3ee580474f0a0a4dc5", "patch": "@@ -0,0 +1,32 @@\n+#include \"tree-vect.h\"\n+\n+int a, b, c, e, f;\n+\n+void\n+foo ()\n+{\n+  for (b = 0; b < 3; b++)\n+    if (e)\n+      {\n+\tfor (c = 0; c < 4; c++)\n+\t  {\n+\t    if (b)\n+\t      continue;\n+\t    f = 1;\n+\t    for (a = 0; a < 2; a++)\n+\t      f |= 1;\n+\t  }\n+\tfor (;;)\n+\t  ;\n+      }\n+}\n+\n+int\n+main ()\n+{\n+  check_vect ();\n+  foo ();\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "df6ab6fcb9ee2993b7f7023f591c5ed0b2b1f9fd", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b75f28e1aef56750fb163c3ee580474f0a0a4dc5/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b75f28e1aef56750fb163c3ee580474f0a0a4dc5/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=b75f28e1aef56750fb163c3ee580474f0a0a4dc5", "patch": "@@ -2193,6 +2193,12 @@ vect_is_simple_reduction_1 (loop_vec_info loop_info, gimple phi,\n               || (!check_reduction && flow_loop_nested_p (vect_loop, loop)));\n \n   name = PHI_RESULT (phi);\n+  /* ???  If there are no uses of the PHI result the inner loop reduction\n+     won't be detected as possibly double-reduction by vectorizable_reduction\n+     because that tries to walk the PHI arg from the preheader edge which\n+     can be constant.  See PR60382.  */\n+  if (has_zero_uses (name))\n+    return NULL;\n   nloop_uses = 0;\n   FOR_EACH_IMM_USE_FAST (use_p, imm_iter, name)\n     {"}]}