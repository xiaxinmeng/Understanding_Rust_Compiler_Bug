{"sha": "08452f45531ca2ec479e61b9f7e37d3fadd95a7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg0NTJmNDU1MzFjYTJlYzQ3OWU2MWI5ZjdlMzdkM2ZhZGQ5NWE3Yg==", "commit": {"author": {"name": "Chris Burdess", "email": "dog@gnu.org", "date": "2007-02-07T18:22:26Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2007-02-07T18:22:26Z"}, "message": "re PR classpath/30718 (TransformerException in XSLURIResolver)\n\n2007-02-07  Chris Burdess  <dog@gnu.org>\n\n\tFixes PR 30718.\n\t* gnu/xml/dom/ls/SAXEventSink.java: Add public accessor/mutators.\n\t* gnu/xml/transform/XSLURIResolver.java: Add support for custom\n\t  SAXSources without a backing URL or stream.\n\n\tFixes PR 27710.\n\t* gnu/xml/dom/DomDocumentBuilderFactory.java: Fall back to synchronous\n\t  LSParser if implementation does not support asynchronous.\n\t* gnu/xml/stream/XMLParser.java,\n\t  gnu/xml/stream/XIncludeFilter.java: Use custom code instead of\n\t  java.net.URL to resolve to an an absolute URI, to avoid nonexistent\n\t  protocol handler problems.\n\nFrom-SVN: r121694", "tree": {"sha": "6dc3be85930294202aea5c41b9800414ba213f20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6dc3be85930294202aea5c41b9800414ba213f20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08452f45531ca2ec479e61b9f7e37d3fadd95a7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08452f45531ca2ec479e61b9f7e37d3fadd95a7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08452f45531ca2ec479e61b9f7e37d3fadd95a7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/comments", "author": null, "committer": null, "parents": [{"sha": "74372bdfc63ac2ba2eaf540f0993b457dca69144", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74372bdfc63ac2ba2eaf540f0993b457dca69144", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74372bdfc63ac2ba2eaf540f0993b457dca69144"}], "stats": {"total": 184, "additions": 155, "deletions": 29}, "files": [{"sha": "a9a3449c3f06549a789dda6bfa8632190a10c958", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b", "patch": "@@ -1,3 +1,18 @@\n+2007-02-07  Chris Burdess  <dog@gnu.org>\n+\n+\tFixes PR 30718.\n+\t* gnu/xml/dom/ls/SAXEventSink.java: Add public accessor/mutators.\n+\t* gnu/xml/transform/XSLURIResolver.java: Add support for custom\n+\t  SAXSources without a backing URL or stream.\n+\n+\tFixes PR 27710.\n+\t* gnu/xml/dom/DomDocumentBuilderFactory.java: Fall back to synchronous\n+\t  LSParser if implementation does not support asynchronous.\n+\t* gnu/xml/stream/XMLParser.java,\n+\t  gnu/xml/stream/XIncludeFilter.java: Use custom code instead of\n+\t  java.net.URL to resolve to an an absolute URI, to avoid nonexistent\n+\t  protocol handler problems.\n+\n 2007-02-06  Tom Tromey  <tromey@redhat.com>\n \n \tPR libgcj/30707:"}, {"sha": "4d2828af84edb8e84a8d172a25f75d674f332737", "filename": "libjava/classpath/gnu/xml/dom/DomDocumentBuilderFactory.java", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomDocumentBuilderFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomDocumentBuilderFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomDocumentBuilderFactory.java?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b", "patch": "@@ -43,6 +43,7 @@\n import javax.xml.parsers.FactoryConfigurationError;\n import javax.xml.parsers.ParserConfigurationException;\n import org.w3c.dom.DOMConfiguration;\n+import org.w3c.dom.DOMException;\n import org.w3c.dom.DOMImplementation;\n import org.w3c.dom.bootstrap.DOMImplementationRegistry;\n import org.w3c.dom.ls.DOMImplementationLS;\n@@ -84,8 +85,38 @@ public DomDocumentBuilderFactory()\n   public DocumentBuilder newDocumentBuilder()\n     throws ParserConfigurationException\n   {\n-    LSParser parser = ls.createLSParser(DOMImplementationLS.MODE_ASYNCHRONOUS,\n-                                        \"http://www.w3.org/TR/REC-xml\");\n+    LSParser parser = null;\n+    try\n+      {\n+        parser = ls.createLSParser(DOMImplementationLS.MODE_ASYNCHRONOUS,\n+                                   \"http://www.w3.org/TR/REC-xml\");\n+      }\n+    catch (DOMException e)\n+      {\n+        if (e.code == DOMException.NOT_SUPPORTED_ERR)\n+          {\n+            // Fall back to synchronous parser\n+            try\n+              {\n+                parser = ls.createLSParser(DOMImplementationLS.MODE_SYNCHRONOUS,\n+                                           \"http://www.w3.org/TR/REC-xml\");\n+              }\n+            catch (DOMException e2)\n+              {\n+                ParserConfigurationException pce =\n+                    new ParserConfigurationException();\n+                pce.initCause(e2);\n+                throw pce;\n+              }\n+          }\n+        else\n+          {\n+            ParserConfigurationException pce =\n+                new ParserConfigurationException();\n+            pce.initCause(e);\n+            throw pce;\n+          }\n+      }\n     DOMConfiguration config = parser.getDomConfig();\n     setParameter(config, \"namespaces\",\n                  isNamespaceAware() ? Boolean.TRUE : Boolean.FALSE);"}, {"sha": "285540060d95fd75418e8190d86338ffd14cb2f3", "filename": "libjava/classpath/gnu/xml/dom/ls/SAXEventSink.java", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2Fls%2FSAXEventSink.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2Fls%2FSAXEventSink.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2Fls%2FSAXEventSink.java?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b", "patch": "@@ -111,11 +111,16 @@ void interrupt()\n     interrupted = true;\n   }\n \n-  protected Document getDocument()\n+  public Document getDocument()\n   {\n     return doc;\n   }\n \n+  public void setReader(XMLReader reader)\n+  {\n+    this.reader = reader;\n+  }\n+\n   // -- ContentHandler2 --\n   \n   public void setDocumentLocator(Locator locator)"}, {"sha": "86961faea9157c90349cd901d0a6dace69c896ff", "filename": "libjava/classpath/gnu/xml/stream/XIncludeFilter.java", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXIncludeFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXIncludeFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXIncludeFilter.java?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b", "patch": "@@ -42,7 +42,6 @@\n import java.io.IOException;\n import java.io.Reader;\n import java.net.HttpURLConnection;\n-import java.net.MalformedURLException;\n import java.net.URL;\n import java.net.URLConnection;\n import java.util.HashSet;\n@@ -122,17 +121,7 @@\n                  boolean expandERefs)\n   {\n     super(reader);\n-    try\n-      {\n-        this.systemId = XMLParser.absolutize(null, systemId);\n-      }\n-    catch (MalformedURLException e)\n-      {\n-        RuntimeException e2 = new RuntimeException(\"unsupported URL: \" +\n-                                                   systemId);\n-        e2.initCause(e);\n-        throw e2;\n-      }\n+    this.systemId = XMLParser.absolutize(null, systemId);\n     this.namespaceAware = namespaceAware;\n     this.validating = validating;\n     this.expandERefs = expandERefs;"}, {"sha": "663a300f88c88f4819f7f7f50a8adfd577c72db9", "filename": "libjava/classpath/gnu/xml/stream/XMLParser.java", "status": "modified", "additions": 54, "deletions": 2, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXMLParser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXMLParser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXMLParser.java?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b", "patch": "@@ -1592,7 +1592,6 @@ private void pushInput(Input input)\n    * @param href the (absolute or relative) URL to resolve\n    */\n   public static String absolutize(String base, String href)\n-    throws MalformedURLException\n   {\n     if (href == null)\n       return null;\n@@ -1622,7 +1621,60 @@ public static String absolutize(String base, String href)\n         if (!base.endsWith(\"/\"))\n           base += \"/\";\n       }\n-    return new URL(new URL(base), href).toString();\n+    // We can't use java.net.URL here to do the parsing, as it searches for\n+    // a protocol handler. A protocol handler may not be registered for the\n+    // URL scheme here. Do it manually.\n+    // \n+    // Set aside scheme and host portion of base URL\n+    String basePrefix = null;\n+    ci = base.indexOf(':');\n+    if (ci > 1 && isURLScheme(base.substring(0, ci)))\n+      {\n+          if (base.length() > (ci + 3)  &&\n+              base.charAt(ci + 1) == '/' &&\n+              base.charAt(ci + 2) == '/')\n+            {\n+              int si = base.indexOf('/', ci + 3);\n+              if (si == -1)\n+                base = null;\n+              else\n+                {\n+                  basePrefix = base.substring(0, si);\n+                  base = base.substring(si);\n+                }\n+            }\n+          else\n+            base = null;\n+      }\n+    if (base == null) // unknown or malformed base URL, use href\n+      return href;\n+    if (href.startsWith(\"/\")) // absolute href pathname\n+      return (basePrefix == null) ? href : basePrefix + href;\n+    // relative href pathname\n+    if (!base.endsWith(\"/\"))\n+      {\n+        int lsi = base.lastIndexOf('/');\n+        if (lsi == -1)\n+          base = \"/\";\n+        else\n+          base = base.substring(0, lsi + 1);\n+      }\n+    while (href.startsWith(\"../\") || href.startsWith(\"./\"))\n+      {\n+        if (href.startsWith(\"../\"))\n+          {\n+            // strip last path component from base\n+            int lsi = base.lastIndexOf('/', base.length() - 2);\n+            if (lsi > -1)\n+              base = base.substring(0, lsi + 1);\n+            href = href.substring(3); // strip ../ prefix\n+          }\n+        else\n+          {\n+            href = href.substring(2); // strip ./ prefix\n+          }\n+      }\n+    return (basePrefix == null) ? base + href : basePrefix + base + href;\n   }\n \n   /**"}, {"sha": "8bb8977315e34edd10b18c627f603608b7c79390", "filename": "libjava/classpath/gnu/xml/transform/XSLURIResolver.java", "status": "modified", "additions": 32, "deletions": 10, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FXSLURIResolver.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FXSLURIResolver.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FXSLURIResolver.java?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b", "patch": "@@ -55,9 +55,13 @@\n import javax.xml.transform.dom.DOMSource;\n import javax.xml.transform.sax.SAXSource;\n import javax.xml.transform.stream.StreamSource;\n+import org.w3c.dom.Document;\n import org.w3c.dom.Node;\n import org.xml.sax.InputSource;\n import org.xml.sax.SAXException;\n+import org.xml.sax.XMLReader;\n+import gnu.xml.dom.DomDocument;\n+import gnu.xml.dom.ls.SAXEventSink;\n import gnu.xml.dom.ls.ReaderInputStream;\n \n /**\n@@ -137,17 +141,14 @@ DOMSource resolveDOM(Source source, String base, String href)\n         else if (source != null && source instanceof SAXSource)\n           {\n             SAXSource ss = (SAXSource) source;\n-            if (ss.getInputSource() != null)\n+            InputSource input = ss.getInputSource();\n+            if (input != null)\n               {\n-                in =  ss.getInputSource().getByteStream();\n-                if (in == null)\n-                  {\n-                    Reader reader = ss.getInputSource().getCharacterStream();\n-                    if (reader != null)\n-                      {\n-                        in = new ReaderInputStream(reader);\n-                      }\n-                  }\n+                if (systemId == null)\n+                  systemId = input.getSystemId();\n+                XMLReader reader = ss.getXMLReader();\n+                if (reader != null)\n+                  return parse(input, reader);\n               }\n           }\n         if (in == null)\n@@ -294,6 +295,27 @@ DocumentBuilder getDocumentBuilder()\n         throw new TransformerException(e);\n       }\n   }\n+\n+  DOMSource parse(InputSource source, XMLReader reader)\n+    throws SAXException, IOException\n+  {\n+    SAXEventSink eventSink = new SAXEventSink();\n+    eventSink.setReader(reader);\n+    reader.setContentHandler(eventSink);\n+    reader.setDTDHandler(eventSink);\n+    reader.setProperty(\"http://xml.org/sax/properties/lexical-handler\",\n+            eventSink);\n+    reader.setProperty(\"http://xml.org/sax/properties/declaration-handler\",\n+            eventSink);\n+    // XXX entityResolver\n+    // XXX errorHandler\n+    reader.parse(source);\n+    Document doc = eventSink.getDocument();\n+    String systemId = source.getSystemId();\n+    if (systemId != null && doc instanceof DomDocument)\n+      ((DomDocument) doc).setDocumentURI(systemId);\n+    return new DOMSource(doc, systemId);\n+  }\n   \n }\n "}, {"sha": "69733b67a2e046af735113c636fcff027079790b", "filename": "libjava/classpath/lib/gnu/xml/dom/DomDocumentBuilderFactory.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fdom%2FDomDocumentBuilderFactory.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fdom%2FDomDocumentBuilderFactory.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fdom%2FDomDocumentBuilderFactory.class?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b"}, {"sha": "d0caa3bd423f74a038d4eccc90e9160d3ba23ddc", "filename": "libjava/classpath/lib/gnu/xml/dom/ls/SAXEventSink.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fdom%2Fls%2FSAXEventSink.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fdom%2Fls%2FSAXEventSink.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fdom%2Fls%2FSAXEventSink.class?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b"}, {"sha": "afd44e4a0743f007e5e3d5583622d60a8ac9d8ab", "filename": "libjava/classpath/lib/gnu/xml/stream/XIncludeFilter.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXIncludeFilter.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXIncludeFilter.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXIncludeFilter.class?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b"}, {"sha": "9be3b141ee4cea1b9d8697be91f5d8221d5e40ea", "filename": "libjava/classpath/lib/gnu/xml/stream/XMLParser$AnyContentModel.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24AnyContentModel.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24AnyContentModel.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24AnyContentModel.class?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b"}, {"sha": "a529f6da6307fd268c8884ebbd5c0eabc929e09d", "filename": "libjava/classpath/lib/gnu/xml/stream/XMLParser$Attribute.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24Attribute.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24Attribute.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24Attribute.class?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b"}, {"sha": "86380a679073ee911921e321279024585e8a7e90", "filename": "libjava/classpath/lib/gnu/xml/stream/XMLParser$AttributeDecl.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24AttributeDecl.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24AttributeDecl.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24AttributeDecl.class?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b"}, {"sha": "c8e3969e2f5e4d7a5039c05d6838f5c3f730ef2d", "filename": "libjava/classpath/lib/gnu/xml/stream/XMLParser$ContentModel.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24ContentModel.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24ContentModel.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24ContentModel.class?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b"}, {"sha": "5341444e01afe0cd7da8e6ab90c7840503991632", "filename": "libjava/classpath/lib/gnu/xml/stream/XMLParser$ContentParticle.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24ContentParticle.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24ContentParticle.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24ContentParticle.class?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b"}, {"sha": "e935c7476cd589bf21bbd433c007235efafddefa", "filename": "libjava/classpath/lib/gnu/xml/stream/XMLParser$Doctype.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24Doctype.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24Doctype.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24Doctype.class?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b"}, {"sha": "71e6334a938654f45b3bf6fd6f04a3f050aaf48b", "filename": "libjava/classpath/lib/gnu/xml/stream/XMLParser$ElementContentModel.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24ElementContentModel.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24ElementContentModel.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24ElementContentModel.class?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b"}, {"sha": "e74252ef0e324795bbd841e598711c1e43036652", "filename": "libjava/classpath/lib/gnu/xml/stream/XMLParser$EmptyContentModel.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24EmptyContentModel.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24EmptyContentModel.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24EmptyContentModel.class?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b"}, {"sha": "8a6def15bfcc244a9981aeef9eec2d09ff717b96", "filename": "libjava/classpath/lib/gnu/xml/stream/XMLParser$ExternalIds.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24ExternalIds.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24ExternalIds.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24ExternalIds.class?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b"}, {"sha": "74a7e7916521b28028da19640b39d89e9a56f855", "filename": "libjava/classpath/lib/gnu/xml/stream/XMLParser$Input.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24Input.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24Input.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24Input.class?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b"}, {"sha": "eded8c572d1676d57099e28972fb602c178de947", "filename": "libjava/classpath/lib/gnu/xml/stream/XMLParser$MixedContentModel.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24MixedContentModel.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24MixedContentModel.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser%24MixedContentModel.class?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b"}, {"sha": "f1250985fa2e1a0715e075a8eeccbb572d46d320", "filename": "libjava/classpath/lib/gnu/xml/stream/XMLParser.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Fstream%2FXMLParser.class?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b"}, {"sha": "064742c935a5b7fb5c9a94e0b77dbb7c22e6d59f", "filename": "libjava/classpath/lib/gnu/xml/transform/XSLURIResolver.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Ftransform%2FXSLURIResolver.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Ftransform%2FXSLURIResolver.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fxml%2Ftransform%2FXSLURIResolver.class?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b"}, {"sha": "54f4e5f159604f8d1e25454489e267264dc4111a", "filename": "libjava/gnu/xml/dom/ls/SAXEventSink.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fgnu%2Fxml%2Fdom%2Fls%2FSAXEventSink.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fgnu%2Fxml%2Fdom%2Fls%2FSAXEventSink.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fdom%2Fls%2FSAXEventSink.h?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b", "patch": "@@ -57,9 +57,9 @@ class gnu::xml::dom::ls::SAXEventSink : public ::java::lang::Object\n   SAXEventSink();\n public: // actually package-private\n   virtual void interrupt();\n-public: // actually protected\n-  virtual ::org::w3c::dom::Document * getDocument();\n public:\n+  virtual ::org::w3c::dom::Document * getDocument();\n+  virtual void setReader(::org::xml::sax::XMLReader *);\n   virtual void setDocumentLocator(::org::xml::sax::Locator *);\n   virtual void startDocument();\n   virtual void endDocument();"}, {"sha": "394c4c7d0daaf13273b3253bae44994cf8936b6d", "filename": "libjava/gnu/xml/transform/XSLURIResolver.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fgnu%2Fxml%2Ftransform%2FXSLURIResolver.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08452f45531ca2ec479e61b9f7e37d3fadd95a7b/libjava%2Fgnu%2Fxml%2Ftransform%2FXSLURIResolver.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FXSLURIResolver.h?ref=08452f45531ca2ec479e61b9f7e37d3fadd95a7b", "patch": "@@ -46,6 +46,17 @@ extern \"Java\"\n       }\n     }\n   }\n+  namespace org\n+  {\n+    namespace xml\n+    {\n+      namespace sax\n+      {\n+          class InputSource;\n+          class XMLReader;\n+      }\n+    }\n+  }\n }\n \n class gnu::xml::transform::XSLURIResolver : public ::java::lang::Object\n@@ -62,6 +73,7 @@ class gnu::xml::transform::XSLURIResolver : public ::java::lang::Object\n   virtual ::javax::xml::transform::dom::DOMSource * resolveDOM(::javax::xml::transform::Source *, ::java::lang::String *, ::java::lang::String *);\n   virtual ::java::net::URL * resolveURL(::java::lang::String *, ::java::lang::String *, ::java::lang::String *);\n   virtual ::javax::xml::parsers::DocumentBuilder * getDocumentBuilder();\n+  virtual ::javax::xml::transform::dom::DOMSource * parse(::org::xml::sax::InputSource *, ::org::xml::sax::XMLReader *);\n   ::java::util::Map * __attribute__((aligned(__alignof__( ::java::lang::Object)))) lastModifiedCache;\n   ::java::util::Map * nodeCache;\n   ::javax::xml::parsers::DocumentBuilder * builder;"}]}