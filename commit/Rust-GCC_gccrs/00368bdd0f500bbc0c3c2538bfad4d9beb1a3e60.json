{"sha": "00368bdd0f500bbc0c3c2538bfad4d9beb1a3e60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAzNjhiZGQwZjUwMGJiYzBjM2MyNTM4YmZhZDRkOWJlYjFhM2U2MA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "1999-02-10T14:27:53Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "1999-02-10T14:27:53Z"}, "message": "jvspec.c (lang_specific_driver): Use libgcj, not libjava.\n\n\t* jvspec.c (lang_specific_driver): Use libgcj, not libjava.\n\t* Makefile.in (jcf-path.o): Define LIBGCJ_ZIP_FILE.\n\t(libgcj_zip): Renamed.\n\t* jcf-path.c (add_entry): Use LIBGCJ_ZIP_FILE, not\n\tLIBJAVA_ZIP_FILE.\n\t(jcf_path_init): Use LIBGCJ_ZIP_FILE.\n\nFrom-SVN: r25136", "tree": {"sha": "df09f4cdefcd6508956c85f8ca3407a3e1ad922b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df09f4cdefcd6508956c85f8ca3407a3e1ad922b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00368bdd0f500bbc0c3c2538bfad4d9beb1a3e60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00368bdd0f500bbc0c3c2538bfad4d9beb1a3e60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00368bdd0f500bbc0c3c2538bfad4d9beb1a3e60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00368bdd0f500bbc0c3c2538bfad4d9beb1a3e60/comments", "author": null, "committer": null, "parents": [{"sha": "0ffe9eeafa01b3c71879de7f3b06e506547088f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ffe9eeafa01b3c71879de7f3b06e506547088f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ffe9eeafa01b3c71879de7f3b06e506547088f7"}], "stats": {"total": 55, "additions": 31, "deletions": 24}, "files": [{"sha": "30a137e543c32e25cd5939655c3423a42798f97b", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00368bdd0f500bbc0c3c2538bfad4d9beb1a3e60/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00368bdd0f500bbc0c3c2538bfad4d9beb1a3e60/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=00368bdd0f500bbc0c3c2538bfad4d9beb1a3e60", "patch": "@@ -1,5 +1,12 @@\n 1999-02-10  Tom Tromey  <tromey@cygnus.com>\n \n+\t* jvspec.c (lang_specific_driver): Use libgcj, not libjava.\n+\t* Makefile.in (jcf-path.o): Define LIBGCJ_ZIP_FILE.\n+\t(libgcj_zip): Renamed.\n+\t* jcf-path.c (add_entry): Use LIBGCJ_ZIP_FILE, not\n+\tLIBJAVA_ZIP_FILE.\n+\t(jcf_path_init): Use LIBGCJ_ZIP_FILE.\n+\n \t* jvspec.c (THREAD_NAME): Renamed -lqthreads to -lgcjcoop.\n \t(GC_NAME): Renamed -lgc to -lgcjgc.\n "}, {"sha": "8aad78e4612f7a792506adc134be65d5739c8625", "filename": "gcc/java/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00368bdd0f500bbc0c3c2538bfad4d9beb1a3e60/gcc%2Fjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00368bdd0f500bbc0c3c2538bfad4d9beb1a3e60/gcc%2Fjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMakefile.in?ref=00368bdd0f500bbc0c3c2538bfad4d9beb1a3e60", "patch": "@@ -99,10 +99,10 @@ objdir = .\n srcdir = @srcdir@\n VPATH = @srcdir@\n \n-# Directory holding libjava.zip.\n+# Directory holding libgcj.zip.\n prefix = @prefix@\n datadir = @datadir@\n-libjava_zip = $(datadir)/libjava.zip\n+libgcj_zip = $(datadir)/libgcj.zip\n \n # Additional system libraries to link with.\n CLIB=\n@@ -252,7 +252,7 @@ keyword.h: keyword.gperf\n \n jcf-path.o : jcf-path.c $(CONFIG_H) $(srcdir)/../system.h jcf.h\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t  -DLIBJAVA_ZIP_FILE='\"$(libjava_zip)\"' $(srcdir)/jcf-path.c\n+\t  -DLIBGCJ_ZIP_FILE='\"$(libgcj_zip)\"' $(srcdir)/jcf-path.c\n \n # These exist for maintenance purposes.\n "}, {"sha": "0c590c5760349811ac9e6d795d2283fcc43c9521", "filename": "gcc/java/jcf-path.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00368bdd0f500bbc0c3c2538bfad4d9beb1a3e60/gcc%2Fjava%2Fjcf-path.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00368bdd0f500bbc0c3c2538bfad4d9beb1a3e60/gcc%2Fjava%2Fjcf-path.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-path.c?ref=00368bdd0f500bbc0c3c2538bfad4d9beb1a3e60", "patch": "@@ -1,6 +1,6 @@\n /* Handle CLASSPATH, -classpath, and path searching.\n \n-   Copyright (C) 1998  Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999  Free Software Foundation, Inc.\n \n This program is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n@@ -60,7 +60,7 @@ struct entry\n \n /* We support several different ways to set the class path.\n \n-   built-in system directory (only libjava.zip)\n+   built-in system directory (only libgcj.zip)\n    CLASSPATH environment variable\n    -CLASSPATH overrides CLASSPATH\n    -classpath option - overrides CLASSPATH, -CLASSPATH, and built-in\n@@ -146,10 +146,10 @@ add_entry (entp, filename, is_system)\n     {\n       n->flags |= FLAG_ZIP;\n       /* If the user uses -classpath then he'll have to include\n-\t libjava.zip in the value.  We check for this in a simplistic\n+\t libgcj.zip in the value.  We check for this in a simplistic\n \t way.  Symlinks will fool this test.  This is only used for\n \t -MM and -MMD, so it probably isn't terribly important.  */\n-      if (! strcmp (filename, LIBJAVA_ZIP_FILE))\n+      if (! strcmp (filename, LIBGCJ_ZIP_FILE))\n \tn->flags |= FLAG_SYSTEM;\n     }\n \n@@ -220,7 +220,7 @@ jcf_path_init ()\n   char *cp;\n \n   add_entry (&sys_dirs, \".\", 0);\n-  add_entry (&sys_dirs, LIBJAVA_ZIP_FILE, 1);\n+  add_entry (&sys_dirs, LIBGCJ_ZIP_FILE, 1);\n \n   GET_ENV_PATH_LIST (cp, \"CLASSPATH\");\n   add_path (&classpath_env, cp, 0);"}, {"sha": "b4168b02a894c33c78fda521d975534a64aece7c", "filename": "gcc/java/jvspec.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00368bdd0f500bbc0c3c2538bfad4d9beb1a3e60/gcc%2Fjava%2Fjvspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00368bdd0f500bbc0c3c2538bfad4d9beb1a3e60/gcc%2Fjava%2Fjvspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjvspec.c?ref=00368bdd0f500bbc0c3c2538bfad4d9beb1a3e60", "patch": "@@ -1,6 +1,6 @@\n  /* Specific flags and argument handling of the front-end of the \n    GNU compiler for the Java(TM) language.\n-   Copyright (C) 1996, 97-98, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1998, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -61,7 +61,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #define MATH_LIBRARY \"-lm\"\n #endif\n \n-extern GENERIC_PTR xmalloc PROTO((size_t));\n+extern char *xmalloc PROTO((size_t));\n extern int do_spec\t\tPROTO((char *));\n extern char *input_filename;\n extern size_t input_filename_length;\n@@ -98,7 +98,7 @@ lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)\n   int saw_verbose_flag = 0;\n \n   /* This will be 0 if we encounter a situation where we should not\n-     link in libjava.  */\n+     link in libgcj.  */\n   int library = 1;\n \n #if COMBINE_INPUTS\n@@ -154,8 +154,8 @@ lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)\n   /* Saw `-l' option for the thread library.  */\n   char *saw_threadlib = 0;\n \n-  /* Saw `-ljava' on command line.  */\n-  int saw_libjava = 0;\n+  /* Saw `-lgcj' on command line.  */\n+  int saw_libgcj = 0;\n \n   /* Saw -C or -o option, respectively. */\n   int saw_C = 0;\n@@ -238,8 +238,8 @@ lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)\n \t      main_class_name = argv[i] + 7;\n \t      added--;\n \t    }\n-\t  else if (strcmp (argv[i], \"-ljava\") == 0)\n-\t    saw_libjava = 1;\n+\t  else if (strcmp (argv[i], \"-lgcj\") == 0)\n+\t    saw_libgcj = 1;\n \t  else if (strcmp (argv[i], \"-lc\") == 0)\n \t    args[i] |= WITHLIBC;\n #ifdef GC_NAME\n@@ -262,7 +262,7 @@ lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)\n \t      if (argc == 2)\n \t\t{\n \t\t  /* If they only gave us `-v', don't try to link\n-\t\t     in libjava.  */ \n+\t\t     in libgcj.  */ \n \t\t  library = 0;\n \t\t}\n \t    }\n@@ -438,29 +438,29 @@ lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)\n \t  continue;\n \t}\n \n-      /* Make sure -ljava is before the math library, since libjava\n+      /* Make sure -lgcj is before the math library, since libgcj\n \t itself uses those math routines.  */\n       if (!saw_math && (args[i] & MATHLIB) && library)\n \t{\n \t  --j;\n \t  saw_math = argv[i];\n \t}\n \n-      /* Likewise -ljava must come before -lc.  */\n+      /* Likewise -lgcj must come before -lc.  */\n       if (!saw_libc && (args[i] & WITHLIBC) && library)\n \t{\n \t  --j;\n \t  saw_libc = argv[i];\n \t}\n \n-      /* And -ljava must come before -lgcjgc.  */\n+      /* And -lgcj must come before -lgcjgc.  */\n       if (!saw_gc && (args[i] & GCLIB) && library)\n \t{\n \t  --j;\n \t  saw_gc = argv[i];\n \t}\n \n-      /* And -ljava must come before thread library.  */\n+      /* And -lgcj must come before thread library.  */\n       if (!saw_threadlib && (args[i] & THREADLIB) && library)\n \t{\n \t  --j;\n@@ -501,10 +501,10 @@ lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)\n   if (saw_g + saw_O == 0)\n     arglist[j++] = \"-g1\";\n \n-  /* Add `-ljava' if we haven't already done so.  */\n-  if (library && ! saw_libjava)\n+  /* Add `-lgcj' if we haven't already done so.  */\n+  if (library && ! saw_libgcj)\n     {\n-      arglist[j++] = \"-ljava\";\n+      arglist[j++] = \"-lgcj\";\n       added_libraries++;\n     }\n \n@@ -527,7 +527,7 @@ lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)\n #endif\n \n   /* Thread library must come after GC library as well as after\n-     -ljava.  */\n+     -lgcj.  */\n   if (saw_threadlib)\n     arglist[j++] = saw_threadlib;\n #ifdef THREAD_NAME"}]}