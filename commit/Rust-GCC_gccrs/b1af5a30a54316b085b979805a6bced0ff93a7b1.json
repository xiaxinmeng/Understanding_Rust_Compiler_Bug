{"sha": "b1af5a30a54316b085b979805a6bced0ff93a7b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFhZjVhMzBhNTQzMTZiMDg1Yjk3OTgwNWE2YmNlZDBmZjkzYTdiMQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2002-09-27T23:08:22Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2002-09-27T23:08:22Z"}, "message": "locale_facets.tcc (num_put::_M_widen_int): Deal correctly with grouped, showbased (oct or hex) zero.\n\n2002-09-27  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* include/bits/locale_facets.tcc (num_put::_M_widen_int):\n\tDeal correctly with grouped, showbased (oct or hex) zero.\n\t* testsuite/22_locale/num_put_members_char.cc: Add test05.\n\t* testsuite/22_locale/num_put_members_wchar_t.cc: Ditto.\n\nFrom-SVN: r57598", "tree": {"sha": "8df33c36f6136919b5d4aba511e02d7ac7e56e3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8df33c36f6136919b5d4aba511e02d7ac7e56e3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1af5a30a54316b085b979805a6bced0ff93a7b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1af5a30a54316b085b979805a6bced0ff93a7b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1af5a30a54316b085b979805a6bced0ff93a7b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1af5a30a54316b085b979805a6bced0ff93a7b1/comments", "author": null, "committer": null, "parents": [{"sha": "2a5de0f14b830705d871fd5ce966feefda294a18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a5de0f14b830705d871fd5ce966feefda294a18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a5de0f14b830705d871fd5ce966feefda294a18"}], "stats": {"total": 87, "additions": 86, "deletions": 1}, "files": [{"sha": "5309c0a6b329ee9c380240b976da259d0f6b40e7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1af5a30a54316b085b979805a6bced0ff93a7b1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1af5a30a54316b085b979805a6bced0ff93a7b1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b1af5a30a54316b085b979805a6bced0ff93a7b1", "patch": "@@ -1,3 +1,10 @@\n+2002-09-27  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* include/bits/locale_facets.tcc (num_put::_M_widen_int):\n+\tDeal correctly with grouped, showbased (oct or hex) zero.\n+\t* testsuite/22_locale/num_put_members_char.cc: Add test05.\n+\t* testsuite/22_locale/num_put_members_wchar_t.cc: Ditto.\n+\n 2002-09-27  Richard Henderson  <rth@redhat.com>\n \n \t* config/os/hpux/cpu_limits.h: Remove."}, {"sha": "f21054e29663ffced849197e36d61c1952b375c1", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1af5a30a54316b085b979805a6bced0ff93a7b1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1af5a30a54316b085b979805a6bced0ff93a7b1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=b1af5a30a54316b085b979805a6bced0ff93a7b1", "patch": "@@ -798,8 +798,10 @@ namespace std\n \t  // By itself __add_grouping cannot deal correctly with __ws when\n \t  // ios::showbase is set and ios_base::oct || ios_base::hex.\n \t  // Therefore we take care \"by hand\" of the initial 0, 0x or 0X.\n+\t  // However, remember that the latter do not occur if the number\n+\t  // printed is '0' (__len == 1).\n \t  streamsize __off = 0;\n-\t  if (__io.flags() & ios_base::showbase)\n+\t  if ((__io.flags() & ios_base::showbase) && __len > 1)\n \t    if (__basefield == ios_base::oct)\n \t      {\n \t\t__off = 1;"}, {"sha": "e93900bfdb1164676bf5245fb5f42a6f2521289c", "filename": "libstdc++-v3/testsuite/22_locale/num_put_members_char.cc", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1af5a30a54316b085b979805a6bced0ff93a7b1/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put_members_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1af5a30a54316b085b979805a6bced0ff93a7b1/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put_members_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put_members_char.cc?ref=b1af5a30a54316b085b979805a6bced0ff93a7b1", "patch": "@@ -326,12 +326,50 @@ void test04()\n     }\n }\n \n+// Make sure that, in a locale that expects grouping, when showbase\n+// is true, an hexadecimal or octal zero is correctly output (the case \n+// of zero is special since there is no 0x, 0 respectively, prefix)\n+void test05()\n+{\n+  using namespace std;\n+  bool test = true;\n+\n+  // A locale that expects grouping.\n+  locale loc_de(\"de_DE\");\n+\n+  const string empty;\n+  string result;\n+\n+  ostringstream oss;\n+  oss.imbue(loc_de);\n+  const num_put<char>& np = use_facet<num_put<char> >(oss.getloc()); \n+\n+  long l = 0;\n+\n+  oss.str(empty);\n+  oss.clear();\n+  oss.setf(ios::showbase);\n+  oss.setf(ios::hex, ios::basefield);\n+  np.put(oss.rdbuf(), oss, '+', l);\n+  result = oss.str();\n+  VERIFY( result == \"0\" );\n+\n+  oss.str(empty);\n+  oss.clear();\n+  oss.setf(ios::showbase);\n+  oss.setf(ios::oct, ios::basefield);\n+  np.put(oss.rdbuf(), oss, '+', l);\n+  result = oss.str();\n+  VERIFY( result == \"0\" );\n+}\n+\n int main()\n {\n   test01();\n   test02();\n   test03();\n   test04();\n+  test05();\n   return 0;\n }\n "}, {"sha": "53fdd591b5b7923334dfa18ba8c6515687f2ce5f", "filename": "libstdc++-v3/testsuite/22_locale/num_put_members_wchar_t.cc", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1af5a30a54316b085b979805a6bced0ff93a7b1/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put_members_wchar_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1af5a30a54316b085b979805a6bced0ff93a7b1/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put_members_wchar_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_put_members_wchar_t.cc?ref=b1af5a30a54316b085b979805a6bced0ff93a7b1", "patch": "@@ -325,6 +325,43 @@ void test04()\n       VERIFY( preLANG == postLANG );\n     }\n }\n+\n+// Make sure that, in a locale that expects grouping, when showbase\n+// is true, an hexadecimal or octal zero is correctly output (the case \n+// of zero is special since there is no 0x, 0 respectively, prefix)\n+void test05()\n+{\n+  using namespace std;\n+  bool test = true;\n+\n+  // A locale that expects grouping.\n+  locale loc_de(\"de_DE\");\n+\n+  const wstring empty;\n+  wstring result;\n+\n+  wostringstream oss;\n+  oss.imbue(loc_de);\n+  const num_put<wchar_t>& np = use_facet<num_put<wchar_t> >(oss.getloc()); \n+\n+  long l = 0;\n+\n+  oss.str(empty);\n+  oss.clear();\n+  oss.setf(ios::showbase);\n+  oss.setf(ios::hex, ios::basefield);\n+  np.put(oss.rdbuf(), oss, L'+', l);\n+  result = oss.str();\n+  VERIFY( result == L\"0\" );\n+\n+  oss.str(empty);\n+  oss.clear();\n+  oss.setf(ios::showbase);\n+  oss.setf(ios::oct, ios::basefield);\n+  np.put(oss.rdbuf(), oss, L'+', l);\n+  result = oss.str();\n+  VERIFY( result == L\"0\" );\n+}\n #endif\n \n int main()\n@@ -334,6 +371,7 @@ int main()\n   test02();\n   test03();\n   test04();\n+  test05();\n #endif\n   return 0;\n }"}]}