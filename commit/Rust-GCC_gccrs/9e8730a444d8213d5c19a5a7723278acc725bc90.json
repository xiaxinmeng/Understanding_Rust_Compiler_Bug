{"sha": "9e8730a444d8213d5c19a5a7723278acc725bc90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU4NzMwYTQ0NGQ4MjEzZDVjMTlhNWE3NzIzMjc4YWNjNzI1YmM5MA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-07T21:42:35Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-07T21:42:35Z"}, "message": "(preserve_momentary): New function.\n\nFrom-SVN: r8623", "tree": {"sha": "a3c90aa2028826350a5b34c468e81ff2a64c61f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3c90aa2028826350a5b34c468e81ff2a64c61f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e8730a444d8213d5c19a5a7723278acc725bc90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e8730a444d8213d5c19a5a7723278acc725bc90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e8730a444d8213d5c19a5a7723278acc725bc90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e8730a444d8213d5c19a5a7723278acc725bc90/comments", "author": null, "committer": null, "parents": [{"sha": "d4b0a7a049724e029148cc11e71e4bf51a10b092", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4b0a7a049724e029148cc11e71e4bf51a10b092", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4b0a7a049724e029148cc11e71e4bf51a10b092"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "f7982aceaa3534fc87bfb5f09fe3910affcdf2d6", "filename": "gcc/tree.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e8730a444d8213d5c19a5a7723278acc725bc90/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e8730a444d8213d5c19a5a7723278acc725bc90/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=9e8730a444d8213d5c19a5a7723278acc725bc90", "patch": "@@ -752,6 +752,15 @@ push_momentary ()\n   expression_obstack = &momentary_obstack;\n }\n \n+/* Set things up so the next clear_momentary will only clear memory\n+   past our present position in momentary_obstack.  */\n+\n+void\n+preserve_momentary ()\n+{\n+  momentary_stack->base = (char *) obstack_base (&momentary_obstack);\n+}\n+\n /* Free all the storage in the current momentary-allocation level.\n    In C, this happens at the end of each statement.  */\n "}]}