{"sha": "6d51a27fb17d9dc4e583c119fd976d39e575180f", "node_id": "C_kwDOANBUbNoAKDZkNTFhMjdmYjE3ZDlkYzRlNTgzYzExOWZkOTc2ZDM5ZTU3NTE4MGY", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-01-20T08:30:01Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-01-20T11:03:06Z"}, "message": "Fix Werror=format-diag with --disable-nls.\n\n\tPR c++/104134\n\ngcc/cp/ChangeLog:\n\n\t* error.cc (dump_aggr_type): Partially disable the warning.", "tree": {"sha": "185ad4a41cff99d89ad7130ad9707932a98ec2a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/185ad4a41cff99d89ad7130ad9707932a98ec2a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d51a27fb17d9dc4e583c119fd976d39e575180f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d51a27fb17d9dc4e583c119fd976d39e575180f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d51a27fb17d9dc4e583c119fd976d39e575180f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d51a27fb17d9dc4e583c119fd976d39e575180f/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e744aa373d215d1e8b3f4102a71b26b385dababc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e744aa373d215d1e8b3f4102a71b26b385dababc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e744aa373d215d1e8b3f4102a71b26b385dababc"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "e76842e1a2ab1269f124e6f490a25ca7924162a7", "filename": "gcc/cp/error.cc", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d51a27fb17d9dc4e583c119fd976d39e575180f/gcc%2Fcp%2Ferror.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d51a27fb17d9dc4e583c119fd976d39e575180f/gcc%2Fcp%2Ferror.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.cc?ref=6d51a27fb17d9dc4e583c119fd976d39e575180f", "patch": "@@ -768,6 +768,14 @@ class_key_or_enum_as_string (tree t)\n     return \"struct\";\n }\n \n+/* Disable warnings about missing quoting in GCC diagnostics for\n+   the pp_verbatim call.  Their format strings deliberately don't\n+   follow GCC diagnostic conventions.  */\n+#if __GNUC__ >= 10\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wformat-diag\"\n+#endif\n+\n /* Print out a class declaration T under the control of FLAGS,\n    in the form `class foo'.  */\n \n@@ -851,6 +859,10 @@ dump_aggr_type (cxx_pretty_printer *pp, tree t, int flags)\n \t\t\t flags & ~TFF_TEMPLATE_HEADER);\n }\n \n+#if __GNUC__ >= 10\n+#pragma GCC diagnostic pop\n+#endif\n+\n /* Dump into the obstack the initial part of the output for a given type.\n    This is necessary when dealing with things like functions returning\n    functions.  Examples:\n@@ -3618,8 +3630,8 @@ function_category (tree fn)\n    the pp_verbatim calls.  Their format strings deliberately don't\n    follow GCC diagnostic conventions.  */\n #if __GNUC__ >= 10\n-#  pragma GCC diagnostic push\n-#  pragma GCC diagnostic ignored \"-Wformat-diag\"\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wformat-diag\"\n #endif\n \n /* Report the full context of a current template instantiation,\n@@ -4230,7 +4242,7 @@ add_quotes (const char *content, bool show_color)\n }\n \n #if __GNUC__ >= 10\n-#  pragma GCC diagnostic pop\n+#pragma GCC diagnostic pop\n #endif\n \n /* If we had %H and %I, and hence deferred printing them,"}]}