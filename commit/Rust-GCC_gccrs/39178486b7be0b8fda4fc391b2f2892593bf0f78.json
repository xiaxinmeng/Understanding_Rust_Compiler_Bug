{"sha": "39178486b7be0b8fda4fc391b2f2892593bf0f78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzkxNzg0ODZiN2JlMGI4ZmRhNGZjMzkxYjJmMjg5MjU5M2JmMGY3OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-27T15:47:55Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-27T15:47:55Z"}, "message": "(final_scan_insn): Always set OPS and use alloca.\n\nFrom-SVN: r6643", "tree": {"sha": "c9def94af6438055fe20ed1db240ef404d14943e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9def94af6438055fe20ed1db240ef404d14943e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39178486b7be0b8fda4fc391b2f2892593bf0f78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39178486b7be0b8fda4fc391b2f2892593bf0f78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39178486b7be0b8fda4fc391b2f2892593bf0f78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39178486b7be0b8fda4fc391b2f2892593bf0f78/comments", "author": null, "committer": null, "parents": [{"sha": "d0c766547a0a65ee3103538331dff4e8f1eb6250", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0c766547a0a65ee3103538331dff4e8f1eb6250", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0c766547a0a65ee3103538331dff4e8f1eb6250"}], "stats": {"total": 10, "additions": 2, "deletions": 8}, "files": [{"sha": "23541ef5580b2bd3eefe3e07bdfbc01b364d879e", "filename": "gcc/final.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39178486b7be0b8fda4fc391b2f2892593bf0f78/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39178486b7be0b8fda4fc391b2f2892593bf0f78/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=39178486b7be0b8fda4fc391b2f2892593bf0f78", "patch": "@@ -1627,19 +1627,14 @@ final_scan_insn (insn, file, optimize, prescan, nopeepholes)\n \tif (asm_noperands (body) >= 0)\n \t  {\n \t    int noperands = asm_noperands (body);\n-\t    rtx *ops;\n+\t    rtx *ops = (rtx *) alloca (noperands * sizeof (rtx));\n \t    char *string;\n \n \t    /* There's no telling what that did to the condition codes.  */\n \t    CC_STATUS_INIT;\n \t    if (prescan > 0)\n \t      break;\n \n-\t    /* alloca won't do here, since only return from `final'\n-\t       would free it.  */\n-\t    if (noperands > 0)\n-\t      ops = (rtx *) xmalloc (noperands * sizeof (rtx));\n-\n \t    if (! app_on)\n \t      {\n \t\tfprintf (file, ASM_APP_ON);\n@@ -1652,11 +1647,10 @@ final_scan_insn (insn, file, optimize, prescan, nopeepholes)\n \t    /* Inhibit aborts on what would otherwise be compiler bugs.  */\n \t    insn_noperands = noperands;\n \t    this_is_asm_operands = insn;\n+\n \t    /* Output the insn using them.  */\n \t    output_asm_insn (string, ops);\n \t    this_is_asm_operands = 0;\n-\t    if (noperands > 0)\n-\t      free (ops);\n \t    break;\n \t  }\n "}]}