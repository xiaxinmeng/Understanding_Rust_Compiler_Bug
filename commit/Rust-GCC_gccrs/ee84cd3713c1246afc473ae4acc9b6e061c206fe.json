{"sha": "ee84cd3713c1246afc473ae4acc9b6e061c206fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU4NGNkMzcxM2MxMjQ2YWZjNDczYWU0YWNjOWI2ZTA2MWMyMDZmZQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2012-10-08T17:38:13Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2012-10-08T17:38:13Z"}, "message": "re PR debug/54831 (ICE: in vt_add_function_parameter, at var-tracking.c:9412 with -O -fno-split-wide-types -g)\n\nPR54831.\n\nFrom-SVN: r192218", "tree": {"sha": "3ccd528de449534d2eb9ed8fb56e11f0b643d079", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ccd528de449534d2eb9ed8fb56e11f0b643d079"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee84cd3713c1246afc473ae4acc9b6e061c206fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee84cd3713c1246afc473ae4acc9b6e061c206fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee84cd3713c1246afc473ae4acc9b6e061c206fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee84cd3713c1246afc473ae4acc9b6e061c206fe/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da3202a857632b162eb6608ece2f4b48611a234e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da3202a857632b162eb6608ece2f4b48611a234e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da3202a857632b162eb6608ece2f4b48611a234e"}], "stats": {"total": 41, "additions": 35, "deletions": 6}, "files": [{"sha": "b7e0a64be80a087e47146dc5be169c25a3b9d8b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee84cd3713c1246afc473ae4acc9b6e061c206fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee84cd3713c1246afc473ae4acc9b6e061c206fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee84cd3713c1246afc473ae4acc9b6e061c206fe", "patch": "@@ -1,3 +1,11 @@\n+2012-10-08  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR debug/54831\n+\t* var-tracking.c (vt_add_function_parameter): Use condition instead\n+\tof gcc_assert.\n+\n+\t* testsuite/g++.dg/debug/pr54831.C: New test.\n+\n 2012-10-08  Dehao Chen  <dehao@google.com>\n \n \t* predict.c (predict_loops): Predict for short-circuit conditions."}, {"sha": "8e7312061a022332108e4e2bdb909477d0a3148e", "filename": "gcc/testsuite/g++.dg/debug/pr54831.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee84cd3713c1246afc473ae4acc9b6e061c206fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr54831.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee84cd3713c1246afc473ae4acc9b6e061c206fe/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr54831.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fpr54831.C?ref=ee84cd3713c1246afc473ae4acc9b6e061c206fe", "patch": "@@ -0,0 +1,20 @@\n+// PR debug/54831\n+// { dg-do compile }\n+// { dg-options \"-O -fno-split-wide-types -g\" }\n+\n+struct S\n+{\n+  int m1();\n+  int m2();\n+};\n+\n+typedef void (S::*mptr) ();\n+\n+mptr gmp;\n+void bar (mptr f);\n+\n+void foo (mptr f)\n+{\n+  f = gmp;\n+  bar (f);\n+}"}, {"sha": "6a6cd420a0c945aba3d285a09f29246847e1b12f", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee84cd3713c1246afc473ae4acc9b6e061c206fe/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee84cd3713c1246afc473ae4acc9b6e061c206fe/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=ee84cd3713c1246afc473ae4acc9b6e061c206fe", "patch": "@@ -9404,12 +9404,13 @@ vt_add_function_parameter (tree parm)\n \n   if (parm != decl)\n     {\n-      /* Assume that DECL_RTL was a pseudo that got spilled to\n-\t memory.  The spill slot sharing code will force the\n-\t memory to reference spill_slot_decl (%sfp), so we don't\n-\t match above.  That's ok, the pseudo must have referenced\n-\t the entire parameter, so just reset OFFSET.  */\n-      gcc_assert (decl == get_spill_slot_decl (false));\n+      /* If that DECL_RTL wasn't a pseudo that got spilled to\n+\t memory, bail out.  Otherwise, the spill slot sharing code\n+\t will force the memory to reference spill_slot_decl (%sfp),\n+\t so we don't match above.  That's ok, the pseudo must have\n+\t referenced the entire parameter, so just reset OFFSET.  */\n+      if (decl != get_spill_slot_decl (false))\n+        return;\n       offset = 0;\n     }\n "}]}