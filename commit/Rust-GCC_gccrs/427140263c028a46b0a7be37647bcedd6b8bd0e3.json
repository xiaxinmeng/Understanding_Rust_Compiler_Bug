{"sha": "427140263c028a46b0a7be37647bcedd6b8bd0e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI3MTQwMjYzYzAyOGE0NmIwYTdiZTM3NjQ3YmNlZGQ2YjhiZDBlMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-07T11:04:02Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-07T11:04:02Z"}, "message": "Add new tests\n\nFrom-SVN: r125527", "tree": {"sha": "57aad799d3a26a243b2ba7d836888fe77ca1ac65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57aad799d3a26a243b2ba7d836888fe77ca1ac65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/427140263c028a46b0a7be37647bcedd6b8bd0e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/427140263c028a46b0a7be37647bcedd6b8bd0e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/427140263c028a46b0a7be37647bcedd6b8bd0e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/427140263c028a46b0a7be37647bcedd6b8bd0e3/comments", "author": null, "committer": null, "parents": [{"sha": "1344284efadc70769312bb0707a8266cc50260ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1344284efadc70769312bb0707a8266cc50260ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1344284efadc70769312bb0707a8266cc50260ce"}], "stats": {"total": 302, "additions": 302, "deletions": 0}, "files": [{"sha": "58c1c314bcd88af2b695de3c01daf1ec61f91a24", "filename": "gcc/testsuite/gnat.dg/address_null_init.ads", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Faddress_null_init.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Faddress_null_init.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faddress_null_init.ads?ref=427140263c028a46b0a7be37647bcedd6b8bd0e3", "patch": "@@ -0,0 +1,8 @@\n+package Address_Null_Init is\n+   \n+   type Acc is access Integer;\n+   A : Acc := new Integer'(123);\n+   B : Acc;  -- Variable must be set to null (and A overwritten by null)\n+   for B'Address use A'Address;\n+\n+end Address_Null_Init;"}, {"sha": "dd6cec159c2c32608a561de249cbf18ed43b66bf", "filename": "gcc/testsuite/gnat.dg/aggr3.adb", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Faggr3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Faggr3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faggr3.adb?ref=427140263c028a46b0a7be37647bcedd6b8bd0e3", "patch": "@@ -0,0 +1,36 @@\n+--  { dg-do run }\n+\n+with Ada.Tags;    use Ada.Tags;\n+with Ada.Text_IO; use Ada.Text_IO;\n+procedure aggr3 is\n+   package Pkg is\n+      type Element is interface;\n+      type Event is tagged record\n+         V1 : Natural;\n+         V2 : Natural;\n+      end record;\n+      function Create return Event;\n+      type D_Event is new Event and Element with null record;\n+      function Create return D_Event;\n+   end;\n+   package body Pkg is\n+      function Create return Event is\n+         Obj : Event;\n+      begin\n+         Obj.V1 := 0;\n+         return Obj;\n+      end;\n+      function Create return D_Event is\n+      begin\n+         return (Event'(Create) with null record);\n+      end;\n+   end;\n+   use Pkg;\n+   procedure CW_Test (Obj : Element'Class) is\n+      S : Constant String := Expanded_Name (Obj'Tag);\n+   begin\n+      null;\n+   end;\n+begin\n+   CW_Test (Create);\n+end;"}, {"sha": "3604967c201df4551b2a10aacc49ad2e0b99353e", "filename": "gcc/testsuite/gnat.dg/aggr4.adb", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Faggr4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Faggr4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faggr4.adb?ref=427140263c028a46b0a7be37647bcedd6b8bd0e3", "patch": "@@ -0,0 +1,27 @@\n+--  { dg-do compile }\n+--  { dg-options \"-gnatws\" }\n+\n+procedure aggr4 is\n+   type Byte is range 0 .. 2**8 - 1;\n+   for Byte'Size use 8;\n+        \n+   type Time is array (1 .. 3) of Byte; \n+        \n+   type UTC_Time is record \n+      Values : Time;\n+   end record;\n+\n+   type Local_Time is record\n+      Values : Time;\n+   end record;\n+   for Local_Time use record\n+      Values at 0 range 1 .. 24;\n+   end record;\n+\n+   LOC : Local_Time;\n+   UTC : UTC_Time;\n+\n+begin\n+   UTC.Values := LOC.Values;\n+   UTC := (Values => LOC.Values);\n+end;"}, {"sha": "e5a0f9f4b55d132007f117f9f202416377913333", "filename": "gcc/testsuite/gnat.dg/aggr5.ads", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Faggr5.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Faggr5.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faggr5.ads?ref=427140263c028a46b0a7be37647bcedd6b8bd0e3", "patch": "@@ -0,0 +1,7 @@\n+        \n+package aggr5 is\n+   type Event is limited interface;\n+   type Event_Access is access all Event'Class;\n+   type Q_Action_Event is limited interface and Event;\n+   function Build (X : integer) return Event_Access;\n+end aggr5;"}, {"sha": "89f97025e2107e7eeb0c19c1f9d2aa8cbdb0f943", "filename": "gcc/testsuite/gnat.dg/aggr6.adb", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Faggr6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Faggr6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faggr6.adb?ref=427140263c028a46b0a7be37647bcedd6b8bd0e3", "patch": "@@ -0,0 +1,13 @@\n+--  { dg-do compile }\n+\n+with aggr5;\n+procedure aggr6 is\n+   procedure Block is\n+      Wrapper : aliased aggr5.Q_Action_Event'Class\n+        := aggr5.Q_Action_Event'Class (aggr5.Build (0));\n+   begin\n+      null;\n+   end; \n+begin\n+   null;\n+end;    "}, {"sha": "d3aaa560d75b7922f12fd6988267e567d2959a47", "filename": "gcc/testsuite/gnat.dg/anon1.ads", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Fanon1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Fanon1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fanon1.ads?ref=427140263c028a46b0a7be37647bcedd6b8bd0e3", "patch": "@@ -0,0 +1,4 @@\n+\n+package anon1 is\n+   function F return access Integer;\n+end anon1;"}, {"sha": "c114fcc8555aa8ea8fa9c12166bf60ced0ee1a61", "filename": "gcc/testsuite/gnat.dg/anon2.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Fanon2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Fanon2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fanon2.adb?ref=427140263c028a46b0a7be37647bcedd6b8bd0e3", "patch": "@@ -0,0 +1,9 @@\n+-- { dg-do compile }\n+\n+with anon1;\n+procedure anon2 is\n+begin\n+   if anon1.F /= null then\n+      null;\n+   end if;\n+end anon2;"}, {"sha": "9e7489768549b7fe9c0b7086c8e59b2f895be51b", "filename": "gcc/testsuite/gnat.dg/deques.ads", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Fdeques.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Fdeques.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdeques.ads?ref=427140263c028a46b0a7be37647bcedd6b8bd0e3", "patch": "@@ -0,0 +1,14 @@\n+package Deques is\n+\n+    type Deque (<>) is tagged limited private;\n+    function Create return Deque;\n+    procedure Pop (D : access Deque);\n+\n+    type Sequence is limited interface;\n+    type P_Deque is new Deque and Sequence with private;\n+    function Create return P_Deque;\n+\n+private\n+    type Deque is tagged limited null record;\n+    type P_Deque is new Deque and Sequence with null record;\n+end Deques;"}, {"sha": "699c4daf3b382452769f12edcefaa46dda7a3312", "filename": "gcc/testsuite/gnat.dg/equal_access.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Fequal_access.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Fequal_access.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fequal_access.adb?ref=427140263c028a46b0a7be37647bcedd6b8bd0e3", "patch": "@@ -0,0 +1,9 @@\n+--  { dg-do compile }\n+\n+procedure equal_access is\n+   PA, PB  : access procedure := null;\n+begin\n+   if PA /= PB then\n+      null;\n+   end if;\n+end;"}, {"sha": "22513799770b1606817aa23e1b9b0fb57a148b90", "filename": "gcc/testsuite/gnat.dg/ifaces.adb", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Fifaces.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Fifaces.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fifaces.adb?ref=427140263c028a46b0a7be37647bcedd6b8bd0e3", "patch": "@@ -0,0 +1,5 @@\n+with Text_IO; use Text_IO;\n+package body Ifaces is\n+   procedure op1 (this : Root) is begin null; end;\n+   procedure op2 (this : DT)   is begin null; end;\n+end;"}, {"sha": "598c0a9319f21e9a41d7135ef88908e31f0de599", "filename": "gcc/testsuite/gnat.dg/ifaces.ads", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Fifaces.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Fifaces.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fifaces.ads?ref=427140263c028a46b0a7be37647bcedd6b8bd0e3", "patch": "@@ -0,0 +1,17 @@\n+\n+package Ifaces is\n+   type Iface_1 is interface;\n+   procedure op1(this : Iface_1) is abstract;\n+-- \n+   type Iface_2 is interface;\n+   procedure op2 (this : Iface_2) is abstract;\n+--    \n+   type Root is new Iface_1 with record\n+      m_name : String(1..4);\n+   end record;\n+-- \n+   procedure op1 (this : Root);\n+--       \n+   type DT is new Root and Iface_2 with null record;\n+   procedure op2 (this : DT);\n+end;"}, {"sha": "4cead9093c95b7aa43edf793bf1738c5fdbcce5b", "filename": "gcc/testsuite/gnat.dg/ref_type.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Fref_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Fref_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fref_type.adb?ref=427140263c028a46b0a7be37647bcedd6b8bd0e3", "patch": "@@ -0,0 +1,10 @@\n+\n+--  { dg-do compile }\n+\n+package body ref_type is\n+  type T is tagged null record;\n+  procedure Print (X : T) is                                   \n+  begin                                                        \n+     null;\n+  end;\n+end ref_type;"}, {"sha": "021ca72881daf8aa1911f032faf880d6f3b98220", "filename": "gcc/testsuite/gnat.dg/ref_type.ads", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Fref_type.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Fref_type.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fref_type.ads?ref=427140263c028a46b0a7be37647bcedd6b8bd0e3", "patch": "@@ -0,0 +1,5 @@\n+package ref_type is\n+private\n+   type T is tagged;\n+   procedure Print (X : T);\n+end ref_type;"}, {"sha": "5bd69b83f5d2b053870510f237b156fc3451b767", "filename": "gcc/testsuite/gnat.dg/rep_problem2.adb", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Frep_problem2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Frep_problem2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Frep_problem2.adb?ref=427140263c028a46b0a7be37647bcedd6b8bd0e3", "patch": "@@ -0,0 +1,101 @@\n+--  { dg-do compile }\n+\n+with Ada.Text_IO; use Ada.Text_IO;\n+\n+procedure Rep_Problem2 is\n+   \n+   type Int_16 is range 0 .. 65535;\n+   for Int_16'Size use 16;\n+   \n+   ----------------------------------------------\n+      \n+   type Rec_A is\n+      record\n+         Int_1 : Int_16;\n+         Int_2 : Int_16;\n+         Int_3 : Int_16;\n+         Int_4 : Int_16;\n+      end record;\n+      \n+      \n+   for Rec_A use record\n+      Int_1 at 0 range  0 .. 15;\n+      Int_2 at 2 range  0 .. 15;\n+      Int_3 at 4 range  0 .. 15;\n+      Int_4 at 6 range  0 .. 15;\n+   end record;\n+   \n+   Rec_A_Size : constant := 4 * 16;\n+   \n+   for Rec_A'Size use Rec_A_Size;\n+   \n+   ----------------------------------------------\n+   \n+   type Rec_B_Version_1 is\n+      record\n+         Rec_1 : Rec_A;\n+         Rec_2 : Rec_A;\n+         Int_1 : Int_16;\n+      end record;\n+  \n+   for Rec_B_Version_1 use record\n+      Rec_1 at  0 range  0 .. 63;\n+      Rec_2 at  8 range  0 .. 63;\n+      Int_1 at 16 range  0 .. 15;\n+   end record;\n+  \n+   Rec_B_Size : constant := 2 * Rec_A_Size + 16;\n+   \n+   for Rec_B_Version_1'Size use Rec_B_Size;\n+   for Rec_B_Version_1'Alignment use 2;\n+\n+   ----------------------------------------------\n+\n+   type Rec_B_Version_2 is\n+      record\n+         Int_1 : Int_16;\n+         Rec_1 : Rec_A;\n+         Rec_2 : Rec_A;\n+      end record;\n+   \n+   for Rec_B_Version_2 use record\n+      Int_1 at  0 range  0 .. 15;\n+      Rec_1 at  2 range  0 .. 63;\n+      Rec_2 at 10 range  0 .. 63;\n+   end record;\n+\n+   for Rec_B_Version_2'Size use Rec_B_Size;\n+   \n+   ----------------------------------------------\n+   \n+   Arr_A_Length : constant := 2;\n+   Arr_A_Size   : constant := Arr_A_Length * Rec_B_Size;\n+   \n+   type Arr_A_Version_1 is array (1 .. Arr_A_Length) of Rec_B_Version_1;\n+   type Arr_A_Version_2 is array (1 .. Arr_A_Length) of Rec_B_Version_2;\n+   \n+   pragma Pack (Arr_A_Version_1);\n+   pragma Pack (Arr_A_Version_2);\n+   \n+   for Arr_A_Version_1'Size use Arr_A_Size;\n+   for Arr_A_Version_2'Size use Arr_A_Size;\n+   \n+   ----------------------------------------------\n+\n+begin\n+   --  Put_Line (\"Arr_A_Size =\" & Arr_A_Size'Img);\n+   \n+   if Arr_A_Version_1'Size /= Arr_A_Size then\n+      Ada.Text_IO.Put_Line\n+        (\"Version 1 Size mismatch! \" &\n+         \"Arr_A_Version_1'Size =\" & Arr_A_Version_1'Size'Img);\n+   end if;\n+   \n+   if Arr_A_Version_2'Size /= Arr_A_Size then\n+      Ada.Text_IO.Put_Line\n+        (\"Version 2 Size mismatch! \" &\n+         \"Arr_A_Version_2'Size =\" & Arr_A_Version_2'Size'Img);\n+   \n+   end if;\n+\n+end Rep_Problem2;"}, {"sha": "614e825a957919a4e5f1482f95752093430d4876", "filename": "gcc/testsuite/gnat.dg/show_deques_priority.adb", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Fshow_deques_priority.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Fshow_deques_priority.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fshow_deques_priority.adb?ref=427140263c028a46b0a7be37647bcedd6b8bd0e3", "patch": "@@ -0,0 +1,11 @@\n+--  { dg-do compile }\n+\n+with Deques;\n+procedure Show_Deques_Priority is\n+    use Deques;\n+\n+    PD : aliased P_Deque := Create;\n+\n+begin\n+    PD.Pop;\n+end Show_Deques_Priority;"}, {"sha": "18824d666a1bcd0c4e7435ac5bd43e883d04ec27", "filename": "gcc/testsuite/gnat.dg/test_address_null_init.adb", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_address_null_init.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_address_null_init.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_address_null_init.adb?ref=427140263c028a46b0a7be37647bcedd6b8bd0e3", "patch": "@@ -0,0 +1,16 @@\n+--  { dg-do run }\n+--  { dg-options \"-gnatws\" }\n+\n+with Address_Null_Init;  use Address_Null_Init;\n+with Ada.Text_IO;  use Ada.Text_IO;\n+\n+procedure Test_Address_Null_Init is\n+begin\n+   if B /= null then\n+      Put_Line (\"ERROR: B was not default initialized to null!\");\n+   end if;\n+   \n+   if A /= null then\n+      Put_Line (\"ERROR: A was not reinitialized to null!\");\n+   end if;\n+end Test_Address_Null_Init;"}, {"sha": "5fca1371ed65139c06469b1d3b41d8b49107d80f", "filename": "gcc/testsuite/gnat.dg/test_ifaces.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_ifaces.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427140263c028a46b0a7be37647bcedd6b8bd0e3/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_ifaces.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ftest_ifaces.adb?ref=427140263c028a46b0a7be37647bcedd6b8bd0e3", "patch": "@@ -0,0 +1,10 @@\n+--  { dg-do run }\n+\n+with Ifaces; use Ifaces;\n+procedure test_ifaces is\n+   view2 : access Iface_2'Class;\n+   obj   : aliased DT := (m_name => \"Abdu\");\n+begin\n+   view2 := Iface_2'Class(obj)'Access;\n+   view2.all.op2;\n+end;"}]}