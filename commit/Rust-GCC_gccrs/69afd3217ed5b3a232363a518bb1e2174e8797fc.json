{"sha": "69afd3217ed5b3a232363a518bb1e2174e8797fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjlhZmQzMjE3ZWQ1YjNhMjMyMzYzYTUxOGJiMWUyMTc0ZTg3OTdmYw==", "commit": {"author": {"name": "Gary Benson", "email": "gbenson@redhat.com", "date": "2006-09-01T15:38:00Z"}, "committer": {"name": "Gary Benson", "email": "gary@gcc.gnu.org", "date": "2006-09-01T15:38:00Z"}, "message": "InetAddress.java (getLocalHost): Refactor to avoid security check if getLocalHostname() fails and to provide...\n\n2006-09-01  Gary Benson  <gbenson@redhat.com>\n\n\t* java/net/InetAddress.java (getLocalHost): Refactor to avoid\n\tsecurity check if getLocalHostname() fails and to provide more\n\tmeaningful exceptions it the security check fails.\n\nFrom-SVN: r116627", "tree": {"sha": "afb0ee26e7027ffac4137c59097ef2f0982a6049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afb0ee26e7027ffac4137c59097ef2f0982a6049"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69afd3217ed5b3a232363a518bb1e2174e8797fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69afd3217ed5b3a232363a518bb1e2174e8797fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69afd3217ed5b3a232363a518bb1e2174e8797fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69afd3217ed5b3a232363a518bb1e2174e8797fc/comments", "author": null, "committer": null, "parents": [{"sha": "429b876b0784f5f4406eadf56115a8b4c20e874d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/429b876b0784f5f4406eadf56115a8b4c20e874d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/429b876b0784f5f4406eadf56115a8b4c20e874d"}], "stats": {"total": 42, "additions": 18, "deletions": 24}, "files": [{"sha": "594e2f2e22d63ce3c56db3b6d6e10f6a9edebb38", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69afd3217ed5b3a232363a518bb1e2174e8797fc/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69afd3217ed5b3a232363a518bb1e2174e8797fc/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=69afd3217ed5b3a232363a518bb1e2174e8797fc", "patch": "@@ -1,3 +1,9 @@\n+2006-09-01  Gary Benson  <gbenson@redhat.com>\n+\n+\t* java/net/InetAddress.java (getLocalHost): Refactor to avoid\n+\tsecurity check if getLocalHostname() fails and to provide more\n+\tmeaningful exceptions it the security check fails.\n+\n 2006-09-01  Gary Benson  <gbenson@redhat.com>\n \n \t* java/net/InetAddress.java (getByAddress): Create Inet4Address"}, {"sha": "995e8975657366485f081a0b91c75484b34e7fa9", "filename": "libjava/java/net/InetAddress.java", "status": "modified", "additions": 12, "deletions": 24, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69afd3217ed5b3a232363a518bb1e2174e8797fc/libjava%2Fjava%2Fnet%2FInetAddress.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69afd3217ed5b3a232363a518bb1e2174e8797fc/libjava%2Fjava%2Fnet%2FInetAddress.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FInetAddress.java?ref=69afd3217ed5b3a232363a518bb1e2174e8797fc", "patch": "@@ -706,45 +706,33 @@ private static synchronized void getLocalHost (SecurityManager s)\n     \n     String hostname = getLocalHostname();\n     \n-    if (s != null)\n+    if (hostname == null || hostname.length() == 0)\n+      throw new UnknownHostException();\n+\n+    try\n       {\n \t// \"The Java Class Libraries\" suggests that if the security\n \t// manager disallows getting the local host name, then\n \t// we use the loopback host.\n \t// However, the JDK 1.2 API claims to throw SecurityException,\n \t// which seems to suggest SecurityException is *not* caught.\n \t// In this case, experimentation shows that former is correct.\n-\ttry\n+\tif (s != null)\n \t  {\n \t    // This is wrong, if the name returned from getLocalHostname()\n \t    // is not a fully qualified name.  FIXME.\n \t    s.checkConnect (hostname, -1);\n \t  }\n-\tcatch (SecurityException ex)\n-\t  {\n-\t    hostname = null;\n-\t  }\n+\n+\tlocalhost = new InetAddress (null, null);\n+\tlookup (hostname, localhost, false);\n       }\n-    \n-    if (hostname != null && hostname.length() != 0)\n+    catch (Exception ex)\n       {\n-\ttry\n-\t  {\n-\t    localhost = new InetAddress (null, null);\n-\t    lookup (hostname, localhost, false);\n-\t  }\n-\tcatch (Exception ex)\n-\t  {\n-\t    UnknownHostException failure = new UnknownHostException(hostname);\n-\t    failure.initCause(ex);\n-\t    throw failure;\n-\t  }\n+\tUnknownHostException failure = new UnknownHostException(hostname);\n+\tfailure.initCause(ex);\n+\tthrow failure;\n       }\n-    else\n-      throw new UnknownHostException();\n-    \n-    if (localhost == null)\n-      localhost = new InetAddress (loopbackAddress, \"localhost\");\n   }\n \n   /**"}]}