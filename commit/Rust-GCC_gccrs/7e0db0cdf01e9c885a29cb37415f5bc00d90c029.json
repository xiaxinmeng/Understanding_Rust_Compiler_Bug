{"sha": "7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "node_id": "C_kwDOANBUbNoAKDdlMGRiMGNkZjAxZTljODg1YTI5Y2IzNzQxNWY1YmMwMGQ5MGMwMjk", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-08-24T13:04:37Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-09-02T06:52:37Z"}, "message": "STABS: remove -gstabs and -gxcoff functionality\n\ngcc/ChangeLog:\n\n\t* Makefile.in: Remove -gstabs option support, DBX-related\n\t  macros and DBX debugging info support.\n\t* collect2.cc (scan_prog_file): Likewise.\n\t* common.opt: Likewise.\n\t* config.gcc: Likewise.\n\t* config.in: Likewise.\n\t* config/aarch64/aarch64-elf.h (DBX_DEBUGGING_INFO): Likewise.\n\t* config/alpha/alpha.cc: Likewise.\n\t* config/alpha/elf.h (ASM_SPEC): Likewise.\n\t* config/arc/arc.h (DBX_DEBUGGING_INFO): Likewise.\n\t(DBX_CONTIN_LENGTH): Likewise.\n\t* config/arm/aout.h (DBX_DEBUGGING_INFO): Likewise.\n\t(DBX_CONTIN_LENGTH): Likewise.\n\t* config/arm/netbsd-elf.h (DBX_CONTIN_LENGTH): Likewise.\n\t* config/darwin.h (DSYMUTIL_SPEC): Likewise.\n\t(ASM_DEBUG_SPEC): Likewise.\n\t(DBX_DEBUGGING_INFO): Likewise.\n\t(DBX_USE_BINCL): Likewise.\n\t(DBX_CONTIN_LENGTH): Likewise.\n\t(DBX_OUTPUT_NULL_N_SO_AT_MAIN_SOURCE_FILE_END): Likewise.\n\t* config/epiphany/epiphany.h (DBX_DEBUGGING_INFO): Likewise.\n\t(DBX_CONTIN_LENGTH): Likewise.\n\t* config/i386/bsd.h (DBX_NO_XREFS): Likewise.\n\t(DBX_CONTIN_LENGTH): Likewise.\n\t* config/i386/gas.h (DBX_NO_XREFS): Likewise.\n\t(DBX_CONTIN_LENGTH): Likewise.\n\t* config/ia64/ia64.h: Likewise.\n\t* config/ia64/sysv4.h (DBX_DEBUGGING_INFO): Likewise.\n\t* config/m68k/linux.h (DBX_CONTIN_LENGTH): Likewise.\n\t* config/m68k/openbsd.h (DBX_DEBUGGING_INFO): Likewise.\n\t(DBX_CONTIN_LENGTH): Likewise.\n\t(DBX_CONTIN_CHAR): Likewise.\n\t* config/mips/mips.cc (mips_output_filename): Likewise.\n\t(mips_option_override): Likewise.\n\t* config/mips/mips.h (SUBTARGET_ASM_DEBUGGING_SPEC): Likewise.\n\t(DBX_DEBUGGING_INFO): Likewise.\n\t(DBX_CONTIN_LENGTH): Likewise.\n\t(DBX_REGISTER_NUMBER): Likewise.\n\t(GP_DBX_FIRST): Likewise.\n\t(FP_DBX_FIRST): Likewise.\n\t(MD_DBX_FIRST): Likewise.\n\t* config/nvptx/nvptx.cc: Likewise.\n\t* config/openbsd.h (DBX_NO_XREFS): Likewise.\n\t* config/pa/pa-64.h (DBX_DEBUGGING_INFO): Likewise.\n\t* config/pa/pa.h (ASSEMBLER_DIALECT): Likewise.\n\t(DBX_CONTIN_LENGTH): Likewise.\n\t* config/pa/som.h (PREFERRED_DEBUGGING_TYPE): Likewise.\n\t(DBX_USE_BINCL): Likewise.\n\t(DBX_LINES_FUNCTION_RELATIVE): Likewise.\n\t(DBX_OUTPUT_NULL_N_SO_AT_MAIN_SOURCE_FILE_END): Likewise.\n\t* config/pdp11/pdp11.cc: Likewise.\n\t* config/pdp11/pdp11.h (DBX_DEBUGGING_INFO): Likewise.\n\t(PREFERRED_DEBUGGING_TYPE): Likewise.\n\t(DBX_CONTIN_LENGTH): Likewise.\n\t* config/rs6000/rs6000-builtin.cc: Likewise.\n\t* config/rs6000/rs6000-call.cc: Likewise.\n\t* config/rs6000/rs6000-logue.cc (defined): Likewise.\n\t* config/rs6000/rs6000.cc (rs6000_option_override_internal): Likewise.\n\t(HAVE_XCOFF_DWARF_EXTRAS): Likewise.\n\t(rs6000_xcoff_declare_function_name): Likewise.\n\t* config/rs6000/sysv4.h (DBX_DEBUGGING_INFO): Likewise.\n\t(DBX_FUNCTION_FIRST): Likewise.\n\t* config/rs6000/xcoff.h (XCOFF_DEBUGGING_INFO): Likewise.\n\t* config/rx/rx.h (DBX_DEBUGGING_INFO): Likewise.\n\t* config/sh/elf.h (DBX_LINES_FUNCTION_RELATIVE): Likewise.\n\t(DBX_OUTPUT_NULL_N_SO_AT_MAIN_SOURCE_FILE_END): Likewise.\n\t* config/sol2.h (NO_DBX_BNSYM_ENSYM): Likewise.\n\t* config/sparc/freebsd.h (DBX_CONTIN_CHAR): Likewise.\n\t* config/sparc/netbsd-elf.h (DBX_CONTIN_CHAR): Likewise.\n\t* config/sparc/sparc.h (DBX_CONTIN_LENGTH): Likewise.\n\t* config/vax/vax.cc (vax_file_start): Likewise.\n\t* config/vax/vax.h (DBX_DEBUGGING_INFO): Likewise.\n\t(DBX_CONTIN_LENGTH): Likewise.\n\t(DBX_CONTIN_CHAR): Likewise.\n\t(DBX_NO_XREFS): Likewise.\n\t(DBX_STATIC_STAB_DATA_SECTION): Likewise.\n\t* config/vx-common.h (DBX_DEBUGGING_INFO): Likewise.\n\t(XCOFF_DEBUGGING_INFO): Likewise.\n\t* configure: Regenerate. Likewise.\n\t* configure.ac: Likewise.\n\t* debug.h: Likewise.\n\t* doc/install.texi: Likewise.\n\t* doc/invoke.texi: Likewise.\n\t* doc/passes.texi: Likewise.\n\t* doc/tm.texi: Likewise.\n\t* doc/tm.texi.in: Likewise.\n\t* dwarf2asm.cc (XCOFF_DEBUGGING_INFO): Likewise.\n\t(dw2_asm_output_nstring): Likewise.\n\t(USE_LINKONCE_INDIRECT): Likewise.\n\t* dwarf2out.cc (XCOFF_DEBUGGING_INFO): Likewise.\n\t(HAVE_XCOFF_DWARF_EXTRAS): Likewise.\n\t(output_fde): Likewise.\n\t(output_call_frame_info): Likewise.\n\t(have_macinfo): Likewise.\n\t(add_AT_loc_list): Likewise.\n\t(add_AT_view_list): Likewise.\n\t(output_compilation_unit_header): Likewise.\n\t(output_pubnames): Likewise.\n\t(output_aranges): Likewise.\n\t(output_line_info): Likewise.\n\t(output_macinfo): Likewise.\n\t(dwarf2out_finish): Likewise.\n\t(dwarf2out_early_finish): Likewise.\n\t* final.cc (final_scan_insn_1): Likewise.\n\t(rest_of_handle_final): Likewise.\n\t* flag-types.h (enum debug_info_type): Likewise.\n\t(DBX_DEBUG): Likewise.\n\t(XCOFF_DEBUG): Likewise.\n\t* function.cc (defined): Likewise.\n\t* gcc.cc (defined): Likewise.\n\t(ASM_DEBUG_SPEC): Likewise.\n\t(ASM_DEBUG_OPTION_SPEC): Likewise.\n\t* opts.cc (common_handle_option): Likewise.\n\t(set_debug_level): Likewise.\n\t* system.h (fancy_abort): Likewise.\n\t* target-def.h (TARGET_ASM_CONSTRUCTOR): Likewise.\n\t(TARGET_ASM_DESTRUCTOR): Likewise.\n\t* toplev.cc (defined): Likewise.\n\t* varasm.cc: Likewise.\n\t* config/dbxcoff.h: Removed.\n\t* config/dbxelf.h: Removed.\n\t* dbxout.cc: Removed.\n\t* dbxout.h: Removed.\n\t* gstab.h: Removed.\n\t* stab.def: Removed.\n\t* xcoffout.cc: Removed.\n\t* xcoffout.h: Removed.\n\ngcc/go/ChangeLog:\n\n\t* go-lang.cc (go_langhook_pushdecl): Remove -gstabs option support, DBX-related\n\t  macros and DBX debugging info support.\n\t* gospec.cc (lang_specific_driver): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\t* lib/gcc-dg.exp: Remove -gstabs option support, DBX-related\n\t  macros and DBX debugging info support.\n\t* lib/gfortran-dg.exp: Likewise.\n\t* lib/target-supports.exp: Likewise.\n\t* g++.dg/cpp0x/alias-decl-debug-0.C: Removed.\n\t* g++.dg/other/PR23205.C: Removed.\n\t* g++.dg/other/pr23205-2.C: Removed.\n\t* gcc.dg/20040813-1.c: Removed.\n\t* gcc.dg/darwin-20040809-2.c: Removed.\n\t* gcc.dg/debug/pr35154.c: Removed.\n\t* gcc.dg/pr69471-2.c: Removed.\n\t* gcc.target/powerpc/stabs-attrib-vect-darwin.c: Removed.\n\t* gcc.target/s390/20041216-1.c: Removed.\n\t* gfortran.dg/debug/pr35154-stabs.f: Removed.\n\t* objc.dg/stabs-1.m: Removed.", "tree": {"sha": "2d4b357a75ae2a1bf2ebb8f44fcdf73a668f6b3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d4b357a75ae2a1bf2ebb8f44fcdf73a668f6b3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b0a3cdbff64d97e7de3e0e2c26e965708064193", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b0a3cdbff64d97e7de3e0e2c26e965708064193", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b0a3cdbff64d97e7de3e0e2c26e965708064193"}], "stats": {"total": 6766, "additions": 211, "deletions": 6555}, "files": [{"sha": "d3b66b7106e9fe92a23c08b34c2ef0574df94fc5", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -1353,7 +1353,6 @@ OBJS = \\\n \tdata-streamer.o \\\n \tdata-streamer-in.o \\\n \tdata-streamer-out.o \\\n-\tdbxout.o \\\n \tdbgcnt.o \\\n \tdce.o \\\n \tddg.o \\\n@@ -1727,7 +1726,6 @@ OBJS = \\\n \tweb.o \\\n \twide-int.o \\\n \twide-int-print.o \\\n-\txcoffout.o \\\n \t$(out_object_file) \\\n \t$(ANALYZER_OBJS) \\\n \t$(EXTRA_OBJS) \\\n@@ -2676,7 +2674,7 @@ GTFILES = $(CPPLIB_H) $(srcdir)/input.h $(srcdir)/coretypes.h \\\n   $(srcdir)/reload.h $(srcdir)/caller-save.cc $(srcdir)/symtab.cc \\\n   $(srcdir)/alias.cc $(srcdir)/bitmap.cc $(srcdir)/cselib.cc $(srcdir)/cgraph.cc \\\n   $(srcdir)/ipa-prop.cc $(srcdir)/ipa-cp.cc $(srcdir)/ipa-utils.h \\\n-  $(srcdir)/ipa-param-manipulation.h $(srcdir)/ipa-sra.cc $(srcdir)/dbxout.cc \\\n+  $(srcdir)/ipa-param-manipulation.h $(srcdir)/ipa-sra.cc \\\n   $(srcdir)/ipa-modref.h $(srcdir)/ipa-modref.cc \\\n   $(srcdir)/ipa-modref-tree.h \\\n   $(srcdir)/signop.h \\"}, {"sha": "9715e8eee30818db53a681273fdaa99b8f1e1d59", "filename": "gcc/collect2.cc", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fcollect2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fcollect2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.cc?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -2784,13 +2784,6 @@ scan_prog_file (const char *prog_name, scanpass which_pass,\n \t\t      if ((name = ldgetname (ldptr, &symbol)) == NULL)\n \t\t\tcontinue;\t\t/* Should never happen.  */\n \n-#ifdef XCOFF_DEBUGGING_INFO\n-\t\t      /* All AIX function names have a duplicate entry\n-\t\t\t beginning with a dot.  */\n-\t\t      if (*name == '.')\n-\t\t\t++name;\n-#endif\n-\n \t\t      switch (is_ctor_dtor (name))\n \t\t\t{\n #if TARGET_AIX_VERSION"}, {"sha": "06ef768ab7808cb518944c6882d0285e48cb7c19", "filename": "gcc/common.opt", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -122,12 +122,6 @@ uint32_t write_symbols = NO_DEBUG\n Variable\n enum debug_info_levels debug_info_level = DINFO_LEVEL_NONE\n \n-; Nonzero means use GNU-only extensions in the generated symbolic\n-; debugging information.  Currently, this only has an effect when\n-; write_symbols is set to DBX_DEBUG or XCOFF_DEBUG.\n-Variable\n-bool use_gnu_debug_info_extensions\n-\n ; Level of CTF debugging information we are producing.  See flag-types.h\n ; for the definitions of the different possible levels.\n Variable\n@@ -3323,7 +3317,7 @@ Common Driver JoinedOrMissing Negative(gdwarf-)\n Generate debug information in default version of DWARF format.\n \n gdwarf-\n-Common Driver Joined UInteger Var(dwarf_version) Init(5) Negative(gstabs)\n+Common Driver Joined UInteger Var(dwarf_version) Init(5)\n Generate debug information in DWARF v2 (or later) format.\n \n gdwarf32\n@@ -3371,12 +3365,12 @@ Common Driver Var(dwarf_split_debug_info) Init(0)\n Generate debug information in separate .dwo files.\n \n gstabs\n-Common Driver JoinedOrMissing Negative(gstabs+)\n-Generate debug information in STABS format.\n+Common Driver WarnRemoved\n+Does nothing.  Preserved for backward compatibility.\n \n gstabs+\n-Common Driver JoinedOrMissing Negative(gvms)\n-Generate debug information in extended STABS format.\n+Common Driver WarnRemoved\n+Does nothing.  Preserved for backward compatibility.\n \n gstatement-frontiers\n Common Driver Var(debug_nonbind_markers_p) PerFunction\n@@ -3402,16 +3396,16 @@ gvariable-location-views=incompat5\n Common Driver RejectNegative Var(debug_variable_location_views, -1) Init(2)\n \n gvms\n-Common Driver JoinedOrMissing Negative(gxcoff)\n+Common Driver JoinedOrMissing\n Generate debug information in VMS format.\n \n gxcoff\n-Common Driver JoinedOrMissing Negative(gxcoff+)\n-Generate debug information in XCOFF format.\n+Common Driver WarnRemoved\n+Does nothing.  Preserved for backward compatibility.\n \n gxcoff+\n-Common Driver JoinedOrMissing Negative(gdwarf)\n-Generate debug information in extended XCOFF format.\n+Common Driver JoinedOrMissing  WarnRemoved\n+Does nothing.  Preserved for backward compatibility.\n \n Enum\n Name(compressed_debug_sections) Type(int)"}, {"sha": "f1391e2614218c4ff6330185214cf388b5f0671c", "filename": "gcc/config.gcc", "status": "modified", "additions": 116, "deletions": 116, "changes": 232, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -72,10 +72,10 @@\n #  tm_file\t\tA list of target macro files, if different from\n #\t\t\t\"$cpu_type/$cpu_type.h\". Usually it's constructed\n #\t\t\tper target in a way like this:\n-#\t\t\ttm_file=\"${tm_file} dbxelf.h elfos.h ${cpu_type.h}/elf.h\"\n+#\t\t\ttm_file=\"${tm_file} elfos.h ${cpu_type.h}/elf.h\"\n #\t\t\tNote that the preferred order is:\n #\t\t\t- specific target header \"${cpu_type}/${cpu_type.h}\"\n-#\t\t\t- generic headers like dbxelf.h elfos.h, etc.\n+#\t\t\t- generic headers like elfos.h, etc.\n #\t\t\t- specializing target headers like ${cpu_type.h}/elf.h\n #\t\t\tThis helps to keep OS specific stuff out of the CPU\n #\t\t\tdefining header ${cpu_type}/${cpu_type.h}.\n@@ -956,7 +956,7 @@ case ${target} in\n *-*-solaris2*)\n   # i?86-*-solaris2* needs to insert headers between cpu default and\n   # Solaris 2 specific ones.\n-  sol2_tm_file_head=\"dbxelf.h elfos.h ${cpu_type}/sysv4.h\"\n+  sol2_tm_file_head=\"elfos.h ${cpu_type}/sysv4.h\"\n   sol2_tm_file_tail=\"${cpu_type}/sol2.h sol2.h\"\n   sol2_tm_file=\"${sol2_tm_file_head} ${sol2_tm_file_tail}\"\n   case ${target} in\n@@ -1080,7 +1080,7 @@ esac\n \n case ${target} in\n aarch64*-*-elf | aarch64*-*-fuchsia* | aarch64*-*-rtems*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h newlib-stdint.h\"\n+\ttm_file=\"${tm_file} elfos.h newlib-stdint.h\"\n \ttm_file=\"${tm_file} aarch64/aarch64-elf.h aarch64/aarch64-errata.h aarch64/aarch64-elf-raw.h\"\n \ttmake_file=\"${tmake_file} aarch64/t-aarch64\"\n \tcase $target in\n@@ -1117,19 +1117,19 @@ aarch64*-*-elf | aarch64*-*-fuchsia* | aarch64*-*-rtems*)\n \tTM_MULTILIB_CONFIG=`echo $TM_MULTILIB_CONFIG | sed 's/^,//'`\n \t;;\n aarch64*-*-freebsd*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h ${fbsd_tm_file}\"\n+\ttm_file=\"${tm_file} elfos.h ${fbsd_tm_file}\"\n \ttm_file=\"${tm_file} aarch64/aarch64-elf.h aarch64/aarch64-errata.h aarch64/aarch64-freebsd.h\"\n \ttmake_file=\"${tmake_file} aarch64/t-aarch64 aarch64/t-aarch64-freebsd\"\n \ttm_defines=\"${tm_defines}  TARGET_DEFAULT_ASYNC_UNWIND_TABLES=1\"\n \t;;\n aarch64*-*-netbsd*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h ${nbsd_tm_file}\"\n+\ttm_file=\"${tm_file} elfos.h ${nbsd_tm_file}\"\n \ttm_file=\"${tm_file} aarch64/aarch64-elf.h aarch64/aarch64-errata.h aarch64/aarch64-netbsd.h\"\n \ttmake_file=\"${tmake_file} aarch64/t-aarch64 aarch64/t-aarch64-netbsd\"\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n \t;;\n aarch64*-*-linux*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h\"\n+\ttm_file=\"${tm_file} elfos.h gnu-user.h linux.h glibc-stdint.h\"\n \ttm_file=\"${tm_file} aarch64/aarch64-elf.h aarch64/aarch64-errata.h aarch64/aarch64-linux.h\"\n \ttmake_file=\"${tmake_file} aarch64/t-aarch64 aarch64/t-aarch64-linux\"\n \ttm_defines=\"${tm_defines}  TARGET_DEFAULT_ASYNC_UNWIND_TABLES=1\"\n@@ -1185,7 +1185,7 @@ alpha*-dec-*vms*)\n \ttmake_file=\"${tmake_file} alpha/t-vms alpha/t-alpha\"\n \t;;\n arc*-*-elf*)\n-\ttm_file=\"arc/arc-arch.h dbxelf.h elfos.h newlib-stdint.h arc/elf.h ${tm_file}\"\n+\ttm_file=\"arc/arc-arch.h elfos.h newlib-stdint.h arc/elf.h ${tm_file}\"\n \ttmake_file=\"arc/t-multilib arc/t-arc\"\n \textra_gcc_objs=\"driver-arc.o\"\n \tif test \"x$with_cpu\" != x; then\n@@ -1206,7 +1206,7 @@ arc*-*-elf*)\n \tesac\n \t;;\n arc*-*-linux*)\n-\ttm_file=\"arc/arc-arch.h dbxelf.h elfos.h gnu-user.h linux.h linux-android.h glibc-stdint.h arc/linux.h ${tm_file}\"\n+\ttm_file=\"arc/arc-arch.h elfos.h gnu-user.h linux.h linux-android.h glibc-stdint.h arc/linux.h ${tm_file}\"\n \ttmake_file=\"${tmake_file} arc/t-multilib-linux arc/t-arc\"\n \textra_gcc_objs=\"driver-arc.o\"\n \tif test \"x$with_cpu\" != x; then\n@@ -1242,7 +1242,7 @@ arm-wrs-vxworks7*)\n \tneed_64bit_hwint=yes\n \t;;\n arm*-*-freebsd*)                # ARM FreeBSD EABI\n-\ttm_file=\"dbxelf.h elfos.h ${fbsd_tm_file} arm/elf.h\"\n+\ttm_file=\"elfos.h ${fbsd_tm_file} arm/elf.h\"\n \tcase $target in\n \tarm*b-*-freebsd*)\n \t    tm_defines=\"${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=1\"\n@@ -1270,7 +1270,7 @@ arm*-*-freebsd*)                # ARM FreeBSD EABI\n arm*-*-netbsdelf*)\n \ttarget_cpu_cname=\"strongarm\"\n \ttmake_file=\"${tmake_file} arm/t-arm\"\n-\ttm_file=\"dbxelf.h elfos.h ${nbsd_tm_file} arm/elf.h\"\n+\ttm_file=\"elfos.h ${nbsd_tm_file} arm/elf.h\"\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n \tcase ${target} in\n \tarm*eb-*) tm_defines=\"${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=1\" ;;\n@@ -1299,7 +1299,7 @@ arm*-*-netbsdelf*)\n \tesac\n \t;;\n arm*-*-linux-* | arm*-*-uclinuxfdpiceabi)\n-\ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h linux-android.h glibc-stdint.h arm/elf.h arm/linux-gas.h arm/linux-elf.h\"\n+\ttm_file=\"elfos.h gnu-user.h linux.h linux-android.h glibc-stdint.h arm/elf.h arm/linux-gas.h arm/linux-elf.h\"\n \textra_options=\"${extra_options} linux-android.opt\"\n \tcase $target in\n \tarm*b-*-linux*)\n@@ -1337,7 +1337,7 @@ arm*-*-linux-* | arm*-*-uclinuxfdpiceabi)\n \twith_tls=${with_tls:-gnu}\n \t;;\n arm*-*-uclinux*eabi*)\t\t# ARM ucLinux\n-\ttm_file=\"dbxelf.h elfos.h arm/unknown-elf.h arm/elf.h arm/linux-gas.h arm/uclinux-elf.h glibc-stdint.h\"\n+\ttm_file=\"elfos.h arm/unknown-elf.h arm/elf.h arm/linux-gas.h arm/uclinux-elf.h glibc-stdint.h\"\n \ttmake_file=\"${tmake_file} arm/t-arm arm/t-arm-elf arm/t-bpabi\"\n \ttm_file=\"$tm_file arm/bpabi.h arm/uclinux-eabi.h arm/aout.h arm/arm.h\"\n \ttarget_cpu_cname=\"arm7tdmi\"\n@@ -1357,7 +1357,7 @@ arm*-*-eabi* | arm*-*-symbianelf* | arm*-*-rtems* | arm*-*-fuchsia*)\n \t  tm_defines=\"${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=1\"\n \tesac\n \tdefault_use_cxa_atexit=yes\n-\ttm_file=\"dbxelf.h elfos.h arm/unknown-elf.h arm/elf.h arm/bpabi.h\"\n+\ttm_file=\"elfos.h arm/unknown-elf.h arm/elf.h arm/bpabi.h\"\n \ttmake_file=\"${tmake_file} arm/t-arm arm/t-arm-elf\"\n \ttarget_cpu_cname=\"arm7tdmi\"\n \tcase ${target} in\n@@ -1386,7 +1386,7 @@ arm*-*-eabi* | arm*-*-symbianelf* | arm*-*-rtems* | arm*-*-fuchsia*)\n \ttm_file=\"${tm_file} arm/aout.h arm/arm.h\"\n \t;;\n avr-*-*)\n-\ttm_file=\"elfos.h avr/elf.h avr/avr-arch.h avr/avr.h avr/specs.h dbxelf.h avr/avr-stdint.h\"\n+\ttm_file=\"elfos.h avr/elf.h avr/avr-arch.h avr/avr.h avr/specs.h avr/avr-stdint.h\"\n \tif test x${with_avrlibc} != xno; then\n \t    tm_file=\"${tm_file} ${cpu_type}/avrlibc.h\"\n \t    tm_defines=\"${tm_defines} WITH_AVRLIBC\"\n@@ -1519,26 +1519,26 @@ avr-*-*)\n \textra_objs=\"avr-devices.o avr-log.o\"\n \t;;\n bfin*-elf*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h newlib-stdint.h bfin/elf.h\"\n+\ttm_file=\"${tm_file} elfos.h newlib-stdint.h bfin/elf.h\"\n \ttmake_file=bfin/t-bfin-elf\n \tuse_collect2=no\n \t;;\n bfin*-uclinux*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h bfin/elf.h gnu-user.h linux.h glibc-stdint.h bfin/uclinux.h\"\n+\ttm_file=\"${tm_file} elfos.h bfin/elf.h gnu-user.h linux.h glibc-stdint.h bfin/uclinux.h\"\n \ttmake_file=bfin/t-bfin-uclinux\n \tuse_collect2=no\n \t;;\n bfin*-linux-uclibc*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h bfin/elf.h gnu-user.h linux.h glibc-stdint.h bfin/linux.h ./linux-sysroot-suffix.h\"\n+\ttm_file=\"${tm_file} elfos.h bfin/elf.h gnu-user.h linux.h glibc-stdint.h bfin/linux.h ./linux-sysroot-suffix.h\"\n \ttmake_file=\"${tmake_file} bfin/t-bfin-linux\"\n \tuse_collect2=no\n \t;;\n bfin*-rtems*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h bfin/elf.h bfin/rtems.h rtems.h newlib-stdint.h\"\n+\ttm_file=\"${tm_file} elfos.h bfin/elf.h bfin/rtems.h rtems.h newlib-stdint.h\"\n \ttmake_file=\"${tmake_file} bfin/t-rtems\"\n \t;;\n bfin*-*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h newlib-stdint.h bfin/elf.h\"\n+\ttm_file=\"${tm_file} elfos.h newlib-stdint.h bfin/elf.h\"\n \tuse_collect2=no\n \tuse_gcc_stdint=wrap\n \t;;\n@@ -1589,13 +1589,13 @@ csky-*-*)\n \n \tcase ${target} in\n \t    csky-*-elf*)\n-\t\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file} csky/csky-elf.h\"\n+\t\ttm_file=\"elfos.h newlib-stdint.h ${tm_file} csky/csky-elf.h\"\n \t\ttmake_file=\"csky/t-csky csky/t-csky-elf\"\n \t\tdefault_use_cxa_atexit=no\n \t\tuse_gcc_stdint=wrap\n \t\t;;\n \t    csky-*-linux*)\n-\t\ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h ${tm_file} csky/csky-linux-elf.h\"\n+\t\ttm_file=\"elfos.h gnu-user.h linux.h glibc-stdint.h ${tm_file} csky/csky-linux-elf.h\"\n \t\ttmake_file=\"${tmake_file} csky/t-csky csky/t-csky-linux\"\n \n \t\tcase ${target} in\n@@ -1622,7 +1622,7 @@ csky-*-*)\n \tesac\n \t;;\n epiphany-*-elf | epiphany-*-rtems*)\n-\ttm_file=\"dbxelf.h elfos.h ${tm_file}\"\n+\ttm_file=\"elfos.h ${tm_file}\"\n \ttmake_file=\"${tmake_file} epiphany/t-epiphany\"\n \tcase ${target} in\n \tepiphany-*-rtems*)\n@@ -1638,21 +1638,21 @@ epiphany-*-elf | epiphany-*-rtems*)\n \textra_headers=\"epiphany_intrinsics.h\"\n \t;;\n fr30-*-elf)\n-\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file}\"\n+\ttm_file=\"elfos.h newlib-stdint.h ${tm_file}\"\n \t;;\n frv-*-elf)\n-\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file}\"\n+\ttm_file=\"elfos.h newlib-stdint.h ${tm_file}\"\n \ttmake_file=frv/t-frv\n \t;;\n frv-*-*linux*)\n-\ttm_file=\"dbxelf.h elfos.h ${tm_file} \\\n+\ttm_file=\"elfos.h ${tm_file} \\\n \t         gnu-user.h linux.h glibc-stdint.h frv/linux.h\"\n \ttmake_file=\"${tmake_file} frv/t-frv frv/t-linux\"\n \t;;\n ft32-*-elf)\n \tgas=yes\n \tgnu_ld=yes\n-\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file}\"\n+\ttm_file=\"elfos.h newlib-stdint.h ${tm_file}\"\n \ttmake_file=\"${tmake_file} ft32/t-ft32\"\n \t;;\n amdgcn-*-amdhsa)\n@@ -1680,23 +1680,23 @@ amdgcn-*-amdhsa)\n moxie-*-elf)\n \tgas=yes\n \tgnu_ld=yes\n-\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file}\"\n+\ttm_file=\"elfos.h newlib-stdint.h ${tm_file}\"\n \ttmake_file=\"${tmake_file} moxie/t-moxie\"\n \t;;\n moxie-*-uclinux*)\n \tgas=yes\n \tgnu_ld=yes\n-\ttm_file=\"dbxelf.h elfos.h ${tm_file} gnu-user.h linux.h glibc-stdint.h moxie/uclinux.h\"\n+\ttm_file=\"elfos.h ${tm_file} gnu-user.h linux.h glibc-stdint.h moxie/uclinux.h\"\n \ttmake_file=\"${tmake_file} moxie/t-moxie\"\n \t;;\n moxie-*-rtems*)\n \ttmake_file=\"${tmake_file} moxie/t-moxie\"\n-\ttm_file=\"moxie/moxie.h dbxelf.h elfos.h moxie/rtems.h rtems.h newlib-stdint.h\"\n+\ttm_file=\"moxie/moxie.h elfos.h moxie/rtems.h rtems.h newlib-stdint.h\"\n \t;;\n moxie-*-moxiebox*)\n \tgas=yes\n \tgnu_ld=yes\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h moxie/moxiebox.h newlib-stdint.h\"\n+\ttm_file=\"${tm_file} elfos.h moxie/moxiebox.h newlib-stdint.h\"\n \ttmake_file=\"${tmake_file} moxie/t-moxiebox\"\n \t;;\n h8300-*-elf*)\n@@ -1709,7 +1709,7 @@ h8300-*-linux*)\n \t;;\n hppa*64*-*-linux*)\n \ttarget_cpu_default=\"MASK_PA_11|MASK_PA_20\"\n-\ttm_file=\"pa/pa64-start.h ${tm_file} dbxelf.h elfos.h gnu-user.h linux.h \\\n+\ttm_file=\"pa/pa64-start.h ${tm_file} elfos.h gnu-user.h linux.h \\\n \t\t glibc-stdint.h pa/pa-linux.h pa/pa64-regs.h pa/pa-64.h \\\n \t\t pa/pa64-linux.h\"\n \ttmake_file=\"${tmake_file} pa/t-pa pa/t-linux\"\n@@ -1718,14 +1718,14 @@ hppa*64*-*-linux*)\n \t;;\n hppa*-*-linux*)\n \ttarget_cpu_default=\"MASK_PA_11|MASK_NO_SPACE_REGS|MASK_CALLER_COPIES\"\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h pa/pa-linux.h \\\n+\ttm_file=\"${tm_file} elfos.h gnu-user.h linux.h glibc-stdint.h pa/pa-linux.h \\\n \t\t pa/pa32-regs.h pa/pa32-linux.h\"\n \ttmake_file=\"${tmake_file} pa/t-pa pa/t-linux\"\n \td_target_objs=\"${d_target_objs} pa-d.o\"\n \t;;\n hppa*-*-openbsd*)\n \ttarget_cpu_default=\"MASK_PA_11\"\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h openbsd.h openbsd-stdint.h openbsd-libpthread.h \\\n+\ttm_file=\"${tm_file} elfos.h openbsd.h openbsd-stdint.h openbsd-libpthread.h \\\n \t\t pa/pa-openbsd.h pa/pa32-regs.h pa/pa32-openbsd.h\"\n \textra_options=\"${extra_options} openbsd.opt\"\n \ttmake_file=\"pa/t-pa\"\n@@ -1735,7 +1735,7 @@ hppa*-*-openbsd*)\n \t;;\n hppa*-*-netbsd*)\n \ttarget_cpu_default=\"MASK_PA_11|MASK_NO_SPACE_REGS\"\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h ${nbsd_tm_file} \\\n+\ttm_file=\"${tm_file} elfos.h ${nbsd_tm_file} \\\n \t\t pa/pa-netbsd.h pa/pa32-regs.h pa/pa32-netbsd.h\"\n \ttmake_file=\"${tmake_file}\"\n \ttm_defines=\"${tm_defines} CHAR_FAST8=1 SHORT_FAST16=1\"\n@@ -1747,7 +1747,7 @@ hppa*64*-*-hpux11*)\n \tthen\n \t\ttarget_cpu_default=\"${target_cpu_default}|MASK_GNU_LD\"\n \tfi\n-\ttm_file=\"pa/pa64-start.h ${tm_file} dbxelf.h elfos.h \\\n+\ttm_file=\"pa/pa64-start.h ${tm_file} elfos.h \\\n \t\t pa/pa64-regs.h pa/pa-hpux.h pa/pa-hpux1010.h \\\n \t\t pa/pa-hpux11.h\"\n \tcase ${target} in\n@@ -1807,55 +1807,55 @@ x86_64-*-darwin*)\n \ttm_file=\"${cpu_type}/darwin64-biarch.h ${tm_file} \"\n \t;;\n i[34567]86-*-elfiamcu)\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h newlib-stdint.h i386/iamcu.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h elfos.h newlib-stdint.h i386/iamcu.h\"\n \t;;\n i[34567]86-*-elf*)\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h newlib-stdint.h i386/i386elf.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h elfos.h newlib-stdint.h i386/i386elf.h\"\n \t;;\n x86_64-*-elf*)\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h newlib-stdint.h i386/i386elf.h i386/x86-64.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h elfos.h newlib-stdint.h i386/i386elf.h i386/x86-64.h\"\n \t;;\n x86_64-*-rtems*)\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h newlib-stdint.h i386/i386elf.h i386/x86-64.h i386/rtemself.h rtems.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h elfos.h newlib-stdint.h i386/i386elf.h i386/x86-64.h i386/rtemself.h rtems.h\"\n \t;;\n i[34567]86-*-rdos*)\n-    tm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h newlib-stdint.h i386/i386elf.h i386/rdos.h\"\n+    tm_file=\"${tm_file} i386/unix.h i386/att.h elfos.h newlib-stdint.h i386/i386elf.h i386/rdos.h\"\n     ;;\n x86_64-*-rdos*)\n-    tm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h newlib-stdint.h i386/i386elf.h i386/x86-64.h i386/rdos.h i386/rdos64.h\"\n+    tm_file=\"${tm_file} i386/unix.h i386/att.h elfos.h newlib-stdint.h i386/i386elf.h i386/x86-64.h i386/rdos.h i386/rdos64.h\"\n     tmake_file=\"i386/t-i386elf t-svr4\"\n     ;;\n i[34567]86-*-dragonfly*)\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h dragonfly.h dragonfly-stdint.h i386/dragonfly.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h elfos.h dragonfly.h dragonfly-stdint.h i386/dragonfly.h\"\n \ttmake_file=\"${tmake_file} i386/t-crtstuff\"\n \t;;\n x86_64-*-dragonfly*)\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h dragonfly.h dragonfly-stdint.h i386/x86-64.h i386/dragonfly.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h elfos.h dragonfly.h dragonfly-stdint.h i386/x86-64.h i386/dragonfly.h\"\n \ttmake_file=\"${tmake_file} i386/t-crtstuff\"\n \t;;\n i[34567]86-*-freebsd*)\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h ${fbsd_tm_file} i386/freebsd.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h elfos.h ${fbsd_tm_file} i386/freebsd.h\"\n \t;;\n x86_64-*-freebsd*)\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h ${fbsd_tm_file} i386/x86-64.h i386/freebsd.h i386/freebsd64.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h elfos.h ${fbsd_tm_file} i386/x86-64.h i386/freebsd.h i386/freebsd64.h\"\n \t;;\n i[34567]86-*-netbsdelf*)\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h ${nbsd_tm_file} i386/netbsd-elf.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h elfos.h ${nbsd_tm_file} i386/netbsd-elf.h\"\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n \t;;\n x86_64-*-netbsd*)\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h ${nbsd_tm_file} i386/x86-64.h i386/netbsd64.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h elfos.h ${nbsd_tm_file} i386/x86-64.h i386/netbsd64.h\"\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n \t;;\n i[34567]86-*-openbsd*)\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h elfos.h\"\n \ttm_file=\"${tm_file} openbsd.h openbsd-stdint.h openbsd-libpthread.h i386/openbsdelf.h\"\n \textra_options=\"${extra_options} openbsd.opt\"\n \tgas=yes\n \tgnu_ld=yes\n \t;;\n x86_64-*-openbsd*)\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h elfos.h\"\n \ttm_file=\"${tm_file} openbsd.h openbsd-stdint.h openbsd-libpthread.h i386/x86-64.h i386/openbsdelf.h\"\n \textra_options=\"${extra_options} openbsd.opt\"\n \tgas=yes\n@@ -1864,7 +1864,7 @@ x86_64-*-openbsd*)\n i[34567]86-*-linux* | i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-gnu* | i[34567]86-*-kopensolaris*-gnu)\n \t\t\t# Intel 80386's running GNU/*\n \t\t\t# with ELF format using glibc 2\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h gnu-user.h glibc-stdint.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h elfos.h gnu-user.h glibc-stdint.h\"\n \tcase ${target} in\n \ti[34567]86-*-linux*)\n \t\ttm_file=\"${tm_file} linux.h linux-android.h\"\n@@ -1921,7 +1921,7 @@ i[34567]86-*-linux* | i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-gnu* | i[34567]8\n \tesac\n \t;;\n x86_64-*-linux* | x86_64-*-kfreebsd*-gnu)\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h gnu-user.h glibc-stdint.h \\\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h elfos.h gnu-user.h glibc-stdint.h \\\n \t\t i386/x86-64.h i386/gnu-user-common.h i386/gnu-user64.h\"\n \tcase ${target} in\n \tx86_64-*-linux*)\n@@ -1959,7 +1959,7 @@ x86_64-*-linux* | x86_64-*-kfreebsd*-gnu)\n \t;;\n i[34567]86-pc-msdosdjgpp*)\n \txm_file=i386/xm-djgpp.h\n-\ttm_file=\"dbxcoff.h ${tm_file} i386/unix.h i386/bsd.h i386/gas.h i386/djgpp.h i386/djgpp-stdint.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h i386/djgpp.h i386/djgpp-stdint.h\"\n \tnative_system_header_dir=/dev/env/DJDIR/include\n \textra_options=\"${extra_options} i386/djgpp.opt\"\n \tgnu_ld=yes\n@@ -1968,21 +1968,21 @@ i[34567]86-pc-msdosdjgpp*)\n \t;;\n i[34567]86-*-lynxos*)\n \txm_defines=POSIX\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h i386/lynx.h lynx.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h elfos.h i386/lynx.h lynx.h\"\n \ttmake_file=\"${tmake_file} t-lynx\"\n \textra_options=\"${extra_options} lynx.opt\"\n \tthread_file=lynx\n \tgnu_ld=yes\n \tgas=yes\n \t;;\n i[34567]86-*-nto-qnx*)\n-\ttm_file=\"${tm_file} i386/att.h dbxelf.h tm-dwarf2.h elfos.h i386/unix.h i386/nto.h\"\n+\ttm_file=\"${tm_file} i386/att.h tm-dwarf2.h elfos.h i386/unix.h i386/nto.h\"\n \textra_options=\"${extra_options} i386/nto.opt\"\n \tgnu_ld=yes\n \tgas=yes\n \t;;\n i[34567]86-*-rtems*)\n-\ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h i386/i386elf.h i386/rtemself.h rtems.h newlib-stdint.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/att.h elfos.h i386/i386elf.h i386/rtemself.h rtems.h newlib-stdint.h\"\n \ttmake_file=\"${tmake_file} i386/t-rtems\"\n \t;;\n i[34567]86-*-solaris2* | x86_64-*-solaris2*)\n@@ -2031,7 +2031,7 @@ i[4567]86-wrs-vxworks*|x86_64-wrs-vxworks7*)\n \tesac\n \t;;\n i[34567]86-*-cygwin*)\n-\ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h dbxcoff.h i386/cygming.h i386/cygwin.h i386/cygwin-stdint.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h i386/cygming.h i386/cygwin.h i386/cygwin-stdint.h\"\n \txm_file=i386/xm-cygwin.h\n \ttmake_file=\"${tmake_file} i386/t-cygming t-slibgcc\"\n \ttarget_gtfiles=\"$target_gtfiles \\$(srcdir)/config/i386/winnt.cc\"\n@@ -2049,7 +2049,7 @@ i[34567]86-*-cygwin*)\n \t;;\n x86_64-*-cygwin*)\n \tneed_64bit_isa=yes\n-\ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h dbxcoff.h i386/cygming.h i386/cygwin.h i386/cygwin-w64.h i386/cygwin-stdint.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h i386/cygming.h i386/cygwin.h i386/cygwin-w64.h i386/cygwin-stdint.h\"\n \txm_file=i386/xm-cygwin.h\n \ttmake_file=\"${tmake_file} i386/t-cygming t-slibgcc i386/t-cygwin-w64\"\n \ttarget_gtfiles=\"$target_gtfiles \\$(srcdir)/config/i386/winnt.cc\"\n@@ -2067,7 +2067,7 @@ x86_64-*-cygwin*)\n \ttm_defines=\"${tm_defines} TARGET_CYGWIN64=1\"\n \t;;\n i[34567]86-*-mingw* | x86_64-*-mingw*)\n-\ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h dbxcoff.h i386/cygming.h\"\n+\ttm_file=\"${tm_file} i386/unix.h i386/bsd.h i386/gas.h i386/cygming.h\"\n \txm_file=i386/xm-mingw32.h\n \tc_target_objs=\"${c_target_objs} winnt-c.o\"\n \tcxx_target_objs=\"${cxx_target_objs} winnt-c.o\"\n@@ -2161,7 +2161,7 @@ x86_64-*-fuchsia*)\n \ttm_file=\"${tm_file} i386/unix.h i386/att.h elfos.h newlib-stdint.h i386/i386elf.h i386/x86-64.h fuchsia.h\"\n \t;;\n ia64*-*-elf*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h newlib-stdint.h ia64/sysv4.h ia64/elf.h\"\n+\ttm_file=\"${tm_file} elfos.h newlib-stdint.h ia64/sysv4.h ia64/elf.h\"\n \ttmake_file=\"ia64/t-ia64\"\n \ttarget_cpu_default=\"0\"\n \tif test x$gas = xyes\n@@ -2174,17 +2174,17 @@ ia64*-*-elf*)\n \tfi\n \t;;\n ia64*-*-freebsd*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h ${fbsd_tm_file} ia64/sysv4.h ia64/freebsd.h\"\n+\ttm_file=\"${tm_file} elfos.h ${fbsd_tm_file} ia64/sysv4.h ia64/freebsd.h\"\n \ttarget_cpu_default=\"MASK_GNU_AS|MASK_GNU_LD\"\n \ttmake_file=\"${tmake_file} ia64/t-ia64\"\n \t;;\n ia64*-*-linux*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h ia64/sysv4.h ia64/linux.h\"\n+\ttm_file=\"${tm_file} elfos.h gnu-user.h linux.h glibc-stdint.h ia64/sysv4.h ia64/linux.h\"\n \ttmake_file=\"${tmake_file} ia64/t-ia64 ia64/t-linux t-libunwind\"\n \ttarget_cpu_default=\"MASK_GNU_AS|MASK_GNU_LD\"\n \t;;\n ia64*-*-hpux*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h ia64/sysv4.h ia64/hpux.h\"\n+\ttm_file=\"${tm_file} elfos.h ia64/sysv4.h ia64/hpux.h\"\n \ttmake_file=\"ia64/t-ia64 ia64/t-hpux t-slibgcc\"\n \ttarget_cpu_default=\"MASK_GNU_AS\"\n \tcase x$enable_threads in\n@@ -2220,16 +2220,16 @@ iq2000*-*-elf*)\n         md_file=iq2000/iq2000.md\n         ;;\n lm32-*-elf*)\n-        tm_file=\"dbxelf.h elfos.h ${tm_file} newlib-stdint.h\"\n+        tm_file=\"elfos.h ${tm_file} newlib-stdint.h\"\n \ttmake_file=\"${tmake_file} lm32/t-lm32\"\n         ;;\n lm32-*-rtems*)\n-\ttm_file=\"dbxelf.h elfos.h ${tm_file} lm32/rtems.h rtems.h newlib-stdint.h\"\n+\ttm_file=\"elfos.h ${tm_file} lm32/rtems.h rtems.h newlib-stdint.h\"\n \ttmake_file=\"${tmake_file} lm32/t-lm32\"\n \ttmake_file=\"${tmake_file} lm32/t-rtems\"\n          ;;\n lm32-*-uclinux*)\n-        tm_file=\"dbxelf.h elfos.h ${tm_file} gnu-user.h linux.h lm32/uclinux-elf.h\"\n+        tm_file=\"elfos.h ${tm_file} gnu-user.h linux.h lm32/uclinux-elf.h\"\n \ttmake_file=\"${tmake_file} lm32/t-lm32\"\n         ;;\n m32r-*-elf*)\n@@ -2257,7 +2257,7 @@ m68k-*-elf* | fido-*-elf*)\n \t\tdefault_cf_cpu=5206\n \t\t;;\n \tesac\n-\ttm_file=\"${tm_file} m68k/m68k-none.h m68k/m68kelf.h dbxelf.h elfos.h newlib-stdint.h m68k/m68kemb.h m68k/m68020-elf.h\"\n+\ttm_file=\"${tm_file} m68k/m68k-none.h m68k/m68kelf.h elfos.h newlib-stdint.h m68k/m68kemb.h m68k/m68020-elf.h\"\n \ttm_defines=\"${tm_defines} MOTOROLA=1\"\n \ttmake_file=\"m68k/t-floatlib m68k/t-m68kbare m68k/t-m68kelf\"\n \t# Add multilibs for targets other than fido.\n@@ -2272,7 +2272,7 @@ m68k-*-elf* | fido-*-elf*)\n m68k*-*-netbsdelf*)\n \tdefault_m68k_cpu=68020\n \tdefault_cf_cpu=5475\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h ${nbsd_tm_file} m68k/netbsd-elf.h\"\n+\ttm_file=\"${tm_file} elfos.h ${nbsd_tm_file} m68k/netbsd-elf.h\"\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n \ttm_defines=\"${tm_defines} MOTOROLA=1 CHAR_FAST8=1 SHORT_FAST16=1\"\n \t;;\n@@ -2281,7 +2281,7 @@ m68k-*-uclinux*)\t\t# Motorola m68k/ColdFire running uClinux\n \t\t\t\t# ABI.\n \tdefault_m68k_cpu=68020\n \tdefault_cf_cpu=5206\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h flat.h m68k/linux.h m68k/uclinux.h ./sysroot-suffix.h\"\n+\ttm_file=\"${tm_file} elfos.h gnu-user.h linux.h glibc-stdint.h flat.h m68k/linux.h m68k/uclinux.h ./sysroot-suffix.h\"\n \textra_options=\"${extra_options} m68k/uclinux.opt\"\n  \ttm_defines=\"${tm_defines} MOTOROLA=1\"\n \ttmake_file=\"m68k/t-floatlib m68k/t-uclinux m68k/t-mlibs\"\n@@ -2292,7 +2292,7 @@ m68k-*-linux*)\t\t\t# Motorola m68k's running GNU/Linux\n \tdefault_m68k_cpu=68020\n \tdefault_cf_cpu=5475\n \twith_arch=${with_arch:-m68k}\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h m68k/linux.h ./sysroot-suffix.h\"\n+\ttm_file=\"${tm_file} elfos.h gnu-user.h linux.h glibc-stdint.h m68k/linux.h ./sysroot-suffix.h\"\n \textra_options=\"${extra_options} m68k/ieee.opt\"\n \ttm_defines=\"${tm_defines} MOTOROLA=1\"\n \ttmake_file=\"${tmake_file} m68k/t-floatlib m68k/t-linux m68k/t-mlibs\"\n@@ -2301,11 +2301,11 @@ m68k-*-rtems*)\n \tdefault_m68k_cpu=68020\n \tdefault_cf_cpu=5206\n \ttmake_file=\"${tmake_file} m68k/t-floatlib m68k/t-m68kbare m68k/t-crtstuff m68k/t-rtems m68k/t-mlibs\"\n-\ttm_file=\"${tm_file} m68k/m68k-none.h m68k/m68kelf.h dbxelf.h elfos.h m68k/m68kemb.h m68k/m68020-elf.h m68k/rtemself.h rtems.h newlib-stdint.h\"\n+\ttm_file=\"${tm_file} m68k/m68k-none.h m68k/m68kelf.h elfos.h m68k/m68kemb.h m68k/m68020-elf.h m68k/rtemself.h rtems.h newlib-stdint.h\"\n \ttm_defines=\"${tm_defines} MOTOROLA=1\"\n \t;;\n mcore-*-elf)\n-\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file} mcore/mcore-elf.h\"\n+\ttm_file=\"elfos.h newlib-stdint.h ${tm_file} mcore/mcore-elf.h\"\n \ttmake_file=mcore/t-mcore\n \tinhibit_libc=true\n \t;;\n@@ -2318,7 +2318,7 @@ microblaze*-linux*)\n \t\t\ttm_defines=\"${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=4321\"\n \t\t\t;;\n \tesac\n-\ttm_file=\"${tm_file} dbxelf.h gnu-user.h linux.h microblaze/linux.h\"\n+\ttm_file=\"${tm_file} gnu-user.h linux.h microblaze/linux.h\"\n \ttm_file=\"${tm_file} glibc-stdint.h\"\n \tc_target_objs=\"${c_target_objs} microblaze-c.o\"\n \tcxx_target_objs=\"${cxx_target_objs} microblaze-c.o\"\n@@ -2334,7 +2334,7 @@ microblaze*-*-rtems*)\n \t\t\ttm_defines=\"${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=4321\"\n \t\t\t;;\n \tesac\n-\ttm_file=\"${tm_file} dbxelf.h\"\n+\ttm_file=\"${tm_file}\"\n \ttm_file=\"${tm_file} microblaze/rtems.h rtems.h newlib-stdint.h\"\n \tc_target_objs=\"${c_target_objs} microblaze-c.o\"\n \tcxx_target_objs=\"${cxx_target_objs} microblaze-c.o\"\n@@ -2350,7 +2350,7 @@ microblaze*-*-elf)\n \t\t\ttm_defines=\"${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=4321\"\n \t\t\t;;\n \tesac\n-\ttm_file=\"${tm_file} dbxelf.h newlib-stdint.h\"\n+\ttm_file=\"${tm_file} newlib-stdint.h\"\n \tc_target_objs=\"${c_target_objs} microblaze-c.o\"\n \tcxx_target_objs=\"${cxx_target_objs} microblaze-c.o\"\n \ttmake_file=\"${tmake_file} microblaze/t-microblaze\"\n@@ -2418,7 +2418,7 @@ riscv*-*-freebsd*)\n \t;;\n \n loongarch*-*-linux*)\n-\ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h linux-android.h glibc-stdint.h ${tm_file}\"\n+\ttm_file=\"elfos.h gnu-user.h linux.h linux-android.h glibc-stdint.h ${tm_file}\"\n \ttm_file=\"${tm_file} loongarch/gnu-user.h loongarch/linux.h\"\n \textra_options=\"${extra_options} linux-android.opt\"\n \ttmake_file=\"${tmake_file} loongarch/t-linux\"\n@@ -2436,7 +2436,7 @@ mips*-*-netbsd*)\t\t\t# NetBSD/mips, either endian.\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n \t;;\n mips*-img-linux*)\n-\ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h linux-android.h glibc-stdint.h ${tm_file} mips/gnu-user.h mips/linux.h mips/linux-common.h mips/mti-linux.h\"\n+\ttm_file=\"elfos.h gnu-user.h linux.h linux-android.h glibc-stdint.h ${tm_file} mips/gnu-user.h mips/linux.h mips/linux-common.h mips/mti-linux.h\"\n \textra_options=\"${extra_options} linux-android.opt\"\n \ttmake_file=\"${tmake_file} mips/t-img-linux\"\n \ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=MIPS_ISA_MIPS32R6 MIPS_ABI_DEFAULT=ABI_32\"\n@@ -2446,7 +2446,7 @@ mips*-img-linux*)\n \tgas=yes\n \t;;\n mips*-mti-linux*)\n-\ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h linux-android.h glibc-stdint.h ${tm_file} mips/gnu-user.h mips/linux.h mips/linux-common.h mips/mti-linux.h\"\n+\ttm_file=\"elfos.h gnu-user.h linux.h linux-android.h glibc-stdint.h ${tm_file} mips/gnu-user.h mips/linux.h mips/linux-common.h mips/mti-linux.h\"\n \textra_options=\"${extra_options} linux-android.opt\"\n \ttmake_file=\"${tmake_file} mips/t-mti-linux\"\n \ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=MIPS_ISA_MIPS32R2 MIPS_ABI_DEFAULT=ABI_32\"\n@@ -2456,7 +2456,7 @@ mips*-mti-linux*)\n \tgas=yes\n \t;;\n mips*-*-linux*)\t\t\t\t# Linux MIPS, either endian.\n-\ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h linux-android.h glibc-stdint.h ${tm_file} mips/gnu-user.h mips/linux.h mips/linux-common.h\"\n+\ttm_file=\"elfos.h gnu-user.h linux.h linux-android.h glibc-stdint.h ${tm_file} mips/gnu-user.h mips/linux.h mips/linux-common.h\"\n \textra_options=\"${extra_options} linux-android.opt\"\n \tcase ${target} in\n \t\tmipsisa32r6*)\n@@ -2668,7 +2668,7 @@ mn10300-*-*)\n \tuse_gcc_stdint=wrap\n \t;;\n msp430-*-*)\n-\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file}\"\n+\ttm_file=\"elfos.h newlib-stdint.h ${tm_file}\"\n \tc_target_objs=\"msp430-c.o\"\n \tcxx_target_objs=\"msp430-c.o\"\n \ttmake_file=\"${tmake_file} msp430/t-msp430\"\n@@ -2706,11 +2706,11 @@ nds32*-*-*)\n \tesac\n \tcase ${target} in\n \t  nds32*-*-elf*)\n-\t    tm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file} nds32/elf.h nds32/nds32_intrinsic.h\"\n+\t    tm_file=\"elfos.h newlib-stdint.h ${tm_file} nds32/elf.h nds32/nds32_intrinsic.h\"\n \t    tmake_file=\"nds32/t-nds32 nds32/t-elf\"\n \t    ;;\n \t  nds32*-*-linux*)\n-\t    tm_file=\"dbxelf.h elfos.h ${tm_file} gnu-user.h linux.h glibc-stdint.h nds32/linux.h nds32/nds32_intrinsic.h\"\n+\t    tm_file=\"elfos.h ${tm_file} gnu-user.h linux.h glibc-stdint.h nds32/linux.h nds32/nds32_intrinsic.h\"\n \t    tmake_file=\"${tmake_file} nds32/t-nds32 nds32/t-linux\"\n \t    gcc_cv_initfini_array=yes\n \t    ;;\n@@ -2831,7 +2831,7 @@ powerpc64-*-darwin*)\n \ttm_file=\"${tm_file} ${cpu_type}/darwin64-biarch.h\"\n \t;;\n powerpc*-*-freebsd*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h ${fbsd_tm_file} rs6000/sysv4.h\"\n+\ttm_file=\"${tm_file} elfos.h gnu-user.h ${fbsd_tm_file} rs6000/sysv4.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcos ${tmake_file} rs6000/t-ppccomm\"\n \tcase ${target} in\n@@ -2856,47 +2856,47 @@ powerpc*-*-freebsd*)\n \tesac\n \t;;\n powerpc-*-netbsd*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h ${nbsd_tm_file} freebsd-spec.h rs6000/sysv4.h rs6000/netbsd.h\"\n+\ttm_file=\"${tm_file} elfos.h gnu-user.h ${nbsd_tm_file} freebsd-spec.h rs6000/sysv4.h rs6000/netbsd.h\"\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n \ttmake_file=\"${tmake_file} rs6000/t-netbsd\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \t;;\n powerpc-*-eabisimaltivec*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabisim.h rs6000/eabialtivec.h\"\n+\ttm_file=\"${tm_file} elfos.h gnu-user.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabisim.h rs6000/eabialtivec.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcendian rs6000/t-ppccomm\"\n \tuse_gcc_stdint=wrap\n \t;;\n powerpc-*-eabisim*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabisim.h\"\n+\ttm_file=\"${tm_file} elfos.h gnu-user.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabisim.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcgas rs6000/t-ppccomm\"\n \tuse_gcc_stdint=wrap\n \t;;\n powerpc-*-elf*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h\"\n+\ttm_file=\"${tm_file} elfos.h gnu-user.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcgas rs6000/t-ppccomm\"\n \t;;\n powerpc-*-eabialtivec*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabialtivec.h\"\n+\ttm_file=\"${tm_file} elfos.h gnu-user.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabialtivec.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcendian rs6000/t-ppccomm\"\n \tuse_gcc_stdint=wrap\n \t;;\n powerpc-*-eabi*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/eabi.h\"\n+\ttm_file=\"${tm_file} elfos.h gnu-user.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/eabi.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcgas rs6000/t-ppccomm\"\n \tuse_gcc_stdint=wrap\n \t;;\n powerpc-*-rtems*)\n-\ttm_file=\"rs6000/biarch64.h ${tm_file} dbxelf.h elfos.h gnu-user.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/rtems.h rtems.h\"\n+\ttm_file=\"rs6000/biarch64.h ${tm_file} elfos.h gnu-user.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/rtems.h rtems.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt rs6000/linux64.opt\"\n \ttmake_file=\"${tmake_file} rs6000/t-fprules rs6000/t-rtems rs6000/t-ppccomm\"\n \t;;\n powerpc*-*-linux*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h linux.h freebsd-spec.h rs6000/sysv4.h\"\n+\ttm_file=\"${tm_file} elfos.h gnu-user.h linux.h freebsd-spec.h rs6000/sysv4.h\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \ttmake_file=\"${tmake_file} rs6000/t-fprules rs6000/t-ppccomm\"\n \textra_objs=\"$extra_objs rs6000-linux.o\"\n@@ -3003,26 +3003,26 @@ powerpc-wrs-vxworks*)\n \t;;\n powerpc-*-lynxos*)\n \txm_defines=POSIX\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h rs6000/sysv4.h rs6000/lynx.h lynx.h\"\n+\ttm_file=\"${tm_file} elfos.h gnu-user.h rs6000/sysv4.h rs6000/lynx.h lynx.h\"\n \ttmake_file=\"t-lynx rs6000/t-lynx\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt lynx.opt\"\n \tthread_file=lynx\n \tgnu_ld=yes\n \tgas=yes\n \t;;\n powerpcle-*-elf*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/sysv4le.h\"\n+\ttm_file=\"${tm_file} elfos.h gnu-user.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/sysv4le.h\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcgas rs6000/t-ppccomm\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \t;;\n powerpcle-*-eabisim*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/eabi.h rs6000/eabisim.h\"\n+\ttm_file=\"${tm_file} elfos.h gnu-user.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/eabi.h rs6000/eabisim.h\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcgas rs6000/t-ppccomm\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \tuse_gcc_stdint=wrap\n \t;;\n powerpcle-*-eabi*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/eabi.h\"\n+\ttm_file=\"${tm_file} elfos.h gnu-user.h usegas.h freebsd-spec.h newlib-stdint.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/eabi.h\"\n \ttmake_file=\"rs6000/t-fprules rs6000/t-ppcgas rs6000/t-ppccomm\"\n \textra_options=\"${extra_options} rs6000/sysv4.opt\"\n \tuse_gcc_stdint=wrap\n@@ -3080,7 +3080,7 @@ rl78-*-elf*)\n \ttmake_file=\"${tmake_file} rl78/t-rl78\"\n \t;;\n rx-*-elf*)\n-\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file}\"\n+\ttm_file=\"elfos.h newlib-stdint.h ${tm_file}\"\n \ttmake_file=\"${tmake_file} rx/t-rx\"\n \textra_options=\"${extra_options} rx/elf.opt\"\n \t;;\n@@ -3089,7 +3089,7 @@ rx-*-linux*)\n \ttmake_file=\"${tmake_file} rx/t-linux\"\n \t;;\n s390-*-linux*)\n-\ttm_file=\"s390/s390.h dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h s390/linux.h\"\n+\ttm_file=\"s390/s390.h elfos.h gnu-user.h linux.h glibc-stdint.h s390/linux.h\"\n \tc_target_objs=\"${c_target_objs} s390-c.o\"\n \tcxx_target_objs=\"${cxx_target_objs} s390-c.o\"\n \tif test x$enable_targets = xall; then\n@@ -3098,7 +3098,7 @@ s390-*-linux*)\n \ttmake_file=\"${tmake_file} s390/t-s390\"\n \t;;\n s390x-*-linux*)\n-\ttm_file=\"s390/s390x.h s390/s390.h dbxelf.h elfos.h gnu-user.h linux.h glibc-stdint.h s390/linux.h\"\n+\ttm_file=\"s390/s390x.h s390/s390.h elfos.h gnu-user.h linux.h glibc-stdint.h s390/linux.h\"\n \ttm_p_file=\"linux-protos.h s390/s390-protos.h\"\n \tc_target_objs=\"${c_target_objs} s390-c.o\"\n \tcxx_target_objs=\"${cxx_target_objs} s390-c.o\"\n@@ -3108,7 +3108,7 @@ s390x-*-linux*)\n \ttmake_file=\"${tmake_file} s390/t-linux64 s390/t-s390\"\n \t;;\n s390x-ibm-tpf*)\n-\ttm_file=\"s390/s390x.h s390/s390.h dbxelf.h elfos.h glibc-stdint.h s390/tpf.h\"\n+\ttm_file=\"s390/s390x.h s390/s390.h elfos.h glibc-stdint.h s390/tpf.h\"\n \ttm_p_file=s390/s390-protos.h\n \tc_target_objs=\"${c_target_objs} s390-c.o\"\n \tcxx_target_objs=\"${cxx_target_objs} s390-c.o\"\n@@ -3147,7 +3147,7 @@ sh-*-elf* | sh[12346l]*-*-elf* | \\\n \tcase ${with_endian} in\n \tlittle*)\ttm_file=\"sh/little.h ${tm_file}\" ;;\n \tesac\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h sh/elf.h\"\n+\ttm_file=\"${tm_file} elfos.h sh/elf.h\"\n \tcase ${target} in\n \tsh*-*-linux*)\ttmake_file=\"${tmake_file} sh/t-linux\"\n \t\t\tif test x$enable_fdpic = xyes; then\n@@ -3268,14 +3268,14 @@ sh-*-elf* | sh[12346l]*-*-elf* | \\\n \t;;\n sh-*-rtems*)\n \ttmake_file=\"${tmake_file} sh/t-sh sh/t-rtems\"\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h sh/elf.h sh/embed-elf.h sh/rtemself.h rtems.h newlib-stdint.h\"\n+\ttm_file=\"${tm_file} elfos.h sh/elf.h sh/embed-elf.h sh/rtemself.h rtems.h newlib-stdint.h\"\n \t;;\n sh-wrs-vxworks)\n \ttmake_file=\"$tmake_file sh/t-sh sh/t-vxworks\"\n \ttm_file=\"${tm_file} elfos.h sh/elf.h sh/embed-elf.h vx-common.h vxworks.h sh/vxworks.h\"\n \t;;\n sparc-*-elf*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h newlib-stdint.h sparc/sysv4.h sparc/sp-elf.h\"\n+\ttm_file=\"${tm_file} elfos.h newlib-stdint.h sparc/sysv4.h sparc/sp-elf.h\"\n \tcase ${target} in\n \t    *-leon-*)\n \t\ttmake_file=\"sparc/t-sparc sparc/t-leon\"\n@@ -3289,11 +3289,11 @@ sparc-*-elf*)\n \tesac\n \t;;\n sparc-*-rtems*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h sparc/sysv4.h sparc/sp-elf.h sparc/rtemself.h rtems.h newlib-stdint.h\"\n+\ttm_file=\"${tm_file} elfos.h sparc/sysv4.h sparc/sp-elf.h sparc/rtemself.h rtems.h newlib-stdint.h\"\n \ttmake_file=\"${tmake_file} sparc/t-sparc sparc/t-rtems\"\n \t;;\n sparc-*-linux*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h sparc/sysv4.h gnu-user.h linux.h glibc-stdint.h sparc/tso.h\"\n+\ttm_file=\"${tm_file} elfos.h sparc/sysv4.h gnu-user.h linux.h glibc-stdint.h sparc/tso.h\"\n \textra_options=\"${extra_options} sparc/long-double-switch.opt\"\n \tcase ${target} in\n \t    *-leon-*)\n@@ -3315,7 +3315,7 @@ sparc-*-linux*)\n \tfi\n \t;;\n sparc-*-netbsdelf*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h sparc/sysv4.h ${nbsd_tm_file} sparc/netbsd-elf.h\"\n+\ttm_file=\"${tm_file} elfos.h sparc/sysv4.h ${nbsd_tm_file} sparc/netbsd-elf.h\"\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n \textra_options=\"${extra_options} sparc/long-double-switch.opt\"\n \ttmake_file=\"${tmake_file} sparc/t-sparc\"\n@@ -3337,22 +3337,22 @@ sparc-wrs-vxworks)\n \ttmake_file=\"${tmake_file} sparc/t-sparc sparc/t-vxworks\"\n \t;;\n sparc64-*-elf*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h newlib-stdint.h sparc/sysv4.h sparc/sp64-elf.h\"\n+\ttm_file=\"${tm_file} elfos.h newlib-stdint.h sparc/sysv4.h sparc/sp64-elf.h\"\n \textra_options=\"${extra_options}\"\n \ttmake_file=\"${tmake_file} sparc/t-sparc\"\n \t;;\n sparc64-*-rtems*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h newlib-stdint.h sparc/sysv4.h sparc/sp64-elf.h sparc/rtemself.h rtems.h\"\n+\ttm_file=\"${tm_file} elfos.h newlib-stdint.h sparc/sysv4.h sparc/sp64-elf.h sparc/rtemself.h rtems.h\"\n \textra_options=\"${extra_options}\"\n \ttmake_file=\"${tmake_file} sparc/t-sparc sparc/t-rtems-64\"\n \t;;\n sparc64-*-linux*)\n-\ttm_file=\"sparc/biarch64.h ${tm_file} dbxelf.h elfos.h sparc/sysv4.h gnu-user.h linux.h glibc-stdint.h sparc/default64.h sparc/linux64.h sparc/tso.h\"\n+\ttm_file=\"sparc/biarch64.h ${tm_file} elfos.h sparc/sysv4.h gnu-user.h linux.h glibc-stdint.h sparc/default64.h sparc/linux64.h sparc/tso.h\"\n \textra_options=\"${extra_options} sparc/long-double-switch.opt\"\n \ttmake_file=\"${tmake_file} sparc/t-sparc sparc/t-linux64\"\n \t;;\n sparc64-*-freebsd*|ultrasparc-*-freebsd*)\n-\ttm_file=\"${tm_file} ${fbsd_tm_file} dbxelf.h elfos.h sparc/sysv4.h sparc/freebsd.h\"\n+\ttm_file=\"${tm_file} ${fbsd_tm_file} elfos.h sparc/sysv4.h sparc/freebsd.h\"\n \textra_options=\"${extra_options} sparc/long-double-switch.opt\"\n \tcase \"x$with_cpu\" in\n \t\txultrasparc) ;;\n@@ -3363,13 +3363,13 @@ sparc64-*-freebsd*|ultrasparc-*-freebsd*)\n \t;;\n sparc64-*-netbsd*)\n \ttm_file=\"sparc/biarch64.h ${tm_file}\"\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h sparc/sysv4.h ${nbsd_tm_file} sparc/netbsd-elf.h\"\n+\ttm_file=\"${tm_file} elfos.h sparc/sysv4.h ${nbsd_tm_file} sparc/netbsd-elf.h\"\n \textra_options=\"${extra_options} netbsd.opt netbsd-elf.opt\"\n \textra_options=\"${extra_options} sparc/long-double-switch.opt\"\n \ttmake_file=\"${tmake_file} sparc/t-sparc sparc/t-netbsd64\"\n \t;;\n sparc64-*-openbsd*)\n-\ttm_file=\"sparc/openbsd1-64.h ${tm_file} dbxelf.h elfos.h sparc/sysv4.h sparc/sp64-elf.h\"\n+\ttm_file=\"sparc/openbsd1-64.h ${tm_file} elfos.h sparc/sysv4.h sparc/sp64-elf.h\"\n \ttm_file=\"${tm_file} openbsd.h openbsd-stdint.h openbsd-libpthread.h sparc/openbsd64.h\"\n \textra_options=\"${extra_options} openbsd.opt\"\n \textra_options=\"${extra_options}\"\n@@ -3379,13 +3379,13 @@ sparc64-*-openbsd*)\n \t;;\n tic6x-*-elf)\n \ttm_file=\"elfos.h ${tm_file} c6x/elf-common.h c6x/elf.h\"\n-\ttm_file=\"${tm_file} dbxelf.h tm-dwarf2.h newlib-stdint.h\"\n+\ttm_file=\"${tm_file} tm-dwarf2.h newlib-stdint.h\"\n \ttmake_file=\"c6x/t-c6x c6x/t-c6x-elf\"\n \tuse_collect2=no\n \t;;\n tic6x-*-uclinux)\n \ttm_file=\"elfos.h ${tm_file} gnu-user.h linux.h c6x/elf-common.h c6x/uclinux-elf.h\"\n-\ttm_file=\"${tm_file} dbxelf.h tm-dwarf2.h glibc-stdint.h\"\n+\ttm_file=\"${tm_file} tm-dwarf2.h glibc-stdint.h\"\n \ttm_file=\"${tm_file} ./sysroot-suffix.h\"\n \ttmake_file=\"t-sysroot-suffix t-slibgcc\"\n \ttmake_file=\"${tmake_file} c6x/t-c6x c6x/t-c6x-elf c6x/t-c6x-uclinux\"\n@@ -3429,7 +3429,7 @@ v850*-*-*)\n \tuse_gcc_stdint=wrap\n \t;;\n vax-*-linux*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h gnu-user.h linux.h vax/elf.h vax/linux.h\"\n+\ttm_file=\"${tm_file} elfos.h gnu-user.h linux.h vax/elf.h vax/linux.h\"\n \textra_options=\"${extra_options} vax/elf.opt\"\n \t;;\n vax-*-netbsdelf*)\n@@ -3438,12 +3438,12 @@ vax-*-netbsdelf*)\n \ttm_defines=\"${tm_defines} CHAR_FAST8=1 SHORT_FAST16=1\"\n \t;;\n visium-*-elf*)\n-\ttm_file=\"dbxelf.h elfos.h ${tm_file} visium/elf.h newlib-stdint.h\"\n+\ttm_file=\"elfos.h ${tm_file} visium/elf.h newlib-stdint.h\"\n \ttmake_file=\"visium/t-visium visium/t-crtstuff\"\n \t;;\n xstormy16-*-elf)\n \t# For historical reasons, the target files omit the 'x'.\n-\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h stormy16/stormy16.h\"\n+\ttm_file=\"elfos.h newlib-stdint.h stormy16/stormy16.h\"\n \ttm_p_file=stormy16/stormy16-protos.h\n \ttm_d_file=\"elfos.h stormy16/stormy16.h\"\n \tmd_file=stormy16/stormy16.md"}, {"sha": "9c53319b54497438e80cc9fb640019167b2ee26b", "filename": "gcc/config.in", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -452,12 +452,6 @@\n #endif\n \n \n-/* Define if your assembler supports the --gstabs option. */\n-#ifndef USED_FOR_TARGET\n-#undef HAVE_AS_GSTABS_DEBUG_FLAG\n-#endif\n-\n-\n /* Define if your assembler supports the Sun syntax for cmov. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_AS_IX86_CMOV_SUN_SYNTAX\n@@ -746,12 +740,6 @@\n #endif\n \n \n-/* Define if your assembler supports .stabs. */\n-#ifndef USED_FOR_TARGET\n-#undef HAVE_AS_STABS_DIRECTIVE\n-#endif\n-\n-\n /* Define if your assembler and linker support thread-local storage. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_AS_TLS\n@@ -2111,13 +2099,6 @@\n #endif\n \n \n-/* Define if your assembler supports AIX debug frame section label reference.\n-   */\n-#ifndef USED_FOR_TARGET\n-#undef HAVE_XCOFF_DWARF_EXTRAS\n-#endif\n-\n-\n /* Define if you have a working <zstd.h> header file. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_ZSTD_H"}, {"sha": "8e05b1f1cbe83601928a7be7e4c644d30e3c869e", "filename": "gcc/config/aarch64/aarch64-elf.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Faarch64%2Faarch64-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Faarch64%2Faarch64-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-elf.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -144,7 +144,4 @@ ASM_MABI_SPEC\n #undef TYPE_OPERAND_FMT\n #define TYPE_OPERAND_FMT\t\"%%%s\"\n \n-/* Stabs debug not required.  */\n-#undef DBX_DEBUGGING_INFO\n-\n #endif /* GCC_AARCH64_ELF_H */"}, {"sha": "66c17149d4ddbaf64483d07d61baea3900cbd1dd", "filename": "gcc/config/alpha/alpha.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Falpha%2Falpha.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Falpha%2Falpha.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.cc?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -8458,10 +8458,6 @@ alpha_output_mi_thunk_osf (FILE *file, tree thunk_fndecl ATTRIBUTE_UNUSED,\n }\n #endif /* TARGET_ABI_OSF */\n \f\n-/* Debugging support.  */\n-\n-#include \"gstab.h\"\n-\n /* Name of the file containing the current function.  */\n \n static const char *current_function_file = \"\";"}, {"sha": "c9cd42e69f81597be3e01dbbfc4f2cfa3a99ce0e", "filename": "gcc/config/alpha/elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Falpha%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Falpha%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Felf.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -22,7 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n #define CC1_SPEC  \"%{G*}\"\n \n #undef  ASM_SPEC\n-#define ASM_SPEC  \"%{G*} %{relax:-relax} %{!gstabs*:-no-mdebug}%{gstabs*:-mdebug} %{mcpu=*:-m%*}\"\n+#define ASM_SPEC  \"%{G*} %{relax:-relax} %{mcpu=*:-m%*}\"\n \n /* Do not output a .file directive at the beginning of the input file.  */\n  "}, {"sha": "0cb560b8a3894406c66bb450421d76ef4cf9f21f", "filename": "gcc/config/arc/arc.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Farc%2Farc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Farc%2Farc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -1330,12 +1330,7 @@ do { \\\n \n /* Debugging information.  */\n \n-/* Generate DBX and DWARF debugging information.  */\n-#ifdef DBX_DEBUGGING_INFO\n-#undef DBX_DEBUGGING_INFO\n-#endif\n-#define DBX_DEBUGGING_INFO\n-\n+/* Generate DWARF debugging information.  */\n #ifdef DWARF2_DEBUGGING_INFO\n #undef DWARF2_DEBUGGING_INFO\n #endif\n@@ -1385,9 +1380,6 @@ do { \\\n \n #define EH_RETURN_STACKADJ_RTX   gen_rtx_REG (Pmode, 2)\n \n-/* Turn off splitting of long stabs.  */\n-#define DBX_CONTIN_LENGTH 0\n-\n /* Miscellaneous.  */\n \n /* Specify the machine mode that this machine uses"}, {"sha": "cfb8db52c59fb5178178a2bb419f0ffc51077ed3", "filename": "gcc/config/arm/aout.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Farm%2Faout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Farm%2Faout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faout.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -145,15 +145,6 @@\n #define NO_DOLLAR_IN_LABEL 1\n #endif\n \n-/* Generate DBX debugging information.  riscix.h will undefine this because\n-   the native assembler does not support stabs.  */\n-#define DBX_DEBUGGING_INFO 1\n-\n-/* Acorn dbx moans about continuation chars, so don't use any.  */\n-#ifndef DBX_CONTIN_LENGTH\n-#define DBX_CONTIN_LENGTH  0\n-#endif\n-\n /* Output a function label definition.  */\n #ifndef ASM_DECLARE_FUNCTION_NAME\n #define ASM_DECLARE_FUNCTION_NAME(STREAM, NAME, DECL)\t\\"}, {"sha": "ef1bba28077cd9e82e6d88aa847de8c0ce484356", "filename": "gcc/config/arm/netbsd-elf.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Farm%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Farm%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fnetbsd-elf.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -85,9 +85,6 @@\n #undef PTRDIFF_TYPE\n #define PTRDIFF_TYPE \"long int\"\n \n-/* We don't have any limit on the length as out debugger is GDB.  */\n-#undef DBX_CONTIN_LENGTH\n-\n /* NetBSD does its profiling differently to the Acorn compiler. We\n    don't need a word following the mcount call; and to skip it\n    requires either an assembly stub or use of fomit-frame-pointer when"}, {"sha": "d1b4f277c2e3db2c6c85187bdb9a6c98d35e7882", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 2, "deletions": 25, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -396,10 +396,10 @@ extern GTY(()) int darwin_ms_struct;\n \n #define DSYMUTIL_SPEC \\\n   \"%{!c:%{!E:%{!S:%{!r:%{!M:%{!MM:%{!fsyntax-only:%{!fdump=*:\\\n-     %{g*:%{!gctf:%{!gbtf:%{!gstabs*:%{%:debug-level-gt(0): -idsym \\\n+     %{g*:%{!gctf:%{!gbtf:%{%:debug-level-gt(0): -idsym \\\n        %{.c|.cc|.C|.cpp|.cp|.c++|.cxx|.CPP|.m|.mm|.s|.f|.f90|\\\n \t .f95|.f03|.f77|.for|.F|.F90|.F95|.F03|.d: -dsym }\\\n-      }}}}}\\\n+      }}}}\\\n    }}}}}}}}\"\n \n #define LINK_COMMAND_SPEC LINK_COMMAND_SPEC_A DSYMUTIL_SPEC\n@@ -583,14 +583,7 @@ extern GTY(()) int darwin_ms_struct;\n \"%{static} -arch %(darwin_arch) \" \\\n ASM_OPTIONS ASM_MMACOSX_VERSION_MIN_SPEC\n \n-#ifdef HAVE_AS_STABS_DIRECTIVE\n-/* We only pass a debug option to the assembler if that supports stabs, since\n-   dwarf is not uniformly supported in the assemblers.  */\n-#define ASM_DEBUG_SPEC  \"%{g*:%{%:debug-level-gt(0):%{!gdwarf*:--gstabs}}}\"\n-#else\n #define ASM_DEBUG_SPEC  \"\"\n-#endif\n-\n #undef  ASM_DEBUG_OPTION_SPEC\n #define ASM_DEBUG_OPTION_SPEC\t\"\"\n \n@@ -604,10 +597,6 @@ ASM_OPTIONS ASM_MMACOSX_VERSION_MIN_SPEC\n #define DWARF2_DEBUGGING_INFO 1\n #define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n \n-#ifdef HAVE_AS_STABS_DIRECTIVE\n-#define DBX_DEBUGGING_INFO 1\n-#endif\n-\n #define DEBUG_FRAME_SECTION\t  \"__DWARF,__debug_frame,regular,debug\"\n #define DEBUG_INFO_SECTION\t  \"__DWARF,__debug_info,regular,debug\"\n #define DEBUG_ABBREV_SECTION\t  \"__DWARF,__debug_abbrev,regular,debug\"\n@@ -639,18 +628,6 @@ ASM_OPTIONS ASM_MMACOSX_VERSION_MIN_SPEC\n                                ? \"__DWARF,__debug_gnu_pubt,regular,debug\" \\\n                                : \"__DWARF,__debug_pubtypes,regular,debug\")\n \n-/* When generating stabs debugging, use N_BINCL entries.  */\n-\n-#define DBX_USE_BINCL\n-\n-/* There is no limit to the length of stabs strings.  */\n-\n-#define DBX_CONTIN_LENGTH 0\n-\n-/* gdb needs a null N_SO at the end of each file for scattered loading.  */\n-\n-#define DBX_OUTPUT_NULL_N_SO_AT_MAIN_SOURCE_FILE_END\n-\n /* GCC's definition of 'one_only' is the same as its definition of 'weak'.  */\n #define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)\n "}, {"sha": "02b78c6bf3c17da2016a458e2a707ffdb76592e7", "filename": "gcc/config/dbxcoff.h", "status": "removed", "additions": 0, "deletions": 56, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Fconfig%2Fdbxcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Fconfig%2Fdbxcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdbxcoff.h?ref=0b0a3cdbff64d97e7de3e0e2c26e965708064193", "patch": "@@ -1,56 +0,0 @@\n-/* Definitions needed when using stabs embedded in COFF sections.\n-   Copyright (C) 1996-2022 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 3, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-/* This file may be included by any COFF target which wishes to\n-   support -gstabs generating stabs in sections, as produced by gas\n-   and understood by gdb.  */\n-\n-/* Output DBX (stabs) debugging information if doing -gstabs.  */\n-\n-#define DBX_DEBUGGING_INFO 1\n-\n-/* Be function-relative for block and source line stab directives.  */\n-\n-#define DBX_BLOCKS_FUNCTION_RELATIVE 1\n-\n-/* but, to make this work, functions must appear prior to line info.  */\n-\n-#define DBX_FUNCTION_FIRST\n-\n-/* Generate a blank trailing N_SO to mark the end of the .o file, since\n-   we can't depend upon the linker to mark .o file boundaries with\n-   embedded stabs.  */\n-\n-#define DBX_OUTPUT_NULL_N_SO_AT_MAIN_SOURCE_FILE_END\n-\n-/* Like block addresses, stabs line numbers are relative to the\n-   current function.  */\n-\n-#define DBX_LINES_FUNCTION_RELATIVE 1\n-\n-/* When generating stabs debugging, use N_BINCL entries.  */\n-\n-#undef DBX_USE_BINCL\n-#define DBX_USE_BINCL\n-\n-/* There is no limit to the length of stabs strings.  */\n-\n-#ifndef DBX_CONTIN_LENGTH\n-#define DBX_CONTIN_LENGTH 0\n-#endif"}, {"sha": "4b90e95bc7462071ee35ece7305ad53bc37965fe", "filename": "gcc/config/dbxelf.h", "status": "removed", "additions": 0, "deletions": 68, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Fconfig%2Fdbxelf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Fconfig%2Fdbxelf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdbxelf.h?ref=0b0a3cdbff64d97e7de3e0e2c26e965708064193", "patch": "@@ -1,68 +0,0 @@\n-/* Definitions needed when using stabs embedded in ELF sections.\n-   Copyright (C) 1999-2022 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 3, or (at your option)\n-any later version.\n-\n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-/* This file may be included by any ELF target which wishes to\n-   support -gstabs generating stabs in sections, as produced by gas\n-   and understood by gdb.  */\n-\n-#ifndef GCC_DBX_ELF_H\n-#define GCC_DBX_ELF_H\n-\n-/* Output DBX (stabs) debugging information if doing -gstabs.  */\n-\n-#define DBX_DEBUGGING_INFO 1\n-\n-/* Make LBRAC and RBRAC addresses relative to the start of the\n-   function.  The native Solaris stabs debugging format works this\n-   way, gdb expects it, and it reduces the number of relocation\n-   entries...  */\n-\n-#define DBX_BLOCKS_FUNCTION_RELATIVE 1\n-\n-/* ... but, to make this work, functions must appear prior to line info.  */\n-\n-#define DBX_FUNCTION_FIRST\n-\n-/* When generating stabs debugging, use N_BINCL entries.  */\n-\n-#define DBX_USE_BINCL\n-\n-/* There is no limit to the length of stabs strings.  */\n-\n-#ifndef DBX_CONTIN_LENGTH\n-#define DBX_CONTIN_LENGTH 0\n-#endif\n-\n-/* Like block addresses, stabs line numbers are relative to the\n-   current function.  */\n-\n-#define DBX_LINES_FUNCTION_RELATIVE 1\n-\n-/* Generate a blank trailing N_SO to mark the end of the .o file, since\n-   we can't depend upon the linker to mark .o file boundaries with\n-   embedded stabs.  */\n-\n-#define DBX_OUTPUT_NULL_N_SO_AT_MAIN_SOURCE_FILE_END\n-\n-#endif /* ! GCC_DBX_ELF_H */"}, {"sha": "7c6a7f33df21caa4a1c26d7bfe125a43bbc99b38", "filename": "gcc/config/epiphany/epiphany.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fepiphany%2Fepiphany.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fepiphany%2Fepiphany.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fepiphany.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -795,14 +795,9 @@ do \\\n \f\n /* Debugging information.  */\n \n-/* Generate DBX and DWARF debugging information.  */\n-#define DBX_DEBUGGING_INFO 1\n-\n+/* Generate DWARF debugging information.  */\n #undef PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n-\n-/* Turn off splitting of long stabs.  */\n-#define DBX_CONTIN_LENGTH 0\n \f\n /* Miscellaneous.  */\n "}, {"sha": "98d2810e975ff40e197608f90248f747ecb525be", "filename": "gcc/config/i386/bsd.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fi386%2Fbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fi386%2Fbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbsd.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -91,9 +91,3 @@ along with GCC; see the file COPYING3.  If not see\n /* The prefix to add to user-visible assembler symbols.  */\n \n #define USER_LABEL_PREFIX \"_\"\n-\n-/* Sequent has some changes in the format of DBX symbols.  */\n-#define DBX_NO_XREFS 1\n-\n-/* Don't split DBX symbols into continuations.  */\n-#define DBX_CONTIN_LENGTH 0"}, {"sha": "e0ffc75dc6d0a2f96bc756fa02efa14098ff277e", "filename": "gcc/config/i386/gas.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fi386%2Fgas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fi386%2Fgas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgas.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -36,10 +36,6 @@ along with GCC; see the file COPYING3.  If not see\n  * people who want both form will have to compile twice.\n  */\n \n-/* these come from i386/bsd.h, but are specific to sequent */\n-#undef DBX_NO_XREFS\n-#undef DBX_CONTIN_LENGTH\n-\n /* Output #ident as a .ident.  */\n \n #undef TARGET_ASM_OUTPUT_IDENT"}, {"sha": "69646625eaef8c5bcf8f3a3c70d5291a2df149e3", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -1426,8 +1426,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n \f\n /* Specific Options for DBX Output.  */\n \n-/* This is handled by dbxelf.h.  */\n-\n \f\n /* Open ended Hooks for DBX Output.  */\n "}, {"sha": "046c5110195597d7e0b0710ce2117cb307abd953", "filename": "gcc/config/ia64/sysv4.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fia64%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fia64%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fsysv4.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -30,9 +30,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #undef PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n \n-/* Stabs does not work properly for 64-bit targets.  */\n-#undef DBX_DEBUGGING_INFO\n-\n /* Various pseudo-ops for which the Intel assembler uses non-standard\n    definitions.  */\n "}, {"sha": "0c66c91f84078ed038f82629f5cc836f02bcc80e", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -146,10 +146,6 @@ along with GCC; see the file COPYING3.  If not see\n     fprintf (FILE, \"\\tjbsr _mcount\\n\");\t\t\t\t\t\\\n }\n \n-/* Do not break .stabs pseudos into continuations.  */\n-\n-#define DBX_CONTIN_LENGTH 0\n-\n /* 1 if N is a possible register number for a function value.  For\n    m68k/SVR4 allow d0, a0, or fp0 as return registers, for integral,\n    pointer, or floating types, respectively.  Reject fp0 if not using"}, {"sha": "ab998177de81883d60c675a8edab21f112177ccc", "filename": "gcc/config/m68k/openbsd.h", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fm68k%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fm68k%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fopenbsd.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -60,18 +60,6 @@ along with GCC; see the file COPYING3.  If not see\n /* Every structure or union's size must be a multiple of 2 bytes.  */\n #define STRUCTURE_SIZE_BOUNDARY 16\n \n-/* Specific options for DBX Output.  */\n-\n-/* This is BSD, so it wants DBX format.  */\n-#define DBX_DEBUGGING_INFO 1\n-\n-/* Do not break .stabs pseudos into continuations.  */\n-#define DBX_CONTIN_LENGTH 0\n-\n-/* This is the char to use for continuation (in case we need to turn\n-   continuation back on).  */\n-#define DBX_CONTIN_CHAR '?'\n-\n /* Stack & calling: aggregate returns.  */\n \n /* ??? This is traditional, but quite possibly wrong.  It appears to"}, {"sha": "47724950c3e35fa689dbeb8e48741bb263107198", "filename": "gcc/config/mips/mips.cc", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fmips%2Fmips.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fmips%2Fmips.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.cc?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -445,7 +445,6 @@ int num_source_filenames;\n const char *current_function_file = \"\";\n \n /* Arrays that map GCC register numbers to debugger register numbers.  */\n-int mips_dbx_regno[FIRST_PSEUDO_REGISTER];\n int mips_dwarf_regno[FIRST_PSEUDO_REGISTER];\n \n /* Information about the current function's epilogue, used only while\n@@ -9595,10 +9594,6 @@ mips_output_filename (FILE *stream, const char *name)\n       output_quoted_string (stream, name);\n       putc ('\\n', stream);\n     }\n-  /* If we are emitting stabs, let dbxout.cc handle this (except for\n-     the mips_output_filename_first_time case).  */\n-  else if (write_symbols == DBX_DEBUG)\n-    return;\n   else if (name != current_function_file\n \t   && strcmp (name, current_function_file) != 0)\n     {\n@@ -20505,24 +20500,13 @@ mips_option_override (void)\n \n   for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n     {\n-      mips_dbx_regno[i] = IGNORED_DWARF_REGNUM;\n       if (GP_REG_P (i) || FP_REG_P (i) || ALL_COP_REG_P (i))\n \tmips_dwarf_regno[i] = i;\n       else\n \tmips_dwarf_regno[i] = INVALID_REGNUM;\n     }\n \n-  start = GP_DBX_FIRST - GP_REG_FIRST;\n-  for (i = GP_REG_FIRST; i <= GP_REG_LAST; i++)\n-    mips_dbx_regno[i] = i + start;\n-\n-  start = FP_DBX_FIRST - FP_REG_FIRST;\n-  for (i = FP_REG_FIRST; i <= FP_REG_LAST; i++)\n-    mips_dbx_regno[i] = i + start;\n-\n   /* Accumulator debug registers use big-endian ordering.  */\n-  mips_dbx_regno[HI_REGNUM] = MD_DBX_FIRST + 0;\n-  mips_dbx_regno[LO_REGNUM] = MD_DBX_FIRST + 1;\n   mips_dwarf_regno[HI_REGNUM] = MD_REG_FIRST + 0;\n   mips_dwarf_regno[LO_REGNUM] = MD_REG_FIRST + 1;\n   for (i = DSP_ACC_REG_FIRST; i <= DSP_ACC_REG_LAST; i += 2)"}, {"sha": "85ea24c546eccf2e5b9c94ccb65982b2ddfe9a47", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -1384,9 +1384,7 @@ struct mips_cpu_info {\n #ifndef SUBTARGET_ASM_DEBUGGING_SPEC\n #define SUBTARGET_ASM_DEBUGGING_SPEC \"\\\n %{g} %{g0} %{g1} %{g2} %{g3} \\\n-%{ggdb:-g} %{ggdb0:-g0} %{ggdb1:-g1} %{ggdb2:-g2} %{ggdb3:-g3} \\\n-%{gstabs:-g} %{gstabs0:-g0} %{gstabs1:-g1} %{gstabs2:-g2} %{gstabs3:-g3} \\\n-%{gstabs+:-g} %{gstabs+0:-g0} %{gstabs+1:-g1} %{gstabs+2:-g2} %{gstabs+3:-g3}\"\n+%{ggdb:-g} %{ggdb0:-g0} %{ggdb1:-g1} %{ggdb2:-g2} %{ggdb3:-g3}\"\n #endif\n \n /* FP_ASM_SPEC represents the floating-point options that must be passed\n@@ -1508,7 +1506,6 @@ FP_ASM_SPEC \"\\\n #define SUBTARGET_EXTRA_SPECS\n #endif\n \f\n-#define DBX_DEBUGGING_INFO 1\t\t/* generate stabs (OSF/rose) */\n #define DWARF2_DEBUGGING_INFO 1         /* dwarf2 debugging info */\n \n #ifndef PREFERRED_DEBUGGING_TYPE\n@@ -1548,14 +1545,6 @@ FP_ASM_SPEC \"\\\n #define USER_LABEL_PREFIX\t\"\"\n #endif\n \n-/* On Sun 4, this limit is 2048.  We use 1500 to be safe,\n-   since the length can run past this up to a continuation point.  */\n-#undef DBX_CONTIN_LENGTH\n-#define DBX_CONTIN_LENGTH 1500\n-\n-/* How to renumber registers for dbx and gdb.  */\n-#define DBX_REGISTER_NUMBER(REGNO) mips_dbx_regno[REGNO]\n-\n /* The mapping from gcc register number to DWARF 2 CFA column number.  */\n #define DWARF_FRAME_REGNUM(REGNO) mips_dwarf_regno[REGNO]\n \n@@ -1869,20 +1858,17 @@ FP_ASM_SPEC \"\\\n #define GP_REG_FIRST 0\n #define GP_REG_LAST  31\n #define GP_REG_NUM   (GP_REG_LAST - GP_REG_FIRST + 1)\n-#define GP_DBX_FIRST 0\n #define K0_REG_NUM   (GP_REG_FIRST + 26)\n #define K1_REG_NUM   (GP_REG_FIRST + 27)\n #define KERNEL_REG_P(REGNO)\t(IN_RANGE (REGNO, K0_REG_NUM, K1_REG_NUM))\n \n #define FP_REG_FIRST 32\n #define FP_REG_LAST  63\n #define FP_REG_NUM   (FP_REG_LAST - FP_REG_FIRST + 1)\n-#define FP_DBX_FIRST ((write_symbols == DBX_DEBUG) ? 38 : 32)\n \n #define MD_REG_FIRST 64\n #define MD_REG_LAST  65\n #define MD_REG_NUM   (MD_REG_LAST - MD_REG_FIRST + 1)\n-#define MD_DBX_FIRST (FP_DBX_FIRST + FP_REG_NUM)\n \n #define MSA_REG_FIRST FP_REG_FIRST\n #define MSA_REG_LAST  FP_REG_LAST\n@@ -3221,7 +3207,6 @@ extern int num_source_filenames;\t/* current .file # */\n extern struct mips_asm_switch mips_noreorder;\n extern struct mips_asm_switch mips_nomacro;\n extern struct mips_asm_switch mips_noat;\n-extern int mips_dbx_regno[];\n extern int mips_dwarf_regno[];\n extern bool mips_split_p[];\n extern bool mips_split_hi_p[];"}, {"sha": "3634a49de3f49ab54161636df19dca142e29c5c3", "filename": "gcc/config/nvptx/nvptx.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fnvptx%2Fnvptx.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fnvptx%2Fnvptx.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.cc?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -52,7 +52,6 @@\n #include \"tm-preds.h\"\n #include \"tm-constrs.h\"\n #include \"langhooks.h\"\n-#include \"dbxout.h\"\n #include \"cfgrtl.h\"\n #include \"gimple.h\"\n #include \"stor-layout.h\""}, {"sha": "aa90ef734dec5459dce36dc11c50a046d53c1d6f", "filename": "gcc/config/openbsd.h", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fopenbsd.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -150,17 +150,6 @@ while (0)\n #undef TARGET_LIBC_HAS_FUNCTION\n #define TARGET_LIBC_HAS_FUNCTION default_libc_has_function\n \n-\f\n-/* Runtime target specification.  */\n-\n-/* Miscellaneous parameters.  */\n-\n-/* Controlling debugging info: dbx options.  */\n-\n-/* Don't use the `xsTAG;' construct in DBX output; OpenBSD systems that\n-   use DBX don't support it.  */\n-#define DBX_NO_XREFS\n-\n \f\n /* - we use . - _func instead of a local label,\n    - we put extra spaces in expressions such as "}, {"sha": "5157b7f30534d72db8ae94cfdccd8a451090b183", "filename": "gcc/config/pa/pa-64.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fpa%2Fpa-64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fpa%2Fpa-64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-64.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -65,10 +65,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef LONG_DOUBLE_TYPE_SIZE\n #define LONG_DOUBLE_TYPE_SIZE 128\n \n-/* Temporary until we figure out what to do with those *(&@$ 32bit\n-   relocs which appear in stabs.  */\n-#undef DBX_DEBUGGING_INFO\n-\n /* ?!? This needs to be made compile-time selectable.\n \n    The PA64 runtime model has arguments that grow to higher addresses"}, {"sha": "95787ab1df2d3bfc7f250c1ccde81d29eb977651", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -130,23 +130,13 @@ extern unsigned long total_code_bytes;\n    and the old mnemonics are dialect zero.  */\n #define ASSEMBLER_DIALECT (TARGET_PA_20 ? 1 : 0)\n \n-/* Override some settings from dbxelf.h.  */\n-\n /* We do not have to be compatible with dbx, so we enable gdb extensions\n    by default.  */\n #define DEFAULT_GDB_EXTENSIONS 1\n \n /* Select dwarf2 as the preferred debug format.  */\n #define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n \n-/* This used to be zero (no max length), but big enums and such can\n-   cause huge strings which killed gas.\n-\n-   We also have to avoid lossage in dbxout.cc -- it does not compute the\n-   string size accurately, so we are real conservative here.  */\n-#undef DBX_CONTIN_LENGTH\n-#define DBX_CONTIN_LENGTH 3000\n-\n /* GDB always assumes the current function's frame begins at the value\n    of the stack pointer upon entry to the current function.  Accessing\n    local variables and parameters passed on the stack is done using the"}, {"sha": "3efae0e1fa0acbf02698cdd0f7b54befb5e8316a", "filename": "gcc/config/pa/som.h", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fpa%2Fsom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fpa%2Fsom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fsom.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -21,21 +21,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef TARGET_SOM\n #define TARGET_SOM 1\n \n-/* With SOM we can only do STABS.  */\n-#undef PREFERRED_DEBUGGING_TYPE\n-#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n-\n-/* We do not use BINCL stabs in SOM.\n-   ??? If it does not hurt, we probably should to avoid useless divergence\n-   from other embedded stabs implementations.  */\n-#undef DBX_USE_BINCL\n-\n-#define DBX_LINES_FUNCTION_RELATIVE 1\n-\n-/* gdb needs a null N_SO at the end of each file for scattered loading.  */\n-\n-#define DBX_OUTPUT_NULL_N_SO_AT_MAIN_SOURCE_FILE_END\n-\n /* HPUX has a program 'chatr' to list the dependencies of dynamically\n    linked executables and shared libraries.  */\n #define LDD_SUFFIX \"chatr\""}, {"sha": "380223439a47d2aebf17c858cf5a5748a857b6b5", "filename": "gcc/config/pdp11/pdp11.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fpdp11%2Fpdp11.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fpdp11%2Fpdp11.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.cc?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -44,7 +44,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"calls.h\"\n #include \"expr.h\"\n #include \"builtins.h\"\n-#include \"dbxout.h\"\n #include \"explow.h\"\n #include \"expmed.h\"\n "}, {"sha": "1fa52e8c754492ad49c43e0920e8354e1c0f52a4", "filename": "gcc/config/pdp11/pdp11.h", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -51,12 +51,6 @@ along with GCC; see the file COPYING3.  If not see\n \n \n /* Generate DBX debugging information.  */\n-\n-#define DBX_DEBUGGING_INFO\n-\n-#undef PREFERRED_DEBUGGING_TYPE\n-#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n-\n #define TARGET_40_PLUS\t\t(TARGET_40 || TARGET_45)\n #define TARGET_10\t\t(! TARGET_40_PLUS)\n \n@@ -489,9 +483,6 @@ extern int current_first_parm_offset;\n /* Nonzero if access to memory by byte is no faster than by word.  */\n #define SLOW_BYTE_ACCESS 1\n \n-/* Do not break .stabs pseudos into continuations.  */\n-#define DBX_CONTIN_LENGTH 0\n-\n /* Give a comparison code (EQ, NE etc) and the first operand of a COMPARE,\n    return the mode to be used for the comparison.  */\n "}, {"sha": "65b950d4458d6f36d942f887181de4eba0ab3d57", "filename": "gcc/config/rs6000/rs6000-builtin.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.cc?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -51,9 +51,6 @@\n #include \"tree-ssa-propagate.h\"\n #include \"builtins.h\"\n #include \"tree-vector-builder.h\"\n-#if TARGET_XCOFF\n-#include \"xcoffout.h\"  /* get declarations of xcoff_*_section_name */\n-#endif\n #include \"ppc-auxv.h\"\n #include \"rs6000-internal.h\"\n "}, {"sha": "ac3cb7e3d3620bb871b1f77a5b6d5e2143d889b8", "filename": "gcc/config/rs6000/rs6000-call.cc", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Frs6000%2Frs6000-call.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Frs6000%2Frs6000-call.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-call.cc?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -61,20 +61,12 @@\n #include \"tree-ssa-propagate.h\"\n #include \"builtins.h\"\n #include \"tree-vector-builder.h\"\n-#if TARGET_XCOFF\n-#include \"xcoffout.h\"  /* get declarations of xcoff_*_section_name */\n-#endif\n #include \"ppc-auxv.h\"\n #include \"targhooks.h\"\n #include \"opts.h\"\n \n #include \"rs6000-internal.h\"\n \n-#if TARGET_MACHO\n-#include \"gstab.h\"  /* for N_SLINE */\n-#include \"dbxout.h\" /* dbxout_ */\n-#endif\n-\n #ifndef TARGET_PROFILE_KERNEL\n #define TARGET_PROFILE_KERNEL 0\n #endif"}, {"sha": "ddd849ebaf7c95b371acad1799d3ec53b890cb46", "filename": "gcc/config/rs6000/rs6000-logue.cc", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Frs6000%2Frs6000-logue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Frs6000%2Frs6000-logue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-logue.cc?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -47,10 +47,6 @@\n #include \"diagnostic-core.h\"\n #include \"alias.h\"\n #include \"rs6000-internal.h\"\n-#if TARGET_MACHO\n-#include \"gstab.h\"  /* for N_SLINE */\n-#include \"dbxout.h\" /* dbxout_ */\n-#endif\n \n static int rs6000_ra_ever_killed (void);\n static void is_altivec_return_reg (rtx, void *);\n@@ -5144,10 +5140,6 @@ macho_branch_islands (void)\n \t}\n       strcpy (tmp_buf, \"\\n\");\n       strcat (tmp_buf, label);\n-#if defined (DBX_DEBUGGING_INFO) || defined (XCOFF_DEBUGGING_INFO)\n-      if (write_symbols == DBX_DEBUG || write_symbols == XCOFF_DEBUG)\n-\tdbxout_stabd (N_SLINE, bi->line_number);\n-#endif /* DBX_DEBUGGING_INFO || XCOFF_DEBUGGING_INFO */\n       if (flag_pic)\n \t{\n \t  strcat (tmp_buf, \":\\n\\tmflr r0\\n\\tbcl 20,31,\");\n@@ -5181,10 +5173,6 @@ macho_branch_islands (void)\n \t  strcat (tmp_buf, \")\\n\\tmtctr r12\\n\\tbctr\");\n \t}\n       output_asm_insn (tmp_buf, 0);\n-#if defined (DBX_DEBUGGING_INFO) || defined (XCOFF_DEBUGGING_INFO)\n-      if (write_symbols == DBX_DEBUG || write_symbols == XCOFF_DEBUG)\n-\tdbxout_stabd (N_SLINE, bi->line_number);\n-#endif /* DBX_DEBUGGING_INFO || XCOFF_DEBUGGING_INFO */\n       branch_islands->pop ();\n     }\n }"}, {"sha": "fc67fabbe3d554f9474d840f2191415dbed6569b", "filename": "gcc/config/rs6000/rs6000.cc", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.cc?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -75,9 +75,6 @@\n #include \"ipa-prop.h\"\n #include \"ipa-fnsummary.h\"\n #include \"except.h\"\n-#if TARGET_XCOFF\n-#include \"xcoffout.h\"  /* get declarations of xcoff_*_section_name */\n-#endif\n #include \"case-cfn-macros.h\"\n #include \"ppc-auxv.h\"\n #include \"rs6000-internal.h\"\n@@ -3824,12 +3821,6 @@ rs6000_option_override_internal (bool global_init_p)\n   if (TARGET_DEBUG_REG || TARGET_DEBUG_TARGET)\n     rs6000_print_isa_options (stderr, 0, \"before defaults\", rs6000_isa_flags);\n \n-#ifdef XCOFF_DEBUGGING_INFO\n-  /* For AIX default to 64-bit DWARF.  */\n-  if (!OPTION_SET_P (dwarf_offset_size))\n-    dwarf_offset_size = POINTER_SIZE_UNITS;\n-#endif\n-\n   /* Handle explicit -mno-{altivec,vsx,power8-vector,power9-vector} and turn\n      off all of the options that depend on those flags.  */\n   ignore_masks = rs6000_disable_incompatible_switches ();\n@@ -20949,9 +20940,14 @@ rs6000_elf_file_end (void)\n \n #if TARGET_XCOFF\n \n-#ifndef HAVE_XCOFF_DWARF_EXTRAS\n-#define HAVE_XCOFF_DWARF_EXTRAS 0\n-#endif\n+/* Names of bss and data sections.  These should be unique names for each\n+   compilation unit.  */\n+\n+char *xcoff_bss_section_name;\n+char *xcoff_private_data_section_name;\n+char *xcoff_private_rodata_section_name;\n+char *xcoff_tls_data_section_name;\n+char *xcoff_read_only_section_name;\n \n static enum unwind_info_type\n rs6000_xcoff_debug_unwind_info (void)\n@@ -21466,9 +21462,7 @@ rs6000_xcoff_declare_function_name (FILE *file, const char *name, tree decl)\n \t\t\t\t\t\t\t&data, true);\n   if (!DECL_IGNORED_P (decl))\n     {\n-      if (write_symbols == DBX_DEBUG || write_symbols == XCOFF_DEBUG)\n-\txcoffout_declare_function (file, decl, buffer);\n-      else if (dwarf_debuginfo_p ())\n+      if (dwarf_debuginfo_p ())\n \t{\n \t  name = (*targetm.strip_name_encoding) (name);\n \t  fprintf (file, \"\\t.function .%s,.%s,2,0\\n\", name, name);"}, {"sha": "c8b7eb63317e66c319057e10b9e9a7a2fa2077b4", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -504,9 +504,6 @@ extern int fixuplabelno;\n #undef  PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n \n-/* Historically we have also supported stabs debugging.  */\n-#define DBX_DEBUGGING_INFO 1\n-\n #define TARGET_ENCODE_SECTION_INFO  rs6000_elf_encode_section_info\n #define TARGET_IN_SMALL_DATA_P  rs6000_elf_in_small_data_p\n \n@@ -515,11 +512,6 @@ extern int fixuplabelno;\n #define\tRS6000_OUTPUT_BASENAME(FILE, NAME)\t\\\n     assemble_name (FILE, NAME)\n \n-/* We have to output the stabs for the function name *first*, before\n-   outputting its label.  */\n-\n-#define\tDBX_FUNCTION_FIRST\n-\n /* This is the end of what might become sysv4dbx.h.  */\n \f\n #define TARGET_OS_SYSV_CPP_BUILTINS()\t\t\\"}, {"sha": "bafc57df59ad99f4f16f689eaa1f4391741acb8b", "filename": "gcc/config/rs6000/xcoff.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxcoff.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -21,9 +21,6 @@\n \n #define TARGET_OBJECT_FORMAT OBJECT_XCOFF\n \n-/* The RS/6000 uses the XCOFF format.  */\n-#define XCOFF_DEBUGGING_INFO 1\n-\n /* Define if the object format being used is COFF or a superset.  */\n #define OBJECT_FORMAT_COFF\n "}, {"sha": "77f84039cb16b4ef7d665f69422e5ca5666e7a1b", "filename": "gcc/config/rx/rx.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Frx%2Frx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Frx%2Frx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -623,7 +623,6 @@ typedef unsigned int CUMULATIVE_ARGS;\n #undef  PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n \n-#define DBX_DEBUGGING_INFO 1\n #define DWARF2_DEBUGGING_INFO 1\n \n #define INCOMING_FRAME_SP_OFFSET\t\t4"}, {"sha": "f0fd19f8854c9507b159eafe93adc8c547f957c9", "filename": "gcc/config/sh/elf.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fsh%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fsh%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Felf.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -67,9 +67,6 @@ along with GCC; see the file COPYING3.  If not see\n #define ASM_GENERATE_INTERNAL_LABEL(STRING, PREFIX, NUM) \\\n   sprintf ((STRING), \"*%s%s%ld\", LOCAL_LABEL_PREFIX, (PREFIX), (long)(NUM))\n \n-#define DBX_LINES_FUNCTION_RELATIVE 1\n-#define DBX_OUTPUT_NULL_N_SO_AT_MAIN_SOURCE_FILE_END\n-\n #undef STARTFILE_SPEC\n #define STARTFILE_SPEC \\\n   \"%{!shared: crt1.o%s} crti.o%s \\"}, {"sha": "fc7033082846db4f4f9c06cee5f4002ac486feed", "filename": "gcc/config/sol2.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -498,11 +498,7 @@ along with GCC; see the file COPYING3.  If not see\n \n #define AS_NEEDS_DASH_FOR_PIPED_INPUT\n \n-/* The Solaris assembler cannot grok .stabd directives.  */\n-#undef NO_DBX_BNSYM_ENSYM\n-#define NO_DBX_BNSYM_ENSYM 1\n #endif\n-\n /* Solaris has an implementation of __enable_execute_stack.  */\n #define HAVE_ENABLE_EXECUTE_STACK\n "}, {"sha": "73850a31f586892b3b3f1178ef0c60451108d492", "filename": "gcc/config/sparc/freebsd.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fsparc%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fsparc%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ffreebsd.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -109,12 +109,6 @@ along with GCC; see the file COPYING3.  If not see\n \n /************************[  Debugger stuff  ]*********************************/\n \n-/* This is the char to use for continuation (in case we need to turn\n-   continuation back on).  */\n-\n-#undef  DBX_CONTIN_CHAR\n-#define DBX_CONTIN_CHAR\t'?'\n-\n /* DWARF bits.  */\n \n /* Follow Irix 6 and not the Dwarf2 draft in using 64-bit offsets. "}, {"sha": "bee71fc18390ceb440abfd1b1b84e81fb80edd7f", "filename": "gcc/config/sparc/netbsd-elf.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fsparc%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fsparc%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fnetbsd-elf.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -46,11 +46,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef PTRDIFF_TYPE\n #define PTRDIFF_TYPE \"long int\"\n \n-/* This is the char to use for continuation (in case we need to turn\n-   continuation back on).  */\n-#undef DBX_CONTIN_CHAR\n-#define DBX_CONTIN_CHAR '?'\n-\n #undef  LOCAL_LABEL_PREFIX\n #define LOCAL_LABEL_PREFIX  \".\"\n "}, {"sha": "987340392dd0fd80e7866d86331b171de156e7ee", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -1510,14 +1510,6 @@ do {\t\t\t\t\t\t\t\t\t   \\\n #define ADDITIONAL_REGISTER_NAMES \\\n {{\"ccr\", SPARC_ICC_REG}, {\"cc\", SPARC_ICC_REG}}\n \n-/* On Sun 4, this limit is 2048.  We use 1000 to be safe, since the length\n-   can run past this up to a continuation point.  Once we used 1500, but\n-   a single entry in C++ can run more than 500 bytes, due to the length of\n-   mangled symbol names.  dbxout.cc should really be fixed to do\n-   continuations when they are actually needed instead of trying to\n-   guess...  */\n-#define DBX_CONTIN_LENGTH 1000\n-\n /* This is how to output a command to make the user-level label named NAME\n    defined for reference from other files.  */\n "}, {"sha": "28c1af59a99338c9ba7aa87c1fbdf1162055b2fa", "filename": "gcc/config/vax/vax.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fvax%2Fvax.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fvax%2Fvax.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.cc?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -247,9 +247,6 @@ static void\n vax_file_start (void)\n {\n   default_file_start ();\n-\n-  if (write_symbols == DBX_DEBUG)\n-    fprintf (asm_out_file, \"___vax_%c_doubles:\\n\", ASM_DOUBLE_CHAR);\n }\n \n /* We can use the BSD C library routines for the libgcc calls that are"}, {"sha": "12c51e53db6f46041506ff435a964e65768ee2e0", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -508,27 +508,6 @@ enum reg_class { NO_REGS, ALL_REGS, LIM_REG_CLASSES };\n     \"r8\", \"r9\", \"r10\", \"r11\", \"ap\", \"fp\", \"sp\", \"pc\",\t\\\n     \"psl\" }\n \n-/* This is BSD, so it wants DBX format.  */\n-\n-#define DBX_DEBUGGING_INFO 1\n-\n-/* Do not break .stabs pseudos into continuations.  */\n-\n-#define DBX_CONTIN_LENGTH 0\n-\n-/* This is the char to use for continuation (in case we need to turn\n-   continuation back on).  */\n-\n-#define DBX_CONTIN_CHAR '?'\n-\n-/* Don't use the `xsfoo;' construct in DBX output; this system\n-   doesn't support it.  */\n-\n-#define DBX_NO_XREFS\n-\n-/* Output the .stabs for a C `static' variable in the data section.  */\n-#define DBX_STATIC_STAB_DATA_SECTION\n-\n /* VAX specific: which type character is used for type double?  */\n \n #define ASM_DOUBLE_CHAR (TARGET_G_FLOAT ? 'g' : 'd')"}, {"sha": "bc27684375ad6723b30eb591db45447b5e037be3", "filename": "gcc/config/vx-common.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fvx-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfig%2Fvx-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvx-common.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -94,8 +94,6 @@ along with GCC; see the file COPYING3.  If not see\n #define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n \n /* None of these other formats is supported.  */\n-#undef DBX_DEBUGGING_INFO\n-#undef XCOFF_DEBUGGING_INFO\n #undef VMS_DEBUGGING_INFO\n \n /* ------------------------ Misc configuration bits ----------------------  */"}, {"sha": "2fd6b531862a2d0d9aa671146437b6dec95538f8", "filename": "gcc/configure", "status": "modified", "additions": 0, "deletions": 99, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -25098,38 +25098,6 @@ cat >>confdefs.h <<_ACEOF\n _ACEOF\n \n \n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for stabs directive\" >&5\n-$as_echo_n \"checking assembler for stabs directive... \" >&6; }\n-if ${gcc_cv_as_stabs_directive+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  gcc_cv_as_stabs_directive=no\n-  if test x$gcc_cv_as != x; then\n-    $as_echo '.stabs \"gcc2_compiled.\",60,0,0,0' > conftest.s\n-    if { ac_try='$gcc_cv_as $gcc_cv_as_flags  -o conftest.o conftest.s >&5'\n-  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; }; }\n-    then\n-\tgcc_cv_as_stabs_directive=yes\n-    else\n-      echo \"configure: failed program was\" >&5\n-      cat conftest.s >&5\n-    fi\n-    rm -f conftest.o conftest.s\n-  fi\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_stabs_directive\" >&5\n-$as_echo \"$gcc_cv_as_stabs_directive\" >&6; }\n-if test $gcc_cv_as_stabs_directive = yes; then\n-\n-$as_echo \"#define HAVE_AS_STABS_DIRECTIVE 1\" >>confdefs.h\n-\n-fi\n-\n-\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for COMDAT group support (GNU as)\" >&5\n $as_echo_n \"checking assembler for COMDAT group support (GNU as)... \" >&6; }\n if ${gcc_cv_as_comdat_group+:} false; then :\n@@ -28179,41 +28147,6 @@ if test $gcc_cv_as_aix_ref = yes; then\n \n $as_echo \"#define HAVE_AS_REF 1\" >>confdefs.h\n \n-fi\n-\n-\n-\t{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for AIX DWARF location lists section support\" >&5\n-$as_echo_n \"checking assembler for AIX DWARF location lists section support... \" >&6; }\n-if ${gcc_cv_as_aix_dwloc+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  gcc_cv_as_aix_dwloc=no\n-  if test x$gcc_cv_as != x; then\n-    $as_echo '\t.dwsect 0xA0000\n-\tLframe..0:\n-\t\t.vbyte 4,Lframe..0\n-\t  ' > conftest.s\n-    if { ac_try='$gcc_cv_as $gcc_cv_as_flags  -o conftest.o conftest.s >&5'\n-  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; }; }\n-    then\n-\tgcc_cv_as_aix_dwloc=yes\n-    else\n-      echo \"configure: failed program was\" >&5\n-      cat conftest.s >&5\n-    fi\n-    rm -f conftest.o conftest.s\n-  fi\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_aix_dwloc\" >&5\n-$as_echo \"$gcc_cv_as_aix_dwloc\" >&6; }\n-if test $gcc_cv_as_aix_dwloc = yes; then\n-\n-$as_echo \"#define HAVE_XCOFF_DWARF_EXTRAS 1\" >>confdefs.h\n-\n fi\n \n \t;;\n@@ -29711,38 +29644,6 @@ $as_echo \"#define HAVE_AS_WORKING_DWARF_N_FLAG 1\" >>confdefs.h\n    fi\n  fi\n \n- { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for --gstabs option\" >&5\n-$as_echo_n \"checking assembler for --gstabs option... \" >&6; }\n-if ${gcc_cv_as_gstabs_flag+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  gcc_cv_as_gstabs_flag=no\n-  if test x$gcc_cv_as != x; then\n-    $as_echo \"$insn\" > conftest.s\n-    if { ac_try='$gcc_cv_as $gcc_cv_as_flags --gstabs -o conftest.o conftest.s >&5'\n-  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; }; }\n-    then\n-\tgcc_cv_as_gstabs_flag=yes\n-    else\n-      echo \"configure: failed program was\" >&5\n-      cat conftest.s >&5\n-    fi\n-    rm -f conftest.o conftest.s\n-  fi\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_gstabs_flag\" >&5\n-$as_echo \"$gcc_cv_as_gstabs_flag\" >&6; }\n-if test $gcc_cv_as_gstabs_flag = yes; then\n-\n-$as_echo \"#define HAVE_AS_GSTABS_DEBUG_FLAG 1\" >>confdefs.h\n-\n-fi\n-\n-\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for --debug-prefix-map option\" >&5\n $as_echo_n \"checking assembler for --debug-prefix-map option... \" >&6; }\n if ${gcc_cv_as_debug_prefix_map_flag+:} false; then :"}, {"sha": "12b5e934d1ebcb35550c00aff5faf22c430279f4", "filename": "gcc/configure.ac", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -3512,11 +3512,6 @@ AC_DEFINE_UNQUOTED(HAVE_LD_ALIGNED_SHF_MERGE,\n   [`if test $gcc_cv_ld_aligned_shf_merge = yes; then echo 1; else echo 0; fi`],\n [Define 0/1 if your linker supports the SHF_MERGE flag with section alignment > 1.])\n \n-gcc_GAS_CHECK_FEATURE([stabs directive], gcc_cv_as_stabs_directive,,\n-[.stabs \"gcc2_compiled.\",60,0,0,0],,\n-[AC_DEFINE(HAVE_AS_STABS_DIRECTIVE, 1,\n-  [Define if your assembler supports .stabs.])])\n-\n gcc_GAS_CHECK_FEATURE([COMDAT group support (GNU as)],\n  gcc_cv_as_comdat_group,\n  [--fatal-warnings],\n@@ -5076,15 +5071,6 @@ LCF0:\n \t  ],,\n \t  [AC_DEFINE(HAVE_AS_REF, 1,\n \t    [Define if your assembler supports .ref])])\n-\n-\tgcc_GAS_CHECK_FEATURE([AIX DWARF location lists section support],\n-\t  gcc_cv_as_aix_dwloc,,\n-\t  [\t.dwsect 0xA0000\n-\tLframe..0:\n-\t\t.vbyte 4,Lframe..0\n-\t  ],,\n-\t  [AC_DEFINE(HAVE_XCOFF_DWARF_EXTRAS, 1,\n-\t    [Define if your assembler supports AIX debug frame section label reference.])])\n \t;;\n     esac\n     ;;\n@@ -5728,12 +5714,6 @@ foo:\n    fi\n  fi\n \n- gcc_GAS_CHECK_FEATURE([--gstabs option],\n-  gcc_cv_as_gstabs_flag,\n-  [--gstabs], [$insn],,\n-  [AC_DEFINE(HAVE_AS_GSTABS_DEBUG_FLAG, 1,\n-[Define if your assembler supports the --gstabs option.])])\n-\n  gcc_GAS_CHECK_FEATURE([--debug-prefix-map option],\n   gcc_cv_as_debug_prefix_map_flag,\n   [--debug-prefix-map /a=/b], [$insn],,"}, {"sha": "878d528dc9aa8f68ce7d7e0edd046d6912fde5b9", "filename": "gcc/dbxout.cc", "status": "removed", "additions": 0, "deletions": 3936, "changes": 3936, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Fdbxout.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Fdbxout.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.cc?ref=0b0a3cdbff64d97e7de3e0e2c26e965708064193"}, {"sha": "2c38e76c23877ba0f5cbd41a5a0cc36cb5f80261", "filename": "gcc/dbxout.h", "status": "removed", "additions": 0, "deletions": 60, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Fdbxout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Fdbxout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.h?ref=0b0a3cdbff64d97e7de3e0e2c26e965708064193", "patch": "@@ -1,60 +0,0 @@\n-/* dbxout.h - Various declarations for functions found in dbxout.cc\n-   Copyright (C) 1998-2022 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify it under\n-the terms of the GNU General Public License as published by the Free\n-Software Foundation; either version 3, or (at your option) any later\n-version.\n-\n-GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#ifndef GCC_DBXOUT_H\n-#define GCC_DBXOUT_H\n-\n-extern int dbxout_symbol (tree, int);\n-extern void dbxout_parms (tree);\n-extern void dbxout_reg_parms (tree);\n-extern int dbxout_syms (tree);\n-\n-extern void default_stabs_asm_out_destructor (rtx, int);\n-extern void default_stabs_asm_out_constructor (rtx, int);\n-\n-/* dbxout helper functions */\n-#if defined DBX_DEBUGGING_INFO || defined XCOFF_DEBUGGING_INFO\n-\n-extern void dbxout_int (int);\n-extern void dbxout_stabd (int, int);\n-extern void dbxout_begin_stabn (int);\n-extern void dbxout_begin_stabn_sline (int);\n-extern void dbxout_begin_empty_stabs (int);\n-extern void dbxout_begin_simple_stabs (const char *, int);\n-extern void dbxout_begin_simple_stabs_desc (const char *, int, int);\n-\n-extern void dbxout_stab_value_zero (void);\n-extern void dbxout_stab_value_label (const char *);\n-extern void dbxout_stab_value_label_diff (const char *, const char *);\n-extern void dbxout_stab_value_internal_label (const char *, int *);\n-extern void dbxout_stab_value_internal_label_diff (const char *, int *,\n-\t\t\t\t\t\t   const char *);\n-#endif\n-\n-/* Language description for N_SO stabs.  */\n-#define N_SO_AS          1\n-#define N_SO_C           2\n-#define N_SO_ANSI_C      3\n-#define N_SO_CC          4 /* c++*/\n-#define N_SO_FORTRAN     5\n-#define N_SO_FORTRAN90   7\n-#define N_SO_OBJC        50\n-#define N_SO_OBJCPLUS    51\n-\n-#endif /* GCC_DBXOUT_H */"}, {"sha": "fe85115d5f3082a843134c04eb19850cb3c65bbe", "filename": "gcc/debug.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fdebug.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fdebug.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdebug.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -238,7 +238,6 @@ extern void debug_nothing_tree_charstar_uhwi (tree, const char *,\n \n /* Hooks for various debug formats.  */\n extern const struct gcc_debug_hooks do_nothing_debug_hooks;\n-extern const struct gcc_debug_hooks dbx_debug_hooks;\n extern const struct gcc_debug_hooks xcoff_debug_hooks;\n extern const struct gcc_debug_hooks dwarf2_debug_hooks;\n extern const struct gcc_debug_hooks dwarf2_lineno_debug_hooks;"}, {"sha": "7df634522d261603c95b1429a8a26c23f880ebb0", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -3913,8 +3913,7 @@ on FreeBSD 7 or later) and the use of @code{__cxa_atexit} by default\n by GCC 4.5 and above.\n \n We support FreeBSD using the ELF file format with DWARF 2 debugging\n-for all CPU architectures.  You may use @option{-gstabs} instead of\n-@option{-g}, if you really want the old debugging format.  There are\n+for all CPU architectures.  There are\n no known issues with mixing object files and libraries with different\n debugging formats.  Otherwise, this release of GCC should now match\n more of the configuration used in the stock FreeBSD configuration of"}, {"sha": "218eb996d7895b3b36c02d671f6e27d50f480ee9", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 37, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -45,7 +45,7 @@ remainder.  @command{g++} accepts mostly the same options as @command{gcc}.\n @c man end\n @c man begin SEEALSO\n gpl(7), gfdl(7), fsf-funding(7),\n-cpp(1), gcov(1), as(1), ld(1), gdb(1), dbx(1)\n+cpp(1), gcov(1), as(1), ld(1), gdb(1)\n and the Info entries for @file{gcc}, @file{cpp}, @file{as},\n @file{ld}, @file{binutils} and @file{gdb}.\n @c man end\n@@ -496,15 +496,15 @@ Objective-C and Objective-C++ Dialects}.\n @gccoptlist{-g  -g@var{level}  -gdwarf  -gdwarf-@var{version} @gol\n -gbtf -gctf  -gctf@var{level} @gol\n -ggdb  -grecord-gcc-switches  -gno-record-gcc-switches @gol\n--gstabs  -gstabs+  -gstrict-dwarf  -gno-strict-dwarf @gol\n+-gstrict-dwarf  -gno-strict-dwarf @gol\n -gas-loc-support  -gno-as-loc-support @gol\n -gas-locview-support  -gno-as-locview-support @gol\n -gcolumn-info  -gno-column-info  -gdwarf32  -gdwarf64 @gol\n -gstatement-frontiers  -gno-statement-frontiers @gol\n -gvariable-location-views  -gno-variable-location-views @gol\n -ginternal-reset-location-views  -gno-internal-reset-location-views @gol\n -ginline-points  -gno-inline-points @gol\n--gvms  -gxcoff  -gxcoff+  -gz@r{[}=@var{type}@r{]} @gol\n+-gvms -gz@r{[}=@var{type}@r{]} @gol\n -gsplit-dwarf  -gdescribe-dies  -gno-describe-dies @gol\n -fdebug-prefix-map=@var{old}=@var{new}  -fdebug-types-section @gol\n -fno-eliminate-unused-debug-types @gol\n@@ -10707,10 +10707,8 @@ information.\n On most systems that use stabs format, @option{-g} enables use of extra\n debugging information that only GDB can use; this extra information\n makes debugging work better in GDB but probably makes other debuggers\n-crash or\n-refuse to read the program.  If you want to control for certain whether\n-to generate the extra information, use @option{-gstabs+}, @option{-gstabs},\n-@option{-gxcoff+}, @option{-gxcoff}, or @option{-gvms} (see below).\n+crash or refuse to read the program.  If you want to control for certain whether\n+to generate the extra information, use @option{-gvms} (see below).\n \n @item -ggdb\n @opindex ggdb\n@@ -10767,43 +10765,13 @@ information, but does not include type information.\n Level 2 produces type information for entities (functions, data objects etc.)\n at file-scope or global-scope only.\n \n-@item -gstabs\n-@opindex gstabs\n-Produce debugging information in stabs format (if that is supported),\n-without GDB extensions.  This is the format used by DBX on most BSD\n-systems.  On MIPS, Alpha and System V Release 4 systems this option\n-produces stabs debugging output that is not understood by DBX@.\n-On System V Release 4 systems this option requires the GNU assembler.\n-\n-@item -gstabs+\n-@opindex gstabs+\n-Produce debugging information in stabs format (if that is supported),\n-using GNU extensions understood only by the GNU debugger (GDB)@.  The\n-use of these extensions is likely to make other debuggers crash or\n-refuse to read the program.\n-\n-@item -gxcoff\n-@opindex gxcoff\n-Produce debugging information in XCOFF format (if that is supported).\n-This is the format used by the DBX debugger on IBM RS/6000 systems.\n-\n-@item -gxcoff+\n-@opindex gxcoff+\n-Produce debugging information in XCOFF format (if that is supported),\n-using GNU extensions understood only by the GNU debugger (GDB)@.  The\n-use of these extensions is likely to make other debuggers crash or\n-refuse to read the program, and may cause assemblers other than the GNU\n-assembler (GAS) to fail with an error.\n-\n @item -gvms\n @opindex gvms\n Produce debugging information in Alpha/VMS debug format (if that is\n supported).  This is the format used by DEBUG on Alpha/VMS systems.\n \n @item -g@var{level}\n @itemx -ggdb@var{level}\n-@itemx -gstabs@var{level}\n-@itemx -gxcoff@var{level}\n @itemx -gvms@var{level}\n Request debugging information and also use @var{level} to specify how\n much information.  The default level is 2."}, {"sha": "9e8b4f50ad6c7f8d393306531bd74fc14a8c642f", "filename": "gcc/doc/passes.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fdoc%2Fpasses.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fdoc%2Fpasses.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fpasses.texi?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -1184,7 +1184,7 @@ these files.\n \n This is run after final because it must output the stack slot offsets\n for pseudo registers that did not get hard registers.  Source files\n-are @file{dbxout.cc} for DBX symbol table format, @file{dwarfout.c} for\n+are @file{dwarfout.c} for\n DWARF symbol table format, files @file{dwarf2out.cc} and @file{dwarf2asm.cc}\n for DWARF2 symbol table format, and @file{vmsdbgout.cc} for VMS debug\n symbol table format."}, {"sha": "431b414cf5d86cf8f3dffb14eaef3fc56e68cfb9", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 5, "deletions": 215, "changes": 220, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -9919,9 +9919,6 @@ This describes how to specify debugging information.\n \n @menu\n * All Debuggers::      Macros that affect all debugging formats uniformly.\n-* DBX Options::        Macros enabling specific options in DBX format.\n-* DBX Hooks::          Hook macros for varying DBX format.\n-* File Names and DBX:: Macros controlling output of file names in DBX format.\n * DWARF::              Macros for DWARF format.\n * VMS Debug::          Macros for VMS debug format.\n * CTF Debug::          Macros for CTF debug format.\n@@ -9972,35 +9969,18 @@ having address @var{x} (an RTL expression).  The nominal offset is\n A C expression that returns the type of debugging output GCC should\n produce when the user specifies just @option{-g}.  Define\n this if you have arranged for GCC to support more than one format of\n-debugging output.  Currently, the allowable values are @code{DBX_DEBUG},\n-@code{DWARF2_DEBUG}, @code{XCOFF_DEBUG}, @code{VMS_DEBUG},\n+debugging output.  Currently, the allowable values are\n+@code{DWARF2_DEBUG}, @code{VMS_DEBUG},\n and @code{VMS_AND_DWARF2_DEBUG}.\n \n When the user specifies @option{-ggdb}, GCC normally also uses the\n value of this macro to select the debugging output format, but with two\n exceptions.  If @code{DWARF2_DEBUGGING_INFO} is defined, GCC uses the\n-value @code{DWARF2_DEBUG}.  Otherwise, if @code{DBX_DEBUGGING_INFO} is\n-defined, GCC uses @code{DBX_DEBUG}.\n+value @code{DWARF2_DEBUG}.\n \n The value of this macro only affects the default debugging output; the\n-user can always get a specific type of output by using @option{-gstabs},\n-@option{-gdwarf-2}, @option{-gxcoff}, or @option{-gvms}.\n-@end defmac\n-\n-@node DBX Options\n-@subsection Specific Options for DBX Output\n-\n-@c prevent bad page break with this line\n-These are specific options for DBX output.\n-\n-@defmac DBX_DEBUGGING_INFO\n-Define this macro if GCC should produce debugging output for DBX\n-in response to the @option{-g} option.\n-@end defmac\n-\n-@defmac XCOFF_DEBUGGING_INFO\n-Define this macro if GCC should produce XCOFF format debugging output\n-in response to the @option{-g} option.  This is a variant of DBX format.\n+user can always get a specific type of output by using  @option{-gdwarf-2},\n+or @option{-gvms}.\n @end defmac\n \n @defmac DEFAULT_GDB_EXTENSIONS\n@@ -10011,196 +9991,6 @@ macro, the default is 1: always generate the extended information\n if there is any occasion to.\n @end defmac\n \n-@defmac DEBUG_SYMS_TEXT\n-Define this macro if all @code{.stabs} commands should be output while\n-in the text section.\n-@end defmac\n-\n-@defmac ASM_STABS_OP\n-A C string constant, including spacing, naming the assembler pseudo op to\n-use instead of @code{\"\\t.stabs\\t\"} to define an ordinary debugging symbol.\n-If you don't define this macro, @code{\"\\t.stabs\\t\"} is used.  This macro\n-applies only to DBX debugging information format.\n-@end defmac\n-\n-@defmac ASM_STABD_OP\n-A C string constant, including spacing, naming the assembler pseudo op to\n-use instead of @code{\"\\t.stabd\\t\"} to define a debugging symbol whose\n-value is the current location.  If you don't define this macro,\n-@code{\"\\t.stabd\\t\"} is used.  This macro applies only to DBX debugging\n-information format.\n-@end defmac\n-\n-@defmac ASM_STABN_OP\n-A C string constant, including spacing, naming the assembler pseudo op to\n-use instead of @code{\"\\t.stabn\\t\"} to define a debugging symbol with no\n-name.  If you don't define this macro, @code{\"\\t.stabn\\t\"} is used.  This\n-macro applies only to DBX debugging information format.\n-@end defmac\n-\n-@defmac DBX_NO_XREFS\n-Define this macro if DBX on your system does not support the construct\n-@samp{xs@var{tagname}}.  On some systems, this construct is used to\n-describe a forward reference to a structure named @var{tagname}.\n-On other systems, this construct is not supported at all.\n-@end defmac\n-\n-@defmac DBX_CONTIN_LENGTH\n-A symbol name in DBX-format debugging information is normally\n-continued (split into two separate @code{.stabs} directives) when it\n-exceeds a certain length (by default, 80 characters).  On some\n-operating systems, DBX requires this splitting; on others, splitting\n-must not be done.  You can inhibit splitting by defining this macro\n-with the value zero.  You can override the default splitting-length by\n-defining this macro as an expression for the length you desire.\n-@end defmac\n-\n-@defmac DBX_CONTIN_CHAR\n-Normally continuation is indicated by adding a @samp{\\} character to\n-the end of a @code{.stabs} string when a continuation follows.  To use\n-a different character instead, define this macro as a character\n-constant for the character you want to use.  Do not define this macro\n-if backslash is correct for your system.\n-@end defmac\n-\n-@defmac DBX_STATIC_STAB_DATA_SECTION\n-Define this macro if it is necessary to go to the data section before\n-outputting the @samp{.stabs} pseudo-op for a non-global static\n-variable.\n-@end defmac\n-\n-@defmac DBX_TYPE_DECL_STABS_CODE\n-The value to use in the ``code'' field of the @code{.stabs} directive\n-for a typedef.  The default is @code{N_LSYM}.\n-@end defmac\n-\n-@defmac DBX_STATIC_CONST_VAR_CODE\n-The value to use in the ``code'' field of the @code{.stabs} directive\n-for a static variable located in the text section.  DBX format does not\n-provide any ``right'' way to do this.  The default is @code{N_FUN}.\n-@end defmac\n-\n-@defmac DBX_REGPARM_STABS_CODE\n-The value to use in the ``code'' field of the @code{.stabs} directive\n-for a parameter passed in registers.  DBX format does not provide any\n-``right'' way to do this.  The default is @code{N_RSYM}.\n-@end defmac\n-\n-@defmac DBX_REGPARM_STABS_LETTER\n-The letter to use in DBX symbol data to identify a symbol as a parameter\n-passed in registers.  DBX format does not customarily provide any way to\n-do this.  The default is @code{'P'}.\n-@end defmac\n-\n-@defmac DBX_FUNCTION_FIRST\n-Define this macro if the DBX information for a function and its\n-arguments should precede the assembler code for the function.  Normally,\n-in DBX format, the debugging information entirely follows the assembler\n-code.\n-@end defmac\n-\n-@defmac DBX_BLOCKS_FUNCTION_RELATIVE\n-Define this macro, with value 1, if the value of a symbol describing\n-the scope of a block (@code{N_LBRAC} or @code{N_RBRAC}) should be\n-relative to the start of the enclosing function.  Normally, GCC uses\n-an absolute address.\n-@end defmac\n-\n-@defmac DBX_LINES_FUNCTION_RELATIVE\n-Define this macro, with value 1, if the value of a symbol indicating\n-the current line number (@code{N_SLINE}) should be relative to the\n-start of the enclosing function.  Normally, GCC uses an absolute address.\n-@end defmac\n-\n-@defmac DBX_USE_BINCL\n-Define this macro if GCC should generate @code{N_BINCL} and\n-@code{N_EINCL} stabs for included header files, as on Sun systems.  This\n-macro also directs GCC to output a type number as a pair of a file\n-number and a type number within the file.  Normally, GCC does not\n-generate @code{N_BINCL} or @code{N_EINCL} stabs, and it outputs a single\n-number for a type number.\n-@end defmac\n-\n-@node DBX Hooks\n-@subsection Open-Ended Hooks for DBX Format\n-\n-@c prevent bad page break with this line\n-These are hooks for DBX format.\n-\n-@defmac DBX_OUTPUT_SOURCE_LINE (@var{stream}, @var{line}, @var{counter})\n-A C statement to output DBX debugging information before code for line\n-number @var{line} of the current source file to the stdio stream\n-@var{stream}.  @var{counter} is the number of time the macro was\n-invoked, including the current invocation; it is intended to generate\n-unique labels in the assembly output.\n-\n-This macro should not be defined if the default output is correct, or\n-if it can be made correct by defining @code{DBX_LINES_FUNCTION_RELATIVE}.\n-@end defmac\n-\n-@defmac NO_DBX_FUNCTION_END\n-Some stabs encapsulation formats (in particular ECOFF), cannot handle the\n-@code{.stabs \"\",N_FUN,,0,0,Lscope-function-1} gdb dbx extension construct.\n-On those machines, define this macro to turn this feature off without\n-disturbing the rest of the gdb extensions.\n-@end defmac\n-\n-@defmac NO_DBX_BNSYM_ENSYM\n-Some assemblers cannot handle the @code{.stabd BNSYM/ENSYM,0,0} gdb dbx\n-extension construct.  On those machines, define this macro to turn this\n-feature off without disturbing the rest of the gdb extensions.\n-@end defmac\n-\n-@node File Names and DBX\n-@subsection File Names in DBX Format\n-\n-@c prevent bad page break with this line\n-This describes file names in DBX format.\n-\n-@defmac DBX_OUTPUT_MAIN_SOURCE_FILENAME (@var{stream}, @var{name})\n-A C statement to output DBX debugging information to the stdio stream\n-@var{stream}, which indicates that file @var{name} is the main source\n-file---the file specified as the input file for compilation.\n-This macro is called only once, at the beginning of compilation.\n-\n-This macro need not be defined if the standard form of output\n-for DBX debugging information is appropriate.\n-\n-It may be necessary to refer to a label equal to the beginning of the\n-text section.  You can use @samp{assemble_name (stream, ltext_label_name)}\n-to do so.  If you do this, you must also set the variable\n-@var{used_ltext_label_name} to @code{true}.\n-@end defmac\n-\n-@defmac NO_DBX_MAIN_SOURCE_DIRECTORY\n-Define this macro, with value 1, if GCC should not emit an indication\n-of the current directory for compilation and current source language at\n-the beginning of the file.\n-@end defmac\n-\n-@defmac NO_DBX_GCC_MARKER\n-Define this macro, with value 1, if GCC should not emit an indication\n-that this object file was compiled by GCC@.  The default is to emit\n-an @code{N_OPT} stab at the beginning of every source file, with\n-@samp{gcc2_compiled.} for the string and value 0.\n-@end defmac\n-\n-@defmac DBX_OUTPUT_MAIN_SOURCE_FILE_END (@var{stream}, @var{name})\n-A C statement to output DBX debugging information at the end of\n-compilation of the main source file @var{name}.  Output should be\n-written to the stdio stream @var{stream}.\n-\n-If you don't define this macro, nothing special is output at the end\n-of compilation, which is correct for most machines.\n-@end defmac\n-\n-@defmac DBX_OUTPUT_NULL_N_SO_AT_MAIN_SOURCE_FILE_END\n-Define this macro @emph{instead of} defining\n-@code{DBX_OUTPUT_MAIN_SOURCE_FILE_END}, if what needs to be output at\n-the end of compilation is an @code{N_SO} stab with an empty string,\n-whose value is the highest absolute text address in the file.\n-@end defmac\n-\n @need 2000\n @node DWARF\n @subsection Macros for DWARF Output"}, {"sha": "de0414d659265bd33700b90b5aeb468d25d91078", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 5, "deletions": 215, "changes": 220, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -6603,9 +6603,6 @@ This describes how to specify debugging information.\n \n @menu\n * All Debuggers::      Macros that affect all debugging formats uniformly.\n-* DBX Options::        Macros enabling specific options in DBX format.\n-* DBX Hooks::          Hook macros for varying DBX format.\n-* File Names and DBX:: Macros controlling output of file names in DBX format.\n * DWARF::              Macros for DWARF format.\n * VMS Debug::          Macros for VMS debug format.\n * CTF Debug::          Macros for CTF debug format.\n@@ -6656,35 +6653,18 @@ having address @var{x} (an RTL expression).  The nominal offset is\n A C expression that returns the type of debugging output GCC should\n produce when the user specifies just @option{-g}.  Define\n this if you have arranged for GCC to support more than one format of\n-debugging output.  Currently, the allowable values are @code{DBX_DEBUG},\n-@code{DWARF2_DEBUG}, @code{XCOFF_DEBUG}, @code{VMS_DEBUG},\n+debugging output.  Currently, the allowable values are\n+@code{DWARF2_DEBUG}, @code{VMS_DEBUG},\n and @code{VMS_AND_DWARF2_DEBUG}.\n \n When the user specifies @option{-ggdb}, GCC normally also uses the\n value of this macro to select the debugging output format, but with two\n exceptions.  If @code{DWARF2_DEBUGGING_INFO} is defined, GCC uses the\n-value @code{DWARF2_DEBUG}.  Otherwise, if @code{DBX_DEBUGGING_INFO} is\n-defined, GCC uses @code{DBX_DEBUG}.\n+value @code{DWARF2_DEBUG}.\n \n The value of this macro only affects the default debugging output; the\n-user can always get a specific type of output by using @option{-gstabs},\n-@option{-gdwarf-2}, @option{-gxcoff}, or @option{-gvms}.\n-@end defmac\n-\n-@node DBX Options\n-@subsection Specific Options for DBX Output\n-\n-@c prevent bad page break with this line\n-These are specific options for DBX output.\n-\n-@defmac DBX_DEBUGGING_INFO\n-Define this macro if GCC should produce debugging output for DBX\n-in response to the @option{-g} option.\n-@end defmac\n-\n-@defmac XCOFF_DEBUGGING_INFO\n-Define this macro if GCC should produce XCOFF format debugging output\n-in response to the @option{-g} option.  This is a variant of DBX format.\n+user can always get a specific type of output by using  @option{-gdwarf-2},\n+or @option{-gvms}.\n @end defmac\n \n @defmac DEFAULT_GDB_EXTENSIONS\n@@ -6695,196 +6675,6 @@ macro, the default is 1: always generate the extended information\n if there is any occasion to.\n @end defmac\n \n-@defmac DEBUG_SYMS_TEXT\n-Define this macro if all @code{.stabs} commands should be output while\n-in the text section.\n-@end defmac\n-\n-@defmac ASM_STABS_OP\n-A C string constant, including spacing, naming the assembler pseudo op to\n-use instead of @code{\"\\t.stabs\\t\"} to define an ordinary debugging symbol.\n-If you don't define this macro, @code{\"\\t.stabs\\t\"} is used.  This macro\n-applies only to DBX debugging information format.\n-@end defmac\n-\n-@defmac ASM_STABD_OP\n-A C string constant, including spacing, naming the assembler pseudo op to\n-use instead of @code{\"\\t.stabd\\t\"} to define a debugging symbol whose\n-value is the current location.  If you don't define this macro,\n-@code{\"\\t.stabd\\t\"} is used.  This macro applies only to DBX debugging\n-information format.\n-@end defmac\n-\n-@defmac ASM_STABN_OP\n-A C string constant, including spacing, naming the assembler pseudo op to\n-use instead of @code{\"\\t.stabn\\t\"} to define a debugging symbol with no\n-name.  If you don't define this macro, @code{\"\\t.stabn\\t\"} is used.  This\n-macro applies only to DBX debugging information format.\n-@end defmac\n-\n-@defmac DBX_NO_XREFS\n-Define this macro if DBX on your system does not support the construct\n-@samp{xs@var{tagname}}.  On some systems, this construct is used to\n-describe a forward reference to a structure named @var{tagname}.\n-On other systems, this construct is not supported at all.\n-@end defmac\n-\n-@defmac DBX_CONTIN_LENGTH\n-A symbol name in DBX-format debugging information is normally\n-continued (split into two separate @code{.stabs} directives) when it\n-exceeds a certain length (by default, 80 characters).  On some\n-operating systems, DBX requires this splitting; on others, splitting\n-must not be done.  You can inhibit splitting by defining this macro\n-with the value zero.  You can override the default splitting-length by\n-defining this macro as an expression for the length you desire.\n-@end defmac\n-\n-@defmac DBX_CONTIN_CHAR\n-Normally continuation is indicated by adding a @samp{\\} character to\n-the end of a @code{.stabs} string when a continuation follows.  To use\n-a different character instead, define this macro as a character\n-constant for the character you want to use.  Do not define this macro\n-if backslash is correct for your system.\n-@end defmac\n-\n-@defmac DBX_STATIC_STAB_DATA_SECTION\n-Define this macro if it is necessary to go to the data section before\n-outputting the @samp{.stabs} pseudo-op for a non-global static\n-variable.\n-@end defmac\n-\n-@defmac DBX_TYPE_DECL_STABS_CODE\n-The value to use in the ``code'' field of the @code{.stabs} directive\n-for a typedef.  The default is @code{N_LSYM}.\n-@end defmac\n-\n-@defmac DBX_STATIC_CONST_VAR_CODE\n-The value to use in the ``code'' field of the @code{.stabs} directive\n-for a static variable located in the text section.  DBX format does not\n-provide any ``right'' way to do this.  The default is @code{N_FUN}.\n-@end defmac\n-\n-@defmac DBX_REGPARM_STABS_CODE\n-The value to use in the ``code'' field of the @code{.stabs} directive\n-for a parameter passed in registers.  DBX format does not provide any\n-``right'' way to do this.  The default is @code{N_RSYM}.\n-@end defmac\n-\n-@defmac DBX_REGPARM_STABS_LETTER\n-The letter to use in DBX symbol data to identify a symbol as a parameter\n-passed in registers.  DBX format does not customarily provide any way to\n-do this.  The default is @code{'P'}.\n-@end defmac\n-\n-@defmac DBX_FUNCTION_FIRST\n-Define this macro if the DBX information for a function and its\n-arguments should precede the assembler code for the function.  Normally,\n-in DBX format, the debugging information entirely follows the assembler\n-code.\n-@end defmac\n-\n-@defmac DBX_BLOCKS_FUNCTION_RELATIVE\n-Define this macro, with value 1, if the value of a symbol describing\n-the scope of a block (@code{N_LBRAC} or @code{N_RBRAC}) should be\n-relative to the start of the enclosing function.  Normally, GCC uses\n-an absolute address.\n-@end defmac\n-\n-@defmac DBX_LINES_FUNCTION_RELATIVE\n-Define this macro, with value 1, if the value of a symbol indicating\n-the current line number (@code{N_SLINE}) should be relative to the\n-start of the enclosing function.  Normally, GCC uses an absolute address.\n-@end defmac\n-\n-@defmac DBX_USE_BINCL\n-Define this macro if GCC should generate @code{N_BINCL} and\n-@code{N_EINCL} stabs for included header files, as on Sun systems.  This\n-macro also directs GCC to output a type number as a pair of a file\n-number and a type number within the file.  Normally, GCC does not\n-generate @code{N_BINCL} or @code{N_EINCL} stabs, and it outputs a single\n-number for a type number.\n-@end defmac\n-\n-@node DBX Hooks\n-@subsection Open-Ended Hooks for DBX Format\n-\n-@c prevent bad page break with this line\n-These are hooks for DBX format.\n-\n-@defmac DBX_OUTPUT_SOURCE_LINE (@var{stream}, @var{line}, @var{counter})\n-A C statement to output DBX debugging information before code for line\n-number @var{line} of the current source file to the stdio stream\n-@var{stream}.  @var{counter} is the number of time the macro was\n-invoked, including the current invocation; it is intended to generate\n-unique labels in the assembly output.\n-\n-This macro should not be defined if the default output is correct, or\n-if it can be made correct by defining @code{DBX_LINES_FUNCTION_RELATIVE}.\n-@end defmac\n-\n-@defmac NO_DBX_FUNCTION_END\n-Some stabs encapsulation formats (in particular ECOFF), cannot handle the\n-@code{.stabs \"\",N_FUN,,0,0,Lscope-function-1} gdb dbx extension construct.\n-On those machines, define this macro to turn this feature off without\n-disturbing the rest of the gdb extensions.\n-@end defmac\n-\n-@defmac NO_DBX_BNSYM_ENSYM\n-Some assemblers cannot handle the @code{.stabd BNSYM/ENSYM,0,0} gdb dbx\n-extension construct.  On those machines, define this macro to turn this\n-feature off without disturbing the rest of the gdb extensions.\n-@end defmac\n-\n-@node File Names and DBX\n-@subsection File Names in DBX Format\n-\n-@c prevent bad page break with this line\n-This describes file names in DBX format.\n-\n-@defmac DBX_OUTPUT_MAIN_SOURCE_FILENAME (@var{stream}, @var{name})\n-A C statement to output DBX debugging information to the stdio stream\n-@var{stream}, which indicates that file @var{name} is the main source\n-file---the file specified as the input file for compilation.\n-This macro is called only once, at the beginning of compilation.\n-\n-This macro need not be defined if the standard form of output\n-for DBX debugging information is appropriate.\n-\n-It may be necessary to refer to a label equal to the beginning of the\n-text section.  You can use @samp{assemble_name (stream, ltext_label_name)}\n-to do so.  If you do this, you must also set the variable\n-@var{used_ltext_label_name} to @code{true}.\n-@end defmac\n-\n-@defmac NO_DBX_MAIN_SOURCE_DIRECTORY\n-Define this macro, with value 1, if GCC should not emit an indication\n-of the current directory for compilation and current source language at\n-the beginning of the file.\n-@end defmac\n-\n-@defmac NO_DBX_GCC_MARKER\n-Define this macro, with value 1, if GCC should not emit an indication\n-that this object file was compiled by GCC@.  The default is to emit\n-an @code{N_OPT} stab at the beginning of every source file, with\n-@samp{gcc2_compiled.} for the string and value 0.\n-@end defmac\n-\n-@defmac DBX_OUTPUT_MAIN_SOURCE_FILE_END (@var{stream}, @var{name})\n-A C statement to output DBX debugging information at the end of\n-compilation of the main source file @var{name}.  Output should be\n-written to the stdio stream @var{stream}.\n-\n-If you don't define this macro, nothing special is output at the end\n-of compilation, which is correct for most machines.\n-@end defmac\n-\n-@defmac DBX_OUTPUT_NULL_N_SO_AT_MAIN_SOURCE_FILE_END\n-Define this macro @emph{instead of} defining\n-@code{DBX_OUTPUT_MAIN_SOURCE_FILE_END}, if what needs to be output at\n-the end of compilation is an @code{N_SO} stab with an empty string,\n-whose value is the highest absolute text address in the file.\n-@end defmac\n-\n @need 2000\n @node DWARF\n @subsection Macros for DWARF Output"}, {"sha": "7eac83f7b0f3340d270e6938b3cc76c7c3a13b3c", "filename": "gcc/dwarf2asm.cc", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fdwarf2asm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fdwarf2asm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2asm.cc?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -35,10 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"emit-rtl.h\"\n #include \"fold-const.h\"\n \n-#ifndef XCOFF_DEBUGGING_INFO\n-#define XCOFF_DEBUGGING_INFO 0\n-#endif\n-\n \f\n /* Output an unaligned integer with the given value and size.  Prefer not\n    to print a newline, since the caller may want to add a comment.  */\n@@ -384,16 +380,13 @@ dw2_asm_output_nstring (const char *str, size_t orig_len,\n \n   if (flag_debug_asm && comment)\n     {\n-      if (XCOFF_DEBUGGING_INFO)\n-\tfputs (\"\\t.byte \\\"\", asm_out_file);\n-      else\n-\tfputs (\"\\t.ascii \\\"\", asm_out_file);\n+      fputs (\"\\t.ascii \\\"\", asm_out_file);\n \n       for (i = 0; i < len; i++)\n \t{\n \t  int c = str[i];\n \t  if (c == '\\\"')\n-\t    fputc (XCOFF_DEBUGGING_INFO ? '\\\"' : '\\\\', asm_out_file);\n+\t    fputc ('\\\\', asm_out_file);\n \t  else if (c == '\\\\')\n \t    fputc ('\\\\', asm_out_file);\n \t  if (ISPRINT (c))\n@@ -913,7 +906,7 @@ static GTY(()) hash_map<const char *, tree> *indirect_pool;\n static GTY(()) int dw2_const_labelno;\n \n #if defined(HAVE_GAS_HIDDEN)\n-# define USE_LINKONCE_INDIRECT (SUPPORTS_ONE_ONLY && !XCOFF_DEBUGGING_INFO)\n+# define USE_LINKONCE_INDIRECT (SUPPORTS_ONE_ONLY)\n #else\n # define USE_LINKONCE_INDIRECT 0\n #endif"}, {"sha": "9e2fa9681a02ce947fcdeeed62ec9bdbea128282", "filename": "gcc/dwarf2out.cc", "status": "modified", "additions": 32, "deletions": 71, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fdwarf2out.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fdwarf2out.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.cc?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -105,14 +105,6 @@ static rtx_insn *cached_next_real_insn;\n static void dwarf2out_decl (tree);\n static bool is_redundant_typedef (const_tree);\n \n-#ifndef XCOFF_DEBUGGING_INFO\n-#define XCOFF_DEBUGGING_INFO 0\n-#endif\n-\n-#ifndef HAVE_XCOFF_DWARF_EXTRAS\n-#define HAVE_XCOFF_DWARF_EXTRAS 0\n-#endif\n-\n #ifdef VMS_DEBUGGING_INFO\n int vms_file_stats_name (const char *, long long *, long *, char *, int *);\n \n@@ -608,14 +600,11 @@ output_fde (dw_fde_ref fde, bool for_eh, bool second,\n \t\t\t\t  for_eh + j);\n   ASM_GENERATE_INTERNAL_LABEL (l1, FDE_AFTER_SIZE_LABEL, for_eh + j);\n   ASM_GENERATE_INTERNAL_LABEL (l2, FDE_END_LABEL, for_eh + j);\n-  if (!XCOFF_DEBUGGING_INFO || for_eh)\n-    {\n-      if (DWARF_INITIAL_LENGTH_SIZE - dwarf_offset_size == 4 && !for_eh)\n-\tdw2_asm_output_data (4, 0xffffffff, \"Initial length escape value\"\n-\t\t\t     \" indicating 64-bit DWARF extension\");\n-      dw2_asm_output_delta (for_eh ? 4 : dwarf_offset_size, l2, l1,\n-\t\t\t    \"FDE Length\");\n-    }\n+  if (DWARF_INITIAL_LENGTH_SIZE - dwarf_offset_size == 4 && !for_eh)\n+    dw2_asm_output_data (4, 0xffffffff, \"Initial length escape value\"\n+\t\t\t \" indicating 64-bit DWARF extension\");\n+  dw2_asm_output_delta (for_eh ? 4 : dwarf_offset_size, l2, l1,\n+\t\t\t\"FDE Length\");\n   ASM_OUTPUT_LABEL (asm_out_file, l1);\n \n   if (for_eh)\n@@ -812,14 +801,11 @@ output_call_frame_info (int for_eh)\n   /* Output the CIE.  */\n   ASM_GENERATE_INTERNAL_LABEL (l1, CIE_AFTER_SIZE_LABEL, for_eh);\n   ASM_GENERATE_INTERNAL_LABEL (l2, CIE_END_LABEL, for_eh);\n-  if (!XCOFF_DEBUGGING_INFO || for_eh)\n-    {\n-      if (DWARF_INITIAL_LENGTH_SIZE - dwarf_offset_size == 4 && !for_eh)\n-\tdw2_asm_output_data (4, 0xffffffff,\n-\t  \"Initial length escape value indicating 64-bit DWARF extension\");\n-      dw2_asm_output_delta (for_eh ? 4 : dwarf_offset_size, l2, l1,\n-\t\t\t    \"Length of Common Information Entry\");\n-    }\n+  if (DWARF_INITIAL_LENGTH_SIZE - dwarf_offset_size == 4 && !for_eh)\n+    dw2_asm_output_data (4, 0xffffffff,\n+\t\t\t \"Initial length escape value indicating 64-bit DWARF extension\");\n+  dw2_asm_output_delta (for_eh ? 4 : dwarf_offset_size, l2, l1,\n+\t\t\t\"Length of Common Information Entry\");\n   ASM_OUTPUT_LABEL (asm_out_file, l1);\n \n   /* Now that the CIE pointer is PC-relative for EH,\n@@ -3679,8 +3665,7 @@ static GTY (()) vec<macinfo_entry, va_gc> *macinfo_table;\n /* True if .debug_macinfo or .debug_macros section is going to be\n    emitted.  */\n #define have_macinfo \\\n-  ((!XCOFF_DEBUGGING_INFO || HAVE_XCOFF_DWARF_EXTRAS) \\\n-   && debug_info_level >= DINFO_LEVEL_VERBOSE \\\n+   (debug_info_level >= DINFO_LEVEL_VERBOSE \\\n    && !macinfo_table->is_empty ())\n \n /* Vector of dies for which we should generate .debug_ranges info.  */\n@@ -4982,9 +4967,6 @@ add_AT_loc_list (dw_die_ref die, enum dwarf_attribute attr_kind, dw_loc_list_ref\n {\n   dw_attr_node attr;\n \n-  if (XCOFF_DEBUGGING_INFO && !HAVE_XCOFF_DWARF_EXTRAS)\n-    return;\n-\n   attr.dw_attr = attr_kind;\n   attr.dw_attr_val.val_class = dw_val_class_loc_list;\n   attr.dw_attr_val.val_entry = NULL;\n@@ -5008,9 +4990,6 @@ add_AT_view_list (dw_die_ref die, enum dwarf_attribute attr_kind)\n {\n   dw_attr_node attr;\n \n-  if (XCOFF_DEBUGGING_INFO && !HAVE_XCOFF_DWARF_EXTRAS)\n-    return;\n-\n   attr.dw_attr = attr_kind;\n   attr.dw_attr_val.val_class = dw_val_class_view_list;\n   attr.dw_attr_val.val_entry = NULL;\n@@ -11166,15 +11145,12 @@ output_dwarf_version ()\n static void\n output_compilation_unit_header (enum dwarf_unit_type ut)\n {\n-  if (!XCOFF_DEBUGGING_INFO)\n-    {\n-      if (DWARF_INITIAL_LENGTH_SIZE - dwarf_offset_size == 4)\n-\tdw2_asm_output_data (4, 0xffffffff,\n-\t  \"Initial length escape value indicating 64-bit DWARF extension\");\n-      dw2_asm_output_data (dwarf_offset_size,\n-\t\t\t   next_die_offset - DWARF_INITIAL_LENGTH_SIZE,\n-\t\t\t   \"Length of Compilation Unit Info\");\n-    }\n+  if (DWARF_INITIAL_LENGTH_SIZE - dwarf_offset_size == 4)\n+    dw2_asm_output_data (4, 0xffffffff,\n+      \"Initial length escape value indicating 64-bit DWARF extension\");\n+  dw2_asm_output_data (dwarf_offset_size,\n+\t\t       next_die_offset - DWARF_INITIAL_LENGTH_SIZE,\n+\t\t       \"Length of Compilation Unit Info\");\n \n   output_dwarf_version ();\n   if (dwarf_version >= 5)\n@@ -11683,14 +11659,11 @@ output_pubnames (vec<pubname_entry, va_gc> *names)\n   unsigned long pubnames_length = size_of_pubnames (names);\n   pubname_entry *pub;\n \n-  if (!XCOFF_DEBUGGING_INFO)\n-    {\n-      if (DWARF_INITIAL_LENGTH_SIZE - dwarf_offset_size == 4)\n-\tdw2_asm_output_data (4, 0xffffffff,\n-\t  \"Initial length escape value indicating 64-bit DWARF extension\");\n-      dw2_asm_output_data (dwarf_offset_size, pubnames_length,\n-\t\t\t   \"Pub Info Length\");\n-    }\n+  if (DWARF_INITIAL_LENGTH_SIZE - dwarf_offset_size == 4)\n+    dw2_asm_output_data (4, 0xffffffff,\n+\t\t\t \"Initial length escape value indicating 64-bit DWARF extension\");\n+  dw2_asm_output_data (dwarf_offset_size, pubnames_length,\n+\t\t       \"Pub Info Length\");\n \n   /* Version number for pubnames/pubtypes is independent of dwarf version.  */\n   dw2_asm_output_data (2, 2, \"DWARF pubnames/pubtypes version\");\n@@ -11765,14 +11738,11 @@ output_aranges (void)\n   unsigned i;\n   unsigned long aranges_length = size_of_aranges ();\n   \n-  if (!XCOFF_DEBUGGING_INFO)\n-    {\n-      if (DWARF_INITIAL_LENGTH_SIZE - dwarf_offset_size == 4)\n-\tdw2_asm_output_data (4, 0xffffffff,\n-\t  \"Initial length escape value indicating 64-bit DWARF extension\");\n-      dw2_asm_output_data (dwarf_offset_size, aranges_length,\n-\t\t\t   \"Length of Address Ranges Info\");\n-    }\n+  if (DWARF_INITIAL_LENGTH_SIZE - dwarf_offset_size == 4)\n+    dw2_asm_output_data (4, 0xffffffff,\n+\t\t\t \"Initial length escape value indicating 64-bit DWARF extension\");\n+  dw2_asm_output_data (dwarf_offset_size, aranges_length,\n+\t\t       \"Length of Address Ranges Info\");\n \n   /* Version number for aranges is still 2, even up to DWARF5.  */\n   dw2_asm_output_data (2, 2, \"DWARF aranges version\");\n@@ -13066,14 +13036,11 @@ output_line_info (bool prologue_only)\n   ASM_GENERATE_INTERNAL_LABEL (p2, LN_PROLOG_END_LABEL,\n \t\t\t       output_line_info_generation++);\n \n-  if (!XCOFF_DEBUGGING_INFO)\n-    {\n-      if (DWARF_INITIAL_LENGTH_SIZE - dwarf_offset_size == 4)\n-\tdw2_asm_output_data (4, 0xffffffff,\n-\t  \"Initial length escape value indicating 64-bit DWARF extension\");\n-      dw2_asm_output_delta (dwarf_offset_size, l2, l1,\n-\t\t\t    \"Length of Source Line Info\");\n-    }\n+  if (DWARF_INITIAL_LENGTH_SIZE - dwarf_offset_size == 4)\n+    dw2_asm_output_data (4, 0xffffffff,\n+\t\t\t \"Initial length escape value indicating 64-bit DWARF extension\");\n+  dw2_asm_output_delta (dwarf_offset_size, l2, l1,\n+\t\t\t\"Length of Source Line Info\");\n \n   ASM_OUTPUT_LABEL (asm_out_file, l1);\n \n@@ -29144,8 +29111,6 @@ output_macinfo (const char *debug_line_label, bool early_lto_debug)\n   /* AIX Assembler inserts the length, so adjust the reference to match the\n      offset expected by debuggers.  */\n   strcpy (dl_section_ref, debug_line_label);\n-  if (XCOFF_DEBUGGING_INFO)\n-    strcat (dl_section_ref, DWARF_INITIAL_LENGTH_SIZE_STR);\n \n   /* For .debug_macro emit the section header.  */\n   if (!dwarf_strict || dwarf_version >= 5)\n@@ -32350,8 +32315,6 @@ dwarf2out_finish (const char *filename)\n   /* AIX Assembler inserts the length, so adjust the reference to match the\n      offset expected by debuggers.  */\n   strcpy (dl_section_ref, debug_line_section_label);\n-  if (XCOFF_DEBUGGING_INFO)\n-    strcat (dl_section_ref, DWARF_INITIAL_LENGTH_SIZE_STR);\n \n   if (debug_info_level >= DINFO_LEVEL_TERSE)\n     add_AT_lineptr (main_comp_unit_die, DW_AT_stmt_list,\n@@ -33067,8 +33030,6 @@ dwarf2out_early_finish (const char *filename)\n   /* AIX Assembler inserts the length, so adjust the reference to match the\n      offset expected by debuggers.  */\n   strcpy (dl_section_ref, debug_line_section_label);\n-  if (XCOFF_DEBUGGING_INFO)\n-    strcat (dl_section_ref, DWARF_INITIAL_LENGTH_SIZE_STR);\n \n   if (debug_info_level >= DINFO_LEVEL_TERSE)\n     add_AT_lineptr (comp_unit_die (), DW_AT_stmt_list, dl_section_ref);"}, {"sha": "c0bfdf6c7bf3b16eea73ee7ba5862d0782732ef7", "filename": "gcc/final.cc", "status": "modified", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Ffinal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Ffinal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.cc?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -83,16 +83,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"function-abi.h\"\n #include \"common/common-target.h\"\n \n-#ifdef XCOFF_DEBUGGING_INFO\n-#include \"xcoffout.h\"\t\t/* Needed for external data declarations.  */\n-#endif\n-\n #include \"dwarf2out.h\"\n \n-#ifdef DBX_DEBUGGING_INFO\n-#include \"dbxout.h\"\n-#endif\n-\n /* Most ports don't need to define CC_STATUS_INIT.\n    So define a null default for it to save conditionalization later.  */\n #ifndef CC_STATUS_INIT\n@@ -2324,19 +2316,6 @@ final_scan_insn_1 (rtx_insn *insn, FILE *file, int optimize_p ATTRIBUTE_UNUSED,\n \t      TREE_ASM_WRITTEN (NOTE_BLOCK (insn)) = 1;\n \t      BLOCK_IN_COLD_SECTION_P (NOTE_BLOCK (insn)) = in_cold_section_p;\n \t    }\n-\t  if (write_symbols == DBX_DEBUG)\n-\t    {\n-\t      location_t *locus_ptr\n-\t\t= block_nonartificial_location (NOTE_BLOCK (insn));\n-\n-\t      if (locus_ptr != NULL)\n-\t\t{\n-\t\t  override_filename = LOCATION_FILE (*locus_ptr);\n-\t\t  override_linenum = LOCATION_LINE (*locus_ptr);\n-\t\t  override_columnnum = LOCATION_COLUMN (*locus_ptr);\n-\t\t  override_discriminator = compute_discriminator (*locus_ptr);\n-\t\t}\n-\t    }\n \t  break;\n \n \tcase NOTE_INSN_BLOCK_END:\n@@ -2359,27 +2338,6 @@ final_scan_insn_1 (rtx_insn *insn, FILE *file, int optimize_p ATTRIBUTE_UNUSED,\n \t      gcc_assert (BLOCK_IN_COLD_SECTION_P (NOTE_BLOCK (insn))\n \t\t\t  == in_cold_section_p);\n \t    }\n-\t  if (write_symbols == DBX_DEBUG)\n-\t    {\n-\t      tree outer_block = BLOCK_SUPERCONTEXT (NOTE_BLOCK (insn));\n-\t      location_t *locus_ptr\n-\t\t= block_nonartificial_location (outer_block);\n-\n-\t      if (locus_ptr != NULL)\n-\t\t{\n-\t\t  override_filename = LOCATION_FILE (*locus_ptr);\n-\t\t  override_linenum = LOCATION_LINE (*locus_ptr);\n-\t\t  override_columnnum = LOCATION_COLUMN (*locus_ptr);\n-\t\t  override_discriminator = compute_discriminator (*locus_ptr);\n-\t\t}\n-\t      else\n-\t\t{\n-\t\t  override_filename = NULL;\n-\t\t  override_linenum = 0;\n-\t\t  override_columnnum = 0;\n-\t\t  override_discriminator = 0;\n-\t\t}\n-\t    }\n \t  break;\n \n \tcase NOTE_INSN_DELETED_LABEL:\n@@ -4304,8 +4262,6 @@ rest_of_handle_final (void)\n   if (! quiet_flag)\n     fflush (asm_out_file);\n \n-  /* Write DBX symbols if requested.  */\n-\n   /* Note that for those inline functions where we don't initially\n      know for certain that we will be generating an out-of-line copy,\n      the first invocation of this routine (rest_of_compilation) will"}, {"sha": "d2e751060ffceb56c411cac7d16915de6f1ecf9f", "filename": "gcc/flag-types.h", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fflag-types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fflag-types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflag-types.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -24,24 +24,18 @@ along with GCC; see the file COPYING3.  If not see\n \n enum debug_info_type\n {\n-  DINFO_TYPE_NONE = 0,\t\t  /* No debug info.  */\n-  DINFO_TYPE_DBX = 1,\t\t  /* BSD .stabs for DBX.  */\n-  DINFO_TYPE_DWARF2 = 2,\t  /* Dwarf v2 debug info.  */\n-  DINFO_TYPE_XCOFF = 3,\t\t  /* IBM/Xcoff debug info.  */\n-  DINFO_TYPE_VMS = 4,\t\t  /* VMS debug info.  */\n-  DINFO_TYPE_CTF = 5,\t\t  /* CTF debug info.  */\n-  DINFO_TYPE_BTF = 6,\t\t  /* BTF debug info.  */\n-  DINFO_TYPE_BTF_WITH_CORE = 7,\t  /* BTF debug info with CO-RE relocations.  */\n+  DINFO_TYPE_NONE,\t\t  /* No debug info.  */\n+  DINFO_TYPE_DWARF2,\t\t  /* Dwarf v2 debug info.  */\n+  DINFO_TYPE_VMS,\t\t  /* VMS debug info.  */\n+  DINFO_TYPE_CTF,\t\t  /* CTF debug info.  */\n+  DINFO_TYPE_BTF,\t\t  /* BTF debug info.  */\n+  DINFO_TYPE_BTF_WITH_CORE,\t  /* BTF debug info with CO-RE relocations.  */\n   DINFO_TYPE_MAX = DINFO_TYPE_BTF_WITH_CORE /* Marker only.  */\n };\n \n #define NO_DEBUG      (0U)\n-/* Write DBX debug info (using dbxout.cc).  */\n-#define DBX_DEBUG     (1U << DINFO_TYPE_DBX)\n /* Write DWARF2 debug info (using dwarf2out.cc).  */\n #define DWARF2_DEBUG  (1U << DINFO_TYPE_DWARF2)\n-/* Write IBM/XCOFF debug info (using dbxout.cc).  */\n-#define XCOFF_DEBUG   (1U << DINFO_TYPE_XCOFF)\n /* Write VMS debug info (using vmsdbgout.cc).  */\n #define VMS_DEBUG     (1U << DINFO_TYPE_VMS)\n /* Write CTF debug info (using ctfout.cc).  */"}, {"sha": "5498a712c4a1ed4c213d7a7c4506e1f25556623a", "filename": "gcc/function.cc", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Ffunction.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Ffunction.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.cc?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -4639,14 +4639,6 @@ number_blocks (tree fn)\n   int n_blocks;\n   tree *block_vector;\n \n-  /* For XCOFF debugging output, we start numbering the blocks\n-     from 1 within each function, rather than keeping a running\n-     count.  */\n-#if defined (XCOFF_DEBUGGING_INFO)\n-  if (write_symbols == XCOFF_DEBUG)\n-    next_block_index = 1;\n-#endif\n-\n   block_vector = get_block_vector (DECL_INITIAL (fn), &n_blocks);\n \n   /* The top-level BLOCK isn't numbered at all.  */"}, {"sha": "c1f084bdf6b687fc60afd6a5ecc0c58bd6f60dec", "filename": "gcc/gcc.cc", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fgcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fgcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.cc?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -927,26 +927,11 @@ proper position among the other output files.  */\n # else\n #  define ASM_DEBUG_DWARF_OPTION \"--gdwarf2\"\n # endif\n-# if defined(DBX_DEBUGGING_INFO) && defined(DWARF2_DEBUGGING_INFO) \\\n-     && defined(HAVE_AS_GDWARF2_DEBUG_FLAG) && defined(HAVE_AS_GSTABS_DEBUG_FLAG)\n-#  define ASM_DEBUG_SPEC\t\t\t\t\t\t\\\n-      (PREFERRED_DEBUGGING_TYPE == DBX_DEBUG\t\t\t\t\\\n-       ? \"%{%:debug-level-gt(0):\"\t\t\t\t\t\\\n-\t \"%{gdwarf*:\" ASM_DEBUG_DWARF_OPTION \"};\"\t\t\t\\\n-\t \":%{g*:--gstabs}}\" ASM_MAP\t\t\t\t\t\\\n-       : \"%{%:debug-level-gt(0):\"\t\t\t\t\t\\\n-\t \"%{gstabs*:--gstabs;\"\t\t\t\t\t\t\\\n-\t \":%{g*:\" ASM_DEBUG_DWARF_OPTION \"}}}\" ASM_MAP)\n-# else\n-#  if defined(DBX_DEBUGGING_INFO) && defined(HAVE_AS_GSTABS_DEBUG_FLAG)\n-#   define ASM_DEBUG_SPEC \"%{g*:%{%:debug-level-gt(0):--gstabs}}\" ASM_MAP\n-#  endif\n #  if defined(DWARF2_DEBUGGING_INFO) && defined(HAVE_AS_GDWARF2_DEBUG_FLAG)\n #   define ASM_DEBUG_SPEC \"%{g*:%{%:debug-level-gt(0):\" \\\n \tASM_DEBUG_DWARF_OPTION \"}}\" ASM_MAP\n #  endif\n # endif\n-#endif\n #ifndef ASM_DEBUG_SPEC\n # define ASM_DEBUG_SPEC \"\"\n #endif\n@@ -960,14 +945,7 @@ proper position among the other output files.  */\n \t\"%:dwarf-version-gt(3):--gdwarf-4 ;\"\t\t\t\t\\\n \t\"%:dwarf-version-gt(2):--gdwarf-3 ;\"\t\t\t\t\\\n \t\":--gdwarf2 }\"\n-#  if defined(DBX_DEBUGGING_INFO) && defined(DWARF2_DEBUGGING_INFO)\n-#  define ASM_DEBUG_OPTION_SPEC\t\t\t\t\t\t\\\n-      (PREFERRED_DEBUGGING_TYPE == DBX_DEBUG\t\t\t\t\\\n-       ? \"%{%:debug-level-gt(0):\"\t\t\t\t\t\\\n-\t \"%{gdwarf*:\" ASM_DEBUG_OPTION_DWARF_OPT \"}}\" \t\t\t\\\n-       : \"%{%:debug-level-gt(0):\"\t\t\t\t\t\\\n-\t \"%{!gstabs*:%{g*:\" ASM_DEBUG_OPTION_DWARF_OPT \"}}}\")\n-# elif defined(DWARF2_DEBUGGING_INFO)\n+# if defined(DWARF2_DEBUGGING_INFO)\n #   define ASM_DEBUG_OPTION_SPEC \"%{g*:%{%:debug-level-gt(0):\" \\\n \tASM_DEBUG_OPTION_DWARF_OPT \"}}\"\n #  endif"}, {"sha": "d519a69e64723cf09922ca56000fd7346ec625cb", "filename": "gcc/go/go-lang.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fgo%2Fgo-lang.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fgo%2Fgo-lang.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-lang.cc?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -507,8 +507,7 @@ go_langhook_pushdecl (tree decl ATTRIBUTE_UNUSED)\n }\n \n /* This hook is used to get the current list of declarations as trees.\n-   We don't support that; instead we use the write_globals hook.  This\n-   can't simply crash because it is called by -gstabs.  */\n+   We don't support that; instead we use the write_globals hook.  */\n \n static tree\n go_langhook_getdecls (void)"}, {"sha": "1e514076803fd4b671b970dd7b6a1646c9b05092", "filename": "gcc/go/gospec.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fgo%2Fgospec.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fgo%2Fgospec.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgospec.cc?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -215,11 +215,7 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n \tcase OPT_gdwarf:\n \tcase OPT_gdwarf_:\n \tcase OPT_ggdb:\n-\tcase OPT_gstabs:\n-\tcase OPT_gstabs_:\n \tcase OPT_gvms:\n-\tcase OPT_gxcoff:\n-\tcase OPT_gxcoff_:\n \t  saw_opt_g = true;\n \t  break;\n "}, {"sha": "c597d1200b4a002f75fc1449ea86c78b3db2fffe", "filename": "gcc/gstab.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Fgstab.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Fgstab.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgstab.h?ref=0b0a3cdbff64d97e7de3e0e2c26e965708064193", "patch": "@@ -1,35 +0,0 @@\n-/* Copyright (C) 1997-2022 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify it under\n-the terms of the GNU General Public License as published by the Free\n-Software Foundation; either version 3, or (at your option) any later\n-version.\n-\n-GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#ifndef GCC_GSTAB_H\n-#define GCC_GSTAB_H\n-\n-#define __define_stab(NAME, CODE, STRING) NAME=CODE,\n-\n-enum\n-{\n-#include \"stab.def\"\n-LAST_UNUSED_STAB_CODE\n-};\n-\n-/* stabs debug codes really are integers with expressive names.  */\n-typedef int stab_code_type;\n-\n-#undef __define_stab\n-\n-#endif /* ! GCC_GSTAB_H */"}, {"sha": "e058aaf3697fa50a6d1a22345b7dd60a47e2eafd", "filename": "gcc/opts.cc", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fopts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fopts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.cc?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -53,7 +53,7 @@ const char *const debug_type_names[] =\n \n static uint32_t debug_type_masks[] =\n {\n-  NO_DEBUG, DBX_DEBUG, DWARF2_DEBUG, XCOFF_DEBUG, VMS_DEBUG,\n+  NO_DEBUG, DWARF2_DEBUG, VMS_DEBUG,\n   CTF_DEBUG, BTF_DEBUG\n };\n \n@@ -3145,22 +3145,10 @@ common_handle_option (struct gcc_options *opts,\n       set_debug_level (NO_DEBUG, 2, arg, opts, opts_set, loc);\n       break;\n \n-    case OPT_gstabs:\n-    case OPT_gstabs_:\n-      set_debug_level (DBX_DEBUG, code == OPT_gstabs_, arg, opts, opts_set,\n-\t\t       loc);\n-      break;\n-\n     case OPT_gvms:\n       set_debug_level (VMS_DEBUG, false, arg, opts, opts_set, loc);\n       break;\n \n-    case OPT_gxcoff:\n-    case OPT_gxcoff_:\n-      set_debug_level (XCOFF_DEBUG, code == OPT_gxcoff_, arg, opts, opts_set,\n-\t\t       loc);\n-      break;\n-\n     case OPT_gz:\n     case OPT_gz_:\n       /* Handled completely via specs.  */\n@@ -3363,8 +3351,6 @@ set_debug_level (uint32_t dinfo, int extended, const char *arg,\n \t\t struct gcc_options *opts, struct gcc_options *opts_set,\n \t\t location_t loc)\n {\n-  opts->x_use_gnu_debug_info_extensions = extended;\n-\n   if (dinfo == NO_DEBUG)\n     {\n       if (opts->x_write_symbols == NO_DEBUG)\n@@ -3378,8 +3364,6 @@ set_debug_level (uint32_t dinfo, int extended, const char *arg,\n \t\topts->x_write_symbols |= DWARF2_DEBUG;\n \t      else\n \t\topts->x_write_symbols = DWARF2_DEBUG;\n-#elif defined DBX_DEBUGGING_INFO\n-\t      opts->x_write_symbols = DBX_DEBUG;\n #endif\n \t    }\n "}, {"sha": "e5af19b2bd8d03e1f447035e5bc6d3b94b62eb7f", "filename": "gcc/stab.def", "status": "removed", "additions": 0, "deletions": 239, "changes": 239, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Fstab.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Fstab.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstab.def?ref=0b0a3cdbff64d97e7de3e0e2c26e965708064193", "patch": "@@ -1,239 +0,0 @@\n-/* Table of DBX symbol codes for the GNU system.\n-   Copyright (C) 1988-2022 Free Software Foundation, Inc.\n-   This file is part of the GNU C Library.\n-\n-   The GNU C Library is free software; you can redistribute it and/or\n-   modify it under the terms of the GNU Library General Public License as\n-   published by the Free Software Foundation; either version 3 of the\n-   License, or (at your option) any later version.\n-\n-   The GNU C Library is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-   Library General Public License for more details.\n-\n-   You should have received a copy of the GNU Library General Public\n-   License along with the GNU C Library; see the file COPYING3.  If\n-   not see <http://www.gnu.org/licenses/>.  */\n-\n-/* This contains contribution from Cygnus Support.  */\n-\f\n-/* Global variable.  Only the name is significant.\n-   To find the address, look in the corresponding external symbol.  */\n-__define_stab (N_GSYM, 0x20, \"GSYM\")\n-\n-/* Function name for BSD Fortran.  Only the name is significant.\n-   To find the address, look in the corresponding external symbol.  */\n-__define_stab (N_FNAME, 0x22, \"FNAME\")\n-\n-/* Function name or text-segment variable for C.  Value is its address.\n-   Desc is supposedly starting line number, but GCC doesn't set it\n-   and DBX seems not to miss it.  */\n-__define_stab (N_FUN, 0x24, \"FUN\")\n-\n-/* Data-segment variable with internal linkage.  Value is its address.\n-   \"Static Sym\".  */\n-__define_stab (N_STSYM, 0x26, \"STSYM\")\n-\n-/* BSS-segment variable with internal linkage.  Value is its address.  */\n-__define_stab (N_LCSYM, 0x28, \"LCSYM\")\n-\n-/* Begin function marker.  */\n-__define_stab (N_BNSYM, 0x2e, \"BNSYM\")\n-\n-/* End function marker.  */\n-__define_stab (N_ENSYM, 0x4e, \"ENSYM\")\n-\n-/* Name of main routine.  Only the name is significant.\n-   This is not used in C.  */\n-__define_stab (N_MAIN, 0x2a, \"MAIN\")\n-\n-/* Global symbol in Pascal.\n-   Supposedly the value is its line number; I'm skeptical.  */\n-__define_stab (N_PC, 0x30, \"PC\")\n-\n-/* Number of symbols:  0, files,,funcs,lines according to Ultrix V4.0.  */\n-__define_stab (N_NSYMS, 0x32, \"NSYMS\")\n-\n-/* \"No DST map for sym: name, ,0,type,ignored\"  according to Ultrix V4.0.  */\n-__define_stab (N_NOMAP, 0x34, \"NOMAP\")\n-\n-/* New stab from Solaris.  I don't know what it means, but it\n-   don't seem to contain useful information.  */\n-__define_stab (N_OBJ, 0x38, \"OBJ\")\n-\n-/* New stab from Solaris.  I don't know what it means, but it\n-   don't seem to contain useful information.  Possibly related to the\n-   optimization flags used in this module.  */\n-__define_stab (N_OPT, 0x3c, \"OPT\")\n-\n-/* Register variable.  Value is number of register.  */\n-__define_stab (N_RSYM, 0x40, \"RSYM\")\n-\n-/* Modula-2 compilation unit.  Can someone say what info it contains?  */\n-__define_stab (N_M2C, 0x42, \"M2C\")\n-\n-/* Line number in text segment.  Desc is the line number;\n-   value is corresponding address.  */\n-__define_stab (N_SLINE, 0x44, \"SLINE\")\n-\n-/* Similar, for data segment.  */\n-__define_stab (N_DSLINE, 0x46, \"DSLINE\")\n-\n-/* Similar, for bss segment.  */\n-__define_stab (N_BSLINE, 0x48, \"BSLINE\")\n-\n-/* Sun's source-code browser stabs.  ?? Don't know what the fields are.\n-   Supposedly the field is \"path to associated .cb file\".  THIS VALUE\n-   OVERLAPS WITH N_BSLINE!  */\n-__define_stab (N_BROWS, 0x48, \"BROWS\")\n-\n-/* GNU Modula-2 definition module dependency.  Value is the modification time\n-   of the definition file.  Other is nonzero if it is imported with the\n-   GNU M2 keyword %INITIALIZE.  Perhaps N_M2C can be used if there\n-   are enough empty fields? */\n-__define_stab(N_DEFD, 0x4a, \"DEFD\")\n-\n-/* THE FOLLOWING TWO STAB VALUES CONFLICT.  Happily, one is for Modula-2\n-   and one is for C++.   Still,...  */\n-/* GNU C++ exception variable.  Name is variable name.  */\n-__define_stab (N_EHDECL, 0x50, \"EHDECL\")\n-/* Modula2 info \"for imc\":  name,,0,0,0  according to Ultrix V4.0.  */\n-__define_stab (N_MOD2, 0x50, \"MOD2\")\n-\n-/* GNU C++ `catch' clause.  Value is its address.  Desc is nonzero if\n-   this entry is immediately followed by a CAUGHT stab saying what exception\n-   was caught.  Multiple CAUGHT stabs means that multiple exceptions\n-   can be caught here.  If Desc is 0, it means all exceptions are caught\n-   here.  */\n-__define_stab (N_CATCH, 0x54, \"CATCH\")\n-\n-/* Structure or union element.  Value is offset in the structure.  */\n-__define_stab (N_SSYM, 0x60, \"SSYM\")\n-\n-/* Name of main source file.\n-   Value is starting text address of the compilation.  */\n-__define_stab (N_SO, 0x64, \"SO\")\n-\n-/* Automatic variable in the stack.  Value is offset from frame pointer.\n-   Also used for type descriptions.  */\n-__define_stab (N_LSYM, 0x80, \"LSYM\")\n-\n-/* Beginning of an include file.  Only Sun uses this.\n-   In an object file, only the name is significant.\n-   The Sun linker puts data into some of the other fields.  */\n-__define_stab (N_BINCL, 0x82, \"BINCL\")\n-\n-/* Name of sub-source file (#include file).\n-   Value is starting text address of the compilation.  */\n-__define_stab (N_SOL, 0x84, \"SOL\")\n-\n-/* Parameter variable.  Value is offset from argument pointer.\n-   (On most machines the argument pointer is the same as the frame pointer.  */\n-__define_stab (N_PSYM, 0xa0, \"PSYM\")\n-\n-/* End of an include file.  No name.\n-   This and N_BINCL act as brackets around the file's output.\n-   In an object file, there is no significant data in this entry.\n-   The Sun linker puts data into some of the fields.  */\n-__define_stab (N_EINCL, 0xa2, \"EINCL\")\n-\n-/* Alternate entry point.  Value is its address.  */\n-__define_stab (N_ENTRY, 0xa4, \"ENTRY\")\n-\n-/* Beginning of lexical block.\n-   The desc is the nesting level in lexical blocks.\n-   The value is the address of the start of the text for the block.\n-   The variables declared inside the block *precede* the N_LBRAC symbol.  */\n-__define_stab (N_LBRAC, 0xc0, \"LBRAC\")\n-\n-/* Place holder for deleted include file.  Replaces a N_BINCL and everything\n-   up to the corresponding N_EINCL.  The Sun linker generates these when\n-   it finds multiple identical copies of the symbols from an include file.\n-   This appears only in output from the Sun linker.  */\n-__define_stab (N_EXCL, 0xc2, \"EXCL\")\n-\n-/* Modula-2 scope information.  Can someone say what info it contains?  */\n-__define_stab (N_SCOPE, 0xc4, \"SCOPE\")\n-\n-/* End of a lexical block.  Desc matches the N_LBRAC's desc.\n-   The value is the address of the end of the text for the block.  */\n-__define_stab (N_RBRAC, 0xe0, \"RBRAC\")\n-\n-/* Begin named common block.  Only the name is significant.  */\n-__define_stab (N_BCOMM, 0xe2, \"BCOMM\")\n-\n-/* End named common block.  Only the name is significant\n-   (and it should match the N_BCOMM).  */\n-__define_stab (N_ECOMM, 0xe4, \"ECOMM\")\n-\n-/* End common (local name): value is address.\n-   I'm not sure how this is used.  */\n-__define_stab (N_ECOML, 0xe8, \"ECOML\")\n-\n-/* These STAB's are used on Gould systems for Non-Base register symbols\n-   or something like that.  FIXME.  I have assigned the values at random\n-   since I don't have a Gould here.  Fixups from Gould folk welcome...  */\n-__define_stab (N_NBTEXT, 0xF0, \"NBTEXT\")\n-__define_stab (N_NBDATA, 0xF2, \"NBDATA\")\n-__define_stab (N_NBBSS,  0xF4, \"NBBSS\")\n-__define_stab (N_NBSTS,  0xF6, \"NBSTS\")\n-__define_stab (N_NBLCS,  0xF8, \"NBLCS\")\n-\n-/* Second symbol entry containing a length-value for the preceding entry.\n-   The value is the length.  */\n-__define_stab (N_LENG, 0xfe, \"LENG\")\n-\f\n-/* The above information, in matrix format.\n-\n-\t\t\tSTAB MATRIX\n-\t_________________________________________________\n-\t| 00 - 1F are not dbx stab symbols\t\t|\n-\t| In most cases, the low bit is the EXTernal bit|\n-\n-\t| 00 UNDEF  | 02 ABS\t| 04 TEXT   | 06 DATA\t|\n-\t| 01  |EXT  | 03  |EXT\t| 05  |EXT  | 07  |EXT\t|\n-\n-\t| 08 BSS    | 0A INDR\t| 0C FN_SEQ | 0E   \t|\n-\t| 09  |EXT  | 0B \t| 0D\t    | 0F\t|\n-\n-\t| 10 \t    | 12 COMM\t| 14 SETA   | 16 SETT\t|\n-\t| 11\t    | 13\t| 15 \t    | 17\t|\n-\n-\t| 18 SETD   | 1A SETB\t| 1C SETV   | 1E WARNING|\n-\t| 19\t    | 1B\t| 1D \t    | 1F FN\t|\n-\n-\t|_______________________________________________|\n-\t| Debug entries with bit 01 set are unused.\t|\n-\t| 20 GSYM   | 22 FNAME\t| 24 FUN    | 26 STSYM\t|\n-\t| 28 LCSYM  | 2A MAIN\t| 2C\t    | 2E BNSYM\t|\n-\t| 30 PC\t    | 32 NSYMS\t| 34 NOMAP  | 36\t|\n-\t| 38 OBJ    | 3A\t| 3C OPT    | 3E\t|\n-\t| 40 RSYM   | 42 M2C\t| 44 SLINE  | 46 DSLINE |\n-\t| 48 BSLINE*| 4A DEFD\t| 4C        | 4E ENSYM\t|\n-\t| 50 EHDECL*| 52\t| 54 CATCH  | 56        |\n-\t| 58        | 5A        | 5C        | 5E\t|\n-\t| 60 SSYM   | 62\t| 64 SO\t    | 66 \t|\n-\t| 68 \t    | 6A\t| 6C\t    | 6E\t|\n-\t| 70\t    | 72\t| 74\t    | 76\t|\n-\t| 78\t    | 7A\t| 7C\t    | 7E\t|\n-\t| 80 LSYM   | 82 BINCL\t| 84 SOL    | 86\t|\n-\t| 88\t    | 8A\t| 8C\t    | 8E\t|\n-\t| 90\t    | 92\t| 94\t    | 96\t|\n-\t| 98\t    | 9A\t| 9C\t    | 9E\t|\n-\t| A0 PSYM   | A2 EINCL\t| A4 ENTRY  | A6\t|\n-\t| A8\t    | AA\t| AC\t    | AE\t|\n-\t| B0\t    | B2\t| B4\t    | B6\t|\n-\t| B8\t    | BA\t| BC\t    | BE\t|\n-\t| C0 LBRAC  | C2 EXCL\t| C4 SCOPE  | C6\t|\n-\t| C8\t    | CA\t| CC\t    | CE\t|\n-\t| D0\t    | D2\t| D4\t    | D6\t|\n-\t| D8\t    | DA\t| DC\t    | DE\t|\n-\t| E0 RBRAC  | E2 BCOMM\t| E4 ECOMM  | E6\t|\n-\t| E8 ECOML  | EA\t| EC\t    | EE\t|\n-\t| F0\t    | F2\t| F4\t    | F6\t|\n-\t| F8\t    | FA\t| FC\t    | FE LENG\t|\n-\t+-----------------------------------------------+\n- * 50 EHDECL is also MOD2.\n- * 48 BSLINE is also BROWS.\n- */"}, {"sha": "c192b6c3ce787e01c09f10bdfefc5f06d59038ef", "filename": "gcc/system.h", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -1009,8 +1009,7 @@ extern void fancy_abort (const char *, int, const char *)\n \tASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL HOST_WORDS_BIG_ENDIAN\t   \\\n \tOBJC_PROLOGUE ALLOCATE_TRAMPOLINE HANDLE_PRAGMA ROUND_TYPE_SIZE\t   \\\n \tROUND_TYPE_SIZE_UNIT CONST_SECTION_ASM_OP CRT_GET_RFIB_TEXT\t   \\\n-\tDBX_LBRAC_FIRST DBX_OUTPUT_ENUM DBX_OUTPUT_SOURCE_FILENAME\t   \\\n-\tDBX_WORKING_DIRECTORY INSN_CACHE_DEPTH INSN_CACHE_SIZE\t\t   \\\n+\tINSN_CACHE_DEPTH INSN_CACHE_SIZE\t\t\t\t   \\\n \tINSN_CACHE_LINE_WIDTH INIT_SECTION_PREAMBLE NEED_ATEXIT ON_EXIT\t   \\\n \tEXIT_BODY OBJECT_FORMAT_ROSE MULTIBYTE_CHARS MAP_CHARACTER\t   \\\n \tLIBGCC_NEEDS_DOUBLE FINAL_PRESCAN_LABEL DEFAULT_CALLER_SAVES\t   \\\n@@ -1023,15 +1022,14 @@ extern void fancy_abort (const char *, int, const char *)\n \tMAX_WCHAR_TYPE_SIZE SHARED_SECTION_ASM_OP INTEGRATE_THRESHOLD      \\\n \tFINAL_REG_PARM_STACK_SPACE MAYBE_REG_PARM_STACK_SPACE\t\t   \\\n \tTRADITIONAL_PIPELINE_INTERFACE DFA_PIPELINE_INTERFACE\t\t   \\\n-\tDBX_OUTPUT_STANDARD_TYPES BUILTIN_SETJMP_FRAME_VALUE\t\t   \\\n+\tBUILTIN_SETJMP_FRAME_VALUE\t\t\t\t\t   \\\n \tSUNOS4_SHARED_LIBRARIES PROMOTE_FOR_CALL_ONLY\t\t\t   \\\n \tSPACE_AFTER_L_OPTION NO_RECURSIVE_FUNCTION_CSE\t\t\t   \\\n \tDEFAULT_MAIN_RETURN TARGET_MEM_FUNCTIONS EXPAND_BUILTIN_VA_ARG\t   \\\n \tCOLLECT_PARSE_FLAG DWARF2_GENERATE_TEXT_SECTION_LABEL WINNING_GDB  \\\n \tASM_OUTPUT_FILENAME ASM_OUTPUT_SOURCE_LINE FILE_NAME_JOINER\t   \\\n-\tGDB_INV_REF_REGPARM_STABS_LETTER DBX_MEMPARM_STABS_LETTER\t   \\\n-\tPUT_SDB_SRC_FILE STABS_GCC_MARKER DBX_OUTPUT_FUNCTION_END\t   \\\n-\tDBX_OUTPUT_GCC_MARKER DBX_FINISH_SYMBOL SDB_GENERATE_FAKE\t   \\\n+\tGDB_INV_REF_REGPARM_STABS_LETTER\t\t\t\t   \\\n+\tPUT_SDB_SRC_FILE STABS_GCC_MARKER SDB_GENERATE_FAKE\t\t   \\\n \tNON_SAVING_SETJMP TARGET_LATE_RTL_PROLOGUE_EPILOGUE\t\t   \\\n \tCASE_DROPS_THROUGH TARGET_BELL TARGET_BS TARGET_CR TARGET_DIGIT0   \\\n         TARGET_ESC TARGET_FF TARGET_NEWLINE TARGET_TAB TARGET_VT\t   \\\n@@ -1056,8 +1054,8 @@ extern void fancy_abort (const char *, int, const char *)\n \tPREFERRED_OUTPUT_RELOAD_CLASS SYSTEM_INCLUDE_DIR\t\t   \\\n \tSTANDARD_INCLUDE_DIR STANDARD_INCLUDE_COMPONENT\t\t\t   \\\n \tLINK_ELIMINATE_DUPLICATE_LDIRECTORIES MIPS_DEBUGGING_INFO\t   \\\n-\tIDENT_ASM_OP ALL_COP_ADDITIONAL_REGISTER_NAMES DBX_OUTPUT_LBRAC\t   \\\n-\tDBX_OUTPUT_NFUN DBX_OUTPUT_RBRAC RANGE_TEST_NON_SHORT_CIRCUIT\t   \\\n+\tIDENT_ASM_OP ALL_COP_ADDITIONAL_REGISTER_NAMES\t\t\t   \\\n+\tRANGE_TEST_NON_SHORT_CIRCUIT\t\t\t\t\t   \\\n \tREAL_VALUE_TRUNCATE REVERSE_CONDEXEC_PREDICATES_P\t\t   \\\n \tTARGET_ALIGN_ANON_BITFIELDS TARGET_NARROW_VOLATILE_BITFIELDS\t   \\\n \tIDENT_ASM_OP UNALIGNED_SHORT_ASM_OP UNALIGNED_INT_ASM_OP\t   \\"}, {"sha": "f81f8fe3bb3918676ef30ea60bea9e9ad83ebfbe", "filename": "gcc/target-def.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Ftarget-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Ftarget-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-def.h?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -62,8 +62,6 @@\n # else\n #  ifdef TARGET_ASM_NAMED_SECTION\n #   define TARGET_ASM_CONSTRUCTOR default_named_section_asm_out_constructor\n-#  else\n-#   define TARGET_ASM_CONSTRUCTOR default_stabs_asm_out_constructor\n #  endif\n # endif\n #endif\n@@ -74,8 +72,6 @@\n # else\n #  ifdef TARGET_ASM_NAMED_SECTION\n #   define TARGET_ASM_DESTRUCTOR default_named_section_asm_out_destructor\n-#  else\n-#   define TARGET_ASM_DESTRUCTOR default_stabs_asm_out_destructor\n #  endif\n # endif\n #endif"}, {"sha": "8464aa35a1a011c0b5f5d954d31066e28e84766a", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-debug-0.C", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-debug-0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-debug-0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-debug-0.C?ref=0b0a3cdbff64d97e7de3e0e2c26e965708064193", "patch": "@@ -1,12 +0,0 @@\n-// Origin: PR c++/51032\n-// { dg-do compile { target { c++11 && stabs } } }\n-// { dg-options \"-gstabs+\" }\n-\n-template <class C>\n-struct A {\n-    template<class U> using B = U*;\n-    int a;\n-};\n-\n-A<int> a;\n-"}, {"sha": "65ba1f6f30603503502dbbace63d78f593f81676", "filename": "gcc/testsuite/g++.dg/other/PR23205.C", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2FPR23205.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2FPR23205.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2FPR23205.C?ref=0b0a3cdbff64d97e7de3e0e2c26e965708064193", "patch": "@@ -1,17 +0,0 @@\n-/* { dg-do compile { target stabs } } */\n-/* { dg-options \"-gstabs+ -fno-eliminate-unused-debug-types\" } */\n-\n-const int foobar = 4;\n-int foo ()\n-{\n-        return foobar + 1;\n-}\n-\n-int main()\n-{\n-        int i;\n-        i = foo();\n-        return i;\n-}\n-\n-/* { dg-final { scan-assembler \".stabs.*foobar:(c=i|S)\" } } */"}, {"sha": "7b25c071a67a90f03686a2a82af6c16995c89869", "filename": "gcc/testsuite/g++.dg/other/pr23205-2.C", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr23205-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr23205-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr23205-2.C?ref=0b0a3cdbff64d97e7de3e0e2c26e965708064193", "patch": "@@ -1,17 +0,0 @@\n-/* { dg-do compile { target stabs } } */\n-/* { dg-options \"-gstabs+ -fno-eliminate-unused-debug-types -ftoplevel-reorder\" } */\n-\n-const int foobar = 4;\n-int foo ()\n-{\n-        return foobar + 1;\n-}\n-\n-int main()\n-{\n-        int i;\n-        i = foo();\n-        return i;\n-}\n-\n-/* { dg-final { scan-assembler \".stabs.*foobar:c=i\" } } */"}, {"sha": "9cf664dd769a89064daa9b85dca31e8e107d2ec7", "filename": "gcc/testsuite/gcc.dg/20040813-1.c", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Ftestsuite%2Fgcc.dg%2F20040813-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Ftestsuite%2Fgcc.dg%2F20040813-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20040813-1.c?ref=0b0a3cdbff64d97e7de3e0e2c26e965708064193", "patch": "@@ -1,14 +0,0 @@\n-/* Test lang in N_SO stab.  */\n-/* Contributed by Devang Patel  <dpatel@apple.com>  */\n-\n-/* { dg-do compile { target stabs } } */\n-/* { dg-options \"-gstabs\" } */\n-\n-int\n-main ()\n-{\n-  return 0;\n-}\n-\n-/* { dg-final { scan-assembler \".stabs.*100,0,2\" } } */\n-"}, {"sha": "98d571276d0a5c120a767527b7e3b74f3a4c8163", "filename": "gcc/testsuite/gcc.dg/darwin-20040809-2.c", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-20040809-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-20040809-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdarwin-20040809-2.c?ref=0b0a3cdbff64d97e7de3e0e2c26e965708064193", "patch": "@@ -1,15 +0,0 @@\n-/* Test dead code strip support.  */\n-/* Contributed by Devang Patel  <dpatel@apple.com>  */\n-\n-/* { dg-do compile { target { *-*-darwin* && stabs } } } */\n-/* { dg-options \"-gstabs+ -fno-eliminate-unused-debug-symbols\" } */\n-\n-int\n-main ()\n-{\n-  return 0;\n-}\n-\n-/* { dg-final { scan-assembler \".stabd.46,0,0\" } } */\n-/* { dg-final { scan-assembler \".stabd.78,0,0\" } } */\n-"}, {"sha": "08eefaf66f9545c5d7cdd1e33e11e7d80992973f", "filename": "gcc/testsuite/gcc.dg/debug/pr35154.c", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fpr35154.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fpr35154.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fpr35154.c?ref=0b0a3cdbff64d97e7de3e0e2c26e965708064193", "patch": "@@ -1,35 +0,0 @@\n-/* Test to make sure that stabs for C symbols that go into .comm have the\n-   proper structure.  These should be lettered G for the struct that gives\n-   the name to the .comm, and should be V or S for .lcomm symbols.  */\n-\n-__attribute__ ((used))\n-static char i_outer;\n-struct {\n-   char f1;\n-   char f2;\n-} opta;\n-struct {\n-   char f1;\n-   char f2;\n-} optb;\n-\n-int\n-main()\n-{\n-   static char i_inner[2] __attribute__ ((used));\n-   i_inner[0] = 'a'; i_inner[1] = 'b';\n-   opta.f1 = 'c';\n-   opta.f2 = 'd';\n-   optb.f1 = 'C';\n-   optb.f2 = 'D';\n-   i_outer = 'e';\n-/* { dg-do compile } */\n-/* { dg-skip-if \"No stabs\" { mmix-*-* alpha*-*-* hppa*64*-*-* ia64-*-* *-*-vxworks* } } */\n-/* { dg-skip-if \"stabs only\" { *-*-* } { \"*\" } { \"-gstabs\" } } */\n-   return 0;\n-}\n-\n-/* { dg-final { scan-assembler \".stabs.*i_inner:V\" } } */\n-/* { dg-final { scan-assembler \".stabs.*i_outer:S\" } } */\n-/* { dg-final { scan-assembler \".stabs.*opta:G\" } } */\n-/* { dg-final { scan-assembler \".stabs.*optb:G\" } } */"}, {"sha": "d5799604b366b9a205442454744fe79bf0d9d5c2", "filename": "gcc/testsuite/gcc.dg/pr69471-2.c", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69471-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69471-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69471-2.c?ref=0b0a3cdbff64d97e7de3e0e2c26e965708064193", "patch": "@@ -1,8 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-gstabs2 -gdwarf-4 -gstabs3\" } */\n-/* { dg-error \"conflicts with prior selectio\" \"\" { target *-*-* } 0 } */\n-\n-void\n-foo (void)\n-{\n-}"}, {"sha": "5c7acf18a58d8a18b70886fd026542fffd483902", "filename": "gcc/testsuite/gcc.target/powerpc/stabs-attrib-vect-darwin.c", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fstabs-attrib-vect-darwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fstabs-attrib-vect-darwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fstabs-attrib-vect-darwin.c?ref=0b0a3cdbff64d97e7de3e0e2c26e965708064193", "patch": "@@ -1,12 +0,0 @@\n-/* Test Attribute Vector associated with vector type stabs.  */\n-/* { dg-do compile { target powerpc*-*-darwin* } } */\n-/* { dg-require-effective-target stabs } */\n-/* { dg-options \"-gstabs+ -fno-eliminate-unused-debug-types -faltivec\" } */\n-\n-int main ()\n-{\n-  vector int vi = { 6,7,8,9 };\n-  return 0;\n-}\n-\n-/* { dg-final { scan-assembler \".stabs.*vi\\:\\\\(0,\\[0-9\\]+\\\\)=\\@V\" } } */"}, {"sha": "492ee6c182bbcd2ddb88db051e6043f9dd2bd6cd", "filename": "gcc/testsuite/gcc.target/s390/20041216-1.c", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20041216-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20041216-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20041216-1.c?ref=0b0a3cdbff64d97e7de3e0e2c26e965708064193", "patch": "@@ -1,23 +0,0 @@\n-/* This test case would get an unresolved symbol during link\n-   because stabs referred to an optimized-away literal pool\n-   entry.  */\n-\n-/* { dg-do run } */\n-/* { dg-options \"-O2 -fno-omit-frame-pointer -gstabs\" } */\n-\n-int main (void)\n-{\n-  static char buf[4096];\n-  char *p;\n-\n-  do\n-    {\n-      p = buf;\n-      asm volatile (\"\" : : : \"memory\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\",\n-\t\t\t\t       \"7\", \"8\", \"9\", \"10\", \"12\");\n-    }\n-  while (*p);\n-\n-  return 0;\n-}\n-"}, {"sha": "5e5c42e9b8fcb46d8104282a96d2ca4304fa3409", "filename": "gcc/testsuite/gfortran.dg/debug/pr35154-stabs.f", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Ftestsuite%2Fgfortran.dg%2Fdebug%2Fpr35154-stabs.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Ftestsuite%2Fgfortran.dg%2Fdebug%2Fpr35154-stabs.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdebug%2Fpr35154-stabs.f?ref=0b0a3cdbff64d97e7de3e0e2c26e965708064193", "patch": "@@ -1,35 +0,0 @@\n-C     Test program for common block debugging.  G. Helffrich 11 July 2004.\n-C { dg-do compile }\n-C { dg-skip-if \"No stabs\" { aarch64*-*-* mmix-*-* alpha*-*-* hppa*64*-*-* ia64-*-* *-*-vxworks* } }\n-C { dg-skip-if \"No stabs\" { *-*-* } { \"*\" } { \"-gstabs\" } }\n-      common i,j\n-      common /label/l,m\n-      i = 1\n-      j = 2\n-      k = 3\n-      l = 4\n-      m = 5\n-      call sub\n-      end\n-      subroutine sub\n-      common /label/l,m\n-      logical first\n-      save n\n-      data first /.true./\n-      if (first) then\n-         n = 0\n-\t first = .false.\n-      endif\n-      n = n + 1\n-      l = l + 1\n-      return\n-      end\n-\n-C { dg-final { scan-assembler \".stabs.*\\\"__BLNK__\\\",226\" } }\n-C { dg-final { scan-assembler \".stabs.*\\\"i:V.*\\\",.*,0\" } }\n-C { dg-final { scan-assembler \".stabs.*\\\"j:V.*\\\",.*,4\" } }\n-C { dg-final { scan-assembler \".stabs.*\\\"__BLNK__\\\",228\" } }\n-C { dg-final { scan-assembler \".stabs.*\\\"label_\\\",226\" } }\n-C { dg-final { scan-assembler \".stabs.*\\\"l:V.*\\\",.*,0\" } }\n-C { dg-final { scan-assembler \".stabs.*\\\"m:V.*\\\",.*,4\" } }\n-C { dg-final { scan-assembler \".stabs.*\\\"label_\\\",228\" } }"}, {"sha": "23ec038f41eb9443c25ad6c14cb3aa69fc8dfcd7", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -656,7 +656,7 @@ proc gcc-dg-target-supports-debug-format { target_compile trivial type } {\n proc gcc-dg-debug-runtest { target_compile trivial opt_opts testcases } {\n     if ![info exists DEBUG_TORTURE_OPTIONS] {\n \tset DEBUG_TORTURE_OPTIONS \"\"\n-\tforeach type {-gctf -gdwarf-2 -gstabs -gstabs+ -gxcoff -gxcoff+} {\n+\tforeach type {-gctf -gdwarf-2} {\n \t    if [expr [gcc-dg-target-supports-debug-format \\\n \t\t      $target_compile $trivial $type]] {\n \t\tif { $type == \"-gctf\" } {"}, {"sha": "d4a245e0bfec1aac708d21478f8ebf470c0bccde", "filename": "gcc/testsuite/lib/gfortran-dg.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Ftestsuite%2Flib%2Fgfortran-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Ftestsuite%2Flib%2Fgfortran-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgfortran-dg.exp?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -170,7 +170,7 @@ proc gfortran-dg-debug-runtest { target_compile trivial opt_opts testcases } {\n \n     if ![info exists DEBUG_TORTURE_OPTIONS] {\n        set DEBUG_TORTURE_OPTIONS \"\"\n-       set type_list [list \"-gstabs\" \"-gstabs+\" \"-gxcoff\" \"-gxcoff+\" \"-gdwarf-2\" ]\n+       set type_list [list \"-gdwarf-2\" ]\n        foreach type $type_list {\n            set comp_output [$target_compile \\\n                    \"$srcdir/$subdir/$trivial\" \"trivial.S\" assembly \\"}, {"sha": "1de2e8c4c3f57e94020c28b19370ad0702564d73", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -1117,15 +1117,6 @@ proc check_effective_target_pthread {} {\n     } \"-pthread\"]\n }\n \n-# Return 1 if compilation with -gstabs is error-free for trivial\n-# code, 0 otherwise.\n-\n-proc check_effective_target_stabs {} {\n-    return [check_no_compiler_messages stabs object {\n-\tvoid foo (void) { }\n-    } \"-gstabs\"]\n-}\n-\n # Return 1 if compilation with -mpe-aligned-commons is error-free\n # for trivial code, 0 otherwise.\n "}, {"sha": "b97e4d6a762bc038b0e51a6dc3d66f84f031c2da", "filename": "gcc/testsuite/objc.dg/stabs-1.m", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Ftestsuite%2Fobjc.dg%2Fstabs-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Ftestsuite%2Fobjc.dg%2Fstabs-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fstabs-1.m?ref=0b0a3cdbff64d97e7de3e0e2c26e965708064193", "patch": "@@ -1,19 +0,0 @@\n-/* Check if the final SO STABS record goes into the .text section.  */\n-/* Contributed by Ziemowit Laski <zlaski@apple.com> */\n-\n-/* { dg-do compile { target stabs } } */\n-/* { dg-options \"-gstabs\" } */\n-/* { dg-additional-options \"-Wno-objc-root-class\" } */\n-\n-@interface MyClass\n-+ newWithArg: arg;\n-@end\n-\n-@implementation MyClass\n-+ newWithArg: arg\n-{\n-}\n-@end\n-\n-/* See PR target/52152 for the xfail.  */\n-/* { dg-final { scan-assembler \"(.SUBSPA.*\\[\\$\\]CODE\\[\\$\\]|.text\\\"?)\\n\\t.stabs.*100,0,0,(\\[\\.\\$\\])?L?L\\[\\$\\]?etext\\[0-9\\]*\\n(\\[\\.\\$\\])?L?L\\[\\$\\]?etext\" { xfail mips*-*-elf* } } } */"}, {"sha": "924871fa9a8756a5dd3393ce06d64298e1b03e99", "filename": "gcc/toplev.cc", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Ftoplev.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Ftoplev.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.cc?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -89,14 +89,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ipa-param-manipulation.h\"\n #include \"dbgcnt.h\"\n \n-#if defined(DBX_DEBUGGING_INFO) || defined(XCOFF_DEBUGGING_INFO)\n-#include \"dbxout.h\"\n-#endif\n-\n-#ifdef XCOFF_DEBUGGING_INFO\n-#include \"xcoffout.h\"\t\t/* Needed for external data declarations. */\n-#endif\n-\n #include \"selftest.h\"\n \n #ifdef HAVE_isl\n@@ -1417,21 +1409,8 @@ process_options (bool no_backend)\n       && ctf_debug_info_level == CTFINFO_LEVEL_NONE)\n     write_symbols = NO_DEBUG;\n \n-  /* Warn if STABS debug gets enabled and is not the default.  */\n-  if (PREFERRED_DEBUGGING_TYPE != DBX_DEBUG && (write_symbols & DBX_DEBUG))\n-    warning (0, \"STABS debugging information is obsolete and not \"\n-\t     \"supported anymore\");\n-\n   if (write_symbols == NO_DEBUG)\n     ;\n-#if defined(DBX_DEBUGGING_INFO)\n-  else if (write_symbols == DBX_DEBUG)\n-    debug_hooks = &dbx_debug_hooks;\n-#endif\n-#if defined(XCOFF_DEBUGGING_INFO)\n-  else if (write_symbols == XCOFF_DEBUG)\n-    debug_hooks = &xcoff_debug_hooks;\n-#endif\n #ifdef DWARF2_DEBUGGING_INFO\n   else if (dwarf_debuginfo_p ())\n     debug_hooks = &dwarf2_debug_hooks;"}, {"sha": "b0c4d6ae8ed2ac2dfd012806eeeabd7a45159aa5", "filename": "gcc/varasm.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fvarasm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e0db0cdf01e9c885a29cb37415f5bc00d90c029/gcc%2Fvarasm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.cc?ref=7e0db0cdf01e9c885a29cb37415f5bc00d90c029", "patch": "@@ -62,10 +62,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"toplev.h\"\n #include \"opts.h\"\n \n-#ifdef XCOFF_DEBUGGING_INFO\n-#include \"xcoffout.h\"\t\t/* Needed for external data declarations.  */\n-#endif\n-\n /* The (assembler) name of the first globally-visible object output.  */\n extern GTY(()) const char *first_global_object_name;\n extern GTY(()) const char *weak_global_object_name;"}, {"sha": "bafd355241717ba683767cbfadb229960d5df1bc", "filename": "gcc/xcoffout.cc", "status": "removed", "additions": 0, "deletions": 494, "changes": 494, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Fxcoffout.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Fxcoffout.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fxcoffout.cc?ref=0b0a3cdbff64d97e7de3e0e2c26e965708064193", "patch": "@@ -1,494 +0,0 @@\n-/* Output xcoff-format symbol table information from GNU compiler.\n-   Copyright (C) 1992-2022 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify it under\n-the terms of the GNU General Public License as published by the Free\n-Software Foundation; either version 3, or (at your option) any later\n-version.\n-\n-GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-/* Output xcoff-format symbol table data.  The main functionality is contained\n-   in dbxout.cc.  This file implements the sdbout-like parts of the xcoff\n-   interface.  Many functions are very similar to their counterparts in\n-   the former sdbout.c file.  */\n-\n-#include \"config.h\"\n-#include \"system.h\"\n-#include \"coretypes.h\"\n-#include \"target.h\"\n-#include \"rtl.h\"\n-#include \"tree.h\"\n-#include \"diagnostic-core.h\"\n-#include \"varasm.h\"\n-#include \"output.h\"\n-#include \"debug.h\"\n-#include \"file-prefix-map.h\" /* remap_debug_filename()  */\n-\n-#ifdef XCOFF_DEBUGGING_INFO\n-\n-/* This defines the C_* storage classes.  */\n-#include \"xcoff.h\"\n-#include \"xcoffout.h\"\n-#include \"dbxout.h\"\n-#include \"gstab.h\"\n-\n-/* Line number of beginning of current function, minus one.\n-   Negative means not in a function or not using xcoff.  */\n-\n-static int xcoff_begin_function_line = -1;\n-static int xcoff_inlining = 0;\n-\n-/* Name of the current include file.  */\n-\n-const char *xcoff_current_include_file;\n-\n-/* Name of the current function file.  This is the file the `.bf' is\n-   emitted from.  In case a line is emitted from a different file,\n-   (by including that file of course), then the line number will be\n-   absolute.  */\n-\n-static const char *xcoff_current_function_file;\n-\n-/* Names of bss and data sections.  These should be unique names for each\n-   compilation unit.  */\n-\n-char *xcoff_bss_section_name;\n-char *xcoff_private_data_section_name;\n-char *xcoff_private_rodata_section_name;\n-char *xcoff_tls_data_section_name;\n-char *xcoff_read_only_section_name;\n-\n-/* Last source file name mentioned in a NOTE insn.  */\n-\n-const char *xcoff_lastfile;\n-\f\n-/* Macro definitions used below.  */\n-\n-#define ABS_OR_RELATIVE_LINENO(LINENO)\t\t\\\n-((xcoff_inlining) ? (LINENO) : (LINENO) - xcoff_begin_function_line)\n-\n-/* Output source line numbers via \".line\".  */\n-#define ASM_OUTPUT_LINE(FILE,LINENUM)\t\t\t\t\t   \\\n-  do\t\t\t\t\t\t\t\t\t   \\\n-    {\t\t\t\t\t\t\t\t\t   \\\n-      /* Make sure we're in a function and prevent output of .line 0, as   \\\n-\t line # 0 is meant for symbol addresses in xcoff.  Additionally,   \\\n-\t line numbers are 'unsigned short' in 32-bit mode.  */\t\t   \\\n-      if (xcoff_begin_function_line >= 0)\t\t\t\t   \\\n-\t{\t\t\t\t\t\t\t\t   \\\n-\t  int lno = ABS_OR_RELATIVE_LINENO (LINENUM);\t\t\t   \\\n-\t  if (lno > 0 && (TARGET_64BIT || lno <= (int)USHRT_MAX))\t   \\\n-\t    fprintf (FILE, \"\\t.line\\t%d\\n\", lno);\t\t\t   \\\n-\t}\t\t\t\t\t\t\t\t   \\\n-    }\t\t\t\t\t\t\t\t\t   \\\n-  while (0)\n-\n-#define ASM_OUTPUT_LFB(FILE,LINENUM) \\\n-{\t\t\t\t\t\t\\\n-  if (xcoff_begin_function_line == -1)\t\t\\\n-    {\t\t\t\t\t\t\\\n-      xcoff_begin_function_line = (LINENUM) - 1;\\\n-      fprintf (FILE, \"\\t.bf\\t%d\\n\", (LINENUM));\t\\\n-    }\t\t\t\t\t\t\\\n-  xcoff_current_function_file\t\t\t\\\n-    = (xcoff_current_include_file\t\t\\\n-       ? xcoff_current_include_file : main_input_filename); \\\n-}\n-\n-#define ASM_OUTPUT_LFE(FILE,LINENUM)\t\t\\\n-  do\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\\\n-      fprintf (FILE, \"\\t.ef\\t%d\\n\", (LINENUM));\t\\\n-      xcoff_begin_function_line = -1;\t\t\\\n-    }\t\t\t\t\t\t\\\n-  while (0)\n-\n-#define ASM_OUTPUT_LBB(FILE,LINENUM,BLOCKNUM) \\\n-  fprintf (FILE, \"\\t.bb\\t%d\\n\", ABS_OR_RELATIVE_LINENO (LINENUM))\n-\n-#define ASM_OUTPUT_LBE(FILE,LINENUM,BLOCKNUM) \\\n-  fprintf (FILE, \"\\t.eb\\t%d\\n\", ABS_OR_RELATIVE_LINENO (LINENUM))\n-\n-static void xcoffout_block (tree, int, tree);\n-static void xcoffout_source_file (FILE *, const char *, int);\n-\f\n-/* Support routines for XCOFF debugging info.  */\n-\n-struct xcoff_type_number\n-{\n-  const char *name;\n-  int number;\n-};\n-static const struct xcoff_type_number xcoff_type_numbers[] = {\n-  { \"int\", -1 },\n-  { \"char\", -2 },\n-  { \"short int\", -3 },\n-  { \"long int\", -4 },  /* fiddled to -31 if 64 bits */\n-  { \"unsigned char\", -5 },\n-  { \"signed char\", -6 },\n-  { \"short unsigned int\", -7 },\n-  { \"unsigned int\", -8 },\n-  /* No such type \"unsigned\".  */\n-  { \"long unsigned int\", -10 }, /* fiddled to -32 if 64 bits */\n-  { \"void\", -11 },\n-  { \"float\", -12 },\n-  { \"double\", -13 },\n-  { \"long double\", -14 },\n-  /* Fortran types run from -15 to -29.  */\n-  { \"wchar\", -30 },  /* XXX Should be \"wchar_t\" ? */\n-  { \"long long int\", -31 },\n-  { \"long long unsigned int\", -32 },\n-  /* Additional Fortran types run from -33 to -37.  */\n-\n-  /* ??? Should also handle built-in C++ and Obj-C types.  There perhaps\n-     aren't any that C doesn't already have.  */\n-};\n-\n-/* Returns an XCOFF fundamental type number for DECL (assumed to be a\n-   TYPE_DECL), or 0 if dbxout.cc should assign a type number normally.  */\n-int\n-xcoff_assign_fundamental_type_number (tree decl)\n-{\n-  const char *name;\n-  size_t i;\n-\n-  /* Do not waste time searching the list for non-intrinsic types.  */\n-  if (DECL_NAME (decl) == 0 || ! DECL_IS_UNDECLARED_BUILTIN (decl))\n-    return 0;\n-\n-  name = IDENTIFIER_POINTER (DECL_NAME (decl));\n-\n-  /* Linear search, blech, but the list is too small to bother\n-     doing anything else.  */\n-  for (i = 0; i < ARRAY_SIZE (xcoff_type_numbers); i++)\n-    if (!strcmp (xcoff_type_numbers[i].name, name))\n-      goto found;\n-  return 0;\n-\n- found:\n-  /* -4 and -10 should be replaced with -31 and -32, respectively,\n-     when used for a 64-bit type.  */\n-  if (int_size_in_bytes (TREE_TYPE (decl)) == 8)\n-    {\n-      if (xcoff_type_numbers[i].number == -4)\n-\treturn -31;\n-      if (xcoff_type_numbers[i].number == -10)\n-\treturn -32;\n-    }\n-  return xcoff_type_numbers[i].number;\n-}\n-\n-/* Print an error message for unrecognized stab codes.  */\n-\n-#define UNKNOWN_STAB(STR)\t\\\n-  internal_error (\"no sclass for %s stab (0x%x)\", STR, stab)\n-\n-/* Conversion routine from BSD stabs to AIX storage classes.  */\n-\n-int\n-stab_to_sclass (int stab)\n-{\n-  switch (stab)\n-    {\n-    case N_GSYM:\n-      return C_GSYM;\n-\n-    case N_FNAME:\n-      UNKNOWN_STAB (\"N_FNAME\");\n-\n-    case N_FUN:\n-      return C_FUN;\n-\n-    case N_STSYM:\n-    case N_LCSYM:\n-      return C_STSYM;\n-\n-    case N_MAIN:\n-      UNKNOWN_STAB (\"N_MAIN\");\n-\n-    case N_RSYM:\n-      return C_RSYM;\n-\n-    case N_SSYM:\n-      UNKNOWN_STAB (\"N_SSYM\");\n-\n-    case N_RPSYM:\n-      return C_RPSYM;\n-\n-    case N_PSYM:\n-      return C_PSYM;\n-    case N_LSYM:\n-      return C_LSYM;\n-    case N_DECL:\n-      return C_DECL;\n-    case N_ENTRY:\n-      return C_ENTRY;\n-\n-    case N_SO:\n-      UNKNOWN_STAB (\"N_SO\");\n-\n-    case N_SOL:\n-      UNKNOWN_STAB (\"N_SOL\");\n-\n-    case N_SLINE:\n-      UNKNOWN_STAB (\"N_SLINE\");\n-\n-    case N_DSLINE:\n-      UNKNOWN_STAB (\"N_DSLINE\");\n-\n-    case N_BSLINE:\n-      UNKNOWN_STAB (\"N_BSLINE\");\n-\n-    case N_BINCL:\n-      UNKNOWN_STAB (\"N_BINCL\");\n-\n-    case N_EINCL:\n-      UNKNOWN_STAB (\"N_EINCL\");\n-\n-    case N_EXCL:\n-      UNKNOWN_STAB (\"N_EXCL\");\n-\n-    case N_LBRAC:\n-      UNKNOWN_STAB (\"N_LBRAC\");\n-\n-    case N_RBRAC:\n-      UNKNOWN_STAB (\"N_RBRAC\");\n-\n-    case N_BCOMM:\n-      return C_BCOMM;\n-    case N_ECOMM:\n-      return C_ECOMM;\n-    case N_ECOML:\n-      return C_ECOML;\n-\n-    case N_LENG:\n-      UNKNOWN_STAB (\"N_LENG\");\n-\n-    case N_PC:\n-      UNKNOWN_STAB (\"N_PC\");\n-\n-    case N_M2C:\n-      UNKNOWN_STAB (\"N_M2C\");\n-\n-    case N_SCOPE:\n-      UNKNOWN_STAB (\"N_SCOPE\");\n-\n-    case N_CATCH:\n-      UNKNOWN_STAB (\"N_CATCH\");\n-\n-    case N_OPT:\n-      UNKNOWN_STAB (\"N_OPT\");\n-\n-    default:\n-      UNKNOWN_STAB (\"?\");\n-    }\n-}\n-\f\n-/* Output debugging info to FILE to switch to sourcefile FILENAME.\n-   INLINE_P is true if this is from an inlined function.  */\n-\n-static void\n-xcoffout_source_file (FILE *file, const char *filename, int inline_p)\n-{\n-  if (filename\n-      && (xcoff_lastfile == 0 || strcmp (filename, xcoff_lastfile)\n-\t  || (inline_p && ! xcoff_inlining)\n-\t  || (! inline_p && xcoff_inlining)))\n-    {\n-      if (xcoff_current_include_file)\n-\t{\n-\t  fprintf (file, \"\\t.ei\\t\");\n-\t  output_quoted_string (file,\n-\t      remap_debug_filename (xcoff_current_include_file));\n-\t  fprintf (file, \"\\n\");\n-\t  xcoff_current_include_file = NULL;\n-\t}\n-      xcoff_inlining = inline_p;\n-      if (strcmp (main_input_filename, filename) || inline_p)\n-\t{\n-\t  fprintf (file, \"\\t.bi\\t\");\n-\t  output_quoted_string (file, remap_debug_filename (filename));\n-\t  fprintf (file, \"\\n\");\n-\t  xcoff_current_include_file = filename;\n-\t}\n-      xcoff_lastfile = filename;\n-    }\n-}\n-\n-/* Output a line number symbol entry for location (FILENAME, LINE).  */\n-\n-void\n-xcoffout_source_line (unsigned int line, unsigned int column ATTRIBUTE_UNUSED,\n-\t\t      const char *filename, int discriminator ATTRIBUTE_UNUSED,\n-                      bool is_stmt ATTRIBUTE_UNUSED)\n-{\n-  bool inline_p = (strcmp (xcoff_current_function_file, filename) != 0\n-\t\t   || (int) line < xcoff_begin_function_line);\n-\n-  xcoffout_source_file (asm_out_file, filename, inline_p);\n-\n-  ASM_OUTPUT_LINE (asm_out_file, line);\n-}\n-\f\n-/* Output the symbols defined in block number DO_BLOCK.\n-\n-   This function works by walking the tree structure of blocks,\n-   counting blocks until it finds the desired block.  */\n-\n-static unsigned int do_block = 0;\n-\n-static void\n-xcoffout_block (tree block, int depth, tree args)\n-{\n-  while (block)\n-    {\n-      /* Ignore blocks never expanded or otherwise marked as real.  */\n-      if (TREE_USED (block))\n-\t{\n-\t  /* When we reach the specified block, output its symbols.  */\n-\t  if (BLOCK_NUMBER (block) == do_block)\n-\t    {\n-\t      /* Output the syms of the block.  */\n-\t      if (debug_info_level != DINFO_LEVEL_TERSE || depth == 0)\n-\t\tdbxout_syms (BLOCK_VARS (block));\n-\t      if (args)\n-\t\tdbxout_reg_parms (args);\n-\n-\t      /* We are now done with the block.  Don't go to inner blocks.  */\n-\t      return;\n-\t    }\n-\t  /* If we are past the specified block, stop the scan.  */\n-\t  else if (BLOCK_NUMBER (block) >= do_block)\n-\t    return;\n-\n-\t  /* Output the subblocks.  */\n-\t  xcoffout_block (BLOCK_SUBBLOCKS (block), depth + 1, NULL_TREE);\n-\t}\n-      block = BLOCK_CHAIN (block);\n-    }\n-}\n-\n-/* Describe the beginning of an internal block within a function.\n-   Also output descriptions of variables defined in this block.\n-\n-   N is the number of the block, by order of beginning, counting from 1,\n-   and not counting the outermost (function top-level) block.\n-   The blocks match the BLOCKs in DECL_INITIAL (current_function_decl),\n-   if the count starts at 0 for the outermost one.  */\n-\n-void\n-xcoffout_begin_block (unsigned int line, unsigned int n)\n-{\n-  tree decl = current_function_decl;\n-\n-  /* The IBM AIX compiler does not emit a .bb for the function level scope,\n-     so we avoid it here also.  */\n-  if (n != 1)\n-    ASM_OUTPUT_LBB (asm_out_file, line, n);\n-\n-  do_block = n;\n-  xcoffout_block (DECL_INITIAL (decl), 0, DECL_ARGUMENTS (decl));\n-}\n-\n-/* Describe the end line-number of an internal block within a function.  */\n-\n-void\n-xcoffout_end_block (unsigned int line, unsigned int n)\n-{\n-  if (n != 1)\n-    ASM_OUTPUT_LBE (asm_out_file, line, n);\n-}\n-\n-/* Called at beginning of function (before prologue).\n-   Declare function as needed for debugging.  */\n-\n-void\n-xcoffout_declare_function (FILE *file, tree decl, const char *name)\n-{\n-  size_t len;\n-\n-  if (*name == '*')\n-    name++;\n-  len = strlen (name);\n-  if (name[len - 1] == ']')\n-    {\n-      char *n = XALLOCAVEC (char, len - 3);\n-      memcpy (n, name, len - 4);\n-      n[len - 4] = '\\0';\n-      name = n;\n-    }\n-\n-  /* Any pending .bi or .ei must occur before the .function pseudo op.\n-     Otherwise debuggers will think that the function is in the previous\n-     file and/or at the wrong line number.  */\n-  xcoffout_source_file (file, DECL_SOURCE_FILE (decl), 0);\n-  dbxout_symbol (decl, 0);\n-\n-  /* .function NAME, TOP, MAPPING, TYPE, SIZE\n-     16 and 044 are placeholders for backwards compatibility */\n-  fprintf (file, \"\\t.function .%s,.%s,16,044,FE..%s-.%s\\n\",\n-\t   name, name, name, name);\n-}\n-\n-/* Called at beginning of function body (at start of prologue).\n-   Record the function's starting line number, so we can output\n-   relative line numbers for the other lines.\n-   Record the file name that this function is contained in.  */\n-\n-void\n-xcoffout_begin_prologue (unsigned int line,\n-\t\t\t unsigned int column ATTRIBUTE_UNUSED,\n-\t\t\t const char *file ATTRIBUTE_UNUSED)\n-{\n-  ASM_OUTPUT_LFB (asm_out_file, line);\n-  dbxout_parms (DECL_ARGUMENTS (current_function_decl));\n-\n-  /* Emit the symbols for the outermost BLOCK's variables.  sdbout.c did this\n-     in sdbout_begin_block, but there is no guarantee that there will be any\n-     inner block 1, so we must do it here.  This gives a result similar to\n-     dbxout, so it does make some sense.  */\n-  do_block = BLOCK_NUMBER (DECL_INITIAL (current_function_decl));\n-  xcoffout_block (DECL_INITIAL (current_function_decl), 0,\n-\t\t  DECL_ARGUMENTS (current_function_decl));\n-\n-  ASM_OUTPUT_LINE (asm_out_file, line);\n-}\n-\n-/* Called at end of function (before epilogue).\n-   Describe end of outermost block.  */\n-\n-void\n-xcoffout_end_function (unsigned int last_linenum)\n-{\n-  ASM_OUTPUT_LFE (asm_out_file, last_linenum);\n-}\n-\n-/* Output xcoff info for the absolute end of a function.\n-   Called after the epilogue is output.  */\n-\n-void\n-xcoffout_end_epilogue (unsigned int line ATTRIBUTE_UNUSED,\n-\t\t       const char *file ATTRIBUTE_UNUSED)\n-{\n-  /* We need to pass the correct function size to .function, otherwise,\n-     the xas assembler can't figure out the correct size for the function\n-     aux entry.  So, we emit a label after the last instruction which can\n-     be used by the .function pseudo op to calculate the function size.  */\n-\n-  const char *fname = XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0);\n-  if (*fname == '*')\n-    ++fname;\n-  fprintf (asm_out_file, \"FE..\");\n-  ASM_OUTPUT_LABEL (asm_out_file, fname);\n-}\n-#endif /* XCOFF_DEBUGGING_INFO */"}, {"sha": "f28e83ea9fc070dd89243c68a7f7959bdf0c87c4", "filename": "gcc/xcoffout.h", "status": "removed", "additions": 0, "deletions": 194, "changes": 194, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Fxcoffout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b0a3cdbff64d97e7de3e0e2c26e965708064193/gcc%2Fxcoffout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fxcoffout.h?ref=0b0a3cdbff64d97e7de3e0e2c26e965708064193", "patch": "@@ -1,194 +0,0 @@\n-/* XCOFF definitions.  These are needed in dbxout.cc, final.cc,\n-   and xcoffout.h.\n-   Copyright (C) 1998-2022 Free Software Foundation, Inc.\n-\n-This file is part of GCC.\n-\n-GCC is free software; you can redistribute it and/or modify it under\n-the terms of the GNU General Public License as published by the Free\n-Software Foundation; either version 3, or (at your option) any later\n-version.\n-\n-GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#ifndef GCC_XCOFFOUT_H\n-#define GCC_XCOFFOUT_H\n-\n-/* Tags and typedefs are C_DECL in XCOFF, not C_LSYM.  */\n-\n-#define DBX_TYPE_DECL_STABS_CODE N_DECL\n-\n-/* Use the XCOFF predefined type numbers.  */\n-\n-#define DBX_ASSIGN_FUNDAMENTAL_TYPE_NUMBER(TYPE) \\\n-  xcoff_assign_fundamental_type_number (TYPE)\n-\n-/* Any type with a negative type index has already been output.  */\n-\n-#define DBX_TYPE_DEFINED(TYPE) (TYPE_SYMTAB_ADDRESS (TYPE) < 0)\n-\n-/* Must use N_STSYM for static const variables (those in the text section)\n-   instead of N_FUN.  */\n-\n-#define DBX_STATIC_CONST_VAR_CODE N_STSYM\n-\n-/* For static variables, output code to define the start of a static block.  */\n-\n-#define DBX_STATIC_BLOCK_START(ASMFILE,CODE)\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if ((CODE) == N_STSYM)\t\t\t\t\t\t\\\n-    fprintf ((ASMFILE), \"\\t.bs\\t%s[RW]\\n\", xcoff_private_data_section_name);\\\n-  else if ((CODE) == N_LCSYM)\t\t\t\t\t\t\\\n-    fprintf ((ASMFILE), \"\\t.bs\\t%s\\n\", xcoff_bss_section_name);\t\\\n-}\n-\n-/* For static variables, output code to define the end of a static block.  */\n-\n-#define DBX_STATIC_BLOCK_END(ASMFILE,CODE)\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if ((CODE) == N_STSYM || (CODE) == N_LCSYM)\t\t\t\t\\\n-    fputs (\"\\t.es\\n\", (ASMFILE));\t\t\t\t\t\\\n-}\n-\n-/* We must use N_RPYSM instead of N_RSYM for register parameters.  */\n-\n-#define DBX_REGPARM_STABS_CODE N_RPSYM\n-\n-/* We must use 'R' instead of 'P' for register parameters.  */\n-\n-#define DBX_REGPARM_STABS_LETTER 'R'\n-\n-/* Define our own finish symbol function, since xcoff stabs have their\n-   own different format.  */\n-\n-#define DBX_FINISH_STABS(SYM, CODE, LINE, ADDR, LABEL, NUMBER) do {\t\\\n-  if (ADDR)\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      /* If we are writing a function name, we must emit a dot in\t\\\n-\t order to refer to the function code, not its descriptor.  */\t\\\n-      if (CODE == N_FUN)\t\t\t\t\t\t\\\n-\tputc ('.', asm_out_file);\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-      /* If we are writing a function name, we must ensure that\t\t\\\n-\t there is no storage-class suffix on the name.  */\t\t\\\n-      if (CODE == N_FUN && GET_CODE (ADDR) == SYMBOL_REF)\t\t\\\n-\t{\t\t\t\t\t\t\t\t\\\n-\t  const char *_p = XSTR (ADDR, 0);\t\t\t\t\\\n-\t  if (*_p == '*')\t\t\t\t\t\t\\\n-\t    fputs (_p+1, asm_out_file);\t\t\t\t\t\\\n-\t  else\t\t\t\t\t\t\t\t\\\n-\t    for (; *_p != '[' && *_p; _p++)\t\t\t\t\\\n-\t      putc (*_p != '$' ? *_p : '_', asm_out_file);\t\t\\\n-\t}\t\t\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\t\t\\\n-\toutput_addr_const (asm_out_file, ADDR);\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-  /* Another special case: N_GSYM always gets the symbol name,\t\t\\\n-     whether or not LABEL or NUMBER are set.  */\t\t\t\\\n-  else if (CODE == N_GSYM)\t\t\t\t\t\t\\\n-    assemble_name (asm_out_file, XSTR (XEXP (DECL_RTL (SYM), 0), 0));\t\\\n-  else if (LABEL)\t\t\t\t\t\t\t\\\n-    assemble_name (asm_out_file, LABEL);\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    dbxout_int (NUMBER);\t\t\t\t\t\t\\\n-  putc (',', asm_out_file);\t\t\t\t\t\t\\\n-  dbxout_int (stab_to_sclass (CODE));\t\t\t\t\t\\\n-  fputs (\",0\\n\", asm_out_file);\t\t\t\t\t\t\\\n-} while (0)\n-\n-/* These are IBM XCOFF extensions we need to reference in dbxout.cc\n-   and xcoffout.cc.  */\n-\n-/* AIX XCOFF uses this for typedefs.  This can have any value, since it is\n-   only used for translation into a C_DECL storage class.  */\n-#ifndef N_DECL\n-#define N_DECL 0x8c\n-#endif\n-/* AIX XCOFF uses this for parameters passed in registers.  This can have\n-   any value, since it is only used for translation into a C_RPSYM storage\n-   class.  */\n-#ifndef N_RPSYM\n-#define N_RPSYM 0x8e\n-#endif\n-\n-/* Name of the current include file.  */\n-\n-extern const char *xcoff_current_include_file;\n-\n-/* Names of bss and data sections.  These should be unique names for each\n-   compilation unit.  */\n-\n-extern char *xcoff_bss_section_name;\n-extern char *xcoff_private_data_section_name;\n-extern char *xcoff_private_rodata_section_name;\n-extern char *xcoff_tls_data_section_name;\n-extern char *xcoff_read_only_section_name;\n-\n-/* Last source file name mentioned in a NOTE insn.  */\n-\n-extern const char *xcoff_lastfile;\n-\n-/* Don't write out path name for main source file.  */\n-#define NO_DBX_MAIN_SOURCE_DIRECTORY 1\n-\n-/* Write out main source file name using \".file\" rather than \".stabs\".\n-   We don't actually do this here, because the assembler gets confused if there\n-   is more than one .file directive.  rs6000_xcoff_file_start is already\n-   emitting a .file directory, so we don't output one here also.\n-   Initialize xcoff_lastfile.  */\n-#define DBX_OUTPUT_MAIN_SOURCE_FILENAME(FILE,FILENAME) \\\n-  xcoff_lastfile = (FILENAME)\n-\n-/* If we are still in an include file, its end must be marked.  */\n-#define DBX_OUTPUT_MAIN_SOURCE_FILE_END(FILE, FILENAME)\t\\\n-do {\t\t\t\t\t\t\t\\\n-  if (xcoff_current_include_file)\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      fputs (\"\\t.ei\\t\", (FILE));\t\t\t\\\n-      output_quoted_string ((FILE), xcoff_current_include_file);\t\\\n-      putc ('\\n', (FILE));\t\t\t\t\\\n-      xcoff_current_include_file = NULL;\t\t\\\n-    }\t\t\t\t\t\t\t\\\n-} while (0)\n-\n-/* Do not emit any marker for XCOFF until assembler allows XFT_CV.  */\n-#define NO_DBX_GCC_MARKER\n-\n-/* XCOFF32 maximum length is 64K; XLC limits to 16K.  */\n-#define DBX_CONTIN_LENGTH 16384\n-\n-/* XLC uses '?' as continuation character.  */\n-#define DBX_CONTIN_CHAR '?'\n-\n-/* Don't try to use the `x' type-cross-reference character in DBX data.\n-   Also has the consequence of putting each struct, union or enum\n-   into a separate .stabs, containing only cross-refs to the others.  */\n-#define DBX_NO_XREFS\n-\n-/* We must put stabs in the text section.  If we don't the assembler\n-   won't handle them correctly; it will sometimes put stabs where gdb\n-   can't find them.  */\n-\n-#define DEBUG_SYMS_TEXT\n-\n-/* Prototype functions in xcoffout.cc.  */\n-\n-extern int stab_to_sclass (int);\n-extern void xcoffout_begin_prologue (unsigned int, unsigned int, const char *);\n-extern void xcoffout_begin_block (unsigned, unsigned);\n-extern void xcoffout_end_epilogue (unsigned int, const char *);\n-extern void xcoffout_end_function (unsigned int);\n-extern void xcoffout_end_block (unsigned, unsigned);\n-extern int xcoff_assign_fundamental_type_number (tree);\n-extern void xcoffout_declare_function (FILE *, tree, const char *);\n-extern void xcoffout_source_line (unsigned int, unsigned int, const char *,\n-\t\t\t\t  int, bool);\n-\n-#endif /* GCC_XCOFFOUT_H */"}]}