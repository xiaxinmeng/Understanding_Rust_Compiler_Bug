{"sha": "e331b3e342e156fabecf2cecb739c942d7b7b729", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTMzMWIzZTM0MmUxNTZmYWJlY2YyY2VjYjczOWM5NDJkN2I3YjcyOQ==", "commit": {"author": {"name": "Andy Hutchinson", "email": "hutchinsonandy@aim.com", "date": "2008-07-07T23:08:38Z"}, "committer": {"name": "Andy Hutchinson", "email": "hutchinsonandy@gcc.gnu.org", "date": "2008-07-07T23:08:38Z"}, "message": "20080625-1.c: Skip for AVR target.\n\n* gcc.c-torture/compile/20080625-1.c: Skip for AVR target.\n* gcc.dg/torture/pr36373-10.c: Correct test where target pointer is not same size as unsigned long.\n\nFrom-SVN: r137603", "tree": {"sha": "e9c61fdaa275f8bf822d31ba12e30c64075c71fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9c61fdaa275f8bf822d31ba12e30c64075c71fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e331b3e342e156fabecf2cecb739c942d7b7b729", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e331b3e342e156fabecf2cecb739c942d7b7b729", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e331b3e342e156fabecf2cecb739c942d7b7b729", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e331b3e342e156fabecf2cecb739c942d7b7b729/comments", "author": null, "committer": null, "parents": [{"sha": "bcbdbbb01c116f62ad5a2150bf833a4c51a75e02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcbdbbb01c116f62ad5a2150bf833a4c51a75e02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcbdbbb01c116f62ad5a2150bf833a4c51a75e02"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "644c918d7f808200e28fd593a83a73148fd6f5aa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e331b3e342e156fabecf2cecb739c942d7b7b729/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e331b3e342e156fabecf2cecb739c942d7b7b729/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e331b3e342e156fabecf2cecb739c942d7b7b729", "patch": "@@ -1,3 +1,9 @@\n+2008-07-07  Andy Hutchinson  <hutchinsonandy@aim.com>\n+\n+\t* gcc.c-torture/compile/20080625-1.c: Skip for AVR target.\n+\t* gcc.dg/torture/pr36373-10.c: Correct test where target pointer \n+\tis not same size as unsigned long. \n+\n 2008-07-07  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/36670"}, {"sha": "226bea1ffaea357c0ff6d7437a1bcf85b18811f1", "filename": "gcc/testsuite/gcc.c-torture/compile/20080625-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e331b3e342e156fabecf2cecb739c942d7b7b729/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080625-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e331b3e342e156fabecf2cecb739c942d7b7b729/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080625-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080625-1.c?ref=e331b3e342e156fabecf2cecb739c942d7b7b729", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-skip-if \"too much data\" { \"avr-*-*\" } { \"*\" } { \"\" } } */\n struct peakbufStruct {\n     unsigned int lnum [5000];\n     int lscan [5000][4000];"}, {"sha": "ed701772828267dd33e98d6f727c862cb4333615", "filename": "gcc/testsuite/gcc.dg/torture/pr36373-10.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e331b3e342e156fabecf2cecb739c942d7b7b729/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr36373-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e331b3e342e156fabecf2cecb739c942d7b7b729/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr36373-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr36373-10.c?ref=e331b3e342e156fabecf2cecb739c942d7b7b729", "patch": "@@ -1,6 +1,14 @@\n /* { dg-do run } */\n \n+#if (__SIZEOF_LONG_LONG__ == __SIZEOF_POINTER__)\n+typedef unsigned long long uintptr_t;\n+#elif (__SIZEOF_LONG__ == __SIZEOF_POINTER__)\n typedef unsigned long uintptr_t;\n+#elif (__SIZEOF_INT__ == __SIZEOF_POINTER__)\n+typedef unsigned int uintptr_t;\n+#else\n+#error Add target support here\n+#endif\n \n void __attribute__((noinline))\n foo(uintptr_t l)"}]}