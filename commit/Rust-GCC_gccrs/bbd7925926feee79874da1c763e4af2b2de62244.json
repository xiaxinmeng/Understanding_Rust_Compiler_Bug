{"sha": "bbd7925926feee79874da1c763e4af2b2de62244", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJkNzkyNTkyNmZlZWU3OTg3NGRhMWM3NjNlNGFmMmIyZGU2MjI0NA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2013-12-09T19:28:00Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2013-12-09T19:28:00Z"}, "message": "Rename macros (basic_block_info_for_function, BASIC_BLOCK_FOR_FUNCTION,\n\nSET_BASIC_BLOCK_FOR_FUNCTION)\n\ngcc/\n\t* basic-block.h (basic_block_info_for_function): Rename to...\n\t(basic_block_info_for_fn): ...this.\n\t(BASIC_BLOCK_FOR_FUNCTION): Rename to...\n\t(BASIC_BLOCK_FOR_FN): ...this.\n\t(SET_BASIC_BLOCK_FOR_FUNCTION): Rename to...\n\t(SET_BASIC_BLOCK_FOR_FN): ...this.\n\n\t* gimple-streamer-in.c (input_phi, input_bb): Update for renaming\n\tof BASIC_BLOCK_FOR_FUNCTION to BASIC_BLOCK_FOR_FN.\n\t* ipa-utils.c (ipa_merge_profiles): Likewise.\n\t* lto-streamer-in.c (make_new_block): Update for renaming of\n\tSET_BASIC_BLOCK_FOR_FUNCTION to SET_BASIC_BLOCK_FOR_FN.\n\t(input_cfg): Update for renamings.\n\t* tree-cfg.c (init_empty_tree_cfg_for_function): Likewise.\n\t(dump_function_to_file): Update for renaming of\n\tbasic_block_info_for_function to basic_block_info_for_fn.\n\nFrom-SVN: r205816", "tree": {"sha": "5a2f5b9d50f7296da9ee986abdd750b460fad1d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a2f5b9d50f7296da9ee986abdd750b460fad1d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbd7925926feee79874da1c763e4af2b2de62244", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbd7925926feee79874da1c763e4af2b2de62244", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbd7925926feee79874da1c763e4af2b2de62244", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbd7925926feee79874da1c763e4af2b2de62244/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1f71a3c34d0909bd678aad967d4d853fc4c6d585", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f71a3c34d0909bd678aad967d4d853fc4c6d585", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f71a3c34d0909bd678aad967d4d853fc4c6d585"}], "stats": {"total": 63, "additions": 40, "deletions": 23}, "files": [{"sha": "6137c69ceca41702c263814de597596819888735", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbd7925926feee79874da1c763e4af2b2de62244/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbd7925926feee79874da1c763e4af2b2de62244/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bbd7925926feee79874da1c763e4af2b2de62244", "patch": "@@ -1,3 +1,22 @@\n+2013-12-09  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* basic-block.h (basic_block_info_for_function): Rename to...\n+\t(basic_block_info_for_fn): ...this.\n+\t(BASIC_BLOCK_FOR_FUNCTION): Rename to...\n+\t(BASIC_BLOCK_FOR_FN): ...this.\n+\t(SET_BASIC_BLOCK_FOR_FUNCTION): Rename to...\n+\t(SET_BASIC_BLOCK_FOR_FN): ...this.\n+\n+\t* gimple-streamer-in.c (input_phi, input_bb): Update for renaming\n+\tof BASIC_BLOCK_FOR_FUNCTION to BASIC_BLOCK_FOR_FN.\n+\t* ipa-utils.c (ipa_merge_profiles): Likewise.\n+\t* lto-streamer-in.c (make_new_block): Update for renaming of\n+\tSET_BASIC_BLOCK_FOR_FUNCTION to SET_BASIC_BLOCK_FOR_FN.\n+\t(input_cfg): Update for renamings.\n+\t* tree-cfg.c (init_empty_tree_cfg_for_function): Likewise.\n+\t(dump_function_to_file): Update for renaming of\n+\tbasic_block_info_for_function to basic_block_info_for_fn.\n+\n 2013-12-09  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/38474"}, {"sha": "234f6e9e929006dedccef187e8771c24cb651542", "filename": "gcc/basic-block.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbd7925926feee79874da1c763e4af2b2de62244/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbd7925926feee79874da1c763e4af2b2de62244/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=bbd7925926feee79874da1c763e4af2b2de62244", "patch": "@@ -314,17 +314,17 @@ struct GTY(()) control_flow_graph {\n /* Defines for accessing the fields of the CFG structure for function FN.  */\n #define ENTRY_BLOCK_PTR_FOR_FN(FN)\t     ((FN)->cfg->x_entry_block_ptr)\n #define EXIT_BLOCK_PTR_FOR_FN(FN)\t     ((FN)->cfg->x_exit_block_ptr)\n-#define basic_block_info_for_function(FN)    ((FN)->cfg->x_basic_block_info)\n+#define basic_block_info_for_fn(FN)\t     ((FN)->cfg->x_basic_block_info)\n #define n_basic_blocks_for_fn(FN)\t     ((FN)->cfg->x_n_basic_blocks)\n #define n_edges_for_fn(FN)\t\t     ((FN)->cfg->x_n_edges)\n #define last_basic_block_for_function(FN)    ((FN)->cfg->x_last_basic_block)\n #define label_to_block_map_for_function(FN)  ((FN)->cfg->x_label_to_block_map)\n #define profile_status_for_function(FN)\t     ((FN)->cfg->x_profile_status)\n \n-#define BASIC_BLOCK_FOR_FUNCTION(FN,N) \\\n-  ((*basic_block_info_for_function (FN))[(N)])\n-#define SET_BASIC_BLOCK_FOR_FUNCTION(FN,N,BB) \\\n-  ((*basic_block_info_for_function (FN))[(N)] = (BB))\n+#define BASIC_BLOCK_FOR_FN(FN,N) \\\n+  ((*basic_block_info_for_fn (FN))[(N)])\n+#define SET_BASIC_BLOCK_FOR_FN(FN,N,BB) \\\n+  ((*basic_block_info_for_fn (FN))[(N)] = (BB))\n \n /* Defines for textual backward source compatibility.  */\n #define basic_block_info\t(cfun->cfg->x_basic_block_info)"}, {"sha": "bc85ae9a353927a7ab60a65048055ff9f37d948b", "filename": "gcc/gimple-streamer-in.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbd7925926feee79874da1c763e4af2b2de62244/gcc%2Fgimple-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbd7925926feee79874da1c763e4af2b2de62244/gcc%2Fgimple-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-streamer-in.c?ref=bbd7925926feee79874da1c763e4af2b2de62244", "patch": "@@ -67,7 +67,7 @@ input_phi (struct lto_input_block *ib, basic_block bb, struct data_in *data_in,\n       int src_index = streamer_read_uhwi (ib);\n       bitpack_d bp = streamer_read_bitpack (ib);\n       location_t arg_loc = stream_input_location (&bp, data_in);\n-      basic_block sbb = BASIC_BLOCK_FOR_FUNCTION (fn, src_index);\n+      basic_block sbb = BASIC_BLOCK_FOR_FN (fn, src_index);\n \n       edge e = NULL;\n       int j;\n@@ -258,7 +258,7 @@ input_bb (struct lto_input_block *ib, enum LTO_tags tag,\n   gcc_assert (cfun == fn);\n \n   index = streamer_read_uhwi (ib);\n-  bb = BASIC_BLOCK_FOR_FUNCTION (fn, index);\n+  bb = BASIC_BLOCK_FOR_FN (fn, index);\n \n   bb->count = apply_scale (streamer_read_gcov_count (ib),\n                            count_materialization_scale);"}, {"sha": "5169bcc650830d5bea0a2fba957f63227b185278", "filename": "gcc/ipa-utils.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbd7925926feee79874da1c763e4af2b2de62244/gcc%2Fipa-utils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbd7925926feee79874da1c763e4af2b2de62244/gcc%2Fipa-utils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-utils.c?ref=bbd7925926feee79874da1c763e4af2b2de62244", "patch": "@@ -727,7 +727,7 @@ ipa_merge_profiles (struct cgraph_node *dst,\n \t{\n \t  unsigned int i;\n \n-\t  dstbb = BASIC_BLOCK_FOR_FUNCTION (dstcfun, srcbb->index);\n+\t  dstbb = BASIC_BLOCK_FOR_FN (dstcfun, srcbb->index);\n \t  if (dstbb == NULL)\n \t    {\n \t      if (cgraph_dump_file)\n@@ -772,7 +772,7 @@ ipa_merge_profiles (struct cgraph_node *dst,\n \t{\n \t  unsigned int i;\n \n-\t  dstbb = BASIC_BLOCK_FOR_FUNCTION (dstcfun, srcbb->index);\n+\t  dstbb = BASIC_BLOCK_FOR_FN (dstcfun, srcbb->index);\n \t  dstbb->count += srcbb->count;\n \t  for (i = 0; i < EDGE_COUNT (srcbb->succs); i++)\n \t    {"}, {"sha": "5a604d380d2decc4bc2f0a79ab97e1b5cec2b50e", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbd7925926feee79874da1c763e4af2b2de62244/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbd7925926feee79874da1c763e4af2b2de62244/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=bbd7925926feee79874da1c763e4af2b2de62244", "patch": "@@ -611,7 +611,7 @@ make_new_block (struct function *fn, unsigned int index)\n {\n   basic_block bb = alloc_block ();\n   bb->index = index;\n-  SET_BASIC_BLOCK_FOR_FUNCTION (fn, index, bb);\n+  SET_BASIC_BLOCK_FOR_FN (fn, index, bb);\n   n_basic_blocks_for_fn (fn)++;\n   return bb;\n }\n@@ -638,16 +638,16 @@ input_cfg (struct lto_input_block *ib, struct data_in *data_in,\n   bb_count = streamer_read_uhwi (ib);\n \n   last_basic_block_for_function (fn) = bb_count;\n-  if (bb_count > basic_block_info_for_function (fn)->length ())\n-    vec_safe_grow_cleared (basic_block_info_for_function (fn), bb_count);\n+  if (bb_count > basic_block_info_for_fn (fn)->length ())\n+    vec_safe_grow_cleared (basic_block_info_for_fn (fn), bb_count);\n \n   if (bb_count > label_to_block_map_for_function (fn)->length ())\n     vec_safe_grow_cleared (label_to_block_map_for_function (fn), bb_count);\n \n   index = streamer_read_hwi (ib);\n   while (index != -1)\n     {\n-      basic_block bb = BASIC_BLOCK_FOR_FUNCTION (fn, index);\n+      basic_block bb = BASIC_BLOCK_FOR_FN (fn, index);\n       unsigned int edge_count;\n \n       if (bb == NULL)\n@@ -671,7 +671,7 @@ input_cfg (struct lto_input_block *ib, struct data_in *data_in,\n                                count_materialization_scale);\n \t  edge_flags = streamer_read_uhwi (ib);\n \n-\t  dest = BASIC_BLOCK_FOR_FUNCTION (fn, dest_index);\n+\t  dest = BASIC_BLOCK_FOR_FN (fn, dest_index);\n \n \t  if (dest == NULL)\n \t    dest = make_new_block (fn, dest_index);\n@@ -688,7 +688,7 @@ input_cfg (struct lto_input_block *ib, struct data_in *data_in,\n   index = streamer_read_hwi (ib);\n   while (index != -1)\n     {\n-      basic_block bb = BASIC_BLOCK_FOR_FUNCTION (fn, index);\n+      basic_block bb = BASIC_BLOCK_FOR_FN (fn, index);\n       bb->prev_bb = p_bb;\n       p_bb->next_bb = bb;\n       p_bb = bb;\n@@ -719,7 +719,7 @@ input_cfg (struct lto_input_block *ib, struct data_in *data_in,\n \t}\n \n       struct loop *loop = alloc_loop ();\n-      loop->header = BASIC_BLOCK_FOR_FUNCTION (fn, header_index);\n+      loop->header = BASIC_BLOCK_FOR_FN (fn, header_index);\n       loop->header->loop_father = loop;\n \n       /* Read everything copy_loop_info copies.  */"}, {"sha": "e4a137168627c333787308924dcc3df53a36d9eb", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbd7925926feee79874da1c763e4af2b2de62244/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbd7925926feee79874da1c763e4af2b2de62244/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=bbd7925926feee79874da1c763e4af2b2de62244", "patch": "@@ -185,19 +185,17 @@ init_empty_tree_cfg_for_function (struct function *fn)\n   profile_status_for_function (fn) = PROFILE_ABSENT;\n   n_basic_blocks_for_fn (fn) = NUM_FIXED_BLOCKS;\n   last_basic_block_for_function (fn) = NUM_FIXED_BLOCKS;\n-  vec_alloc (basic_block_info_for_function (fn), initial_cfg_capacity);\n-  vec_safe_grow_cleared (basic_block_info_for_function (fn),\n+  vec_alloc (basic_block_info_for_fn (fn), initial_cfg_capacity);\n+  vec_safe_grow_cleared (basic_block_info_for_fn (fn),\n \t\t\t initial_cfg_capacity);\n \n   /* Build a mapping of labels to their associated blocks.  */\n   vec_alloc (label_to_block_map_for_function (fn), initial_cfg_capacity);\n   vec_safe_grow_cleared (label_to_block_map_for_function (fn),\n \t\t\t initial_cfg_capacity);\n \n-  SET_BASIC_BLOCK_FOR_FUNCTION (fn, ENTRY_BLOCK,\n-\t\t\t\tENTRY_BLOCK_PTR_FOR_FN (fn));\n-  SET_BASIC_BLOCK_FOR_FUNCTION (fn, EXIT_BLOCK,\n-\t\t   EXIT_BLOCK_PTR_FOR_FN (fn));\n+  SET_BASIC_BLOCK_FOR_FN (fn, ENTRY_BLOCK, ENTRY_BLOCK_PTR_FOR_FN (fn));\n+  SET_BASIC_BLOCK_FOR_FN (fn, EXIT_BLOCK, EXIT_BLOCK_PTR_FOR_FN (fn));\n \n   ENTRY_BLOCK_PTR_FOR_FN (fn)->next_bb\n     = EXIT_BLOCK_PTR_FOR_FN (fn);\n@@ -7046,7 +7044,7 @@ dump_function_to_file (tree fndecl, FILE *file, int flags)\n \n   if (fun && fun->decl == fndecl\n       && fun->cfg\n-      && basic_block_info_for_function (fun))\n+      && basic_block_info_for_fn (fun))\n     {\n       /* If the CFG has been built, emit a CFG-based dump.  */\n       if (!ignore_topmost_bind)"}]}