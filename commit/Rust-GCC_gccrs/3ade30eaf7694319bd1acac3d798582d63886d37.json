{"sha": "3ade30eaf7694319bd1acac3d798582d63886d37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FkZTMwZWFmNzY5NDMxOWJkMWFjYWMzZDc5ODU4MmQ2Mzg4NmQzNw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2002-07-24T18:29:00Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2002-07-24T18:29:00Z"}, "message": "arm.md (arm_buneq, arm_bltgt): put '\\' before ';' in output pattern.\n\n* arm.md (arm_buneq, arm_bltgt): put '\\' before ';' in output\npattern.\n(arm_buneq_reversed, arm_bltgt_reversed): Likewise.\n(movsicc, movsfcc, movdfcc): FAIL if UNEQ or LTGT.\n\nFrom-SVN: r55717", "tree": {"sha": "aaeca542b44499e5b96716a3d459f10e0529b99c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aaeca542b44499e5b96716a3d459f10e0529b99c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ade30eaf7694319bd1acac3d798582d63886d37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ade30eaf7694319bd1acac3d798582d63886d37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ade30eaf7694319bd1acac3d798582d63886d37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ade30eaf7694319bd1acac3d798582d63886d37/comments", "author": null, "committer": null, "parents": [{"sha": "ce05139c56abbf21a0c8f81150542ed213d07581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce05139c56abbf21a0c8f81150542ed213d07581", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce05139c56abbf21a0c8f81150542ed213d07581"}], "stats": {"total": 30, "additions": 24, "deletions": 6}, "files": [{"sha": "8c38eb767bac2d866d0a813dd82593ff90527414", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ade30eaf7694319bd1acac3d798582d63886d37/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ade30eaf7694319bd1acac3d798582d63886d37/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ade30eaf7694319bd1acac3d798582d63886d37", "patch": "@@ -1,3 +1,10 @@\n+2002-07-24  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm.md (arm_buneq, arm_bltgt): put '\\' before ';' in output\n+\tpattern.\n+\t(arm_buneq_reversed, arm_bltgt_reversed): Likewise.\n+\t(movsicc, movsfcc, movdfcc): FAIL if UNEQ or LTGT.\n+\n 2002-07-24  Chris Demetriou  <cgd@broadcom.com>\n \n \t* config/mips/elf.h (STARTFILE_SPEC): Never include crt0.o."}, {"sha": "091da69c7eaf35c948ce16325568b1f37b817cf7", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ade30eaf7694319bd1acac3d798582d63886d37/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ade30eaf7694319bd1acac3d798582d63886d37/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=3ade30eaf7694319bd1acac3d798582d63886d37", "patch": "@@ -6029,7 +6029,7 @@\n   if (arm_ccfsm_state != 0)\n     abort ();\n \n-  return \\\"bvs\\\\t%l0;beq\\\\t%l0\\\";\n+  return \\\"bvs\\\\t%l0\\;beq\\\\t%l0\\\";\n   \"\n   [(set_attr \"conds\" \"jump_clob\")\n    (set_attr \"length\" \"8\")]\n@@ -6046,7 +6046,7 @@\n   if (arm_ccfsm_state != 0)\n     abort ();\n \n-  return \\\"bmi\\\\t%l0;bgt\\\\t%l0\\\";\n+  return \\\"bmi\\\\t%l0\\;bgt\\\\t%l0\\\";\n   \"\n   [(set_attr \"conds\" \"jump_clob\")\n    (set_attr \"length\" \"8\")]\n@@ -6081,7 +6081,7 @@\n   if (arm_ccfsm_state != 0)\n     abort ();\n \n-  return \\\"bmi\\\\t%l0;bgt\\\\t%l0\\\";\n+  return \\\"bmi\\\\t%l0\\;bgt\\\\t%l0\\\";\n   \"\n   [(set_attr \"conds\" \"jump_clob\")\n    (set_attr \"length\" \"8\")]\n@@ -6098,7 +6098,7 @@\n   if (arm_ccfsm_state != 0)\n     abort ();\n \n-  return \\\"bvs\\\\t%l0;beq\\\\t%l0\\\";\n+  return \\\"bvs\\\\t%l0\\;beq\\\\t%l0\\\";\n   \"\n   [(set_attr \"conds\" \"jump_clob\")\n    (set_attr \"length\" \"8\")]\n@@ -6303,8 +6303,12 @@\n   \"\n   {\n     enum rtx_code code = GET_CODE (operands[1]);\n-    rtx ccreg = arm_gen_compare_reg (code, arm_compare_op0, arm_compare_op1);\n+    rtx ccreg;\n+\n+    if (code == UNEQ || code == LTGT)\n+      FAIL;\n \n+    ccreg = arm_gen_compare_reg (code, arm_compare_op0, arm_compare_op1);\n     operands[1] = gen_rtx (code, VOIDmode, ccreg, const0_rtx);\n   }\"\n )\n@@ -6320,6 +6324,9 @@\n     enum rtx_code code = GET_CODE (operands[1]);\n     rtx ccreg;\n \n+    if (code == UNEQ || code == LTGT)\n+      FAIL;\n+\n     /* When compiling for SOFT_FLOAT, ensure both arms are in registers. \n        Otherwise, ensure it is a valid FP add operand */\n     if ((!TARGET_HARD_FLOAT)\n@@ -6340,8 +6347,12 @@\n   \"\n   {\n     enum rtx_code code = GET_CODE (operands[1]);\n-    rtx ccreg = arm_gen_compare_reg (code, arm_compare_op0, arm_compare_op1);\n+    rtx ccreg;\n \n+    if (code == UNEQ || code == LTGT)\n+      FAIL;\n+\n+    ccreg = arm_gen_compare_reg (code, arm_compare_op0, arm_compare_op1);\n     operands[1] = gen_rtx (code, VOIDmode, ccreg, const0_rtx);\n   }\"\n )"}]}