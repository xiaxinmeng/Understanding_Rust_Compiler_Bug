{"sha": "fc72cba7ce5bbd350249dd5de10bc9eaa1633a8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM3MmNiYTdjZTViYmQzNTAyNDlkZDVkZTEwYmM5ZWFhMTYzM2E4ZQ==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2014-10-27T15:53:25Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2014-10-27T15:53:25Z"}, "message": "[AArch64] Restore gimple_folding of reduction intrinsics\n\n\t* config/aarch64/aarch64.c (TARGET_GIMPLE_FOLD_BUILTIN): Define again.\n\t* config/aarch64/aarch64-builtins.c (aarch64_gimple_fold_builtin):\n\tRestore, enable for bigendian, update to use __builtin..._scal...\n\nFrom-SVN: r216742", "tree": {"sha": "a7e1cf97d28cebb6f3cd9fdc4c5eff95a8a28d40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7e1cf97d28cebb6f3cd9fdc4c5eff95a8a28d40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc72cba7ce5bbd350249dd5de10bc9eaa1633a8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc72cba7ce5bbd350249dd5de10bc9eaa1633a8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc72cba7ce5bbd350249dd5de10bc9eaa1633a8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc72cba7ce5bbd350249dd5de10bc9eaa1633a8e/comments", "author": null, "committer": null, "parents": [{"sha": "64b0f9284445df67cc0b64004cc87793076198ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64b0f9284445df67cc0b64004cc87793076198ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64b0f9284445df67cc0b64004cc87793076198ae"}], "stats": {"total": 40, "additions": 17, "deletions": 23}, "files": [{"sha": "8cdd603221f0985d9de497f608e101aa7eda3681", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc72cba7ce5bbd350249dd5de10bc9eaa1633a8e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc72cba7ce5bbd350249dd5de10bc9eaa1633a8e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc72cba7ce5bbd350249dd5de10bc9eaa1633a8e", "patch": "@@ -1,3 +1,9 @@\n+2014-10-27  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* config/aarch64/aarch64.c (TARGET_GIMPLE_FOLD_BUILTIN): Define again.\n+\t* config/aarch64/aarch64-builtins.c (aarch64_gimple_fold_builtin):\n+\tRestore, enable for bigendian, update to use __builtin..._scal...\n+\n 2014-10-27  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* config/aarch64/aarch64-simd-builtins.def (reduc_smax_, reduc_smin_,"}, {"sha": "c8c99f16113109f54e25fa282bbd44f65fcffc12", "filename": "gcc/config/aarch64/aarch64-builtins.c", "status": "modified", "additions": 9, "deletions": 21, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc72cba7ce5bbd350249dd5de10bc9eaa1633a8e/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc72cba7ce5bbd350249dd5de10bc9eaa1633a8e/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c?ref=fc72cba7ce5bbd350249dd5de10bc9eaa1633a8e", "patch": "@@ -1207,9 +1207,6 @@ aarch64_fold_builtin (tree fndecl, int n_args ATTRIBUTE_UNUSED, tree *args,\n   return NULL_TREE;\n }\n \n-/* Handling of reduction operations temporarily removed so as to decouple\n-   changes to tree codes from AArch64 NEON Intrinsics.  */\n-#if 0\n bool\n aarch64_gimple_fold_builtin (gimple_stmt_iterator *gsi)\n {\n@@ -1219,19 +1216,6 @@ aarch64_gimple_fold_builtin (gimple_stmt_iterator *gsi)\n   tree fndecl;\n   gimple new_stmt = NULL;\n \n-  /* The operations folded below are reduction operations.  These are\n-     defined to leave their result in the 0'th element (from the perspective\n-     of GCC).  The architectural instruction we are folding will leave the\n-     result in the 0'th element (from the perspective of the architecture).\n-     For big-endian systems, these perspectives are not aligned.\n-\n-     It is therefore wrong to perform this fold on big-endian.  There\n-     are some tricks we could play with shuffling, but the mid-end is\n-     inconsistent in the way it treats reduction operations, so we will\n-     end up in difficulty.  Until we fix the ambiguity - just bail out.  */\n-  if (BYTES_BIG_ENDIAN)\n-    return false;\n-\n   if (call)\n     {\n       fndecl = gimple_call_fndecl (stmt);\n@@ -1243,23 +1227,28 @@ aarch64_gimple_fold_builtin (gimple_stmt_iterator *gsi)\n \t\t\t? gimple_call_arg_ptr (stmt, 0)\n \t\t\t: &error_mark_node);\n \n+\t  /* We use gimple's REDUC_(PLUS|MIN|MAX)_EXPRs for float, signed int\n+\t     and unsigned int; it will distinguish according to the types of\n+\t     the arguments to the __builtin.  */\n \t  switch (fcode)\n \t    {\n-\t      BUILTIN_VALL (UNOP, reduc_splus_, 10)\n-\t\tnew_stmt = gimple_build_assign_with_ops (\n+\t      BUILTIN_VALL (UNOP, reduc_plus_scal_, 10)\n+\t        new_stmt = gimple_build_assign_with_ops (\n \t\t\t\t\t\tREDUC_PLUS_EXPR,\n \t\t\t\t\t\tgimple_call_lhs (stmt),\n \t\t\t\t\t\targs[0],\n \t\t\t\t\t\tNULL_TREE);\n \t\tbreak;\n-\t      BUILTIN_VDQIF (UNOP, reduc_smax_, 10)\n+\t      BUILTIN_VDQIF (UNOP, reduc_smax_scal_, 10)\n+\t      BUILTIN_VDQ_BHSI (UNOPU, reduc_umax_scal_, 10)\n \t\tnew_stmt = gimple_build_assign_with_ops (\n \t\t\t\t\t\tREDUC_MAX_EXPR,\n \t\t\t\t\t\tgimple_call_lhs (stmt),\n \t\t\t\t\t\targs[0],\n \t\t\t\t\t\tNULL_TREE);\n \t\tbreak;\n-\t      BUILTIN_VDQIF (UNOP, reduc_smin_, 10)\n+\t      BUILTIN_VDQIF (UNOP, reduc_smin_scal_, 10)\n+\t      BUILTIN_VDQ_BHSI (UNOPU, reduc_umin_scal_, 10)\n \t\tnew_stmt = gimple_build_assign_with_ops (\n \t\t\t\t\t\tREDUC_MIN_EXPR,\n \t\t\t\t\t\tgimple_call_lhs (stmt),\n@@ -1281,7 +1270,6 @@ aarch64_gimple_fold_builtin (gimple_stmt_iterator *gsi)\n \n   return changed;\n }\n-#endif\n \n void\n aarch64_atomic_assign_expand_fenv (tree *hold, tree *clear, tree *update)"}, {"sha": "bd82d1c56dcb54efd504fa5259121bf5de5764e9", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc72cba7ce5bbd350249dd5de10bc9eaa1633a8e/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc72cba7ce5bbd350249dd5de10bc9eaa1633a8e/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=fc72cba7ce5bbd350249dd5de10bc9eaa1633a8e", "patch": "@@ -10096,8 +10096,8 @@ aarch64_asan_shadow_offset (void)\n #undef TARGET_FRAME_POINTER_REQUIRED\n #define TARGET_FRAME_POINTER_REQUIRED aarch64_frame_pointer_required\n \n-//#undef TARGET_GIMPLE_FOLD_BUILTIN\n-//#define TARGET_GIMPLE_FOLD_BUILTIN aarch64_gimple_fold_builtin\n+#undef TARGET_GIMPLE_FOLD_BUILTIN\n+#define TARGET_GIMPLE_FOLD_BUILTIN aarch64_gimple_fold_builtin\n \n #undef TARGET_GIMPLIFY_VA_ARG_EXPR\n #define TARGET_GIMPLIFY_VA_ARG_EXPR aarch64_gimplify_va_arg_expr"}]}