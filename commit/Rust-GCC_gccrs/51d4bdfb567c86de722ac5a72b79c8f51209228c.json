{"sha": "51d4bdfb567c86de722ac5a72b79c8f51209228c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTFkNGJkZmI1NjdjODZkZTcyMmFjNWE3MmI3OWM4ZjUxMjA5MjI4Yw==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-07-31T09:56:31Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-07-31T09:56:31Z"}, "message": "[Ada] Secondary stack leak with access-to-subprogram\n\nThis patch modifies call resolution to recognize when the designated type of\nan access-to-subprogram requires secondary stack management, and establish\nthe proper transient block.\n\n------------\n-- Source --\n------------\n\n--  leak7.adb\n\nprocedure Leak7 is\n   Max_Iterations : constant := 10_000;\n\n   function Func return String is\n   begin\n      return \"Will this leak? Or will it dry?\";\n   end Func;\n\n   type Func_Ptr is access function return String;\n\n   procedure Anonymous_Leak (Func : access function return String) is\n   begin\n      for Iteration in 1 .. Max_Iterations loop\n         declare\n            Val : constant String := Func.all;\n         begin null; end;\n      end loop;\n   end Anonymous_Leak;\n\n   procedure Named_Leak (Func : Func_Ptr) is\n   begin\n      for Iteration in 1 .. Max_Iterations loop\n         declare\n            Val : constant String := Func.all;\n         begin null; end;\n      end loop;\n   end Named_Leak;\n\nbegin\n   Anonymous_Leak (Func'Access);\n   Named_Leak     (Func'Access);\nend Leak7;\n\n----------------------------\n-- Compilation and output --\n----------------------------\n\n$ gnatmake -q leak7.adb\n$ valgrind ./leak7 >& leak7.txt\n$ grep -c \"still reachable\" leak7.txt\n0\n\n2018-07-31  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* sem_res.adb (Resolve_Call): Establish a transient scope to\n\tmanage the secondary stack when the designated type of an\n\taccess-to-subprogram requires it.\n\nFrom-SVN: r263103", "tree": {"sha": "ea43af4ecfb4db9028a815e3a8fd9c238e842c63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea43af4ecfb4db9028a815e3a8fd9c238e842c63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51d4bdfb567c86de722ac5a72b79c8f51209228c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51d4bdfb567c86de722ac5a72b79c8f51209228c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51d4bdfb567c86de722ac5a72b79c8f51209228c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51d4bdfb567c86de722ac5a72b79c8f51209228c/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "51f2fc7d760f66a0cd4842a2dad450a25dc70c21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51f2fc7d760f66a0cd4842a2dad450a25dc70c21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51f2fc7d760f66a0cd4842a2dad450a25dc70c21"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "43d837b3095d04b7a2b86cecb079939736787886", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51d4bdfb567c86de722ac5a72b79c8f51209228c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51d4bdfb567c86de722ac5a72b79c8f51209228c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=51d4bdfb567c86de722ac5a72b79c8f51209228c", "patch": "@@ -1,3 +1,9 @@\n+2018-07-31  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Call): Establish a transient scope to\n+\tmanage the secondary stack when the designated type of an\n+\taccess-to-subprogram requires it.\n+\n 2018-07-31  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch7.adb (Check_Unnesting_Elaboration_Code): To find local"}, {"sha": "ddfa5430a7b7a0effd9b055c1aa57c421b77b766", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51d4bdfb567c86de722ac5a72b79c8f51209228c/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51d4bdfb567c86de722ac5a72b79c8f51209228c/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=51d4bdfb567c86de722ac5a72b79c8f51209228c", "patch": "@@ -6433,7 +6433,7 @@ package body Sem_Res is\n          null;\n \n       elsif Expander_Active\n-        and then Ekind (Nam) = E_Function\n+        and then Ekind_In (Nam, E_Function, E_Subprogram_Type)\n         and then Requires_Transient_Scope (Etype (Nam))\n       then\n          Establish_Transient_Scope (N, Manage_Sec_Stack => True);"}]}