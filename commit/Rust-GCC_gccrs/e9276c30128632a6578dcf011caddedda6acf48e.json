{"sha": "e9276c30128632a6578dcf011caddedda6acf48e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTkyNzZjMzAxMjg2MzJhNjU3OGRjZjAxMWNhZGRlZGRhNmFjZjQ4ZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-09-23T19:18:27Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-09-23T19:18:27Z"}, "message": "opth-gen.awk (target_flags_explicit): Declare.\n\ngcc/\n\t* opth-gen.awk (target_flags_explicit): Declare.\n\t* toplev.h (target_flags_explicit): Delete declaration.\n\t* toplev.c (target_flags): Likewise.\n\t* config/mips/mips.h (mips_llsc_setting, mips_llsc): Delete.\n\t(GENERATE_SYNC, GENERATE_LL_SC): Redefine using target_explicit_flags.\n\tNever return true for TARGET_MIPS16.\n\t* config/mips/mips.c (mips_llsc): Delete.\n\t(mips_handle_option): Remove -mllsc handling.\n\t(mips_strip_unspec_address): Tweak comment.\n\t* config/mips/mips.opt (mllsc): Use a target mask.\n\ngcc/testsuite/\n\t* gcc.target/mips/gcc-have-sync-compare-and-swap-1.c: Don't expect\n\tany of the macros to be defined for __mips16.\n\t* gcc.target/mips/gcc-have-sync-compare-and-swap-2.c: Likewise.\n\nFrom-SVN: r128699", "tree": {"sha": "35186a5c4ab7dc036455934ac7d950724ff8fbef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35186a5c4ab7dc036455934ac7d950724ff8fbef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9276c30128632a6578dcf011caddedda6acf48e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9276c30128632a6578dcf011caddedda6acf48e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9276c30128632a6578dcf011caddedda6acf48e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9276c30128632a6578dcf011caddedda6acf48e/comments", "author": null, "committer": null, "parents": [{"sha": "4923a23068350b1db115d081b89800728f6241b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4923a23068350b1db115d081b89800728f6241b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4923a23068350b1db115d081b89800728f6241b2"}], "stats": {"total": 69, "additions": 34, "deletions": 35}, "files": [{"sha": "639dc8e1b34b847be9e120cde26da27c1f1eab43", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9276c30128632a6578dcf011caddedda6acf48e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9276c30128632a6578dcf011caddedda6acf48e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e9276c30128632a6578dcf011caddedda6acf48e", "patch": "@@ -1,3 +1,16 @@\n+2007-09-23  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* opth-gen.awk (target_flags_explicit): Declare.\n+\t* toplev.h (target_flags_explicit): Delete declaration.\n+\t* toplev.c (target_flags): Likewise.\n+\t* config/mips/mips.h (mips_llsc_setting, mips_llsc): Delete.\n+\t(GENERATE_SYNC, GENERATE_LL_SC): Redefine using target_explicit_flags.\n+\tNever return true for TARGET_MIPS16.\n+\t* config/mips/mips.c (mips_llsc): Delete.\n+\t(mips_handle_option): Remove -mllsc handling.\n+\t(mips_strip_unspec_address): Tweak comment.\n+\t* config/mips/mips.opt (mllsc): Use a target mask.\n+\n 2007-09-23  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* doc/tm.texi (POINTERS_EXTEND_UNSIGNED): Document extensions to"}, {"sha": "e6b17a5f08c701e4e7dac4dad91799168099d99f", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9276c30128632a6578dcf011caddedda6acf48e/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9276c30128632a6578dcf011caddedda6acf48e/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=e9276c30128632a6578dcf011caddedda6acf48e", "patch": "@@ -638,9 +638,6 @@ static GTY(()) int mips16_flipper;\n /* The -mtext-loads setting.  */\n enum mips_code_readable_setting mips_code_readable = CODE_READABLE_YES;\n \n-/* The -mllsc setting.  */\n-enum mips_llsc_setting mips_llsc = LLSC_DEFAULT;\n-\n /* The architecture selected by -mipsN.  */\n static const struct mips_cpu_info *mips_isa_info;\n \n@@ -5872,7 +5869,7 @@ mips_set_current_function (tree fndecl)\n /* Implement TARGET_HANDLE_OPTION.  */\n \n static bool\n-mips_handle_option (size_t code, const char *arg, int value)\n+mips_handle_option (size_t code, const char *arg, int value ATTRIBUTE_UNUSED)\n {\n   switch (code)\n     {\n@@ -5914,10 +5911,6 @@ mips_handle_option (size_t code, const char *arg, int value)\n \treturn false;\n       return true;\n \n-    case OPT_mllsc:\n-      mips_llsc = value ? LLSC_YES : LLSC_NO;\n-      return true;\n-\n     default:\n       return true;\n     }\n@@ -6545,8 +6538,7 @@ mips_strip_unspec_address (rtx op)\n    '$'\tPrint the name of the stack pointer register (sp or $29).\n    '+'\tPrint the name of the gp register (usually gp or $28).\n    '~'\tOutput a branch alignment to LABEL_ALIGN(NULL).\n-   '|'  Print .set push; .set mips2 if mips_llsc == LLSC_YES\n-        && !ISA_HAS_LL_SC.\n+   '|'  Print .set push; .set mips2 if !ISA_HAS_LL_SC.\n    '-'  Print .set pop under the same conditions for '|'.  */\n \n void"}, {"sha": "d401d551a4790ca7e62ca90c5008bc89ac3aed9c", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9276c30128632a6578dcf011caddedda6acf48e/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9276c30128632a6578dcf011caddedda6acf48e/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=e9276c30128632a6578dcf011caddedda6acf48e", "patch": "@@ -121,14 +121,6 @@ enum mips_code_readable_setting {\n   CODE_READABLE_YES\n };\n \n-\n-/* Enumerates the setting of the -mllsc option.  */\n-enum mips_llsc_setting {\n-  LLSC_DEFAULT,\n-  LLSC_NO,\n-  LLSC_YES\n-};\n-\n #ifndef USED_FOR_TARGET\n extern char mips_print_operand_punct[256]; /* print_operand punctuation chars */\n extern const char *current_function_file; /* filename current function is in */\n@@ -153,7 +145,6 @@ extern const struct mips_cpu_info *mips_arch_info;\n extern const struct mips_cpu_info *mips_tune_info;\n extern const struct mips_rtx_cost_data *mips_cost;\n extern enum mips_code_readable_setting mips_code_readable;\n-extern enum mips_llsc_setting mips_llsc;\n #endif\n \n /* Macros to silence warnings about numbers being signed in traditional\n@@ -920,15 +911,19 @@ extern enum mips_llsc_setting mips_llsc;\n \n /* ISA includes sync.  */\n #define ISA_HAS_SYNC ((mips_isa >= 2 || TARGET_MIPS3900) && !TARGET_MIPS16)\n-#define GENERATE_SYNC (mips_llsc == LLSC_YES \\\n-\t\t       || (mips_llsc == LLSC_DEFAULT && ISA_HAS_SYNC))\n+#define GENERATE_SYNC\t\t\t\\\n+  (target_flags_explicit & MASK_LLSC\t\\\n+   ? TARGET_LLSC && !TARGET_MIPS16\t\\\n+   : ISA_HAS_SYNC)\n \n /* ISA includes ll and sc.  Note that this implies ISA_HAS_SYNC\n    because the expanders use both ISA_HAS_SYNC and ISA_HAS_LL_SC\n    instructions.  */\n #define ISA_HAS_LL_SC (mips_isa >= 2 && !TARGET_MIPS16)\n-#define GENERATE_LL_SC (mips_llsc == LLSC_YES \\\n-\t\t\t|| (mips_llsc == LLSC_DEFAULT && ISA_HAS_LL_SC))\n+#define GENERATE_LL_SC\t\t\t\\\n+  (target_flags_explicit & MASK_LLSC\t\\\n+   ? TARGET_LLSC && !TARGET_MIPS16\t\\\n+   : ISA_HAS_LL_SC)\n \f\n /* Add -G xx support.  */\n "}, {"sha": "3a19d0af160e928ae6a8fc52d1e29c7e6b0c2c44", "filename": "gcc/config/mips/mips.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9276c30128632a6578dcf011caddedda6acf48e/gcc%2Fconfig%2Fmips%2Fmips.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9276c30128632a6578dcf011caddedda6acf48e/gcc%2Fconfig%2Fmips%2Fmips.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.opt?ref=e9276c30128632a6578dcf011caddedda6acf48e", "patch": "@@ -181,7 +181,7 @@ Target Report RejectNegative Mask(MIPS3D)\n Use MIPS-3D instructions\n \n mllsc\n-Target Report\n+Target Report Mask(LLSC)\n Use ll, sc and sync instructions\n \n mlocal-sdata"}, {"sha": "dbd019191b6b25b9414b444190959c184904f875", "filename": "gcc/opth-gen.awk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9276c30128632a6578dcf011caddedda6acf48e/gcc%2Fopth-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9276c30128632a6578dcf011caddedda6acf48e/gcc%2Fopth-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopth-gen.awk?ref=e9276c30128632a6578dcf011caddedda6acf48e", "patch": "@@ -61,6 +61,7 @@ print \"#ifndef OPTIONS_H\"\n print \"#define OPTIONS_H\"\n print \"\"\n print \"extern int target_flags;\"\n+print \"extern int target_flags_explicit;\"\n print \"\"\n \n for (i = 0; i < n_opts; i++) {"}, {"sha": "ff03ded25b7374d98fa3ca68cb55e39bb28cab02", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9276c30128632a6578dcf011caddedda6acf48e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9276c30128632a6578dcf011caddedda6acf48e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e9276c30128632a6578dcf011caddedda6acf48e", "patch": "@@ -1,3 +1,9 @@\n+2007-09-23  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* gcc.target/mips/gcc-have-sync-compare-and-swap-1.c: Don't expect\n+\tany of the macros to be defined for __mips16.\n+\t* gcc.target/mips/gcc-have-sync-compare-and-swap-2.c: Likewise.\n+\n 2007-09-23  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* gcc.dg/vect/pr21591.c: Require vect_int."}, {"sha": "72eff4da37c3b7a28f8f5c5404caf1b407a4a377", "filename": "gcc/testsuite/gcc.target/mips/gcc-have-sync-compare-and-swap-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9276c30128632a6578dcf011caddedda6acf48e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9276c30128632a6578dcf011caddedda6acf48e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-1.c?ref=e9276c30128632a6578dcf011caddedda6acf48e", "patch": "@@ -9,7 +9,7 @@\n #error nonono\n #endif\n \n-#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\n+#if defined (__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4) == defined (__mips16)\n #error nonono\n #endif\n "}, {"sha": "fed2b38a57f0348234325b527974ccd67dc1def0", "filename": "gcc/testsuite/gcc.target/mips/gcc-have-sync-compare-and-swap-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9276c30128632a6578dcf011caddedda6acf48e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9276c30128632a6578dcf011caddedda6acf48e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-2.c?ref=e9276c30128632a6578dcf011caddedda6acf48e", "patch": "@@ -9,11 +9,11 @@\n #error nonono\n #endif\n \n-#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4\n+#if defined (__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4) == defined (__mips16)\n #error nonono\n #endif\n \n-#ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8\n+#if defined (__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8) == defined (__mips16)\n #error nonono\n #endif\n "}, {"sha": "8c6a68a6522750836b8f0a7e25e288a172e00849", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9276c30128632a6578dcf011caddedda6acf48e/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9276c30128632a6578dcf011caddedda6acf48e/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=e9276c30128632a6578dcf011caddedda6acf48e", "patch": "@@ -173,12 +173,6 @@ const char *dump_base_name;\n \n const char *aux_base_name;\n \n-/* Bit flags that specify the machine subtype we are compiling for.\n-   Bits are tested using macros TARGET_... defined in the tm.h file\n-   and set by `-m...' switches.  Must be defined in rtlanal.c.  */\n-\n-extern int target_flags;\n-\n /* A mask of target_flags that includes bit X if X was set or cleared\n    on the command line.  */\n "}, {"sha": "26a085d0c842963b697ac49113e1ca142c77ac6b", "filename": "gcc/toplev.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9276c30128632a6578dcf011caddedda6acf48e/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9276c30128632a6578dcf011caddedda6acf48e/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=e9276c30128632a6578dcf011caddedda6acf48e", "patch": "@@ -113,8 +113,6 @@ extern const char *aux_info_file_name;\n extern const char *asm_file_name;\n extern bool exit_after_options;\n \n-extern int target_flags_explicit;\n-\n /* True if the user has tagged the function with the 'section'\n    attribute.  */\n "}]}