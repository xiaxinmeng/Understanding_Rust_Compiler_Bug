{"sha": "0674b9d090bdf37dd6a9d6ce136048996de2bf94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY3NGI5ZDA5MGJkZjM3ZGQ2YTlkNmNlMTM2MDQ4OTk2ZGUyYmY5NA==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2009-05-29T16:47:31Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2009-05-29T16:47:31Z"}, "message": "tree-sra.c: New implementation of SRA.\n\n2009-05-29  Martin Jambor  <mjambor@suse.cz>\n\n\t* tree-sra.c:  New implementation of SRA.\n\n\t* params.def (PARAM_SRA_MAX_STRUCTURE_SIZE): Removed.\n\t(PARAM_SRA_MAX_STRUCTURE_COUNT): Removed.\n\t(PARAM_SRA_FIELD_STRUCTURE_RATIO): Removed.\n\t* params.h (SRA_MAX_STRUCTURE_SIZE): Removed.\n\t(SRA_MAX_STRUCTURE_COUNT): Removed.\n\t(SRA_FIELD_STRUCTURE_RATIO): Removed.\n\t* doc/invoke.texi (sra-max-structure-size): Removed.\n\t(sra-field-structure-ratio): Removed.\n\n\t* testsuite/gfortran.dg/pr25923.f90: XFAIL warning expectation.\n\t* testsuite/gcc.dg/tree-ssa/ssa-fre-7.c: Compile with -fno-tree-sra.\n\t* testsuite/gcc.dg/tree-ssa/ssa-fre-8.c: Likewise.\n\t* testsuite/gcc.dg/tree-ssa/ssa-fre-9.c: Likewise.\n\t* testsuite/gcc.dg/memcpy-1.c: Removed param sra-max-structure-size.\n\t* testsuite/gcc.dg/tree-ssa/sra-2.c: Likewise.\n\t* testsuite/gcc.dg/tree-ssa/sra-3.c: Likewise.\n\t* testsuite/gcc.dg/tree-ssa/sra-1.c: Likewise.\n\t* testsuite/gcc.dg/tree-ssa/sra-4.c: Changed comment.\n\t* testsuite/gcc.dg/tree-ssa/sra-5.c: New file.\n\t* testsuite/gcc.dg/tree-ssa/sra-6.c: New file.\n\t* testsuite/gcc.c-torture/compile/sra-1.c: New file.\n\nFrom-SVN: r147980", "tree": {"sha": "14c3f7d6586f4143d154f174b189c54456ded8e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14c3f7d6586f4143d154f174b189c54456ded8e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0674b9d090bdf37dd6a9d6ce136048996de2bf94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0674b9d090bdf37dd6a9d6ce136048996de2bf94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0674b9d090bdf37dd6a9d6ce136048996de2bf94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0674b9d090bdf37dd6a9d6ce136048996de2bf94/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "616f21dfdebc8f32cc5502d19eb248002911e42c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/616f21dfdebc8f32cc5502d19eb248002911e42c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/616f21dfdebc8f32cc5502d19eb248002911e42c"}], "stats": {"total": 5243, "additions": 2021, "deletions": 3222}, "files": [{"sha": "ebe3141b88c345e9b1c1442a27a10d72dfe8f539", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0674b9d090bdf37dd6a9d6ce136048996de2bf94", "patch": "@@ -1,3 +1,16 @@\n+2009-05-29  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* tree-sra.c:  New implementation of SRA.\n+\n+\t* params.def (PARAM_SRA_MAX_STRUCTURE_SIZE): Removed.\n+\t(PARAM_SRA_MAX_STRUCTURE_COUNT): Removed.\n+\t(PARAM_SRA_FIELD_STRUCTURE_RATIO): Removed.\n+\t* params.h (SRA_MAX_STRUCTURE_SIZE): Removed.\n+\t(SRA_MAX_STRUCTURE_COUNT): Removed.\n+\t(SRA_FIELD_STRUCTURE_RATIO): Removed.\n+\t* doc/invoke.texi (sra-max-structure-size): Removed.\n+\t(sra-field-structure-ratio): Removed.\n+\n 2009-05-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/40291"}, {"sha": "810699d52e61714eade829e8f09444f4ef3ff725", "filename": "gcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=0674b9d090bdf37dd6a9d6ce136048996de2bf94", "patch": "@@ -2769,11 +2769,9 @@ tree-ssa-ccp.o : tree-ssa-ccp.c $(TREE_FLOW_H) $(CONFIG_H) \\\n    $(DIAGNOSTIC_H) $(FUNCTION_H) $(TIMEVAR_H) $(TM_H) coretypes.h \\\n    $(TREE_DUMP_H) $(BASIC_BLOCK_H) $(TREE_PASS_H) langhooks.h \\\n    tree-ssa-propagate.h value-prof.h $(FLAGS_H) $(TARGET_H) $(TOPLEV_H)\n-tree-sra.o : tree-sra.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) \\\n-    $(TM_P_H) $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TREE_INLINE_H) \\\n-    $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) $(GIMPLE_H) \\\n-    langhooks.h $(TREE_PASS_H) $(FLAGS_H) $(EXPR_H) $(BASIC_BLOCK_H) \\\n-    $(BITMAP_H) $(GGC_H) hard-reg-set.h $(OBSTACK_H) $(PARAMS_H) $(TARGET_H)\n+tree-sra.o : tree-sra.c $(CONFIG_H) $(SYSTEM_H) coretypes.h alloc-pool.h \\\n+   $(TM_H) $(TREE_H) $(GIMPLE_H) $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TREE_DUMP_H) \\\n+   $(TIMEVAR_H) $(PARAMS_H) $(TARGET_H) $(FLAGS_H)\n tree-switch-conversion.o : tree-switch-conversion.c $(CONFIG_H) $(SYSTEM_H) \\\n     $(TREE_H) $(TM_P_H) $(TREE_FLOW_H) $(DIAGNOSTIC_H) $(TREE_INLINE_H) \\\n     $(TIMEVAR_H) $(TM_H) coretypes.h $(TREE_DUMP_H) $(GIMPLE_H) \\"}, {"sha": "ebd91dbee1c359b5bb97dff71c0f7c0a1618afb6", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=0674b9d090bdf37dd6a9d6ce136048996de2bf94", "patch": "@@ -7312,19 +7312,6 @@ In each case, the @var{value} is an integer.  The allowable choices for\n @var{name} are given in the following table:\n \n @table @gcctabopt\n-@item sra-max-structure-size\n-The maximum structure size, in bytes, at which the scalar replacement\n-of aggregates (SRA) optimization will perform block copies.  The\n-default value, 0, implies that GCC will select the most appropriate\n-size itself.\n-\n-@item sra-field-structure-ratio\n-The threshold ratio (as a percentage) between instantiated fields and\n-the complete structure size.  We say that if the ratio of the number\n-of bytes in instantiated fields to the number of bytes in the complete\n-structure exceeds this parameter, then block copies are not used.  The\n-default is 75.\n-\n @item struct-reorg-cold-struct-ratio\n The threshold ratio (as a percentage) between a structure frequency\n and the frequency of the hottest structure in the program.  This parameter"}, {"sha": "370d0948da9304783c4aa346c25737ebc82ae13f", "filename": "gcc/params.def", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=0674b9d090bdf37dd6a9d6ce136048996de2bf94", "patch": "@@ -38,36 +38,6 @@ along with GCC; see the file COPYING3.  If not see\n \n    Be sure to add an entry to invoke.texi summarizing the parameter.  */\n \n-/* The maximum structure size at which the scalar replacement of\n-   aggregates (SRA) pass will perform block copies.  The default\n-   value, 0, implies that GCC will select the most appropriate size\n-   itself.  */\n-DEFPARAM (PARAM_SRA_MAX_STRUCTURE_SIZE,\n-\t  \"sra-max-structure-size\",\n-\t  \"The maximum structure size (in bytes) for which GCC will \"\n-\t  \"use by-element copies\",\n-\t  0, 0, 0)\n-\n-/* The maximum number of structure fields which the SRA pass will\n-   instantiate to avoid block copies.  The default value, 0, implies\n-   that GCC will select the appropriate value itself.  */\n-DEFPARAM (PARAM_SRA_MAX_STRUCTURE_COUNT,\n-\t  \"sra-max-structure-count\",\n-\t  \"The maximum number of structure fields for which GCC will \"\n-\t  \"use by-element copies\",\n-\t  0, 0, 0)\n-\n-/* The ratio between instantiated fields and the complete structure\n-   size.  We say that if the ratio of the number of bytes in\n-   instantiated fields to the number of bytes in the complete\n-   structure exceeds this parameter, or if the number of instantiated\n-   fields to the total number of fields exceeds this parameter, then\n-   block copies are not used.  The default is 75%.  */\n-DEFPARAM (PARAM_SRA_FIELD_STRUCTURE_RATIO,\n-\t  \"sra-field-structure-ratio\",\n-\t  \"The threshold ratio between instantiated fields and the total structure size\",\n-\t  75, 0, 100)\n-\n /* The threshold ratio between current and hottest structure counts.\n    We say that if the ratio of the current structure count, \n    calculated by profiling, to the hottest structure count "}, {"sha": "828aa7d43cc8b3b493c3ee1588fe4b5819c4066d", "filename": "gcc/params.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Fparams.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Fparams.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.h?ref=0674b9d090bdf37dd6a9d6ce136048996de2bf94", "patch": "@@ -94,12 +94,6 @@ typedef enum compiler_param\n   (compiler_params[(int) ENUM].set)\n \n /* Macros for the various parameters.  */\n-#define SRA_MAX_STRUCTURE_SIZE \\\n-  PARAM_VALUE (PARAM_SRA_MAX_STRUCTURE_SIZE)\n-#define SRA_MAX_STRUCTURE_COUNT \\\n-  PARAM_VALUE (PARAM_SRA_MAX_STRUCTURE_COUNT)\n-#define SRA_FIELD_STRUCTURE_RATIO \\\n-  PARAM_VALUE (PARAM_SRA_FIELD_STRUCTURE_RATIO)\n #define STRUCT_REORG_COLD_STRUCT_RATIO \\\n   PARAM_VALUE (PARAM_STRUCT_REORG_COLD_STRUCT_RATIO)\n #define MAX_INLINE_INSNS_SINGLE \\"}, {"sha": "7479c1a74ea1d42f1b917158889c7c4b28fdd2cb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0674b9d090bdf37dd6a9d6ce136048996de2bf94", "patch": "@@ -1,3 +1,18 @@\n+2009-05-29  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* gfortran.dg/pr25923.f90: XFAIL warning expectation.\n+\t* gcc.dg/tree-ssa/ssa-fre-7.c: Compile with -fno-tree-sra.\n+\t* gcc.dg/tree-ssa/ssa-fre-8.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-fre-9.c: Likewise.\n+\t* gcc.dg/memcpy-1.c: Removed param sra-max-structure-size.\n+\t* gcc.dg/tree-ssa/sra-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/sra-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/sra-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/sra-4.c: Changed comment.\n+\t* gcc.dg/tree-ssa/sra-5.c: New file.\n+\t* gcc.dg/tree-ssa/sra-6.c: New file.\n+\t* gcc.c-torture/compile/sra-1.c: New file.\n+\n 2009-05-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/40291"}, {"sha": "06dcf1002bef1c8344f1f62e94a662ec56aca934", "filename": "gcc/testsuite/gcc.c-torture/compile/sra-1.c", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsra-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsra-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsra-1.c?ref=0674b9d090bdf37dd6a9d6ce136048996de2bf94", "patch": "@@ -0,0 +1,75 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1\" } */\n+/* Let gimple verifier check what SRA does to unions and single-field\n+   strucutres . */\n+\n+struct sim_struct\n+{\n+  int x;\n+};\n+\n+extern struct sim_struct get_x(void);\n+\n+struct sim_struct foo (void)\n+{\n+  struct sim_struct simple;\n+\n+  simple = get_x ();\n+  if (simple.x % 2)\n+    simple.x = 39;\n+  else\n+    simple.x -=8;\n+\n+  return simple;\n+}\n+\n+struct sim_cmplx\n+{\n+  _Complex double c;\n+};\n+\n+extern struct sim_cmplx get_sc (void);\n+\n+_Complex double foo_c (void)\n+{\n+  struct sim_cmplx simple;\n+\n+  simple = get_sc ();\n+  if (__real__ simple.c > 200.3)\n+    __imag__ simple.c -= 2.4;\n+\n+  return simple.c;\n+}\n+\n+\n+union sim_union\n+{\n+  int i;\n+  float d;\n+};\n+\n+extern union sim_union get_y (void);\n+\n+union sim_union bar (void)\n+{\n+  union sim_union simple;\n+\n+  simple = get_y ();\n+  if (simple.d > 8.2)\n+    simple.i = 300;\n+\n+  return simple;\n+}\n+\n+extern int get_int (void);\n+\n+int bar_i (void)\n+{\n+  union sim_union simple;\n+\n+  simple = get_y ();\n+  if (simple.d > 8.2)\n+    simple.i = get_int ();\n+\n+  return simple.i;\n+}"}, {"sha": "2b11098b286d8468f9c4288e0877a53de3284e9d", "filename": "gcc/testsuite/gcc.dg/memcpy-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgcc.dg%2Fmemcpy-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgcc.dg%2Fmemcpy-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fmemcpy-1.c?ref=0674b9d090bdf37dd6a9d6ce136048996de2bf94", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-optimized --param sra-max-structure-size=32\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n /* PR36598 AVR fail maybe due to cost metrics */\n /* { dg-final { scan-tree-dump-times \"nasty_local\" 0 \"optimized\" { xfail { \"avr-*-*\" } } } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "e5af2475115619501e4d572b2b6c258b2ae7be3d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/sra-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-1.c?ref=0674b9d090bdf37dd6a9d6ce136048996de2bf94", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O1 -fdump-tree-optimized --param sra-max-structure-size=32\" } */\n+/* { dg-options \"-O1 -fdump-tree-optimized\" } */\n \n /* Tests for SRA. */\n "}, {"sha": "5682b8afbcf2f688ef808853ddc04e1efc4d6abb", "filename": "gcc/testsuite/gcc.dg/tree-ssa/sra-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-2.c?ref=0674b9d090bdf37dd6a9d6ce136048996de2bf94", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile } */ \n-/* { dg-options \"-O1 -fno-tree-fre -fdump-tree-optimized --param sra-max-structure-size=32\" } */\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fno-tree-fre -fdump-tree-optimized\" } */\n \n /* Test for SRA. */\n "}, {"sha": "d89081523840da98eacfffb36403b19b4a5aa198", "filename": "gcc/testsuite/gcc.dg/tree-ssa/sra-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-3.c?ref=0674b9d090bdf37dd6a9d6ce136048996de2bf94", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O1 -fdump-tree-optimized --param sra-max-structure-size=32\" } */\n+/* { dg-options \"-O1 -fdump-tree-optimized\" } */\n \n /* Test for SRA. */\n "}, {"sha": "73a68f900434b6fc670d77c8c759e67687f8d2f0", "filename": "gcc/testsuite/gcc.dg/tree-ssa/sra-4.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-4.c?ref=0674b9d090bdf37dd6a9d6ce136048996de2bf94", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-optimized -w\" } */\n-/* Check that SRA does non block copies for structs that just contain vectors. */\n+/* Check that SRA replaces strucutres containing vectors. */\n \n #define vector __attribute__((vector_size(16)))\n \n@@ -20,7 +20,5 @@ vector int f(vector int t1, vector int t2)\n   return st3.t;\n }\n \n-/* There should be no references to st as SRA should not have done block copy. */\n /* { dg-final { scan-tree-dump-times \"st\" 0 \"optimized\" } } */\n /* { dg-final { cleanup-tree-dump \"optimized\" } } */\n-"}, {"sha": "869d2f55f95aa0892fddeffad58f3496e82e90b1", "filename": "gcc/testsuite/gcc.dg/tree-ssa/sra-5.c", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-5.c?ref=0674b9d090bdf37dd6a9d6ce136048996de2bf94", "patch": "@@ -0,0 +1,74 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fdump-tree-optimized\" } */\n+\n+/* Tests for SRA of unions. */\n+\n+\n+typedef union testunion\n+{\n+  double d;\n+  char f1;\n+} testunion;\n+\n+void\n+copyunion1 (testunion param)\n+{\n+  testunion local;\n+  param.f1 = 0;\n+  local = param;\n+  if (local.f1 != 0)\n+    link_error ();\n+}\n+\n+void\n+copyunion11 (testunion *param)\n+{\n+  testunion local;\n+  param->f1 = 0;\n+  local = *param;\n+  if (local.f1 != 0)\n+    link_error ();\n+}\n+\n+void\n+copyunion111 (testunion param)\n+{\n+  testunion *local = &param;\n+  param.f1 = 0;\n+  if (local->f1 != 0)\n+    link_error ();\n+}\n+\n+testunion globuf;\n+void\n+copyunion1111 (void)\n+{\n+  testunion local;\n+  globuf.f1 = 0;\n+  local = globuf;\n+  if (local.f1 != 0)\n+    link_error ();\n+}\n+\n+void\n+copyunion11111 (void)\n+{\n+  testunion *local = &globuf;\n+  globuf.f1 = 0;\n+  if (local->f1 != 0)\n+    link_error ();\n+}\n+\n+void\n+copyunion111111 (testunion param)\n+{\n+  static testunion local;\n+  param.f1 = 0;\n+  local = param;\n+  if (local.f1 != 0)\n+    link_error ();\n+}\n+\n+/* There should be no reference to link_error. */\n+/* { dg-final { scan-tree-dump-times \"link_error\" 0 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "e59b536c12db181bd4789be8d4b96b87db377d7c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/sra-6.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-6.c?ref=0674b9d090bdf37dd6a9d6ce136048996de2bf94", "patch": "@@ -0,0 +1,40 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fdump-tree-optimized -fdump-tree-esra-details\" } */\n+\n+typedef struct teststruct\n+{\n+  double d;\n+  int i1;\n+  char c1;\n+  float z;\n+  char c2;\n+  int i2;\n+} teststruct;\n+\n+\n+void cow (int i)\n+{\n+  teststruct a, b, c, d;\n+\n+  a.d = 3.2;\n+  a.i1 = i;\n+\n+  b = a;\n+  c = b;\n+  d = c;\n+\n+  if (d.i1 != i)\n+    link_error ();\n+}\n+\n+\n+/* Suaccesses of b and c should have been created.  */\n+/* { dg-final { scan-tree-dump \"expr = b.d\"  \"esra\"} } */\n+/* { dg-final { scan-tree-dump \"expr = b.i1\"  \"esra\"} } */\n+/* { dg-final { scan-tree-dump \"expr = c.d\"  \"esra\"} } */\n+/* { dg-final { scan-tree-dump \"expr = c.i1\"  \"esra\"} } */\n+/* { dg-final { cleanup-tree-dump \"esra\" } } */\n+\n+/* There should be no reference to link_error.  */\n+/* { dg-final { scan-tree-dump-times \"link_error\" 0 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "895c05fdf91a733dae79d48ba139ee11dffab541", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-7.c?ref=0674b9d090bdf37dd6a9d6ce136048996de2bf94", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-fre-details -fdump-tree-optimized\" } */\n+/* { dg-options \"-O -fno-tree-sra -fdump-tree-fre-details -fdump-tree-optimized\" } */\n #if (__SIZEOF_INT__ == __SIZEOF_FLOAT__)\n typedef int intflt;\n #elif (__SIZEOF_LONG__ == __SIZEOF_FLOAT__)"}, {"sha": "bc9f8e3992e8e4c49b93efda3b4b11c041f16b38", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-8.c?ref=0674b9d090bdf37dd6a9d6ce136048996de2bf94", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-fre-details\" } */\n+/* { dg-options \"-O -fno-tree-sra -fdump-tree-fre-details\" } */\n #if (__SIZEOF_INT__ == __SIZEOF_FLOAT__)\n typedef int intflt;\n #elif (__SIZEOF_LONG__ == __SIZEOF_FLOAT__)"}, {"sha": "c8a434a2bba8a32a38285ef928cd309941330662", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-9.c?ref=0674b9d090bdf37dd6a9d6ce136048996de2bf94", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O -fdump-tree-fre-stats\" } */\n+/* { dg-options \"-O -fno-tree-sra -fdump-tree-fre-stats\" } */\n \n union loc {\n     unsigned reg;"}, {"sha": "b6979ec8896bb9c1f3b3e51a8e74a327d7e0a233", "filename": "gcc/testsuite/gfortran.dg/pr25923.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr25923.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr25923.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr25923.f90?ref=0674b9d090bdf37dd6a9d6ce136048996de2bf94", "patch": "@@ -10,7 +10,7 @@ module foo\n \n contains\n \n-  function baz(arg) result(res) ! { dg-warning \"res.yr' may be\" }\n+  function baz(arg) result(res) ! { dg-warning \"res.yr' may be\" \"\" { xfail *-*-* } }\n     type(bar), intent(in) :: arg\n     type(bar) :: res\n     logical, external:: some_func"}, {"sha": "232904ac1e183a87dcd62ea532d0795d8e43211a", "filename": "gcc/testsuite/gnat.dg/pack9.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgnat.dg%2Fpack9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftestsuite%2Fgnat.dg%2Fpack9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fpack9.adb?ref=0674b9d090bdf37dd6a9d6ce136048996de2bf94", "patch": "@@ -1,5 +1,5 @@\n -- { dg-do compile }\n--- { dg-options \"-O2 -gnatp -cargs --param sra-max-structure-size=24 --param sra-max-structure-count=6 -fdump-tree-optimized\" }\n+-- { dg-options \"-O2 -gnatp -cargs -fdump-tree-optimized\" }\n \n package body Pack9 is\n "}, {"sha": "825d6e80ae7dc0e127d76e5ae4401a5606aa2993", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 1790, "deletions": 3155, "changes": 4945, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0674b9d090bdf37dd6a9d6ce136048996de2bf94/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=0674b9d090bdf37dd6a9d6ce136048996de2bf94"}]}