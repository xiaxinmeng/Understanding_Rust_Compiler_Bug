{"sha": "cac2353f8b6424980a78fe224b20b2a70e98de51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FjMjM1M2Y4YjY0MjQ5ODBhNzhmZTIyNGIyMGIyYTcwZTk4ZGU1MQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-08-02T13:12:30Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-08-02T14:58:07Z"}, "message": "Remove --param=threader-iterative.\n\nThis was meant to be an internal construct, but I see folks are using\nit and submitting PRs against it.  Let's just remove this to avoid\nfurther confusion.\n\nTested on x86-64 Linux.\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/101724\n\t* params.opt: Remove --param=threader-iterative.\n\t* tree-ssa-threadbackward.c (pass_thread_jumps::execute): Remove\n\titerative mode.", "tree": {"sha": "233110d78ceac8b889fe090acac43abf6a4e5c6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/233110d78ceac8b889fe090acac43abf6a4e5c6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cac2353f8b6424980a78fe224b20b2a70e98de51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cac2353f8b6424980a78fe224b20b2a70e98de51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cac2353f8b6424980a78fe224b20b2a70e98de51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cac2353f8b6424980a78fe224b20b2a70e98de51/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d8577dd46688a3c721fb1e1f271b59f1672e99a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d8577dd46688a3c721fb1e1f271b59f1672e99a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d8577dd46688a3c721fb1e1f271b59f1672e99a"}], "stats": {"total": 22, "additions": 2, "deletions": 20}, "files": [{"sha": "aa2fb4047b689a9c352c24ba9e5141985c61d2f9", "filename": "gcc/params.opt", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cac2353f8b6424980a78fe224b20b2a70e98de51/gcc%2Fparams.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cac2353f8b6424980a78fe224b20b2a70e98de51/gcc%2Fparams.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.opt?ref=cac2353f8b6424980a78fe224b20b2a70e98de51", "patch": "@@ -1010,10 +1010,6 @@ Maximum depth of DFS walk used by modref escape analysis.\n Common Joined UInteger Var(param_modref_max_escape_points) Init(256) Param Optimization\n Maximum number of escape points tracked by modref per SSA-name.\n \n--param=threader-iterative=\n-Common Joined UInteger Var(param_threader_iterative) Init(0) Param Optimization\n-Run backwards threader in iterative mode.\n-\n -param=threader-mode=\n Common Joined Var(param_threader_mode) Enum(threader_mode) Init(THREADER_MODE_RANGER) Param Optimization\n --param=threader-mode=[legacy|ranger] Specifies the mode the backwards threader should run in."}, {"sha": "91ce443b1b237e2ab781e89cc218cfb567c85fe8", "filename": "gcc/tree-ssa-threadbackward.c", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cac2353f8b6424980a78fe224b20b2a70e98de51/gcc%2Ftree-ssa-threadbackward.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cac2353f8b6424980a78fe224b20b2a70e98de51/gcc%2Ftree-ssa-threadbackward.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadbackward.c?ref=cac2353f8b6424980a78fe224b20b2a70e98de51", "patch": "@@ -1342,24 +1342,10 @@ pass_thread_jumps::execute (function *fun)\n {\n   loop_optimizer_init (LOOPS_HAVE_PREHEADERS | LOOPS_HAVE_SIMPLE_LATCHES);\n \n-  // Iterative mode is a testing construct and is not meant for public\n-  // consumption.  It is OFF by default.\n-  bool iterative = param_threader_iterative;\n-\n-  bool changed = false;\n-  while (try_thread_blocks (fun))\n-    {\n-      changed = true;\n-\n-      if (!iterative)\n-\tbreak;\n-\n-      if ((param_threader_mode & THREADER_MODE_RANGER) == 0)\n-\tbreak;\n-      cleanup_tree_cfg (TODO_update_ssa);\n-    }\n+  bool changed = try_thread_blocks (fun);\n \n   loop_optimizer_finalize ();\n+\n   return changed ? TODO_cleanup_cfg : 0;\n }\n "}]}