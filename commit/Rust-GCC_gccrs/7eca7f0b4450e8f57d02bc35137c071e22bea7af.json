{"sha": "7eca7f0b4450e8f57d02bc35137c071e22bea7af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VjYTdmMGI0NDUwZThmNTdkMDJiYzM1MTM3YzA3MWUyMmJlYTdhZg==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2016-12-15T16:03:06Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2016-12-15T16:03:06Z"}, "message": "[arm] Remove FEATURES field from FPU descriptions\n\nNow that everything uses the new ISA features, we can remove the\nFEATURES field from the FPU descriptions, along with all the macros\nand definitions associated with it.\n\n\t* arm-fpus.def (ARM_FPU): Remove features field from all definitions.\n\t* arm.h (arm_fpu_feature_set): Delete typedef.\n\t(FPU_FL_NONE): Delete.\n\t(FPU_FL_NEON): Delete.\n\t(FPU_FL_FP16): Delete.\n\t(FPU_FL_CRYPTO): Delete.\n\t(FPU_FL_DBL): Delete.\n\t(FPU_FL_D32): Delete.\n\t(FPU_FL_VFPv2): Delete.\n\t(FPU_FL_VFPv3): Delete.\n\t(FPU_FL_VFPv4): Delete.\n\t(FPU_FL_VFPv5): Delete.\n\t(FPU_FL_AMRv8): Delete.\n\t(FPU_VFPv2): Delete.\n\t(FPU_VFPv3): Delete.\n\t(FPU_VFPv4): Delete.\n\t(FPU_VFPv5): Delete.\n\t(FPU_ARMv8): Delete.\n\t(FPU_DBL): Delete.\n\t(FPU_D32): Delete.\n\t(FPU_NEON): Delete.\n\t(FPU_CRYPTO): Delete.\n\t(FPU_FP16): Delete.\n\t(arm_fpu_desc): Delete features field.\n\t* arm.c (all_fpus): Don't initialize feature field.\n\nFrom-SVN: r243715", "tree": {"sha": "1ecce73f145ceb56efe28df323f19c1f93a394c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ecce73f145ceb56efe28df323f19c1f93a394c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7eca7f0b4450e8f57d02bc35137c071e22bea7af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eca7f0b4450e8f57d02bc35137c071e22bea7af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eca7f0b4450e8f57d02bc35137c071e22bea7af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eca7f0b4450e8f57d02bc35137c071e22bea7af/comments", "author": null, "committer": null, "parents": [{"sha": "56941f70ee29e73d41771be9a197d03a9c2f2d05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56941f70ee29e73d41771be9a197d03a9c2f2d05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56941f70ee29e73d41771be9a197d03a9c2f2d05"}], "stats": {"total": 110, "additions": 52, "deletions": 58}, "files": [{"sha": "be4e2036a062b72eea9617b300390f7824fe4378", "filename": "gcc/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eca7f0b4450e8f57d02bc35137c071e22bea7af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eca7f0b4450e8f57d02bc35137c071e22bea7af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7eca7f0b4450e8f57d02bc35137c071e22bea7af", "patch": "@@ -1,3 +1,31 @@\n+2016-12-15  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm-fpus.def (ARM_FPU): Remove features field from all definitions.\n+\t* arm.h (arm_fpu_feature_set): Delete typedef.\n+\t(FPU_FL_NONE): Delete.\n+\t(FPU_FL_NEON): Delete.\n+\t(FPU_FL_FP16): Delete.\n+\t(FPU_FL_CRYPTO): Delete.\n+\t(FPU_FL_DBL): Delete.\n+\t(FPU_FL_D32): Delete.\n+\t(FPU_FL_VFPv2): Delete.\n+\t(FPU_FL_VFPv3): Delete.\n+\t(FPU_FL_VFPv4): Delete.\n+\t(FPU_FL_VFPv5): Delete.\n+\t(FPU_FL_AMRv8): Delete.\n+\t(FPU_VFPv2): Delete.\n+\t(FPU_VFPv3): Delete.\n+\t(FPU_VFPv4): Delete.\n+\t(FPU_VFPv5): Delete.\n+\t(FPU_ARMv8): Delete.\n+\t(FPU_DBL): Delete.\n+\t(FPU_D32): Delete.\n+\t(FPU_NEON): Delete.\n+\t(FPU_CRYPTO): Delete.\n+\t(FPU_FP16): Delete.\n+\t(arm_fpu_desc): Delete features field.\n+\t* arm.c (all_fpus): Don't initialize feature field.\n+\n 2016-12-15  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.c (arm_can_inline_p): Use ISA features for determining"}, {"sha": "ae8197d574933128a0c769309d8a0f7c5623bcb1", "filename": "gcc/config/arm/arm-fpus.def", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eca7f0b4450e8f57d02bc35137c071e22bea7af/gcc%2Fconfig%2Farm%2Farm-fpus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eca7f0b4450e8f57d02bc35137c071e22bea7af/gcc%2Fconfig%2Farm%2Farm-fpus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-fpus.def?ref=7eca7f0b4450e8f57d02bc35137c071e22bea7af", "patch": "@@ -19,31 +19,31 @@\n \n /* Before using #include to read this file, define a macro:\n \n-      ARM_FPU(NAME, ISA, FEATURES)\n+      ARM_FPU(NAME, ISA)\n \n    The arguments are the fields of struct arm_fpu_desc.\n \n    genopt.sh assumes no whitespace up to the first \",\" in each entry.  */\n \n-ARM_FPU(\"vfp\",\t\t\tISA_FEAT(ISA_VFPv2) ISA_FEAT(ISA_FP_DBL),\t\t\t     FPU_VFPv2 | FPU_DBL)\n-ARM_FPU(\"vfpv2\",\t\tISA_FEAT(ISA_VFPv2) ISA_FEAT(ISA_FP_DBL),\t\t\t     FPU_VFPv2 | FPU_DBL)\n-ARM_FPU(\"vfpv3\",\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_FP_D32),\t\t\t     FPU_VFPv3 | FPU_D32)\n-ARM_FPU(\"vfpv3-fp16\",\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_FP_D32) ISA_FEAT(isa_bit_fp16conv), FPU_VFPv3 | FPU_D32 | FPU_FP16)\n-ARM_FPU(\"vfpv3-d16\",\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_FP_DBL),\t\t\t     FPU_VFPv3 | FPU_DBL)\n-ARM_FPU(\"vfpv3-d16-fp16\",\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_FP_DBL) ISA_FEAT(isa_bit_fp16conv), FPU_VFPv3 | FPU_DBL | FPU_FP16)\n-ARM_FPU(\"vfpv3xd\",\t\tISA_FEAT(ISA_VFPv3),\t\t\t\t\t\t     FPU_VFPv3)\n-ARM_FPU(\"vfpv3xd-fp16\",\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(isa_bit_fp16conv),\t\t\t     FPU_VFPv3 | FPU_FP16)\n-ARM_FPU(\"neon\",\t\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_NEON),\t\t\t\t     FPU_VFPv3 | FPU_NEON)\n-ARM_FPU(\"neon-vfpv3\",\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_NEON),\t\t\t\t     FPU_VFPv3 | FPU_NEON)\n-ARM_FPU(\"neon-fp16\",\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_NEON) ISA_FEAT(isa_bit_fp16conv),   FPU_VFPv3 | FPU_NEON | FPU_FP16)\n-ARM_FPU(\"vfpv4\",\t\tISA_FEAT(ISA_VFPv4) ISA_FEAT(ISA_FP_D32),\t\t\t     FPU_VFPv4 | FPU_D32 | FPU_FP16)\n-ARM_FPU(\"neon-vfpv4\",\t\tISA_FEAT(ISA_VFPv4) ISA_FEAT(ISA_NEON),\t\t\t\t     FPU_VFPv4 | FPU_NEON | FPU_FP16)\n-ARM_FPU(\"vfpv4-d16\",\t\tISA_FEAT(ISA_VFPv4) ISA_FEAT(ISA_FP_DBL),\t\t\t     FPU_VFPv4 | FPU_DBL | FPU_FP16)\n-ARM_FPU(\"fpv4-sp-d16\",\t\tISA_FEAT(ISA_VFPv4),\t\t\t\t\t\t     FPU_VFPv4 | FPU_FP16)\n-ARM_FPU(\"fpv5-sp-d16\",\t\tISA_FEAT(ISA_FPv5),\t\t\t\t\t\t     FPU_VFPv5 | FPU_FP16)\n-ARM_FPU(\"fpv5-d16\",\t\tISA_FEAT(ISA_FPv5) ISA_FEAT(ISA_FP_DBL),\t\t\t     FPU_VFPv5 | FPU_DBL | FPU_FP16)\n-ARM_FPU(\"fp-armv8\",\t\tISA_FEAT(ISA_FP_ARMv8) ISA_FEAT(ISA_FP_D32),\t\t\t     FPU_ARMv8 | FPU_D32 | FPU_FP16)\n-ARM_FPU(\"neon-fp-armv8\",\tISA_FEAT(ISA_FP_ARMv8) ISA_FEAT(ISA_NEON),\t\t\t     FPU_ARMv8 | FPU_NEON | FPU_FP16)\n-ARM_FPU(\"crypto-neon-fp-armv8\", ISA_FEAT(ISA_FP_ARMv8) ISA_FEAT(ISA_CRYPTO),\t\t\t     FPU_ARMv8 | FPU_CRYPTO | FPU_FP16)\n+ARM_FPU(\"vfp\",\t\t\tISA_FEAT(ISA_VFPv2) ISA_FEAT(ISA_FP_DBL))\n+ARM_FPU(\"vfpv2\",\t\tISA_FEAT(ISA_VFPv2) ISA_FEAT(ISA_FP_DBL))\n+ARM_FPU(\"vfpv3\",\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_FP_D32))\n+ARM_FPU(\"vfpv3-fp16\",\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_FP_D32) ISA_FEAT(isa_bit_fp16conv))\n+ARM_FPU(\"vfpv3-d16\",\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_FP_DBL))\n+ARM_FPU(\"vfpv3-d16-fp16\",\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_FP_DBL) ISA_FEAT(isa_bit_fp16conv))\n+ARM_FPU(\"vfpv3xd\",\t\tISA_FEAT(ISA_VFPv3))\n+ARM_FPU(\"vfpv3xd-fp16\",\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(isa_bit_fp16conv))\n+ARM_FPU(\"neon\",\t\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_NEON))\n+ARM_FPU(\"neon-vfpv3\",\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_NEON))\n+ARM_FPU(\"neon-fp16\",\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_NEON) ISA_FEAT(isa_bit_fp16conv))\n+ARM_FPU(\"vfpv4\",\t\tISA_FEAT(ISA_VFPv4) ISA_FEAT(ISA_FP_D32))\n+ARM_FPU(\"neon-vfpv4\",\t\tISA_FEAT(ISA_VFPv4) ISA_FEAT(ISA_NEON))\n+ARM_FPU(\"vfpv4-d16\",\t\tISA_FEAT(ISA_VFPv4) ISA_FEAT(ISA_FP_DBL))\n+ARM_FPU(\"fpv4-sp-d16\",\t\tISA_FEAT(ISA_VFPv4))\n+ARM_FPU(\"fpv5-sp-d16\",\t\tISA_FEAT(ISA_FPv5))\n+ARM_FPU(\"fpv5-d16\",\t\tISA_FEAT(ISA_FPv5) ISA_FEAT(ISA_FP_DBL))\n+ARM_FPU(\"fp-armv8\",\t\tISA_FEAT(ISA_FP_ARMv8) ISA_FEAT(ISA_FP_D32))\n+ARM_FPU(\"neon-fp-armv8\",\tISA_FEAT(ISA_FP_ARMv8) ISA_FEAT(ISA_NEON))\n+ARM_FPU(\"crypto-neon-fp-armv8\", ISA_FEAT(ISA_FP_ARMv8) ISA_FEAT(ISA_CRYPTO))\n /* Compatibility aliases.  */\n-ARM_FPU(\"vfp3\",\t\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_FP_D32),\t\t\t     FPU_VFPv3 | FPU_D32)\n+ARM_FPU(\"vfp3\",\t\t\tISA_FEAT(ISA_VFPv3) ISA_FEAT(ISA_FP_D32))"}, {"sha": "522989d68d09c0063c16e1768359ca241bfe4246", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eca7f0b4450e8f57d02bc35137c071e22bea7af/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eca7f0b4450e8f57d02bc35137c071e22bea7af/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=7eca7f0b4450e8f57d02bc35137c071e22bea7af", "patch": "@@ -2328,8 +2328,8 @@ char arm_arch_name[] = \"__ARM_ARCH_PROFILE__\";\n \n const struct arm_fpu_desc all_fpus[] =\n {\n-#define ARM_FPU(NAME, ISA, FEATURES)\t\t\\\n-  { NAME, {ISA isa_nobit}, FEATURES },\n+#define ARM_FPU(NAME, ISA)\t\t\\\n+  { NAME, {ISA isa_nobit} },\n #include \"arm-fpus.def\"\n #undef ARM_FPU\n };"}, {"sha": "4582d2e7f3eee5a32b16fd7bab2c2ba03f17a07e", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7eca7f0b4450e8f57d02bc35137c071e22bea7af/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7eca7f0b4450e8f57d02bc35137c071e22bea7af/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=7eca7f0b4450e8f57d02bc35137c071e22bea7af", "patch": "@@ -326,44 +326,10 @@ extern tree arm_fp16_type_node;\n   {\"mode\", \"%{!marm:%{!mthumb:-m%(VALUE)}}\"}, \\\n   {\"tls\", \"%{!mtls-dialect=*:-mtls-dialect=%(VALUE)}\"},\n \n-/* FPU feature sets.  */\n-\n-typedef unsigned long arm_fpu_feature_set;\n-\n-/* Test for an FPU feature.  */\n-#define ARM_FPU_FSET_HAS(S,F) (((S) & (F)) == (F))\n-\n-/* FPU Features.  */\n-#define FPU_FL_NONE\t(0u)\n-#define FPU_FL_NEON\t(1u << 0)\t/* NEON instructions.  */\n-#define FPU_FL_FP16\t(1u << 1)\t/* Half-precision.  */\n-#define FPU_FL_CRYPTO\t(1u << 2)\t/* Crypto extensions.  */\n-#define FPU_FL_DBL\t(1u << 3)\t/* Has double precision.  */\n-#define FPU_FL_D32\t(1u << 4)\t/* Has 32 double precision regs.  */\n-#define FPU_FL_VFPv2\t(1u << 5)\t/* Has VFPv2 features.  */\n-#define FPU_FL_VFPv3\t(1u << 6)\t/* Has VFPv3 extensions.  */\n-#define FPU_FL_VFPv4\t(1u << 7)\t/* Has VFPv4 extensions.  */\n-#define FPU_FL_VFPv5\t(1u << 8)\t/* Has VFPv5 extensions.  */\n-#define FPU_FL_ARMv8\t(1u << 9)\t/* Has ARMv8 extensions to VFP.  */\n-\n-/* Some useful combinations.  */\n-#define FPU_VFPv2\t(FPU_FL_VFPv2)\n-#define FPU_VFPv3\t(FPU_VFPv2 | FPU_FL_VFPv3)\n-#define FPU_VFPv4\t(FPU_VFPv3 | FPU_FL_VFPv4)\n-#define FPU_VFPv5\t(FPU_VFPv4 | FPU_FL_VFPv5)\n-#define FPU_ARMv8\t(FPU_VFPv5 | FPU_FL_ARMv8)\n-\n-#define FPU_DBL\t\t(FPU_FL_DBL)\n-#define FPU_D32\t\t(FPU_DBL | FPU_FL_D32)\n-#define FPU_NEON\t(FPU_D32 | FPU_FL_NEON)\n-#define FPU_CRYPTO\t(FPU_NEON | FPU_FL_CRYPTO)\n-#define FPU_FP16\t(FPU_FL_FP16)\n-\n extern const struct arm_fpu_desc\n {\n   const char *name;\n   enum isa_feature isa_bits[isa_num_bits];\n-  arm_fpu_feature_set features;\n } all_fpus[];\n \n /* Which floating point hardware to schedule for.  */"}]}