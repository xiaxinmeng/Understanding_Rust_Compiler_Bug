{"sha": "dec3d2a0afb226fe3b74164b4db4ef1adf0459bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVjM2QyYTBhZmIyMjZmZTNiNzQxNjRiNGRiNGVmMWFkZjA0NTliYg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-10-29T00:06:34Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-10-29T00:06:34Z"}, "message": "2011-10-28  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tRevert Fix for c++/50864.\n\nFrom-SVN: r180640", "tree": {"sha": "f260f3b87fe8ea7160d70831ac71afcfcce1ff9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f260f3b87fe8ea7160d70831ac71afcfcce1ff9f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dec3d2a0afb226fe3b74164b4db4ef1adf0459bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dec3d2a0afb226fe3b74164b4db4ef1adf0459bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dec3d2a0afb226fe3b74164b4db4ef1adf0459bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dec3d2a0afb226fe3b74164b4db4ef1adf0459bb/comments", "author": null, "committer": null, "parents": [{"sha": "f6d3d0fd4fccf88784c5f004d3202602bd24b025", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6d3d0fd4fccf88784c5f004d3202602bd24b025", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6d3d0fd4fccf88784c5f004d3202602bd24b025"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "d0577762cbdcab2a51dd5579333120e1320f60be", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dec3d2a0afb226fe3b74164b4db4ef1adf0459bb/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dec3d2a0afb226fe3b74164b4db4ef1adf0459bb/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=dec3d2a0afb226fe3b74164b4db4ef1adf0459bb", "patch": "@@ -13741,12 +13741,14 @@ tsubst_copy_and_build (tree t,\n \telse if (TREE_CODE (member) == SCOPE_REF\n \t\t && TREE_CODE (TREE_OPERAND (member, 1)) == TEMPLATE_ID_EXPR)\n \t  {\n+\t    tree tmpl;\n+\t    tree args;\n+\n \t    /* Lookup the template functions now that we know what the\n \t       scope is.  */\n-\t    tree scope = TREE_OPERAND (member, 0);\n-\t    tree tmpl = TREE_OPERAND (TREE_OPERAND (member, 1), 0);\n-\t    tree args = TREE_OPERAND (TREE_OPERAND (member, 1), 1);\n-\t    member = lookup_qualified_name (scope, tmpl,\n+\t    tmpl = TREE_OPERAND (TREE_OPERAND (member, 1), 0);\n+\t    args = TREE_OPERAND (TREE_OPERAND (member, 1), 1);\n+\t    member = lookup_qualified_name (TREE_OPERAND (member, 0), tmpl,\n \t\t\t\t\t    /*is_type_p=*/false,\n \t\t\t\t\t    /*complain=*/false);\n \t    if (BASELINK_P (member))\n@@ -13760,7 +13762,7 @@ tsubst_copy_and_build (tree t,\n \t      }\n \t    else\n \t      {\n-\t\tqualified_name_lookup_error (scope, tmpl, member,\n+\t\tqualified_name_lookup_error (object_type, tmpl, member,\n \t\t\t\t\t     input_location);\n \t\treturn error_mark_node;\n \t      }"}]}