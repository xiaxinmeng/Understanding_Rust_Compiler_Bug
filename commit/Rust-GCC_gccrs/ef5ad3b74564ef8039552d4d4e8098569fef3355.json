{"sha": "ef5ad3b74564ef8039552d4d4e8098569fef3355", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY1YWQzYjc0NTY0ZWY4MDM5NTUyZDRkNGU4MDk4NTY5ZmVmMzM1NQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-06-15T13:38:17Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-06-15T13:38:17Z"}, "message": "tree-vrp.c (set_and_canonicalize_value_range): Use canonical predicates to set VR_UNDEFINED and VR_VARYING.\n\n2012-06-15  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-vrp.c (set_and_canonicalize_value_range): Use canonical\n\tpredicates to set VR_UNDEFINED and VR_VARYING.  Drop a case\n\twe assert for in set_value_range to VR_VARYING.\n\nFrom-SVN: r188663", "tree": {"sha": "769b747199559b52e330e488a3af60222f9bf437", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/769b747199559b52e330e488a3af60222f9bf437"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef5ad3b74564ef8039552d4d4e8098569fef3355", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef5ad3b74564ef8039552d4d4e8098569fef3355", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef5ad3b74564ef8039552d4d4e8098569fef3355", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef5ad3b74564ef8039552d4d4e8098569fef3355/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dae840fcd34ceaac186cc603e4458aeb43d4063b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dae840fcd34ceaac186cc603e4458aeb43d4063b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dae840fcd34ceaac186cc603e4458aeb43d4063b"}], "stats": {"total": 60, "additions": 43, "deletions": 17}, "files": [{"sha": "e9f1890dea46bc323d255ccbedd2a1bb171ebb57", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef5ad3b74564ef8039552d4d4e8098569fef3355/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef5ad3b74564ef8039552d4d4e8098569fef3355/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef5ad3b74564ef8039552d4d4e8098569fef3355", "patch": "@@ -1,3 +1,9 @@\n+2012-06-15  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-vrp.c (set_and_canonicalize_value_range): Use canonical\n+\tpredicates to set VR_UNDEFINED and VR_VARYING.  Drop a case\n+\twe assert for in set_value_range to VR_VARYING.\n+\n 2012-06-15  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.md (addsf3, adddf3): Use s_register_operand."}, {"sha": "630118b04bf185873519446603d2d48863972300", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 37, "deletions": 17, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef5ad3b74564ef8039552d4d4e8098569fef3355/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef5ad3b74564ef8039552d4d4e8098569fef3355/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=ef5ad3b74564ef8039552d4d4e8098569fef3355", "patch": "@@ -386,6 +386,18 @@ nonnull_arg_p (const_tree arg)\n }\n \n \n+/* Set value range VR to VR_UNDEFINED.  */\n+\n+static inline void\n+set_value_range_to_undefined (value_range_t *vr)\n+{\n+  vr->type = VR_UNDEFINED;\n+  vr->min = vr->max = NULL_TREE;\n+  if (vr->equiv)\n+    bitmap_clear (vr->equiv);\n+}\n+\n+\n /* Set value range VR to VR_VARYING.  */\n \n static inline void\n@@ -463,10 +475,20 @@ static void\n set_and_canonicalize_value_range (value_range_t *vr, enum value_range_type t,\n \t\t\t\t  tree min, tree max, bitmap equiv)\n {\n-  /* Nothing to canonicalize for symbolic or unknown or varying ranges.  */\n-  if ((t != VR_RANGE\n-       && t != VR_ANTI_RANGE)\n-      || TREE_CODE (min) != INTEGER_CST\n+  /* Use the canonical setters for VR_UNDEFINED and VR_VARYING.  */\n+  if (t == VR_UNDEFINED)\n+    {\n+      set_value_range_to_undefined (vr);\n+      return;\n+    }\n+  else if (t == VR_VARYING)\n+    {\n+      set_value_range_to_varying (vr);\n+      return;\n+    }\n+\n+  /* Nothing to canonicalize for symbolic ranges.  */\n+  if (TREE_CODE (min) != INTEGER_CST\n       || TREE_CODE (max) != INTEGER_CST)\n     {\n       set_value_range (vr, t, min, max, equiv);\n@@ -502,7 +524,8 @@ set_and_canonicalize_value_range (value_range_t *vr, enum value_range_type t,\n \n       if (is_min && is_max)\n \t{\n-\t  /* We cannot deal with empty ranges, drop to varying.  */\n+\t  /* We cannot deal with empty ranges, drop to varying.\n+\t     ???  This could be VR_UNDEFINED instead.  */\n \t  set_value_range_to_varying (vr);\n \t  return;\n \t}\n@@ -525,6 +548,15 @@ set_and_canonicalize_value_range (value_range_t *vr, enum value_range_type t,\n         }\n     }\n \n+  /* Drop [-INF(OVF), +INF(OVF)] to varying.  */\n+  if (needs_overflow_infinity (TREE_TYPE (min))\n+      && is_overflow_infinity (min)\n+      && is_overflow_infinity (max))\n+    {\n+      set_value_range_to_varying (vr);\n+      return;\n+    }\n+\n   set_value_range (vr, t, min, max, equiv);\n }\n \n@@ -608,18 +640,6 @@ set_value_range_to_truthvalue (value_range_t *vr, tree type)\n }\n \n \n-/* Set value range VR to VR_UNDEFINED.  */\n-\n-static inline void\n-set_value_range_to_undefined (value_range_t *vr)\n-{\n-  vr->type = VR_UNDEFINED;\n-  vr->min = vr->max = NULL_TREE;\n-  if (vr->equiv)\n-    bitmap_clear (vr->equiv);\n-}\n-\n-\n /* If abs (min) < abs (max), set VR to [-max, max], if\n    abs (min) >= abs (max), set VR to [-min, min].  */\n "}]}