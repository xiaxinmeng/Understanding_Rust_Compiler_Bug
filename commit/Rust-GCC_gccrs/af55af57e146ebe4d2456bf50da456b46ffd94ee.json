{"sha": "af55af57e146ebe4d2456bf50da456b46ffd94ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY1NWFmNTdlMTQ2ZWJlNGQyNDU2YmY1MGRhNDU2YjQ2ZmZkOTRlZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-04-16T09:23:05Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-04-16T09:23:05Z"}, "message": "acconfig.h: Remove _GLIBCXX_USE_LONG_DOUBLE entry, not used anymore.\n\n2004-04-16  Paolo Carlini  <pcarlini@suse.de>\n\n\t* acconfig.h: Remove _GLIBCXX_USE_LONG_DOUBLE entry, not\n\tused anymore.\n\t* config.h.in: Regenerate.\n\n2004-04-16  Paolo Carlini  <pcarlini@suse.de>\n\n\t* config/locale/generic/monetary_members.cc\n\t(moneypunct<wchar_t>::_M_initialize_moneypunct): Avoid calling\n\tbtowc unnecessarily, just cast to wchar_t (the concerned chars\n\tall belong to the basic character set).\n\t* config/locale/generic/numeric_members.cc\n\t(numpunct<wchar_t>::_M_initialize_numpunct): Likewise.\n\t* config/locale/gnu/monetary_members.cc\n\t(moneypunct<wchar_t>::_M_initialize_moneypunct): Likewise.\n\t* config/locale/gnu/numeric_members.cc\n\t(numpunct<wchar_t>::_M_initialize_numpunct): Likewise.\n\nFrom-SVN: r80746", "tree": {"sha": "3397b5d13da8c8f919b1020561aa88ad3e9c91a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3397b5d13da8c8f919b1020561aa88ad3e9c91a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af55af57e146ebe4d2456bf50da456b46ffd94ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af55af57e146ebe4d2456bf50da456b46ffd94ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af55af57e146ebe4d2456bf50da456b46ffd94ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af55af57e146ebe4d2456bf50da456b46ffd94ee/comments", "author": null, "committer": null, "parents": [{"sha": "ce4ea44e8d01af41c436b78c34958f591b0b5b0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4ea44e8d01af41c436b78c34958f591b0b5b0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce4ea44e8d01af41c436b78c34958f591b0b5b0c"}], "stats": {"total": 95, "additions": 43, "deletions": 52}, "files": [{"sha": "9ef62bd2e1c1abd2f3ccbb13cb144b2fef4251b8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af55af57e146ebe4d2456bf50da456b46ffd94ee/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af55af57e146ebe4d2456bf50da456b46ffd94ee/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=af55af57e146ebe4d2456bf50da456b46ffd94ee", "patch": "@@ -1,3 +1,22 @@\n+2004-04-16  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* acconfig.h: Remove _GLIBCXX_USE_LONG_DOUBLE entry, not\n+\tused anymore.\n+\t* config.h.in: Regenerate.\n+\n+2004-04-16  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* config/locale/generic/monetary_members.cc\n+\t(moneypunct<wchar_t>::_M_initialize_moneypunct): Avoid calling\n+\tbtowc unnecessarily, just cast to wchar_t (the concerned chars\n+\tall belong to the basic character set).\n+\t* config/locale/generic/numeric_members.cc\n+\t(numpunct<wchar_t>::_M_initialize_numpunct): Likewise.\n+\t* config/locale/gnu/monetary_members.cc\n+\t(moneypunct<wchar_t>::_M_initialize_moneypunct): Likewise.\n+\t* config/locale/gnu/numeric_members.cc\n+\t(numpunct<wchar_t>::_M_initialize_numpunct): Likewise.\n+\n 2004-04-15  Paolo Carlini  <pcarlini@suse.de>\n \n \t* src/locale.cc (locale::operator==): When _M_impl == __rhs._M_impl"}, {"sha": "c2a96c2248b0fd1237b02f537c2b03255bce2913", "filename": "libstdc++-v3/acconfig.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af55af57e146ebe4d2456bf50da456b46ffd94ee/libstdc%2B%2B-v3%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af55af57e146ebe4d2456bf50da456b46ffd94ee/libstdc%2B%2B-v3%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facconfig.h?ref=af55af57e146ebe4d2456bf50da456b46ffd94ee", "patch": "@@ -13,9 +13,6 @@\n // Include I/O support for 'long long' and 'unsigned long long'.\n #undef _GLIBCXX_USE_LONG_LONG\n \n-// Include support for 'long double'.\n-#undef _GLIBCXX_USE_LONG_DOUBLE\n-\n // Define if C99 math functions (like fpclassify) should be exposed.\n #undef _GLIBCXX_USE_C99_MATH\n "}, {"sha": "ecb29eb35dbd152928ad0aa0a841bfee1a3f6b29", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af55af57e146ebe4d2456bf50da456b46ffd94ee/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af55af57e146ebe4d2456bf50da456b46ffd94ee/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=af55af57e146ebe4d2456bf50da456b46ffd94ee", "patch": "@@ -14,9 +14,6 @@\n // Include I/O support for 'long long' and 'unsigned long long'.\n #undef _GLIBCXX_USE_LONG_LONG\n \n-// Include support for 'long double'.\n-#undef _GLIBCXX_USE_LONG_DOUBLE\n-\n // Define if C99 math functions (like fpclassify) should be exposed.\n #undef _GLIBCXX_USE_C99_MATH\n "}, {"sha": "71ad6d218b1007f9f4d3393462f492754aa467da", "filename": "libstdc++-v3/config/locale/generic/monetary_members.cc", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af55af57e146ebe4d2456bf50da456b46ffd94ee/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fmonetary_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af55af57e146ebe4d2456bf50da456b46ffd94ee/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fmonetary_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fmonetary_members.cc?ref=af55af57e146ebe4d2456bf50da456b46ffd94ee", "patch": "@@ -127,12 +127,9 @@ namespace std\n       _M_data->_M_pos_format = money_base::_S_default_pattern;\n       _M_data->_M_neg_format = money_base::_S_default_pattern;\n \n-      unsigned char uc;\n       for (size_t __i = 0; __i < money_base::_S_end; ++__i)\n-\t{\n-\t  uc = static_cast<unsigned char>(money_base::_S_atoms[__i]);\n-\t  _M_data->_M_atoms[__i] = btowc(uc);\n-\t}\n+\t_M_data->_M_atoms[__i] =\n+\t  static_cast<wchar_t>(money_base::_S_atoms[__i]);\n     }\n \n   template<> \n@@ -158,12 +155,9 @@ namespace std\n       _M_data->_M_pos_format = money_base::_S_default_pattern;\n       _M_data->_M_neg_format = money_base::_S_default_pattern;\n \n-      unsigned char uc;\n       for (size_t __i = 0; __i < money_base::_S_end; ++__i)\n-\t{\n-\t  uc = static_cast<unsigned char>(money_base::_S_atoms[__i]);\n-\t  _M_data->_M_atoms[__i] = btowc(uc);\n-\t}\n+\t_M_data->_M_atoms[__i] =\n+\t  static_cast<wchar_t>(money_base::_S_atoms[__i]);\n     }\n \n   template<> "}, {"sha": "62017e02d178ad40a693c71f653b93714cbfd6f1", "filename": "libstdc++-v3/config/locale/generic/numeric_members.cc", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af55af57e146ebe4d2456bf50da456b46ffd94ee/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fnumeric_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af55af57e146ebe4d2456bf50da456b46ffd94ee/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fnumeric_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fnumeric_members.cc?ref=af55af57e146ebe4d2456bf50da456b46ffd94ee", "patch": "@@ -59,9 +59,9 @@ namespace std\n \t_M_data->_M_atoms_in[__i] = __num_base::_S_atoms_in[__i];\n \n       _M_data->_M_truename = \"true\";\n-      _M_data->_M_truename_size = strlen(_M_data->_M_truename);\n+      _M_data->_M_truename_size = 4;\n       _M_data->_M_falsename = \"false\";\n-      _M_data->_M_falsename_size = strlen(_M_data->_M_falsename);\n+      _M_data->_M_falsename_size = 5;\n     }\n \n   template<> \n@@ -85,23 +85,18 @@ namespace std\n       _M_data->_M_thousands_sep = L',';\n       \n       // Use ctype::widen code without the facet...\n-      unsigned char uc;\n       for (size_t __i = 0; __i < __num_base::_S_oend; ++__i)\n-\t{\n-\t  uc = static_cast<unsigned char>(__num_base::_S_atoms_out[__i]);\n-\t  _M_data->_M_atoms_out[__i] = btowc(uc);\n-\t}\n+\t_M_data->_M_atoms_out[__i] =\n+\t  static_cast<wchar_t>(__num_base::_S_atoms_out[__i]);\n       \n       for (size_t __i = 0; __i < __num_base::_S_iend; ++__i)\n-\t{\n-\t  uc = static_cast<unsigned char>(__num_base::_S_atoms_in[__i]);\n-\t  _M_data->_M_atoms_in[__i] = btowc(uc);\n-\t}\n+\t_M_data->_M_atoms_in[__i] =\n+\t  static_cast<wchar_t>(__num_base::_S_atoms_in[__i]);\n \n       _M_data->_M_truename = L\"true\";\n-      _M_data->_M_truename_size = wcslen(_M_data->_M_truename);\n+      _M_data->_M_truename_size = 4;\n       _M_data->_M_falsename = L\"false\";\n-      _M_data->_M_falsename_size = wcslen(_M_data->_M_falsename);\n+      _M_data->_M_falsename_size = 5;\n     }\n \n   template<> "}, {"sha": "f1cb25fe58b7b425012c0fac2887cf599f2fb8f7", "filename": "libstdc++-v3/config/locale/gnu/monetary_members.cc", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af55af57e146ebe4d2456bf50da456b46ffd94ee/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmonetary_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af55af57e146ebe4d2456bf50da456b46ffd94ee/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmonetary_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fmonetary_members.cc?ref=af55af57e146ebe4d2456bf50da456b46ffd94ee", "patch": "@@ -372,12 +372,9 @@ namespace std\n \t  _M_data->_M_neg_format = money_base::_S_default_pattern;\n \n \t  // Use ctype::widen code without the facet...\n-\t  unsigned char uc;\n \t  for (size_t __i = 0; __i < money_base::_S_end; ++__i)\n-\t    {\n-\t      uc = static_cast<unsigned char>(money_base::_S_atoms[__i]);\n-\t      _M_data->_M_atoms[__i] = btowc(uc);\n-\t    }\n+\t    _M_data->_M_atoms[__i] =\n+\t      static_cast<wchar_t>(money_base::_S_atoms[__i]);\n \t}\n       else\n \t{\n@@ -517,12 +514,9 @@ namespace std\n \t  _M_data->_M_neg_format = money_base::_S_default_pattern;\n \n \t  // Use ctype::widen code without the facet...\n-\t  unsigned char uc;\n \t  for (size_t __i = 0; __i < money_base::_S_end; ++__i)\n-\t    {\n-\t      uc = static_cast<unsigned char>(money_base::_S_atoms[__i]);\n-\t      _M_data->_M_atoms[__i] = btowc(uc);\n-\t    }\n+\t    _M_data->_M_atoms[__i] =\n+\t      static_cast<wchar_t>(money_base::_S_atoms[__i]);\n \t}\n       else\n \t{"}, {"sha": "01e922515f375c5283f5ab4f1789b5fb31531086", "filename": "libstdc++-v3/config/locale/gnu/numeric_members.cc", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af55af57e146ebe4d2456bf50da456b46ffd94ee/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fnumeric_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af55af57e146ebe4d2456bf50da456b46ffd94ee/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fnumeric_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fnumeric_members.cc?ref=af55af57e146ebe4d2456bf50da456b46ffd94ee", "patch": "@@ -78,10 +78,10 @@ namespace std\n       // NB: There is no way to extact this info from posix locales.\n       // _M_truename = __nl_langinfo_l(YESSTR, __cloc);\n       _M_data->_M_truename = \"true\";\n-      _M_data->_M_truename_size = strlen(_M_data->_M_truename);\n+      _M_data->_M_truename_size = 4;\n       // _M_falsename = __nl_langinfo_l(NOSTR, __cloc);\n       _M_data->_M_falsename = \"false\";\n-      _M_data->_M_falsename_size = strlen(_M_data->_M_falsename);\n+      _M_data->_M_falsename_size = 5;\n     }\n  \n   template<> \n@@ -107,18 +107,13 @@ namespace std\n \t  _M_data->_M_thousands_sep = L',';\n \n \t  // Use ctype::widen code without the facet...\n-\t  unsigned char uc;\n \t  for (size_t __i = 0; __i < __num_base::_S_oend; ++__i)\n-\t    {\n-\t      uc = static_cast<unsigned char>(__num_base::_S_atoms_out[__i]);\n-\t      _M_data->_M_atoms_out[__i] = btowc(uc);\n-\t    }\n+\t    _M_data->_M_atoms_out[__i] =\n+\t      static_cast<wchar_t>(__num_base::_S_atoms_out[__i]);\n \n \t  for (size_t __i = 0; __i < __num_base::_S_iend; ++__i)\n-\t    {\n-\t      uc = static_cast<unsigned char>(__num_base::_S_atoms_in[__i]);\n-\t      _M_data->_M_atoms_in[__i] = btowc(uc);\n-\t    }\n+\t    _M_data->_M_atoms_in[__i] =\n+\t      static_cast<wchar_t>(__num_base::_S_atoms_in[__i]);\n \t}\n       else\n \t{\n@@ -140,10 +135,10 @@ namespace std\n       // NB: There is no way to extact this info from posix locales.\n       // _M_truename = __nl_langinfo_l(YESSTR, __cloc);\n       _M_data->_M_truename = L\"true\";\n-      _M_data->_M_truename_size = wcslen(_M_data->_M_truename);\n+      _M_data->_M_truename_size = 4;\n       // _M_falsename = __nl_langinfo_l(NOSTR, __cloc);\n       _M_data->_M_falsename = L\"false\";\n-      _M_data->_M_falsename_size = wcslen(_M_data->_M_falsename);\n+      _M_data->_M_falsename_size = 5;\n     }\n \n   template<> "}]}