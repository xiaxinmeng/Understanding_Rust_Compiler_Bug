{"sha": "305406d3e1e585ec8dc1eedbaf757148f6034119", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA1NDA2ZDNlMWU1ODVlYzhkYzFlZWRiYWY3NTcxNDhmNjAzNDExOQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2012-02-21T11:54:27Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-02-21T11:54:27Z"}, "message": "re PR middle-end/51782 (-ftree-sra: Missing address-space information leads to wrong)\n\n\tPR middle-end/51782\n\t* gcc.target/avr/torture/pr51782-1.c: New test.\n\nFrom-SVN: r184434", "tree": {"sha": "4406c0fb7f11529c00847e25b4f655729a4e57c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4406c0fb7f11529c00847e25b4f655729a4e57c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/305406d3e1e585ec8dc1eedbaf757148f6034119", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/305406d3e1e585ec8dc1eedbaf757148f6034119", "html_url": "https://github.com/Rust-GCC/gccrs/commit/305406d3e1e585ec8dc1eedbaf757148f6034119", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/305406d3e1e585ec8dc1eedbaf757148f6034119/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8540e6e8bdb60f1cd1ea2b05394bdc7a13b8dcd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8540e6e8bdb60f1cd1ea2b05394bdc7a13b8dcd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8540e6e8bdb60f1cd1ea2b05394bdc7a13b8dcd2"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "0fe2f699e5723f15992a1411f2b9f7a15e823298", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/305406d3e1e585ec8dc1eedbaf757148f6034119/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/305406d3e1e585ec8dc1eedbaf757148f6034119/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=305406d3e1e585ec8dc1eedbaf757148f6034119", "patch": "@@ -1,3 +1,8 @@\n+2012-02-21  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR middle-end/51782\n+\t* gcc.target/avr/torture/pr51782-1.c: New test.\n+\n 2012-02-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/52318"}, {"sha": "ff0f9d45fae85152c956645a0dbd6579ff58edf7", "filename": "gcc/testsuite/gcc.target/avr/torture/pr51782-1.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/305406d3e1e585ec8dc1eedbaf757148f6034119/gcc%2Ftestsuite%2Fgcc.target%2Favr%2Ftorture%2Fpr51782-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/305406d3e1e585ec8dc1eedbaf757148f6034119/gcc%2Ftestsuite%2Fgcc.target%2Favr%2Ftorture%2Fpr51782-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Favr%2Ftorture%2Fpr51782-1.c?ref=305406d3e1e585ec8dc1eedbaf757148f6034119", "patch": "@@ -0,0 +1,51 @@\n+/* PR middle-end/51782 */\n+/* { dg-do run } */\n+/* { dg-options { \"-std=gnu99\" } } */\n+\n+#include <stdlib.h>\n+\n+struct R { char r; };\n+struct RGB { char r,g,b; };\n+\n+__flash const struct R r1 = { 12 };\n+__flash const struct RGB r3 = { 23, 56, 78 };\n+\n+char __attribute__((noinline,noclone))\n+read1_bug (const __flash struct R *s)\n+{\n+  struct R t = *s;\n+  return t.r;\n+}\n+\n+char __attribute__((noinline,noclone))\n+read1_ok (const __flash struct R *s)\n+{\n+  return s->r;\n+}\n+\n+char __attribute__((noinline,noclone))\n+read3_bug (const __flash struct RGB *s)\n+{\n+  struct RGB t = *s;\n+  return t.r + t.g + t.b;\n+}\n+\n+char __attribute__((noinline,noclone))\n+read3_ok (const __flash struct RGB *s)\n+{\n+  return s->r + s->g + s->b;\n+}\n+\n+__flash const struct R * volatile p1 = &r1;\n+__flash const struct RGB * volatile p3 = &r3;\n+\n+int main (void)\n+{\n+  if (read1_bug (p1) != read1_ok (p1))\n+    abort();\n+  \n+  if (read3_bug (p3) != read3_ok (p3))\n+    abort();\n+  \n+  exit (0);\n+}"}]}