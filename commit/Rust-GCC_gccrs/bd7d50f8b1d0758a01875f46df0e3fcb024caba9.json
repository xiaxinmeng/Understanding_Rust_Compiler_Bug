{"sha": "bd7d50f8b1d0758a01875f46df0e3fcb024caba9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ3ZDUwZjhiMWQwNzU4YTAxODc1ZjQ2ZGYwZTNmY2IwMjRjYWJhOQ==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2005-05-11T01:39:32Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2005-05-11T01:39:32Z"}, "message": "Makefile.in: Regenerate dependencies.\n\n2005-05-11  Paul Brook  <paul@codesourcery.com>\n\n\t* Makefile.in: Regenerate dependencies.\n\nFrom-SVN: r99556", "tree": {"sha": "0e7cd54b4e2411253bc3b2da8cc0e6b55f327da0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e7cd54b4e2411253bc3b2da8cc0e6b55f327da0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd7d50f8b1d0758a01875f46df0e3fcb024caba9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd7d50f8b1d0758a01875f46df0e3fcb024caba9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd7d50f8b1d0758a01875f46df0e3fcb024caba9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd7d50f8b1d0758a01875f46df0e3fcb024caba9/comments", "author": null, "committer": null, "parents": [{"sha": "579714d0b0f0d3a4d1810d5fd75190fa0fc0294c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/579714d0b0f0d3a4d1810d5fd75190fa0fc0294c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/579714d0b0f0d3a4d1810d5fd75190fa0fc0294c"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "4fa24038a709c439095ec17df50137d50ad24a65", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd7d50f8b1d0758a01875f46df0e3fcb024caba9/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd7d50f8b1d0758a01875f46df0e3fcb024caba9/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=bd7d50f8b1d0758a01875f46df0e3fcb024caba9", "patch": "@@ -1,3 +1,7 @@\n+2005-05-11  Paul Brook  <paul@codesourcery.com>\n+\n+\t* Makefile.in: Regenerate dependencies.\n+\n 2005-05-10  Nick Clifton  <nickc@redhat.com>\n \n \t* Update the address and phone number of the FSF organization in"}, {"sha": "4624998025c362d3b51e00caa173b182c81f6580", "filename": "libiberty/Makefile.in", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd7d50f8b1d0758a01875f46df0e3fcb024caba9/libiberty%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd7d50f8b1d0758a01875f46df0e3fcb024caba9/libiberty%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FMakefile.in?ref=bd7d50f8b1d0758a01875f46df0e3fcb024caba9", "patch": "@@ -441,13 +441,14 @@ $(CONFIGURED_OFILES): stamp-picdir\n \telse true; fi\n \t$(COMPILE.c) $(srcdir)/alloca.c $(OUTPUT_OPTION)\n \n-./argv.o: $(srcdir)/argv.c $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h\n+./argv.o: $(srcdir)/argv.c config.h $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h\n \tif [ x\"$(PICFLAG)\" != x ]; then \\\n \t  $(COMPILE.c) $(PICFLAG) $(srcdir)/argv.c -o pic/$@; \\\n \telse true; fi\n \t$(COMPILE.c) $(srcdir)/argv.c $(OUTPUT_OPTION)\n \n-./asprintf.o: $(srcdir)/asprintf.c $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h\n+./asprintf.o: $(srcdir)/asprintf.c config.h $(INCDIR)/ansidecl.h \\\n+\t$(INCDIR)/libiberty.h\n \tif [ x\"$(PICFLAG)\" != x ]; then \\\n \t  $(COMPILE.c) $(PICFLAG) $(srcdir)/asprintf.c -o pic/$@; \\\n \telse true; fi\n@@ -459,8 +460,8 @@ $(CONFIGURED_OFILES): stamp-picdir\n \telse true; fi\n \t$(COMPILE.c) $(srcdir)/atexit.c $(OUTPUT_OPTION)\n \n-./basename.o: $(srcdir)/basename.c $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h \\\n-\t$(INCDIR)/safe-ctype.h\n+./basename.o: $(srcdir)/basename.c config.h $(INCDIR)/ansidecl.h \\\n+\t$(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h\n \tif [ x\"$(PICFLAG)\" != x ]; then \\\n \t  $(COMPILE.c) $(PICFLAG) $(srcdir)/basename.c -o pic/$@; \\\n \telse true; fi\n@@ -553,7 +554,8 @@ $(CONFIGURED_OFILES): stamp-picdir\n \telse true; fi\n \t$(COMPILE.c) $(srcdir)/dyn-string.c $(OUTPUT_OPTION)\n \n-./fdmatch.o: $(srcdir)/fdmatch.c $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h\n+./fdmatch.o: $(srcdir)/fdmatch.c config.h $(INCDIR)/ansidecl.h \\\n+\t$(INCDIR)/libiberty.h\n \tif [ x\"$(PICFLAG)\" != x ]; then \\\n \t  $(COMPILE.c) $(PICFLAG) $(srcdir)/fdmatch.c -o pic/$@; \\\n \telse true; fi\n@@ -645,7 +647,7 @@ $(CONFIGURED_OFILES): stamp-picdir\n \telse true; fi\n \t$(COMPILE.c) $(srcdir)/hashtab.c $(OUTPUT_OPTION)\n \n-./hex.o: $(srcdir)/hex.c $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h \\\n+./hex.o: $(srcdir)/hex.c config.h $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h \\\n \t$(INCDIR)/safe-ctype.h\n \tif [ x\"$(PICFLAG)\" != x ]; then \\\n \t  $(COMPILE.c) $(PICFLAG) $(srcdir)/hex.c -o pic/$@; \\\n@@ -664,8 +666,9 @@ $(CONFIGURED_OFILES): stamp-picdir\n \telse true; fi\n \t$(COMPILE.c) $(srcdir)/insque.c $(OUTPUT_OPTION)\n \n-./lbasename.o: $(srcdir)/lbasename.c $(INCDIR)/ansidecl.h $(INCDIR)/filenames.h \\\n-\t$(INCDIR)/libiberty.h $(INCDIR)/safe-ctype.h\n+./lbasename.o: $(srcdir)/lbasename.c config.h $(INCDIR)/ansidecl.h \\\n+\t$(INCDIR)/filenames.h $(INCDIR)/libiberty.h \\\n+\t$(INCDIR)/safe-ctype.h\n \tif [ x\"$(PICFLAG)\" != x ]; then \\\n \t  $(COMPILE.c) $(PICFLAG) $(srcdir)/lbasename.c -o pic/$@; \\\n \telse true; fi\n@@ -886,7 +889,8 @@ $(CONFIGURED_OFILES): stamp-picdir\n \telse true; fi\n \t$(COMPILE.c) $(srcdir)/sort.c $(OUTPUT_OPTION)\n \n-./spaces.o: $(srcdir)/spaces.c $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h\n+./spaces.o: $(srcdir)/spaces.c config.h $(INCDIR)/ansidecl.h \\\n+\t$(INCDIR)/libiberty.h\n \tif [ x\"$(PICFLAG)\" != x ]; then \\\n \t  $(COMPILE.c) $(PICFLAG) $(srcdir)/spaces.c -o pic/$@; \\\n \telse true; fi\n@@ -1056,7 +1060,8 @@ $(CONFIGURED_OFILES): stamp-picdir\n \telse true; fi\n \t$(COMPILE.c) $(srcdir)/waitpid.c $(OUTPUT_OPTION)\n \n-./xatexit.o: $(srcdir)/xatexit.c $(INCDIR)/ansidecl.h $(INCDIR)/libiberty.h\n+./xatexit.o: $(srcdir)/xatexit.c config.h $(INCDIR)/ansidecl.h \\\n+\t$(INCDIR)/libiberty.h\n \tif [ x\"$(PICFLAG)\" != x ]; then \\\n \t  $(COMPILE.c) $(PICFLAG) $(srcdir)/xatexit.c -o pic/$@; \\\n \telse true; fi"}]}