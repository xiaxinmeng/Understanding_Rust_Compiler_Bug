{"sha": "2ef06beb77833e951ce436d9b0b954090e4248b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVmMDZiZWI3NzgzM2U5NTFjZTQzNmQ5YjBiOTU0MDkwZTQyNDhiNg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2006-01-28T22:11:42Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2006-01-28T22:11:42Z"}, "message": "re PR c++/25999 (compiler loses extern \"C\" for function after #pragma weak)\n\n\tPR c++/25999\n\t* decl.c (start_preparsed_function): Call maybe_apply_pragma_weak\n\there, not ...\n\t(start_function): ... here.\n\tPR c++/25999\n\t* g++.dg/ext/pragmaweak1.C: New test.\n\nFrom-SVN: r110340", "tree": {"sha": "35aae564506e3c5cfe938e08bca9bf4463d4065c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35aae564506e3c5cfe938e08bca9bf4463d4065c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ef06beb77833e951ce436d9b0b954090e4248b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ef06beb77833e951ce436d9b0b954090e4248b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ef06beb77833e951ce436d9b0b954090e4248b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ef06beb77833e951ce436d9b0b954090e4248b6/comments", "author": null, "committer": null, "parents": [{"sha": "5f1f4746bec0ee6d3a40d9ad761870bcbd8d5f50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f1f4746bec0ee6d3a40d9ad761870bcbd8d5f50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f1f4746bec0ee6d3a40d9ad761870bcbd8d5f50"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "107187937331b4d951684b874267d97eed92faeb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef06beb77833e951ce436d9b0b954090e4248b6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef06beb77833e951ce436d9b0b954090e4248b6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2ef06beb77833e951ce436d9b0b954090e4248b6", "patch": "@@ -1,3 +1,10 @@\n+2006-01-28  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/25999\n+\t* decl.c (start_preparsed_function): Call maybe_apply_pragma_weak\n+\there, not ...\n+\t(start_function): ... here.\n+\n 2006-01-28  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/25855"}, {"sha": "ef7ed3a4fcdc00d220fdaf32ef773e7404b0b644", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef06beb77833e951ce436d9b0b954090e4248b6/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef06beb77833e951ce436d9b0b954090e4248b6/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=2ef06beb77833e951ce436d9b0b954090e4248b6", "patch": "@@ -10287,6 +10287,17 @@ start_preparsed_function (tree decl1, tree attrs, int flags)\n \t    DECL_CONTEXT (decl1) = DECL_CONTEXT (DECL_TI_TEMPLATE (decl1));\n \t}\n       fntype = TREE_TYPE (decl1);\n+\n+      /* If #pragma weak applies, mark the decl appropriately now.\n+\t The pragma only applies to global functions.  Because\n+\t determining whether or not the #pragma applies involves\n+\t computing the mangled name for the declaration, we cannot\n+\t apply the pragma until after we have merged this declaration\n+\t with any previous declarations; if the original declaration\n+\t has a linkage specification, that specification applies to\n+\t the definition as well, and may affect the mangled name.  */\n+      if (!DECL_CONTEXT (decl1))\n+\tmaybe_apply_pragma_weak (decl1);\n     }\n \n   /* Determine the ELF visibility attribute for the function.  We must\n@@ -10458,10 +10469,6 @@ start_function (cp_decl_specifier_seq *declspecs,\n   if (decl1 == NULL_TREE || TREE_CODE (decl1) != FUNCTION_DECL)\n     return 0;\n \n-  /* If #pragma weak was used, mark the decl weak now.  */\n-  if (global_scope_p (current_binding_level))\n-    maybe_apply_pragma_weak (decl1);\n-\n   if (DECL_MAIN_P (decl1))\n     /* main must return int.  grokfndecl should have corrected it\n        (and issued a diagnostic) if the user got it wrong.  */"}, {"sha": "5b40db880e2dcc70c44cf5180de25d6cea1baaf7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef06beb77833e951ce436d9b0b954090e4248b6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef06beb77833e951ce436d9b0b954090e4248b6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2ef06beb77833e951ce436d9b0b954090e4248b6", "patch": "@@ -1,3 +1,8 @@\n+2006-01-28  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/25999\n+\t* g++.dg/ext/pragmaweak1.C: New test.\n+\n 2006-01-28  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/25855"}, {"sha": "68bf3fce2ddb88d580b6029b8a57d7064bd41ac2", "filename": "gcc/testsuite/g++.dg/ext/pragmaweak1.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ef06beb77833e951ce436d9b0b954090e4248b6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpragmaweak1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ef06beb77833e951ce436d9b0b954090e4248b6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpragmaweak1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpragmaweak1.C?ref=2ef06beb77833e951ce436d9b0b954090e4248b6", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/25999\n+// { dg-final { scan-assembler-not \"_Z3Foov\" } }\n+\n+extern \"C\" {\n+  void Foo();\n+}\n+#pragma weak Random_Symbol\n+void Foo() { }\n+"}]}