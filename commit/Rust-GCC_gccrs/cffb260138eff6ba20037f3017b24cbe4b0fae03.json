{"sha": "cffb260138eff6ba20037f3017b24cbe4b0fae03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZmYjI2MDEzOGVmZjZiYTIwMDM3ZjMwMTdiMjRjYmU0YjBmYWUwMw==", "commit": {"author": {"name": "Ira Ruben", "email": "ira@apple.com", "date": "2001-09-06T23:49:39Z"}, "committer": {"name": "Stan Shebs", "email": "shebs@gcc.gnu.org", "date": "2001-09-06T23:49:39Z"}, "message": "Remove OP_IDENTIFIER.\n\n2001-09-06  Ira Ruben  <ira@apple.com>\n\n        Remove OP_IDENTIFIER.\n        * tree.def (OP_IDENTIFIER): Remove.\n        * tree.c (tree_node_kind enum): Remove op_id_kind.\n        (tree_node_kind_names): Remove \"op_identifiers\".\n        (make_node): Remove OP_IDENTIFIER test.\n        (build_op_identifier): Removed because it isn't being used.\n        * print-tree.c (print_node): Remove OP_IDENTIFIER case.\n        * cp/pt.c (tsubst): Remove OP_IDENTIFIER case.\n\nFrom-SVN: r45457", "tree": {"sha": "b828583415b6904f0f3b26659795e6820b423704", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b828583415b6904f0f3b26659795e6820b423704"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cffb260138eff6ba20037f3017b24cbe4b0fae03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cffb260138eff6ba20037f3017b24cbe4b0fae03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cffb260138eff6ba20037f3017b24cbe4b0fae03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cffb260138eff6ba20037f3017b24cbe4b0fae03/comments", "author": null, "committer": null, "parents": [{"sha": "0615ed3659681961b717f70850dd62b0b846a34c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0615ed3659681961b717f70850dd62b0b846a34c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0615ed3659681961b717f70850dd62b0b846a34c"}], "stats": {"total": 40, "additions": 11, "deletions": 29}, "files": [{"sha": "dedc597e1045b7fe2d66701f1edc4468ce5ead03", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cffb260138eff6ba20037f3017b24cbe4b0fae03/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cffb260138eff6ba20037f3017b24cbe4b0fae03/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cffb260138eff6ba20037f3017b24cbe4b0fae03", "patch": "@@ -1,3 +1,14 @@\n+2001-09-06  Ira Ruben  <ira@apple.com>\n+\n+\tRemove OP_IDENTIFIER.\n+\t* tree.def (OP_IDENTIFIER): Remove.\n+\t* tree.c (tree_node_kind enum): Remove op_id_kind.\n+\t(tree_node_kind_names): Remove \"op_identifiers\".\n+\t(make_node): Remove OP_IDENTIFIER test.\n+\t(build_op_identifier): Removed because it isn't being used.\n+\t* print-tree.c (print_node): Remove OP_IDENTIFIER case.\n+\t* cp/pt.c (tsubst): Remove OP_IDENTIFIER case.\n+\n 2001-09-06  Richard Henderson  <rth@redhat.com>\n \n \t* simplify-rtx.c (simplify_binary_operation): Revert last change."}, {"sha": "960ef44c5c3b6c616a8e6abcd38e775267122969", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cffb260138eff6ba20037f3017b24cbe4b0fae03/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cffb260138eff6ba20037f3017b24cbe4b0fae03/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=cffb260138eff6ba20037f3017b24cbe4b0fae03", "patch": "@@ -6251,7 +6251,6 @@ tsubst (t, args, complain, in_decl)\n \n     case ERROR_MARK:\n     case IDENTIFIER_NODE:\n-    case OP_IDENTIFIER:\n     case VOID_TYPE:\n     case REAL_TYPE:\n     case COMPLEX_TYPE:"}, {"sha": "c0550f7123ef576bd5c18aeeaf45a27dce7c8223", "filename": "gcc/print-tree.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cffb260138eff6ba20037f3017b24cbe4b0fae03/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cffb260138eff6ba20037f3017b24cbe4b0fae03/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=cffb260138eff6ba20037f3017b24cbe4b0fae03", "patch": "@@ -740,11 +740,6 @@ print_node (file, prefix, node, indent)\n \t      }\n \t  break;\n \n-\tcase OP_IDENTIFIER:\n-\t  print_node (file, \"op1\", TREE_PURPOSE (node), indent + 4);\n-\t  print_node (file, \"op2\", TREE_VALUE (node), indent + 4);\n-\t  break;\n-\n \tdefault:\n \t  if (TREE_CODE_CLASS (TREE_CODE (node)) == 'x')\n \t    lang_print_xnode (file, node, indent);"}, {"sha": "d3db28978c52bcbf122da3896488ed7c97354b50", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cffb260138eff6ba20037f3017b24cbe4b0fae03/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cffb260138eff6ba20037f3017b24cbe4b0fae03/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=cffb260138eff6ba20037f3017b24cbe4b0fae03", "patch": "@@ -99,7 +99,6 @@ typedef enum\n   e_kind,\n   c_kind,\n   id_kind,\n-  op_id_kind,\n   perm_list_kind,\n   temp_list_kind,\n   vec_kind,\n@@ -122,7 +121,6 @@ static const char * const tree_node_kind_names[] = {\n   \"exprs\",\n   \"constants\",\n   \"identifiers\",\n-  \"op_identifiers\",\n   \"perm_tree_lists\",\n   \"temp_tree_lists\",\n   \"vecs\",\n@@ -380,8 +378,6 @@ make_node (code)\n     case 'x':  /* something random, like an identifier.  */\n       if (code == IDENTIFIER_NODE)\n \tkind = id_kind;\n-      else if (code == OP_IDENTIFIER)\n-\tkind = op_id_kind;\n       else if (code == TREE_VEC)\n \tkind = vec_kind;\n       else\n@@ -2526,20 +2522,6 @@ build_nt VPARAMS ((enum tree_code code, ...))\n   VA_CLOSE (p);\n   return t;\n }\n-\n-#if 0\n-/* Commented out because this wants to be done very\n-   differently.  See cp-lex.c.  */\n-tree\n-build_op_identifier (op1, op2)\n-     tree op1, op2;\n-{\n-  register tree t = make_node (OP_IDENTIFIER);\n-  TREE_PURPOSE (t) = op1;\n-  TREE_VALUE (t) = op2;\n-  return t;\n-}\n-#endif\n \f\n /* Create a DECL_... node of code CODE, name NAME and data type TYPE.\n    We do NOT enter this node in any sort of symbol table."}, {"sha": "cd23dd32740549cf2665d10cd8c2e26ed1756a67", "filename": "gcc/tree.def", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cffb260138eff6ba20037f3017b24cbe4b0fae03/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cffb260138eff6ba20037f3017b24cbe4b0fae03/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=cffb260138eff6ba20037f3017b24cbe4b0fae03", "patch": "@@ -51,11 +51,6 @@ DEFTREECODE (ERROR_MARK, \"error_mark\", 'x', 0)\n    Use `get_identifier' to get it (or create it, the first time).  */\n DEFTREECODE (IDENTIFIER_NODE, \"identifier_node\", 'x', -1)\n \n-/* Used to hold information to identify an operator (or combination\n-   of two operators) considered as a `noun' rather than a `verb'.\n-   The first operand is encoded in the TREE_TYPE field.  */\n-DEFTREECODE (OP_IDENTIFIER, \"op_identifier\", 'x', 2)\n-\n /* Has the TREE_VALUE and TREE_PURPOSE fields.  */\n /* These nodes are made into lists by chaining through the\n    TREE_CHAIN field.  The elements of the list live in the"}]}