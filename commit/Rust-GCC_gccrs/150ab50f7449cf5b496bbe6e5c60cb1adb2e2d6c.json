{"sha": "150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c", "node_id": "C_kwDOANBUbNoAKDE1MGFiNTBmNzQ0OWNmNWI0OTZiYmU2ZTVjNjBjYjFhZGIyZTJkNmM", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-03-31T00:16:28Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-03-31T00:16:28Z"}, "message": "Daily bump.", "tree": {"sha": "add0dec7ea42bd80683d3100c8db9cea63111b00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/add0dec7ea42bd80683d3100c8db9cea63111b00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c/comments", "author": null, "committer": null, "parents": [{"sha": "b4e4b35f4ebe561826489bed971324efc99c5423", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4e4b35f4ebe561826489bed971324efc99c5423", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4e4b35f4ebe561826489bed971324efc99c5423"}], "stats": {"total": 176, "additions": 175, "deletions": 1}, "files": [{"sha": "63f0ff626f49da3e81475465ef42fd7fa0c988ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c", "patch": "@@ -1,3 +1,50 @@\n+2022-03-30  Bill Schmidt  <wschmidt@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000-builtins.def (NEG_V16QI): Move to [altivec]\n+\tstanza.\n+\t(NEG_V4SF): Likewise.\n+\t(NEG_V4SI): Likewise.\n+\t(NEG_V8HI): Likewise.\n+\t(NEG_V2DF): Move to [vsx] stanza.\n+\t(NEG_V2DI): Likewise.\n+\n+2022-03-30  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\tPR middle-end/105032\n+\t* lra-assigns.cc (find_reload_regno_insns): Modify loop condition.\n+\n+2022-03-30  Tom de Vries  <tdevries@suse.de>\n+\t    Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* doc/invoke.texi (march): Document __PTX_SM__.\n+\t (mptx): Document __PTX_ISA_VERSION_MAJOR__ and\n+\t __PTX_ISA_VERSION_MINOR__.\n+\n+2022-03-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/105093\n+\t* ubsan.cc (instrument_object_size): If t is equal to inner and\n+\tis a decl other than global var, punt.  When emitting call to\n+\tUBSAN_OBJECT_SIZE ifn, make sure base is addressable.\n+\n+2022-03-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/105094\n+\t* gimple-ssa-store-merging.cc (mem_valid_for_store_merging): Punt if\n+\tbitsize <= 0 rather than just == 0.\n+\n+2022-03-30  Tom de Vries  <tdevries@suse.de>\n+\n+\t* doc/invoke.texi (misa, mptx): Update.\n+\t(march, march-map): Add.\n+\n+2022-03-30  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* opt-functions.awk (n_args): New function.\n+\t(lang_enabled_by): Merge function into...\n+\t* optc-gen.awk <END>: ... sole user here.\n+\tImprove diagnostics.\n+\n 2022-03-29  Marek Polacek  <polacek@redhat.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "30d76ef0a8040463ac9a95e8592ed0ea14bc0963", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c", "patch": "@@ -1 +1 @@\n-20220330\n+20220331"}, {"sha": "5ca3182088b4705974e8a9af0a42f4286580ac51", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c", "patch": "@@ -1,3 +1,23 @@\n+2022-03-30  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/101030\n+\t* c-warn.cc (conversion_warning) <case COND_EXPR>: Don't call\n+\tconversion_warning when OP1 is null.\n+\n+2022-03-30  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* c.opt (Wc++11-extensions, Wc++14-extensions, Wc++17-extensions)\n+\t(Wc++20-extensions, Wc++23-extensions): Remove 'LangEnabledBy'\n+\toption properties.\n+\n+2022-03-30  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* c.opt (Wuse-after-free): Remove.\n+\n+2022-03-30  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* c.opt (Warray-bounds): Remove.\n+\n 2022-03-26  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* c.opt: Properly quote comment."}, {"sha": "766e76c06fde55bc0a976c889c724cf9ccfc94c2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c", "patch": "@@ -1,3 +1,29 @@\n+2022-03-30  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/100474\n+\t* constraint.cc (diagnose_trait_expr): Handle all remaining\n+\ttraits appropriately.  Remove default case.\n+\n+2022-03-30  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/93280\n+\tPR c++/104583\n+\t* init.cc (get_nsdmi): Set TARGET_EXPR_DIRECT_INIT_P to in_ctor.\n+\n+2022-03-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/105092\n+\t* pt.cc (tsubst_omp_clause_decl): When handling iterators, set\n+\tDECL_CONTEXT of the iterator var to current_function_decl and\n+\tcall pushdecl.\n+\n+2022-03-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/105061\n+\t* parser.cc (cp_parser_template_introduction): If member_p, temporarily\n+\tclear parser->colon_corrects_to_scope_p around tentative parsing of\n+\tnested name specifier.\n+\n 2022-03-28  Jason Merrill  <jason@redhat.com>\n \n \t* pt.cc (determine_specialization): Add comment."}, {"sha": "3f5ccf6ea6443d32d6845d40abd55fff8b9fecf3", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c", "patch": "@@ -1,3 +1,8 @@\n+2022-03-30  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/100892\n+\t* check.cc (gfc_check_associated): Avoid NULL pointer dereference.\n+\n 2022-03-29  Harald Anlauf  <anlauf@gmx.de>\n \t    Steven G. Kargl  <kargl@gcc.gnu.org>\n "}, {"sha": "fcc463d039dd2fd331de66030e03b82b15efbcbd", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c", "patch": "@@ -1,3 +1,7 @@\n+2022-03-30  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* hr.po: Update.\n+\n 2022-03-29  Joseph Myers  <joseph@codesourcery.com>\n \n \t* hr.po: Update."}, {"sha": "b6721c24e823edce1e9e4e93d8504d6b608213ab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=150ab50f7449cf5b496bbe6e5c60cb1adb2e2d6c", "patch": "@@ -1,3 +1,75 @@\n+2022-03-30  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/100892\n+\t* gfortran.dg/associated_target_8.f90: New test.\n+\n+2022-03-30  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\tPR middle-end/105032\n+\t* gcc.target/i386/pr105032.c: New.\n+\n+2022-03-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tRevert:\n+\t2022-03-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/80334\n+\tPR target/102772\n+\t* g++.dg/torture/pr80334.C: Change from dg-do run to dg-do compile.\n+\n+2022-03-30  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/101030\n+\t* g++.dg/ext/cond5.C: New test.\n+\n+2022-03-30  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/100474\n+\t* g++.dg/cpp2a/concepts-traits3.C: New test.\n+\n+2022-03-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/80334\n+\tPR target/102772\n+\t* g++.dg/torture/pr80334.C: Change from dg-do run to dg-do compile.\n+\n+2022-03-30  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/93280\n+\tPR c++/104583\n+\t* g++.dg/cpp0x/nsdmi-list7.C: New test.\n+\t* g++.dg/cpp0x/nsdmi-list8.C: New test.\n+\n+2022-03-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/105093\n+\t* g++.dg/ubsan/pr105093.C: New test.\n+\n+2022-03-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/105094\n+\t* gcc.dg/pr105094.c: New test.\n+\n+2022-03-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/105092\n+\t* g++.dg/gomp/pr105092.C: New test.\n+\n+2022-03-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/105061\n+\t* g++.dg/concepts/pr105061.C: New test.\n+\n+2022-03-30  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* gcc.dg/analyzer/strndup-1.c: Add *-*-vxworks* to no-strndup\n+\tin libc.\n+\n+2022-03-30  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* gcc.dg/weak/typeof-2.c: Add arm*-*-* to targets that may\n+\tplace the call target in a constant pool.\n+\n 2022-03-29  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR testsuite/105085"}]}