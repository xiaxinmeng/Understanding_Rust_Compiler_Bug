{"sha": "0f85a9421349ff80329f7a6db4a70eff58bf49bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY4NWE5NDIxMzQ5ZmY4MDMyOWY3YTZkYjRhNzBlZmY1OGJmNDliYw==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-09-09T15:30:07Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-09-09T15:30:07Z"}, "message": "Add HIR lowering for Trait Bounds\n\nSuper trait bounds need to be lowered to HIR.", "tree": {"sha": "bc0f64ed7eb4c784302c1c74af0303abfdfe585a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc0f64ed7eb4c784302c1c74af0303abfdfe585a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f85a9421349ff80329f7a6db4a70eff58bf49bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f85a9421349ff80329f7a6db4a70eff58bf49bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f85a9421349ff80329f7a6db4a70eff58bf49bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f85a9421349ff80329f7a6db4a70eff58bf49bc/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fefc0b3ffbe059a62e035810f00c6ad55438761b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fefc0b3ffbe059a62e035810f00c6ad55438761b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fefc0b3ffbe059a62e035810f00c6ad55438761b"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "d5c56c08d2a2a9a88c348174926692d0cbcfc574", "filename": "gcc/rust/hir/rust-ast-lower-item.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f85a9421349ff80329f7a6db4a70eff58bf49bc/gcc%2Frust%2Fhir%2Frust-ast-lower-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f85a9421349ff80329f7a6db4a70eff58bf49bc/gcc%2Frust%2Fhir%2Frust-ast-lower-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-item.h?ref=0f85a9421349ff80329f7a6db4a70eff58bf49bc", "patch": "@@ -579,6 +579,15 @@ class ASTLoweringItem : public ASTLoweringBase\n       }\n \n     std::vector<std::unique_ptr<HIR::TypeParamBound>> type_param_bounds;\n+    if (trait.has_type_param_bounds ())\n+      {\n+\tfor (auto &bound : trait.get_type_param_bounds ())\n+\t  {\n+\t    HIR::TypeParamBound *b = lower_bound (bound.get ());\n+\t    type_param_bounds.push_back (\n+\t      std::unique_ptr<HIR::TypeParamBound> (b));\n+\t  }\n+      }\n \n     std::vector<std::unique_ptr<HIR::TraitItem>> trait_items;\n     std::vector<HirId> trait_item_ids;"}]}