{"sha": "c28b4e4097e22cfc1cd8ff4ec942a9fbc62976c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI4YjRlNDA5N2UyMmNmYzFjZDhmZjRlYzk0MmE5ZmJjNjI5NzZjOQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@redhat.com", "date": "2002-12-24T15:49:24Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2002-12-24T15:49:24Z"}, "message": "Fix v850 PlumHall testsuite failure.\n\n\t* alias.c (record_set): Handle multi-reg hard registers.\n\nFrom-SVN: r60474", "tree": {"sha": "8a22599996bc1b39e0ceed17e8b3fae0bc72b030", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a22599996bc1b39e0ceed17e8b3fae0bc72b030"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c28b4e4097e22cfc1cd8ff4ec942a9fbc62976c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c28b4e4097e22cfc1cd8ff4ec942a9fbc62976c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c28b4e4097e22cfc1cd8ff4ec942a9fbc62976c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c28b4e4097e22cfc1cd8ff4ec942a9fbc62976c9/comments", "author": null, "committer": null, "parents": [{"sha": "14b493d64dd504f79cd702bba4b8bae678740af9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14b493d64dd504f79cd702bba4b8bae678740af9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14b493d64dd504f79cd702bba4b8bae678740af9"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "e23c31a95b260aa63a5fdfdbe9af0a559abb5097", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c28b4e4097e22cfc1cd8ff4ec942a9fbc62976c9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c28b4e4097e22cfc1cd8ff4ec942a9fbc62976c9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c28b4e4097e22cfc1cd8ff4ec942a9fbc62976c9", "patch": "@@ -1,3 +1,7 @@\n+2002-12-24  Jim Wilson  <wilson@redhat.com>\n+\n+\t* alias.c (record_set): Handle multi-reg hard registers.\n+\n 2002-12-24  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* regmove.c: Fix comment typos."}, {"sha": "fee64b1e50df27625bff57c45ef763063febee6c", "filename": "gcc/alias.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c28b4e4097e22cfc1cd8ff4ec942a9fbc62976c9/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c28b4e4097e22cfc1cd8ff4ec942a9fbc62976c9/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=c28b4e4097e22cfc1cd8ff4ec942a9fbc62976c9", "patch": "@@ -932,6 +932,7 @@ record_set (dest, set, data)\n {\n   unsigned regno;\n   rtx src;\n+  int n;\n \n   if (GET_CODE (dest) != REG)\n     return;\n@@ -941,6 +942,22 @@ record_set (dest, set, data)\n   if (regno >= reg_base_value_size)\n     abort ();\n \n+  /* If this spans multiple hard registers, then we must indicate that every\n+     register has an unusable value.  */\n+  if (regno < FIRST_PSEUDO_REGISTER)\n+    n = HARD_REGNO_NREGS (regno, GET_MODE (dest));\n+  else\n+    n = 1;\n+  if (n != 1)\n+    {\n+      while (--n >= 0)\n+\t{\n+\t  reg_seen[regno + n] = 1;\n+\t  new_reg_base_value[regno + n] = 0;\n+\t}\n+      return;\n+    }\n+\n   if (set)\n     {\n       /* A CLOBBER wipes out any old value but does not prevent a previously"}]}