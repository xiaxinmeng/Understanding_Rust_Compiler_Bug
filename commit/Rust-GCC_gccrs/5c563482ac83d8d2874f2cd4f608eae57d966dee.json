{"sha": "5c563482ac83d8d2874f2cd4f608eae57d966dee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM1NjM0ODJhYzgzZDhkMjg3NGYyY2Q0ZjYwOGVhZTU3ZDk2NmRlZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-08-17T18:40:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-08-17T18:40:57Z"}, "message": "* except.c (check_noexcept_r): Assert that fn is POINTER_TYPE_P.\n\nFrom-SVN: r226947", "tree": {"sha": "af4a10d8886279611a97019b105aff591fe9ff51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af4a10d8886279611a97019b105aff591fe9ff51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c563482ac83d8d2874f2cd4f608eae57d966dee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c563482ac83d8d2874f2cd4f608eae57d966dee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c563482ac83d8d2874f2cd4f608eae57d966dee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c563482ac83d8d2874f2cd4f608eae57d966dee/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4e1492b7cdd05c8bf48ffc569ca8de86cb8e9237", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e1492b7cdd05c8bf48ffc569ca8de86cb8e9237", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e1492b7cdd05c8bf48ffc569ca8de86cb8e9237"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "595781cdb3ecf5bbb40e760c7793d88ee757ebfa", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c563482ac83d8d2874f2cd4f608eae57d966dee/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c563482ac83d8d2874f2cd4f608eae57d966dee/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5c563482ac83d8d2874f2cd4f608eae57d966dee", "patch": "@@ -1,3 +1,7 @@\n+2015-08-17  Jason Merrill  <jason@redhat.com>\n+\n+\t* except.c (check_noexcept_r): Assert that fn is POINTER_TYPE_P.\n+\n 2015-08-14  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/65974"}, {"sha": "4f06f52d1daf73e743d6b12ccb4e0f210bd87ba3", "filename": "gcc/cp/except.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c563482ac83d8d2874f2cd4f608eae57d966dee/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c563482ac83d8d2874f2cd4f608eae57d966dee/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=5c563482ac83d8d2874f2cd4f608eae57d966dee", "patch": "@@ -1155,7 +1155,9 @@ check_noexcept_r (tree *tp, int * /*walk_subtrees*/, void * /*data*/)\n          We could use TREE_NOTHROW (t) for !TREE_PUBLIC fns, though... */\n       tree fn = (code == AGGR_INIT_EXPR\n \t\t ? AGGR_INIT_EXPR_FN (t) : CALL_EXPR_FN (t));\n-      tree type = TREE_TYPE (TREE_TYPE (fn));\n+      tree type = TREE_TYPE (fn);\n+      gcc_assert (POINTER_TYPE_P (type));\n+      type = TREE_TYPE (type);\n \n       STRIP_NOPS (fn);\n       if (TREE_CODE (fn) == ADDR_EXPR)"}]}