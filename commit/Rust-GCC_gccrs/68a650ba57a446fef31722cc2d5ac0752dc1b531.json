{"sha": "68a650ba57a446fef31722cc2d5ac0752dc1b531", "node_id": "C_kwDOANBUbNoAKDY4YTY1MGJhNTdhNDQ2ZmVmMzE3MjJjYzJkNWFjMDc1MmRjMWI1MzE", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2022-01-05T13:22:10Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2022-01-14T10:24:52Z"}, "message": "arc: Add DWARF2 alternate CFA column.\n\nAdd DWARF 2 CFA column which tracks the return address from a signal\nhandler context.  This value must not correspond to a hard register\nand must be out of the range of DWARF_FRAME_REGNUM().\n\ngcc/\n\t* config/arc/arc.h (DWARF_FRAME_REGNUM): Update definition.\n\t(DWARF_FRAME_RETURN_COLUMN): Use RETURN_ADDR_REGNUM macro.\n\t(INCOMING_RETURN_ADDR_RTX): Likewise.\n\t(DWARF_ALT_FRAME_RETURN_COLUMN): Define.\n\ngcc/testsuite/\n\t* gcc.target/arc/cancel-1.c: New file.\n\nlibgcc/\n\t* config/arc/linux-unwind.h (arc_fallback_frame_state): Use\n\tDWARF_ALT_FRAME_RETURN_COLUMN macro.\n\nSigned-off-by: Claudiu Zissulescu <claziss@synopsys.com>", "tree": {"sha": "3ead14d9a44f620e662dd74d1d01f8d9d24a5053", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ead14d9a44f620e662dd74d1d01f8d9d24a5053"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68a650ba57a446fef31722cc2d5ac0752dc1b531", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a650ba57a446fef31722cc2d5ac0752dc1b531", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68a650ba57a446fef31722cc2d5ac0752dc1b531", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a650ba57a446fef31722cc2d5ac0752dc1b531/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3989a7b1069ef9ed56911d96e1ad153e506aabb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3989a7b1069ef9ed56911d96e1ad153e506aabb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3989a7b1069ef9ed56911d96e1ad153e506aabb"}], "stats": {"total": 51, "additions": 44, "deletions": 7}, "files": [{"sha": "539a1662084777a3ae5ebdce5f79a235e4f37504", "filename": "gcc/config/arc/arc.h", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a650ba57a446fef31722cc2d5ac0752dc1b531/gcc%2Fconfig%2Farc%2Farc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a650ba57a446fef31722cc2d5ac0752dc1b531/gcc%2Fconfig%2Farc%2Farc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.h?ref=68a650ba57a446fef31722cc2d5ac0752dc1b531", "patch": "@@ -1356,7 +1356,7 @@ do { \\\n    : (REGNO))\n \n /* Use gcc hard register numbering for eh_frame.  */\n-#define DWARF_FRAME_REGNUM(REG) (REG)\n+#define DWARF_FRAME_REGNUM(REG) ((REG) < 144 ? REG : INVALID_REGNUM)\n \n /* Map register numbers held in the call frame info that gcc has\n    collected using DWARF_FRAME_REGNUM to those that should be output\n@@ -1370,9 +1370,14 @@ do { \\\n       : 57 + !!TARGET_MULMAC_32BY16_SET) /* MLO */\t\t\\\n    : (REGNO))\n \n-#define DWARF_FRAME_RETURN_COLUMN \tDWARF_FRAME_REGNUM (31)\n+/* The DWARF 2 CFA column which tracks the return address.  */\n+#define DWARF_FRAME_RETURN_COLUMN RETURN_ADDR_REGNUM\n+#define INCOMING_RETURN_ADDR_RTX gen_rtx_REG (Pmode, RETURN_ADDR_REGNUM)\n \n-#define INCOMING_RETURN_ADDR_RTX  gen_rtx_REG (Pmode, 31)\n+/* The DWARF 2 CFA column which tracks the return address from a signal handler\n+   context.  This value must not correspond to a hard register and must be out\n+   of the range of DWARF_FRAME_REGNUM().  */\n+#define DWARF_ALT_FRAME_RETURN_COLUMN 144\n \n /* Frame info.  */\n "}, {"sha": "e050c538157dcf5f9ac81e4fc08f15091c21fe19", "filename": "gcc/testsuite/gcc.target/arc/cancel-1.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a650ba57a446fef31722cc2d5ac0752dc1b531/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcancel-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a650ba57a446fef31722cc2d5ac0752dc1b531/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcancel-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fcancel-1.c?ref=68a650ba57a446fef31722cc2d5ac0752dc1b531", "patch": "@@ -0,0 +1,31 @@\n+/* Test for cleanups with pthread_cancel.  Any issue with libgcc's unwinder\n+   will cause this test to spin in pthread_join.  */\n+\n+/* { dg-do run } */\n+/* { dg-require-effective-target pthread } */\n+/* { dg-options \"-pthread\" } */\n+\n+#include <pthread.h>\n+#include <unistd.h>\n+#include <stdio.h>\n+\n+void *thread_loop (void *)\n+{\n+  while (1)\n+    {\n+      printf(\"worker: loop\\n\");\n+      sleep(1);\n+    }\n+}\n+\n+int main ()\n+{\n+  pthread_t thread;\n+\n+  pthread_create (&thread, 0, thread_loop, 0);\n+  sleep(5);\n+  pthread_cancel (thread);\n+  pthread_join (thread, 0);\n+\n+  return 0;\n+}"}, {"sha": "be42a3163b244abd333e0d353b2640c8dccb1de5", "filename": "libgcc/config/arc/linux-unwind.h", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a650ba57a446fef31722cc2d5ac0752dc1b531/libgcc%2Fconfig%2Farc%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a650ba57a446fef31722cc2d5ac0752dc1b531/libgcc%2Fconfig%2Farc%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Flinux-unwind.h?ref=68a650ba57a446fef31722cc2d5ac0752dc1b531", "patch": "@@ -120,10 +120,11 @@ arc_fallback_frame_state (struct _Unwind_Context *context,\n \t= ((_Unwind_Ptr) &(regs[i])) - new_cfa;\n     }\n \n-  fs->regs.reg[31].how = REG_SAVED_VAL_OFFSET;\n-  fs->regs.reg[31].loc.offset = ((_Unwind_Ptr) (regs[ret])) - new_cfa;\n-\n-  fs->retaddr_column = 31;\n+  fs->signal_frame = 1;\n+  fs->retaddr_column = __LIBGCC_DWARF_ALT_FRAME_RETURN_COLUMN__;\n+  fs->regs.reg[fs->retaddr_column].how = REG_SAVED_VAL_OFFSET;\n+  fs->regs.reg[fs->retaddr_column].loc.offset =\n+    ((_Unwind_Ptr) (regs[ret])) - new_cfa;\n \n   return _URC_NO_REASON;\n }"}]}