{"sha": "c49609be4fd8751e7295610220889aa20a227dbf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ5NjA5YmU0ZmQ4NzUxZTcyOTU2MTAyMjA4ODlhYTIwYTIyN2RiZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-08-29T10:30:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-08-29T10:30:48Z"}, "message": "re PR bootstrap/91580 (i686-{darwin, linux} bootstrap fails after r274926)\n\n2019-08-29  Richard Biener  <rguenther@suse.de>\n\n\tPR bootstrap/91580\n\t* config/i386/i386-features.c (general_scalar_chain::convert_insn):\n\tDo not emit scalar copies for debug-insns, instead replace\n\ttheir uses with the reg copy used in the chain or reset them\n\tif there is a reaching definition outside of the chain as well.\n\nFrom-SVN: r275030", "tree": {"sha": "f95e475bb2e99238f8d04abe8c7048ee4bd658c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f95e475bb2e99238f8d04abe8c7048ee4bd658c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c49609be4fd8751e7295610220889aa20a227dbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c49609be4fd8751e7295610220889aa20a227dbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c49609be4fd8751e7295610220889aa20a227dbf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c49609be4fd8751e7295610220889aa20a227dbf/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ae32cd0384c2dc0a0f07e1929f7d82c7330aec47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae32cd0384c2dc0a0f07e1929f7d82c7330aec47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae32cd0384c2dc0a0f07e1929f7d82c7330aec47"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "f94dae24c4d0eb92d576906213d88b05b7da76e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c49609be4fd8751e7295610220889aa20a227dbf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c49609be4fd8751e7295610220889aa20a227dbf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c49609be4fd8751e7295610220889aa20a227dbf", "patch": "@@ -1,3 +1,11 @@\n+2019-08-29  Richard Biener  <rguenther@suse.de>\n+\n+\tPR bootstrap/91580\n+\t* config/i386/i386-features.c (general_scalar_chain::convert_insn):\n+\tDo not emit scalar copies for debug-insns, instead replace\n+\ttheir uses with the reg copy used in the chain or reset them\n+\tif there is a reaching definition outside of the chain as well.\n+\n 2019-08-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/91560"}, {"sha": "f3c0eb67ec72e0cff3ab5710463847ebb1c1d740", "filename": "gcc/config/i386/i386-features.c", "status": "modified", "additions": 37, "deletions": 3, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c49609be4fd8751e7295610220889aa20a227dbf/gcc%2Fconfig%2Fi386%2Fi386-features.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c49609be4fd8751e7295610220889aa20a227dbf/gcc%2Fconfig%2Fi386%2Fi386-features.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-features.c?ref=c49609be4fd8751e7295610220889aa20a227dbf", "patch": "@@ -880,18 +880,52 @@ general_scalar_chain::convert_op (rtx *op, rtx_insn *insn)\n void\n general_scalar_chain::convert_insn (rtx_insn *insn)\n {\n-  /* Generate copies for out-of-chain uses of defs.  */\n+  /* Generate copies for out-of-chain uses of defs and adjust debug uses.  */\n   for (df_ref ref = DF_INSN_DEFS (insn); ref; ref = DF_REF_NEXT_LOC (ref))\n     if (bitmap_bit_p (defs_conv, DF_REF_REGNO (ref)))\n       {\n \tdf_link *use;\n \tfor (use = DF_REF_CHAIN (ref); use; use = use->next)\n-\t  if (DF_REF_REG_MEM_P (use->ref)\n-\t      || !bitmap_bit_p (insns, DF_REF_INSN_UID (use->ref)))\n+\t  if (NONDEBUG_INSN_P (DF_REF_INSN (use->ref))\n+\t      && (DF_REF_REG_MEM_P (use->ref)\n+\t\t  || !bitmap_bit_p (insns, DF_REF_INSN_UID (use->ref))))\n \t    break;\n \tif (use)\n \t  convert_reg (insn, DF_REF_REG (ref),\n \t\t       *defs_map.get (regno_reg_rtx [DF_REF_REGNO (ref)]));\n+\telse\n+\t  {\n+\t    /* If we generated a scalar copy we can leave debug-insns\n+\t       as-is, if not, we have to adjust them.  */\n+\t    auto_vec<rtx_insn *, 5> to_reset_debug_insns;\n+\t    for (use = DF_REF_CHAIN (ref); use; use = use->next)\n+\t      if (DEBUG_INSN_P (DF_REF_INSN (use->ref)))\n+\t\t{\n+\t\t  rtx_insn *debug_insn = DF_REF_INSN (use->ref);\n+\t\t  /* If there's a reaching definition outside of the\n+\t\t     chain we have to reset.  */\n+\t\t  df_link *def;\n+\t\t  for (def = DF_REF_CHAIN (use->ref); def; def = def->next)\n+\t\t    if (!bitmap_bit_p (insns, DF_REF_INSN_UID (def->ref)))\n+\t\t      break;\n+\t\t  if (def)\n+\t\t    to_reset_debug_insns.safe_push (debug_insn);\n+\t\t  else\n+\t\t    {\n+\t\t      *DF_REF_REAL_LOC (use->ref)\n+\t\t\t= *defs_map.get (regno_reg_rtx [DF_REF_REGNO (ref)]);\n+\t\t      df_insn_rescan (debug_insn);\n+\t\t    }\n+\t\t}\n+\t    /* Have to do the reset outside of the DF_CHAIN walk to not\n+\t       disrupt it.  */\n+\t    while (!to_reset_debug_insns.is_empty ())\n+\t      {\n+\t\trtx_insn *debug_insn = to_reset_debug_insns.pop ();\n+\t\tINSN_VAR_LOCATION_LOC (debug_insn) = gen_rtx_UNKNOWN_VAR_LOC ();\n+\t\tdf_insn_rescan_debug_internal (debug_insn);\n+\t      }\n+\t  }\n       }\n \n   /* Replace uses in this insn with the defs we use in the chain.  */"}]}