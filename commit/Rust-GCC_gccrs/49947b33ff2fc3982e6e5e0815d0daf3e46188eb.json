{"sha": "49947b33ff2fc3982e6e5e0815d0daf3e46188eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk5NDdiMzNmZjJmYzM5ODJlNmU1ZTA4MTVkMGRhZjNlNDYxODhlYg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-01-18T03:37:52Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-01-18T03:37:52Z"}, "message": "syscall, golang_org/x/net/lif: fixes for gccgo on Solaris\n    \n    Reviewed-on: https://go-review.googlesource.com/35390\n\nFrom-SVN: r244563", "tree": {"sha": "6eee4082ac9050dde854deba503306e29e078b66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6eee4082ac9050dde854deba503306e29e078b66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49947b33ff2fc3982e6e5e0815d0daf3e46188eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49947b33ff2fc3982e6e5e0815d0daf3e46188eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49947b33ff2fc3982e6e5e0815d0daf3e46188eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49947b33ff2fc3982e6e5e0815d0daf3e46188eb/comments", "author": null, "committer": null, "parents": [{"sha": "4cc0208ac8f44e826c983ec89c6ffbc4f4facc7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cc0208ac8f44e826c983ec89c6ffbc4f4facc7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cc0208ac8f44e826c983ec89c6ffbc4f4facc7a"}], "stats": {"total": 51, "additions": 26, "deletions": 25}, "files": [{"sha": "f9897529b735cfd7379c8ca655a5629f36ad5a8d", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49947b33ff2fc3982e6e5e0815d0daf3e46188eb/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49947b33ff2fc3982e6e5e0815d0daf3e46188eb/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=49947b33ff2fc3982e6e5e0815d0daf3e46188eb", "patch": "@@ -1,4 +1,4 @@\n-223cba75b947afc1ee5a13a60c15c66f6ff355c1\n+2b3d389f961b8461b3fdf42318a628f68b56f8b1\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "6a77a8f5d800cfa40ed609e95b261a0061bf271e", "filename": "libgo/go/golang_org/x/net/lif/link.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49947b33ff2fc3982e6e5e0815d0daf3e46188eb/libgo%2Fgo%2Fgolang_org%2Fx%2Fnet%2Flif%2Flink.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49947b33ff2fc3982e6e5e0815d0daf3e46188eb/libgo%2Fgo%2Fgolang_org%2Fx%2Fnet%2Flif%2Flink.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgolang_org%2Fx%2Fnet%2Flif%2Flink.go?ref=49947b33ff2fc3982e6e5e0815d0daf3e46188eb", "patch": "@@ -84,7 +84,7 @@ func links(eps []endpoint, name string) ([]Link, error) {\n \t\tb := make([]byte, lifn.Count*sizeofLifreq)\n \t\tlifc.Family = uint16(ep.af)\n \t\tlifc.Len = lifn.Count * sizeofLifreq\n-\t\tlittleEndian.PutUint64(lifc.Lifcu[:], uint64(uintptr(unsafe.Pointer(&b[0]))))\n+\t\tlifc.Lifcu = unsafe.Pointer(&b[0])\n \t\tioc = int64(sysSIOCGLIFCONF)\n \t\tif err := ioctl(ep.s, uintptr(ioc), unsafe.Pointer(&lifc)); err != nil {\n \t\t\tcontinue"}, {"sha": "ea7541456bd7bae3947d7624cc0742e829948d45", "filename": "libgo/go/golang_org/x/net/lif/syscall.go", "status": "modified", "additions": 4, "deletions": 15, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49947b33ff2fc3982e6e5e0815d0daf3e46188eb/libgo%2Fgo%2Fgolang_org%2Fx%2Fnet%2Flif%2Fsyscall.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49947b33ff2fc3982e6e5e0815d0daf3e46188eb/libgo%2Fgo%2Fgolang_org%2Fx%2Fnet%2Flif%2Fsyscall.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgolang_org%2Fx%2Fnet%2Flif%2Fsyscall.go?ref=49947b33ff2fc3982e6e5e0815d0daf3e46188eb", "patch": "@@ -11,23 +11,12 @@ import (\n \t\"unsafe\"\n )\n \n-//go:cgo_import_dynamic libc_ioctl ioctl \"libc.so\"\n-\n-//go:linkname procIoctl libc_ioctl\n-\n-var procIoctl uintptr\n-\n-func sysvicall6(trap, nargs, a1, a2, a3, a4, a5, a6 uintptr) (uintptr, uintptr, syscall.Errno)\n-\n-// TODO: replace with runtime.KeepAlive when available\n-//go:noescape\n-func keepAlive(p unsafe.Pointer)\n+//extern __go_ioctl_ptr\n+func libc_ioctl(int32, int32, unsafe.Pointer) int32\n \n func ioctl(s, ioc uintptr, arg unsafe.Pointer) error {\n-\t_, _, errno := sysvicall6(uintptr(unsafe.Pointer(&procIoctl)), 3, s, ioc, uintptr(arg), 0, 0, 0)\n-\tkeepAlive(arg)\n-\tif errno != 0 {\n-\t\treturn error(errno)\n+\tif libc_ioctl(int32(s), int32(ioc), arg) < 0 {\n+\t\treturn syscall.GetErrno()\n \t}\n \treturn nil\n }"}, {"sha": "6452dd8ebb0dc7a0ba8ae0a6b64db17033ab204a", "filename": "libgo/go/golang_org/x/net/lif/zsys_solaris.go", "status": "renamed", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49947b33ff2fc3982e6e5e0815d0daf3e46188eb/libgo%2Fgo%2Fgolang_org%2Fx%2Fnet%2Flif%2Fzsys_solaris.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49947b33ff2fc3982e6e5e0815d0daf3e46188eb/libgo%2Fgo%2Fgolang_org%2Fx%2Fnet%2Flif%2Fzsys_solaris.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgolang_org%2Fx%2Fnet%2Flif%2Fzsys_solaris.go?ref=49947b33ff2fc3982e6e5e0815d0daf3e46188eb", "patch": "@@ -3,6 +3,8 @@\n \n package lif\n \n+import \"unsafe\"\n+\n const (\n \tsysAF_UNSPEC = 0x0\n \tsysAF_INET   = 0x2\n@@ -59,15 +61,11 @@ const (\n )\n \n const (\n-\tsizeofLifnum       = 0xc\n \tsizeofLifreq       = 0x178\n-\tsizeofLifconf      = 0x18\n-\tsizeofLifIfinfoReq = 0x10\n )\n \n type sysLifnum struct {\n \tFamily    uint16\n-\tPad_cgo_0 [2]byte\n \tFlags     int32\n \tCount     int32\n }\n@@ -81,16 +79,13 @@ type lifreq struct {\n \n type lifconf struct {\n \tFamily    uint16\n-\tPad_cgo_0 [2]byte\n \tFlags     int32\n \tLen       int32\n-\tPad_cgo_1 [4]byte\n-\tLifcu     [8]byte\n+\tLifcu     unsafe.Pointer\n }\n \n type lifIfinfoReq struct {\n \tMaxhops      uint8\n-\tPad_cgo_0    [3]byte\n \tReachtime    uint32\n \tReachretrans uint32\n \tMaxmtu       uint32", "previous_filename": "libgo/go/golang_org/x/net/lif/zsys_solaris_amd64.go"}, {"sha": "673ba8223fc8fef58a00a7fe47d0af6c4be5002a", "filename": "libgo/go/syscall/syscall_solaris.go", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49947b33ff2fc3982e6e5e0815d0daf3e46188eb/libgo%2Fgo%2Fsyscall%2Fsyscall_solaris.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49947b33ff2fc3982e6e5e0815d0daf3e46188eb/libgo%2Fgo%2Fsyscall%2Fsyscall_solaris.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fsyscall_solaris.go?ref=49947b33ff2fc3982e6e5e0815d0daf3e46188eb", "patch": "@@ -29,3 +29,20 @@ func direntNamlen(buf []byte) (uint64, bool) {\n \t}\n \treturn reclen - uint64(unsafe.Offsetof(Dirent{}.Name)), true\n }\n+\n+//sysnb getexecname() (execname unsafe.Pointer, err error)\n+//getexecname() *byte\n+\n+func Getexecname() (path string, err error) {\n+\tptr, err := getexecname()\n+\tif err != nil {\n+\t\treturn \"\", err\n+\t}\n+\tbytes := (*[1 << 29]byte)(ptr)[:]\n+\tfor i, b := range bytes {\n+\t\tif b == 0 {\n+\t\t\treturn string(bytes[:i]), nil\n+\t\t}\n+\t}\n+\tpanic(\"unreachable\")\n+}"}]}