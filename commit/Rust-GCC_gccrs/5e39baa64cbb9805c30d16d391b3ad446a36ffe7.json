{"sha": "5e39baa64cbb9805c30d16d391b3ad446a36ffe7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWUzOWJhYTY0Y2JiOTgwNWMzMGQxNmQzOTFiM2FkNDQ2YTM2ZmZlNw==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2009-04-20T09:42:48Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-20T09:42:48Z"}, "message": "2009-04-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-socket.adb, g-socket.ads, g-socthi-mingw.ads, g-socthi-vms.adb,\n\tg-socthi-vms.ads, g-socthi-vxworks.ads, g-socthi.ads\n\t(GNAT.Sockets.Thin.C_Inet_Addr): Remove.\n\t(GNAT.Sockets.Thin.Inet_Aton): New function, imported from C library\n\texcept for VMS where it is reimplemented in Ada using DECC$INET_ADDR.\n\t(GNAT.Sockets.Inet_Addr): Use inet_aton(3) instead of inet_addr(3).\n\n\t* debug.adb: Fix typo\n\n\t* gnat_rm.texi: Minor doc fix.\n\n\t* sem_ch7.adb, freeze.adb: Minor reformatting\n\nFrom-SVN: r146387", "tree": {"sha": "51e0816eea433888837b017eb0316dd39c9b83b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51e0816eea433888837b017eb0316dd39c9b83b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e39baa64cbb9805c30d16d391b3ad446a36ffe7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e39baa64cbb9805c30d16d391b3ad446a36ffe7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e39baa64cbb9805c30d16d391b3ad446a36ffe7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/comments", "author": null, "committer": null, "parents": [{"sha": "3568b271428985245f19c6bbea5e59f79f42544a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3568b271428985245f19c6bbea5e59f79f42544a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3568b271428985245f19c6bbea5e59f79f42544a"}], "stats": {"total": 130, "additions": 92, "deletions": 38}, "files": [{"sha": "1a21d7a4987247cabf42d1bbc74bfdfbd325b103", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5e39baa64cbb9805c30d16d391b3ad446a36ffe7", "patch": "@@ -1,3 +1,18 @@\n+2009-04-20  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-socket.adb, g-socket.ads, g-socthi-mingw.ads, g-socthi-vms.adb,\n+\tg-socthi-vms.ads, g-socthi-vxworks.ads, g-socthi.ads\n+\t(GNAT.Sockets.Thin.C_Inet_Addr): Remove.\n+\t(GNAT.Sockets.Thin.Inet_Aton): New function, imported from C library\n+\texcept for VMS where it is reimplemented in Ada using DECC$INET_ADDR.\n+\t(GNAT.Sockets.Inet_Addr): Use inet_aton(3) instead of inet_addr(3).\n+\n+\t* debug.adb: Fix typo\n+\n+\t* gnat_rm.texi: Minor doc fix.\n+\n+\t* sem_ch7.adb, freeze.adb: Minor reformatting\n+\n 2009-04-20  Thomas Quinot  <quinot@adacore.com>\n \n \t* g-socket.ads: Add new constants:"}, {"sha": "a37d4f0b6e82871290ef3dca14443b22034f029a", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=5e39baa64cbb9805c30d16d391b3ad446a36ffe7", "patch": "@@ -283,7 +283,7 @@ package body Debug is\n    --       list header is allocated, a line of output is generated. Certain\n    --       other basic tree operations also cause a line of output to be\n    --       generated. This option is useful in seeing where the parser is\n-   --       blowing up.;\n+   --       blowing up.\n \n    --  do   Print the source recreated from the generated tree. In the case\n    --       where the tree has been rewritten, this output includes only the"}, {"sha": "a74a6c26ca1044f35c1cd7f58c5c499abd38154d", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=5e39baa64cbb9805c30d16d391b3ad446a36ffe7", "patch": "@@ -2503,7 +2503,7 @@ package body Freeze is\n                      Next_Formal (Formal);\n                   end loop;\n \n-                  --  Case of function: similar checks on return type.\n+                  --  Case of function: similar checks on return type\n \n                   if Ekind (E) = E_Function then\n "}, {"sha": "f5b5d4758ecdfa1e5afa63794d3de8fcaa61292c", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 6, "deletions": 17, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=5e39baa64cbb9805c30d16d391b3ad446a36ffe7", "patch": "@@ -179,10 +179,6 @@ package body GNAT.Sockets is\n    --  Reconstruct a Duration value from a Timeval record (seconds and\n    --  microseconds).\n \n-   procedure Raise_Socket_Error (Error : Integer);\n-   --  Raise Socket_Error with an exception message describing the error code\n-   --  from errno.\n-\n    procedure Raise_Host_Error (H_Error : Integer);\n    --  Raise Host_Error exception with message describing error code (note\n    --  hstrerror seems to be obsolete) from h_errno.\n@@ -1274,36 +1270,29 @@ package body GNAT.Sockets is\n    ---------------\n \n    function Inet_Addr (Image : String) return Inet_Addr_Type is\n+      use Interfaces.C;\n       use Interfaces.C.Strings;\n \n-      Img    : chars_ptr;\n+      Img    : aliased char_array := To_C (Image);\n+      Addr   : aliased C.int;\n       Res    : C.int;\n       Result : Inet_Addr_Type;\n \n    begin\n-      --  Special case for the all-ones broadcast address: this address has the\n-      --  same in_addr_t value as Failure, and thus cannot be properly returned\n-      --  by inet_addr(3).\n-\n-      if Image = \"255.255.255.255\" then\n-         return Broadcast_Inet_Addr;\n-\n       --  Special case for an empty Image as on some platforms (e.g. Windows)\n       --  calling Inet_Addr(\"\") will not return an error.\n \n-      elsif Image = \"\" then\n+      if Image = \"\" then\n          Raise_Socket_Error (SOSC.EINVAL);\n       end if;\n \n-      Img := New_String (Image);\n-      Res := C_Inet_Addr (Img);\n-      Free (Img);\n+      Res := Inet_Aton (To_Chars_Ptr (Img'Unchecked_Access), Addr'Address);\n \n       if Res = Failure then\n          Raise_Socket_Error (SOSC.EINVAL);\n       end if;\n \n-      To_Inet_Addr (To_In_Addr (Res), Result);\n+      To_Inet_Addr (To_In_Addr (Addr), Result);\n       return Result;\n    end Inet_Addr;\n "}, {"sha": "1b3ee63966ff6f5fe27210ea2a73654b9969fab9", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=5e39baa64cbb9805c30d16d391b3ad446a36ffe7", "patch": "@@ -1108,6 +1108,10 @@ package GNAT.Sockets is\n \n private\n \n+   procedure Raise_Socket_Error (Error : Integer);\n+   --  Raise Socket_Error with an exception message describing the error code\n+   --  from errno.\n+\n    type Socket_Type is new Integer;\n    No_Socket : constant Socket_Type := -1;\n "}, {"sha": "5588dd003871037454b0dec25328d614e1921d14", "filename": "gcc/ada/g-socthi-mingw.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2Fg-socthi-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2Fg-socthi-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.ads?ref=5e39baa64cbb9805c30d16d391b3ad446a36ffe7", "patch": "@@ -115,8 +115,9 @@ package GNAT.Sockets.Thin is\n       Optval  : System.Address;\n       Optlen  : not null access C.int) return C.int;\n \n-   function C_Inet_Addr\n-     (Cp : C.Strings.chars_ptr) return C.int;\n+   function Inet_Aton\n+     (Cp  : C.Strings.chars_ptr;\n+      Inp : System.Address) return C.int;\n \n    function C_Ioctl\n      (S    : C.int;\n@@ -232,7 +233,7 @@ private\n    pragma Import (Stdcall, C_Getpeername, \"getpeername\");\n    pragma Import (Stdcall, C_Getsockname, \"getsockname\");\n    pragma Import (Stdcall, C_Getsockopt, \"getsockopt\");\n-   pragma Import (Stdcall, C_Inet_Addr, \"inet_addr\");\n+   pragma Import (Stdcall, Inet_Aton, \"inet_aton\");\n    pragma Import (Stdcall, C_Ioctl, \"ioctlsocket\");\n    pragma Import (Stdcall, C_Listen, \"listen\");\n    pragma Import (Stdcall, C_Recv, \"recv\");"}, {"sha": "8a143c1e29a1b3ba22146d4294919ed33bb36d3d", "filename": "gcc/ada/g-socthi-vms.adb", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2Fg-socthi-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2Fg-socthi-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.adb?ref=5e39baa64cbb9805c30d16d391b3ad446a36ffe7", "patch": "@@ -38,6 +38,8 @@ with GNAT.Task_Lock;\n \n with Interfaces.C; use Interfaces.C;\n \n+with System.Address_To_Access_Conversions;\n+\n package body GNAT.Sockets.Thin is\n \n    Non_Blocking_Sockets : aliased Fd_Set;\n@@ -351,6 +353,47 @@ package body GNAT.Sockets.Thin is\n \n    package body Host_Error_Messages is separate;\n \n+   ---------------\n+   -- Inet_Aton --\n+   ---------------\n+\n+   --  VMS does not support inet_aton(3), so emulate it here in terms of\n+   --  inet_addr(3).\n+\n+   function Inet_Aton\n+     (Cp  : C.Strings.chars_ptr;\n+      Inp : System.Address) return C.int\n+   is\n+      use C.Strings;\n+      use System;\n+\n+      Res : aliased C.int;\n+      package Conv is new System.Address_To_Access_Conversions (C.int);\n+      function C_Inet_Addr (Cp : C.Strings.chars_ptr) return C.int;\n+      pragma Import (C, C_Inet_Addr, \"DECC$INET_ADDR\");\n+   begin\n+      if Cp = Null_Ptr or else Inp = Null_Address then\n+         Raise_Socket_Error (SOSC.EINVAL);\n+      end if;\n+\n+      --  Special case for the all-ones broadcast address: this address has the\n+      --  same in_addr_t value as Failure, and thus cannot be properly returned\n+      --  by inet_addr(3).\n+\n+      if String'(Value (Cp)) = \"255.255.255.255\" then\n+         Conv.To_Pointer (Inp).all := -1;\n+         return 0;\n+      end if;\n+\n+      Res := C_Inet_Addr (Cp);\n+      if Res = -1 then\n+         return Res;\n+      end if;\n+\n+      Conv.To_Pointer (Inp).all := Res;\n+      return 0;\n+   end Inet_Aton;\n+\n    ----------------\n    -- Initialize --\n    ----------------"}, {"sha": "1abcbb3385df4107235e9611ef21bdf3838061b2", "filename": "gcc/ada/g-socthi-vms.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2Fg-socthi-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2Fg-socthi-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.ads?ref=5e39baa64cbb9805c30d16d391b3ad446a36ffe7", "patch": "@@ -118,8 +118,9 @@ package GNAT.Sockets.Thin is\n       Optval  : System.Address;\n       Optlen  : not null access C.int) return C.int;\n \n-   function C_Inet_Addr\n-     (Cp : C.Strings.chars_ptr) return C.int;\n+   function Inet_Aton\n+     (Cp  : C.Strings.chars_ptr;\n+      Inp : System.Address) return C.int;\n \n    function C_Ioctl\n      (S    : C.int;\n@@ -249,7 +250,6 @@ private\n    pragma Import (C, C_Getpeername,   \"DECC$GETPEERNAME\");\n    pragma Import (C, C_Getsockname,   \"DECC$GETSOCKNAME\");\n    pragma Import (C, C_Getsockopt,    \"DECC$GETSOCKOPT\");\n-   pragma Import (C, C_Inet_Addr,     \"DECC$INET_ADDR\");\n    pragma Import (C, C_Listen,        \"DECC$LISTEN\");\n    pragma Import (C, C_Select,        \"DECC$SELECT\");\n    pragma Import (C, C_Setsockopt,    \"DECC$SETSOCKOPT\");"}, {"sha": "10c3754f81e747ffb32ce38354c0a00a327defb2", "filename": "gcc/ada/g-socthi-vxworks.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2Fg-socthi-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2Fg-socthi-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.ads?ref=5e39baa64cbb9805c30d16d391b3ad446a36ffe7", "patch": "@@ -116,8 +116,9 @@ package GNAT.Sockets.Thin is\n       Optval  : System.Address;\n       Optlen  : not null access C.int) return C.int;\n \n-   function C_Inet_Addr\n-     (Cp : C.Strings.chars_ptr) return C.int;\n+   function Inet_Aton\n+     (Cp  : C.Strings.chars_ptr;\n+      Inp : System.Address) return C.int;\n \n    function C_Ioctl\n      (S    : C.int;\n@@ -226,7 +227,7 @@ private\n    pragma Import (C, C_Getpeername, \"getpeername\");\n    pragma Import (C, C_Getsockname, \"getsockname\");\n    pragma Import (C, C_Getsockopt, \"getsockopt\");\n-   pragma Import (C, C_Inet_Addr, \"inet_addr\");\n+   pragma Import (C, Inet_Aton, \"inet_aton\");\n    pragma Import (C, C_Listen, \"listen\");\n    pragma Import (C, C_Readv, \"readv\");\n    pragma Import (C, C_Select, \"select\");"}, {"sha": "e54d59c6a5756d1d5211a00ff306455befa8f90f", "filename": "gcc/ada/g-socthi.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2Fg-socthi.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2Fg-socthi.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi.ads?ref=5e39baa64cbb9805c30d16d391b3ad446a36ffe7", "patch": "@@ -117,8 +117,9 @@ package GNAT.Sockets.Thin is\n       Optval  : System.Address;\n       Optlen  : not null access C.int) return C.int;\n \n-   function C_Inet_Addr\n-     (Cp : C.Strings.chars_ptr) return C.int;\n+   function Inet_Aton\n+     (Cp  : C.Strings.chars_ptr;\n+      Inp : System.Address) return C.int;\n \n    function C_Ioctl\n      (S    : C.int;\n@@ -251,7 +252,7 @@ private\n    pragma Import (C, C_Getpeername, \"getpeername\");\n    pragma Import (C, C_Getsockname, \"getsockname\");\n    pragma Import (C, C_Getsockopt, \"getsockopt\");\n-   pragma Import (C, C_Inet_Addr, \"inet_addr\");\n+   pragma Import (C, Inet_Aton, \"inet_aton\");\n    pragma Import (C, C_Listen, \"listen\");\n    pragma Import (C, C_Readv, \"readv\");\n    pragma Import (C, C_Select, \"select\");"}, {"sha": "f3059ae6f4f953971bac5e6e1ae869385b399fa2", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=5e39baa64cbb9805c30d16d391b3ad446a36ffe7", "patch": "@@ -10478,7 +10478,7 @@ On a typical 32-bit architecture, the X component will be four bytes, and\n require four-byte alignment, and the Y component will be one byte. In this\n case @code{R'Value_Size} will be 40 (bits) since this is the minimum size\n required to store a value of this type, and for example, it is permissible\n-to have a component of type R in an outer record whose component size is\n+to have a component of type R in an outer array whose component size is\n specified to be 48 bits. However, @code{R'Object_Size} will be 64 (bits),\n since it must be rounded up so that this value is a multiple of the\n alignment (4 bytes = 32 bits)."}, {"sha": "54d4a29906549e9c9a81631ff627a83afd1a22e1", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e39baa64cbb9805c30d16d391b3ad446a36ffe7/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=5e39baa64cbb9805c30d16d391b3ad446a36ffe7", "patch": "@@ -1510,9 +1510,9 @@ package body Sem_Ch7 is\n                         Next_Elmt (Op_Elmt_2);\n                      end loop;\n \n-                     --   Case 2: We have not found any explicit overriding and\n-                     --   hence we need to declare the operation (i.e., make it\n-                     --   visible).\n+                     --  Case 2: We have not found any explicit overriding and\n+                     --  hence we need to declare the operation (i.e., make it\n+                     --  visible).\n \n                      Derive_Subprogram (New_Op, Alias (Prim_Op), E, Etype (E));\n \n@@ -1555,8 +1555,8 @@ package body Sem_Ch7 is\n                end if;\n \n             else\n-               --   Non-tagged type, scan forward to locate inherited hidden\n-               --   operations.\n+               --  Non-tagged type, scan forward to locate inherited hidden\n+               --  operations.\n \n                Prim_Op := Next_Entity (E);\n                while Present (Prim_Op) loop\n@@ -2296,7 +2296,7 @@ package body Sem_Ch7 is\n            and then No (Full_View (Id))\n          then\n             --  Mark Taft amendment types. Verify that there are no primitive\n-            --  operations declared for the type (3.10.1 (9)).\n+            --  operations declared for the type (3.10.1(9)).\n \n             Set_Has_Completion_In_Body (Id);\n "}]}