{"sha": "2a457a9b4fa448489522d39390e857541a95abd5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE0NTdhOWI0ZmE0NDg0ODk1MjJkMzkzOTBlODU3NTQxYTk1YWJkNQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2009-06-18T21:12:12Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-06-18T21:12:12Z"}, "message": "re PR target/40470 (unable to find a register to spill in class \u2018SSE_FIRST_REG\u2019)\n\ngcc/\n\n2009-06-18  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/40470\n\t* config/i386/i386.h (CLASS_LIKELY_SPILLED_P): Add SSE_FIRST_REG.\n\ngcc/testsuite/\n\n2009-06-18  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/40470\n\t* gcc.dg/torture/pr40470-1.c: New.\n\t* gcc.dg/torture/pr40470-2.c: Likewise.\n\t* gcc.dg/torture/pr40470-3.c: Likewise.\n\t* gcc.dg/torture/pr40470-4.c: Likewise.\n\nFrom-SVN: r148673", "tree": {"sha": "5af3511a051db3e92a7d95c91c2a975a3135e33d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5af3511a051db3e92a7d95c91c2a975a3135e33d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a457a9b4fa448489522d39390e857541a95abd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a457a9b4fa448489522d39390e857541a95abd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a457a9b4fa448489522d39390e857541a95abd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a457a9b4fa448489522d39390e857541a95abd5/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fca5bb5ca8ce5e4b01d524cca7ae2455577ceda0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fca5bb5ca8ce5e4b01d524cca7ae2455577ceda0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fca5bb5ca8ce5e4b01d524cca7ae2455577ceda0"}], "stats": {"total": 114, "additions": 114, "deletions": 0}, "files": [{"sha": "55ffbfdb0269ee8c1c772f796ee6ca399e78252c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a457a9b4fa448489522d39390e857541a95abd5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a457a9b4fa448489522d39390e857541a95abd5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a457a9b4fa448489522d39390e857541a95abd5", "patch": "@@ -1,3 +1,8 @@\n+2009-06-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/40470\n+\t* config/i386/i386.h (CLASS_LIKELY_SPILLED_P): Add SSE_FIRST_REG.\n+\n 2009-06-18  Diego Novillo  <dnovillo@google.com>\n \n \t* doc/plugins.texi: Document plugin_is_GPL_compatible."}, {"sha": "7592f6b420c2e220dd94a247b90ab6db8c558a22", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a457a9b4fa448489522d39390e857541a95abd5/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a457a9b4fa448489522d39390e857541a95abd5/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=2a457a9b4fa448489522d39390e857541a95abd5", "patch": "@@ -1498,6 +1498,7 @@ enum reg_class\n    || ((CLASS) == AD_REGS)\t\t\t\t\t\t\\\n    || ((CLASS) == SIREG)\t\t\t\t\t\t\\\n    || ((CLASS) == DIREG)\t\t\t\t\t\t\\\n+   || ((CLASS) == SSE_FIRST_REG)\t\t\t\t\t\\\n    || ((CLASS) == FP_TOP_REG)\t\t\t\t\t\t\\\n    || ((CLASS) == FP_SECOND_REG))\n "}, {"sha": "540f408f78b424a8d6f3d878db3b3851238848b1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a457a9b4fa448489522d39390e857541a95abd5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a457a9b4fa448489522d39390e857541a95abd5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2a457a9b4fa448489522d39390e857541a95abd5", "patch": "@@ -1,3 +1,11 @@\n+2009-06-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/40470\n+\t* gcc.dg/torture/pr40470-1.c: New.\n+\t* gcc.dg/torture/pr40470-2.c: Likewise.\n+\t* gcc.dg/torture/pr40470-3.c: Likewise.\n+\t* gcc.dg/torture/pr40470-4.c: Likewise.\n+\n 2009-06-18  Diego Novillo  <dnovillo@google.com>\n \n \t* gcc.dg/plugin/selfassign.c: Declare plugin_is_GPL_compatible."}, {"sha": "cb2510e883b9e289ac7388a110d87a592c76e64c", "filename": "gcc/testsuite/gcc.dg/torture/pr40470-1.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a457a9b4fa448489522d39390e857541a95abd5/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr40470-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a457a9b4fa448489522d39390e857541a95abd5/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr40470-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr40470-1.c?ref=2a457a9b4fa448489522d39390e857541a95abd5", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-msse4\" } */\n+#include <nmmintrin.h>\n+__m128i load (char *);\n+char *\n+foo (char *p1, char *p2,\n+     int bmsk, __m128i mask1, __m128i mask2)\n+{\n+  int len = 0;\n+  __m128i frag1, frag2;\n+  int  cmp_s;\n+  if( !p2[0]) return p1;\n+  if( !p1[0] ) return NULL;\n+  frag2 = load (p2); \n+  frag1 = load (p1);\n+  frag2 = _mm_blendv_epi8(frag2, mask2, mask1);\n+  frag1 = _mm_blendv_epi8(frag1, mask2, mask1);\n+  cmp_s = _mm_cmpistrs(frag2, frag1, 0x0c);\n+  if( cmp_s )\n+    __asm(\"bsfl %[bmsk], %[len]\" : [len] \"=r\" (len) : [bmsk] \"r\" (bmsk) );\n+  return p1 + len;\n+}"}, {"sha": "b0414bbea91affcaaad8520dae021e4dfb79868a", "filename": "gcc/testsuite/gcc.dg/torture/pr40470-2.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a457a9b4fa448489522d39390e857541a95abd5/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr40470-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a457a9b4fa448489522d39390e857541a95abd5/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr40470-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr40470-2.c?ref=2a457a9b4fa448489522d39390e857541a95abd5", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-msse4\" } */\n+#include <nmmintrin.h>\n+__m128i load (char *);\n+char *\n+foo (const unsigned char *s1, const unsigned char *s2,\n+     int bmsk, __m128i frag2)\n+{\n+  int len = 0;\n+  char *p1 = (char  *) s1;\n+  char *p2 = (char  *) s2;\n+  __m128i frag1, fruc, mask;\n+  int cmp_c, cmp_s;\n+  if( !p2[0]) return (char *) s1;\n+  if( !p1[0] ) return NULL;\n+  if( p2[1]) frag2 = load (p2); \n+  frag1 = load (p1);\n+  fruc = _mm_loadu_si128 ((__m128i *) s1);\n+  mask = _mm_cmpistrm(fruc, frag2, 0x44);\n+  frag2 = _mm_blendv_epi8(frag2, mask, mask);\n+  frag1 = _mm_blendv_epi8(frag1, mask, mask);\n+  cmp_c = _mm_cmpistrc(frag2, frag1, 0x0c);\n+  cmp_s = _mm_cmpistrs(frag2, frag1, 0x0c);\n+  if( cmp_s  & cmp_c  )\n+    __asm(\"bsfl %[bmsk], %[len]\" : [len] \"=r\" (len) : [bmsk] \"r\" (bmsk) );\n+  return p2 + len;\n+}"}, {"sha": "5c4c361de552e5adc7db3586fd498ba59e740a17", "filename": "gcc/testsuite/gcc.dg/torture/pr40470-3.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a457a9b4fa448489522d39390e857541a95abd5/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr40470-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a457a9b4fa448489522d39390e857541a95abd5/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr40470-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr40470-3.c?ref=2a457a9b4fa448489522d39390e857541a95abd5", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-msse4\" } */\n+#include <nmmintrin.h>\n+__m128i load (char *);\n+char *\n+foo (char *p1, char *p2,\n+     int bmsk, __m128i mask1, __m128i mask2)\n+{\n+  int len = 0;\n+  __m128i frag1, frag2;\n+  int  cmp_s;\n+  if( !p2[0]) return p1;\n+  if( !p1[0] ) return NULL;\n+  frag2 = load (p2); \n+  frag1 = load (p1);\n+  frag2 = _mm_blendv_epi8(frag2, mask2, mask1);\n+  frag1 = _mm_blendv_epi8(frag1, mask1, mask2);\n+  cmp_s = _mm_cmpistrs(frag2, frag1, 0x0c);\n+  if( cmp_s )\n+    __asm(\"bsfl %[bmsk], %[len]\" : [len] \"=r\" (len) : [bmsk] \"r\" (bmsk) );\n+  return p1 + len;\n+}"}, {"sha": "f9d0e5095008f4bd6f2bf0f7b4f437e34e88d03f", "filename": "gcc/testsuite/gcc.dg/torture/pr40470-4.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a457a9b4fa448489522d39390e857541a95abd5/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr40470-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a457a9b4fa448489522d39390e857541a95abd5/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr40470-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr40470-4.c?ref=2a457a9b4fa448489522d39390e857541a95abd5", "patch": "@@ -0,0 +1,29 @@\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-msse4\" } */\n+#include <nmmintrin.h>\n+__m128i load (char *);\n+char *\n+foo (const unsigned char *s1, const unsigned char *s2,\n+     int bmsk, __m128i frag2)\n+{\n+  int len = 0;\n+  char *p1 = (char  *) s1;\n+  char *p2 = (char  *) s2;\n+  __m128i frag1, fruc1, fruc2, mask1, mask2;\n+  int cmp_c, cmp_s;\n+  if( !p2[0]) return (char *) s1;\n+  if( !p1[0] ) return NULL;\n+  if( p2[1]) frag2 = load (p2); \n+  frag1 = load (p1);\n+  fruc1 = _mm_loadu_si128 ((__m128i *) s1);\n+  fruc2 = _mm_loadu_si128 ((__m128i *) s2);\n+  mask1 = _mm_cmpistrm(fruc1, frag2, 0x44);\n+  mask2 = _mm_cmpistrm(fruc2, frag1, 0x14);\n+  frag2 = _mm_blendv_epi8(frag2, mask1, mask2);\n+  frag1 = _mm_blendv_epi8(frag1, mask2, mask1);\n+  cmp_c = _mm_cmpistrc(frag2, frag1, 0x0c);\n+  cmp_s = _mm_cmpistrs(frag2, frag1, 0x0c);\n+  if( cmp_s  & cmp_c  )\n+    __asm(\"bsfl %[bmsk], %[len]\" : [len] \"=r\" (len) : [bmsk] \"r\" (bmsk) );\n+  return p2 + len;\n+}"}]}