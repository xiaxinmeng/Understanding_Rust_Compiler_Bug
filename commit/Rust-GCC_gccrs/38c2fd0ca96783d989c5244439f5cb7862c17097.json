{"sha": "38c2fd0ca96783d989c5244439f5cb7862c17097", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhjMmZkMGNhOTY3ODNkOTg5YzUyNDQ0MzlmNWNiNzg2MmMxNzA5Nw==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2007-06-06T10:40:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-06T10:40:57Z"}, "message": "prj.adb (Project_Empty): Gives default value for new component Libgnarl_Needed\n\n2007-04-20  Vincent Celier  <celier@adacore.com>\n\n\t* prj.adb (Project_Empty): Gives default value for new component\n\tLibgnarl_Needed\n\n\t* prj-attr.ads: Minor reformatting\n\n\t* prj-env.ads, prj-env.adb (For_All_Object_Dirs): Register object\n\tdirectory using the untouched casing.\n\t(For_All_Source_Dirs): Idem.\n\n\t* prj-ext.ads, prj-ext.adb (Search_Directories): New table to record\n\tdirectories specified with switches -aP.\n\t(Add_Search_Project_Directory): New procedure\n\t(Initialize_Project_Path): Put the directories in table\n\tSearch_Directories in the project search path.\n\t(Initialize_Project_Path): For VMS, transform into canonical form the\n\tproject path.\n\nFrom-SVN: r125442", "tree": {"sha": "ad06a04bf2d5c7b5b962784f36f8f4c897320e98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad06a04bf2d5c7b5b962784f36f8f4c897320e98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38c2fd0ca96783d989c5244439f5cb7862c17097", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38c2fd0ca96783d989c5244439f5cb7862c17097", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38c2fd0ca96783d989c5244439f5cb7862c17097", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38c2fd0ca96783d989c5244439f5cb7862c17097/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f95fd3b225ec91ec09d0ce92ac2f64955bb11e45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f95fd3b225ec91ec09d0ce92ac2f64955bb11e45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f95fd3b225ec91ec09d0ce92ac2f64955bb11e45"}], "stats": {"total": 523, "additions": 282, "deletions": 241}, "files": [{"sha": "abd551126384700d19c22f44e635bdfa77e3b6f1", "filename": "gcc/ada/prj-attr.ads", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38c2fd0ca96783d989c5244439f5cb7862c17097/gcc%2Fada%2Fprj-attr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38c2fd0ca96783d989c5244439f5cb7862c17097/gcc%2Fada%2Fprj-attr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.ads?ref=38c2fd0ca96783d989c5244439f5cb7862c17097", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -274,12 +274,13 @@ private\n    --  Data for an attribute\n \n    package Attrs is\n-      new Table.Table (Table_Component_Type => Attribute_Record,\n-                       Table_Index_Type     => Attr_Node_Id,\n-                       Table_Low_Bound      => First_Attribute,\n-                       Table_Initial        => Attributes_Initial,\n-                       Table_Increment      => Attributes_Increment,\n-                       Table_Name           => \"Prj.Attr.Attrs\");\n+     new Table.Table\n+       (Table_Component_Type => Attribute_Record,\n+        Table_Index_Type     => Attr_Node_Id,\n+        Table_Low_Bound      => First_Attribute,\n+        Table_Initial        => Attributes_Initial,\n+        Table_Increment      => Attributes_Increment,\n+        Table_Name           => \"Prj.Attr.Attrs\");\n    --  The table of the attributes\n \n    --------------\n@@ -294,12 +295,13 @@ private\n    --  Data for a package\n \n    package Package_Attributes is\n-      new Table.Table (Table_Component_Type => Package_Record,\n-                       Table_Index_Type     => Pkg_Node_Id,\n-                       Table_Low_Bound      => First_Package,\n-                       Table_Initial        => Packages_Initial,\n-                       Table_Increment      => Packages_Increment,\n-                       Table_Name           => \"Prj.Attr.Packages\");\n+     new Table.Table\n+       (Table_Component_Type => Package_Record,\n+        Table_Index_Type     => Pkg_Node_Id,\n+        Table_Low_Bound      => First_Package,\n+        Table_Initial        => Packages_Initial,\n+        Table_Increment      => Packages_Increment,\n+        Table_Name           => \"Prj.Attr.Packages\");\n    --  The table of the packages\n \n end Prj.Attr;"}, {"sha": "589a98b430b441df622602f20da0721fdb750a59", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 96, "deletions": 107, "changes": 203, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38c2fd0ca96783d989c5244439f5cb7862c17097/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38c2fd0ca96783d989c5244439f5cb7862c17097/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=38c2fd0ca96783d989c5244439f5cb7862c17097", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,7 +24,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Namet;    use Namet;\n with Opt;\n with Osint;    use Osint;\n with Output;   use Output;\n@@ -35,17 +34,16 @@ with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n \n package body Prj.Env is\n \n-   Current_Source_Path_File : Name_Id := No_Name;\n-   --  Current value of project source path file env var.\n-   --  Used to avoid setting the env var to the same value.\n+   Current_Source_Path_File : Path_Name_Type := No_Path;\n+   --  Current value of project source path file env var. Used to avoid setting\n+   --  the env var to the same value.\n \n-   Current_Object_Path_File : Name_Id := No_Name;\n-   --  Current value of project object path file env var.\n-   --  Used to avoid setting the env var to the same value.\n+   Current_Object_Path_File : Path_Name_Type := No_Path;\n+   --  Current value of project object path file env var. Used to avoid setting\n+   --  the env var to the same value.\n \n    Ada_Path_Buffer : String_Access := new String (1 .. 1024);\n-   --  A buffer where values for ADA_INCLUDE_PATH\n-   --  and ADA_OBJECTS_PATH are stored.\n+   --  buffer where values for ADA_INCLUDE_PATH and ADA_OBJECTS_PATH are stored\n \n    Ada_Path_Length : Natural := 0;\n    --  Index of the last valid character in Ada_Path_Buffer\n@@ -90,31 +88,29 @@ package body Prj.Env is\n \n    procedure Add_To_Path (Dir : String);\n    --  If Dir is not already in the global variable Ada_Path_Buffer, add it.\n-   --  Increment Ada_Path_Length.\n-   --  If Ada_Path_Length /= 0, prepend a Path_Separator character to\n-   --  Path.\n+   --  Increment Ada_Path_Length. If Ada_Path_Length /= 0, prepend a\n+   --  Path_Separator character to Path.\n \n    procedure Add_To_Source_Path\n      (Source_Dirs : String_List_Id; In_Tree : Project_Tree_Ref);\n-   --  Add to Ada_Path_B all the source directories in string list\n-   --  Source_Dirs, if any. Increment Ada_Path_Length.\n+   --  Add to Ada_Path_B all the source directories in string list Source_Dirs,\n+   --  if any. Increment Ada_Path_Length.\n \n    procedure Add_To_Object_Path\n-     (Object_Dir : Name_Id;\n+     (Object_Dir : Path_Name_Type;\n       In_Tree    : Project_Tree_Ref);\n    --  Add Object_Dir to object path table. Make sure it is not duplicate\n    --  and it is the last one in the current table.\n \n-   function Contains_ALI_Files (Dir : Name_Id) return Boolean;\n+   function Contains_ALI_Files (Dir : Path_Name_Type) return Boolean;\n    --  Return True if there is at least one ALI file in the directory Dir\n \n    procedure Create_New_Path_File\n      (In_Tree   : Project_Tree_Ref;\n       Path_FD   : out File_Descriptor;\n-      Path_Name : out Name_Id);\n-   --  Create a new temporary path file. Get the file name in Path_Name.\n-   --  The name is normally obtained by increasing the number in\n-   --  Temp_Path_File_Name by 1.\n+      Path_Name : out Path_Name_Type);\n+   --  Create a new temporary path file. Get the file name in Path_Name. The\n+   --  name is normally obtained by increasing Temp_Path_File_Name by 1.\n \n    procedure Set_Path_File_Var (Name : String; Value : String);\n    --  Call Setenv, after calling To_Host_File_Spec\n@@ -260,7 +256,7 @@ package body Prj.Env is\n \n                if (Data.Library and then Including_Libraries)\n                  or else\n-                 (Data.Object_Directory /= No_Name\n+                 (Data.Object_Directory /= No_Path\n                    and then\n                    (not Including_Libraries or else not Data.Library))\n                then\n@@ -269,7 +265,7 @@ package body Prj.Env is\n                   --  files; otherwise add the object directory.\n \n                   if Data.Library then\n-                     if Data.Object_Directory = No_Name\n+                     if Data.Object_Directory = No_Path\n                        or else\n                          Contains_ALI_Files (Data.Library_ALI_Dir)\n                      then\n@@ -333,7 +329,8 @@ package body Prj.Env is\n    ------------------------\n \n    procedure Add_To_Object_Path\n-     (Object_Dir : Name_Id; In_Tree : Project_Tree_Ref)\n+     (Object_Dir : Path_Name_Type;\n+      In_Tree    : Project_Tree_Ref)\n    is\n    begin\n       --  Check if the directory is already in the table\n@@ -494,7 +491,7 @@ package body Prj.Env is\n             --  If it is already, no need to add it\n \n             if In_Tree.Private_Part.Source_Paths.Table (Index) =\n-                        Source_Dir.Value\n+                        File_Name_Type (Source_Dir.Value)\n             then\n                Add_It := False;\n                exit;\n@@ -506,7 +503,7 @@ package body Prj.Env is\n               (In_Tree.Private_Part.Source_Paths);\n             In_Tree.Private_Part.Source_Paths.Table\n               (Source_Path_Table.Last (In_Tree.Private_Part.Source_Paths)) :=\n-              Source_Dir.Value;\n+                 File_Name_Type (Source_Dir.Value);\n          end if;\n \n          --  Next source directory\n@@ -528,7 +525,7 @@ package body Prj.Env is\n       --  If we don't know the path name of the body of this unit,\n       --  we compute it, and we store it.\n \n-      if Data.File_Names (Body_Part).Path = No_Name then\n+      if Data.File_Names (Body_Part).Path = No_File then\n          declare\n             Current_Source : String_List_Id :=\n               In_Tree.Projects.Table\n@@ -581,10 +578,10 @@ package body Prj.Env is\n    -- Contains_ALI_Files --\n    ------------------------\n \n-   function Contains_ALI_Files (Dir : Name_Id) return Boolean is\n+   function Contains_ALI_Files (Dir : Path_Name_Type) return Boolean is\n       Dir_Name : constant String := Get_Name_String (Dir);\n       Direct : Dir_Type;\n-      Name   : String (1 .. 1_000);\n+      Name   : String (1 .. 1_000); -- what is this magic constant 1000 ???\n       Last   : Natural;\n       Result : Boolean := False;\n \n@@ -629,7 +626,7 @@ package body Prj.Env is\n       pragma Unreferenced (Main_Project);\n       pragma Unreferenced (Include_Config_Files);\n \n-      File_Name : Name_Id         := No_Name;\n+      File_Name : Path_Name_Type  := No_Path;\n       File      : File_Descriptor := Invalid_FD;\n \n       Current_Unit : Unit_Id := Unit_Table.First;\n@@ -654,7 +651,7 @@ package body Prj.Env is\n \n       procedure Put\n         (Unit_Name : Name_Id;\n-         File_Name : Name_Id;\n+         File_Name : File_Name_Type;\n          Unit_Kind : Spec_Or_Body;\n          Index     : Int);\n       --  Put an SFN pragma in the temporary file\n@@ -827,7 +824,7 @@ package body Prj.Env is\n \n       procedure Put\n         (Unit_Name : Name_Id;\n-         File_Name : Name_Id;\n+         File_Name : File_Name_Type;\n          Unit_Kind : Spec_Or_Body;\n          Index     : Int)\n       is\n@@ -993,7 +990,7 @@ package body Prj.Env is\n    procedure Create_Mapping_File\n      (Project : Project_Id;\n       In_Tree : Project_Tree_Ref;\n-      Name    : out Name_Id)\n+      Name    : out Path_Name_Type)\n    is\n       File          : File_Descriptor := Invalid_FD;\n       The_Unit_Data : Unit_Data;\n@@ -1141,7 +1138,7 @@ package body Prj.Env is\n                --  If there is a spec, put it mapping in the file if it is\n                --  from a project in the closure of Project.\n \n-               if Data.Name /= No_Name and then Present (Data.Project) then\n+               if Data.Name /= No_File and then Present (Data.Project) then\n                   Put_Data (Spec => True);\n                end if;\n \n@@ -1150,7 +1147,7 @@ package body Prj.Env is\n                --  If there is a body (or subunit) put its mapping in the file\n                --  if it is from a project in the closure of Project.\n \n-               if Data.Name /= No_Name and then Present (Data.Project) then\n+               if Data.Name /= No_File and then Present (Data.Project) then\n                   Put_Data (Spec => False);\n                end if;\n \n@@ -1172,12 +1169,12 @@ package body Prj.Env is\n    procedure Create_New_Path_File\n      (In_Tree   : Project_Tree_Ref;\n       Path_FD   : out File_Descriptor;\n-      Path_Name : out Name_Id)\n+      Path_Name : out Path_Name_Type)\n    is\n    begin\n       Tempdir.Create_Temp_File (Path_FD, Path_Name);\n \n-      if Path_Name /= No_Name then\n+      if Path_Name /= No_Path then\n \n          --  Record the name, so that the temp path file will be deleted\n          --  at the end of the program.\n@@ -1200,7 +1197,7 @@ package body Prj.Env is\n       for Index in Path_File_Table.First ..\n                    Path_File_Table.Last (In_Tree.Private_Part.Path_Files)\n       loop\n-         if In_Tree.Private_Part.Path_Files.Table (Index) /= No_Name then\n+         if In_Tree.Private_Part.Path_Files.Table (Index) /= No_Path then\n             Delete_File\n               (Get_Name_String\n                  (In_Tree.Private_Part.Path_Files.Table (Index)),\n@@ -1249,9 +1246,9 @@ package body Prj.Env is\n \n       Unit : Unit_Data;\n \n-      The_Original_Name : Name_Id;\n-      The_Spec_Name     : Name_Id;\n-      The_Body_Name     : Name_Id;\n+      The_Original_Name : File_Name_Type;\n+      The_Spec_Name     : File_Name_Type;\n+      The_Body_Name     : File_Name_Type;\n \n    begin\n       Canonical_Case_File_Name (Original_Name);\n@@ -1303,24 +1300,25 @@ package body Prj.Env is\n               or else Unit.File_Names (Body_Part).Project = The_Project\n             then\n                declare\n-                  Current_Name : constant Name_Id :=\n+                  Current_Name : constant File_Name_Type :=\n                                    Unit.File_Names (Body_Part).Name;\n \n                begin\n                   --  Case of a body present\n \n-                  if Current_Name /= No_Name then\n+                  if Current_Name /= No_File then\n                      if Current_Verbosity = High then\n                         Write_Str  (\"   Comparing with \"\"\");\n                         Write_Str  (Get_Name_String (Current_Name));\n                         Write_Char ('\"');\n                         Write_Eol;\n                      end if;\n \n-                     --  If it has the name of the original name,\n-                     --  return the original name\n+                     --  If it has the name of the original name, return the\n+                     --  original name.\n \n-                     if Unit.Name = The_Original_Name\n+                     if Name_Id (Unit.Name) = Name_Id (The_Original_Name)\n+                        --  Type confusion in above comparison ???\n                        or else Current_Name = The_Original_Name\n                      then\n                         if Current_Verbosity = High then\n@@ -1366,13 +1364,13 @@ package body Prj.Env is\n               or else Unit.File_Names (Specification).Project = The_Project\n             then\n                declare\n-                  Current_Name : constant Name_Id :=\n+                  Current_Name : constant File_Name_Type :=\n                                    Unit.File_Names (Specification).Name;\n \n                begin\n                   --  Case of spec present\n \n-                  if Current_Name /= No_Name then\n+                  if Current_Name /= No_File then\n                      if Current_Verbosity = High then\n                         Write_Str  (\"   Comparing with \"\"\");\n                         Write_Str  (Get_Name_String (Current_Name));\n@@ -1382,7 +1380,8 @@ package body Prj.Env is\n \n                      --  If name same as original name, return original name\n \n-                     if Unit.Name = The_Original_Name\n+                     if Name_Id (Unit.Name) = Name_Id (The_Original_Name)\n+                        --  Type confusion in the above comparison ???\n                        or else Current_Name = The_Original_Name\n                      then\n                         if Current_Verbosity = High then\n@@ -1498,8 +1497,7 @@ package body Prj.Env is\n                --  This project has never been visited, add it\n                --  to the list.\n \n-               Project_List_Table.Increment_Last\n-                 (In_Tree.Project_Lists);\n+               Project_List_Table.Increment_Last (In_Tree.Project_Lists);\n                In_Tree.Project_Lists.Table (Current).Next :=\n                  Project_List_Table.Last (In_Tree.Project_Lists);\n                In_Tree.Project_Lists.Table\n@@ -1512,8 +1510,8 @@ package body Prj.Env is\n          --  If there is an object directory, call Action\n          --  with its name\n \n-         if Data.Object_Directory /= No_Name then\n-            Get_Name_String (Data.Object_Directory);\n+         if Data.Object_Directory /= No_Path then\n+            Get_Name_String (Data.Display_Object_Dir);\n             Action (Name_Buffer (1 .. Name_Len));\n          end if;\n \n@@ -1560,19 +1558,16 @@ package body Prj.Env is\n       ---------\n \n       procedure Add (Project : Project_Id) is\n-         Data : constant Project_Data :=\n-                  In_Tree.Projects.Table (Project);\n+         Data : constant Project_Data := In_Tree.Projects.Table (Project);\n          List : Project_List := Data.Imported_Projects;\n \n       begin\n          --  If the list of visited project is empty, then\n          --  for sure we never visited this project.\n \n          if Seen = Empty_Project_List then\n-            Project_List_Table.Increment_Last\n-              (In_Tree.Project_Lists);\n-            Seen := Project_List_Table.Last\n-                                         (In_Tree.Project_Lists);\n+            Project_List_Table.Increment_Last (In_Tree.Project_Lists);\n+            Seen := Project_List_Table.Last (In_Tree.Project_Lists);\n             In_Tree.Project_Lists.Table (Seen) :=\n               (Project => Project, Next => Empty_Project_List);\n \n@@ -1595,20 +1590,18 @@ package body Prj.Env is\n                   exit when\n                     In_Tree.Project_Lists.Table (Current).Next =\n                       Empty_Project_List;\n-                  Current :=\n-                    In_Tree.Project_Lists.Table (Current).Next;\n+\n+                  Current := In_Tree.Project_Lists.Table (Current).Next;\n                end loop;\n \n                --  This project has never been visited, add it\n                --  to the list.\n \n-               Project_List_Table.Increment_Last\n-                 (In_Tree.Project_Lists);\n+               Project_List_Table.Increment_Last (In_Tree.Project_Lists);\n                In_Tree.Project_Lists.Table (Current).Next :=\n                  Project_List_Table.Last (In_Tree.Project_Lists);\n                In_Tree.Project_Lists.Table\n-                 (Project_List_Table.Last\n-                    (In_Tree.Project_Lists)) :=\n+                 (Project_List_Table.Last (In_Tree.Project_Lists)) :=\n                  (Project => Project, Next => Empty_Project_List);\n             end;\n          end if;\n@@ -1621,13 +1614,10 @@ package body Prj.Env is\n             --  If there are Ada sources, call action with the name of every\n             --  source directory.\n \n-            if\n-              In_Tree.Projects.Table (Project).Ada_Sources_Present\n-            then\n+            if In_Tree.Projects.Table (Project).Ada_Sources_Present then\n                while Current /= Nil_String loop\n-                  The_String :=\n-                    In_Tree.String_Elements.Table (Current);\n-                  Action (Get_Name_String (The_String.Value));\n+                  The_String := In_Tree.String_Elements.Table (Current);\n+                  Action (Get_Name_String (The_String.Display_Value));\n                   Current := The_String.Next;\n                end loop;\n             end if;\n@@ -1663,7 +1653,7 @@ package body Prj.Env is\n      (Source_File_Name : String;\n       In_Tree          : Project_Tree_Ref;\n       Project          : out Project_Id;\n-      Path             : out Name_Id)\n+      Path             : out File_Name_Type)\n    is\n    begin\n       --  Body below could use some comments ???\n@@ -1686,14 +1676,14 @@ package body Prj.Env is\n          loop\n             Unit := In_Tree.Units.Table (Id);\n \n-            if (Unit.File_Names (Specification).Name /= No_Name\n+            if (Unit.File_Names (Specification).Name /= No_File\n                  and then\n                    Namet.Get_Name_String\n                      (Unit.File_Names (Specification).Name) = Original_Name)\n-              or else (Unit.File_Names (Specification).Path /= No_Name\n+              or else (Unit.File_Names (Specification).Path /= No_File\n                          and then\n                            Namet.Get_Name_String\n-                           (Unit.File_Names (Specification).Path) =\n+                             (Unit.File_Names (Specification).Path) =\n                                                               Original_Name)\n             then\n                Project := Ultimate_Extension_Of\n@@ -1708,11 +1698,11 @@ package body Prj.Env is\n \n                return;\n \n-            elsif (Unit.File_Names (Body_Part).Name /= No_Name\n+            elsif (Unit.File_Names (Body_Part).Name /= No_File\n                     and then\n                       Namet.Get_Name_String\n                         (Unit.File_Names (Body_Part).Name) = Original_Name)\n-              or else (Unit.File_Names (Body_Part).Path /= No_Name\n+              or else (Unit.File_Names (Body_Part).Path /= No_File\n                          and then Namet.Get_Name_String\n                                     (Unit.File_Names (Body_Part).Path) =\n                                                              Original_Name)\n@@ -1733,7 +1723,7 @@ package body Prj.Env is\n       end;\n \n       Project := No_Project;\n-      Path    := No_Name;\n+      Path    := No_File;\n \n       if Current_Verbosity > Default then\n          Write_Str (\"Cannot be found.\");\n@@ -1772,7 +1762,7 @@ package body Prj.Env is\n                              Name & Namet.Get_Name_String\n                                      (Data.Naming.Ada_Body_Suffix);\n \n-      First   : Unit_Id := Unit_Table.First;\n+      First   : Unit_Id;\n       Current : Unit_Id;\n       Unit    : Unit_Data;\n \n@@ -1796,6 +1786,7 @@ package body Prj.Env is\n          Write_Eol;\n       end if;\n \n+      First := Unit_Table.First;\n       while First <= Unit_Table.Last (In_Tree.Units)\n         and then In_Tree.Units.Table\n                    (First).File_Names (Body_Part).Project /= Project\n@@ -1808,7 +1799,7 @@ package body Prj.Env is\n          Unit := In_Tree.Units.Table (Current);\n \n          if Unit.File_Names (Body_Part).Project = Project\n-           and then Unit.File_Names (Body_Part).Name /= No_Name\n+           and then Unit.File_Names (Body_Part).Name /= No_File\n          then\n             declare\n                Current_Name : constant String :=\n@@ -1842,7 +1833,7 @@ package body Prj.Env is\n                end if;\n             end;\n \n-         elsif Unit.File_Names (Specification).Name /= No_Name then\n+         elsif Unit.File_Names (Specification).Name /= No_File then\n             declare\n                Current_Name : constant String :=\n                                 Namet.Get_Name_String\n@@ -1902,7 +1893,7 @@ package body Prj.Env is\n          Write_Str  (\"   \");\n          Write_Line (Namet.Get_Name_String (Unit.Name));\n \n-         if Unit.File_Names (Specification).Name /= No_Name then\n+         if Unit.File_Names (Specification).Name /= No_File then\n             if Unit.File_Names (Specification).Project = No_Project then\n                Write_Line (\"   No project\");\n \n@@ -1920,7 +1911,7 @@ package body Prj.Env is\n                (Unit.File_Names (Specification).Name));\n          end if;\n \n-         if Unit.File_Names (Body_Part).Name /= No_Name then\n+         if Unit.File_Names (Body_Part).Name /= No_File then\n             if Unit.File_Names (Body_Part).Project = No_Project then\n                Write_Line (\"   No project\");\n \n@@ -1956,7 +1947,7 @@ package body Prj.Env is\n       Original_Name : String := Name;\n \n       Data   : constant Project_Data :=\n-        In_Tree.Projects.Table (Main_Project);\n+                 In_Tree.Projects.Table (Main_Project);\n \n       Extended_Spec_Name : String :=\n                              Name & Namet.Get_Name_String\n@@ -1967,11 +1958,12 @@ package body Prj.Env is\n \n       Unit : Unit_Data;\n \n-      Current_Name : Name_Id;\n+      Current_Name      : File_Name_Type;\n+      The_Original_Name : File_Name_Type;\n+      The_Spec_Name     : File_Name_Type;\n+      The_Body_Name     : File_Name_Type;\n \n-      The_Original_Name : Name_Id;\n-      The_Spec_Name     : Name_Id;\n-      The_Body_Name     : Name_Id;\n+      --  Confusion here between unit names/file names, See ??? comments below\n \n    begin\n       Canonical_Case_File_Name (Original_Name);\n@@ -2000,12 +1992,12 @@ package body Prj.Env is\n \n          --  Case of a body present\n \n-         if Current_Name /= No_Name then\n+         if Current_Name /= No_File then\n \n             --  If it has the name of the original name or the body name,\n             --  we have found the project.\n \n-            if Unit.Name = The_Original_Name\n+            if Name_Id (Unit.Name) = Name_Id (The_Original_Name) -- ???\n               or else Current_Name = The_Original_Name\n               or else Current_Name = The_Body_Name\n             then\n@@ -2018,12 +2010,12 @@ package body Prj.Env is\n \n          Current_Name := Unit.File_Names (Specification).Name;\n \n-         if Current_Name /= No_Name then\n+         if Current_Name /= No_File then\n \n             --  If name same as the original name, or the spec name, we have\n             --  found the project.\n \n-            if Unit.Name = The_Original_Name\n+            if Name_Id (Unit.Name) = Name_Id (The_Original_Name) -- ???\n               or else Current_Name = The_Original_Name\n               or else Current_Name = The_Spec_Name\n             then\n@@ -2118,17 +2110,17 @@ package body Prj.Env is\n \n                      if (Data.Library and then Including_Libraries)\n                        or else\n-                         (Data.Object_Directory /= No_Name\n+                         (Data.Object_Directory /= No_Path\n                           and then\n                             (not Including_Libraries or else not Data.Library))\n                      then\n-                        --  For a library project, add the library ALI\n-                        --  directory if there is no object directory or\n-                        --  if the library ALI directory contains ALI files;\n-                        --  otherwise add the object directory.\n+                        --  For a library project, add library ALI directory if\n+                        --  there is no object directory or if the library ALI\n+                        --  directory contains ALI files, otherwise add the\n+                        --  object directory.\n \n                         if Data.Library then\n-                           if Data.Object_Directory = No_Name\n+                           if Data.Object_Directory = No_Path\n                              or else Contains_ALI_Files (Data.Library_ALI_Dir)\n                            then\n                               Add_To_Object_Path\n@@ -2151,10 +2143,9 @@ package body Prj.Env is\n                                     or else\n                                       (Data.Extends /= No_Project\n                                        and then\n-                                       Data.Object_Directory /= No_Name))\n+                                       Data.Object_Directory /= No_Path))\n                         then\n-                           Add_To_Object_Path\n-                             (Data.Object_Directory, In_Tree);\n+                           Add_To_Object_Path (Data.Object_Directory, In_Tree);\n                         end if;\n                      end if;\n                   end if;\n@@ -2197,9 +2188,7 @@ package body Prj.Env is\n       --  If it is the first time we call this procedure for\n       --  this project, compute the source path and/or the object path.\n \n-      if In_Tree.Projects.Table (Project).Include_Path_File =\n-        No_Name\n-      then\n+      if In_Tree.Projects.Table (Project).Include_Path_File = No_Path then\n          Process_Source_Dirs := True;\n          Create_New_Path_File\n            (In_Tree, Source_FD,\n@@ -2211,7 +2200,7 @@ package body Prj.Env is\n \n       if Including_Libraries then\n          if In_Tree.Projects.Table\n-           (Project).Objects_Path_File_With_Libs = No_Name\n+           (Project).Objects_Path_File_With_Libs = No_Path\n          then\n             Process_Object_Dirs := True;\n             Create_New_Path_File\n@@ -2221,7 +2210,7 @@ package body Prj.Env is\n \n       else\n          if In_Tree.Projects.Table\n-              (Project).Objects_Path_File_Without_Libs = No_Name\n+              (Project).Objects_Path_File_Without_Libs = No_Path\n          then\n             Process_Object_Dirs := True;\n             Create_New_Path_File\n@@ -2363,7 +2352,7 @@ package body Prj.Env is\n       Data : Unit_Data := In_Tree.Units.Table (Unit);\n \n    begin\n-      if Data.File_Names (Specification).Path = No_Name then\n+      if Data.File_Names (Specification).Path = No_File then\n          declare\n             Current_Source : String_List_Id :=\n               In_Tree.Projects.Table"}, {"sha": "a3a3db77c9bd7a933b0e57de80c16e0c28698195", "filename": "gcc/ada/prj-env.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38c2fd0ca96783d989c5244439f5cb7862c17097/gcc%2Fada%2Fprj-env.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38c2fd0ca96783d989c5244439f5cb7862c17097/gcc%2Fada%2Fprj-env.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.ads?ref=38c2fd0ca96783d989c5244439f5cb7862c17097", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2005, Free Software Foundation, Inc          --\n+--          Copyright (C) 2001-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,7 +39,7 @@ package Prj.Env is\n    procedure Create_Mapping_File\n      (Project : Project_Id;\n       In_Tree : Project_Tree_Ref;\n-      Name    : out Name_Id);\n+      Name    : out Path_Name_Type);\n    --  Create a temporary mapping file for project Project. For each unit\n    --  in the closure of immediate sources of Project, put the mapping of\n    --  its spec and or body to its file name and path name in this file.\n@@ -135,7 +135,7 @@ package Prj.Env is\n      (Source_File_Name : String;\n       In_Tree          : Project_Tree_Ref;\n       Project          : out Project_Id;\n-      Path             : out Name_Id);\n+      Path             : out File_Name_Type);\n    --  Returns the project of a source and its path in displayable form\n \n    generic"}, {"sha": "4ab0a90532249527fe7dce045a117c5a89577c1b", "filename": "gcc/ada/prj-ext.adb", "status": "modified", "additions": 102, "deletions": 65, "changes": 167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38c2fd0ca96783d989c5244439f5cb7862c17097/gcc%2Fada%2Fprj-ext.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38c2fd0ca96783d989c5244439f5cb7862c17097/gcc%2Fada%2Fprj-ext.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.adb?ref=38c2fd0ca96783d989c5244439f5cb7862c17097", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2000-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,7 +26,6 @@\n \n with Hostparm;\n with Makeutl;  use Makeutl;\n-with Namet;    use Namet;\n with Output;   use Output;\n with Osint;    use Osint;\n with Sdefault;\n@@ -68,6 +67,15 @@ package body Prj.Ext is\n    --  first for external reference in this table, before checking the\n    --  environment. Htable is emptied (reset) by procedure Reset.\n \n+   package Search_Directories is new Table.Table\n+     (Table_Component_Type => Name_Id,\n+      Table_Index_Type     => Natural,\n+      Table_Low_Bound      => 1,\n+      Table_Initial        => 4,\n+      Table_Increment      => 100,\n+      Table_Name           => \"Prj.Ext.Search_Directories\");\n+   --  The table for the directories specified with -aP switches\n+\n    ---------\n    -- Add --\n    ---------\n@@ -89,6 +97,17 @@ package body Prj.Ext is\n       Htable.Set (The_Key, The_Value);\n    end Add;\n \n+   ----------------------------------\n+   -- Add_Search_Project_Directory --\n+   ----------------------------------\n+\n+   procedure Add_Search_Project_Directory (Path : String) is\n+   begin\n+      Name_Len := 0;\n+      Add_Str_To_Name_Buffer (Path);\n+      Search_Directories.Append (Name_Find);\n+   end Add_Search_Project_Directory;\n+\n    -----------\n    -- Check --\n    -----------\n@@ -121,10 +140,15 @@ package body Prj.Ext is\n       Last            : Positive;\n       New_Len         : Positive;\n       New_Last        : Positive;\n-      Prj_Path        : String_Access := Gpr_Prj_Path;\n+      Prj_Path        : String_Access := null;\n \n    begin\n       if Gpr_Prj_Path.all /= \"\" then\n+         if Hostparm.OpenVMS then\n+            Prj_Path := To_Canonical_Path_Spec (\"GPR_PROJECT_PATH:\");\n+         else\n+            Prj_Path := To_Canonical_Path_Spec (Gpr_Prj_Path.all);\n+         end if;\n \n          --  Warn if both environment variables are defined\n \n@@ -133,89 +157,102 @@ package body Prj.Ext is\n             Write_Line (\"         when GPR_PROJECT_PATH is defined\");\n          end if;\n \n-      else\n-         Prj_Path := Ada_Prj_Path;\n+      elsif Ada_Prj_Path.all /= \"\" then\n+         if Hostparm.OpenVMS then\n+            Prj_Path := To_Canonical_Path_Spec (\"ADA_PROJECT_PATH:\");\n+         else\n+            Prj_Path := To_Canonical_Path_Spec (Ada_Prj_Path.all);\n+         end if;\n       end if;\n \n       --  The current directory is always first\n \n       Name_Len := 1;\n       Name_Buffer (Name_Len) := '.';\n \n-      --  If environment variable is defined and not empty, add its content\n+      --  If there are directories in the Search_Directories table, add them\n+\n+      for J in 1 .. Search_Directories.Last loop\n+         Name_Len := Name_Len + 1;\n+         Name_Buffer (Name_Len) := Path_Separator;\n+         Add_Str_To_Name_Buffer\n+           (Get_Name_String (Search_Directories.Table (J)));\n+      end loop;\n+\n+      --  If environment variable is defined, add its content\n \n-      if Prj_Path.all /= \"\" then\n+      if Prj_Path /= null then\n          Name_Len := Name_Len + 1;\n          Name_Buffer (Name_Len) := Path_Separator;\n \n          Add_Str_To_Name_Buffer (Prj_Path.all);\n+      end if;\n \n-         --  Scan the directory path to see if \"-\" is one of the directories.\n-         --  Remove each occurence of \"-\" and set Add_Default_Dir to False.\n-         --  Also resolve relative paths and symbolic links.\n+      --  Scan the directory path to see if \"-\" is one of the directories.\n+      --  Remove each occurence of \"-\" and set Add_Default_Dir to False.\n+      --  Also resolve relative paths and symbolic links.\n \n-         First := 3;\n+      First := 3;\n+      loop\n+         while First <= Name_Len\n+           and then (Name_Buffer (First) = Path_Separator)\n          loop\n-            while First <= Name_Len\n-              and then (Name_Buffer (First) = Path_Separator)\n-            loop\n-               First := First + 1;\n-            end loop;\n+            First := First + 1;\n+         end loop;\n+\n+         exit when First > Name_Len;\n+\n+         Last := First;\n+\n+         while Last < Name_Len\n+           and then Name_Buffer (Last + 1) /= Path_Separator\n+         loop\n+            Last := Last + 1;\n+         end loop;\n \n-            exit when First > Name_Len;\n+         --  If the directory is \"-\", set Add_Default_Dir to False and\n+         --  remove from path.\n \n-            Last := First;\n+         if Name_Buffer (First .. Last) = No_Project_Default_Dir then\n+            Add_Default_Dir := False;\n \n-            while Last < Name_Len\n-              and then Name_Buffer (Last + 1) /= Path_Separator\n-            loop\n-               Last := Last + 1;\n+            for J in Last + 1 .. Name_Len loop\n+               Name_Buffer (J - No_Project_Default_Dir'Length - 1) :=\n+                 Name_Buffer (J);\n             end loop;\n \n-            --  If the directory is \"-\", set Add_Default_Dir to False and\n-            --  remove from path.\n-\n-            if Name_Buffer (First .. Last) = No_Project_Default_Dir then\n-               Add_Default_Dir := False;\n-\n-               for J in Last + 1 .. Name_Len loop\n-                  Name_Buffer (J - No_Project_Default_Dir'Length - 1) :=\n-                    Name_Buffer (J);\n-               end loop;\n-\n-               Name_Len := Name_Len - No_Project_Default_Dir'Length - 1;\n-\n-            elsif not Hostparm.OpenVMS\n-              or else not Is_Absolute_Path (Name_Buffer (First .. Last))\n-            then\n-               --  On VMS, only expand relative path names, as absolute paths\n-               --  may correspond to multi-valued VMS logical names.\n-\n-               declare\n-                  New_Dir : constant String :=\n-                              Normalize_Pathname (Name_Buffer (First .. Last));\n-\n-               begin\n-                  --  If the absolute path was resolved and is different from\n-                  --  the original, replace original with the resolved path.\n-\n-                  if New_Dir /= Name_Buffer (First .. Last)\n-                    and then New_Dir'Length /= 0\n-                  then\n-                     New_Len := Name_Len + New_Dir'Length - (Last - First + 1);\n-                     New_Last := First + New_Dir'Length - 1;\n-                     Name_Buffer (New_Last + 1 .. New_Len) :=\n-                       Name_Buffer (Last + 1 .. Name_Len);\n-                     Name_Buffer (First .. New_Last) := New_Dir;\n-                     Name_Len := New_Len;\n-                     Last := New_Last;\n-                  end if;\n-               end;\n-            end if;\n+            Name_Len := Name_Len - No_Project_Default_Dir'Length - 1;\n+\n+         elsif not Hostparm.OpenVMS\n+           or else not Is_Absolute_Path (Name_Buffer (First .. Last))\n+         then\n+            --  On VMS, only expand relative path names, as absolute paths\n+            --  may correspond to multi-valued VMS logical names.\n+\n+            declare\n+               New_Dir : constant String :=\n+                           Normalize_Pathname (Name_Buffer (First .. Last));\n+\n+            begin\n+               --  If the absolute path was resolved and is different from\n+               --  the original, replace original with the resolved path.\n+\n+               if New_Dir /= Name_Buffer (First .. Last)\n+                 and then New_Dir'Length /= 0\n+               then\n+                  New_Len := Name_Len + New_Dir'Length - (Last - First + 1);\n+                  New_Last := First + New_Dir'Length - 1;\n+                  Name_Buffer (New_Last + 1 .. New_Len) :=\n+                    Name_Buffer (Last + 1 .. Name_Len);\n+                  Name_Buffer (First .. New_Last) := New_Dir;\n+                  Name_Len := New_Len;\n+                  Last := New_Last;\n+               end if;\n+            end;\n+         end if;\n \n-            First := Last + 1;\n-         end loop;\n-      end if;\n+         First := Last + 1;\n+      end loop;\n \n       --  Set the initial value of Current_Project_Path\n "}, {"sha": "c8ffaef81c00276f2cccc59903af06e775f8c1ea", "filename": "gcc/ada/prj-ext.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38c2fd0ca96783d989c5244439f5cb7862c17097/gcc%2Fada%2Fprj-ext.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38c2fd0ca96783d989c5244439f5cb7862c17097/gcc%2Fada%2Fprj-ext.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.ads?ref=38c2fd0ca96783d989c5244439f5cb7862c17097", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,6 +29,12 @@\n \n package Prj.Ext is\n \n+   procedure Add_Search_Project_Directory (Path : String);\n+   --  Add a directory to the project path. Directories added with this\n+   --  procedure are added in order after the current directory and before\n+   --  the path given by the environment variable GPR_PROJECT_PATH. A value\n+   --  of \"-\" will remove the default project directory from the project path.\n+\n    function Project_Path return String;\n    --  Return the current value of the project path, either the value set\n    --  during elaboration of the package or, if procedure Set_Project_Path has"}, {"sha": "ea7807b3ac499ad4e96a25b1283a8323b896225b", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 59, "deletions": 52, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38c2fd0ca96783d989c5244439f5cb7862c17097/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38c2fd0ca96783d989c5244439f5cb7862c17097/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=38c2fd0ca96783d989c5244439f5cb7862c17097", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2006, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,7 +26,6 @@\n \n with Ada.Characters.Handling; use Ada.Characters.Handling;\n \n-with Namet;    use Namet;\n with Output;   use Output;\n with Osint;    use Osint;\n with Prj.Attr;\n@@ -46,9 +45,9 @@ package body Prj is\n \n    Name_C_Plus_Plus : Name_Id;\n \n-   Default_Ada_Spec_Suffix_Id : Name_Id;\n-   Default_Ada_Body_Suffix_Id : Name_Id;\n-   Slash_Id                   : Name_Id;\n+   Default_Ada_Spec_Suffix_Id : File_Name_Type;\n+   Default_Ada_Body_Suffix_Id : File_Name_Type;\n+   Slash_Id                   : File_Name_Type;\n    --  Initialized in Prj.Initialized, then never modified\n \n    subtype Known_Casing is Casing_Type range All_Upper_Case .. Mixed_Case;\n@@ -60,22 +59,23 @@ package body Prj is\n \n    Initialized : Boolean := False;\n \n-   Standard_Dot_Replacement      : constant Name_Id :=\n-     First_Name_Id + Character'Pos ('-');\n+   Standard_Dot_Replacement : constant File_Name_Type :=\n+                                File_Name_Type\n+                                  (First_Name_Id + Character'Pos ('-'));\n \n    Std_Naming_Data : Naming_Data :=\n      (Dot_Replacement           => Standard_Dot_Replacement,\n       Dot_Repl_Loc              => No_Location,\n       Casing                    => All_Lower_Case,\n       Spec_Suffix               => No_Array_Element,\n-      Ada_Spec_Suffix           => No_Name,\n+      Ada_Spec_Suffix           => No_File,\n       Spec_Suffix_Loc           => No_Location,\n       Impl_Suffixes             => No_Impl_Suffixes,\n       Supp_Suffixes             => No_Supp_Language_Index,\n       Body_Suffix               => No_Array_Element,\n-      Ada_Body_Suffix           => No_Name,\n+      Ada_Body_Suffix           => No_File,\n       Body_Suffix_Loc           => No_Location,\n-      Separate_Suffix           => No_Name,\n+      Separate_Suffix           => No_File,\n       Sep_Suffix_Loc            => No_Location,\n       Specs                     => No_Array_Element,\n       Bodies                    => No_Array_Element,\n@@ -89,27 +89,28 @@ package body Prj is\n       First_Referred_By              => No_Project,\n       Name                           => No_Name,\n       Display_Name                   => No_Name,\n-      Path_Name                      => No_Name,\n-      Display_Path_Name              => No_Name,\n+      Path_Name                      => No_Path,\n+      Display_Path_Name              => No_Path,\n       Virtual                        => False,\n       Location                       => No_Location,\n       Mains                          => Nil_String,\n-      Directory                      => No_Name,\n-      Display_Directory              => No_Name,\n+      Directory                      => No_Path,\n+      Display_Directory              => No_Path,\n       Dir_Path                       => null,\n       Library                        => False,\n-      Library_Dir                    => No_Name,\n-      Display_Library_Dir            => No_Name,\n-      Library_Src_Dir                => No_Name,\n-      Display_Library_Src_Dir        => No_Name,\n-      Library_ALI_Dir                => No_Name,\n-      Display_Library_ALI_Dir        => No_Name,\n-      Library_Name                   => No_Name,\n+      Library_Dir                    => No_Path,\n+      Display_Library_Dir            => No_Path,\n+      Library_Src_Dir                => No_Path,\n+      Display_Library_Src_Dir        => No_Path,\n+      Library_ALI_Dir                => No_Path,\n+      Display_Library_ALI_Dir        => No_Path,\n+      Library_Name                   => No_File,\n       Library_Kind                   => Static,\n-      Lib_Internal_Name              => No_Name,\n+      Lib_Internal_Name              => No_File,\n       Standalone_Library             => False,\n       Lib_Interface_ALIs             => Nil_String,\n       Lib_Auto_Init                  => False,\n+      Libgnarl_Needed                => Unknown,\n       Symbol_Data                    => No_Symbols,\n       Ada_Sources_Present            => True,\n       Other_Sources_Present          => True,\n@@ -121,27 +122,27 @@ package body Prj is\n       Include_Data_Set               => False,\n       Source_Dirs                    => Nil_String,\n       Known_Order_Of_Source_Dirs     => True,\n-      Object_Directory               => No_Name,\n-      Display_Object_Dir             => No_Name,\n+      Object_Directory               => No_Path,\n+      Display_Object_Dir             => No_Path,\n       Library_TS                     => Empty_Time_Stamp,\n-      Exec_Directory                 => No_Name,\n-      Display_Exec_Dir               => No_Name,\n+      Exec_Directory                 => No_Path,\n+      Display_Exec_Dir               => No_Path,\n       Extends                        => No_Project,\n       Extended_By                    => No_Project,\n       Naming                         => Std_Naming_Data,\n       First_Language_Processing      => Default_First_Language_Processing_Data,\n       Supp_Language_Processing       => No_Supp_Language_Index,\n-      Default_Linker                 => No_Name,\n-      Default_Linker_Path            => No_Name,\n+      Default_Linker                 => No_File,\n+      Default_Linker_Path            => No_Path,\n       Decl                           => No_Declarations,\n       Imported_Projects              => Empty_Project_List,\n       All_Imported_Projects          => Empty_Project_List,\n       Ada_Include_Path               => null,\n       Ada_Objects_Path               => null,\n-      Include_Path_File              => No_Name,\n-      Objects_Path_File_With_Libs    => No_Name,\n-      Objects_Path_File_Without_Libs => No_Name,\n-      Config_File_Name               => No_Name,\n+      Include_Path_File              => No_Path,\n+      Objects_Path_File_With_Libs    => No_Path,\n+      Objects_Path_File_Without_Libs => No_Path,\n+      Config_File_Name               => No_Path,\n       Config_File_Temp               => False,\n       Config_Checked                 => False,\n       Language_Independent_Checked   => False,\n@@ -182,8 +183,7 @@ package body Prj is\n \n       while Last + S'Length > To'Last loop\n          declare\n-            New_Buffer : constant  String_Access :=\n-                           new String (1 .. 2 * Last);\n+            New_Buffer : constant  String_Access := new String (1 .. 2 * Last);\n \n          begin\n             New_Buffer (1 .. Last) := To (1 .. Last);\n@@ -200,7 +200,7 @@ package body Prj is\n    -- Default_Ada_Body_Suffix --\n    -----------------------------\n \n-   function Default_Ada_Body_Suffix return Name_Id is\n+   function Default_Ada_Body_Suffix return File_Name_Type is\n    begin\n       return Default_Ada_Body_Suffix_Id;\n    end Default_Ada_Body_Suffix;\n@@ -209,7 +209,7 @@ package body Prj is\n    -- Default_Ada_Spec_Suffix --\n    -----------------------------\n \n-   function Default_Ada_Spec_Suffix return Name_Id is\n+   function Default_Ada_Spec_Suffix return File_Name_Type is\n    begin\n       return Default_Ada_Spec_Suffix_Id;\n    end Default_Ada_Spec_Suffix;\n@@ -314,6 +314,11 @@ package body Prj is\n       return Hash (Get_Name_String (Name));\n    end Hash;\n \n+   function Hash (Name : File_Name_Type) return Header_Num is\n+   begin\n+      return Hash (Get_Name_String (Name));\n+   end Hash;\n+\n    -----------\n    -- Image --\n    -----------\n@@ -454,13 +459,13 @@ package body Prj is\n \n    procedure Register_Default_Naming_Scheme\n      (Language            : Name_Id;\n-      Default_Spec_Suffix : Name_Id;\n-      Default_Body_Suffix : Name_Id;\n+      Default_Spec_Suffix : File_Name_Type;\n+      Default_Body_Suffix : File_Name_Type;\n       In_Tree             : Project_Tree_Ref)\n    is\n-      Lang : Name_Id;\n-      Suffix : Array_Element_Id;\n-      Found : Boolean := False;\n+      Lang    : Name_Id;\n+      Suffix  : Array_Element_Id;\n+      Found   : Boolean := False;\n       Element : Array_Element;\n \n    begin\n@@ -481,7 +486,7 @@ package body Prj is\n \n          if Element.Index = Lang then\n             Found := True;\n-            Element.Value.Value := Default_Spec_Suffix;\n+            Element.Value.Value := Name_Id (Default_Spec_Suffix);\n             In_Tree.Array_Elements.Table (Suffix) := Element;\n \n          else\n@@ -500,13 +505,15 @@ package body Prj is\n                       Kind     => Single,\n                       Location => No_Location,\n                       Default  => False,\n-                      Value    => Default_Spec_Suffix,\n+                      Value    => Name_Id (Default_Spec_Suffix),\n                       Index    => 0),\n             Next  => In_Tree.Private_Part.Default_Naming.Spec_Suffix);\n+\n          Array_Element_Table.Increment_Last (In_Tree.Array_Elements);\n+\n          In_Tree.Array_Elements.Table\n-           (Array_Element_Table.Last (In_Tree.Array_Elements)) :=\n-            Element;\n+           (Array_Element_Table.Last (In_Tree.Array_Elements)) := Element;\n+\n          In_Tree.Private_Part.Default_Naming.Spec_Suffix :=\n            Array_Element_Table.Last (In_Tree.Array_Elements);\n       end if;\n@@ -522,7 +529,7 @@ package body Prj is\n \n          if Element.Index = Lang then\n             Found := True;\n-            Element.Value.Value := Default_Body_Suffix;\n+            Element.Value.Value := Name_Id (Default_Body_Suffix);\n             In_Tree.Array_Elements.Table (Suffix) := Element;\n \n          else\n@@ -541,7 +548,7 @@ package body Prj is\n                       Kind     => Single,\n                       Location => No_Location,\n                       Default  => False,\n-                      Value    => Default_Body_Suffix,\n+                      Value    => Name_Id (Default_Body_Suffix),\n                       Index    => 0),\n             Next  => In_Tree.Private_Part.Default_Naming.Body_Suffix);\n          Array_Element_Table.Increment_Last\n@@ -703,7 +710,7 @@ package body Prj is\n    end Set;\n \n    procedure Set\n-     (Suffix       : Name_Id;\n+     (Suffix       : File_Name_Type;\n       For_Language : Language_Index;\n       In_Project   : in out Project_Data;\n       In_Tree      : Project_Tree_Ref)\n@@ -752,7 +759,7 @@ package body Prj is\n    -- Slash --\n    -----------\n \n-   function Slash return Name_Id is\n+   function Slash return File_Name_Type is\n    begin\n       return Slash_Id;\n    end Slash;\n@@ -781,12 +788,12 @@ package body Prj is\n    function Suffix_Of\n      (Language   : Language_Index;\n       In_Project : Project_Data;\n-      In_Tree    : Project_Tree_Ref) return Name_Id\n+      In_Tree    : Project_Tree_Ref) return File_Name_Type\n    is\n    begin\n       case Language is\n          when No_Language_Index =>\n-            return No_Name;\n+            return No_File;\n \n          when First_Language_Indexes =>\n             return In_Project.Naming.Impl_Suffixes (Language);\n@@ -808,7 +815,7 @@ package body Prj is\n                   Supp_Index := Supp.Next;\n                end loop;\n \n-               return No_Name;\n+               return No_File;\n             end;\n       end case;\n    end  Suffix_Of;"}]}