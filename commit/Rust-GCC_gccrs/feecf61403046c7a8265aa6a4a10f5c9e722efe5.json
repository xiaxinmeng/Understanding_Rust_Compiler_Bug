{"sha": "feecf61403046c7a8265aa6a4a10f5c9e722efe5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVlY2Y2MTQwMzA0NmM3YTgyNjVhYTZhNGExMGY1YzllNzIyZWZlNQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-03-08T08:16:06Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-03-08T08:16:06Z"}, "message": "re PR libstdc++/9424 (i/ostream::operator>>/<<(streambuf*) drops characters)\n\n2003-03-08  Paolo Carlini <pcarlini@unitus.it>\n\t    Petur Runolfsson  <peturr02@ru.is>\n\n\tPR libstdc++/9424\n\t* include/bits/streambuf.tcc (__copy_streambufs): Use\n\tsgetn-sputn only when sputn cannot fail, otherwise fall back\n\tto safe snextc-sputc.\n\t* testsuite/27_io/streambuf_members.cc (test11, test12): Add.\n\nCo-Authored-By: Petur Runolfsson <peturr02@ru.is>\n\nFrom-SVN: r63974", "tree": {"sha": "9718ebdfec13ed6a37f4d78228aa105a9125271e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9718ebdfec13ed6a37f4d78228aa105a9125271e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/feecf61403046c7a8265aa6a4a10f5c9e722efe5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feecf61403046c7a8265aa6a4a10f5c9e722efe5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/feecf61403046c7a8265aa6a4a10f5c9e722efe5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feecf61403046c7a8265aa6a4a10f5c9e722efe5/comments", "author": null, "committer": null, "parents": [{"sha": "ed97aa662b866f3f17e09f52740ad3acfe1cebe5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed97aa662b866f3f17e09f52740ad3acfe1cebe5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed97aa662b866f3f17e09f52740ad3acfe1cebe5"}], "stats": {"total": 132, "additions": 126, "deletions": 6}, "files": [{"sha": "1ada07bc7810d6e6468edc5a87fa853b0e1513f2", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feecf61403046c7a8265aa6a4a10f5c9e722efe5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feecf61403046c7a8265aa6a4a10f5c9e722efe5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=feecf61403046c7a8265aa6a4a10f5c9e722efe5", "patch": "@@ -1,3 +1,12 @@\n+2003-03-08  Paolo Carlini <pcarlini@unitus.it>\n+            Petur Runolfsson  <peturr02@ru.is>\n+\n+\tPR libstdc++/9424\n+\t* include/bits/streambuf.tcc (__copy_streambufs): Use\n+\tsgetn-sputn only when sputn cannot fail, otherwise fall back\n+\tto safe snextc-sputc.\n+\t* testsuite/27_io/streambuf_members.cc (test11, test12): Add.\n+\n 2003-03-08  Jerry Quinn  <jlquinn@optonline.net>\n \n \t* include/bits/locale_facets.tcc (num_put::do_put(bool)): Use"}, {"sha": "6e9d192f34557e6249c0dfc775eac6496cb41afe", "filename": "libstdc++-v3/include/bits/streambuf.tcc", "status": "modified", "additions": 30, "deletions": 6, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feecf61403046c7a8265aa6a4a10f5c9e722efe5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feecf61403046c7a8265aa6a4a10f5c9e722efe5/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc?ref=feecf61403046c7a8265aa6a4a10f5c9e722efe5", "patch": "@@ -193,6 +193,9 @@ namespace std\n       streamsize __ret = 0;\n       streamsize __bufsize = __sbin->in_avail();\n       streamsize __xtrct;\n+      const typename _Traits::off_type __size_opt =\n+\t__sbin->_M_buf_size_opt > 0 ? __sbin->_M_buf_size_opt : 1;\n+\n       try \n \t{\n \t  while (__bufsize != -1)\n@@ -208,12 +211,33 @@ namespace std\n \t\t}\n  \t      else \n \t\t{\n-\t\t  size_t __size =\n-\t\t    __sbin->_M_buf_size_opt > 0 ? __sbin->_M_buf_size_opt : 1;\n-\t\t  _CharT* __buf =\n-\t\t    static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) * __size));\n-\t\t  streamsize __charsread = __sbin->sgetn(__buf, __size);\n-\t\t  __xtrct = __sbout->sputn(__buf, __charsread);\n+\t\t  streamsize __charsread;\n+\t\t  const streamsize __size =\n+\t\t    std::min(__size_opt, __sbout->_M_out_buf_size());\n+\t\t  if (__size > 1)\n+\t\t    {\n+\t\t      _CharT* __buf =\n+\t\t\tstatic_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)\n+\t\t\t\t\t\t\t      * __size));\n+\t\t      // Since the next sputn cannot fail sgetn can be\n+\t\t      // safely used.\n+\t\t      __charsread = __sbin->sgetn(__buf, __size);\n+\t\t      __xtrct = __sbout->sputn(__buf, __charsread);\n+\t\t    }\n+\t\t  else\n+\t\t    {\n+\t\t      __xtrct = __charsread = 0;\n+\t\t      int_type __c = __sbin->sgetc();\n+\t\t      while (!_Traits::eq_int_type(__c, _Traits::eof()))\n+\t\t\t{\n+\t\t\t  ++__charsread;\n+\t\t\t  if (_Traits::eq_int_type(__sbout->sputc(_Traits::to_char_type(__c)),\n+\t\t\t\t\t\t   _Traits::eof()))\n+\t\t\t    break;\n+\t\t\t  ++__xtrct;\n+\t\t\t  __c = __sbin->snextc();\n+\t\t\t}\n+\t\t    }\t\t      \n \t\t  __ret += __xtrct;\n \t\t  if (__xtrct != __charsread)\n \t\t    break;"}, {"sha": "d7ae5693d33488d4ff676601beae4b88fbe0381e", "filename": "libstdc++-v3/testsuite/27_io/streambuf_members.cc", "status": "modified", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feecf61403046c7a8265aa6a4a10f5c9e722efe5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstreambuf_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feecf61403046c7a8265aa6a4a10f5c9e722efe5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstreambuf_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fstreambuf_members.cc?ref=feecf61403046c7a8265aa6a4a10f5c9e722efe5", "patch": "@@ -431,6 +431,91 @@ void test10()\n   VERIFY( buf.result() == \"Bad Moon Rising\" );\n }\n \n+// libstdc++/9424\n+class Outbuf_2 : public std::streambuf\n+{\n+  char buf[1];\n+\n+public:\n+  Outbuf_2()\n+  {\n+    setp(buf, buf + 1);\n+  }\n+\n+  int_type overflow(int_type c)\n+  {\n+    int_type eof = traits_type::eof();\n+    \n+    if (pptr() < epptr())\n+      {\n+\tif (traits_type::eq_int_type(c, eof))\n+\t  return traits_type::not_eof(c);\n+\t\n+\t*pptr() = traits_type::to_char_type(c);\n+\tpbump(1);\n+\treturn c;\n+      }\n+\n+    return eof;\n+  }\n+};\n+\n+class Inbuf_2 : public std::streambuf\n+{\n+  static const char buf[];\n+  const char* current;\n+  int size;\n+\n+public:\n+  Inbuf_2()\n+  {\n+    current = buf;\n+    size = std::strlen(buf);\n+  }\n+  \n+  int_type underflow()\n+  {\n+    if (current < buf + size)\n+      return traits_type::to_int_type(*current);\n+    return traits_type::eof();\n+  }\n+  \n+  int_type uflow()\n+  {\n+    if (current < buf + size)\n+      return traits_type::to_int_type(*current++);\n+    return traits_type::eof();\n+  }\n+};\n+\n+const char Inbuf_2::buf[] = \"Atteivlis\";\n+\n+// <1>\n+void test11()\n+{\n+  bool test = true;\n+\n+  Inbuf_2 inbuf1;\n+  std::istream is(&inbuf1);\n+  Outbuf_2 outbuf1;\n+  is >> &outbuf1;\n+  VERIFY( inbuf1.sgetc() == 't' );\n+  VERIFY( is.good() );\n+}\n+\n+// <2>\n+void test12()\n+{ \n+  bool test = true;\n+ \n+  Outbuf_2 outbuf2;\n+  std::ostream os (&outbuf2);\n+  Inbuf_2 inbuf2;\n+  os << &inbuf2;\n+  VERIFY( inbuf2.sgetc() == 't' );\n+  VERIFY( os.good() );\n+}\n+\n int main() \n {\n   test01();\n@@ -445,5 +530,7 @@ int main()\n \n   test09();\n   test10();\n+  test11();\n+  test12();\n   return 0;\n }"}]}