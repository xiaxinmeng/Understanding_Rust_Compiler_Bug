{"sha": "c1e2889a320a2e45eb60b6bb7c1d3d8fc0068582", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFlMjg4OWEzMjBhMmU0NWViNjBiNmJiN2MxZDNkOGZjMDA2ODU4Mg==", "commit": {"author": {"name": "Ville Voutilainen", "email": "ville.voutilainen@gmail.com", "date": "2017-04-03T16:30:58Z"}, "committer": {"name": "Ville Voutilainen", "email": "ville@gcc.gnu.org", "date": "2017-04-03T16:30:58Z"}, "message": "re PR libstdc++/79141 (std::pair<int,int> p = {}; fails to compile due to ambiguous overload)\n\nPR libstdc++/79141\n* include/bits/stl_pair.h (__nonesuch_no_braces): New.\n(operator=(typename conditional<\n__and_<is_copy_assignable<_T1>,\nis_copy_assignable<_T2>>::value,\nconst pair&, const __nonesuch&>::type)): Change __nonesuch\nto __nonesuch_no_braces.\n(operator=(typename conditional<\n__not_<__and_<is_copy_assignable<_T1>,\nis_copy_assignable<_T2>>>::value,\nconst pair&, const __nonesuch&>::type)): Likewise.\n(operator=(typename conditional<\n__and_<is_move_assignable<_T1>,\nis_move_assignable<_T2>>::value,\npair&&, __nonesuch&&>::type)): Likewise.\n* testsuite/20_util/pair/79141.cc: New.\n\nFrom-SVN: r246653", "tree": {"sha": "974dd12e35bad8b7b5027c7ceb58c8960623a9fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/974dd12e35bad8b7b5027c7ceb58c8960623a9fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1e2889a320a2e45eb60b6bb7c1d3d8fc0068582", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1e2889a320a2e45eb60b6bb7c1d3d8fc0068582", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1e2889a320a2e45eb60b6bb7c1d3d8fc0068582", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1e2889a320a2e45eb60b6bb7c1d3d8fc0068582/comments", "author": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44bc146fcfa43559b27290329dd42158fa1222ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44bc146fcfa43559b27290329dd42158fa1222ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44bc146fcfa43559b27290329dd42158fa1222ad"}], "stats": {"total": 57, "additions": 54, "deletions": 3}, "files": [{"sha": "4073a82e2a331ef6a6d84f7fcc500b551ad8ee13", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1e2889a320a2e45eb60b6bb7c1d3d8fc0068582/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1e2889a320a2e45eb60b6bb7c1d3d8fc0068582/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c1e2889a320a2e45eb60b6bb7c1d3d8fc0068582", "patch": "@@ -1,3 +1,22 @@\n+2017-04-03  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\tPR libstdc++/79141\n+\t* include/bits/stl_pair.h (__nonesuch_no_braces): New.\n+\t(operator=(typename conditional<\n+\t__and_<is_copy_assignable<_T1>,\n+\tis_copy_assignable<_T2>>::value,\n+\tconst pair&, const __nonesuch&>::type)): Change __nonesuch\n+\tto __nonesuch_no_braces.\n+\t(operator=(typename conditional<\n+\t__not_<__and_<is_copy_assignable<_T1>,\n+\tis_copy_assignable<_T2>>>::value,\n+\tconst pair&, const __nonesuch&>::type)): Likewise.\n+\t(operator=(typename conditional<\n+\t__and_<is_move_assignable<_T1>,\n+\tis_move_assignable<_T2>>::value,\n+\tpair&&, __nonesuch&&>::type)): Likewise.\n+\t* testsuite/20_util/pair/79141.cc: New.\n+\n 2017-04-03  Ville Voutilainen  <ville.voutilainen@gmail.com>\n \n \tImplement std::is_aggregate."}, {"sha": "b6245b65cd10436987887c705dd7300025d1430a", "filename": "libstdc++-v3/include/bits/stl_pair.h", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1e2889a320a2e45eb60b6bb7c1d3d8fc0068582/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1e2889a320a2e45eb60b6bb7c1d3d8fc0068582/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h?ref=c1e2889a320a2e45eb60b6bb7c1d3d8fc0068582", "patch": "@@ -179,6 +179,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       }\n   };\n \n+  // PR libstdc++/79141, a utility type for preventing\n+  // initialization of an argument of a disabled assignment\n+  // operator from a pair of empty braces.\n+  struct __nonesuch_no_braces : std::__nonesuch {\n+    explicit __nonesuch_no_braces(const __nonesuch&) = delete;\n+  };\n+\n #endif\n \n  /**\n@@ -360,7 +367,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       operator=(typename conditional<\n \t\t__and_<is_copy_assignable<_T1>,\n \t\t       is_copy_assignable<_T2>>::value,\n-\t\tconst pair&, const __nonesuch&>::type __p)\n+\t\tconst pair&, const __nonesuch_no_braces&>::type __p)\n       {\n \tfirst = __p.first;\n \tsecond = __p.second;\n@@ -371,13 +378,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       operator=(typename conditional<\n \t\t__not_<__and_<is_copy_assignable<_T1>,\n \t\t              is_copy_assignable<_T2>>>::value,\n-\t\tconst pair&, const __nonesuch&>::type __p) = delete;\n+\t\tconst pair&, const __nonesuch_no_braces&>::type __p) = delete;\n \n       pair&\n       operator=(typename conditional<\n \t\t__and_<is_move_assignable<_T1>,\n \t\t       is_move_assignable<_T2>>::value,\n-\t\tpair&&, __nonesuch&&>::type __p)\n+\t\tpair&&, __nonesuch_no_braces&&>::type __p)\n       noexcept(__and_<is_nothrow_move_assignable<_T1>,\n \t              is_nothrow_move_assignable<_T2>>::value)\n       {"}, {"sha": "d4b5c9443f2b5f88393dab5a31aeff187ca8811c", "filename": "libstdc++-v3/testsuite/20_util/pair/79141.cc", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1e2889a320a2e45eb60b6bb7c1d3d8fc0068582/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F79141.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1e2889a320a2e45eb60b6bb7c1d3d8fc0068582/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F79141.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fpair%2F79141.cc?ref=c1e2889a320a2e45eb60b6bb7c1d3d8fc0068582", "patch": "@@ -0,0 +1,25 @@\n+// { dg-do compile { target c++11 } }\n+\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <utility>\n+\n+int main() {\n+    std::pair<int,int> p;\n+    p = {};\n+}"}]}