{"sha": "07d05ffdacf03e30bc013c814366295a9a32f9d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdkMDVmZmRhY2YwM2UzMGJjMDEzYzgxNDM2NjI5NWE5YTMyZjlkNw==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2004-11-17T23:47:21Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2004-11-17T23:47:21Z"}, "message": "target-supports.exp (check_effective_target_vect_int): New\n\n\t* lib/target-supports.exp (check_effective_target_vect_int): New\n\t(check_effective_target_vect_float): New\n\t(check_effective_target_vect_double): New.\n\t(is-effective-target): Support new effective targets keywords.\n\t* gcc.dg/vect/vect.exp: Set target-dependent vector flags and\n\tdefault action for dg-do.\n\t* gcc.dg/vect/pr16105.c: Use new support.\n\t* gcc.dg/vect/pr18400.c: Ditto.\n\t* gcc.dg/vect/pr18425.c: Ditto.\n\t* gcc.dg/vect/vect-1.c: Ditto.\n\t* gcc.dg/vect/vect-10.c: Ditto.\n\t* gcc.dg/vect/vect-11.c: Ditto.\n\t* gcc.dg/vect/vect-12.c: Ditto.\n\t* gcc.dg/vect/vect-13.c: Ditto.\n\t* gcc.dg/vect/vect-14.c: Ditto.\n\t* gcc.dg/vect/vect-15.c: Ditto.\n\t* gcc.dg/vect/vect-16.c: Ditto.\n\t* gcc.dg/vect/vect-17.c: Ditto.\n\t* gcc.dg/vect/vect-18.c: Ditto.\n\t* gcc.dg/vect/vect-19.c: Ditto.\n\t* gcc.dg/vect/vect-2.c: Ditto.\n\t* gcc.dg/vect/vect-20.c: Ditto.\n\t* gcc.dg/vect/vect-21.c: Ditto.\n\t* gcc.dg/vect/vect-22.c: Ditto.\n\t* gcc.dg/vect/vect-23.c: Ditto.\n\t* gcc.dg/vect/vect-24.c: Ditto.\n\t* gcc.dg/vect/vect-25.c: Ditto.\n\t* gcc.dg/vect/vect-26.c: Ditto.\n\t* gcc.dg/vect/vect-27.c: Ditto.\n\t* gcc.dg/vect/vect-27a.c: Ditto.\n\t* gcc.dg/vect/vect-28.c: Ditto.\n\t* gcc.dg/vect/vect-29.c: Ditto.\n\t* gcc.dg/vect/vect-29a.c: Ditto.\n\t* gcc.dg/vect/vect-3.c: Ditto.\n\t* gcc.dg/vect/vect-30.c: Ditto.\n\t* gcc.dg/vect/vect-31.c: Ditto.\n\t* gcc.dg/vect/vect-32.c: Ditto.\n\t* gcc.dg/vect/vect-33.c: Ditto.\n\t* gcc.dg/vect/vect-34.c: Ditto.\n\t* gcc.dg/vect/vect-35.c: Ditto.\n\t* gcc.dg/vect/vect-36.c: Ditto.\n\t* gcc.dg/vect/vect-37.c: Ditto.\n\t* gcc.dg/vect/vect-38.c: Ditto.\n\t* gcc.dg/vect/vect-4.c: Ditto.\n\t* gcc.dg/vect/vect-40.c: Ditto.\n\t* gcc.dg/vect/vect-41.c: Ditto.\n\t* gcc.dg/vect/vect-42.c: Ditto.\n\t* gcc.dg/vect/vect-43.c: Ditto.\n\t* gcc.dg/vect/vect-44.c: Ditto.\n\t* gcc.dg/vect/vect-45.c: Ditto.\n\t* gcc.dg/vect/vect-46.c: Ditto.\n\t* gcc.dg/vect/vect-47.c: Ditto.\n\t* gcc.dg/vect/vect-48.c: Ditto.\n\t* gcc.dg/vect/vect-48a.c: Ditto.\n\t* gcc.dg/vect/vect-49.c: Ditto.\n\t* gcc.dg/vect/vect-5.c: Ditto.\n\t* gcc.dg/vect/vect-50.c: Ditto.\n\t* gcc.dg/vect/vect-51.c: Ditto.\n\t* gcc.dg/vect/vect-52.c: Ditto.\n\t* gcc.dg/vect/vect-53.c: Ditto.\n\t* gcc.dg/vect/vect-54.c: Ditto.\n\t* gcc.dg/vect/vect-55.c: Ditto.\n\t* gcc.dg/vect/vect-56.c: Ditto.\n\t* gcc.dg/vect/vect-56a.c: Ditto.\n\t* gcc.dg/vect/vect-57.c: Ditto.\n\t* gcc.dg/vect/vect-58.c: Ditto.\n\t* gcc.dg/vect/vect-59.c: Ditto.\n\t* gcc.dg/vect/vect-6.c: Ditto.\n\t* gcc.dg/vect/vect-60.c: Ditto.\n\t* gcc.dg/vect/vect-61.c: Ditto.\n\t* gcc.dg/vect/vect-62.c: Ditto.\n\t* gcc.dg/vect/vect-63.c: Ditto.\n\t* gcc.dg/vect/vect-64.c: Ditto.\n\t* gcc.dg/vect/vect-65.c: Ditto.\n\t* gcc.dg/vect/vect-66.c: Ditto.\n\t* gcc.dg/vect/vect-67.c: Ditto.\n\t* gcc.dg/vect/vect-68.c: Ditto.\n\t* gcc.dg/vect/vect-69.c: Ditto.\n\t* gcc.dg/vect/vect-7.c: Ditto.\n\t* gcc.dg/vect/vect-72.c: Ditto.\n\t* gcc.dg/vect/vect-72a.c: Ditto.\n\t* gcc.dg/vect/vect-73.c: Ditto.\n\t* gcc.dg/vect/vect-74.c: Ditto.\n\t* gcc.dg/vect/vect-75.c: Ditto.\n\t* gcc.dg/vect/vect-76.c: Ditto.\n\t* gcc.dg/vect/vect-77.c: Ditto.\n\t* gcc.dg/vect/vect-77a.c: Ditto.\n\t* gcc.dg/vect/vect-78.c: Ditto.\n\t* gcc.dg/vect/vect-79.c: Ditto.\n\t* gcc.dg/vect/vect-8.c: Ditto.\n\t* gcc.dg/vect/vect-80.c: Ditto.\n\t* gcc.dg/vect/vect-82.c: Ditto.\n\t* gcc.dg/vect/vect-82_64.c: Ditto.\n\t* gcc.dg/vect/vect-83.c: Ditto.\n\t* gcc.dg/vect/vect-83_64.c: Ditto.\n\t* gcc.dg/vect/vect-9.c: Ditto.\n\t* gcc.dg/vect/vect-all.c: Ditto.\n\t* gcc.dg/vect/vect-none.c: Ditto.\n\nCo-Authored-By: Aldy Hernandez <aldyh@redhat.com>\n\nFrom-SVN: r90831", "tree": {"sha": "4c09b68e921301aa91303cfde6081930ace4f46a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c09b68e921301aa91303cfde6081930ace4f46a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07d05ffdacf03e30bc013c814366295a9a32f9d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07d05ffdacf03e30bc013c814366295a9a32f9d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07d05ffdacf03e30bc013c814366295a9a32f9d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07d05ffdacf03e30bc013c814366295a9a32f9d7/comments", "author": null, "committer": null, "parents": [{"sha": "2b45d4823dd7db0c5c4d3fef9290969f1b29a7e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b45d4823dd7db0c5c4d3fef9290969f1b29a7e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b45d4823dd7db0c5c4d3fef9290969f1b29a7e6"}], "stats": {"total": 891, "additions": 386, "deletions": 505}, "files": [{"sha": "5a23be6c3ab072c8e8f2f9640e7e4a09084fcef8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,3 +1,105 @@\n+2004-11-17  Janis Johnson  <janis187@us.ibm.com>\n+            Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_vect_int): New\n+\t(check_effective_target_vect_float): New\n+\t(check_effective_target_vect_double): New.\n+\t(is-effective-target): Support new effective targets keywords.\n+\t* gcc.dg/vect/vect.exp: Set target-dependent vector flags and\n+\tdefault action for dg-do.\n+\t* gcc.dg/vect/pr16105.c: Use new support.\n+\t* gcc.dg/vect/pr18400.c: Ditto.\n+\t* gcc.dg/vect/pr18425.c: Ditto.\n+\t* gcc.dg/vect/vect-1.c: Ditto.\n+\t* gcc.dg/vect/vect-10.c: Ditto.\n+\t* gcc.dg/vect/vect-11.c: Ditto.\n+\t* gcc.dg/vect/vect-12.c: Ditto.\n+\t* gcc.dg/vect/vect-13.c: Ditto.\n+\t* gcc.dg/vect/vect-14.c: Ditto.\n+\t* gcc.dg/vect/vect-15.c: Ditto.\n+\t* gcc.dg/vect/vect-16.c: Ditto.\n+\t* gcc.dg/vect/vect-17.c: Ditto.\n+\t* gcc.dg/vect/vect-18.c: Ditto.\n+\t* gcc.dg/vect/vect-19.c: Ditto.\n+\t* gcc.dg/vect/vect-2.c: Ditto.\n+\t* gcc.dg/vect/vect-20.c: Ditto.\n+\t* gcc.dg/vect/vect-21.c: Ditto.\n+\t* gcc.dg/vect/vect-22.c: Ditto.\n+\t* gcc.dg/vect/vect-23.c: Ditto.\n+\t* gcc.dg/vect/vect-24.c: Ditto.\n+\t* gcc.dg/vect/vect-25.c: Ditto.\n+\t* gcc.dg/vect/vect-26.c: Ditto.\n+\t* gcc.dg/vect/vect-27.c: Ditto.\n+\t* gcc.dg/vect/vect-27a.c: Ditto.\n+\t* gcc.dg/vect/vect-28.c: Ditto.\n+\t* gcc.dg/vect/vect-29.c: Ditto.\n+\t* gcc.dg/vect/vect-29a.c: Ditto.\n+\t* gcc.dg/vect/vect-3.c: Ditto.\n+\t* gcc.dg/vect/vect-30.c: Ditto.\n+\t* gcc.dg/vect/vect-31.c: Ditto.\n+\t* gcc.dg/vect/vect-32.c: Ditto.\n+\t* gcc.dg/vect/vect-33.c: Ditto.\n+\t* gcc.dg/vect/vect-34.c: Ditto.\n+\t* gcc.dg/vect/vect-35.c: Ditto.\n+\t* gcc.dg/vect/vect-36.c: Ditto.\n+\t* gcc.dg/vect/vect-37.c: Ditto.\n+\t* gcc.dg/vect/vect-38.c: Ditto.\n+\t* gcc.dg/vect/vect-4.c: Ditto.\n+\t* gcc.dg/vect/vect-40.c: Ditto.\n+\t* gcc.dg/vect/vect-41.c: Ditto.\n+\t* gcc.dg/vect/vect-42.c: Ditto.\n+\t* gcc.dg/vect/vect-43.c: Ditto.\n+\t* gcc.dg/vect/vect-44.c: Ditto.\n+\t* gcc.dg/vect/vect-45.c: Ditto.\n+\t* gcc.dg/vect/vect-46.c: Ditto.\n+\t* gcc.dg/vect/vect-47.c: Ditto.\n+\t* gcc.dg/vect/vect-48.c: Ditto.\n+\t* gcc.dg/vect/vect-48a.c: Ditto.\n+\t* gcc.dg/vect/vect-49.c: Ditto.\n+\t* gcc.dg/vect/vect-5.c: Ditto.\n+\t* gcc.dg/vect/vect-50.c: Ditto.\n+\t* gcc.dg/vect/vect-51.c: Ditto.\n+\t* gcc.dg/vect/vect-52.c: Ditto.\n+\t* gcc.dg/vect/vect-53.c: Ditto.\n+\t* gcc.dg/vect/vect-54.c: Ditto.\n+\t* gcc.dg/vect/vect-55.c: Ditto.\n+\t* gcc.dg/vect/vect-56.c: Ditto.\n+\t* gcc.dg/vect/vect-56a.c: Ditto.\n+\t* gcc.dg/vect/vect-57.c: Ditto.\n+\t* gcc.dg/vect/vect-58.c: Ditto.\n+\t* gcc.dg/vect/vect-59.c: Ditto.\n+\t* gcc.dg/vect/vect-6.c: Ditto.\n+\t* gcc.dg/vect/vect-60.c: Ditto.\n+\t* gcc.dg/vect/vect-61.c: Ditto.\n+\t* gcc.dg/vect/vect-62.c: Ditto.\n+\t* gcc.dg/vect/vect-63.c: Ditto.\n+\t* gcc.dg/vect/vect-64.c: Ditto.\n+\t* gcc.dg/vect/vect-65.c: Ditto.\n+\t* gcc.dg/vect/vect-66.c: Ditto.\n+\t* gcc.dg/vect/vect-67.c: Ditto.\n+\t* gcc.dg/vect/vect-68.c: Ditto.\n+\t* gcc.dg/vect/vect-69.c: Ditto.\n+\t* gcc.dg/vect/vect-7.c: Ditto.\n+\t* gcc.dg/vect/vect-72.c: Ditto.\n+\t* gcc.dg/vect/vect-72a.c: Ditto.\n+\t* gcc.dg/vect/vect-73.c: Ditto.\n+\t* gcc.dg/vect/vect-74.c: Ditto.\n+\t* gcc.dg/vect/vect-75.c: Ditto.\n+\t* gcc.dg/vect/vect-76.c: Ditto.\n+\t* gcc.dg/vect/vect-77.c: Ditto.\n+\t* gcc.dg/vect/vect-77a.c: Ditto.\n+\t* gcc.dg/vect/vect-78.c: Ditto.\n+\t* gcc.dg/vect/vect-79.c: Ditto.\n+\t* gcc.dg/vect/vect-8.c: Ditto.\n+\t* gcc.dg/vect/vect-80.c: Ditto.\n+\t* gcc.dg/vect/vect-82.c: Ditto.\n+\t* gcc.dg/vect/vect-82_64.c: Ditto.\n+\t* gcc.dg/vect/vect-83.c: Ditto.\n+\t* gcc.dg/vect/vect-83_64.c: Ditto.\n+\t* gcc.dg/vect/vect-9.c: Ditto.\n+\t* gcc.dg/vect/vect-all.c: Ditto.\n+\t* gcc.dg/vect/vect-none.c: Ditto.\n+\n 2004-11-17  Janis Johnson  <janis187@us.ibm.com>\n \n \t* lib/gcc-dg.exp (dg-skip-if): New function."}, {"sha": "38295815b4439a177001c96a1b9ce828e880fbcf", "filename": "gcc/testsuite/gcc.dg/vect/pr16105.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr16105.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr16105.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr16105.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,8 +1,5 @@\n-/* { dg-do compile { target powerpc*-*-* i?86-*-* } } */\n-/* { dg-do compile { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_float } */\n \n #define VECTOR_SIZE 512\n typedef float afloat __attribute__ ((__aligned__(16)));"}, {"sha": "c3a68676a4ebb119bf15dc2acb6a46c4f312c3e7", "filename": "gcc/testsuite/gcc.dg/vect/pr18400.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr18400.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr18400.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr18400.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,7 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-funroll-loops -O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-funroll-loops -O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "758182a5b82bd56dc98f91c2a38564e207377627", "filename": "gcc/testsuite/gcc.dg/vect/pr18425.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr18425.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr18425.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr18425.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,6 +1,5 @@\n-/* { dg-do compile { target powerpc*-*-* i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-S -O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-S -O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "3715b777566ad777fa1fd6a4a8f83f33a649a2a6", "filename": "gcc/testsuite/gcc.dg/vect/vect-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-1.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,6 +1,6 @@\n-/* { dg-do compile { target powerpc*-*-* i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n+/* { dg-require-effective-target vect_float } */\n \n #define N 16\n "}, {"sha": "286c76a7e730c9ec812cbe38ce49de49d388a2b3", "filename": "gcc/testsuite/gcc.dg/vect/vect-10.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-10.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,7 +1,5 @@\n-/* { dg-do compile { target powerpc*-*-* i?86-*-* x86_64-*-* sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n \n #define N 16\n "}, {"sha": "ce4bdfc8fee226ed636fd28018f14a6cbaf78123", "filename": "gcc/testsuite/gcc.dg/vect/vect-11.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-11.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,7 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "76e610bbbf1fd848a57931504f71f6d6b18f18bd", "filename": "gcc/testsuite/gcc.dg/vect/vect-12.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-12.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "992496651845ec3d596a08f9bee7e8b498cb5eab", "filename": "gcc/testsuite/gcc.dg/vect/vect-13.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-13.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,6 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\"\n@@ -38,4 +36,6 @@ int main (void)\n   return main1 ();\n }\n \n+/* These fail to vectorize on targets that don't have or model a vector\n+   max operation.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* } } } */"}, {"sha": "aceafa13e7914f9f3dbf54ad8d26ba1f50ace9b4", "filename": "gcc/testsuite/gcc.dg/vect/vect-14.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-14.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "c7d20a82294a3d8bb57ea3135f253e9786d06982", "filename": "gcc/testsuite/gcc.dg/vect/vect-15.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-15.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "d24b0aa83d7ae622f2d20961e5896b1441cd5c91", "filename": "gcc/testsuite/gcc.dg/vect/vect-16.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-16.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n+/* { dg-require-effective-target vect_float } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "e28d21cefe531cf58fadb0ab8cd792866e5e8030", "filename": "gcc/testsuite/gcc.dg/vect/vect-17.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-17.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n   \n #include <stdarg.h>\n #include \"tree-vect.h\"\n@@ -129,4 +124,6 @@ int main (void)\n   return main1 ();\n }\n \n+/* These fail to vectorize on targets that don't have or model vector\n+   bitwise operations.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" {xfail i?86-*-* x86_64-*-*} } } */"}, {"sha": "62f39d42810d1e1bf048d2ceffd1b0f0d7897620", "filename": "gcc/testsuite/gcc.dg/vect/vect-18.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-18.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n   \n #include <stdarg.h>\n #include \"tree-vect.h\"\n@@ -128,4 +123,6 @@ int main (void)\n   return main1 ();\n }\n \n+/* These fail to vectorize on targets that don't have or model vector\n+   bitwise operations.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" {xfail i?86-*-* x86_64-*-*} } } */"}, {"sha": "b323115c9e2c5fa767ffb341fd127f35d5baabe8", "filename": "gcc/testsuite/gcc.dg/vect/vect-19.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-19.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,10 +1,5 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n-  \n+/* { dg-require-effective-target vect_int } */\n+\n #include <stdarg.h>\n #include \"tree-vect.h\"\n \n@@ -128,4 +123,6 @@ int main (void)\n   return main1 ();\n }\n \n+/* These fail to vectorize on targets that don't have or model vector\n+   bitwise operations.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" {xfail i?86-*-* x86_64-*-*} } } */"}, {"sha": "e4c08774ba1139bca188018aa4cb086b0005a8a7", "filename": "gcc/testsuite/gcc.dg/vect/vect-2.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-2.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "1f98606557fd697136f3c03f839cee720cd589ec", "filename": "gcc/testsuite/gcc.dg/vect/vect-20.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-20.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n   \n #include <stdarg.h>\n #include \"tree-vect.h\"\n@@ -100,4 +95,6 @@ int main (void)\n   return main1 ();\n }\n \n+/* These fail to vectorize on targets that don't have or model vector\n+   bitwise operations.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 3 loops\" 1 \"vect\" {xfail i?86-*-* x86_64-*-*} } } */"}, {"sha": "20709aa5e3e5c2bedcdca9c0cc993cb0c7e194b3", "filename": "gcc/testsuite/gcc.dg/vect/vect-21.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-21.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,10 +1,5 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n-  \n+/* { dg-require-effective-target vect_int } */\n+\n #include <stdarg.h>\n #include \"tree-vect.h\"\n "}, {"sha": "51c2b028dea3388503c299c3accb3a5692496331", "filename": "gcc/testsuite/gcc.dg/vect/vect-22.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-22.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,10 +1,5 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n-  \n+/* { dg-require-effective-target vect_int } */\n+\n #include <stdarg.h>\n #include \"tree-vect.h\"\n "}, {"sha": "85fd9cfe5789ff5f4ec449a9789b0e72d1c32374", "filename": "gcc/testsuite/gcc.dg/vect/vect-23.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-23.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,10 +1,5 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n-  \n+/* { dg-require-effective-target vect_int } */\n+\n #include <stdarg.h>\n #include \"tree-vect.h\"\n "}, {"sha": "72645650f9155731b16521e963dcd4e01d67576e", "filename": "gcc/testsuite/gcc.dg/vect/vect-24.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-24.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,10 +1,5 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n-  \n+/* { dg-require-effective-target vect_int } */\n+\n #include <stdarg.h>\n #include \"tree-vect.h\"\n "}, {"sha": "bde05b15d5f6274ee5357cb5d2b303b3e5bad9bc", "filename": "gcc/testsuite/gcc.dg/vect/vect-25.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-25.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "75e1db9c2dc33040be3be9e916a5e0c293534c0d", "filename": "gcc/testsuite/gcc.dg/vect/vect-26.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-26.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-26.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-26.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "428c9270853cb288614712a3d0aa069ae0d775e5", "filename": "gcc/testsuite/gcc.dg/vect/vect-27.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-27.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-27.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-27.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,7 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\"\n@@ -43,5 +40,7 @@ int main (void)\n   return main1 ();\n }\n \n+/* These are not yet vectorized on targets that do not model alignment-handling\n+   mechanisms.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* } } } */\n "}, {"sha": "f28f9c85b24ca5bfef6eb4cbdf6403f03a1d6645", "filename": "gcc/testsuite/gcc.dg/vect/vect-27a.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-27a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-27a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-27a.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,6 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n /* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mmmx\" { target i?86-*-* x86_64-*-* } } */\n \n #include <stdarg.h>"}, {"sha": "5ce659842a75a1ead1350c515203579e98952899", "filename": "gcc/testsuite/gcc.dg/vect/vect-28.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-28.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-28.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-28.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,7 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "58f3ec16a53bc4f32166faef29376a73580c9376", "filename": "gcc/testsuite/gcc.dg/vect/vect-29.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-29.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-29.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-29.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,7 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\"\n@@ -46,5 +43,7 @@ int main (void)\n   return 0;\n }\n \n+/* These are not yet vectorized on targets that do not model alignment-handling\n+   mechanisms.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* } } } */\n "}, {"sha": "1e3c93cc4dc5202d1ff9c48760c8524851a82e9b", "filename": "gcc/testsuite/gcc.dg/vect/vect-29a.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-29a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-29a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-29a.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,6 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n /* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mmmx\" { target i?86-*-* x86_64-*-* } } */\n \n #include <stdarg.h>"}, {"sha": "cb00ca8bc44fcb55b3156d3a44e56af21d3d4aa3", "filename": "gcc/testsuite/gcc.dg/vect/vect-3.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-3.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,7 +1,5 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n+/* { dg-require-effective-target vect_float } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "056d689c81cf09f1db3666dd567ee9e149faa06f", "filename": "gcc/testsuite/gcc.dg/vect/vect-30.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-30.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n+/* { dg-require-effective-target vect_float } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "77e524ecd8d1ced8356ea75de897905546900374", "filename": "gcc/testsuite/gcc.dg/vect/vect-31.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-31.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-31.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-31.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,7 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "312e4053fb874b25f375cbd9b5a0631764c7c245", "filename": "gcc/testsuite/gcc.dg/vect/vect-32.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-32.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "dc37eb5eee5adb4e0c86672c31491f0bb59f4ec1", "filename": "gcc/testsuite/gcc.dg/vect/vect-33.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-33.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-33.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-33.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,5 @@\n-/* { dg-do compile { target powerpc*-*-* } } */\n-/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do compile { target sparc*-*-* } } */\n-/* { dg-options \"-S -O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-S -O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "4ce8474d4a5d32592b9d0c07039db11f4ff6855d", "filename": "gcc/testsuite/gcc.dg/vect/vect-34.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-34.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-34.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-34.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "f0943940b9a4bd24078ede32477dda62a61d7f0a", "filename": "gcc/testsuite/gcc.dg/vect/vect-35.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-35.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-35.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-35.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "f62ed8b0ec6a60164614cb0cdeec7d45135cd9e9", "filename": "gcc/testsuite/gcc.dg/vect/vect-36.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-36.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-36.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-36.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "97cd0ec902bed627d39cc363ad69ce376f77f9f5", "filename": "gcc/testsuite/gcc.dg/vect/vect-37.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-37.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-37.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-37.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "6c2f80c02b8bdef6bd6a2718e914eb2bec73f376", "filename": "gcc/testsuite/gcc.dg/vect/vect-38.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-38.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-38.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-38.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,7 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-effective-target vect_double } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\"\n@@ -38,4 +35,4 @@ int main (void)\n } \n \n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail powerpc*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */"}, {"sha": "d82903a5c5f8570903087400f5eba3b1aa9490d7", "filename": "gcc/testsuite/gcc.dg/vect/vect-4.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-4.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,10 +1,5 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n-  \n+/* { dg-require-effective-target vect_float } */\n+\n #include <stdarg.h>\n #include \"tree-vect.h\"\n "}, {"sha": "fa2139b3716cbea9a8233dbc78834dff8dcc23f5", "filename": "gcc/testsuite/gcc.dg/vect/vect-40.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-40.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-40.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-40.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,10 +1,5 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n-  \n+/* { dg-require-effective-target vect_float } */\n+\n #include <stdarg.h>\n #include \"tree-vect.h\"\n "}, {"sha": "f86039843fc307f794fcc499f54592700f8e3695", "filename": "gcc/testsuite/gcc.dg/vect/vect-41.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-41.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-41.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-41.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,10 +1,5 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n-  \n+/* { dg-require-effective-target vect_float } */\n+\n #include <stdarg.h>\n #include \"tree-vect.h\"\n "}, {"sha": "acc5a57cc2e156dbe9d9fd1b23ffea0e43d715e7", "filename": "gcc/testsuite/gcc.dg/vect/vect-42.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-42.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-42.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-42.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,10 +1,5 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n-  \n+/* { dg-require-effective-target vect_float } */\n+\n #include <stdarg.h>\n #include \"tree-vect.h\"\n "}, {"sha": "29e0a2c122139f2e585cd7a28ce88acd7a4e98c3", "filename": "gcc/testsuite/gcc.dg/vect/vect-43.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-43.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-43.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-43.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,10 +1,5 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n-  \n+/* { dg-require-effective-target vect_float } */\n+\n #include <stdarg.h>\n #include \"tree-vect.h\"\n "}, {"sha": "f1e4aae2d362605c99660e0608a7df1ca57f5262", "filename": "gcc/testsuite/gcc.dg/vect/vect-44.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,10 +1,5 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n-  \n+/* { dg-require-effective-target vect_float } */\n+\n #include <stdarg.h>\n #include \"tree-vect.h\"\n \n@@ -59,4 +54,6 @@ int main (void)\n   return 0;\n }\n \n+/* These are not yet vectorized on targets that do not model alignment-handling\n+   mechanisms.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* mipsisa64*-*-* } } } */"}, {"sha": "b970a8622d87b2c682186943ba3b80ea08f11eeb", "filename": "gcc/testsuite/gcc.dg/vect/vect-45.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-45.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-45.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-45.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,10 +1,5 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n-  \n+/* { dg-require-effective-target vect_float } */\n+\n #include <stdarg.h>\n #include \"tree-vect.h\"\n "}, {"sha": "647172eaf06ff824aa12330e6d199ee06e5dad47", "filename": "gcc/testsuite/gcc.dg/vect/vect-46.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-46.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-46.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-46.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n+/* { dg-require-effective-target vect_float } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\"\n@@ -55,4 +50,6 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\"  } } */\n+/* This fails to vectorize for 64-bit powerpc but there's no way to\n+   specify that in an xfail list.  */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */"}, {"sha": "a16ebaa03c3d0a72703853eb3eea3c065279a8af", "filename": "gcc/testsuite/gcc.dg/vect/vect-47.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-47.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-47.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-47.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n+/* { dg-require-effective-target vect_float } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "dee986efddea646c1a656ff23edbdb3751697694", "filename": "gcc/testsuite/gcc.dg/vect/vect-48.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,10 +1,5 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n-  \n+/* { dg-require-effective-target vect_float } */\n+\n #include <stdarg.h>\n #include \"tree-vect.h\"\n \n@@ -57,4 +52,6 @@ int main (void)\n   return 0;\n }\n \n+/* These are not yet vectorized on targets that do not model alignment-handling\n+   mechanisms.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* mipsisa64*-*-* } } } */"}, {"sha": "8040c5310b99a270681376e0b6b7541b4e813d4d", "filename": "gcc/testsuite/gcc.dg/vect/vect-48a.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48a.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,6 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n /* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mmmx\" { target i?86-*-* x86_64-*-* } } */\n   \n #include <stdarg.h>"}, {"sha": "c933070c3e8366c1941d178d38db217b43ec2268", "filename": "gcc/testsuite/gcc.dg/vect/vect-49.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-49.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-49.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-49.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,10 +1,5 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n-  \n+/* { dg-require-effective-target vect_float } */\n+\n #include <stdarg.h>\n #include \"tree-vect.h\"\n "}, {"sha": "38896053ac8c77327765efca4ff0ca2c0919c309", "filename": "gcc/testsuite/gcc.dg/vect/vect-5.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-5.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n+/* { dg-require-effective-target vect_float } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "9076b40cb1b172b3a090f1b51c72c2bf70ff1862", "filename": "gcc/testsuite/gcc.dg/vect/vect-50.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-50.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-50.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-50.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,10 +1,5 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n-  \n+/* { dg-require-effective-target vect_float } */\n+\n #include <stdarg.h>\n #include \"tree-vect.h\"\n \n@@ -54,4 +49,7 @@ int main (void)\n   return 0;\n }\n \n+/* These are not yet vectorized on targets that do not model alignment-handling\n+   mechanisms.  They also fail to vectorize for 64-bit powerpc but there's no\n+   way to specify that in an xfail list.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* mipsisa64*-*-* } } } */"}, {"sha": "1a3befd79899af7850955ceb78a7cc44cd389799", "filename": "gcc/testsuite/gcc.dg/vect/vect-51.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-51.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-51.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-51.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,10 +1,5 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n-  \n+/* { dg-require-effective-target vect_float } */\n+\n #include <stdarg.h>\n #include \"tree-vect.h\"\n "}, {"sha": "5ba0992b956f6f73333062bc2ea060cc3699449d", "filename": "gcc/testsuite/gcc.dg/vect/vect-52.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-52.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-52.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-52.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,10 +1,5 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n-  \n+/* { dg-require-effective-target vect_float } */\n+\n #include <stdarg.h>\n #include \"tree-vect.h\"\n \n@@ -56,4 +51,7 @@ int main (void)\n   return 0;\n }\n \n+/* These are not yet vectorized on targets that do not model alignment-handling\n+   mechanisms.  They also fail to vectorize for 64-bit powerpc but there's no\n+   way to specify that in an xfail list.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* mipsisa64*-*-* } } } */"}, {"sha": "49aba7d2bcc9dc18e677eec359de69370f138481", "filename": "gcc/testsuite/gcc.dg/vect/vect-53.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-53.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-53.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-53.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,10 +1,5 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n-  \n+/* { dg-require-effective-target vect_float } */\n+\n #include <stdarg.h>\n #include \"tree-vect.h\"\n "}, {"sha": "f7deb174e75f0411c27475c1a1ed5534e260c74a", "filename": "gcc/testsuite/gcc.dg/vect/vect-54.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-54.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-54.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-54.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n+/* { dg-require-effective-target vect_float } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\"\n@@ -55,4 +50,6 @@ int main (void)\n   return 0;\n }\n \n+/* These are not yet vectorized on targets that do not model alignment-handling\n+   mechanisms.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* mipsisa64*-*-* } } } */"}, {"sha": "016ff4d5918eb957cf402575a4fbbb3e8dd88ac6", "filename": "gcc/testsuite/gcc.dg/vect/vect-55.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-55.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-55.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-55.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n+/* { dg-require-effective-target vect_float } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "40b62b450f3bf65a38091ac87915f2394afb70f5", "filename": "gcc/testsuite/gcc.dg/vect/vect-56.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n+/* { dg-require-effective-target vect_float } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\"\n@@ -55,4 +50,6 @@ int main (void)\n   return 0;\n }\n \n+/* These are not yet vectorized on targets that do not model alignment-handling\n+   mechanisms.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* mipsisa64*-*-* } } } */"}, {"sha": "2968040ac670986c61a30aa7414d3cccd7a12e5e", "filename": "gcc/testsuite/gcc.dg/vect/vect-56a.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56a.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,6 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n /* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mmmx\" { target i?86-*-* x86_64-*-* } } */\n \n #include <stdarg.h>"}, {"sha": "8f970c4e1f728dc727dc39f461f987d8da9f37f7", "filename": "gcc/testsuite/gcc.dg/vect/vect-57.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-57.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-57.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-57.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n+/* { dg-require-effective-target vect_float } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "73faab3874c2474faf5c5a61f8b0754985d553fc", "filename": "gcc/testsuite/gcc.dg/vect/vect-58.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-58.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-58.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-58.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n+/* { dg-require-effective-target vect_float } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\"\n@@ -56,4 +51,7 @@ int main (void)\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* mipsisa64*-*-* }  } } */\n+/* These are not yet vectorized on targets that do not model alignment-handling\n+   mechanisms.  They also fail to vectorize for 64-bit powerpc but there's no\n+   way to specify that in an xfail list.  */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* mipsisa64*-*-* } } } */"}, {"sha": "29d7e2cf1c4f4e6f03f926f61c3535ba135b3a13", "filename": "gcc/testsuite/gcc.dg/vect/vect-59.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-59.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-59.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-59.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n+/* { dg-require-effective-target vect_float } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "1ddcdda30c0d11583313573cb715faaf28d4cc89", "filename": "gcc/testsuite/gcc.dg/vect/vect-6.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-6.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n+/* { dg-require-effective-target vect_float } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "06684e7001c4150e7d5116286a97babb6bb6d871", "filename": "gcc/testsuite/gcc.dg/vect/vect-60.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-60.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-60.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-60.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,10 +1,4 @@\n-\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n+/* { dg-require-effective-target vect_float } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\"\n@@ -57,4 +51,6 @@ int main (void)\n   return 0;\n }\n \n+/* These are not yet vectorized on targets that do not model alignment-handling\n+   mechanisms.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* mipsisa64*-*-* } } } */"}, {"sha": "cf25daee66046d0177457364d92fc79640e17825", "filename": "gcc/testsuite/gcc.dg/vect/vect-61.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-61.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-61.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-61.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,7 +1,5 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n+/* { dg-require-effective-target vect_float } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "4138eb881e86e641373e556a9d55f5ef582e6b5a", "filename": "gcc/testsuite/gcc.dg/vect/vect-62.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-62.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-62.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-62.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "aa80680dc9cd88154302dc72f8c5a93d22c736f3", "filename": "gcc/testsuite/gcc.dg/vect/vect-63.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-63.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-63.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-63.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "febc52f1b6879aca1f996e8a0c2a87144884df5c", "filename": "gcc/testsuite/gcc.dg/vect/vect-64.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-64.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "25ba878203ccf795ba79756c9d04babb934b8456", "filename": "gcc/testsuite/gcc.dg/vect/vect-65.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-65.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-65.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-65.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "423723d6cbff3b96b08d0321edee3b0a7520b084", "filename": "gcc/testsuite/gcc.dg/vect/vect-66.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-66.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-66.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-66.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "648000084c0430c3c0e95e30826822ae7c19c7bc", "filename": "gcc/testsuite/gcc.dg/vect/vect-67.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-67.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-67.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-67.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "236acee48c9e3d60247967e3c1deb6f428dd0688", "filename": "gcc/testsuite/gcc.dg/vect/vect-68.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-68.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-68.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-68.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "6794a283b71d0060a43963d371ef839787522068", "filename": "gcc/testsuite/gcc.dg/vect/vect-69.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-69.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-69.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-69.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "4d33bad908b3c4e6b98ddce05b1cfb2a53b3b6ed", "filename": "gcc/testsuite/gcc.dg/vect/vect-7.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-7.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "f01cfdd9fb500bcef240eaa4ce1e686370c03052", "filename": "gcc/testsuite/gcc.dg/vect/vect-72.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-72.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-72.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-72.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,7 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\"\n@@ -43,5 +40,7 @@ int main (void)\n   return main1 ();\n }\n \n+/* These are not yet vectorized on targets that do not model alignment-handling\n+   mechanisms.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* } } } */\n "}, {"sha": "1c5c912bd69041572b2e20491a34f04c78acfe64", "filename": "gcc/testsuite/gcc.dg/vect/vect-72a.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-72a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-72a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-72a.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,6 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n /* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mmmx\" { target i?86-*-* x86_64-*-* } } */\n \n #include <stdarg.h>\n@@ -45,3 +43,4 @@ int main (void)\n \n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n \n+"}, {"sha": "b350bdf6cf65b390e84b2dcb5b62c2d64dc5f640", "filename": "gcc/testsuite/gcc.dg/vect/vect-73.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-73.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-73.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-73.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "d93eed46ef0cbb327bf8c928ef9082db743eda7e", "filename": "gcc/testsuite/gcc.dg/vect/vect-74.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-74.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-74.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-74.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n+/* { dg-require-effective-target vect_float } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "3ee2421bd6db41ce62c9ae59b26d27d1b2d8d82d", "filename": "gcc/testsuite/gcc.dg/vect/vect-75.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-75.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-75.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-75.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "47c14d7db62f862263f98c642649d71dc2efd9aa", "filename": "gcc/testsuite/gcc.dg/vect/vect-76.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-76.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-76.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-76.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "9afd983a731b9a76bfa1ce82db64d61c1ddd0536", "filename": "gcc/testsuite/gcc.dg/vect/vect-77.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-77.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-77.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-77.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,7 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\"\n@@ -42,6 +39,7 @@ int main (void)\n   return 0;\n }\n \n-\n+/* These are not yet vectorized on targets that do not model alignment-handling\n+   mechanisms.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* } } } */\n "}, {"sha": "7436b4e6307e5a775f33f1ab5aa340f5315cf3ec", "filename": "gcc/testsuite/gcc.dg/vect/vect-77a.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-77a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-77a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-77a.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,6 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n /* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mmmx\" { target i?86-*-* x86_64-*-* } } */\n \n #include <stdarg.h>\n@@ -43,5 +41,7 @@ int main (void)\n }\n \n \n+/* This fails to vectorize for 64-bit powerpc but there's no way to\n+   specify that in an xfail list.  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n "}, {"sha": "35be16dbe282e8a4d16415a61c56fff942e4cc27", "filename": "gcc/testsuite/gcc.dg/vect/vect-78.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-78.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-78.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-78.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "aae9caff0940f6dfc43ac2c5613355b815d640be", "filename": "gcc/testsuite/gcc.dg/vect/vect-79.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-79.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-79.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-79.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n+/* { dg-require-effective-target vect_float } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "960eb34c0dfbc97765d80a10690afc1228da447f", "filename": "gcc/testsuite/gcc.dg/vect/vect-8.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-8.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n+/* { dg-require-effective-target vect_float } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "404c7c79bccc4f378ae64420f5b00c6cca9bb926", "filename": "gcc/testsuite/gcc.dg/vect/vect-80.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-80.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-80.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-80.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mpaired-single\" { target mipsisa64*-*-* } } */\n+/* { dg-require-effective-target vect_float } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\"\n@@ -47,4 +42,6 @@ int main (void)\n   return 0;\t\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* mipsisa64*-*-* }  } } */\n+/* These are not yet vectorized on targets that do not model alignment-handling\n+   mechanisms.  */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail i?86-*-* x86_64-*-* mipsisa64*-*-* } } } */"}, {"sha": "0328c16004c44062ab94819ab2bd560169e95dc5", "filename": "gcc/testsuite/gcc.dg/vect/vect-82.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-82.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-82.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-82.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,5 +1,4 @@\n /* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "beb1585603060a4c184c4a9847d2933ce11122cb", "filename": "gcc/testsuite/gcc.dg/vect/vect-82_64.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-82_64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-82_64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-82_64.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -mpowerpc64 -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n+/* { dg-options \"-O2 -ftree-vectorize -mpowerpc64 -fdump-tree-vect-stats -maltivec\" } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "ce12629538a0b2135e4771a5fc2cfb864909214c", "filename": "gcc/testsuite/gcc.dg/vect/vect-83.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-83.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-83.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-83.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,5 +1,4 @@\n /* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "776adade0614333262b8d1e28c72fc2207912923", "filename": "gcc/testsuite/gcc.dg/vect/vect-83_64.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-83_64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-83_64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-83_64.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -mpowerpc64 -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n+/* { dg-options \"-O2 -ftree-vectorize -mpowerpc64 -fdump-tree-vect-stats -maltivec\" } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "98b9451845c5d652e505c7c4b32e4e324674a4b6", "filename": "gcc/testsuite/gcc.dg/vect/vect-9.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-9.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,9 +1,4 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-do run { target sparc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -mcpu=ultrasparc -mvis\" { target sparc*-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "aba1f7d1ebe7168f616c254da044a376b07c856e", "filename": "gcc/testsuite/gcc.dg/vect/vect-all.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-all.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-all.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-all.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,7 +1,5 @@\n-/* { dg-do run { target powerpc*-*-* } } */\n-/* { dg-do run { target i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-require-effective-target vect_int } */\n+/* { dg-require-effective-target vect_float } */\n \n #include <stdarg.h>\n #include \"tree-vect.h\""}, {"sha": "a7c05086c50eb22a92317d05ab4bd4b0f2bcd7d5", "filename": "gcc/testsuite/gcc.dg/vect/vect-none.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-none.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-none.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-none.c?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,6 +1,6 @@\n-/* { dg-do compile { target powerpc*-*-* i?86-*-* x86_64-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -maltivec\" { target powerpc*-*-* } } */\n-/* { dg-options \"-O2 -ftree-vectorize -fdump-tree-vect-stats -msse2\" { target i?86-*-* x86_64-*-* } } */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n+/* { dg-require-effective-target vect_float } */\n \n #define N 16\n "}, {"sha": "8740fa3bbb7a99e0b4d3224fa85359eb136f7b2c", "filename": "gcc/testsuite/gcc.dg/vect/vect.exp", "status": "modified", "additions": 47, "deletions": 6, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -1,4 +1,4 @@\n-#   Copyright (C) 1997 Free Software Foundation, Inc.\n+# Copyright (C) 1997, 2004 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -19,17 +19,58 @@\n # Load support procs.\n load_lib gcc-dg.exp\n \n-# If a testcase doesn't have special options, use these.\n-global DEFAULT_CFLAGS\n-if ![info exists DEFAULT_CFLAGS] then {\n-    set DEFAULT_CFLAGS \" -ansi -pedantic-errors\"\n+# Set up flags used for tests that don't specify options.\n+set DEFAULT_VECTCFLAGS \"\"\n+\n+# These flags are used for all targets.\n+lappend DEFAULT_VECTCFLAGS \"-O2\" \"-ftree-vectorize\" \"-fdump-tree-vect-stats\"\n+\n+# If the target system supports vector instructions, the default action\n+# for a test is 'run', otherwise it's 'compile'.  Save current default.\n+# Executing vector instructions on a system without hardware vector support\n+# is also disabled by a call to check_vect, but disabling execution here is\n+# more efficient.\n+global dg-do-what-default\n+set save-dg-do-what-default ${dg-do-what-default}\n+\n+# Skip these tests for targets that do not support generating vector\n+# code.  Set additional target-dependent vector flags, which can be\n+# overridden by using dg-options in individual tests.\n+if [istarget \"powerpc*-*-*\"] {\n+    # If there are powerpc targets to skip, do it here.\n+\n+    lappend DEFAULT_VECTCFLAGS \"-maltivec\"\n+    if [check_vmx_hw_available] {\n+\tset dg-do-what-default run\n+    } else {\n+\tif [is-effective-target ilp32] {\n+\t    # Specify a cpu that supports VMX for compile-only tests.\n+\t    lappend DEFAULT_VECTCFLAGS \"-mcpu=7400\"\n+\t}\n+\tset dg-do-what-default compile\n+    }\n+} elseif { [istarget \"i?86-*-*\"] || [istarget \"x86_64-*-*\"] } {\n+    lappend DEFAULT_VECTCFLAGS \"-msse2\"\n+    set dg-do-what-default run\n+} elseif [istarget \"mipsisa64*-*-*\"] {\n+    lappend DEFAULT_VECTCFLAGS \"-mpaired-single\"\n+    set dg-do-what-default run\n+} elseif [istarget \"sparc*-*-*\"] {\n+    lappend DEFAULT_VECTFLAGS \"-mcpu=ultrasparc -mvis\"\n+    set dg-do-what-default run\n+} else {\n+    return\n }\n \n # Initialize `dg'.\n dg-init\n \n # Main loop.\n-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \"\" $DEFAULT_CFLAGS\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]]  \\\n+\t\"\" $DEFAULT_VECTCFLAGS\n+\n+# Clean up.\n+set dg-do-what-default ${save-dg-do-what-default}\n \n # All done.\n dg-finish"}, {"sha": "ae85837428cc0cee96abb751217f1b9b10b8c531", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07d05ffdacf03e30bc013c814366295a9a32f9d7/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=07d05ffdacf03e30bc013c814366295a9a32f9d7", "patch": "@@ -392,6 +392,73 @@ proc check_effective_target_lp64 { } {\n     return $answer\n }\n \n+# Return 1 if the target supports hardware vectors of int, 0 otherwise.\n+#\n+# This won't change for different subtargets so cache the result.\n+\n+proc check_effective_target_vect_int { } {\n+    global et_vect_int_saved\n+\n+    if [info exists et_vect_int_saved] {\n+\tverbose \"check_effective_target_vect_int: using cached result\" 2\n+    } else {\n+\tset et_vect_int_saved 0\n+\tif { [istarget i?86-*-*]\n+\t      || [istarget powerpc*-*-*]\n+\t      || [istarget x86_64-*-*]\n+\t      || [istarget sparc*-*-*] } {\n+\t   set et_vect_int_saved 1\n+\t}\n+    }\n+\n+    verbose \"check_effective_target_vect_int: returning $et_vect_int_saved\" 2\n+    return $et_vect_int_saved\n+}\n+\n+# Return 1 if the target supports hardware vectors of float, 0 otherwise.\n+#\n+# This won't change for different subtargets so cache the result.\n+\n+proc check_effective_target_vect_float { } {\n+    global et_vect_float_saved\n+\n+    if [info exists et_vect_float_saved] {\n+\tverbose \"check_effective_target_vect_float: using cached result\" 2\n+    } else {\n+\tset et_vect_float_saved 0\n+\tif { [istarget i?86-*-*]\n+\t      || [istarget powerpc*-*-*]\n+\t      || [istarget mipsisa64*-*-*]\n+\t      || [istarget x86_64-*-*] } {\n+\t   set et_vect_float_saved 1\n+\t}\n+    }\n+\n+    verbose \"check_effective_target_vect_float: returning $et_vect_float_saved\" 2\n+    return $et_vect_float_saved\n+}\n+\n+# Return 1 if the target supports hardware vectors of double, 0 otherwise.\n+#\n+# This won't change for different subtargets so cache the result.\n+\n+proc check_effective_target_vect_double { } {\n+    global et_vect_double_saved\n+\n+    if [info exists et_vect_double_saved] {\n+\tverbose \"check_effective_target_vect_double: using cached result\" 2\n+    } else {\n+\tset et_vect_double_saved 0\n+\tif { [istarget i?86-*-*]\n+\t      || [istarget x86_64-*-*] } {\n+\t   set et_vect_double_saved 1\n+\t}\n+    }\n+\n+    verbose \"check_effective_target_vect_double: returning $et_vect_double_saved\" 2\n+    return $et_vect_double_saved\n+}\n+\n # Return 1 if the target matches the effective target 'arg', 0 otherwise.\n # This can be used with any check_* proc that takes no argument and\n # returns only 1 or 0.  It could be used with check_* procs that take\n@@ -405,6 +472,9 @@ proc is-effective-target { arg } {\n \t\"vmx_hw\" { set selected [check_vmx_hw_available] }\n \t\"named_sections\" { set selected [check_named_sections_available] }\n \t\"gc_sections\" { set selected [check_gc_sections_available] }\n+\t\"vect_int\" { set selected [check_effective_target_vect_int] }\n+\t\"vect_float\" { set selected [check_effective_target_vect_float] }\n+\t\"vect_double\" { set selected [check_effective_target_vect_double] }\n \tdefault  { error \"unknown effective target selector `$arg'\" }\n     }\n     verbose \"is-effective-target: $arg $selected\" 2"}]}