{"sha": "86ab632081cc94593ab6c22842d084fce5cf54d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZhYjYzMjA4MWNjOTQ1OTNhYjZjMjI4NDJkMDg0ZmNlNWNmNTRkNA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2005-09-25T21:02:17Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2005-09-25T21:02:17Z"}, "message": "re PR libfortran/23803 ([mingw32] getlog malfunction)\n\n\tPR libfortran/23803\n\t* intrinsics/getXid.c: Add getpid wrapper for MinGW.\n\t* intrinsics/getlog.c: Add getlogin wrapper for MinGW.\n\t* intrinsics/hostnm.c: Add gethostname wrapper for MinGW.\n\nCo-Authored-By: Danny Smith <dannysmith@users.sourceforge.net>\n\nFrom-SVN: r104624", "tree": {"sha": "a67b71785be9512eea0092771c05491f212cbe18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a67b71785be9512eea0092771c05491f212cbe18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86ab632081cc94593ab6c22842d084fce5cf54d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86ab632081cc94593ab6c22842d084fce5cf54d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86ab632081cc94593ab6c22842d084fce5cf54d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86ab632081cc94593ab6c22842d084fce5cf54d4/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad90e28f8f685996778fa94aa6c9b5c86adb210c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad90e28f8f685996778fa94aa6c9b5c86adb210c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad90e28f8f685996778fa94aa6c9b5c86adb210c"}], "stats": {"total": 78, "additions": 77, "deletions": 1}, "files": [{"sha": "d80b464d84c9cd3d3459444baa52e59044310775", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=86ab632081cc94593ab6c22842d084fce5cf54d4", "patch": "@@ -1,3 +1,11 @@\n+2005-09-25  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\t    Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\tPR libfortran/23803\n+\t* intrinsics/getXid.c: Add getpid wrapper for MinGW.\n+\t* intrinsics/getlog.c: Add getlogin wrapper for MinGW.\n+\t* intrinsics/hostnm.c: Add gethostname wrapper for MinGW.\n+\n 2005-09-24  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR libfortran/23802"}, {"sha": "85ff4e8f4ee4399694530f3b52a63c1c332dfa09", "filename": "libgfortran/intrinsics/getXid.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fintrinsics%2FgetXid.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fintrinsics%2FgetXid.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2FgetXid.c?ref=86ab632081cc94593ab6c22842d084fce5cf54d4", "patch": "@@ -38,6 +38,11 @@ Boston, MA 02110-1301, USA.  */\n \n #include \"libgfortran.h\"\n \n+#ifdef __MINGW32__\n+#define HAVE_GETPID\n+#include <process.h>\n+#endif\n+\n #ifdef HAVE_GETGID\n extern GFC_INTEGER_4 PREFIX(getgid) (void);\n export_proto_np(PREFIX(getgid));"}, {"sha": "9b73ec210786dc39848563de026cba6aa310b263", "filename": "libgfortran/intrinsics/getlog.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fintrinsics%2Fgetlog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fintrinsics%2Fgetlog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fgetlog.c?ref=86ab632081cc94593ab6c22842d084fce5cf54d4", "patch": "@@ -39,6 +39,29 @@ Boston, MA 02110-1301, USA.  */\n #endif\n \n \n+/* Windows32 version */\n+#if defined __MINGW32__ && !defined  HAVE_GETLOGIN\n+#define WIN32_LEAN_AND_MEAN\n+#include <windows.h>\n+#include <lmcons.h>  /* for UNLEN */ \n+\n+static char *\n+w32_getlogin (void)\n+{\n+  static char name [UNLEN + 1];\n+  DWORD namelen = sizeof (name);\n+\n+  GetUserName (name, &namelen);\n+  return (name[0] == 0 ?  NULL : name);\n+}\n+\n+#undef getlogin\n+#define getlogin w32_getlogin\n+#define HAVE_GETLOGIN 1\n+\n+#endif\n+\n+\n /* GETLOG (LOGIN), g77 intrinsic for retrieving the login name for the\n    process.\n    CHARACTER(len=*), INTENT(OUT) :: LOGIN  */"}, {"sha": "0df39ea46f39b934b45ae74a2fc5beb6a61eef30", "filename": "libgfortran/intrinsics/hostnm.c", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fintrinsics%2Fhostnm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86ab632081cc94593ab6c22842d084fce5cf54d4/libgfortran%2Fintrinsics%2Fhostnm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fhostnm.c?ref=86ab632081cc94593ab6c22842d084fce5cf54d4", "patch": "@@ -38,7 +38,47 @@ Boston, MA 02110-1301, USA.  */\n #include <unistd.h> \n #endif\n \n-#include \"../io/io.h\"\n+\n+/* Windows32 version */\n+#if defined __MINGW32__ && !defined  HAVE_GETHOSTNAME\n+#define WIN32_LEAN_AND_MEAN\n+#include <windows.h>\n+#include <errno.h>\n+\n+static int\n+w32_gethostname (char *name, size_t len)\n+{\n+  /* We could try the WinSock API gethostname, but that will\n+     fail if WSAStartup function has has not been called.  We don't\n+    really need a name that will be understood by socket API, so avoid\n+    unnecessary dependence on WinSock libraries by using\n+    GetComputerName instead.  */\n+\n+  /* On Win9x GetComputerName fails if the input size is less\n+     than MAX_COMPUTERNAME_LENGTH + 1.  */\n+  char buffer[MAX_COMPUTERNAME_LENGTH + 1];\n+  DWORD size =  sizeof (buffer);\n+\n+  if (!GetComputerName (buffer, &size))\n+    return -1;\n+\n+  if ((size = strlen (buffer) + 1)  > len)\n+    {\n+      errno = EINVAL;\n+      /* Truncate as per POSIX spec.  We do not NUL-terminate. */\n+      size = len;\n+    }\n+  memcpy (name, buffer, (size_t) size);\n+\n+  return 0;\n+}\n+\n+#undef gethostname\n+#define gethostname w32_gethostname\n+#define  HAVE_GETHOSTNAME 1\n+\n+#endif\n+\n \n /* SUBROUTINE HOSTNM(NAME, STATUS)\n    CHARACTER(len=*), INTENT(OUT) :: NAME"}]}