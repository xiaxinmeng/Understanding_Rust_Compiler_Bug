{"sha": "56cd5b954eb70a938f01a73ccc0ada6cb5fa4a36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZjZDViOTU0ZWI3MGE5MzhmMDFhNzNjY2MwYWRhNmNiNWZhNGEzNg==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2002-02-20T07:24:10Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2002-02-20T07:24:10Z"}, "message": "cppinit.c (init_dependency_output): Take deps output file from -o if none given with -MF.\n\n\t* cppinit.c (init_dependency_output): Take deps output file\n\tfrom -o if none given with -MF.  Suppress normal output.\n\t* gcc.c (cpp_unique_options): Have -M and -MM imply -E.\n\t* doc/cpp.texi, doc/invoke.texi: Update.\n\nFrom-SVN: r49892", "tree": {"sha": "ca6ba18d981566f2ff27d47f76785ea46c4d1f5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca6ba18d981566f2ff27d47f76785ea46c4d1f5c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56cd5b954eb70a938f01a73ccc0ada6cb5fa4a36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56cd5b954eb70a938f01a73ccc0ada6cb5fa4a36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56cd5b954eb70a938f01a73ccc0ada6cb5fa4a36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56cd5b954eb70a938f01a73ccc0ada6cb5fa4a36/comments", "author": null, "committer": null, "parents": [{"sha": "042cdf7164c636e6d8ea671c2817f59c4914f3db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/042cdf7164c636e6d8ea671c2817f59c4914f3db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/042cdf7164c636e6d8ea671c2817f59c4914f3db"}], "stats": {"total": 130, "additions": 85, "deletions": 45}, "files": [{"sha": "22577cd8da38b219fcc1c373aab2d2e0b00a93fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56cd5b954eb70a938f01a73ccc0ada6cb5fa4a36/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56cd5b954eb70a938f01a73ccc0ada6cb5fa4a36/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=56cd5b954eb70a938f01a73ccc0ada6cb5fa4a36", "patch": "@@ -1,3 +1,10 @@\n+2002-02-20  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* cppinit.c (init_dependency_output): Take deps output file\n+\tfrom -o if none given with -MF.  Suppress normal output.\n+\t* gcc.c (cpp_unique_options): Have -M and -MM imply -E.\t\n+\t* doc/cpp.texi, doc/invoke.texi: Update.\n+\n 2002-02-19  Zack Weinberg  <zack@codesourcery.com>\n \n \t* toplev.c (output_quoted_string): Write unprintable"}, {"sha": "efaf3166afb6303b54e3add8d222c9f6ed1c7fc2", "filename": "gcc/cppinit.c", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56cd5b954eb70a938f01a73ccc0ada6cb5fa4a36/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56cd5b954eb70a938f01a73ccc0ada6cb5fa4a36/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=56cd5b954eb70a938f01a73ccc0ada6cb5fa4a36", "patch": "@@ -1084,7 +1084,7 @@ output_deps (pfile)\n   const char *const deps_mode =\n     CPP_OPTION (pfile, print_deps_append) ? \"a\" : \"w\";\n \n-  if (CPP_OPTION (pfile, deps_file) == 0)\n+  if (CPP_OPTION (pfile, deps_file)[0] == '\\0')\n     deps_stream = stdout;\n   else\n     {\n@@ -1835,7 +1835,8 @@ cpp_post_options (pfile)\n     cpp_fatal (pfile, \"you must additionally specify either -M or -MM\");\n }\n \n-/* Set up dependency-file output.  */\n+/* Set up dependency-file output.  On exit, if print_deps is non-zero\n+   then deps_file is not NULL; stdout is the empty string.  */\n static void\n init_dependency_output (pfile)\n      cpp_reader *pfile;\n@@ -1874,21 +1875,22 @@ init_dependency_output (pfile)\n       else\n \toutput_file = spec;\n \n-      /* Command line overrides environment variables.  */\n-      if (CPP_OPTION (pfile, deps_file) == 0)\n-\tCPP_OPTION (pfile, deps_file) = output_file;\n       CPP_OPTION (pfile, print_deps_append) = 1;\n     }\n+  else\n+    /* If -M or -MM was seen, default output to wherever was specified\n+       with -o.  out_fname is non-NULL here.  */\n+    output_file = CPP_OPTION (pfile, out_fname);\n \n-  /* If dependencies go to standard output, or -MG is used, we should\n-     suppress output, including -dM, -dI etc.  */\n-  if (CPP_OPTION (pfile, deps_file) == 0\n-      || CPP_OPTION (pfile, print_deps_missing_files))\n-    {\n-      CPP_OPTION (pfile, no_output) = 1;\n-      CPP_OPTION (pfile, dump_macros) = 0;\n-      CPP_OPTION (pfile, dump_includes) = 0;\n-    }\n+  /* Command line -MF overrides environment variables and default.  */\n+  if (CPP_OPTION (pfile, deps_file) == 0)\n+    CPP_OPTION (pfile, deps_file) = output_file;\n+\n+  /* When doing dependencies, we should suppress all output, including\n+     -dM, -dI etc.  */\n+  CPP_OPTION (pfile, no_output) = 1;\n+  CPP_OPTION (pfile, dump_macros) = 0;\n+  CPP_OPTION (pfile, dump_includes) = 0;\n }\n \n /* Handle --help output.  */"}, {"sha": "f22e855d993e005a50b6ec42df68fc8f7fc595d8", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 27, "deletions": 11, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56cd5b954eb70a938f01a73ccc0ada6cb5fa4a36/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56cd5b954eb70a938f01a73ccc0ada6cb5fa4a36/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=56cd5b954eb70a938f01a73ccc0ada6cb5fa4a36", "patch": "@@ -3956,17 +3956,23 @@ suffix replaced with object file suffix.  If there are many included\n files then the rule is split into several lines using @samp{\\}-newline.\n The rule has no commands.\n \n+Passing @option{-M} to the driver implies @option{-E}.\n+\n @item -MM\n Like @option{-M}, but mention only the files included with @code{@w{#include\n \"@var{file}\"}} or with @option{-include} or @option{-imacros} command line\n options.  System header files included with @code{@w{#include <@var{file}>}}\n are omitted.\n \n @item -MF @var{file}\n-When used with @option{-M} or @option{-MM}, specifies a file to write the\n-dependencies to.  This allows the preprocessor to write the preprocessed\n-file to stdout normally.  If no @option{-MF} switch is given, CPP sends\n-the rules to stdout and suppresses normal preprocessed output.\n+@anchor{-MF}\n+When used with @option{-M} or @option{-MM}, specifies a\n+file to write the dependencies to.  If no @option{-MF} switch is given\n+the preprocessor sends the rules to the same place it would have sent\n+preprocessed output.\n+\n+When used with the driver options @option{-MD} or @option{-MMD},\n+@option{-MF} overrides the default dependency output file.\n \n @item -MG\n When used with @option{-M} or @option{-MM}, @option{-MG} says to treat missing\n@@ -4019,14 +4025,24 @@ $$(objpfx)foo.o: foo.c\n The default target is automatically quoted, as if it were given with\n @option{-MQ}.\n \n-@item -MD @var{file}\n-@itemx -MMD @var{file}\n-@option{-MD @var{file}} is equivalent to @option{-M -MF @var{file}}, and\n-@option{-MMD @var{file}} is equivalent to @option{-MM -MF @var{file}}.\n+@item -MD\n+@option{-MD} is equivalent to @option{-M -MF @var{file}}, except that\n+@option{-E} is not implied.  The driver determines @var{file} based on\n+whether an @option{-o} option is given.  If it is, the driver uses its\n+argument but with a suffix of @file{.d}, otherwise it take the\n+basename of the input file and applies a @file{.d} suffix.\n+\n+If @option{-MD} is used in conjunction with @option{-E}, any\n+@option{-o} switch is understood to specify the dependency output file\n+(but @pxref{-MF}), but if used without @option{-E}, each @option{-o}\n+is understood to specify a target object file.\n+\n+Since @option{-E} is not implied, @option{-MD} can be used to generate\n+a dependency output file as a side-effect of the compilation process.\n \n-Due to limitations in the compiler driver, you must use these switches\n-when you want to generate a dependency file as a side-effect of normal\n-compilation.\n+@item -MMD\n+Like @option{-MD} except mention only user header files, not system\n+-header files.\n \n @item -x c\n @itemx -x c++"}, {"sha": "a0e44d584a56b182eddc199756e5a001e5365ed7", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 32, "deletions": 18, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56cd5b954eb70a938f01a73ccc0ada6cb5fa4a36/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56cd5b954eb70a938f01a73ccc0ada6cb5fa4a36/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=56cd5b954eb70a938f01a73ccc0ada6cb5fa4a36", "patch": "@@ -4029,15 +4029,19 @@ Used with the @option{-E} option.\n @item -M\n @opindex M\n Instead of outputting the result of preprocessing, output a rule\n-suitable for @code{make} describing the dependencies of the main source\n-file.  The preprocessor outputs one @code{make} rule containing the\n-object file name for that source file, a colon, and the names of all the\n-included files.  Unless overridden explicitly, the object file name\n-consists of the basename of the source file with any suffix replaced with\n-object file suffix.  If there are many included files then the\n-rule is split into several lines using @samp{\\}-newline.\n+suitable for @command{make} describing the dependencies of the main\n+source file.  The preprocessor outputs one @command{make} rule containing\n+the object file name for that source file, a colon, and the names of all\n+the included files, including those coming from @option{-include} or\n+@option{-imacros} command line options.\n \n-@option{-M} implies @option{-E}.\n+Unless specified explicitly (with @option{-MT} or @option{-MQ}), the\n+object file name consists of the basename of the source file with any\n+suffix replaced with object file suffix.  If there are many included\n+files then the rule is split into several lines using @samp{\\}-newline.\n+The rule has no commands.\n+\n+Passing @option{-M} to the driver implies @option{-E}.\n \n @item -MM\n @opindex MM\n@@ -4047,13 +4051,19 @@ Like @option{-M}, but mention only the files included with @samp{#include\n \n @item -MD\n @opindex MD\n-Like @option{-M} but the dependency information is written to a file\n-rather than stdout.  @code{gcc} will use the same file name and\n-directory as the object file, but with the suffix @file{.d} instead.\n+@option{-MD} is equivalent to @option{-M -MF @var{file}}, except that\n+@option{-E} is not implied.  The driver determines @var{file} based on\n+whether an @option{-o} option is given.  If it is, the driver uses its\n+argument but with a suffix of @file{.d}, otherwise it take the\n+basename of the input file and applies a @file{.d} suffix.\n+\n+If @option{-MD} is used in conjunction with @option{-E}, any\n+@option{-o} switch is understood to specify the dependency output file\n+(but @pxref{-MF}), but if used without @option{-E}, each @option{-o}\n+is understood to specify a target object file.\n \n-This is in addition to compiling the main file as specified---@option{-MD}\n-does not inhibit ordinary compilation the way @option{-M} does,\n-unless you also specify @option{-MG}.\n+Since @option{-E} is not implied, @option{-MD} can be used to generate\n+a dependency output file as a side-effect of the compilation process.\n \n With Mach, you can use the utility @code{md} to merge multiple\n dependency files into a single dependency file suitable for using with\n@@ -4066,10 +4076,14 @@ Like @option{-MD} except mention only user header files, not system\n \n @item -MF @var{file}\n @opindex MF\n-When used with @option{-M} or @option{-MM}, specifies a file to write the\n-dependencies to.  This allows the preprocessor to write the preprocessed\n-file to stdout normally.  If no @option{-MF} switch is given, CPP sends\n-the rules to stdout and suppresses normal preprocessed output.\n+@anchor{-MF}\n+When used with @option{-M} or @option{-MM}, specifies a\n+file to write the dependencies to.  If no @option{-MF} switch is given\n+the preprocessor sends the rules to the same place it would have sent\n+preprocessed output.\n+\n+When used with the driver options @option{-MD} or @option{-MMD},\n+@option{-MF} overrides the default dependency output file.\n \n Another way to specify output of a @code{make} rule is by setting\n the environment variable @env{DEPENDENCIES_OUTPUT} (@pxref{Environment"}, {"sha": "1fcd8f328229b7b2e89f6f4f2fb65cba8499cc56", "filename": "gcc/gcc.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56cd5b954eb70a938f01a73ccc0ada6cb5fa4a36/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56cd5b954eb70a938f01a73ccc0ada6cb5fa4a36/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=56cd5b954eb70a938f01a73ccc0ada6cb5fa4a36", "patch": "@@ -665,7 +665,8 @@ static const char *cpp_unique_options =\n  %{nostdinc*} %{C} %{v} %{I*} %{P} %{$} %I\\\n  %{MD:-M -MF %W{!o: %b.d}%W{o*:%.d%*}}\\\n  %{MMD:-MM -MF %W{!o: %b.d}%W{o*:%.d%*}}\\\n- %{M} %{MM} %W{MF*} %{MG} %{MP} %{MQ*} %{MT*} %{!E:%{M|MD|MM|MMD:%{o*:-MQ %*}}}\\\n+ %{M} %{MM} %W{MF*} %{MG} %{MP} %{MQ*} %{MT*}\\\n+ %{!E:%{!M:%{!MM:%{MD|MMD:%{o*:-MQ %*}}}}}\\\n  %{!no-gcc:-D__GNUC__=%v1 -D__GNUC_MINOR__=%v2 -D__GNUC_PATCHLEVEL__=%v3}\\\n  %{!undef:%{!ansi:%{!std=*:%p}%{std=gnu*:%p}} %P} %{trigraphs}\\\n  %{Os:-D__OPTIMIZE_SIZE__} %{O*:%{!O0:-D__OPTIMIZE__}}\\\n@@ -674,7 +675,7 @@ static const char *cpp_unique_options =\n  %{ffreestanding:-D__STDC_HOSTED__=0} %{fno-hosted:-D__STDC_HOSTED__=0}\\\n  %{!ffreestanding:%{!fno-hosted:-D__STDC_HOSTED__=1}} %{remap}\\\n  %{g3:-dD} %{H} %C %{D*&U*&A*} %{i*} %Z %i\\\n- %{E:%W{o*}}\";\n+ %{E|M|MM:%W{o*}}\";\n \n /* This contains cpp options which are common with cc1_options and are passed\n    only when preprocessing only to avoid duplication.  */"}]}