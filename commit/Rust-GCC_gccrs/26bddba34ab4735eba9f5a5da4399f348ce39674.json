{"sha": "26bddba34ab4735eba9f5a5da4399f348ce39674", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZiZGRiYTM0YWI0NzM1ZWJhOWY1YTVkYTQzOTlmMzQ4Y2UzOTY3NA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-05-17T16:02:33Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-05-17T16:02:33Z"}, "message": "Fixes to Doxygen comments in libstdc++ headers\n\n\t* include/bits/refwrap.h: Fix Doxygen warning.\n\t* include/bits/specfun.h: Likewise.\n\t* include/bits/std_function.h: Likewise.\n\t* include/bits/stl_algo.h (set_union, set_intersection)\n\t(set_difference, set_symmetric_difference): Add Doxygen @param tags\n\tfor output iterator parameters.\n\t* include/bits/stl_iterator.h (inserter): Add Doxygen @param tag for\n\titerator parameter.\n\t* include/std/mutex (try_lock, lock): Change Mutex to Lockable in\n\tDoxygen comments.\n\nFrom-SVN: r248160", "tree": {"sha": "183b68df4e3d8fa39a33a57c2f1a766971d192fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/183b68df4e3d8fa39a33a57c2f1a766971d192fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26bddba34ab4735eba9f5a5da4399f348ce39674", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26bddba34ab4735eba9f5a5da4399f348ce39674", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26bddba34ab4735eba9f5a5da4399f348ce39674", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26bddba34ab4735eba9f5a5da4399f348ce39674/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "539f481a292d606bd7cf092880c51412e95d92b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/539f481a292d606bd7cf092880c51412e95d92b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/539f481a292d606bd7cf092880c51412e95d92b6"}], "stats": {"total": 44, "additions": 33, "deletions": 11}, "files": [{"sha": "132f9ee8b4edac47259486307e611f0aa759d5e0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26bddba34ab4735eba9f5a5da4399f348ce39674/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26bddba34ab4735eba9f5a5da4399f348ce39674/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=26bddba34ab4735eba9f5a5da4399f348ce39674", "patch": "@@ -1,3 +1,16 @@\n+2017-05-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/refwrap.h: Fix Doxygen warning.\n+\t* include/bits/specfun.h: Likewise.\n+\t* include/bits/std_function.h: Likewise.\n+\t* include/bits/stl_algo.h (set_union, set_intersection)\n+\t(set_difference, set_symmetric_difference): Add Doxygen @param tags\n+\tfor output iterator parameters.\n+\t* include/bits/stl_iterator.h (inserter): Add Doxygen @param tag for\n+\titerator parameter.\n+\t* include/std/mutex (try_lock, lock): Change Mutex to Lockable in\n+\tDoxygen comments.\n+\n 2017-05-17  Ville Voutilainen  <ville.voutilainen@gmail.com>\n \n \tImplement new C++ intrinsics __is_assignable and __is_constructible."}, {"sha": "5e5b61060e357b249704defadff0ff0942617102", "filename": "libstdc++-v3/include/bits/refwrap.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26bddba34ab4735eba9f5a5da4399f348ce39674/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frefwrap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26bddba34ab4735eba9f5a5da4399f348ce39674/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frefwrap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frefwrap.h?ref=26bddba34ab4735eba9f5a5da4399f348ce39674", "patch": "@@ -22,7 +22,7 @@\n // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n // <http://www.gnu.org/licenses/>.\n \n-/** @file include/bits/bind.h\n+/** @file include/bits/refwrap.h\n  *  This is an internal header file, included by other library headers.\n  *  Do not attempt to use it directly. @headername{functional}\n  */"}, {"sha": "82bd02e227a88ee00c85e608ac49a042d199b3aa", "filename": "libstdc++-v3/include/bits/specfun.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26bddba34ab4735eba9f5a5da4399f348ce39674/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fspecfun.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26bddba34ab4735eba9f5a5da4399f348ce39674/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fspecfun.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fspecfun.h?ref=26bddba34ab4735eba9f5a5da4399f348ce39674", "patch": "@@ -118,8 +118,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    * versions of this math library because of implementation concerns.\n    * However, since they were in the TR1 version and since they are popular\n    * we kept them as an extension in namespace @c __gnu_cxx:\n-   * - @ref conf_hyperg \"conf_hyperg - Confluent hypergeometric functions\"\n-   * - @ref hyperg \"hyperg - Hypergeometric functions\"\n+   * - @ref __gnu_cxx::conf_hyperg \"conf_hyperg - Confluent hypergeometric functions\"\n+   * - @ref __gnu_cxx::hyperg \"hyperg - Hypergeometric functions\"\n    *\n    * @section general General Features\n    *"}, {"sha": "c4ea34733609d5f5da47d0ded3188c5c371df9c7", "filename": "libstdc++-v3/include/bits/std_function.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26bddba34ab4735eba9f5a5da4399f348ce39674/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_function.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26bddba34ab4735eba9f5a5da4399f348ce39674/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_function.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_function.h?ref=26bddba34ab4735eba9f5a5da4399f348ce39674", "patch": "@@ -22,7 +22,7 @@\n // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n // <http://www.gnu.org/licenses/>.\n \n-/** @file include/bits/function.h\n+/** @file include/bits/std_function.h\n  *  This is an internal header file, included by other library headers.\n  *  Do not attempt to use it directly. @headername{functional}\n  */"}, {"sha": "aaa4eefbe9a76975da932755a51aa064d0df76a8", "filename": "libstdc++-v3/include/bits/stl_algo.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26bddba34ab4735eba9f5a5da4399f348ce39674/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26bddba34ab4735eba9f5a5da4399f348ce39674/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h?ref=26bddba34ab4735eba9f5a5da4399f348ce39674", "patch": "@@ -5103,6 +5103,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  @param  __last1   End of first range.\n    *  @param  __first2  Start of second range.\n    *  @param  __last2   End of second range.\n+   *  @param  __result  Start of output range.\n    *  @return  End of the output range.\n    *  @ingroup set_algorithms\n    *\n@@ -5151,6 +5152,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  @param  __last1   End of first range.\n    *  @param  __first2  Start of second range.\n    *  @param  __last2   End of second range.\n+   *  @param  __result  Start of output range.\n    *  @param  __comp    The comparison functor.\n    *  @return  End of the output range.\n    *  @ingroup set_algorithms\n@@ -5223,6 +5225,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  @param  __last1   End of first range.\n    *  @param  __first2  Start of second range.\n    *  @param  __last2   End of second range.\n+   *  @param  __result  Start of output range.\n    *  @return  End of the output range.\n    *  @ingroup set_algorithms\n    *\n@@ -5269,6 +5272,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  @param  __last1   End of first range.\n    *  @param  __first2  Start of second range.\n    *  @param  __last2   End of second range.\n+   *  @param  __result  Start of output range.\n    *  @param  __comp    The comparison functor.\n    *  @return  End of the output range.\n    *  @ingroup set_algorithms\n@@ -5341,6 +5345,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  @param  __last1   End of first range.\n    *  @param  __first2  Start of second range.\n    *  @param  __last2   End of second range.\n+   *  @param  __result  Start of output range.\n    *  @return  End of the output range.\n    *  @ingroup set_algorithms\n    *\n@@ -5389,6 +5394,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  @param  __last1   End of first range.\n    *  @param  __first2  Start of second range.\n    *  @param  __last2   End of second range.\n+   *  @param  __result  Start of output range.\n    *  @param  __comp    The comparison functor.\n    *  @return  End of the output range.\n    *  @ingroup set_algorithms\n@@ -5471,6 +5477,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  @param  __last1   End of first range.\n    *  @param  __first2  Start of second range.\n    *  @param  __last2   End of second range.\n+   *  @param  __result  Start of output range.\n    *  @return  End of the output range.\n    *  @ingroup set_algorithms\n    *\n@@ -5519,6 +5526,7 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n    *  @param  __last1   End of first range.\n    *  @param  __first2  Start of second range.\n    *  @param  __last2   End of second range.\n+   *  @param  __result  Start of output range.\n    *  @param  __comp    The comparison functor.\n    *  @return  End of the output range.\n    *  @ingroup set_algorithms"}, {"sha": "18c6e3f625e2af5a967dbb07898323ef7f450fde", "filename": "libstdc++-v3/include/bits/stl_iterator.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26bddba34ab4735eba9f5a5da4399f348ce39674/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26bddba34ab4735eba9f5a5da4399f348ce39674/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h?ref=26bddba34ab4735eba9f5a5da4399f348ce39674", "patch": "@@ -721,6 +721,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   /**\n    *  @param __x  A container of arbitrary type.\n+   *  @param __i  An iterator into the container.\n    *  @return  An instance of insert_iterator working on @p __x.\n    *\n    *  This wrapper function helps in creating insert_iterator instances."}, {"sha": "f4bd50fd4a064f8722fdd53f871078448554dc3b", "filename": "libstdc++-v3/include/bits/string_view.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26bddba34ab4735eba9f5a5da4399f348ce39674/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstring_view.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26bddba34ab4735eba9f5a5da4399f348ce39674/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstring_view.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstring_view.tcc?ref=26bddba34ab4735eba9f5a5da4399f348ce39674", "patch": "@@ -22,7 +22,7 @@\n // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n // <http://www.gnu.org/licenses/>.\n \n-/** @file bits/string_view.tcc\n+/** @file include/bits/string_view.tcc\n  *  This is an internal header file, included by other library headers.\n  *  Do not attempt to use it directly. @headername{string_view}\n  */"}, {"sha": "df48b4605711bee1c2e17d9d12e68244516a0df7", "filename": "libstdc++-v3/include/std/mutex", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26bddba34ab4735eba9f5a5da4399f348ce39674/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26bddba34ab4735eba9f5a5da4399f348ce39674/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex?ref=26bddba34ab4735eba9f5a5da4399f348ce39674", "patch": "@@ -507,9 +507,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     };\n \n   /** @brief Generic try_lock.\n-   *  @param __l1 Meets Mutex requirements (try_lock() may throw).\n-   *  @param __l2 Meets Mutex requirements (try_lock() may throw).\n-   *  @param __l3 Meets Mutex requirements (try_lock() may throw).\n+   *  @param __l1 Meets Lockable requirements (try_lock() may throw).\n+   *  @param __l2 Meets Lockable requirements (try_lock() may throw).\n+   *  @param __l3 Meets Lockable requirements (try_lock() may throw).\n    *  @return Returns -1 if all try_lock() calls return true. Otherwise returns\n    *          a 0-based index corresponding to the argument that returned false.\n    *  @post Either all arguments are locked, or none will be.\n@@ -527,9 +527,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   /** @brief Generic lock.\n-   *  @param __l1 Meets Mutex requirements (try_lock() may throw).\n-   *  @param __l2 Meets Mutex requirements (try_lock() may throw).\n-   *  @param __l3 Meets Mutex requirements (try_lock() may throw).\n+   *  @param __l1 Meets Lockable requirements (try_lock() may throw).\n+   *  @param __l2 Meets Lockable requirements (try_lock() may throw).\n+   *  @param __l3 Meets Lockable requirements (try_lock() may throw).\n    *  @throw An exception thrown by an argument's lock() or try_lock() member.\n    *  @post All arguments are locked.\n    *"}]}