{"sha": "1cdc0d8f36ebf4752ff376992344dd3a555a5ec5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNkYzBkOGYzNmViZjQ3NTJmZjM3Njk5MjM0NGRkM2E1NTVhNWVjNQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2008-12-18T22:13:05Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2008-12-18T22:13:05Z"}, "message": "rs6000.c (rs6000_generate_compare): Condition choice of e500 comparison instructions on flag_finite_math_only &&...\n\n\t* config/rs6000/rs6000.c (rs6000_generate_compare): Condition\n\tchoice of e500 comparison instructions on flag_finite_math_only &&\n\t!flag_trapping_math, not flag_unsafe_math_optimizations.\n\t* config/rs6000/rs6000.md (abstf2): Condition choice of e500\n\tinstructions on flag_finite_math_only && !flag_trapping_math, not\n\tflag_unsafe_math_optimizations.\n\t(bltgt, sltgt): Disable for TARGET_HARD_FLOAT && !TARGET_FPRS.\n\t* config/rs6000/spe.md (cmpsfeq_gpr, tstsfeq_gpr, cmpsfgt_gpr,\n\ttstsfgt_gpr, cmpsflt_gpr, tstsflt_gpr, cmpdfeq_gpr, tstdfeq_gpr,\n\tcmpdfgt_gpr, tstdfgt_gpr, cmpdflt_gpr, tstdflt_gpr, cmptfeq_gpr,\n\ttsttfeq_gpr, cmptfgt_gpr, tsttfgt_gpr, cmptflt_gpr, tsttflt_gpr):\n\tCondition choice of comparison instructions on\n\tflag_finite_math_only && !flag_trapping_math, not\n\tflag_unsafe_math_optimizations.\n\nFrom-SVN: r142822", "tree": {"sha": "9b0688852e7a5fcbd5f1aefa62f1003783fe0aba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b0688852e7a5fcbd5f1aefa62f1003783fe0aba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cdc0d8f36ebf4752ff376992344dd3a555a5ec5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cdc0d8f36ebf4752ff376992344dd3a555a5ec5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cdc0d8f36ebf4752ff376992344dd3a555a5ec5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cdc0d8f36ebf4752ff376992344dd3a555a5ec5/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6559c761d4fca5fa1825007a2c5e0d8bed5ef9be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6559c761d4fca5fa1825007a2c5e0d8bed5ef9be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6559c761d4fca5fa1825007a2c5e0d8bed5ef9be"}], "stats": {"total": 95, "additions": 62, "deletions": 33}, "files": [{"sha": "add24970820d961bc143414259daccaaba21e204", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cdc0d8f36ebf4752ff376992344dd3a555a5ec5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cdc0d8f36ebf4752ff376992344dd3a555a5ec5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1cdc0d8f36ebf4752ff376992344dd3a555a5ec5", "patch": "@@ -1,3 +1,20 @@\n+2008-12-18  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_generate_compare): Condition\n+\tchoice of e500 comparison instructions on flag_finite_math_only &&\n+\t!flag_trapping_math, not flag_unsafe_math_optimizations.\n+\t* config/rs6000/rs6000.md (abstf2): Condition choice of e500\n+\tinstructions on flag_finite_math_only && !flag_trapping_math, not\n+\tflag_unsafe_math_optimizations.\n+\t(bltgt, sltgt): Disable for TARGET_HARD_FLOAT && !TARGET_FPRS.\n+\t* config/rs6000/spe.md (cmpsfeq_gpr, tstsfeq_gpr, cmpsfgt_gpr,\n+\ttstsfgt_gpr, cmpsflt_gpr, tstsflt_gpr, cmpdfeq_gpr, tstdfeq_gpr,\n+\tcmpdfgt_gpr, tstdfgt_gpr, cmpdflt_gpr, tstdflt_gpr, cmptfeq_gpr,\n+\ttsttfeq_gpr, cmptfgt_gpr, tsttfgt_gpr, cmptflt_gpr, tsttflt_gpr):\n+\tCondition choice of comparison instructions on\n+\tflag_finite_math_only && !flag_trapping_math, not\n+\tflag_unsafe_math_optimizations.\n+\n 2008-12-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* configure: Regenerate."}, {"sha": "49551f61b5808a15b7913ae5853ad6aca4f89109", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cdc0d8f36ebf4752ff376992344dd3a555a5ec5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cdc0d8f36ebf4752ff376992344dd3a555a5ec5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=1cdc0d8f36ebf4752ff376992344dd3a555a5ec5", "patch": "@@ -12798,23 +12798,23 @@ rs6000_generate_compare (enum rtx_code code)\n \t  switch (op_mode)\n \t    {\n \t    case SFmode:\n-\t      cmp = flag_unsafe_math_optimizations\n+\t      cmp = (flag_finite_math_only && !flag_trapping_math)\n \t\t? gen_tstsfeq_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t   rs6000_compare_op1)\n \t\t: gen_cmpsfeq_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t   rs6000_compare_op1);\n \t      break;\n \n \t    case DFmode:\n-\t      cmp = flag_unsafe_math_optimizations\n+\t      cmp = (flag_finite_math_only && !flag_trapping_math)\n \t\t? gen_tstdfeq_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t   rs6000_compare_op1)\n \t\t: gen_cmpdfeq_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t   rs6000_compare_op1);\n \t      break;\n \n \t    case TFmode:\n-\t      cmp = flag_unsafe_math_optimizations\n+\t      cmp = (flag_finite_math_only && !flag_trapping_math)\n \t\t? gen_tsttfeq_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t   rs6000_compare_op1)\n \t\t: gen_cmptfeq_gpr (compare_result, rs6000_compare_op0,\n@@ -12830,23 +12830,23 @@ rs6000_generate_compare (enum rtx_code code)\n \t  switch (op_mode)\n \t    {\n \t    case SFmode:\n-\t      cmp = flag_unsafe_math_optimizations\n+\t      cmp = (flag_finite_math_only && !flag_trapping_math)\n \t\t? gen_tstsfgt_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t   rs6000_compare_op1)\n \t\t: gen_cmpsfgt_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t   rs6000_compare_op1);\n \t      break;\n \n \t    case DFmode:\n-\t      cmp = flag_unsafe_math_optimizations\n+\t      cmp = (flag_finite_math_only && !flag_trapping_math)\n \t\t? gen_tstdfgt_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t   rs6000_compare_op1)\n \t\t: gen_cmpdfgt_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t   rs6000_compare_op1);\n \t      break;\n \n \t    case TFmode:\n-\t      cmp = flag_unsafe_math_optimizations\n+\t      cmp = (flag_finite_math_only && !flag_trapping_math)\n \t\t? gen_tsttfgt_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t   rs6000_compare_op1)\n \t\t: gen_cmptfgt_gpr (compare_result, rs6000_compare_op0,\n@@ -12862,23 +12862,23 @@ rs6000_generate_compare (enum rtx_code code)\n \t  switch (op_mode)\n \t    {\n \t    case SFmode:\n-\t      cmp = flag_unsafe_math_optimizations\n+\t      cmp = (flag_finite_math_only && !flag_trapping_math)\n \t\t? gen_tstsflt_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t   rs6000_compare_op1)\n \t\t: gen_cmpsflt_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t   rs6000_compare_op1);\n \t      break;\n \n \t    case DFmode:\n-\t      cmp = flag_unsafe_math_optimizations\n+\t      cmp = (flag_finite_math_only && !flag_trapping_math)\n \t\t? gen_tstdflt_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t   rs6000_compare_op1)\n \t\t: gen_cmpdflt_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t   rs6000_compare_op1);\n \t      break;\n \n \t    case TFmode:\n-\t      cmp = flag_unsafe_math_optimizations\n+\t      cmp = (flag_finite_math_only && !flag_trapping_math)\n \t\t? gen_tsttflt_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t   rs6000_compare_op1)\n \t\t: gen_cmptflt_gpr (compare_result, rs6000_compare_op0,\n@@ -12913,23 +12913,23 @@ rs6000_generate_compare (enum rtx_code code)\n \t  switch (op_mode)\n \t    {\n \t    case SFmode:\n-\t      cmp = flag_unsafe_math_optimizations\n+\t      cmp = (flag_finite_math_only && !flag_trapping_math)\n \t\t? gen_tstsfeq_gpr (compare_result2, rs6000_compare_op0,\n \t\t\t\t   rs6000_compare_op1)\n \t\t: gen_cmpsfeq_gpr (compare_result2, rs6000_compare_op0,\n \t\t\t\t   rs6000_compare_op1);\n \t      break;\n \n \t    case DFmode:\n-\t      cmp = flag_unsafe_math_optimizations\n+\t      cmp = (flag_finite_math_only && !flag_trapping_math)\n \t\t? gen_tstdfeq_gpr (compare_result2, rs6000_compare_op0,\n \t\t\t\t   rs6000_compare_op1)\n \t\t: gen_cmpdfeq_gpr (compare_result2, rs6000_compare_op0,\n \t\t\t\t   rs6000_compare_op1);\n \t      break;\n \n \t    case TFmode:\n-\t      cmp = flag_unsafe_math_optimizations\n+\t      cmp = (flag_finite_math_only && !flag_trapping_math)\n \t\t? gen_tsttfeq_gpr (compare_result2, rs6000_compare_op0,\n \t\t\t\t   rs6000_compare_op1)\n \t\t: gen_cmptfeq_gpr (compare_result2, rs6000_compare_op0,"}, {"sha": "a5a6ec17b269f4e193c9720aeffa444ecad0914f", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cdc0d8f36ebf4752ff376992344dd3a555a5ec5/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cdc0d8f36ebf4752ff376992344dd3a555a5ec5/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=1cdc0d8f36ebf4752ff376992344dd3a555a5ec5", "patch": "@@ -9002,7 +9002,7 @@\n   rtx label = gen_label_rtx ();\n   if (TARGET_E500_DOUBLE)\n     {\n-      if (flag_unsafe_math_optimizations)\n+      if (flag_finite_math_only && !flag_trapping_math)\n \temit_insn (gen_spe_abstf2_tst (operands[0], operands[1], label));\n       else\n \temit_insn (gen_spe_abstf2_cmp (operands[0], operands[1], label));\n@@ -11854,7 +11854,7 @@\n \n (define_expand \"bltgt\"\n   [(use (match_operand 0 \"\" \"\"))]\n-  \"\"\n+  \"! (TARGET_HARD_FLOAT && !TARGET_FPRS)\"\n   \"{ rs6000_emit_cbranch (LTGT, operands[0]); DONE; }\")\n \n ;; For SNE, we would prefer that the xor/abs sequence be used for integers.\n@@ -11988,7 +11988,7 @@\n \n (define_expand \"sltgt\"\n   [(clobber (match_operand:SI 0 \"gpc_reg_operand\" \"\"))]\n-  \"\"\n+  \"! (TARGET_HARD_FLOAT && !TARGET_FPRS)\"\n   \"{ rs6000_emit_sCOND (LTGT, operands[0]); DONE; }\")\n \n (define_expand \"stack_protect_set\""}, {"sha": "f8118afad22693f2bcabce5a7ca0d921b6b5ff50", "filename": "gcc/config/rs6000/spe.md", "status": "modified", "additions": 30, "deletions": 18, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cdc0d8f36ebf4752ff376992344dd3a555a5ec5/gcc%2Fconfig%2Frs6000%2Fspe.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cdc0d8f36ebf4752ff376992344dd3a555a5ec5/gcc%2Fconfig%2Frs6000%2Fspe.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fspe.md?ref=1cdc0d8f36ebf4752ff376992344dd3a555a5ec5", "patch": "@@ -2933,7 +2933,8 @@\n \t [(compare:CCFP (match_operand:SF 1 \"gpc_reg_operand\" \"r\")\n \t\t\t(match_operand:SF 2 \"gpc_reg_operand\" \"r\"))]\n \t 1000))]\n-  \"TARGET_HARD_FLOAT && !TARGET_FPRS && !flag_unsafe_math_optimizations\"\n+  \"TARGET_HARD_FLOAT && !TARGET_FPRS\n+   && !(flag_finite_math_only && !flag_trapping_math)\"\n   \"efscmpeq %0,%1,%2\"\n   [(set_attr \"type\" \"veccmp\")])\n \n@@ -2943,7 +2944,8 @@\n \t [(compare:CCFP (match_operand:SF 1 \"gpc_reg_operand\" \"r\")\n \t\t\t(match_operand:SF 2 \"gpc_reg_operand\" \"r\"))]\n \t 1001))]\n-  \"TARGET_HARD_FLOAT && !TARGET_FPRS && flag_unsafe_math_optimizations\"\n+  \"TARGET_HARD_FLOAT && !TARGET_FPRS\n+   && flag_finite_math_only && !flag_trapping_math\"\n   \"efststeq %0,%1,%2\"\n   [(set_attr \"type\" \"veccmpsimple\")])\n \n@@ -2953,7 +2955,8 @@\n \t [(compare:CCFP (match_operand:SF 1 \"gpc_reg_operand\" \"r\")\n \t\t\t(match_operand:SF 2 \"gpc_reg_operand\" \"r\"))]\n \t 1002))]\n-  \"TARGET_HARD_FLOAT && !TARGET_FPRS && !flag_unsafe_math_optimizations\"\n+  \"TARGET_HARD_FLOAT && !TARGET_FPRS\n+   && !(flag_finite_math_only && !flag_trapping_math)\"\n   \"efscmpgt %0,%1,%2\"\n   [(set_attr \"type\" \"veccmp\")])\n \n@@ -2963,7 +2966,8 @@\n \t [(compare:CCFP (match_operand:SF 1 \"gpc_reg_operand\" \"r\")\n \t\t\t(match_operand:SF 2 \"gpc_reg_operand\" \"r\"))]\n \t 1003))]\n-  \"TARGET_HARD_FLOAT && !TARGET_FPRS && flag_unsafe_math_optimizations\"\n+  \"TARGET_HARD_FLOAT && !TARGET_FPRS\n+   && flag_finite_math_only && !flag_trapping_math\"\n   \"efststgt %0,%1,%2\"\n   [(set_attr \"type\" \"veccmpsimple\")])\n \n@@ -2973,7 +2977,8 @@\n \t [(compare:CCFP (match_operand:SF 1 \"gpc_reg_operand\" \"r\")\n \t\t\t(match_operand:SF 2 \"gpc_reg_operand\" \"r\"))]\n \t 1004))]\n-  \"TARGET_HARD_FLOAT && !TARGET_FPRS && !flag_unsafe_math_optimizations\"\n+  \"TARGET_HARD_FLOAT && !TARGET_FPRS\n+   && !(flag_finite_math_only && !flag_trapping_math)\"\n   \"efscmplt %0,%1,%2\"\n   [(set_attr \"type\" \"veccmp\")])\n \n@@ -2983,7 +2988,8 @@\n \t [(compare:CCFP (match_operand:SF 1 \"gpc_reg_operand\" \"r\")\n \t\t\t(match_operand:SF 2 \"gpc_reg_operand\" \"r\"))]\n \t 1005))]\n-  \"TARGET_HARD_FLOAT && !TARGET_FPRS && flag_unsafe_math_optimizations\"\n+  \"TARGET_HARD_FLOAT && !TARGET_FPRS\n+   && flag_finite_math_only && !flag_trapping_math\"\n   \"efststlt %0,%1,%2\"\n   [(set_attr \"type\" \"veccmpsimple\")])\n \n@@ -2995,7 +3001,8 @@\n \t [(compare:CCFP (match_operand:DF 1 \"gpc_reg_operand\" \"r\")\n \t\t\t(match_operand:DF 2 \"gpc_reg_operand\" \"r\"))]\n \t CMPDFEQ_GPR))]\n-  \"TARGET_HARD_FLOAT && TARGET_E500_DOUBLE && !flag_unsafe_math_optimizations\"\n+  \"TARGET_HARD_FLOAT && TARGET_E500_DOUBLE\n+   && !(flag_finite_math_only && !flag_trapping_math)\"\n   \"efdcmpeq %0,%1,%2\"\n   [(set_attr \"type\" \"veccmp\")])\n \n@@ -3005,7 +3012,8 @@\n \t [(compare:CCFP (match_operand:DF 1 \"gpc_reg_operand\" \"r\")\n \t\t\t(match_operand:DF 2 \"gpc_reg_operand\" \"r\"))]\n \t TSTDFEQ_GPR))]\n-  \"TARGET_HARD_FLOAT && TARGET_E500_DOUBLE && flag_unsafe_math_optimizations\"\n+  \"TARGET_HARD_FLOAT && TARGET_E500_DOUBLE\n+   && flag_finite_math_only && !flag_trapping_math\"\n   \"efdtsteq %0,%1,%2\"\n   [(set_attr \"type\" \"veccmpsimple\")])\n \n@@ -3015,7 +3023,8 @@\n \t [(compare:CCFP (match_operand:DF 1 \"gpc_reg_operand\" \"r\")\n \t\t\t(match_operand:DF 2 \"gpc_reg_operand\" \"r\"))]\n \t CMPDFGT_GPR))]\n-  \"TARGET_HARD_FLOAT && TARGET_E500_DOUBLE && !flag_unsafe_math_optimizations\"\n+  \"TARGET_HARD_FLOAT && TARGET_E500_DOUBLE\n+   && !(flag_finite_math_only && !flag_trapping_math)\"\n   \"efdcmpgt %0,%1,%2\"\n   [(set_attr \"type\" \"veccmp\")])\n \n@@ -3025,7 +3034,8 @@\n \t [(compare:CCFP (match_operand:DF 1 \"gpc_reg_operand\" \"r\")\n \t\t\t(match_operand:DF 2 \"gpc_reg_operand\" \"r\"))]\n \t TSTDFGT_GPR))]\n-  \"TARGET_HARD_FLOAT && TARGET_E500_DOUBLE && flag_unsafe_math_optimizations\"\n+  \"TARGET_HARD_FLOAT && TARGET_E500_DOUBLE\n+   && flag_finite_math_only && !flag_trapping_math\"\n   \"efdtstgt %0,%1,%2\"\n   [(set_attr \"type\" \"veccmpsimple\")])\n \n@@ -3035,7 +3045,8 @@\n \t [(compare:CCFP (match_operand:DF 1 \"gpc_reg_operand\" \"r\")\n \t\t\t(match_operand:DF 2 \"gpc_reg_operand\" \"r\"))]\n \t CMPDFLT_GPR))]\n-  \"TARGET_HARD_FLOAT && TARGET_E500_DOUBLE && !flag_unsafe_math_optimizations\"\n+  \"TARGET_HARD_FLOAT && TARGET_E500_DOUBLE\n+   && !(flag_finite_math_only && !flag_trapping_math)\"\n   \"efdcmplt %0,%1,%2\"\n   [(set_attr \"type\" \"veccmp\")])\n \n@@ -3045,7 +3056,8 @@\n \t [(compare:CCFP (match_operand:DF 1 \"gpc_reg_operand\" \"r\")\n \t\t\t(match_operand:DF 2 \"gpc_reg_operand\" \"r\"))]\n \t TSTDFLT_GPR))]\n-  \"TARGET_HARD_FLOAT && TARGET_E500_DOUBLE && flag_unsafe_math_optimizations\"\n+  \"TARGET_HARD_FLOAT && TARGET_E500_DOUBLE\n+   && flag_finite_math_only && !flag_trapping_math\"\n   \"efdtstlt %0,%1,%2\"\n   [(set_attr \"type\" \"veccmpsimple\")])\n \n@@ -3059,7 +3071,7 @@\n \t CMPTFEQ_GPR))]\n   \"!TARGET_IEEEQUAD\n    && TARGET_HARD_FLOAT && TARGET_E500_DOUBLE && TARGET_LONG_DOUBLE_128\n-   && !flag_unsafe_math_optimizations\"\n+   && !(flag_finite_math_only && !flag_trapping_math)\"\n   \"efdcmpeq %0,%1,%2\\;bng %0,$+8\\;efdcmpeq %0,%L1,%L2\"\n   [(set_attr \"type\" \"veccmp\")\n    (set_attr \"length\" \"12\")])\n@@ -3072,7 +3084,7 @@\n \t TSTTFEQ_GPR))]\n   \"!TARGET_IEEEQUAD\n    && TARGET_HARD_FLOAT && TARGET_E500_DOUBLE && TARGET_LONG_DOUBLE_128\n-   && flag_unsafe_math_optimizations\"\n+   && flag_finite_math_only && !flag_trapping_math\"\n   \"efdtsteq %0,%1,%2\\;bng %0,$+8\\;efdtsteq %0,%L1,%L2\"\n   [(set_attr \"type\" \"veccmpsimple\")\n    (set_attr \"length\" \"12\")])\n@@ -3085,7 +3097,7 @@\n \t CMPTFGT_GPR))]\n   \"!TARGET_IEEEQUAD\n    && TARGET_HARD_FLOAT && TARGET_E500_DOUBLE && TARGET_LONG_DOUBLE_128\n-   && !flag_unsafe_math_optimizations\"\n+   && !(flag_finite_math_only && !flag_trapping_math)\"\n   \"efdcmpgt %0,%1,%2\\;bgt %0,$+16\\;efdcmpeq %0,%1,%2\\;bng %0,$+8\\;efdcmpgt %0,%L1,%L2\"\n   [(set_attr \"type\" \"veccmp\")\n    (set_attr \"length\" \"20\")])\n@@ -3098,7 +3110,7 @@\n \t TSTTFGT_GPR))]\n   \"!TARGET_IEEEQUAD\n    && TARGET_HARD_FLOAT && TARGET_E500_DOUBLE && TARGET_LONG_DOUBLE_128\n-   && flag_unsafe_math_optimizations\"\n+   && flag_finite_math_only && !flag_trapping_math\"\n   \"efdtstgt %0,%1,%2\\;bgt %0,$+16\\;efdtsteq %0,%1,%2\\;bng %0,$+8\\;efdtstgt %0,%L1,%L2\"\n   [(set_attr \"type\" \"veccmpsimple\")\n    (set_attr \"length\" \"20\")])\n@@ -3111,7 +3123,7 @@\n \t CMPTFLT_GPR))]\n   \"!TARGET_IEEEQUAD\n    && TARGET_HARD_FLOAT && TARGET_E500_DOUBLE && TARGET_LONG_DOUBLE_128\n-   && !flag_unsafe_math_optimizations\"\n+   && !(flag_finite_math_only && !flag_trapping_math)\"\n   \"efdcmplt %0,%1,%2\\;bgt %0,$+16\\;efdcmpeq %0,%1,%2\\;bng %0,$+8\\;efdcmplt %0,%L1,%L2\"\n   [(set_attr \"type\" \"veccmp\")\n    (set_attr \"length\" \"20\")])\n@@ -3124,7 +3136,7 @@\n \t TSTTFLT_GPR))]\n   \"!TARGET_IEEEQUAD\n    && TARGET_HARD_FLOAT && TARGET_E500_DOUBLE && TARGET_LONG_DOUBLE_128\n-   && flag_unsafe_math_optimizations\"\n+   && flag_finite_math_only && !flag_trapping_math\"\n   \"efdtstlt %0,%1,%2\\;bgt %0,$+16\\;efdtsteq %0,%1,%2\\;bng %0,$+8\\;efdtstlt %0,%L1,%L2\"\n   [(set_attr \"type\" \"veccmpsimple\")\n    (set_attr \"length\" \"20\")])"}]}