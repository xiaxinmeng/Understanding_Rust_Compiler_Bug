{"sha": "dd1f09c21cbd573bd4fe5ba15b85e49cb77db515", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQxZjA5YzIxY2JkNTczYmQ0ZmU1YmExNWI4NWU0OWNiNzdkYjUxNQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2001-03-07T18:35:46Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-03-07T18:35:46Z"}, "message": "Add Irix 5.2, 6.3 support.\n\n\n2001-03-07  Alexandre Oliva  <aoliva@redhat.com>\n\n\tAdd Irix 5.2, 6.3 support.\n        * config/os/irix/bits: Renamed too...\n        * config/os/irix/irix6.5/bits: this.\n        * config/os/irix/irix5.2/bits: New, copied from irix6.5/bits.\n        * config/os/irix/irix5.2/bits/ctype_base.h: Use _U, _L, _N,\n        _X, _S, _P, _C and _B instead of IRIX-6.5 _IS* macros.\n        * config/os/irix/irix5.2/bits/ctype_noninline.h\n        (ctype<char>::ctype): Initialize _M_table with __ctype.\n        * configure.target: Adjust.\n\nFrom-SVN: r40294", "tree": {"sha": "6931afd42ae56e1dc9397a7abdfd482be108b25f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6931afd42ae56e1dc9397a7abdfd482be108b25f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/comments", "author": null, "committer": null, "parents": [{"sha": "e92044c3161a0e500eed3e8345ea3cade2e83fa4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e92044c3161a0e500eed3e8345ea3cade2e83fa4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e92044c3161a0e500eed3e8345ea3cade2e83fa4"}], "stats": {"total": 326, "additions": 324, "deletions": 2}, "files": [{"sha": "ee266bcd3803d2ec4f7d2c9e1ec3b3b52c523f5e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=dd1f09c21cbd573bd4fe5ba15b85e49cb77db515", "patch": "@@ -1,3 +1,15 @@\n+2001-03-07  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tAdd Irix 5.2, 6.3 support.\n+        * config/os/irix/bits: Renamed too...\n+        * config/os/irix/irix6.5/bits: this.\n+        * config/os/irix/irix5.2/bits: New, copied from irix6.5/bits.\n+        * config/os/irix/irix5.2/bits/ctype_base.h: Use _U, _L, _N,\n+        _X, _S, _P, _C and _B instead of IRIX-6.5 _IS* macros.\n+        * config/os/irix/irix5.2/bits/ctype_noninline.h\n+        (ctype<char>::ctype): Initialize _M_table with __ctype.\n+        * configure.target: Adjust.\n+    \n 2001-03-06  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tlibstdc++/2181"}, {"sha": "bac483e2f161375c8e39f915ab1904063f1bcc1d", "filename": "libstdc++-v3/config/os/irix/irix5.2/bits/atomicity.h", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fbits%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fbits%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fbits%2Fatomicity.h?ref=dd1f09c21cbd573bd4fe5ba15b85e49cb77db515", "patch": "@@ -0,0 +1,50 @@\n+// Low-level functions for atomic operations: IRIX version  -*- C++ -*-\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#ifndef _BITS_ATOMICITY_H\n+#define _BITS_ATOMICITY_H\t1\n+\n+#include <mutex.h>\n+\n+typedef long _Atomic_word;\n+\n+static inline _Atomic_word\n+__exchange_and_add (_Atomic_word* __mem, int __val)\n+{\n+  return (_Atomic_word) test_then_add ((unsigned long*) __mem, __val);\n+}\n+\n+\n+static inline void\n+__atomic_add (_Atomic_word* __mem, int __val)\n+{\n+  __exchange_and_add (__mem, __val);\n+}\n+\n+#endif /* atomicity.h */"}, {"sha": "2626cd3c062d71367eaf6c0d1fd17ecbda023074", "filename": "libstdc++-v3/config/os/irix/irix5.2/bits/ctype_base.h", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fbits%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fbits%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fbits%2Fctype_base.h?ref=dd1f09c21cbd573bd4fe5ba15b85e49cb77db515", "patch": "@@ -0,0 +1,55 @@\n+// Locale support -*- C++ -*-\n+\n+// Copyright (C) 1997-1999, 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882: 22.1  Locales\n+//\n+  \n+// Information as gleaned from /usr/include/ctype.h on irix 5.2\n+  \n+  struct ctype_base\n+  {\n+    // Non-standard typedefs.\n+    typedef unsigned int*      \t__to_type;\n+\n+    // NB: Offsets into ctype<char>::_M_table force a particular size\n+    // on the mask type. Because of this, we don't use an enum.\n+    typedef unsigned char\tmask;\n+    static const mask upper    \t= _U;\n+    static const mask lower \t= _L;\n+    static const mask alpha \t= _U | _L;\n+    static const mask digit \t= _N;\n+    static const mask xdigit \t= _X;\n+    static const mask space \t= _S;\n+    static const mask print \t= _U | _L | _N | _P | _B;\n+    static const mask graph \t= _U | _L | _N | _P;\n+    static const mask cntrl \t= _C;\n+    static const mask punct \t= _P;\n+    static const mask alnum \t= _U | _L | _N;\n+  };"}, {"sha": "400b3a7c391e68cf503e7b41e3eaa757546c5fc8", "filename": "libstdc++-v3/config/os/irix/irix5.2/bits/ctype_inline.h", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fbits%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fbits%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fbits%2Fctype_inline.h?ref=dd1f09c21cbd573bd4fe5ba15b85e49cb77db515", "patch": "@@ -0,0 +1,72 @@\n+// Locale support -*- C++ -*-\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882: 22.1  Locales\n+//\n+  \n+// ctype bits to be inlined go here. Non-inlinable (ie virtual do_*)\n+// functions go in ctype.cc\n+  \n+  bool\n+  ctype<char>::\n+  is(mask __m, char __c) const\n+  { return (_M_table)[__c] & __m; }\n+\n+  const char*\n+  ctype<char>::\n+  is(const char* __low, const char* __high, mask* __vec) const\n+  {\n+    while (__low < __high)\n+      *__vec++ = (_M_table)[*__low++];\n+    return __high;\n+  }\n+\n+  const char*\n+  ctype<char>::\n+  scan_is(mask __m, const char* __low, const char* __high) const\n+  {\n+    while (__low < __high && !((_M_table)[*__low] & __m))\n+      ++__low;\n+    return __low;\n+  }\n+\n+  const char*\n+  ctype<char>::\n+  scan_not(mask __m, const char* __low, const char* __high) const\n+  {\n+    while (__low < __high && ((_M_table + 1)[*__low] & __m) != 0)\n+      ++__low;\n+    return __low;\n+  }\n+\n+\n+\n+\n+"}, {"sha": "cf4b5273e2bad51606d38d36f5d13ebd8b6fde2c", "filename": "libstdc++-v3/config/os/irix/irix5.2/bits/ctype_noninline.h", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fbits%2Fctype_noninline.h?ref=dd1f09c21cbd573bd4fe5ba15b85e49cb77db515", "patch": "@@ -0,0 +1,71 @@\n+// Locale support -*- C++ -*-\n+\n+// Copyright (C) 1997-1999, 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882: 22.1  Locales\n+//\n+  \n+// Information as gleaned from /usr/include/ctype.h\n+\n+  ctype<char>::ctype(const mask* __table, bool __del, size_t __refs)\n+  : __ctype_abstract_base<char>(__refs), _M_del(__table != 0 && __del), \n+    _M_toupper(NULL), _M_tolower(NULL), _M_ctable(NULL), \n+    _M_table(!__table ? __ctype : __table)\n+  { }\n+\n+  char\n+  ctype<char>::do_toupper(char __c) const\n+  { return _toupper(__c); }\n+\n+  const char*\n+  ctype<char>::do_toupper(char* __low, const char* __high) const\n+  {\n+    while (__low < __high)\n+      {\n+\t*__low = do_toupper(*__low);\n+\t++__low;\n+      }\n+    return __high;\n+  }\n+\n+  char\n+  ctype<char>::do_tolower(char __c) const\n+  { return _tolower(__c); }\n+\n+  const char* \n+  ctype<char>::do_tolower(char* __low, const char* __high) const\n+  {\n+    while (__low < __high)\n+      {\n+\t*__low = do_tolower(*__low);\n+\t++__low;\n+      }\n+    return __high;\n+  }\n+"}, {"sha": "b4e2a1f36376150f3e9072e667a983d740ab3b68", "filename": "libstdc++-v3/config/os/irix/irix5.2/bits/os_defines.h", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fbits%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fbits%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fbits%2Fos_defines.h?ref=dd1f09c21cbd573bd4fe5ba15b85e49cb77db515", "patch": "@@ -0,0 +1,58 @@\n+// Specific definitions for IRIX  -*- C++ -*-\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+\n+#ifndef _GLIBCPP_OS_DEFINES\n+#define _GLIBCPP_OS_DEFINES\n+\n+/* System-specific #define, typedefs, corrections, etc, go here.  This\n+   file will come before all others. */\n+\n+/* We need large file support.  There are two ways to turn it on:\n+   by defining either _LARGEFILE64_SOURCE or _SGI_SOURCE.  However,\n+   it does not actually work to define only the former, as then\n+   <sys/stat.h> is invalid: `st_blocks' is defined to be a macro,\n+   but then used as a field name.  So, we have to turn on \n+   _SGI_SOURCE.  That only works if _POSIX_SOURCE is turned off,\n+   so we have to explicitly turn it off.  (Some of the libio C files\n+   explicitly try to turn it on.)  _SGI_SOURCE is actually turned on \n+   implicitly via the command-line.  */\n+#undef _POSIX_SOURCE\n+\n+#define __off_t off_t\n+#define __off64_t off64_t\n+#define __ssize_t ssize_t\n+\n+/* GCC does not use thunks on IRIX.  */\n+#define _G_USING_THUNKS 0\n+\n+#endif\n+\n+\n+"}, {"sha": "c7f5c83f4ed97303592bd27ba303a467f5c81876", "filename": "libstdc++-v3/config/os/irix/irix6.5/bits/atomicity.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fbits%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fbits%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fbits%2Fatomicity.h?ref=dd1f09c21cbd573bd4fe5ba15b85e49cb77db515", "previous_filename": "libstdc++-v3/config/os/irix/bits/atomicity.h"}, {"sha": "08557d158d75d6b0d6a7b500c8930ec6e454e988", "filename": "libstdc++-v3/config/os/irix/irix6.5/bits/ctype_base.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fbits%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fbits%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fbits%2Fctype_base.h?ref=dd1f09c21cbd573bd4fe5ba15b85e49cb77db515", "previous_filename": "libstdc++-v3/config/os/irix/bits/ctype_base.h"}, {"sha": "6a20c096cd5c692c0a9b7c891fc407a96bc4fb01", "filename": "libstdc++-v3/config/os/irix/irix6.5/bits/ctype_inline.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fbits%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fbits%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fbits%2Fctype_inline.h?ref=dd1f09c21cbd573bd4fe5ba15b85e49cb77db515", "previous_filename": "libstdc++-v3/config/os/irix/bits/ctype_inline.h"}, {"sha": "8045feb089071c5bc7ed639435a02ceaf75d3b5d", "filename": "libstdc++-v3/config/os/irix/irix6.5/bits/ctype_noninline.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fbits%2Fctype_noninline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fbits%2Fctype_noninline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fbits%2Fctype_noninline.h?ref=dd1f09c21cbd573bd4fe5ba15b85e49cb77db515", "previous_filename": "libstdc++-v3/config/os/irix/bits/ctype_noninline.h"}, {"sha": "f4988c1aaeb0b63e4a86347d30d4d2d5aa2671ef", "filename": "libstdc++-v3/config/os/irix/irix6.5/bits/os_defines.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fbits%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fbits%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fbits%2Fos_defines.h?ref=dd1f09c21cbd573bd4fe5ba15b85e49cb77db515", "previous_filename": "libstdc++-v3/config/os/irix/bits/os_defines.h"}, {"sha": "1da593fc52991a3daaf98c66e11ae188edaa1bab", "filename": "libstdc++-v3/configure.target", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2Fconfigure.target", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd1f09c21cbd573bd4fe5ba15b85e49cb77db515/libstdc%2B%2B-v3%2Fconfigure.target", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.target?ref=dd1f09c21cbd573bd4fe5ba15b85e49cb77db515", "patch": "@@ -84,8 +84,12 @@ case \"${target_os}\" in\n   linux* | gnu*)\n     os_include_dir=\"config/os/gnu-linux\"\n     ;;\n-  irix6.5*)\n-    os_include_dir=\"config/os/irix\"\n+  irix[1-6] | irix[1-5].* | irix6.[0-4])\n+   # This is known to work on at least IRIX 5.2 and 6.3.\n+   os_include_dir=\"config/os/irix/irix5.2\"\n+   ;;\n+  irix6.5)\n+    os_include_dir=\"config/os/irix/irix6.5\"\n     ;;\n   netbsd*)\n     os_include_dir=\"config/os/bsd/netbsd\""}]}