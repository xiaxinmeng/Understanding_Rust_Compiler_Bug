{"sha": "f31093e26381d6cc132742f59a75ddb937910004", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjMxMDkzZTI2MzgxZDZjYzEzMjc0MmY1OWE3NWRkYjkzNzkxMDAwNA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-02-24T22:33:14Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-02-24T22:33:14Z"}, "message": "(GDB_INV_REF_REGPARM_STABS_LETTER): New macro.\n\n(dbxout_parms): For gdb, output use GDB_INV_REF_REGPARM_STABS_LETTER\nfor parameters passed by invisible reference in registers.\n\nFrom-SVN: r9063", "tree": {"sha": "9db219b4b0995f23af5cb8363c67011c9e9af472", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9db219b4b0995f23af5cb8363c67011c9e9af472"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f31093e26381d6cc132742f59a75ddb937910004", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f31093e26381d6cc132742f59a75ddb937910004", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f31093e26381d6cc132742f59a75ddb937910004", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f31093e26381d6cc132742f59a75ddb937910004/comments", "author": null, "committer": null, "parents": [{"sha": "16bea517d3fb94ee93342b0b94f3474e9b3d4cd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16bea517d3fb94ee93342b0b94f3474e9b3d4cd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16bea517d3fb94ee93342b0b94f3474e9b3d4cd8"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "7363b6fcce858a4c188da85d5e7e3f824ea67ec9", "filename": "gcc/dbxout.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f31093e26381d6cc132742f59a75ddb937910004/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f31093e26381d6cc132742f59a75ddb937910004/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=f31093e26381d6cc132742f59a75ddb937910004", "patch": "@@ -112,6 +112,11 @@ extern int errno;\n #define DBX_REGPARM_STABS_LETTER 'P'\n #endif\n \n+/* This is used for parameters passed by invisible reference in a register.  */\n+#ifndef GDB_INV_REF_REGPARM_STABS_LETTER\n+#define GDB_INV_REF_REGPARM_STABS_LETTER 'a'\n+#endif\n+\n #ifndef DBX_MEMPARM_STABS_LETTER\n #define DBX_MEMPARM_STABS_LETTER 'p'\n #endif\n@@ -2200,7 +2205,10 @@ dbxout_parms (parms)\n \t    /* Parm passed in registers and lives in registers or nowhere.  */\n \n \t    current_sym_code = DBX_REGPARM_STABS_CODE;\n-\t    regparm_letter = DBX_REGPARM_STABS_LETTER;\n+\t    if (use_gnu_debug_info_extensions)\n+\t      regparm_letter = GDB_INV_REF_REGPARM_STABS_LETTER;\n+\t    else\n+\t      regparm_letter = DBX_REGPARM_STABS_LETTER;\n \n \t    /* DECL_RTL looks like (MEM (REG...).  Get the register number.\n \t       If it is an unallocated pseudo-reg, then use the register where\n@@ -2220,13 +2228,13 @@ dbxout_parms (parms)\n \n \t\tfprintf (asmfile, \"%s \\\"%s:%c\", ASM_STABS_OP,\n \t\t\t IDENTIFIER_POINTER (DECL_NAME (parms)),\n-\t\t\t DBX_REGPARM_STABS_LETTER);\n+\t\t\t regparm_letter);\n \t      }\n \t    else\n \t      {\n \t\tcurrent_sym_nchars = 8;\n \t\tfprintf (asmfile, \"%s \\\"(anon):%c\", ASM_STABS_OP,\n-\t\t\t DBX_REGPARM_STABS_LETTER);\n+\t\t\t regparm_letter);\n \t      }\n \n \t    dbxout_type (TREE_TYPE (parms), 0, 0);"}]}