{"sha": "90f78d5d86598f8cadacfb20d8d98c122a466599", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBmNzhkNWQ4NjU5OGY4Y2FkYWNmYjIwZDhkOThjMTIyYTQ2NjU5OQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-06-21T07:30:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-06-21T09:06:27Z"}, "message": "tree-optimization/101121 - avoid infinite SLP build\n\nThe following plugs another hole where we cache a failed SLP build\nattempt with an all-success 'matches'.  It also adds checking that\nwe don't do that.\n\n2021-06-21  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/101121\n\t* tree-vect-slp.c (vect_build_slp_tree_2): To not fail fatally\n\twhen we just lack a stmt with the desired op when doing permutation.\n\t(vect_build_slp_tree): When caching a failed SLP build attempt\n\tassert that at least one lane is marked as not matching.\n\n\t* gfortran.dg/pr101121.f: New testcase.", "tree": {"sha": "e3f865904d94643995bafce42ed98ee04cceaef6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3f865904d94643995bafce42ed98ee04cceaef6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90f78d5d86598f8cadacfb20d8d98c122a466599", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90f78d5d86598f8cadacfb20d8d98c122a466599", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90f78d5d86598f8cadacfb20d8d98c122a466599", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90f78d5d86598f8cadacfb20d8d98c122a466599/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08c85f609a73fb36fdcbd9f327a5a645c20ac816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08c85f609a73fb36fdcbd9f327a5a645c20ac816", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08c85f609a73fb36fdcbd9f327a5a645c20ac816"}], "stats": {"total": 221, "additions": 218, "deletions": 3}, "files": [{"sha": "b623ac1079405d0deb7e40b9159234df9f39af8f", "filename": "gcc/testsuite/gfortran.dg/pr101121.f", "status": "added", "additions": 203, "deletions": 0, "changes": 203, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90f78d5d86598f8cadacfb20d8d98c122a466599/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr101121.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90f78d5d86598f8cadacfb20d8d98c122a466599/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr101121.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr101121.f?ref=90f78d5d86598f8cadacfb20d8d98c122a466599", "patch": "@@ -0,0 +1,203 @@\n+! { dg-do compile }\n+! { dg-options \"-Ofast -std=legacy\" }\n+! { dg-additional-options \"-march=haswell\" { target x86_64-*-* i?86-*-* } }\n+      COMMON /JMSG80/ PI4,PIF,P120,R12,P340,R34,FCS(4,3),E34MAX,\n+     7                IJSAME,KLSAME,IKSMJL\n+      DIMENSION P1(3),FQ(0:5),F1(0:4),F2(0:4),WS(8),WP(8)\n+      DIMENSION VEA(12),VES(9),WES(6)\n+      DIMENSION T(0:20),U(0:20)\n+      DIMENSION T3R(6,3,3,3),T9B(0:20,3,3,3)\n+      DIMENSION F5X(0:12,3,3,3),F6X(0: 6,3,3,3,3)\n+      DIMENSION A31(0:3,0:3),C31(2,0:3),A32(0:3,0:3),C32(2,0:3)\n+      DIMENSION A41(0:3,0:3),C41(2,0:3),A42(0:3,0:3),C42(2,0:3)\n+      DIMENSION A33(16),FIJ00(2),A43(16),FI0K0(2)\n+      DIMENSION SEJJK0(  3),A54(16,  3),C54(2,  3)\n+      DIMENSION A56(0:22,3,0:3),C56(2,0:3)\n+      DIMENSION A60(0:3,0:3),C60(2,0:3),A61(0:3,0:3),C61(2,0:3)\n+      DIMENSION A62(16),FI00L(2),A63(16),F0J0L(2)\n+      DIMENSION A64(0:3,0:3),C64(2,  3),A65(0:3,0:3),C65(2,  3)\n+      DIMENSION A69(0:3,  3),C69(2,0:3),A70(0:3,  3),C70(2,0:3)\n+      DIMENSION A71(18,  3),C71(2,  3)\n+      DIMENSION A72(18,  3),C72(2,  3)\n+      DIMENSION A73(18,0:3),C73(2,0:3)\n+      DIMENSION SE0LKL(  3),A75(16,3),C75(2,0:3)\n+      DIMENSION SE0JLL(  3),A76(16,3),C76(2,0:3)\n+      DIMENSION A77(0:25,3,0:3),C77(2,0:3),A78(0:31,3,0:3),C78(2,0:3)\n+      DIMENSION A79(0:31,3,0:3),C79(2,0:3)\n+      DIMENSION A80(0: 2,2),A81(0:24,3),A82(0:31,2),A83(0:22,2)\n+      DIMENSION A84(0:13,2),A85(0:13,2),A86(0: 6)\n+      DIMENSION S4(0:14),Q4(0:4),FIJKL(2)\n+                  IF(XVA.LT.CUG) THEN\n+                  ENDIF\n+                     F1(M)= FQ0*TMP\n+                     F2(M)= FQ0*TMP\n+                  XX1=-X12*X43\n+      IF(JI.EQ.1) THEN\n+            DO 255 J=1,3\n+  255    CONTINUE\n+         DO 268 K=1,3\n+            SEJJK00= E0+E(2,2,K,0)+E(3,3,K,0)\n+            A54( 5,K)= A540\n+  268    CONTINUE\n+  297       F5X(3+M,I,I,I)=-R3(M,I,I,I)\n+            DO 299 J=1,3\n+                     F5X(3+M,I,I,J)=-R3(M,J,I,I)\n+  299    CONTINUE\n+         DO 300 L=0,M56\n+            DO 300 M=1,3\n+  300    A56(N,M,L)= ZER\n+               A60(2,L)= A600+P34(I,3)*E(I,0,0,L)\n+               A61(0,L)= A610+D1I     *E(L,0,0,I)\n+               A61(1,L)= A610+P12(I,3)*E(L,0,0,I)\n+         SEL00L= E(1,0,0,1)+E(2,0,0,2)+E(3,0,0,3)\n+               IF(I.NE.J) THEN\n+                  K=6-I-J\n+                  F6X(0,J,I,I,I)= ZER\n+                  F6X(0,I,J,I,I)= ZER\n+                  F6X(0,I,I,J,I)= ZER\n+                  F6X(0,I,I,I,J)= ZER\n+                     F6X(M,I,I,K,J)= R2(M,K,J)\n+               ENDIF\n+  391       A82( M,N)= ZER\n+  392       A83( M,N)= ZER\n+               A84(M,N)= ZER\n+               A85(M,N)= ZER\n+  397    A86( M)= ZER\n+         DO 399 K=1,3\n+            DO 399 J=1,3\n+                  DO 398 M=1,6\n+                     T9B(M+ 2,I,J,K)= T3R0\n+                     T9B(M+ 8,I,J,K)= T1R(M,I,J,K)\n+                     T9B(M+14,I,J,K)= T3R0\n+  398             CONTINUE\n+  399    CONTINUE\n+  417                A77( M,3,K)= A770+F5X0*GEIJKL\n+  445                A81( M,3) = A81( M,3)+T( M)*TMP\n+                     IF(K.EQ.L)A81( 5,3)=A81( 5,3)+TMP\n+                     IF(I.EQ.J) THEN\n+                        DO 447 M=6,11\n+  447                   A81( M,3) = A81( M,3)+T( M)*GEIJKL\n+                     ENDIF\n+      ENDIF\n+      IF(LK.EQ.1) THEN\n+         IF(JTYPE.NE.4) THEN\n+            DO 510 J=0,3\n+               A31(3,J)= A310+ A310*Y02\n+               A32(3,J)= A320+ A320*Y02\n+  510       CONTINUE\n+            A33( 6)=-AEIJ00*Y1Y+T01\n+            A33( 7)= A330-0*Y01+T01\n+            A33( 8)= A330- A330*Y01\n+            A33(15)= A330+0*Y02\n+            A33(16)= A330+ A330*Y02\n+         ENDIF\n+            A84(12,N)= A84( 7,N)+ A84( 8,N)*Y02\n+            A84(13,N)= A84( 9,N)\n+         A85(10,2)= A85(10,2)- A85(10,1)+ A850\n+         A85(11,2)= A85(11,2)- A85(11,1)+ A850\n+         A85(12,2)= A85(12,2)- A85(12,1)+ A850\n+         A85(13,2)= A85(13,2)- A85(13,1)\n+         Q4(0)= S4( 0)+(S4( 1)+(S4( 2)+(S4( 3)+S4( 4)*Y02)*Y02)*Y02)*Y02\n+         Q4(1)= S4( 5)+(S4( 6)+(S4( 7)+ S4( 8)*Y02)*Y02)*Y02\n+         Q4(2)= S4( 9)+(S4(10)+ S4(11)*Y02)*Y02\n+         Q4(3)= S4(12)+ S4(13)*Y02\n+         Q4(4)= S4(14)\n+      ENDIF\n+      IF(JTYPE.NE.4) THEN\n+      ENDIF\n+         C42(1,M)= T0*F10-T0*F10\n+         C42(2,M)= T0*F20-T0*F20\n+      T(1)= T01+(A43( 4)- A43( 5)*Y04)*Y04\n+      F0J0L(2)= T(0)*F20-T0*F20+T(2)*F20\n+      DO 660 N=1,3\n+         T(0)= A64(3,N)- A64(0,N)- A64(1,N)\n+         T(1)= A640- A640*Y04\n+         C64(1,N)= T0*F10-T0*F10\n+         C64(2,N)= T0*F20-T0*F2(1)\n+         C65(1,N)= T0*F10-T0*F10\n+         C65(2,N)= T0*F20-T0*F2(1)\n+         C70(2,N)= T0*F20-T0*F20\n+         T(2)=(A71(17,N)-(A71(18,N)- A71(16,N)*Y04)*Y04)*XX1\n+         C71(1,N)= T0*F10-T0*F10+T0*F10\n+         C71(2,N)= T0*F20-T0*F20+T0*F20\n+         T(1)=(A720+ A720- A720-T0)*XX1\n+         C72(1,N)= T0*F10-T0*F10+T0*F10\n+         C75(1,N)= T(0)*F10-T0*F1(1)+T(2)*F1(2)\n+         C75(2,N)= T(0)*F20-T0*F2(1)+T(2)*F2(2)\n+         T01 = A76( 6,N)*XX1\n+         T(1)=(T01- A760-(A760- A76( 7,N)- A76( 8,N)\n+     2                       -(A760+ A76( 3,N))*Y04)*Y04)*XX1\n+  660 CONTINUE\n+         C73(2,M)= T0*F20+T0*F20+T(2)*F20\n+     2       +(A77(23,1,M)+ A77(24,1,M)*Y04)*Y03\n+         T(2)=(A77(21,2,M)+(A77(22,2,M)+ A77(23,2,M)*Y04)*Y04)*XX1\n+     2       -(A77(24,2,M)-(A77(25,2,M)+ A77(20,2,M)*Y04)*Y04)*Y03\n+         T(3)=(A77(21,3,M)+(A77(22,3,M)+(A77(23,3,M)\n+     2                                 + A77(24,3,M)*Y04)*Y04)*Y04)*XX1\n+         C77(1,M)= T0*F10-T0*F10-T0*F10+T0*F10\n+         C77(2,M)= T(0)*F20-T(1)*F20-T(2)*F20+T(3)*F20\n+         T(0)=(A780+ A78(24,1,M))*Y3Y+ A780*XX1\n+         T(1)=(A78(23,1,M)+(A78(21,1,M)+A78(22,1,M)*Y04)*Y04)*XX1\n+     2       +(A78(25,1,M)+ A78(26,1,M)*Y04)*Y3Y- A78(27,1,M)*XX2\n+         T(2)=(A78(21,2,M)+(A78(22,2,M)+ A78(28,2,M)*Y04)*Y04)*XX2\n+     2       +(A78(23,2,M)-(A78(24,2,M)+ A78(25,2,M)*Y04)*Y04)*XX1\n+     3       -(A78(29,2,M)-(A78(30,2,M)+ A78(31,2,M)*Y04)*Y04)*Y41\n+         T(3)=(A78(21,3,M)+(A78(22,3,M)+(A78(23,3,M)\n+     2                                 + A78(24,3,M)*Y04)*Y04)*Y04)*XX2\n+         C78(1,M)= T0*F10-T0*F1(1)-T(2)*F1(2)+T(3)*F1(3)\n+         C78(2,M)= T(0)*F2(0)-T(1)*F2(1)-T(2)*F2(2)+T(3)*F2(3)\n+         T(0)=-A79(24,1,M)*Y3Y+ A79(30,1,M)*H43\n+         T(1)=(A79(21,1,M)-(A79(23,1,M)+ A79(22,1,M)*Y04)*Y04)*XX1\n+     2       +(A79(25,1,M)+ A79(26,1,M)*Y04)*Y3Y- A79(29,1,M)*XX2\n+         T(2)=(A79(21,2,M)+(A79(22,2,M)- A79(28,2,M)*Y04)*Y04)*XX2\n+     2       +(A79(23,2,M)-(A79(24,2,M)+ A79(25,2,M)*Y04)*Y04)*XX1\n+     3       -(A79(29,2,M)-(A79(30,2,M)+ A79(31,2,M)*Y04)*Y04)*Y41\n+         T(3)=(A79(21,3,M)+(A79(22,3,M)+(A79(23,3,M)\n+     2                                 + A79(24,3,M)*Y04)*Y04)*Y04)*XX2\n+         C79(1,M)= T(0)*F1(0)-T(1)*F1(1)-T(2)*F1(2)+T(3)*F1(3)\n+         C79(2,M)= T(0)*F2(0)-T(1)*F2(1)-T(2)*F2(2)+T(3)*F2(3)\n+      T(0)= A80( 2,1)*Y3Y+ A80( 2,2)*H43\n+      T(1)=(A81(16,1)+(A81(14,1)+A81(15,1)*Y04)*Y04)*XX1\n+     2    +(A81(18,1)+ A81(19,1)*Y04)*Y3Y- A81(20,1)*XX2\n+      T(2)=(A82(21,1)+(A82(22,1)+ A82(28,1)*Y04)*Y04)*XX2\n+     2    +(A82(23,1)-(A82(24,1)+ A82(25,1)*Y04)*Y04)*XX1\n+     3    +(A83(15,2)+(A83(16,2)+ A82(31,1)*Y04)*Y04)*Y41\n+     4    -(A83(17,2)-(A83(18,2)- A83(19,2)*Y04)*Y04)*Y3Y\n+      T(3)=(A84(10,1)+(A84(11,1)+(A84(12,1)+A84(13,1)*Y04)*Y04)*Y04)*XX2\n+     2    +(A85(10,1)+(A85(10,2)+(A85(11,2)+(A85(12,2)\n+     3                          + A85(13,2)*Y04)*Y04)*Y04)*Y04)*XX1\n+      T(4)=(Q4(0)+(Q4(1)+(Q4(2)+(Q4(3)+Q4(4)*Y04)*Y04)*Y04)*Y04)*XX2\n+      FIJKL(1)= T(0)*F1(0)-T(1)*F1(1)-T(2)*F1(2)+T(3)*F1(3)+T(4)*F1(4)\n+      FIJKL(2)= T(0)*F2(0)-T(1)*F2(1)-T(2)*F2(2)+T(3)*F2(3)+T(4)*F2(4)\n+                  DO 800 ICP=1,2\n+                     VE0= VE0+C61(ICP,0)*WP(1)+FI00L(ICP)*WP(2)\n+     2                       +F0J0L(ICP)*WP(3)+C77(ICP,0)*WP(4)\n+     3                       +C73(ICP,0)*WP(5)+C78(ICP,0)*WP(6)\n+     4                       +C79(ICP,0)*WP(7)+FIJKL(ICP)*WP(8)\n+                     IF(ICP.EQ.1) THEN\n+                        DO 720 M=1,3\n+                           VES(  M)= VES(  M)+VEA(  M)\n+                           VES(3+M)= VES(3+M)+VEA(3+M)\n+                           T01 = VEA(6+M)\n+                           T02 = VEA(9+M)\n+                           WES(  M)=-T01+(T01+T02)*Y03\n+  720                   CONTINUE\n+                        FE1= X24*VE0\n+                        DO 730 M=1,3\n+                           T01 = VEA(  M)+VEA(3+M)\n+                           T02 = VEA(6+M)+VEA(9+M)\n+                           WES(3+M)=-T01+(T01+T02)*Z02\n+  730                   CONTINUE\n+                     ENDIF\n+  800             CONTINUE\n+                     WES(  M)= WES(  M)+P34(M,3)*FE0\n+                     WES(3+M)= WES(3+M)-P1(M)*FE1\n+                     VES(6+M)= VES(6+M)+WES(3+M)\n+                     FCS(3,M)= FCS(3,M)-WES(3+M)*Y03+WES(  M)\n+            DO 925 M=1,3\n+               T01= VES(  M)\n+               T02= VES(3+M)+VES(6+M)\n+               T01=-T01+(T01+T02)*Y01+P12(M,3)*TMP\n+               FCS(2,M)= FCS(2,M)-T01+VES(6+M)\n+  925       CONTINUE\n+      END"}, {"sha": "99e7ce21e4e9ec5c0635c9a1254a9dad03eb362c", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90f78d5d86598f8cadacfb20d8d98c122a466599/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90f78d5d86598f8cadacfb20d8d98c122a466599/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=90f78d5d86598f8cadacfb20d8d98c122a466599", "patch": "@@ -1591,6 +1591,14 @@ vect_build_slp_tree (vec_info *vinfo,\n       SLP_TREE_SCALAR_STMTS (res) = vNULL;\n       SLP_TREE_DEF_TYPE (res) = vect_uninitialized_def;\n       res->failed = XNEWVEC (bool, group_size);\n+      if (flag_checking)\n+\t{\n+\t  unsigned i;\n+\t  for (i = 0; i < group_size; ++i)\n+\t    if (!matches[i])\n+\t      break;\n+\t  gcc_assert (i < group_size);\n+\t}\n       memcpy (res->failed, matches, sizeof (bool) * group_size);\n     }\n   else\n@@ -1898,10 +1906,14 @@ vect_build_slp_tree_2 (vec_info *vinfo, slp_tree node,\n \t  chains.quick_push (chain.copy ());\n \t  chain.truncate (0);\n \t}\n-      if (chains.length () == group_size\n-\t  /* We cannot yet use SLP_TREE_CODE to communicate the operation.  */\n-\t  && op_stmt_info)\n+      if (chains.length () == group_size)\n \t{\n+\t  /* We cannot yet use SLP_TREE_CODE to communicate the operation.  */\n+\t  if (!op_stmt_info)\n+\t    {\n+\t      hard_fail = false;\n+\t      goto out;\n+\t    }\n \t  /* Now we have a set of chains with the same length.  */\n \t  /* 1. pre-sort according to def_type and operation.  */\n \t  for (unsigned lane = 0; lane < group_size; ++lane)"}]}