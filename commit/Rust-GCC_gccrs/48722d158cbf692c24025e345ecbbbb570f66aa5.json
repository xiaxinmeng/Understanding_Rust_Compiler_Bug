{"sha": "48722d158cbf692c24025e345ecbbbb570f66aa5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg3MjJkMTU4Y2JmNjkyYzI0MDI1ZTM0NWVjYmJiYjU3MGY2NmFhNQ==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2020-10-26T18:55:00Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2020-10-26T21:41:07Z"}, "message": "Combine logical OR ranges properly.\n\nWhen combining logical OR operands with a FALSE result, union the false\nranges for operand1 and operand2... not intersection.\n\n\tgcc/\n\tPR tree-optimization/97567\n\t* gimple-range-gori.cc (gori_compute::logical_combine): Union the\n\tranges of operand1 and operand2, not intersect.\n\tgcc/testsuite/\n\t* gcc.dg/pr97567.c: New.", "tree": {"sha": "9918c57fb703d14c7fe3ec85918f665030487526", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9918c57fb703d14c7fe3ec85918f665030487526"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48722d158cbf692c24025e345ecbbbb570f66aa5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48722d158cbf692c24025e345ecbbbb570f66aa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48722d158cbf692c24025e345ecbbbb570f66aa5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48722d158cbf692c24025e345ecbbbb570f66aa5/comments", "author": null, "committer": null, "parents": [{"sha": "b784bbbe45414084551a824504650f21cb653ca1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b784bbbe45414084551a824504650f21cb653ca1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b784bbbe45414084551a824504650f21cb653ca1"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "de0f653860d3c4d7e94801c8e410fdf508926a22", "filename": "gcc/gimple-range-gori.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48722d158cbf692c24025e345ecbbbb570f66aa5/gcc%2Fgimple-range-gori.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48722d158cbf692c24025e345ecbbbb570f66aa5/gcc%2Fgimple-range-gori.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-gori.cc?ref=48722d158cbf692c24025e345ecbbbb570f66aa5", "patch": "@@ -730,10 +730,10 @@ gori_compute::logical_combine (irange &r, enum tree_code code,\n         if (lhs.zero_p ())\n \t  {\n \t    // An OR operation will only take the FALSE path if both\n-\t    // operands are false, so [20, 255] intersect [0, 5] is the\n+\t    // operands are false, so either [20, 255] or [0, 5] is the\n \t    // union: [0,5][20,255].\n \t    r = op1.false_range;\n-\t    r.intersect (op2.false_range);\n+\t    r.union_ (op2.false_range);\n \t  }\n \telse\n \t  {"}, {"sha": "b2b72a4d2a7c60654f197e8ffa4237271da8227d", "filename": "gcc/testsuite/gcc.dg/pr97567.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48722d158cbf692c24025e345ecbbbb570f66aa5/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97567.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48722d158cbf692c24025e345ecbbbb570f66aa5/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97567.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr97567.c?ref=48722d158cbf692c24025e345ecbbbb570f66aa5", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+int a, b, c, d;\n+void k() {\n+  unsigned f = 1;\n+  long g = 4073709551615;\n+  for (; a; a++)\n+    for (;;) {\n+      d = 0;\n+    L1:\n+      break;\n+    }\n+  if (f)\n+    for (; a; a++)\n+      ;\n+  g || f;\n+  int i = 0 - f || g;\n+  long j = g - f;\n+  if (j || f) {\n+    if (g < 4073709551615)\n+      for (;;)\n+        ;\n+    int e = ~f, h = b / ~e;\n+    if (c)\n+      goto L2;\n+    g = f = h;\n+  }\n+  g || d;\n+L2:\n+  if (c)\n+    goto L1;\n+}\n+int main() { k(); return 0; }"}]}