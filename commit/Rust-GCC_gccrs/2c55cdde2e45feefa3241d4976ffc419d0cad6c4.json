{"sha": "2c55cdde2e45feefa3241d4976ffc419d0cad6c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM1NWNkZGUyZTQ1ZmVlZmEzMjQxZDQ5NzZmZmM0MTlkMGNhZDZjNA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2000-02-08T11:15:24Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-02-08T11:15:24Z"}, "message": "typeck.c (strip_all_pointer_quals): Use TYPE_MAIN_VARIANT, to strip array element qualifiers too.\n\n\t* typeck.c (strip_all_pointer_quals): Use TYPE_MAIN_VARIANT, to\n\tstrip array element qualifiers too.\n\nFrom-SVN: r31849", "tree": {"sha": "708a4974151fe4a3e85d0131c021ab43c8509056", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/708a4974151fe4a3e85d0131c021ab43c8509056"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c55cdde2e45feefa3241d4976ffc419d0cad6c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c55cdde2e45feefa3241d4976ffc419d0cad6c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c55cdde2e45feefa3241d4976ffc419d0cad6c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c55cdde2e45feefa3241d4976ffc419d0cad6c4/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c4781ce75a783dafc6d946fd7bcf114b1e43f63b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4781ce75a783dafc6d946fd7bcf114b1e43f63b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4781ce75a783dafc6d946fd7bcf114b1e43f63b"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "e6326728a1b47546d4cbddb7613aa4f278d727bf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c55cdde2e45feefa3241d4976ffc419d0cad6c4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c55cdde2e45feefa3241d4976ffc419d0cad6c4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2c55cdde2e45feefa3241d4976ffc419d0cad6c4", "patch": "@@ -1,3 +1,8 @@\n+2000-02-08  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* typeck.c (strip_all_pointer_quals): Use TYPE_MAIN_VARIANT, to\n+\tstrip array element qualifiers too.\n+\n 2000-02-07  Mark Mitchell  <mark@codesourcery.com>\n \n \t* decl.c (store_parm_decls): Don't build cleanups for parameters"}, {"sha": "1ffd7bc881850aad8d695d9f4836ee3bd49bd041", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c55cdde2e45feefa3241d4976ffc419d0cad6c4/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c55cdde2e45feefa3241d4976ffc419d0cad6c4/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=2c55cdde2e45feefa3241d4976ffc419d0cad6c4", "patch": "@@ -7170,7 +7170,8 @@ casts_away_constness (t1, t2)\n \n /* Returns TYPE with its cv qualifiers removed\n    TYPE is T cv* .. *cv where T is not a pointer type,\n-   returns T * .. *  */\n+   returns T * .. *. (If T is an array type, then the cv qualifiers\n+   above are those of the array members.)  */\n \n static tree\n strip_all_pointer_quals (type)\n@@ -7179,5 +7180,5 @@ strip_all_pointer_quals (type)\n   if (TREE_CODE (type) == POINTER_TYPE)\n     return build_pointer_type (strip_all_pointer_quals (TREE_TYPE (type)));\n   else\n-    return strip_top_quals (type);\n+    return TYPE_MAIN_VARIANT (type);\n }"}]}