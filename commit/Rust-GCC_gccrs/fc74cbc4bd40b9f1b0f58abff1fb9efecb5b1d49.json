{"sha": "fc74cbc4bd40b9f1b0f58abff1fb9efecb5b1d49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM3NGNiYzRiZDQwYjlmMWIwZjU4YWJmZjFmYjllZmVjYjViMWQ0OQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2008-07-31T15:32:51Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-07-31T15:32:51Z"}, "message": "re PR debug/36980 (Bootstrap broken with RTL checking on i586)\n\n2008-07-31  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR debug/36980\n\t* dwarf2out.c (dwarf2out_frame_debug_expr): Move rule 17 before\n\trule 19.\n\nFrom-SVN: r138424", "tree": {"sha": "3053626ee1edae982f217440c2dc9137ad4bfbcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3053626ee1edae982f217440c2dc9137ad4bfbcd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc74cbc4bd40b9f1b0f58abff1fb9efecb5b1d49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc74cbc4bd40b9f1b0f58abff1fb9efecb5b1d49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc74cbc4bd40b9f1b0f58abff1fb9efecb5b1d49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc74cbc4bd40b9f1b0f58abff1fb9efecb5b1d49/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "964771d9e9381a6bd8faca4f7c02b55bc2a90fe4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/964771d9e9381a6bd8faca4f7c02b55bc2a90fe4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/964771d9e9381a6bd8faca4f7c02b55bc2a90fe4"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "2b13a5ddf7af7b88a39e389d3d3d4bd67e92b1a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc74cbc4bd40b9f1b0f58abff1fb9efecb5b1d49/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc74cbc4bd40b9f1b0f58abff1fb9efecb5b1d49/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc74cbc4bd40b9f1b0f58abff1fb9efecb5b1d49", "patch": "@@ -1,3 +1,9 @@\n+2008-07-31  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR debug/36980\n+\t* dwarf2out.c (dwarf2out_frame_debug_expr): Move rule 17 before\n+\trule 19.\n+\n 2008-07-31  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR debug/36976"}, {"sha": "2fc23a5206b8721acabc3522873fbd039d6fe16f", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc74cbc4bd40b9f1b0f58abff1fb9efecb5b1d49/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc74cbc4bd40b9f1b0f58abff1fb9efecb5b1d49/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=fc74cbc4bd40b9f1b0f58abff1fb9efecb5b1d49", "patch": "@@ -2024,6 +2024,13 @@ dwarf2out_frame_debug_expr (rtx expr, const char *label)\n \t  gcc_unreachable ();\n \t}\n \n+        /* Rule 17 */\n+        /* If the source operand of this MEM operation is not a\n+\t   register, basically the source is return address.  Here\n+\t   we only care how much stack grew and we don't save it.  */\n+      if (!REG_P (src))\n+        break;\n+\n       if (REGNO (src) != STACK_POINTER_REGNUM\n \t  && REGNO (src) != HARD_FRAME_POINTER_REGNUM\n \t  && (unsigned) REGNO (src) == cfa.reg)\n@@ -2082,12 +2089,6 @@ dwarf2out_frame_debug_expr (rtx expr, const char *label)\n \t      break;\n \t    }\n \t}\n-        /* Rule 17 */\n-        /* If the source operand of this MEM operation is not a\n-\t   register, basically the source is return address.  Here\n-\t   we only care how much stack grew and we don't save it.  */\n-      if (!REG_P (src))\n-        break;\n \n       def_cfa_1 (label, &cfa);\n       {"}]}