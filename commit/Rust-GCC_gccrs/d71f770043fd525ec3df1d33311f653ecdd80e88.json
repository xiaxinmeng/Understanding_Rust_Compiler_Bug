{"sha": "d71f770043fd525ec3df1d33311f653ecdd80e88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDcxZjc3MDA0M2ZkNTI1ZWMzZGYxZDMzMzExZjY1M2VjZGQ4MGU4OA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2002-08-12T15:50:43Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2002-08-12T15:50:43Z"}, "message": "real.c (ieee_64): Always define.\n\n\t* real.c (ieee_64): Always define.\n\t(ieee_113): Guard with INTEL_EXTENDED_IEEE_FORMAT == 0.\n\t(dec_h): Not used yet, hide it.\n\t(emdnorm): Mark parameter in ATTRIBUTE_UNUSED.  Guard label with\n\tmacro controlling use.\n\t(TFbignan, TFlittlenan): Guard with INTEL_EXTENDED_IEEE_FORMAT == 0.\n\nFrom-SVN: r56232", "tree": {"sha": "b150f24f4b6602d5aa82b3f81a30d46dd57e7e08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b150f24f4b6602d5aa82b3f81a30d46dd57e7e08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d71f770043fd525ec3df1d33311f653ecdd80e88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d71f770043fd525ec3df1d33311f653ecdd80e88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d71f770043fd525ec3df1d33311f653ecdd80e88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d71f770043fd525ec3df1d33311f653ecdd80e88/comments", "author": null, "committer": null, "parents": [{"sha": "c16576e6c602529410942d7aa5e445bce3e58748", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c16576e6c602529410942d7aa5e445bce3e58748", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c16576e6c602529410942d7aa5e445bce3e58748"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "e317d5eb8838cc8e400917930a450ce43b57bda7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d71f770043fd525ec3df1d33311f653ecdd80e88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d71f770043fd525ec3df1d33311f653ecdd80e88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d71f770043fd525ec3df1d33311f653ecdd80e88", "patch": "@@ -1,3 +1,12 @@\n+2002-08-12  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* real.c (ieee_64): Always define.\n+\t(ieee_113): Guard with INTEL_EXTENDED_IEEE_FORMAT == 0.\n+\t(dec_h): Not used yet, hide it.\n+\t(emdnorm): Mark parameter in ATTRIBUTE_UNUSED.  Guard label with\n+\tmacro controlling use.\n+\t(TFbignan, TFlittlenan): Guard with INTEL_EXTENDED_IEEE_FORMAT == 0.\n+\n Mon Aug 12 12:48:20 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.md (tablejump): Sign extend the operand."}, {"sha": "d2e0a8d85c5f6ec41ee6a491f097be2ee040be17", "filename": "gcc/real.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d71f770043fd525ec3df1d33311f653ecdd80e88/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d71f770043fd525ec3df1d33311f653ecdd80e88/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=d71f770043fd525ec3df1d33311f653ecdd80e88", "patch": "@@ -342,6 +342,8 @@ static const struct ieee_format ieee_53 =\n   EXONE - 0x3ff\n };\n \n+#endif /* IEEE */\n+\n /* IEEE extended double (64 bits).  */\n static const struct ieee_format ieee_64 =\n {\n@@ -352,6 +354,7 @@ static const struct ieee_format ieee_64 =\n   0\n };\n \n+#if (INTEL_EXTENDED_IEEE_FORMAT == 0)\n /* IEEE long double (113 bits).  */\n static const struct ieee_format ieee_113 =\n {\n@@ -361,7 +364,7 @@ static const struct ieee_format ieee_113 =\n   TFmode,\n   0\n };\n-#endif\n+#endif /* INTEL_EXTENDED_IEEE_FORMAT == 0 */\n \n #ifdef DEC\n /* DEC F float (24 bits).  */\n@@ -394,6 +397,7 @@ static const struct ieee_format dec_g =\n   EXONE - 1025\n };\n \n+#if 0\n /* DEC H float (113 bits).  (not yet used) */\n static const struct ieee_format dec_h =\n {\n@@ -404,6 +408,7 @@ static const struct ieee_format dec_h =\n   EXONE - 16385\n };\n #endif\n+#endif /* DEC */\n \n extern int extra_warnings;\n extern const UEMUSHORT ezero[NE], ehalf[NE], eone[NE], etwo[NE];\n@@ -2594,7 +2599,7 @@ static void\n emdnorm (s, lost, subflg, exp, rcntrl)\n      UEMUSHORT s[];\n      int lost;\n-     int subflg;\n+     int subflg ATTRIBUTE_UNUSED;\n      EMULONG exp;\n      int rcntrl;\n {\n@@ -2753,7 +2758,9 @@ emdnorm (s, lost, subflg, exp, rcntrl)\n #endif\n       eaddm (rbit, s);\n     }\n+#ifndef C4X\n  mddone:\n+#endif\n /* Undo the temporary shift for denormal values.  */\n   if ((exp <= 0) && (rndprc != NBITS)\n       && ((rndprc != 64) || ((rndprc == 64) && ! REAL_WORDS_BIG_ENDIAN)))\n@@ -5961,7 +5968,7 @@ toc4x (x, y, mode)\n #ifdef TFMODE_NAN\n TFMODE_NAN;\n #else\n-#ifdef IEEE\n+#if defined (IEEE) && (INTEL_EXTENDED_IEEE_FORMAT == 0)\n static const UEMUSHORT TFbignan[8] =\n  {0x7fff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff};\n static const UEMUSHORT TFlittlenan[8] = {0, 0, 0, 0, 0, 0, 0x8000, 0xffff};"}]}