{"sha": "4054472b3fa15e11ccd48190f5e3ecfc89d65af9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA1NDQ3MmIzZmExNWUxMWNjZDQ4MTkwZjVlM2VjZmM4OWQ2NWFmOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-05-12T07:20:17Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-05-18T07:03:24Z"}, "message": "c/100547 - reject overly large vector_size attributes\n\nThis rejects a number of vector components that does not fit an 'int'\nwhich is an internal limitation of RTVEC.  This requires adjusting\ngcc.dg/attr-vector_size.c which checks for much larger\nsupported vectors.  Note that the RTVEC limitation is a host specific\nlimitation (unless we change this 'int' to int32_t), but should be\n32bits in practice everywhere.\n\n2021-05-12  Richard Biener  <rguenther@suse.de>\n\n\tPR c/100547\ngcc/c-family/\n\t* c-attribs.c (type_valid_for_vector_size): Reject too large nunits.\n\tReword existing nunit diagnostic.\n\ngcc/testsuite/\n\t* gcc.dg/pr100547.c: New testcase.\n\t* gcc.dg/attr-vector_size.c: Adjust.", "tree": {"sha": "0262bbd39afb7f883b8a48e4dfbd73d582069b88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0262bbd39afb7f883b8a48e4dfbd73d582069b88"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4054472b3fa15e11ccd48190f5e3ecfc89d65af9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4054472b3fa15e11ccd48190f5e3ecfc89d65af9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4054472b3fa15e11ccd48190f5e3ecfc89d65af9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4054472b3fa15e11ccd48190f5e3ecfc89d65af9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e75d62442fc3707c96c53d22f6c185fdf893c72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e75d62442fc3707c96c53d22f6c185fdf893c72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e75d62442fc3707c96c53d22f6c185fdf893c72"}], "stats": {"total": 67, "additions": 49, "deletions": 18}, "files": [{"sha": "ecb32c70172e5531177b8cd931cf1df6cb459db3", "filename": "gcc/c-family/c-attribs.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4054472b3fa15e11ccd48190f5e3ecfc89d65af9/gcc%2Fc-family%2Fc-attribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4054472b3fa15e11ccd48190f5e3ecfc89d65af9/gcc%2Fc-family%2Fc-attribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-attribs.c?ref=4054472b3fa15e11ccd48190f5e3ecfc89d65af9", "patch": "@@ -4245,10 +4245,22 @@ type_valid_for_vector_size (tree type, tree atname, tree args,\n   if (nunits & (nunits - 1))\n     {\n       if (error_p)\n-\terror (\"number of components of the vector not a power of two\");\n+\terror (\"number of vector components %wu not a power of two\", nunits);\n       else\n \twarning (OPT_Wattributes,\n-\t\t \"number of components of the vector not a power of two\");\n+\t\t \"number of vector components %wu not a power of two\", nunits);\n+      return NULL_TREE;\n+    }\n+\n+  if (nunits >= (unsigned HOST_WIDE_INT)INT_MAX)\n+    {\n+      if (error_p)\n+\terror (\"number of vector components %wu exceeds %d\",\n+\t       nunits, INT_MAX - 1);\n+      else\n+\twarning (OPT_Wattributes,\n+\t\t \"number of vector components %wu exceeds %d\",\n+\t\t nunits, INT_MAX - 1);\n       return NULL_TREE;\n     }\n "}, {"sha": "3f2ce88912111b4fa73aeee88d7245ddcb4e0000", "filename": "gcc/testsuite/gcc.dg/attr-vector_size.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4054472b3fa15e11ccd48190f5e3ecfc89d65af9/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-vector_size.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4054472b3fa15e11ccd48190f5e3ecfc89d65af9/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-vector_size.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-vector_size.c?ref=4054472b3fa15e11ccd48190f5e3ecfc89d65af9", "patch": "@@ -22,14 +22,6 @@ DEFVEC (extern, 30);\n \n #if __SIZEOF_SIZE_T__ > 4\n \n-DEFVEC (extern, 31);\n-DEFVEC (extern, 32);\n-DEFVEC (extern, 33);\n-DEFVEC (extern, 34);\n-DEFVEC (extern, 60);\n-DEFVEC (extern, 61);\n-DEFVEC (extern, 62);\n-\n VEC (POW2 (63)) char v63;     /* { dg-error  \"'vector_size' attribute argument value '9223372036854775808' exceeds 9223372036854775807\" \"LP64\" { target lp64 } } */\n \n #else\n@@ -49,14 +41,6 @@ void test_local_scope (void)\n \n #if __SIZEOF_SIZE_T__ > 4\n \n-  DEFVEC (auto, 31);\n-  DEFVEC (auto, 32);\n-  DEFVEC (auto, 33);\n-  DEFVEC (auto, 34);\n-  DEFVEC (auto, 60);\n-  DEFVEC (auto, 61);\n-  DEFVEC (auto, 62);\n-\n   VEC (POW2 (63)) char v63;   /* { dg-error  \"'vector_size' attribute argument value '9223372036854775808' exceeds 9223372036854775807\" \"LP64\" { target lp64 } } */\n \n #else"}, {"sha": "2d3da4eb50eab26775a6dbbec0d138292479f933", "filename": "gcc/testsuite/gcc.dg/pr100547.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4054472b3fa15e11ccd48190f5e3ecfc89d65af9/gcc%2Ftestsuite%2Fgcc.dg%2Fpr100547.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4054472b3fa15e11ccd48190f5e3ecfc89d65af9/gcc%2Ftestsuite%2Fgcc.dg%2Fpr100547.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr100547.c?ref=4054472b3fa15e11ccd48190f5e3ecfc89d65af9", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-do compile { target lp64 } } */\n+/* { dg-options \"-O -g\" } */\n+\n+typedef int __attribute__((vector_size(\n+    ((((((((((((((((((((((((((((((8 * sizeof(short)) * sizeof(short)) *\n+                                sizeof(short)) *\n+                               sizeof(short)) *\n+                              sizeof(short)) *\n+                             sizeof(short)) *\n+                            sizeof(short)) *\n+                           sizeof(short)) *\n+                          sizeof(short)) *\n+                         sizeof(short)) *\n+                        sizeof(short)) *\n+                       sizeof(short)) *\n+                      sizeof(short)) *\n+                     sizeof(short)) *\n+                    sizeof(short)) *\n+                   sizeof(short)) *\n+                  sizeof(short)) *\n+                 sizeof(short)) *\n+                sizeof(short)) *\n+               sizeof(short)) *\n+              sizeof(short)) *\n+             sizeof(short)) *\n+            sizeof(short)) *\n+           sizeof(short)) *\n+          sizeof(short)) *\n+         sizeof(short)) *\n+        sizeof(short)) *\n+       sizeof(short)) *\n+      sizeof(short)) *\n+     sizeof(short)) *\n+    sizeof(short)))) V; /* { dg-error \"number of vector components\" } */\n+void k() { V w = { 0 }; }"}]}