{"sha": "9083aacd090fc35f85659bdaa812384779ef73e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA4M2FhY2QwOTBmYzM1Zjg1NjU5YmRhYTgxMjM4NDc3OWVmNzNlMg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-06-11T08:34:44Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-06-11T08:34:44Z"}, "message": "decl.c (gnat_to_gnu_entity): Do not specifically deal with external constants wrt force_global here...\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity): Do not specifically deal\n\twith external constants wrt force_global here...\n\t<E_Constant>: ...but here instead.\n\t* gcc-interface/utils.c (gnat_pushdecl): Do not put external DECLs onto\n\tthe list of global DECLs.\n\nFrom-SVN: r188379", "tree": {"sha": "ee4cd62633fa310c78b4c77fb3f1bdca4a4fae92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee4cd62633fa310c78b4c77fb3f1bdca4a4fae92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9083aacd090fc35f85659bdaa812384779ef73e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9083aacd090fc35f85659bdaa812384779ef73e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9083aacd090fc35f85659bdaa812384779ef73e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9083aacd090fc35f85659bdaa812384779ef73e2/comments", "author": null, "committer": null, "parents": [{"sha": "9cbad0a3624eb087ff3c05457aa41d5c595f5a85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cbad0a3624eb087ff3c05457aa41d5c595f5a85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cbad0a3624eb087ff3c05457aa41d5c595f5a85"}], "stats": {"total": 55, "additions": 48, "deletions": 7}, "files": [{"sha": "031d6616c0646e6bd689e62c8dc97990cfcda596", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9083aacd090fc35f85659bdaa812384779ef73e2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9083aacd090fc35f85659bdaa812384779ef73e2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9083aacd090fc35f85659bdaa812384779ef73e2", "patch": "@@ -1,3 +1,11 @@\n+2012-06-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity): Do not specifically deal\n+\twith external constants wrt force_global here...\n+\t<E_Constant>: ...but here instead.\n+\t* gcc-interface/utils.c (gnat_pushdecl): Do not put external DECLs onto\n+\tthe list of global DECLs.\n+\n 2012-06-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity): Translate the Esize on"}, {"sha": "ce2f94a253865a8fd28619af4c3976eeb8fc5f70", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9083aacd090fc35f85659bdaa812384779ef73e2/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9083aacd090fc35f85659bdaa812384779ef73e2/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=9083aacd090fc35f85659bdaa812384779ef73e2", "patch": "@@ -348,12 +348,10 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n      another compilation unit) public entities, show we are at global level\n      for the purpose of computing scopes.  Don't do this for components or\n      discriminants since the relevant test is whether or not the record is\n-     being defined.  Don't do this for constants either as we'll look into\n-     their defining expression in the local context.  */\n+     being defined.  */\n   if (!definition\n       && kind != E_Component\n       && kind != E_Discriminant\n-      && kind != E_Constant\n       && Is_Public (gnat_entity)\n       && !Is_Statically_Allocated (gnat_entity))\n     force_global++, this_global = true;\n@@ -424,6 +422,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t     != N_Allocator)\n \t{\n \t  bool went_into_elab_proc = false;\n+\t  int save_force_global = force_global;\n \n \t  /* The expression may contain N_Expression_With_Actions nodes and\n \t     thus object declarations from other units.  In this case, even\n@@ -436,11 +435,13 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t      current_function_decl = get_elaboration_procedure ();\n \t      went_into_elab_proc = true;\n \t    }\n+\t  force_global = 0;\n \t  gnat_pushlevel ();\n \n \t  gnu_expr = gnat_to_gnu (Expression (Declaration_Node (gnat_entity)));\n \n \t  gnat_zaplevel ();\n+\t  force_global = save_force_global;\n \t  if (went_into_elab_proc)\n \t    current_function_decl = NULL_TREE;\n \t}"}, {"sha": "db909d93377538c8a89edd5e6cc17b225064fdae", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9083aacd090fc35f85659bdaa812384779ef73e2/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9083aacd090fc35f85659bdaa812384779ef73e2/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=9083aacd090fc35f85659bdaa812384779ef73e2", "patch": "@@ -572,14 +572,14 @@ gnat_pushdecl (tree decl, Node_Id gnat_node)\n   if (!(TREE_CODE (decl) == TYPE_DECL\n         && TREE_CODE (TREE_TYPE (decl)) == UNCONSTRAINED_ARRAY_TYPE))\n     {\n-      if (global_bindings_p ())\n+      if (DECL_EXTERNAL (decl))\n \t{\n-\t  VEC_safe_push (tree, gc, global_decls, decl);\n-\n \t  if (TREE_CODE (decl) == FUNCTION_DECL && DECL_BUILT_IN (decl))\n \t    VEC_safe_push (tree, gc, builtin_decls, decl);\n \t}\n-      else if (!DECL_EXTERNAL (decl))\n+      else if (global_bindings_p ())\n+\tVEC_safe_push (tree, gc, global_decls, decl);\n+      else\n \t{\n \t  DECL_CHAIN (decl) = BLOCK_VARS (current_binding_level->block);\n \t  BLOCK_VARS (current_binding_level->block) = decl;"}, {"sha": "b8c9c7b949b811d91bac1c0b8cc9d24cf0fa2223", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9083aacd090fc35f85659bdaa812384779ef73e2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9083aacd090fc35f85659bdaa812384779ef73e2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9083aacd090fc35f85659bdaa812384779ef73e2", "patch": "@@ -1,3 +1,8 @@\n+2012-06-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/constant4.adb: New test.\n+\t* gnat.dg/constant4_pkg.ads: New helper.\n+\n 2012-06-08  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/52552"}, {"sha": "826823a6248680359303d418018ac9a721aae55f", "filename": "gcc/testsuite/gnat.dg/constant4.adb", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9083aacd090fc35f85659bdaa812384779ef73e2/gcc%2Ftestsuite%2Fgnat.dg%2Fconstant4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9083aacd090fc35f85659bdaa812384779ef73e2/gcc%2Ftestsuite%2Fgnat.dg%2Fconstant4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fconstant4.adb?ref=9083aacd090fc35f85659bdaa812384779ef73e2", "patch": "@@ -0,0 +1,12 @@\n+-- { dg-do link }\n+-- { dg-options \"-gnat12\" }\n+\n+with Constant4_Pkg; use Constant4_Pkg;\n+\n+procedure Constant4 is\n+   Sum : Counter := 0;\n+begin\n+   for Count of Steals loop\n+      Sum := Sum + Count;\n+   end loop;\n+end;"}, {"sha": "f0c6f8ffdcd92bfbf2af9f20f8bda98b9059c42d", "filename": "gcc/testsuite/gnat.dg/constant4_pkg.ads", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9083aacd090fc35f85659bdaa812384779ef73e2/gcc%2Ftestsuite%2Fgnat.dg%2Fconstant4_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9083aacd090fc35f85659bdaa812384779ef73e2/gcc%2Ftestsuite%2Fgnat.dg%2Fconstant4_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fconstant4_pkg.ads?ref=9083aacd090fc35f85659bdaa812384779ef73e2", "patch": "@@ -0,0 +1,15 @@\n+with Ada.Command_Line;       use Ada.Command_Line;\n+with System.Multiprocessors; use System.Multiprocessors;\n+\n+package Constant4_Pkg is\n+\n+   Max_CPUs : constant CPU := (if Argument_Count < 2 then Number_Of_CPUs\n+                               else CPU'Value (Argument (2)));\n+\n+   subtype Worker_Id is CPU range 1 .. Max_CPUs;\n+\n+   type Counter is range 0 .. 10**18;\n+\n+   Steals : array (Worker_Id) of Counter := (others => 0);\n+\n+end Constant4_Pkg;"}]}