{"sha": "8506528ca214784d301c162a4ff0c4543d7ad979", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODUwNjUyOGNhMjE0Nzg0ZDMwMWMxNjJhNGZmMGM0NTQzZDdhZDk3OQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2009-02-06T09:02:37Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2009-02-06T09:02:37Z"}, "message": "* config/m32c/m32c.h (PCC_BITFIELD_TYPE_MATTERS): Define to zero.\n\nFrom-SVN: r143981", "tree": {"sha": "90213ecdce24cca3e5058a0463e887f102228442", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90213ecdce24cca3e5058a0463e887f102228442"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8506528ca214784d301c162a4ff0c4543d7ad979", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8506528ca214784d301c162a4ff0c4543d7ad979", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8506528ca214784d301c162a4ff0c4543d7ad979", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8506528ca214784d301c162a4ff0c4543d7ad979/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "851691140a53104db9e2b1135f923618299fd92b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/851691140a53104db9e2b1135f923618299fd92b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/851691140a53104db9e2b1135f923618299fd92b"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "9b4a5431dbe5fb30b114946392fe6d8c4dc87ef3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8506528ca214784d301c162a4ff0c4543d7ad979/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8506528ca214784d301c162a4ff0c4543d7ad979/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8506528ca214784d301c162a4ff0c4543d7ad979", "patch": "@@ -1,3 +1,8 @@\n+2009-02-06  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/m32c/m32c.h (PCC_BITFIELD_TYPE_MATTERS): Define to\n+\tzero.\n+\n 2009-02-06  Paolo Bonzini  <bonzini@gnu.org>\n \n \tPR tree-optimization/35659"}, {"sha": "7775bd85dbdb094fbe9f0923aff5d63000db23e0", "filename": "gcc/config/m32c/m32c.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8506528ca214784d301c162a4ff0c4543d7ad979/gcc%2Fconfig%2Fm32c%2Fm32c.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8506528ca214784d301c162a4ff0c4543d7ad979/gcc%2Fconfig%2Fm32c%2Fm32c.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.h?ref=8506528ca214784d301c162a4ff0c4543d7ad979", "patch": "@@ -143,6 +143,17 @@ machine_function;\n #define UNITS_PER_WORD 2\n #define POINTER_SIZE (TARGET_A16 ? 16 : 32)\n #define POINTERS_EXTEND_UNSIGNED 1\n+/* We have a problem with libgcc2.  It only defines two versions of\n+   each function, one for \"int\" and one for \"long long\".  Ie it assumes\n+   that \"sizeof (int) == sizeof (long)\".  For the M32C this is not true\n+   and we need a third set of functions.  We explicitly define\n+   LIBGCC2_UNITS_PER_WORD here so that it is clear that we are expecting\n+   to get the SI and DI versions from the libgcc2.c sources, and we\n+   provide our own set of HI functions in m32c-lib2.c, which is why this\n+   definition is surrounded by #ifndef..#endif.  */\n+#ifndef LIBGCC2_UNITS_PER_WORD\n+#define LIBGCC2_UNITS_PER_WORD 4\n+#endif\n \n /* These match the alignment enforced by the two types of stack operations.  */\n #define PARM_BOUNDARY (TARGET_A16 ? 8 : 16)\n@@ -154,6 +165,11 @@ machine_function;\n #define FUNCTION_BOUNDARY 8\n #define BIGGEST_ALIGNMENT 8\n \n+/* Since we have a maximum structure alignment of 8 there\n+   is no need to enforce any alignment of bitfield types.  */\n+#undef  PCC_BITFIELD_TYPE_MATTERS\n+#define PCC_BITFIELD_TYPE_MATTERS 0\n+\n #define STRICT_ALIGNMENT 0\n #define SLOW_BYTE_ACCESS 1\n "}]}