{"sha": "f1ba94ddd2f8e9159b45ecb79cfa39a38944933a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFiYTk0ZGRkMmY4ZTkxNTliNDVlY2I3OWNmYTM5YTM4OTQ0OTMzYQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-04-17T00:34:44Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-04-17T00:34:44Z"}, "message": "mips.md (can_delay): Split out of existing define_delays.\n\n        * config/mips/mips.md (can_delay): Split out of existing define_delays.\n        (HILO_delay): Set can_delay false.\n\nFrom-SVN: r52387", "tree": {"sha": "ce868453862265527f6d188115974dc902ee8fbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce868453862265527f6d188115974dc902ee8fbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1ba94ddd2f8e9159b45ecb79cfa39a38944933a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1ba94ddd2f8e9159b45ecb79cfa39a38944933a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1ba94ddd2f8e9159b45ecb79cfa39a38944933a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1ba94ddd2f8e9159b45ecb79cfa39a38944933a/comments", "author": null, "committer": null, "parents": [{"sha": "3bb6f0700af0f235ce470d1b36c9db47d034b44e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bb6f0700af0f235ce470d1b36c9db47d034b44e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bb6f0700af0f235ce470d1b36c9db47d034b44e"}], "stats": {"total": 38, "additions": 23, "deletions": 15}, "files": [{"sha": "74a936b630f0b1bb9b6539f076ce4173dc3678a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1ba94ddd2f8e9159b45ecb79cfa39a38944933a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1ba94ddd2f8e9159b45ecb79cfa39a38944933a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1ba94ddd2f8e9159b45ecb79cfa39a38944933a", "patch": "@@ -1,3 +1,9 @@\n+2002-04-16  Richard Henderson  <rth@redhat.com>\n+\n+\tPR 6202\n+\t* config/mips/mips.md (can_delay): Split out of existing define_delays.\n+\t(HILO_delay): Set can_delay false.\n+\n 2002-04-16  Dale Johannesen <dalej@apple.com>\n \n \t* config/rs6000/rs6000.c (rs6000_output_function_prologue): Compute"}, {"sha": "c90109f82d170b40079e800fbda5947822876c9c", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1ba94ddd2f8e9159b45ecb79cfa39a38944933a/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1ba94ddd2f8e9159b45ecb79cfa39a38944933a/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=f1ba94ddd2f8e9159b45ecb79cfa39a38944933a", "patch": "@@ -135,6 +135,18 @@\n \t\t(const_string \"yes\")\n \t\t(const_string \"no\")))\n \n+;; Can the instruction be put into a delay slot?\n+(define_attr \"can_delay\" \"no,yes\"\n+  (if_then_else (and (eq_attr \"dslot\" \"no\")\n+\t\t     ; ADJUST_INSN_LENGTH divides length by 2 on mips16,\n+\t\t     ; so cope with it here.\n+\t\t     (ior (and (eq (symbol_ref \"mips16\") (const_int 0))\n+\t\t\t           (eq_attr \"length\" \"4\"))\n+\t\t\t  (and (ne (symbol_ref \"mips16\") (const_int 0))\n+\t\t\t       (eq_attr \"length\" \"2\"))))\n+\t\t(const_string \"yes\")\n+\t\t(const_string \"no\")))\n+\n ;; Attribute defining whether or not we can use the branch-likely instructions\n \n (define_attr \"branch_likely\" \"no,yes\"\n@@ -162,30 +174,19 @@\n \n (define_delay (and (eq_attr \"type\" \"branch\")\n \t\t   (eq (symbol_ref \"mips16\") (const_int 0)))\n-  [(and (eq_attr \"dslot\" \"no\") (eq_attr \"length\" \"4\"))\n+  [(eq_attr \"can_delay\" \"yes\")\n    (nil)\n    (and (eq_attr \"branch_likely\" \"yes\")\n \t(and (eq_attr \"dslot\" \"no\")\n \t     (eq_attr \"length\" \"4\")))])\n \n (define_delay (eq_attr \"type\" \"jump\")\n-  [(and (eq_attr \"dslot\" \"no\")\n-\t;; ADJUST_INSN_LENGTH divides length by 2 on mips16, so cope\n-\t;; with it here.  It doesn't matter for branches above,\n-\t;; because mips16 branches don't have delay slots anyway.\n-\t(ior (and (eq (symbol_ref \"mips16\") (const_int 0))\n-\t\t  (eq_attr \"length\" \"4\"))\n-\t     (and (ne (symbol_ref \"mips16\") (const_int 0))\n-\t\t  (eq_attr \"length\" \"2\"))))\n+  [(eq_attr \"can_delay\" \"yes\")\n    (nil)\n    (nil)])\n \n (define_delay (and (eq_attr \"type\" \"call\") (eq_attr \"abicalls\" \"no\"))\n-  [(and (eq_attr \"dslot\" \"no\")\n-\t(ior (and (eq (symbol_ref \"mips16\") (const_int 0))\n-\t\t  (eq_attr \"length\" \"4\"))\n-\t     (and (ne (symbol_ref \"mips16\") (const_int 0))\n-\t\t  (eq_attr \"length\" \"2\"))))\n+  [(eq_attr \"can_delay\" \"yes\")\n    (nil)\n    (nil)])\n \n@@ -5823,7 +5824,8 @@ move\\\\t%0,%z4\\\\n\\\\\n   \"\"\n   \"\"\n   [(set_attr \"type\" \"nop\")\n-   (set_attr \"mode\" \"none\")])\n+   (set_attr \"mode\" \"none\")\n+   (set_attr \"can_delay\" \"no\")])\n \n ;; This insn handles moving CCmode values.  It's really just a\n ;; slightly simplified copy of movsi_internal2, with additional cases"}]}