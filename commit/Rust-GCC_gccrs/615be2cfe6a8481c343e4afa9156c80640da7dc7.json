{"sha": "615be2cfe6a8481c343e4afa9156c80640da7dc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE1YmUyY2ZlNmE4NDgxYzM0M2U0YWZhOTE1NmM4MDY0MGRhN2RjNw==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-04-07T01:20:59Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-04-07T01:20:59Z"}, "message": "config.gcc: Stop changing enable_threads midstream.\n\n\t* config.gcc: Stop changing enable_threads midstream.\n\tReplace uses of enable_threads_flag with enable_threads.\n\t* configure.ac: Replace uses of enable_threads_flag with\n\tenable_threads.  Improve autoconf quotation in one place.\n\t* configure: Regenerate.\n\nFrom-SVN: r80473", "tree": {"sha": "98528b2de12329d3b9799b91e67639cbd3101fa9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98528b2de12329d3b9799b91e67639cbd3101fa9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/615be2cfe6a8481c343e4afa9156c80640da7dc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/615be2cfe6a8481c343e4afa9156c80640da7dc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/615be2cfe6a8481c343e4afa9156c80640da7dc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/615be2cfe6a8481c343e4afa9156c80640da7dc7/comments", "author": null, "committer": null, "parents": [{"sha": "136726404100714571f32e9b5f6ae4077db11212", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/136726404100714571f32e9b5f6ae4077db11212", "html_url": "https://github.com/Rust-GCC/gccrs/commit/136726404100714571f32e9b5f6ae4077db11212"}], "stats": {"total": 117, "additions": 50, "deletions": 67}, "files": [{"sha": "e735814a9a34cd1d5b74e428185cc505650f174f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/615be2cfe6a8481c343e4afa9156c80640da7dc7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/615be2cfe6a8481c343e4afa9156c80640da7dc7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=615be2cfe6a8481c343e4afa9156c80640da7dc7", "patch": "@@ -1,3 +1,11 @@\n+2004-04-06  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* config.gcc: Stop changing enable_threads midstream.\n+\tReplace uses of enable_threads_flag with enable_threads.\n+\t* configure.ac: Replace uses of enable_threads_flag with\n+\tenable_threads.  Improve autoconf quotation in one place.\n+\t* configure: Regenerate.\n+\n 2004-04-06  Uros Bizjak  <uros@kss-loka.si>\n \n \t* builtins.c: Implement support for sincos function."}, {"sha": "6d3cab12d9546d47a9ededfd144296210c4380c8", "filename": "gcc/config.gcc", "status": "modified", "additions": 34, "deletions": 55, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/615be2cfe6a8481c343e4afa9156c80640da7dc7/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/615be2cfe6a8481c343e4afa9156c80640da7dc7/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=615be2cfe6a8481c343e4afa9156c80640da7dc7", "patch": "@@ -30,7 +30,7 @@\n #\n #  with_*\t\tVarious variables as set by configure.\n #\n-#  enable_threads_flag\tEither the name, yes or no depending on whether\n+#  enable_threads\tEither the name, yes or no depending on whether\n #\t\t\tthreads support was requested.\n #\n #  default_use_cxa_atexit\n@@ -167,7 +167,6 @@ thread_file=\n # configure entries modify them.\n gas=\"$gas_flag\"\n gnu_ld=\"$gnu_ld_flag\"\n-enable_threads=$enable_threads_flag\n default_use_cxa_atexit=no\n target_gtfiles=\n need_64bit_hwint=\n@@ -790,27 +789,31 @@ hppa1.1-*-hpux10* | hppa2*-*-hpux10*)\n \ttarget_cpu_default=\"(MASK_PA_11 | MASK_BIG_SWITCH)\"\n \ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h pa/som.h pa/pa-hpux.h pa/pa-hpux10.h\"\n \ttmake_file=\"pa/t-pa pa/t-pa-hpux pa/t-hpux-shlib\"\n-\tif test x$enable_threads = x; then\n-\t    enable_threads=$have_pthread_h\n-\tfi\n-\tcase x${enable_threads} in\n-\txyes | xdce)\n-\t\ttmake_file=\"${tmake_file} pa/t-dce-thr\"\n-\t\t;;\n+\tcase ${enable_threads} in\n+\t  \"\")\n+\t    if test x$have_pthread_h = xyes ; then\n+\t      tmake_file=\"${tmake_file} pa/t-dce-thr\"\n+\t    fi\n+\t    ;;\n+\t  yes | dce)\n+\t    tmake_file=\"${tmake_file} pa/t-dce-thr\"\n+\t    ;;\n \tesac\n \tuse_collect2=yes\n \tuse_fixproto=yes\n \t;;\n hppa1.0-*-hpux10*)\n \ttm_file=\"${tm_file} pa/pa32-regs.h dbxelf.h pa/som.h pa/pa-hpux.h pa/pa-hpux10.h\"\n \ttmake_file=\"pa/t-pa pa/t-pa-hpux pa/t-hpux-shlib\"\n-\tif test x$enable_threads = x; then\n-\t    enable_threads=$have_pthread_h\n-\tfi\n-\tcase x${enable_threads} in\n-\txyes | xdce)\n-\t\ttmake_file=\"${tmake_file} pa/t-dce-thr\"\n-\t\t;;\n+\tcase ${enable_threads} in\n+\t  \"\")\n+\t    if test x$have_pthread_h = xyes ; then\n+\t      tmake_file=\"${tmake_file} pa/t-dce-thr\"\n+\t    fi\n+\t    ;;\n+\t  yes | dce)\n+\t    tmake_file=\"${tmake_file} pa/t-dce-thr\"\n+\t    ;;\n \tesac\n \tuse_collect2=yes\n \tuse_fixproto=yes\n@@ -985,19 +988,11 @@ i[34567]86-*-solaris2*)\n \t\ttmake_file=\"$tmake_file t-slibgcc-sld\"\n \tfi\n \textra_parts=\"crt1.o crti.o crtn.o gcrt1.o gmon.o crtbegin.o crtend.o\"\n-\tif test x${enable_threads} = x; then\n-\t    enable_threads=$have_pthread_h\n-\t    if test x${enable_threads} = x; then\n-\t\tenable_threads=$have_thread_h\n-\t    fi\n-\tfi\n-\tif test x${enable_threads} = xyes; then\n-\t    if test x${have_pthread_h} = xyes; then\n-\t\tthread_file='posix'\n-\t    else\n-\t\tthread_file='solaris'\n-\t    fi\n-\tfi\n+\tcase ${enable_threads}:${have_pthread_h}:${have_thread_h} in\n+\t  no:*:*) ;;\n+\t  *:yes:* ) thread_file=posix ;;\n+\t  yes:*:* | *:*:yes ) thread_file=solaris ;;\n+\tesac\n \t;;\n i[34567]86-*-sysv5*)           # Intel x86 on System V Release 5\n        tm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h svr4.h i386/sysv4.h i386/sysv5.h\"\n@@ -1830,19 +1825,11 @@ sparc64-*-solaris2* | sparcv9-*-solaris2*)\n \t\ttmake_file=\"$tmake_file t-slibgcc-sld\"\n \tfi\n \textra_parts=\"crt1.o crti.o crtn.o gcrt1.o crtbegin.o crtend.o\"\n-\tif test x${enable_threads} = x ; then\n-\t    enable_threads=$have_pthread_h\n-\t    if test x${enable_threads} = x ; then\n-\t\tenable_threads=$have_thread_h\n-\t    fi\n-\tfi\n-\tif test x${enable_threads} = xyes ; then\n-\t    if test x${have_pthread_h} = xyes ; then\n-\t\tthread_file='posix'\n-\t    else\n-\t\tthread_file='solaris'\n-\t    fi\n-\tfi\n+\tcase ${enable_threads}:${have_pthread_h}:${have_thread_h} in\n+\t  no:*:*) ;;\n+\t  *:yes:* ) thread_file=posix ;;\n+\t  yes:*:* | *:*:yes ) thread_file=solaris ;;\n+\tesac\n \tneed_64bit_hwint=yes\n \t;;\n sparc-*-solaris2*)\n@@ -1875,19 +1862,11 @@ sparc-*-solaris2*)\n \t\t;;\n \tesac\n \textra_parts=\"crt1.o crti.o crtn.o gcrt1.o gmon.o crtbegin.o crtend.o\"\n-\tif test x${enable_threads} = x; then\n-\t    enable_threads=$have_pthread_h\n-\t    if test x${enable_threads} = x; then\n-\t\tenable_threads=$have_thread_h\n-\t    fi\n-\tfi\n-\tif test x${enable_threads} = xyes; then\n-\t    if test x${have_pthread_h} = xyes; then\n-\t\tthread_file='posix'\n-\t    else\n-\t\tthread_file='solaris'\n-\t    fi\n-\tfi\n+\tcase ${enable_threads}:${have_pthread_h}:${have_thread_h} in\n+\t  no:*:*) ;;\n+\t  *:yes:* ) thread_file=posix ;;\n+\t  yes:*:* | *:*:yes ) thread_file=solaris ;;\n+\tesac\n \t;;\n sparc-*-sysv4*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h sparc/sysv4.h sparc/sysv4-only.h\""}, {"sha": "27c0a6cba14a7ff0a40ebdac7e22ed9926105f91", "filename": "gcc/configure", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/615be2cfe6a8481c343e4afa9156c80640da7dc7/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/615be2cfe6a8481c343e4afa9156c80640da7dc7/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=615be2cfe6a8481c343e4afa9156c80640da7dc7", "patch": "@@ -4690,8 +4690,6 @@ if test \"${enable_threads+set}\" = set; then\n else\n   enable_threads=''\n fi;\n-# Save in case it gets overwritten in config.gcc\n-enable_threads_flag=$enable_threads\n \n # Check whether --enable-objc-gc or --disable-objc-gc was given.\n if test \"${enable_objc_gc+set}\" = set; then\n@@ -5261,7 +5259,7 @@ if test \"${gcc_cv_prog_makeinfo_modern+set}\" = set; then\n else\n     ac_prog_version=`$MAKEINFO --version 2>&1 |\n                    sed -n 's/^.*GNU texinfo.* \\([0-9][0-9.]*\\).*$/\\1/p'`\n-  echo \"configure:5264: version of makeinfo is $ac_prog_version\" >&5\n+  echo \"configure:5262: version of makeinfo is $ac_prog_version\" >&5\n   case $ac_prog_version in\n     '')     gcc_cv_prog_makeinfo_modern=no;;\n     4.[2-9]*)\n@@ -9293,7 +9291,7 @@ fi\n # ---------\n \n # Check if a valid thread package\n-case ${enable_threads_flag} in\n+case ${enable_threads} in\n   \"\" | no)\n     # No threads\n     target_thread_file='single'\n@@ -9304,10 +9302,10 @@ case ${enable_threads_flag} in\n     ;;\n   aix | dce | gnat | irix | posix | rtems | \\\n   single | solaris | vxworks | win32 )\n-    target_thread_file=${enable_threads_flag}\n+    target_thread_file=${enable_threads}\n     ;;\n   *)\n-    echo \"${enable_threads_flag} is an unknown thread package\" 1>&2\n+    echo \"${enable_threads} is an unknown thread package\" 1>&2\n     exit 1\n     ;;\n esac"}, {"sha": "d0c88a707373d0dec453deaadca2eaded47f533c", "filename": "gcc/configure.ac", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/615be2cfe6a8481c343e4afa9156c80640da7dc7/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/615be2cfe6a8481c343e4afa9156c80640da7dc7/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=615be2cfe6a8481c343e4afa9156c80640da7dc7", "patch": "@@ -571,9 +571,7 @@ AC_ARG_ENABLE(__cxa_atexit,\n AC_ARG_ENABLE(threads,\n [  --enable-threads        enable thread usage for target GCC\n   --enable-threads=LIB    use LIB thread package for target GCC],,\n-enable_threads='')\n-# Save in case it gets overwritten in config.gcc\n-enable_threads_flag=$enable_threads\n+[enable_threads=''])\n \n AC_ARG_ENABLE(objc-gc,\n [  --enable-objc-gc\t  enable the use of Boehm's garbage collector with\n@@ -1212,7 +1210,7 @@ fi\n # ---------\n \n # Check if a valid thread package\n-case ${enable_threads_flag} in\n+case ${enable_threads} in\n   \"\" | no)\n     # No threads\n     target_thread_file='single'\n@@ -1223,10 +1221,10 @@ case ${enable_threads_flag} in\n     ;;\n   aix | dce | gnat | irix | posix | rtems | \\\n   single | solaris | vxworks | win32 )\n-    target_thread_file=${enable_threads_flag}\n+    target_thread_file=${enable_threads}\n     ;;\n   *)\n-    echo \"${enable_threads_flag} is an unknown thread package\" 1>&2\n+    echo \"${enable_threads} is an unknown thread package\" 1>&2\n     exit 1\n     ;;\n esac"}]}