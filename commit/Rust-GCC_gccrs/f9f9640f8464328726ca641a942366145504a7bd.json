{"sha": "f9f9640f8464328726ca641a942366145504a7bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjlmOTY0MGY4NDY0MzI4NzI2Y2E2NDFhOTQyMzY2MTQ1NTA0YTdiZA==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2008-04-24T07:42:07Z"}, "committer": {"name": "Danny Smith", "email": "dannysmith@gcc.gnu.org", "date": "2008-04-24T07:42:07Z"}, "message": "c-format.c (check_format_info_main): Use strncmp rather than a magic prefix to handle multichar length specs.\n\ngcc\n\t* c-format.c (check_format_info_main): Use strncmp rather than a magic prefix\n\tto handle multichar length specs.\n\t* config/i386/msformat-c.c (format_length_info ms_printf_length_specs):\n\tDon't prefix \"I64\" and \"I32\" with '\\0'.\n\n\ntestsuite\n\t* gcc.dg/format/ms-warnI64-1.c: New file.\n\nFrom-SVN: r134623", "tree": {"sha": "1bf5ccf9dc81704b2e3222f660e2c18b7fdc33c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bf5ccf9dc81704b2e3222f660e2c18b7fdc33c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9f9640f8464328726ca641a942366145504a7bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9f9640f8464328726ca641a942366145504a7bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9f9640f8464328726ca641a942366145504a7bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9f9640f8464328726ca641a942366145504a7bd/comments", "author": null, "committer": null, "parents": [{"sha": "64ceac43df8d0b74914b438137f89c6afde0ef61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64ceac43df8d0b74914b438137f89c6afde0ef61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64ceac43df8d0b74914b438137f89c6afde0ef61"}], "stats": {"total": 63, "additions": 44, "deletions": 19}, "files": [{"sha": "1c9599e547a17cb3dc62d0d55291543813f5070f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f9640f8464328726ca641a942366145504a7bd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f9640f8464328726ca641a942366145504a7bd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f9f9640f8464328726ca641a942366145504a7bd", "patch": "@@ -1,3 +1,10 @@\n+2008-04-24  Danny Smith  <dannysmith@users.net>\n+\n+\t* c-format.c (check_format_info_main): Use strncmp rather than a magic prefix\n+\tto handle multichar length specs.\n+\t* config/i386/msformat-c.c (format_length_info ms_printf_length_specs):\n+\tDon't prefix \"I64\" and \"I32\" with '\\0'.\n+\n 2008-04-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/36015"}, {"sha": "82f5ff39bc975ec0a095e26f1f5e44f3485b072f", "filename": "gcc/c-format.c", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f9640f8464328726ca641a942366145504a7bd/gcc%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f9640f8464328726ca641a942366145504a7bd/gcc%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-format.c?ref=f9f9640f8464328726ca641a942366145504a7bd", "patch": "@@ -1779,26 +1779,12 @@ check_format_info_main (format_check_results *res,\n       length_chars_std = STD_C89;\n       if (fli)\n \t{\n-\t  while (fli->name != 0 && fli->name[0] != *format_chars)\n-\t    {\n-\t      if (fli->name[0] == '\\0')\n-\t\t{\n-\t\t  int si  = strlen (fli->name + 1) + 1;\n-\t\t  int i = 1;\n-\t\t  while (fli->name[i] != 0 && fli->name[i] == format_chars [i - 1])\n-\t\t    ++i;\n-\t\t if (si == i)\n-\t\t   {\n-\t\t     if (si > 2)\n-\t\t       format_chars += si - 2;\n-\t\t     break;\n-\t\t   }\n-\t       }\n+\t  while (fli->name != 0 \n+ \t\t && strncmp (fli->name, format_chars, strlen (fli->name)))\n \t      fli++;\n-\t    }\n \t  if (fli->name != 0)\n \t    {\n-\t      format_chars++;\n+ \t      format_chars += strlen (fli->name);\n \t      if (fli->double_name != 0 && fli->name[0] == *format_chars)\n \t\t{\n \t\t  format_chars++;"}, {"sha": "90365557a69e8aba4bafb358d7b10f2243b14018", "filename": "gcc/config/i386/msformat-c.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f9640f8464328726ca641a942366145504a7bd/gcc%2Fconfig%2Fi386%2Fmsformat-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f9640f8464328726ca641a942366145504a7bd/gcc%2Fconfig%2Fi386%2Fmsformat-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmsformat-c.c?ref=f9f9640f8464328726ca641a942366145504a7bd", "patch": "@@ -38,8 +38,8 @@ static const format_length_info ms_printf_length_specs[] =\n {\n   { \"h\", FMT_LEN_h, STD_C89, NULL, 0, 0 },\n   { \"l\", FMT_LEN_l, STD_C89, NULL, 0, 0 },\n-  { \"\\0I32\", FMT_LEN_l, STD_EXT, NULL, 0, 0 },\n-  { \"\\0I64\", FMT_LEN_ll, STD_EXT, NULL, 0, 0 },\n+  { \"I32\", FMT_LEN_l, STD_EXT, NULL, 0, 0 },\n+  { \"I64\", FMT_LEN_ll, STD_EXT, NULL, 0, 0 },\n   { \"I\", FMT_LEN_L, STD_EXT, NULL, 0, 0 },\n   { NULL, 0, 0, NULL, 0, 0 }\n };"}, {"sha": "b533b938dc8e0dab99eb6069c7e46119421787f4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f9640f8464328726ca641a942366145504a7bd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f9640f8464328726ca641a942366145504a7bd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f9f9640f8464328726ca641a942366145504a7bd", "patch": "@@ -1,3 +1,7 @@\n+2008-04-24  Danny Smith  <dannysmith@users.net>\n+\n+\t* gcc.dg/format/ms-warnI64-1.c: New file.\n+\n 2008-04-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/36015"}, {"sha": "b5d31d2fe5024e62ca4751cf7b1f64874da30714", "filename": "gcc/testsuite/gcc.dg/format/ms-warnI64-1.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9f9640f8464328726ca641a942366145504a7bd/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fms-warnI64-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9f9640f8464328726ca641a942366145504a7bd/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fms-warnI64-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fformat%2Fms-warnI64-1.c?ref=f9f9640f8464328726ca641a942366145504a7bd", "patch": "@@ -0,0 +1,28 @@\n+/* Test for printf formats. Test for ISO C warnings with MS \"I64\"\n+   extension.*/\n+\n+/* { dg-do compile { target { *-*-mingw* } } } */\n+/* { dg-options \"-std=iso9899:1990 -pedantic -Wformat -Wno-long-long\" } */\n+\n+#define USE_SYSTEM_FORMATS\n+#include \"format.h\"\n+\n+void\n+foo (long long ll, unsigned long long ull, long long *lln,\n+     long long *llp, unsigned long long *ullp)\n+{\n+  printf (\"%I64d\", ll); /* { dg-warning \"'I64' ms_printf length modifier\" \"printf %I64d\" } */\n+  printf (\"%I64i\", ll); /* { dg-warning \"'I64' ms_printf length modifier\" \"printf %I64i\" } */\n+  printf (\"%I64o\", ull); /* { dg-warning \"'I64' ms_printf length modifier\" \"printf %I64o\" } */\n+  printf (\"%I64u\", ull); /* { dg-warning \"'I64' ms_printf length modifier\" \"printf %I64u\" } */\n+  printf (\"%I64x\", ull); /* { dg-warning \"'I64' ms_printf length modifier\" \"printf %I64x\" } */\n+  printf (\"%I64X\", ull); /* { dg-warning \"'I64' ms_printf length modifier\" \"printf %I64X\" } */\n+  printf (\"%I64n\", lln); /* { dg-warning \"'I64' ms_printf length modifier\" \"printf %I64n\" } */\n+  scanf (\"%I64d\", llp); /* { dg-warning \"'I64' ms_scanf length modifier\" \"scanf %I64d\" } */\n+  scanf (\"%I64i\", llp); /* { dg-warning \"'I64' ms_scanf length modifier\" \"scanf %I64i\" } */\n+  scanf (\"%I64o\", ullp); /* { dg-warning \"'I64' ms_scanf length modifier\" \"scanf %I64o\" } */\n+  scanf (\"%I64u\", ullp); /* { dg-warning \"'I64' ms_scanf length modifier\" \"scanf %I64u\" } */\n+  scanf (\"%I64x\", ullp); /* { dg-warning \"'I64' ms_scanf length modifier\" \"scanf %I64x\" } */\n+  scanf (\"%I64X\", ullp); /* { dg-warning \"'I64' ms_scanf length modifier\"  \"scanf %I64X\" } */\n+  scanf (\"%I64n\", llp); /* { dg-warning \"'I64' ms_scanf length modifier\" \"scanf %I64n\" } */\n+}"}]}