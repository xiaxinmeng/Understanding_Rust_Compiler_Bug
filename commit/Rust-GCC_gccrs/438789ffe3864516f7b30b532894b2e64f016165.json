{"sha": "438789ffe3864516f7b30b532894b2e64f016165", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM4Nzg5ZmZlMzg2NDUxNmY3YjMwYjUzMjg5NGIyZTY0ZjAxNjE2NQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-01-04T18:18:54Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-01-04T18:18:54Z"}, "message": "re PR tree-optimization/42366 (ICE in ipa_write_node_info, at ipa-prop.c:2023)\n\n2010-01-04  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/42366\n\t* ipa-cp.c (ipcp_init_stage): Always call ipa_compute_jump_functions on\n\tedges with variable number of parameters.\n\t* ipa-prop.c (ipa_write_node_info): Stream out uses_analysis_done\n\tflag instead of asserting it.\n\t(ipa_read_node_info): Read uses_analysis_done flag.\n\nFrom-SVN: r155630", "tree": {"sha": "f5165a7f5cc72d4605f0b8c609a2d76f7cac6b73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5165a7f5cc72d4605f0b8c609a2d76f7cac6b73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/438789ffe3864516f7b30b532894b2e64f016165", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/438789ffe3864516f7b30b532894b2e64f016165", "html_url": "https://github.com/Rust-GCC/gccrs/commit/438789ffe3864516f7b30b532894b2e64f016165", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/438789ffe3864516f7b30b532894b2e64f016165/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7710285472acd5ade9589ef6d34cafa3306e9277", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7710285472acd5ade9589ef6d34cafa3306e9277", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7710285472acd5ade9589ef6d34cafa3306e9277"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "a3ada177f40a62646b37d5361e32ff13a19493bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/438789ffe3864516f7b30b532894b2e64f016165/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/438789ffe3864516f7b30b532894b2e64f016165/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=438789ffe3864516f7b30b532894b2e64f016165", "patch": "@@ -1,3 +1,12 @@\n+2010-01-04  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/42366\n+\t* ipa-cp.c (ipcp_init_stage): Always call ipa_compute_jump_functions on\n+\tedges with variable number of parameters.\n+\t* ipa-prop.c (ipa_write_node_info): Stream out uses_analysis_done\n+\tflag instead of asserting it.\n+\t(ipa_read_node_info): Read uses_analysis_done flag.\n+\n 2010-01-04  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-sccvn.c (vn_reference_op_compute_hash): Use"}, {"sha": "66de8db7c0a4b7083142e4e7d24841de5fee45c6", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/438789ffe3864516f7b30b532894b2e64f016165/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/438789ffe3864516f7b30b532894b2e64f016165/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=438789ffe3864516f7b30b532894b2e64f016165", "patch": "@@ -633,15 +633,8 @@ ipcp_init_stage (void)\n \t  ipa_count_arguments (cs);\n \t  if (ipa_get_cs_argument_count (IPA_EDGE_REF (cs))\n \t      != ipa_get_param_count (IPA_NODE_REF (cs->callee)))\n-\t    {\n-\t      /* Handle cases of functions with\n-\t         a variable number of parameters.  */\n-\t      ipa_set_called_with_variable_arg (IPA_NODE_REF (cs->callee));\n-\t      if (flag_indirect_inlining)\n-\t        ipa_compute_jump_functions (cs);\n-\t    }\n-\t  else\n-\t    ipa_compute_jump_functions (cs);\n+\t    ipa_set_called_with_variable_arg (IPA_NODE_REF (cs->callee));\n+\t  ipa_compute_jump_functions (cs);\n \t}\n     }\n }"}, {"sha": "9fbd9d804e92478f78020e81c8b37df945fb0cc7", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/438789ffe3864516f7b30b532894b2e64f016165/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/438789ffe3864516f7b30b532894b2e64f016165/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=438789ffe3864516f7b30b532894b2e64f016165", "patch": "@@ -2018,9 +2018,9 @@ ipa_write_node_info (struct output_block *ob, struct cgraph_node *node)\n \n   bp = bitpack_create ();\n   bp_pack_value (bp, info->called_with_var_arguments, 1);\n+  bp_pack_value (bp, info->uses_analysis_done, 1);\n   gcc_assert (info->modification_analysis_done\n \t      || ipa_get_param_count (info) == 0);\n-  gcc_assert (info->uses_analysis_done || ipa_get_param_count (info) == 0);\n   gcc_assert (!info->node_enqueued);\n   gcc_assert (!info->ipcp_orig_node);\n   for (j = 0; j < ipa_get_param_count (info); j++)\n@@ -2063,6 +2063,7 @@ ipa_read_node_info (struct lto_input_block *ib, struct cgraph_node *node,\n \n   bp = lto_input_bitpack (ib);\n   info->called_with_var_arguments = bp_unpack_value (bp, 1);\n+  info->uses_analysis_done = bp_unpack_value (bp, 1);\n   if (ipa_get_param_count (info) != 0)\n     {\n       info->modification_analysis_done = true;"}]}