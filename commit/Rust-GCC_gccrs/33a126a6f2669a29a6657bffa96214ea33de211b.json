{"sha": "33a126a6f2669a29a6657bffa96214ea33de211b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNhMTI2YTZmMjY2OWEyOWE2NjU3YmZmYTk2MjE0ZWEzM2RlMjExYg==", "commit": {"author": {"name": "Cesar Philippidis", "email": "cesar@codesourcery.com", "date": "2016-01-15T14:49:55Z"}, "committer": {"name": "Cesar Philippidis", "email": "cesar@gcc.gnu.org", "date": "2016-01-15T14:49:55Z"}, "message": "gimplify.c (oacc_default_clause): Decode reference and pointer types for both kernels and parallel regions.\n\n\tgcc/\n\t* gimplify.c (oacc_default_clause): Decode reference and pointer\n\ttypes for both kernels and parallel regions.\n\n\tlibgomp/\n\t* testsuite/libgomp.oacc-fortran/kernels-data.f90: New test.\n\nFrom-SVN: r232431", "tree": {"sha": "60de8fc3a07ebcd9cfacd0fd6e4b83d1bd7079c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60de8fc3a07ebcd9cfacd0fd6e4b83d1bd7079c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33a126a6f2669a29a6657bffa96214ea33de211b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33a126a6f2669a29a6657bffa96214ea33de211b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33a126a6f2669a29a6657bffa96214ea33de211b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33a126a6f2669a29a6657bffa96214ea33de211b/comments", "author": {"login": "cesarjp", "id": 4576177, "node_id": "MDQ6VXNlcjQ1NzYxNzc=", "avatar_url": "https://avatars.githubusercontent.com/u/4576177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cesarjp", "html_url": "https://github.com/cesarjp", "followers_url": "https://api.github.com/users/cesarjp/followers", "following_url": "https://api.github.com/users/cesarjp/following{/other_user}", "gists_url": "https://api.github.com/users/cesarjp/gists{/gist_id}", "starred_url": "https://api.github.com/users/cesarjp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cesarjp/subscriptions", "organizations_url": "https://api.github.com/users/cesarjp/orgs", "repos_url": "https://api.github.com/users/cesarjp/repos", "events_url": "https://api.github.com/users/cesarjp/events{/privacy}", "received_events_url": "https://api.github.com/users/cesarjp/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a00fe3b787de1916bed415c57024d49bbe81cb1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a00fe3b787de1916bed415c57024d49bbe81cb1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a00fe3b787de1916bed415c57024d49bbe81cb1c"}], "stats": {"total": 71, "additions": 64, "deletions": 7}, "files": [{"sha": "5680be8a8d3d4176dbba965dbf1f8dab0e7c6646", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33a126a6f2669a29a6657bffa96214ea33de211b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33a126a6f2669a29a6657bffa96214ea33de211b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33a126a6f2669a29a6657bffa96214ea33de211b", "patch": "@@ -1,3 +1,8 @@\n+2016-01-15  Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\t* gimplify.c (oacc_default_clause): Decode reference and pointer\n+\ttypes for both kernels and parallel regions.\n+\n 2016-01-15  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR middle-end/69246"}, {"sha": "c8de1e62abd9c3785bca478e7af896eb03f73244", "filename": "gcc/gimplify.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33a126a6f2669a29a6657bffa96214ea33de211b/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33a126a6f2669a29a6657bffa96214ea33de211b/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=33a126a6f2669a29a6657bffa96214ea33de211b", "patch": "@@ -5986,6 +5986,10 @@ oacc_default_clause (struct gimplify_omp_ctx *ctx, tree decl, unsigned flags)\n {\n   const char *rkind;\n   bool on_device = false;\n+  tree type = TREE_TYPE (decl);\n+\n+  if (lang_hooks.decls.omp_privatize_by_reference (decl))\n+    type = TREE_TYPE (type);\n \n   if ((ctx->region_type & (ORT_ACC_PARALLEL | ORT_ACC_KERNELS)) != 0\n       && is_global_var (decl)\n@@ -6004,20 +6008,14 @@ oacc_default_clause (struct gimplify_omp_ctx *ctx, tree decl, unsigned flags)\n       /* Scalars are default 'copy' under kernels, non-scalars are default\n \t 'present_or_copy'.  */\n       flags |= GOVD_MAP;\n-      if (!AGGREGATE_TYPE_P (TREE_TYPE (decl)))\n+      if (!AGGREGATE_TYPE_P (type))\n \tflags |= GOVD_MAP_FORCE;\n \n       rkind = \"kernels\";\n       break;\n \n     case ORT_ACC_PARALLEL:\n       {\n-\ttree type = TREE_TYPE (decl);\n-\n-\tif (TREE_CODE (type) == REFERENCE_TYPE\n-\t    || POINTER_TYPE_P (type))\n-\t  type = TREE_TYPE (type);\n-\n \tif (on_device || AGGREGATE_TYPE_P (type))\n \t  /* Aggregates default to 'present_or_copy'.  */\n \t  flags |= GOVD_MAP;"}, {"sha": "be30656532a52e6efe67c9d27bfb6d3aea95125b", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33a126a6f2669a29a6657bffa96214ea33de211b/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33a126a6f2669a29a6657bffa96214ea33de211b/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=33a126a6f2669a29a6657bffa96214ea33de211b", "patch": "@@ -1,3 +1,7 @@\n+2016-01-15  Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-fortran/kernels-data.f90: New test.\n+\n 2016-01-12  James Norris  <jnorris@codesourcery.com>\n \n \t* libgomp.texi: Updates for OpenACC."}, {"sha": "4afb562e00cdb664104b8583a8dbf88b4e0058a8", "filename": "libgomp/testsuite/libgomp.oacc-fortran/non-scalar-data.f90", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33a126a6f2669a29a6657bffa96214ea33de211b/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fnon-scalar-data.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33a126a6f2669a29a6657bffa96214ea33de211b/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fnon-scalar-data.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fnon-scalar-data.f90?ref=33a126a6f2669a29a6657bffa96214ea33de211b", "patch": "@@ -0,0 +1,50 @@\n+! Ensure that a non-scalar dummy arguments which are implicitly used inside\n+! offloaded regions are properly mapped using present_or_copy.\n+\n+! { dg-do run }\n+\n+program main\n+  implicit none\n+\n+  integer, parameter :: n = 100\n+  integer :: array(n), i\n+  \n+  !$acc data copy(array)\n+  call kernels(array, n)\n+\n+  !$acc update host(array)\n+\n+  do i = 1, n\n+     if (array(i) .ne. i) call abort\n+  end do\n+\n+  call parallel(array, n)\n+  !$acc end data\n+\n+  do i = 1, n\n+     if (array(i) .ne. i+i) call abort\n+  end do\n+end program main\n+\n+subroutine kernels (array, n)\n+  integer, dimension (n) :: array\n+  integer :: n, i\n+\n+  !$acc kernels\n+  do i = 1, n\n+     array(i) = i\n+  end do\n+  !$acc end kernels\n+end subroutine kernels\n+\n+\n+subroutine parallel (array, n)\n+  integer, dimension (n) :: array\n+  integer :: n, i\n+\n+  !$acc parallel\n+  do i = 1, n\n+     array(i) = i+i\n+  end do\n+  !$acc end parallel\n+end subroutine parallel"}]}