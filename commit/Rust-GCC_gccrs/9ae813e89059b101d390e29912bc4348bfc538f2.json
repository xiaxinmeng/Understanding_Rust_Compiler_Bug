{"sha": "9ae813e89059b101d390e29912bc4348bfc538f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFlODEzZTg5MDU5YjEwMWQzOTBlMjk5MTJiYzQzNDhiZmM1MzhmMg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2019-07-18T18:16:43Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2019-07-18T18:16:43Z"}, "message": "Update PowerPC compiler for pc-relative support.\n\n2019-07-18  Michael Meissner  <meissner@linux.ibm.com>\n\n\t* config/rs6000/aix.h (TARGET_HAS_TOC): Rename TARGET_TOC to\n\tTARGET_HAS_TOC.\n\t(TARGET_TOC): Likewise.\n\t(TARGET_NO_TOC): Delete here, define TARGET_NO_TOC_OR_PCREL in\n\trs6000.h.\n\t* config/rs6000/darwin.h (TARGET_HAS_TOC): Rename TARGET_TOC to\n\tTARGET_HAS_TOC.\n\t(TARGET_TOC): Likewise.\n\t(TARGET_NO_TOC): Delete here, define TARGET_NO_TOC_OR_PCREL in\n\trs6000.h.\n\t* config/rs6000/linux64.h (TARGET_HAS_TOC): Rename TARGET_TOC to\n\tTARGET_HAS_TOC.\n\t(TARGET_TOC): Likewise.\n\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Add\n\tcheck to require -mcmodel=medium for pc-relative addressing.\n\t(create_TOC_reference): Add assertion for TARGET_TOC.\n\t(rs6000_legitimize_address): Use TARGET_NO_TOC_OR_PCREL instead of\n\tTARGET_NO_TOC.\n\t(rs6000_emit_move): Likewise.\n\t(TOC_alias_set): Rename TOC alias set static variable from 'set'\n\tto 'TOC_alias_set'.\n\t(get_TOC_alias_set): Likewise.\n\t(output_toc): Use TARGET_NO_TOC_OR_PCREL instead of\n\tTARGET_NO_TOC.\n\t(rs6000_can_eliminate): Likewise.\n\t* config/rs6000/rs6000.h (TARGET_TOC): Define in terms of\n\tTARGET_HAS_TOC and not pc-relative.\n\t(TARGET_NO_TOC_OR_PCREL): New macro to replace TARGET_NO_TOC.\n\t* config/rs6000/sysv4.h (TARGET_HAS_TOC): Rename TARGET_TOC to\n\tTARGET_HAS_TOC.\n\t(TARGET_TOC): Likewise.\n\t(TARGET_NO_TOC): Delete here, define TARGET_NO_TOC_OR_PCREL in\n\trs6000.h.\n\nFrom-SVN: r273579", "tree": {"sha": "df44ee93e23fd4c788c2dcca556bf97c22e2c366", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df44ee93e23fd4c788c2dcca556bf97c22e2c366"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ae813e89059b101d390e29912bc4348bfc538f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ae813e89059b101d390e29912bc4348bfc538f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ae813e89059b101d390e29912bc4348bfc538f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ae813e89059b101d390e29912bc4348bfc538f2/comments", "author": null, "committer": null, "parents": [{"sha": "07d7662ff7ed987d98a61f333169b65620ec8202", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07d7662ff7ed987d98a61f333169b65620ec8202", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07d7662ff7ed987d98a61f333169b65620ec8202"}], "stats": {"total": 84, "additions": 68, "deletions": 16}, "files": [{"sha": "151297aab74c63fd7181a0f11be07ce1fc82df7b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ae813e89059b101d390e29912bc4348bfc538f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ae813e89059b101d390e29912bc4348bfc538f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ae813e89059b101d390e29912bc4348bfc538f2", "patch": "@@ -1,3 +1,39 @@\n+2019-07-18  Michael Meissner  <meissner@linux.ibm.com>\n+\n+\t* config/rs6000/aix.h (TARGET_HAS_TOC): Rename TARGET_TOC to\n+\tTARGET_HAS_TOC.\n+\t(TARGET_TOC): Likewise.\n+\t(TARGET_NO_TOC): Delete here, define TARGET_NO_TOC_OR_PCREL in\n+\trs6000.h.\n+\t* config/rs6000/darwin.h (TARGET_HAS_TOC): Rename TARGET_TOC to\n+\tTARGET_HAS_TOC.\n+\t(TARGET_TOC): Likewise.\n+\t(TARGET_NO_TOC): Delete here, define TARGET_NO_TOC_OR_PCREL in\n+\trs6000.h.\n+\t* config/rs6000/linux64.h (TARGET_HAS_TOC): Rename TARGET_TOC to\n+\tTARGET_HAS_TOC.\n+\t(TARGET_TOC): Likewise.\n+\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Add\n+\tcheck to require -mcmodel=medium for pc-relative addressing.\n+\t(create_TOC_reference): Add assertion for TARGET_TOC.\n+\t(rs6000_legitimize_address): Use TARGET_NO_TOC_OR_PCREL instead of\n+\tTARGET_NO_TOC.\n+\t(rs6000_emit_move): Likewise.\n+\t(TOC_alias_set): Rename TOC alias set static variable from 'set'\n+\tto 'TOC_alias_set'.\n+\t(get_TOC_alias_set): Likewise.\n+\t(output_toc): Use TARGET_NO_TOC_OR_PCREL instead of\n+\tTARGET_NO_TOC.\n+\t(rs6000_can_eliminate): Likewise.\n+\t* config/rs6000/rs6000.h (TARGET_TOC): Define in terms of\n+\tTARGET_HAS_TOC and not pc-relative.\n+\t(TARGET_NO_TOC_OR_PCREL): New macro to replace TARGET_NO_TOC.\n+\t* config/rs6000/sysv4.h (TARGET_HAS_TOC): Rename TARGET_TOC to\n+\tTARGET_HAS_TOC.\n+\t(TARGET_TOC): Likewise.\n+\t(TARGET_NO_TOC): Delete here, define TARGET_NO_TOC_OR_PCREL in\n+\trs6000.h.\n+\n 2019-07-18  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \tPR target/91188"}, {"sha": "75e080e93a7c2ab70a2336cda25a0794b193db96", "filename": "gcc/config/rs6000/aix.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ae813e89059b101d390e29912bc4348bfc538f2/gcc%2Fconfig%2Frs6000%2Faix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ae813e89059b101d390e29912bc4348bfc538f2/gcc%2Fconfig%2Frs6000%2Faix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix.h?ref=9ae813e89059b101d390e29912bc4348bfc538f2", "patch": "@@ -32,8 +32,7 @@\n #define TARGET_AIX_OS 1\n \n /* AIX always has a TOC.  */\n-#define TARGET_NO_TOC 0\n-#define TARGET_TOC 1\n+#define TARGET_HAS_TOC 1\n #define FIXED_R2 1\n \n /* AIX allows r13 to be used in 32-bit mode.  */"}, {"sha": "1bfb577750e105875257d2472f462d77cef909ee", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ae813e89059b101d390e29912bc4348bfc538f2/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ae813e89059b101d390e29912bc4348bfc538f2/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=9ae813e89059b101d390e29912bc4348bfc538f2", "patch": "@@ -43,8 +43,7 @@\n \n /* We're not ever going to do TOCs.  */\n \n-#define TARGET_TOC 0\n-#define TARGET_NO_TOC 1\n+#define TARGET_HAS_TOC 0\n \n /* Override the default rs6000 definition.  */\n #undef  PTRDIFF_TYPE"}, {"sha": "bd197492cc2bc48570e807ef0be7150c0930827a", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ae813e89059b101d390e29912bc4348bfc538f2/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ae813e89059b101d390e29912bc4348bfc538f2/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=9ae813e89059b101d390e29912bc4348bfc538f2", "patch": "@@ -277,8 +277,8 @@ extern int dot_symbols;\n #ifndef RS6000_BI_ARCH\n \n /* 64-bit PowerPC Linux always has a TOC.  */\n-#undef  TARGET_TOC\n-#define\tTARGET_TOC\t\t1\n+#undef  TARGET_HAS_TOC\n+#define TARGET_HAS_TOC\t\t1\n \n /* Some things from sysv4.h we don't do when 64 bit.  */\n #undef\tOPTION_RELOCATABLE"}, {"sha": "3f641042c52a28a3f2c791347225d7fada27e2d6", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ae813e89059b101d390e29912bc4348bfc538f2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ae813e89059b101d390e29912bc4348bfc538f2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=9ae813e89059b101d390e29912bc4348bfc538f2", "patch": "@@ -4333,6 +4333,16 @@ rs6000_option_override_internal (bool global_init_p)\n   SUB3TARGET_OVERRIDE_OPTIONS;\n #endif\n \n+  /* -mpcrel requires -mcmodel=medium, but we can't check TARGET_CMODEL until\n+      after the subtarget override options are done.  */\n+  if (TARGET_PCREL && TARGET_CMODEL != CMODEL_MEDIUM)\n+    {\n+      if ((rs6000_isa_flags_explicit & OPTION_MASK_PCREL) != 0)\n+\terror (\"%qs requires %qs\", \"-mpcrel\", \"-mcmodel=medium\");\n+\n+      rs6000_isa_flags &= ~OPTION_MASK_PCREL;\n+    }\n+\n   if (TARGET_DEBUG_REG || TARGET_DEBUG_TARGET)\n     rs6000_print_isa_options (stderr, 0, \"after subtarget\", rs6000_isa_flags);\n \n@@ -7742,6 +7752,8 @@ create_TOC_reference (rtx symbol, rtx largetoc_reg)\n {\n   rtx tocrel, tocreg, hi;\n \n+  gcc_assert (TARGET_TOC);\n+\n   if (TARGET_DEBUG_ADDR)\n     {\n       if (SYMBOL_REF_P (symbol))\n@@ -8121,7 +8133,7 @@ rs6000_legitimize_address (rtx x, rtx oldx ATTRIBUTE_UNUSED,\n #endif\n \t    )\n \t   && TARGET_32BIT\n-\t   && TARGET_NO_TOC\n+\t   && TARGET_NO_TOC_OR_PCREL\n \t   && !flag_pic\n \t   && !CONST_INT_P (x)\n \t   && !CONST_WIDE_INT_P (x)\n@@ -9811,7 +9823,7 @@ rs6000_emit_move (rtx dest, rtx source, machine_mode mode)\n \t}\n \n       if ((TARGET_ELF || DEFAULT_ABI == ABI_DARWIN)\n-\t  && TARGET_NO_TOC\n+\t  && TARGET_NO_TOC_OR_PCREL\n \t  && ! flag_pic\n \t  && mode == Pmode\n \t  && CONSTANT_P (operands[1])\n@@ -23725,14 +23737,14 @@ rs6000_split_multireg_move (rtx dst, rtx src)\n     }\n }\n \n-static GTY(()) alias_set_type set = -1;\n+static GTY(()) alias_set_type TOC_alias_set = -1;\n \n alias_set_type\n get_TOC_alias_set (void)\n {\n-  if (set == -1)\n-    set = new_alias_set ();\n-  return set;\n+  if (TOC_alias_set == -1)\n+    TOC_alias_set = new_alias_set ();\n+  return TOC_alias_set;\n }\n \n /* Return the internal arg pointer used for function incoming\n@@ -24103,7 +24115,7 @@ output_toc (FILE *file, rtx x, int labelno, machine_mode mode)\n   rtx base = x;\n   HOST_WIDE_INT offset = 0;\n \n-  gcc_assert (!TARGET_NO_TOC);\n+  gcc_assert (!TARGET_NO_TOC_OR_PCREL);\n \n   /* When the linker won't eliminate them, don't output duplicate\n      TOC entries (this happens on AIX if there is any kind of TOC,\n@@ -30469,7 +30481,7 @@ rs6000_can_eliminate (const int from, const int to)\n   return (from == ARG_POINTER_REGNUM && to == STACK_POINTER_REGNUM\n \t  ? ! frame_pointer_needed\n \t  : from == RS6000_PIC_OFFSET_TABLE_REGNUM\n-\t    ? ! TARGET_MINIMAL_TOC || TARGET_NO_TOC\n+\t    ? ! TARGET_MINIMAL_TOC || TARGET_NO_TOC_OR_PCREL\n \t\t|| constant_pool_empty_p ()\n \t    : true);\n }"}, {"sha": "70e0616ee85e7d4d0d22bead431af641ced466a2", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ae813e89059b101d390e29912bc4348bfc538f2/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ae813e89059b101d390e29912bc4348bfc538f2/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=9ae813e89059b101d390e29912bc4348bfc538f2", "patch": "@@ -54,6 +54,13 @@\n #define TARGET_AIX_OS 0\n #endif\n \n+/* Turn off TOC support if pc-relative addressing is used.  */\n+#define TARGET_TOC             (TARGET_HAS_TOC && !TARGET_PCREL)\n+\n+/* On 32-bit systems without a TOC or pc-relative addressing, we need to use\n+   ADDIS/ADDI to load up the address of a symbol.  */\n+#define TARGET_NO_TOC_OR_PCREL (!TARGET_HAS_TOC && !TARGET_PCREL)\n+\n /* Control whether function entry points use a \"dot\" symbol when\n    ABI_AIX.  */\n #define DOT_SYMBOLS 1"}, {"sha": "17fea80a0a53d90782ce500a38172d8e40d58164", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ae813e89059b101d390e29912bc4348bfc538f2/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ae813e89059b101d390e29912bc4348bfc538f2/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=9ae813e89059b101d390e29912bc4348bfc538f2", "patch": "@@ -41,7 +41,7 @@\n #undef\tASM_DEFAULT_SPEC\n #define\tASM_DEFAULT_SPEC \"-mppc\"\n \n-#define\tTARGET_TOC\t\t(TARGET_64BIT\t\t\t\t\\\n+#define\tTARGET_HAS_TOC\t\t(TARGET_64BIT\t\t\t\t\\\n \t\t\t\t || (TARGET_MINIMAL_TOC\t\t\t\\\n \t\t\t\t     && flag_pic > 1)\t\t\t\\\n \t\t\t\t || DEFAULT_ABI != ABI_V4)\n@@ -50,7 +50,6 @@\n #define\tTARGET_BIG_ENDIAN\t(! TARGET_LITTLE_ENDIAN)\n #define\tTARGET_PROTOTYPE\ttarget_prototype\n #define\tTARGET_NO_PROTOTYPE\t(! TARGET_PROTOTYPE)\n-#define\tTARGET_NO_TOC\t\t(! TARGET_TOC)\n #define\tTARGET_NO_EABI\t\t(! TARGET_EABI)\n #define\tTARGET_REGNAMES\t\trs6000_regnames\n "}]}