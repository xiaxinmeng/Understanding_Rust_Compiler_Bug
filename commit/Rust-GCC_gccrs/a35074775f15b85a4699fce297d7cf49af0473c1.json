{"sha": "a35074775f15b85a4699fce297d7cf49af0473c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM1MDc0Nzc1ZjE1Yjg1YTQ2OTlmY2UyOTdkN2NmNDlhZjA0NzNjMQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@kss-loka.si", "date": "2005-09-26T19:19:43Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2005-09-26T19:19:43Z"}, "message": "re PR target/22576 (ICE with simple factorial program compiled with -ffast-math on gcc 4.0.2)\n\n2005-08-26  Uros Bizjak  <uros@kss-loka.si>\n\n\t* gcc.target/i386/builtin-apply-mmx.c: New test.\n\n\tPR target/22576\n\t* gcc.target/i386/pr22576.c: New test.\n\n\tPR target/22585\n\t* gcc.target/i386/pr22585.c: New test.\n\n\tPR target/23268\n\t* gcc.target/i386/pr23268.c: New test.\n\nFrom-SVN: r104656", "tree": {"sha": "daeccc0672ddddd5499c95ce7d86496b03f00d36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/daeccc0672ddddd5499c95ce7d86496b03f00d36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a35074775f15b85a4699fce297d7cf49af0473c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a35074775f15b85a4699fce297d7cf49af0473c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a35074775f15b85a4699fce297d7cf49af0473c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a35074775f15b85a4699fce297d7cf49af0473c1/comments", "author": null, "committer": null, "parents": [{"sha": "0f086e42e38c7bc7564252c31f04820bc0446bc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f086e42e38c7bc7564252c31f04820bc0446bc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f086e42e38c7bc7564252c31f04820bc0446bc3"}], "stats": {"total": 96, "additions": 96, "deletions": 0}, "files": [{"sha": "9725d20735998c37487c946659acab1a500113bd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a35074775f15b85a4699fce297d7cf49af0473c1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a35074775f15b85a4699fce297d7cf49af0473c1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a35074775f15b85a4699fce297d7cf49af0473c1", "patch": "@@ -1,5 +1,16 @@\n 2005-09-26  Uros Bizjak  <uros@kss-loka.si>\n \n+\t* gcc.target/i386/builtin-apply-mmx.c: New test.\n+\n+\tPR target/22576\n+\t* gcc.target/i386/pr22576.c: New test.\n+\n+\tPR target/22585\n+\t* gcc.target/i386/pr22585.c: New test.\n+\n+\tPR target/23268\n+\t* gcc.target/i386/pr23268.c: New test.\n+\n \tPR middle-end/23831\n \t* gcc.dg/vect/pr23831.c: New test.\n "}, {"sha": "4762140f13d47abc6f56ce2951cfcced81a2b225", "filename": "gcc/testsuite/gcc.target/i386/builtin-apply-mmx.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a35074775f15b85a4699fce297d7cf49af0473c1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin-apply-mmx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a35074775f15b85a4699fce297d7cf49af0473c1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin-apply-mmx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin-apply-mmx.c?ref=a35074775f15b85a4699fce297d7cf49af0473c1", "patch": "@@ -0,0 +1,51 @@\n+/* __builtin_apply_args () and __builtin_return () built-in functions does\n+   not function properly when -mmmx is used in compile flags.\n+   __builtin_apply_args () saves all registers that pass arguments to a\n+   function, including %mm0-%mm3, to a memory block, and __builtin_return ()\n+   restores %mm0, from a return memory block, as it can be used as a\n+   function return register.  Unfortunatelly, when MMX registers are touched,\n+   i387 FPU switches to MMX mode, and no FP operation is possible until emms\n+   instruction is issued.  */\n+\n+/* This test case is adapted from gcc.dg/builtin-apply4.c.  */\n+ \n+/* { dg-do run { xfail \"*-*-*\" } } */\n+/* { dg-options \"-O2 -mmmx\" } */\n+\n+#include \"../../gcc.dg/i386-cpuid.h\"\n+\n+extern void abort (void);\n+\n+double\n+foo (double arg)\n+{\n+  if (arg != 116.0)\n+    abort ();\n+\n+  return arg + 1.0;\n+}\n+\n+inline double\n+bar (double arg)\n+{\n+  foo (arg);\n+  __builtin_return (__builtin_apply ((void (*)()) foo,\n+\t\t\t\t     __builtin_apply_args (), 16));\n+}\n+\n+int\n+main (int argc, char **argv)\n+{\n+  unsigned long cpu_facilities;\n+\n+  cpu_facilities = i386_cpuid ();\n+\n+  if (!(cpu_facilities & bit_MMX))\n+    /* If host has no MMX support, pass.  */\n+    return 0;\n+\n+  if (bar (116.0) != 117.0)\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "083fbf648c9631f6de576ba0178571b95c2dd710", "filename": "gcc/testsuite/gcc.target/i386/pr22576.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a35074775f15b85a4699fce297d7cf49af0473c1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22576.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a35074775f15b85a4699fce297d7cf49af0473c1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22576.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22576.c?ref=a35074775f15b85a4699fce297d7cf49af0473c1", "patch": "@@ -0,0 +1,10 @@\n+/* PR target/22576 */\n+/* Testcase reduced by Volker Reichelt */\n+/* { dg-do compile } */\n+/* { dg-options \"-ffast-math\" } */\n+\n+int\n+foo (long double d)\n+{\n+  return d == 0;\n+}"}, {"sha": "879ba665553d6693408ae2762e5a77ef7c38460c", "filename": "gcc/testsuite/gcc.target/i386/pr22585.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a35074775f15b85a4699fce297d7cf49af0473c1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22585.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a35074775f15b85a4699fce297d7cf49af0473c1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22585.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22585.c?ref=a35074775f15b85a4699fce297d7cf49af0473c1", "patch": "@@ -0,0 +1,11 @@\n+/* PR target/22585 */\n+/* Testcase reduced by Volker Reichelt */\n+/* { dg-do compile } */\n+/* { dg-options \"-march=i386 -O -ffast-math\" } */\n+\n+int\n+foo (long double d, int i)\n+{\n+  if (d == (long double) i)\n+    return 1;\n+}"}, {"sha": "b5645b2974eb35a2a43fb53f9d079c4f7171c41c", "filename": "gcc/testsuite/gcc.target/i386/pr23268.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a35074775f15b85a4699fce297d7cf49af0473c1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr23268.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a35074775f15b85a4699fce297d7cf49af0473c1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr23268.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr23268.c?ref=a35074775f15b85a4699fce297d7cf49af0473c1", "patch": "@@ -0,0 +1,13 @@\n+/* PR target/23268 */\n+/* Testcase reduced by Andrew Pinski */\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -ffast-math\" } */\n+\n+int\n+f (float x)\n+{\n+  int a, b;\n+  a = __builtin_log (2.f);\n+  b = __builtin_lrint (x);\n+  return (a + b);\n+}"}]}