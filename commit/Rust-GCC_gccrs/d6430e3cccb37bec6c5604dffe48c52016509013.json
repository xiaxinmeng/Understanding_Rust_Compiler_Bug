{"sha": "d6430e3cccb37bec6c5604dffe48c52016509013", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY0MzBlM2NjY2IzN2JlYzZjNTYwNGRmZmU0OGM1MjAxNjUwOTAxMw==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2020-06-08T08:23:10Z"}, "committer": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2020-06-08T08:23:10Z"}, "message": "AArch64: Expand on comment of stack-clash and implicit probing through LR.\n\nThis expands the comment on an assert we have in aarch64_layout_frame\nand points to an existing comment somewhere else that has a much longer\nexplanation of what's going on.\n\nCommitted under the GCC Obvious rule.\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64.c (aarch64_layout_frame): Expand comments.", "tree": {"sha": "8e482564160f01253b3eb9070d54cb701c481453", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e482564160f01253b3eb9070d54cb701c481453"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6430e3cccb37bec6c5604dffe48c52016509013", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6430e3cccb37bec6c5604dffe48c52016509013", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6430e3cccb37bec6c5604dffe48c52016509013", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6430e3cccb37bec6c5604dffe48c52016509013/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "635408da1eb1d441ef4d59fe00a038c920e51085", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/635408da1eb1d441ef4d59fe00a038c920e51085", "html_url": "https://github.com/Rust-GCC/gccrs/commit/635408da1eb1d441ef4d59fe00a038c920e51085"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "973c65aa4fb348450872036617362aa17310fb20", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6430e3cccb37bec6c5604dffe48c52016509013/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6430e3cccb37bec6c5604dffe48c52016509013/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=d6430e3cccb37bec6c5604dffe48c52016509013", "patch": "@@ -6531,7 +6531,9 @@ aarch64_layout_frame (void)\n \t&& !crtl->abi->clobbers_full_reg_p (regno))\n       frame.reg_offset[regno] = SLOT_REQUIRED;\n \n-  /* With stack-clash, LR must be saved in non-leaf functions.  */\n+  /* With stack-clash, LR must be saved in non-leaf functions.  The saving of\n+     LR counts as an implicit probe which allows us to maintain the invariant\n+     described in the comment at expand_prologue.  */\n   gcc_assert (crtl->is_leaf\n \t      || maybe_ne (frame.reg_offset[R30_REGNUM], SLOT_NOT_REQUIRED));\n "}]}