{"sha": "aa710d25957e36a089a03929d6f82fa88371e32d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE3MTBkMjU5NTdlMzZhMDg5YTAzOTI5ZDZmODJmYTg4MzcxZTMyZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-01-28T14:05:40Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-01-28T14:05:40Z"}, "message": "re PR tree-optimization/56094 (Invalid line number info generated with tree-level ivopts)\n\n\tPR tree-optimization/56094\n\t* gimplify.c (force_gimple_operand_1): Temporarily set input_location\n\tto UNKNOWN_LOCATION while gimplifying expr.\n\n\t* gcc.dg/pr56094.c: New test.\n\nFrom-SVN: r195504", "tree": {"sha": "1de27d3eb202e56e456408ca2b0032563b0e331d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1de27d3eb202e56e456408ca2b0032563b0e331d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa710d25957e36a089a03929d6f82fa88371e32d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa710d25957e36a089a03929d6f82fa88371e32d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa710d25957e36a089a03929d6f82fa88371e32d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa710d25957e36a089a03929d6f82fa88371e32d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "25350308a5373048daf6718da30eac968f59213a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25350308a5373048daf6718da30eac968f59213a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25350308a5373048daf6718da30eac968f59213a"}], "stats": {"total": 96, "additions": 96, "deletions": 0}, "files": [{"sha": "c96ccd26af88f4d735832828576b1a9b8d0739bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa710d25957e36a089a03929d6f82fa88371e32d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa710d25957e36a089a03929d6f82fa88371e32d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa710d25957e36a089a03929d6f82fa88371e32d", "patch": "@@ -1,3 +1,9 @@\n+2013-01-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/56094\n+\t* gimplify.c (force_gimple_operand_1): Temporarily set input_location\n+\tto UNKNOWN_LOCATION while gimplifying expr.\n+\n 2013-01-27  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/56114"}, {"sha": "e7119283ff379675fa120de91beb5b3ff37f82dd", "filename": "gcc/gimplify.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa710d25957e36a089a03929d6f82fa88371e32d/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa710d25957e36a089a03929d6f82fa88371e32d/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=aa710d25957e36a089a03929d6f82fa88371e32d", "patch": "@@ -8600,6 +8600,7 @@ force_gimple_operand_1 (tree expr, gimple_seq *stmts,\n {\n   enum gimplify_status ret;\n   struct gimplify_ctx gctx;\n+  location_t saved_location;\n \n   *stmts = NULL;\n \n@@ -8613,6 +8614,8 @@ force_gimple_operand_1 (tree expr, gimple_seq *stmts,\n   push_gimplify_context (&gctx);\n   gimplify_ctxp->into_ssa = gimple_in_ssa_p (cfun);\n   gimplify_ctxp->allow_rhs_cond_expr = true;\n+  saved_location = input_location;\n+  input_location = UNKNOWN_LOCATION;\n \n   if (var)\n     {\n@@ -8634,6 +8637,7 @@ force_gimple_operand_1 (tree expr, gimple_seq *stmts,\n       gcc_assert (ret != GS_ERROR);\n     }\n \n+  input_location = saved_location;\n   pop_gimplify_context (NULL);\n \n   return expr;"}, {"sha": "a40759caad7a1c0eb463b7746d04d8e0f33180e5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa710d25957e36a089a03929d6f82fa88371e32d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa710d25957e36a089a03929d6f82fa88371e32d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aa710d25957e36a089a03929d6f82fa88371e32d", "patch": "@@ -1,3 +1,8 @@\n+2013-01-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/56094\n+\t* gcc.dg/pr56094.c: New test.\n+\n 2013-01-27  Amol Pise  <amolpise15@gmail.com>\n \n \t* gcc.target/arm/neon-vfnms-1.c: New test."}, {"sha": "d22331193f1b11fe75564124d1b9ea73a8ad492c", "filename": "gcc/testsuite/gcc.dg/pr56094.c", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa710d25957e36a089a03929d6f82fa88371e32d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56094.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa710d25957e36a089a03929d6f82fa88371e32d/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56094.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr56094.c?ref=aa710d25957e36a089a03929d6f82fa88371e32d", "patch": "@@ -0,0 +1,81 @@\n+/* PR tree-optimization/56094 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -g -fdump-tree-optimized-lineno\" } */\n+\n+_Bool cond;\n+\n+int\n+fn0 (unsigned char, unsigned long long, unsigned char,\n+     unsigned char, signed short, unsigned int,\n+     unsigned char *);\n+\n+extern void fn3 (unsigned char, unsigned char, unsigned char, unsigned char,\n+\t\t unsigned char, unsigned char, unsigned char, unsigned short);\n+extern void fn7 (int);\n+extern void fn8 (int);\n+\n+static __inline__ __attribute__ ((always_inline)) void\n+fn1 (unsigned char arg0, unsigned char arg1, unsigned char arg2,\n+     unsigned char arg3, unsigned char arg4, unsigned char arg5,\n+     unsigned short arg6)\n+{\n+  asm volatile (\"\" :: \"g\" ((unsigned long long) arg0), \"g\" (arg1),\n+\t\t      \"g\" (arg2), \"g\" (arg3), \"g\" (arg4), \"g\" (arg5),\n+\t\t      \"g\" (arg6));\n+  if (cond)\n+    {\n+      unsigned char loc0 = 0;\n+      fn3 (loc0, arg0, arg1, arg2, arg3, arg4, arg5, arg6);\n+    }\n+}\n+\n+static __inline__ __attribute__ ((always_inline)) void\n+fn4 (unsigned int arg0, unsigned long long arg1)\n+{\n+  asm volatile (\"\" :: \"g\" (arg0), \"g\" (arg1));\n+}\n+\n+static __inline__ __attribute__ ((always_inline)) void\n+fn5 (unsigned int arg0, unsigned char arg1, unsigned int arg2,\n+     unsigned char arg3)\n+{\n+  asm volatile (\"\" :: \"g\" (arg0), \"g\" (arg1),\n+\t\t      \"g\" ((unsigned long long) arg2), \"g\" (arg3));\n+}\n+\n+static __inline__ __attribute__ ((always_inline)) void\n+fn6 (unsigned long long arg0, unsigned char arg1,\n+     unsigned char arg2, signed short arg3,\n+     unsigned int arg4, unsigned char * arg5)\n+{\n+  asm volatile (\"\" :: \"g\" (arg0), \"g\" ((unsigned long long) arg1),\n+\t\t      \"g\" ((unsigned long long) arg2), \"g\" (arg3),\n+\t\t      \"g\" (arg4), \"g\" (arg5));\n+  if (cond)\n+    {\n+      unsigned char loc0 = 0;\n+      fn0 (loc0, arg0, arg1, arg2, arg3, arg4, arg5);\n+    }\n+}\n+\n+unsigned char b[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0xa };\n+unsigned int q = sizeof (b) / sizeof (b[0]);\n+\n+void\n+foo ()\n+{\n+  int i;\n+  for (i = 1; i <= 50; i++)\n+    {\n+      fn6 (i + 0x1234, i + 1, i + 0xa, i + 0x1234, q, b);\n+      fn5 (i + 0xabcd, i << 1, i + 0x1234, i << 2);\n+      fn7 (i + 0xdead);\n+      fn8 (i + 0xdead);\n+      fn1 (i, i + 1, i + 2, i + 3, i + 4, i + 5, i << 10);\n+      fn4 (i + 0xfeed, i);\n+    }\n+}\n+\n+/* Verify no statements get the location of the foo () decl.  */\n+/* { dg-final { scan-tree-dump-not \" : 65:1\\\\\\]\" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}]}