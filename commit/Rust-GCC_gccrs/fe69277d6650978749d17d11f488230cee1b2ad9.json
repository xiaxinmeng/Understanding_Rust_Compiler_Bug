{"sha": "fe69277d6650978749d17d11f488230cee1b2ad9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU2OTI3N2Q2NjUwOTc4NzQ5ZDE3ZDExZjQ4ODIzMGNlZTFiMmFkOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-02-15T21:13:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-02-15T21:13:57Z"}, "message": "re PR c++/68890 (ICE in verify_ctor_sanity, at cp/constexpr.c:2113)\n\n\tPR c++/68890\n\n\t* constexpr.c (verify_ctor_sanity): Remove CONSTRUCTOR_NELTS check.\n\nFrom-SVN: r233430", "tree": {"sha": "1cf38322adae7394bf1e4d5076e2347e5179807c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cf38322adae7394bf1e4d5076e2347e5179807c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe69277d6650978749d17d11f488230cee1b2ad9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe69277d6650978749d17d11f488230cee1b2ad9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe69277d6650978749d17d11f488230cee1b2ad9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe69277d6650978749d17d11f488230cee1b2ad9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e8444ca6f85c1931c341e1d3f340edd8782a8f9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8444ca6f85c1931c341e1d3f340edd8782a8f9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8444ca6f85c1931c341e1d3f340edd8782a8f9a"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "85473df23d5a961e9bae082d1a6846315a582eb4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe69277d6650978749d17d11f488230cee1b2ad9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe69277d6650978749d17d11f488230cee1b2ad9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fe69277d6650978749d17d11f488230cee1b2ad9", "patch": "@@ -1,3 +1,8 @@\n+2016-02-15  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/68890\n+\t* constexpr.c (verify_ctor_sanity): Remove CONSTRUCTOR_NELTS check.\n+\n 2016-02-12  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \tPR c++/69098"}, {"sha": "11037fb62ca7bc88d6448ce10e5855412c74ed17", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe69277d6650978749d17d11f488230cee1b2ad9/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe69277d6650978749d17d11f488230cee1b2ad9/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=fe69277d6650978749d17d11f488230cee1b2ad9", "patch": "@@ -2202,7 +2202,8 @@ verify_ctor_sanity (const constexpr_ctx *ctx, tree type)\n   gcc_assert (ctx->ctor);\n   gcc_assert (same_type_ignoring_top_level_qualifiers_p\n \t      (type, TREE_TYPE (ctx->ctor)));\n-  gcc_assert (CONSTRUCTOR_NELTS (ctx->ctor) == 0);\n+  /* We used to check that ctx->ctor was empty, but that isn't the case when\n+     the object is zero-initialized before calling the constructor.  */\n   if (ctx->object)\n     gcc_assert (same_type_ignoring_top_level_qualifiers_p\n \t\t(type, TREE_TYPE (ctx->object)));"}, {"sha": "8928b671de797c9d6ec5ad4e5e75b4c6a515e0f5", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-value5.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe69277d6650978749d17d11f488230cee1b2ad9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-value5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe69277d6650978749d17d11f488230cee1b2ad9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-value5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-value5.C?ref=fe69277d6650978749d17d11f488230cee1b2ad9", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/68890\n+// { dg-do compile { target c++11 } }\n+\n+class ptr;\n+template <long _Nm> struct A { typedef ptr _Type[_Nm]; };\n+template <long _Nm> struct B { typename A<_Nm>::_Type _M_elems; };\n+template <long N> class FixedVector : B<N> {\n+public:\n+  typedef B<1> base;\n+  constexpr FixedVector() : base(), size_() {}\n+  char size_;\n+};\n+class ptr {\n+public:\n+  constexpr ptr() : px_(){};\n+  int px_;\n+};\n+FixedVector<1> a;"}]}