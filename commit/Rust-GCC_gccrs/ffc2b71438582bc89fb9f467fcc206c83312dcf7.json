{"sha": "ffc2b71438582bc89fb9f467fcc206c83312dcf7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZjMmI3MTQzODU4MmJjODlmYjlmNDY3ZmNjMjA2YzgzMzEyZGNmNw==", "commit": {"author": {"name": "Tristan Gingold", "email": "gingold@adacore.com", "date": "2012-03-26T08:42:52Z"}, "committer": {"name": "Tristan Gingold", "email": "gingold@gcc.gnu.org", "date": "2012-03-26T08:42:52Z"}, "message": "math.m4: New file.\n\n2012-03-26  Tristan Gingold  <gingold@adacore.com>\n\n\t* math.m4: New file.\n\nFrom-SVN: r185788", "tree": {"sha": "766dfd228e0597427152a908fbaa5a4fe67feb25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/766dfd228e0597427152a908fbaa5a4fe67feb25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffc2b71438582bc89fb9f467fcc206c83312dcf7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffc2b71438582bc89fb9f467fcc206c83312dcf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffc2b71438582bc89fb9f467fcc206c83312dcf7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffc2b71438582bc89fb9f467fcc206c83312dcf7/comments", "author": {"login": "gingold-adacore", "id": 16334725, "node_id": "MDQ6VXNlcjE2MzM0NzI1", "avatar_url": "https://avatars.githubusercontent.com/u/16334725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gingold-adacore", "html_url": "https://github.com/gingold-adacore", "followers_url": "https://api.github.com/users/gingold-adacore/followers", "following_url": "https://api.github.com/users/gingold-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/gingold-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/gingold-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gingold-adacore/subscriptions", "organizations_url": "https://api.github.com/users/gingold-adacore/orgs", "repos_url": "https://api.github.com/users/gingold-adacore/repos", "events_url": "https://api.github.com/users/gingold-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/gingold-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2169f14c299675e237f066ee5d679e8ec504026d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2169f14c299675e237f066ee5d679e8ec504026d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2169f14c299675e237f066ee5d679e8ec504026d"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "f502696ac552f9fc11bd7e3f84b7ea5755953f19", "filename": "config/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffc2b71438582bc89fb9f467fcc206c83312dcf7/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffc2b71438582bc89fb9f467fcc206c83312dcf7/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=ffc2b71438582bc89fb9f467fcc206c83312dcf7", "patch": "@@ -1,3 +1,7 @@\n+2012-03-26  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* math.m4: New file.\n+\n 2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* weakref.m4 (GCC_CHECK_ELF_STYLE_WEAKREF): Remove"}, {"sha": "5527c25aec30c96c744a990e9830bfbc78bbfb59", "filename": "config/math.m4", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffc2b71438582bc89fb9f467fcc206c83312dcf7/config%2Fmath.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffc2b71438582bc89fb9f467fcc206c83312dcf7/config%2Fmath.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmath.m4?ref=ffc2b71438582bc89fb9f467fcc206c83312dcf7", "patch": "@@ -0,0 +1,49 @@\n+dnl GCC_CHECK_LIBM\n+dnl\n+dnl Check whether -lm is available.  This is a pre-requisite for\n+dnl GCC_CHECK_MATH_FUNC so that it will link with -lm.\n+AC_DEFUN([GCC_CHECK_LIBM],\n+[AC_CHECK_LIB([m],[sin])])\n+\n+dnl GCC_CHECK_MATH_HEADERS\n+dnl\n+dnl Check for math.h and complex.h.  This is a pre-requisite for\n+dnl GCC_CHECK_MATH_FUNC so that it includes the right headers.\n+dnl (Some systems, such as AIX or OpenVMS may define macro for math\n+dnl  functions).\n+AC_DEFUN([GCC_CHECK_MATH_HEADERS],\n+[AC_CHECK_HEADERS_ONCE(math.h complex.h)])\n+\n+dnl GCC_CHECK_MATH_FUNC([name],[if-present])\n+dnl\n+dnl Check whether math function NAME is available on the system (by compiling\n+dnl and linking a C program) and run if-present on success.\n+dnl\n+dnl Note that OpenVMS system insists on including complex.h before math.h\n+AC_DEFUN([GCC_CHECK_MATH_FUNC],\n+[\n+  AC_REQUIRE([GCC_CHECK_LIBM])\n+  AC_REQUIRE([GCC_CHECK_MATH_HEADERS])\n+  AC_CACHE_CHECK([for $1], [gcc_cv_math_func_$1],\n+\t\t [AC_LINK_IFELSE([\n+#ifdef HAVE_COMPLEX_H\n+#include <complex.h>\n+#endif\n+#ifdef HAVE_MATH_H\n+#include <math.h>\n+#endif\n+\n+int (*ptr)() = (int (*)())$1;\n+\n+int\n+main ()\n+{\n+  return 0;\n+}\n+],\n+[gcc_cv_math_func_$1=yes],\n+[gcc_cv_math_func_$1=no])])\n+  if test $gcc_cv_math_func_$1 = yes; then\n+    $2\n+  fi\n+])"}]}