{"sha": "f0e73dd031135695249f87589a0d250bf2f334b6", "node_id": "C_kwDOANBUbNoAKGYwZTczZGQwMzExMzU2OTUyNDlmODc1ODlhMGQyNTBiZjJmMzM0YjY", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-02-07T00:17:44Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-02-07T00:17:44Z"}, "message": "Daily bump.", "tree": {"sha": "c180f9b529bbe77c37cbf5b5b49075eeb3694176", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c180f9b529bbe77c37cbf5b5b49075eeb3694176"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0e73dd031135695249f87589a0d250bf2f334b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0e73dd031135695249f87589a0d250bf2f334b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0e73dd031135695249f87589a0d250bf2f334b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0e73dd031135695249f87589a0d250bf2f334b6/comments", "author": null, "committer": null, "parents": [{"sha": "d5f933d2c046478c05b463be23021875d08dc647", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5f933d2c046478c05b463be23021875d08dc647", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5f933d2c046478c05b463be23021875d08dc647"}], "stats": {"total": 175, "additions": 174, "deletions": 1}, "files": [{"sha": "3c97d724bd53d91f410e6db1733a3b31cd9020ec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0e73dd031135695249f87589a0d250bf2f334b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0e73dd031135695249f87589a0d250bf2f334b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f0e73dd031135695249f87589a0d250bf2f334b6", "patch": "@@ -1,3 +1,45 @@\n+2023-02-06  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* config/gcn/mkoffload.cc (gcn_stack_size): New global variable.\n+\t(process_asm): Create a constructor for GCN_STACK_SIZE.\n+\t(main): Parse the -mstack-size option.\n+\n+2023-02-06  Alex Coplan  <alex.coplan@arm.com>\n+\n+\tPR target/104921\n+\t* config/aarch64/aarch64-simd.md (aarch64_bfmlal<bt>_lane<q>v4sf):\n+\tUse correct constraint for operand 3.\n+\n+2023-02-06  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* ipa-sra.cc (adjust_parameter_descriptions): Fix a typo in a dump.\n+\n+2023-02-06  Xi Ruoyao  <xry111@xry111.site>\n+\n+\t* config/loongarch/loongarch.md (bytepick_w_ashift_amount):\n+\tNew define_int_iterator.\n+\t(bytepick_d_ashift_amount): Likewise.\n+\t(bytepick_imm): New define_int_attr.\n+\t(bytepick_w_lshiftrt_amount): Likewise.\n+\t(bytepick_d_lshiftrt_amount): Likewise.\n+\t(bytepick_w_<bytepick_imm>): New define_insn template.\n+\t(bytepick_w_<bytepick_imm>_extend): Likewise.\n+\t(bytepick_d_<bytepick_imm>): Likewise.\n+\t(bytepick_w): Remove unused define_insn.\n+\t(bytepick_d): Likewise.\n+\t(UNSPEC_BYTEPICK_W): Remove unused unspec.\n+\t(UNSPEC_BYTEPICK_D): Likewise.\n+\t* config/loongarch/predicates.md (const_0_to_3_operand):\n+\tRemove unused define_predicate.\n+\t(const_0_to_7_operand): Likewise.\n+\n+2023-02-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/108655\n+\t* ubsan.cc (sanitize_unreachable_fn): For -funreachable-traps\n+\tor -fsanitize=unreachable -fsanitize-trap=unreachable return\n+\tBUILT_IN_UNREACHABLE_TRAP decl rather than BUILT_IN_TRAP.\n+\n 2023-02-05  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/install.texi (Specific): Remove PW32."}, {"sha": "9e62c1c19354e2b07f3c38b6995529bb3b7c7966", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0e73dd031135695249f87589a0d250bf2f334b6/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0e73dd031135695249f87589a0d250bf2f334b6/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=f0e73dd031135695249f87589a0d250bf2f334b6", "patch": "@@ -1 +1 @@\n-20230206\n+20230207"}, {"sha": "c648820ec12279703ec9bac013f908a0dcb0a736", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0e73dd031135695249f87589a0d250bf2f334b6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0e73dd031135695249f87589a0d250bf2f334b6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f0e73dd031135695249f87589a0d250bf2f334b6", "patch": "@@ -1,3 +1,15 @@\n+2023-02-06  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/107461\n+\t* cp-tree.h (call_expr_dependent_name): Declare.\n+\t* pt.cc (iterative_hash_template_arg) <case CALL_EXPR>: Use\n+\tcall_expr_dependent_name instead of dependent_name.\n+\t* tree.cc (call_expr_dependent_name): Define.\n+\t(called_fns_equal): Adjust to take two CALL_EXPRs instead of\n+\tCALL_EXPR_FNs thereof.  Use call_expr_dependent_name instead\n+\tof dependent_name.\n+\t(cp_tree_equal) <case CALL_EXPR>: Adjust call to called_fns_equal.\n+\n 2023-02-03  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/108158"}, {"sha": "bbd15e27e6ea734f30eae897bdb8da36acba48e1", "filename": "gcc/m2/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0e73dd031135695249f87589a0d250bf2f334b6/gcc%2Fm2%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0e73dd031135695249f87589a0d250bf2f334b6/gcc%2Fm2%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2FChangeLog?ref=f0e73dd031135695249f87589a0d250bf2f334b6", "patch": "@@ -1,3 +1,23 @@\n+2023-02-06  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\tPR modula2/108135\n+\t* gm2-compiler/M2Search.mod (DSdbEnter): Comment out.\n+\t(DSdbExit): Comment out.\n+\n+2023-02-06  Co-Authored by: Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR modula2/107234\n+\t* m2pp.cc (m2pp_integer_cst): Use\n+\tHOST_WIDE_INT_PRINT_UNSIGNED as the format specifier.\n+\n+2023-02-06  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* gm2-compiler/M2Preprocess.mod (BaseName): Comment out.\n+\t* gm2-lang.cc (opt): Remove.\n+\t* gm2spec.cc (add_include): Remove.\n+\t(full_libraries): Remove.\n+\t(concat_option): Remove.\n+\n 2023-02-03  Gaius Mulley  <gaiusmod2@gmail.com>\n \n \t* Make-lang.in (TEXISRC): Remove m2/images/gnu.eps."}, {"sha": "1399043a552c1baeed1f78bb65784ab86d04813b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0e73dd031135695249f87589a0d250bf2f334b6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0e73dd031135695249f87589a0d250bf2f334b6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f0e73dd031135695249f87589a0d250bf2f334b6", "patch": "@@ -1,3 +1,30 @@\n+2023-02-06  Alex Coplan  <alex.coplan@arm.com>\n+\n+\tPR target/104921\n+\t* gcc.target/aarch64/pr104921-1.c: New test.\n+\t* gcc.target/aarch64/pr104921-2.c: New test.\n+\t* gcc.target/aarch64/pr104921.x: Include file for new tests.\n+\n+2023-02-06  Xi Ruoyao  <xry111@xry111.site>\n+\n+\t* g++.target/loongarch/bytepick.C: New test.\n+\n+2023-02-06  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* gcc.target/aarch64/options_set_10.c: Removed.\n+\n+2023-02-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/108655\n+\t* gcc.dg/pr108655.c: New test.\n+\n+2023-02-06  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/107461\n+\t* g++.dg/cpp0x/overload5.C: New test.\n+\t* g++.dg/cpp0x/overload5a.C: New test.\n+\t* g++.dg/cpp0x/overload6.C: New test.\n+\n 2023-02-05  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/108592"}, {"sha": "b9f041b641e5a1abdee1ca9797031e46ad624429", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0e73dd031135695249f87589a0d250bf2f334b6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0e73dd031135695249f87589a0d250bf2f334b6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f0e73dd031135695249f87589a0d250bf2f334b6", "patch": "@@ -1,3 +1,75 @@\n+2023-02-06  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* doc/xml/manual/using.xml: Document newly-freestanding\n+\theaders and the effect of the -ffreestanding flag.\n+\t* doc/xml/manual/status_cxx2023.xml: Document P1642R11 as\n+\tcompleted.\n+\t* doc/xml/manual/configure.xml: Document that hosted installs\n+\trespect __STDC_HOSTED__.\n+\t* doc/xml/manual/test.xml: Document how to run tests in\n+\tfreestanding mode.\n+\t* doc/html/*: Regenerate.\n+\n+2023-02-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/ranges_algo.h (__find_last_fn): Rename T to _Tp.\n+\t(__find_last_if_fn): Likewise.\n+\n+2023-02-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/type_traits: Add diagnostic pragmas around\n+\treferences to deprecated std::aligned_storage and\n+\tstd::aligned_union traits.\n+\t* testsuite/20_util/aligned_storage/requirements/alias_decl.cc:\n+\tAdd dg-warning for et c++23.\n+\t* testsuite/20_util/aligned_storage/requirements/explicit_instantiation.cc:\n+\tLikewise.\n+\t* testsuite/20_util/aligned_storage/value.cc: Likewise.\n+\t* testsuite/20_util/aligned_union/1.cc: Likewise.\n+\t* testsuite/20_util/aligned_union/requirements/alias_decl.cc:\n+\tLikewise.\n+\n+2023-02-06  Nathaniel Shead  <nathanieloshead@gmail.com>\n+\n+\t* doc/doxygen/user.cfg.in (PREDEFINED): Add new macros.\n+\t* include/bits/c++config (_GLIBCXX23_DEPRECATED)\n+\t(_GLIBCXX23_DEPRECATED_SUGGEST): New macros.\n+\t* include/std/type_traits (aligned_storage, aligned_union)\n+\t(aligned_storage_t, aligned_union_t): Deprecate for C++23.\n+\t* testsuite/20_util/aligned_storage/deprecated-2b.cc: New test.\n+\t* testsuite/20_util/aligned_union/deprecated-2b.cc: New test.\n+\n+2023-02-06  Nathaniel Shead  <nathanieloshead@gmail.com>\n+\n+\t* doc/doxygen/user.cfg.in (PREDEFINED): Update macros.\n+\t* include/bits/c++config (_GLIBCXX20_DEPRECATED): Make\n+\tconsistent with other 'deprecated' macros.\n+\t* include/std/type_traits (is_pod, is_pod_v): Use\n+\t_GLIBCXX20_DEPRECATED_SUGGEST instead.\n+\n+2023-02-06  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* Makefile.am [!_GLIBCXX_HOSTED]: Enable src/ subdirectory.\n+\t* Makefile.in: Regenerate.\n+\t* src/Makefile.am [!_GLIBCXX_HOSTED]: Omit compatibility files.\n+\tThere's no history to be compatible with.\n+\t* src/c++11/Makefile.am [!_GLIBCXX_HOSTED]: Omit hosted-only\n+\tsource files from the build.\n+\t* src/c++17/Makefile.am [!_GLIBCXX_HOSTED]: Likewise.\n+\t* src/c++20/Makefile.am [!_GLIBCXX_HOSTED]: Likewise.\n+\t* src/c++98/Makefile.am [!_GLIBCXX_HOSTED]: Likewise.\n+\t* src/Makefile.in: Regenerate.\n+\t* src/c++11/Makefile.in: Regenerate.\n+\t* src/c++17/Makefile.in: Regenerate.\n+\t* src/c++20/Makefile.in: Regenerate.\n+\t* src/c++98/Makefile.in: Regenerate.\n+\n+2023-02-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* src/Makefile.am [GLIBCXX_HOSTED] (SUBDIRS): Do not add\n+\tfilesystem, libbacktrace and experimental.\n+\t* src/Makefile.in: Regenerate.\n+\n 2023-02-04  Hans-Peter Nilsson  <hp@axis.com>\n \n \tPR libstdc++/108672"}]}