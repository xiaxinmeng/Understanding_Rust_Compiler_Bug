{"sha": "6168fc435e1b56df4582cebe3de6b9cf71f9d55d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE2OGZjNDM1ZTFiNTZkZjQ1ODJjZWJlM2RlNmI5Y2Y3MWY5ZDU1ZA==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2010-07-21T22:34:07Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2010-07-21T22:34:07Z"}, "message": "re PR fortran/44929 ([OOP] Parsing error of  derived type name starting with 'REAL')\n\n2010-07-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n    PR fortran/44929\n    * Revert my commit r162325 for this PR.\n\nFrom-SVN: r162386", "tree": {"sha": "847d9b984c6c3f85174a0ba7c045e01ea30d2bc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/847d9b984c6c3f85174a0ba7c045e01ea30d2bc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6168fc435e1b56df4582cebe3de6b9cf71f9d55d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6168fc435e1b56df4582cebe3de6b9cf71f9d55d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6168fc435e1b56df4582cebe3de6b9cf71f9d55d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6168fc435e1b56df4582cebe3de6b9cf71f9d55d/comments", "author": null, "committer": null, "parents": [{"sha": "fcc71c6c3593f77f434fc30870f0b3b90ef5b0c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcc71c6c3593f77f434fc30870f0b3b90ef5b0c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcc71c6c3593f77f434fc30870f0b3b90ef5b0c9"}], "stats": {"total": 88, "additions": 30, "deletions": 58}, "files": [{"sha": "1b3f555dd4a4b8761e49088ad5d3a92dded491f9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6168fc435e1b56df4582cebe3de6b9cf71f9d55d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6168fc435e1b56df4582cebe3de6b9cf71f9d55d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6168fc435e1b56df4582cebe3de6b9cf71f9d55d", "patch": "@@ -1,3 +1,8 @@\n+2010-07-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/44929\n+\t* Revert my commit r162325.\n+\n 2010-07-21  Daniel Kraft  <d@domob.eu>\n \n \t* trans.h (gfc_get_return_label): Removed."}, {"sha": "56e9d1d515dd9085be3d98d5579a0ddc1e40623f", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6168fc435e1b56df4582cebe3de6b9cf71f9d55d/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6168fc435e1b56df4582cebe3de6b9cf71f9d55d/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=6168fc435e1b56df4582cebe3de6b9cf71f9d55d", "patch": "@@ -2706,25 +2706,6 @@ match_type_spec (gfc_typespec *ts)\n   gfc_clear_ts (ts);\n   old_locus = gfc_current_locus;\n \n-  m = match_derived_type_spec (ts);\n-  if (m == MATCH_YES)\n-    {\n-      old_locus = gfc_current_locus;\n-      if (gfc_match (\" :: \") != MATCH_YES)\n-\treturn MATCH_ERROR;\n-      gfc_current_locus = old_locus;\n-      /* Enfore F03:C401.  */\n-      if (ts->u.derived->attr.abstract)\n-\t{\n-\t  gfc_error (\"Derived type '%s' at %L may not be ABSTRACT\",\n-\t\t     ts->u.derived->name, &old_locus);\n-\t  return MATCH_ERROR;\n-\t}\n-      return MATCH_YES;\n-    }\n-\n-  gfc_current_locus = old_locus;\n-\n   if (gfc_match (\"integer\") == MATCH_YES)\n     {\n       ts->type = BT_INTEGER;\n@@ -2766,6 +2747,25 @@ match_type_spec (gfc_typespec *ts)\n       goto kind_selector;\n     }\n \n+  m = match_derived_type_spec (ts);\n+  if (m == MATCH_YES)\n+    {\n+      old_locus = gfc_current_locus;\n+      if (gfc_match (\" :: \") != MATCH_YES)\n+\treturn MATCH_ERROR;\n+      gfc_current_locus = old_locus;\n+      /* Enfore F03:C401.  */\n+      if (ts->u.derived->attr.abstract)\n+\t{\n+\t  gfc_error (\"Derived type '%s' at %L may not be ABSTRACT\",\n+\t\t     ts->u.derived->name, &old_locus);\n+\t  return MATCH_ERROR;\n+\t}\n+      return MATCH_YES;\n+    }\n+  else if (m == MATCH_ERROR && gfc_match (\" :: \") == MATCH_YES)\n+    return MATCH_ERROR;\n+\n   /* If a type is not matched, simply return MATCH_NO.  */\n   gfc_current_locus = old_locus;\n   return MATCH_NO;"}, {"sha": "d284060a19b6f942f5fe5c9be2e6fe3a1f87b23c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6168fc435e1b56df4582cebe3de6b9cf71f9d55d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6168fc435e1b56df4582cebe3de6b9cf71f9d55d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6168fc435e1b56df4582cebe3de6b9cf71f9d55d", "patch": "@@ -1,3 +1,8 @@\n+2010-07-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/44929\n+    * Revert my commit r162325 for this PR.\n+\n 2010-07-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/45015"}, {"sha": "b9f6d5580a0482a8ff4b3db4c4929ecd63af9b0f", "filename": "gcc/testsuite/gfortran.dg/allocate_derived_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6168fc435e1b56df4582cebe3de6b9cf71f9d55d/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_derived_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6168fc435e1b56df4582cebe3de6b9cf71f9d55d/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_derived_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_derived_1.f90?ref=6168fc435e1b56df4582cebe3de6b9cf71f9d55d", "patch": "@@ -32,7 +32,7 @@\n  allocate(t1 :: x(2))\n  allocate(t2 :: x(3))\n  allocate(t3 :: x(4))\n- allocate(tx :: x(5))  ! { dg-error \"not a nonprocedure pointer or an allocatable variable\" }\n+ allocate(tx :: x(5))  ! { dg-error \"is not an accessible derived type\" }\n  allocate(u0 :: x(6))  ! { dg-error \"may not be ABSTRACT\" }\n  allocate(v1 :: x(7))  ! { dg-error \"is type incompatible with typespec\" }\n "}, {"sha": "686abdb5b1bb0315a89ca0e5a369c6e64129ae07", "filename": "gcc/testsuite/gfortran.dg/allocate_with_typespec.f90", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcc71c6c3593f77f434fc30870f0b3b90ef5b0c9/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_typespec.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcc71c6c3593f77f434fc30870f0b3b90ef5b0c9/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_typespec.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_with_typespec.f90?ref=fcc71c6c3593f77f434fc30870f0b3b90ef5b0c9", "patch": "@@ -1,38 +0,0 @@\n-!\n-! { dg-do compile }\n-!\n-! PR fortran/44929\n-!\n-! The module is contributed by Satish.BD <bdsatish@gmail.com>.\n-! The subroutines are from Tobias Burnus and Steve Kargl.\n-!\n-module temp\n-\n-   type, abstract :: abst\n-      !! empty\n-   end type abst\n-\n-   type, extends(abst) :: real_type\n-      !! empty\n-   end type real_type\n-\n-   contains\n-\n-   function create(name)  result(obj)\n-      character(len=*), intent(in) :: name\n-      class(abst), pointer :: obj\n-      allocate(real_type :: obj)\n-   end function create\n-end module temp\n-\n-subroutine z\n-   real(8), allocatable :: r8\n-   allocate(real(kind=8) :: r8)\n-end subroutine z\n-\n-subroutine y\n-   real(8), allocatable :: r8\n-   allocate(real(8) :: r8)\n-end subroutine y\n-! { dg-final { cleanup-modules \"temp\" } }\n-"}]}