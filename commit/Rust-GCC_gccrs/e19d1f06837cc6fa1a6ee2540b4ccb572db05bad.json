{"sha": "e19d1f06837cc6fa1a6ee2540b4ccb572db05bad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE5ZDFmMDY4MzdjYzZmYTFhNmVlMjU0MGI0Y2NiNTcyZGIwNWJhZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2010-03-16T23:02:35Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2010-03-16T23:02:35Z"}, "message": "re PR middle-end/43365 (Destructor not called when returning in exception handler)\n\n        PR middle-end/43365\n        * tree-eh.c (replace_goto_queue): Also replace in the eh_seq.\n        (lower_try_finally): Save and restore eh_seq around the expansion\n        of the try-finally.\n\nFrom-SVN: r157499", "tree": {"sha": "1ada8b4322cb58084937c2086ecd64394a1249a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ada8b4322cb58084937c2086ecd64394a1249a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e19d1f06837cc6fa1a6ee2540b4ccb572db05bad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e19d1f06837cc6fa1a6ee2540b4ccb572db05bad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e19d1f06837cc6fa1a6ee2540b4ccb572db05bad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e19d1f06837cc6fa1a6ee2540b4ccb572db05bad/comments", "author": null, "committer": null, "parents": [{"sha": "7ebb824234a5ea9a45c53186494d6273d46f6c84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ebb824234a5ea9a45c53186494d6273d46f6c84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ebb824234a5ea9a45c53186494d6273d46f6c84"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "6d39e6d2dcd0866e3350ebe71adb9b20a814a98d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e19d1f06837cc6fa1a6ee2540b4ccb572db05bad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e19d1f06837cc6fa1a6ee2540b4ccb572db05bad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e19d1f06837cc6fa1a6ee2540b4ccb572db05bad", "patch": "@@ -1,3 +1,10 @@\n+2010-03-16  Richard Henderson  <rth@redhat.com>\n+\n+\tPR middle-end/43365\n+\t* tree-eh.c (replace_goto_queue): Also replace in the eh_seq.\n+\t(lower_try_finally): Save and restore eh_seq around the expansion\n+\tof the try-finally.\n+\n 2010-03-16  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* graphite-sese-to-poly.c (split_reduction_stmt): Skip debug"}, {"sha": "32346d5018cc84135eb0671ea51b89c019922c3b", "filename": "gcc/testsuite/g++.dg/eh/pr43365.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e19d1f06837cc6fa1a6ee2540b4ccb572db05bad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fpr43365.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e19d1f06837cc6fa1a6ee2540b4ccb572db05bad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fpr43365.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fpr43365.C?ref=e19d1f06837cc6fa1a6ee2540b4ccb572db05bad", "patch": "@@ -0,0 +1,30 @@\n+extern \"C\" void abort();\n+\n+class Counter\n+{\n+public:\n+  static int count;\n+  ~Counter() { count += 1; }\n+};\n+\n+int Counter::count = 0;\n+\n+void func()\n+{\n+  Counter c;\n+\n+  try {\n+    throw 1;\n+  }\n+  catch (const int&) {\n+    return;\n+  }\n+}\n+\n+int main()\n+{\n+  func();\n+  if (Counter::count != 1)\n+    abort();\n+  return 0;\n+}"}, {"sha": "a1aca981d6fdfd6909f635282ca2b6f92b96e098", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e19d1f06837cc6fa1a6ee2540b4ccb572db05bad/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e19d1f06837cc6fa1a6ee2540b4ccb572db05bad/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=e19d1f06837cc6fa1a6ee2540b4ccb572db05bad", "patch": "@@ -564,6 +564,7 @@ replace_goto_queue (struct leh_tf_state *tf)\n   if (tf->goto_queue_active == 0)\n     return;\n   replace_goto_queue_stmt_list (tf->top_p_seq, tf);\n+  replace_goto_queue_stmt_list (eh_seq, tf);\n }\n \n /* Add a new record to the goto queue contained in TF. NEW_STMT is the\n@@ -644,7 +645,6 @@ record_in_goto_queue_label (struct leh_tf_state *tf, treemple stmt, tree label)\n      labels. */\n   new_stmt = stmt;\n   record_in_goto_queue (tf, new_stmt, index, true);\n-\n }\n \n /* For any GIMPLE_GOTO or GIMPLE_RETURN, decide whether it leaves a try_finally\n@@ -1531,6 +1531,7 @@ lower_try_finally (struct leh_state *state, gimple tp)\n   struct leh_tf_state this_tf;\n   struct leh_state this_state;\n   int ndests;\n+  gimple_seq old_eh_seq;\n \n   /* Process the try block.  */\n \n@@ -1547,6 +1548,9 @@ lower_try_finally (struct leh_state *state, gimple tp)\n   this_state.ehp_region = state->ehp_region;\n   this_state.tf = &this_tf;\n \n+  old_eh_seq = eh_seq;\n+  eh_seq = NULL;\n+\n   lower_eh_constructs_1 (&this_state, gimple_try_eval(tp));\n \n   /* Determine if the try block is escaped through the bottom.  */\n@@ -1602,6 +1606,20 @@ lower_try_finally (struct leh_state *state, gimple tp)\n   if (this_tf.goto_queue_map)\n     pointer_map_destroy (this_tf.goto_queue_map);\n \n+  /* If there was an old (aka outer) eh_seq, append the current eh_seq.\n+     If there was no old eh_seq, then the append is trivially already done.  */\n+  if (old_eh_seq)\n+    {\n+      if (eh_seq == NULL)\n+\teh_seq = old_eh_seq;\n+      else\n+\t{\n+\t  gimple_seq new_eh_seq = eh_seq;\n+\t  eh_seq = old_eh_seq;\n+\t  gimple_seq_add_seq(&eh_seq, new_eh_seq);\n+\t}\n+    }\n+\n   return this_tf.top_p_seq;\n }\n "}]}