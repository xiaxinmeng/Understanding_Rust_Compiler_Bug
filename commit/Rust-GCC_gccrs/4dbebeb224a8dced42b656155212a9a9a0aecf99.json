{"sha": "4dbebeb224a8dced42b656155212a9a9a0aecf99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRiZWJlYjIyNGE4ZGNlZDQyYjY1NjE1NTIxMmE5YTlhMGFlY2Y5OQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-09-25T20:23:32Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-09-25T20:23:32Z"}, "message": "(store_bit_field): don't make flag_force_mem disable insv\nfor memory operands.\n\nFrom-SVN: r12843", "tree": {"sha": "8f8e55a8eb3e1905ca27e0f1c46f5a3a512ad239", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f8e55a8eb3e1905ca27e0f1c46f5a3a512ad239"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4dbebeb224a8dced42b656155212a9a9a0aecf99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dbebeb224a8dced42b656155212a9a9a0aecf99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dbebeb224a8dced42b656155212a9a9a0aecf99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dbebeb224a8dced42b656155212a9a9a0aecf99/comments", "author": null, "committer": null, "parents": [{"sha": "87ce34d632040b4a51324f71e0dc87f1942f57d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87ce34d632040b4a51324f71e0dc87f1942f57d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87ce34d632040b4a51324f71e0dc87f1942f57d9"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "ee55ddb48ca45926156a91a0000a1cce400ae1cc", "filename": "gcc/expmed.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dbebeb224a8dced42b656155212a9a9a0aecf99/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dbebeb224a8dced42b656155212a9a9a0aecf99/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=4dbebeb224a8dced42b656155212a9a9a0aecf99", "patch": "@@ -409,13 +409,13 @@ store_bit_field (str_rtx, bitsize, bitnum, fieldmode, value, align, total_size)\n       int save_volatile_ok = volatile_ok;\n       volatile_ok = 1;\n \n-      /* If this machine's insv can only insert into a register, or if we\n-\t are to force MEMs into a register, copy OP0 into a register and\n-\t save it back later.  */\n+      /* If this machine's insv can only insert into a register, copy OP0\n+\t into a register and save it back later.  */\n+      /* This used to check flag_force_mem, but that was a serious\n+\t de-optimization now that flag_force_mem is enabled by -O2.  */\n       if (GET_CODE (op0) == MEM\n-\t  && (flag_force_mem\n-\t      || ! ((*insn_operand_predicate[(int) CODE_FOR_insv][0])\n-\t\t    (op0, VOIDmode))))\n+\t  && ! ((*insn_operand_predicate[(int) CODE_FOR_insv][0])\n+\t\t(op0, VOIDmode)))\n \t{\n \t  rtx tempreg;\n \t  enum machine_mode bestmode;"}]}