{"sha": "20acb8a2a2db385d931a5e4d03951f4c187839de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBhY2I4YTJhMmRiMzg1ZDkzMWE1ZTRkMDM5NTFmNGMxODc4MzlkZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-05-09T06:47:29Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-05-09T06:47:29Z"}, "message": "Fix formatting\n\nFrom-SVN: r147313", "tree": {"sha": "5e4415c89e0de3476214709d29071575fda4c357", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e4415c89e0de3476214709d29071575fda4c357"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20acb8a2a2db385d931a5e4d03951f4c187839de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20acb8a2a2db385d931a5e4d03951f4c187839de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20acb8a2a2db385d931a5e4d03951f4c187839de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20acb8a2a2db385d931a5e4d03951f4c187839de/comments", "author": null, "committer": null, "parents": [{"sha": "7acee3505bff166ca1ecfa95caa2f4dda439f53d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7acee3505bff166ca1ecfa95caa2f4dda439f53d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7acee3505bff166ca1ecfa95caa2f4dda439f53d"}], "stats": {"total": 41, "additions": 23, "deletions": 18}, "files": [{"sha": "4be15173fd1baf6731a088dbbb2d7975138ee2cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 18, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20acb8a2a2db385d931a5e4d03951f4c187839de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20acb8a2a2db385d931a5e4d03951f4c187839de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=20acb8a2a2db385d931a5e4d03951f4c187839de", "patch": "@@ -13,26 +13,28 @@\n \n 2009-05-08  Jan Hubicka  <jh@suse.cz>\n \n-\t* cgraphbuild.c (compute_call_stmt_bb_frequency): Accept function argument;\n-\thandle correctly when profile is absent.\n+\t* cgraphbuild.c (compute_call_stmt_bb_frequency): Accept function\n+\targument; handle correctly when profile is absent.\n \t(build_cgraph_edges): Update.\n \t(rebuild_cgraph_edges): Update.\n-\t* cgraph.c: Do not include varrau.h \n-\t(cgraph_set_call_stmt_including_clones, cgraph_create_edge_including_clones):\n-\tNew function\n-\t(cgraph_update_edges_for_call_stmt_node): New stati cfunction.\n+\t* cgraph.c: Do not include varray.h.\n+\t(cgraph_set_call_stmt_including_clones): New function.\n+\t(cgraph_create_edge_including_clones): Likewise\n+\t(cgraph_update_edges_for_call_stmt_node): New static cfunction.\n \t(cgraph_update_edges_for_call_stmt): Handle clones.\n \t(cgraph_remove_node): Handle clone tree.\n \t(cgraph_remove_node_and_inline_clones): New function.\n \t(dump_cgraph_node): Dump clone tree.\n \t(cgraph_clone_node): Handle clone tree.\n-\t(clone_function_name): Bring here from tree-inline.c\n+\t(clone_function_name): Bring here from tree-inline.c.\n \t(cgraph_create_virtual_clone): New function.\n-\t* cgraph.h (ipa_replace_map): Move ehre from ipa.h\n-\t(cgraph_clone_info): New function\n+\t* cgraph.h (ipa_replace_map): Move here from ipa.h.\n+\t(cgraph_clone_info): New function.\n \t(strut cgraph_node): Add clone_info and new clone tree pointers.\n-\t(cgraph_remove_node_and_inline_clones, cgraph_set_call_stmt_including_clones,\n-\tcgraph_create_edge_including_clones, cgraph_create_virtual_clone): Declare.\n+\t(cgraph_remove_node_and_inline_clones,\n+\tcgraph_set_call_stmt_including_clones,\n+\tcgraph_create_edge_including_clones,\n+\tcgraph_create_virtual_clone): Declare.\n \t(cgraph_function_versioning): Use VEC argument.\n \t(compute_call_stmt_bb_frequency): Update prototype.\n \t(cgraph_materialize_all_clones): New function.\n@@ -48,25 +50,28 @@\n \t(cgraph_optimize): Materialize clones.\n \t(cgraph_function_versioning): Update for VECtors.\n \t(save_inline_function_body): Use clone tree.\n-\t(cgraph_materialize_clone, cgraph_materialize_all_clones): New functions.\n+\t(cgraph_materialize_clone): New function.\n+\t(cgraph_materialize_all_clones): Likewise.\n \t* ipa-inline.c (cgraph_default_inline_p): Use analyzed flags.\n \t* ipa.c: Include gimple.h.\n \t(cgraph_remove_unreachable_nodes): Use clone tree.\n-\t* ipa-prop.c (ipa_note_param_call): Update call of compute_call_stmt_bb_frequency.\n+\t* ipa-prop.c (ipa_note_param_call): Update call to\n+\tcompute_call_stmt_bb_frequencycall.\n \t* ipa-prop.h (ipa_replace_map): Move to cgraph.h.\n-\t* tree-inline.c: Do not include varray.h; do not include gt-tree-inline.h\n+\t* tree-inline.c: Do not include varray.h or gt-tree-inline.h.\n \t(copy_bb): Handle updating of clone tree; add new edge when new call\n \tappears.\n \t(expand_call_inline): Be strict about every call having edge.\n \t(clone_fn_id_num, clone_function_name): Move to cgraph.c.\n \t(delete_unreachable_blocks_update_callgraph): New function.\n-\t(tree_function_versioning): Use VECtors; always remove unreachable blocks\n-\tand fold conditionals.\n-\t* tree-inline.h: Do not include varray.h\n+\t(tree_function_versioning): Use VECtors; always remove unreachable\n+\tblocks and fold conditionals.\n+\t* tree-inline.h: Do not include varray.h.\n \t(tree_function_versioning): Remove.\n \t* Makefile.in (GTFILES): Remove tree-inline.c\n \t* passes.c (do_per_function): Do only functions having body.\n-\t* ipa-struct-reorg.c (do_reorg_1, collect_data_accesses): Handle cone tree.\n+\t* ipa-struct-reorg.c (do_reorg_1, collect_data_accesses): Handle clone\n+\ttree.\n \n 2009-05-08  H.J. Lu  <hongjiu.lu@intel.com>\n \t    Andrew Morrow  <acm@google.com>"}]}