{"sha": "a7cc7f29f45db5f76aac040f4e3ef62109fd1341", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdjYzdmMjlmNDVkYjVmNzZhYWMwNDBmNGUzZWY2MjEwOWZkMTM0MQ==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@issan.informatik.uni-dortmund.de", "date": "1997-09-27T03:58:57Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-09-27T03:58:57Z"}, "message": "frame.c: Include gansidecl.h for PROTO.\n\n        * frame.c: Include gansidecl.h for PROTO.\n        * dwarf2out.c: Move inclusion of dwarf2.h down so that PROTO is\n        defined.  Don't declare dwarf2out_cfi_label here.\n        * dwarf2.h: Add declarations of DWARF2 unwind info support\n        functions.\n        * m68k.c: Include dwarf2.h.\n        (output_function_prologue): Add dwarf2 support.\n        * m68k.h (INCOMING_RETURN_ADDR_RTX, DWARF_FRAME_REGNUM): New macros.\n        (INCOMING_FRAME_SP_OFFSET): Likewise.\nUpdate m68k patch from Andreas.\n\nFrom-SVN: r15740", "tree": {"sha": "2e41168654f1c6b85b43e081f1c15f4530c90758", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e41168654f1c6b85b43e081f1c15f4530c90758"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7cc7f29f45db5f76aac040f4e3ef62109fd1341", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7cc7f29f45db5f76aac040f4e3ef62109fd1341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7cc7f29f45db5f76aac040f4e3ef62109fd1341", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7cc7f29f45db5f76aac040f4e3ef62109fd1341/comments", "author": null, "committer": null, "parents": [{"sha": "407cb092e3216d372d9fa3120e531829448f0bbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/407cb092e3216d372d9fa3120e531829448f0bbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/407cb092e3216d372d9fa3120e531829448f0bbc"}], "stats": {"total": 76, "additions": 69, "deletions": 7}, "files": [{"sha": "13948ef94c79fa28c618483944bd9111733fb523", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7cc7f29f45db5f76aac040f4e3ef62109fd1341/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7cc7f29f45db5f76aac040f4e3ef62109fd1341/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7cc7f29f45db5f76aac040f4e3ef62109fd1341", "patch": "@@ -7,6 +7,16 @@ Fri Sep 26 08:54:59 1997  Paul Eggert  <eggert@twinsun.com>\n \n Fri Sep 26 09:00:13 1997  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n \n+\t* frame.c: Include gansidecl.h for PROTO.\n+\t* dwarf2out.c: Move inclusion of dwarf2.h down so that PROTO is\n+\tdefined.  Don't declare dwarf2out_cfi_label here.\n+\t* dwarf2.h: Add declarations of DWARF2 unwind info support\n+\tfunctions.\n+\t* m68k.c: Include dwarf2.h.\n+\t(output_function_prologue): Add dwarf2 support.\n+\t* m68k.h (INCOMING_RETURN_ADDR_RTX, DWARF_FRAME_REGNUM): New macros.\n+\t(INCOMING_FRAME_SP_OFFSET): Likewise.\n+\n \t* integrate.c (expand_inline_function): Make sure there is at\n \tleast one insn that can be used as an insertion point.\n "}, {"sha": "ccf05126ccaf74522e2bc040c2b86dd7015c22df", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7cc7f29f45db5f76aac040f4e3ef62109fd1341/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7cc7f29f45db5f76aac040f4e3ef62109fd1341/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=a7cc7f29f45db5f76aac040f4e3ef62109fd1341", "patch": "@@ -31,6 +31,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"insn-flags.h\"\n #include \"output.h\"\n #include \"insn-attr.h\"\n+#include \"dwarf2.h\"\n \n /* Needed for use_return_insn.  */\n #include \"flags.h\"\n@@ -215,7 +216,8 @@ output_function_prologue (stream, size)\n \t}\n       if (dwarf2out_do_frame ())\n \t{\n-\t  char *l = (char *) dwarf2out_cfi_label ();\n+\t  char *l = dwarf2out_cfi_label ();\n+\n \t  cfa_store_offset += 4;\n \t  cfa_offset = cfa_store_offset;\n \t  dwarf2out_def_cfa (l, FRAME_POINTER_REGNUM, cfa_offset);\n@@ -312,7 +314,8 @@ output_function_prologue (stream, size)\n #endif\n \tif (dwarf2out_do_frame ())\n \t  {\n-\t    char *l = (char *) dwarf2out_cfi_label ();\n+\t    char *l = dwarf2out_cfi_label ();\n+\n \t    cfa_store_offset += 8;\n \t    if (! frame_pointer_needed)\n \t      {\n@@ -340,8 +343,9 @@ output_function_prologue (stream, size)\n #endif\n \t  if (dwarf2out_do_frame ())\n \t    {\n-\t      char *l = (char *) dwarf2out_cfi_label ();\n+\t      char *l = dwarf2out_cfi_label ();\n \t      int n_regs;\n+\n \t      cfa_store_offset += num_saved_regs * 12;\n \t      if (! frame_pointer_needed)\n \t\t{\n@@ -403,7 +407,8 @@ output_function_prologue (stream, size)\n \t\t\t reg_names[15 - i]);\n \t    if (dwarf2out_do_frame ())\n \t      {\n-\t\tchar *l = (char *) dwarf2out_cfi_label ();\n+\t\tchar *l = dwarf2out_cfi_label ();\n+\n \t\tcfa_store_offset += 4;\n  \t\tif (! frame_pointer_needed)\n  \t\t  {\n@@ -453,8 +458,9 @@ output_function_prologue (stream, size)\n \t}\n       if (dwarf2out_do_frame ())\n \t{\n-\t  char *l = (char *) dwarf2out_cfi_label ();\n+\t  char *l = dwarf2out_cfi_label ();\n \t  int n_regs;\n+\n \t  cfa_store_offset += num_saved_regs * 4;\n \t  if (! frame_pointer_needed)\n \t    {"}, {"sha": "993dea774ee5d971c4a5de237dc8faff8e1d1de3", "filename": "gcc/dwarf2.h", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7cc7f29f45db5f76aac040f4e3ef62109fd1341/gcc%2Fdwarf2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7cc7f29f45db5f76aac040f4e3ef62109fd1341/gcc%2Fdwarf2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2.h?ref=a7cc7f29f45db5f76aac040f4e3ef62109fd1341", "patch": "@@ -543,3 +543,49 @@ enum dwarf_macinfo_record_type\n     DW_MACINFO_end_file = 4,\n     DW_MACINFO_vendor_ext = 255\n   };\n+\f\n+/* Interface of the DWARF2 unwind info support.  */\n+\n+/* Decide whether we want to emit frame unwind information for the current\n+   translation unit.  */\n+\n+extern int dwarf2out_do_frame\t\tPROTO((void));\n+\n+/* Generate a new label for the CFI info to refer to.  */\n+\n+extern char *dwarf2out_cfi_label\tPROTO((void));\n+\n+/* Entry point to update the canonical frame address (CFA).  */\n+\n+extern void dwarf2out_def_cfa\t\tPROTO((char *, unsigned, long));\n+\n+/* Add the CFI for saving a register window.  */\n+\n+extern void dwarf2out_window_save\tPROTO((char *));\n+\n+/* Add a CFI to update the running total of the size of arguments pushed\n+   onto the stack.  */\n+\n+extern void dwarf2out_args_size\t\tPROTO((char *, long));\n+\n+/* Entry point for saving a register to the stack.  */\n+\n+extern void dwarf2out_reg_save\t\tPROTO((char *, unsigned, long));\n+\n+/* Entry point for saving the return address in the stack.  */\n+\n+extern void dwarf2out_return_save\tPROTO((char *, long));\n+\n+/* Entry point for saving the return address in a register.  */\n+\n+extern void dwarf2out_return_reg\tPROTO((char *, unsigned));\n+\n+/* Output a marker (i.e. a label) for the beginning of a function, before\n+   the prologue.  */\n+\n+extern void dwarf2out_begin_prologue\tPROTO((void));\n+\n+/* Output a marker (i.e. a label) for the absolute end of the generated\n+   code for a function definition.  */\n+\n+extern void dwarf2out_end_epilogue\tPROTO((void));"}, {"sha": "56ce82b8e01da3b21c97acd1388285fd86513854", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7cc7f29f45db5f76aac040f4e3ef62109fd1341/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7cc7f29f45db5f76aac040f4e3ef62109fd1341/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=a7cc7f29f45db5f76aac040f4e3ef62109fd1341", "patch": "@@ -29,7 +29,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"config.h\"\n #include \"defaults.h\"\n #include <stdio.h>\n-#include \"dwarf2.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"rtl.h\"\n@@ -40,6 +39,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"output.h\"\n #include \"expr.h\"\n #include \"except.h\"\n+#include \"dwarf2.h\"\n \n /* #define NDEBUG 1 */\n #include \"assert.h\"\n@@ -185,7 +185,6 @@ static unsigned long size_of_uleb128\tPROTO((unsigned long));\n static unsigned long size_of_sleb128\tPROTO((long));\n static void output_uleb128\t\tPROTO((unsigned long));\n static void output_sleb128\t\tPROTO((long));\n-char *dwarf2out_cfi_label\t\tPROTO((void));\n static void add_fde_cfi\t\t\tPROTO((char *, dw_cfi_ref));\n static void lookup_cfa_1\t\tPROTO((dw_cfi_ref, unsigned long *,\n \t\t\t\t\t       long *));"}, {"sha": "4f0a2bc0cadefb210c796031b83438585874d11a", "filename": "gcc/frame.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7cc7f29f45db5f76aac040f4e3ef62109fd1341/gcc%2Fframe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7cc7f29f45db5f76aac040f4e3ef62109fd1341/gcc%2Fframe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fframe.c?ref=a7cc7f29f45db5f76aac040f4e3ef62109fd1341", "patch": "@@ -35,6 +35,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"defaults.h\"\n \n #ifdef DWARF2_UNWIND_INFO\n+#include \"gansidecl.h\"\n #include \"dwarf2.h\"\n #include \"frame.h\"\n #include <stddef.h>"}]}