{"sha": "3f6f0eb2e4a89be2eed80ad57bf003c3fc0aa210", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y2ZjBlYjJlNGE4OWJlMmVlZDgwYWQ1N2JmMDAzYzNmYzBhYTIxMA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-05-20T08:29:05Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-05-20T08:29:05Z"}, "message": "decl.c (gnat_to_gnu_entity): When discriminants affect the shape of the subtype...\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Subtype>: When\n\tdiscriminants affect the shape of the subtype, retrieve the GCC type\n\tdirectly from the original field if the GNAT types for the field and\n\tthe original field are the same.\n\nFrom-SVN: r147732", "tree": {"sha": "a1d15575a02c86f92afa7b0142475e7ae7b5ce3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1d15575a02c86f92afa7b0142475e7ae7b5ce3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f6f0eb2e4a89be2eed80ad57bf003c3fc0aa210", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f6f0eb2e4a89be2eed80ad57bf003c3fc0aa210", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f6f0eb2e4a89be2eed80ad57bf003c3fc0aa210", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f6f0eb2e4a89be2eed80ad57bf003c3fc0aa210/comments", "author": null, "committer": null, "parents": [{"sha": "0328ae4d560fdd0e50c48c65660c489e36ab8ca5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0328ae4d560fdd0e50c48c65660c489e36ab8ca5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0328ae4d560fdd0e50c48c65660c489e36ab8ca5"}], "stats": {"total": 37, "additions": 26, "deletions": 11}, "files": [{"sha": "d7396f142623e5e5afdd68047e476c5536aeb9b2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f6f0eb2e4a89be2eed80ad57bf003c3fc0aa210/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f6f0eb2e4a89be2eed80ad57bf003c3fc0aa210/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3f6f0eb2e4a89be2eed80ad57bf003c3fc0aa210", "patch": "@@ -1,3 +1,10 @@\n+2009-05-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Subtype>: When\n+\tdiscriminants affect the shape of the subtype, retrieve the GCC type\n+\tdirectly from the original field if the GNAT types for the field and\n+\tthe original field are the same.\n+\n 2009-05-15  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/ada-tree.h (TYPE_GCC_MIN_VALUE, TYPE_GCC_MAX_VALUE):"}, {"sha": "649b9ef41d269c1566be6be70c18c3e84327c406", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f6f0eb2e4a89be2eed80ad57bf003c3fc0aa210/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f6f0eb2e4a89be2eed80ad57bf003c3fc0aa210/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=3f6f0eb2e4a89be2eed80ad57bf003c3fc0aa210", "patch": "@@ -3124,21 +3124,27 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\t\t|| !Is_Tagged_Type (gnat_base_type)))\n \t\t  {\n \t\t    tree gnu_old_field\n-\t\t      = gnat_to_gnu_field_decl (Original_Record_Component\n-\t\t\t\t\t\t(gnat_field));\n+\t\t      = gnat_to_gnu_field_decl\n+\t\t\t(Original_Record_Component (gnat_field));\n \t\t    tree gnu_offset\n-\t\t      = TREE_VALUE (purpose_member (gnu_old_field,\n-\t\t\t\t\t\t    gnu_pos_list));\n+\t\t      = TREE_VALUE\n+\t\t\t(purpose_member (gnu_old_field, gnu_pos_list));\n \t\t    tree gnu_pos = TREE_PURPOSE (gnu_offset);\n \t\t    tree gnu_bitpos = TREE_VALUE (TREE_VALUE (gnu_offset));\n-\t\t    tree gnu_field_type\n-\t\t      = gnat_to_gnu_type (Etype (gnat_field));\n-\t\t    tree gnu_size = TYPE_SIZE (gnu_field_type);\n-\t\t    tree gnu_new_pos = NULL_TREE;\n+\t\t    tree gnu_field, gnu_field_type, gnu_size, gnu_new_pos;\n \t\t    unsigned int offset_align\n-\t\t      = tree_low_cst (TREE_PURPOSE (TREE_VALUE (gnu_offset)),\n-\t\t\t\t      1);\n-\t\t    tree gnu_field;\n+\t\t      = tree_low_cst\n+\t\t\t(TREE_PURPOSE (TREE_VALUE (gnu_offset)), 1);\n+\n+\t\t    /* If the type is the same, retrieve the GCC type from the\n+\t\t       old field to take into account possible adjustments.  */\n+\t\t    if (Etype (gnat_field)\n+\t\t\t== Etype (Original_Record_Component (gnat_field)))\n+\t\t      gnu_field_type = TREE_TYPE (gnu_old_field);\n+\t\t    else\n+\t\t      gnu_field_type = gnat_to_gnu_type (Etype (gnat_field));\n+\n+\t\t    gnu_size = TYPE_SIZE (gnu_field_type);\n \n \t\t    /* If there was a component clause, the field types must be\n \t\t       the same for the type and subtype, so copy the data from\n@@ -3197,6 +3203,8 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\t\t\t\t\t TYPE_SIZE (gnu_type)))\n \t\t\t  continue;\n \t\t      }\n+\t\t    else\n+\t\t      gnu_new_pos = NULL_TREE;\n \n \t\t    gnu_field\n \t\t      = create_field_decl"}]}