{"sha": "14b6efffc7b877ee4b07d880dfb34b177aa6801f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTRiNmVmZmZjN2I4NzdlZTRiMDdkODgwZGZiMzRiMTc3YWE2ODAxZg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-10T05:20:40Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-10T05:20:40Z"}, "message": "(pop_momentary_nofree): New function.\n\nFrom-SVN: r5703", "tree": {"sha": "7c3f6c9caa2f8c4e63dcf7075bc0969e824abad8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c3f6c9caa2f8c4e63dcf7075bc0969e824abad8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14b6efffc7b877ee4b07d880dfb34b177aa6801f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14b6efffc7b877ee4b07d880dfb34b177aa6801f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14b6efffc7b877ee4b07d880dfb34b177aa6801f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14b6efffc7b877ee4b07d880dfb34b177aa6801f/comments", "author": null, "committer": null, "parents": [{"sha": "6126f4db33f3719830daeff889aa8591326ca3e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6126f4db33f3719830daeff889aa8591326ca3e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6126f4db33f3719830daeff889aa8591326ca3e7"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "fc5c3b0e5ee48caa01995a3249bc2f8caf51c412", "filename": "gcc/tree.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14b6efffc7b877ee4b07d880dfb34b177aa6801f/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14b6efffc7b877ee4b07d880dfb34b177aa6801f/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=14b6efffc7b877ee4b07d880dfb34b177aa6801f", "patch": "@@ -722,6 +722,17 @@ pop_momentary ()\n   obstack_free (&momentary_obstack, tem);\n }\n \n+/* Pop back to the previous level of momentary allocation,\n+   but don't free any momentary data just yet.  */\n+\n+void\n+pop_momentary_nofree ()\n+{\n+  struct momentary_level *tem = momentary_stack;\n+  momentary_stack = tem->prev;\n+  expression_obstack = tem->obstack;\n+}\n+\n /* Call when starting to parse a declaration:\n    make expressions in the declaration last the length of the function.\n    Returns an argument that should be passed to resume_momentary later.  */"}]}