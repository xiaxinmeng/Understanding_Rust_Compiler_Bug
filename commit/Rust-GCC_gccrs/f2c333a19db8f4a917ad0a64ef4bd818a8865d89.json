{"sha": "f2c333a19db8f4a917ad0a64ef4bd818a8865d89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJjMzMzYTE5ZGI4ZjRhOTE3YWQwYTY0ZWY0YmQ4MThhODg2NWQ4OQ==", "commit": {"author": {"name": "Sylvain Pion", "email": "Sylvain.Pion@sophia.inria.fr", "date": "2001-08-24T17:40:31Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-08-24T17:40:31Z"}, "message": "re PR libstdc++/3349 (bug in map::insert(p,t))\n\n2001-08-24  Sylvain Pion <Sylvain.Pion@sophia.inria.fr>\n            Phil Edwards  <pme@sources.redhat.com>\n\n\tPR libstdc++/3349\n\t* include/bits/stl_tree.h (insert_unique):  Revert last change.\n\tValues inserted at begin() must be less, not greater, than *begin()'s.\n\t* testsuite/23_containers/map_insert.cc:  New file.\n\nCo-Authored-By: Phil Edwards <pme@gcc.gnu.org>\n\nFrom-SVN: r45155", "tree": {"sha": "53b0e222ef6f3b0cdd8cdf6846285bad3fad06e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53b0e222ef6f3b0cdd8cdf6846285bad3fad06e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2c333a19db8f4a917ad0a64ef4bd818a8865d89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2c333a19db8f4a917ad0a64ef4bd818a8865d89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2c333a19db8f4a917ad0a64ef4bd818a8865d89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2c333a19db8f4a917ad0a64ef4bd818a8865d89/comments", "author": {"login": "sylvainpion", "id": 1460114, "node_id": "MDQ6VXNlcjE0NjAxMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1460114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sylvainpion", "html_url": "https://github.com/sylvainpion", "followers_url": "https://api.github.com/users/sylvainpion/followers", "following_url": "https://api.github.com/users/sylvainpion/following{/other_user}", "gists_url": "https://api.github.com/users/sylvainpion/gists{/gist_id}", "starred_url": "https://api.github.com/users/sylvainpion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sylvainpion/subscriptions", "organizations_url": "https://api.github.com/users/sylvainpion/orgs", "repos_url": "https://api.github.com/users/sylvainpion/repos", "events_url": "https://api.github.com/users/sylvainpion/events{/privacy}", "received_events_url": "https://api.github.com/users/sylvainpion/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "224b7b7b0c8a69e60e87a871a9ed828c99f389d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/224b7b7b0c8a69e60e87a871a9ed828c99f389d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/224b7b7b0c8a69e60e87a871a9ed828c99f389d8"}], "stats": {"total": 79, "additions": 78, "deletions": 1}, "files": [{"sha": "7bdc1f3dc468b8aaacb2cfebfec3a93eb000fdeb", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c333a19db8f4a917ad0a64ef4bd818a8865d89/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c333a19db8f4a917ad0a64ef4bd818a8865d89/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f2c333a19db8f4a917ad0a64ef4bd818a8865d89", "patch": "@@ -1,3 +1,11 @@\n+2001-08-24  Sylvain Pion <Sylvain.Pion@sophia.inria.fr>\n+            Phil Edwards  <pme@sources.redhat.com>\n+\n+\tPR libstdc++/3349\n+\t* include/bits/stl_tree.h (insert_unique):  Revert last change.\n+\tValues inserted at begin() must be less, not greater, than *begin()'s.\n+\t* testsuite/23_containers/map_insert.cc:  New file.\n+\n 2001-08-23  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* config/locale/c_locale_gnu.cc: Minor tweaks."}, {"sha": "446cce0d3ec75a6c7892ab584a23586b3ea7e4bd", "filename": "libstdc++-v3/include/bits/stl_tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c333a19db8f4a917ad0a64ef4bd818a8865d89/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c333a19db8f4a917ad0a64ef4bd818a8865d89/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h?ref=f2c333a19db8f4a917ad0a64ef4bd818a8865d89", "patch": "@@ -922,7 +922,7 @@ _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>\n {\n   if (__position._M_node == _M_header->_M_left) { // begin()\n     if (size() > 0 && \n-       _M_key_compare(_S_key(__position._M_node), _KeyOfValue()(__v)))\n+       _M_key_compare(_KeyOfValue()(__v), _S_key(__position._M_node)))\n       return _M_insert(__position._M_node, __position._M_node, __v);\n     // first argument just needs to be non-null \n     else"}, {"sha": "d870897a6c728c21fdde9b70571a5b3a74a0e73f", "filename": "libstdc++-v3/testsuite/23_containers/map_insert.cc", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2c333a19db8f4a917ad0a64ef4bd818a8865d89/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap_insert.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2c333a19db8f4a917ad0a64ef4bd818a8865d89/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap_insert.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap_insert.cc?ref=f2c333a19db8f4a917ad0a64ef4bd818a8865d89", "patch": "@@ -0,0 +1,69 @@\n+// 2001-08-23 pme & Sylvain.Pion@sophia.inria.fr\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 23.3.1.2, table 69 -- map::insert(p,t)\n+\n+#include <map>\n+#include <testsuite_hooks.h>\n+\n+// { dg-do run }\n+\n+// libstdc++/3349 and\n+// http://gcc.gnu.org/ml/gcc-patches/2001-08/msg01375.html\n+void test01()\n+{\n+  typedef std::map<int, int>   Map;\n+  Map             M;\n+  Map::iterator   hint;\n+\n+  hint = M.insert(Map::value_type(7, 0)).first;\n+\n+  M.insert(hint, Map::value_type(8, 1));\n+  M.insert(M.begin(), Map::value_type(9, 2));\n+\n+#if 0\n+  // The tree's __rb_verify() member must be exposed in map<> before this\n+  // will even compile.  It's good test to see that \"missing\" entries are\n+  // in fact present in the {map,tree}, but in the wrong place.\n+  if (0)\n+  {\n+      Map::iterator  i = M.begin();\n+      while (i != M.end()) {\n+          std::cerr << '(' << i->first << ',' << i->second << \")\\n\";\n+          ++i;\n+      }\n+      std::cerr << \"tree internal verify: \"\n+                << std::boolalpha << M.__rb_verify() << \"\\n\";\n+  }\n+#endif\n+\n+  VERIFY ( M.find(7) != M.end() );\n+  VERIFY ( M.find(8) != M.end() );\n+  VERIFY ( M.find(9) != M.end() );\n+}\n+\n+\n+int main()\n+{\n+  test01();\n+\n+  return 0;\n+}\n+"}]}