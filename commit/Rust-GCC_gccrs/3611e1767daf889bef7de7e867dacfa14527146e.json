{"sha": "3611e1767daf889bef7de7e867dacfa14527146e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYxMWUxNzY3ZGFmODg5YmVmN2RlN2U4NjdkYWNmYTE0NTI3MTQ2ZQ==", "commit": {"author": {"name": "Johannes Singler", "email": "singler@ira.uka.de", "date": "2008-06-05T15:47:17Z"}, "committer": {"name": "Johannes Singler", "email": "singler@gcc.gnu.org", "date": "2008-06-05T15:47:17Z"}, "message": "random_shuffle.h: (parallel_random_shuffle_drs) Get the actual number of threads after entering...\n\n2008-06-05  Johannes Singler  <singler@ira.uka.de>\n\n        * include/parallel/random_shuffle.h:\n        (parallel_random_shuffle_drs) Get the actual number of\n        threads after entering the parallel region. Indentation.\n        * include/parallel/algo.h: (random_shuffle(begin, end))\n        Add namespace qualification to avoid ambiguity.\n\nFrom-SVN: r136406", "tree": {"sha": "cafdfd5916a9ea68c5a09b596306ddf69737fa51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cafdfd5916a9ea68c5a09b596306ddf69737fa51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3611e1767daf889bef7de7e867dacfa14527146e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3611e1767daf889bef7de7e867dacfa14527146e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3611e1767daf889bef7de7e867dacfa14527146e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3611e1767daf889bef7de7e867dacfa14527146e/comments", "author": null, "committer": null, "parents": [{"sha": "bd7415dbcac028deb5514a4e00ce8ba25cdf1036", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd7415dbcac028deb5514a4e00ce8ba25cdf1036", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd7415dbcac028deb5514a4e00ce8ba25cdf1036"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "0f2e56c57a7899bbeb98b92864d3ecaa5b1a4a97", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3611e1767daf889bef7de7e867dacfa14527146e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3611e1767daf889bef7de7e867dacfa14527146e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3611e1767daf889bef7de7e867dacfa14527146e", "patch": "@@ -1,3 +1,11 @@\n+2008-06-05  Johannes Singler  <singler@ira.uka.de>\n+\n+        * include/parallel/random_shuffle.h:\n+        (parallel_random_shuffle_drs) Get the actual number of\n+        threads after entering the parallel region. Indentation.\n+        * include/parallel/algo.h: (random_shuffle(begin, end))\n+        Add namespace qualification to avoid ambiguity.\n+\n 2008-06-04  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/ext/pb_ds/assoc_container.hpp: Change allocator typedef"}, {"sha": "4aa4d8af47f6d1d56e113c3ea088134f872eb6c5", "filename": "libstdc++-v3/include/parallel/algo.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3611e1767daf889bef7de7e867dacfa14527146e/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Falgo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3611e1767daf889bef7de7e867dacfa14527146e/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Falgo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Falgo.h?ref=3611e1767daf889bef7de7e867dacfa14527146e", "patch": "@@ -1649,7 +1649,7 @@ namespace __parallel\n     {\n       c_rand_number<> r;\n       // Parallelization still possible.\n-      random_shuffle(begin, end, r);\n+      __gnu_parallel::random_shuffle(begin, end, r);\n     }\n \n   // Parallel algorithm for random access iterators."}, {"sha": "1f7cc10742d3fb2fdbbaecb7eb91f09b4a09c874", "filename": "libstdc++-v3/include/parallel/random_shuffle.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3611e1767daf889bef7de7e867dacfa14527146e/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Frandom_shuffle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3611e1767daf889bef7de7e867dacfa14527146e/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Frandom_shuffle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Frandom_shuffle.h?ref=3611e1767daf889bef7de7e867dacfa14527146e", "patch": "@@ -333,6 +333,7 @@ template<typename RandomAccessIterator, typename RandomNumberGenerator>\n \n #   pragma omp parallel num_threads(num_threads)\n       {\n+        thread_index_t num_threads = omp_get_num_threads();\n #       pragma omp single\n           {\n             pus = new DRSSorterPU<RandomAccessIterator, random_number>\n@@ -375,9 +376,9 @@ template<typename RandomAccessIterator, typename RandomNumberGenerator>\n               }\n             starts[num_threads] = start;\n           } //single\n-      // Now shuffle in parallel.\n-      parallel_random_shuffle_drs_pu(pus);\n-    }\n+        // Now shuffle in parallel.\n+        parallel_random_shuffle_drs_pu(pus);\n+      }  // parallel\n \n     delete[] starts;\n     delete[] sd.bin_proc;"}]}