{"sha": "ef3d4d6ed8217f439001ded7ba1b7e3b85c51113", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYzZDRkNmVkODIxN2Y0MzkwMDFkZWQ3YmExYjdlM2I4NWM1MTExMw==", "commit": {"author": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-05T20:41:24Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-05T20:41:24Z"}, "message": "* ChangeLog: Repair from previous update.\n\nFrom-SVN: r47691", "tree": {"sha": "0a74767177de1d5410e29edc1afbbf9e441f0800", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a74767177de1d5410e29edc1afbbf9e441f0800"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef3d4d6ed8217f439001ded7ba1b7e3b85c51113", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef3d4d6ed8217f439001ded7ba1b7e3b85c51113", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef3d4d6ed8217f439001ded7ba1b7e3b85c51113", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef3d4d6ed8217f439001ded7ba1b7e3b85c51113/comments", "author": null, "committer": null, "parents": [{"sha": "45d04cbb92541ca34ce043f04965fcae00c0d798", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45d04cbb92541ca34ce043f04965fcae00c0d798", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45d04cbb92541ca34ce043f04965fcae00c0d798"}], "stats": {"total": 335, "additions": 1, "deletions": 334}, "files": [{"sha": "6b84b59a97f34631843ef1cb367352d102a12a6e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 1, "deletions": 334, "changes": 335, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef3d4d6ed8217f439001ded7ba1b7e3b85c51113/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef3d4d6ed8217f439001ded7ba1b7e3b85c51113/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ef3d4d6ed8217f439001ded7ba1b7e3b85c51113", "patch": "@@ -1,6 +1,3 @@\n-To: gcc-patches@gcc.gnu.org\n-Subject: [Ada] Reflect 2001-10-22 changes\n-\n 2001-12-05  Ed Schonberg <schonber@gnat.com>\n \n \t* sem_ch12.adb (Instantiate_Package_Body): if instance is a compilation\n@@ -20,336 +17,6 @@ Subject: [Ada] Reflect 2001-10-22 changes\n \t\n \t* prj-proc.adb: Put the change indicated above that was forgotten.\n \n-*** sem_ch12.adb\t2001/10/14 14:08:26\t1.790\n---- sem_ch12.adb\t2001/10/22 17:38:58\t1.791\n-***************\n-*** 2550,2566 ****\n-  \n-           Set_Instance_Spec (N, Act_Decl);\n-  \n-!          --  Case of not a compilation unit\n-  \n-           if Nkind (Parent (N)) /= N_Compilation_Unit then\n-              Mark_Rewrite_Insertion (Act_Decl);\n-              Insert_Before (N, Act_Decl);\n-              Analyze (Act_Decl);\n-- \n--          --  Case of compilation unit that is generic instantiation\n-  \n-!          --  Place declaration on current node so context is complete\n-!          --  for analysis (including nested instantiations).\n-  \n-           else\n-              if Cunit_Entity (Current_Sem_Unit) = Defining_Entity (N) then\n---- 2550,2570 ----\n-  \n-           Set_Instance_Spec (N, Act_Decl);\n-  \n-!          --  If not a compilation unit, insert the package declaration\n-!          --  after the instantiation node.\n-  \n-           if Nkind (Parent (N)) /= N_Compilation_Unit then\n-              Mark_Rewrite_Insertion (Act_Decl);\n-              Insert_Before (N, Act_Decl);\n-              Analyze (Act_Decl);\n-  \n-!          --  For an instantiation that is a compilation unit, place\n-!          --  declaration on current node so context is complete\n-!          --  for analysis (including nested instantiations). It this\n-!          --  is the main unit, the declaration eventually replaces the\n-!          --  instantiation node. If the instance body is later created, it\n-!          --  replaces the instance node, and the declation is attached to\n-!          --  it (see Build_Instance_Compilation_Unit_Nodes).\n-  \n-           else\n-              if Cunit_Entity (Current_Sem_Unit) = Defining_Entity (N) then\n-***************\n-*** 2602,2608 ****\n-             First_Private_Entity (Act_Decl_Id));\n-  \n-           if Nkind (Parent (N)) = N_Compilation_Unit\n-!            and  then not Needs_Body\n-           then\n-              Rewrite (N, Act_Decl);\n-           end if;\n---- 2606,2612 ----\n-             First_Private_Entity (Act_Decl_Id));\n-  \n-           if Nkind (Parent (N)) = N_Compilation_Unit\n-!            and then not Needs_Body\n-           then\n-              Rewrite (N, Act_Decl);\n-           end if;\n-***************\n-*** 3321,3326 ****\n---- 3325,3337 ----\n-        Set_Library_Unit  (Decl_Cunit, Body_Cunit);\n-        Set_Library_Unit  (Body_Cunit, Decl_Cunit);\n-  \n-+       --  If the instance is not the main unit, its context, categorization,\n-+       --  and elaboration entity are not relevant to the compilation.\n-+ \n-+       if Parent (N) /= Cunit (Main_Unit) then\n-+          return;\n-+       end if;\n-+ \n-        --  The context clause items on the instantiation, which are now\n-        --  attached to the body compilation unit (since the body overwrote\n-        --  the original instantiation node), semantically belong on the spec,\n-***************\n-*** 6581,6590 ****\n-  \n-           if Nkind (Parent (Inst_Node)) = N_Compilation_Unit then\n-  \n-              if Parent (Inst_Node) = Cunit (Main_Unit) then\n--                Build_Instance_Compilation_Unit_Nodes\n--                  (Inst_Node, Act_Body, Act_Decl);\n--                Analyze (Inst_Node);\n-  \n-                 --  If the instance is a child unit itself, then set the\n-                 --  scope of the expanded body to be the parent of the\n---- 6592,6605 ----\n-  \n-           if Nkind (Parent (Inst_Node)) = N_Compilation_Unit then\n-  \n-+             --  Replace instance node with body of instance, and create\n-+             --  new node for corresponding instance declaration.\n-+ \n-+             Build_Instance_Compilation_Unit_Nodes\n-+               (Inst_Node, Act_Body, Act_Decl);\n-+             Analyze (Inst_Node);\n-+ \n-              if Parent (Inst_Node) = Cunit (Main_Unit) then\n-  \n-                 --  If the instance is a child unit itself, then set the\n-                 --  scope of the expanded body to be the parent of the\n-***************\n-*** 6597,6606 ****\n-                    Set_Scope\n-                      (Defining_Entity (Inst_Node), Scope (Act_Decl_Id));\n-                 end if;\n-- \n--             else\n--                Set_Parent (Act_Body, Parent (Inst_Node));\n--                Analyze (Act_Body);\n-              end if;\n-  \n-           --  Case where instantiation is not a library unit\n---- 6612,6617 ----\n-\n-*** prj-nmsc.adb\t2001/10/20 04:14:18\t1.29\n---- prj-nmsc.adb\t2001/10/22 21:55:07\t1.30\n-***************\n-*** 34,39 ****\n---- 34,40 ----\n-  with GNAT.Case_Util;             use GNAT.Case_Util;\n-  with GNAT.Directory_Operations;  use GNAT.Directory_Operations;\n-  with GNAT.OS_Lib;                use GNAT.OS_Lib;\n-+ with MLib.Tgt;\n-  with Namet;                      use Namet;\n-  with Osint;                      use Osint;\n-  with Output;                     use Output;\n-***************\n-*** 1948,2008 ****\n-             Data.Library_Name /= No_Name;\n-  \n-           if Data.Library then\n--             if Current_Verbosity = High then\n--                Write_Line (\"This is a library project file\");\n--             end if;\n-  \n-!             pragma Assert (Lib_Version.Kind = Single);\n-  \n-!             if Lib_Version.Value = Empty_String then\n-                 if Current_Verbosity = High then\n-!                   Write_Line (\"No library version specified\");\n-                 end if;\n-  \n-!             else\n-!                Stringt.String_To_Name_Buffer (Lib_Version.Value);\n-!                Data.Lib_Internal_Name := Name_Find;\n-!             end if;\n-  \n-!             pragma Assert (The_Lib_Kind.Kind = Single);\n-  \n-!             if The_Lib_Kind.Value = Empty_String then\n-!                if Current_Verbosity = High then\n-!                   Write_Line (\"No library kind specified\");\n-                 end if;\n-  \n-!             else\n-!                Stringt.String_To_Name_Buffer (The_Lib_Kind.Value);\n-  \n-!                declare\n-!                   Kind_Name : constant String :=\n-!                     To_Lower (Name_Buffer (1 .. Name_Len));\n-  \n-!                   OK : Boolean := True;\n-  \n-!                begin\n-  \n-!                   if Kind_Name = \"static\" then\n-!                      Data.Library_Kind := Static;\n-  \n-!                   elsif Kind_Name = \"dynamic\" then\n-!                      Data.Library_Kind := Dynamic;\n-  \n-!                   elsif Kind_Name = \"relocatable\" then\n-!                      Data.Library_Kind := Relocatable;\n-  \n-!                   else\n-!                      Error_Msg\n-!                        (\"illegal value for Library_Kind\",\n-!                         The_Lib_Kind.Location);\n-!                      OK := False;\n-!                   end if;\n-  \n-!                   if Current_Verbosity = High and then OK then\n-!                      Write_Str (\"Library kind = \");\n-!                      Write_Line (Kind_Name);\n-!                   end if;\n-!                end;\n-              end if;\n-           end if;\n-        end;\n---- 1949,2016 ----\n-             Data.Library_Name /= No_Name;\n-  \n-           if Data.Library then\n-  \n-!             if not MLib.Tgt.Libraries_Are_Supported then\n-!                Error_Msg (\"?libraries are not supported on this platform\",\n-!                            Lib_Name.Location);\n-  \n-!             else\n-                 if Current_Verbosity = High then\n-!                   Write_Line (\"This is a library project file\");\n-                 end if;\n-  \n-!                pragma Assert (Lib_Version.Kind = Single);\n-  \n-!                if Lib_Version.Value = Empty_String then\n-!                   if Current_Verbosity = High then\n-!                      Write_Line (\"No library version specified\");\n-!                   end if;\n-  \n-!                else\n-!                   Stringt.String_To_Name_Buffer (Lib_Version.Value);\n-!                   Data.Lib_Internal_Name := Name_Find;\n-                 end if;\n-  \n-!                pragma Assert (The_Lib_Kind.Kind = Single);\n-  \n-!                if The_Lib_Kind.Value = Empty_String then\n-!                   if Current_Verbosity = High then\n-!                      Write_Line (\"No library kind specified\");\n-!                   end if;\n-  \n-!                else\n-!                   Stringt.String_To_Name_Buffer (The_Lib_Kind.Value);\n-  \n-!                   declare\n-!                      Kind_Name : constant String :=\n-!                        To_Lower (Name_Buffer (1 .. Name_Len));\n-  \n-!                      OK : Boolean := True;\n-  \n-!                   begin\n-  \n-!                      if Kind_Name = \"static\" then\n-!                         Data.Library_Kind := Static;\n-  \n-!                      elsif Kind_Name = \"dynamic\" then\n-!                         Data.Library_Kind := Dynamic;\n-  \n-!                      elsif Kind_Name = \"relocatable\" then\n-!                         Data.Library_Kind := Relocatable;\n-! \n-!                      else\n-!                         Error_Msg\n-!                           (\"illegal value for Library_Kind\",\n-!                            The_Lib_Kind.Location);\n-!                         OK := False;\n-!                      end if;\n-! \n-!                      if Current_Verbosity = High and then OK then\n-!                         Write_Str (\"Library kind = \");\n-!                         Write_Line (Kind_Name);\n-!                      end if;\n-!                   end;\n-!                end if;\n-              end if;\n-           end if;\n-        end;\n-\n-*** prj-proc.adb\t2001/10/05 16:11:38\t1.18\n---- prj-proc.adb\t2001/10/22 21:59:35\t1.19\n-***************\n-*** 662,667 ****\n---- 662,668 ----\n-  \n-        if Data.Modifies /= No_Project\n-          and then Projects.Table (Data.Modifies).Name = With_Name\n-+ \n-        then\n-           return Data.Modifies;\n-  \n-\n-*** Makefile.in\t2001/10/22 00:45:45\t1.1415\n---- Makefile.in\t2001/10/22 22:07:09\t1.1416\n-***************\n-*** 488,493 ****\n---- 488,497 ----\n-   hostparm.o \\\n-   krunch.o   \\\n-   lib.o      \\\n-+  mlib.o     \\\n-+  mlib-fil.o \\\n-+  mlib-tgt.o \\\n-+  mlib-utl.o \\\n-   namet.o    \\\n-   nlists.o   \\\n-   opt.o      \\\n-\n-*** prj-proc.adb\t2001/10/22 21:59:35\t1.19\n---- prj-proc.adb\t2001/10/22 22:11:00\t1.20\n-***************\n-*** 246,252 ****\n-        --  Reference to the last string elements in Result, when Kind is List.\n-  \n-     begin\n-!       Result.Location := Location_Of (From_Project_Node);\n-  \n-        --  Process each term of the expression, starting with First_Term\n-  \n---- 246,252 ----\n-        --  Reference to the last string elements in Result, when Kind is List.\n-  \n-     begin\n-!       Result.Location := Location_Of (First_Term);\n-  \n-        --  Process each term of the expression, starting with First_Term\n-  \n-***************\n-*** 639,645 ****\n-           end case;\n-  \n-           The_Term := Next_Term (The_Term);\n-- \n-        end loop;\n-  \n-        return Result;\n---- 639,644 ----\n-***************\n-*** 662,668 ****\n-  \n-        if Data.Modifies /= No_Project\n-          and then Projects.Table (Data.Modifies).Name = With_Name\n-- \n-        then\n-           return Data.Modifies;\n-  \n---- 661,666 ----\n 2001-12-05  Robert Dewar <dewar@gnat.com>\n \n \t* Makefile.in: Add dependencies for System.IO for GNAT.Regexp\n@@ -622,7 +289,7 @@ Subject: [Ada] Reflect 2001-10-22 changes\n \n \t* make.adb: Minor reformatting.\n \n-2001-12-03   <dewar@gnat.com>\n+2001-12-03 Robert Dewar  <dewar@gnat.com>\n \n \t* sem_ch12.adb: Minor reformatting\n "}]}