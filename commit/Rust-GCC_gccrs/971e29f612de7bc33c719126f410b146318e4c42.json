{"sha": "971e29f612de7bc33c719126f410b146318e4c42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTcxZTI5ZjYxMmRlN2JjMzNjNzE5MTI2ZjQxMGIxNDYzMThlNGM0Mg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-10-08T19:59:26Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-10-08T19:59:26Z"}, "message": "emit-rtl.c (last_label_num, [...]): Remove.\n\n\t* emit-rtl.c (last_label_num, base_label_num): Remove.\n\t(max_label_num): Always return label_num.\n\t(set_new_last_label_num, restore_emit_status): Remove.\n\t(init_emit): Don't initialize last_label_num.\n\t* function.c (pop_function_context_from): Don't call\n\trestore_emit_status.\n\t* function.h: Remove the prototype for restore_emit_status.\n\t* rtl.h: Remove the prototype for set_new_last_label_num.\n\nFrom-SVN: r88789", "tree": {"sha": "1e221d470c93e13b0dad63f41dfb1c462fedf023", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e221d470c93e13b0dad63f41dfb1c462fedf023"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/971e29f612de7bc33c719126f410b146318e4c42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/971e29f612de7bc33c719126f410b146318e4c42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/971e29f612de7bc33c719126f410b146318e4c42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/971e29f612de7bc33c719126f410b146318e4c42/comments", "author": null, "committer": null, "parents": [{"sha": "f5bb9a233a8d229d209b09d722140014b5320b44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5bb9a233a8d229d209b09d722140014b5320b44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5bb9a233a8d229d209b09d722140014b5320b44"}], "stats": {"total": 48, "additions": 11, "deletions": 37}, "files": [{"sha": "77818b2e8928b13411214f529a33a3e7f673a838", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/971e29f612de7bc33c719126f410b146318e4c42/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/971e29f612de7bc33c719126f410b146318e4c42/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=971e29f612de7bc33c719126f410b146318e4c42", "patch": "@@ -1,3 +1,14 @@\n+2004-10-08  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* emit-rtl.c (last_label_num, base_label_num): Remove.\n+\t(max_label_num): Always return label_num.\n+\t(set_new_last_label_num, restore_emit_status): Remove.\n+\t(init_emit): Don't initialize last_label_num.\n+\t* function.c (pop_function_context_from): Don't call\n+\trestore_emit_status.\n+\t* function.h: Remove the prototype for restore_emit_status.\n+\t* rtl.h: Remove the prototype for set_new_last_label_num.\n+\n 2004-10-08  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* stmt.c (expand_decl_init): Remove."}, {"sha": "ec7bec39adcc6bfbbf5328bf5bb64110c942eedd", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/971e29f612de7bc33c719126f410b146318e4c42/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/971e29f612de7bc33c719126f410b146318e4c42/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=971e29f612de7bc33c719126f410b146318e4c42", "patch": "@@ -69,17 +69,6 @@ enum machine_mode ptr_mode;\t/* Mode whose width is POINTER_SIZE.  */\n \n static GTY(()) int label_num = 1;\n \n-/* Highest label number in current function.\n-   Zero means use the value of label_num instead.\n-   This is nonzero only when belatedly compiling an inline function.  */\n-\n-static int last_label_num;\n-\n-/* Value label_num had when set_new_last_label_num was called.\n-   If label_num has not changed since then, last_label_num is valid.  */\n-\n-static int base_label_num;\n-\n /* Nonzero means do not generate NOTEs for source line numbers.  */\n \n static int no_line_numbers;\n@@ -1007,8 +996,6 @@ max_reg_num (void)\n int\n max_label_num (void)\n {\n-  if (last_label_num && label_num == base_label_num)\n-    return last_label_num;\n   return label_num;\n }\n \n@@ -2135,25 +2122,6 @@ set_new_first_and_last_insn (rtx first, rtx last)\n \n   cur_insn_uid++;\n }\n-\n-/* Set the last label number found in the current function.\n-   This is used when belatedly compiling an inline function.  */\n-\n-void\n-set_new_last_label_num (int last)\n-{\n-  base_label_num = label_num;\n-  last_label_num = last;\n-}\n-\f\n-/* Restore all variables describing the current status from the structure *P.\n-   This is used after a nested function.  */\n-\n-void\n-restore_emit_status (struct function *p ATTRIBUTE_UNUSED)\n-{\n-  last_label_num = 0;\n-}\n \f\n /* Go through all the RTL insn bodies and copy any invalid shared\n    structure.  This routine should only be called once.  */\n@@ -5233,7 +5201,6 @@ init_emit (void)\n   reg_rtx_no = LAST_VIRTUAL_REGISTER + 1;\n   last_location = UNKNOWN_LOCATION;\n   first_label_num = label_num;\n-  last_label_num = 0;\n   seq_stack = NULL;\n \n   /* Init the tables that describe all the pseudo regs.  */"}, {"sha": "f583d29b969c52e487a921d301898a2116d5fb1d", "filename": "gcc/function.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/971e29f612de7bc33c719126f410b146318e4c42/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/971e29f612de7bc33c719126f410b146318e4c42/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=971e29f612de7bc33c719126f410b146318e4c42", "patch": "@@ -287,8 +287,6 @@ pop_function_context_from (tree context ATTRIBUTE_UNUSED)\n   current_function_decl = p->decl;\n   reg_renumber = 0;\n \n-  restore_emit_status (p);\n-\n   lang_hooks.function.leave_nested (p);\n \n   /* Reset variables that have known state during rtx generation.  */"}, {"sha": "addf21365d43c9a826c7296bf176e00299df1a74", "filename": "gcc/function.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/971e29f612de7bc33c719126f410b146318e4c42/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/971e29f612de7bc33c719126f410b146318e4c42/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=971e29f612de7bc33c719126f410b146318e4c42", "patch": "@@ -516,7 +516,6 @@ extern HOST_WIDE_INT get_func_frame_size (struct function *);\n extern struct machine_function * (*init_machine_status) (void);\n \n /* Save and restore status information for a nested function.  */\n-extern void restore_emit_status (struct function *);\n extern void free_after_parsing (struct function *);\n extern void free_after_compilation (struct function *);\n "}, {"sha": "9bbb04c15dec9badab12f1ac2e8fe6f4a54c3dad", "filename": "gcc/rtl.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/971e29f612de7bc33c719126f410b146318e4c42/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/971e29f612de7bc33c719126f410b146318e4c42/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=971e29f612de7bc33c719126f410b146318e4c42", "patch": "@@ -1963,7 +1963,6 @@ extern void push_topmost_sequence (void);\n extern void pop_topmost_sequence (void);\n extern void reverse_comparison (rtx);\n extern void set_new_first_and_last_insn (rtx, rtx);\n-extern void set_new_last_label_num (int);\n extern void unshare_all_rtl (void);\n extern void unshare_all_rtl_again (rtx);\n extern void unshare_all_rtl_in_chain (rtx);"}]}