{"sha": "8a81cc45254902f34a892dd6e0e63f11f45844cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE4MWNjNDUyNTQ5MDJmMzRhODkyZGQ2ZTBlNjNmMTFmNDU4NDRjZg==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2003-09-24T09:06:32Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2003-09-24T09:06:32Z"}, "message": "arm.h (ASM_OUTPUT_REG_PUSH, [...]): Wrap in do...while(0)\n\n* arm.h (ASM_OUTPUT_REG_PUSH, ASM_OUTPUT_REG_POP): Wrap in\ndo...while(0)\n\nFrom-SVN: r71731", "tree": {"sha": "17b14cb5b2183aab70eaa409c159bb8af33655c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17b14cb5b2183aab70eaa409c159bb8af33655c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a81cc45254902f34a892dd6e0e63f11f45844cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a81cc45254902f34a892dd6e0e63f11f45844cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a81cc45254902f34a892dd6e0e63f11f45844cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a81cc45254902f34a892dd6e0e63f11f45844cf/comments", "author": null, "committer": null, "parents": [{"sha": "859a68dce63b1dc4c1afbd97d83689e022d78297", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/859a68dce63b1dc4c1afbd97d83689e022d78297", "html_url": "https://github.com/Rust-GCC/gccrs/commit/859a68dce63b1dc4c1afbd97d83689e022d78297"}], "stats": {"total": 33, "additions": 22, "deletions": 11}, "files": [{"sha": "7168de64776ef00b047dbf2ae1027d6f5b642d8b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a81cc45254902f34a892dd6e0e63f11f45844cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a81cc45254902f34a892dd6e0e63f11f45844cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8a81cc45254902f34a892dd6e0e63f11f45844cf", "patch": "@@ -1,3 +1,8 @@\n+2003-09-24  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm.h (ASM_OUTPUT_REG_PUSH, ASM_OUTPUT_REG_POP): Wrap in\n+\tdo...while(0)\n+\n 2003-09-23  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \t* config.gcc: Move use_fixproto=no from generic vxworks clause to"}, {"sha": "dc21b534e2e6ccab8d84c6a42478d0d5d4453202", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a81cc45254902f34a892dd6e0e63f11f45844cf/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a81cc45254902f34a892dd6e0e63f11f45844cf/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=8a81cc45254902f34a892dd6e0e63f11f45844cf", "patch": "@@ -2409,19 +2409,25 @@ extern int making_const_table;\n \n /* Output a push or a pop instruction (only used when profiling).  */\n #define ASM_OUTPUT_REG_PUSH(STREAM, REGNO)\t\t\\\n-  if (TARGET_ARM)\t\t\t\t\t\\\n-    asm_fprintf (STREAM,\"\\tstmfd\\t%r!,{%r}\\n\", \t\t\\\n-\t\t STACK_POINTER_REGNUM, REGNO);\t\t\\\n-  else\t\t\t\t\t\t\t\\\n-    asm_fprintf (STREAM, \"\\tpush {%r}\\n\", REGNO)\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      if (TARGET_ARM)\t\t\t\t\t\\\n+\tasm_fprintf (STREAM,\"\\tstmfd\\t%r!,{%r}\\n\",\t\\\n+\t\t     STACK_POINTER_REGNUM, REGNO);\t\\\n+      else\t\t\t\t\t\t\\\n+\tasm_fprintf (STREAM, \"\\tpush {%r}\\n\", REGNO);\t\\\n+    } while (0)\n \n \n #define ASM_OUTPUT_REG_POP(STREAM, REGNO)\t\t\\\n-  if (TARGET_ARM)\t\t\t\t\t\\\n-    asm_fprintf (STREAM, \"\\tldmfd\\t%r!,{%r}\\n\",\t\t\\\n-                 STACK_POINTER_REGNUM, REGNO);\t\t\\\n-  else\t\t\t\t\t\t\t\\\n-    asm_fprintf (STREAM, \"\\tpop {%r}\\n\", REGNO)\n+  do\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      if (TARGET_ARM)\t\t\t\t\t\\\n+\tasm_fprintf (STREAM, \"\\tldmfd\\t%r!,{%r}\\n\",\t\\\n+\t\t     STACK_POINTER_REGNUM, REGNO);\t\\\n+      else\t\t\t\t\t\t\\\n+\tasm_fprintf (STREAM, \"\\tpop {%r}\\n\", REGNO);\t\\\n+    } while (0)\n \n /* This is how to output a label which precedes a jumptable.  Since\n    Thumb instructions are 2 bytes, we may need explicit alignment here.  */\n@@ -2431,7 +2437,7 @@ extern int making_const_table;\n     {\t\t\t\t\t\t\t\t\\\n       if (TARGET_THUMB)\t\t\t\t\t\t\\\n         ASM_OUTPUT_ALIGN (FILE, 2);\t\t\t\t\\\n-      (*targetm.asm_out.internal_label) (FILE, PREFIX, NUM);\t\t\\\n+      (*targetm.asm_out.internal_label) (FILE, PREFIX, NUM);\t\\\n     }\t\t\t\t\t\t\t\t\\\n   while (0)\n "}]}