{"sha": "71f2928e282eb7863de8426e41c38a90c436d41d", "node_id": "C_kwDOANBUbNoAKDcxZjI5MjhlMjgyZWI3ODYzZGU4NDI2ZTQxYzM4YTkwYzQzNmQ0MWQ", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-03-07T13:48:58Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-04-29T08:41:59Z"}, "message": "Make irange::intersect(wide_int, wide_int) private.\n\nThis method should have been private, and somehow seeped into the API.\n\nTested and benchmarked on x86-64 Linux.\n\ngcc/ChangeLog:\n\n\t* gimple-range-cache.h (non_null_ref::adjust_range): Do not use\n\tirange::intersect (wide_int, wide_int).\n\t* gimple-range-fold.cc (adjust_pointer_diff_expr): Same.\n\t(adjust_imagpart_expr): Same.\n\t* value-range.h (irange::intersect (wide_int, wide_int)): Make\n\tprivate.", "tree": {"sha": "db2aca75b24be42a435b32cf72bebead8e8443a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db2aca75b24be42a435b32cf72bebead8e8443a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71f2928e282eb7863de8426e41c38a90c436d41d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71f2928e282eb7863de8426e41c38a90c436d41d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71f2928e282eb7863de8426e41c38a90c436d41d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71f2928e282eb7863de8426e41c38a90c436d41d/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7259481f0ece6283a6e2943448e8d28ffffc40f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7259481f0ece6283a6e2943448e8d28ffffc40f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7259481f0ece6283a6e2943448e8d28ffffc40f9"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "a0244e4f6a4a1f32e11603863b0e10fb49320ae0", "filename": "gcc/gimple-range-cache.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f2928e282eb7863de8426e41c38a90c436d41d/gcc%2Fgimple-range-cache.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f2928e282eb7863de8426e41c38a90c436d41d/gcc%2Fgimple-range-cache.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-cache.h?ref=71f2928e282eb7863de8426e41c38a90c436d41d", "patch": "@@ -64,8 +64,10 @@ non_null_ref::adjust_range (irange &r, tree name, basic_block bb,\n   if (non_null_deref_p (name, bb, search_dom))\n     {\n       // Remove zero from the range.\n-      unsigned prec = TYPE_PRECISION (TREE_TYPE (name));\n-      r.intersect (wi::one (prec), wi::max_value (prec, UNSIGNED));\n+      gcc_checking_assert (TYPE_UNSIGNED (TREE_TYPE (name)));\n+      int_range<2> nz;\n+      nz.set_nonzero (TREE_TYPE (name));\n+      r.intersect (nz);\n       return true;\n     }\n   return false;"}, {"sha": "3169e29b5deb293d687380b223a6c8af64866e20", "filename": "gcc/gimple-range-fold.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f2928e282eb7863de8426e41c38a90c436d41d/gcc%2Fgimple-range-fold.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f2928e282eb7863de8426e41c38a90c436d41d/gcc%2Fgimple-range-fold.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-fold.cc?ref=71f2928e282eb7863de8426e41c38a90c436d41d", "patch": "@@ -362,7 +362,7 @@ adjust_pointer_diff_expr (irange &res, const gimple *diff_stmt)\n       tree max = vrp_val_max (ptrdiff_type_node);\n       unsigned prec = TYPE_PRECISION (TREE_TYPE (max));\n       wide_int wmaxm1 = wi::to_wide (max, prec) - 1;\n-      res.intersect (wi::zero (prec), wmaxm1);\n+      res.intersect (int_range<2> (TREE_TYPE (max), wi::zero (prec), wmaxm1));\n     }\n }\n \n@@ -403,8 +403,8 @@ adjust_imagpart_expr (irange &res, const gimple *stmt)\n       tree cst = gimple_assign_rhs1 (def_stmt);\n       if (TREE_CODE (cst) == COMPLEX_CST)\n \t{\n-\t  wide_int imag = wi::to_wide (TREE_IMAGPART (cst));\n-\t  res.intersect (imag, imag);\n+\t  int_range<2> imag (TREE_IMAGPART (cst), TREE_IMAGPART (cst));\n+\t  res.intersect (imag);\n \t}\n     }\n }"}, {"sha": "fe7795b55a648ec61003c3f7383d7fdaee875285", "filename": "gcc/value-range.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71f2928e282eb7863de8426e41c38a90c436d41d/gcc%2Fvalue-range.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71f2928e282eb7863de8426e41c38a90c436d41d/gcc%2Fvalue-range.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.h?ref=71f2928e282eb7863de8426e41c38a90c436d41d", "patch": "@@ -73,7 +73,6 @@ class GTY((user)) irange\n   // In-place operators.\n   void union_ (const irange &);\n   void intersect (const irange &);\n-  void intersect (const wide_int& lb, const wide_int& ub);\n   void invert ();\n \n   // Operator overloads.\n@@ -135,6 +134,7 @@ class GTY((user)) irange\n   void irange_set_1bit_anti_range (tree, tree);\n   bool varying_compatible_p () const;\n \n+  void intersect (const wide_int& lb, const wide_int& ub);\n   unsigned char m_num_ranges;\n   unsigned char m_max_ranges;\n   ENUM_BITFIELD(value_range_kind) m_kind : 8;"}]}