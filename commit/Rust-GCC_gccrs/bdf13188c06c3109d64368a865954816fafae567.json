{"sha": "bdf13188c06c3109d64368a865954816fafae567", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRmMTMxODhjMDZjMzEwOWQ2NDM2OGE4NjU5NTQ4MTZmYWZhZTU2Nw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2014-10-10T08:09:39Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-10-10T08:09:39Z"}, "message": "* lra-assigns.c (assign_by_spills): Error out on spill failure.\n\nFrom-SVN: r216059", "tree": {"sha": "12f00c25a868f7e02a88fbbb35b5ea960bd44fbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12f00c25a868f7e02a88fbbb35b5ea960bd44fbf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdf13188c06c3109d64368a865954816fafae567", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdf13188c06c3109d64368a865954816fafae567", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdf13188c06c3109d64368a865954816fafae567", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdf13188c06c3109d64368a865954816fafae567/comments", "author": null, "committer": null, "parents": [{"sha": "a6c631732fc35dc6948e7a1810b78eef3a11af97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c631732fc35dc6948e7a1810b78eef3a11af97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6c631732fc35dc6948e7a1810b78eef3a11af97"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "90fd7b56a749cafef4d840eee205106fdb7bb823", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdf13188c06c3109d64368a865954816fafae567/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdf13188c06c3109d64368a865954816fafae567/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bdf13188c06c3109d64368a865954816fafae567", "patch": "@@ -1,3 +1,7 @@\n+2014-10-10  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* lra-assigns.c (assign_by_spills): Error out on spill failure.\n+\n 2014-10-09  Markus Trippelsdorf  <markus@trippelsdorf.de>\n \n \t* pa-polymorphic-call.c (check_stmt_for_type_change): Move"}, {"sha": "a6745fcb57f609b6b577ff5c4ee03a5f495d05a4", "filename": "gcc/lra-assigns.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdf13188c06c3109d64368a865954816fafae567/gcc%2Flra-assigns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdf13188c06c3109d64368a865954816fafae567/gcc%2Flra-assigns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-assigns.c?ref=bdf13188c06c3109d64368a865954816fafae567", "patch": "@@ -1286,10 +1286,9 @@ assign_by_spills (void)\n \tbreak;\n       if (iter > 0)\n \t{\n-\t  /* We did not assign hard regs to reload pseudos after two\n-\t     iteration.  It means something is wrong with asm insn\n-\t     constraints.  Report it.  */\n-\t  bool asm_p = false;\n+\t  /* We did not assign hard regs to reload pseudos after two iterations.\n+\t     Either it's an asm and something is wrong with the constraints, or\n+\t     we have run out of spill registers; error out in either case.  */\n \t  bitmap_head failed_reload_insns;\n \n \t  bitmap_initialize (&failed_reload_insns, &reg_obstack);\n@@ -1299,7 +1298,7 @@ assign_by_spills (void)\n \t      bitmap_ior_into (&failed_reload_insns,\n \t\t\t       &lra_reg_info[regno].insn_bitmap);\n \t      /* Assign an arbitrary hard register of regno class to\n-\t\t avoid further trouble with the asm insns.  */\n+\t\t avoid further trouble with this insn.  */\n \t      bitmap_clear_bit (&all_spilled_pseudos, regno);\n \t      assign_hard_regno\n \t\t(ira_class_hard_regs[regno_allocno_class_array[regno]][0],\n@@ -1310,7 +1309,6 @@ assign_by_spills (void)\n \t      insn = lra_insn_recog_data[u]->insn;\n \t      if (asm_noperands (PATTERN (insn)) >= 0)\n \t\t{\n-\t\t  asm_p = true;\n \t\t  error_for_asm (insn,\n \t\t\t\t \"%<asm%> operand has impossible constraints\");\n \t\t  /* Avoid further trouble with this insn.\n@@ -1331,8 +1329,12 @@ assign_by_spills (void)\n \t\t      lra_set_insn_deleted (insn);\n \t\t    }\n \t\t}\n+\t      else\n+\t\t{\n+\t\t  error (\"unable to find a register to spill\");\n+\t\t  fatal_insn (\"this is the insn:\", insn);\n+\t\t}\n \t    }\n-\t  lra_assert (asm_p);\n \t  break;\n \t}\n       /* This is a very rare event.  We can not assign a hard register"}]}