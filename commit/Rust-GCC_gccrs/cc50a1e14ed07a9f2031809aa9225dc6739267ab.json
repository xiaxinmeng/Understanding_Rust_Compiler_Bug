{"sha": "cc50a1e14ed07a9f2031809aa9225dc6739267ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M1MGExZTE0ZWQwN2E5ZjIwMzE4MDlhYTkyMjVkYzY3MzkyNjdhYg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-12-15T00:23:32Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-12-15T00:23:32Z"}, "message": "arm: Set predicable on more instructions.\n\nMake sure its set for all CMP, CMN, TST instructions,\nwhich do work inside IT blocks.\n\n        * config/arm/arm.md (*addsi3_compare0_scratch): Set predicable.\n        (*compare_negsi_si, *compare_addsi2_op0): Likewise.\n        (*compare_addsi2_op1, *zeroextractsi_compare0_scratch): Likewise.\n        (*compareqi_eq0, *arm_cmpsi_insn, *arm_cmpsi_negshiftsi_si): Likewise.\n\nFrom-SVN: r182353", "tree": {"sha": "a81a29b59f286f6e47424cbb46f9f5e12706c9cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a81a29b59f286f6e47424cbb46f9f5e12706c9cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc50a1e14ed07a9f2031809aa9225dc6739267ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc50a1e14ed07a9f2031809aa9225dc6739267ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc50a1e14ed07a9f2031809aa9225dc6739267ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc50a1e14ed07a9f2031809aa9225dc6739267ab/comments", "author": null, "committer": null, "parents": [{"sha": "6a473864bd26891d5e6e3018c49b4c4a8d2312e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a473864bd26891d5e6e3018c49b4c4a8d2312e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a473864bd26891d5e6e3018c49b4c4a8d2312e9"}], "stats": {"total": 33, "additions": 24, "deletions": 9}, "files": [{"sha": "bd34b89f63912ac7f64022217fa5013f2da59b29", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc50a1e14ed07a9f2031809aa9225dc6739267ab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc50a1e14ed07a9f2031809aa9225dc6739267ab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc50a1e14ed07a9f2031809aa9225dc6739267ab", "patch": "@@ -1,3 +1,10 @@\n+2011-12-14  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/arm/arm.md (*addsi3_compare0_scratch): Set predicable.\n+\t(*compare_negsi_si, *compare_addsi2_op0): Likewise.\n+\t(*compare_addsi2_op1, *zeroextractsi_compare0_scratch): Likewise.\n+\t(*compareqi_eq0, *arm_cmpsi_insn, *arm_cmpsi_negshiftsi_si): Likewise.\n+\n 2011-12-14  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-cfg.c (replace_uses_by): Fixup TREE_CONSTANT for"}, {"sha": "1b2d9d9b4b4be0186a78047bbb375cf79f79c280", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc50a1e14ed07a9f2031809aa9225dc6739267ab/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc50a1e14ed07a9f2031809aa9225dc6739267ab/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=cc50a1e14ed07a9f2031809aa9225dc6739267ab", "patch": "@@ -848,7 +848,8 @@\n   \"@\n    cmn%?\\\\t%0, %1\n    cmp%?\\\\t%0, #%n1\"\n-  [(set_attr \"conds\" \"set\")]\n+  [(set_attr \"conds\" \"set\")\n+   (set_attr \"predicable\" \"yes\")]\n )\n \n (define_insn \"*compare_negsi_si\"\n@@ -858,7 +859,8 @@\n \t (match_operand:SI 1 \"s_register_operand\" \"r\")))]\n   \"TARGET_32BIT\"\n   \"cmn%?\\\\t%1, %0\"\n-  [(set_attr \"conds\" \"set\")]\n+  [(set_attr \"conds\" \"set\")\n+   (set_attr \"predicable\" \"yes\")]\n )\n \n ;; This is the canonicalization of addsi3_compare0_for_combiner when the\n@@ -959,7 +961,8 @@\n   \"@\n    cmn%?\\\\t%0, %1\n    cmp%?\\\\t%0, #%n1\"\n-  [(set_attr \"conds\" \"set\")]\n+  [(set_attr \"conds\" \"set\")\n+   (set_attr \"predicable\" \"yes\")]\n )\n \n (define_insn \"*compare_addsi2_op1\"\n@@ -972,7 +975,8 @@\n   \"@\n    cmn%?\\\\t%0, %1\n    cmp%?\\\\t%0, #%n1\"\n-  [(set_attr \"conds\" \"set\")]\n+  [(set_attr \"conds\" \"set\")\n+   (set_attr \"predicable\" \"yes\")]\n )\n \n (define_insn \"*addsi3_carryin_<optab>\"\n@@ -2272,7 +2276,8 @@\n   output_asm_insn (\\\"tst%?\\\\t%0, %1\\\", operands);\n   return \\\"\\\";\n   \"\n-  [(set_attr \"conds\" \"set\")]\n+  [(set_attr \"conds\" \"set\")\n+   (set_attr \"predicable\" \"yes\")]\n )\n \n (define_insn_and_split \"*ne_zeroextractsi\"\n@@ -4713,8 +4718,9 @@\n \t(compare:CC_Z (match_operand:QI 0 \"s_register_operand\" \"r\")\n \t\t\t (const_int 0)))]\n   \"TARGET_32BIT\"\n-  \"tst\\\\t%0, #255\"\n-  [(set_attr \"conds\" \"set\")]\n+  \"tst%?\\\\t%0, #255\"\n+  [(set_attr \"conds\" \"set\")\n+   (set_attr \"predicable\" \"yes\")]\n )\n \n (define_expand \"extendhisi2\"\n@@ -7470,7 +7476,8 @@\n    cmn%?\\\\t%0, #%n1\"\n   [(set_attr \"conds\" \"set\")\n    (set_attr \"arch\" \"t2,t2,any,any\")\n-   (set_attr \"length\" \"2,2,4,4\")]\n+   (set_attr \"length\" \"2,2,4,4\")\n+   (set_attr \"predicable\" \"yes\")]\n )\n \n (define_insn \"*cmpsi_shiftsi\"\n@@ -7511,7 +7518,8 @@\n   [(set_attr \"conds\" \"set\")\n    (set (attr \"type\") (if_then_else (match_operand 3 \"const_int_operand\" \"\")\n \t\t\t\t    (const_string \"alu_shift\")\n-\t\t\t\t    (const_string \"alu_shift_reg\")))]\n+\t\t\t\t    (const_string \"alu_shift_reg\")))\n+   (set_attr \"predicable\" \"yes\")]\n )\n \n ;; DImode comparisons.  The generic code generates branches that"}]}