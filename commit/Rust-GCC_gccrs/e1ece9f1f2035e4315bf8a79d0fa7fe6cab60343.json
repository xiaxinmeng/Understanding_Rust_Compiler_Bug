{"sha": "e1ece9f1f2035e4315bf8a79d0fa7fe6cab60343", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFlY2U5ZjFmMjAzNWU0MzE1YmY4YTc5ZDBmYTdmZTZjYWI2MDM0Mw==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2008-11-03T18:19:13Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2008-11-03T18:19:13Z"}, "message": "Revert:\n\n\t2008-10-31  Nathan Froyd  <froydnj@codesourcery.com>\n\n\t* config/rs6000/rs6000.c (no_global_regs_above): Fix precedence\n\tproblem.\n\t(rs6000_emit_prologue): Invert logic.\n\t* config/rs6000/rs6000.md (*save_gpregs_<mode>): Use explicit\n\t(reg:P 11) instead of match_operand.\n\t(*save_fpregs_<mode>): Likewise.\n\t(*restore_gpregs_<mode>): Likewise.\n\t(*return_and_restore_gpregs_<mode>): Likewise.\n\t(*return_and_restore_fpregs_<mode>): Likewise.\n\t* config/rs6000/spe.md (*save_gpregs_spe): Use explicit\n\t(reg:P 11) insted of match_operand.\n\t(*restore_gpregs_spe): Likewise.\n\t(*return_and_restore_gpregs_spe): Likewise.\n\nFrom-SVN: r141554", "tree": {"sha": "67656a054c7c3533c4f61540cc0a45be866fde40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67656a054c7c3533c4f61540cc0a45be866fde40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1ece9f1f2035e4315bf8a79d0fa7fe6cab60343", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1ece9f1f2035e4315bf8a79d0fa7fe6cab60343", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1ece9f1f2035e4315bf8a79d0fa7fe6cab60343", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1ece9f1f2035e4315bf8a79d0fa7fe6cab60343/comments", "author": null, "committer": null, "parents": [{"sha": "40bd57200795e7ddfedb8a3b73ae2426e5135369", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40bd57200795e7ddfedb8a3b73ae2426e5135369", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40bd57200795e7ddfedb8a3b73ae2426e5135369"}], "stats": {"total": 72, "additions": 45, "deletions": 27}, "files": [{"sha": "5b01a8c05bda34be889af439906baef7f36df2ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1ece9f1f2035e4315bf8a79d0fa7fe6cab60343/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1ece9f1f2035e4315bf8a79d0fa7fe6cab60343/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e1ece9f1f2035e4315bf8a79d0fa7fe6cab60343", "patch": "@@ -1,3 +1,22 @@\n+2008-11-03  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\tRevert:\n+\t2008-10-31  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* config/rs6000/rs6000.c (no_global_regs_above): Fix precedence\n+\tproblem.\n+\t(rs6000_emit_prologue): Invert logic.\n+\t* config/rs6000/rs6000.md (*save_gpregs_<mode>): Use explicit\n+\t(reg:P 11) instead of match_operand.\n+\t(*save_fpregs_<mode>): Likewise.\n+\t(*restore_gpregs_<mode>): Likewise.\n+\t(*return_and_restore_gpregs_<mode>): Likewise.\n+\t(*return_and_restore_fpregs_<mode>): Likewise.\n+\t* config/rs6000/spe.md (*save_gpregs_spe): Use explicit\n+\t(reg:P 11) insted of match_operand.\n+\t(*restore_gpregs_spe): Likewise.\n+\t(*return_and_restore_gpregs_spe): Likewise.\n+\n 2008-11-03  Harsha Jagasia  <harsha.jagasia@amd.com>\n \n \tPR tree-optimization/37684"}, {"sha": "faeae52e7ffd1e0a6fcebd6b3f59c679012bf289", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1ece9f1f2035e4315bf8a79d0fa7fe6cab60343/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1ece9f1f2035e4315bf8a79d0fa7fe6cab60343/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=e1ece9f1f2035e4315bf8a79d0fa7fe6cab60343", "patch": "@@ -15842,8 +15842,7 @@ static bool\n no_global_regs_above (int first, bool gpr)\n {\n   int i;\n-  int last = gpr ? 32 : 64;\n-  for (i = first; i < last; i++)\n+  for (i = first; i < gpr ? 32 : 64 ; i++)\n     if (global_regs[i])\n       return false;\n   return true;\n@@ -16122,7 +16121,7 @@ rs6000_emit_prologue (void)\n   int using_store_multiple;\n   int using_static_chain_p = (cfun->static_chain_decl != NULL_TREE\n                               && df_regs_ever_live_p (STATIC_CHAIN_REGNUM)\n-                              && call_used_regs[STATIC_CHAIN_REGNUM]);\n+                              && !call_used_regs[STATIC_CHAIN_REGNUM]);\n   HOST_WIDE_INT sp_offset = 0;\n \n   if (TARGET_FIX_AND_CONTINUE)"}, {"sha": "4fa690d809770fce45f89fb8d0c4e2b50f179ee4", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1ece9f1f2035e4315bf8a79d0fa7fe6cab60343/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1ece9f1f2035e4315bf8a79d0fa7fe6cab60343/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=e1ece9f1f2035e4315bf8a79d0fa7fe6cab60343", "patch": "@@ -14604,9 +14604,9 @@\n   [(match_parallel 0 \"any_parallel_operand\"\n \t\t   [(clobber (reg:P 65))\n \t\t    (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n-                    (use (reg:P 11))\n-\t\t    (set (match_operand:P 2 \"memory_operand\" \"=m\")\n-\t\t\t (match_operand:P 3 \"gpc_reg_operand\" \"r\"))])]\n+                    (use (match_operand:P 2 \"gpc_reg_operand\" \"r\"))\n+\t\t    (set (match_operand:P 3 \"memory_operand\" \"=m\")\n+\t\t\t (match_operand:P 4 \"gpc_reg_operand\" \"r\"))])]\n   \"\"\n   \"bl %z1\"\n   [(set_attr \"type\" \"branch\")\n@@ -14616,9 +14616,9 @@\n   [(match_parallel 0 \"any_parallel_operand\"\n \t\t   [(clobber (reg:P 65))\n \t\t    (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n-                    (use (reg:P 11))\n-\t\t    (set (match_operand:DF 2 \"memory_operand\" \"=m\")\n-\t\t\t (match_operand:DF 3 \"gpc_reg_operand\" \"f\"))])]\n+                    (use (match_operand:P 2 \"gpc_reg_operand\" \"r\"))\n+\t\t    (set (match_operand:DF 3 \"memory_operand\" \"=m\")\n+\t\t\t (match_operand:DF 4 \"gpc_reg_operand\" \"f\"))])]\n   \"\"\n   \"bl %z1\"\n   [(set_attr \"type\" \"branch\")\n@@ -14711,9 +14711,9 @@\n  [(match_parallel 0 \"any_parallel_operand\"\n                   [(clobber (match_operand:P 1 \"register_operand\" \"=l\"))\n                    (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n-                   (use (reg:P 11))\n-\t\t   (set (match_operand:P 3 \"gpc_reg_operand\" \"=r\")\n-\t\t\t(match_operand:P 4 \"memory_operand\" \"m\"))])]\n+                   (use (match_operand:P 3 \"gpc_reg_operand\" \"r\"))\n+\t\t   (set (match_operand:P 4 \"gpc_reg_operand\" \"=r\")\n+\t\t\t(match_operand:P 5 \"memory_operand\" \"m\"))])]\n  \"\"\n  \"bl %z2\"\n  [(set_attr \"type\" \"branch\")\n@@ -14724,9 +14724,9 @@\n                   [(return)\n \t\t   (clobber (match_operand:P 1 \"register_operand\" \"=l\"))\n \t\t   (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n-                   (use (reg:P 11))\n-\t\t   (set (match_operand:P 3 \"gpc_reg_operand\" \"=r\")\n-\t\t\t(match_operand:P 4 \"memory_operand\" \"m\"))])]\n+                   (use (match_operand:P 3 \"gpc_reg_operand\" \"r\"))\n+\t\t   (set (match_operand:P 4 \"gpc_reg_operand\" \"=r\")\n+\t\t\t(match_operand:P 5 \"memory_operand\" \"m\"))])]\n  \"\"\n  \"b %z2\"\n  [(set_attr \"type\" \"branch\")\n@@ -14737,9 +14737,9 @@\n                   [(return)\n \t\t   (clobber (match_operand:P 1 \"register_operand\" \"=l\"))\n \t\t   (use (match_operand:P 2 \"symbol_ref_operand\" \"s\"))\n-                   (use (reg:P 11))\n-\t\t   (set (match_operand:DF 3 \"gpc_reg_operand\" \"=f\")\n-\t\t\t(match_operand:DF 4 \"memory_operand\" \"m\"))])]\n+                   (use (match_operand:P 3 \"gpc_reg_operand\" \"r\"))\n+\t\t   (set (match_operand:DF 4 \"gpc_reg_operand\" \"=f\")\n+\t\t\t(match_operand:DF 5 \"memory_operand\" \"m\"))])]\n  \"\"\n  \"b %z2\"\n  [(set_attr \"type\" \"branch\")"}, {"sha": "96be255895b128867d35c2ddf4269cc665c3459b", "filename": "gcc/config/rs6000/spe.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1ece9f1f2035e4315bf8a79d0fa7fe6cab60343/gcc%2Fconfig%2Frs6000%2Fspe.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1ece9f1f2035e4315bf8a79d0fa7fe6cab60343/gcc%2Fconfig%2Frs6000%2Fspe.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fspe.md?ref=e1ece9f1f2035e4315bf8a79d0fa7fe6cab60343", "patch": "@@ -3144,9 +3144,9 @@\n   [(match_parallel 0 \"any_parallel_operand\"\n \t\t   [(clobber (reg:P 65))\n \t\t    (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n-\t\t    (use (reg:P 11))\n-\t\t    (set (match_operand:V2SI 2 \"memory_operand\" \"=m\")\n-\t\t\t (match_operand:V2SI 3 \"gpc_reg_operand\" \"r\"))])]\n+\t\t    (use (match_operand:P 2 \"gpc_reg_operand\" \"r\"))\n+\t\t    (set (match_operand:V2SI 3 \"memory_operand\" \"=m\")\n+\t\t\t (match_operand:V2SI 4 \"gpc_reg_operand\" \"r\"))])]\n   \"TARGET_SPE_ABI\"\n   \"bl %z1\"\n   [(set_attr \"type\" \"branch\")\n@@ -3156,9 +3156,9 @@\n  [(match_parallel 0 \"any_parallel_operand\"\n \t\t  [(clobber (reg:P 65))\n \t\t   (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n-\t\t   (use (reg:P 11))\n-\t\t   (set (match_operand:V2SI 2 \"gpc_reg_operand\" \"=r\")\n-\t\t\t(match_operand:V2SI 3 \"memory_operand\" \"m\"))])]\n+\t\t   (use (match_operand:P 2 \"gpc_reg_operand\" \"r\"))\n+\t\t   (set (match_operand:V2SI 3 \"gpc_reg_operand\" \"=r\")\n+\t\t\t(match_operand:V2SI 4 \"memory_operand\" \"m\"))])]\n  \"TARGET_SPE_ABI\"\n  \"bl %z1\"\n  [(set_attr \"type\" \"branch\")\n@@ -3169,9 +3169,9 @@\n \t\t  [(return)\n \t\t   (clobber (reg:P 65))\n \t\t   (use (match_operand:P 1 \"symbol_ref_operand\" \"s\"))\n-\t\t   (use (reg:P 11))\n-\t\t   (set (match_operand:V2SI 2 \"gpc_reg_operand\" \"=r\")\n-\t\t\t(match_operand:V2SI 3 \"memory_operand\" \"m\"))])]\n+\t\t   (use (match_operand:P 2 \"gpc_reg_operand\" \"r\"))\n+\t\t   (set (match_operand:V2SI 3 \"gpc_reg_operand\" \"=r\")\n+\t\t\t(match_operand:V2SI 4 \"memory_operand\" \"m\"))])]\n  \"TARGET_SPE_ABI\"\n  \"b %z1\"\n  [(set_attr \"type\" \"branch\")"}]}