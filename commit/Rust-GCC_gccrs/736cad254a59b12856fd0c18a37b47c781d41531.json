{"sha": "736cad254a59b12856fd0c18a37b47c781d41531", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM2Y2FkMjU0YTU5YjEyODU2ZmQwYzE4YTM3YjQ3Yzc4MWQ0MTUzMQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2015-07-17T23:41:11Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-07-17T23:41:11Z"}, "message": "i386.md (pushsf splitter): Pass curr_insn to find_constant_src.\n\n\t* config/i386/i386.md (pushsf splitter): Pass curr_insn to\n\tfind_constant_src.  FAIL if find_constant_src returns NULL_RTX.\n\t(mem->fpreg splitters): Ditto.\n\t(general_operand->nonimmediate_operand splitter): Use explicit modes.\n\tDisable DFmode for TARGET_64BIT.\n\nFrom-SVN: r225975", "tree": {"sha": "e891247314c69e6d521f61962eaffc95bd840b80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e891247314c69e6d521f61962eaffc95bd840b80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/736cad254a59b12856fd0c18a37b47c781d41531", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/736cad254a59b12856fd0c18a37b47c781d41531", "html_url": "https://github.com/Rust-GCC/gccrs/commit/736cad254a59b12856fd0c18a37b47c781d41531", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/736cad254a59b12856fd0c18a37b47c781d41531/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f6f6b749d69f22218545b95433579fdb2af285e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6f6b749d69f22218545b95433579fdb2af285e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6f6b749d69f22218545b95433579fdb2af285e6"}], "stats": {"total": 80, "additions": 54, "deletions": 26}, "files": [{"sha": "f0854ae15f04cc4e2c43c6f000f4251a2689e00a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/736cad254a59b12856fd0c18a37b47c781d41531/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/736cad254a59b12856fd0c18a37b47c781d41531/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=736cad254a59b12856fd0c18a37b47c781d41531", "patch": "@@ -1,3 +1,11 @@\n+2015-07-18  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (pushsf splitter): Pass curr_insn to\n+\tfind_constant_src.  FAIL if find_constant_src returns NULL_RTX.\n+\t(mem->fpreg splitters): Ditto.\n+\t(general_operand->nonimmediate_operand splitter): Use explicit modes.\n+\tDisable DFmode for TARGET_64BIT.\n+\n 2015-07-17  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/66906"}, {"sha": "18d0503212964149dedf6d47819650f1da24e92b", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 46, "deletions": 26, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/736cad254a59b12856fd0c18a37b47c781d41531/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/736cad254a59b12856fd0c18a37b47c781d41531/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=736cad254a59b12856fd0c18a37b47c781d41531", "patch": "@@ -2987,9 +2987,14 @@\n (define_split\n   [(set (match_operand:SF 0 \"push_operand\")\n \t(match_operand:SF 1 \"memory_operand\"))]\n-  \"reload_completed\n-   && (operands[2] = find_constant_src (insn))\"\n-  [(set (match_dup 0) (match_dup 2))])\n+  \"reload_completed\"\n+  [(set (match_dup 0) (match_dup 2))]\n+{\n+  operands[2] = find_constant_src (curr_insn);\n+\n+  if (operands[2] == NULL_RTX)\n+    FAIL;\n+})\n \n (define_split\n   [(set (match_operand 0 \"push_operand\")\n@@ -3083,6 +3088,14 @@\n \t       ]\n \t       (const_string \"TI\")))])\n \n+(define_split\n+  [(set (match_operand:TF 0 \"nonimmediate_operand\")\n+        (match_operand:TF 1 \"general_operand\"))]\n+  \"reload_completed\n+   && !(ANY_FP_REG_P (operands[0]) || ANY_FP_REG_P (operands[1]))\"\n+  [(const_int 0)]\n+  \"ix86_split_long_move (operands); DONE;\")\n+\n ;; Possible store forwarding (partial memory) stall\n ;; in alternatives 4, 6, 7 and 8.\n (define_insn \"*movxf_internal\"\n@@ -3149,6 +3162,14 @@\n \t   ]\n \t   (const_string \"*\")))])\n    \n+(define_split\n+  [(set (match_operand:XF 0 \"nonimmediate_operand\")\n+        (match_operand:XF 1 \"general_operand\"))]\n+  \"reload_completed\n+   && !(ANY_FP_REG_P (operands[0]) || ANY_FP_REG_P (operands[1]))\"\n+  [(const_int 0)]\n+  \"ix86_split_long_move (operands); DONE;\")\n+\n ;; Possible store forwarding (partial memory) stall in alternatives 4, 6 and 7.\n (define_insn \"*movdf_internal\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\"\n@@ -3344,6 +3365,14 @@\n \t   ]\n \t   (const_string \"*\")))])\n \n+(define_split\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\")\n+        (match_operand:DF 1 \"general_operand\"))]\n+  \"!TARGET_64BIT && reload_completed\n+   && !(ANY_FP_REG_P (operands[0]) || ANY_FP_REG_P (operands[1]))\"\n+  [(const_int 0)]\n+  \"ix86_split_long_move (operands); DONE;\")\n+\n (define_insn \"*movsf_internal\"\n   [(set (match_operand:SF 0 \"nonimmediate_operand\"\n \t  \"=Yf*f,m   ,Yf*f,?r ,?m,v,v,v,m,?r,?Yi,!*y,!*y,!m,!r ,!*Ym,r  ,m\")\n@@ -3487,15 +3516,16 @@\n    && (GET_MODE (operands[0]) == TFmode\n        || GET_MODE (operands[0]) == XFmode\n        || GET_MODE (operands[0]) == DFmode\n-       || GET_MODE (operands[0]) == SFmode)\n-   && (operands[2] = find_constant_src (insn))\"\n+       || GET_MODE (operands[0]) == SFmode)\"\n   [(set (match_dup 0) (match_dup 2))]\n {\n-  rtx c = operands[2];\n-  int r = REGNO (operands[0]);\n+  operands[2] = find_constant_src (curr_insn);\n \n-  if ((SSE_REGNO_P (r) && !standard_sse_constant_p (c))\n-      || (STACK_REGNO_P (r) && standard_80387_constant_p (c) < 1))\n+  if (operands[2] == NULL_RTX\n+      || (SSE_REGNO_P (REGNO (operands[0]))\n+\t  && !standard_sse_constant_p (operands[2]))\n+      || (STACK_REGNO_P (REGNO (operands[0]))\n+\t   && standard_80387_constant_p (operands[2]) < 1))\n     FAIL;\n })\n \n@@ -3505,15 +3535,16 @@\n   \"reload_completed\n    && (GET_MODE (operands[0]) == TFmode\n        || GET_MODE (operands[0]) == XFmode\n-       || GET_MODE (operands[0]) == DFmode)\n-   && (operands[2] = find_constant_src (insn))\"\n+       || GET_MODE (operands[0]) == DFmode)\"\n   [(set (match_dup 0) (match_dup 2))]\n {\n-  rtx c = operands[2];\n-  int r = REGNO (operands[0]);\n+  operands[2] = find_constant_src (curr_insn);\n \n-  if ((SSE_REGNO_P (r) && !standard_sse_constant_p (c))\n-      || (STACK_REGNO_P (r) && standard_80387_constant_p (c) < 1))\n+  if (operands[2] == NULL_RTX\n+      || (SSE_REGNO_P (REGNO (operands[0]))\n+\t  && !standard_sse_constant_p (operands[2]))\n+      || (STACK_REGNO_P (REGNO (operands[0]))\n+\t   && standard_80387_constant_p (operands[2]) < 1))\n     FAIL;\n })\n \n@@ -3537,17 +3568,6 @@\n     operands[1] = CONST1_RTX (<MODE>mode);\n })\n \n-(define_split\n-  [(set (match_operand 0 \"nonimmediate_operand\")\n-        (match_operand 1 \"general_operand\"))]\n-  \"reload_completed\n-   && (GET_MODE (operands[0]) == TFmode\n-       || GET_MODE (operands[0]) == XFmode\n-       || GET_MODE (operands[0]) == DFmode)\n-   && !(ANY_FP_REG_P (operands[0]) || ANY_FP_REG_P (operands[1]))\"\n-  [(const_int 0)]\n-  \"ix86_split_long_move (operands); DONE;\")\n-\n (define_insn \"swapxf\"\n   [(set (match_operand:XF 0 \"register_operand\" \"+f\")\n \t(match_operand:XF 1 \"register_operand\" \"+f\"))"}]}