{"sha": "570fbf448d126f1e4b3ef55327c3ea3ab0d3a806", "node_id": "C_kwDOANBUbNoAKDU3MGZiZjQ0OGQxMjZmMWU0YjNlZjU1MzI3YzNlYTNhYjBkM2E4MDY", "commit": {"author": {"name": "Dimitar Dimitrov", "email": "dimitar@dinux.eu", "date": "2022-05-15T15:20:29Z"}, "committer": {"name": "Dimitar Dimitrov", "email": "dimitar@dinux.eu", "date": "2022-05-21T18:27:29Z"}, "message": "testsuite: Skip vectorize tests for PRU\n\nPRU has single-cycle constant cost for any jump, and it cannot\nvectorise.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/tree-ssa/gen-vect-11.c: For PRU target, skip the\n\tvectorizing checks in tree dumps.\n\t* gcc.dg/tree-ssa/gen-vect-11a.c: Ditto.\n\t* gcc.dg/tree-ssa/gen-vect-2.c: Ditto.\n\t* gcc.dg/tree-ssa/gen-vect-25.c: Ditto.\n\t* gcc.dg/tree-ssa/gen-vect-26.c: Ditto.\n\t* gcc.dg/tree-ssa/gen-vect-28.c: Ditto.\n\t* gcc.dg/tree-ssa/gen-vect-32.c: Ditto.\n\nSigned-off-by: Dimitar Dimitrov <dimitar@dinux.eu>", "tree": {"sha": "6d203f5a8fe0acbb45953ce5232a8503a7c32a9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d203f5a8fe0acbb45953ce5232a8503a7c32a9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/570fbf448d126f1e4b3ef55327c3ea3ab0d3a806", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/570fbf448d126f1e4b3ef55327c3ea3ab0d3a806", "html_url": "https://github.com/Rust-GCC/gccrs/commit/570fbf448d126f1e4b3ef55327c3ea3ab0d3a806", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/570fbf448d126f1e4b3ef55327c3ea3ab0d3a806/comments", "author": null, "committer": null, "parents": [{"sha": "addacdc87b044e63d72054036907c91a18be6734", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/addacdc87b044e63d72054036907c91a18be6734", "html_url": "https://github.com/Rust-GCC/gccrs/commit/addacdc87b044e63d72054036907c91a18be6734"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "6916843f397b42d26f2f99e544cdebb6071b2bc9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/gen-vect-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/570fbf448d126f1e4b3ef55327c3ea3ab0d3a806/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/570fbf448d126f1e4b3ef55327c3ea3ab0d3a806/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-11.c?ref=570fbf448d126f1e4b3ef55327c3ea3ab0d3a806", "patch": "@@ -34,4 +34,4 @@ int main ()\n }\n \n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { ! { avr-*-* msp430-*-* } } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { ! { avr-*-* msp430-*-* pru-*-* } } } } } */"}, {"sha": "6326bf75ab02bf91b63d2c049acce60ed4612b5f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/gen-vect-11a.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/570fbf448d126f1e4b3ef55327c3ea3ab0d3a806/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-11a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/570fbf448d126f1e4b3ef55327c3ea3ab0d3a806/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-11a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-11a.c?ref=570fbf448d126f1e4b3ef55327c3ea3ab0d3a806", "patch": "@@ -38,4 +38,4 @@ int main ()\n }\n \n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { ! avr-*-* } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { ! { avr-*-* pru-*-* } } } } } */"}, {"sha": "b84f31844277d9d9674dcb0bfb050d34d2c6b473", "filename": "gcc/testsuite/gcc.dg/tree-ssa/gen-vect-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/570fbf448d126f1e4b3ef55327c3ea3ab0d3a806/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/570fbf448d126f1e4b3ef55327c3ea3ab0d3a806/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-2.c?ref=570fbf448d126f1e4b3ef55327c3ea3ab0d3a806", "patch": "@@ -36,5 +36,5 @@ int main ()\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { ! avr-*-* } } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { target { ! avr-*-* } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { ! { avr-*-* pru-*-* } } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { target { ! { avr-*-* pru-*-* } } } } } */"}, {"sha": "18fe1aa1502d0ec319b0b9e4ac5b6e63a7025710", "filename": "gcc/testsuite/gcc.dg/tree-ssa/gen-vect-25.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/570fbf448d126f1e4b3ef55327c3ea3ab0d3a806/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/570fbf448d126f1e4b3ef55327c3ea3ab0d3a806/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-25.c?ref=570fbf448d126f1e4b3ef55327c3ea3ab0d3a806", "patch": "@@ -54,5 +54,5 @@ int main (void)\n   return main_1 (n + 2, (int *) &n);\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" { target { ! { avr-*-* msp430-*-* } } } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { target { ! { avr-*-* msp430-*-* } } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" { target { ! { avr-*-* msp430-*-* pru-*-* } } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { target { ! { avr-*-* msp430-*-* pru-*-* } } } } } */"}, {"sha": "710696198bb87a2e1189524bfdc51e4773dc5a20", "filename": "gcc/testsuite/gcc.dg/tree-ssa/gen-vect-26.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/570fbf448d126f1e4b3ef55327c3ea3ab0d3a806/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-26.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/570fbf448d126f1e4b3ef55327c3ea3ab0d3a806/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-26.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-26.c?ref=570fbf448d126f1e4b3ef55327c3ea3ab0d3a806", "patch": "@@ -29,7 +29,7 @@ int main ()\n }\n \n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { ! avr-*-* } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { ! { avr-*-* pru-*-* } } } } } */\n /* IBM Z does not require special alignment for vectorization.  */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { target { ! { avr-*-* s390*-*-* } } } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { target { ! { avr-*-* s390*-*-* } } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { target { ! { avr-*-* pru-*-* s390*-*-* } } } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { target { ! { avr-*-* pru-*-* s390*-*-* } } } } } */"}, {"sha": "c5f1b5aff1159adbc7fa652982d5d0b8fe14ad39", "filename": "gcc/testsuite/gcc.dg/tree-ssa/gen-vect-28.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/570fbf448d126f1e4b3ef55327c3ea3ab0d3a806/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-28.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/570fbf448d126f1e4b3ef55327c3ea3ab0d3a806/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-28.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-28.c?ref=570fbf448d126f1e4b3ef55327c3ea3ab0d3a806", "patch": "@@ -37,7 +37,7 @@ int main (void)\n }\n \n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { ! avr-*-* } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { ! { avr-*-* pru-*-* } } } } } */\n /* IBM Z does not require special alignment for vectorization.  */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { target { ! { avr-*-* s390*-*-* } } } } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { target { ! { avr-*-* s390*-*-* } } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { target { ! { avr-*-* pru-*-* s390*-*-* } } } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { target { ! { avr-*-* pru-*-* s390*-*-* } } } } } */"}, {"sha": "62d2b5049fd902047540b90a2ef79b789f903969", "filename": "gcc/testsuite/gcc.dg/tree-ssa/gen-vect-32.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/570fbf448d126f1e4b3ef55327c3ea3ab0d3a806/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/570fbf448d126f1e4b3ef55327c3ea3ab0d3a806/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fgen-vect-32.c?ref=570fbf448d126f1e4b3ef55327c3ea3ab0d3a806", "patch": "@@ -33,5 +33,5 @@ int main ()\n }\n \n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { ! avr-*-* } } } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { target { ! avr-*-* } } } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { ! { avr-*-* pru-*-* } } } } } */\n+/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" { target { ! { avr-*-* pru-*-* } } } } } */"}]}