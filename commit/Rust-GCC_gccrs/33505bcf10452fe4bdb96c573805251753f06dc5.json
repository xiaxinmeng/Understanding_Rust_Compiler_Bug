{"sha": "33505bcf10452fe4bdb96c573805251753f06dc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM1MDViY2YxMDQ1MmZlNGJkYjk2YzU3MzgwNTI1MTc1M2YwNmRjNQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-02-28T14:36:41Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-02-28T14:36:41Z"}, "message": "* config/i386/cygming.h (STACK_REALIGN_DEFAULT): Define.\n\nFrom-SVN: r233791", "tree": {"sha": "8f0bc9888d13dfe7476a3e4349c83c41aa8c7598", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f0bc9888d13dfe7476a3e4349c83c41aa8c7598"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33505bcf10452fe4bdb96c573805251753f06dc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33505bcf10452fe4bdb96c573805251753f06dc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33505bcf10452fe4bdb96c573805251753f06dc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33505bcf10452fe4bdb96c573805251753f06dc5/comments", "author": null, "committer": null, "parents": [{"sha": "524bfb1973cc043d0afb4a5e86c16d8309f0801a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/524bfb1973cc043d0afb4a5e86c16d8309f0801a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/524bfb1973cc043d0afb4a5e86c16d8309f0801a"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "4db03b62e8346b0c49873b3ccb0d91d6b5d677e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33505bcf10452fe4bdb96c573805251753f06dc5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33505bcf10452fe4bdb96c573805251753f06dc5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33505bcf10452fe4bdb96c573805251753f06dc5", "patch": "@@ -1,3 +1,7 @@\n+2016-02-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/i386/cygming.h (STACK_REALIGN_DEFAULT): Define.\n+\n 2016-02-27  Jeff Law  <law@redhat.com>\n \n \tRevert"}, {"sha": "9da473359a571a1fb5e0a48a9d0e3d0b856f7c9f", "filename": "gcc/config/i386/cygming.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33505bcf10452fe4bdb96c573805251753f06dc5/gcc%2Fconfig%2Fi386%2Fcygming.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33505bcf10452fe4bdb96c573805251753f06dc5/gcc%2Fconfig%2Fi386%2Fcygming.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygming.h?ref=33505bcf10452fe4bdb96c573805251753f06dc5", "patch": "@@ -39,6 +39,11 @@ along with GCC; see the file COPYING3.  If not see\n #undef MAX_STACK_ALIGNMENT\n #define MAX_STACK_ALIGNMENT  (TARGET_SEH ? 128 : MAX_OFILE_ALIGNMENT)\n \n+/* 32-bit Windows aligns the stack on a 4-byte boundary but SSE instructions\n+   may require 16-byte alignment.  */\n+#undef STACK_REALIGN_DEFAULT\n+#define STACK_REALIGN_DEFAULT TARGET_SSE\n+\n /* Support hooks for SEH.  */\n #undef  TARGET_ASM_UNWIND_EMIT\n #define TARGET_ASM_UNWIND_EMIT  i386_pe_seh_unwind_emit"}, {"sha": "835ee2bf13891bd9343a67ba145513ab5ca878e6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33505bcf10452fe4bdb96c573805251753f06dc5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33505bcf10452fe4bdb96c573805251753f06dc5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=33505bcf10452fe4bdb96c573805251753f06dc5", "patch": "@@ -1,3 +1,7 @@\n+2016-02-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.target/i386/stack-realign-win.c: New test.\n+\n 2016-02-28  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/60126"}, {"sha": "e27a565054295dc1f23849776e8c0e76e6383f14", "filename": "gcc/testsuite/gcc.target/i386/stack-realign-win.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33505bcf10452fe4bdb96c573805251753f06dc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fstack-realign-win.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33505bcf10452fe4bdb96c573805251753f06dc5/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fstack-realign-win.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fstack-realign-win.c?ref=33505bcf10452fe4bdb96c573805251753f06dc5", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-do compile { target *-*-mingw* *-*-cygwin* } } */\n+/* { dg-require-effective-target ia32 } */\n+/* { dg-options \"-msse -O\" } */\n+\n+extern void abort (void);\n+\n+typedef float __m128 __attribute__ ((__vector_size__ (16), __may_alias__));\n+\n+static __m128\n+load_m128 (float *e)\n+{\n+  return * (__m128 *) e;\n+}\n+\n+typedef union\n+{\n+  __m128  x;\n+  float a[4];\n+} union128;\n+\n+void test (void)\n+{\n+  union128 u;\n+  float e[4] __attribute__ ((aligned (16)))\n+    = {2134.3343, 1234.635654, 1.2234, 876.8976};\n+  int i;\n+\n+  u.x = load_m128 (e);\n+\n+  for (i = 0; i < 4; i++)\n+    if (u.a[i] != e[i])\n+      abort ();\n+}\n+\n+/* { dg-final { scan-assembler \"andl\\\\t\\\\$-16, %esp\" } } */"}]}