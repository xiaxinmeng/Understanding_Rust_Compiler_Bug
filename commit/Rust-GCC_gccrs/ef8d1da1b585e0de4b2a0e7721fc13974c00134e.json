{"sha": "ef8d1da1b585e0de4b2a0e7721fc13974c00134e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY4ZDFkYTFiNTg1ZTBkZTRiMmEwZTc3MjFmYzEzOTc0YzAwMTM0ZQ==", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2020-06-28T02:17:04Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2020-06-28T02:17:04Z"}, "message": "IFN: Fix mask_{load,store} optab support macros\n\nWhen I am working on IFNs for vector with length, I noticed that the\ncurrent optab support query for mask_load/mask_store looks unexpected.\nThe mask_load/mask_store requires two modes for convert_optab query,\nbut the macros direct_mask_{load,store}_optab_supported_p uses\ndirect_optab_supported_p which asserts type pair should have the same mode.\n\nI'm not sure whether we have some special reason here or just a typo,\nsince everything goes well now, mask_{load,store} optab check is mainly\nhandled by can_vec_mask_load_store_p.\n\nBut if we have some codes as below (eg: one checking for all IFNs finally)\n\n  tree_pair types = direct_internal_fn_types (ifn, call);\n  if(direct_internal_fn_supported_p (ifn, types, OPTIMIZE_FOR_SPEED) ...\n\nIt will cause ICE.\n\ngcc/ChangeLog:\n\n\t* internal-fn.c (direct_mask_load_optab_supported_p): Use\n\tconvert_optab_supported_p instead of direct_optab_supported_p.\n\t(direct_mask_store_optab_supported_p): Likewise.", "tree": {"sha": "a682c33f578ef9c95ef7244d398ad043bbe859ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a682c33f578ef9c95ef7244d398ad043bbe859ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef8d1da1b585e0de4b2a0e7721fc13974c00134e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef8d1da1b585e0de4b2a0e7721fc13974c00134e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef8d1da1b585e0de4b2a0e7721fc13974c00134e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef8d1da1b585e0de4b2a0e7721fc13974c00134e/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5771314d189cc38fa282c7f092ebaa9f1ec06db6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5771314d189cc38fa282c7f092ebaa9f1ec06db6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5771314d189cc38fa282c7f092ebaa9f1ec06db6"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "0be2eb4f0b3593a2a59a04e91fbd297d7b7d93f0", "filename": "gcc/internal-fn.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef8d1da1b585e0de4b2a0e7721fc13974c00134e/gcc%2Finternal-fn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef8d1da1b585e0de4b2a0e7721fc13974c00134e/gcc%2Finternal-fn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finternal-fn.c?ref=ef8d1da1b585e0de4b2a0e7721fc13974c00134e", "patch": "@@ -3213,11 +3213,11 @@ multi_vector_optab_supported_p (convert_optab optab, tree_pair types,\n #define direct_cond_unary_optab_supported_p direct_optab_supported_p\n #define direct_cond_binary_optab_supported_p direct_optab_supported_p\n #define direct_cond_ternary_optab_supported_p direct_optab_supported_p\n-#define direct_mask_load_optab_supported_p direct_optab_supported_p\n+#define direct_mask_load_optab_supported_p convert_optab_supported_p\n #define direct_load_lanes_optab_supported_p multi_vector_optab_supported_p\n #define direct_mask_load_lanes_optab_supported_p multi_vector_optab_supported_p\n #define direct_gather_load_optab_supported_p convert_optab_supported_p\n-#define direct_mask_store_optab_supported_p direct_optab_supported_p\n+#define direct_mask_store_optab_supported_p convert_optab_supported_p\n #define direct_store_lanes_optab_supported_p multi_vector_optab_supported_p\n #define direct_mask_store_lanes_optab_supported_p multi_vector_optab_supported_p\n #define direct_vec_cond_mask_optab_supported_p multi_vector_optab_supported_p"}]}