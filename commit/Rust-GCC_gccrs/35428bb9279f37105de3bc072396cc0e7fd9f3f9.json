{"sha": "35428bb9279f37105de3bc072396cc0e7fd9f3f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU0MjhiYjkyNzlmMzcxMDVkZTNiYzA3MjM5NmNjMGU3ZmQ5ZjNmOQ==", "commit": {"author": {"name": "Jeffrey Oldham", "email": "oldham@codesourcery.com", "date": "2001-07-05T20:54:29Z"}, "committer": {"name": "Jeffrey D. Oldham", "email": "oldham@gcc.gnu.org", "date": "2001-07-05T20:54:29Z"}, "message": "flow.c: Reverse Jan Hubicka's patch of 02July2001.\n\n2001-07-05  Jeffrey Oldham  <oldham@codesourcery.com>\n\n\t* flow.c: Reverse Jan Hubicka's patch of 02July2001.\n\t(try_redirect_by_replacing_jump): Reverse updating properly the\n\tcount and frequency information.  Reverse removing cc0 setter.\n\t(forwarder_block_p): Reverse fixing for fallthru blocks.\n\nFrom-SVN: r43788", "tree": {"sha": "fe329ef8fc417ef0fb8b9a3eb11bde029ea7f519", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe329ef8fc417ef0fb8b9a3eb11bde029ea7f519"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35428bb9279f37105de3bc072396cc0e7fd9f3f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35428bb9279f37105de3bc072396cc0e7fd9f3f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35428bb9279f37105de3bc072396cc0e7fd9f3f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35428bb9279f37105de3bc072396cc0e7fd9f3f9/comments", "author": null, "committer": null, "parents": [{"sha": "0259b07a28f451df6f509ac9d0be1cfef134487f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0259b07a28f451df6f509ac9d0be1cfef134487f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0259b07a28f451df6f509ac9d0be1cfef134487f"}], "stats": {"total": 44, "additions": 16, "deletions": 28}, "files": [{"sha": "3808c1d87941e3b98dc3f4919744bc84a1598bdc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35428bb9279f37105de3bc072396cc0e7fd9f3f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35428bb9279f37105de3bc072396cc0e7fd9f3f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35428bb9279f37105de3bc072396cc0e7fd9f3f9", "patch": "@@ -1,3 +1,10 @@\n+2001-07-05  Jeffrey Oldham  <oldham@codesourcery.com>\n+\n+\t* flow.c: Reverse Jan Hubicka's patch of 02July2001.\n+\t(try_redirect_by_replacing_jump): Reverse updating properly the\n+\tcount and frequency information.  Reverse removing cc0 setter.\n+\t(forwarder_block_p): Reverse fixing for fallthru blocks.\n+\n 2001-07-05  DJ Delorie  <dj@redhat.com>\n \n \t* gcc.c (TARGET_OPTION_TRANSLATE_TABLE): New."}, {"sha": "ab1bb7f12fa31fd763f15fbe17c6bdeb9bf1aac7", "filename": "gcc/flow.c", "status": "modified", "additions": 9, "deletions": 28, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35428bb9279f37105de3bc072396cc0e7fd9f3f9/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35428bb9279f37105de3bc072396cc0e7fd9f3f9/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=35428bb9279f37105de3bc072396cc0e7fd9f3f9", "patch": "@@ -1597,19 +1597,18 @@ static bool\n forwarder_block_p (bb)\n      basic_block bb;\n {\n-  rtx insn = bb->head;\n+  rtx insn;\n   if (bb == EXIT_BLOCK_PTR || bb == ENTRY_BLOCK_PTR\n       || !bb->succ || bb->succ->succ_next)\n     return false;\n \n-  while (insn != bb->end)\n-    {\n-      if (active_insn_p (insn))\n-\treturn false;\n-      insn = NEXT_INSN (insn);\n-    }\n-  return (!active_insn_p (insn)\n-\t  || (GET_CODE (insn) == JUMP_INSN && onlyjump_p (insn)));\n+  insn = next_active_insn (bb->head);\n+  if (!insn)\n+    return false;\n+  if (GET_CODE (insn) == CODE_LABEL\n+      || (GET_CODE (insn) == JUMP_INSN && onlyjump_p (insn)))\n+    return true;\n+  return false;\n }\n \n /* Return nonzero if we can reach target from src by falling trought.  */\n@@ -1700,8 +1699,6 @@ try_redirect_by_replacing_jump (e, target)\n     e->flags = EDGE_FALLTHRU;\n   else\n     e->flags = 0;\n-  e->probability = REG_BR_PROB_BASE;\n-  e->count = src->count;\n \n   /* Fixup barriers.  */\n   barrier = next_nonnote_insn (insn);\n@@ -1710,20 +1707,6 @@ try_redirect_by_replacing_jump (e, target)\n   else if (!fallthru && GET_CODE (barrier) != BARRIER)\n     emit_barrier_after (insn);\n \n-  /* In case we've zapped an conditional jump, we need to kill the cc0\n-     setter too if available.  */\n-#ifdef HAVE_cc0\n-  insn = src->end;\n-  if (GET_CODE (insn) == JUMP_INSN)\n-    insn = prev_nonnote_insn (insn);\n-  if (sets_cc0_p (insn))\n-    {\n-      if (insn == src->end)\n-\tsrc->end = PREV_INSN (insn);\n-      flow_delete_insn (insn);\n-    }\n-#endif\n-\n   if (e->dest != target)\n     redirect_edge_succ (e, target);\n   return true;\n@@ -1783,7 +1766,7 @@ redirect_edge_and_branch (e, target)\n       for (j = GET_NUM_ELEM (vec) - 1; j >= 0; --j)\n \tif (XEXP (RTVEC_ELT (vec, j), 0) == old_label)\n \t  {\n-\t    RTVEC_ELT (vec, j) = gen_rtx_LABEL_REF (Pmode, new_label);\n+\t    RTVEC_ELT (vec, j) = gen_rtx_LABEL_REF (VOIDmode, new_label);\n \t    --LABEL_NUSES (old_label);\n \t    ++LABEL_NUSES (new_label);\n \t  }\n@@ -1832,8 +1815,6 @@ redirect_edge_and_branch (e, target)\n       if (s)\n \t{\n \t  s->flags |= e->flags;\n-\t  s->probability += e->probability;\n-\t  s->count += e->count;\n \t  remove_edge (e);\n \t}\n       else"}]}