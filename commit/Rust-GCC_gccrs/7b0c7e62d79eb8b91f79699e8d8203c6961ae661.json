{"sha": "7b0c7e62d79eb8b91f79699e8d8203c6961ae661", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IwYzdlNjJkNzllYjhiOTFmNzk2OTllOGQ4MjAzYzY5NjFhZTY2MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "1999-12-06T10:09:20Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "1999-12-06T10:09:20Z"}, "message": "* config/sparc/sparc.h (MUST_PASS_IN_STACK): New macro.\n\nFrom-SVN: r30796", "tree": {"sha": "0e15f7c16d9b7932decfae636524deecad3fb07c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e15f7c16d9b7932decfae636524deecad3fb07c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b0c7e62d79eb8b91f79699e8d8203c6961ae661", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b0c7e62d79eb8b91f79699e8d8203c6961ae661", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b0c7e62d79eb8b91f79699e8d8203c6961ae661", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b0c7e62d79eb8b91f79699e8d8203c6961ae661/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6d6365b282201fe82fe2911abb705bd87808e23d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d6365b282201fe82fe2911abb705bd87808e23d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d6365b282201fe82fe2911abb705bd87808e23d"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "c2126c08071a1fe752ab9e556d2d7f7d08e0dbc9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b0c7e62d79eb8b91f79699e8d8203c6961ae661/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b0c7e62d79eb8b91f79699e8d8203c6961ae661/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b0c7e62d79eb8b91f79699e8d8203c6961ae661", "patch": "@@ -1,3 +1,7 @@\n+1999-12-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/sparc/sparc.h (MUST_PASS_IN_STACK): New macro.\n+\n 1999-12-05  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/sparc/sparc.c (sparc64_initialize_trampoline): Use gen_flushdi."}, {"sha": "28371f48691a2bd27c8b4d78c1130103431de66c", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b0c7e62d79eb8b91f79699e8d8203c6961ae661/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b0c7e62d79eb8b91f79699e8d8203c6961ae661/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=7b0c7e62d79eb8b91f79699e8d8203c6961ae661", "patch": "@@ -1744,6 +1744,13 @@ init_cumulative_args (& (CUM), (FNTYPE), (LIBNAME), (INDIRECT));\n #define FUNCTION_ARG_ADVANCE(CUM, MODE, TYPE, NAMED) \\\n function_arg_advance (& (CUM), (MODE), (TYPE), (NAMED))\n \n+/* Nonzero if we do not know how to pass TYPE solely in registers.  */\n+\n+#define MUST_PASS_IN_STACK(MODE,TYPE)\t\t\t\\\n+  ((TYPE) != 0\t\t\t\t\t\t\\\n+   && (TREE_CODE (TYPE_SIZE (TYPE)) != INTEGER_CST\t\\\n+       || TREE_ADDRESSABLE (TYPE)))\n+\n /* Determine where to put an argument to a function.\n    Value is zero to push the argument on the stack,\n    or a hard register in which to store the argument."}]}