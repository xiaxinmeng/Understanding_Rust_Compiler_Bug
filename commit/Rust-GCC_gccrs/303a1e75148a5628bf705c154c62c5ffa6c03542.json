{"sha": "303a1e75148a5628bf705c154c62c5ffa6c03542", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAzYTFlNzUxNDhhNTYyOGJmNzA1YzE1NGM2MmM1ZmZhNmMwMzU0Mg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-03-01T16:00:34Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-03-01T16:00:34Z"}, "message": "PR c++/71569 - ICE with redundant args on member variable template.\n\n\t* decl.c (start_decl): Handle partial specialization of member\n\tvariable template.\n\t* pt.c (determine_specialization): Allow partial specialization\n\tof member variable template without specializing enclosing class.\n\t(process_partial_specialization): Improve error message.\n\nCo-Authored-By: Alexandre Oliva <aoliva@redhat.com>\n\nFrom-SVN: r258102", "tree": {"sha": "268ac9d8cc511d1f9c3009f4e88be1836fe97011", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/268ac9d8cc511d1f9c3009f4e88be1836fe97011"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/303a1e75148a5628bf705c154c62c5ffa6c03542", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/303a1e75148a5628bf705c154c62c5ffa6c03542", "html_url": "https://github.com/Rust-GCC/gccrs/commit/303a1e75148a5628bf705c154c62c5ffa6c03542", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/303a1e75148a5628bf705c154c62c5ffa6c03542/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "99daa7a9eeffa553d3fd3b8dcf6dd721441921c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99daa7a9eeffa553d3fd3b8dcf6dd721441921c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99daa7a9eeffa553d3fd3b8dcf6dd721441921c6"}], "stats": {"total": 66, "additions": 52, "deletions": 14}, "files": [{"sha": "a6deacb13f1abddc7f7060e17c09809ccd2b32eb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303a1e75148a5628bf705c154c62c5ffa6c03542/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303a1e75148a5628bf705c154c62c5ffa6c03542/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=303a1e75148a5628bf705c154c62c5ffa6c03542", "patch": "@@ -1,3 +1,13 @@\n+2018-03-01  Jason Merrill  <jason@redhat.com>\n+\t    Alexandre Oliva <aoliva@redhat.com>\n+\n+\tPR c++/71569 - ICE with redundant args on member variable template.\n+\t* decl.c (start_decl): Handle partial specialization of member\n+\tvariable template.\n+\t* pt.c (determine_specialization): Allow partial specialization\n+\tof member variable template without specializing enclosing class.\n+\t(process_partial_specialization): Improve error message.\n+\n 2018-02-28  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/71784 - ICE with ref-qualifier and explicit specialization."}, {"sha": "db64d12c95a5c0d7fbd9c573dd2ea44f0f0f3c27", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303a1e75148a5628bf705c154c62c5ffa6c03542/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303a1e75148a5628bf705c154c62c5ffa6c03542/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=303a1e75148a5628bf705c154c62c5ffa6c03542", "patch": "@@ -5080,19 +5080,17 @@ start_decl (const cp_declarator *declarator,\n \t  if (field == NULL_TREE\n \t      || !(VAR_P (field) || variable_template_p (field)))\n \t    error (\"%q+#D is not a static data member of %q#T\", decl, context);\n+\t  else if (variable_template_p (field)\n+\t\t   && (DECL_LANG_SPECIFIC (decl)\n+\t\t       && DECL_TEMPLATE_SPECIALIZATION (decl)))\n+\t    /* OK, specialization was already checked.  */;\n \t  else if (variable_template_p (field) && !this_tmpl)\n \t    {\n-\t      if (DECL_LANG_SPECIFIC (decl)\n-\t\t  && DECL_TEMPLATE_SPECIALIZATION (decl))\n-\t\t/* OK, specialization was already checked.  */;\n-\t      else\n-\t\t{\n-\t\t  error_at (DECL_SOURCE_LOCATION (decl),\n-\t\t\t    \"non-member-template declaration of %qD\", decl);\n-\t\t  inform (DECL_SOURCE_LOCATION (field), \"does not match \"\n-\t\t\t  \"member template declaration here\");\n-\t\t  return error_mark_node;\n-\t\t}\n+\t      error_at (DECL_SOURCE_LOCATION (decl),\n+\t\t\t\"non-member-template declaration of %qD\", decl);\n+\t      inform (DECL_SOURCE_LOCATION (field), \"does not match \"\n+\t\t      \"member template declaration here\");\n+\t      return error_mark_node;\n \t    }\n \t  else\n \t    {"}, {"sha": "e07d77bb87ed9100549130a268a52f6b85f78811", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303a1e75148a5628bf705c154c62c5ffa6c03542/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303a1e75148a5628bf705c154c62c5ffa6c03542/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=303a1e75148a5628bf705c154c62c5ffa6c03542", "patch": "@@ -2060,7 +2060,8 @@ determine_specialization (tree template_id,\n   /* We shouldn't be specializing a member template of an\n      unspecialized class template; we already gave an error in\n      check_specialization_scope, now avoid crashing.  */\n-  if (template_count && DECL_CLASS_SCOPE_P (decl)\n+  if (!VAR_P (decl)\n+      && template_count && DECL_CLASS_SCOPE_P (decl)\n       && template_class_depth (DECL_CONTEXT (decl)) > 0)\n     {\n       gcc_assert (errorcount);\n@@ -4840,10 +4841,13 @@ process_partial_specialization (tree decl)\n     {\n       if (!flag_concepts)\n         error (\"partial specialization %q+D does not specialize \"\n-\t       \"any template arguments\", decl);\n+\t       \"any template arguments; to define the primary template, \"\n+\t       \"remove the template argument list\", decl);\n       else\n         error (\"partial specialization %q+D does not specialize any \"\n-\t       \"template arguments and is not more constrained than\", decl);\n+\t       \"template arguments and is not more constrained than \"\n+\t       \"the primary template; to define the primary template, \"\n+\t       \"remove the template argument list\", decl);\n       inform (DECL_SOURCE_LOCATION (maintmpl), \"primary template here\");\n     }\n "}, {"sha": "f9095f61e67e29331ff8c7c27c17492859860954", "filename": "gcc/testsuite/g++.dg/cpp1y/var-templ58.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303a1e75148a5628bf705c154c62c5ffa6c03542/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ58.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303a1e75148a5628bf705c154c62c5ffa6c03542/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ58.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ58.C?ref=303a1e75148a5628bf705c154c62c5ffa6c03542", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/71569\n+// { dg-do compile { target c++14 } }\n+\n+template <class T>\n+struct A {\n+  template <class U>\n+  static const U u;\n+};\n+\n+template <class T>\n+template <class U>\n+const U A<T>::u<U> = 0;\t// { dg-error \"does not specialize\" }"}, {"sha": "850a2c9689c03a22256f1251159b796e97a4ed01", "filename": "gcc/testsuite/g++.dg/cpp1y/var-templ58a.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/303a1e75148a5628bf705c154c62c5ffa6c03542/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ58a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/303a1e75148a5628bf705c154c62c5ffa6c03542/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ58a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ58a.C?ref=303a1e75148a5628bf705c154c62c5ffa6c03542", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/71569\n+// { dg-do compile { target c++14 } }\n+\n+template <class T>\n+struct A {\n+  template <class U>\n+  static const U u;\n+};\n+\n+template <class T>\n+template <class U>\n+const U* A<T>::u<U*> = 0;\n+\n+const int *p = A<char>::u<int*>;"}]}