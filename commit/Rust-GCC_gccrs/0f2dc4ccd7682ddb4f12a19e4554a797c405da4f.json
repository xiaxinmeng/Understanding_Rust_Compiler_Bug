{"sha": "0f2dc4ccd7682ddb4f12a19e4554a797c405da4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGYyZGM0Y2NkNzY4MmRkYjRmMTJhMTllNDU1NGE3OTdjNDA1ZGE0Zg==", "commit": {"author": {"name": "Dwarakanath Rajagopal", "email": "dwarak.rajagopal@amd.com", "date": "2008-12-12T16:53:27Z"}, "committer": {"name": "Dwarakanath Rajagopal", "email": "dwarak@gcc.gnu.org", "date": "2008-12-12T16:53:27Z"}, "message": "x86intrin.h: New header file to support all x86 intrinsics\n\n2008-12-12  Dwarakanath Rajagopal  <dwarak.rajagopal@amd.com>\n\n\t* config/i386/x86intrin.h: New header file to support all x86 \n\tintrinsics\n\t* config.gcc (extra_headers): For x86 and x86-64, add x86intrin.h\n\nFrom-SVN: r142713", "tree": {"sha": "ab1115a89d33d187e6f50e896d9a30fb8f81cb1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab1115a89d33d187e6f50e896d9a30fb8f81cb1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f2dc4ccd7682ddb4f12a19e4554a797c405da4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f2dc4ccd7682ddb4f12a19e4554a797c405da4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f2dc4ccd7682ddb4f12a19e4554a797c405da4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f2dc4ccd7682ddb4f12a19e4554a797c405da4f/comments", "author": null, "committer": null, "parents": [{"sha": "c5245af511b0747b8d48f21663dca86d81570b95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5245af511b0747b8d48f21663dca86d81570b95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5245af511b0747b8d48f21663dca86d81570b95"}], "stats": {"total": 85, "additions": 83, "deletions": 2}, "files": [{"sha": "c386069bd3dabc7a985323dcf7e09746a3b9d971", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f2dc4ccd7682ddb4f12a19e4554a797c405da4f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f2dc4ccd7682ddb4f12a19e4554a797c405da4f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f2dc4ccd7682ddb4f12a19e4554a797c405da4f", "patch": "@@ -1,3 +1,9 @@\n+2008-12-12  Dwarakanath Rajagopal  <dwarak.rajagopal@amd.com>\n+\n+\t* config/i386/x86intrin.h: New header file to support all x86 \n+\tintrinsics\n+\t* config.gcc (extra_headers): For x86 and x86-64, add x86intrin.h\n+\t\n 2008-12-12  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/38402"}, {"sha": "ba44a95188cec43d1dcb855a1b16e10e8592532a", "filename": "gcc/config.gcc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f2dc4ccd7682ddb4f12a19e4554a797c405da4f/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f2dc4ccd7682ddb4f12a19e4554a797c405da4f/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=0f2dc4ccd7682ddb4f12a19e4554a797c405da4f", "patch": "@@ -298,7 +298,8 @@ i[34567]86-*-*)\n \textra_headers=\"cpuid.h mmintrin.h mm3dnow.h xmmintrin.h emmintrin.h\n \t\t       pmmintrin.h tmmintrin.h ammintrin.h smmintrin.h\n \t\t       nmmintrin.h bmmintrin.h mmintrin-common.h\n-\t\t       wmmintrin.h immintrin.h avxintrin.h cross-stdarg.h\"\n+\t\t       wmmintrin.h immintrin.h x86intrin.h avxintrin.h \n+\t\t       cross-stdarg.h\"\n \t;;\n x86_64-*-*)\n \tcpu_type=i386\n@@ -307,7 +308,8 @@ x86_64-*-*)\n \textra_headers=\"cpuid.h mmintrin.h mm3dnow.h xmmintrin.h emmintrin.h\n \t\t       pmmintrin.h tmmintrin.h ammintrin.h smmintrin.h\n \t\t       nmmintrin.h bmmintrin.h mmintrin-common.h\n-\t\t       wmmintrin.h immintrin.h avxintrin.h cross-stdarg.h\"\n+\t\t       wmmintrin.h immintrin.h x86intrin.h avxintrin.h \n+\t\t       cross-stdarg.h\"\n \tneed_64bit_hwint=yes\n \t;;\n ia64-*-*)"}, {"sha": "ab188690f547d36609d0a989cd43e43dc2440aab", "filename": "gcc/config/i386/x86intrin.h", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f2dc4ccd7682ddb4f12a19e4554a797c405da4f/gcc%2Fconfig%2Fi386%2Fx86intrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f2dc4ccd7682ddb4f12a19e4554a797c405da4f/gcc%2Fconfig%2Fi386%2Fx86intrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86intrin.h?ref=0f2dc4ccd7682ddb4f12a19e4554a797c405da4f", "patch": "@@ -0,0 +1,73 @@\n+/* Copyright (C) 2008 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   GCC is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING.  If not, write to\n+   the Free Software Foundation, 59 Temple Place - Suite 330,\n+   Boston, MA 02111-1307, USA.  */\n+\n+/* As a special exception, if you include this header file into source\n+   files compiled by GCC, this header file does not by itself cause\n+   the resulting executable to be covered by the GNU General Public\n+   License.  This exception does not however invalidate any other\n+   reasons why the executable file might be covered by the GNU General\n+   Public License.  */\n+\n+#ifndef _X86INTRIN_H_INCLUDED\n+#define _X86INTRIN_H_INCLUDED\n+\n+#ifdef __MMX__\n+#include <mmintrin.h>\n+#endif\n+\n+#ifdef __SSE__\n+#include <xmmintrin.h>\n+#endif\n+\n+#ifdef __SSE2__\n+#include <emmintrin.h>\n+#endif\n+\n+#ifdef __SSE3__\n+#include <pmmintrin.h>\n+#endif\n+\n+#ifdef __SSSE3__\n+#include <tmmintrin.h>\n+#endif\n+\n+#ifdef __SSE4a__\n+#include <ammintrin.h>\n+#endif\n+\n+#if defined (__SSE4_2__) || defined (__SSE4_1__)\n+#include <smmintrin.h>\n+#endif\n+\n+#ifdef __SSE5__\n+#include <bmmintrin.h>\n+#endif\n+\n+#if defined (__AES__) || defined (__PCLMUL__)\n+#include <wmmintrin.h>\n+#endif\n+\n+/* For including AVX instructions */\n+#include <immintrin.h>\n+\n+#ifdef __3dNOW__\n+#include <mm3dnow.h>\n+#endif\n+\n+#endif /* _X86INTRIN_H_INCLUDED */"}]}