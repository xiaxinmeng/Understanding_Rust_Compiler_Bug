{"sha": "67caf5381c2c43d71f118e2f64474e012581eaf9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdjYWY1MzgxYzJjNDNkNzFmMTE4ZTJmNjQ0NzRlMDEyNTgxZWFmOQ==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@ubuntu.com", "date": "2015-01-27T16:28:35Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2015-01-27T16:28:35Z"}, "message": "sendmsg.c: Add prototypes for __objc_get_forward_imp and get_imp.\n\n2015-01-27  Matthias Klose  <doko@ubuntu.com>\n\n        * sendmsg.c: Add prototypes for __objc_get_forward_imp and get_imp.\n\nFrom-SVN: r220175", "tree": {"sha": "bdcdc62face6cb0b22c90a3c07078e46a97f9208", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdcdc62face6cb0b22c90a3c07078e46a97f9208"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67caf5381c2c43d71f118e2f64474e012581eaf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67caf5381c2c43d71f118e2f64474e012581eaf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67caf5381c2c43d71f118e2f64474e012581eaf9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67caf5381c2c43d71f118e2f64474e012581eaf9/comments", "author": {"login": "doko42", "id": 11258518, "node_id": "MDQ6VXNlcjExMjU4NTE4", "avatar_url": "https://avatars.githubusercontent.com/u/11258518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doko42", "html_url": "https://github.com/doko42", "followers_url": "https://api.github.com/users/doko42/followers", "following_url": "https://api.github.com/users/doko42/following{/other_user}", "gists_url": "https://api.github.com/users/doko42/gists{/gist_id}", "starred_url": "https://api.github.com/users/doko42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doko42/subscriptions", "organizations_url": "https://api.github.com/users/doko42/orgs", "repos_url": "https://api.github.com/users/doko42/repos", "events_url": "https://api.github.com/users/doko42/events{/privacy}", "received_events_url": "https://api.github.com/users/doko42/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "82a94471665e11be523bfc3f73504293a1a0884c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82a94471665e11be523bfc3f73504293a1a0884c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82a94471665e11be523bfc3f73504293a1a0884c"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "e800cbeffd1cf25ef9a3521f95d5e48492927216", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67caf5381c2c43d71f118e2f64474e012581eaf9/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67caf5381c2c43d71f118e2f64474e012581eaf9/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=67caf5381c2c43d71f118e2f64474e012581eaf9", "patch": "@@ -1,3 +1,7 @@\n+2015-01-27  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* sendmsg.c: Add prototypes for __objc_get_forward_imp and get_imp.\n+\n 2015-01-09  Dimitris Papavasiliou  <dpapavas@gmail.com>\n \n \tPR libobjc/51891"}, {"sha": "8e347dfede3e8eb81e221c8488d64c633fdf5f2a", "filename": "libobjc/sendmsg.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67caf5381c2c43d71f118e2f64474e012581eaf9/libobjc%2Fsendmsg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67caf5381c2c43d71f118e2f64474e012581eaf9/libobjc%2Fsendmsg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fsendmsg.c?ref=67caf5381c2c43d71f118e2f64474e012581eaf9", "patch": "@@ -104,6 +104,10 @@ static struct objc_method * search_for_method_in_hierarchy (Class class, SEL sel\n struct objc_method * search_for_method_in_list (struct objc_method_list * list, SEL op);\n id nil_method (id, SEL);\n \n+/* Make sure this inline function is exported regardless of GNU89 or C99\n+   inlining semantics as it is part of the libobjc ABI.  */\n+extern IMP __objc_get_forward_imp (id, SEL);\n+\n /* Given a selector, return the proper forwarding implementation.  */\n inline\n IMP\n@@ -320,6 +324,10 @@ get_implementation (id receiver, Class class, SEL sel)\n   return res;\n }\n \n+/* Make sure this inline function is exported regardless of GNU89 or C99\n+   inlining semantics as it is part of the libobjc ABI.  */\n+extern IMP get_imp (Class, SEL);\n+\n inline\n IMP\n get_imp (Class class, SEL sel)"}]}