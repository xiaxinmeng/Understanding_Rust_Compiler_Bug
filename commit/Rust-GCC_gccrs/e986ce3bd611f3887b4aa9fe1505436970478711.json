{"sha": "e986ce3bd611f3887b4aa9fe1505436970478711", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk4NmNlM2JkNjExZjM4ODdiNGFhOWZlMTUwNTQzNjk3MDQ3ODcxMQ==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2019-12-18T16:11:52Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wilco@gcc.gnu.org", "date": "2019-12-18T16:11:52Z"}, "message": "[AArch64] Fixup core tunings\n\nSeveral tuning settings in cores.def are not consistent.\nSet the tuning for Cortex-A76AE and Cortex-A77 to neoversen1 so\nit is the same as for Cortex-A76 and Neoverse N1.\nSet the tuning for Neoverse E1 to cortexa73 so it's the same as for\nCortex-A65. Set the scheduler for Cortex-A65 and Cortex-A65AE to\ncortexa53.\n\n    gcc/\n\t* config/aarch64/aarch64-cores.def: \n\t(\"cortex-a76ae\"): Use neoversen1 tuning.\n\t(\"cortex-a77\"): Likewise.\n\t(\"cortex-a65\"): Use cortexa53 scheduler.\n\t(\"cortex-a65ae\"): Likewise.\n\t(\"neoverse-e1\"): Use cortexa73 tuning.\n\nFrom-SVN: r279526", "tree": {"sha": "0ae98d14f2fe990c8c85353dc542cca8e1f0d806", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ae98d14f2fe990c8c85353dc542cca8e1f0d806"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e986ce3bd611f3887b4aa9fe1505436970478711", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e986ce3bd611f3887b4aa9fe1505436970478711", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e986ce3bd611f3887b4aa9fe1505436970478711", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e986ce3bd611f3887b4aa9fe1505436970478711/comments", "author": null, "committer": null, "parents": [{"sha": "8bda7ce8ec8b5c61b03082d76b5ce33b14a7288a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bda7ce8ec8b5c61b03082d76b5ce33b14a7288a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bda7ce8ec8b5c61b03082d76b5ce33b14a7288a"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "4e969790714b4086ce06ca27a1a8598b3386bb66", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e986ce3bd611f3887b4aa9fe1505436970478711/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e986ce3bd611f3887b4aa9fe1505436970478711/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e986ce3bd611f3887b4aa9fe1505436970478711", "patch": "@@ -1,3 +1,12 @@\n+2019-12-18  Wilco Dijkstra  <wdijkstr@arm.com>\n+\n+\t* config/aarch64/aarch64-cores.def: \n+\t(\"cortex-a76ae\"): Use neoversen1 tuning.\n+\t(\"cortex-a77\"): Likewise.\n+\t(\"cortex-a65\"): Use cortexa53 scheduler.\n+\t(\"cortex-a65ae\"): Likewise.\n+\t(\"neoverse-e1\"): Use cortexa73 tuning.\n+\n 2019-12-18  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/92971"}, {"sha": "d170253c6eddca87f8b9f4f7fcc4692695ef83fb", "filename": "gcc/config/aarch64/aarch64-cores.def", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e986ce3bd611f3887b4aa9fe1505436970478711/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e986ce3bd611f3887b4aa9fe1505436970478711/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def?ref=e986ce3bd611f3887b4aa9fe1505436970478711", "patch": "@@ -101,13 +101,13 @@ AARCH64_CORE(\"thunderx2t99\",  thunderx2t99,  thunderx2t99, 8_1A,  AARCH64_FL_FOR\n AARCH64_CORE(\"cortex-a55\",  cortexa55, cortexa53, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD, cortexa53, 0x41, 0xd05, -1)\n AARCH64_CORE(\"cortex-a75\",  cortexa75, cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD, cortexa73, 0x41, 0xd0a, -1)\n AARCH64_CORE(\"cortex-a76\",  cortexa76, cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD, neoversen1, 0x41, 0xd0b, -1)\n-AARCH64_CORE(\"cortex-a76ae\",  cortexa76ae, cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD | AARCH64_FL_SSBS, cortexa72, 0x41, 0xd0e, -1)\n-AARCH64_CORE(\"cortex-a77\",  cortexa77, cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD | AARCH64_FL_SSBS, cortexa72, 0x41, 0xd0d, -1)\n-AARCH64_CORE(\"cortex-a65\",  cortexa65, cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD | AARCH64_FL_SSBS, cortexa73, 0x41, 0xd06, -1)\n-AARCH64_CORE(\"cortex-a65ae\",  cortexa65ae, cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD | AARCH64_FL_SSBS, cortexa73, 0x41, 0xd43, -1)\n+AARCH64_CORE(\"cortex-a76ae\",  cortexa76ae, cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD | AARCH64_FL_SSBS, neoversen1, 0x41, 0xd0e, -1)\n+AARCH64_CORE(\"cortex-a77\",  cortexa77, cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD | AARCH64_FL_SSBS, neoversen1, 0x41, 0xd0d, -1)\n+AARCH64_CORE(\"cortex-a65\",  cortexa65, cortexa53, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD | AARCH64_FL_SSBS, cortexa73, 0x41, 0xd06, -1)\n+AARCH64_CORE(\"cortex-a65ae\",  cortexa65ae, cortexa53, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD | AARCH64_FL_SSBS, cortexa73, 0x41, 0xd43, -1)\n AARCH64_CORE(\"ares\",  ares, cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD | AARCH64_FL_PROFILE, neoversen1, 0x41, 0xd0c, -1)\n AARCH64_CORE(\"neoverse-n1\",  neoversen1, cortexa57, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD | AARCH64_FL_PROFILE, neoversen1, 0x41, 0xd0c, -1)\n-AARCH64_CORE(\"neoverse-e1\",  neoversee1, cortexa53, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD | AARCH64_FL_SSBS, cortexa53, 0x41, 0xd4a, -1)\n+AARCH64_CORE(\"neoverse-e1\",  neoversee1, cortexa53, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD | AARCH64_FL_SSBS, cortexa73, 0x41, 0xd4a, -1)\n \n /* HiSilicon ('H') cores. */\n AARCH64_CORE(\"tsv110\",  tsv110, tsv110, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_CRYPTO | AARCH64_FL_F16 | AARCH64_FL_AES | AARCH64_FL_SHA2, tsv110,   0x48, 0xd01, -1)\n@@ -127,6 +127,6 @@ AARCH64_CORE(\"cortex-a73.cortex-a53\",  cortexa73cortexa53, cortexa53, 8A,  AARCH\n /* ARM DynamIQ big.LITTLE configurations.  */\n \n AARCH64_CORE(\"cortex-a75.cortex-a55\",  cortexa75cortexa55, cortexa53, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD, cortexa73, 0x41, AARCH64_BIG_LITTLE (0xd0a, 0xd05), -1)\n-AARCH64_CORE(\"cortex-a76.cortex-a55\",  cortexa76cortexa55, cortexa53, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD, cortexa72, 0x41, AARCH64_BIG_LITTLE (0xd0b, 0xd05), -1)\n+AARCH64_CORE(\"cortex-a76.cortex-a55\",  cortexa76cortexa55, cortexa53, 8_2A,  AARCH64_FL_FOR_ARCH8_2 | AARCH64_FL_F16 | AARCH64_FL_RCPC | AARCH64_FL_DOTPROD, neoversen1, 0x41, AARCH64_BIG_LITTLE (0xd0b, 0xd05), -1)\n \n #undef AARCH64_CORE"}]}