{"sha": "f59280cf80e22bf30bcbb173e9f100959e5ed768", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU5MjgwY2Y4MGUyMmJmMzBiY2JiMTczZTlmMTAwOTU5ZTVlZDc2OA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-02-27T13:45:34Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-02-27T13:45:34Z"}, "message": "i386.md (*movabs<mode>_1): Fix operand 1 constraints.\n\n\t* config/i386/i386.md (*movabs<mode>_1): Fix operand 1 constraints.\n\nFrom-SVN: r184597", "tree": {"sha": "ecd06d9dba8f6630a623d37a0b1e59f5dab592ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecd06d9dba8f6630a623d37a0b1e59f5dab592ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f59280cf80e22bf30bcbb173e9f100959e5ed768", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f59280cf80e22bf30bcbb173e9f100959e5ed768", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f59280cf80e22bf30bcbb173e9f100959e5ed768", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f59280cf80e22bf30bcbb173e9f100959e5ed768/comments", "author": null, "committer": null, "parents": [{"sha": "d2d6bcce98d1960d52d7dbcb5344df824b07ecce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2d6bcce98d1960d52d7dbcb5344df824b07ecce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2d6bcce98d1960d52d7dbcb5344df824b07ecce"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "54e112815578d4247a541f1905579c80c93f0455", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f59280cf80e22bf30bcbb173e9f100959e5ed768/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f59280cf80e22bf30bcbb173e9f100959e5ed768/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f59280cf80e22bf30bcbb173e9f100959e5ed768", "patch": "@@ -1,3 +1,7 @@\n+2012-02-27  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*movabs<mode>_1): Fix operand 1 constraints.\n+\n 2012-02-27  Matthew Gretton-Dann  <matthew.gretton-dann@arm.com>\n \n \tRevert:\n@@ -20,8 +24,7 @@\n \n 2012-02-26  Walter Lee  <walt@tilera.com>\n \n-\t* config/tilegx/tilegx.c (match_pcrel_step2): Fix instruction\n-\tpattern.\n+\t* config/tilegx/tilegx.c (match_pcrel_step2): Fix instruction pattern.\n \t(replace_mov_pcrel_step2): Ditto.\n \n 2012-02-25  Alexandre Oliva  <aoliva@redhat.com>\n@@ -56,8 +59,7 @@\n 2012-02-24  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/52361\n-\t* gimple.c (walk_gimple_op): Use predicates with less redundant\n-\ttests.\n+\t* gimple.c (walk_gimple_op): Use predicates with less redundant tests.\n \t(is_gimple_reg_type): Move inline ...\n \t* gimple.h (is_gimple_reg_type): ... here.\n \n@@ -72,8 +74,7 @@\n \n \tPR middle-end/52355\n \t* fold-const.c (fold_addr_of_array_ref_difference): New function.\n-\t(fold_binary_loc): Use it to extend the existing &a[i] - &a[j]\n-\tfolding.\n+\t(fold_binary_loc): Use it to extend the existing &a[i] - &a[j] folding.\n \n 2012-02-13  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n \n@@ -87,8 +88,7 @@\n \n 2012-02-23  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n \n-\t* tree-into-ssa (update_ssa): Avoid trailing whitespace in\n-\tdump_file.\n+\t* tree-into-ssa (update_ssa): Avoid trailing whitespace in dump_file.\n \t* tree-ssa-sccvn.c (print_scc): Ditto.\n \n 2012-02-23  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>"}, {"sha": "630b1143bbc920bf49a847a6f60a739ec94337a0", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f59280cf80e22bf30bcbb173e9f100959e5ed768/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f59280cf80e22bf30bcbb173e9f100959e5ed768/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=f59280cf80e22bf30bcbb173e9f100959e5ed768", "patch": "@@ -2361,7 +2361,7 @@\n ;; into register when rax is not available\n (define_insn \"*movabs<mode>_1\"\n   [(set (mem:SWI1248x (match_operand:DI 0 \"x86_64_movabs_operand\" \"i,r\"))\n-\t(match_operand:SWI1248x 1 \"nonmemory_operand\" \"a,er\"))]\n+\t(match_operand:SWI1248x 1 \"nonmemory_operand\" \"a,r<i>\"))]\n   \"TARGET_64BIT && ix86_check_movabs (insn, 0)\"\n   \"@\n    movabs{<imodesuffix>}\\t{%1, %P0|%P0, %1}"}]}