{"sha": "94c51f7a4319a965aad6efab5255e2726ed93522", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRjNTFmN2E0MzE5YTk2NWFhZDZlZmFiNTI1NWUyNzI2ZWQ5MzUyMg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "2000-09-01T06:05:49Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-09-01T06:05:49Z"}, "message": "arm.md: Use no_new_pseudos to determine when it is safe to create new pseudo registers.\n\n        * arm.md: Use no_new_pseudos to determine when it is safe\n        to create new pseudo registers.\n\nFrom-SVN: r36090", "tree": {"sha": "3be2b83a88a29a1b4fbb0514277cefd7baa016f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3be2b83a88a29a1b4fbb0514277cefd7baa016f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94c51f7a4319a965aad6efab5255e2726ed93522", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94c51f7a4319a965aad6efab5255e2726ed93522", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94c51f7a4319a965aad6efab5255e2726ed93522", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94c51f7a4319a965aad6efab5255e2726ed93522/comments", "author": null, "committer": null, "parents": [{"sha": "893f3d5b03e40aaed3421e2124e2a2082801b8d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/893f3d5b03e40aaed3421e2124e2a2082801b8d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/893f3d5b03e40aaed3421e2124e2a2082801b8d9"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "4c36d7c0d83160509c98230a3e4ae586b1372436", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94c51f7a4319a965aad6efab5255e2726ed93522/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94c51f7a4319a965aad6efab5255e2726ed93522/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94c51f7a4319a965aad6efab5255e2726ed93522", "patch": "@@ -1,5 +1,8 @@\n 2000-08-31  Jeff Law <law@cygnus.com>\n \n+\t* arm.md: Use no_new_pseudos to determine when it is safe\n+\tto create new pseudo registers.\n+\n         * arm.c (legitimize_pic_address): Use no_new_pseudos to determine\n         when we can safely allocate new registers.\n "}, {"sha": "4aba36d5f54a7813bd64fc5161e0197c9fb95b4d", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94c51f7a4319a965aad6efab5255e2726ed93522/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94c51f7a4319a965aad6efab5255e2726ed93522/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=94c51f7a4319a965aad6efab5255e2726ed93522", "patch": "@@ -455,8 +455,7 @@\n     {\n       arm_split_constant (PLUS, SImode, INTVAL (operands[2]), operands[0],\n \t\t\t  operands[1],\n-\t\t\t  (reload_in_progress || reload_completed ? 0\n-\t\t\t   : preserve_subexpressions_p ()));\n+\t\t\t  (no_new_pseudos ? 0 : preserve_subexpressions_p ()));\n       DONE;\n     }\n   \"\n@@ -951,7 +950,7 @@\n         {\n           arm_split_constant (MINUS, SImode, INTVAL (operands[1]), operands[0],\n \t  \t\t      operands[2],\n-\t\t\t      (reload_in_progress || reload_completed ? 0\n+\t\t\t      (no_new_pseudos ? 0\n \t\t\t       :  preserve_subexpressions_p ()));\n           DONE;\n \t}\n@@ -1647,7 +1646,7 @@\n         {\n           arm_split_constant (AND, SImode, INTVAL (operands[2]), operands[0],\n \t\t\t      operands[1],\n-\t\t\t      (reload_in_progress || reload_completed\n+\t\t\t      (no_new_pseudos\n \t\t\t       ? 0 : preserve_subexpressions_p ()));\n           DONE;\n         }\n@@ -2063,7 +2062,7 @@\n         {\n           arm_split_constant (IOR, SImode, INTVAL (operands[2]), operands[0],\n \t\t \t      operands[1],\n-\t\t\t      (reload_in_progress || reload_completed\n+\t\t\t      (no_new_pseudos\n \t\t\t      ? 0 : preserve_subexpressions_p ()));\n           DONE;\n \t}\n@@ -3698,7 +3697,7 @@\n   \"\n   if (TARGET_THUMB)\n     {\n-      if (! (reload_in_progress || reload_completed))\n+      if (! no_new_pseudos)\n         {\n           if (GET_CODE (operands[0]) != REG)\n \t    operands[1] = force_reg (DImode, operands[1]);\n@@ -3781,14 +3780,14 @@\n         {\n            arm_split_constant (SET, SImode, INTVAL (operands[1]), operands[0],\n \t\t    \t      NULL_RTX,\n-\t\t\t      (reload_in_progress || reload_completed ? 0\n+\t\t\t      (no_new_pseudos ? 0\n \t\t\t       : preserve_subexpressions_p ()));\n           DONE;\n         }\n     }\n   else /* TARGET_THUMB.... */\n     {\n-      if (! (reload_in_progress || reload_completed))\n+      if (! no_new_pseudos)\n         {\n           if (GET_CODE (operands[0]) != REG)\n \t    operands[1] = force_reg (SImode, operands[1]);\n@@ -3800,9 +3799,7 @@\n \t || symbol_mentioned_p (operands[1])\n \t || label_mentioned_p (operands[1])))\n     operands[1] = legitimize_pic_address (operands[1], SImode,\n-\t\t\t\t\t  ((reload_in_progress\n-\t\t\t\t\t    || reload_completed)\n-\t\t\t\t\t   ? operands[0] : 0));\n+\t\t\t\t\t  (no_new_pseudos ? operands[0] : 0));\n \")\n \n (define_insn \"*arm_movsi_insn\"\n@@ -4125,7 +4122,7 @@\n   \"\n   if (TARGET_ARM)\n     {\n-      if (! (reload_in_progress || reload_completed))\n+      if (! no_new_pseudos)\n         {\n           if (GET_CODE (operands[0]) == MEM)\n \t    {\n@@ -4268,7 +4265,7 @@\n     }\n   else /* TARGET_THUMB */\n     {\n-      if (! (reload_in_progress || reload_completed))\n+      if (! no_new_pseudos)\n         {\n           if (GET_CODE (operands[0]) != REG)\n \t    operands[1] = force_reg (HImode, operands[1]);\n@@ -4544,7 +4541,7 @@\n     {\n       /* Everything except mem = const or mem = mem can be done easily */\n \n-      if (!(reload_in_progress || reload_completed))\n+      if (!no_new_pseudos)\n         {\n           if (GET_CODE (operands[1]) == CONST_INT)\n \t    {\n@@ -4559,7 +4556,7 @@\n     }\n   else /* TARGET_THUMB */\n     {\n-      if (! (reload_in_progress || reload_completed))\n+      if (! no_new_pseudos)\n         {\n           if (GET_CODE (operands[0]) != REG)\n \t    operands[1] = force_reg (QImode, operands[1]);\n@@ -4649,7 +4646,7 @@\n     }\n   else /* TARGET_THUMB */\n     {\n-      if (! (reload_in_progress || reload_completed))\n+      if (! no_new_pseudos)\n         {\n            if (GET_CODE (operands[0]) != REG)\n \t     operands[1] = force_reg (SFmode, operands[1]);\n@@ -4748,7 +4745,7 @@\n     }\n   else /* TARGET_THUMB */\n     {\n-      if (! (reload_in_progress || reload_completed))\n+      if (! no_new_pseudos)\n         {\n           if (GET_CODE (operands[0]) != REG)\n \t    operands[1] = force_reg (DFmode, operands[1]);"}]}