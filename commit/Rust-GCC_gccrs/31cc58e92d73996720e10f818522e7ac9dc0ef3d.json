{"sha": "31cc58e92d73996720e10f818522e7ac9dc0ef3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFjYzU4ZTkyZDczOTk2NzIwZTEwZjgxODUyMmU3YWM5ZGMwZWYzZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-08-14T13:01:18Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-08-14T13:01:18Z"}, "message": "(call expanders): Emit a blockage insn after restoring %r19 when\ngenerating PIC.\n\nFrom-SVN: r10236", "tree": {"sha": "23a02ecdb728d47535c8f836652bd1b14fc9b3a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23a02ecdb728d47535c8f836652bd1b14fc9b3a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31cc58e92d73996720e10f818522e7ac9dc0ef3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31cc58e92d73996720e10f818522e7ac9dc0ef3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31cc58e92d73996720e10f818522e7ac9dc0ef3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31cc58e92d73996720e10f818522e7ac9dc0ef3d/comments", "author": null, "committer": null, "parents": [{"sha": "7276e85d35c9cc9add7ca05f00fd3e2be649ce71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7276e85d35c9cc9add7ca05f00fd3e2be649ce71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7276e85d35c9cc9add7ca05f00fd3e2be649ce71"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "c2c2a26b5e1021fdcca6a30f94cbdda4b6bcc2de", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31cc58e92d73996720e10f818522e7ac9dc0ef3d/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31cc58e92d73996720e10f818522e7ac9dc0ef3d/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=31cc58e92d73996720e10f818522e7ac9dc0ef3d", "patch": "@@ -3632,6 +3632,26 @@\n       emit_move_insn (pic_offset_table_rtx,\n \t\t      gen_rtx (REG, SImode, PIC_OFFSET_TABLE_REGNUM_SAVED));\n       emit_insn (gen_rtx (USE, VOIDmode, pic_offset_table_rtx));\n+\n+      /* Gross.  We have to keep the scheduler from moving the restore\n+\t of the PIC register away from the call.  SCHED_GROUP_P is\n+\t supposed to do this, but for some reason the compiler will\n+\t go into an infinite loop when we use that.\n+\n+\t This method (blockage insn) may make worse code (then again\n+\t it may not since calls are nearly blockages anyway), but at\n+\t least it should work.  */\n+      emit_insn (gen_blockage ());\n+\n+      /* Gross.  We have to keep the scheduler from moving the restore\n+\t of the PIC register away from the call.  SCHED_GROUP_P is\n+\t supposed to do this, but for some reason the compiler will\n+\t go into an infinite loop when we use that.\n+\n+\t This method (blockage insn) may make worse code (then again\n+\t it may not since calls are nearly blockages anyway), but at\n+\t least it should work.  */\n+      emit_insn (gen_blockage ());\n     }\n   DONE;\n }\")"}]}