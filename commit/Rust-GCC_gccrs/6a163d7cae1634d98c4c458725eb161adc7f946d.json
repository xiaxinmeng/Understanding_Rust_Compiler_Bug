{"sha": "6a163d7cae1634d98c4c458725eb161adc7f946d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmExNjNkN2NhZTE2MzRkOThjNGM0NTg3MjVlYjE2MWFkYzdmOTQ2ZA==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-02-26T21:48:01Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-02-26T21:48:01Z"}, "message": "acinclude.m4 (GLIBCPP_CONFIGURE): Update required compiler version.\n\n2001-02-26  Phil Edwards  <pme@sources.redhat.com>\n\n\t* acinclude.m4 (GLIBCPP_CONFIGURE):  Update required compiler version.\n\t  (GLIBCPP_CHECK_COMPILER_FEATURES):  Can safely assume new\n\t  diagnostics.  Remove WFMT_FLAGS.\n\t* configure.in:  Replace WFMT_FLAGS with diagnostics options.\n\t* libsupc++/Makefile.am:  Likewise.\n\t* src/Makefile.am:  Likewise.\n\t* aclocal.m4:  Regenerated.\n\t* configure:  Regenerated.\n\t* Makefile.in:  Regenerated.\n\t* libio/Makefile.in:  Regenerated.\n\t* libmath/Makefile.in:  Regenerated.\n\t* libsupc++/Makefile.in:  Regenerated.\n\t* src/Makefile.in:  Regenerated.\n\nFrom-SVN: r40075", "tree": {"sha": "52f45643d462e933a2eecefb9079e653a35b8317", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52f45643d462e933a2eecefb9079e653a35b8317"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a163d7cae1634d98c4c458725eb161adc7f946d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a163d7cae1634d98c4c458725eb161adc7f946d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a163d7cae1634d98c4c458725eb161adc7f946d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a163d7cae1634d98c4c458725eb161adc7f946d/comments", "author": null, "committer": null, "parents": [{"sha": "a008643689c8bee5bf67ca1bcfb934100daa7793", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a008643689c8bee5bf67ca1bcfb934100daa7793", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a008643689c8bee5bf67ca1bcfb934100daa7793"}], "stats": {"total": 1537, "additions": 735, "deletions": 802}, "files": [{"sha": "cdf6a9cf9c643a684e437651c1662635ca0288f5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6a163d7cae1634d98c4c458725eb161adc7f946d", "patch": "@@ -1,3 +1,19 @@\n+2001-02-26  Phil Edwards  <pme@sources.redhat.com>\n+\n+\t* acinclude.m4 (GLIBCPP_CONFIGURE):  Update required compiler version.\n+\t  (GLIBCPP_CHECK_COMPILER_FEATURES):  Can safely assume new\n+\t  diagnostics.  Remove WFMT_FLAGS.\n+\t* configure.in:  Replace WFMT_FLAGS with diagnostics options.\n+\t* libsupc++/Makefile.am:  Likewise.\n+\t* src/Makefile.am:  Likewise.\n+\t* aclocal.m4:  Regenerated.\n+\t* configure:  Regenerated.\n+\t* Makefile.in:  Regenerated.\n+\t* libio/Makefile.in:  Regenerated.\n+\t* libmath/Makefile.in:  Regenerated.\n+\t* libsupc++/Makefile.in:  Regenerated.\n+\t* src/Makefile.in:  Regenerated.\n+\n 2001-02-26  Phil Edwards  <pme@sources.redhat.com>\n \n \tFixes libstdc++/2079"}, {"sha": "e67273127c0d7f4951000e02bbc710478beff4ae", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=6a163d7cae1634d98c4c458725eb161adc7f946d", "patch": "@@ -105,7 +105,6 @@ USE_COMPLEX_LONG_DOUBLE = @USE_COMPLEX_LONG_DOUBLE@\n VERSION = @VERSION@\n WARN_FLAGS = @WARN_FLAGS@\n WERROR = @WERROR@\n-WFMT_FLAGS = @WFMT_FLAGS@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n glibcpp_basedir = @glibcpp_basedir@"}, {"sha": "86304d0f2067082a41ea073720bd060b8b2e1a49", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 3, "deletions": 22, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=6a163d7cae1634d98c4c458725eb161adc7f946d", "patch": "@@ -17,7 +17,7 @@ AC_DEFUN(GLIBCPP_CONFIGURE, [\n   glibcpp_basedir=$auxdir/$1/libstdc++-v3\n   AC_SUBST(glibcpp_basedir)\n \n-  AM_INIT_AUTOMAKE(libstdc++, 2.90.8)\n+  AM_INIT_AUTOMAKE(libstdc++, 2.91)\n \n   # Never versions of autoconf add an underscore to these functions.\n   # Prevent future problems ...\n@@ -168,10 +168,10 @@ if test ! -f stamp-sanity-compiler; then\n   AC_LANG_SAVE\n   AC_LANG_CPLUSPLUS\n   AC_EGREP_CPP(ok, [\n-  #if (__GNUC__ > 2) || (__GNUC__ == 2 && __GNUC_MINOR__ >= 95) \n+  #if __GNUC__ >= 3\n     ok\n   #endif\n-  ], gpp_satisfactory=yes, AC_MSG_ERROR([please upgrade to gcc-2.95 or above]))\n+  ], gpp_satisfactory=yes, AC_MSG_ERROR([please upgrade to GCC 3.0 or above]))\n   AC_LANG_RESTORE\n   AC_MSG_RESULT($gpp_satisfactory)\n   touch stamp-sanity-compiler\n@@ -184,8 +184,6 @@ dnl Test for newer compiler features, or features that are present in newer\n dnl compiler version but not older compiler versions should be placed\n dnl here.\n dnl\n-dnl Define WFMT_FLAGS='-fdiagnostics-show-location=once' if possible\n-dnl \n dnl Define WERROR='-Werror' if requested and possible; g++'s that lack the\n dnl new inlining code or the new system_header pragma will die on -Werror.\n dnl Leave it out by default and use maint-mode to use it.\n@@ -209,22 +207,6 @@ AC_DEFUN(GLIBCPP_CHECK_COMPILER_FEATURES, [\n     WERROR='-Werror'\n   fi\n \n-  # Check for more sophisticated diagnostic control.\n-  AC_MSG_CHECKING([for g++ that supports -fdiagnostics-show-location=once])\n-  CXXFLAGS='-Werror -fdiagnostics-show-location=once'\n-  AC_TRY_COMPILE(, [int foo;\n-  ], [ac_gabydiags=yes], [ac_gabydiags=no])\n-  if test \"$ac_test_CXXFLAGS\" = set; then\n-    CXXFLAGS=\"$ac_save_CXXFLAGS\"\n-  else\n-    # this is the suspicious part\n-    CXXFLAGS=''\n-  fi\n-  if test x\"$ac_gabydiags\" = x\"yes\"; then\n-    WFMT_FLAGS='-fdiagnostics-show-location=once'\n-  fi\n-  AC_MSG_RESULT($ac_gabydiags)\n-\n   # Check for -ffunction-sections -fdata-sections\n   AC_MSG_CHECKING([for g++ that supports -ffunction-sections -fdata-sections])\n   CXXFLAGS='-Werror -ffunction-sections -fdata-sections'\n@@ -243,7 +225,6 @@ AC_DEFUN(GLIBCPP_CHECK_COMPILER_FEATURES, [\n \n   AC_LANG_RESTORE\n   AC_SUBST(WERROR)\n-  AC_SUBST(WFMT_FLAGS)\n   AC_SUBST(SECTION_FLAGS)\n ])\n "}, {"sha": "cc9d8feed8bd55e69baaeffff7ca73e19fec1ca6", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 3, "deletions": 22, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=6a163d7cae1634d98c4c458725eb161adc7f946d", "patch": "@@ -29,7 +29,7 @@ AC_DEFUN(GLIBCPP_CONFIGURE, [\n   glibcpp_basedir=$auxdir/$1/libstdc++-v3\n   AC_SUBST(glibcpp_basedir)\n \n-  AM_INIT_AUTOMAKE(libstdc++, 2.90.8)\n+  AM_INIT_AUTOMAKE(libstdc++, 2.91)\n \n   # Never versions of autoconf add an underscore to these functions.\n   # Prevent future problems ...\n@@ -180,10 +180,10 @@ if test ! -f stamp-sanity-compiler; then\n   AC_LANG_SAVE\n   AC_LANG_CPLUSPLUS\n   AC_EGREP_CPP(ok, [\n-  #if (__GNUC__ > 2) || (__GNUC__ == 2 && __GNUC_MINOR__ >= 95) \n+  #if __GNUC__ >= 3\n     ok\n   #endif\n-  ], gpp_satisfactory=yes, AC_MSG_ERROR([please upgrade to gcc-2.95 or above]))\n+  ], gpp_satisfactory=yes, AC_MSG_ERROR([please upgrade to GCC 3.0 or above]))\n   AC_LANG_RESTORE\n   AC_MSG_RESULT($gpp_satisfactory)\n   touch stamp-sanity-compiler\n@@ -196,8 +196,6 @@ dnl Test for newer compiler features, or features that are present in newer\n dnl compiler version but not older compiler versions should be placed\n dnl here.\n dnl\n-dnl Define WFMT_FLAGS='-fdiagnostics-show-location=once' if possible\n-dnl \n dnl Define WERROR='-Werror' if requested and possible; g++'s that lack the\n dnl new inlining code or the new system_header pragma will die on -Werror.\n dnl Leave it out by default and use maint-mode to use it.\n@@ -221,22 +219,6 @@ AC_DEFUN(GLIBCPP_CHECK_COMPILER_FEATURES, [\n     WERROR='-Werror'\n   fi\n \n-  # Check for more sophisticated diagnostic control.\n-  AC_MSG_CHECKING([for g++ that supports -fdiagnostics-show-location=once])\n-  CXXFLAGS='-Werror -fdiagnostics-show-location=once'\n-  AC_TRY_COMPILE(, [int foo;\n-  ], [ac_gabydiags=yes], [ac_gabydiags=no])\n-  if test \"$ac_test_CXXFLAGS\" = set; then\n-    CXXFLAGS=\"$ac_save_CXXFLAGS\"\n-  else\n-    # this is the suspicious part\n-    CXXFLAGS=''\n-  fi\n-  if test x\"$ac_gabydiags\" = x\"yes\"; then\n-    WFMT_FLAGS='-fdiagnostics-show-location=once'\n-  fi\n-  AC_MSG_RESULT($ac_gabydiags)\n-\n   # Check for -ffunction-sections -fdata-sections\n   AC_MSG_CHECKING([for g++ that supports -ffunction-sections -fdata-sections])\n   CXXFLAGS='-Werror -ffunction-sections -fdata-sections'\n@@ -255,7 +237,6 @@ AC_DEFUN(GLIBCPP_CHECK_COMPILER_FEATURES, [\n \n   AC_LANG_RESTORE\n   AC_SUBST(WERROR)\n-  AC_SUBST(WFMT_FLAGS)\n   AC_SUBST(SECTION_FLAGS)\n ])\n "}, {"sha": "be28ad0bed7baea5ed38a5b0bba5a11782586991", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 708, "deletions": 746, "changes": 1454, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=6a163d7cae1634d98c4c458725eb161adc7f946d"}, {"sha": "544db19b174958f518c3f00fbe43770f48499e5f", "filename": "libstdc++-v3/configure.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.in?ref=6a163d7cae1634d98c4c458725eb161adc7f946d", "patch": "@@ -96,9 +96,7 @@ if test -n \"$with_cross_host\"; then\n \tfloat.h inttypes.h])\n \n \t# GLIBCPP_CHECK_COMPILER_FEATURES\n-\tWFMT_FLAGS='-fdiagnostics-show-location=once'\n \tSECTION_FLAGS='-ffunction-sections -fdata-sections'\n-\tAC_SUBST(WFMT_FLAGS)\n \tAC_SUBST(SECTION_FLAGS)\n \tGLIBCPP_CHECK_LINKER_FEATURES\n \t# GLIBCPP_CHECK_BUILTIN_MATH_SUPPORT"}, {"sha": "3d4f9bbdcf7c2ecba3a108dc947d968b5b823b1c", "filename": "libstdc++-v3/libio/Makefile.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FMakefile.in?ref=6a163d7cae1634d98c4c458725eb161adc7f946d", "patch": "@@ -99,7 +99,6 @@ USE_COMPLEX_LONG_DOUBLE = @USE_COMPLEX_LONG_DOUBLE@\n VERSION = @VERSION@\n WARN_FLAGS = @WARN_FLAGS@\n WERROR = @WERROR@\n-WFMT_FLAGS = @WFMT_FLAGS@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n glibcpp_basedir = @glibcpp_basedir@"}, {"sha": "f692f094b5f0155bcfdc4ecc797c3ba2c4d31f80", "filename": "libstdc++-v3/libmath/Makefile.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in?ref=6a163d7cae1634d98c4c458725eb161adc7f946d", "patch": "@@ -99,7 +99,6 @@ USE_COMPLEX_LONG_DOUBLE = @USE_COMPLEX_LONG_DOUBLE@\n VERSION = @VERSION@\n WARN_FLAGS = @WARN_FLAGS@\n WERROR = @WERROR@\n-WFMT_FLAGS = @WFMT_FLAGS@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n glibcpp_basedir = @glibcpp_basedir@"}, {"sha": "09434a01b2d685251a4d8afc24883e5387310a1e", "filename": "libstdc++-v3/libsupc++/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am?ref=6a163d7cae1634d98c4c458725eb161adc7f946d", "patch": "@@ -51,7 +51,7 @@ CONFIG_CXXFLAGS = \\\n \n # Warning flags to use.\n WARN_CXXFLAGS = \\\n-\t@WARN_FLAGS@ $(WERROR) @WFMT_FLAGS@\n+\t@WARN_FLAGS@ $(WERROR) -fdiagnostics-show-location=once\n \n # Use common includes from acinclude.m4/GLIBCPP_EXPORT_INCLUDES\n GLIBCPP_INCLUDE_DIR = @GLIBCPP_INCLUDE_DIR@"}, {"sha": "43daa048aee3612505ee48e2eaf90b7a79d0293d", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=6a163d7cae1634d98c4c458725eb161adc7f946d", "patch": "@@ -96,7 +96,6 @@ USE_COMPLEX_LONG_DOUBLE = @USE_COMPLEX_LONG_DOUBLE@\n VERSION = @VERSION@\n WARN_FLAGS = @WARN_FLAGS@\n WERROR = @WERROR@\n-WFMT_FLAGS = @WFMT_FLAGS@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n glibcpp_basedir = @glibcpp_basedir@\n@@ -137,7 +136,7 @@ CONFIG_CXXFLAGS = \\\n \n # Warning flags to use.\n WARN_CXXFLAGS = \\\n-\t@WARN_FLAGS@ $(WERROR) @WFMT_FLAGS@\n+\t@WARN_FLAGS@ $(WERROR) -fdiagnostics-show-location=once\n \n \n # Use common includes from acinclude.m4/GLIBCPP_EXPORT_INCLUDES"}, {"sha": "51aa4e1604c8c418e149b8e97cd1883c75c4a880", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=6a163d7cae1634d98c4c458725eb161adc7f946d", "patch": "@@ -21,7 +21,7 @@\n ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n ## USA.\n \n-## $Id: Makefile.am,v 1.72 2001/02/16 00:43:41 bkoz Exp $\n+## $Id: Makefile.am,v 1.73 2001/02/20 20:20:48 pme Exp $\n \n AUTOMAKE_OPTIONS = 1.3 gnits\n MAINT_CHARSET = latin1\n@@ -47,7 +47,7 @@ CONFIG_CXXFLAGS = \\\n \n # Warning flags to use.\n WARN_CXXFLAGS = \\\n-\t@WARN_FLAGS@ $(WERROR) @WFMT_FLAGS@\n+\t@WARN_FLAGS@ $(WERROR) -fdiagnostics-show-location=once\n \n # Use common includes from acinclude.m4/GLIBCPP_EXPORT_INCLUDES\n GLIBCPP_INCLUDE_DIR = @GLIBCPP_INCLUDE_DIR@"}, {"sha": "b998ae8e374276685c19c5b9908e0c10b87096b7", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a163d7cae1634d98c4c458725eb161adc7f946d/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=6a163d7cae1634d98c4c458725eb161adc7f946d", "patch": "@@ -96,7 +96,6 @@ USE_COMPLEX_LONG_DOUBLE = @USE_COMPLEX_LONG_DOUBLE@\n VERSION = @VERSION@\n WARN_FLAGS = @WARN_FLAGS@\n WERROR = @WERROR@\n-WFMT_FLAGS = @WFMT_FLAGS@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n glibcpp_basedir = @glibcpp_basedir@\n@@ -131,7 +130,7 @@ CONFIG_CXXFLAGS = \\\n \n # Warning flags to use.\n WARN_CXXFLAGS = \\\n-\t@WARN_FLAGS@ $(WERROR) @WFMT_FLAGS@\n+\t@WARN_FLAGS@ $(WERROR) -fdiagnostics-show-location=once\n \n \n # Use common includes from acinclude.m4/GLIBCPP_EXPORT_INCLUDES"}]}