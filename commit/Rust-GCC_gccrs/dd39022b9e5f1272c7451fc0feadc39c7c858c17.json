{"sha": "dd39022b9e5f1272c7451fc0feadc39c7c858c17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQzOTAyMmI5ZTVmMTI3MmM3NDUxZmMwZmVhZGMzOWM3Yzg1OGMxNw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-04-20T12:37:38Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-04-20T12:37:38Z"}, "message": "tree-if-conv.c (is_false_predicate): For NULL_TREE return false rather than true.\n\n\t* tree-if-conv.c (is_false_predicate): For NULL_TREE return false\n\trather than true.\n\nFrom-SVN: r235272", "tree": {"sha": "be1e0d40bda3af7254f9cd50166ce5f291e56449", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be1e0d40bda3af7254f9cd50166ce5f291e56449"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd39022b9e5f1272c7451fc0feadc39c7c858c17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd39022b9e5f1272c7451fc0feadc39c7c858c17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd39022b9e5f1272c7451fc0feadc39c7c858c17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd39022b9e5f1272c7451fc0feadc39c7c858c17/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d7aa24e4bc0e4a2aef9af3d020c2ba98e57be399", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7aa24e4bc0e4a2aef9af3d020c2ba98e57be399", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7aa24e4bc0e4a2aef9af3d020c2ba98e57be399"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "1e8a33b9b1355a9ad5d4513254e76b908d7cd43e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd39022b9e5f1272c7451fc0feadc39c7c858c17/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd39022b9e5f1272c7451fc0feadc39c7c858c17/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dd39022b9e5f1272c7451fc0feadc39c7c858c17", "patch": "@@ -1,3 +1,8 @@\n+2016-04-20  Marek Polacek  <polacek@redhat.com>\n+\n+\t* tree-if-conv.c (is_false_predicate): For NULL_TREE return false\n+\trather than true.\n+\n 2016-04-20  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \t* config/i386/sse.md (vec_unpacks_lo_hi): Always"}, {"sha": "72e808ef8832b83f937f932f7ddba389965ccf2b", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd39022b9e5f1272c7451fc0feadc39c7c858c17/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd39022b9e5f1272c7451fc0feadc39c7c858c17/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=dd39022b9e5f1272c7451fc0feadc39c7c858c17", "patch": "@@ -267,9 +267,9 @@ ifc_temp_var (tree type, tree expr, gimple_stmt_iterator *gsi)\n static inline bool\n is_false_predicate (tree cond)\n {\n-  return (cond == NULL_TREE\n-\t  || cond == boolean_false_node\n-\t  || integer_zerop (cond));\n+  return (cond != NULL_TREE\n+\t  && (cond == boolean_false_node\n+\t      || integer_zerop (cond)));\n }\n \n /* Return true when COND is a true predicate.  */"}]}