{"sha": "b1d26727ac4276f7f71b90530b2103afedd55b71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFkMjY3MjdhYzQyNzZmN2Y3MWI5MDUzMGIyMTAzYWZlZGQ1NWI3MQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-06-03T00:19:42Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-06-03T00:19:42Z"}, "message": "gcse.c (insert_insn_end_bb): Correct placement of insns when the current block starts with a CODE_LABEL and...\n\n\ufffd\n        * gcse.c (insert_insn_end_bb): Correct placement of insns when the\n        current block starts with a CODE_LABEL and ends with a CALL and\n        we can not find all the argument setup instructions for the CALL.\n\nFrom-SVN: r27321", "tree": {"sha": "b23daa7619a2d8de0701952f2424c2c285af000a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b23daa7619a2d8de0701952f2424c2c285af000a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1d26727ac4276f7f71b90530b2103afedd55b71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1d26727ac4276f7f71b90530b2103afedd55b71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1d26727ac4276f7f71b90530b2103afedd55b71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1d26727ac4276f7f71b90530b2103afedd55b71/comments", "author": null, "committer": null, "parents": [{"sha": "cd5828a94ee14ca00adfae9d37b6808128e1193d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd5828a94ee14ca00adfae9d37b6808128e1193d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd5828a94ee14ca00adfae9d37b6808128e1193d"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "deebc73e0a138b2cb761644eefff8e4eb7865162", "filename": "gcc/gcse.c", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1d26727ac4276f7f71b90530b2103afedd55b71/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1d26727ac4276f7f71b90530b2103afedd55b71/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=b1d26727ac4276f7f71b90530b2103afedd55b71", "patch": "@@ -4189,9 +4189,26 @@ insert_insn_end_bb (expr, bb, pre)\n \t    }\n \t}\n       \n-      new_insn = emit_insn_before (pat, insn);\n-      if (BLOCK_HEAD (bb) == insn)\n-\tBLOCK_HEAD (bb) = new_insn;\n+      /* If we found all the parameter loads, then we want to insert\n+\t before the first parameter load.\n+\n+\t If we did not find all the parameter loads, then we might have\n+\t stopped on the head of the block, which could be a CODE_LABEL.\n+\t If we inserted before the CODE_LABEL, then we would be putting\n+\t the insn in the wrong basic block.  In that case, put the insn\n+\t after the CODE_LABEL.\n+\n+\t ?!? Do we need to account for NOTE_INSN_BASIC_BLOCK here?  */\n+      if (GET_CODE (insn) != CODE_LABEL)\n+\t{\n+\t  new_insn = emit_insn_before (pat, insn);\n+\t  if (BLOCK_HEAD (bb) == insn)\n+\t    BLOCK_HEAD (bb) = new_insn;\n+\t}\n+      else\n+\t{\n+\t  new_insn = emit_insn_after (pat, insn);\n+\t}\n     }\n   else\n     {"}]}