{"sha": "617097a3374140b8ec5a4e991ff69fbe94329b74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE3MDk3YTMzNzQxNDBiOGVjNWE0ZTk5MWZmNjlmYmU5NDMyOWI3NA==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobias.schlueter@physik.uni-muenchen.de", "date": "2004-08-22T12:09:26Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2004-08-22T12:09:26Z"}, "message": "check.c (gfc_check_reduction): Rename to ...\n\n* check.c (gfc_check_reduction): Rename to ...\n(check_reduction): ... this. Make static. Don't check type of\nfirst argument.\n(gfc_check_minval_maxval, gfc_check_prodcut_sum): New functions.\n* intrinsic.c (add_functions): Change MAXVAL, MINVAL, PRODUCT and\nSUM to use new check functions.\n(check_specific): Change logic to call new functions.\n* intrinsic.h (gfc_check_minval_maxval, gfc_check_product_sum):\nAdd prototypes.\n(gfc_check_reduction): Remove prototype.\n\nFrom-SVN: r86377", "tree": {"sha": "26a3905b35b9b195a14c3066f37f48183340871d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26a3905b35b9b195a14c3066f37f48183340871d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/617097a3374140b8ec5a4e991ff69fbe94329b74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/617097a3374140b8ec5a4e991ff69fbe94329b74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/617097a3374140b8ec5a4e991ff69fbe94329b74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/617097a3374140b8ec5a4e991ff69fbe94329b74/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60e6c8521675dbd85ffa40cc40c5ee489c8ef502", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60e6c8521675dbd85ffa40cc40c5ee489c8ef502", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60e6c8521675dbd85ffa40cc40c5ee489c8ef502"}], "stats": {"total": 67, "additions": 52, "deletions": 15}, "files": [{"sha": "d9c4d5fb332bab63158f4568832ee45f4496ccb5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/617097a3374140b8ec5a4e991ff69fbe94329b74/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/617097a3374140b8ec5a4e991ff69fbe94329b74/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=617097a3374140b8ec5a4e991ff69fbe94329b74", "patch": "@@ -1,3 +1,16 @@\n+2004-08-22  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\t* check.c (gfc_check_reduction): Rename to ...\n+\t(check_reduction): ... this. Make static. Don't check type of \n+\tfirst argument.\n+\t(gfc_check_minval_maxval, gfc_check_prodcut_sum): New functions.\n+\t* intrinsic.c (add_functions): Change MAXVAL, MINVAL, PRODUCT and\n+\tSUM to use new check functions.\n+\t(check_specific): Change logic to call new functions.\n+\t* intrinsic.h (gfc_check_minval_maxval, gfc_check_product_sum):\n+\tAdd prototypes.\n+\t(gfc_check_reduction): Remove prototype.\n+\n 2004-08-20  Paul Brook  <paul@codesourcery.com>\n \tCanqun Yang  <canqun@nudt.edu.cn>\n "}, {"sha": "9e5906a985e34b60cb867b0f8b9e45351cfea43e", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 27, "deletions": 8, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/617097a3374140b8ec5a4e991ff69fbe94329b74/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/617097a3374140b8ec5a4e991ff69fbe94329b74/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=617097a3374140b8ec5a4e991ff69fbe94329b74", "patch": "@@ -1150,15 +1150,10 @@ gfc_check_minloc_maxloc (gfc_actual_arglist * ap)\n    I.e. in the case of minval(array,mask), mask will be in the second\n    position of the argument list and we'll have to fix that up.  */\n \n-try\n-gfc_check_reduction (gfc_actual_arglist * ap)\n+static try\n+check_reduction (gfc_actual_arglist * ap)\n {\n-  gfc_expr *a, *m, *d;\n-\n-  a = ap->expr;\n-  if (int_or_real_check (a, 0) == FAILURE\n-      || array_check (a, 0) == FAILURE)\n-    return FAILURE;\n+  gfc_expr *m, *d;\n \n   d = ap->next->expr;\n   m = ap->next->next->expr;\n@@ -1185,6 +1180,30 @@ gfc_check_reduction (gfc_actual_arglist * ap)\n }\n \n \n+try\n+gfc_check_minval_maxval (gfc_actual_arglist * ap)\n+{\n+  \n+  if (int_or_real_check (ap->expr, 0) == FAILURE\n+      || array_check (ap->expr, 0) == FAILURE)\n+    return FAILURE;\n+  \n+  return check_reduction (ap);\n+}\n+\n+\n+try\n+gfc_check_product_sum (gfc_actual_arglist * ap)\n+{\n+  \n+  if (numeric_check (ap->expr, 0) == FAILURE\n+      || array_check (ap->expr, 0) == FAILURE)\n+    return FAILURE;\n+  \n+  return check_reduction (ap);\n+}\n+\n+\n try\n gfc_check_merge (gfc_expr * tsource, gfc_expr * fsource, gfc_expr * mask)\n {"}, {"sha": "2784a7a03eabd36eb8f58c179a77d2679ca9c24c", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/617097a3374140b8ec5a4e991ff69fbe94329b74/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/617097a3374140b8ec5a4e991ff69fbe94329b74/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=617097a3374140b8ec5a4e991ff69fbe94329b74", "patch": "@@ -1406,7 +1406,7 @@ add_functions (void)\n   make_generic (\"maxloc\", GFC_ISYM_MAXLOC);\n \n   add_sym_3red (\"maxval\", 0, 1, BT_REAL, dr,\n-                gfc_check_reduction, NULL, gfc_resolve_maxval,\n+                gfc_check_minval_maxval, NULL, gfc_resolve_maxval,\n                 ar, BT_REAL, dr, 0, dm, BT_INTEGER, ii, 1,\n                 msk, BT_LOGICAL, dl, 1);\n \n@@ -1461,7 +1461,7 @@ add_functions (void)\n   make_generic (\"minloc\", GFC_ISYM_MINLOC);\n \n   add_sym_3red (\"minval\", 0, 1, BT_REAL, dr,\n-                gfc_check_reduction, NULL, gfc_resolve_minval,\n+                gfc_check_minval_maxval, NULL, gfc_resolve_minval,\n                 ar, BT_REAL, dr, 0, dm, BT_INTEGER, ii, 1,\n                 msk, BT_LOGICAL, dl, 1);\n \n@@ -1534,7 +1534,7 @@ add_functions (void)\n   make_generic (\"present\", GFC_ISYM_PRESENT);\n \n   add_sym_3red (\"product\", 0, 1, BT_REAL, dr,\n-                gfc_check_reduction, NULL, gfc_resolve_product,\n+                gfc_check_product_sum, NULL, gfc_resolve_product,\n                 ar, BT_REAL, dr, 0, dm, BT_INTEGER, ii, 1,\n                 msk, BT_LOGICAL, dl, 1);\n \n@@ -1716,7 +1716,7 @@ add_functions (void)\n   make_generic (\"sqrt\", GFC_ISYM_SQRT);\n \n   add_sym_3red (\"sum\", 0, 1, BT_UNKNOWN, 0,\n-                gfc_check_reduction, NULL, gfc_resolve_sum,\n+                gfc_check_product_sum, NULL, gfc_resolve_sum,\n                 ar, BT_REAL, dr, 0, dm, BT_INTEGER, ii, 1,\n                 msk, BT_LOGICAL, dl, 1);\n \n@@ -2493,10 +2493,14 @@ check_specific (gfc_intrinsic_sym * specific, gfc_expr * expr, int error_flag)\n     /* This is special because we might have to reorder the argument\n        list.  */\n     t = gfc_check_minloc_maxloc (*ap);\n-  else if (specific->check.f3red == gfc_check_reduction)\n+  else if (specific->check.f3red == gfc_check_minval_maxval)\n     /* This is also special because we also might have to reorder the\n        argument list.  */\n-    t = gfc_check_reduction (*ap);\n+    t = gfc_check_minval_maxval (*ap);\n+  else if (specific->check.f3red == gfc_check_product_sum)\n+    /* Same here. The difference to the previous case is that we allow a\n+       general numeric type.  */\n+    t = gfc_check_product_sum (*ap);\n   else\n      {\n        if (specific->check.f1 == NULL)"}, {"sha": "d09bcd029640f22413b9f8dda631cde93aec272b", "filename": "gcc/fortran/intrinsic.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/617097a3374140b8ec5a4e991ff69fbe94329b74/gcc%2Ffortran%2Fintrinsic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/617097a3374140b8ec5a4e991ff69fbe94329b74/gcc%2Ffortran%2Fintrinsic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.h?ref=617097a3374140b8ec5a4e991ff69fbe94329b74", "patch": "@@ -70,16 +70,17 @@ try gfc_check_min_max_double (gfc_actual_arglist *);\n try gfc_check_matmul (gfc_expr *, gfc_expr *);\n try gfc_check_merge (gfc_expr *, gfc_expr *, gfc_expr *);\n try gfc_check_minloc_maxloc (gfc_actual_arglist *);\n+try gfc_check_minval_maxval (gfc_actual_arglist *);\n try gfc_check_nearest (gfc_expr *, gfc_expr *);\n try gfc_check_null (gfc_expr *);\n try gfc_check_pack (gfc_expr *, gfc_expr *, gfc_expr *);\n try gfc_check_precision (gfc_expr *);\n try gfc_check_present (gfc_expr *);\n+try gfc_check_product_sum (gfc_actual_arglist *);\n try gfc_check_radix (gfc_expr *);\n try gfc_check_rand (gfc_expr *);\n try gfc_check_range (gfc_expr *);\n try gfc_check_real (gfc_expr *, gfc_expr *);\n-try gfc_check_reduction (gfc_actual_arglist *);\n try gfc_check_repeat (gfc_expr *, gfc_expr *);\n try gfc_check_reshape (gfc_expr *, gfc_expr *, gfc_expr *, gfc_expr *);\n try gfc_check_scale (gfc_expr *, gfc_expr *);"}]}