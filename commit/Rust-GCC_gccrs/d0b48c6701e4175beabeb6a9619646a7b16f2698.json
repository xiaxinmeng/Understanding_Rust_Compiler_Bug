{"sha": "d0b48c6701e4175beabeb6a9619646a7b16f2698", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBiNDhjNjcwMWU0MTc1YmVhYmViNmE5NjE5NjQ2YTdiMTZmMjY5OA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-05-06T17:41:46Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-05-06T17:41:46Z"}, "message": "mmx.md: Rename \"*...\" insn patterns from my previous commit to \"*mmx_...\".\n\n\t* config/i386/mmx.md: Rename \"*...\" insn patterns from my\n\tprevious commit to \"*mmx_...\".\n\nFrom-SVN: r134991", "tree": {"sha": "328643685ceabe961131dc80753d1989002deee3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/328643685ceabe961131dc80753d1989002deee3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0b48c6701e4175beabeb6a9619646a7b16f2698", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0b48c6701e4175beabeb6a9619646a7b16f2698", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0b48c6701e4175beabeb6a9619646a7b16f2698", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0b48c6701e4175beabeb6a9619646a7b16f2698/comments", "author": null, "committer": null, "parents": [{"sha": "71c10038d1739414c587d2d88cd858b213bd1453", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71c10038d1739414c587d2d88cd858b213bd1453", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71c10038d1739414c587d2d88cd858b213bd1453"}], "stats": {"total": 49, "additions": 24, "deletions": 25}, "files": [{"sha": "d1772078bbd77a7ed8476c91b0f82638145a34e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b48c6701e4175beabeb6a9619646a7b16f2698/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b48c6701e4175beabeb6a9619646a7b16f2698/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d0b48c6701e4175beabeb6a9619646a7b16f2698", "patch": "@@ -1,8 +1,7 @@\n 2008-05-06  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/35657\n-\t* config/i386/i386.c (contains_128bit_aligned_vector_p): Renamed\n-\tto ...\n+\t* config/i386/i386.c (contains_128bit_aligned_vector_p): Renamed to ...\n \t(contains_aligned_value_p): This.  Handle _Decimal128.\n \t(ix86_function_arg_boundary): Only align _Decimal128 to its\n \tnatural boundary and handle it properly.\n@@ -95,43 +94,43 @@\n 2008-05-06  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/mmx.md: Remove double backslashes from asm templates.\n-\t(*addv2sf3): Rename from mmx_addv2sf3 insn pattern.\n+\t(*mmx_addv2sf3): Rename from mmx_addv2sf3 insn pattern.\n \t(mmx_addv2sf3): New expander.  Use ix86_fixup_binary_operands_no_copy\n \tto handle nonimmediate operands.\n-\t(*mulv2sf3): Rename from mmx_mulv2sf3 insn pattern.\n+\t(*mmx_mulv2sf3): Rename from mmx_mulv2sf3 insn pattern.\n \t(mmx_mulv2sf3): New expander.  Use ix86_fixup_binary_operands_no_copy\n \tto handle nonimmediate operands.\n-\t(*<code>v2sf3_finite): New insn pattern.\n-\t(*<code>v2sf3): Rename from mmx_<code>v2sf3 insn pattern.\n+\t(*mmx_<code>v2sf3_finite): New insn pattern.\n+\t(*mmx_<code>v2sf3): Rename from mmx_<code>v2sf3 insn pattern.\n \t(mmx_<code>v2sf3): New expander.  Use\n \tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n \t(mmx_<plusminus_insn><mode>3): New expander.  Use\n \tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n-\t(*<plusminus_insn><mode>3): New insn pattern.\n+\t(*mmx_<plusminus_insn><mode>3): New insn pattern.\n \t(mmx_add<mode>3): Removed.\n \t(mmx_ssadd<mode>3): Ditto.\n \t(mmx_usadd<mode>3): Ditto.\n \t(mmx_sub<mode>3): Ditto.\n \t(mmx_sssub<mode>3): Ditto.\n \t(mmx_ussub<mode>3): Ditto.\n-\t(*mulv4hi3): Rename from mmx_mulv4hi3 insn pattern.\n+\t(*mmx_mulv4hi3): Rename from mmx_mulv4hi3 insn pattern.\n \t(mmx_mulv4hi3): New expander.  Use ix86_fixup_binary_operands_no_copy\n \tto handle nonimmediate operands.\n-\t(*smulv4hi3_highpart): Rename from mmx_smulv4hi3_highpart\n+\t(*mmx_smulv4hi3_highpart): Rename from mmx_smulv4hi3_highpart\n \tinsn pattern.\n \t(mmx_smulv4hi3_highpart): New expander.  Use\n \tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n-\t(*umulv4hi3_highpart): Rename from mmx_umulv4hi3_highpart\n+\t(*mmx_umulv4hi3_highpart): Rename from mmx_umulv4hi3_highpart\n \tinsn pattern.\n \t(mmx_umulv4hi3_highpart): New expander.  Use\n \tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n-\t(*<code>v4hi3): Rename from mmx_<code>v4hi3 insn pattern.\n+\t(*mmx_<code>v4hi3): Rename from mmx_<code>v4hi3 insn pattern.\n \t(mmx_<code>v4hi3): New expander.  Use\n \tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n-\t(*<code>v8qi3): Rename from mmx_<code>v8qi3 insn pattern.\n+\t(*mmx_<code>v8qi3): Rename from mmx_<code>v8qi3 insn pattern.\n \t(mmx_<code>v8qi3): New expander.  Use\n \tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n-\t(*<code><mode>3): Rename from mmx_<code><mode>3 insn pattern.\n+\t(*mmx_<code><mode>3): Rename from mmx_<code><mode>3 insn pattern.\n \t(mmx_<code><mode>3): New expander.  Use\n \tix86_fixup_binary_operands_no_copy to handle nonimmediate operands.\n "}, {"sha": "2f2c02f75a6a3f446634f3984a4623aed783be5f", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b48c6701e4175beabeb6a9619646a7b16f2698/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b48c6701e4175beabeb6a9619646a7b16f2698/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=d0b48c6701e4175beabeb6a9619646a7b16f2698", "patch": "@@ -220,7 +220,7 @@\n   \"TARGET_3DNOW\"\n   \"ix86_fixup_binary_operands_no_copy (PLUS, V2SFmode, operands);\")\n \n-(define_insn \"*addv2sf3\"\n+(define_insn \"*mmx_addv2sf3\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=y\")\n \t(plus:V2SF (match_operand:V2SF 1 \"nonimmediate_operand\" \"%0\")\n \t\t   (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")))]\n@@ -254,7 +254,7 @@\n   \"TARGET_3DNOW\"\n   \"ix86_fixup_binary_operands_no_copy (MULT, V2SFmode, operands);\")\n \n-(define_insn \"*mulv2sf3\"\n+(define_insn \"*mmx_mulv2sf3\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=y\")\n \t(mult:V2SF (match_operand:V2SF 1 \"nonimmediate_operand\" \"%0\")\n \t\t   (match_operand:V2SF 2 \"nonimmediate_operand\" \"ym\")))]\n@@ -279,7 +279,7 @@\n   ix86_fixup_binary_operands_no_copy (<CODE>, V2SFmode, operands);\n })\n \n-(define_insn \"*<code>v2sf3_finite\"\n+(define_insn \"*mmx_<code>v2sf3_finite\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=y\")\n         (smaxmin:V2SF\n \t  (match_operand:V2SF 1 \"nonimmediate_operand\" \"%0\")\n@@ -290,7 +290,7 @@\n   [(set_attr \"type\" \"mmxadd\")\n    (set_attr \"mode\" \"V2SF\")])\n \n-(define_insn \"*<code>v2sf3\"\n+(define_insn \"*mmx_<code>v2sf3\"\n   [(set (match_operand:V2SF 0 \"register_operand\" \"=y\")\n         (smaxmin:V2SF\n \t  (match_operand:V2SF 1 \"register_operand\" \"0\")\n@@ -600,7 +600,7 @@\n   \"TARGET_MMX || (TARGET_SSE2 && <MODE>mode == V1DImode)\"\n   \"ix86_fixup_binary_operands_no_copy (<CODE>, <MODE>mode, operands);\")\n \n-(define_insn \"*<plusminus_insn><mode>3\"\n+(define_insn \"*mmx_<plusminus_insn><mode>3\"\n   [(set (match_operand:MMXMODEI8 0 \"register_operand\" \"=y\")\n         (plusminus:MMXMODEI8\n \t  (match_operand:MMXMODEI8 1 \"nonimmediate_operand\" \"<comm>0\")\n@@ -619,7 +619,7 @@\n   \"TARGET_MMX\"\n   \"ix86_fixup_binary_operands_no_copy (<CODE>, <MODE>mode, operands);\")\n \n-(define_insn \"*<plusminus_insn><mode>3\"\n+(define_insn \"*mmx_<plusminus_insn><mode>3\"\n   [(set (match_operand:MMXMODE12 0 \"register_operand\" \"=y\")\n         (sat_plusminus:MMXMODE12\n \t  (match_operand:MMXMODE12 1 \"nonimmediate_operand\" \"<comm>0\")\n@@ -636,7 +636,7 @@\n   \"TARGET_MMX\"\n   \"ix86_fixup_binary_operands_no_copy (MULT, V4HImode, operands);\")\n \n-(define_insn \"*mulv4hi3\"\n+(define_insn \"*mmx_mulv4hi3\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"=y\")\n         (mult:V4HI (match_operand:V4HI 1 \"nonimmediate_operand\" \"%0\")\n \t\t   (match_operand:V4HI 2 \"nonimmediate_operand\" \"ym\")))]\n@@ -658,7 +658,7 @@\n   \"TARGET_MMX\"\n   \"ix86_fixup_binary_operands_no_copy (MULT, V4HImode, operands);\")\n \n-(define_insn \"*smulv4hi3_highpart\"\n+(define_insn \"*mmx_smulv4hi3_highpart\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"=y\")\n \t(truncate:V4HI\n \t  (lshiftrt:V4SI\n@@ -686,7 +686,7 @@\n   \"TARGET_SSE || TARGET_3DNOW_A\"\n   \"ix86_fixup_binary_operands_no_copy (MULT, V4HImode, operands);\")\n \n-(define_insn \"*umulv4hi3_highpart\"\n+(define_insn \"*mmx_umulv4hi3_highpart\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"=y\")\n \t(truncate:V4HI\n \t  (lshiftrt:V4SI\n@@ -768,7 +768,7 @@\n   \"TARGET_SSE || TARGET_3DNOW_A\"\n   \"ix86_fixup_binary_operands_no_copy (<CODE>, V4HImode, operands);\")\n \n-(define_insn \"*<code>v4hi3\"\n+(define_insn \"*mmx_<code>v4hi3\"\n   [(set (match_operand:V4HI 0 \"register_operand\" \"=y\")\n         (smaxmin:V4HI\n \t  (match_operand:V4HI 1 \"nonimmediate_operand\" \"%0\")\n@@ -787,7 +787,7 @@\n   \"TARGET_SSE || TARGET_3DNOW_A\"\n   \"ix86_fixup_binary_operands_no_copy (<CODE>, V8QImode, operands);\")\n \n-(define_insn \"*<code>v8qi3\"\n+(define_insn \"*mmx_<code>v8qi3\"\n   [(set (match_operand:V8QI 0 \"register_operand\" \"=y\")\n         (umaxmin:V8QI\n \t  (match_operand:V8QI 1 \"nonimmediate_operand\" \"%0\")\n@@ -878,7 +878,7 @@\n   \"TARGET_MMX\"\n   \"ix86_fixup_binary_operands_no_copy (<CODE>, <MODE>mode, operands);\")\n \n-(define_insn \"*<code><mode>3\"\n+(define_insn \"*mmx_<code><mode>3\"\n   [(set (match_operand:MMXMODEI 0 \"register_operand\" \"=y\")\n         (plogic:MMXMODEI\n \t  (match_operand:MMXMODEI 1 \"nonimmediate_operand\" \"%0\")"}]}