{"sha": "bcbb974df49f31123d9283eac9d80561258a0ef7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNiYjk3NGRmNDlmMzExMjNkOTI4M2VhYzlkODA1NjEyNThhMGVmNw==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernd.schmidt@analog.com", "date": "2006-11-20T12:40:57Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2006-11-20T12:40:57Z"}, "message": "bfin.c (bfin_function_ok_for_sibcall): Handle some edge cases with local functions and TARGET_ID_SHARED_LIBRARY.\n\n\t* config/bfin/bfin.c (bfin_function_ok_for_sibcall): Handle some\n\tedge cases with local functions and TARGET_ID_SHARED_LIBRARY.\n\nFrom-SVN: r119013", "tree": {"sha": "baa194c46049520fe8a1193c7e40dedc138f13de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/baa194c46049520fe8a1193c7e40dedc138f13de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcbb974df49f31123d9283eac9d80561258a0ef7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcbb974df49f31123d9283eac9d80561258a0ef7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcbb974df49f31123d9283eac9d80561258a0ef7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcbb974df49f31123d9283eac9d80561258a0ef7/comments", "author": null, "committer": null, "parents": [{"sha": "93147119042e5056f979d58573470a9cff2710b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93147119042e5056f979d58573470a9cff2710b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93147119042e5056f979d58573470a9cff2710b0"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "0dc55b7a366b640da42558b862b0bf1837550b52", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcbb974df49f31123d9283eac9d80561258a0ef7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcbb974df49f31123d9283eac9d80561258a0ef7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bcbb974df49f31123d9283eac9d80561258a0ef7", "patch": "@@ -25,6 +25,9 @@\n \t(TARGET_SWITCHES): Add -mleaf-id-shared-library and -msep-data.\n \t* doc/invoke.texi (Blackfin Options): Document new switches.\n \n+\t* config/bfin/bfin.c (bfin_function_ok_for_sibcall): Handle some\n+\tedge cases with local functions and TARGET_ID_SHARED_LIBRARY.\n+\n 2006-11-19  Andrew Pinski  <pinskia@gmail.com>\n \n \tPR rtl-opt/29879"}, {"sha": "b71b12374a16d3bed0fb1999320721a094efd5d6", "filename": "gcc/config/bfin/bfin.c", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcbb974df49f31123d9283eac9d80561258a0ef7/gcc%2Fconfig%2Fbfin%2Fbfin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcbb974df49f31123d9283eac9d80561258a0ef7/gcc%2Fconfig%2Fbfin%2Fbfin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.c?ref=bcbb974df49f31123d9283eac9d80561258a0ef7", "patch": "@@ -1596,7 +1596,28 @@ bfin_function_ok_for_sibcall (tree decl ATTRIBUTE_UNUSED,\n \t\t\t      tree exp ATTRIBUTE_UNUSED)\n {\n   e_funkind fkind = funkind (TREE_TYPE (current_function_decl));\n-  return fkind == SUBROUTINE;\n+  if (fkind != SUBROUTINE)\n+    return false;\n+  if (!TARGET_ID_SHARED_LIBRARY || TARGET_SEP_DATA)\n+    return true;\n+\n+  /* When compiling for ID shared libraries, can't sibcall a local function\n+     from a non-local function, because the local function thinks it does\n+     not need to reload P5 in the prologue, but the sibcall wil pop P5 in the\n+     sibcall epilogue, and we end up with the wrong value in P5.  */\n+\n+  if (!flag_unit_at_a_time || decl == NULL)\n+    /* Not enough information.  */\n+    return false;\n+\n+  {\n+    struct cgraph_local_info *this_func, *called_func;\n+    rtx addr, insn;\n+ \n+    this_func = cgraph_local_info (current_function_decl);\n+    called_func = cgraph_local_info (decl);\n+    return !called_func->local || this_func->local;\n+  }\n }\n \f\n /* Emit RTL insns to initialize the variable parts of a trampoline at"}]}