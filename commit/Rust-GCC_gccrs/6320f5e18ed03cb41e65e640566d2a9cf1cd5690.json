{"sha": "6320f5e18ed03cb41e65e640566d2a9cf1cd5690", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjMyMGY1ZTE4ZWQwM2NiNDFlNjVlNjQwNTY2ZDJhOWNmMWNkNTY5MA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T10:27:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T10:27:16Z"}, "message": "[multiple changes]\n\n2011-08-02  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch5.adb, sem_ch7.adb, einfo.ads, sem_util.adb, sem_util.ads,\n\tsem_res.adb, sem_ch6.adb: Minor reformatting.\n\n2011-08-02  Jerome Guitton  <guitton@adacore.com>\n\n\t* a-except-2005.adb (Raise_Current_Excep): Remove obsolete dead code.\n\nFrom-SVN: r177127", "tree": {"sha": "b4ee8d576fb450f09c1b861f596dfff8de7dd0d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4ee8d576fb450f09c1b861f596dfff8de7dd0d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6320f5e18ed03cb41e65e640566d2a9cf1cd5690", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6320f5e18ed03cb41e65e640566d2a9cf1cd5690", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6320f5e18ed03cb41e65e640566d2a9cf1cd5690", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6320f5e18ed03cb41e65e640566d2a9cf1cd5690/comments", "author": null, "committer": null, "parents": [{"sha": "2fe829aee4382946ff335be64c2e2d4a1f79f484", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fe829aee4382946ff335be64c2e2d4a1f79f484", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fe829aee4382946ff335be64c2e2d4a1f79f484"}], "stats": {"total": 87, "additions": 42, "deletions": 45}, "files": [{"sha": "2a62cee00702d4c19be2b1066885aa366d584329", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6320f5e18ed03cb41e65e640566d2a9cf1cd5690/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6320f5e18ed03cb41e65e640566d2a9cf1cd5690/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6320f5e18ed03cb41e65e640566d2a9cf1cd5690", "patch": "@@ -1,3 +1,12 @@\n+2011-08-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch5.adb, sem_ch7.adb, einfo.ads, sem_util.adb, sem_util.ads,\n+\tsem_res.adb, sem_ch6.adb: Minor reformatting.\n+\n+2011-08-02  Jerome Guitton  <guitton@adacore.com>\n+\n+\t* a-except-2005.adb (Raise_Current_Excep): Remove obsolete dead code.\n+\n 2011-08-02  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch6.adb (New_Overloaded_Entity, Check_Overriding_Indicator): Do"}, {"sha": "6441fd6d16476c1e6cf8e66cfac29f49c4c0a7c2", "filename": "gcc/ada/a-except-2005.adb", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6320f5e18ed03cb41e65e640566d2a9cf1cd5690/gcc%2Fada%2Fa-except-2005.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6320f5e18ed03cb41e65e640566d2a9cf1cd5690/gcc%2Fada%2Fa-except-2005.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except-2005.adb?ref=6320f5e18ed03cb41e65e640566d2a9cf1cd5690", "patch": "@@ -829,31 +829,6 @@ package body Ada.Exceptions is\n    -------------------------\n \n    procedure Raise_Current_Excep (E : Exception_Id) is\n-\n-      pragma Inspection_Point (E);\n-      --  This is so the debugger can reliably inspect the parameter when\n-      --  inserting a breakpoint at the start of this procedure.\n-\n-      --  To provide support for breakpoints on unhandled exceptions, the\n-      --  debugger will also need to be able to inspect the value of E from\n-      --  inner frames so we need to make sure that its value is also spilled\n-      --  on stack.  We take the address and dereference using volatile local\n-      --  objects for this purpose.\n-\n-      --  The pragma Warnings (Off) are needed because the compiler knows that\n-      --  these locals are not referenced and that this use of pragma Volatile\n-      --  is peculiar!\n-\n-      type EID_Access is access Exception_Id;\n-\n-      Access_To_E : EID_Access := E'Unrestricted_Access;\n-      pragma Volatile (Access_To_E);\n-      pragma Warnings (Off, Access_To_E);\n-\n-      Id : Exception_Id := Access_To_E.all;\n-      pragma Volatile (Id);\n-      pragma Warnings (Off, Id);\n-\n    begin\n       Debug_Raise_Exception (E => SSL.Exception_Data_Ptr (E));\n       Exception_Propagation.Propagate_Exception"}, {"sha": "7368fdf64c73016a1bd3938521e4094c91985858", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6320f5e18ed03cb41e65e640566d2a9cf1cd5690/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6320f5e18ed03cb41e65e640566d2a9cf1cd5690/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=6320f5e18ed03cb41e65e640566d2a9cf1cd5690", "patch": "@@ -3233,7 +3233,11 @@ package Einfo is\n \n --    Overridden_Operation (Node26)\n --       Present in subprograms. For overriding operations, points to the\n---       user-defined parent subprogram that is being overridden.\n+--       user-defined parent subprogram that is being overridden. Note: this\n+--       attribute uses the same field as Static_Initialization. The latter\n+--       is only defined for internal initialization procedures, for which\n+--       Overridden_Operation is irrelevant. Thus this attribute must not be\n+--       set for init_procs.\n \n --    Package_Instantiation (Node26)\n --       Present in packages and generic packages. When present, this field\n@@ -3649,7 +3653,9 @@ package Einfo is\n --       initialized statically. The value of this attribute is a positional\n --       aggregate whose components are compile-time static values. Used\n --       when available in object declarations to eliminate the call to the\n---       initialization procedure, and to minimize elaboration code.\n+--       initialization procedure, and to minimize elaboration code. Note:\n+--       This attribute uses the same field as Overridden_Operation, which is\n+--       irrelevant in init_procs.\n \n --    Stored_Constraint (Elist23)\n --       Present in entities that can have discriminants (concurrent types"}, {"sha": "fda070c4633505e3c1c9caeb10555747d28105b0", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6320f5e18ed03cb41e65e640566d2a9cf1cd5690/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6320f5e18ed03cb41e65e640566d2a9cf1cd5690/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=6320f5e18ed03cb41e65e640566d2a9cf1cd5690", "patch": "@@ -807,8 +807,8 @@ package body Sem_Ch5 is\n       HSS   : constant Node_Id := Handled_Statement_Sequence (N);\n \n    begin\n-      --  Only reject block statements that originate from a source block\n-      --  statement, in formal mode.\n+      --  In formal mode, we reject block statements. Note that the case of\n+      --  block statements generated by the expander is fine.\n \n       if Nkind (Original_Node (N)) = N_Block_Statement then\n          Check_Formal_Restriction (\"block statement is not allowed\", N);"}, {"sha": "97f57a93353d060edb7ce5d8846225fe6b51d8c9", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6320f5e18ed03cb41e65e640566d2a9cf1cd5690/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6320f5e18ed03cb41e65e640566d2a9cf1cd5690/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=6320f5e18ed03cb41e65e640566d2a9cf1cd5690", "patch": "@@ -8367,6 +8367,15 @@ package body Sem_Ch6 is\n                      then\n                         Set_Overridden_Operation (S, Alias (E));\n \n+                     --  Normal case of setting entity as overridden\n+\n+                     --  Note: Static_Initialization and Overridden_Operation\n+                     --  attributes use the same field in subprogram entities.\n+                     --  Static_Initialization is only defined for internal\n+                     --  initialization procedures, where Overridden_Operation\n+                     --  is irrelevant. Therefore the setting of this attribute\n+                     --  must check whether the target is an init_proc.\n+\n                      elsif not Is_Init_Proc (S) then\n                         Set_Overridden_Operation (S, E);\n                      end if;"}, {"sha": "caf2a73d04b21dc4137014065e4c595a2dabdfce", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6320f5e18ed03cb41e65e640566d2a9cf1cd5690/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6320f5e18ed03cb41e65e640566d2a9cf1cd5690/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=6320f5e18ed03cb41e65e640566d2a9cf1cd5690", "patch": "@@ -925,6 +925,7 @@ package body Sem_Ch7 is\n \n          procedure Check_Decls (Decls : List_Id) is\n             Decl : Node_Id;\n+\n          begin\n             Decl := First (Decls);\n             while Present (Decl) loop\n@@ -933,6 +934,7 @@ package body Sem_Ch7 is\n                then\n                   if No (Previous) then\n                      Previous := Decl;\n+\n                   else\n                      Error_Msg_Sloc := Sloc (Previous);\n                      Check_Formal_Restriction"}, {"sha": "072baf48362aa7eebf33ff8ff2ffea578f92e443", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6320f5e18ed03cb41e65e640566d2a9cf1cd5690/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6320f5e18ed03cb41e65e640566d2a9cf1cd5690/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=6320f5e18ed03cb41e65e640566d2a9cf1cd5690", "patch": "@@ -3586,9 +3586,8 @@ package body Sem_Res is\n             F_Typ := Etype (F);\n \n             if Comes_From_Source (Original_Node (N))\n-              and then Nkind_In (Original_Node (N),\n-                                 N_Function_Call,\n-                                 N_Procedure_Call_Statement)\n+              and then Nkind_In (Original_Node (N), N_Function_Call,\n+                                                    N_Procedure_Call_Statement)\n             then\n                --  In formal mode, check that actual parameters matching\n                --  formals of tagged types are objects (or ancestor type"}, {"sha": "1ef8b8337299ed6841923b80004d183d7bd4f46e", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6320f5e18ed03cb41e65e640566d2a9cf1cd5690/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6320f5e18ed03cb41e65e640566d2a9cf1cd5690/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=6320f5e18ed03cb41e65e640566d2a9cf1cd5690", "patch": "@@ -6855,16 +6855,14 @@ package body Sem_Util is\n          return Present (Entity (N))\n            and then\n              (Ekind_In (Entity (N), E_Constant, E_Variable)\n-              or else Ekind (Entity (N)) in Formal_Kind);\n+               or else Ekind (Entity (N)) in Formal_Kind);\n \n       else\n-         case Nkind (N) is\n-            when N_Selected_Component =>\n-               return Is_SPARK_Object_Reference (Prefix (N));\n-\n-            when others =>\n-               return False;\n-         end case;\n+         if Nkind (N) = N_Selected_Component then\n+            return Is_SPARK_Object_Reference (Prefix (N));\n+         else\n+            return False;\n+         end if;\n       end if;\n    end Is_SPARK_Object_Reference;\n "}, {"sha": "d10b53f982ab2322678f507d3790def864ffc7b5", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6320f5e18ed03cb41e65e640566d2a9cf1cd5690/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6320f5e18ed03cb41e65e640566d2a9cf1cd5690/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=6320f5e18ed03cb41e65e640566d2a9cf1cd5690", "patch": "@@ -355,10 +355,9 @@ package Sem_Util is\n       Call   : out Node_Id);\n    --  Determines if the node N is an actual parameter of a function of a\n    --  procedure call. If so, then Formal points to the entity for the formal\n-   --  (whose Ekind is one of E_In_Parameter, E_Out_Parameter,\n-   --  E_In_Out_Parameter) and Call is set to the node for the corresponding\n-   --  call. If the node N is not an actual parameter then Formal and Call are\n-   --  set to Empty.\n+   --  (Ekind is E_In_Parameter, E_Out_Parameter, or E_In_Out_Parameter) and\n+   --  Call is set to the node for the corresponding call. If the node N is not\n+   --  an actual parameter then Formal and Call are set to Empty.\n \n    function Find_Corresponding_Discriminant\n      (Id   : Node_Id;\n@@ -768,7 +767,7 @@ package Sem_Util is\n    --  variable and constant objects return True (compare Is_Variable).\n \n    function Is_SPARK_Object_Reference (N : Node_Id) return Boolean;\n-   --  Determines if the tree referenced by N represents an object in SPARK.\n+   --  Determines if the tree referenced by N represents an object in SPARK\n \n    function Is_OK_Variable_For_Out_Formal (AV : Node_Id) return Boolean;\n    --  Used to test if AV is an acceptable formal for an OUT or IN OUT formal."}]}