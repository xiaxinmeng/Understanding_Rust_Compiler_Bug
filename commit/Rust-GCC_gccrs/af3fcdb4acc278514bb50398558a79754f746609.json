{"sha": "af3fcdb4acc278514bb50398558a79754f746609", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWYzZmNkYjRhY2MyNzg1MTRiYjUwMzk4NTU4YTc5NzU0Zjc0NjYwOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-12-14T13:56:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-12-14T13:56:25Z"}, "message": "re PR fortran/46874 ([OpenMP] ICE in gfc_conv_descriptor_data_get, at fortran/trans-array.c:147)\n\n\tPR fortran/46874\n\t* trans-openmp.c (gfc_trans_omp_array_reduction): Handle allocatable\n\tdummy variables.\n\n\t* libgomp.fortran/allocatable6.f90: New test.\n\nFrom-SVN: r167798", "tree": {"sha": "5b50de920ec355e80344945e3a433b52bd6cdc9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b50de920ec355e80344945e3a433b52bd6cdc9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af3fcdb4acc278514bb50398558a79754f746609", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af3fcdb4acc278514bb50398558a79754f746609", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af3fcdb4acc278514bb50398558a79754f746609", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af3fcdb4acc278514bb50398558a79754f746609/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ae9fd6b7cd6ab8d777612aa1b721a8c3112e2c5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae9fd6b7cd6ab8d777612aa1b721a8c3112e2c5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae9fd6b7cd6ab8d777612aa1b721a8c3112e2c5e"}], "stats": {"total": 84, "additions": 76, "deletions": 8}, "files": [{"sha": "230724e375d23f2c9b80b362039c09dd21903c41", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af3fcdb4acc278514bb50398558a79754f746609/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af3fcdb4acc278514bb50398558a79754f746609/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=af3fcdb4acc278514bb50398558a79754f746609", "patch": "@@ -1,3 +1,9 @@\n+2010-12-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/46874\n+\t* trans-openmp.c (gfc_trans_omp_array_reduction): Handle allocatable\n+\tdummy variables.\n+\n 2010-12-13  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/46201"}, {"sha": "53eb99990bc4e8618b0ef0a039833b1c2cda7c8c", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af3fcdb4acc278514bb50398558a79754f746609/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af3fcdb4acc278514bb50398558a79754f746609/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=af3fcdb4acc278514bb50398558a79754f746609", "patch": "@@ -482,13 +482,23 @@ gfc_trans_omp_array_reduction (tree c, gfc_symbol *sym, locus where)\n   gfc_symbol init_val_sym, outer_sym, intrinsic_sym;\n   gfc_expr *e1, *e2, *e3, *e4;\n   gfc_ref *ref;\n-  tree decl, backend_decl, stmt;\n+  tree decl, backend_decl, stmt, type, outer_decl;\n   locus old_loc = gfc_current_locus;\n   const char *iname;\n   gfc_try t;\n \n   decl = OMP_CLAUSE_DECL (c);\n   gfc_current_locus = where;\n+  type = TREE_TYPE (decl);\n+  outer_decl = create_tmp_var_raw (type, NULL);\n+  if (TREE_CODE (decl) == PARM_DECL\n+      && TREE_CODE (type) == REFERENCE_TYPE\n+      && GFC_DESCRIPTOR_TYPE_P (TREE_TYPE (type))\n+      && GFC_TYPE_ARRAY_AKIND (TREE_TYPE (type)) == GFC_ARRAY_ALLOCATABLE)\n+    {\n+      decl = build_fold_indirect_ref (decl);\n+      type = TREE_TYPE (type);\n+    }\n \n   /* Create a fake symbol for init value.  */\n   memset (&init_val_sym, 0, sizeof (init_val_sym));\n@@ -507,7 +517,9 @@ gfc_trans_omp_array_reduction (tree c, gfc_symbol *sym, locus where)\n   outer_sym.attr.dummy = 0;\n   outer_sym.attr.result = 0;\n   outer_sym.attr.flavor = FL_VARIABLE;\n-  outer_sym.backend_decl = create_tmp_var_raw (TREE_TYPE (decl), NULL);\n+  outer_sym.backend_decl = outer_decl;\n+  if (decl != OMP_CLAUSE_DECL (c))\n+    outer_sym.backend_decl = build_fold_indirect_ref (outer_decl);\n \n   /* Create fake symtrees for it.  */\n   symtree1 = gfc_new_symtree (&root1, sym->name);\n@@ -624,12 +636,12 @@ gfc_trans_omp_array_reduction (tree c, gfc_symbol *sym, locus where)\n \n   /* Create the init statement list.  */\n   pushlevel (0);\n-  if (GFC_DESCRIPTOR_TYPE_P (TREE_TYPE (decl))\n-      && GFC_TYPE_ARRAY_AKIND (TREE_TYPE (decl)) == GFC_ARRAY_ALLOCATABLE)\n+  if (GFC_DESCRIPTOR_TYPE_P (type)\n+      && GFC_TYPE_ARRAY_AKIND (type) == GFC_ARRAY_ALLOCATABLE)\n     {\n       /* If decl is an allocatable array, it needs to be allocated\n \t with the same bounds as the outer var.  */\n-      tree type = TREE_TYPE (decl), rank, size, esize, ptr;\n+      tree rank, size, esize, ptr;\n       stmtblock_t block;\n \n       gfc_start_block (&block);\n@@ -669,8 +681,8 @@ gfc_trans_omp_array_reduction (tree c, gfc_symbol *sym, locus where)\n \n   /* Create the merge statement list.  */\n   pushlevel (0);\n-  if (GFC_DESCRIPTOR_TYPE_P (TREE_TYPE (decl))\n-      && GFC_TYPE_ARRAY_AKIND (TREE_TYPE (decl)) == GFC_ARRAY_ALLOCATABLE)\n+  if (GFC_DESCRIPTOR_TYPE_P (type)\n+      && GFC_TYPE_ARRAY_AKIND (type) == GFC_ARRAY_ALLOCATABLE)\n     {\n       /* If decl is an allocatable array, it needs to be deallocated\n \t afterwards.  */\n@@ -691,7 +703,7 @@ gfc_trans_omp_array_reduction (tree c, gfc_symbol *sym, locus where)\n   OMP_CLAUSE_REDUCTION_MERGE (c) = stmt;\n \n   /* And stick the placeholder VAR_DECL into the clause as well.  */\n-  OMP_CLAUSE_REDUCTION_PLACEHOLDER (c) = outer_sym.backend_decl;\n+  OMP_CLAUSE_REDUCTION_PLACEHOLDER (c) = outer_decl;\n \n   gfc_current_locus = old_loc;\n "}, {"sha": "f73aa035394004e2a25111ba275b396c2bda2bd0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af3fcdb4acc278514bb50398558a79754f746609/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af3fcdb4acc278514bb50398558a79754f746609/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=af3fcdb4acc278514bb50398558a79754f746609", "patch": "@@ -1,3 +1,8 @@\n+2010-12-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/46874\n+\t* libgomp.fortran/allocatable6.f90: New test.\n+\n 2010-12-14  Alexander Monakov  <amonakov@ispras.ru>\n \n \tPR rtl-optimization/46875"}, {"sha": "47b67aa56d0574074edf745ea2a3db1cc7b5a3f1", "filename": "libgomp/testsuite/libgomp.fortran/allocatable6.f90", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af3fcdb4acc278514bb50398558a79754f746609/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af3fcdb4acc278514bb50398558a79754f746609/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fallocatable6.f90?ref=af3fcdb4acc278514bb50398558a79754f746609", "patch": "@@ -0,0 +1,45 @@\n+! PR fortran/46874\n+! { dg-do run }\n+\n+  interface\n+    subroutine sub (a, b, c, d, n)\n+      integer :: n\n+      integer, allocatable :: a(:), b(:), c(:), d(:)\n+    end subroutine\n+  end interface\n+\n+  integer, allocatable :: a(:), b(:), c(:), d(:)\n+  integer :: i, j\n+  allocate (a(50), b(50), c(50), d(50))\n+  do i = 1, 50\n+    a(i) = 2 + modulo (i, 7)\n+    b(i) = 179 - modulo (i, 11)\n+  end do\n+  c = 0\n+  d = 2147483647\n+  call sub (a, b, c, d, 50)\n+  do i = 1, 50\n+    j = 0\n+    if (i .eq. 3) then\n+      j = 8\n+    else if (i .gt. 1 .and. i .lt. 9) then\n+      j = 7\n+    end if\n+    if (c(i) .ne. j) call abort\n+    j = 179 - modulo (i, 11)\n+    if (i .gt. 1 .and. i .lt. 9) j = i\n+    if (d(i) .ne. j) call abort\n+  end do\n+  deallocate (a, b, c, d)\n+end\n+\n+subroutine sub (a, b, c, d, n)\n+  integer :: n\n+  integer, allocatable :: a(:), b(:), c(:), d(:)\n+!$omp parallel do shared(a, b) reduction(+:c) reduction(min:d)\n+  do i = 1, n\n+    c(a(i)) = c(a(i)) + 1\n+    d(i) = min(d(i), b(i))\n+    d(a(i)) = min(d(a(i)), a(i))\n+  end do\n+end"}]}