{"sha": "d313a1b6bc336a4061de1c19e9903daa125a6561", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMxM2ExYjZiYzMzNmE0MDYxZGUxYzE5ZTk5MDNkYWExMjVhNjU2MQ==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2008-05-23T13:28:41Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-23T13:28:41Z"}, "message": "gnatlink.adb (Process_Args): Do not disable scanning of ALI file for back end switches when...\n\n2008-05-23  Vincent Celier  <celier@adacore.com>\n\n\t* gnatlink.adb (Process_Args): Do not disable scanning of ALI file for\n\tback end switches when executable specified with --GCC= is same as\n\tdefault, even if there are additional options.\n\n\t* gnat_ugn.texi:\n\tDocument when the back end switches from the ALI file are taken into\n\taccount when gnatlink is invoked with --GCC=\n\nFrom-SVN: r135804", "tree": {"sha": "2c314468ab7a60edc3c5b5e1ba6248845c2e8390", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c314468ab7a60edc3c5b5e1ba6248845c2e8390"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d313a1b6bc336a4061de1c19e9903daa125a6561", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d313a1b6bc336a4061de1c19e9903daa125a6561", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d313a1b6bc336a4061de1c19e9903daa125a6561", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d313a1b6bc336a4061de1c19e9903daa125a6561/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d3132623b6d9ae24851bfd9c5d053722b4dafbd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3132623b6d9ae24851bfd9c5d053722b4dafbd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3132623b6d9ae24851bfd9c5d053722b4dafbd5"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "a14afdeeb8ca62eeb9cfedf8a8f7c3b8c817f2d8", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d313a1b6bc336a4061de1c19e9903daa125a6561/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d313a1b6bc336a4061de1c19e9903daa125a6561/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=d313a1b6bc336a4061de1c19e9903daa125a6561", "patch": "@@ -8597,7 +8597,11 @@ use @code{foo -x -y} as your compiler. Note that switch @option{-c} is always\n inserted after your command name. Thus in the above example the compiler\n command that will be used by @command{gnatlink} will be @code{foo -c -x -y}.\n A limitation of this syntax is that the name and path name of the executable\n-itself must not include any embedded spaces. If several\n+itself must not include any embedded spaces. If the compiler executable is\n+different from the default one (gcc or <prefix>-gcc), then the back-end\n+switches in the ALI file are not used to compile the binder generated source.\n+For example, this is the case with @option{--GCC=\"foo -x -y\"}. But the back end\n+switches will be used for @option{--GCC=\"gcc -gnatv\"}. If several\n @option{--GCC=compiler_name} are used, only the last @var{compiler_name}\n is taken into account. However, all the additional switches are also taken\n into account. Thus,"}, {"sha": "256504bf6eb70ba7bef9a90d53ee195ce2035b34", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d313a1b6bc336a4061de1c19e9903daa125a6561/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d313a1b6bc336a4061de1c19e9903daa125a6561/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=d313a1b6bc336a4061de1c19e9903daa125a6561", "patch": "@@ -521,8 +521,10 @@ procedure Gnatlink is\n                                                  (Arg (7 .. Arg'Last));\n \n                   begin\n-                     Gcc := new String'(Program_Args.all (1).all);\n-                     Standard_Gcc := False;\n+                     if Program_Args.all (1).all /= Gcc.all then\n+                        Gcc := new String'(Program_Args.all (1).all);\n+                        Standard_Gcc := False;\n+                     end if;\n \n                      --  Set appropriate flags for switches passed\n "}]}