{"sha": "eeb971c961d1a1056bffb17ccb7ff491faa5c708", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWViOTcxYzk2MWQxYTEwNTZiZmZiMTdjY2I3ZmY0OTFmYWE1YzcwOA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-03-05T22:52:02Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-03-05T22:52:02Z"}, "message": "Makefile.in (PLUGINCC, [...]): New variables.\n\n\t* Makefile.in (PLUGINCC, PLUGINCFLAGS): New variables.\n\t(site.exp): Export them when plugins are enabled.\ntestsuite/\n\t* lib/plugin-support.exp (plugin-test-execute): Use PLUGINCC in lieu\n\tof HOSTCC and PLUGINCFLAGS in lieu of HOSTCFLAGS.\n\nFrom-SVN: r157246", "tree": {"sha": "e8c578e27f33e8dba8354f3e819e4984a23312f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8c578e27f33e8dba8354f3e819e4984a23312f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eeb971c961d1a1056bffb17ccb7ff491faa5c708", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeb971c961d1a1056bffb17ccb7ff491faa5c708", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eeb971c961d1a1056bffb17ccb7ff491faa5c708", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeb971c961d1a1056bffb17ccb7ff491faa5c708/comments", "author": null, "committer": null, "parents": [{"sha": "1b88f240b95de117532dfcdc95280b6c05dc6500", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b88f240b95de117532dfcdc95280b6c05dc6500", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b88f240b95de117532dfcdc95280b6c05dc6500"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "9bc8167205626c242f2a545a2a8d1dffac397acc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeb971c961d1a1056bffb17ccb7ff491faa5c708/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeb971c961d1a1056bffb17ccb7ff491faa5c708/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eeb971c961d1a1056bffb17ccb7ff491faa5c708", "patch": "@@ -1,3 +1,8 @@\n+2010-03-05  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* Makefile.in (PLUGINCC, PLUGINCFLAGS): New variables.\n+\t(site.exp): Export them when plugins are enabled.\n+\n 2010-03-05  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/42326"}, {"sha": "bea6cf2b8ccce8ffb427fdb8332ac2f6391c9a7d", "filename": "gcc/Makefile.in", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeb971c961d1a1056bffb17ccb7ff491faa5c708/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeb971c961d1a1056bffb17ccb7ff491faa5c708/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=eeb971c961d1a1056bffb17ccb7ff491faa5c708", "patch": "@@ -325,7 +325,13 @@ LIBELFINC = @LIBELFINC@\n # Set to 'yes' if the LTO front end is enabled.\n enable_lto = @enable_lto@\n \n-# Libs and linker option needed for plugin support\n+# Compiler needed for plugin support\n+PLUGINCC = @CC@\n+\n+# Flags needed for plugin support\n+PLUGINCFLAGS = @CFLAGS@\n+\n+# Libs and linker options needed for plugin support\n PLUGINLIBS = @pluginlibs@\n \n enable_plugin = @enable_plugin@\n@@ -4598,6 +4604,8 @@ site.exp: ./config.status Makefile\n \t@echo \"set HAVE_LIBSTDCXX_V3 1\" >> ./tmp0\n \t@if test \"@enable_plugin@\" = \"yes\" ; then \\\n \t  echo \"set ENABLE_PLUGIN 1\" >> ./tmp0; \\\n+\t  echo \"set PLUGINCC \\\"$(PLUGINCC)\\\"\" >> ./tmp0; \\\n+\t  echo \"set PLUGINCFLAGS \\\"$(PLUGINCFLAGS)\\\"\" >> ./tmp0; \\\n \t  echo \"set GMPINC \\\"$(GMPINC)\\\"\" >> ./tmp0; \\\n \tfi\n \t@if test \"@enable_lto@\" = \"yes\" ; then \\"}, {"sha": "8f81bb0c1ad70f996689240c4d1cbd18517b7010", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeb971c961d1a1056bffb17ccb7ff491faa5c708/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeb971c961d1a1056bffb17ccb7ff491faa5c708/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eeb971c961d1a1056bffb17ccb7ff491faa5c708", "patch": "@@ -1,3 +1,8 @@\n+2010-03-05  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* lib/plugin-support.exp (plugin-test-execute): Use PLUGINCC in lieu\n+\tof HOSTCC and PLUGINCFLAGS in lieu of HOSTCFLAGS.\n+\n 2010-03-05  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/abi/mangle40.C: Require weak and alias."}, {"sha": "3a7b78ab956f4fa56f71891a86a3fb89af1c6ede", "filename": "gcc/testsuite/lib/plugin-support.exp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eeb971c961d1a1056bffb17ccb7ff491faa5c708/gcc%2Ftestsuite%2Flib%2Fplugin-support.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eeb971c961d1a1056bffb17ccb7ff491faa5c708/gcc%2Ftestsuite%2Flib%2Fplugin-support.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fplugin-support.exp?ref=eeb971c961d1a1056bffb17ccb7ff491faa5c708", "patch": "@@ -63,8 +63,8 @@ proc plugin-test-execute { plugin_src plugin_tests } {\n     global srcdir objdir\n     global verbose\n     global GMPINC\n-    global HOSTCC\n-    global HOSTCFLAGS\n+    global PLUGINCC\n+    global PLUGINCFLAGS\n \n     set basename [file tail $plugin_src]\n     set base [file rootname $basename]\n@@ -88,9 +88,9 @@ proc plugin-test-execute { plugin_src plugin_tests } {\n \n     set optstr \"$includes $extra_flags -DIN_GCC -fPIC -shared\"\n \n-    # Temporarily switch to the environment for the host compiler.\n+    # Temporarily switch to the environment for the plugin compiler.\n     restore_ld_library_path_env_vars\n-    set status [remote_exec build \"$HOSTCC $HOSTCFLAGS $plugin_src $optstr -o $plugin_lib\"]\n+    set status [remote_exec build \"$PLUGINCC $PLUGINCFLAGS $plugin_src $optstr -o $plugin_lib\"]\n     set status [lindex $status 0]\n     set_ld_library_path_env_vars\n "}]}