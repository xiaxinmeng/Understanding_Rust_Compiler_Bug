{"sha": "e2ef2bf880b8c33ac444c6fdf4e6afc2852ff19b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJlZjJiZjg4MGI4YzMzYWM0NDRjNmZkZjRlNmFmYzI4NTJmZjE5Yg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2000-12-18T23:13:05Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-12-18T23:13:05Z"}, "message": "mauve.exp (test_mauve): Don't look for exceptions thrown in the test harness.\n\n\t* libjava.mauve/mauve.exp (test_mauve): Don't look for exceptions\n\tthrown in the test harness.\n\t(test_mauve_sim): Likewise.\n\nFrom-SVN: r38368", "tree": {"sha": "96c2acbc2d6dd24102cc159595abc8a4ef535eab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96c2acbc2d6dd24102cc159595abc8a4ef535eab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2ef2bf880b8c33ac444c6fdf4e6afc2852ff19b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2ef2bf880b8c33ac444c6fdf4e6afc2852ff19b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2ef2bf880b8c33ac444c6fdf4e6afc2852ff19b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2ef2bf880b8c33ac444c6fdf4e6afc2852ff19b/comments", "author": null, "committer": null, "parents": [{"sha": "be36b6d0ddea7d6fab501cc44118d2d5daf750d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be36b6d0ddea7d6fab501cc44118d2d5daf750d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be36b6d0ddea7d6fab501cc44118d2d5daf750d8"}], "stats": {"total": 28, "additions": 6, "deletions": 22}, "files": [{"sha": "15c61dd0263ef1ee31a58b8cb8cf3ee15d7bb8ab", "filename": "libjava/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ef2bf880b8c33ac444c6fdf4e6afc2852ff19b/libjava%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ef2bf880b8c33ac444c6fdf4e6afc2852ff19b/libjava%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FChangeLog?ref=e2ef2bf880b8c33ac444c6fdf4e6afc2852ff19b", "patch": "@@ -1,3 +1,9 @@\n+2000-12-18  Tom Tromey  <tromey@redhat.com>\n+\n+\t* libjava.mauve/mauve.exp (test_mauve): Don't look for exceptions\n+\tthrown in the test harness.\n+\t(test_mauve_sim): Likewise.\n+\n 2000-12-16  Tom Tromey  <tromey@redhat.com>\n \n \t* lib/libjava.exp (test_libjava_from_javac): Strange quoting trick"}, {"sha": "ba230335a4cfeb3d6d44f4af663552ee047a6afa", "filename": "libjava/testsuite/libjava.mauve/mauve.exp", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ef2bf880b8c33ac444c6fdf4e6afc2852ff19b/libjava%2Ftestsuite%2Flibjava.mauve%2Fmauve.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ef2bf880b8c33ac444c6fdf4e6afc2852ff19b/libjava%2Ftestsuite%2Flibjava.mauve%2Fmauve.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.mauve%2Fmauve.exp?ref=e2ef2bf880b8c33ac444c6fdf4e6afc2852ff19b", "patch": "@@ -186,17 +186,6 @@ proc test_mauve {} {\n     set result [libjava_load [pwd]/DejaGNUTestHarness \\\n \t\t  \"$env(MAUVEDIR) $class\" \"\"]\n \n-    # Test for an exception thrown in the test harness itself.  This\n-    # isn't enough to test for all faults in the test harness, but\n-    # it's better than nothing.\n-    set output [lindex $result 1];\n-    if [regexp \"Exception: \" $output] then {\n-      fail $output\n-      continue\n-    }\n-\n-    pass \"Execute for $class\"\n-\n     # Extract pass/failure info from output.\n     foreach line [split [lindex $result 1] \\n] {\n       if {[regexp -- {^(PASS|FAIL): (.*)$} $line ignore what msg]} then {\n@@ -354,17 +343,6 @@ proc test_mauve_sim {} {\n     set result [libjava_load [pwd]/DejaGNUTestHarness \\\n \t\t  \"$env(MAUVEDIR) $class\" \"\"]\n \n-    # Test for an exception thrown in the test harness itself.  This\n-    # isn't enough to test for all faults in the test harness, but\n-    # it's better than nothing.\n-    set output [lindex $result 1];\n-    if [regexp \"Exception: \" $output] then {\n-      fail $output\n-      continue\n-    }\n-\n-    pass \"Execute for $class\"\n-\n     # Extract pass/failure info from output.\n     foreach line [split [lindex $result 1] \\n] {\n       if {[regexp -- {^(PASS|FAIL): (.*)$} $line ignore what msg]} then {"}]}