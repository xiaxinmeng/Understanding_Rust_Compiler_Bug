{"sha": "3185dc73adc9a441e2d5d7e8b65a39d205f6efc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE4NWRjNzNhZGM5YTQ0MWUyZDVkN2U4YjY1YTM5ZDIwNWY2ZWZjOQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-11-18T00:38:19Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-11-18T00:38:19Z"}, "message": "Initial revision\n\nFrom-SVN: r8499", "tree": {"sha": "06549fdb51578e63ec03855473a73abd11bb893e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06549fdb51578e63ec03855473a73abd11bb893e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3185dc73adc9a441e2d5d7e8b65a39d205f6efc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3185dc73adc9a441e2d5d7e8b65a39d205f6efc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3185dc73adc9a441e2d5d7e8b65a39d205f6efc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3185dc73adc9a441e2d5d7e8b65a39d205f6efc9/comments", "author": null, "committer": null, "parents": [{"sha": "64a9435122db3090c3d7b3d7809a187bb3c8efae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64a9435122db3090c3d7b3d7809a187bb3c8efae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64a9435122db3090c3d7b3d7809a187bb3c8efae"}], "stats": {"total": 273, "additions": 273, "deletions": 0}, "files": [{"sha": "d347c558dbdaa0484ad248eb3d2732c92c5b30e5", "filename": "gcc/config/mips/elf.h", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3185dc73adc9a441e2d5d7e8b65a39d205f6efc9/gcc%2Fconfig%2Fmips%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3185dc73adc9a441e2d5d7e8b65a39d205f6efc9/gcc%2Fconfig%2Fmips%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felf.h?ref=3185dc73adc9a441e2d5d7e8b65a39d205f6efc9", "patch": "@@ -0,0 +1,45 @@\n+/* Definitions of target machine for GNU compiler.  MIPS R3000 version with\n+   GOFAST floating point library.\n+   Copyright (C) 1994 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+/* Use ELF.  */\n+#define OBJECT_FORMAT_ELF\n+\n+/* Until we figure out what MIPS ELF targets normally use, just do\n+   stabs in ELF.  */\n+#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n+\n+/* Mostly like ECOFF.  */\n+#include \"mips/ecoff.h\"\n+\n+/* We need to use .esize and .etype instead of .size and .type to\n+   avoid conflicting with ELF directives.  */\n+#undef PUT_SDB_SIZE\n+#define PUT_SDB_SIZE(a)\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\\\n+  extern FILE *asm_out_text_file;\t\t\t\\\n+  fprintf (asm_out_text_file, \"\\t.esize\\t%d;\", (a));\t\\\n+} while (0)\n+\n+#undef PUT_SDB_TYPE\n+#define PUT_SDB_TYPE(a)\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\\\n+  extern FILE *asm_out_text_file;\t\t\t\\\n+  fprintf (asm_out_text_file, \"\\t.etype\\t0x%x;\", (a));\t\\\n+} while (0)"}, {"sha": "4540d8332b9d6154500503df5a91a5a8ab2f4c09", "filename": "gcc/config/mips/elf64.h", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3185dc73adc9a441e2d5d7e8b65a39d205f6efc9/gcc%2Fconfig%2Fmips%2Felf64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3185dc73adc9a441e2d5d7e8b65a39d205f6efc9/gcc%2Fconfig%2Fmips%2Felf64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felf64.h?ref=3185dc73adc9a441e2d5d7e8b65a39d205f6efc9", "patch": "@@ -0,0 +1,73 @@\n+/* Definitions of target machine for GNU compiler.  MIPS R4000 version with\n+   GOFAST floating point library.\n+   Copyright (C) 1994 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#define OBJECT_FORMAT_ELF\n+\n+/* Default to -mips3.  */\n+#define TARGET_DEFAULT MASK_FLOAT64|MASK_64BIT\n+#define MIPS_ISA_DEFAULT 3\n+\n+/* Until we figure out what MIPS ELF targets normally use, just do\n+   stabs in ELF.  */\n+#define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n+\n+#include \"mips/mips.h\"\n+\n+#undef CPP_PREDEFINES\n+#define CPP_PREDEFINES \"-Dmips -DMIPSEB -DR4000 -D_mips -D_MIPSEB -D_R4000\"\n+\n+/* This is the same as the one in mips64.h except that it defines __mips=3\n+   at the end.  I would rather put this in CPP_PREDEFINES, but the gcc\n+   driver doesn't handle -U options in CPP_PREDEFINES.  */\n+#undef CPP_SPEC\n+#define CPP_SPEC \"\\\n+%{.cc:\t-D__LANGUAGE_C_PLUS_PLUS -D_LANGUAGE_C_PLUS_PLUS} \\\n+%{.cxx:\t-D__LANGUAGE_C_PLUS_PLUS -D_LANGUAGE_C_PLUS_PLUS} \\\n+%{.C:\t-D__LANGUAGE_C_PLUS_PLUS -D_LANGUAGE_C_PLUS_PLUS} \\\n+%{.m:\t-D__LANGUAGE_OBJECTIVE_C -D_LANGUAGE_OBJECTIVE_C} \\\n+%{.S:\t-D__LANGUAGE_ASSEMBLY -D_LANGUAGE_ASSEMBLY %{!ansi:-DLANGUAGE_ASSEMBLY}} \\\n+%{.s:\t-D__LANGUAGE_ASSEMBLY -D_LANGUAGE_ASSEMBLY %{!ansi:-DLANGUAGE_ASSEMBLY}} \\\n+%{!.S:%{!.s:\t-D__LANGUAGE_C -D_LANGUAGE_C %{!ansi:-DLANGUAGE_C}}} \\\n+%{mlong64:-D__SIZE_TYPE__=long\\\\ unsigned\\\\ int -D__PTRDIFF_TYPE__=long\\\\ int} \\\n+%{!mlong64:-D__SIZE_TYPE__=unsigned\\\\ int -D__PTRDIFF_TYPE__=int} \\\n+%{!mips1:%{!mips2:-U__mips -D__mips=3}}\"\n+\n+/* Use memcpy, et. al., rather than bcopy.  */\n+#define TARGET_MEM_FUNCTIONS\n+\n+/* US Software GOFAST library support.  */\n+#include \"gofast.h\"\n+#define INIT_TARGET_OPTABS INIT_GOFAST_OPTABS\n+\n+/* We need to use .esize and .etype instead of .size and .type to\n+   avoid conflicting with ELF directives.  */\n+#undef PUT_SDB_SIZE\n+#define PUT_SDB_SIZE(a)\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\\\n+  extern FILE *asm_out_text_file;\t\t\t\\\n+  fprintf (asm_out_text_file, \"\\t.esize\\t%d;\", (a));\t\\\n+} while (0)\n+\n+#undef PUT_SDB_TYPE\n+#define PUT_SDB_TYPE(a)\t\t\t\t\t\\\n+do {\t\t\t\t\t\t\t\\\n+  extern FILE *asm_out_text_file;\t\t\t\\\n+  fprintf (asm_out_text_file, \"\\t.etype\\t0x%x;\", (a));\t\\\n+} while (0)"}, {"sha": "5bed89bad821a03ad5d069a1d388f1a3eea66af1", "filename": "gcc/config/mips/elfl.h", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3185dc73adc9a441e2d5d7e8b65a39d205f6efc9/gcc%2Fconfig%2Fmips%2Felfl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3185dc73adc9a441e2d5d7e8b65a39d205f6efc9/gcc%2Fconfig%2Fmips%2Felfl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felfl.h?ref=3185dc73adc9a441e2d5d7e8b65a39d205f6efc9", "patch": "@@ -0,0 +1,28 @@\n+/* Definitions of target machine for GNU compiler.  Little endian MIPS\n+   R3000 version with GOFAST floating point library.\n+   Copyright (C) 1994 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+/* This is a little endian version of ecoff.h.  */\n+\n+#define TARGET_ENDIAN_DEFAULT 0\n+\n+#include \"mips/elf.h\"\n+\n+#undef CPP_PREDEFINES\n+#define CPP_PREDEFINES \"-Dmips -DMIPSEL -DR3000 -D_mips -D_MIPSEL -D_R3000\""}, {"sha": "dadcc6c572d1d7080c6ce32c859e547a607e4cde", "filename": "gcc/config/mips/elfl64.h", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3185dc73adc9a441e2d5d7e8b65a39d205f6efc9/gcc%2Fconfig%2Fmips%2Felfl64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3185dc73adc9a441e2d5d7e8b65a39d205f6efc9/gcc%2Fconfig%2Fmips%2Felfl64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felfl64.h?ref=3185dc73adc9a441e2d5d7e8b65a39d205f6efc9", "patch": "@@ -0,0 +1,28 @@\n+/* Definitions of target machine for GNU compiler.  Little endian MIPS\n+   R4000 version with GOFAST floating point library.\n+   Copyright (C) 1994 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+/* This is a little endian version of ecoff.h.  */\n+\n+#define TARGET_ENDIAN_DEFAULT 0\n+\n+#include \"mips/elf64.h\"\n+\n+#undef CPP_PREDEFINES\n+#define CPP_PREDEFINES \"-Dmips -DMIPSEL -DR4000 -D_mips -D_MIPSEL -D_R4000\""}, {"sha": "b6a2aab38fe8a77360b655aef06d5e0b6a069cfe", "filename": "gcc/config/mips/elforion.h", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3185dc73adc9a441e2d5d7e8b65a39d205f6efc9/gcc%2Fconfig%2Fmips%2Felforion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3185dc73adc9a441e2d5d7e8b65a39d205f6efc9/gcc%2Fconfig%2Fmips%2Felforion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felforion.h?ref=3185dc73adc9a441e2d5d7e8b65a39d205f6efc9", "patch": "@@ -0,0 +1,24 @@\n+/* Definitions of target machine for GNU compiler.  MIPS ORION version with\n+   GOFAST floating point library.\n+   Copyright (C) 1994 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#define MIPS_CPU_DEFAULT PROCESSOR_R4600\n+#define MIPS_CPU_STRING_DEFAULT \"orion\"\n+\n+#include \"mips/elf64.h\""}, {"sha": "83acdd158b65a644329806cdd00735aa93d235c2", "filename": "gcc/config/mips/t-ecoff", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3185dc73adc9a441e2d5d7e8b65a39d205f6efc9/gcc%2Fconfig%2Fmips%2Ft-ecoff", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3185dc73adc9a441e2d5d7e8b65a39d205f6efc9/gcc%2Fconfig%2Fmips%2Ft-ecoff", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-ecoff?ref=3185dc73adc9a441e2d5d7e8b65a39d205f6efc9", "patch": "@@ -0,0 +1,75 @@\n+CONFIG2_H\t= $(srcdir)/config/mips/ecoff.h\n+\n+# We have a premade insn-attrtab.c to save the hour it takes to run genattrtab.\n+# PREMADE_ATTRTAB = $(srcdir)/config/mips/mips-at.c\n+# PREMADE_ATTRTAB_MD = $(srcdir)/config/mips/mips-at.md\n+\n+# Suppress building libgcc1.a, since the MIPS compiler port is complete\n+# and does not need anything from libgcc1.a.\n+LIBGCC1 = libgcc1.null\n+CROSS_LIBGCC1 = libgcc1.null\n+\n+# We must build libgcc2.a with -G 0, in case the user wants to link\n+# without the $gp register.\n+LIBGCC2_CFLAGS = -O2 $(LIBGCC2_INCLUDES) $(GCC_CFLAGS) -g1 -G 0\n+\n+# These are really part of libgcc1, but this will cause them to be\n+# built correctly, so... [taken from t-sparclite]\n+LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c\n+\n+dp-bit.c: $(srcdir)/config/fp-bit.c\n+\techo '#ifdef __MIPSEL__' > fp-bit.c\n+\techo '#define FLOAT_BIT_ORDER_MISMATCH' >> fp-bit.c\n+\techo '#endif' >> fp-bit.c\n+\techo '#define US_SOFTWARE_GOFAST' >> dp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c >> dp-bit.c\n+\n+fp-bit.c: $(srcdir)/config/fp-bit.c\n+\techo '#define FLOAT' > fp-bit.c\n+\techo '#ifdef __MIPSEL__' >> fp-bit.c\n+\techo '#define FLOAT_BIT_ORDER_MISMATCH' >> fp-bit.c\n+\techo '#endif' >> fp-bit.c\n+\techo '#define US_SOFTWARE_GOFAST' >> fp-bit.c\n+\tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n+\n+# Build the libraries for both hard and soft floating point\n+\n+MULTILIB_OPTIONS=msoft-float EL/EB\n+MULTILIB_DIRNAMES=soft-float el eb\n+MULTILIB_MATCHES=\n+\n+LIBGCC = stmp-multilib\n+INSTALL_LIBGCC = install-multilib\n+\n+# Add additional dependencies to recompile selected modules whenever the\n+# tm.h file changes.  The files compiled are:\n+#\n+#\tgcc.c\t\t(*_SPEC changes)\n+#\ttoplev.c\t(new switches + assembly output changes)\n+#\tsdbout.c\t(debug format changes)\n+#\tdbxout.c\t(debug format changes)\n+#\tdwarfout.c\t(debug format changes)\n+#\tfinal.c\t\t(assembly output changes)\n+#\tvarasm.c\t(assembly output changes)\n+#\tcse.c\t\t(cost functions)\n+#\tinsn-output.c\t(possible ifdef changes in tm.h)\n+#\tregclass.c\t(fixed/call used register changes)\n+#\tcccp.c\t\t(new preprocessor macros, -v version #)\n+#\texplow.c\t(GO_IF_LEGITIMATE_ADDRESS)\n+#\trecog.c\t\t(GO_IF_LEGITIMATE_ADDRESS)\n+#\treload.c\t(GO_IF_LEGITIMATE_ADDRESS)\n+\n+gcc.o: $(CONFIG2_H)\n+toplev.o: $(CONFIG2_H)\n+sdbout.o: $(CONFIG2_H)\n+dbxout.o: $(CONFIG2_H)\n+dwarfout.o: $(CONFIG2_H)\n+final.o: $(CONFIG2_H)\n+varasm.o: $(CONFIG2_H)\n+cse.o: $(CONFIG2_H)\n+insn-output.o: $(CONFIG2_H)\n+regclass.o: $(CONFIG2_H)\n+cccp.o: $(CONFIG2_H)\n+explow.o: $(CONFIG2_H)\n+recog.o: $(CONFIG2_H)\n+reload.o: $(CONFIG2_H)"}]}