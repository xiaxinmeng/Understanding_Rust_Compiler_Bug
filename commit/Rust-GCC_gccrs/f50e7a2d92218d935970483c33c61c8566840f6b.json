{"sha": "f50e7a2d92218d935970483c33c61c8566840f6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjUwZTdhMmQ5MjIxOGQ5MzU5NzA0ODNjMzNjNjFjODU2Njg0MGY2Yg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2001-11-16T01:28:55Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-11-16T01:28:55Z"}, "message": "verify.cc (type::compatible): Use _Jv_IsAssignableFrom.\n\n\t* verify.cc (type::compatible): Use _Jv_IsAssignableFrom.\n\t(type::merge): Likewise.\n\nFrom-SVN: r47077", "tree": {"sha": "5683ad24f4c9b70a7388119c6aee38df984c789a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5683ad24f4c9b70a7388119c6aee38df984c789a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f50e7a2d92218d935970483c33c61c8566840f6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f50e7a2d92218d935970483c33c61c8566840f6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f50e7a2d92218d935970483c33c61c8566840f6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f50e7a2d92218d935970483c33c61c8566840f6b/comments", "author": null, "committer": null, "parents": [{"sha": "9f1a9740d4be2ced310548d845ac1d5d9a5d1fa5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f1a9740d4be2ced310548d845ac1d5d9a5d1fa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f1a9740d4be2ced310548d845ac1d5d9a5d1fa5"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "d6c3dac9a73ebd89d1ec221e664858c4874df10f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f50e7a2d92218d935970483c33c61c8566840f6b/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f50e7a2d92218d935970483c33c61c8566840f6b/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=f50e7a2d92218d935970483c33c61c8566840f6b", "patch": "@@ -1,3 +1,8 @@\n+2001-11-15  Tom Tromey  <tromey@redhat.com>\n+\n+\t* verify.cc (type::compatible): Use _Jv_IsAssignableFrom.\n+\t(type::merge): Likewise.\n+\n 2001-11-14  Hans Boehm <Hans_Boehm@hp.com>\n \n \t* java/lang/natString.cc: correct argument order for"}, {"sha": "2691ed378e74bc4dfb9695c0c8b72aa4add9b7f6", "filename": "libjava/verify.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f50e7a2d92218d935970483c33c61c8566840f6b/libjava%2Fverify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f50e7a2d92218d935970483c33c61c8566840f6b/libjava%2Fverify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fverify.cc?ref=f50e7a2d92218d935970483c33c61c8566840f6b", "patch": "@@ -373,7 +373,9 @@ class _Jv_BytecodeVerifier\n       // We must resolve both types and check assignability.\n       resolve ();\n       k.resolve ();\n-      return data.klass->isAssignableFrom (k.data.klass);\n+      // Use _Jv_IsAssignableFrom to avoid premature class\n+      // initialization.\n+      return _Jv_IsAssignableFrom (data.klass, k.data.klass);\n     }\n \n     bool isvoid () const\n@@ -537,7 +539,9 @@ class _Jv_BytecodeVerifier\n \t\t  // This loop will end when we hit Object.\n \t\t  while (true)\n \t\t    {\n-\t\t      if (k->isAssignableFrom (oldk))\n+\t\t      // Use _Jv_IsAssignableFrom to avoid premature\n+\t\t      // class initialization.\n+\t\t      if (_Jv_IsAssignableFrom (k, oldk))\n \t\t\tbreak;\n \t\t      k = k->getSuperclass ();\n \t\t      changed = true;"}]}