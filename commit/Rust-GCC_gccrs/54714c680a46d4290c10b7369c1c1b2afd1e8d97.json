{"sha": "54714c680a46d4290c10b7369c1c1b2afd1e8d97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ3MTRjNjgwYTQ2ZDQyOTBjMTBiNzM2OWMxYzFiMmFmZDFlOGQ5Nw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-03-20T13:25:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-03-20T13:25:08Z"}, "message": "tree-inline.c (copy_tree_body_r): Sync MEM_REF code with remap_gimple_op_r.\n\n2013-03-20  Richard Biener  <rguenther@suse.de>\n\n\t* tree-inline.c (copy_tree_body_r): Sync MEM_REF code with\n\tremap_gimple_op_r.\n\nFrom-SVN: r196824", "tree": {"sha": "1dd741b72eba93c6842b05b9aaa0e7a164f445c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1dd741b72eba93c6842b05b9aaa0e7a164f445c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54714c680a46d4290c10b7369c1c1b2afd1e8d97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54714c680a46d4290c10b7369c1c1b2afd1e8d97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54714c680a46d4290c10b7369c1c1b2afd1e8d97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54714c680a46d4290c10b7369c1c1b2afd1e8d97/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cca1130d11997d40bd37603fab5953ccf8061331", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cca1130d11997d40bd37603fab5953ccf8061331", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cca1130d11997d40bd37603fab5953ccf8061331"}], "stats": {"total": 35, "additions": 20, "deletions": 15}, "files": [{"sha": "217a76d9a003e5d8ebe68d7b96e798494eba7d6b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54714c680a46d4290c10b7369c1c1b2afd1e8d97/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54714c680a46d4290c10b7369c1c1b2afd1e8d97/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=54714c680a46d4290c10b7369c1c1b2afd1e8d97", "patch": "@@ -1,3 +1,8 @@\n+2013-03-20  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-inline.c (copy_tree_body_r): Sync MEM_REF code with\n+\tremap_gimple_op_r.\n+\n 2013-03-20  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \t    Steven Bosscher <steven@gcc.gnu.org>\n "}, {"sha": "b7f76c839f353142bfb115f1e91cfdba84773d64", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54714c680a46d4290c10b7369c1c1b2afd1e8d97/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54714c680a46d4290c10b7369c1c1b2afd1e8d97/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=54714c680a46d4290c10b7369c1c1b2afd1e8d97", "patch": "@@ -1092,22 +1092,22 @@ copy_tree_body_r (tree *tp, int *walk_subtrees, void *data)\n \t}\n       else if (TREE_CODE (*tp) == MEM_REF)\n \t{\n-\t  /* We need to re-canonicalize MEM_REFs from inline substitutions\n-\t     that can happen when a pointer argument is an ADDR_EXPR.  */\n-\t  tree decl = TREE_OPERAND (*tp, 0);\n-\t  tree *n;\n+\t  tree ptr = TREE_OPERAND (*tp, 0);\n+\t  tree type = remap_type (TREE_TYPE (*tp), id);\n+\t  tree old = *tp;\n \n-\t  n = (tree *) pointer_map_contains (id->decl_map, decl);\n-\t  if (n)\n-\t    {\n-\t      tree old = *tp;\n-\t      *tp = fold_build2 (MEM_REF, TREE_TYPE (*tp),\n-\t\t\t\t unshare_expr (*n), TREE_OPERAND (*tp, 1));\n-\t      TREE_THIS_VOLATILE (*tp) = TREE_THIS_VOLATILE (old);\n-\t      TREE_NO_WARNING (*tp) = TREE_NO_WARNING (old);\n-\t      *walk_subtrees = 0;\n-\t      return NULL;\n-\t    }\n+\t  /* We need to re-canonicalize MEM_REFs from inline substitutions\n+\t     that can happen when a pointer argument is an ADDR_EXPR.\n+\t     Recurse here manually to allow that.  */\n+\t  walk_tree (&ptr, copy_tree_body_r, data, NULL);\n+\t  *tp = fold_build2 (MEM_REF, type,\n+\t\t\t     ptr, TREE_OPERAND (*tp, 1));\n+\t  TREE_THIS_NOTRAP (*tp) = TREE_THIS_NOTRAP (old);\n+\t  TREE_THIS_VOLATILE (*tp) = TREE_THIS_VOLATILE (old);\n+\t  TREE_SIDE_EFFECTS (*tp) = TREE_SIDE_EFFECTS (old);\n+\t  TREE_NO_WARNING (*tp) = TREE_NO_WARNING (old);\n+\t  *walk_subtrees = 0;\n+\t  return NULL;\n \t}\n \n       /* Here is the \"usual case\".  Copy this tree node, and then"}]}