{"sha": "c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFhN2NkYmJjY2E5MGFkNTI2MGJmYzU0M2Y4YzEwZjM1MTRlNzZjMQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2011-10-20T11:33:07Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2011-10-20T11:33:07Z"}, "message": "lto.exp (lto_init): Test slib lto and no-liker-plugin path.\n\n\t* lib/lto.exp (lto_init): Test slib lto and no-liker-plugin path.\n\t* lto/gcc-dg.exp (check_effective_target_lto): Likewise.\n\t* lto/c-torture.exp: Likewise.\n\t* execute/bultins/strstr-asm.c: Force fat LTO.\n\t* gcc.c-torture/compile/sync-1.c: Likewise.\n\t* gcc.c-torture/compile/sync-1.c: Likewise.\n\t* gcc.c-torture/compile/sync-3.c: Likewise.\n\t* gcc.dg/noncompile/invalid_asm.c: Likewise.\n\t* gcc.dg/noncompile/920507-1.c: Likewise.\n\t* gcc.dg/torture/pr36400.c: Likewise.\n\t* g++.dg/torture/pr34850.C: Likewise.\n\nFrom-SVN: r180245", "tree": {"sha": "ac1f85b7c683ced7ae5064497f5dcd5f1d057e50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac1f85b7c683ced7ae5064497f5dcd5f1d057e50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/comments", "author": null, "committer": null, "parents": [{"sha": "1d6d1a9214fb8dd499370701f53579ea51e27e59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d6d1a9214fb8dd499370701f53579ea51e27e59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d6d1a9214fb8dd499370701f53579ea51e27e59"}], "stats": {"total": 83, "additions": 67, "deletions": 16}, "files": [{"sha": "87d499ff7784da164a53491cbd25e263293720da", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1", "patch": "@@ -1,3 +1,17 @@\n+2011-10-19  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lib/lto.exp (lto_init): Test slib lto and no-liker-plugin path.\n+\t* lto/gcc-dg.exp (check_effective_target_lto): Likewise.\n+\t* lto/c-torture.exp: Likewise.\n+\t* execute/bultins/strstr-asm.c: Force fat LTO.\n+\t* gcc.c-torture/compile/sync-1.c: Likewise.\n+\t* gcc.c-torture/compile/sync-1.c: Likewise.\n+\t* gcc.c-torture/compile/sync-3.c: Likewise.\n+\t* gcc.dg/noncompile/invalid_asm.c: Likewise.\n+\t* gcc.dg/noncompile/920507-1.c: Likewise.\n+\t* gcc.dg/torture/pr36400.c: Likewise.\n+\t* g++.dg/torture/pr34850.C: Likewise.\n+\n 2011-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/source_ref1.adb: New test."}, {"sha": "c33dbfb5c93ecb8783f5bd802e43a3084fe17353", "filename": "gcc/testsuite/g++.dg/torture/pr34850.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr34850.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr34850.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr34850.C?ref=c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n+/* { dg-options \"-ffat-lto-objects\" } */\n \n typedef unsigned char uint8_t;\n typedef unsigned int uint32_t;"}, {"sha": "1a6a096ad410dc6a026b30100411cba5b6477ac9", "filename": "gcc/testsuite/gcc.c-torture/compile/sync-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsync-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsync-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsync-1.c?ref=c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1", "patch": "@@ -1,5 +1,6 @@\n /* { dg-message \"note: '__sync_fetch_and_nand' changed semantics in GCC 4.4\" \"\" { target *-*-* } 0 } */\n /* { dg-message \"note: '__sync_nand_and_fetch' changed semantics in GCC 4.4\" \"\" { target *-*-* } 0 } */\n+/* { dg-options \"-ffat-lto-objects\" } */\n \n /* Validate that each of the __sync builtins compiles.  This won't \n    necessarily link, since the target might not support the builtin,"}, {"sha": "4ca0bb58345e7c170cbc9128743377bc0f84b2e4", "filename": "gcc/testsuite/gcc.c-torture/compile/sync-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsync-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsync-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsync-2.c?ref=c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1", "patch": "@@ -1,4 +1,5 @@\n /* { dg-message \"note: '__sync_fetch_and_nand' changed semantics in GCC 4.4\" \"\" { target *-*-* } 0 } */\n+/* { dg-options \"-ffat-lto-objects\" } */\n \n /* Validate that each of the __sync builtins compiles.  This won't \n    necessarily link, since the target might not support the builtin,"}, {"sha": "d717ef229130716c4b2692053be7e13e522faeb1", "filename": "gcc/testsuite/gcc.c-torture/compile/sync-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsync-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsync-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fsync-3.c?ref=c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1", "patch": "@@ -1,4 +1,5 @@\n /* { dg-message \"note: '__sync_fetch_and_nand' changed semantics in GCC 4.4\" \"\" { target *-*-* } 0 } */\n+/* { dg-options \"-ffat-lto-objects\" } */\n \n /* Validate that each of the __sync builtins compiles.  This won't \n    necessarily link, since the target might not support the builtin,"}, {"sha": "41678412b63e8efb590f1f9ef09c58dbcc0e2bcd", "filename": "gcc/testsuite/gcc.c-torture/execute/builtins/strstr-asm.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrstr-asm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrstr-asm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fbuiltins%2Fstrstr-asm.c?ref=c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1", "patch": "@@ -2,6 +2,7 @@\n \n    Ensure all expected transformations of builtin strstr occur and\n    perform correctly in presence of redirect.  */\n+/* { dg-options \"-ffat-lto-objects\" } */\n \n #define ASMNAME(cname)  ASMNAME2 (__USER_LABEL_PREFIX__, cname)\n #define ASMNAME2(prefix, cname) STRING (prefix) cname"}, {"sha": "22b7b0a8b6b26fd0ae9153d09343fdec06b4123a", "filename": "gcc/testsuite/gcc.dg/noncompile/920507-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F920507-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F920507-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F920507-1.c?ref=c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-options \"-ffat-lto-objects\" } */\n int *\n x(void)\n {"}, {"sha": "d1d4b364b8e68434637813080b2c77881abdfb11", "filename": "gcc/testsuite/gcc.dg/noncompile/invalid_asm.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Finvalid_asm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Finvalid_asm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Finvalid_asm.c?ref=c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-options \"-ffat-lto-objects\" } */\n asm_invalid_register_name()\n {\n   asm(\"\":::\"this_is_an_invalid_register_name\");\t/* { dg-error \"unknown register\" } */"}, {"sha": "1dedc0aa1ca835be6e1bd8d6d5ef342644bee41e", "filename": "gcc/testsuite/gcc.dg/torture/pr36400.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr36400.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr36400.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr36400.c?ref=c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-options \"-ffat-lto-objects\" } */\n \n struct barstruct { char const* some_string; };\n "}, {"sha": "bb92871937acfe5e62a8c3b4482085eec59d84fb", "filename": "gcc/testsuite/lib/c-torture.exp", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2Flib%2Fc-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2Flib%2Fc-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fc-torture.exp?ref=c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1", "patch": "@@ -52,10 +52,19 @@ if [info exists ADDITIONAL_TORTURE_OPTIONS] {\n \n set LTO_TORTURE_OPTIONS \"\"\n if [check_effective_target_lto] {\n-    set LTO_TORTURE_OPTIONS [list \\\n-\t{ -O2 -flto -flto-partition=none } \\\n-\t{ -O2 -flto }\n-    ]\n+    # When having plugin test both slim and fat LTO and plugin/nonplugin\n+    # path.\n+    if [check_linker_plugin_available] {\n+      set LTO_TORTURE_OPTIONS [list \\\n+\t  { -O2 -flto -fno-use-linker-plugin -flto-partition=none } \\\n+\t  { -O2 -flto -fuse-linker-plugin -fno-fat-lto-objects }\n+      ]\n+    } else {\n+      set LTO_TORTURE_OPTIONS [list \\\n+\t  { -O2 -flto -flto-partition=none } \\\n+\t  { -O2 -flto }\n+      ]\n+    }\n }\n \n global GCC_UNDER_TEST"}, {"sha": "e93fb87a41215a4d4e69158fa1212d431c78b46a", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1", "patch": "@@ -69,10 +69,19 @@ if [info exists ADDITIONAL_TORTURE_OPTIONS] {\n \n set LTO_TORTURE_OPTIONS \"\"\n if [check_effective_target_lto] {\n-    set LTO_TORTURE_OPTIONS [list \\\n-\t{ -O2 -flto -flto-partition=none } \\\n-\t{ -O2 -flto }\n-    ]\n+    # When having plugin test both slim and fat LTO and plugin/nonplugin\n+    # path.\n+    if [check_linker_plugin_available] {\n+      set LTO_TORTURE_OPTIONS [list \\\n+\t  { -O2 -flto -fno-use-linker-plugin -flto-partition=none } \\\n+\t  { -O2 -flto -fuse-linker-plugin -fno-fat-lto-objects }\n+      ]\n+    } else {\n+      set LTO_TORTURE_OPTIONS [list \\\n+\t  { -O2 -flto -flto-partition=none } \\\n+\t  { -O2 -flto }\n+      ]\n+    }\n }\n \n "}, {"sha": "a9ca14bc0d45d2ba92096cb2b5b3cad3af526a9b", "filename": "gcc/testsuite/lib/lto.exp", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2Flib%2Flto.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1/gcc%2Ftestsuite%2Flib%2Flto.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Flto.exp?ref=c1a7cdbbcca90ad5260bfc543f8c10f3514e76c1", "patch": "@@ -66,14 +66,25 @@ proc lto_init { args } {\n     # You can put this in the environment before site.exp is written or\n     # add it to site.exp directly.\n     if ![info exists LTO_OPTIONS] {\n-\tset LTO_OPTIONS [list\t\\\n-\t    {-O0 -flto -flto-partition=none } \\\n-\t    {-O2 -flto -flto-partition=none } \\\n-\t    {-O0 -flto -flto-partition=1to1 } \\\n-\t    {-O2 -flto -flto-partition=1to1 } \\\n-\t    {-O0 -flto}\t\t\\\n-\t    {-O2 -flto}\t\t\\\n-\t]\n+        if [check_linker_plugin_available] {\n+\t  set LTO_OPTIONS [list\t\\\n+\t      {-O0 -flto -flto-partition=none -fuse-linker-plugin} \\\n+\t      {-O2 -flto -flto-partition=none -fuse-linker-plugin -fno-fat-lto-objects } \\\n+\t      {-O0 -flto -flto-partition=1to1 -fno-use-linker-plugin } \\\n+\t      {-O2 -flto -flto-partition=1to1 -fno-use-linker-plugin } \\\n+\t      {-O0 -flto -fuse-linker-plugin -fno-fat-lto-objects }\t\\\n+\t      {-O2 -flto -fuse-linker-plugin}\t\\\n+\t  ]\n+ \t} else {\n+\t  set LTO_OPTIONS [list\t\\\n+\t      {-O0 -flto -flto-partition=none } \\\n+\t      {-O2 -flto -flto-partition=none } \\\n+\t      {-O0 -flto -flto-partition=1to1 } \\\n+\t      {-O2 -flto -flto-partition=1to1 } \\\n+\t      {-O0 -flto }\t\\\n+\t      {-O2 -flto}\t\t\\\n+\t  ]\n+\t}\n     }\n }\n "}]}