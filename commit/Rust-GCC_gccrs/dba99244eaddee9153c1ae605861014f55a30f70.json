{"sha": "dba99244eaddee9153c1ae605861014f55a30f70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJhOTkyNDRlYWRkZWU5MTUzYzFhZTYwNTg2MTAxNGY1NWEzMGY3MA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-01-19T20:52:21Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-01-19T20:52:21Z"}, "message": "* constexpr.c (fold_simple): Simplify.\n\nFrom-SVN: r256899", "tree": {"sha": "6c6c9c788af3843f914c09eed4783bcedeb0a7ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c6c9c788af3843f914c09eed4783bcedeb0a7ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dba99244eaddee9153c1ae605861014f55a30f70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dba99244eaddee9153c1ae605861014f55a30f70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dba99244eaddee9153c1ae605861014f55a30f70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dba99244eaddee9153c1ae605861014f55a30f70/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2af6483634c6f369731a6de07631921a570ff178", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2af6483634c6f369731a6de07631921a570ff178", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2af6483634c6f369731a6de07631921a570ff178"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "3e40d79e95230aeeab4aec212b6346822659594e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba99244eaddee9153c1ae605861014f55a30f70/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba99244eaddee9153c1ae605861014f55a30f70/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=dba99244eaddee9153c1ae605861014f55a30f70", "patch": "@@ -1,3 +1,7 @@\n+2018-01-19  Marek Polacek  <polacek@redhat.com>\n+\n+\t* constexpr.c (fold_simple): Simplify.\n+\n 2018-01-18  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/83714"}, {"sha": "ca7f369f7e948e2b5ec46dbd7fcd7b3be588894a", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba99244eaddee9153c1ae605861014f55a30f70/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba99244eaddee9153c1ae605861014f55a30f70/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=dba99244eaddee9153c1ae605861014f55a30f70", "patch": "@@ -4931,22 +4931,21 @@ fold_simple_1 (tree t)\n }\n \n /* If T is a simple constant expression, returns its simplified value.\n-   Otherwise returns T.  In contrast to maybe_constant_value do we\n+   Otherwise returns T.  In contrast to maybe_constant_value we\n    simplify only few operations on constant-expressions, and we don't\n    try to simplify constexpressions.  */\n \n tree\n fold_simple (tree t)\n {\n-  tree r = NULL_TREE;\n   if (processing_template_decl)\n     return t;\n \n-  r = fold_simple_1 (t);\n-  if (!r)\n-    r = t;\n+  tree r = fold_simple_1 (t);\n+  if (r)\n+    return r;\n \n-  return r;\n+  return t;\n }\n \n /* If T is a constant expression, returns its reduced value."}]}