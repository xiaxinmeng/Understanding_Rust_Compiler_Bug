{"sha": "c26159516d6a16def440628643d8c1b7c43169c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI2MTU5NTE2ZDZhMTZkZWY0NDA2Mjg2NDNkOGMxYjdjNDMxNjljMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-02-18T13:13:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-02-18T13:13:43Z"}, "message": "re PR target/79559 (ICE in ix86_print_operand, at config/i386/i386.c:18189)\n\n\tPR target/79559\n\t* config/i386/i386.c (ix86_print_operand): Use output_operand_lossage\n\tinstead of gcc_assert for K, r and R code checks.  Formatting fixes.\n\n\t* gcc.target/i386/pr79559.c: New test.\n\nFrom-SVN: r245560", "tree": {"sha": "563f1063c7dd530b04363f81d35d56101e643e7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/563f1063c7dd530b04363f81d35d56101e643e7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c26159516d6a16def440628643d8c1b7c43169c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c26159516d6a16def440628643d8c1b7c43169c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c26159516d6a16def440628643d8c1b7c43169c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c26159516d6a16def440628643d8c1b7c43169c3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dc15bc7ad6f46550b5df09d9a85f6180a76ae8ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc15bc7ad6f46550b5df09d9a85f6180a76ae8ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc15bc7ad6f46550b5df09d9a85f6180a76ae8ce"}], "stats": {"total": 64, "additions": 49, "deletions": 15}, "files": [{"sha": "90e6d1f0ae51fa1d66c85506011b0547ad64789c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c26159516d6a16def440628643d8c1b7c43169c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c26159516d6a16def440628643d8c1b7c43169c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c26159516d6a16def440628643d8c1b7c43169c3", "patch": "@@ -1,3 +1,9 @@\n+2017-02-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/79559\n+\t* config/i386/i386.c (ix86_print_operand): Use output_operand_lossage\n+\tinstead of gcc_assert for K, r and R code checks.  Formatting fixes.\n+\n 2017-02-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR target/79261"}, {"sha": "fb0dca2bf0be664a83c8a455e34f7799c54ca7d6", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 27, "deletions": 15, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c26159516d6a16def440628643d8c1b7c43169c3/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c26159516d6a16def440628643d8c1b7c43169c3/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=c26159516d6a16def440628643d8c1b7c43169c3", "patch": "@@ -17847,8 +17847,8 @@ ix86_print_operand (FILE *file, rtx x, int code)\n \t      break;\n \n \t    default:\n-\t      output_operand_lossage\n-\t\t(\"invalid operand size for operand code 'O'\");\n+\t      output_operand_lossage (\"invalid operand size for operand \"\n+\t\t\t\t      \"code 'O'\");\n \t      return;\n \t    }\n \n@@ -17882,15 +17882,14 @@ ix86_print_operand (FILE *file, rtx x, int code)\n \t\t  return;\n \n \t\tdefault:\n-\t\t  output_operand_lossage\n-\t\t    (\"invalid operand size for operand code 'z'\");\n+\t\t  output_operand_lossage (\"invalid operand size for operand \"\n+\t\t\t\t\t  \"code 'z'\");\n \t\t  return;\n \t\t}\n \t    }\n \n \t  if (GET_MODE_CLASS (GET_MODE (x)) == MODE_FLOAT)\n-\t    warning\n-\t      (0, \"non-integer operand used with operand code 'z'\");\n+\t    warning (0, \"non-integer operand used with operand code 'z'\");\n \t  /* FALLTHRU */\n \n \tcase 'Z':\n@@ -17952,13 +17951,12 @@ ix86_print_operand (FILE *file, rtx x, int code)\n \t    }\n \t  else\n \t    {\n-\t      output_operand_lossage\n-\t\t(\"invalid operand type used with operand code 'Z'\");\n+\t      output_operand_lossage (\"invalid operand type used with \"\n+\t\t\t\t      \"operand code 'Z'\");\n \t      return;\n \t    }\n \n-\t  output_operand_lossage\n-\t    (\"invalid operand size for operand code 'Z'\");\n+\t  output_operand_lossage (\"invalid operand size for operand code 'Z'\");\n \t  return;\n \n \tcase 'd':\n@@ -18157,7 +18155,12 @@ ix86_print_operand (FILE *file, rtx x, int code)\n \t  break;\n \n \tcase 'K':\n-\t  gcc_assert (CONST_INT_P (x));\n+\t  if (!CONST_INT_P (x))\n+\t    {\n+\t      output_operand_lossage (\"operand is not an integer, invalid \"\n+\t\t\t\t      \"operand code 'K'\");\n+\t      return;\n+\t    }\n \n \t  if (INTVAL (x) & IX86_HLE_ACQUIRE)\n #ifdef HAVE_AS_IX86_HLE\n@@ -18180,8 +18183,12 @@ ix86_print_operand (FILE *file, rtx x, int code)\n \t  return;\n \n \tcase 'r':\n-\t  gcc_assert (CONST_INT_P (x));\n-\t  gcc_assert (INTVAL (x) == ROUND_SAE);\n+\t  if (!CONST_INT_P (x) || INTVAL (x) != ROUND_SAE)\n+\t    {\n+\t      output_operand_lossage (\"operand is not a specific integer, \"\n+\t\t\t\t      \"invalid operand code 'r'\");\n+\t      return;\n+\t    }\n \n \t  if (ASSEMBLER_DIALECT == ASM_INTEL)\n \t    fputs (\", \", file);\n@@ -18194,7 +18201,12 @@ ix86_print_operand (FILE *file, rtx x, int code)\n \t  return;\n \n \tcase 'R':\n-\t  gcc_assert (CONST_INT_P (x));\n+\t  if (!CONST_INT_P (x))\n+\t    {\n+\t      output_operand_lossage (\"operand is not an integer, invalid \"\n+\t\t\t\t      \"operand code 'R'\");\n+\t      return;\n+\t    }\n \n \t  if (ASSEMBLER_DIALECT == ASM_INTEL)\n \t    fputs (\", \", file);\n@@ -18309,7 +18321,7 @@ ix86_print_operand (FILE *file, rtx x, int code)\n \t  return;\n \n \tdefault:\n-\t    output_operand_lossage (\"invalid operand code '%c'\", code);\n+\t  output_operand_lossage (\"invalid operand code '%c'\", code);\n \t}\n     }\n "}, {"sha": "b4edfe81361a8048d507e675cde265c327201a92", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c26159516d6a16def440628643d8c1b7c43169c3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c26159516d6a16def440628643d8c1b7c43169c3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c26159516d6a16def440628643d8c1b7c43169c3", "patch": "@@ -1,3 +1,8 @@\n+2017-02-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/79559\n+\t* gcc.target/i386/pr79559.c: New test.\n+\n 2017-02-17  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/c11-float-2.c: New test."}, {"sha": "2eeb652a82ed91e8f9f3d159f4c8c494162b0316", "filename": "gcc/testsuite/gcc.target/i386/pr79559.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c26159516d6a16def440628643d8c1b7c43169c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79559.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c26159516d6a16def440628643d8c1b7c43169c3/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79559.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79559.c?ref=c26159516d6a16def440628643d8c1b7c43169c3", "patch": "@@ -0,0 +1,11 @@\n+/* PR target/79559 */\n+/* { dg-do compile } */\n+\n+void\n+foo (int x)\n+{\n+  __asm__ volatile (\"# %K0\" : : \"r\" (x));\t/* { dg-error \"invalid operand code\" } */\n+  __asm__ volatile (\"# %r0\" : : \"r\" (x));\t/* { dg-error \"invalid operand code\" } */\n+  __asm__ volatile (\"# %r0\" : : \"n\" (129));\t/* { dg-error \"invalid operand code\" } */\n+  __asm__ volatile (\"# %R0\" : : \"r\" (x));\t/* { dg-error \"invalid operand code\" } */\n+}"}]}