{"sha": "4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFjY2ExYzA2MzVkZmE0M2NkOGM0YmZlMmIyMmUxNzkwOWZjMjNhMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-05-25T08:09:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-05-25T11:39:26Z"}, "message": "tree-optimization/95295 - fix wrong-code with SM\n\nWe failed to compare the rematerialized store values when merging\npaths after walking PHIs.\n\n2020-05-25  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/95295\n\t* tree-ssa-loop-im.c (sm_seq_valid_bb): Compare remat stores\n\tRHSes and drop to full sm_other if they are not equal.\n\n\t* gcc.dg/torture/pr95295-1.c: New testcase.\n\t* gcc.dg/torture/pr95295-2.c: Likewise.\n\t* gcc.dg/torture/pr95283.c: Likewise.", "tree": {"sha": "74b0f5c61cae3185360a3aeb84c50605cd09f46c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74b0f5c61cae3185360a3aeb84c50605cd09f46c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0e27f72358794692e367363940c6383e9ad1e45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0e27f72358794692e367363940c6383e9ad1e45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0e27f72358794692e367363940c6383e9ad1e45"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "150dc096c7a63b0c15998e78f80a20d20d1f51bf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3", "patch": "@@ -1,3 +1,9 @@\n+2020-05-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/95295\n+\t* tree-ssa-loop-im.c (sm_seq_valid_bb): Compare remat stores\n+\tRHSes and drop to full sm_other if they are not equal.\n+\n 2020-05-25  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/95271"}, {"sha": "cba153f166e73f9076c66713a0b9055c1d89137f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3", "patch": "@@ -1,3 +1,10 @@\n+2020-05-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/95295\n+\t* gcc.dg/torture/pr95295-1.c: New testcase.\n+\t* gcc.dg/torture/pr95295-2.c: Likewise.\n+\t* gcc.dg/torture/pr95283.c: Likewise.\n+\n 2020-05-25  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/95271"}, {"sha": "950d3b07eadd613403a10a2b88383ff9f1b84cb6", "filename": "gcc/testsuite/gcc.dg/torture/pr95283.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr95283.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr95283.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr95283.c?ref=4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+\n+short c;\n+_Bool d;\n+unsigned e, f;\n+char g, h;\n+extern _Bool i[];\n+void j()\n+{\n+  for (char a = 0; a < 100; a++)\n+    for (char b = 0; b < 20; b += 2)\n+      {\n+\tif (e)\n+\t  d = f = 0;\n+\telse\n+\t  g = i[8] = 0;\n+\th = c;\n+      }\n+}"}, {"sha": "76a19f3d17bd64c8273306ad0d229f76800ae3b0", "filename": "gcc/testsuite/gcc.dg/torture/pr95295-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr95295-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr95295-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr95295-1.c?ref=4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do run } */\n+/* { dg-additional-sources \"pr95295-2.c\" } */\n+\n+extern int var_4, a;\n+extern unsigned var_9;\n+extern short arr_272[];\n+void test()\n+{\n+  for (int b = 0; b < 9; b++)\n+    for (int c = 0; c < 9; c += 4)\n+      {\n+\tarr_272[c] = var_9 ? var_4 : 0;\n+\ta = 0;\n+      }\n+}"}, {"sha": "80caeb8740de7910a9354de42fd10ab7343f82e5", "filename": "gcc/testsuite/gcc.dg/torture/pr95295-2.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr95295-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr95295-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr95295-2.c?ref=4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+\n+int a;\n+int var_4 = 1;\n+unsigned var_9 = 8;\n+short arr_272[20];\n+void test();\n+int main()\n+{\n+  test();\n+  if (arr_272[4] != 1)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "b399bd0f7297f8b822383b6176f62cc42a325ceb", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=4acca1c0635dfa43cd8c4bfe2b22e17909fc23a3", "patch": "@@ -2402,6 +2402,7 @@ sm_seq_valid_bb (class loop *loop, basic_block bb, tree vdef,\n \t\t      if (edge_seq[i].second == sm_ord)\n \t\t\tbitmap_set_bit (refs_not_supported, edge_seq[i].first);\n \t\t      first_edge_seq[i].second = sm_other;\n+\t\t      first_edge_seq[i].from = NULL_TREE;\n \t\t    }\n \t\t  /* sm_other prevails.  */\n \t\t  else if (first_edge_seq[i].second != edge_seq[i].second)\n@@ -2410,7 +2411,14 @@ sm_seq_valid_bb (class loop *loop, basic_block bb, tree vdef,\n \t\t      gcc_assert (bitmap_bit_p (refs_not_supported,\n \t\t\t\t\t\tfirst_edge_seq[i].first));\n \t\t      first_edge_seq[i].second = sm_other;\n+\t\t      first_edge_seq[i].from = NULL_TREE;\n \t\t    }\n+\t\t  else if (first_edge_seq[i].second == sm_other\n+\t\t\t   && first_edge_seq[i].from != NULL_TREE\n+\t\t\t   && (edge_seq[i].from == NULL_TREE\n+\t\t\t       || !operand_equal_p (first_edge_seq[i].from,\n+\t\t\t\t\t\t    edge_seq[i].from, 0)))\n+\t\t    first_edge_seq[i].from = NULL_TREE;\n \t\t}\n \t      /* Any excess elements become sm_other since they are now\n \t\t coonditionally executed.  */"}]}