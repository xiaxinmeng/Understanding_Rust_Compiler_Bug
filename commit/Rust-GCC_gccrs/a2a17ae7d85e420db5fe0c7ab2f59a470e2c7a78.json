{"sha": "a2a17ae7d85e420db5fe0c7ab2f59a470e2c7a78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJhMTdhZTdkODVlNDIwZGI1ZmUwYzdhYjJmNTlhNDcwZTJjN2E3OA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-10T10:07:07Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-10T10:07:07Z"}, "message": "openmp: Fix ICE with broken doacross loop [PR98205]\n\nIf the loop body doesn't ever continue, we don't have a bb to insert the\nupdates.  Fixed by not adding them at all in that case.\n\n2020-12-10  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/98205\n\t* omp-expand.c (expand_omp_for_generic): Fix up broken_loop handling.\n\n\t* c-c++-common/gomp/doacross-4.c: New test.", "tree": {"sha": "9bd6939a389968ad65615ecccf63996fb4735910", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9bd6939a389968ad65615ecccf63996fb4735910"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2a17ae7d85e420db5fe0c7ab2f59a470e2c7a78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2a17ae7d85e420db5fe0c7ab2f59a470e2c7a78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2a17ae7d85e420db5fe0c7ab2f59a470e2c7a78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2a17ae7d85e420db5fe0c7ab2f59a470e2c7a78/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "154e9b831b6fc7d8493b5b0d56b9c5cdeff968e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/154e9b831b6fc7d8493b5b0d56b9c5cdeff968e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/154e9b831b6fc7d8493b5b0d56b9c5cdeff968e9"}], "stats": {"total": 49, "additions": 42, "deletions": 7}, "files": [{"sha": "23a13d82808b50fdd6f2033acbd9c1e2f9f75291", "filename": "gcc/omp-expand.c", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2a17ae7d85e420db5fe0c7ab2f59a470e2c7a78/gcc%2Fomp-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2a17ae7d85e420db5fe0c7ab2f59a470e2c7a78/gcc%2Fomp-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-expand.c?ref=a2a17ae7d85e420db5fe0c7ab2f59a470e2c7a78", "patch": "@@ -4304,13 +4304,18 @@ expand_omp_for_generic (struct omp_region *region,\n \t  gsi = gsi_last_bb (l0_bb);\n \t  expand_omp_build_assign (&gsi, counts[fd->collapse - 1],\n \t\t\t\t   istart0, true);\n-\t  gsi = gsi_last_bb (cont_bb);\n-\t  t = fold_build2 (PLUS_EXPR, fd->iter_type, counts[fd->collapse - 1],\n-\t\t\t   build_int_cst (fd->iter_type, 1));\n-\t  expand_omp_build_assign (&gsi, counts[fd->collapse - 1], t);\n-\t  tree aref = build4 (ARRAY_REF, fd->iter_type, counts[fd->ordered],\n-\t\t\t      size_zero_node, NULL_TREE, NULL_TREE);\n-\t  expand_omp_build_assign (&gsi, aref, counts[fd->collapse - 1]);\n+\t  if (cont_bb)\n+\t    {\n+\t      gsi = gsi_last_bb (cont_bb);\n+\t      t = fold_build2 (PLUS_EXPR, fd->iter_type,\n+\t\t\t       counts[fd->collapse - 1],\n+\t\t\t       build_int_cst (fd->iter_type, 1));\n+\t      expand_omp_build_assign (&gsi, counts[fd->collapse - 1], t);\n+\t      tree aref = build4 (ARRAY_REF, fd->iter_type,\n+\t\t\t\t  counts[fd->ordered], size_zero_node,\n+\t\t\t\t  NULL_TREE, NULL_TREE);\n+\t      expand_omp_build_assign (&gsi, aref, counts[fd->collapse - 1]);\n+\t    }\n \t  t = counts[fd->collapse - 1];\n \t}\n       else if (fd->collapse > 1)"}, {"sha": "a1182e3ce9816f48ee1c0ab7822bb01f92c81b99", "filename": "gcc/testsuite/c-c++-common/gomp/doacross-4.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2a17ae7d85e420db5fe0c7ab2f59a470e2c7a78/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fdoacross-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2a17ae7d85e420db5fe0c7ab2f59a470e2c7a78/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fdoacross-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgomp%2Fdoacross-4.c?ref=a2a17ae7d85e420db5fe0c7ab2f59a470e2c7a78", "patch": "@@ -0,0 +1,30 @@\n+/* PR middle-end/98205 */\n+\n+void baz (int) __attribute__((noreturn));\n+\n+void\n+foo (int n)\n+{\n+  int i;\n+  #pragma omp for ordered(1)\n+  for (i = 0; i < 8; i += n)\n+    {\n+      #pragma omp ordered depend(source)\n+      #pragma omp ordered depend(sink: i - 2)\n+      baz (i);\n+    }\n+}\n+\n+void\n+bar (int n)\n+{\n+  int i, j;\n+  #pragma omp for collapse(2) ordered(2)\n+  for (i = 0; i < 8; i += n)\n+    for (j = 0; j < 8; j += n)\n+      {\n+        #pragma omp ordered depend(source)\n+        #pragma omp ordered depend(sink: i - 2, j + 2)\n+        baz (i);\n+      }\n+}"}]}