{"sha": "e002afaa8e01395110c77de18bb7e0fa030ba019", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAwMmFmYWE4ZTAxMzk1MTEwYzc3ZGUxOGJiN2UwZmEwMzBiYTAxOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-01-07T14:58:44Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-01-07T14:58:44Z"}, "message": "PR libstdc++/87787 avoid undefined null args to memcpy and memmove\n\nThe C++ char_traits and ctype APIs do not disallow null pointer\narguments, so we need explicit checks to ensure we don't forward null\npointers to memcpy or memmove.\n\n\tPR libstdc++/87787\n\t* include/bits/char_traits.h (char_traits::move): Do not pass null\n\tpointers to memmove.\n\t* include/bits/locale_facets.h\n\t(ctype<char>::widen(const char*, const char*, char*)): Do not\n\tpass null pointers to memcpy.\n\t(ctype<char>::narrow(const char*, const char*, char, char*)):\n\tLikewise.\n\t(ctype<char>::do_widen(const char*, const char*, char*)):\n\tLikewise.\n\t(ctype<char>::do_narrow(const char*, const char*, char, char*)):\n\tLikewise.\n\nFrom-SVN: r267651", "tree": {"sha": "203a73ef36a0dbf4ceb00a25c30b1bcfdafabcb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/203a73ef36a0dbf4ceb00a25c30b1bcfdafabcb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e002afaa8e01395110c77de18bb7e0fa030ba019", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e002afaa8e01395110c77de18bb7e0fa030ba019", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e002afaa8e01395110c77de18bb7e0fa030ba019", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e002afaa8e01395110c77de18bb7e0fa030ba019/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a58fe3c5ca1f0101c4af7f0c5b860cc4d49cd4cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a58fe3c5ca1f0101c4af7f0c5b860cc4d49cd4cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a58fe3c5ca1f0101c4af7f0c5b860cc4d49cd4cb"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "0babce9a9205f29435f872fbf5d15d1bfd316541", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e002afaa8e01395110c77de18bb7e0fa030ba019/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e002afaa8e01395110c77de18bb7e0fa030ba019/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e002afaa8e01395110c77de18bb7e0fa030ba019", "patch": "@@ -1,5 +1,18 @@\n 2019-01-07  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/87787\n+\t* include/bits/char_traits.h (char_traits::move): Do not pass null\n+\tpointers to memmove.\n+\t* include/bits/locale_facets.h\n+\t(ctype<char>::widen(const char*, const char*, char*)): Do not\n+\tpass null pointers to memcpy.\n+\t(ctype<char>::narrow(const char*, const char*, char, char*)):\n+\tLikewise.\n+\t(ctype<char>::do_widen(const char*, const char*, char*)):\n+\tLikewise.\n+\t(ctype<char>::do_narrow(const char*, const char*, char, char*)):\n+\tLikewise.\n+\n \t* doc/xml/manual/spine.xml: Update copyright years.\n \t* doc/xml/manual/status_cxx2017.xml: Adjust note about -lstdc++fs.\n \t* doc/xml/manual/using.xml: Remove requirement to link with -lstdc++fs"}, {"sha": "06e04ceaa34b6f45cf46a465186979d02c3e1bc2", "filename": "libstdc++-v3/include/bits/char_traits.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e002afaa8e01395110c77de18bb7e0fa030ba019/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e002afaa8e01395110c77de18bb7e0fa030ba019/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fchar_traits.h?ref=e002afaa8e01395110c77de18bb7e0fa030ba019", "patch": "@@ -183,6 +183,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     char_traits<_CharT>::\n     move(char_type* __s1, const char_type* __s2, std::size_t __n)\n     {\n+      if (__n == 0)\n+\treturn __s1;\n       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,\n \t\t\t\t\t\t    __n * sizeof(char_type)));\n     }"}, {"sha": "66ac9c07a5d7e6617609dac4726261bd2014f28f", "filename": "libstdc++-v3/include/bits/locale_facets.h", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e002afaa8e01395110c77de18bb7e0fa030ba019/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e002afaa8e01395110c77de18bb7e0fa030ba019/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h?ref=e002afaa8e01395110c77de18bb7e0fa030ba019", "patch": "@@ -896,7 +896,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       {\n \tif (_M_widen_ok == 1)\n \t  {\n-\t    __builtin_memcpy(__to, __lo, __hi - __lo);\n+\t    if (__builtin_expect(__hi != __lo, true))\n+\t      __builtin_memcpy(__to, __lo, __hi - __lo);\n \t    return __hi;\n \t  }\n \tif (!_M_widen_ok)\n@@ -961,7 +962,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       {\n \tif (__builtin_expect(_M_narrow_ok == 1, true))\n \t  {\n-\t    __builtin_memcpy(__to, __lo, __hi - __lo);\n+\t    if (__builtin_expect(__hi != __lo, true))\n+\t      __builtin_memcpy(__to, __lo, __hi - __lo);\n \t    return __hi;\n \t  }\n \tif (!_M_narrow_ok)\n@@ -1100,7 +1102,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       virtual const char*\n       do_widen(const char* __lo, const char* __hi, char_type* __to) const\n       {\n-\t__builtin_memcpy(__to, __lo, __hi - __lo);\n+\tif (__builtin_expect(__hi != __lo, true))\n+\t  __builtin_memcpy(__to, __lo, __hi - __lo);\n \treturn __hi;\n       }\n \n@@ -1153,7 +1156,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       do_narrow(const char_type* __lo, const char_type* __hi,\n \t\tchar __dfault __attribute__((__unused__)), char* __to) const\n       {\n-\t__builtin_memcpy(__to, __lo, __hi - __lo);\n+\tif (__builtin_expect(__hi != __lo, true))\n+\t  __builtin_memcpy(__to, __lo, __hi - __lo);\n \treturn __hi;\n       }\n "}]}