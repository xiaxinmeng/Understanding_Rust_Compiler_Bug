{"sha": "1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkzM2I3NGY3ODdlNjliOWJmZTRhZDBiNzQ0MDdiNWFmNGFkOWQ3Yg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-12-26T11:08:47Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-12-26T11:08:47Z"}, "message": "type_traits: Implement is_pod, has_trivial_constructor, and has_trivial_destructor.\n\n2004-12-26  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/tr1/type_traits: Implement is_pod, has_trivial_constructor,\n\tand has_trivial_destructor.\n\t* testsuite/tr1/4_metaprogramming/type_properties/\n\thas_trivial_constructor/has_trivial_constructor.cc: New.\n\t* testsuite/tr1/4_metaprogramming/type_properties/\n\thas_trivial_constructor/typedefs.cc: Likewise.\n\t* testsuite/tr1/4_metaprogramming/type_properties/\n\thas_trivial_destructor/has_trivial_destructor.cc: Likewise.\n\t* testsuite/tr1/4_metaprogramming/type_properties/\n\thas_trivial_destructor/typedefs.cc: Likewise.\n\t* testsuite/tr1/4_metaprogramming/type_properties/\n\tis_pod/is_pod.cc: Likewise.\n\t* testsuite/tr1/4_metaprogramming/type_properties/\n\tis_pod/typedefs.cc: Likewise.\n\nFrom-SVN: r92618", "tree": {"sha": "8fd92114cc6ca190dcced0446f98148ac10e3f30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fd92114cc6ca190dcced0446f98148ac10e3f30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b/comments", "author": null, "committer": null, "parents": [{"sha": "57aaef66e54574a9ae1740491516066e8eddc64b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57aaef66e54574a9ae1740491516066e8eddc64b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57aaef66e54574a9ae1740491516066e8eddc64b"}], "stats": {"total": 323, "additions": 323, "deletions": 0}, "files": [{"sha": "0484e3403fa9f9e97fb78e6565ae862b7d09b3e1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b", "patch": "@@ -1,3 +1,20 @@\n+2004-12-26  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/tr1/type_traits: Implement is_pod, has_trivial_constructor,\n+\tand has_trivial_destructor.\n+\t* testsuite/tr1/4_metaprogramming/type_properties/\n+\thas_trivial_constructor/has_trivial_constructor.cc: New.\n+\t* testsuite/tr1/4_metaprogramming/type_properties/\n+\thas_trivial_constructor/typedefs.cc: Likewise.\n+\t* testsuite/tr1/4_metaprogramming/type_properties/\n+\thas_trivial_destructor/has_trivial_destructor.cc: Likewise.\n+\t* testsuite/tr1/4_metaprogramming/type_properties/\n+\thas_trivial_destructor/typedefs.cc: Likewise.\n+\t* testsuite/tr1/4_metaprogramming/type_properties/\n+\tis_pod/is_pod.cc: Likewise.\n+\t* testsuite/tr1/4_metaprogramming/type_properties/\n+\tis_pod/typedefs.cc: Likewise.\n+\n 2004-12-25  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/tr1/type_traits (is_enum): Minor tweak."}, {"sha": "0c53c9bb2032e2f74b84bc017c9534f05400f601", "filename": "libstdc++-v3/include/tr1/type_traits", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ftype_traits?ref=1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b", "patch": "@@ -271,6 +271,21 @@ namespace tr1\n     struct is_volatile<_Tp volatile>\n     : public true_type { };\n \n+  template<typename _Tp>\n+    struct is_pod\n+    : public integral_constant<bool, (is_void<_Tp>::value\n+\t\t\t\t      || is_scalar<typename\n+\t\t\t\t      remove_all_extents<_Tp>::type>::value)>\n+    { };\n+\n+  template<typename _Tp>\n+    struct has_trivial_constructor\n+    : public integral_constant<bool, is_pod<_Tp>::value> { };\n+\n+  template<typename _Tp>\n+    struct has_trivial_destructor\n+    : public integral_constant<bool, is_pod<_Tp>::value> { };\n+\n   template<typename>\n     struct has_virtual_destructor\n     : public false_type { };"}, {"sha": "1de7d1eb96985ad91560d710c379066070e74c1b", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/has_trivial_constructor/has_trivial_constructor.cc", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fhas_trivial_constructor%2Fhas_trivial_constructor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fhas_trivial_constructor%2Fhas_trivial_constructor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fhas_trivial_constructor%2Fhas_trivial_constructor.cc?ref=1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b", "patch": "@@ -0,0 +1,62 @@\n+// 2004-12-26  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 4.5.3 Type properties\n+\n+#include <tr1/type_traits>\n+#include <testsuite_hooks.h>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using std::tr1::has_trivial_constructor;\n+  using namespace __gnu_test;\n+\n+  VERIFY( (test_category<has_trivial_constructor, void>(true)) );\n+  VERIFY( (test_category<has_trivial_constructor, int>(true)) );\n+  VERIFY( (test_category<has_trivial_constructor, float>(true)) );\n+  VERIFY( (test_category<has_trivial_constructor, EnumType>(true)) );\n+  VERIFY( (test_category<has_trivial_constructor, int*>(true)) );\n+  VERIFY( (test_category<has_trivial_constructor, int(*)(int)>(true)) );\n+  VERIFY( (test_category<has_trivial_constructor, int (ClassType::*)>(true)) );\n+  // Temporarily disabled because of c++/19076 :-(\n+  // VERIFY( (test_category<has_trivial_constructor,\n+  //   int (ClassType::*) (int)>(true)) );\n+  VERIFY( (test_category<has_trivial_constructor, int[2]>(true)) );\n+  VERIFY( (test_category<has_trivial_constructor, float[][3]>(true)) );\n+  VERIFY( (test_category<has_trivial_constructor, EnumType[2][3][4]>(true)) );\n+  VERIFY( (test_category<has_trivial_constructor, int*[3]>(true)) );\n+  VERIFY( (test_category<has_trivial_constructor, int(*[][2])(int)>(true)) );\n+  VERIFY( (test_category<has_trivial_constructor,\n+\t   int (ClassType::*[2][3])>(true)) );\n+  // Temporarily disabled because of c++/19076 :-(\n+  // VERIFY( (test_category<has_trivial_constructor,\n+  //   int (ClassType::*[][2][3]) (int)>(true)) );\n+\n+  // Sanity check.\n+  VERIFY( (test_category<has_trivial_constructor, ClassType>(false)) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "ef15f5be296908106ff3536194780f8914c12571", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/has_trivial_constructor/typedefs.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fhas_trivial_constructor%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fhas_trivial_constructor%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fhas_trivial_constructor%2Ftypedefs.cc?ref=1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b", "patch": "@@ -0,0 +1,36 @@\n+// 2004-12-26  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// \n+// NB: This file is for testing tr1/type_traits with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+// { dg-do compile }\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::tr1::has_trivial_constructor<int>    test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "4e4a2842fb12b662a42794a8a359a6a553a673cf", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/has_trivial_destructor/has_trivial_destructor.cc", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fhas_trivial_destructor%2Fhas_trivial_destructor.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fhas_trivial_destructor%2Fhas_trivial_destructor.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fhas_trivial_destructor%2Fhas_trivial_destructor.cc?ref=1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b", "patch": "@@ -0,0 +1,62 @@\n+// 2004-12-26  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 4.5.3 Type properties\n+\n+#include <tr1/type_traits>\n+#include <testsuite_hooks.h>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using std::tr1::has_trivial_destructor;\n+  using namespace __gnu_test;\n+\n+  VERIFY( (test_category<has_trivial_destructor, void>(true)) );\n+  VERIFY( (test_category<has_trivial_destructor, int>(true)) );\n+  VERIFY( (test_category<has_trivial_destructor, float>(true)) );\n+  VERIFY( (test_category<has_trivial_destructor, EnumType>(true)) );\n+  VERIFY( (test_category<has_trivial_destructor, int*>(true)) );\n+  VERIFY( (test_category<has_trivial_destructor, int(*)(int)>(true)) );\n+  VERIFY( (test_category<has_trivial_destructor, int (ClassType::*)>(true)) );\n+  // Temporarily disabled because of c++/19076 :-(\n+  // VERIFY( (test_category<has_trivial_destructor,\n+  //   int (ClassType::*) (int)>(true)) );\n+  VERIFY( (test_category<has_trivial_destructor, int[2]>(true)) );\n+  VERIFY( (test_category<has_trivial_destructor, float[][3]>(true)) );\n+  VERIFY( (test_category<has_trivial_destructor, EnumType[2][3][4]>(true)) );\n+  VERIFY( (test_category<has_trivial_destructor, int*[3]>(true)) );\n+  VERIFY( (test_category<has_trivial_destructor, int(*[][2])(int)>(true)) );\n+  VERIFY( (test_category<has_trivial_destructor,\n+\t   int (ClassType::*[2][3])>(true)) );\n+  // Temporarily disabled because of c++/19076 :-(\n+  // VERIFY( (test_category<has_trivial_destructor,\n+  //   int (ClassType::*[][2][3]) (int)>(true)) );\n+\n+  // Sanity check.\n+  VERIFY( (test_category<has_trivial_destructor, ClassType>(false)) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "1ba4e6f75f996ad7c00bfc5422521be20d5a055c", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/has_trivial_destructor/typedefs.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fhas_trivial_destructor%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fhas_trivial_destructor%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fhas_trivial_destructor%2Ftypedefs.cc?ref=1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b", "patch": "@@ -0,0 +1,36 @@\n+// 2004-12-26  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// \n+// NB: This file is for testing tr1/type_traits with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+// { dg-do compile }\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::tr1::has_trivial_destructor<int>     test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "4fac0f3cb0e33679160634f10a6b48e45b73c25a", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_pod/is_pod.cc", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fis_pod%2Fis_pod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fis_pod%2Fis_pod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fis_pod%2Fis_pod.cc?ref=1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b", "patch": "@@ -0,0 +1,59 @@\n+// 2004-12-26  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 4.5.3 Type properties\n+\n+#include <tr1/type_traits>\n+#include <testsuite_hooks.h>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using std::tr1::is_pod;\n+  using namespace __gnu_test;\n+\n+  VERIFY( (test_category<is_pod, void>(true)) );\n+  VERIFY( (test_category<is_pod, int>(true)) );\n+  VERIFY( (test_category<is_pod, float>(true)) );\n+  VERIFY( (test_category<is_pod, EnumType>(true)) );\n+  VERIFY( (test_category<is_pod, int*>(true)) );\n+  VERIFY( (test_category<is_pod, int(*)(int)>(true)) );\n+  VERIFY( (test_category<is_pod, int (ClassType::*)>(true)) );\n+  // Temporarily disabled because of c++/19076 :-(\n+  // VERIFY( (test_category<is_pod, int (ClassType::*) (int)>(true)) );\n+  VERIFY( (test_category<is_pod, int[2]>(true)) );\n+  VERIFY( (test_category<is_pod, float[][3]>(true)) );\n+  VERIFY( (test_category<is_pod, EnumType[2][3][4]>(true)) );\n+  VERIFY( (test_category<is_pod, int*[3]>(true)) );\n+  VERIFY( (test_category<is_pod, int(*[][2])(int)>(true)) );\n+  VERIFY( (test_category<is_pod, int (ClassType::*[2][3])>(true)) );\n+  // Temporarily disabled because of c++/19076 :-(\n+  // VERIFY( (test_category<is_pod, int (ClassType::*[][2][3]) (int)>(true)) );\n+\n+  // Sanity check.\n+  VERIFY( (test_category<is_pod, ClassType>(false)) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "db563d56e104c047a17dd9865369a52b44b9f047", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/type_properties/is_pod/typedefs.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fis_pod%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fis_pod%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Ftype_properties%2Fis_pod%2Ftypedefs.cc?ref=1933b74f787e69b9bfe4ad0b74407b5af4ad9d7b", "patch": "@@ -0,0 +1,36 @@\n+// 2004-12-26  Paolo Carlini  <pcarlini@suse.de>\n+//\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// \n+// NB: This file is for testing tr1/type_traits with NO OTHER INCLUDES.\n+\n+#include <tr1/type_traits>\n+\n+// { dg-do compile }\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::tr1::is_pod<int>               test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}]}