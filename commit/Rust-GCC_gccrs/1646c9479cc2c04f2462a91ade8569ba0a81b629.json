{"sha": "1646c9479cc2c04f2462a91ade8569ba0a81b629", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY0NmM5NDc5Y2MyYzA0ZjI0NjJhOTFhZGU4NTY5YmEwYTgxYjYyOQ==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2009-07-23T12:40:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-23T12:40:31Z"}, "message": "sem_aggr.adb (Resolve_Extension_Aggregate): Report an error when the ancestor part is a call to a limited function with an...\n\n2009-07-23  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_aggr.adb (Resolve_Extension_Aggregate): Report an error when the\n\tancestor part is a call to a limited function with an unconstrained\n\tresult subtype unless the aggregate has a null extension type.\n\t* sem_ch3.adb (Is_Null_Extension): Use the base type when retrieving\n\tthe parent type declaration to avoid blowups on subtype cases.\n\nFrom-SVN: r150002", "tree": {"sha": "c38a8bdfa1eb673bc2e9f934cdaa90dd23c9a4e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c38a8bdfa1eb673bc2e9f934cdaa90dd23c9a4e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1646c9479cc2c04f2462a91ade8569ba0a81b629", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1646c9479cc2c04f2462a91ade8569ba0a81b629", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1646c9479cc2c04f2462a91ade8569ba0a81b629", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1646c9479cc2c04f2462a91ade8569ba0a81b629/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d994a6e28cbd12d699d5cf522742d9cd3e84997a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d994a6e28cbd12d699d5cf522742d9cd3e84997a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d994a6e28cbd12d699d5cf522742d9cd3e84997a"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "36fd6dc8e4b8d5ef5878b8dd647fd0670f1ac8d7", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1646c9479cc2c04f2462a91ade8569ba0a81b629/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1646c9479cc2c04f2462a91ade8569ba0a81b629/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=1646c9479cc2c04f2462a91ade8569ba0a81b629", "patch": "@@ -2376,7 +2376,20 @@ package body Sem_Aggr is\n             Check_Unset_Reference (A);\n             Check_Non_Static_Context (A);\n \n-            if Is_Class_Wide_Type (Etype (A))\n+            --  The aggregate is illegal if the ancestor expression is a call\n+            --  to a function with a limited unconstrained result, unless the\n+            --  type of the aggregate is a null extension. This restriction\n+            --  was added in AI05-67 to simplify implementation.\n+\n+            if Nkind (A) = N_Function_Call\n+              and then Is_Limited_Type (A_Type)\n+              and then not Is_Null_Extension (Typ)\n+              and then not Is_Constrained (A_Type)\n+            then\n+               Error_Msg_N\n+                 (\"type of limited ancestor part must be constrained\", A);\n+\n+            elsif Is_Class_Wide_Type (Etype (A))\n               and then Nkind (Original_Node (A)) = N_Function_Call\n             then\n                --  If the ancestor part is a dispatching call, it appears"}, {"sha": "b569d7062f39570b34acdc22bbd9a4401a536efb", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1646c9479cc2c04f2462a91ade8569ba0a81b629/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1646c9479cc2c04f2462a91ade8569ba0a81b629/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=1646c9479cc2c04f2462a91ade8569ba0a81b629", "patch": "@@ -14547,7 +14547,7 @@ package body Sem_Ch3 is\n    -----------------------\n \n    function Is_Null_Extension (T : Entity_Id) return Boolean is\n-      Type_Decl : constant Node_Id := Parent (T);\n+      Type_Decl : constant Node_Id := Parent (Base_Type (T));\n       Comp_List : Node_Id;\n       Comp      : Node_Id;\n "}]}