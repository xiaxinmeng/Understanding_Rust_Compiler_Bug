{"sha": "b0f1bf3681b1f835f6402538e0f6471c72a465eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBmMWJmMzY4MWIxZjgzNWY2NDAyNTM4ZTBmNjQ3MWM3MmE0NjVlYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-04-14T11:49:42Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-04-14T11:49:42Z"}, "message": "re PR c/60819 (dse1 removing not-dead insn (aliasing issue?))\n\n2014-04-14  Richard Biener  <rguenther@suse.de>\n\tMarc Glisse  <marc.glisse@inria.fr>\n\n\tPR c/60819\n\tc-family/\n\t* c-common.c (convert_vector_to_pointer_for_subscript): Properly\n\tapply may-alias the scalar pointer type when applicable.\n\n\t* gcc.target/i386/vec-may_alias.c: New testcase.\n\nCo-Authored-By: Marc Glisse <marc.glisse@inria.fr>\n\nFrom-SVN: r209365", "tree": {"sha": "de7d0e7139d874aa77d18b13a0eb4a8e293771f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de7d0e7139d874aa77d18b13a0eb4a8e293771f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0f1bf3681b1f835f6402538e0f6471c72a465eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0f1bf3681b1f835f6402538e0f6471c72a465eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0f1bf3681b1f835f6402538e0f6471c72a465eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0f1bf3681b1f835f6402538e0f6471c72a465eb/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "727987844249aafe00ffaf7a8030564c1f731607", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/727987844249aafe00ffaf7a8030564c1f731607", "html_url": "https://github.com/Rust-GCC/gccrs/commit/727987844249aafe00ffaf7a8030564c1f731607"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "206b47b13699059278787d1e90f77c16097b0103", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0f1bf3681b1f835f6402538e0f6471c72a465eb/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0f1bf3681b1f835f6402538e0f6471c72a465eb/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=b0f1bf3681b1f835f6402538e0f6471c72a465eb", "patch": "@@ -1,3 +1,10 @@\n+2014-04-14  Richard Biener  <rguenther@suse.de>\n+\tMarc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR c/60819\n+\t* c-common.c (convert_vector_to_pointer_for_subscript): Properly\n+\tapply may-alias the scalar pointer type when applicable.\n+\n 2014-04-12  Igor Zamyatin  <igor.zamyatin@intel.com>\n \n \tPR middle-end/60467"}, {"sha": "c0e247b27071b267f7c3b8f52ac5587239132367", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0f1bf3681b1f835f6402538e0f6471c72a465eb/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0f1bf3681b1f835f6402538e0f6471c72a465eb/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=b0f1bf3681b1f835f6402538e0f6471c72a465eb", "patch": "@@ -11784,8 +11784,21 @@ convert_vector_to_pointer_for_subscript (location_t loc,\n \n       c_common_mark_addressable_vec (*vecp);\n       type = build_qualified_type (TREE_TYPE (type), TYPE_QUALS (type));\n-      type = build_pointer_type (type);\n       type1 = build_pointer_type (TREE_TYPE (*vecp));\n+      bool ref_all = TYPE_REF_CAN_ALIAS_ALL (type1);\n+      if (!ref_all\n+\t  && !DECL_P (*vecp))\n+\t{\n+\t  /* If the original vector isn't declared may_alias and it\n+\t     isn't a bare vector look if the subscripting would\n+\t     alias the vector we subscript, and if not, force ref-all.  */\n+\t  alias_set_type vecset = get_alias_set (*vecp);\n+\t  alias_set_type sset = get_alias_set (type);\n+\t  if (!alias_sets_must_conflict_p (sset, vecset)\n+\t      && !alias_set_subset_of (sset, vecset))\n+\t    ref_all = true;\n+\t}\n+      type = build_pointer_type_for_mode (type, ptr_mode, ref_all);\n       *vecp = build1 (ADDR_EXPR, type1, *vecp);\n       *vecp = convert (type, *vecp);\n     }"}, {"sha": "36655885d10bc4dd48afe3582bc0c026c6faaf3a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0f1bf3681b1f835f6402538e0f6471c72a465eb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0f1bf3681b1f835f6402538e0f6471c72a465eb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b0f1bf3681b1f835f6402538e0f6471c72a465eb", "patch": "@@ -1,3 +1,9 @@\n+2014-04-14  Richard Biener  <rguenther@suse.de>\n+\tMarc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR c/60819\n+\t* gcc.target/i386/vec-may_alias.c: New testcase.\n+\n 2014-04-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* lib/target-supports.exp"}, {"sha": "e970497454f93e91de1dea0de51650a5d0da95eb", "filename": "gcc/testsuite/gcc.target/i386/vec-may_alias.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0f1bf3681b1f835f6402538e0f6471c72a465eb/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvec-may_alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0f1bf3681b1f835f6402538e0f6471c72a465eb/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvec-may_alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvec-may_alias.c?ref=b0f1bf3681b1f835f6402538e0f6471c72a465eb", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -w -Wno-abi\" } */\n+\n+typedef int v2si __attribute__ ((vector_size (8)));\n+typedef short v4hi __attribute__ ((vector_size (8)));\n+typedef short v4hia __attribute__ ((vector_size (8), may_alias));\n+\n+__attribute__ ((noinline, noclone))\n+int f (v2si A, int N)\n+{ return ((v4hia)A)[N]; }\n+\n+__attribute__ ((noinline, noclone))\n+int g (v2si A, int N)\n+{ return ((v4hi)A)[N]; }\n+\n+int main()\n+{\n+  v2si x = { 0, 0 }, y = { 1, 1 };\n+  if (f (x, 0) || f (x, 1) || f (x, 2) || f (x, 3))\n+    __builtin_abort ();\n+  if (g (y, 0) != 1 || g (y, 1) || g (y, 2) != 1 || g (y, 3))\n+    __builtin_abort ();\n+  return 0;\n+}\n+"}]}