{"sha": "914c2e776d6d6ce6da61f4be9982390ef86c018b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE0YzJlNzc2ZDZkNmNlNmRhNjFmNGJlOTk4MjM5MGVmODZjMDE4Yg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-25T11:51:17Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-25T11:51:17Z"}, "message": "(low_32_bit_operand): New function.\n\nFrom-SVN: r9078", "tree": {"sha": "22034acc2ccf997fa14a2fe2d0b31e2273ad7551", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22034acc2ccf997fa14a2fe2d0b31e2273ad7551"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/914c2e776d6d6ce6da61f4be9982390ef86c018b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/914c2e776d6d6ce6da61f4be9982390ef86c018b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/914c2e776d6d6ce6da61f4be9982390ef86c018b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/914c2e776d6d6ce6da61f4be9982390ef86c018b/comments", "author": null, "committer": null, "parents": [{"sha": "c38e6998e0e4cc2bd33bb37c39695bfd81eabab7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c38e6998e0e4cc2bd33bb37c39695bfd81eabab7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c38e6998e0e4cc2bd33bb37c39695bfd81eabab7"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "678f21f9954068ce37ac4945d7f86da8ccb82645", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/914c2e776d6d6ce6da61f4be9982390ef86c018b/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/914c2e776d6d6ce6da61f4be9982390ef86c018b/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=914c2e776d6d6ce6da61f4be9982390ef86c018b", "patch": "@@ -322,6 +322,23 @@ easy_fp_constant (op, mode)\n \t  || (low != 0 && input_operand (low, word_mode)));\n }\n       \n+/* Return 1 if the operand is a constant whose low-order 32 bits are\n+   zero.  */\n+\n+int\n+low_32_bit_operand (op, mode)\n+     register rtx op;\n+     enum machine_mode mode;\n+{\n+  rtx low;\n+\n+  if (GET_CODE (op) != CONST_DOUBLE && GET_CODE (op) != CONST_INT)\n+    return 0;\n+\n+  low = operand_subword (op, 1, 0, mode);\n+  return low != 0 && GET_CODE (low) == CONST_INT && INTVAL (low) == 0;\n+}\n+\n /* Return 1 if the operand is either a floating-point register, a pseudo\n    register, or memory.  */\n "}]}