{"sha": "1fb19247a9d1771ffd86e27d55cb8863b32e0f52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZiMTkyNDdhOWQxNzcxZmZkODZlMjdkNTVjYjg4NjNiMzJlMGY1Mg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2015-11-20T20:36:03Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2015-11-20T20:36:03Z"}, "message": "Add testcase erroneously omitted from r230638\n\nFrom-SVN: r230675", "tree": {"sha": "d9267902f0eef3ccd76d0ca0fc72f4b33624b7df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9267902f0eef3ccd76d0ca0fc72f4b33624b7df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fb19247a9d1771ffd86e27d55cb8863b32e0f52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fb19247a9d1771ffd86e27d55cb8863b32e0f52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fb19247a9d1771ffd86e27d55cb8863b32e0f52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fb19247a9d1771ffd86e27d55cb8863b32e0f52/comments", "author": null, "committer": null, "parents": [{"sha": "a87a86e1e97610650fb4305edc76a8f4a399a46e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a87a86e1e97610650fb4305edc76a8f4a399a46e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a87a86e1e97610650fb4305edc76a8f4a399a46e"}], "stats": {"total": 89, "additions": 89, "deletions": 0}, "files": [{"sha": "df49c92f7a6a03fb9797bce9782b5cb196ee6182", "filename": "gcc/testsuite/g++.dg/spellcheck-fields.C", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fb19247a9d1771ffd86e27d55cb8863b32e0f52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspellcheck-fields.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fb19247a9d1771ffd86e27d55cb8863b32e0f52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspellcheck-fields.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fspellcheck-fields.C?ref=1fb19247a9d1771ffd86e27d55cb8863b32e0f52", "patch": "@@ -0,0 +1,89 @@\n+/* { dg-do compile } */\n+\n+struct foo\n+{\n+  int foo;\n+  int bar;\n+  int baz;\n+};\n+\n+int test (struct foo *ptr)\n+{\n+  return ptr->m_bar; /* { dg-error \"'struct foo' has no member named 'm_bar'; did you mean 'bar'?\" } */\n+}\n+\n+int test2 (void)\n+{\n+  struct foo instance = {0, 0, 0};\n+  return instance.m_bar; /* { dg-error \"'struct foo' has no member named 'm_bar'; did you mean 'bar'?\" } */\n+}\n+\n+struct s {\n+    struct j { int aa; } kk;\n+    int ab;\n+};\n+\n+void test3 (struct s x)\n+{\n+  x.ac;  /* { dg-error \"'struct s' has no member named 'ac'; did you mean 'ab'?\" } */\n+}\n+\n+int test4 (struct foo *ptr)\n+{\n+  return sizeof (ptr->foa); /* { dg-error \"'struct foo' has no member named 'foa'; did you mean 'foo'?\" } */\n+}\n+\n+/* Verify that we don't offer nonsensical suggestions.  */\n+\n+int test5 (struct foo *ptr)\n+{\n+  return ptr->this_is_unlike_any_of_the_fields;   /* { dg-bogus \"did you mean\" } */\n+  /* { dg-error \"has no member named\" \"\" { target *-*-* } 40 } */\n+}\n+\n+union u\n+{\n+  int color;\n+  int shape;\n+};\n+\n+int test6 (union u *ptr)\n+{\n+  return ptr->colour; /* { dg-error \"'union u' has no member named 'colour'; did you mean 'color'?\" } */\n+}\n+\n+struct has_anon\n+{\n+  struct { int color; } s;\n+};\n+\n+int test7 (struct has_anon *ptr)\n+{\n+  return ptr->s.colour; /* { dg-error \"'struct has_anon::<anonymous>' has no member named 'colour'; did you mean 'color'?\" } */\n+}\n+\n+int test8 (foo &ref)\n+{\n+  return ref.m_bar; /* { dg-error \"'struct foo' has no member named 'm_bar'; did you mean 'bar'?\" } */\n+}\n+\n+struct bar : public foo\n+{\n+  int fizz;\n+  typedef int my_type;\n+};\n+\n+int test9 (bar *ptr)\n+{\n+  return ptr->fuzz; /* { dg-error \"'struct bar' has no member named 'fuzz'; did you mean 'fizz'?\" } */\n+}\n+\n+int test10 (bar *ptr)\n+{\n+  return ptr->m_foo; /* { dg-error \"'struct bar' has no member named 'm_foo'; did you mean 'foo'?\" } */\n+}\n+\n+int test11 (bar *ptr)\n+{\n+  return ptr->mytype; /* { dg-error \"'struct bar' has no member named 'mytype'; did you mean 'my_type'?\" } */\n+}"}]}