{"sha": "11389610242c157e43dd5c1f469970e514efe60a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEzODk2MTAyNDJjMTU3ZTQzZGQ1YzFmNDY5OTcwZTUxNGVmZTYwYQ==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2017-06-16T21:04:23Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2017-06-16T21:04:23Z"}, "message": "[arm] Make 'auto' the default FPU selection option.\n\n\nFinally, we can make 'auto' the default choice for the FPU option.  It's\nstill possible to override this during configure, but we will eventually\ndeprecate that, moving to the new cpu/architecture selection mechanism.\n\n\t* config/arm/arm.h (FPUTYPE_AUTO): Define.\n\t* config/arm/arm.c (arm_option_override): Use FPUTYPE_AUTO if the\n\tfpu is not specified by the user/command-line.\n\t* config/arm/bpabi.h (FPUTYPE_DEFAULT): Delete.\n\t* config/arm/netbsd-elf.h (FPUTYPE_DEFAULT): Delete.\n\t* config/arm/linux-elf.h (FPUTYPE_DEFAULT): Delete.\n\t* config/arm/vxworks.h (FPUTYPE_DEFAULT): Delete.\n\t* common/config/arm/arm-common.c (arm_canon_arch_option): Use\n\tFPUTYPE_AUTO insted of FPUTYPE_DEFAULT.\n\nFrom-SVN: r249295", "tree": {"sha": "e75c28c061a8ae841a2cc08a8a8805e88668ba99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e75c28c061a8ae841a2cc08a8a8805e88668ba99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11389610242c157e43dd5c1f469970e514efe60a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11389610242c157e43dd5c1f469970e514efe60a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11389610242c157e43dd5c1f469970e514efe60a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11389610242c157e43dd5c1f469970e514efe60a/comments", "author": null, "committer": null, "parents": [{"sha": "aaf8008ce7e980b8f04d6dfaaa2c5ec7f4da1c67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaf8008ce7e980b8f04d6dfaaa2c5ec7f4da1c67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaf8008ce7e980b8f04d6dfaaa2c5ec7f4da1c67"}], "stats": {"total": 39, "additions": 17, "deletions": 22}, "files": [{"sha": "d543614f9d6e081235c05c884cc6fb1cba0aa884", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11389610242c157e43dd5c1f469970e514efe60a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11389610242c157e43dd5c1f469970e514efe60a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=11389610242c157e43dd5c1f469970e514efe60a", "patch": "@@ -1,3 +1,15 @@\n+2017-06-16  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* config/arm/arm.h (FPUTYPE_AUTO): Define.\n+\t* config/arm/arm.c (arm_option_override): Use FPUTYPE_AUTO if the\n+\tfpu is not specified by the user/command-line.\n+\t* config/arm/bpabi.h (FPUTYPE_DEFAULT): Delete.\n+\t* config/arm/netbsd-elf.h (FPUTYPE_DEFAULT): Delete.\n+\t* config/arm/linux-elf.h (FPUTYPE_DEFAULT): Delete.\n+\t* config/arm/vxworks.h (FPUTYPE_DEFAULT): Delete.\n+\t* common/config/arm/arm-common.c (arm_canon_arch_option): Use\n+\tFPUTYPE_AUTO insted of FPUTYPE_DEFAULT.\n+\n 2017-06-16  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* config/arm/elf.h (MULTILIB_DEFAULTS): Delete."}, {"sha": "86170e154085629c1b441d89df671436388c0628", "filename": "gcc/common/config/arm/arm-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11389610242c157e43dd5c1f469970e514efe60a/gcc%2Fcommon%2Fconfig%2Farm%2Farm-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11389610242c157e43dd5c1f469970e514efe60a/gcc%2Fcommon%2Fconfig%2Farm%2Farm-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Farm%2Farm-common.c?ref=11389610242c157e43dd5c1f469970e514efe60a", "patch": "@@ -520,7 +520,7 @@ arm_canon_arch_option (int argc, const char **argv)\n   gcc_assert (cpu || arch);\n \n   if (!fpu)\n-    fpu = FPUTYPE_DEFAULT;\n+    fpu = FPUTYPE_AUTO;\n \n   if (!abi)\n     {"}, {"sha": "f3b2715185ba42aeac3ee0489a9c6670fda6e5f1", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11389610242c157e43dd5c1f469970e514efe60a/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11389610242c157e43dd5c1f469970e514efe60a/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=11389610242c157e43dd5c1f469970e514efe60a", "patch": "@@ -3298,17 +3298,10 @@ arm_option_override (void)\n \n   if (!global_options_set.x_arm_fpu_index)\n     {\n-      const char *target_fpu_name;\n       bool ok;\n       int fpu_index;\n \n-#ifdef FPUTYPE_DEFAULT\n-      target_fpu_name = FPUTYPE_DEFAULT;\n-#else\n-      target_fpu_name = \"vfp\";\n-#endif\n-\n-      ok = opt_enum_arg_to_value (OPT_mfpu_, target_fpu_name, &fpu_index,\n+      ok = opt_enum_arg_to_value (OPT_mfpu_, FPUTYPE_AUTO, &fpu_index,\n \t\t\t\t  CL_TARGET);\n       gcc_assert (ok);\n       arm_fpu_index = (enum fpu_type) fpu_index;"}, {"sha": "43d44778bdc4bfc82aad3bdd92ea5e22bc6f45d5", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11389610242c157e43dd5c1f469970e514efe60a/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11389610242c157e43dd5c1f469970e514efe60a/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=11389610242c157e43dd5c1f469970e514efe60a", "patch": "@@ -2220,6 +2220,9 @@ extern int making_const_table;\n   (TARGET_NEON ? (TARGET_ARM_FP & (0xff ^ 0x08)) \\\n \t       : 0)\n \n+/* Name of the automatic fpu-selection option.  */\n+#define FPUTYPE_AUTO \"auto\"\n+\n /* The maximum number of parallel loads or stores we support in an ldm/stm\n    instruction.  */\n #define MAX_LDM_STM_OPS 4"}, {"sha": "d38863a3cd3edd71ef706dd1c48e99e0ff7c9acb", "filename": "gcc/config/arm/bpabi.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11389610242c157e43dd5c1f469970e514efe60a/gcc%2Fconfig%2Farm%2Fbpabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11389610242c157e43dd5c1f469970e514efe60a/gcc%2Fconfig%2Farm%2Fbpabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fbpabi.h?ref=11389610242c157e43dd5c1f469970e514efe60a", "patch": "@@ -33,10 +33,6 @@\n #undef ARM_UNWIND_INFO\n #define ARM_UNWIND_INFO 1\n \n-/* Section 4.1 of the AAPCS requires the use of VFP format.  */\n-#undef  FPUTYPE_DEFAULT\n-#define FPUTYPE_DEFAULT \"vfp\"\n-\n /* TARGET_BIG_ENDIAN_DEFAULT is set in\n    config.gcc for big endian configurations.  */\n #if TARGET_BIG_ENDIAN_DEFAULT"}, {"sha": "cd4fc3b347b94ceaf412ffad54c8aeae8bbee2b0", "filename": "gcc/config/arm/linux-elf.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11389610242c157e43dd5c1f469970e514efe60a/gcc%2Fconfig%2Farm%2Flinux-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11389610242c157e43dd5c1f469970e514efe60a/gcc%2Fconfig%2Farm%2Flinux-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-elf.h?ref=11389610242c157e43dd5c1f469970e514efe60a", "patch": "@@ -83,9 +83,6 @@\n     }\t\t\t\t\t\t\\\n   while (0)\n \n-#undef  FPUTYPE_DEFAULT\n-#define FPUTYPE_DEFAULT \"vfp\"\n-\n /* Call the function profiler with a given profile label.  */\n #undef  ARM_FUNCTION_PROFILER\n #define ARM_FUNCTION_PROFILER(STREAM, LABELNO)  \t\t\t\\"}, {"sha": "02ff3163c6cb181f44d20cf533b06d98a02a5159", "filename": "gcc/config/arm/netbsd-elf.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11389610242c157e43dd5c1f469970e514efe60a/gcc%2Fconfig%2Farm%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11389610242c157e43dd5c1f469970e514efe60a/gcc%2Fconfig%2Farm%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fnetbsd-elf.h?ref=11389610242c157e43dd5c1f469970e514efe60a", "patch": "@@ -153,7 +153,3 @@ do\t\t\t\t\t\t\t\t\t\\\n     (void) sysarch (0, &s);\t\t\t\t\t\t\\\n   }\t\t\t\t\t\t\t\t\t\\\n while (0)\n-\n-#undef FPUTYPE_DEFAULT\n-#define FPUTYPE_DEFAULT \"vfp\"\n-"}, {"sha": "9af37c7f4f5747d1cd064103a4c3f91b31984c48", "filename": "gcc/config/arm/vxworks.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11389610242c157e43dd5c1f469970e514efe60a/gcc%2Fconfig%2Farm%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11389610242c157e43dd5c1f469970e514efe60a/gcc%2Fconfig%2Farm%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvxworks.h?ref=11389610242c157e43dd5c1f469970e514efe60a", "patch": "@@ -92,8 +92,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n /* There is no default multilib.  */\n #undef MULTILIB_DEFAULTS\n \n-#define FPUTYPE_DEFAULT \"vfp\"\n-\n #undef FUNCTION_PROFILER\n #define FUNCTION_PROFILER VXWORKS_FUNCTION_PROFILER\n "}]}