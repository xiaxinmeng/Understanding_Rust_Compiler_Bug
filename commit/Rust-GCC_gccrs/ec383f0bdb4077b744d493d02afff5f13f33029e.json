{"sha": "ec383f0bdb4077b744d493d02afff5f13f33029e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMzODNmMGJkYjQwNzdiNzQ0ZDQ5M2QwMmFmZmY1ZjEzZjMzMDI5ZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-19T09:43:35Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-19T10:35:45Z"}, "message": "tree-optimization/97901 - ICE propagating out LC PHIs\n\nWe need to fold the stmt to canonicalize MEM_REFs which means\nwe're back to using replace_uses_by.  Which means we need dominators\nto not require a CFG cleanup upthread.\n\n2020-11-19  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/97901\n\t* tree-ssa-propagate.c (clean_up_loop_closed_phi): Compute\n\tdominators and use replace_uses_by.\n\n\t* gcc.dg/torture/pr97901.c: New testcase.", "tree": {"sha": "bbf63ed251ec0c1f16ab8fd62e35c51a7c4ffffb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbf63ed251ec0c1f16ab8fd62e35c51a7c4ffffb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec383f0bdb4077b744d493d02afff5f13f33029e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec383f0bdb4077b744d493d02afff5f13f33029e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec383f0bdb4077b744d493d02afff5f13f33029e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec383f0bdb4077b744d493d02afff5f13f33029e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43a0debd527b75eb564cad6bd47f5d5bb301dfad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43a0debd527b75eb564cad6bd47f5d5bb301dfad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43a0debd527b75eb564cad6bd47f5d5bb301dfad"}], "stats": {"total": 37, "additions": 20, "deletions": 17}, "files": [{"sha": "a6a89ef1e27eead47c5901d567cc2778bf23157a", "filename": "gcc/testsuite/gcc.dg/torture/pr97901.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec383f0bdb4077b744d493d02afff5f13f33029e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr97901.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec383f0bdb4077b744d493d02afff5f13f33029e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr97901.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr97901.c?ref=ec383f0bdb4077b744d493d02afff5f13f33029e", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+\n+int a[1], b, *c, *d;\n+\n+int main() {\n+L:\n+  d = c;\n+  for (b = 0; b < 2; b++)\n+    d = &a[0];\n+  if (c)\n+    goto L;\n+  if (*d)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "bc656ff76b1ad1c1e3bc9b6574384570442adab8", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 5, "deletions": 17, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec383f0bdb4077b744d493d02afff5f13f33029e/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec383f0bdb4077b744d493d02afff5f13f33029e/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=ec383f0bdb4077b744d493d02afff5f13f33029e", "patch": "@@ -1569,6 +1569,10 @@ clean_up_loop_closed_phi (function *fun)\n   if (!loops_state_satisfies_p (LOOPS_HAVE_RECORDED_EXITS))\n     return 0;\n \n+  /* replace_uses_by might purge dead EH edges and we want it to also\n+     remove dominated blocks.  */\n+  calculate_dominance_info  (CDI_DOMINATORS);\n+\n   /* Walk over loop in function.  */\n   FOR_EACH_LOOP_FN (fun, loop, 0)\n     {\n@@ -1595,23 +1599,7 @@ clean_up_loop_closed_phi (function *fun)\n \t\t      fprintf (dump_file, \"'\\n\");\n \t\t    }\n \n-\t\t  use_operand_p use_p;\n-\t\t  imm_use_iterator iter;\n-\t\t  gimple *use_stmt;\n-\t\t  FOR_EACH_IMM_USE_STMT (use_stmt, iter, lhs)\n-\t\t    {\n-\t\t      FOR_EACH_IMM_USE_ON_STMT (use_p, iter)\n-\t\t\treplace_exp (use_p, rhs);\n-\t\t      update_stmt (use_stmt);\n-\n-\t\t      /* Update the invariant flag for ADDR_EXPR if replacing\n-\t\t\t a variable index with a constant.  */\n-\t\t      if (gimple_assign_single_p (use_stmt)\n-\t\t\t  && TREE_CODE (gimple_assign_rhs1 (use_stmt))\n-\t\t\t       == ADDR_EXPR)\n-\t\t\trecompute_tree_invariant_for_addr_expr (\n-\t\t\t  gimple_assign_rhs1 (use_stmt));\n-\t\t    }\n+\t\t  replace_uses_by (lhs, rhs);\n \t\t  remove_phi_node (&gsi, true);\n \t\t}\n \t      else"}]}