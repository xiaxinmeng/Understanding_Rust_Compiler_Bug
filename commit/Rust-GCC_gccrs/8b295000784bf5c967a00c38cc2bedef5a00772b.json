{"sha": "8b295000784bf5c967a00c38cc2bedef5a00772b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGIyOTUwMDA3ODRiZjVjOTY3YTAwYzM4Y2MyYmVkZWY1YTAwNzcyYg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-04-17T00:31:44Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-04-17T00:31:44Z"}, "message": "(do_store_flag): Rewrite last change to avoid compiler\nwarnings.\n\nFrom-SVN: r11832", "tree": {"sha": "d7805e815c3c2f8aeb01e32296c9899f472b6f29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7805e815c3c2f8aeb01e32296c9899f472b6f29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b295000784bf5c967a00c38cc2bedef5a00772b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b295000784bf5c967a00c38cc2bedef5a00772b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b295000784bf5c967a00c38cc2bedef5a00772b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b295000784bf5c967a00c38cc2bedef5a00772b/comments", "author": null, "committer": null, "parents": [{"sha": "2830ec16fe286ce7b69daf98e95c72afd9b103e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2830ec16fe286ce7b69daf98e95c72afd9b103e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2830ec16fe286ce7b69daf98e95c72afd9b103e7"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "f539b49ab08ca8feeac74c105d92f99071ba358d", "filename": "gcc/expr.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b295000784bf5c967a00c38cc2bedef5a00772b/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b295000784bf5c967a00c38cc2bedef5a00772b/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=8b295000784bf5c967a00c38cc2bedef5a00772b", "patch": "@@ -10578,7 +10578,11 @@ do_store_flag (exp, target, mode, only_cheap)\n \t fail for negative values.  */\n       if (BITS_PER_WORD < HOST_BITS_PER_WIDE_INT\n \t  && BITS_PER_WORD == GET_MODE_BITSIZE (TYPE_MODE (type)))\n-\ttem = tem & (((HOST_WIDE_INT) 1 << BITS_PER_WORD) - 1);\n+\t/* We don't use the obvious constant shift to generate the mask,\n+\t   because that generates compiler warnings when BITS_PER_WORD is\n+\t   greater than or equal to HOST_BITS_PER_WIDE_INT, even though this\n+\t   code is unreachable in that case.  */\n+\ttem = tem & GET_MODE_MASK (word_mode);\n       bitnum = exact_log2 (tem);\n \n       /* If INNER is a right shift of a constant and it plus BITNUM does"}]}