{"sha": "c38ee9a2e87ea6d23580c364b3997acfce4a125c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM4ZWU5YTJlODdlYTZkMjM1ODBjMzY0YjM5OTdhY2ZjZTRhMTI1Yw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-11-07T17:06:04Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-11-07T17:06:04Z"}, "message": "lto-streamer-in.c: Include alloc-pool.h.\n\n\n\t* lto-streamer-in.c: Include alloc-pool.h.\n\t(freeing_string_slot_hasher): Remove.\n\t(string_slot_allocator): New object allocator.\n\t(file_name_hash_table): Turn to hash_table<string_slot_hasher>.\n\t(file_name_obstack): New obstack.\n\t(canon_file_name): Allocate in obstack and allocator.\n\t(lto_reader_init): Initialize obstack and allocator.\n\t(lto_free_file_name_hash): New function.\n\t* lto-streamer.h (lto_free_file_name_hash): New.\n\t* lto.c (do_whole_program_analysis): Call lto_free_file_name_hash.\n\nFrom-SVN: r277924", "tree": {"sha": "4e7df7e181a2561c419bfaf86691f41d43e95adc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e7df7e181a2561c419bfaf86691f41d43e95adc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c38ee9a2e87ea6d23580c364b3997acfce4a125c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c38ee9a2e87ea6d23580c364b3997acfce4a125c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c38ee9a2e87ea6d23580c364b3997acfce4a125c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c38ee9a2e87ea6d23580c364b3997acfce4a125c/comments", "author": null, "committer": null, "parents": [{"sha": "095f78c62157124ad479a3f98b6995ced090b807", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/095f78c62157124ad479a3f98b6995ced090b807", "html_url": "https://github.com/Rust-GCC/gccrs/commit/095f78c62157124ad479a3f98b6995ced090b807"}], "stats": {"total": 64, "additions": 49, "deletions": 15}, "files": [{"sha": "6fb0facd878c8c5b1cc79737252269c8d654b202", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c38ee9a2e87ea6d23580c364b3997acfce4a125c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c38ee9a2e87ea6d23580c364b3997acfce4a125c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c38ee9a2e87ea6d23580c364b3997acfce4a125c", "patch": "@@ -1,3 +1,15 @@\n+2019-11-06  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto-streamer-in.c: Include alloc-pool.h.\n+\t(freeing_string_slot_hasher): Remove.\n+\t(string_slot_allocator): New object allocator.\n+\t(file_name_hash_table): Turn to hash_table<string_slot_hasher>.\n+\t(file_name_obstack): New obstack.\n+\t(canon_file_name): Allocate in obstack and allocator.\n+\t(lto_reader_init): Initialize obstack and allocator.\n+\t(lto_free_file_name_hash): New function.\n+\t* lto-streamer.h (lto_free_file_name_hash): New.\n+\n 2019-11-07  Feng Xue <fxue@os.amperecomputing.com>\n \n \tPR tree-optimization/89134"}, {"sha": "93ec8be535163fc61e7745d4f989c7e197c623e9", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 28, "deletions": 15, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c38ee9a2e87ea6d23580c364b3997acfce4a125c/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c38ee9a2e87ea6d23580c364b3997acfce4a125c/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=c38ee9a2e87ea6d23580c364b3997acfce4a125c", "patch": "@@ -42,21 +42,18 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cgraph.h\"\n #include \"cfgloop.h\"\n #include \"debug.h\"\n+#include \"alloc-pool.h\"\n \n-\n-struct freeing_string_slot_hasher : string_slot_hasher\n-{\n-  static inline void remove (value_type *);\n-};\n-\n-inline void\n-freeing_string_slot_hasher::remove (value_type *v)\n-{\n-  free (v);\n-}\n+/* Allocator used to hold string slot entries for line map streaming.  */\n+static struct object_allocator<struct string_slot> *string_slot_allocator;\n \n /* The table to hold the file names.  */\n-static hash_table<freeing_string_slot_hasher> *file_name_hash_table;\n+static hash_table<string_slot_hasher> *file_name_hash_table;\n+\n+/* This obstack holds file names used in locators. Line map datastructures\n+   points here and thus it needs to be kept allocated as long as linemaps\n+   exists.  */\n+static struct obstack file_name_obstack;\n \n \n /* Check that tag ACTUAL has one of the given values.  NUM_TAGS is the\n@@ -113,8 +110,8 @@ canon_file_name (const char *string)\n       char *saved_string;\n       struct string_slot *new_slot;\n \n-      saved_string = (char *) xmalloc (len + 1);\n-      new_slot = XCNEW (struct string_slot);\n+      saved_string = XOBNEWVEC (&file_name_obstack, char, len + 1);\n+      new_slot = string_slot_allocator->allocate ();\n       memcpy (saved_string, string, len + 1);\n       new_slot->s = saved_string;\n       new_slot->len = len;\n@@ -1722,7 +1719,23 @@ lto_reader_init (void)\n {\n   lto_streamer_init ();\n   file_name_hash_table\n-    = new hash_table<freeing_string_slot_hasher> (37);\n+    = new hash_table<string_slot_hasher> (37);\n+  string_slot_allocator = new object_allocator <struct string_slot>\n+\t\t\t\t(\"line map file name hash\");\n+  gcc_obstack_init (&file_name_obstack);\n+}\n+\n+/* Free hash table used to stream in location file names.  */\n+\n+void\n+lto_free_file_name_hash (void)\n+{\n+  delete file_name_hash_table;\n+  file_name_hash_table = NULL;\n+  delete string_slot_allocator;\n+  string_slot_allocator = NULL;\n+  /* file_name_obstack must stay allocated since it is referred to by\n+     line map table.  */\n }\n \n "}, {"sha": "067a6660d2f923307205b9d97250b16839aac2ec", "filename": "gcc/lto-streamer.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c38ee9a2e87ea6d23580c364b3997acfce4a125c/gcc%2Flto-streamer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c38ee9a2e87ea6d23580c364b3997acfce4a125c/gcc%2Flto-streamer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer.h?ref=c38ee9a2e87ea6d23580c364b3997acfce4a125c", "patch": "@@ -874,6 +874,7 @@ extern void lto_streamer_hooks_init (void);\n /* In lto-streamer-in.c */\n extern void lto_input_cgraph (struct lto_file_decl_data *, const char *);\n extern void lto_reader_init (void);\n+extern void lto_free_file_name_hash (void);\n extern void lto_input_function_body (struct lto_file_decl_data *,\n \t\t\t\t     struct cgraph_node *,\n \t\t\t\t     const char *);"}, {"sha": "91a8ec1c8c84c1c2d1145e5c774a19e800d2e016", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c38ee9a2e87ea6d23580c364b3997acfce4a125c/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c38ee9a2e87ea6d23580c364b3997acfce4a125c/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=c38ee9a2e87ea6d23580c364b3997acfce4a125c", "patch": "@@ -1,3 +1,7 @@\n+2019-11-07  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* lto.c (do_whole_program_analysis): Call lto_free_file_name_hash.\n+\n 2019-11-02  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* lto-common.c (read_cgraph_and_symbols): Improve -Q reporting."}, {"sha": "9ef70da91a9cdf8288323ad06a04214513685c38", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c38ee9a2e87ea6d23580c364b3997acfce4a125c/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c38ee9a2e87ea6d23580c364b3997acfce4a125c/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=c38ee9a2e87ea6d23580c364b3997acfce4a125c", "patch": "@@ -475,6 +475,10 @@ do_whole_program_analysis (void)\n   /* We are about to launch the final LTRANS phase, stop the WPA timer.  */\n   timevar_pop (TV_WHOPR_WPA);\n \n+  /* We are no longer going to stream in anything.  Free some memory.  */\n+  lto_free_file_name_hash ();\n+\n+\n   timevar_push (TV_WHOPR_PARTITIONING);\n \n   gcc_assert (!dump_file);"}]}