{"sha": "ba6bf284a5a10ba6eba18135c6df05c479aac5ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE2YmYyODRhNWExMGJhNmViYTE4MTM1YzZkZjA1YzQ3OWFhYzVjYQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-04-12T08:31:40Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-04-12T08:31:40Z"}, "message": "rs6000: Enforce quad_address_p in TImode atomic_load/store (PR80382)\n\nWhatever expand expands to should be valid instructions.  The defined\ninstructions here have a quad_memory_operand predicate, which boils\ndown to quad_address_p on the address, so let's test for that instead\nof only disallowing indexed addresses.\n\n\n\t* config/rs6000/sync.md (atomic_load<mode>, atomic_store<mode): Test\n\tfor quad_address_p for TImode, instead of just not indexed_address.\n\nFrom-SVN: r246867", "tree": {"sha": "fd2bdcde16172d9d03e5905abff5869393599a46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd2bdcde16172d9d03e5905abff5869393599a46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba6bf284a5a10ba6eba18135c6df05c479aac5ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba6bf284a5a10ba6eba18135c6df05c479aac5ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba6bf284a5a10ba6eba18135c6df05c479aac5ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba6bf284a5a10ba6eba18135c6df05c479aac5ca/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "350792ffaed9b3506582b471bf133459d7ea64ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/350792ffaed9b3506582b471bf133459d7ea64ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/350792ffaed9b3506582b471bf133459d7ea64ab"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "ba4ae5f7b447daa3a48718c8b3fdac49db20d784", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba6bf284a5a10ba6eba18135c6df05c479aac5ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba6bf284a5a10ba6eba18135c6df05c479aac5ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ba6bf284a5a10ba6eba18135c6df05c479aac5ca", "patch": "@@ -1,3 +1,8 @@\n+2017-04-12  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/sync.md (atomic_load<mode>, atomic_store<mode): Test\n+\tfor quad_address_p for TImode, instead of just not indexed_address.\n+\n 2017-04-12  Richard Biener  <rguenther@suse.de>\n \tBernd Edlinger  <bernd.edlinger@hotmail.de>\n "}, {"sha": "2a1828e3e7ae9053a974461670f3a0f449d1e305", "filename": "gcc/config/rs6000/sync.md", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba6bf284a5a10ba6eba18135c6df05c479aac5ca/gcc%2Fconfig%2Frs6000%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba6bf284a5a10ba6eba18135c6df05c479aac5ca/gcc%2Fconfig%2Frs6000%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsync.md?ref=ba6bf284a5a10ba6eba18135c6df05c479aac5ca", "patch": "@@ -157,8 +157,7 @@\n       rtx op1 = operands[1];\n       rtx pti_reg = gen_reg_rtx (PTImode);\n \n-      // Can't have indexed address for 'lq'\n-      if (indexed_address (XEXP (op1, 0), TImode))\n+      if (!quad_address_p (XEXP (op1, 0), TImode, false))\n \t{\n \t  rtx old_addr = XEXP (op1, 0);\n \t  rtx new_addr = force_reg (Pmode, old_addr);\n@@ -231,8 +230,7 @@\n       rtx op1 = operands[1];\n       rtx pti_reg = gen_reg_rtx (PTImode);\n \n-      // Can't have indexed address for 'stq'\n-      if (indexed_address (XEXP (op0, 0), TImode))\n+      if (!quad_address_p (XEXP (op0, 0), TImode, false))\n \t{\n \t  rtx old_addr = XEXP (op0, 0);\n \t  rtx new_addr = force_reg (Pmode, old_addr);"}]}