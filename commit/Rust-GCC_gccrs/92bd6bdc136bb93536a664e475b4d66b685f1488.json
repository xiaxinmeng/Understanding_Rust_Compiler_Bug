{"sha": "92bd6bdc136bb93536a664e475b4d66b685f1488", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJiZDZiZGMxMzZiYjkzNTM2YTY2NGU0NzViNGQ2NmI2ODVmMTQ4OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-09-29T22:24:38Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-09-29T22:24:38Z"}, "message": "(struct option_map): Sort in alphabetical order.\n\n(translate_options): Ignore option once an error occurs.\nFix error with reversed 'a' and 'o'.\nGive error if specified abbreviation is unambiguous.\n\nFrom-SVN: r8165", "tree": {"sha": "a3ca6b0c5b53af8ab330140862fc91106396a26a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3ca6b0c5b53af8ab330140862fc91106396a26a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92bd6bdc136bb93536a664e475b4d66b685f1488", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92bd6bdc136bb93536a664e475b4d66b685f1488", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92bd6bdc136bb93536a664e475b4d66b685f1488", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92bd6bdc136bb93536a664e475b4d66b685f1488/comments", "author": null, "committer": null, "parents": [{"sha": "7ee055f4ae2b78d946b74f6aa96518da00ee2319", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ee055f4ae2b78d946b74f6aa96518da00ee2319", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ee055f4ae2b78d946b74f6aa96518da00ee2319"}], "stats": {"total": 150, "additions": 87, "deletions": 63}, "files": [{"sha": "99bca41314327064a71af59fd6dc98a276a3e54a", "filename": "gcc/gcc.c", "status": "modified", "additions": 87, "deletions": 63, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92bd6bdc136bb93536a664e475b4d66b685f1488/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92bd6bdc136bb93536a664e475b4d66b685f1488/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=92bd6bdc136bb93536a664e475b4d66b685f1488", "patch": "@@ -746,7 +746,7 @@ struct option_map\n      a => argument required.\n      o => argument optional.\n      j => join argument to equivalent, making one word.\n-     * => allow other text after NAME as an argument.  */\n+     * => require other text after NAME as an argument.  */\n   char *arg_info;\n };\n \n@@ -755,76 +755,74 @@ struct option_map\n \n struct option_map option_map[] =\n  {\n-   {\"--profile-blocks\", \"-a\", 0},\n-   {\"--target\", \"-b\", \"a\"},\n+   {\"--all-warnings\", \"-Wall\", 0},\n+   {\"--ansi\", \"-ansi\", 0},\n+   {\"--assemble\", \"-S\", 0},\n+   {\"--assert\", \"-A\", \"a\"},\n+   {\"--comments\", \"-C\", 0},\n    {\"--compile\", \"-c\", 0},\n+   {\"--debug\", \"-g\", \"oj\"},\n+   {\"--define-macro\", \"-D\", \"a\"},\n+   {\"--dependencies\", \"-M\", 0},\n    {\"--dump\", \"-d\", \"a\"},\n+   {\"--dumpbase\", \"-dumpbase\", \"a\"},\n    {\"--entry\", \"-e\", 0},\n-   {\"--debug\", \"-g\", \"oj\"},\n-   {\"--include\", \"-include\", \"a\"},\n+   {\"--extra-warnings\", \"-W\", 0},\n+   {\"--for-assembler\", \"-Wa\", \"a\"},\n+   {\"--for-linker\", \"-Xlinker\", \"a\"},\n+   {\"--force-link\", \"-u\", \"a\"},\n    {\"--imacros\", \"-imacros\", \"a\"},\n-   {\"--include-prefix\", \"-iprefix\", \"a\"},\n+   {\"--include\", \"-include\", \"a\"},\n+   {\"--include-barrier\", \"-I-\", 0},\n+   {\"--include-directory\", \"-I\", \"a\"},\n    {\"--include-directory-after\", \"-idirafter\", \"a\"},\n+   {\"--include-prefix\", \"-iprefix\", \"a\"},\n    {\"--include-with-prefix\", \"-iwithprefix\", \"a\"},\n    {\"--include-with-prefix-before\", \"-iwithprefixbefore\", \"a\"},\n    {\"--include-with-prefix-after\", \"-iwithprefix\", \"a\"},\n-   {\"--machine-\", \"-m\", \"*j\"},\n+   {\"--language\", \"-x\", \"a\"},\n+   {\"--library-directory\", \"-L\", \"a\"},\n    {\"--machine\", \"-m\", \"aj\"},\n+   {\"--machine-\", \"-m\", \"*j\"},\n+   {\"--no-line-commands\", \"-P\", 0},\n+   {\"--no-precompiled-includes\", \"-noprecomp\", 0},\n    {\"--no-standard-includes\", \"-nostdinc\", 0},\n    {\"--no-standard-libraries\", \"-nostdlib\", 0},\n-   {\"--no-precompiled-includes\", \"-noprecomp\", 0},\n-   {\"--output\", \"-o\", \"a\"},\n-   {\"--profile\", \"-p\", 0},\n-   {\"--quiet\", \"-q\", 0},\n-   {\"--silent\", \"-q\", 0},\n-   {\"--force-link\", \"-u\", \"a\"},\n-   {\"--verbose\", \"-v\", 0},\n-   {\"--version\", \"-dumpversion\", 0},\n    {\"--no-warnings\", \"-w\", 0},\n-   {\"--language\", \"-x\", \"a\"},\n-\n-   {\"--assert\", \"-A\", \"a\"},\n-   {\"--prefix\", \"-B\", \"a\"},\n-   {\"--comments\", \"-C\", 0},\n-   {\"--define-macro\", \"-D\", \"a\"},\n-   {\"--preprocess\", \"-E\", 0},\n-   {\"--trace-includes\", \"-H\", 0},\n-   {\"--include-directory\", \"-I\", \"a\"},\n-   {\"--include-barrier\", \"-I-\", 0},\n-   {\"--library-directory\", \"-L\", \"a\"},\n-   {\"--dependencies\", \"-M\", 0},\n-   {\"--user-dependencies\", \"-MM\", 0},\n-   {\"--write-dependencies\", \"-MD\", 0},\n-   {\"--write-user-dependencies\", \"-MMD\", 0},\n-   {\"--print-missing-file-dependencies\", \"-MG\", 0},\n    {\"--optimize\", \"-O\", \"oj\"},\n-   {\"--no-line-commands\", \"-P\", 0},\n-   {\"--assemble\", \"-S\", 0},\n-   {\"--undefine-macro\", \"-U\", \"a\"},\n-   {\"--use-version\", \"-V\", \"a\"},\n-   {\"--for-assembler\", \"-Wa\", \"a\"},\n-   {\"--extra-warnings\", \"-W\", 0},\n-   {\"--all-warnings\", \"-Wall\", 0},\n-   {\"--warn-\", \"-W\", \"*j\"},\n-   {\"--for-linker\", \"-Xlinker\", \"a\"},\n-\n-   {\"--ansi\", \"-ansi\", 0},\n-   {\"--traditional\", \"-traditional\", 0},\n-   {\"--traditional-cpp\", \"-traditional-cpp\", 0},\n-   {\"--trigraphs\", \"-trigraphs\", 0},\n-   {\"--pipe\", \"-pipe\", 0},\n-   {\"--dumpbase\", \"-dumpbase\", \"a\"},\n+   {\"--output\", \"-o\", \"a\"},\n    {\"--pedantic\", \"-pedantic\", 0},\n    {\"--pedantic-errors\", \"-pedantic-errors\", 0},\n-   {\"--save-temps\", \"-save-temps\", 0},\n-   {\"--print-libgcc-file-name\", \"-print-libgcc-file-name\", 0},\n+   {\"--pipe\", \"-pipe\", 0},\n+   {\"--prefix\", \"-B\", \"a\"},\n+   {\"--preprocess\", \"-E\", 0},\n    {\"--print-file-name\", \"-print-file-name=\", \"aj\"},\n-   {\"--print-prog-name\", \"-print-prog-name=\", \"aj\"},\n+   {\"--print-libgcc-file-name\", \"-print-libgcc-file-name\", 0},\n+   {\"--print-missing-file-dependencies\", \"-MG\", 0},\n    {\"--print-multi-lib\", \"-print-multi-lib\", 0},\n    {\"--print-multi-directory\", \"-print-multi-directory\", 0},\n-   {\"--static\", \"-static\", 0},\n+   {\"--print-prog-name\", \"-print-prog-name=\", \"aj\"},\n+   {\"--profile\", \"-p\", 0},\n+   {\"--profile-blocks\", \"-a\", 0},\n+   {\"--quiet\", \"-q\", 0},\n+   {\"--save-temps\", \"-save-temps\", 0},\n    {\"--shared\", \"-shared\", 0},\n+   {\"--silent\", \"-q\", 0},\n+   {\"--static\", \"-static\", 0},\n    {\"--symbolic\", \"-symbolic\", 0},\n+   {\"--target\", \"-b\", \"a\"},\n+   {\"--trace-includes\", \"-H\", 0},\n+   {\"--traditional\", \"-traditional\", 0},\n+   {\"--traditional-cpp\", \"-traditional-cpp\", 0},\n+   {\"--trigraphs\", \"-trigraphs\", 0},\n+   {\"--undefine-macro\", \"-U\", \"a\"},\n+   {\"--use-version\", \"-V\", \"a\"},\n+   {\"--user-dependencies\", \"-MM\", 0},\n+   {\"--verbose\", \"-v\", 0},\n+   {\"--version\", \"-dumpversion\", 0},\n+   {\"--warn-\", \"-W\", \"*j\"},\n+   {\"--write-dependencies\", \"-MD\", 0},\n+   {\"--write-user-dependencies\", \"-MMD\", 0},\n    {\"--\", \"-f\", \"*j\"}\n  };\n \f\n@@ -837,7 +835,7 @@ translate_options (argcp, argvp)\n      int *argcp;\n      char ***argvp;\n {\n-  int i, j;\n+  int i, j, k;\n   int argc = *argcp;\n   char **argv = *argvp;\n   char **newv = (char **) xmalloc ((argc + 2) * 2 * sizeof (char *));\n@@ -855,49 +853,74 @@ translate_options (argcp, argvp)\n \t  for (j = 0; j < sizeof (option_map) / sizeof (option_map[0]); j++)\n \t    {\n \t      int optlen = strlen (option_map[j].name);\n-\t      int complen = strlen (argv[i]);\n+\t      int arglen = strlen (argv[i]);\n+\t      int complen = arglen > optlen ? optlen : arglen;\n \t      char *arginfo = option_map[j].arg_info;\n \n \t      if (arginfo == 0)\n \t\targinfo = \"\";\n-\t      if (complen > optlen)\n-\t\tcomplen = optlen;\n+\n \t      if (!strncmp (argv[i], option_map[j].name, complen))\n \t\t{\n-\t\t  int extra = strlen (argv[i]) > optlen;\n \t\t  char *arg = 0;\n \n-\t\t  if (extra)\n+\t\t  if (arglen < optlen)\n+\t\t    {\n+\t\t      for (k = j + 1;\n+\t\t\t   k < sizeof (option_map) / sizeof (option_map[0]);\n+\t\t\t   k++)\n+\t\t\tif (strlen (option_map[k].name) >= arglen\n+\t\t\t    && !strncmp (argv[i], option_map[k].name, arglen))\n+\t\t\t  {\n+\t\t\t    error (\"Ambiguous abbreviation %s\", argv[i]);\n+\t\t\t    break;\n+\t\t\t  }\n+\n+\t\t      if (k != sizeof (option_map) / sizeof (option_map[0]))\n+\t\t\tbreak;\n+\t\t    }\n+\n+\t\t  if (arglen > optlen)\n \t\t    {\n \t\t      /* If the option has an argument, accept that.  */\n \t\t      if (argv[i][optlen] == '=')\n \t\t\targ = argv[i] + optlen + 1;\n-\t\t      /* If this mapping allows extra text at end of name,\n+\n+\t\t      /* If this mapping requires extra text at end of name,\n \t\t\t accept that as \"argument\".  */\n \t\t      else if (index (arginfo, '*') != 0)\n \t\t\targ = argv[i] + optlen;\n+\n \t\t      /* Otherwise, extra text at end means mismatch.\n \t\t\t Try other mappings.  */\n \t\t      else\n \t\t\tcontinue;\n \t\t    }\n+\n \t\t  else if (index (arginfo, '*') != 0)\n-\t\t    error (\"Incomplete `%s' option\", option_map[j].name);\n+\t\t    {\n+\t\t      error (\"Incomplete `%s' option\", option_map[j].name);\n+\t\t      break;\n+\t\t    }\n \n \t\t  /* Handle arguments.  */\n-\t\t  if (index (arginfo, 'o') != 0)\n+\t\t  if (index (arginfo, 'a') != 0)\n \t\t    {\n \t\t      if (arg == 0)\n \t\t\t{\n \t\t\t  if (i + 1 == argc)\n-\t\t\t    error (\"Missing argument to `%s' option\",\n-\t\t\t\t   option_map[j].name);\n+\t\t\t    {\n+\t\t\t      error (\"Missing argument to `%s' option\",\n+\t\t\t\t     option_map[j].name);\n+\t\t\t      break;\n+\t\t\t    }\n+\n \t\t\t  arg = argv[++i];\n \t\t\t}\n \t\t    }\n \t\t  else if (index (arginfo, '*') != 0)\n \t\t    ;\n-\t\t  else if (index (arginfo, 'a') == 0)\n+\t\t  else if (index (arginfo, 'o') == 0)\n \t\t    {\n \t\t      if (arg != 0)\n \t\t\terror (\"Extraneous argument to `%s' option\",\n@@ -922,6 +945,7 @@ translate_options (argcp, argvp)\n \t    }\n \t  i++;\n \t}\n+\n       /* Handle old-fashioned options--just copy them through,\n \t with their arguments.  */\n       else if (argv[i][0] == '-')"}]}