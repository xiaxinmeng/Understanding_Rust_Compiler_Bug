{"sha": "af37f0dda914774e24ff384719f136795f76f2f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWYzN2YwZGRhOTE0Nzc0ZTI0ZmYzODQ3MTlmMTM2Nzk1Zjc2ZjJmNA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-08-29T01:42:28Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-08-29T01:42:28Z"}, "message": "jump.c (jump_optimize_1): Do not delete assignments to internal_arg_pointer.\n\n\n        * jump.c (jump_optimize_1): Do not delete assignments to\n        internal_arg_pointer.\n        * cse.c (delete_trivially_dead_insns): Always consider a set of\n        the internal_arg_pointer live.\n\nFrom-SVN: r28957", "tree": {"sha": "730b2ae81ede9937fb2ae1cc954b91b39fe04a0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/730b2ae81ede9937fb2ae1cc954b91b39fe04a0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af37f0dda914774e24ff384719f136795f76f2f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af37f0dda914774e24ff384719f136795f76f2f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af37f0dda914774e24ff384719f136795f76f2f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af37f0dda914774e24ff384719f136795f76f2f4/comments", "author": null, "committer": null, "parents": [{"sha": "27778b739c3893b3aa6295e21c698aad2f7b5934", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27778b739c3893b3aa6295e21c698aad2f7b5934", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27778b739c3893b3aa6295e21c698aad2f7b5934"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "07176b6a8e1848a29fe71f4a35b2ddce3f0413f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af37f0dda914774e24ff384719f136795f76f2f4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af37f0dda914774e24ff384719f136795f76f2f4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=af37f0dda914774e24ff384719f136795f76f2f4", "patch": "@@ -1,3 +1,10 @@\n+Sat Aug 28 19:36:05 1999  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* jump.c (jump_optimize_1): Do not delete assignments to \n+\tinternal_arg_pointer.\n+\t* cse.c (delete_trivially_dead_insns): Always consider a set of\n+\tthe internal_arg_pointer live.\n+\n Sat Aug 28 16:24:31 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* flow.c (flow_delete_insn_chain): Rename from delete_insn_chain."}, {"sha": "8197e42d5ea5a2d660aefc0ee3cc6a9d50efb5d4", "filename": "gcc/cse.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af37f0dda914774e24ff384719f136795f76f2f4/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af37f0dda914774e24ff384719f136795f76f2f4/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=af37f0dda914774e24ff384719f136795f76f2f4", "patch": "@@ -9215,7 +9215,13 @@ delete_trivially_dead_insns (insns, nreg)\n \t\telse if (GET_CODE (SET_DEST (elt)) != REG\n \t\t\t || REGNO (SET_DEST (elt)) < FIRST_PSEUDO_REGISTER\n \t\t\t || counts[REGNO (SET_DEST (elt))] != 0\n-\t\t\t || side_effects_p (SET_SRC (elt)))\n+\t\t\t || side_effects_p (SET_SRC (elt))\n+\t\t\t /* An ADDRESSOF expression can turn into a use of the\n+\t\t\t    internal arg pointer, so always consider the\n+\t\t\t    internal arg pointer live.  If it is truly dead,\n+\t\t\t    flow will delete the initializing insn.  */\n+\t\t\t || (SET_DEST (elt)\n+\t\t\t     == current_function_internal_arg_pointer))\n \t\t  live_insn = 1;\n \t      }\n \t    else if (GET_CODE (elt) != CLOBBER && GET_CODE (elt) != USE)"}, {"sha": "c5e27801bf28d0631b809cdcc18f95b0e895b869", "filename": "gcc/jump.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af37f0dda914774e24ff384719f136795f76f2f4/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af37f0dda914774e24ff384719f136795f76f2f4/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=af37f0dda914774e24ff384719f136795f76f2f4", "patch": "@@ -290,7 +290,12 @@ jump_optimize_1 (f, cross_jump, noop_moves, after_regscan, mark_labels_only)\n \t       might arrange to use that reg for real.  */\t       \n \t    && REGNO_LAST_NOTE_UID (REGNO (SET_DEST (set))) == INSN_UID (insn)\n \t    && ! side_effects_p (SET_SRC (set))\n-\t    && ! find_reg_note (insn, REG_RETVAL, 0))\n+\t    && ! find_reg_note (insn, REG_RETVAL, 0)\n+\t    /* An ADDRESSOF expression can turn into a use of the internal arg\n+\t       pointer, so do not delete the initialization of the internal\n+\t       arg pointer yet.  If it is truly dead, flow will delete the\n+\t       initializing insn.  */\n+\t    && SET_DEST (set) != current_function_internal_arg_pointer)\n \t  delete_insn (insn);\n       }\n "}]}