{"sha": "145be5efaf5674a7d25c723dc5684392a6276834", "node_id": "C_kwDOANBUbNoAKDE0NWJlNWVmYWY1Njc0YTdkMjVjNzIzZGM1Njg0MzkyYTYyNzY4MzQ", "commit": {"author": {"name": "Prathamesh Kulkarni", "email": "prathamesh.kulkarni@linaro.org", "date": "2021-11-11T09:07:22Z"}, "committer": {"name": "Prathamesh Kulkarni", "email": "prathamesh.kulkarni@linaro.org", "date": "2021-11-11T09:10:21Z"}, "message": "[aarch64] PR102376 - Emit better diagnostic for arch extensions in target attr.\n\ngcc/ChangeLog:\n\tPR target/102376\n\t* config/aarch64/aarch64.c (aarch64_process_target_attr): Check if\n\ttoken is arch extension without leading '+' and emit appropriate\n\tdiagnostic for the same.\n\ngcc/testsuite/ChangeLog:\n\tPR target/102376\n\t* gcc.target/aarch64/pr102376.c: New test.", "tree": {"sha": "7bd0f9dd52b664121810e95bae0b840daf74493e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bd0f9dd52b664121810e95bae0b840daf74493e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/145be5efaf5674a7d25c723dc5684392a6276834", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/145be5efaf5674a7d25c723dc5684392a6276834", "html_url": "https://github.com/Rust-GCC/gccrs/commit/145be5efaf5674a7d25c723dc5684392a6276834", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/145be5efaf5674a7d25c723dc5684392a6276834/comments", "author": null, "committer": null, "parents": [{"sha": "48d7327f2aaf65e224f5f0793a65b950297f6c7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48d7327f2aaf65e224f5f0793a65b950297f6c7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48d7327f2aaf65e224f5f0793a65b950297f6c7f"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "a8f53b85d9259784ed53c5c922f04bf15a01edbb", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/145be5efaf5674a7d25c723dc5684392a6276834/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/145be5efaf5674a7d25c723dc5684392a6276834/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=145be5efaf5674a7d25c723dc5684392a6276834", "patch": "@@ -17977,7 +17977,18 @@ aarch64_process_target_attr (tree args)\n       num_attrs++;\n       if (!aarch64_process_one_target_attr (token))\n \t{\n-\t  error (\"pragma or attribute %<target(\\\"%s\\\")%> is not valid\", token);\n+\t  /* Check if token is possibly an arch extension without\n+\t     leading '+'.  */\n+\t  uint64_t isa_temp = 0;\n+\t  auto with_plus = std::string (\"+\") + token;\n+\t  enum aarch64_parse_opt_result ext_res\n+\t    = aarch64_parse_extension (with_plus.c_str (), &isa_temp, nullptr);\n+\n+\t  if (ext_res == AARCH64_PARSE_OK)\n+\t    error (\"arch extension %<%s%> should be prefixed by %<+%>\",\n+\t\t   token);\n+\t  else\n+\t    error (\"pragma or attribute %<target(\\\"%s\\\")%> is not valid\", token);\n \t  return false;\n \t}\n "}, {"sha": "fc830ad47423c350c7866e5902878290cf26e574", "filename": "gcc/testsuite/gcc.target/aarch64/pr102376.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/145be5efaf5674a7d25c723dc5684392a6276834/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr102376.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/145be5efaf5674a7d25c723dc5684392a6276834/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr102376.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr102376.c?ref=145be5efaf5674a7d25c723dc5684392a6276834", "patch": "@@ -0,0 +1,3 @@\n+/* { dg-do compile } */\n+\n+void calculate(void) __attribute__ ((__target__ (\"sve\"))); /* { dg-error \"arch extension 'sve' should be prefixed by '\\\\+'\" } */"}]}