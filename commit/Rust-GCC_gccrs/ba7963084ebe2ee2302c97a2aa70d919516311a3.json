{"sha": "ba7963084ebe2ee2302c97a2aa70d919516311a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE3OTYzMDg0ZWJlMmVlMjMwMmM5N2EyYWE3MGQ5MTk1MTYzMTFhMw==", "commit": {"author": {"name": "Douglas Gregor", "email": "doug.gregor@gmail.com", "date": "2007-12-04T21:12:41Z"}, "committer": {"name": "Doug Gregor", "email": "dgregor@gcc.gnu.org", "date": "2007-12-04T21:12:41Z"}, "message": "re PR c++/34101 (ICE with argument deduction of variadic template function)\n\n2007-12-04  Douglas Gregor  <doug.gregor@gmail.com>\n\n       PR c++/34101\n       * name-lookup.c (arg_assoc_template_arg): Recurse on argument\n       packs.\n       (arg_assoc_type): We don't need to handle TYPE_ARGUMENT_PACK here,\n       since arg_assoc_template_arg will deal with them (better).\n\n2007-12-04  Douglas Gregor  <doug.gregor@gmail.com>\n\n       PR c++/34101\n       * g++.dg/cpp0x/variadic-ttp.C: New.\n\nFrom-SVN: r130608", "tree": {"sha": "ceff35d1296e28906021887227416b270f31a7f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ceff35d1296e28906021887227416b270f31a7f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba7963084ebe2ee2302c97a2aa70d919516311a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba7963084ebe2ee2302c97a2aa70d919516311a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba7963084ebe2ee2302c97a2aa70d919516311a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba7963084ebe2ee2302c97a2aa70d919516311a3/comments", "author": {"login": "DougGregor", "id": 989428, "node_id": "MDQ6VXNlcjk4OTQyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/989428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DougGregor", "html_url": "https://github.com/DougGregor", "followers_url": "https://api.github.com/users/DougGregor/followers", "following_url": "https://api.github.com/users/DougGregor/following{/other_user}", "gists_url": "https://api.github.com/users/DougGregor/gists{/gist_id}", "starred_url": "https://api.github.com/users/DougGregor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DougGregor/subscriptions", "organizations_url": "https://api.github.com/users/DougGregor/orgs", "repos_url": "https://api.github.com/users/DougGregor/repos", "events_url": "https://api.github.com/users/DougGregor/events{/privacy}", "received_events_url": "https://api.github.com/users/DougGregor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3d57f0f08572758a796bffe8776703c9cf16ea75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d57f0f08572758a796bffe8776703c9cf16ea75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d57f0f08572758a796bffe8776703c9cf16ea75"}], "stats": {"total": 45, "additions": 36, "deletions": 9}, "files": [{"sha": "0ade8cded77c6114729674ab25c6e5fda80084cc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba7963084ebe2ee2302c97a2aa70d919516311a3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba7963084ebe2ee2302c97a2aa70d919516311a3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ba7963084ebe2ee2302c97a2aa70d919516311a3", "patch": "@@ -1,3 +1,11 @@\n+2007-12-04  Douglas Gregor  <doug.gregor@gmail.com>\n+\n+       PR c++/34101\n+       * name-lookup.c (arg_assoc_template_arg): Recurse on argument\n+       packs.\n+       (arg_assoc_type): We don't need to handle TYPE_ARGUMENT_PACK here,\n+       since arg_assoc_template_arg will deal with them (better).\n+\n 2007-12-04  Douglas Gregor  <doug.gregor@gmail.com>\n \n        PR c++/33509"}, {"sha": "98c866f3a19ed18d04fa6f74a79c5777afa5e038", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba7963084ebe2ee2302c97a2aa70d919516311a3/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba7963084ebe2ee2302c97a2aa70d919516311a3/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=ba7963084ebe2ee2302c97a2aa70d919516311a3", "patch": "@@ -4477,6 +4477,17 @@ arg_assoc_template_arg (struct arg_lookup *k, tree arg)\n       else\n \treturn arg_assoc_class (k, ctx);\n     }\n+  /* It's an argument pack; handle it recursively.  */\n+  else if (ARGUMENT_PACK_P (arg))\n+    {\n+      tree args = ARGUMENT_PACK_ARGS (arg);\n+      int i, len = TREE_VEC_LENGTH (args);\n+      for (i = 0; i < len; ++i) \n+\tif (arg_assoc_template_arg (k, TREE_VEC_ELT (args, i)))\n+\t  return true;\n+\n+      return false;\n+    }\n   /* It's not a template template argument, but it is a type template\n      argument.  */\n   else if (TYPE_P (arg))\n@@ -4612,15 +4623,6 @@ arg_assoc_type (struct arg_lookup *k, tree type)\n       return false;\n     case TYPE_PACK_EXPANSION:\n       return arg_assoc_type (k, PACK_EXPANSION_PATTERN (type));\n-    case TYPE_ARGUMENT_PACK:\n-      {\n-        tree args = ARGUMENT_PACK_ARGS (type);\n-        int i, len = TREE_VEC_LENGTH (args);\n-        for (i = 0; i < len; i++)\n-          if (arg_assoc_type (k, TREE_VEC_ELT (args, i)))\n-            return true;\n-      }\n-      break;\n \n     default:\n       gcc_unreachable ();"}, {"sha": "5407e15f6456a857937fafc797f3bc9b9c63e70a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba7963084ebe2ee2302c97a2aa70d919516311a3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba7963084ebe2ee2302c97a2aa70d919516311a3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ba7963084ebe2ee2302c97a2aa70d919516311a3", "patch": "@@ -1,3 +1,8 @@\n+2007-12-04  Douglas Gregor  <doug.gregor@gmail.com>\n+\n+       PR c++/34101\n+       * g++.dg/cpp0x/variadic-ttp.C: New.\n+\n 2007-12-04  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \t\n \t* gcc.dg/parse-decl-after-if.c: New."}, {"sha": "41f1c1db43d5e348f571b40cde9910e70812c6a7", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic-ttp.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba7963084ebe2ee2302c97a2aa70d919516311a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ttp.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba7963084ebe2ee2302c97a2aa70d919516311a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ttp.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ttp.C?ref=ba7963084ebe2ee2302c97a2aa70d919516311a3", "patch": "@@ -0,0 +1,12 @@\n+// { dg-options -std=c++0x }\n+// PR c++/34101\n+template<typename> struct A {};\n+\n+template<template<typename> class...> struct B {};\n+\n+template<template<typename> class T> void foo(const B<T>&);\n+\n+void bar()\n+{\n+  foo(B<A>());\n+}"}]}