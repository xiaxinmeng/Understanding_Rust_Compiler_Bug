{"sha": "51970b3e3331087ad597ccd3c5df9f788e9fe3e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE5NzBiM2UzMzMxMDg3YWQ1OTdjY2QzYzVkZjlmNzg4ZTlmZTNlNQ==", "commit": {"author": {"name": "Fabien Ch\u00eane", "email": "fabien@gcc.gnu.org", "date": "2014-04-09T19:51:17Z"}, "committer": {"name": "Fabien Ch\u00eane", "email": "fabien@gcc.gnu.org", "date": "2014-04-09T19:51:17Z"}, "message": "pt.c (check_template_variable): Check for the return of pedwarn before emitting a note.\n\n2014-04-09  Fabien Ch\u00eane  <fabien@gcc.gnu.org>\n\n\t* pt.c (check_template_variable): Check for the return of pedwarn\n\tbefore emitting a note.\n\t* parser.c (cp_parser_lambda_introducer): Likewise.\n\nFrom-SVN: r209252", "tree": {"sha": "4185d01e85163dfe4b0e683025b0a4d76d49d029", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4185d01e85163dfe4b0e683025b0a4d76d49d029"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51970b3e3331087ad597ccd3c5df9f788e9fe3e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51970b3e3331087ad597ccd3c5df9f788e9fe3e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51970b3e3331087ad597ccd3c5df9f788e9fe3e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51970b3e3331087ad597ccd3c5df9f788e9fe3e5/comments", "author": null, "committer": null, "parents": [{"sha": "dbe1eced08e1d0bf5a8e3c8b45410110687a6fe6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbe1eced08e1d0bf5a8e3c8b45410110687a6fe6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbe1eced08e1d0bf5a8e3c8b45410110687a6fe6"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "3c09daa3f6490625c6aafd46a674d41b4295b34a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51970b3e3331087ad597ccd3c5df9f788e9fe3e5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51970b3e3331087ad597ccd3c5df9f788e9fe3e5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=51970b3e3331087ad597ccd3c5df9f788e9fe3e5", "patch": "@@ -1,3 +1,9 @@\n+2014-04-09  Fabien Ch\u00eane  <fabien@gcc.gnu.org>\n+\n+\t* pt.c (check_template_variable): Check for the return of pedwarn\n+\tbefore emitting a note.\n+\t* parser.c (cp_parser_lambda_introducer): Likewise.\n+\n 2014-04-08  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/59115"}, {"sha": "f386eed275d9fe1e375968a1e24d04af5533b5ad", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51970b3e3331087ad597ccd3c5df9f788e9fe3e5/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51970b3e3331087ad597ccd3c5df9f788e9fe3e5/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=51970b3e3331087ad597ccd3c5df9f788e9fe3e5", "patch": "@@ -8961,10 +8961,10 @@ cp_parser_lambda_introducer (cp_parser* parser, tree lambda_expr)\n \t  if (VAR_P (capture_init_expr)\n \t      && decl_storage_duration (capture_init_expr) != dk_auto)\n \t    {\n-\t      pedwarn (capture_token->location, 0, \"capture of variable \"\n-\t\t       \"%qD with non-automatic storage duration\",\n-\t\t       capture_init_expr);\n-\t      inform (0, \"%q+#D declared here\", capture_init_expr);\n+\t      if (pedwarn (capture_token->location, 0, \"capture of variable \"\n+\t\t\t   \"%qD with non-automatic storage duration\",\n+\t\t\t   capture_init_expr))\n+\t\tinform (0, \"%q+#D declared here\", capture_init_expr);\n \t      continue;\n \t    }\n "}, {"sha": "318c32507ef87d0893a03bc5e72469b071583d54", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51970b3e3331087ad597ccd3c5df9f788e9fe3e5/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51970b3e3331087ad597ccd3c5df9f788e9fe3e5/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=51970b3e3331087ad597ccd3c5df9f788e9fe3e5", "patch": "@@ -2304,10 +2304,10 @@ check_template_variable (tree decl)\n \t       \"%qD is not a static data member of a class template\", decl);\n   else if (template_header_count > wanted)\n     {\n-      pedwarn (DECL_SOURCE_LOCATION (decl), 0,\n-\t       \"too many template headers for %D (should be %d)\",\n-\t       decl, wanted);\n-      if (CLASSTYPE_TEMPLATE_SPECIALIZATION (ctx))\n+      bool warned = pedwarn (DECL_SOURCE_LOCATION (decl), 0,\n+\t\t\t     \"too many template headers for %D (should be %d)\",\n+\t\t\t     decl, wanted);\n+      if (warned && CLASSTYPE_TEMPLATE_SPECIALIZATION (ctx))\n \tinform (DECL_SOURCE_LOCATION (decl),\n \t\t\"members of an explicitly specialized class are defined \"\n \t\t\"without a template header\");"}]}