{"sha": "603b4064ce36442e6dca20f115efded1c079fe84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAzYjQwNjRjZTM2NDQyZTZkY2EyMGYxMTVlZmRlZDFjMDc5ZmU4NA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-15T02:21:06Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-06-15T02:21:06Z"}, "message": "(main): Don't turn off auto_export because of -g.\n\n(main): Ignore the argument to -o.\n(main): Place o_file after an initial .o (like crt0.o).\nIf we have LD_INIT_SWITCH, use init and fini functions for\nexecutables, too.  Specify the unique function names.\n(write_c_file_stat): Fix the case of destructors but no constructors.\nDon't include the generic-named functions for executables.\n(write_c_file): If we have LD_INIT_SWITCH, always use write_c_file_stat.\n(main): Also add _GLOBAL__D? to export list.\n\nFrom-SVN: r9956", "tree": {"sha": "6a01f9d1e2a430d56e4201ca85eea66749383b2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a01f9d1e2a430d56e4201ca85eea66749383b2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/603b4064ce36442e6dca20f115efded1c079fe84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/603b4064ce36442e6dca20f115efded1c079fe84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/603b4064ce36442e6dca20f115efded1c079fe84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/603b4064ce36442e6dca20f115efded1c079fe84/comments", "author": null, "committer": null, "parents": [{"sha": "52f59d233045041f80f23ade310ea4671bf50358", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52f59d233045041f80f23ade310ea4671bf50358", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52f59d233045041f80f23ade310ea4671bf50358"}], "stats": {"total": 66, "additions": 40, "deletions": 26}, "files": [{"sha": "fe22b836dc63a5ce5a5b397cd16908925f07114d", "filename": "gcc/collect2.c", "status": "modified", "additions": 40, "deletions": 26, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603b4064ce36442e6dca20f115efded1c079fe84/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603b4064ce36442e6dca20f115efded1c079fe84/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=603b4064ce36442e6dca20f115efded1c079fe84", "patch": "@@ -1240,8 +1240,9 @@ main (argc, argv)\n \n #ifdef COLLECT_EXPORT_LIST\n \t    case 'b':\n-\t      if (!strncmp (arg, \"-bE:\", 4)\n-\t\t  || !strncmp (arg, \"-bexport:\", 9))\n+\t      if ((!strncmp (arg, \"-bE:\", 4)\n+\t\t   || !strncmp (arg, \"-bexport:\", 9))\n+\t\t  && strcmp (arg, \"-bexport:/usr/lib/libg.exp\"))\n \t\tauto_export = 0;\n \t      break;\n #endif\n@@ -1258,7 +1259,10 @@ main (argc, argv)\n \t      break;\n \n \t    case 'o':\n-\t      output_file = (arg[2] == '\\0') ? argv[1] : &arg[2];\n+\t      if (arg[2] == '\\0')\n+\t\toutput_file = *ld1++ = *ld2++ = *++argv;\n+\t      else\n+\t\toutput_file = &arg[2];\n \t      break;\n \n \t    case 'r':\n@@ -1289,10 +1293,15 @@ main (argc, argv)\n \t  if (first_file)\n \t    {\n \t      first_file = 0;\n-\t      /* place o_file BEFORE this argument! */\n-\t      ld2--;\n-\t      *ld2++ = o_file;\n-\t      *ld2++ = arg;\n+\t      if (p[1] == 'o')\n+\t\t*ld2++ = o_file;\n+\t      else\n+\t\t{\n+\t\t  /* place o_file BEFORE this argument! */\n+\t\t  ld2--;\n+\t\t  *ld2++ = o_file;\n+\t\t  *ld2++ = arg;\n+\t\t}\n \t    }\n \t  if (p[1] == 'o')\n \t    *object++ = arg;\n@@ -1315,19 +1324,6 @@ main (argc, argv)\n \tp = q;\n       }\n \n-  /* Tell the linker that we have initializer and finalizer functions.  */\n-  if (shared_obj)\n-    {\n-#ifdef LD_INIT_SWITCH\n-      *ld2++ = LD_INIT_SWITCH;\n-      *ld2++ = \"_GLOBAL__DI\";\n-#endif\n-#ifdef LD_FINI_SWITCH\n-      *ld2++ = LD_FINI_SWITCH;\n-      *ld2++ = \"_GLOBAL__DD\";\n-#endif\n-    }\n-\n #ifdef COLLECT_EXPORT_LIST\n   /* The AIX linker will discard static constructors in object files if\n      nothing else in the file is referenced, so look at them first.  */\n@@ -1349,7 +1345,7 @@ main (argc, argv)\n #endif\n \n   *c_ptr++ = c_file;\n-  *object = *c_ptr = *ld1 = *ld2 = (char *)0;\n+  *object = *c_ptr = *ld1 = (char *)0;\n \n   if (vflag)\n     {\n@@ -1462,11 +1458,22 @@ main (argc, argv)\n   if (fclose (outf))\n     fatal_perror (\"closing %s\", c_file);\n \n+  /* Tell the linker that we have initializer and finalizer functions.  */\n+#ifdef LD_INIT_SWITCH\n+  *ld2++ = LD_INIT_SWITCH;\n+  *ld2++ = initname;\n+  *ld2++ = LD_FINI_SWITCH;\n+  *ld2++ = fininame;\n+#endif\n+  *ld2 = (char*)0;\n+\n #ifdef COLLECT_EXPORT_LIST\n   if (shared_obj)\n     {\n       add_to_list (&exports, initname);\n       add_to_list (&exports, fininame);\n+      add_to_list (&exports, \"_GLOBAL__DI\");\n+      add_to_list (&exports, \"_GLOBAL__DD\");\n       exportf = fopen (export_file, \"w\");\n       if (exportf == (FILE *)0)\n \tfatal_perror (\"%s\", export_file);\n@@ -1775,6 +1782,8 @@ write_c_file_stat (stream, name)\n       fprintf (stream, \"\\tp = ctors + %d;\\n\", constructors.number);\n       fprintf (stream, \"\\twhile (p > ctors) (*--p)();\\n\");\n     }\n+  else\n+    fprintf (stream, \"\\t++count;\\n\");\n   fprintf (stream, \"}\\n\");\n   write_list_with_asm (stream, \"extern entry_pt \", destructors.first);\n   fprintf (stream, \"void %s() {\\n\", fininame);\n@@ -1791,8 +1800,11 @@ write_c_file_stat (stream, name)\n     }\n   fprintf (stream, \"}\\n\");\n \n-  fprintf (stream, \"void _GLOBAL__DI() {\\n\\t%s();\\n}\\n\", initname);\n-  fprintf (stream, \"void _GLOBAL__DD() {\\n\\t%s();\\n}\\n\", fininame);\n+  if (shared_obj)\n+    {\n+      fprintf (stream, \"void _GLOBAL__DI() {\\n\\t%s();\\n}\\n\", initname);\n+      fprintf (stream, \"void _GLOBAL__DD() {\\n\\t%s();\\n}\\n\", fininame);\n+    }\n }\n \n /* Write the constructor/destructor tables. */\n@@ -1829,10 +1841,12 @@ write_c_file (stream, name)\n      FILE *stream;\n      char *name;\n {\n-  if (shared_obj)\n-    write_c_file_stat (stream, name);\n-  else\n+#ifndef LD_INIT_SWITCH\n+  if (! shared_obj)\n     write_c_file_glob (stream, name);\n+  else\n+#endif\n+    write_c_file_stat (stream, name);\n }\n \n static void"}]}