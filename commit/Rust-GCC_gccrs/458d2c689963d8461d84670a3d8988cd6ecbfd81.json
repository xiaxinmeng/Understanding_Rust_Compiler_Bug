{"sha": "458d2c689963d8461d84670a3d8988cd6ecbfd81", "node_id": "C_kwDOANBUbNoAKDQ1OGQyYzY4OTk2M2Q4NDYxZDg0NjcwYTNkODk4OGNkNmVjYmZkODE", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2021-11-19T17:46:00Z"}, "committer": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2021-11-19T17:46:08Z"}, "message": "options: Make -Ofast switch off -fsemantic-interposition\n\nUsing -fno-semantic-interposition has been reported by various people\nto bring about considerable speed up at the cost of strict compliance\nto the ELF symbol interposition rules  See for example\nhttps://fedoraproject.org/wiki/Changes/PythonNoSemanticInterpositionSpeedup\n\nAs such I believe it should be implied by our -Ofast optimization\nlevel, not only so that benchmarks that can benefit run faster, but\nalso so that people looking at -Ofast documentation for options that\ncould speed their programs find it.\n\ngcc/ChangeLog:\n\n2021-11-12  Martin Jambor  <mjambor@suse.cz>\n\n\t* opts.c (default_options_table): Switch off\n\tflag_semantic_interposition at Ofast.\n\t* doc/invoke.texi (Optimize Options): Document that Ofast switches off\n\t-fsemantic-interposition.", "tree": {"sha": "b8ec5d2ae9baec63f98dd08e1075b35e6cfaca9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8ec5d2ae9baec63f98dd08e1075b35e6cfaca9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/458d2c689963d8461d84670a3d8988cd6ecbfd81", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE5elVTFt/d09Vsoczv2PBvD+kNUAFAmGX4uAACgkQv2PBvD+k\nNUD0hA//Z4lggiNLE0/Xl5APZ6RJxiJwlJ1IJUalDYlKb5hWjnrhKtSv+L9iQtst\nAnrSGSIEgsxLbZgEc6ZGYrwA3hvTjAekFHhZ+R98GiuNIoDT388lPM3vqjYqr7b+\ngrePn6MRTSvU/uiVrS58uWdNv/iXGWR/lEa6NHrkVAzdhmG5I0tAlks44V3PBhux\nH2L5vBJzxTSjjFg7g6Wyq9paa1BFOY8fn5BG1XgO813wZ8nQqTbSyMhA+kytaOYq\nwciWmoajzDmEV6/HIg0ebDlvZm5pzqJkxvu/hoLK5ZQJKSDBUQI4gzGPrju/jcV7\nJiobiWglR7D9pyk3CAS1n+dJ397O5zTKodziZEu/uhiRUHnzYBHg51Rq+ILF7IRD\nvcdepJIDwGLp1775EOL9v0gN24NqkvunqPFn1AAxc/dHz6a0nkCUx4yTsjGiyJtv\nXWGpdgAv32ikNl++MtZ00dQN7oW93X1Q0Ot504YzocL0bN2YSNsJboGA14VM7Q49\nNSqxTatNSrfteaUDQdfoLf9frxFXRVo8H8Ywno8dK9UARM2JhreymF2KNGZxSRkI\np3T6DSXcL/2ljqq68DMy5Jfi75laMZ6KlxuRyXZcyrZmvJwzNOWDi8EmASeR2bzw\nn8VjCUwTEwmRCWdseR0Y3Iqt0DBaEFrRFzL4EWeOI6GbdUi5t6E=\n=buDv\n-----END PGP SIGNATURE-----", "payload": "tree b8ec5d2ae9baec63f98dd08e1075b35e6cfaca9d\nparent ada63d56beb0e535d35b165b55f85e29a0b36929\nauthor Martin Jambor <mjambor@suse.cz> 1637343960 +0100\ncommitter Martin Jambor <mjambor@suse.cz> 1637343968 +0100\n\noptions: Make -Ofast switch off -fsemantic-interposition\n\nUsing -fno-semantic-interposition has been reported by various people\nto bring about considerable speed up at the cost of strict compliance\nto the ELF symbol interposition rules  See for example\nhttps://fedoraproject.org/wiki/Changes/PythonNoSemanticInterpositionSpeedup\n\nAs such I believe it should be implied by our -Ofast optimization\nlevel, not only so that benchmarks that can benefit run faster, but\nalso so that people looking at -Ofast documentation for options that\ncould speed their programs find it.\n\ngcc/ChangeLog:\n\n2021-11-12  Martin Jambor  <mjambor@suse.cz>\n\n\t* opts.c (default_options_table): Switch off\n\tflag_semantic_interposition at Ofast.\n\t* doc/invoke.texi (Optimize Options): Document that Ofast switches off\n\t-fsemantic-interposition.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/458d2c689963d8461d84670a3d8988cd6ecbfd81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/458d2c689963d8461d84670a3d8988cd6ecbfd81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/458d2c689963d8461d84670a3d8988cd6ecbfd81/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ada63d56beb0e535d35b165b55f85e29a0b36929", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ada63d56beb0e535d35b165b55f85e29a0b36929", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ada63d56beb0e535d35b165b55f85e29a0b36929"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "1cfb70291f6891c16e019edd0a361fafdc6a85c0", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458d2c689963d8461d84670a3d8988cd6ecbfd81/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458d2c689963d8461d84670a3d8988cd6ecbfd81/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=458d2c689963d8461d84670a3d8988cd6ecbfd81", "patch": "@@ -10677,6 +10677,7 @@ valid for all standard-compliant programs.\n It turns on @option{-ffast-math}, @option{-fallow-store-data-races}\n and the Fortran-specific @option{-fstack-arrays}, unless\n @option{-fmax-stack-var-size} is specified, and @option{-fno-protect-parens}.\n+It turns off @option {-fsemantic-interposition}.\n \n @item -Og\n @opindex Og"}, {"sha": "b16497e45b3021729442fe184c8399ef490225c3", "filename": "gcc/opts.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/458d2c689963d8461d84670a3d8988cd6ecbfd81/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/458d2c689963d8461d84670a3d8988cd6ecbfd81/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=458d2c689963d8461d84670a3d8988cd6ecbfd81", "patch": "@@ -682,6 +682,7 @@ static const struct default_options default_options_table[] =\n     /* -Ofast adds optimizations to -O3.  */\n     { OPT_LEVELS_FAST, OPT_ffast_math, NULL, 1 },\n     { OPT_LEVELS_FAST, OPT_fallow_store_data_races, NULL, 1 },\n+    { OPT_LEVELS_FAST, OPT_fsemantic_interposition, NULL, 0 },\n \n     { OPT_LEVELS_NONE, 0, NULL, 0 }\n   };"}]}