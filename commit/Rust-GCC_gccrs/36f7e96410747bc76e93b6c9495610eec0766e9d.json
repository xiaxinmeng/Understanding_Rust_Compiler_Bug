{"sha": "36f7e96410747bc76e93b6c9495610eec0766e9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZmN2U5NjQxMDc0N2JjNzZlOTNiNmM5NDk1NjEwZWVjMDc2NmU5ZA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2002-10-09T15:54:55Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2002-10-09T15:54:55Z"}, "message": "rs6000.c (rs6000_ra_ever_killed): Call prologue_epilogue_contains instead of using REG_MAYBE_DEAD notes.\n\n2002-10-08  Aldy Hernandez  <aldyh@redhat.com>\n\n\t* config/rs6000/rs6000.c (rs6000_ra_ever_killed): Call\n\tprologue_epilogue_contains instead of using REG_MAYBE_DEAD notes.\n\nFrom-SVN: r57985", "tree": {"sha": "ddd1fbc13d3a6d73d0ca735dc331cadf3945ec35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddd1fbc13d3a6d73d0ca735dc331cadf3945ec35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36f7e96410747bc76e93b6c9495610eec0766e9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36f7e96410747bc76e93b6c9495610eec0766e9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36f7e96410747bc76e93b6c9495610eec0766e9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36f7e96410747bc76e93b6c9495610eec0766e9d/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e3c6252002eac3c1feb387ecc753ccfebd21abcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3c6252002eac3c1feb387ecc753ccfebd21abcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3c6252002eac3c1feb387ecc753ccfebd21abcd"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "33553cfafd9bb4e5c8ca8f2bc2de384febb6e5a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36f7e96410747bc76e93b6c9495610eec0766e9d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36f7e96410747bc76e93b6c9495610eec0766e9d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=36f7e96410747bc76e93b6c9495610eec0766e9d", "patch": "@@ -1,3 +1,8 @@\n+2002-10-08  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_ra_ever_killed): Call\n+\tprologue_epilogue_contains instead of using REG_MAYBE_DEAD notes.\n+\n Wed Oct  9 15:54:49 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* sh.md (ffssi2): Fix emitted code."}, {"sha": "82892891609a616248066efcd82829f0218e12a5", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36f7e96410747bc76e93b6c9495610eec0766e9d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36f7e96410747bc76e93b6c9495610eec0766e9d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=36f7e96410747bc76e93b6c9495610eec0766e9d", "patch": "@@ -9446,7 +9446,6 @@ function_ok_for_sibcall (fndecl)\n   return 0;\n }\n \n-/* function rewritten to handle sibcalls */\n static int\n rs6000_ra_ever_killed ()\n {\n@@ -9458,19 +9457,21 @@ rs6000_ra_ever_killed ()\n   if (current_function_is_thunk)\n     return 0;\n #endif\n-  /* regs_ever_live has LR marked as used if any sibcalls\n-     are present.  Which it is, but this should not force\n-     saving and restoring in the prologue/epilog.  Likewise,\n-     reg_set_between_p thinks a sibcall clobbers LR, so\n-     that is inappropriate. */\n+  /* regs_ever_live has LR marked as used if any sibcalls are present,\n+     but this should not force saving and restoring in the\n+     pro/epilogue.  Likewise, reg_set_between_p thinks a sibcall\n+     clobbers LR, so that is inappropriate. */\n+\n   /* Also, the prologue can generate a store into LR that\n      doesn't really count, like this:\n+\n         move LR->R0\n         bcl to set PIC register\n         move LR->R31\n         move R0->LR\n-     When we're called from the epilog, we need to avoid counting\n-     this as a store; thus we ignore any insns with a REG_MAYBE_DEAD note. */\n+\n+     When we're called from the epilogue, we need to avoid counting\n+     this as a store.  */\n          \n   push_topmost_sequence ();\n   top = get_insns ();\n@@ -9486,8 +9487,8 @@ rs6000_ra_ever_killed ()\n \t  else if (GET_CODE (insn) == CALL_INSN \n \t\t   && !SIBLING_CALL_P (insn))\n \t    return 1;\n-\t  else if (set_of (reg, insn) != NULL_RTX \n-\t\t   && find_reg_note (insn, REG_MAYBE_DEAD, NULL_RTX) == 0)\n+\t  else if (set_of (reg, insn) != NULL_RTX\n+\t\t   && !prologue_epilogue_contains (insn))\n \t    return 1;\n     \t}\n     }"}]}