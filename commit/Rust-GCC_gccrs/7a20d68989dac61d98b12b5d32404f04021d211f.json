{"sha": "7a20d68989dac61d98b12b5d32404f04021d211f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2EyMGQ2ODk4OWRhYzYxZDk4YjEyYjVkMzI0MDRmMDQwMjFkMjExZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2007-09-24T20:54:34Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2007-09-24T20:54:34Z"}, "message": "re PR c++/33239 (internal compiler error in instantiate_class_template, at cp/pt.c:5666)\n\n        PR c++/33239\n        * pt.c (resolve_typename_type): Don't look things up in the original\n        template if it would mean losing template arguments.\n\nFrom-SVN: r128725", "tree": {"sha": "b77c7efb5fdcf917f41b024686f780683d8ff1ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b77c7efb5fdcf917f41b024686f780683d8ff1ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a20d68989dac61d98b12b5d32404f04021d211f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a20d68989dac61d98b12b5d32404f04021d211f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a20d68989dac61d98b12b5d32404f04021d211f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a20d68989dac61d98b12b5d32404f04021d211f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7b7bdf67e021444850352aebe14b288aca4c29c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b7bdf67e021444850352aebe14b288aca4c29c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b7bdf67e021444850352aebe14b288aca4c29c7"}], "stats": {"total": 43, "additions": 40, "deletions": 3}, "files": [{"sha": "6950166f13a9b0c46a6c1d11b52cf44f0dff1c52", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a20d68989dac61d98b12b5d32404f04021d211f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a20d68989dac61d98b12b5d32404f04021d211f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7a20d68989dac61d98b12b5d32404f04021d211f", "patch": "@@ -1,3 +1,9 @@\n+2007-09-24  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/33239\n+\t* pt.c (resolve_typename_type): Don't look things up in the original\n+\ttemplate if it would mean losing template arguments.\t\n+\n 2007-09-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/33506"}, {"sha": "5b07c7027a7a1cee1dc9547433d60a10202b6df4", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a20d68989dac61d98b12b5d32404f04021d211f/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a20d68989dac61d98b12b5d32404f04021d211f/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=7a20d68989dac61d98b12b5d32404f04021d211f", "patch": "@@ -15732,9 +15732,16 @@ resolve_typename_type (tree type, bool only_current_p)\n      to look inside it.  */\n   if (only_current_p && !currently_open_class (scope))\n     return type;\n-  /* If SCOPE is a partial instantiation, it will not have a valid\n-     TYPE_FIELDS list, so use the original template.  */\n-  scope = CLASSTYPE_PRIMARY_TEMPLATE_TYPE (scope);\n+  /* If SCOPE isn't the template itself, it will not have a valid\n+     TYPE_FIELDS list.  */\n+  if (same_type_p (scope, CLASSTYPE_PRIMARY_TEMPLATE_TYPE (scope)))\n+    /* scope is either the template itself or a compatible instantiation\n+       like X<T>, so look up the name in the original template.  */\n+    scope = CLASSTYPE_PRIMARY_TEMPLATE_TYPE (scope);\n+  else\n+    /* scope is a partial instantiation, so we can't do the lookup or we\n+       will lose the template arguments.  */\n+    return type;\n   /* Enter the SCOPE so that name lookup will be resolved as if we\n      were in the class definition.  In particular, SCOPE will no\n      longer be considered a dependent type.  */"}, {"sha": "583155ea760a10135098814318517c1c25effb06", "filename": "gcc/testsuite/g++.dg/template/memtmpl3.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a20d68989dac61d98b12b5d32404f04021d211f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmemtmpl3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a20d68989dac61d98b12b5d32404f04021d211f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmemtmpl3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmemtmpl3.C?ref=7a20d68989dac61d98b12b5d32404f04021d211f", "patch": "@@ -0,0 +1,24 @@\n+// PR c++/33239\n+\n+struct null_type;\n+\n+template<typename T1, typename T2>\n+struct tuple_impl\n+{\n+  template<typename U>\n+  struct append\n+  {\n+    typedef tuple_impl<U, null_type> type;\n+  };\n+\n+  int data;\n+};\n+\n+template<typename T1>\n+class tuple\n+: public tuple_impl<T1, null_type>::template append<T1>::type\n+{\n+  using tuple_impl<T1, null_type>::template append<T1>::type::data;\n+};\n+\n+tuple<int>  my_tuple;"}]}