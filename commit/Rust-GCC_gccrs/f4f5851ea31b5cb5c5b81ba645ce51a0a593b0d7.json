{"sha": "f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRmNTg1MWVhMzFiNWNiNWM1YjgxYmE2NDVjZTUxYTBhNTkzYjBkNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T09:28:49Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T09:28:49Z"}, "message": "2017-04-25  Arnaud Charlet  <charlet@adacore.com trojanek>\n\n\t* gnat1drv.adb (Gnat1Drv): Disable Generate_Processed_File in\n\tcodepeer mode.\n\n2017-04-25  Javier Miranda  <miranda@adacore.com>\n\n\t* urealp.adb (UR_Write): Fix output of constants with a base other\n\tthat 10.\n\n2017-04-25  Justin Squirek  <squirek@adacore.com>\n\n\t* sem_ch13.adb (Get_Interfacing_Aspects): Moved to sem_util.adb.\n\t* sem_prag.adb (Analyze_Pragma, Process_Import_Or_Interface):\n\tAdd extra parameter for Process_Interface_Name.\n\t(Process_Interface_Name): Add parameter for pragma to analyze\n\tcorresponding aspect.\n\t* sem_util.ads, sem_util.adb (Get_Interfacing_Aspects): Added\n\tfrom sem_ch13.adb\n\nFrom-SVN: r247160", "tree": {"sha": "b6d0e446799e5c55eca43aabbc113176f3471c7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6d0e446799e5c55eca43aabbc113176f3471c7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7/comments", "author": null, "committer": null, "parents": [{"sha": "2700fbd655f608e8e23dd3b113eb36d9d8d83bf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2700fbd655f608e8e23dd3b113eb36d9d8d83bf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2700fbd655f608e8e23dd3b113eb36d9d8d83bf7"}], "stats": {"total": 335, "additions": 198, "deletions": 137}, "files": [{"sha": "87481487bc3d6f49480c56a5057a0020874c48a4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7", "patch": "@@ -1,3 +1,23 @@\n+2017-04-25  Arnaud Charlet  <charlet@adacore.com trojanek>\n+\n+\t* gnat1drv.adb (Gnat1Drv): Disable Generate_Processed_File in\n+\tcodepeer mode.\n+\n+2017-04-25  Javier Miranda  <miranda@adacore.com>\n+\n+\t* urealp.adb (UR_Write): Fix output of constants with a base other\n+\tthat 10.\n+\n+2017-04-25  Justin Squirek  <squirek@adacore.com>\n+\n+\t* sem_ch13.adb (Get_Interfacing_Aspects): Moved to sem_util.adb.\n+\t* sem_prag.adb (Analyze_Pragma, Process_Import_Or_Interface):\n+\tAdd extra parameter for Process_Interface_Name.\n+\t(Process_Interface_Name): Add parameter for pragma to analyze\n+\tcorresponding aspect.\n+\t* sem_util.ads, sem_util.adb (Get_Interfacing_Aspects): Added\n+\tfrom sem_ch13.adb\n+\n 2017-04-25  Gary Dismukes  <dismukes@adacore.com>\n \n \t* exp_ch7.adb, einfo.ads, sem_prag.adb: Minor reformatting and typo"}, {"sha": "22139df6d0c692d525d93b32ad380c41dcd7daf6", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7", "patch": "@@ -286,6 +286,11 @@ procedure Gnat1drv is\n \n          Debug_Generated_Code := False;\n \n+         --  Ditto for -gnateG which interacts badly with handling of pragma\n+         --  Annotate in gnat2scil.\n+\n+         Generate_Processed_File := False;\n+\n          --  Disable Exception_Extra_Info (-gnateE) which generates more\n          --  complex trees with no added value, and may confuse CodePeer.\n "}, {"sha": "fdc39291ff6254f6cba7db8fefca3b16edeba05d", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 0, "deletions": 121, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7", "patch": "@@ -147,27 +147,6 @@ package body Sem_Ch13 is\n    --  Uint value. If the value is inappropriate, then error messages are\n    --  posted as required, and a value of No_Uint is returned.\n \n-   procedure Get_Interfacing_Aspects\n-     (Iface_Asp : Node_Id;\n-      Conv_Asp  : out Node_Id;\n-      EN_Asp    : out Node_Id;\n-      Expo_Asp  : out Node_Id;\n-      Imp_Asp   : out Node_Id;\n-      LN_Asp    : out Node_Id;\n-      Do_Checks : Boolean := False);\n-   --  Given a single interfacing aspect Iface_Asp, retrieve other interfacing\n-   --  aspects that apply to the same related entity. The aspects considered by\n-   --  this routine are as follows:\n-   --\n-   --    Conv_Asp - aspect Convention\n-   --    EN_Asp   - aspect External_Name\n-   --    Expo_Asp - aspect Export\n-   --    Imp_Asp  - aspect Import\n-   --    LN_Asp   - aspect Link_Name\n-   --\n-   --  When flag Do_Checks is set, this routine will flag duplicate uses of\n-   --  aspects.\n-\n    function Is_Operational_Item (N : Node_Id) return Boolean;\n    --  A specification for a stream attribute is allowed before the full type\n    --  is declared, as explained in AI-00137 and the corrigendum. Attributes\n@@ -11214,106 +11193,6 @@ package body Sem_Ch13 is\n       end if;\n    end Get_Alignment_Value;\n \n-   -----------------------------\n-   -- Get_Interfacing_Aspects --\n-   -----------------------------\n-\n-   procedure Get_Interfacing_Aspects\n-     (Iface_Asp : Node_Id;\n-      Conv_Asp  : out Node_Id;\n-      EN_Asp    : out Node_Id;\n-      Expo_Asp  : out Node_Id;\n-      Imp_Asp   : out Node_Id;\n-      LN_Asp    : out Node_Id;\n-      Do_Checks : Boolean := False)\n-   is\n-      procedure Save_Or_Duplication_Error\n-        (Asp : Node_Id;\n-         To  : in out Node_Id);\n-      --  Save the value of aspect Asp in node To. If To already has a value,\n-      --  then this is considered a duplicate use of aspect. Emit an error if\n-      --  flag Do_Checks is set.\n-\n-      -------------------------------\n-      -- Save_Or_Duplication_Error --\n-      -------------------------------\n-\n-      procedure Save_Or_Duplication_Error\n-        (Asp : Node_Id;\n-         To  : in out Node_Id)\n-      is\n-      begin\n-         --  Detect an extra aspect and issue an error\n-\n-         if Present (To) then\n-            if Do_Checks then\n-               Error_Msg_Name_1 := Chars (Identifier (Asp));\n-               Error_Msg_Sloc   := Sloc (To);\n-               Error_Msg_N (\"aspect % previously given #\", Asp);\n-            end if;\n-\n-         --  Otherwise capture the aspect\n-\n-         else\n-            To := Asp;\n-         end if;\n-      end Save_Or_Duplication_Error;\n-\n-      --  Local variables\n-\n-      Asp    : Node_Id;\n-      Asp_Id : Aspect_Id;\n-\n-      --  The following variables capture each individual aspect\n-\n-      Conv : Node_Id := Empty;\n-      EN   : Node_Id := Empty;\n-      Expo : Node_Id := Empty;\n-      Imp  : Node_Id := Empty;\n-      LN   : Node_Id := Empty;\n-\n-   --  Start of processing for Get_Interfacing_Aspects\n-\n-   begin\n-      --  The input interfacing aspect should reside in an aspect specification\n-      --  list.\n-\n-      pragma Assert (Is_List_Member (Iface_Asp));\n-\n-      --  Examine the aspect specifications of the related entity. Find and\n-      --  capture all interfacing aspects. Detect duplicates and emit errors\n-      --  if applicable.\n-\n-      Asp := First (List_Containing (Iface_Asp));\n-      while Present (Asp) loop\n-         Asp_Id := Get_Aspect_Id (Asp);\n-\n-         if Asp_Id = Aspect_Convention then\n-            Save_Or_Duplication_Error (Asp, Conv);\n-\n-         elsif Asp_Id = Aspect_External_Name then\n-            Save_Or_Duplication_Error (Asp, EN);\n-\n-         elsif Asp_Id = Aspect_Export then\n-            Save_Or_Duplication_Error (Asp, Expo);\n-\n-         elsif Asp_Id = Aspect_Import then\n-            Save_Or_Duplication_Error (Asp, Imp);\n-\n-         elsif Asp_Id = Aspect_Link_Name then\n-            Save_Or_Duplication_Error (Asp, LN);\n-         end if;\n-\n-         Next (Asp);\n-      end loop;\n-\n-      Conv_Asp := Conv;\n-      EN_Asp   := EN;\n-      Expo_Asp := Expo;\n-      Imp_Asp  := Imp;\n-      LN_Asp   := LN;\n-   end Get_Interfacing_Aspects;\n-\n    -------------------------------------\n    -- Inherit_Aspects_At_Freeze_Point --\n    -------------------------------------"}, {"sha": "4549e8afd3b16bdef867a6aedc7c11261207e98e", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 48, "deletions": 10, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7", "patch": "@@ -3927,7 +3927,8 @@ package body Sem_Prag is\n       procedure Process_Interface_Name\n         (Subprogram_Def : Entity_Id;\n          Ext_Arg        : Node_Id;\n-         Link_Arg       : Node_Id);\n+         Link_Arg       : Node_Id;\n+         Prag           : Node_Id);\n       --  Given the last two arguments of pragma Import, pragma Export, or\n       --  pragma Interface_Name, performs validity checks and sets the\n       --  Interface_Name field of the given subprogram entity to the\n@@ -3936,7 +3937,9 @@ package body Sem_Prag is\n       --  Ext_Arg may represent the Link_Name if Link_Arg is missing, and\n       --  appropriate named notation is used for Ext_Arg. If neither Ext_Arg\n       --  nor Link_Arg is present, the interface name is set to the default\n-      --  from the subprogram name.\n+      --  from the subprogram name. In addition, the pragma itself is passed\n+      --  to analyze any expressions in the case the pragma came from an aspect\n+      --  specification.\n \n       procedure Process_Interrupt_Or_Attach_Handler;\n       --  Common processing for Interrupt and Attach_Handler pragmas\n@@ -8421,7 +8424,7 @@ package body Sem_Prag is\n                   Set_Imported (Def_Id);\n                end if;\n \n-               Process_Interface_Name (Def_Id, Arg3, Arg4);\n+               Process_Interface_Name (Def_Id, Arg3, Arg4, N);\n \n                --  Note that we do not set Is_Public here. That's because we\n                --  only want to set it if there is no address clause, and we\n@@ -8583,7 +8586,7 @@ package body Sem_Prag is\n                      end if;\n                   end;\n \n-                  Process_Interface_Name (Def_Id, Arg3, Arg4);\n+                  Process_Interface_Name (Def_Id, Arg3, Arg4, N);\n                end if;\n \n                if Is_Compilation_Unit (Hom_Id) then\n@@ -9128,7 +9131,8 @@ package body Sem_Prag is\n       procedure Process_Interface_Name\n         (Subprogram_Def : Entity_Id;\n          Ext_Arg        : Node_Id;\n-         Link_Arg       : Node_Id)\n+         Link_Arg       : Node_Id;\n+         Prag           : Node_Id)\n       is\n          Ext_Nam    : Node_Id;\n          Link_Nam   : Node_Id;\n@@ -9179,6 +9183,40 @@ package body Sem_Prag is\n       --  Start of processing for Process_Interface_Name\n \n       begin\n+         --  If we are looking at a pragma that comes from an aspect then it\n+         --  needs to have its corresponding aspect argument expressions\n+         --  analyzed in addition to the generated pragma so that aspects\n+         --  within generic units get properly resolved.\n+\n+         if Present (Prag) and then From_Aspect_Specification (Prag) then\n+            declare\n+               Asp     : constant Node_Id := Corresponding_Aspect (Prag);\n+               Dummy_1 : Node_Id;\n+               Dummy_2 : Node_Id;\n+               Dummy_3 : Node_Id;\n+               EN      : Node_Id;\n+               LN      : Node_Id;\n+\n+            begin\n+               --  Obtain all interfacing aspects used to construct the pragma\n+\n+               Get_Interfacing_Aspects\n+                 (Asp, Dummy_1, EN, Dummy_2, Dummy_3, LN);\n+\n+               --  Analyze the expression of aspect External_Name\n+\n+               if Present (EN) then\n+                  Analyze (Expression (EN));\n+               end if;\n+\n+               --  Analyze the expressio of aspect Link_Name\n+\n+               if Present (LN) then\n+                  Analyze (Expression (LN));\n+               end if;\n+            end;\n+         end if;\n+\n          if No (Link_Arg) then\n             if No (Ext_Arg) then\n                return;\n@@ -13497,7 +13535,7 @@ package body Sem_Prag is\n                if Arg_Count >= 2 then\n                   Set_Imported (Def_Id);\n                   Set_Is_Public (Def_Id);\n-                  Process_Interface_Name (Def_Id, Arg2, Arg3);\n+                  Process_Interface_Name (Def_Id, Arg2, Arg3, N);\n                end if;\n \n                Set_Has_Completion (Def_Id);\n@@ -14648,7 +14686,7 @@ package body Sem_Prag is\n                     (Get_Pragma_Arg (Arg2), Sure => False);\n                end if;\n \n-               Process_Interface_Name (Def_Id, Arg3, Arg4);\n+               Process_Interface_Name (Def_Id, Arg3, Arg4, N);\n                Set_Exported (Def_Id, Arg2);\n             end if;\n \n@@ -15154,7 +15192,7 @@ package body Sem_Prag is\n \n             Note_Possible_Modification\n               (Get_Pragma_Arg (Arg2), Sure => False);\n-            Process_Interface_Name (E, Arg3, Arg4);\n+            Process_Interface_Name (E, Arg3, Arg4, N);\n             Set_Exported (E, Arg2);\n          end External;\n \n@@ -16607,7 +16645,7 @@ package body Sem_Prag is\n                   end if;\n \n                   Set_Is_Public (Def_Id);\n-                  Process_Interface_Name (Def_Id, Arg2, Arg3);\n+                  Process_Interface_Name (Def_Id, Arg2, Arg3, N);\n                end if;\n \n             --  Otherwise must be subprogram\n@@ -16627,7 +16665,7 @@ package body Sem_Prag is\n                   Def_Id := Get_Base_Subprogram (Hom_Id);\n \n                   if Is_Imported (Def_Id) then\n-                     Process_Interface_Name (Def_Id, Arg2, Arg3);\n+                     Process_Interface_Name (Def_Id, Arg2, Arg3, N);\n                      Found := True;\n                   end if;\n "}, {"sha": "ebf585a4a3e4a5fef41281e26baf20ef1859ef9d", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7", "patch": "@@ -8181,6 +8181,106 @@ package body Sem_Util is\n       end if;\n    end Get_Index_Bounds;\n \n+   -----------------------------\n+   -- Get_Interfacing_Aspects --\n+   -----------------------------\n+\n+   procedure Get_Interfacing_Aspects\n+     (Iface_Asp : Node_Id;\n+      Conv_Asp  : out Node_Id;\n+      EN_Asp    : out Node_Id;\n+      Expo_Asp  : out Node_Id;\n+      Imp_Asp   : out Node_Id;\n+      LN_Asp    : out Node_Id;\n+      Do_Checks : Boolean := False)\n+   is\n+      procedure Save_Or_Duplication_Error\n+        (Asp : Node_Id;\n+         To  : in out Node_Id);\n+      --  Save the value of aspect Asp in node To. If To already has a value,\n+      --  then this is considered a duplicate use of aspect. Emit an error if\n+      --  flag Do_Checks is set.\n+\n+      -------------------------------\n+      -- Save_Or_Duplication_Error --\n+      -------------------------------\n+\n+      procedure Save_Or_Duplication_Error\n+        (Asp : Node_Id;\n+         To  : in out Node_Id)\n+      is\n+      begin\n+         --  Detect an extra aspect and issue an error\n+\n+         if Present (To) then\n+            if Do_Checks then\n+               Error_Msg_Name_1 := Chars (Identifier (Asp));\n+               Error_Msg_Sloc   := Sloc (To);\n+               Error_Msg_N (\"aspect % previously given #\", Asp);\n+            end if;\n+\n+         --  Otherwise capture the aspect\n+\n+         else\n+            To := Asp;\n+         end if;\n+      end Save_Or_Duplication_Error;\n+\n+      --  Local variables\n+\n+      Asp    : Node_Id;\n+      Asp_Id : Aspect_Id;\n+\n+      --  The following variables capture each individual aspect\n+\n+      Conv : Node_Id := Empty;\n+      EN   : Node_Id := Empty;\n+      Expo : Node_Id := Empty;\n+      Imp  : Node_Id := Empty;\n+      LN   : Node_Id := Empty;\n+\n+   --  Start of processing for Get_Interfacing_Aspects\n+\n+   begin\n+      --  The input interfacing aspect should reside in an aspect specification\n+      --  list.\n+\n+      pragma Assert (Is_List_Member (Iface_Asp));\n+\n+      --  Examine the aspect specifications of the related entity. Find and\n+      --  capture all interfacing aspects. Detect duplicates and emit errors\n+      --  if applicable.\n+\n+      Asp := First (List_Containing (Iface_Asp));\n+      while Present (Asp) loop\n+         Asp_Id := Get_Aspect_Id (Asp);\n+\n+         if Asp_Id = Aspect_Convention then\n+            Save_Or_Duplication_Error (Asp, Conv);\n+\n+         elsif Asp_Id = Aspect_External_Name then\n+            Save_Or_Duplication_Error (Asp, EN);\n+\n+         elsif Asp_Id = Aspect_Export then\n+            Save_Or_Duplication_Error (Asp, Expo);\n+\n+         elsif Asp_Id = Aspect_Import then\n+            Save_Or_Duplication_Error (Asp, Imp);\n+\n+         elsif Asp_Id = Aspect_Link_Name then\n+            Save_Or_Duplication_Error (Asp, LN);\n+         end if;\n+\n+         Next (Asp);\n+      end loop;\n+\n+      Conv_Asp := Conv;\n+      EN_Asp   := EN;\n+      Expo_Asp := Expo;\n+      Imp_Asp  := Imp;\n+      LN_Asp   := LN;\n+   end Get_Interfacing_Aspects;\n+\n    ---------------------------------\n    -- Get_Iterable_Type_Primitive --\n    ---------------------------------"}, {"sha": "014cb6379e1ed81f4a9e4f16e19d82750298d41c", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7", "patch": "@@ -923,6 +923,27 @@ package Sem_Util is\n    --  the index type turns out to be a partial view; this case should not\n    --  arise during normal compilation of semantically correct programs.\n \n+   procedure Get_Interfacing_Aspects\n+     (Iface_Asp : Node_Id;\n+      Conv_Asp  : out Node_Id;\n+      EN_Asp    : out Node_Id;\n+      Expo_Asp  : out Node_Id;\n+      Imp_Asp   : out Node_Id;\n+      LN_Asp    : out Node_Id;\n+      Do_Checks : Boolean := False);\n+   --  Given a single interfacing aspect Iface_Asp, retrieve other interfacing\n+   --  aspects that apply to the same related entity. The aspects considered by\n+   --  this routine are as follows:\n+   --\n+   --    Conv_Asp - aspect Convention\n+   --    EN_Asp   - aspect External_Name\n+   --    Expo_Asp - aspect Export\n+   --    Imp_Asp  - aspect Import\n+   --    LN_Asp   - aspect Link_Name\n+   --\n+   --  When flag Do_Checks is set, this routine will flag duplicate uses of\n+   --  aspects.\n+\n    function Get_Enum_Lit_From_Pos\n      (T   : Entity_Id;\n       Pos : Uint;"}, {"sha": "b839933bdae16487bf71ac31a778a20c7bf78600", "filename": "gcc/ada/urealp.adb", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7/gcc%2Fada%2Furealp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7/gcc%2Fada%2Furealp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Furealp.adb?ref=f4f5851ea31b5cb5c5b81ba645ce51a0a593b0d7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1472,8 +1472,8 @@ package body Urealp is\n       --  of the following forms, depending on the sign of the number\n       --  and the sign of the exponent (= minus denominator value)\n \n-      --    numerator.0*base**exponent\n-      --    numerator.0*base**-exponent\n+      --    numerator.0/base**exponent\n+      --    numerator.0/base**-exponent\n \n       --  And of course an exponent of 0 can be omitted\n \n@@ -1486,16 +1486,14 @@ package body Urealp is\n          Write_Str (\".0\");\n \n          if Val.Den /= 0 then\n-            Write_Char ('*');\n+            Write_Char ('/');\n             Write_Int (Val.Rbase);\n             Write_Str (\"**\");\n \n             if Val.Den <= 0 then\n                UI_Write (-Val.Den, Decimal);\n             else\n-               Write_Str (\"(-\");\n                UI_Write (Val.Den, Decimal);\n-               Write_Char (')');\n             end if;\n          end if;\n "}]}