{"sha": "dac9d53aef4ce1173e00cfbfee0bb5dcb04f05d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFjOWQ1M2FlZjRjZTExNzNlMDBjZmJmZWUwYmI1ZGNiMDRmMDVkMA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2009-11-26T02:03:50Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2009-11-26T02:03:50Z"}, "message": "pr36493.c: Call check_vect.\n\n\t* gcc.dg/vect/pr36493.c: Call check_vect.\n\t* gcc.dg/vect/pr37539.c: Likewise.\n\t* gcc.dg/vect/vect-nest-cycle-3.c: Call check_vect earlier.\n\t* tree-vect.h (check_vect): Use cpuid for x86.\n\nFrom-SVN: r154666", "tree": {"sha": "5e579d1d12af67bc1f45101776fb5258d91b7093", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e579d1d12af67bc1f45101776fb5258d91b7093"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dac9d53aef4ce1173e00cfbfee0bb5dcb04f05d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dac9d53aef4ce1173e00cfbfee0bb5dcb04f05d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dac9d53aef4ce1173e00cfbfee0bb5dcb04f05d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dac9d53aef4ce1173e00cfbfee0bb5dcb04f05d0/comments", "author": null, "committer": null, "parents": [{"sha": "faf63e396340307be88e36e86b1d30d0f8d88b14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faf63e396340307be88e36e86b1d30d0f8d88b14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faf63e396340307be88e36e86b1d30d0f8d88b14"}], "stats": {"total": 48, "additions": 42, "deletions": 6}, "files": [{"sha": "edce8bd813715a9b0d7f6cb9495d6f63a89d38c4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dac9d53aef4ce1173e00cfbfee0bb5dcb04f05d0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dac9d53aef4ce1173e00cfbfee0bb5dcb04f05d0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dac9d53aef4ce1173e00cfbfee0bb5dcb04f05d0", "patch": "@@ -1,3 +1,10 @@\n+2009-11-25  Richard Henderson  <rth@redhat.com>\n+\n+\t* gcc.dg/vect/pr36493.c: Call check_vect.\n+\t* gcc.dg/vect/pr37539.c: Likewise.\n+\t* gcc.dg/vect/vect-nest-cycle-3.c: Call check_vect earlier.\n+\t* tree-vect.h (check_vect): Use cpuid for x86.\n+\n 2009-11-25  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/specs/pack6.ads: New test."}, {"sha": "98517dfc5cec304b54bc9ff0c1561b079b2b95fa", "filename": "gcc/testsuite/gcc.dg/vect/pr36493.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dac9d53aef4ce1173e00cfbfee0bb5dcb04f05d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr36493.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dac9d53aef4ce1173e00cfbfee0bb5dcb04f05d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr36493.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr36493.c?ref=dac9d53aef4ce1173e00cfbfee0bb5dcb04f05d0", "patch": "@@ -8,6 +8,8 @@ main (void)\n   int i;\n   long x[12] __attribute__((aligned(__BIGGEST_ALIGNMENT__)));\n \n+  check_vect ();\n+\n   x[0] = 1;\n   for (i = 0; i < 12; i++)\n     x[i] = i;"}, {"sha": "1e73425de9ea91265caf82fe958aabc713799933", "filename": "gcc/testsuite/gcc.dg/vect/pr37539.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dac9d53aef4ce1173e00cfbfee0bb5dcb04f05d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr37539.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dac9d53aef4ce1173e00cfbfee0bb5dcb04f05d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr37539.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr37539.c?ref=dac9d53aef4ce1173e00cfbfee0bb5dcb04f05d0", "patch": "@@ -30,6 +30,8 @@ int main ()\n {\n   int d[256], src[128], i;\n  \n+  check_vect ();\n+\n   for (i = 0; i < 128; i++)\n     src[i] = i; \n   "}, {"sha": "2f21c2b167350ea118413f76f4bb56af9acd7c24", "filename": "gcc/testsuite/gcc.dg/vect/tree-vect.h", "status": "modified", "additions": 29, "deletions": 4, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dac9d53aef4ce1173e00cfbfee0bb5dcb04f05d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ftree-vect.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dac9d53aef4ce1173e00cfbfee0bb5dcb04f05d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ftree-vect.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Ftree-vect.h?ref=dac9d53aef4ce1173e00cfbfee0bb5dcb04f05d0", "patch": "@@ -1,16 +1,21 @@\n /* Check if system supports SIMD */\n #include <signal.h>\n \n+#if defined(__i386__) || defined(__x86_64__)\n+# include \"cpuid.h\"\n+#endif\n+\n extern void abort (void);\n extern void exit (int);\n \n-void\n+static void\n sig_ill_handler (int sig)\n {\n   exit(0);\n }\n \n-void check_vect (void)\n+static void __attribute__((noinline))\n+check_vect (void)\n {\n   signal(SIGILL, sig_ill_handler);\n #if defined(__PAIRED__)\n@@ -20,8 +25,28 @@ void check_vect (void)\n   /* Altivec instruction, 'vor %v0,%v0,%v0'.  */\n   asm volatile (\".long 0x10000484\");\n #elif defined(__i386__) || defined(__x86_64__)\n-  /* SSE2 instruction: movsd %xmm0,%xmm0 */\n-  asm volatile (\".byte 0xf2,0x0f,0x10,0xc0\");\n+  {\n+    int a, b, c, d, want_level, want_c, want_d;\n+\n+    /* Determine what instruction set we've been compiled for, and detect\n+       that we're running with it.  This allows us to at least do a compile\n+       check for, e.g. SSE4.1 when the machine only supports SSE2.  */\n+# ifdef __XOP__\n+    want_level = 0x80000001, want_c = bit_XOP, want_d = 0;\n+# elif defined(__AVX__)\n+    want_level = 1, want_c = bit_AVX, want_d = 0;\n+# elif defined(__SSE4_1__)\n+    want_level = 1, want_c = bit_SSE4_1, want_d = 0;\n+# elif defined(__SSSE3__)\n+    want_level = 1, want_c = bit_SSSE3, want_d = 0;\n+# else\n+    want_level = 1, want_c = 0, want_d = bit_SSE2;\n+# endif\n+\n+    if (!__get_cpuid (want_level, &a, &b, &c, &d)\n+\t|| ((c & want_c) | (d & want_d)) == 0)\n+      exit (0);\n+  }\n #elif defined(__sparc__)\n   asm volatile (\".word\\t0x81b007c0\");\n #elif defined(__arm__)"}, {"sha": "112f14646794858ffdaa8d7fb56ad6fd6c481adb", "filename": "gcc/testsuite/gcc.dg/vect/vect-nest-cycle-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dac9d53aef4ce1173e00cfbfee0bb5dcb04f05d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-nest-cycle-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dac9d53aef4ce1173e00cfbfee0bb5dcb04f05d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-nest-cycle-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-nest-cycle-3.c?ref=dac9d53aef4ce1173e00cfbfee0bb5dcb04f05d0", "patch": "@@ -39,15 +39,15 @@ int main (void)\n { \n   int i, j;\n \n+  check_vect ();\n+  \n   for (i = 0; i < N; i++)\n     for (j = 0; j < N; j++)\n       {\n         b[i][j] = i+j+5;\n         c[i][j] = i+j;\n       }\n          \n-  check_vect ();\n-  \n   main1 ();\n \n   return 0;"}]}