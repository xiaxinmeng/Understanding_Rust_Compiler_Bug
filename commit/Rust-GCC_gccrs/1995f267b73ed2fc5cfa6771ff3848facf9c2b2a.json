{"sha": "1995f267b73ed2fc5cfa6771ff3848facf9c2b2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk5NWYyNjdiNzNlZDJmYzVjZmE2NzcxZmYzODQ4ZmFjZjljMmIyYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-02-09T19:05:39Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-02-09T19:05:39Z"}, "message": "(assign_stack_temp): Clear MEM flags from reuse.\n\nFrom-SVN: r13623", "tree": {"sha": "6f80266beea61f11bbf38a5439604458ae01bda7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f80266beea61f11bbf38a5439604458ae01bda7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1995f267b73ed2fc5cfa6771ff3848facf9c2b2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1995f267b73ed2fc5cfa6771ff3848facf9c2b2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1995f267b73ed2fc5cfa6771ff3848facf9c2b2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1995f267b73ed2fc5cfa6771ff3848facf9c2b2a/comments", "author": null, "committer": null, "parents": [{"sha": "9956bfc058629f854cad1a20163e00dc915064cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9956bfc058629f854cad1a20163e00dc915064cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9956bfc058629f854cad1a20163e00dc915064cb"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "468558bc2167aeabbccca3b61b24b7a27681ccb0", "filename": "gcc/function.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1995f267b73ed2fc5cfa6771ff3848facf9c2b2a/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1995f267b73ed2fc5cfa6771ff3848facf9c2b2a/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=1995f267b73ed2fc5cfa6771ff3848facf9c2b2a", "patch": "@@ -913,6 +913,11 @@ assign_stack_temp (mode, size, keep)\n       p->level = temp_slot_level;\n       p->keep = keep;\n     }\n+\n+  /* We may be reusing an old slot, so clear any MEM flags that may have been\n+     set from before.  */\n+  RTX_UNCHANGING_P (p->slot) = 0;\n+  MEM_IN_STRUCT_P (p->slot) = 0;\n   return p->slot;\n }\n \f"}]}