{"sha": "5ca876c398d856b99a3427eabea5a992f328ee2d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNhODc2YzM5OGQ4NTZiOTlhMzQyN2VhYmVhNWE5OTJmMzI4ZWUyZA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2018-01-15T22:32:37Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2018-01-15T22:32:37Z"}, "message": "i386: Rewrite ix86_indirect_branch_register logic\n\nRewrite ix86_indirect_branch_register logic with\n\n(and (not (match_test \"ix86_indirect_branch_register\"))\n     (original condition before r256662))\n\n\t* config/i386/predicates.md (constant_call_address_operand):\n\tRewrite ix86_indirect_branch_register logic.\n\t(sibcall_insn_operand): Likewise.\n\nFrom-SVN: r256713", "tree": {"sha": "5451647675d1fdd8262a5a808031a6d1a90881b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5451647675d1fdd8262a5a808031a6d1a90881b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ca876c398d856b99a3427eabea5a992f328ee2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ca876c398d856b99a3427eabea5a992f328ee2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ca876c398d856b99a3427eabea5a992f328ee2d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ca876c398d856b99a3427eabea5a992f328ee2d/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e71cf74a5d61ce3dc228bcad1abfeb911d48430d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e71cf74a5d61ce3dc228bcad1abfeb911d48430d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e71cf74a5d61ce3dc228bcad1abfeb911d48430d"}], "stats": {"total": 28, "additions": 16, "deletions": 12}, "files": [{"sha": "44de6022d05481641af09693ca938f4ceef70053", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ca876c398d856b99a3427eabea5a992f328ee2d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ca876c398d856b99a3427eabea5a992f328ee2d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5ca876c398d856b99a3427eabea5a992f328ee2d", "patch": "@@ -1,3 +1,9 @@\n+2018-01-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/predicates.md (constant_call_address_operand):\n+\tRewrite ix86_indirect_branch_register logic.\n+\t(sibcall_insn_operand): Likewise.\n+\n 2018-01-15  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/constraints.md (Bs): Replace"}, {"sha": "6ec7ff2e784f4c9952ecd101b5d57ee157b31df0", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ca876c398d856b99a3427eabea5a992f328ee2d/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ca876c398d856b99a3427eabea5a992f328ee2d/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=5ca876c398d856b99a3427eabea5a992f328ee2d", "patch": "@@ -710,24 +710,22 @@\n   (ior (match_test \"constant_call_address_operand\n \t\t     (op, mode == VOIDmode ? mode : Pmode)\")\n        (match_operand 0 \"call_register_no_elim_operand\")\n-       (ior (and (not (match_test \"TARGET_X32\n-\t\t\t\t   || ix86_indirect_branch_register\"))\n-\t\t (match_operand 0 \"memory_operand\"))\n-\t    (and (match_test \"TARGET_X32 && Pmode == DImode\n-\t\t\t      && !ix86_indirect_branch_register\")\n-\t\t (match_operand 0 \"GOT_memory_operand\")))))\n+       (and (not (match_test \"ix86_indirect_branch_register\"))\n+\t    (ior (and (not (match_test \"TARGET_X32\"))\n+\t\t      (match_operand 0 \"memory_operand\"))\n+\t\t (and (match_test \"TARGET_X32 && Pmode == DImode\")\n+\t\t      (match_operand 0 \"GOT_memory_operand\"))))))\n \n ;; Similarly, but for tail calls, in which we cannot allow memory references.\n (define_special_predicate \"sibcall_insn_operand\"\n   (ior (match_test \"constant_call_address_operand\n \t\t     (op, mode == VOIDmode ? mode : Pmode)\")\n        (match_operand 0 \"register_no_elim_operand\")\n-       (ior (and (not (match_test \"TARGET_X32\n-\t\t\t\t   || ix86_indirect_branch_register\"))\n-\t\t (match_operand 0 \"sibcall_memory_operand\"))\n-\t    (and (match_test \"TARGET_X32 && Pmode == DImode\n-\t\t\t      && !ix86_indirect_branch_register\")\n-\t\t (match_operand 0 \"GOT_memory_operand\")))))\n+       (and (not (match_test \"ix86_indirect_branch_register\"))\n+\t    (ior (and (not (match_test \"TARGET_X32\"))\n+\t\t      (match_operand 0 \"sibcall_memory_operand\"))\n+\t\t (and (match_test \"TARGET_X32 && Pmode == DImode\")\n+\t\t      (match_operand 0 \"GOT_memory_operand\"))))))\n \n ;; Return true if OP is a 32-bit GOT symbol operand.\n (define_predicate \"GOT32_symbol_operand\""}]}