{"sha": "dc829c7613ddf562d1aecaf22eda965e87108ac8", "node_id": "C_kwDOANBUbNoAKGRjODI5Yzc2MTNkZGY1NjJkMWFlY2FmMjJlZGE5NjVlODcxMDhhYzg", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-09-21T09:18:48Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-09-21T11:33:40Z"}, "message": "[PR106967] Set known NANs to undefined for flag_finite_math_only.\n\nExplicit NANs in the IL can be treated as undefined for\nflag_finite_math_only.  This causes all the right things to happen wrt\nthreading, folding, etc.  It also saves us special casing throughout.\n\n\tPR tree-optimization/106967\n\ngcc/ChangeLog:\n\n\t* value-range.cc (frange::set): Set known NANs to undefined for\n\tflag_finite_math_only.", "tree": {"sha": "7ee6f7e4ba6a079f22570442ff09bec1b7bfdb5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ee6f7e4ba6a079f22570442ff09bec1b7bfdb5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc829c7613ddf562d1aecaf22eda965e87108ac8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc829c7613ddf562d1aecaf22eda965e87108ac8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc829c7613ddf562d1aecaf22eda965e87108ac8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc829c7613ddf562d1aecaf22eda965e87108ac8/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "324fa420b66bc084dd5b20644c6ee7b35be90c00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/324fa420b66bc084dd5b20644c6ee7b35be90c00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/324fa420b66bc084dd5b20644c6ee7b35be90c00"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "7e8028eced2a72e57225555e88f3ea28145d1313", "filename": "gcc/value-range.cc", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc829c7613ddf562d1aecaf22eda965e87108ac8/gcc%2Fvalue-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc829c7613ddf562d1aecaf22eda965e87108ac8/gcc%2Fvalue-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.cc?ref=dc829c7613ddf562d1aecaf22eda965e87108ac8", "patch": "@@ -313,8 +313,13 @@ frange::set (tree min, tree max, value_range_kind kind)\n       gcc_checking_assert (real_identical (TREE_REAL_CST_PTR (min),\n \t\t\t\t\t   TREE_REAL_CST_PTR (max)));\n       tree type = TREE_TYPE (min);\n-      bool sign = real_isneg (TREE_REAL_CST_PTR (min));\n-      set_nan (type, sign);\n+      if (HONOR_NANS (type))\n+\t{\n+\t  bool sign = real_isneg (TREE_REAL_CST_PTR (min));\n+\t  set_nan (type, sign);\n+\t}\n+      else\n+\tset_undefined ();\n       return;\n     }\n "}]}