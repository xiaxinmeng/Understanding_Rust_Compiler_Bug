{"sha": "5a6c36ae14d91046a866b2ff31c0aab77c3c42f8", "node_id": "C_kwDOANBUbNoAKDVhNmMzNmFlMTRkOTEwNDZhODY2YjJmZjMxYzBhYWI3N2MzYzQyZjg", "commit": {"author": {"name": "Patrick Bernardi", "email": "bernardi@adacore.com", "date": "2021-09-28T18:00:09Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-11T13:38:09Z"}, "message": "[Ada] RTEMS: use default stack checking emulation package\n\ngcc/ada/\n\n\t* Makefile.rtl (RTEMS): Add s-stchop.o to\n\tEXTRA_GNATRTL_NONTASKING_OBJS, remove s-stchop__rtems.adb.\n\t* libgnat/s-stchop__rtems.adb: Removed.", "tree": {"sha": "03df261867cf4751ff376eaa3515892bf29d2151", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03df261867cf4751ff376eaa3515892bf29d2151"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a6c36ae14d91046a866b2ff31c0aab77c3c42f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a6c36ae14d91046a866b2ff31c0aab77c3c42f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a6c36ae14d91046a866b2ff31c0aab77c3c42f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a6c36ae14d91046a866b2ff31c0aab77c3c42f8/comments", "author": {"login": "burratoo", "id": 23646118, "node_id": "MDQ6VXNlcjIzNjQ2MTE4", "avatar_url": "https://avatars.githubusercontent.com/u/23646118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/burratoo", "html_url": "https://github.com/burratoo", "followers_url": "https://api.github.com/users/burratoo/followers", "following_url": "https://api.github.com/users/burratoo/following{/other_user}", "gists_url": "https://api.github.com/users/burratoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/burratoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/burratoo/subscriptions", "organizations_url": "https://api.github.com/users/burratoo/orgs", "repos_url": "https://api.github.com/users/burratoo/repos", "events_url": "https://api.github.com/users/burratoo/events{/privacy}", "received_events_url": "https://api.github.com/users/burratoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4dc82cc768d0f0bdf0ee6f5a3d53e3740ea890cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dc82cc768d0f0bdf0ee6f5a3d53e3740ea890cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dc82cc768d0f0bdf0ee6f5a3d53e3740ea890cf"}], "stats": {"total": 116, "additions": 2, "deletions": 114}, "files": [{"sha": "75d172518d0448c6808c895727563d07f9da287f", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a6c36ae14d91046a866b2ff31c0aab77c3c42f8/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a6c36ae14d91046a866b2ff31c0aab77c3c42f8/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=5a6c36ae14d91046a866b2ff31c0aab77c3c42f8", "patch": "@@ -2057,9 +2057,10 @@ ifeq ($(strip $(filter-out rtems%,$(target_os))),)\n   s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n   s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n   s-tpopsp.adb<libgnarl/s-tpopsp__tls.adb \\\n-  s-stchop.adb<libgnat/s-stchop__rtems.adb \\\n   s-interr.adb<libgnarl/s-interr__hwint.adb\n \n+  EXTRA_GNATRTL_NONTASKING_OBJS += s-stchop.o\n+\n   ifeq ($(strip $(filter-out arm%, $(target_cpu))),)\n     EH_MECHANISM=-arm\n   else"}, {"sha": "f273f2914608844ffc51185ae807c57e7416cc13", "filename": "gcc/ada/libgnat/s-stchop__rtems.adb", "status": "removed", "additions": 0, "deletions": 113, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dc82cc768d0f0bdf0ee6f5a3d53e3740ea890cf/gcc%2Fada%2Flibgnat%2Fs-stchop__rtems.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dc82cc768d0f0bdf0ee6f5a3d53e3740ea890cf/gcc%2Fada%2Flibgnat%2Fs-stchop__rtems.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-stchop__rtems.adb?ref=4dc82cc768d0f0bdf0ee6f5a3d53e3740ea890cf", "patch": "@@ -1,113 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n---                                                                          --\n---     S Y S T E M . S T A C K _ C H E C K I N G . O P E R A T I O N S      --\n---                                                                          --\n---                                  B o d y                                 --\n---                                                                          --\n---          Copyright (C) 1999-2021, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is the RTEMS version of this package.\n---  This file should be kept synchronized with the general implementation\n---  provided by s-stchop.adb.\n-\n-pragma Restrictions (No_Elaboration_Code);\n---  We want to guarantee the absence of elaboration code because the\n---  binder does not handle references to this package.\n-\n-with Ada.Exceptions;\n-\n-with Interfaces.C; use Interfaces.C;\n-\n-package body System.Stack_Checking.Operations is\n-\n-   ----------------------------\n-   -- Invalidate_Stack_Cache --\n-   ----------------------------\n-\n-   procedure Invalidate_Stack_Cache (Any_Stack : Stack_Access) is\n-      pragma Warnings (Off, Any_Stack);\n-   begin\n-      Cache := Null_Stack;\n-   end Invalidate_Stack_Cache;\n-\n-   -----------------------------\n-   -- Notify_Stack_Attributes --\n-   -----------------------------\n-\n-   procedure Notify_Stack_Attributes\n-     (Initial_SP : System.Address;\n-      Size       : System.Storage_Elements.Storage_Offset)\n-   is\n-\n-      --  RTEMS keeps all the information we need.\n-\n-      pragma Unreferenced (Size);\n-      pragma Unreferenced (Initial_SP);\n-\n-   begin\n-      null;\n-   end Notify_Stack_Attributes;\n-\n-   -----------------\n-   -- Stack_Check --\n-   -----------------\n-\n-   function Stack_Check\n-     (Stack_Address : System.Address) return Stack_Access\n-   is\n-      pragma Unreferenced (Stack_Address);\n-\n-      --  RTEMS has a routine to check if the stack is blown.\n-      --  It returns a C99 bool.\n-      function rtems_stack_checker_is_blown return Interfaces.C.unsigned_char;\n-      pragma Import (C,\n-         rtems_stack_checker_is_blown, \"rtems_stack_checker_is_blown\");\n-\n-   begin\n-      --  RTEMS has a routine to check this.  So use it.\n-\n-      if rtems_stack_checker_is_blown /= 0 then\n-         Ada.Exceptions.Raise_Exception\n-           (E       => Storage_Error'Identity,\n-            Message => \"stack overflow detected\");\n-      end if;\n-\n-      return null;\n-\n-   end Stack_Check;\n-\n-   ------------------------\n-   -- Update_Stack_Cache --\n-   ------------------------\n-\n-   procedure Update_Stack_Cache (Stack : Stack_Access) is\n-   begin\n-      if not Multi_Processor then\n-         Cache := Stack;\n-      end if;\n-   end Update_Stack_Cache;\n-\n-end System.Stack_Checking.Operations;"}]}