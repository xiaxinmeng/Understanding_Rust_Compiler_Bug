{"sha": "3759108f07fed59b39110d864e43e7ca5df2e6ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc1OTEwOGYwN2ZlZDU5YjM5MTEwZDg2NGU0M2U3Y2E1ZGYyZTZhZA==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2014-12-09T17:32:58Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-12-09T17:32:58Z"}, "message": "[AARCH64][5/5] Add macro fusion support for cmp/b.X for ThunderX\n\n\t* config/aarch64/aarch64.c (AARCH64_FUSE_CMP_BRANCH): New define.\n\t(thunderx_tunings): Add AARCH64_FUSE_CMP_BRANCH to fuseable_ops.\n\t(aarch_macro_fusion_pair_p): Handle AARCH64_FUSE_CMP_BRANCH.\n\nFrom-SVN: r218525", "tree": {"sha": "bc705245e9ed184ea7c5e73b6c6d78ccd5891d86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc705245e9ed184ea7c5e73b6c6d78ccd5891d86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3759108f07fed59b39110d864e43e7ca5df2e6ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3759108f07fed59b39110d864e43e7ca5df2e6ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3759108f07fed59b39110d864e43e7ca5df2e6ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3759108f07fed59b39110d864e43e7ca5df2e6ad/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3b21bfb10eaffa456bd9065b52e9f39460aad17d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b21bfb10eaffa456bd9065b52e9f39460aad17d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b21bfb10eaffa456bd9065b52e9f39460aad17d"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "e680ae9404cf8b9e123dbf172b47ed55db72f329", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3759108f07fed59b39110d864e43e7ca5df2e6ad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3759108f07fed59b39110d864e43e7ca5df2e6ad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3759108f07fed59b39110d864e43e7ca5df2e6ad", "patch": "@@ -1,3 +1,10 @@\n+2014-12-09  Andrew Pinski  apinski@cavium.com\n+            Kyrylo Tkachov  kyrylo.tkachov@arm.com\n+\n+\t* config/aarch64/aarch64.c (AARCH64_FUSE_CMP_BRANCH): New define.\n+\t(thunderx_tunings): Add AARCH64_FUSE_CMP_BRANCH to fuseable_ops.\n+\t(aarch_macro_fusion_pair_p): Handle AARCH64_FUSE_CMP_BRANCH.\n+\n 2014-12-09  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR jit/64166"}, {"sha": "03f3ac497f89cc208c9d17e011d563069d131241", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3759108f07fed59b39110d864e43e7ca5df2e6ad/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3759108f07fed59b39110d864e43e7ca5df2e6ad/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=3759108f07fed59b39110d864e43e7ca5df2e6ad", "patch": "@@ -310,6 +310,7 @@ static const struct cpu_vector_cost cortexa57_vector_cost =\n #define AARCH64_FUSE_ADRP_ADD\t(1 << 1)\n #define AARCH64_FUSE_MOVK_MOVK\t(1 << 2)\n #define AARCH64_FUSE_ADRP_LDR\t(1 << 3)\n+#define AARCH64_FUSE_CMP_BRANCH\t(1 << 4)\n \n #if HAVE_DESIGNATED_INITIALIZERS && GCC_VERSION >= 2007\n __extension__\n@@ -356,7 +357,7 @@ static const struct tune_params thunderx_tunings =\n   &generic_vector_cost,\n   NAMED_PARAM (memmov_cost, 6),\n   NAMED_PARAM (issue_rate, 2),\n-  NAMED_PARAM (fuseable_ops, AARCH64_FUSE_NOTHING)\n+  NAMED_PARAM (fuseable_ops, AARCH64_FUSE_CMP_BRANCH)\n };\n \n /* A processor implementing AArch64.  */\n@@ -10379,6 +10380,20 @@ aarch_macro_fusion_pair_p (rtx_insn *prev, rtx_insn *curr)\n         }\n     }\n \n+  if ((aarch64_tune_params->fuseable_ops & AARCH64_FUSE_CMP_BRANCH)\n+      && any_condjump_p (curr))\n+    {\n+      enum attr_type prev_type = get_attr_type (prev);\n+\n+      /* FIXME: this misses some which is considered simple arthematic\n+         instructions for ThunderX.  Simple shifts are missed here.  */\n+      if (prev_type == TYPE_ALUS_SREG\n+          || prev_type == TYPE_ALUS_IMM\n+          || prev_type == TYPE_LOGICS_REG\n+          || prev_type == TYPE_LOGICS_IMM)\n+        return true;\n+    }\n+\n   return false;\n }\n "}]}