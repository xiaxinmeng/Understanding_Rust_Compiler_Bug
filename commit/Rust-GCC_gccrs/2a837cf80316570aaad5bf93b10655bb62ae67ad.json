{"sha": "2a837cf80316570aaad5bf93b10655bb62ae67ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE4MzdjZjgwMzE2NTcwYWFhZDViZjkzYjEwNjU1YmI2MmFlNjdhZA==", "commit": {"author": {"name": "Jerry Quinn", "email": "jlquinn@optonline.net", "date": "2004-01-27T15:45:43Z"}, "committer": {"name": "Jerry Quinn", "email": "jlquinn@gcc.gnu.org", "date": "2004-01-27T15:45:43Z"}, "message": "re PR libstdc++/11584 (ios::iword() fails to zero-initialize storage on failure)\n\n2004-01-27  Jerry Quinn  <jlquinn@optonline.net>\n\n\tPR libstdc++/11584\n\t* include/bits/ios_base.h (ios_base::_M_grow_words):  Add\n        iword/pword selector.\n\t(ios_base::iword, ios_base::pword):  Use it.\n\t* src/ios.cc (ios_base::_M_grow_words):  Clear _M_word_zero\n        iword or pword member on alloc failure.\n\t* testsuite/27_io/ios_base/storage/11584.cc:  New test.\n\nFrom-SVN: r76725", "tree": {"sha": "e4ec8a4b95333d1b256de1ca1fd838fec57141c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4ec8a4b95333d1b256de1ca1fd838fec57141c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a837cf80316570aaad5bf93b10655bb62ae67ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a837cf80316570aaad5bf93b10655bb62ae67ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a837cf80316570aaad5bf93b10655bb62ae67ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a837cf80316570aaad5bf93b10655bb62ae67ad/comments", "author": {"login": "jlquinn", "id": 826841, "node_id": "MDQ6VXNlcjgyNjg0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/826841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlquinn", "html_url": "https://github.com/jlquinn", "followers_url": "https://api.github.com/users/jlquinn/followers", "following_url": "https://api.github.com/users/jlquinn/following{/other_user}", "gists_url": "https://api.github.com/users/jlquinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlquinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlquinn/subscriptions", "organizations_url": "https://api.github.com/users/jlquinn/orgs", "repos_url": "https://api.github.com/users/jlquinn/repos", "events_url": "https://api.github.com/users/jlquinn/events{/privacy}", "received_events_url": "https://api.github.com/users/jlquinn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6e198ee05d37cde3bd5f32839c6ad4e01a679911", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e198ee05d37cde3bd5f32839c6ad4e01a679911", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e198ee05d37cde3bd5f32839c6ad4e01a679911"}], "stats": {"total": 87, "additions": 83, "deletions": 4}, "files": [{"sha": "65c10db3f2d4e19d98a731de99f4fe115af5473b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a837cf80316570aaad5bf93b10655bb62ae67ad/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a837cf80316570aaad5bf93b10655bb62ae67ad/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2a837cf80316570aaad5bf93b10655bb62ae67ad", "patch": "@@ -1,3 +1,13 @@\n+2004-01-27  Jerry Quinn  <jlquinn@optonline.net>\n+\n+\tPR libstdc++/11584\n+\t* include/bits/ios_base.h (ios_base::_M_grow_words):  Add\n+        iword/pword selector.\n+\t(ios_base::iword, ios_base::pword):  Use it.\n+\t* src/ios.cc (ios_base::_M_grow_words):  Clear _M_word_zero\n+        iword or pword member on alloc failure.\n+\t* testsuite/27_io/ios_base/storage/11584.cc:  New test.\n+\n 2004-01-27  Ulrich Weigand  <uweigand@de.ibm.com>\n \t    PJ Darcy  <darcypj@us.ibm.com>\n "}, {"sha": "b937ac5c56718a19541b6a29897d7492f51e06ef", "filename": "libstdc++-v3/include/bits/ios_base.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a837cf80316570aaad5bf93b10655bb62ae67ad/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a837cf80316570aaad5bf93b10655bb62ae67ad/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fios_base.h?ref=2a837cf80316570aaad5bf93b10655bb62ae67ad", "patch": "@@ -471,7 +471,7 @@ namespace std\n     _Words* \t\t_M_word;\n  \n     _Words& \n-    _M_grow_words(int __index);\n+    _M_grow_words(int __index, bool __iword);\n \n     // Members for locale and locale caching.\n     locale \t\t_M_ios_locale;\n@@ -692,7 +692,7 @@ namespace std\n     iword(int __ix)\n     {\n       _Words& __word = (__ix < _M_word_size) \n-\t\t\t? _M_word[__ix] : _M_grow_words(__ix);\n+\t\t\t? _M_word[__ix] : _M_grow_words(__ix, true);\n       return __word._M_iword;\n     }\n \n@@ -713,7 +713,7 @@ namespace std\n     pword(int __ix)\n     {\n       _Words& __word = (__ix < _M_word_size) \n-\t\t\t? _M_word[__ix] : _M_grow_words(__ix);\n+\t\t\t? _M_word[__ix] : _M_grow_words(__ix, false);\n       return __word._M_pword;\n     }\n "}, {"sha": "6f987c22395fa705f7f197e5c11954790bc27f83", "filename": "libstdc++-v3/src/ios.cc", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a837cf80316570aaad5bf93b10655bb62ae67ad/libstdc%2B%2B-v3%2Fsrc%2Fios.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a837cf80316570aaad5bf93b10655bb62ae67ad/libstdc%2B%2B-v3%2Fsrc%2Fios.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fios.cc?ref=2a837cf80316570aaad5bf93b10655bb62ae67ad", "patch": "@@ -147,7 +147,7 @@ namespace std\n \n   // 27.4.2.5  iword/pword storage\n   ios_base::_Words&\n-  ios_base::_M_grow_words(int ix)\n+  ios_base::_M_grow_words(int ix, bool iword)\n   {\n     // Precondition: _M_word_size <= ix\n     int newsize = _S_local_word_size;\n@@ -165,6 +165,10 @@ namespace std\n \t\tif (_M_streambuf_state & _M_exception)\n \t\t  __throw_ios_failure(__N(\"ios_base::_M_grow_words \"\n \t\t\t\t      \"allocation failed\"));\n+\t\tif (iword)\n+\t\t  _M_word_zero._M_iword = 0;\n+\t\telse\n+\t\t  _M_word_zero._M_pword = 0;\n \t\treturn _M_word_zero;\n \t      }\n \t    for (int i = 0; i < _M_word_size; i++) \n@@ -180,6 +184,10 @@ namespace std\n \t    _M_streambuf_state |= badbit;\n \t    if (_M_streambuf_state & _M_exception)\n \t      __throw_ios_failure(__N(\"ios_base::_M_grow_words is not valid\"));\n+\t    if (iword)\n+\t      _M_word_zero._M_iword = 0;\n+\t    else\n+\t      _M_word_zero._M_pword = 0;\n \t    return _M_word_zero;\n \t  }\n       }"}, {"sha": "8b1a7a72d968553c6503d2c37350acbf87655b00", "filename": "libstdc++-v3/testsuite/27_io/ios_base/storage/11584.cc", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a837cf80316570aaad5bf93b10655bb62ae67ad/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fstorage%2F11584.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a837cf80316570aaad5bf93b10655bb62ae67ad/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fstorage%2F11584.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Fstorage%2F11584.cc?ref=2a837cf80316570aaad5bf93b10655bb62ae67ad", "patch": "@@ -0,0 +1,61 @@\n+// 2004-01-25 jlquinn@gcc.gnu.org\n+\n+// Copyright (C) 2004 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.4.2.5 ios_base storage functions\n+\n+#include <cstdlib>\n+#include <new>\n+#include <testsuite_hooks.h>\n+\n+int new_fails;\n+\n+void* operator new (size_t n)\n+{\n+    if (new_fails)\n+        throw std::bad_alloc();\n+\n+    return malloc(n);\n+}\n+\n+void operator delete (void *p) { free(p); }\n+void* operator new[] (size_t n) { return operator new(n); }\n+void operator delete[] (void *p) { operator delete(p); }\n+\n+int main ()\n+{\n+    const int i = std::ios::xalloc ();\n+\n+    new_fails = 1;\n+\n+    // Successive accesses to failure storage clears to zero.\n+    std::cout.iword(100) = 0xdeadbeef;\n+    VERIFY(std::cout.iword(100) == 0);\n+\n+    // Access to pword failure storage shouldn't clear iword pword storage.\n+    long& lr = std::cout.iword(100);\n+    lr = 0xdeadbeef;\n+\n+    void* pv = std::cout.pword(100);\n+    VERIFY(pv == 0);\n+    VERIFY(lr == 0xdeadbeef);\n+    \n+    return 0;\n+}\n+"}]}