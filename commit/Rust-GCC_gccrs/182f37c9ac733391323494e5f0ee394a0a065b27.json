{"sha": "182f37c9ac733391323494e5f0ee394a0a065b27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgyZjM3YzlhYzczMzM5MTMyMzQ5NGU1ZjBlZTM5NGEwYTA2NWIyNw==", "commit": {"author": {"name": "Naveen H.S", "email": "naveenh@gcc.gnu.org", "date": "2016-12-21T08:37:47Z"}, "committer": {"name": "Naveen H.S", "email": "naveenh@gcc.gnu.org", "date": "2016-12-21T08:37:47Z"}, "message": "match.pd (max:c @0 (plus@2 @0 INTEGER_CST@1)): New Pattern.\n\n2016-12-22  Andrew Pinski  <apinski@cavium.com>\n\t    Naveen H.S <Naveen.Hurugalawadi@cavium.com>\n\ngcc\n        * match.pd (max:c @0 (plus@2 @0 INTEGER_CST@1)): New Pattern.\n\t(min:c @0 (plus@2 @0 INTEGER_CST@1)) : New Pattern.\ngcc/testsuite\n\t* gcc.dg/max.c: New Testcase.\n\t* gcc.dg/min.c: New Testcase.\n\nFrom-SVN: r243838", "tree": {"sha": "ce38343c14f2c6bf2a64434cb40493a12d00cd0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce38343c14f2c6bf2a64434cb40493a12d00cd0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/182f37c9ac733391323494e5f0ee394a0a065b27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/182f37c9ac733391323494e5f0ee394a0a065b27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/182f37c9ac733391323494e5f0ee394a0a065b27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/182f37c9ac733391323494e5f0ee394a0a065b27/comments", "author": null, "committer": null, "parents": [{"sha": "899614c10b3e214e0a5f9699565e83ba1627213b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/899614c10b3e214e0a5f9699565e83ba1627213b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/899614c10b3e214e0a5f9699565e83ba1627213b"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "bd41f389d227ebaead379a867a8c1e0cd883d556", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182f37c9ac733391323494e5f0ee394a0a065b27/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182f37c9ac733391323494e5f0ee394a0a065b27/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=182f37c9ac733391323494e5f0ee394a0a065b27", "patch": "@@ -1,3 +1,8 @@\n+2016-12-22  Andrew Pinski  <apinski@cavium.com>\n+\n+        * match.pd (max:c @0 (plus@2 @0 INTEGER_CST@1)): New Pattern.\n+\t(min:c @0 (plus@2 @0 INTEGER_CST@1)) : New Pattern.\n+\n 2016-12-20  James Greenhalgh  <james.greenhalghj@arm.com>\n \n \t* common.opt (excess_precision): Tag as SetByCombined."}, {"sha": "1570ac827846150d71f4a9ecb5f6dc795b28eaaf", "filename": "gcc/match.pd", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182f37c9ac733391323494e5f0ee394a0a065b27/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182f37c9ac733391323494e5f0ee394a0a065b27/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=182f37c9ac733391323494e5f0ee394a0a065b27", "patch": "@@ -1373,6 +1373,24 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n        && operand_equal_p (@1, TYPE_MIN_VALUE (type), OEP_ONLY_CONST))\n    @0)))\n \n+/* max (a, a + CST) -> a + CST where CST is positive.  */\n+/* max (a, a + CST) -> a where CST is negative.  */\n+(simplify\n+ (max:c @0 (plus@2 @0 INTEGER_CST@1))\n+  (if (TYPE_OVERFLOW_UNDEFINED (TREE_TYPE (@0)))\n+   (if (tree_int_cst_sgn (@1) > 0)\n+    @2\n+    @0)))\n+\n+/* min (a, a + CST) -> a where CST is positive.  */\n+/* min (a, a + CST) -> a + CST where CST is negative. */\n+(simplify\n+ (min:c @0 (plus@2 @0 INTEGER_CST@1))\n+  (if (TYPE_OVERFLOW_UNDEFINED (TREE_TYPE (@0)))\n+   (if (tree_int_cst_sgn (@1) > 0)\n+    @0\n+    @2)))\n+\n /* (convert (minmax ((convert (x) c)))) -> minmax (x c) if x is promoted\n    and the outer convert demotes the expression back to x's type.  */\n (for minmax (min max)"}, {"sha": "be5673d69ea4b233e79ab4317999b9658b933f7d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182f37c9ac733391323494e5f0ee394a0a065b27/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182f37c9ac733391323494e5f0ee394a0a065b27/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=182f37c9ac733391323494e5f0ee394a0a065b27", "patch": "@@ -1,3 +1,8 @@\n+2016-12-22  Naveen H.S  <Naveen.Hurugalawadi@cavium.com>\n+\n+\t* gcc.dg/max.c: New Testcase.\n+\t* gcc.dg/min.c: New Testcase.\n+\n 2016-12-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/77767"}, {"sha": "e9798104228440f075a7dd1397d394e0fe23dd5d", "filename": "gcc/testsuite/gcc.dg/max.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182f37c9ac733391323494e5f0ee394a0a065b27/gcc%2Ftestsuite%2Fgcc.dg%2Fmax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182f37c9ac733391323494e5f0ee394a0a065b27/gcc%2Ftestsuite%2Fgcc.dg%2Fmax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fmax.c?ref=182f37c9ac733391323494e5f0ee394a0a065b27", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+static inline int\n+max (int a, int b)\n+{\n+  return a < b ? b : a;\n+}\n+\n+int\n+test_00 (int a)\n+{\n+  return max (a, a + 8);\n+}\n+\n+int\n+test_01 (int a)\n+{\n+  return max (a, a - 8);\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"MAX_EXPR\" \"optimized\" } } */"}, {"sha": "d8472702e9c08128f14aae0d31cc0e82a0ad1fb8", "filename": "gcc/testsuite/gcc.dg/min.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/182f37c9ac733391323494e5f0ee394a0a065b27/gcc%2Ftestsuite%2Fgcc.dg%2Fmin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/182f37c9ac733391323494e5f0ee394a0a065b27/gcc%2Ftestsuite%2Fgcc.dg%2Fmin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fmin.c?ref=182f37c9ac733391323494e5f0ee394a0a065b27", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+static inline int\n+min (int a, int b)\n+{\n+  return a < b ? a : b;\n+}\n+\n+int\n+test_00 (int a)\n+{\n+  return min (a, a + 8);\n+}\n+\n+int\n+test_01 (int a)\n+{\n+  return min (a, a - 8);\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"MIN_EXPR\" \"optimized\" } } */"}]}