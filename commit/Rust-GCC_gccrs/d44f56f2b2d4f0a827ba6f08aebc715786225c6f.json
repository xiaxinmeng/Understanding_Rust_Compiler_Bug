{"sha": "d44f56f2b2d4f0a827ba6f08aebc715786225c6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ0ZjU2ZjJiMmQ0ZjBhODI3YmE2ZjA4YWViYzcxNTc4NjIyNWM2Zg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-02-09T08:57:04Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-02-10T08:25:38Z"}, "message": "ICF: fix memory leak\n\ngcc/ChangeLog:\n\n\tPR ipa/99003\n\t* ipa-icf.c (sem_item::add_reference): Fix memory leak when\n\ta reference exists.", "tree": {"sha": "92b2979ebd7f5f45cf6e913f43812d0472a12c95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92b2979ebd7f5f45cf6e913f43812d0472a12c95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d44f56f2b2d4f0a827ba6f08aebc715786225c6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d44f56f2b2d4f0a827ba6f08aebc715786225c6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d44f56f2b2d4f0a827ba6f08aebc715786225c6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d44f56f2b2d4f0a827ba6f08aebc715786225c6f/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1782d8ad10dc6b556e118fd25fdaff04ce54dde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1782d8ad10dc6b556e118fd25fdaff04ce54dde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1782d8ad10dc6b556e118fd25fdaff04ce54dde"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "687ad8d45b70c5b1fea66f6f6db23b1a11ab205d", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d44f56f2b2d4f0a827ba6f08aebc715786225c6f/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d44f56f2b2d4f0a827ba6f08aebc715786225c6f/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=d44f56f2b2d4f0a827ba6f08aebc715786225c6f", "patch": "@@ -165,8 +165,11 @@ sem_item::add_reference (ref_map *refs,\n   unsigned index = reference_count++;\n   bool existed;\n \n-  vec<sem_item *> &v\n-    = refs->get_or_insert (new sem_usage_pair (target, index), &existed);\n+  sem_usage_pair *pair = new sem_usage_pair (target, index);\n+  vec<sem_item *> &v = refs->get_or_insert (pair, &existed);\n+  if (existed)\n+    delete pair;\n+\n   v.safe_push (this);\n   bitmap_set_bit (target->usage_index_bitmap, index);\n   refs_set.add (target->node);"}]}