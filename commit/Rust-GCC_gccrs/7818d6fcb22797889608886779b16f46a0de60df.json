{"sha": "7818d6fcb22797889608886779b16f46a0de60df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzgxOGQ2ZmNiMjI3OTc4ODk2MDg4ODY3NzliMTZmNDZhMGRlNjBkZg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "1997-08-27T23:20:52Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-08-27T23:20:52Z"}, "message": "Make the gcc config.guess exec the toplevel config.guess.\n\nMake the gcc config.guess exec the toplevel config.guess.  Update the toplevel\nconfig.guess from the gcc config.guess.\n\nFrom-SVN: r14976", "tree": {"sha": "a7384783f6c5da2e4624b329a671fcf0d522d55e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7384783f6c5da2e4624b329a671fcf0d522d55e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7818d6fcb22797889608886779b16f46a0de60df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7818d6fcb22797889608886779b16f46a0de60df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7818d6fcb22797889608886779b16f46a0de60df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7818d6fcb22797889608886779b16f46a0de60df/comments", "author": null, "committer": null, "parents": [{"sha": "ca20876d33c33c352fae77f8edebfe9a2d03fb19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca20876d33c33c352fae77f8edebfe9a2d03fb19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca20876d33c33c352fae77f8edebfe9a2d03fb19"}], "stats": {"total": 889, "additions": 33, "deletions": 856}, "files": [{"sha": "341c887384a9c3e99abdc4157e6c936da42c58c4", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7818d6fcb22797889608886779b16f46a0de60df/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7818d6fcb22797889608886779b16f46a0de60df/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=7818d6fcb22797889608886779b16f46a0de60df", "patch": "@@ -1,3 +1,7 @@\n+Wed Aug 27 16:15:11 1997  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* config.guess: Update from gcc directory.\n+\n Wed Aug 20 19:57:37 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* Makefile.in (BISON, YACC): Use $$s."}, {"sha": "1448103304ddd12d774d4d372c4bd9617f0f3237", "filename": "config.guess", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7818d6fcb22797889608886779b16f46a0de60df/config.guess", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7818d6fcb22797889608886779b16f46a0de60df/config.guess", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config.guess?ref=7818d6fcb22797889608886779b16f46a0de60df", "patch": "@@ -157,6 +157,18 @@ EOF\n     sun3*:SunOS:*:*)\n \techo m68k-sun-sunos${UNAME_RELEASE}\n \texit 0 ;;\n+    sun*:*:4.2BSD:*)\n+\tUNAME_RELEASE=`(head -1 /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`\n+\ttest \"x${UNAME_RELEASE}\" = \"x\" && UNAME_RELEASE=3\n+\tcase \"`/bin/arch`\" in\n+\t    sun3)\n+\t\techo m68k-sun-sunos${UNAME_RELEASE}\n+\t\t;;\n+\t    sun4)\n+\t\techo sparc-sun-sunos${UNAME_RELEASE}\n+\t\t;;\n+\tesac\n+\texit 0 ;;\n     aushp:SunOS:*:*)\n \techo sparc-auspex-sunos${UNAME_RELEASE}\n \texit 0 ;;\n@@ -494,6 +506,7 @@ EOF\n \t\tret \\$31,(\\$26),1\n \t\t.end main\n EOF\n+\t\tLIBC=\"\"\n \t\t${CC-cc} dummy.s -o dummy 2>/dev/null\n \t\tif test \"$?\" = 0 ; then\n \t\t\t./dummy\n@@ -504,10 +517,16 @@ EOF\n \t\t\t2)\t\n \t\t\t\t\tUNAME_MACHINE=\"alphaev56\"\n \t\t\t\t;;\t\n-\t\tesac\t\n-\t  fi\t\n-\t  rm -f dummy.s dummy\n-\t  echo ${UNAME_MACHINE}-unknown-linux-gnu ; exit 0\n+\t\t\tesac\t\n+\n+\t\t\tobjdump --private-headers dummy | \\\n+\t\t\t  grep ld.so.1 > /dev/null\n+\t\t\tif test \"$?\" = 0 ; then\n+\t\t\t\tLIBC=\"libc1\"\n+\t\t\tfi\n+\t\tfi\t\n+\t\trm -f dummy.s dummy\n+\t\techo ${UNAME_MACHINE}-unknown-linux-gnu${LIBC} ; exit 0\n \telif test \"${UNAME_MACHINE}\" = \"mips\" ; then\n \t  cat >dummy.c <<EOF\n main(argc, argv)"}, {"sha": "5d5d718a25bedd002f8b879de9e3d78491f24d91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7818d6fcb22797889608886779b16f46a0de60df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7818d6fcb22797889608886779b16f46a0de60df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7818d6fcb22797889608886779b16f46a0de60df", "patch": "@@ -1,5 +1,7 @@\n Wed Aug 27 16:08:43 1997  Jim Wilson  <wilson@cygnus.com>\n \n+\t* config.guess: Replace with script that uses ../config.guess.\n+\n \t* config/alpha/elf.h (DEFAULT_VTABLE_THUNKS): New. Defined as 1\n \tif USE_GNULIBC_1 is not defined.\n "}, {"sha": "fd7602dabd9a86952ae3c7d26b213148893853c8", "filename": "gcc/config.guess", "status": "modified", "additions": 4, "deletions": 852, "changes": 856, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7818d6fcb22797889608886779b16f46a0de60df/gcc%2Fconfig.guess", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7818d6fcb22797889608886779b16f46a0de60df/gcc%2Fconfig.guess", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.guess?ref=7818d6fcb22797889608886779b16f46a0de60df", "patch": "@@ -1,852 +1,4 @@\n-#! /bin/sh\n-# Attempt to guess a canonical system name.\n-#   Copyright (C) 1992, 93, 94, 95, 96, 1997 Free Software Foundation, Inc.\n-#\n-# This file is free software; you can redistribute it and/or modify it\n-# under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2 of the License, or\n-# (at your option) any later version.\n-#\n-# This program is distributed in the hope that it will be useful, but\n-# WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-# General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n-#\n-# As a special exception to the GNU General Public License, if you\n-# distribute this file as part of a program that contains a\n-# configuration script generated by Autoconf, you may include it under\n-# the same distribution terms that you use for the rest of that program.\n-\n-# Written by Per Bothner <bothner@cygnus.com>.\n-# The master version of this file is at the FSF in /home/gd/gnu/lib.\n-#\n-# This script attempts to guess a canonical system name similar to\n-# config.sub.  If it succeeds, it prints the system name on stdout, and\n-# exits with 0.  Otherwise, it exits with 1.\n-#\n-# The plan is that this can be called by configure scripts if you\n-# don't specify an explicit system type (host/target name).\n-#\n-# Only a few systems have been added to this list; please add others\n-# (but try to keep the structure clean).\n-#\n-\n-# This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n-# (ghazi@noc.rutgers.edu 8/24/94.)\n-if (test -f /.attbin/uname) >/dev/null 2>&1 ; then\n-\tPATH=$PATH:/.attbin ; export PATH\n-fi\n-\n-UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown\n-UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown\n-UNAME_SYSTEM=`(uname -s) 2>/dev/null` || UNAME_SYSTEM=unknown\n-UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown\n-\n-trap 'rm -f dummy.c dummy.o dummy; exit 1' 1 2 15\n-\n-# Note: order is significant - the case branches are not exclusive.\n-\n-case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n-    alpha:OSF1:*:*)\n-\t# A Vn.n version is a released version.\n-\t# A Tn.n version is a released field test version.\n-\t# A Xn.n version is an unreleased experimental baselevel.\n-\t# 1.2 uses \"1.2\" for uname -r.\n-\tcat <<EOF >dummy.s\n-\t.globl main\n-\t.ent main\n-main:\n-\t.frame \\$30,0,\\$26,0\n-\t.prologue 0\n-\t.long 0x47e03d84\n-\tcmoveq \\$4,0,\\$3\n-\taddl \\$3,\\$31,\\$0\n-\tret \\$31,(\\$26),1\n-\t.end main\n-EOF\n-\t${CC-cc} dummy.s -o dummy 2>/dev/null\n-\tif test \"$?\" = 0 ; then\n-\t\t./dummy\n-\t\tcase \"$?\" in\n-\t\t\t1)\n-\t\t\t\tUNAME_MACHINE=\"alphaev5\"\n-\t\t\t\t;;\n-\t\t\t2)\n-\t\t\t\tUNAME_MACHINE=\"alphaev56\"\n-\t\t\t\t;;\n-\t\tesac\n-\tfi\n-\trm -f dummy.s dummy\n-\techo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[VTX]//'`\n-\texit 0 ;;\n-    21064:Windows_NT:50:3)\n-\techo alpha-dec-winnt3.5\n-\texit 0 ;;\n-    Amiga*:UNIX_System_V:4.0:*)\n-\techo m68k-cbm-sysv4\n-\texit 0;;\n-    amiga:NetBSD:*:*)\n-      echo m68k-cbm-netbsd${UNAME_RELEASE}\n-      exit 0 ;;\n-    amiga:OpenBSD:*:*)\n-\techo m68k-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    arc64:OpenBSD:*:*)\n-\techo mips64el-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    arc:OpenBSD:*:*)\n-\techo mipsel-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    hkmips:OpenBSD:*:*)\n-\techo mips-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    pmax:OpenBSD:*:*)\n-\techo mipsel-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    sgi:OpenBSD:*:*)\n-\techo mips-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    wgrisc:OpenBSD:*:*)\n-\techo mipsel-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)\n-\techo arm-acorn-riscix${UNAME_RELEASE}\n-\texit 0;;\n-    arm32:NetBSD:*:*)\n-\techo arm-unknown-netbsd`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\\./'`\n-\texit 0 ;;\n-    SR2?01:HI-UX/MPP:*:*)\n-\techo hppa1.1-hitachi-hiuxmpp\n-\texit 0;;\n-    Pyramid*:OSx*:*:*|MIS*:OSx*:*:*)\n-\t# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.\n-\tif test \"`(/bin/universe) 2>/dev/null`\" = att ; then\n-\t\techo pyramid-pyramid-sysv3\n-\telse\n-\t\techo pyramid-pyramid-bsd\n-\tfi\n-\texit 0 ;;\n-    NILE:*:*:dcosx)\n-\techo pyramid-pyramid-svr4\n-\texit 0 ;;\n-    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n-\techo sparc-sun-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n-\texit 0 ;;\n-    i86pc:SunOS:5.*:*)\n-\techo i386-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n-\texit 0 ;;\n-    sun4*:SunOS:6*:*)\n-\t# According to config.sub, this is the proper way to canonicalize\n-\t# SunOS6.  Hard to guess exactly what SunOS6 will be like, but\n-\t# it's likely to be more like Solaris than SunOS4.\n-\techo sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n-\texit 0 ;;\n-    sun4*:SunOS:*:*)\n-\tcase \"`/usr/bin/arch -k`\" in\n-\t    Series*|S4*)\n-\t\tUNAME_RELEASE=`uname -v`\n-\t\t;;\n-\tesac\n-\t# Japanese Language versions have a version number like `4.1.3-JL'.\n-\techo sparc-sun-sunos`echo ${UNAME_RELEASE}|sed -e 's/-/_/'`\n-\texit 0 ;;\n-    sun3*:SunOS:*:*)\n-\techo m68k-sun-sunos${UNAME_RELEASE}\n-\texit 0 ;;\n-    sun*:*:4.2BSD:*)\n-\tUNAME_RELEASE=`(head -1 /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`\n-\ttest \"x${UNAME_RELEASE}\" = \"x\" && UNAME_RELEASE=3\n-\tcase \"`/bin/arch`\" in\n-\t    sun3)\n-\t\techo m68k-sun-sunos${UNAME_RELEASE}\n-\t\t;;\n-\t    sun4)\n-\t\techo sparc-sun-sunos${UNAME_RELEASE}\n-\t\t;;\n-\tesac\n-\texit 0 ;;\n-    aushp:SunOS:*:*)\n-\techo sparc-auspex-sunos${UNAME_RELEASE}\n-\texit 0 ;;\n-    atari*:NetBSD:*:*)\n-\techo m68k-atari-netbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    atari*:OpenBSD:*:*)\n-\techo m68k-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    sun3*:NetBSD:*:*)\n-\techo m68k-sun-netbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    sun3*:OpenBSD:*:*)\n-\techo m68k-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    mac68k:NetBSD:*:*)\n-\techo m68k-apple-netbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    mac68k:OpenBSD:*:*)\n-\techo m68k-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    mvme68k:OpenBSD:*:*)\n-\techo m68k-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    mvme88k:OpenBSD:*:*)\n-\techo m88k-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    powerpc:machten:*:*)\n-\techo powerpc-apple-machten${UNAME_RELEASE}\n-\texit 0 ;;\n-    RISC*:Mach:*:*)\n-\techo mips-dec-mach_bsd4.3\n-\texit 0 ;;\n-    RISC*:ULTRIX:*:*)\n-\techo mips-dec-ultrix${UNAME_RELEASE}\n-\texit 0 ;;\n-    VAX*:ULTRIX*:*:*)\n-\techo vax-dec-ultrix${UNAME_RELEASE}\n-\texit 0 ;;\n-    2020:CLIX:*:*)\n-\techo clipper-intergraph-clix${UNAME_RELEASE}\n-\texit 0 ;;\n-    mips:*:*:UMIPS | mips:*:*:RISCos)\n-\tsed 's/^\t//' << EOF >dummy.c\n-\tint main (argc, argv) int argc; char **argv; {\n-\t#if defined (host_mips) && defined (MIPSEB)\n-\t#if defined (SYSTYPE_SYSV)\n-\t  printf (\"mips-mips-riscos%ssysv\\n\", argv[1]); exit (0);\n-\t#endif\n-\t#if defined (SYSTYPE_SVR4)\n-\t  printf (\"mips-mips-riscos%ssvr4\\n\", argv[1]); exit (0);\n-\t#endif\n-\t#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)\n-\t  printf (\"mips-mips-riscos%sbsd\\n\", argv[1]); exit (0);\n-\t#endif\n-\t#endif\n-\t  exit (-1);\n-\t}\n-EOF\n-\t${CC-cc} dummy.c -o dummy \\\n-\t  && ./dummy `echo \"${UNAME_RELEASE}\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` \\\n-\t  && rm dummy.c dummy && exit 0\n-\trm -f dummy.c dummy\n-\techo mips-mips-riscos${UNAME_RELEASE}\n-\texit 0 ;;\n-    Night_Hawk:Power_UNIX:*:*)\n-\techo powerpc-harris-powerunix\n-\texit 0 ;;\n-    m88k:CX/UX:7*:*)\n-\techo m88k-harris-cxux7\n-\texit 0 ;;\n-    m88k:*:4*:R4*)\n-\techo m88k-motorola-sysv4\n-\texit 0 ;;\n-    m88k:*:3*:R3*)\n-\techo m88k-motorola-sysv3\n-\texit 0 ;;\n-    AViiON:dgux:*:*)\n-        # DG/UX returns AViiON for all architectures\n-        UNAME_PROCESSOR=`/usr/bin/uname -p`\n-        if [ $UNAME_PROCESSOR = mc88100 -o $UNAME_PROCESSOR = mc88110 ] ; then\n-\tif [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx \\\n-\t     -o ${TARGET_BINARY_INTERFACE}x = x ] ; then\n-\t\techo m88k-dg-dgux${UNAME_RELEASE}\n-\telse\n-\t\techo m88k-dg-dguxbcs${UNAME_RELEASE}\n-\tfi\n-        else echo i586-dg-dgux${UNAME_RELEASE}\n-        fi\n- \texit 0 ;;\n-    M88*:DolphinOS:*:*)\t# DolphinOS (SVR3)\n-\techo m88k-dolphin-sysv3\n-\texit 0 ;;\n-    M88*:*:R3*:*)\n-\t# Delta 88k system running SVR3\n-\techo m88k-motorola-sysv3\n-\texit 0 ;;\n-    XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)\n-\techo m88k-tektronix-sysv3\n-\texit 0 ;;\n-    Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)\n-\techo m68k-tektronix-bsd\n-\texit 0 ;;\n-    *:IRIX*:*:*)\n-\techo mips-sgi-irix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`\n-\texit 0 ;;\n-    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.\n-\techo romp-ibm-aix      # uname -m gives an 8 hex-code CPU id\n-\texit 0 ;;              # Note that: echo \"'`uname -s`'\" gives 'AIX '\n-    i?86:AIX:*:*)\n-\techo i386-ibm-aix\n-\texit 0 ;;\n-    *:AIX:2:3)\n-\tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n-\t\tsed 's/^\t\t//' << EOF >dummy.c\n-\t\t#include <sys/systemcfg.h>\n-\n-\t\tmain()\n-\t\t\t{\n-\t\t\tif (!__power_pc())\n-\t\t\t\texit(1);\n-\t\t\tputs(\"powerpc-ibm-aix3.2.5\");\n-\t\t\texit(0);\n-\t\t\t}\n-EOF\n-\t\t${CC-cc} dummy.c -o dummy && ./dummy && rm dummy.c dummy && exit 0\n-\t\trm -f dummy.c dummy\n-\t\techo rs6000-ibm-aix3.2.5\n-\telif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then\n-\t\techo rs6000-ibm-aix3.2.4\n-\telse\n-\t\techo rs6000-ibm-aix3.2\n-\tfi\n-\texit 0 ;;\n-    *:AIX:*:4)\n-\tif /usr/sbin/lsattr -EHl proc0 | grep POWER >/dev/null 2>&1; then\n-\t\tIBM_ARCH=rs6000\n-\telse\n-\t\tIBM_ARCH=powerpc\n-\tfi\n-\tif [ -x /usr/bin/oslevel ] ; then\n-\t\tIBM_REV=`/usr/bin/oslevel`\n-\telse\n-\t\tIBM_REV=4.${UNAME_RELEASE}\n-\tfi\n-\techo ${IBM_ARCH}-ibm-aix${IBM_REV}\n-\texit 0 ;;\n-    *:AIX:*:*)\n-\techo rs6000-ibm-aix\n-\texit 0 ;;\n-    ibmrt:4.4BSD:*|romp-ibm:BSD:*)\n-\techo romp-ibm-bsd4.4\n-\texit 0 ;;\n-    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC NetBSD and\n-\techo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to\n-\texit 0 ;;                           # report: romp-ibm BSD 4.3\n-    *:BOSX:*:*)\n-\techo rs6000-bull-bosx\n-\texit 0 ;;\n-    DPX/2?00:B.O.S.:*:*)\n-\techo m68k-bull-sysv3\n-\texit 0 ;;\n-    9000/[34]??:4.3bsd:1.*:*)\n-\techo m68k-hp-bsd\n-\texit 0 ;;\n-    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)\n-\techo m68k-hp-bsd4.4\n-\texit 0 ;;\n-    9000/[3478]??:HP-UX:*:*)\n-\tcase \"${UNAME_MACHINE}\" in\n-\t    9000/31? )            HP_ARCH=m68000 ;;\n-\t    9000/[34]?? )         HP_ARCH=m68k ;;\n-\t    9000/7?? | 9000/8?[1679] ) HP_ARCH=hppa1.1 ;;\n-\t    9000/8?? )            HP_ARCH=hppa1.0 ;;\n-\tesac\n-\tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n-\techo ${HP_ARCH}-hp-hpux${HPUX_REV}\n-\texit 0 ;;\n-    3050*:HI-UX:*:*)\n-\tsed 's/^\t//' << EOF >dummy.c\n-\t#include <unistd.h>\n-\tint\n-\tmain ()\n-\t{\n-\t  long cpu = sysconf (_SC_CPU_VERSION);\n-\t  /* The order matters, because CPU_IS_HP_MC68K erroneously returns\n-\t     true for CPU_PA_RISC1_0.  CPU_IS_PA_RISC returns correct\n-\t     results, however.  */\n-\t  if (CPU_IS_PA_RISC (cpu))\n-\t    {\n-\t      switch (cpu)\n-\t\t{\n-\t\t  case CPU_PA_RISC1_0: puts (\"hppa1.0-hitachi-hiuxwe2\"); break;\n-\t\t  case CPU_PA_RISC1_1: puts (\"hppa1.1-hitachi-hiuxwe2\"); break;\n-\t\t  case CPU_PA_RISC2_0: puts (\"hppa2.0-hitachi-hiuxwe2\"); break;\n-\t\t  default: puts (\"hppa-hitachi-hiuxwe2\"); break;\n-\t\t}\n-\t    }\n-\t  else if (CPU_IS_HP_MC68K (cpu))\n-\t    puts (\"m68k-hitachi-hiuxwe2\");\n-\t  else puts (\"unknown-hitachi-hiuxwe2\");\n-\t  exit (0);\n-\t}\n-EOF\n-\t${CC-cc} dummy.c -o dummy && ./dummy && rm dummy.c dummy && exit 0\n-\trm -f dummy.c dummy\n-\techo unknown-hitachi-hiuxwe2\n-\texit 0 ;;\n-    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )\n-\techo hppa1.1-hp-bsd\n-\texit 0 ;;\n-    9000/8??:4.3bsd:*:*)\n-\techo hppa1.0-hp-bsd\n-\texit 0 ;;\n-    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )\n-\techo hppa1.1-hp-osf\n-\texit 0 ;;\n-    hp8??:OSF1:*:*)\n-\techo hppa1.0-hp-osf\n-\texit 0 ;;\n-    i?86:OSF1:*:*)\n-\tif [ -x /usr/sbin/sysversion ] ; then\n-\t    echo ${UNAME_MACHINE}-unknown-osf1mk\n-\telse\n-\t    echo ${UNAME_MACHINE}-unknown-osf1\n-\tfi\n-\texit 0 ;;\n-    parisc*:Lites*:*:*)\n-\techo hppa1.1-hp-lites\n-\texit 0 ;;\n-    C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)\n-\techo c1-convex-bsd\n-        exit 0 ;;\n-    C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)\n-\tif getsysinfo -f scalar_acc\n-\tthen echo c32-convex-bsd\n-\telse echo c2-convex-bsd\n-\tfi\n-        exit 0 ;;\n-    C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)\n-\techo c34-convex-bsd\n-        exit 0 ;;\n-    C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)\n-\techo c38-convex-bsd\n-        exit 0 ;;\n-    C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)\n-\techo c4-convex-bsd\n-        exit 0 ;;\n-    CRAY*X-MP:*:*:*)\n-\techo xmp-cray-unicos\n-        exit 0 ;;\n-    CRAY*Y-MP:*:*:*)\n-\techo ymp-cray-unicos${UNAME_RELEASE}\n-\texit 0 ;;\n-    CRAY*[A-Z]90:*:*:*)\n-\techo ${UNAME_MACHINE}-cray-unicos${UNAME_RELEASE} \\\n-\t| sed -e 's/CRAY.*\\([A-Z]90\\)/\\1/' \\\n-\t      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/\n-\texit 0 ;;\n-    CRAY*TS:*:*:*)\n-\techo t90-cray-unicos${UNAME_RELEASE}\n-\texit 0 ;;\n-    CRAY-2:*:*:*)\n-\techo cray2-cray-unicos\n-        exit 0 ;;\n-    F300:UNIX_System_V:*:*)\n-        FUJITSU_SYS=`uname -p | tr [A-Z] [a-z] | sed -e 's/\\///'`\n-        FUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`\n-        echo \"f300-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n-        exit 0 ;;\n-    F301:UNIX_System_V:*:*)\n-       echo f301-fujitsu-uxpv`echo $UNAME_RELEASE | sed 's/ .*//'`\n-       exit 0 ;;\n-    hp3[0-9][05]:NetBSD:*:*)\n-\techo m68k-hp-netbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    hp300:OpenBSD:*:*)\n-\techo m68k-unknown-openbsd${UNAME_RELEASE}\n-\texit 0 ;;\n-    i?86:BSD/386:*:* | *:BSD/OS:*:*)\n-\techo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}\n-\texit 0 ;;\n-    *:FreeBSD:*:*)\n-\techo ${UNAME_MACHINE}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\n-\texit 0 ;;\n-    *:NetBSD:*:*)\n-\techo ${UNAME_MACHINE}-unknown-netbsd`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\\./'`\n-\texit 0 ;;\n-    *:OpenBSD:*:*)\n-\techo ${UNAME_MACHINE}-unknown-openbsd`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\\./'`\n-\texit 0 ;;\n-    i*:CYGWIN*:*)\n-\techo i386-pc-cygwin32\n-\texit 0 ;;\n-    i*:MINGW*:*)\n-\techo i386-pc-mingw32\n-\texit 0 ;;\n-    p*:CYGWIN*:*)\n-\techo powerpcle-unknown-cygwin32\n-\texit 0 ;;\n-    prep*:SunOS:5.*:*)\n-\techo powerpcle-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n-\texit 0 ;;\n-    *:GNU:*:*)\n-\techo `echo ${UNAME_MACHINE}|sed -e 's,[-/].*$,,'`-unknown-gnu`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`\n-\texit 0 ;;\n-    *:Linux:*:*)\n-\t# The BFD linker knows what the default object file format is, so\n-\t# first see if it will tell us.\n-\tld_help_string=`ld --help 2>&1`\n-\tld_supported_emulations=`echo $ld_help_string \\\n-\t\t\t | sed -ne '/supported emulations:/!d\n-\t\t\t\t    s/[ \t][ \t]*/ /g\n-\t\t\t\t    s/.*supported emulations: *//\n-\t\t\t\t    s/ .*//\n-\t\t\t\t    p'`\n-        case \"$ld_supported_emulations\" in\n-\t  i?86linux)  echo \"${UNAME_MACHINE}-pc-linux-gnuaout\"      ; exit 0 ;;\n-\t  i?86coff)   echo \"${UNAME_MACHINE}-pc-linux-gnucoff\"      ; exit 0 ;;\n-\t  sparclinux) echo \"${UNAME_MACHINE}-unknown-linux-gnuaout\" ; exit 0 ;;\n-\t  m68klinux)  echo \"${UNAME_MACHINE}-unknown-linux-gnuaout\" ; exit 0 ;;\n-\t  elf32ppc)   echo \"powerpc-unknown-linux-gnu\"              ; exit 0 ;;\n-\tesac\n-\n-\tif test \"${UNAME_MACHINE}\" = \"alpha\" ; then\n-\t\tsed 's/^\t//'  <<EOF >dummy.s\n-\t\t.globl main\n-\t\t.ent main\n-\tmain:\n-\t\t.frame \\$30,0,\\$26,0\n-\t\t.prologue 0\n-\t\t.long 0x47e03d84\n-\t\tcmoveq \\$4,0,\\$3\n-\t\taddl \\$3,\\$31,\\$0\n-\t\tret \\$31,(\\$26),1\n-\t\t.end main\n-EOF\n-\t\tLIBC=\"\"\n-\t\t${CC-cc} dummy.s -o dummy 2>/dev/null\n-\t\tif test \"$?\" = 0 ; then\n-\t\t\t./dummy\n-\t\t\tcase \"$?\" in\n-\t\t\t\t1)\n-\t\t\t\t\tUNAME_MACHINE=\"alphaev5\"\n-\t\t\t\t;;\t\n-\t\t\t2)\t\n-\t\t\t\t\tUNAME_MACHINE=\"alphaev56\"\n-\t\t\t\t;;\t\n-\t\t\tesac\t\n-\n-\t\t\tobjdump --private-headers dummy | \\\n-\t\t\t  grep ld.so.1 > /dev/null\n-\t\t\tif test \"$?\" = 0 ; then\n-\t\t\t\tLIBC=\"libc1\"\n-\t\t\tfi\n-\t\tfi\t\n-\t\trm -f dummy.s dummy\n-\t\techo ${UNAME_MACHINE}-unknown-linux-gnu${LIBC} ; exit 0\n-\telif test \"${UNAME_MACHINE}\" = \"mips\" ; then\n-\t  cat >dummy.c <<EOF\n-main(argc, argv)\n-     int argc;\n-     char *argv[];\n-{\n-#ifdef __MIPSEB__\n-  printf (\"%s-unknown-linux-gnu\\n\", argv[1]);\n-#endif\n-#ifdef __MIPSEL__\n-  printf (\"%sel-unknown-linux-gnu\\n\", argv[1]);\n-#endif\n-  return 0;\n-}\n-EOF\n-\t  ${CC-cc} dummy.c -o dummy 2>/dev/null && ./dummy \"${UNAME_MACHINE}\" && rm dummy.c dummy && exit 0\n-\t  rm -f dummy.c dummy\n-\telse\n-\t  # Either a pre-BFD a.out linker (linux-gnuoldld)\n-\t  # or one that does not give us useful --help.\n-\t  # GCC wants to distinguish between linux-gnuoldld and linux-gnuaout.\n-\t  # If ld does not provide *any* \"supported emulations:\"\n-\t  # that means it is gnuoldld.\n-\t  echo \"$ld_help_string\" | grep >/dev/null 2>&1 \"supported emulations:\"\n-\t  test $? != 0 && echo \"${UNAME_MACHINE}-pc-linux-gnuoldld\" && exit 0\n-\n-\t  case \"${UNAME_MACHINE}\" in\n-\t  i?86)\n-\t    VENDOR=pc;\n-\t    ;;\n-\t  *)\n-\t    VENDOR=unknown;\n-\t    ;;\n-\t  esac\n-\t  # Determine whether the default compiler is a.out or elf\n-\t  cat >dummy.c <<EOF\n-#include <features.h>\n-main(argc, argv)\n-     int argc;\n-     char *argv[];\n-{\n-#ifdef __ELF__\n-# ifdef __GLIBC__\n-#  if __GLIBC__ >= 2\n-    printf (\"%s-${VENDOR}-linux-gnu\\n\", argv[1]);\n-#  else\n-    printf (\"%s-${VENDOR}-linux-gnulibc1\\n\", argv[1]);\n-#  endif\n-# else\n-   printf (\"%s-${VENDOR}-linux-gnulibc1\\n\", argv[1]);\n-# endif\n-#else\n-  printf (\"%s-${VENDOR}-linux-gnuaout\\n\", argv[1]);\n-#endif\n-  return 0;\n-}\n-EOF\n-\t  ${CC-cc} dummy.c -o dummy 2>/dev/null && ./dummy \"${UNAME_MACHINE}\" && rm dummy.c dummy && exit 0\n-\t  rm -f dummy.c dummy\n-\tfi ;;\n-# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.  earlier versions\n-# are messed up and put the nodename in both sysname and nodename.\n-    i?86:DYNIX/ptx:4*:*)\n-\techo i386-sequent-sysv4\n-\texit 0 ;;\n-    i?86:UNIX_SV:4.2MP:2.*)\n-        # Unixware is an offshoot of SVR4, but it has its own version\n-        # number series starting with 2...\n-        # I am not positive that other SVR4 systems won't match this,\n-\t# I just have to hope.  -- rms.\n-        # Use sysv4.2uw... so that sysv4* matches it.\n-\techo ${UNAME_MACHINE}-pc-sysv4.2uw${UNAME_VERSION}\n-\texit 0 ;;\n-    i?86:*:4.*:* | i?86:SYSTEM_V:4.*:*)\n-\tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n-\t\techo ${UNAME_MACHINE}-univel-sysv${UNAME_RELEASE}\n-\telse\n-\t\techo ${UNAME_MACHINE}-pc-sysv${UNAME_RELEASE}\n-\tfi\n-\texit 0 ;;\n-    i?86:*:3.2:*)\n-\tif test -f /usr/options/cb.name; then\n-\t\tUNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`\n-\t\techo ${UNAME_MACHINE}-pc-isc$UNAME_REL\n-\telif /bin/uname -X 2>/dev/null >/dev/null ; then\n-\t\tUNAME_REL=`(/bin/uname -X|egrep Release|sed -e 's/.*= //')`\n-\t\t(/bin/uname -X|egrep i80486 >/dev/null) && UNAME_MACHINE=i486\n-\t\t(/bin/uname -X|egrep '^Machine.*Pentium' >/dev/null) \\\n-\t\t\t&& UNAME_MACHINE=i586\n-\t\techo ${UNAME_MACHINE}-pc-sco$UNAME_REL\n-\telse\n-\t\techo ${UNAME_MACHINE}-pc-sysv32\n-\tfi\n-\texit 0 ;;\n-    pc:*:*:*)\n-        # uname -m prints for DJGPP always 'pc', but it prints nothing about\n-        # the processor, so we play safe by assuming i386.\n-\techo i386-pc-msdosdjgpp\n-        exit 0 ;;\n-    Intel:Mach:3*:*)\n-\techo i386-pc-mach3\n-\texit 0 ;;\n-    paragon:*:*:*)\n-\techo i860-intel-osf1\n-\texit 0 ;;\n-    i860:*:4.*:*) # i860-SVR4\n-\tif grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then\n-\t  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4\n-\telse # Add other i860-SVR4 vendors below as they are discovered.\n-\t  echo i860-unknown-sysv${UNAME_RELEASE}  # Unknown i860-SVR4\n-\tfi\n-\texit 0 ;;\n-    mini*:CTIX:SYS*5:*)\n-\t# \"miniframe\"\n-\techo m68010-convergent-sysv\n-\texit 0 ;;\n-    M68*:*:R3V[567]*:*)\n-\ttest -r /sysV68 && echo 'm68k-motorola-sysv' && exit 0 ;;\n-    3[34]??:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 4850:*:4.0:3.0)\n-\tOS_REL=''\n-\ttest -r /etc/.relid \\\n-\t&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n-\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n-\t  && echo i486-ncr-sysv4.3${OS_REL} && exit 0\n-\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n-\t  && echo i586-ncr-sysv4.3${OS_REL} && exit 0 ;;\n-    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)\n-        /bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n-          && echo i486-ncr-sysv4 && exit 0 ;;\n-    m68*:LynxOS:2.*:*)\n-\techo m68k-unknown-lynxos${UNAME_RELEASE}\n-\texit 0 ;;\n-    mc68030:UNIX_System_V:4.*:*)\n-\techo m68k-atari-sysv4\n-\texit 0 ;;\n-    i?86:LynxOS:2.*:*)\n-\techo i386-unknown-lynxos${UNAME_RELEASE}\n-\texit 0 ;;\n-    TSUNAMI:LynxOS:2.*:*)\n-\techo sparc-unknown-lynxos${UNAME_RELEASE}\n-\texit 0 ;;\n-    rs6000:LynxOS:2.*:* | PowerPC:LynxOS:2.*:*)\n-\techo rs6000-unknown-lynxos${UNAME_RELEASE}\n-\texit 0 ;;\n-    SM[BE]S:UNIX_SV:*:*)\n-\techo mips-dde-sysv${UNAME_RELEASE}\n-\texit 0 ;;\n-    RM*:SINIX-*:*:*)\n-\techo mips-sni-sysv4\n-\texit 0 ;;\n-    *:SINIX-*:*:*)\n-\tif uname -p 2>/dev/null >/dev/null ; then\n-\t\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n-\t\techo ${UNAME_MACHINE}-sni-sysv4\n-\telse\n-\t\techo ns32k-sni-sysv\n-\tfi\n-\texit 0 ;;\n-    PENTIUM:CPunix:4.0*:*) # Unisys `ClearPath HMP IX 4000' SVR4/MP effort\n-                           # says <Richard.M.Bartel@ccMail.Census.GOV>\n-        echo i586-unisys-sysv4\n-        exit 0 ;;\n-    *:UNIX_System_V:4*:FTX*)\n-\t# From Gerald Hewes <hewes@openmarket.com>.\n-\t# How about differentiating between stratus architectures? -djm\n-\techo hppa1.1-stratus-sysv4\n-\texit 0 ;;\n-    *:*:*:FTX*)\n-\t# From seanf@swdc.stratus.com.\n-\techo i860-stratus-sysv4\n-\texit 0 ;;\n-    mc68*:A/UX:*:*)\n-\techo m68k-apple-aux${UNAME_RELEASE}\n-\texit 0 ;;\n-    news*:NEWS-OS:*:6*)\n-\techo mips-sony-newsos6\n-\texit 0 ;;\n-    R3000:*System_V*:*:* | R4000:UNIX_SYSV:*:*)\n-\tif [ -d /usr/nec ]; then\n-\t        echo mips-nec-sysv${UNAME_RELEASE}\n-\telse\n-\t        echo mips-unknown-sysv${UNAME_RELEASE}\n-\tfi\n-        exit 0 ;;\n-esac\n-\n-#echo '(No uname command or uname output not recognized.)' 1>&2\n-#echo \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" 1>&2\n-\n-cat >dummy.c <<EOF\n-#ifdef _SEQUENT_\n-# include <sys/types.h>\n-# include <sys/utsname.h>\n-#endif\n-main ()\n-{\n-#if defined (sony)\n-#if defined (MIPSEB)\n-  /* BFD wants \"bsd\" instead of \"newsos\".  Perhaps BFD should be changed,\n-     I don't know....  */\n-  printf (\"mips-sony-bsd\\n\"); exit (0);\n-#else\n-#include <sys/param.h>\n-  printf (\"m68k-sony-newsos%s\\n\",\n-#ifdef NEWSOS4\n-          \"4\"\n-#else\n-\t  \"\"\n-#endif\n-         ); exit (0);\n-#endif\n-#endif\n-\n-#if defined (__arm) && defined (__acorn) && defined (__unix)\n-  printf (\"arm-acorn-riscix\"); exit (0);\n-#endif\n-\n-#if defined (hp300) && !defined (hpux)\n-  printf (\"m68k-hp-bsd\\n\"); exit (0);\n-#endif\n-\n-#if defined (NeXT)\n-#if !defined (__ARCHITECTURE__)\n-#define __ARCHITECTURE__ \"m68k\"\n-#endif\n-  int version;\n-  version=`(hostinfo | sed -n 's/.*NeXT Mach \\([0-9]*\\).*/\\1/p') 2>/dev/null`;\n-  printf (\"%s-next-nextstep%d\\n\", __ARCHITECTURE__, version);\n-  exit (0);\n-#endif\n-\n-#if defined (MULTIMAX) || defined (n16)\n-#if defined (UMAXV)\n-  printf (\"ns32k-encore-sysv\\n\"); exit (0);\n-#else\n-#if defined (CMU)\n-  printf (\"ns32k-encore-mach\\n\"); exit (0);\n-#else\n-  printf (\"ns32k-encore-bsd\\n\"); exit (0);\n-#endif\n-#endif\n-#endif\n-\n-#if defined (__386BSD__)\n-  printf (\"i386-pc-bsd\\n\"); exit (0);\n-#endif\n-\n-#if defined (sequent)\n-#if defined (i386)\n-  printf (\"i386-sequent-dynix\\n\"); exit (0);\n-#endif\n-#if defined (ns32000)\n-  printf (\"ns32k-sequent-dynix\\n\"); exit (0);\n-#endif\n-#endif\n-\n-#if defined (_SEQUENT_)\n-    struct utsname un;\n-\n-    uname(&un);\n-\n-    if (strncmp(un.version, \"V2\", 2) == 0) {\n-\tprintf (\"i386-sequent-ptx2\\n\"); exit (0);\n-    }\n-    if (strncmp(un.version, \"V1\", 2) == 0) { /* XXX is V1 correct? */\n-\tprintf (\"i386-sequent-ptx1\\n\"); exit (0);\n-    }\n-    printf (\"i386-sequent-ptx\\n\"); exit (0);\n-\n-#endif\n-\n-#if defined (vax)\n-#if !defined (ultrix)\n-  printf (\"vax-dec-bsd\\n\"); exit (0);\n-#else\n-  printf (\"vax-dec-ultrix\\n\"); exit (0);\n-#endif\n-#endif\n-\n-#if defined (alliant) && defined (i860)\n-  printf (\"i860-alliant-bsd\\n\"); exit (0);\n-#endif\n-\n-  exit (1);\n-}\n-EOF\n-\n-${CC-cc} dummy.c -o dummy 2>/dev/null && ./dummy && rm dummy.c dummy && exit 0\n-rm -f dummy.c dummy\n-\n-# Apollos put the system type in the environment.\n-\n-test -d /usr/apollo && { echo ${ISP}-apollo-${SYSTYPE}; exit 0; }\n-\n-# Convex versions that predate uname can use getsysinfo(1)\n-\n-if [ -x /usr/convex/getsysinfo ]\n-then\n-    case `getsysinfo -f cpu_type` in\n-    c1*)\n-\techo c1-convex-bsd\n-\texit 0 ;;\n-    c2*)\n-\tif getsysinfo -f scalar_acc\n-\tthen echo c32-convex-bsd\n-\telse echo c2-convex-bsd\n-\tfi\n-\texit 0 ;;\n-    c34*)\n-\techo c34-convex-bsd\n-\texit 0 ;;\n-    c38*)\n-\techo c38-convex-bsd\n-\texit 0 ;;\n-    c4*)\n-\techo c4-convex-bsd\n-\texit 0 ;;\n-    esac\n-fi\n-\n-#echo '(Unable to guess system type)' 1>&2\n-\n-exit 1\n+#!/bin/sh\n+# Use the top-level config.guess so that we don't have two of them.\n+guesssys=`echo $0 | sed 's|config.guess|../config.guess|'`\n+exec ${guesssys} \"$@\""}]}