{"sha": "aeb732c12e1b2ff6457690092798901e5d98ff86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWViNzMyYzEyZTFiMmZmNjQ1NzY5MDA5Mjc5ODkwMWU1ZDk4ZmY4Ng==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2004-08-03T00:52:18Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2004-08-03T00:52:18Z"}, "message": "Index: ChangeLog\n2004-08-02  Geoffrey Keating  <geoffk@apple.com>\n\n\t* ltcf-cxx.sh: On Darwin, make archive multi-module, and don't\n\tuse -all_load flag.\n\nIndex: gcc/ChangeLog\n2004-08-02  Geoffrey Keating  <geoffk@apple.com>\n\n\t* dwarf2out.c (output_call_frame_info): Don't change data format\n\tdue to TARGET_USES_WEAK_UNWIND_INFO.  Always refer to the local\n\tlabel.  Use 'true' not '1'.\n\t* doc/install.texi (powerpc-*-darwin*): Mention cctools version\n\trequired.\n\nFrom-SVN: r85461", "tree": {"sha": "8f5dad005756752c4055726b4b94227340ec6e4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f5dad005756752c4055726b4b94227340ec6e4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aeb732c12e1b2ff6457690092798901e5d98ff86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeb732c12e1b2ff6457690092798901e5d98ff86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aeb732c12e1b2ff6457690092798901e5d98ff86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aeb732c12e1b2ff6457690092798901e5d98ff86/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "474f541727096df25c2268c462fcb8c4daa898b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/474f541727096df25c2268c462fcb8c4daa898b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/474f541727096df25c2268c462fcb8c4daa898b6"}], "stats": {"total": 52, "additions": 24, "deletions": 28}, "files": [{"sha": "27d0730fe0ae0585036c9eae23bec70501bf8cd3", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aeb732c12e1b2ff6457690092798901e5d98ff86/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aeb732c12e1b2ff6457690092798901e5d98ff86/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=aeb732c12e1b2ff6457690092798901e5d98ff86", "patch": "@@ -1,3 +1,8 @@\n+2004-08-02  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* ltcf-cxx.sh: On Darwin, make archive multi-module, and don't\n+\tuse -all_load flag.\n+\n 2004-08-02  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* configure.in: Sync from src, add noconfigdirs for crx-*-*."}, {"sha": "7164a2989a66ee42575cf79b5189fa3cda451616", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aeb732c12e1b2ff6457690092798901e5d98ff86/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aeb732c12e1b2ff6457690092798901e5d98ff86/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aeb732c12e1b2ff6457690092798901e5d98ff86", "patch": "@@ -1,3 +1,11 @@\n+2004-08-02  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* dwarf2out.c (output_call_frame_info): Don't change data format\n+\tdue to TARGET_USES_WEAK_UNWIND_INFO.  Always refer to the local\n+\tlabel.  Use 'true' not '1'.\n+\t* doc/install.texi (powerpc-*-darwin*): Mention cctools version\n+\trequired.\n+\n 2004-08-02  Gabriel Dos Reis  <gdr@cs.tamu.edu>\n \n \t* gdbinit.in: Reflect previous changes to rtunion_def."}, {"sha": "9c7d01029c417975ac534d164cf66642dbf278e3", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aeb732c12e1b2ff6457690092798901e5d98ff86/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aeb732c12e1b2ff6457690092798901e5d98ff86/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=aeb732c12e1b2ff6457690092798901e5d98ff86", "patch": "@@ -3306,17 +3306,11 @@ binaries are available at\n @uref{http://developer.apple.com/tools/compilers.html} (free\n registration required).\n \n-The default stack limit of 512K is too small, which may cause compiles\n-to fail with 'Bus error'.  Set the stack larger, for instance\n-by doing @samp{limit stack 800}.  It's a good idea to use the GNU\n-preprocessor instead of Apple's @file{cpp-precomp} during the first stage of\n-bootstrapping; this is automatic when doing @samp{make bootstrap}, but\n-to do it from the toplevel objdir you will need to say @samp{make\n-CC='cc -no-cpp-precomp' bootstrap}.\n+This version of GCC requires at least cctools-528.\n \n The version of GCC shipped by Apple typically includes a number of\n extensions not available in a standard GCC release.  These extensions\n-are generally specific to Mac programming.\n+are generally for backwards compatibility and best avoided.\n \n @html\n <hr />"}, {"sha": "46b3b512660460320e747858d5e74fefc4c4891e", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 7, "deletions": 18, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aeb732c12e1b2ff6457690092798901e5d98ff86/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aeb732c12e1b2ff6457690092798901e5d98ff86/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=aeb732c12e1b2ff6457690092798901e5d98ff86", "patch": "@@ -2089,7 +2089,7 @@ output_call_frame_info (int for_eh)\n \t  any_eh_needed = any_lsda_needed = true;\n         else if (TARGET_USES_WEAK_UNWIND_INFO\n \t\t && DECL_ONE_ONLY (fde_table[i].decl))\n-\t  any_eh_needed = 1;\n+\t  any_eh_needed = true;\n \telse if (! fde_table[i].nothrow\n \t\t && ! fde_table[i].all_throwers_are_sibcalls)\n \t  any_eh_needed = true;\n@@ -2141,9 +2141,7 @@ output_call_frame_info (int for_eh)\n \t P\tIndicates the presence of an encoding + language\n \t\tpersonality routine in the CIE augmentation.  */\n \n-      fde_encoding = TARGET_USES_WEAK_UNWIND_INFO\n-\t? ASM_PREFERRED_EH_DATA_FORMAT (/*code=*/2, /*global=*/1)\n-\t: ASM_PREFERRED_EH_DATA_FORMAT (/*code=*/1, /*global=*/0);\n+      fde_encoding = ASM_PREFERRED_EH_DATA_FORMAT (/*code=*/1, /*global=*/0);\n       per_encoding = ASM_PREFERRED_EH_DATA_FORMAT (/*code=*/2, /*global=*/1);\n       lsda_encoding = ASM_PREFERRED_EH_DATA_FORMAT (/*code=*/0, /*global=*/0);\n \n@@ -2258,20 +2256,11 @@ output_call_frame_info (int for_eh)\n \n       if (for_eh)\n \t{\n-\t  if (TARGET_USES_WEAK_UNWIND_INFO\n-\t      && DECL_ONE_ONLY (fde->decl))\n-\t    dw2_asm_output_encoded_addr_rtx (fde_encoding,\n-\t\t     gen_rtx_SYMBOL_REF (Pmode, IDENTIFIER_POINTER\n-\t\t\t\t\t          (DECL_ASSEMBLER_NAME (fde->decl))),\n-\t\t     \"FDE initial location\");\n-\t  else\n-\t    {\n-\t      rtx sym_ref = gen_rtx_SYMBOL_REF (Pmode, fde->dw_fde_begin);\n-\t      SYMBOL_REF_FLAGS (sym_ref) |= SYMBOL_FLAG_LOCAL;\n-\t      dw2_asm_output_encoded_addr_rtx (fde_encoding,\n-\t\t\t\t\t       sym_ref,\n-\t\t\t\t\t       \"FDE initial location\");\n-\t    }\n+\t  rtx sym_ref = gen_rtx_SYMBOL_REF (Pmode, fde->dw_fde_begin);\n+\t  SYMBOL_REF_FLAGS (sym_ref) |= SYMBOL_FLAG_LOCAL;\n+\t  dw2_asm_output_encoded_addr_rtx (fde_encoding,\n+\t\t\t\t\t   sym_ref,\n+\t\t\t\t\t   \"FDE initial location\");\n \t  dw2_asm_output_delta (size_of_encoded_value (fde_encoding),\n \t\t\t\tfde->dw_fde_end, fde->dw_fde_begin,\n \t\t\t\t\"FDE address range\");"}, {"sha": "7edeb864b1758cff0bdfd154c3f585641a86059f", "filename": "ltcf-cxx.sh", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aeb732c12e1b2ff6457690092798901e5d98ff86/ltcf-cxx.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aeb732c12e1b2ff6457690092798901e5d98ff86/ltcf-cxx.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ltcf-cxx.sh?ref=aeb732c12e1b2ff6457690092798901e5d98ff86", "patch": "@@ -254,7 +254,8 @@ case $host_os in\n \t    ;;\n     esac\n     output_verbose_link_cmd='echo'\n-    archive_cmds='$CC -r ${wl}-bind_at_load -keep_private_externs -nostdlib -o ${lib}-master.o $libobjs~$CC -dynamiclib $allow_undefined_flag -o $lib ${lib}-master.o $deplibs $compiler_flags -install_name $rpath/$soname $verstring'\n+\n+    archive_cmds='$CXX -dynamiclib $allow_undefined_flag -o $lib $libobjs $deplibs $compiler_flags -install_name $rpath/$soname $verstring'\n     module_cmds='$CC ${wl}-bind_at_load $allow_undefined_flag -o $lib -bundle $libobjs $deplibs$compiler_flags'\n \n     # Don't fix this by using the ld -exported_symbols_list flag,\n@@ -264,7 +265,6 @@ case $host_os in\n     hardcode_direct=no\n     hardcode_automatic=yes\n     hardcode_shlibpath_var=unsupported\n-    whole_archive_flag_spec='-all_load $convenience'\n     link_all_deplibs=yes\n     ;;\n "}]}