{"sha": "63729d8454d1917c037de9818b96a4a4e60cc8b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM3MjlkODQ1NGQxOTE3YzAzN2RlOTgxOGI5NmE0YTRlNjBjYzhiMw==", "commit": {"author": {"name": "Krister Walfridsson", "email": "cato@df.lth.se", "date": "2007-07-25T23:51:47Z"}, "committer": {"name": "Krister Walfridsson", "email": "kristerw@gcc.gnu.org", "date": "2007-07-25T23:51:47Z"}, "message": "re PR target/30058 (bootstrap broken on i386-unknown-netbsdelf2.0.2)\n\n2007-07-24  Krister Walfridsson  <cato@df.lth.se>\n\n\tPR target/30058\n\t* inclhack.def (netbsd_c99_inline_2): New.\n\t* fixincl.x: Regenerate.\n\t* tests/base/signal.h: Update.\n\nFrom-SVN: r126937", "tree": {"sha": "5b086663c4800582cbd23273971f6a22423cdd80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b086663c4800582cbd23273971f6a22423cdd80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63729d8454d1917c037de9818b96a4a4e60cc8b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63729d8454d1917c037de9818b96a4a4e60cc8b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63729d8454d1917c037de9818b96a4a4e60cc8b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63729d8454d1917c037de9818b96a4a4e60cc8b3/comments", "author": null, "committer": null, "parents": [{"sha": "dbdc7f9732197852984693602a4d13b9e3ccf54d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbdc7f9732197852984693602a4d13b9e3ccf54d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbdc7f9732197852984693602a4d13b9e3ccf54d"}], "stats": {"total": 103, "additions": 93, "deletions": 10}, "files": [{"sha": "c9ad1a795ee8ab12e4d1f727a84cd580ca7e5107", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63729d8454d1917c037de9818b96a4a4e60cc8b3/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63729d8454d1917c037de9818b96a4a4e60cc8b3/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=63729d8454d1917c037de9818b96a4a4e60cc8b3", "patch": "@@ -1,3 +1,10 @@\n+2007-07-24  Krister Walfridsson  <cato@df.lth.se>\n+\n+\tPR target/30058\n+\t* inclhack.def (netbsd_c99_inline_2): New.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/signal.h: Update.\n+\n 2007-07-18  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \tPR target/32641"}, {"sha": "a330dfe9417b856fba17668b1024235549e4728f", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 58, "deletions": 10, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63729d8454d1917c037de9818b96a4a4e60cc8b3/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63729d8454d1917c037de9818b96a4a4e60cc8b3/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=63729d8454d1917c037de9818b96a4a4e60cc8b3", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Saturday July  7, 2007 at 11:23:30 PM EDT\n+ * It has been AutoGen-ed  Wednesday July 25, 2007 at 12:50:31 PM CEST\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Sat Jul  7 23:23:30 EDT 2007\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Wed Jul 25 12:50:31 CEST 2007\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 210 fixup descriptions.\n+ * This file contains 211 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -26,18 +26,19 @@\n  *  \n  *  You may redistribute it and/or modify it under the terms of the\n  *  GNU General Public License, as published by the Free Software\n- *  Foundation; either version 2, or (at your option) any later version.\n+ *  Foundation; either version 2 of the License, or (at your option)\n+ *  any later version.\n  *  \n  *  inclhack is distributed in the hope that it will be useful,\n  *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n  *  See the GNU General Public License for more details.\n  *  \n  *  You should have received a copy of the GNU General Public License\n- *  along with inclhack.  See the file \"COPYING\".  If not,\n- *  write to:  The Free Software Foundation, Inc.,\n- *             59 Temple Place - Suite 330,\n- *             Boston,  MA  02111-1307, USA.\n+ *  along with inclhack.  If not, write to:\n+ *  \tThe Free Software Foundation, Inc.,\n+ *  \t51 Franklin Street, Fifth Floor\n+ *  \tBoston, MA  02110-1301, USA.\n  */\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -4652,6 +4653,47 @@ __attribute__((__gnu_inline__))\\n\\\n __inline int\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Netbsd_C99_Inline_2 fix\n+ */\n+tSCC zNetbsd_C99_Inline_2Name[] =\n+     \"netbsd_c99_inline_2\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zNetbsd_C99_Inline_2List[] =\n+  \"signal.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzNetbsd_C99_Inline_2Machs[] = {\n+        \"*-*-netbsd*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zNetbsd_C99_Inline_2Select0[] =\n+       \"#define _SIGINLINE extern __inline\";\n+\n+#define    NETBSD_C99_INLINE_2_TEST_CT  1\n+static tTestDesc aNetbsd_C99_Inline_2Tests[] = {\n+  { TT_EGREP,    zNetbsd_C99_Inline_2Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Netbsd_C99_Inline_2\n+ */\n+static const char* apzNetbsd_C99_Inline_2Patch[] = {\n+    \"format\",\n+    \"#ifdef __GNUC_STDC_INLINE__\\n\\\n+#define _SIGINLINE extern __attribute__((__gnu_inline__)) __inline\\n\\\n+#else\\n\\\n+%0\\n\\\n+#endif\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Netbsd_Extra_Semicolon fix\n@@ -8563,9 +8605,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          255\n+#define REGEX_COUNT          256\n #define MACH_LIST_SIZE_LIMIT 261\n-#define FIX_COUNT            210\n+#define FIX_COUNT            211\n \n /*\n  *  Enumerate the fixes\n@@ -8683,6 +8725,7 @@ typedef enum {\n     NESTED_MOTOROLA_FIXIDX,\n     NESTED_SYS_LIMITS_FIXIDX,\n     NETBSD_C99_INLINE_1_FIXIDX,\n+    NETBSD_C99_INLINE_2_FIXIDX,\n     NETBSD_EXTRA_SEMICOLON_FIXIDX,\n     NEXT_MATH_PREFIX_FIXIDX,\n     NEXT_TEMPLATE_FIXIDX,\n@@ -9344,6 +9387,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      NETBSD_C99_INLINE_1_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aNetbsd_C99_Inline_1Tests,   apzNetbsd_C99_Inline_1Patch, 0 },\n \n+  {  zNetbsd_C99_Inline_2Name,    zNetbsd_C99_Inline_2List,\n+     apzNetbsd_C99_Inline_2Machs,\n+     NETBSD_C99_INLINE_2_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aNetbsd_C99_Inline_2Tests,   apzNetbsd_C99_Inline_2Patch, 0 },\n+\n   {  zNetbsd_Extra_SemicolonName,    zNetbsd_Extra_SemicolonList,\n      apzNetbsd_Extra_SemicolonMachs,\n      NETBSD_EXTRA_SEMICOLON_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "f7fbd8ce8aabcb4dc8c9016728e1299d6ba32a6a", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63729d8454d1917c037de9818b96a4a4e60cc8b3/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63729d8454d1917c037de9818b96a4a4e60cc8b3/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=63729d8454d1917c037de9818b96a4a4e60cc8b3", "patch": "@@ -2608,6 +2608,25 @@ fix = {\n };\n \n \n+fix = {\n+    hackname  = netbsd_c99_inline_2;\n+    mach      = *-*-netbsd*;\n+    files     = signal.h;\n+    select    = \"#define _SIGINLINE extern __inline\";\n+\n+    c_fix     = format;\n+    c_fix_arg = <<- _EOArg_\n+\t#ifdef __GNUC_STDC_INLINE__\n+\t#define _SIGINLINE extern __attribute__((__gnu_inline__)) __inline\n+\t#else\n+\t%0\n+\t#endif\n+\t_EOArg_;\n+\n+    test_text = \"#define _SIGINLINE extern __inline\";\n+};\n+\n+\n /*\n  * NetBSD has a semicolon after the ending '}' for some extern \"C\".\n  */"}, {"sha": "1c4517e2c4b6142268b50c94b67e79069fbfcbad", "filename": "fixincludes/tests/base/signal.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63729d8454d1917c037de9818b96a4a4e60cc8b3/fixincludes%2Ftests%2Fbase%2Fsignal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63729d8454d1917c037de9818b96a4a4e60cc8b3/fixincludes%2Ftests%2Fbase%2Fsignal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fsignal.h?ref=63729d8454d1917c037de9818b96a4a4e60cc8b3", "patch": "@@ -18,3 +18,12 @@ __inline int\n sigaddset(sigset_t *set, int signo)\n {}\n #endif  /* NETBSD_C99_INLINE_1_CHECK */\n+\n+\n+#if defined( NETBSD_C99_INLINE_2_CHECK )\n+#ifdef __GNUC_STDC_INLINE__\n+#define _SIGINLINE extern __attribute__((__gnu_inline__)) __inline\n+#else\n+#define _SIGINLINE extern __inline\n+#endif\n+#endif  /* NETBSD_C99_INLINE_2_CHECK */"}]}