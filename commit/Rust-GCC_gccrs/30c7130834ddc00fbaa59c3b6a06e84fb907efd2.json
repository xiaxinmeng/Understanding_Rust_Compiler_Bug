{"sha": "30c7130834ddc00fbaa59c3b6a06e84fb907efd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBjNzEzMDgzNGRkYzAwZmJhYTU5YzNiNmEwNmU4NGZiOTA3ZWZkMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-22T00:07:50Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-22T00:07:50Z"}, "message": "Initial revision\n\nFrom-SVN: r9024", "tree": {"sha": "9c844b43014c6cde98228c3327f004c82995196b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c844b43014c6cde98228c3327f004c82995196b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30c7130834ddc00fbaa59c3b6a06e84fb907efd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30c7130834ddc00fbaa59c3b6a06e84fb907efd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30c7130834ddc00fbaa59c3b6a06e84fb907efd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30c7130834ddc00fbaa59c3b6a06e84fb907efd2/comments", "author": null, "committer": null, "parents": [{"sha": "8c4caa3de9cf6f313b5736eb83ac70f34c58016b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c4caa3de9cf6f313b5736eb83ac70f34c58016b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c4caa3de9cf6f313b5736eb83ac70f34c58016b"}], "stats": {"total": 343, "additions": 343, "deletions": 0}, "files": [{"sha": "fa2cd30e1042d7fc549f3992ff768a6c9abeb71d", "filename": "gcc/config/i386/winnt.c", "status": "added", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30c7130834ddc00fbaa59c3b6a06e84fb907efd2/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30c7130834ddc00fbaa59c3b6a06e84fb907efd2/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=30c7130834ddc00fbaa59c3b6a06e84fb907efd2", "patch": "@@ -0,0 +1,119 @@\n+/* Subroutines for insn-output.c for Windows NT.\n+   Contributed by Douglas Rupp (drupp@cs.washington.edu)\n+   Copyright (C) 1995 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#include <stdio.h>\n+#include \"config.h\"\n+#include \"rtl.h\"\n+#include \"regs.h\"\n+#include \"hard-reg-set.h\"\n+#include \"output.h\"\n+#include \"tree.h\"\n+#include \"flags.h\"\n+/* Return DECL with the assembler name modified with a suffix consisting\n+   of an atsign (@) followed by the number of bytes of arguments */\n+\n+tree\n+gen_stdcall_suffix (decl)\n+  tree decl;\n+{\n+  int total = 0;\n+  char *asmname = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl));\n+  char *newsym;\n+\n+  if (TYPE_ARG_TYPES (TREE_TYPE (decl)))\n+    if (TREE_VALUE (tree_last (TYPE_ARG_TYPES (TREE_TYPE (decl)))) \n+        == void_type_node)\n+      {\n+        tree formal_type = TYPE_ARG_TYPES (TREE_TYPE (decl));\n+\n+        while (TREE_VALUE (formal_type) != void_type_node)\n+          {\n+            total += TREE_INT_CST_LOW (TYPE_SIZE (TREE_VALUE (formal_type)));\n+            formal_type = TREE_CHAIN (formal_type);\n+          }\n+      }\n+\n+  newsym = xmalloc (strlen (asmname) + 10);\n+  sprintf (newsym, \"%s@%d\", asmname, total/BITS_PER_UNIT);\n+  return get_identifier (newsym);\n+}\n+\n+/* This function generates the assembly code for function entry.\n+   FILE is an stdio stream to output the code to.\n+   SIZE is an int: how many units of temporary storage to allocate. */\n+\n+void\n+winnt_function_prologue (file, size)\n+     FILE *file;\n+     int size;\n+{\n+  register int regno;\n+  int limit;\n+  rtx xops[4];\n+  int pic_reg_used = flag_pic && (current_function_uses_pic_offset_table\n+\t\t\t\t  || current_function_uses_const_pool);\n+\n+  xops[0] = stack_pointer_rtx;\n+  xops[1] = frame_pointer_rtx;\n+  xops[2] = GEN_INT (size);\n+  xops[3] = gen_rtx (REG, Pmode, 0); /* eax */\n+  if (frame_pointer_needed)\n+    {\n+      output_asm_insn (\"push%L1 %1\", xops);\n+      output_asm_insn (AS2 (mov%L0,%0,%1), xops);\n+    }\n+\n+  if (size > 4095)\n+    {\n+      output_asm_insn (AS2 (mov%L0, %2, %3), xops);\n+      output_asm_insn (\"call __chkstk\", xops);\n+    }\n+  else if (size)\n+    output_asm_insn (AS2 (sub%L0,%2,%0), xops);\n+\n+  /* Note If use enter it is NOT reversed args.\n+     This one is not reversed from intel!!\n+     I think enter is slower.  Also sdb doesn't like it.\n+     But if you want it the code is:\n+     {\n+     xops[3] = const0_rtx;\n+     output_asm_insn (\"enter %2,%3\", xops);\n+     }\n+     */\n+  limit = (frame_pointer_needed ? FRAME_POINTER_REGNUM : STACK_POINTER_REGNUM);\n+  for (regno = limit - 1; regno >= 0; regno--)\n+    if ((regs_ever_live[regno] && ! call_used_regs[regno])\n+\t|| (regno == PIC_OFFSET_TABLE_REGNUM && pic_reg_used))\n+      {\n+\txops[0] = gen_rtx (REG, SImode, regno);\n+\toutput_asm_insn (\"push%L0 %0\", xops);\n+      }\n+\n+  if (pic_reg_used)\n+    {\n+      xops[0] = pic_offset_table_rtx;\n+      xops[1] = (rtx) gen_label_rtx ();\n+\n+      output_asm_insn (AS1 (call,%P1), xops);\n+      ASM_OUTPUT_INTERNAL_LABEL (file, \"L\", CODE_LABEL_NUMBER (xops[1]));\n+      output_asm_insn (AS1 (pop%L0,%0), xops);\n+      output_asm_insn (\"addl $_GLOBAL_OFFSET_TABLE_+[.-%P1],%0\", xops);\n+    }\n+}"}, {"sha": "c928675739f908a1e2e7b1eb5adba9fb1918d681", "filename": "gcc/fixinc.winnt", "status": "added", "additions": 224, "deletions": 0, "changes": 224, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30c7130834ddc00fbaa59c3b6a06e84fb907efd2/gcc%2Ffixinc.winnt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30c7130834ddc00fbaa59c3b6a06e84fb907efd2/gcc%2Ffixinc.winnt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc.winnt?ref=30c7130834ddc00fbaa59c3b6a06e84fb907efd2", "patch": "@@ -0,0 +1,224 @@\n+#! sh\n+#\n+#   fixinc.winnt  --  Install modified versions of Windows NT system include\n+#   files.\n+#\n+#   Based on fixinc.sco script by Ian Lance Taylor (ian@airs.com)).\n+#   Modifications by Douglas Rupp (drupp@cs.washington.edu)\n+#\n+# This file is part of GNU CC.\n+# \n+# GNU CC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+# \n+# GNU CC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with GNU CC; see the file COPYING.  If not, write to\n+# the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.\n+#\n+#\tThis script munges the native include files provided with Windows NT\n+#\t3.5 SDK systems so as to provide a reasonable namespace when\n+#\tcompiling with gcc.  The header files by default do not\n+#\tprovide many essential definitions and declarations if\n+#\t__STDC__ is 1.  This script modifies the header files to check\n+#\tfor __STRICT_ANSI__ being defined instead.  However the most \n+#\timportant modification is to change all occurences of __stdcall\n+#\tand __cdecl to __attribute__((stdcall)) and __attribute__((cdecl)),\n+#\trespectively.  Once munged, the\n+#\tresulting new system include files are placed in a directory\n+#\tthat GNU C will search *before* searching the /mstools/h\n+#\tdirectory.  This script should work properly for an /mstools/h\n+#\tdirectory dated 9/4/94 on the installation CDROM.\n+#\n+#\tSee README-fixinc for more information.\n+\n+# Directory containing the original header files.\n+INPUT=${2-${INPUT-/mstools/h}}\n+\n+# Fail if no arg to specify a directory for the output.\n+if [ x$1 = x ]\n+then echo fixincludes: no output directory specified\n+exit 1\n+fi\n+\n+# Directory in which to store the results.\n+LIB=${1?\"fixincludes: output directory not specified\"}\n+\n+# Make sure it exists.\n+if [ ! -d $LIB ]; then\n+  mkdir $LIB || exit 1\n+fi\n+\n+ORIG_DIR=`pwd`\n+\n+# Make LIB absolute if it is relative.\n+# Don't do this if not necessary, since may screw up automounters.\n+case $LIB in\n+/*)\n+\t;;\n+*)\n+\tcd $LIB; LIB=`${PWDCMD-pwd}`\n+\t;;\n+esac\n+\n+echo 'Building fixincludes in ' ${LIB}\n+\n+# Determine whether this filesystem has symbolic links.\n+if ln -s X $LIB/ShouldNotExist 2>NUL; then\n+  rm -f $LIB/ShouldNotExist\n+  LINKS=true\n+else\n+  LINKS=false\n+fi\n+\n+echo 'Making directories:'\n+cd ${INPUT}\n+if $LINKS; then\n+  files=`ls -LR | sed -n s/:$//p`\n+else\n+  files=`find . -type d -print | sed '/^.$/d'`\n+fi\n+for file in $files; do\n+  rm -rf $LIB/$file\n+  if [ ! -d $LIB/$file ]\n+  then mkdir $LIB/$file\n+  fi\n+done\n+\n+# treetops gets an alternating list\n+# of old directories to copy\n+# and the new directories to copy to.\n+treetops=\"${INPUT} ${LIB}\"\n+\n+set - $treetops\n+while [ $# != 0 ]; do\n+  # $1 is an old directory to copy, and $2 is the new directory to copy to.\n+  echo \"Finding header files in $1:\"\n+  cd ${INPUT}\n+  cd $1\n+  files=`find . -name '*.[hH]' -type f -print`\n+  echo 'Checking header files:'\n+  for file in $files; do\n+    echo $file\n+    if egrep \"!__STDC__|__stdcall|__cdecl\" $file >NUL; then\n+      if [ -r $file ]; then\n+\tcp $file $2/$file >NUL 2>&1 || echo \"Can't copy $file\"\n+\tchmod +w,a+r $2/$file\n+\n+# The following have been removed from the sed command below\n+# because it is more useful to leave these things in.\n+# The only reason to remove them was for -pedantic,\n+# which isn't much of a reason. -- rms.\n+#\t  /^[ \t]*#[ \t]*ident/d\n+\n+\tsed -e '\n+\t  s/!__STDC__/!defined (__STRICT_ANSI__)/g\n+\t  s/__stdcall/__attribute__((stdcall))/g\n+\t  s/__cdecl/__attribute__((cdecl))/g\n+\t' $2/$file > $2/$file.sed\n+\tmv $2/$file.sed $2/$file\n+\tif cmp $file $2/$file >NUL 2>&1; then\n+\t   rm $2/$file\n+\telse\n+\t   echo Fixed $file\n+\tfi\n+      fi\n+    fi\n+  done\n+  shift; shift\n+done\n+\n+# Fix first broken decl of getcwd present on some svr4 systems.\n+\n+file=direct.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  sed -e 's/getcwd(char \\*, int)/getcwd(char *, size_t)/' $file_to_fix > /tmp/$base\n+  if cmp $file_to_fix /tmp/$base >NUL 2>&1; then \\\n+    true\n+  else\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+    chmod a+r ${LIB}/$file\n+  fi\n+  rm -f /tmp/$base\n+fi\n+\n+file=rpcndr.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  sed -e 's/Format\\[\\]/Format\\[1\\]/' $file_to_fix > /tmp/$base\n+  if cmp $file_to_fix /tmp/$base >NUL 2>&1; then \\\n+    true\n+  else\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+    chmod a+r ${LIB}/$file\n+  fi\n+  rm -f /tmp/$base\n+fi\n+\n+file=winnt.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  sed -e '\n+    s/^#if !defined (__cplusplus)/#if 0/\n+    s/^#define DECLSPEC_IMPORT __declspec(dllimport)/#define DECLSPEC_IMPORT/\n+  ' $file_to_fix > /tmp/$base\n+  if cmp $file_to_fix /tmp/$base >NUL 2>&1; then \\\n+    true\n+  else\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+    chmod a+r ${LIB}/$file\n+  fi\n+  rm -f /tmp/$base\n+fi\n+\n+echo 'Removing unneeded directories:'\n+cd $LIB\n+files=`find . -type d -print | sort -r`\n+for file in $files; do\n+  rmdir $LIB/$file > NUL 2>&1\n+done\n+\n+exit 0"}]}