{"sha": "0f079e104a8d1994b6b47169a6b45737615eb2d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGYwNzllMTA0YThkMTk5NGI2YjQ3MTY5YTZiNDU3Mzc2MTVlYjJkNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-09-15T07:37:48Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-09-15T07:39:38Z"}, "message": "i386: Fix up vector mul and div with broadcasts in -masm=intel mode\n\nThese patterns printed bogus <>s around the {1to16} and similar strings.\n\n2020-09-15  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/97028\n\t* config/i386/sse.md (mul<mode>3<mask_name>_bcs,\n\t<avx512>_div<mode>3<mask_name>_bcst): Use <avx512bcst> instead of\n\t<<avx512bcst>>.\n\n\t* gcc.target/i386/avx512f-pr97028.c: Untested fix.", "tree": {"sha": "75349a71ae0b551ae8b099dc9947e84ca29d6965", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75349a71ae0b551ae8b099dc9947e84ca29d6965"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f079e104a8d1994b6b47169a6b45737615eb2d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f079e104a8d1994b6b47169a6b45737615eb2d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f079e104a8d1994b6b47169a6b45737615eb2d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f079e104a8d1994b6b47169a6b45737615eb2d7/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "972da557463ec946a31577294764a186b9821012", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/972da557463ec946a31577294764a186b9821012", "html_url": "https://github.com/Rust-GCC/gccrs/commit/972da557463ec946a31577294764a186b9821012"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "934b60a288fbd0d3f53ac8595c2da4b922ad85f4", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f079e104a8d1994b6b47169a6b45737615eb2d7/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f079e104a8d1994b6b47169a6b45737615eb2d7/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=0f079e104a8d1994b6b47169a6b45737615eb2d7", "patch": "@@ -1867,7 +1867,7 @@\n \t     (match_operand:<ssescalarmode> 1 \"memory_operand\" \"m\"))\n \t  (match_operand:VF_AVX512 2 \"register_operand\" \"v\")))]\n   \"TARGET_AVX512F && <mask_mode512bit_condition>\"\n-  \"vmul<ssemodesuffix>\\t{%1<avx512bcst>, %2, %0<mask_operand3>|%0<mask_operand3>, %2, %1<<avx512bcst>>}\"\n+  \"vmul<ssemodesuffix>\\t{%1<avx512bcst>, %2, %0<mask_operand3>|%0<mask_operand3>, %2, %1<avx512bcst>}\"\n   [(set_attr \"prefix\" \"evex\")\n    (set_attr \"type\" \"ssemul\")\n    (set_attr \"mode\" \"<MODE>\")])\n@@ -1960,7 +1960,7 @@\n \t  (vec_duplicate:VF_AVX512\n \t     (match_operand:<ssescalarmode> 2 \"memory_operand\" \"m\"))))]\n   \"TARGET_AVX512F && <mask_mode512bit_condition>\"\n-  \"vdiv<ssemodesuffix>\\t{%2<avx512bcst>, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2<<avx512bcst>>}\"\n+  \"vdiv<ssemodesuffix>\\t{%2<avx512bcst>, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2<avx512bcst>}\"\n   [(set_attr \"prefix\" \"evex\")\n     (set_attr \"type\" \"ssediv\")\n    (set_attr \"mode\" \"<MODE>\")])"}, {"sha": "2719108a4117fac588878b31021fa31068004727", "filename": "gcc/testsuite/gcc.target/i386/avx512f-pr97028.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f079e104a8d1994b6b47169a6b45737615eb2d7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr97028.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f079e104a8d1994b6b47169a6b45737615eb2d7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr97028.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr97028.c?ref=0f079e104a8d1994b6b47169a6b45737615eb2d7", "patch": "@@ -0,0 +1,18 @@\n+/* PR target/97028 */\n+/* { dg-do assemble { target avx512f } } */\n+/* { dg-require-effective-target masm_intel } */\n+/* { dg-options \"-O2 -mavx512f -masm=intel\" } */\n+\n+#include <x86intrin.h>\n+\n+__m512\n+foo (__m512 x, float *y)\n+{\n+  return _mm512_mul_ps (x, _mm512_set1_ps (*y));\n+}\n+\n+__m512\n+bar (__m512 x, float *y)\n+{\n+  return _mm512_div_ps (x, _mm512_set1_ps (*y));\n+}"}]}