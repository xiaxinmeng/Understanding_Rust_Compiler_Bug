{"sha": "d39289db5ad1bd3146c0f3aca3d1ebcbd83a3a14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM5Mjg5ZGI1YWQxYmQzMTQ2YzBmM2FjYTNkMWViY2JkODNhM2ExNA==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb@suse.de", "date": "2004-11-16T10:00:11Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2004-11-16T10:00:11Z"}, "message": "stack.h: Remove.\n\n\t* stack.h: Remove.\n\ncp/\n\t* Make-lang.in (cp/decl.o, cp/search.o): Don't depend on stack.h.\n\t* search.c: Don't include it.\n\nFrom-SVN: r90724", "tree": {"sha": "f65286049ddb6dd3c3fe71a7d7c9537bd1d45281", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f65286049ddb6dd3c3fe71a7d7c9537bd1d45281"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d39289db5ad1bd3146c0f3aca3d1ebcbd83a3a14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d39289db5ad1bd3146c0f3aca3d1ebcbd83a3a14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d39289db5ad1bd3146c0f3aca3d1ebcbd83a3a14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d39289db5ad1bd3146c0f3aca3d1ebcbd83a3a14/comments", "author": null, "committer": null, "parents": [{"sha": "03e00d30aa5f4f2894133d415552b0b4eeff1451", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03e00d30aa5f4f2894133d415552b0b4eeff1451", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03e00d30aa5f4f2894133d415552b0b4eeff1451"}], "stats": {"total": 56, "additions": 11, "deletions": 45}, "files": [{"sha": "006fd8024026a6814249504672e401c31622c56a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d39289db5ad1bd3146c0f3aca3d1ebcbd83a3a14/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d39289db5ad1bd3146c0f3aca3d1ebcbd83a3a14/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d39289db5ad1bd3146c0f3aca3d1ebcbd83a3a14", "patch": "@@ -1,3 +1,7 @@\n+2004-11-16  Steven Bosscher  <stevenb@suse.de>\n+\n+\t* stack.h: Remove.\n+\n 2004-11-16  Steven Bosscher  <stevenb@suse.de>\n \n \t* config/i386/i386.c (x86_schedule): Fix typo, m_K6 intead of m_K8."}, {"sha": "a538e5e14f2d8b4f3502d5c924772986b584e527", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d39289db5ad1bd3146c0f3aca3d1ebcbd83a3a14/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d39289db5ad1bd3146c0f3aca3d1ebcbd83a3a14/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d39289db5ad1bd3146c0f3aca3d1ebcbd83a3a14", "patch": "@@ -1,3 +1,8 @@\n+2004-11-16  Steven Bosscher  <stevenb@suse.de>\n+\n+\t* Make-lang.in (cp/decl.o, cp/search.o): Don't depend on stack.h.\n+\t* search.c: Don't include it.\n+\n 2004-11-15  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \t* cp-gimplify.c: Include pointer-set.h"}, {"sha": "245f4063962e645f9d245a0354564d3ced746b83", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d39289db5ad1bd3146c0f3aca3d1ebcbd83a3a14/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d39289db5ad1bd3146c0f3aca3d1ebcbd83a3a14/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=d39289db5ad1bd3146c0f3aca3d1ebcbd83a3a14", "patch": "@@ -227,7 +227,7 @@ cp/lex.o: cp/lex.c $(CXX_TREE_H) $(TM_H) flags.h \\\n cp/cp-lang.o: cp/cp-lang.c $(CXX_TREE_H) $(TM_H) toplev.h debug.h langhooks.h \\\n   $(LANGHOOKS_DEF_H) c-common.h gtype-cp.h $(CXX_PRETTY_PRINT_H) $(DIAGNOSTIC_H) \\\n   cp/cp-objcp-common.h\n-cp/decl.o: cp/decl.c $(CXX_TREE_H) $(TM_H) flags.h cp/decl.h stack.h \\\n+cp/decl.o: cp/decl.c $(CXX_TREE_H) $(TM_H) flags.h cp/decl.h \\\n   output.h $(EXPR_H) except.h toplev.h $(HASHTAB_H) $(RTL_H) \\\n   cp/operators.def $(TM_P_H) tree-inline.h diagnostic.h c-pragma.h \\\n   debug.h gt-cp-decl.h timevar.h $(TREE_FLOW_H)\n@@ -250,7 +250,7 @@ cp/init.o: cp/init.c $(CXX_TREE_H) $(TM_H) flags.h $(RTL_H) $(EXPR_H) toplev.h \\\n cp/method.o: cp/method.c $(CXX_TREE_H) $(TM_H) toplev.h $(RTL_H) $(EXPR_H) \\\n   $(TM_P_H) $(TARGET_H) gt-cp-method.h\n cp/cvt.o: cp/cvt.c $(CXX_TREE_H) $(TM_H) cp/decl.h flags.h toplev.h convert.h\n-cp/search.o: cp/search.c $(CXX_TREE_H) $(TM_H) stack.h flags.h toplev.h $(RTL_H)\n+cp/search.o: cp/search.c $(CXX_TREE_H) $(TM_H) flags.h toplev.h $(RTL_H)\n cp/tree.o: cp/tree.c $(CXX_TREE_H) $(TM_H) flags.h toplev.h $(RTL_H) \\\n   insn-config.h integrate.h tree-inline.h real.h gt-cp-tree.h $(TARGET_H)\n cp/ptree.o: cp/ptree.c $(CXX_TREE_H) $(TM_H)"}, {"sha": "cedf1da6d2b72a5b6ed27fcd2313540851d45093", "filename": "gcc/cp/search.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d39289db5ad1bd3146c0f3aca3d1ebcbd83a3a14/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d39289db5ad1bd3146c0f3aca3d1ebcbd83a3a14/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=d39289db5ad1bd3146c0f3aca3d1ebcbd83a3a14", "patch": "@@ -34,7 +34,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"rtl.h\"\n #include \"output.h\"\n #include \"toplev.h\"\n-#include \"stack.h\"\n \n static int is_subobject_of_p (tree, tree);\n static tree dfs_lookup_base (tree, void *);"}, {"sha": "12161036691228df0de5c306904befc050c6bd39", "filename": "gcc/stack.h", "status": "removed", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03e00d30aa5f4f2894133d415552b0b4eeff1451/gcc%2Fstack.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03e00d30aa5f4f2894133d415552b0b4eeff1451/gcc%2Fstack.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstack.h?ref=03e00d30aa5f4f2894133d415552b0b4eeff1451", "patch": "@@ -1,42 +0,0 @@\n-/* stack.h - structed access to object stacks\n-   Copyright (C) 1988, 2000, 2003 Free Software Foundation, Inc.\n-   Contributed by Michael Tiemann (tiemann@cygnus.com).\n-\n-This program is free software; you can redistribute it and/or modify it\n-under the terms of the GNU General Public License as published by the\n-Free Software Foundation; either version 2, or (at your option) any\n-later version.\n-\n-This program is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with this program; if not, write to the Free Software\n-Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* Summary: this file contains additional structures that layer\n-   on top of obstacks for GNU C++.  */\n-\n-/* Stack of data placed on obstacks.  */\n-\n-struct stack_level\n-{\n-  /* Pointer back to previous such level.  */\n-  struct stack_level *prev;\n-\n-  /* Point to obstack we should return to.  */\n-  struct obstack *obstack;\n-\n-  /* First place we start putting data.  */\n-  tree *first;\n-\n-  /* Number of entries we can have from `first'.\n-     Right now we are dumb: if we overflow, abort.  */\n-  int limit;\n-};\n-\n-struct stack_level *push_stack_level (struct obstack *, char *, int);\n-struct stack_level *pop_stack_level (struct stack_level *);"}]}