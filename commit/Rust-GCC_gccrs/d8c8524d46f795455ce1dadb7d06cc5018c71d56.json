{"sha": "d8c8524d46f795455ce1dadb7d06cc5018c71d56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhjODUyNGQ0NmY3OTU0NTVjZTFkYWRiN2QwNmNjNTAxOGM3MWQ1Ng==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2003-03-25T20:30:36Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-03-25T20:30:36Z"}, "message": "call.c (print_z_candidate): Change name of first arg to msgid.\n\n        * call.c (print_z_candidate): Change name of first arg to msgid.\n        (joust): Add comment for translators.\n\nFrom-SVN: r64864", "tree": {"sha": "4e75373d0995d10cb40c5c4d60f210fed2fa8708", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e75373d0995d10cb40c5c4d60f210fed2fa8708"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8c8524d46f795455ce1dadb7d06cc5018c71d56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8c8524d46f795455ce1dadb7d06cc5018c71d56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8c8524d46f795455ce1dadb7d06cc5018c71d56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8c8524d46f795455ce1dadb7d06cc5018c71d56/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2e2255ffff45da118ea54715fbe880624f29b9cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e2255ffff45da118ea54715fbe880624f29b9cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e2255ffff45da118ea54715fbe880624f29b9cf"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "1fe0268f17b7abffe9ab03cc01e51f642339224f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c8524d46f795455ce1dadb7d06cc5018c71d56/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c8524d46f795455ce1dadb7d06cc5018c71d56/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d8c8524d46f795455ce1dadb7d06cc5018c71d56", "patch": "@@ -1,3 +1,8 @@\n+2003-03-25  Jason Merrill  <jason@redhat.com>\n+\n+\t* call.c (print_z_candidate): Change name of first arg to msgid.\n+\t(joust): Add comment for translators.\n+\n 2003-03-24  Nathan Sidwell  <nathan@codesourcery.com>\n \t\n \tPR c++/9898, PR c++/383, DR 322"}, {"sha": "101b3417435a6d1e11f0b0441078e51fb771d6ec", "filename": "gcc/cp/call.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8c8524d46f795455ce1dadb7d06cc5018c71d56/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8c8524d46f795455ce1dadb7d06cc5018c71d56/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=d8c8524d46f795455ce1dadb7d06cc5018c71d56", "patch": "@@ -56,6 +56,8 @@ static void op_error (enum tree_code, enum tree_code, tree, tree,\n static tree build_object_call (tree, tree);\n static tree resolve_args (tree);\n static struct z_candidate *build_user_type_conversion_1 (tree, tree, int);\n+static void print_z_candidate (const char *msgid, struct z_candidate *,\n+\t\t\t       void (*)(const char *, ...));\n static void print_z_candidates (struct z_candidate *);\n static tree build_this (tree);\n static struct z_candidate *splice_viable (struct z_candidate *, bool, bool *);\n@@ -2440,28 +2442,28 @@ equal_functions (tree fn1, tree fn2)\n    (i.e. error, warning or pedwarn) used to do the printing.  */\n \n static void\n-print_z_candidate (const char *str, struct z_candidate *candidate,\n+print_z_candidate (const char *msgid, struct z_candidate *candidate,\n \t\t   void (*errfn)(const char *, ...))\n {\n   if (TREE_CODE (candidate->fn) == IDENTIFIER_NODE)\n     {\n       if (TREE_VEC_LENGTH (candidate->convs) == 3)\n-\terrfn (\"%s %D(%T, %T, %T) <built-in>\", str, candidate->fn,\n+\terrfn (\"%s %D(%T, %T, %T) <built-in>\", msgid, candidate->fn,\n \t       TREE_TYPE (TREE_VEC_ELT (candidate->convs, 0)),\n \t       TREE_TYPE (TREE_VEC_ELT (candidate->convs, 1)),\n \t       TREE_TYPE (TREE_VEC_ELT (candidate->convs, 2)));\n       else if (TREE_VEC_LENGTH (candidate->convs) == 2)\n-\terrfn (\"%s %D(%T, %T) <built-in>\", str, candidate->fn,\n+\terrfn (\"%s %D(%T, %T) <built-in>\", msgid, candidate->fn,\n \t       TREE_TYPE (TREE_VEC_ELT (candidate->convs, 0)),\n \t       TREE_TYPE (TREE_VEC_ELT (candidate->convs, 1)));\n       else\n-\terrfn (\"%s %D(%T) <built-in>\", str, candidate->fn,\n+\terrfn (\"%s %D(%T) <built-in>\", msgid, candidate->fn,\n \t       TREE_TYPE (TREE_VEC_ELT (candidate->convs, 0)));\n     }\n   else if (TYPE_P (candidate->fn))\n-    errfn (\"%s %T <conversion>\", str, candidate->fn);\n+    errfn (\"%s %T <conversion>\", msgid, candidate->fn);\n   else\n-    errfn (\"%H%s %+#D%s\", &DECL_SOURCE_LOCATION (candidate->fn), str,\n+    errfn (\"%H%s %+#D%s\", &DECL_SOURCE_LOCATION (candidate->fn), msgid,\n \t   candidate->fn, candidate->viable == -1 ? \" <near match>\" : \"\");\n }\n \n@@ -5873,6 +5875,8 @@ joust (struct z_candidate *cand1, struct z_candidate *cand2, bool warn)\n \t  if (warn)\n \t    {\n \t      print_z_candidate (\"ISO C++ says that \", w, pedwarn);\n+\t      /* Translators note: This message is a continuation of the\n+\t         previous one, aligned on the right.  */\n \t      print_z_candidate (\"              and \", l, pedwarn);\n \t      pedwarn (\"are ambiguous even though the worst conversion \\\n for the former is better than the worst conversion for the latter\");"}]}