{"sha": "000ca3735db480acadfa250f51271907951790d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAwY2EzNzM1ZGI0ODBhY2FkZmEyNTBmNTEyNzE5MDc5NTE3OTBkNg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-04-07T09:53:18Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-04-07T09:53:18Z"}, "message": "alpha.c (alpha_emit_conditional_move): Fail if we discover we need a pseudo and no_new_pseudos is true.\n\n        * config/alpha/alpha.c (alpha_emit_conditional_move): Fail\n        if we discover we need a pseudo and no_new_pseudos is true.\n        * config/alpha/alpha.md (ne:DI insn): New.\n        (trunctfsf2, sne): Emit NE instead of non-canonical LTU.\n\nFrom-SVN: r32998", "tree": {"sha": "4f6ee96bfcae70116965086e9e927ad54c03d975", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f6ee96bfcae70116965086e9e927ad54c03d975"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/000ca3735db480acadfa250f51271907951790d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/000ca3735db480acadfa250f51271907951790d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/000ca3735db480acadfa250f51271907951790d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/000ca3735db480acadfa250f51271907951790d6/comments", "author": null, "committer": null, "parents": [{"sha": "0c99ec5c426117d4cd53e64e9ad4b22f3a903f36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c99ec5c426117d4cd53e64e9ad4b22f3a903f36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c99ec5c426117d4cd53e64e9ad4b22f3a903f36"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "2ff67110f626b7f1a182eb5ffc6113cf831a5b04", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000ca3735db480acadfa250f51271907951790d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000ca3735db480acadfa250f51271907951790d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=000ca3735db480acadfa250f51271907951790d6", "patch": "@@ -1,3 +1,10 @@\n+2000-04-07  Richard Henderson  <rth@cygnus.com>\n+\n+\t* config/alpha/alpha.c (alpha_emit_conditional_move): Fail\n+\tif we discover we need a pseudo and no_new_pseudos is true.\n+\t* config/alpha/alpha.md (ne:DI insn): New.\n+\t(trunctfsf2, sne): Emit NE instead of non-canonical LTU.\n+\n 2000-04-07  Richard Henderson  <rth@cygnus.com>\n \n \t* rtl.def (COND_EXEC): New."}, {"sha": "7d82f3062b0643e7616f193bb5a667e2193ab60d", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000ca3735db480acadfa250f51271907951790d6/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000ca3735db480acadfa250f51271907951790d6/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=000ca3735db480acadfa250f51271907951790d6", "patch": "@@ -1769,11 +1769,14 @@ alpha_emit_conditional_move (cmp, mode)\n       && (op0 == CONST0_RTX (cmp_mode) || op1 == CONST0_RTX (cmp_mode)))\n     return gen_rtx_fmt_ee (code, VOIDmode, op0, op1);\n \n-  /* We can't put the comparison insides a conditional move;\n+  /* We can't put the comparison inside the conditional move;\n      emit a compare instruction and put that inside the\n      conditional move.  Make sure we emit only comparisons we have;\n      swap or reverse as necessary.  */\n \n+  if (no_new_pseudos)\n+    return NULL_RTX;\n+\n   switch (code)\n     {\n     case EQ:  case LE:  case LT:  case LEU:  case LTU:"}, {"sha": "5b9dd8e945904b554faa2e9f202ee0b73a8b3281", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/000ca3735db480acadfa250f51271907951790d6/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/000ca3735db480acadfa250f51271907951790d6/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=000ca3735db480acadfa250f51271907951790d6", "patch": "@@ -2240,7 +2240,7 @@\n      which prevents rounding error in the final conversion to SFmode.  */\n \n   emit_insn (gen_rtx_SET (VOIDmode, sticky, \n-\t\t\t  gen_rtx_LTU (DImode, const0_rtx, lo)));\n+\t\t\t  gen_rtx_NE (DImode, lo, const0_rtx)));\n   emit_insn (gen_iordi3 (hi, hi, sticky));\n   emit_insn (gen_trunctfdf2 (tmpf, arg));\n   emit_insn (gen_truncdfsf2 (operands[0], tmpf));\n@@ -2495,6 +2495,14 @@\n ;; Next are all the integer comparisons, and conditional moves and branches\n ;; and some of the related define_expand's and define_split's.\n \n+(define_insn \"\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(ne:DI (match_operand:DI 1 \"reg_or_8bit_operand\" \"rI\")\n+\t       (const_int 0)))]\n+  \"\"\n+  \"cmpult $31,%1,%0\"\n+  [(set_attr \"type\" \"icmp\")])\n+\n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(match_operator:DI 1 \"alpha_comparison_operator\"\n@@ -3314,7 +3322,9 @@\n \n   if (alpha_compare.op1 == const0_rtx)\n     {\n-      emit_insn (gen_sgtu (operands[0]));\n+      operands[1] = gen_rtx_NE (DImode, alpha_compare.op0, alpha_compare.op1);\n+      alpha_compare.op0 = alpha_compare.op1 = NULL_RTX;\n+      emit_insn (gen_rtx_SET (VOIDmode, operands[0], operands[1]));\n       DONE;\n     }\n "}]}