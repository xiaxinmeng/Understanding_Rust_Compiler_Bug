{"sha": "2455de38092d824391fe2612cbf9dad890e349a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ1NWRlMzgwOTJkODI0MzkxZmUyNjEyY2JmOWRhZDg5MGUzNDlhNw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-10-31T20:10:26Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-10-31T20:10:26Z"}, "message": "i386.c (ix86_expand_prologue): Emit frame info for the special register pushes before frame probing and allocation.\n\n\t* config/i386/i386.c (ix86_expand_prologue): Emit frame info for the\n\tspecial register pushes before frame probing and allocation.\n\nFrom-SVN: r193044", "tree": {"sha": "c24922c6ba76cf3ef0324fab9758a7ba02cce799", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c24922c6ba76cf3ef0324fab9758a7ba02cce799"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2455de38092d824391fe2612cbf9dad890e349a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2455de38092d824391fe2612cbf9dad890e349a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2455de38092d824391fe2612cbf9dad890e349a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2455de38092d824391fe2612cbf9dad890e349a7/comments", "author": null, "committer": null, "parents": [{"sha": "03d31730bfa422561a7e62915eb2c304bac27f19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03d31730bfa422561a7e62915eb2c304bac27f19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03d31730bfa422561a7e62915eb2c304bac27f19"}], "stats": {"total": 33, "additions": 25, "deletions": 8}, "files": [{"sha": "02e0d4ea66a7929d5073a92ae8192cd5d7c13f33", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2455de38092d824391fe2612cbf9dad890e349a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2455de38092d824391fe2612cbf9dad890e349a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2455de38092d824391fe2612cbf9dad890e349a7", "patch": "@@ -1,3 +1,8 @@\n+2012-10-31  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/i386/i386.c (ix86_expand_prologue): Emit frame info for the\n+\tspecial register pushes before frame probing and allocation.\n+\n 2012-10-31  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR middle-end/55150"}, {"sha": "1c34bb28799ec94c8ca4929996a197cf38633e53", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2455de38092d824391fe2612cbf9dad890e349a7/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2455de38092d824391fe2612cbf9dad890e349a7/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=2455de38092d824391fe2612cbf9dad890e349a7", "patch": "@@ -10699,7 +10699,7 @@ ix86_expand_prologue (void)\n       rtx eax = gen_rtx_REG (Pmode, AX_REG);\n       rtx r10 = NULL;\n       rtx (*adjust_stack_insn)(rtx, rtx, rtx);\n-\n+      const bool sp_is_cfa_reg = (m->fs.cfa_reg == stack_pointer_rtx);\n       bool eax_live = false;\n       bool r10_live = false;\n \n@@ -10708,16 +10708,31 @@ ix86_expand_prologue (void)\n       if (!TARGET_64BIT_MS_ABI)\n         eax_live = ix86_eax_live_at_start_p ();\n \n+      /* Note that SEH directives need to continue tracking the stack\n+\t pointer even after the frame pointer has been set up.  */\n       if (eax_live)\n \t{\n-\t  emit_insn (gen_push (eax));\n+\t  insn = emit_insn (gen_push (eax));\n \t  allocate -= UNITS_PER_WORD;\n+\t  if (sp_is_cfa_reg || TARGET_SEH)\n+\t    {\n+\t      if (sp_is_cfa_reg)\n+\t\tm->fs.cfa_offset += UNITS_PER_WORD;\n+\t      RTX_FRAME_RELATED_P (insn) = 1;\n+\t    }\n \t}\n+\n       if (r10_live)\n \t{\n \t  r10 = gen_rtx_REG (Pmode, R10_REG);\n-\t  emit_insn (gen_push (r10));\n+\t  insn = emit_insn (gen_push (r10));\n \t  allocate -= UNITS_PER_WORD;\n+\t  if (sp_is_cfa_reg || TARGET_SEH)\n+\t    {\n+\t      if (sp_is_cfa_reg)\n+\t\tm->fs.cfa_offset += UNITS_PER_WORD;\n+\t      RTX_FRAME_RELATED_P (insn) = 1;\n+\t    }\n \t}\n \n       emit_move_insn (eax, GEN_INT (allocate));\n@@ -10731,13 +10746,10 @@ ix86_expand_prologue (void)\n       insn = emit_insn (adjust_stack_insn (stack_pointer_rtx,\n \t\t\t\t\t   stack_pointer_rtx, eax));\n \n-      /* Note that SEH directives need to continue tracking the stack\n-\t pointer even after the frame pointer has been set up.  */\n-      if (m->fs.cfa_reg == stack_pointer_rtx || TARGET_SEH)\n+      if (sp_is_cfa_reg || TARGET_SEH)\n \t{\n-\t  if (m->fs.cfa_reg == stack_pointer_rtx)\n+\t  if (sp_is_cfa_reg)\n \t    m->fs.cfa_offset += allocate;\n-\n \t  RTX_FRAME_RELATED_P (insn) = 1;\n \t  add_reg_note (insn, REG_FRAME_RELATED_EXPR,\n \t\t\tgen_rtx_SET (VOIDmode, stack_pointer_rtx,"}]}