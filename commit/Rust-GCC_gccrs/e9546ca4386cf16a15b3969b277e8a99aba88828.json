{"sha": "e9546ca4386cf16a15b3969b277e8a99aba88828", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk1NDZjYTQzODZjZjE2YTE1YjM5NjliMjc3ZThhOTlhYmE4ODgyOA==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@redhat.com", "date": "2001-09-27T19:20:12Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "2001-09-27T19:20:12Z"}, "message": "parse.y (check_final_variable_indirect_assignment): For COMPOUND_EXPR...\n\n2001-09-26  Alexandre Petit-Bianco  <apbianco@redhat.com>\n\n\t* parse.y (check_final_variable_indirect_assignment): For\n\tCOMPOUND_EXPR, return only if finals were found initialized\n\tproperly, if not, keep on checking.\n\t(check_final_variable_global_assignment_flag): New local\n\terror_found, set when appropriate and used to decide whether to\n\treport uninitialized finals. Fixed typo in comment.\n\n( http://gcc.gnu.org/ml/gcc-patches/2001-09/msg01160.html )\n\nFrom-SVN: r45844", "tree": {"sha": "b821a55f43ed8466b11677e96c7cab18c8effb63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b821a55f43ed8466b11677e96c7cab18c8effb63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9546ca4386cf16a15b3969b277e8a99aba88828", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9546ca4386cf16a15b3969b277e8a99aba88828", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9546ca4386cf16a15b3969b277e8a99aba88828", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9546ca4386cf16a15b3969b277e8a99aba88828/comments", "author": null, "committer": null, "parents": [{"sha": "595207883411f36ea954689e229ff188e29c0ba1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/595207883411f36ea954689e229ff188e29c0ba1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/595207883411f36ea954689e229ff188e29c0ba1"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "53b1ce6dc43dc6cba26b2577ecf7d452976439b3", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9546ca4386cf16a15b3969b277e8a99aba88828/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9546ca4386cf16a15b3969b277e8a99aba88828/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=e9546ca4386cf16a15b3969b277e8a99aba88828", "patch": "@@ -1,3 +1,12 @@\n+2001-09-26  Alexandre Petit-Bianco  <apbianco@redhat.com>\n+\n+\t* parse.y (check_final_variable_indirect_assignment): For\n+\tCOMPOUND_EXPR, return only if finals were found initialized\n+\tproperly, if not, keep on checking.\n+\t(check_final_variable_global_assignment_flag): New local\n+\terror_found, set when appropriate and used to decide whether to\n+\treport uninitialized finals. Fixed typo in comment.\n+\n 2001-09-22  Alexandre Petit-Bianco  <apbianco@redhat.com>\n \n \t* decl.c (init_decl_processing): Fixed typo in predef_filenames"}, {"sha": "154fef3f699e3c90e4f90c418c349fb275465aba", "filename": "gcc/java/parse.y", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9546ca4386cf16a15b3969b277e8a99aba88828/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9546ca4386cf16a15b3969b277e8a99aba88828/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=e9546ca4386cf16a15b3969b277e8a99aba88828", "patch": "@@ -12638,7 +12638,7 @@ check_final_variable_indirect_assignment (stmt)\n       return check_final_variable_indirect_assignment (EXPR_WFL_NODE (stmt));\n     case COMPOUND_EXPR:\n       res = check_final_variable_indirect_assignment (TREE_OPERAND (stmt, 0));\n-      if (res)\n+      if (res > 0)\n \treturn res;\n       return check_final_variable_indirect_assignment (TREE_OPERAND (stmt, 1));\n     case SAVE_EXPR:\n@@ -12679,6 +12679,7 @@ check_final_variable_global_assignment_flag (class)\n {\n   tree field, mdecl;\n   int nnctor = 0;\n+  int error_found = 0;\n \n   /* We go through all natural ctors and see whether they're\n      initializing all their final variables or not. */\n@@ -12700,9 +12701,12 @@ check_final_variable_global_assignment_flag (class)\n \t\tnnctor++;\n \t      }\n \t    else\n-\t      parse_error_context\n-\t\t(lookup_cl (mdecl),\n-\t\t \"Final variable initialization error in this constructor\");\n+\t      {\n+\t\tparse_error_context\n+\t\t  (lookup_cl (mdecl),\n+\t\t   \"Final variable initialization error in this constructor\");\n+\t\terror_found = 1;\n+\t      }\n \t  }\n \telse\n \t  nnctor++;\n@@ -12713,9 +12717,9 @@ check_final_variable_global_assignment_flag (class)\n     if (FINAL_VARIABLE_P (field)\n \t/* If the field wasn't initialized upon declaration */\n \t&& !DECL_FIELD_FINAL_IUD (field)\n-\t/* There wasn't natural ctor in which the field could have been\n-\t   initialized */\n-\t&& !nnctor\n+\t/* There wasn't a natural ctor in which the field could have been\n+\t   initialized or we found an error looking for one. */\n+\t&& (error_found || !nnctor)\n \t/* If we never reported a problem with this field */\n \t&& !DECL_FIELD_FINAL_IERR (field))\n       {\n@@ -12725,7 +12729,6 @@ check_final_variable_global_assignment_flag (class)\n \t   \"Final variable `%s' hasn't been initialized upon its declaration\",\n \t   IDENTIFIER_POINTER (DECL_NAME (field)));\n       }\n-\n }\n \n /* Return 1 if an assignment to a FINAL is attempted in a non suitable"}]}