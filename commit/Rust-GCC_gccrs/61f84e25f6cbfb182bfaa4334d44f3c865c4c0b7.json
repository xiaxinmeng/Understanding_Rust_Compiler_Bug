{"sha": "61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFmODRlMjVmNmNiZmIxODJiZmFhNDMzNGQ0NGYzYzg2NWM0YzBiNw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2018-04-05T17:08:21Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2018-04-05T17:08:21Z"}, "message": "re PR c++/80956 (ICE with abstract class vector)\n\n/cp\n2018-04-05  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/80956\n\t* call.c (convert_like_real): Fail gracefully for a broken\n\tstd::initializer_list, missing a definition.\n\n\t* name-lookup.c (do_pushtag): Tweak message, use %< and %>.\n\n/testsuite\n2018-04-05  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/80956\n\t* g++.dg/cpp0x/initlist100.C: New.\n\t* g++.dg/cpp0x/initlist101.C: Likewise.\n\nFrom-SVN: r259137", "tree": {"sha": "902ce68a79ce3d3656c8f1e62d00ec1dd824c360", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/902ce68a79ce3d3656c8f1e62d00ec1dd824c360"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7/comments", "author": null, "committer": null, "parents": [{"sha": "3b4a12aa8a7c7298c0b6277dad82e1dd95857eb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b4a12aa8a7c7298c0b6277dad82e1dd95857eb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b4a12aa8a7c7298c0b6277dad82e1dd95857eb8"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "4065440c1d9c24a9a337f49619bafe6fba3bc4de", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7", "patch": "@@ -1,3 +1,11 @@\n+2018-04-05  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/80956\n+\t* call.c (convert_like_real): Fail gracefully for a broken\n+\tstd::initializer_list, missing a definition.\n+\n+\t* name-lookup.c (do_pushtag): Tweak message, use %< and %>.\n+\n 2018-04-05  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/84792"}, {"sha": "b22a3cc132e34590e50ad125aa80294352b7e8d1", "filename": "gcc/cp/call.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7", "patch": "@@ -6880,8 +6880,12 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \tif (array == error_mark_node)\n \t  return error_mark_node;\n \n-\t/* Build up the initializer_list object.  */\n-\ttotype = complete_type (totype);\n+\t/* Build up the initializer_list object.  Note: fail gracefully\n+\t   if the object cannot be completed because, for example, no\n+\t   definition is provided (c++/80956).  */\n+\ttotype = complete_type_or_maybe_complain (totype, NULL_TREE, complain);\n+\tif (!totype)\n+\t  return error_mark_node;\n \tfield = next_initializable_field (TYPE_FIELDS (totype));\n \tCONSTRUCTOR_APPEND_ELT (vec, field, array);\n \tfield = next_initializable_field (DECL_CHAIN (field));"}, {"sha": "62f0b3f037b12c746349948d77c49c5cf400b717", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7", "patch": "@@ -6476,8 +6476,8 @@ do_pushtag (tree name, tree type, tag_scope scope)\n \t      && init_list_identifier == DECL_NAME (TYPE_NAME (type))\n \t      && !CLASSTYPE_TEMPLATE_INFO (type))\n \t    {\n-\t      error (\"declaration of std::initializer_list does not match \"\n-\t\t     \"#include <initializer_list>, isn't a template\");\n+\t      error (\"declaration of %<std::initializer_list%> does not match \"\n+\t\t     \"%<#include <initializer_list>%>, isn't a template\");\n \t      return error_mark_node;\n \t    }\n \t}"}, {"sha": "1acfe0c89ea84b6494ea3492473043924baa5745", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7", "patch": "@@ -1,3 +1,9 @@\n+2018-04-05  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/80956\n+\t* g++.dg/cpp0x/initlist100.C: New.\n+\t* g++.dg/cpp0x/initlist101.C: Likewise.\n+\n 2018-04-05  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/84792"}, {"sha": "9d80a004c173f2a1f35d96ffe5d2b94d547e0a3e", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist100.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist100.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist100.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist100.C?ref=61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/80956\n+// { dg-do compile { target c++11 } }\n+\n+namespace std {\n+template <class> class initializer_list;  // { dg-message \"declaration\" }\n+}\n+\n+template <typename T> struct B { B (std::initializer_list<T>); };\n+struct C { virtual int foo (); };\n+struct D : C {} d { B<C> { D {} } };  // { dg-error \"incomplete|no matching\" }"}, {"sha": "a0f355220d8a5615377bc03ba80c44cda33adf1f", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist101.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist101.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist101.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist101.C?ref=61f84e25f6cbfb182bfaa4334d44f3c865c4c0b7", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/80956\n+// { dg-do compile { target c++11 } }\n+\n+#include <initializer_list>\n+\n+template <typename T> struct B { B (std::initializer_list<T>); };\n+struct C { virtual int foo (); };\n+struct D : C {} d { B<C> { D {} } };  // { dg-error \"no matching\" }"}]}