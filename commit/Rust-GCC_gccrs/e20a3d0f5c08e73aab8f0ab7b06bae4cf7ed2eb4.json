{"sha": "e20a3d0f5c08e73aab8f0ab7b06bae4cf7ed2eb4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIwYTNkMGY1YzA4ZTczYWFiOGYwYWI3YjA2YmFlNGNmN2VkMmViNA==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-01-20T23:23:44Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-01-20T23:23:44Z"}, "message": "[ARM/AArch64][testsuite] Add vmlal_lane and vmlsl_lane tests.\n\n2015-01-20  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vmlXl_lane.inc: New file.\n\t* gcc.target/aarch64/advsimd-intrinsics/vmlal_lane.c: New file.\n\t* gcc.target/aarch64/advsimd-intrinsics/vmlsl_lane.c: New file.\n\nFrom-SVN: r219921", "tree": {"sha": "ef79c8af3792ffe479582b0edc9e8e5adef365c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef79c8af3792ffe479582b0edc9e8e5adef365c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e20a3d0f5c08e73aab8f0ab7b06bae4cf7ed2eb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e20a3d0f5c08e73aab8f0ab7b06bae4cf7ed2eb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e20a3d0f5c08e73aab8f0ab7b06bae4cf7ed2eb4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e20a3d0f5c08e73aab8f0ab7b06bae4cf7ed2eb4/comments", "author": null, "committer": null, "parents": [{"sha": "8e4a8e54ae42c1c30b3603f3a7069c03f3580c36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e4a8e54ae42c1c30b3603f3a7069c03f3580c36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e4a8e54ae42c1c30b3603f3a7069c03f3580c36"}], "stats": {"total": 108, "additions": 108, "deletions": 0}, "files": [{"sha": "4f56521eb4a8942c7cb1e896f9582f5b196ccd4a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e20a3d0f5c08e73aab8f0ab7b06bae4cf7ed2eb4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e20a3d0f5c08e73aab8f0ab7b06bae4cf7ed2eb4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e20a3d0f5c08e73aab8f0ab7b06bae4cf7ed2eb4", "patch": "@@ -1,3 +1,9 @@\n+2015-01-20  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmlXl_lane.inc: New file.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmlal_lane.c: New file.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmlsl_lane.c: New file.\n+\n 2015-01-20  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vmlXl.inc: New file."}, {"sha": "ca451349c07f1045c4542ede30a4063bd22e008d", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmlXl_lane.inc", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e20a3d0f5c08e73aab8f0ab7b06bae4cf7ed2eb4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvmlXl_lane.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e20a3d0f5c08e73aab8f0ab7b06bae4cf7ed2eb4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvmlXl_lane.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvmlXl_lane.inc?ref=e20a3d0f5c08e73aab8f0ab7b06bae4cf7ed2eb4", "patch": "@@ -0,0 +1,70 @@\n+#define FNNAME1(NAME) exec_ ## NAME\n+#define FNNAME(NAME) FNNAME1(NAME)\n+\n+void FNNAME (INSN_NAME) (void)\n+{\n+  /* vector_res = vmlxl_lane(vector, vector3, vector4, lane),\n+     then store the result.  */\n+#define TEST_VMLXL_LANE1(INSN, T1, T2, W, W2, N, V)\t\t\t\\\n+  VECT_VAR(vector_res, T1, W, N) =                                      \\\n+    INSN##_##T2##W2(VECT_VAR(vector, T1, W, N),                         \\\n+                    VECT_VAR(vector3, T1, W2, N),                       \\\n+                    VECT_VAR(vector4, T1, W2, N),                       \\\n+                    V);                                                 \\\n+  vst1q_##T2##W(VECT_VAR(result, T1, W, N), VECT_VAR(vector_res, T1, W, N))\n+\n+#define TEST_VMLXL_LANE(INSN, T1, T2, W, W2, N, V)\t\t\t\\\n+  TEST_VMLXL_LANE1(INSN, T1, T2, W, W2, N, V)\n+\n+  DECL_VARIABLE(vector, int, 32, 4);\n+  DECL_VARIABLE(vector3, int, 16, 4);\n+  DECL_VARIABLE(vector4, int, 16, 4);\n+  DECL_VARIABLE(vector_res, int, 32, 4);\n+\n+  DECL_VARIABLE(vector, int, 64, 2);\n+  DECL_VARIABLE(vector3, int, 32, 2);\n+  DECL_VARIABLE(vector4, int, 32, 2);\n+  DECL_VARIABLE(vector_res, int, 64, 2);\n+\n+  DECL_VARIABLE(vector, uint, 32, 4);\n+  DECL_VARIABLE(vector3, uint, 16, 4);\n+  DECL_VARIABLE(vector4, uint, 16, 4);\n+  DECL_VARIABLE(vector_res, uint, 32, 4);\n+\n+  DECL_VARIABLE(vector, uint, 64, 2);\n+  DECL_VARIABLE(vector3, uint, 32, 2);\n+  DECL_VARIABLE(vector4, uint, 32, 2);\n+  DECL_VARIABLE(vector_res, uint, 64, 2);\n+\n+  clean_results ();\n+\n+  VLOAD(vector, buffer, q, int, s, 32, 4);\n+  VLOAD(vector, buffer, q, int, s, 64, 2);\n+  VLOAD(vector, buffer, q, uint, u, 32, 4);\n+  VLOAD(vector, buffer, q, uint, u, 64, 2);\n+\n+  VDUP(vector3, , int, s, 16, 4, 0x55);\n+  VDUP(vector4, , int, s, 16, 4, 0xBB);\n+  VDUP(vector3, , int, s, 32, 2, 0x55);\n+  VDUP(vector4, , int, s, 32, 2, 0xBB);\n+  VDUP(vector3, , uint, u, 16, 4, 0x55);\n+  VDUP(vector4, , uint, u, 16, 4, 0xBB);\n+  VDUP(vector3, , uint, u, 32, 2, 0x55);\n+  VDUP(vector4, , uint, u, 32, 2, 0xBB);\n+\n+  TEST_VMLXL_LANE(INSN_NAME, int, s, 32, 16, 4, 2);\n+  TEST_VMLXL_LANE(INSN_NAME, int, s, 64, 32, 2, 1);\n+  TEST_VMLXL_LANE(INSN_NAME, uint, u, 32, 16, 4, 2);\n+  TEST_VMLXL_LANE(INSN_NAME, uint, u, 64, 32, 2, 1);\n+\n+  CHECK(TEST_MSG, int, 32, 4, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, int, 64, 2, PRIx64, expected, \"\");\n+  CHECK(TEST_MSG, uint, 32, 4, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, uint, 64, 2, PRIx64, expected, \"\");\n+}\n+\n+int main (void)\n+{\n+  FNNAME (INSN_NAME) ();\n+  return 0;\n+}"}, {"sha": "0a384a279cd1ea89d86fc356f7453235a02086a9", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmlal_lane.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e20a3d0f5c08e73aab8f0ab7b06bae4cf7ed2eb4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmlal_lane.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e20a3d0f5c08e73aab8f0ab7b06bae4cf7ed2eb4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmlal_lane.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmlal_lane.c?ref=e20a3d0f5c08e73aab8f0ab7b06bae4cf7ed2eb4", "patch": "@@ -0,0 +1,14 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+#define INSN_NAME vmlal_lane\n+#define TEST_MSG \"VMLAL_LANE\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0x3e07, 0x3e08, 0x3e09, 0x3e0a };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0x3e07, 0x3e08 };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0x3e07, 0x3e08, 0x3e09, 0x3e0a };\n+VECT_VAR_DECL(expected,uint,64,2) [] = { 0x3e07, 0x3e08 };\n+\n+#include \"vmlXl_lane.inc\""}, {"sha": "8b944a05fdcb06e37529322c2d866a2970e9e487", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmlsl_lane.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e20a3d0f5c08e73aab8f0ab7b06bae4cf7ed2eb4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmlsl_lane.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e20a3d0f5c08e73aab8f0ab7b06bae4cf7ed2eb4/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmlsl_lane.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmlsl_lane.c?ref=e20a3d0f5c08e73aab8f0ab7b06bae4cf7ed2eb4", "patch": "@@ -0,0 +1,18 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+#define INSN_NAME vmlsl_lane\n+#define TEST_MSG \"VMLSL_LANE\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0xffffc1d9, 0xffffc1da,\n+\t\t\t\t\t0xffffc1db, 0xffffc1dc };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0xffffffffffffc1d9,\n+\t\t\t\t\t0xffffffffffffc1da };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0xffffc1d9, 0xffffc1da,\n+\t\t\t\t\t 0xffffc1db, 0xffffc1dc };\n+VECT_VAR_DECL(expected,uint,64,2) [] = { 0xffffffffffffc1d9,\n+\t\t\t\t\t 0xffffffffffffc1da };\n+\n+#include \"vmlXl_lane.inc\""}]}