{"sha": "7694d69a1bf318d6eab3aa8278821c60a1ea8e85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY5NGQ2OWExYmYzMThkNmVhYjNhYTgyNzg4MjFjNjBhMWVhOGU4NQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-11-06T14:14:51Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-11-06T14:14:51Z"}, "message": "jni.cc (array_from_valist): Assume that jlong won't be promoted.\n\n\t* jni.cc (array_from_valist): Assume that jlong won't be\n\tpromoted.\n\nFrom-SVN: r58859", "tree": {"sha": "5e40553d62987d7a26ae4504332fd68a3ebc8043", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e40553d62987d7a26ae4504332fd68a3ebc8043"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7694d69a1bf318d6eab3aa8278821c60a1ea8e85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7694d69a1bf318d6eab3aa8278821c60a1ea8e85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7694d69a1bf318d6eab3aa8278821c60a1ea8e85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7694d69a1bf318d6eab3aa8278821c60a1ea8e85/comments", "author": null, "committer": null, "parents": [{"sha": "ca01c43fca1e23a4cf0d0f1682dfeb040dbaeff3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca01c43fca1e23a4cf0d0f1682dfeb040dbaeff3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca01c43fca1e23a4cf0d0f1682dfeb040dbaeff3"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "6a6adf974bfb521b07ffcb317cd4921fca3bbcc7", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7694d69a1bf318d6eab3aa8278821c60a1ea8e85/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7694d69a1bf318d6eab3aa8278821c60a1ea8e85/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=7694d69a1bf318d6eab3aa8278821c60a1ea8e85", "patch": "@@ -1,3 +1,8 @@\n+2002-11-06  Tom Tromey  <tromey@redhat.com>\n+\n+\t* jni.cc (array_from_valist): Assume that jlong won't be\n+\tpromoted.\n+\n 2002-11-04  R. A. Rivas Diaz  <rivasdiaz@yahoo.com>\n \n \t* gnu/java/security/provider/SHA.java (engineGetDigestLength):"}, {"sha": "9865ce42a4673c264a43577b48dc2272bccb0ac9", "filename": "libjava/jni.cc", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7694d69a1bf318d6eab3aa8278821c60a1ea8e85/libjava%2Fjni.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7694d69a1bf318d6eab3aa8278821c60a1ea8e85/libjava%2Fjni.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni.cc?ref=7694d69a1bf318d6eab3aa8278821c60a1ea8e85", "patch": "@@ -693,15 +693,21 @@ array_from_valist (jvalue *values, JArray<jclass> *arg_types, va_list vargs)\n     {\n       // Here we assume that sizeof(int) >= sizeof(jint), because we\n       // use `int' when decoding the varargs.  Likewise for\n-      // long/jlong, float, and double.\n+      // float, and double.  Also we assume that sizeof(jlong) >=\n+      // sizeof(int), i.e. that jlong values are not further\n+      // promoted.\n+      JvAssert (sizeof (int) >= sizeof (jint));\n+      JvAssert (sizeof (jlong) >= sizeof (int));\n+      JvAssert (sizeof (double) >= sizeof (jfloat));\n+      JvAssert (sizeof (double) >= sizeof (jdouble));\n       if (arg_elts[i] == JvPrimClass (byte))\n \tvalues[i].b = (jbyte) va_arg (vargs, int);\n       else if (arg_elts[i] == JvPrimClass (short))\n \tvalues[i].s = (jshort) va_arg (vargs, int);\n       else if (arg_elts[i] == JvPrimClass (int))\n \tvalues[i].i = (jint) va_arg (vargs, int);\n       else if (arg_elts[i] == JvPrimClass (long))\n-\tvalues[i].j = (jlong) va_arg (vargs, long);\n+\tvalues[i].j = (jlong) va_arg (vargs, jlong);\n       else if (arg_elts[i] == JvPrimClass (float))\n \tvalues[i].f = (jfloat) va_arg (vargs, double);\n       else if (arg_elts[i] == JvPrimClass (double))"}]}