{"sha": "c851c76cdf52884dd5e0c7befd3c809e9d174a73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg1MWM3NmNkZjUyODg0ZGQ1ZTBjN2JlZmQzYzgwOWU5ZDE3NGE3Mw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2013-01-16T04:07:20Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2013-01-16T04:07:20Z"}, "message": "inclhack.def (feraiseexcept_nosse_invalid): New.\n\n* inclhack.def (feraiseexcept_nosse_invalid): New.\n(feraiseexcept_nosse_divbyzero): Likewise.\n* fixincl.x: Rebuilt.\n* tests/base/bits/fenv.h: New.\n\nFrom-SVN: r195226", "tree": {"sha": "6416ec3c4f8c8125bba80173a8b0b23cbb57939b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6416ec3c4f8c8125bba80173a8b0b23cbb57939b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c851c76cdf52884dd5e0c7befd3c809e9d174a73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c851c76cdf52884dd5e0c7befd3c809e9d174a73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c851c76cdf52884dd5e0c7befd3c809e9d174a73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c851c76cdf52884dd5e0c7befd3c809e9d174a73/comments", "author": null, "committer": null, "parents": [{"sha": "0133a2aa7dc2ccd0fac2edbc6dabc8536fa58688", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0133a2aa7dc2ccd0fac2edbc6dabc8536fa58688", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0133a2aa7dc2ccd0fac2edbc6dabc8536fa58688"}], "stats": {"total": 215, "additions": 207, "deletions": 8}, "files": [{"sha": "88aa56368a9d3ca9bb408f20a75423162129d9ab", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c851c76cdf52884dd5e0c7befd3c809e9d174a73/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c851c76cdf52884dd5e0c7befd3c809e9d174a73/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=c851c76cdf52884dd5e0c7befd3c809e9d174a73", "patch": "@@ -1,3 +1,10 @@\n+2013-01-16  Alexandre Oliva <aoliva@redhat.com>\n+\n+\t* inclhack.def (feraiseexcept_nosse_invalid): New.\n+\t(feraiseexcept_nosse_divbyzero): Likewise.\n+\t* fixincl.x: Rebuilt.\n+\t* tests/base/bits/fenv.h: New.\n+\n 2013-01-14  Richard Biener  <rguenther@suse.de>\n \n \t* fixlib.h (verbose_level, fixinc_mode): Mark extern."}, {"sha": "29fc52abf45785d3772baf505f2b4ed862c40ec7", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 122, "deletions": 8, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c851c76cdf52884dd5e0c7befd3c809e9d174a73/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c851c76cdf52884dd5e0c7befd3c809e9d174a73/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=c851c76cdf52884dd5e0c7befd3c809e9d174a73", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  October 28, 2012 at 02:53:25 PM by AutoGen 5.17.0pre5\n+ * It has been AutoGen-ed  Saturday December 29, 2012 at 09:17:09 AM BRST\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Sun Oct 28 14:53:25 PDT 2012\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Sat Dec 29 09:17:10 BRST 2012\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 224 fixup descriptions.\n+ * This file contains 226 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -9158,14 +9158,116 @@ static const char* apzX11_SprintfPatch[] = {\n #endif /* !defined __STDC__ */\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Feraiseexcept_Nosse_Invalid fix\n+ */\n+tSCC zFeraiseexcept_Nosse_InvalidName[] =\n+     \"feraiseexcept_nosse_invalid\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zFeraiseexcept_Nosse_InvalidList[] =\n+  \"bits/fenv.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzFeraiseexcept_Nosse_InvalidMachs[] = {\n+        \"i[34567]86-*-linux*\",\n+        \"x86*-linux*\",\n+        \"amd64-*-linux*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zFeraiseexcept_Nosse_InvalidSelect0[] =\n+       \"^([\\t ]*)__asm__ __volatile__ \\\\(\\\"divss %0, %0 *\\\" : : \\\"x\\\" \\\\(__f\\\\)\\\\);$\";\n+\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zFeraiseexcept_Nosse_InvalidBypass0[] =\n+       \"\\\"fdiv .*; fwait\\\"\";\n+\n+#define    FERAISEEXCEPT_NOSSE_INVALID_TEST_CT  2\n+static tTestDesc aFeraiseexcept_Nosse_InvalidTests[] = {\n+  { TT_NEGREP,   zFeraiseexcept_Nosse_InvalidBypass0, (regex_t*)NULL },\n+  { TT_EGREP,    zFeraiseexcept_Nosse_InvalidSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Feraiseexcept_Nosse_Invalid\n+ */\n+static const char* apzFeraiseexcept_Nosse_InvalidPatch[] = {\n+    \"format\",\n+    \"# ifdef __SSE_MATH__\\n\\\n+%0\\n\\\n+# else\\n\\\n+%1__asm__ __volatile__ (\\\"fdiv %%%%st, %%%%st(0); fwait\\\"\\n\\\n+%1\\t\\t\\t: \\\"=t\\\" (__f) : \\\"0\\\" (__f));\\n\\\n+# endif\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Feraiseexcept_Nosse_Divbyzero fix\n+ */\n+tSCC zFeraiseexcept_Nosse_DivbyzeroName[] =\n+     \"feraiseexcept_nosse_divbyzero\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zFeraiseexcept_Nosse_DivbyzeroList[] =\n+  \"bits/fenv.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzFeraiseexcept_Nosse_DivbyzeroMachs[] = {\n+        \"i[34567]86-*-linux*\",\n+        \"x86*-linux*\",\n+        \"amd64-*-linux*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zFeraiseexcept_Nosse_DivbyzeroSelect0[] =\n+       \"^([\\t ]*)__asm__ __volatile__ \\\\(\\\"divss %1, %0 *\\\" : : \\\"x\\\" \\\\(__f\\\\), \\\"x\\\" \\\\(__g\\\\)\\\\);$\";\n+\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zFeraiseexcept_Nosse_DivbyzeroBypass0[] =\n+       \"\\\"fdivp .*; fwait\\\"\";\n+\n+#define    FERAISEEXCEPT_NOSSE_DIVBYZERO_TEST_CT  2\n+static tTestDesc aFeraiseexcept_Nosse_DivbyzeroTests[] = {\n+  { TT_NEGREP,   zFeraiseexcept_Nosse_DivbyzeroBypass0, (regex_t*)NULL },\n+  { TT_EGREP,    zFeraiseexcept_Nosse_DivbyzeroSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Feraiseexcept_Nosse_Divbyzero\n+ */\n+static const char* apzFeraiseexcept_Nosse_DivbyzeroPatch[] = {\n+    \"format\",\n+    \"# ifdef __SSE_MATH__\\n\\\n+%0\\n\\\n+# else\\n\\\n+%1__asm__ __volatile__ (\\\"fdivp %%%%st, %%%%st(1); fwait\\\"\\n\\\n+%1\\t\\t\\t: \\\"=t\\\" (__f) : \\\"0\\\" (__f), \\\"u\\\" (__g) : \\\"st(1)\\\");\\n\\\n+# endif\",\n+    (char*)NULL };\n+\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          260\n-#define MACH_LIST_SIZE_LIMIT 181\n-#define FIX_COUNT            224\n+#define REGEX_COUNT          264\n+#define MACH_LIST_SIZE_LIMIT 187\n+#define FIX_COUNT            226\n \n /*\n  *  Enumerate the fixes\n@@ -9394,7 +9496,9 @@ typedef enum {\n     X11_CLASS_FIXIDX,\n     X11_CLASS_USAGE_FIXIDX,\n     X11_NEW_FIXIDX,\n-    X11_SPRINTF_FIXIDX\n+    X11_SPRINTF_FIXIDX,\n+    FERAISEEXCEPT_NOSSE_INVALID_FIXIDX,\n+    FERAISEEXCEPT_NOSSE_DIVBYZERO_FIXIDX\n } t_fixinc_idx;\n \n tFixDesc fixDescList[ FIX_COUNT ] = {\n@@ -10516,5 +10620,15 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n   {  zX11_SprintfName,    zX11_SprintfList,\n      apzX11_SprintfMachs,\n      X11_SPRINTF_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aX11_SprintfTests,   apzX11_SprintfPatch, 0 }\n+     aX11_SprintfTests,   apzX11_SprintfPatch, 0 },\n+\n+  {  zFeraiseexcept_Nosse_InvalidName,    zFeraiseexcept_Nosse_InvalidList,\n+     apzFeraiseexcept_Nosse_InvalidMachs,\n+     FERAISEEXCEPT_NOSSE_INVALID_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aFeraiseexcept_Nosse_InvalidTests,   apzFeraiseexcept_Nosse_InvalidPatch, 0 },\n+\n+  {  zFeraiseexcept_Nosse_DivbyzeroName,    zFeraiseexcept_Nosse_DivbyzeroList,\n+     apzFeraiseexcept_Nosse_DivbyzeroMachs,\n+     FERAISEEXCEPT_NOSSE_DIVBYZERO_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aFeraiseexcept_Nosse_DivbyzeroTests,   apzFeraiseexcept_Nosse_DivbyzeroPatch, 0 }\n };"}, {"sha": "24069201d12204157a531f8388131ef7ca82dd13", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c851c76cdf52884dd5e0c7befd3c809e9d174a73/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c851c76cdf52884dd5e0c7befd3c809e9d174a73/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=c851c76cdf52884dd5e0c7befd3c809e9d174a73", "patch": "@@ -4815,4 +4815,53 @@ fix = {\n     test_text = \"extern char *\\tsprintf();\";\n };\n \n+/*\n+ *  Incorrect feraiseexcept extern inline in bits/fenv.h on x86_64\n+ *  that fails when compiling for SSE-less 32-bit x86.\n+ */\n+fix = {\n+    hackname  = feraiseexcept_nosse_invalid;\n+    mach      = 'i[34567]86-*-linux*', 'x86*-linux*', 'amd64-*-linux*';\n+    files     = bits/fenv.h;\n+    select    = \"^([\\t ]*)__asm__ __volatile__ \\\\(\\\"divss %0, %0 *\\\" : \"\n+\t\t\": \\\"x\\\" \\\\(__f\\\\)\\\\);$\";\n+    bypass    = \"\\\"fdiv .*; fwait\\\"\";\n+    \n+    c_fix     = format;\n+    c_fix_arg = <<- _EOText_\n+\t# ifdef __SSE_MATH__\n+\t%0\n+\t# else\n+\t%1__asm__ __volatile__ (\"fdiv %%%%st, %%%%st(0); fwait\"\n+\t%1\t\t\t: \"=t\" (__f) : \"0\" (__f));\n+\t# endif\n+\t_EOText_;\n+\n+    test_text = <<- _EOText_\n+\t  __asm__ __volatile__ (\"divss %0, %0\" : : \"x\" (__f));\n+\t_EOText_;\n+};\n+fix = {\n+    hackname  = feraiseexcept_nosse_divbyzero;\n+    mach      = 'i[34567]86-*-linux*', 'x86*-linux*', 'amd64-*-linux*';\n+    files     = bits/fenv.h;\n+    select    = \"^([\\t ]*)__asm__ __volatile__ \\\\(\\\"divss %1, %0 *\\\" : \"\n+\t\t\": \\\"x\\\" \\\\(__f\\\\), \\\"x\\\" \\\\(__g\\\\)\\\\);$\";\n+    bypass    = \"\\\"fdivp .*; fwait\\\"\";\n+    \n+    c_fix     = format;\n+    c_fix_arg = <<- _EOText_\n+\t# ifdef __SSE_MATH__\n+\t%0\n+\t# else\n+\t%1__asm__ __volatile__ (\"fdivp %%%%st, %%%%st(1); fwait\"\n+\t%1\t\t\t: \"=t\" (__f) : \"0\" (__f), \"u\" (__g) : \"st(1)\");\n+\t# endif\n+\t_EOText_;\n+\n+    test_text = <<- _EOText_\n+\t  __asm__ __volatile__ (\"divss %1, %0\" : : \"x\" (__f), \"x\" (__g));\n+\t_EOText_;\n+};\n+\n /*EOF*/"}, {"sha": "a82ec25e8b4b5ec2f06d16c2fe6f60287f36b9d1", "filename": "fixincludes/tests/base/bits/fenv.h", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c851c76cdf52884dd5e0c7befd3c809e9d174a73/fixincludes%2Ftests%2Fbase%2Fbits%2Ffenv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c851c76cdf52884dd5e0c7befd3c809e9d174a73/fixincludes%2Ftests%2Fbase%2Fbits%2Ffenv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fbits%2Ffenv.h?ref=c851c76cdf52884dd5e0c7befd3c809e9d174a73", "patch": "@@ -0,0 +1,29 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/bits/fenv.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+\n+\n+#if defined( FERAISEEXCEPT_NOSSE_INVALID_CHECK )\n+# ifdef __SSE_MATH__\n+  __asm__ __volatile__ (\"divss %0, %0\" : : \"x\" (__f));\n+# else\n+  __asm__ __volatile__ (\"fdiv %%st, %%st(0); fwait\"\n+  \t\t\t: \"=t\" (__f) : \"0\" (__f));\n+# endif\n+#endif  /* FERAISEEXCEPT_NOSSE_INVALID_CHECK */\n+\n+\n+#if defined( FERAISEEXCEPT_NOSSE_DIVBYZERO_CHECK )\n+# ifdef __SSE_MATH__\n+  __asm__ __volatile__ (\"divss %1, %0\" : : \"x\" (__f), \"x\" (__g));\n+# else\n+  __asm__ __volatile__ (\"fdivp %%st, %%st(1); fwait\"\n+  \t\t\t: \"=t\" (__f) : \"0\" (__f), \"u\" (__g) : \"st(1)\");\n+# endif\n+#endif  /* FERAISEEXCEPT_NOSSE_DIVBYZERO_CHECK */"}]}