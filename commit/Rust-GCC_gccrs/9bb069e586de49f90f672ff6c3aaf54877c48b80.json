{"sha": "9bb069e586de49f90f672ff6c3aaf54877c48b80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJiMDY5ZTU4NmRlNDlmOTBmNjcyZmY2YzNhYWY1NDg3N2M0OGI4MA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-04-24T22:03:15Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-04-24T22:03:15Z"}, "message": "i386.md (*lea<mode>_general_4): Use const_0_to_3_operand predicate for operand 2.\n\n\t* config/i386/i386.md (*lea<mode>_general_4): Use const_0_to_3_operand\n\tpredicate for operand 2.\n\nFrom-SVN: r235397", "tree": {"sha": "6eb1187bf22b0131728a933361d4872aff852168", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6eb1187bf22b0131728a933361d4872aff852168"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9bb069e586de49f90f672ff6c3aaf54877c48b80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bb069e586de49f90f672ff6c3aaf54877c48b80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bb069e586de49f90f672ff6c3aaf54877c48b80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bb069e586de49f90f672ff6c3aaf54877c48b80/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "55284a77e6cb0064c69e28b3121e7ae2a9f6d871", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55284a77e6cb0064c69e28b3121e7ae2a9f6d871", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55284a77e6cb0064c69e28b3121e7ae2a9f6d871"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "8e7059e0e0efba737e4b0744292caa757ad7ffda", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bb069e586de49f90f672ff6c3aaf54877c48b80/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bb069e586de49f90f672ff6c3aaf54877c48b80/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9bb069e586de49f90f672ff6c3aaf54877c48b80", "patch": "@@ -1,3 +1,8 @@\n+2016-04-25  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*lea<mode>_general_4): Use const_0_to_3_operand\n+\tpredicate for operand 2.\n+\n 2016-04-24  Uros Bizjak  <ubizjak@gmail.com>\n \t    H.J. Lu  <hongjiu.lu@intel.com>\n "}, {"sha": "d7ac54e4cbec0aabe0d93be3a73f20ba1b6a50cc", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bb069e586de49f90f672ff6c3aaf54877c48b80/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bb069e586de49f90f672ff6c3aaf54877c48b80/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=9bb069e586de49f90f672ff6c3aaf54877c48b80", "patch": "@@ -6291,10 +6291,9 @@\n \t(any_or:SWI12\n \t  (ashift:SWI12\n \t    (match_operand:SWI12 1 \"index_register_operand\" \"l\")\n-\t    (match_operand:SWI12 2 \"const_int_operand\" \"n\"))\n+\t    (match_operand:SWI12 2 \"const_0_to_3_operand\" \"n\"))\n \t  (match_operand:SWI12 3 \"const_int_operand\" \"n\")))]\n   \"(!TARGET_PARTIAL_REG_STALL || optimize_function_for_size_p (cfun))\n-   && (unsigned HOST_WIDE_INT) INTVAL (operands[2]) <= 3\n    && ((unsigned HOST_WIDE_INT) INTVAL (operands[3])\n        < (HOST_WIDE_INT_1U << INTVAL (operands[2])))\"\n   \"#\"\n@@ -6316,11 +6315,10 @@\n \t(any_or:SWI48\n \t  (ashift:SWI48\n \t    (match_operand:SWI48 1 \"index_register_operand\" \"l\")\n-\t    (match_operand:SWI48 2 \"const_int_operand\" \"n\"))\n+\t    (match_operand:SWI48 2 \"const_0_to_3_operand\" \"n\"))\n \t  (match_operand:SWI48 3 \"const_int_operand\" \"n\")))]\n-  \"(unsigned HOST_WIDE_INT) INTVAL (operands[2]) <= 3\n-   && ((unsigned HOST_WIDE_INT) INTVAL (operands[3])\n-       < (HOST_WIDE_INT_1U << INTVAL (operands[2])))\"\n+  \"(unsigned HOST_WIDE_INT) INTVAL (operands[3])\n+   < (HOST_WIDE_INT_1U << INTVAL (operands[2]))\"\n   \"#\"\n   \"&& reload_completed\"\n   [(set (match_dup 0)\n@@ -7955,7 +7953,7 @@\n   if (len == HOST_BITS_PER_WIDE_INT)\n     mask = -1;\n   else\n-    mask = ((HOST_WIDE_INT)1 << len) - 1;\n+    mask = (HOST_WIDE_INT_1 << len) - 1;\n   mask <<= pos;\n \n   operands[2] = gen_rtx_AND (mode, val, gen_int_mode (mask, mode));"}]}