{"sha": "393e63ce0f939555c88554d773f9798f07a2a898", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzkzZTYzY2UwZjkzOTU1NWM4ODU1NGQ3NzNmOTc5OGYwN2EyYTg5OA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2008-07-31T09:42:14Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-07-31T09:42:14Z"}, "message": "einfo.adb (Spec_PPC): Now defined for generic subprograms\n\n2008-07-31  Robert Dewar  <dewar@adacore.com>\n\n\t* einfo.adb (Spec_PPC): Now defined for generic subprograms\n\t\n\t* einfo.ads (Spec_PPC): Now defined for generic subprograms\n\t\n\t* sem_prag.adb (Check_Precondition_Postcondition): Handle generic\n\tsubprogram case\n\nFrom-SVN: r138370", "tree": {"sha": "8f1cc2f889404ce6ca9d074bcaef6bb8240d40af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f1cc2f889404ce6ca9d074bcaef6bb8240d40af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/393e63ce0f939555c88554d773f9798f07a2a898", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/393e63ce0f939555c88554d773f9798f07a2a898", "html_url": "https://github.com/Rust-GCC/gccrs/commit/393e63ce0f939555c88554d773f9798f07a2a898", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/393e63ce0f939555c88554d773f9798f07a2a898/comments", "author": null, "committer": null, "parents": [{"sha": "024238a2bf6ed3340ccd940d3298ccfa2e99b939", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/024238a2bf6ed3340ccd940d3298ccfa2e99b939", "html_url": "https://github.com/Rust-GCC/gccrs/commit/024238a2bf6ed3340ccd940d3298ccfa2e99b939"}], "stats": {"total": 49, "additions": 24, "deletions": 25}, "files": [{"sha": "255b7a0cdcc748e07955f244d9d58ee2cdc22da0", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/393e63ce0f939555c88554d773f9798f07a2a898/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/393e63ce0f939555c88554d773f9798f07a2a898/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=393e63ce0f939555c88554d773f9798f07a2a898", "patch": "@@ -2579,7 +2579,7 @@ package body Einfo is\n \n    function Spec_PPC_List (Id : E) return N is\n    begin\n-      pragma Assert (Is_Subprogram (Id));\n+      pragma Assert (Is_Subprogram (Id) or else Is_Generic_Subprogram (Id));\n       return Node24 (Id);\n    end Spec_PPC_List;\n \n@@ -5044,7 +5044,7 @@ package body Einfo is\n \n    procedure Set_Spec_PPC_List (Id : E; V : N) is\n    begin\n-      pragma Assert (Is_Subprogram (Id));\n+      pragma Assert (Is_Subprogram (Id) or else Is_Generic_Subprogram (Id));\n       Set_Node24 (Id, V);\n    end Set_Spec_PPC_List;\n "}, {"sha": "c7182dbe04f24bff1f2ecbd4c2824d366f89b950", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/393e63ce0f939555c88554d773f9798f07a2a898/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/393e63ce0f939555c88554d773f9798f07a2a898/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=393e63ce0f939555c88554d773f9798f07a2a898", "patch": "@@ -3527,10 +3527,11 @@ package Einfo is\n --       the corresponding parameter entities in the spec.\n \n --    Spec_PPC_List (Node24)\n---       Present in subprogram entities. Points to a list of Precondition\n---       and Postcondition N_Pragma nodes for preconditions and postconditions\n---       declared in the spec. The last pragma encountered is at the head of\n---       this list, so it is in reverse order of textual appearance.\n+--       Present in subprogram and generic subprogram entities. Points to a\n+--       list of Precondition and Postcondition pragma nodes for preconditions\n+--       and postconditions declared in the spec. The last pragma encountered\n+--       is at the head of this list, so it is in reverse order of textual\n+--       appearance.\n \n --    Storage_Size_Variable (Node15) [implementation base type only]\n --       Present in access types and task type entities. This flag is set\n@@ -5277,7 +5278,7 @@ package Einfo is\n    --    Generic_Renamings                   (Elist23)  (for instance)\n    --    Inner_Instances                     (Elist23)  (for generic proc)\n    --    Protection_Object                   (Node23)   (for concurrent kind)\n-   --    Spec_PPC_List                       (Node24)   (non-generic case only)\n+   --    Spec_PPC_List                       (Node24)\n    --    Interface_Alias                     (Node25)\n    --    Static_Initialization               (Node26)   (init_proc only)\n    --    Overridden_Operation                (Node26)"}, {"sha": "3183ce27a01719ea119e04b1f76a18837b8d3830", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 16, "deletions": 18, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/393e63ce0f939555c88554d773f9798f07a2a898/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/393e63ce0f939555c88554d773f9798f07a2a898/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=393e63ce0f939555c88554d773f9798f07a2a898", "patch": "@@ -1354,9 +1354,10 @@ package body Sem_Prag is\n          PO : Node_Id;\n \n          procedure Chain_PPC (PO : Node_Id);\n-         --  PO is the N_Subprogram_Declaration node for the subprogram to\n-         --  which the precondition/postcondition applies. This procedure\n-         --  completes the processing for the pragma.\n+         --  If PO is a subprogram declaration node (or a generic subprogram\n+         --  declaration node), then the precondition/postcondition applies\n+         --  to this subprogram and the processing for the pragma is completed.\n+         --  Otherwise the pragma is misplaced.\n \n          ---------------\n          -- Chain_PPC --\n@@ -1366,6 +1367,14 @@ package body Sem_Prag is\n             S : Node_Id;\n \n          begin\n+            if not Nkind_In (PO, N_Subprogram_Declaration,\n+                                 N_Generic_Subprogram_Declaration)\n+            then\n+               Pragma_Misplaced;\n+            end if;\n+\n+            --  Here if we have subprogram or generic subprogram declaration\n+\n             S := Defining_Unit_Name (Specification (PO));\n \n             --  Analyze the pragma unless it appears within a package spec,\n@@ -1427,16 +1436,11 @@ package body Sem_Prag is\n             elsif not Comes_From_Source (PO) then\n                null;\n \n-            --  Here if we hit a subprogram declaration\n+            --  Only remaining possibility is subprogram declaration\n \n-            elsif Nkind (PO) = N_Subprogram_Declaration then\n+            else\n                Chain_PPC (PO);\n                return;\n-\n-            --  If we encounter any other declaration moving back, misplaced\n-\n-            else\n-               Pragma_Misplaced;\n             end if;\n          end loop;\n \n@@ -1452,14 +1456,8 @@ package body Sem_Prag is\n          --  See if it is in the pragmas after a library level subprogram\n \n          elsif Nkind (Parent (N)) = N_Compilation_Unit_Aux then\n-            declare\n-               Decl : constant Node_Id := Unit (Parent (Parent (N)));\n-            begin\n-               if Nkind (Decl) = N_Subprogram_Declaration then\n-                  Chain_PPC (Decl);\n-                  return;\n-               end if;\n-            end;\n+            Chain_PPC (Unit (Parent (Parent (N))));\n+            return;\n          end if;\n \n          --  If we fall through, pragma was misplaced"}]}