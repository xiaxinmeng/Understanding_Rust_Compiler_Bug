{"sha": "06bcc17883649a0c62276adf683da24c71c64eed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZiY2MxNzg4MzY0OWEwYzYyMjc2YWRmNjgzZGEyNGM3MWM2NGVlZA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-09-22T19:57:37Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-09-22T19:57:37Z"}, "message": "pa.md (floatunssisf2, [...]): Generate different RTL for TARGET_PA_20.\n\n        * pa.md (floatunssisf2, floatunssidf2): Generate different RTL\n        for TARGET_PA_20.\n        (floatunssidf2_pa20, floatunssisf2_pa20): New patterns for PA2.0\n        code generation.\n        (floatunsdisf2, floatunsdidf2, fixuns_truncsfsi2): Likewise.\n        (fixuns_truncdfsi2, fixuns_truncsfdi2, fixuns_truncdfsi2): Likewise.\n\nFrom-SVN: r29595", "tree": {"sha": "69b60f3e44418ac23d536fcd06a3ae210e3afbff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69b60f3e44418ac23d536fcd06a3ae210e3afbff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06bcc17883649a0c62276adf683da24c71c64eed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06bcc17883649a0c62276adf683da24c71c64eed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06bcc17883649a0c62276adf683da24c71c64eed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06bcc17883649a0c62276adf683da24c71c64eed/comments", "author": null, "committer": null, "parents": [{"sha": "b0a1da1950ff19fcc32497a416c29d4f3998d19a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0a1da1950ff19fcc32497a416c29d4f3998d19a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0a1da1950ff19fcc32497a416c29d4f3998d19a"}], "stats": {"total": 91, "additions": 89, "deletions": 2}, "files": [{"sha": "71ae5ed9b379ed0393c69c43f2c7204e5313d5e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bcc17883649a0c62276adf683da24c71c64eed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bcc17883649a0c62276adf683da24c71c64eed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=06bcc17883649a0c62276adf683da24c71c64eed", "patch": "@@ -37,6 +37,13 @@ Wed Sep 22 06:25:15 1999  Jim Kingdon  <http://developer.redhat.com>\n \n Wed Sep 22 06:06:57 1999  Jeffrey A Law  (law@cygnus.com)\n \n+\t* pa.md (floatunssisf2, floatunssidf2): Generate different RTL\n+\tfor TARGET_PA_20.\n+\t(floatunssidf2_pa20, floatunssisf2_pa20): New patterns for PA2.0\n+\tcode generation.\n+\t(floatunsdisf2, floatunsdidf2, fixuns_truncsfsi2): Likewise.\n+\t(fixuns_truncdfsi2, fixuns_truncsfdi2, fixuns_truncdfsi2): Likewise.\n+\n \t* regclass.c (init_regs): Add \"top_of_stack\" as a garbage\n \tcollection root.\n "}, {"sha": "c6acda9c5a2a84648cdc44adbcb760a2e4ac91e1", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 82, "deletions": 2, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06bcc17883649a0c62276adf683da24c71c64eed/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06bcc17883649a0c62276adf683da24c71c64eed/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=06bcc17883649a0c62276adf683da24c71c64eed", "patch": "@@ -2860,7 +2860,15 @@\n    (set (match_operand:SF 0 \"register_operand\" \"\")\n \t(float:SF (match_dup 2)))]\n   \"TARGET_PA_11 && ! TARGET_SOFT_FLOAT\"\n-  \"operands[2] = gen_reg_rtx (DImode);\")\n+  \"\n+{\n+  if (TARGET_PA_20)\n+    {\n+      emit_insn (gen_floatunssisf2_pa20 (operands[0], operands[1]));\n+      DONE;\n+    }\n+  operands[2] = gen_reg_rtx (DImode);\n+}\")\n \n (define_expand \"floatunssidf2\"\n   [(set (subreg:SI (match_dup 2) 1)\n@@ -2870,7 +2878,15 @@\n    (set (match_operand:DF 0 \"register_operand\" \"\")\n \t(float:DF (match_dup 2)))]\n   \"TARGET_PA_11 && ! TARGET_SOFT_FLOAT\"\n-  \"operands[2] = gen_reg_rtx (DImode);\")\n+  \"\n+{\n+  if (TARGET_PA_20)\n+    {\n+      emit_insn (gen_floatunssidf2_pa20 (operands[0], operands[1]));\n+      DONE;\n+    }\n+  operands[2] = gen_reg_rtx (DImode);\n+}\")\n \n (define_insn \"floatdisf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n@@ -2922,6 +2938,70 @@\n   \"fcnvfxt,dbl,dbl %1,%0\"\n   [(set_attr \"type\" \"fpalu\")\n    (set_attr \"length\" \"4\")])\n+\n+(define_insn \"floatunssidf2_pa20\"\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+\t(unsigned_float:DF (match_operand:SI 1 \"register_operand\" \"f\")))]\n+  \"! TARGET_SOFT_FLOAT && TARGET_PA_20\"\n+  \"fcnv,uw,dbl %1,%0\"\n+  [(set_attr \"type\" \"fpalu\")\n+   (set_attr \"length\" \"4\")])\n+\n+(define_insn \"floatunssisf2_pa20\"\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n+\t(unsigned_float:SF (match_operand:SI 1 \"register_operand\" \"f\")))]\n+  \"! TARGET_SOFT_FLOAT && TARGET_PA_20\"\n+  \"fcnv,uw,sgl %1,%0\"\n+  [(set_attr \"type\" \"fpalu\")\n+   (set_attr \"length\" \"4\")])\n+\n+(define_insn \"floatunsdisf2\"\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n+\t(unsigned_float:SF (match_operand:DI 1 \"register_operand\" \"f\")))]\n+  \"! TARGET_SOFT_FLOAT && TARGET_PA_20\"\n+  \"fcnv,udw,sgl %1,%0\"\n+  [(set_attr \"type\" \"fpalu\")\n+   (set_attr \"length\" \"4\")])\n+\n+(define_insn \"floatunsdidf2\"\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+\t(unsigned_float:DF (match_operand:DI 1 \"register_operand\" \"f\")))]\n+  \"! TARGET_SOFT_FLOAT && TARGET_PA_20\"\n+  \"fcnv,udw,dbl %1,%0\"\n+  [(set_attr \"type\" \"fpalu\")\n+   (set_attr \"length\" \"4\")])\n+\n+(define_insn \"fixuns_truncsfsi2\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=f\")\n+\t(unsigned_fix:SI (fix:SF (match_operand:SF 1 \"register_operand\" \"f\"))))]\n+  \"! TARGET_SOFT_FLOAT && TARGET_PA_20\"\n+  \"fcnv,t,sgl,uw %1,%0\"\n+  [(set_attr \"type\" \"fpalu\")\n+   (set_attr \"length\" \"4\")])\n+\n+(define_insn \"fixuns_truncdfsi2\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=f\")\n+\t(unsigned_fix:SI (fix:DF (match_operand:DF 1 \"register_operand\" \"f\"))))]\n+  \"! TARGET_SOFT_FLOAT && TARGET_PA_20\"\n+  \"fcnv,t,dbl,uw %1,%0\"\n+  [(set_attr \"type\" \"fpalu\")\n+   (set_attr \"length\" \"4\")])\n+\n+(define_insn \"fixuns_truncsfdi2\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=f\")\n+\t(unsigned_fix:DI (fix:SF (match_operand:SF 1 \"register_operand\" \"f\"))))]\n+  \"! TARGET_SOFT_FLOAT && TARGET_PA_20\"\n+  \"fcnv,t,sgl,udw %1,%0\"\n+  [(set_attr \"type\" \"fpalu\")\n+   (set_attr \"length\" \"4\")])\n+\n+(define_insn \"fixuns_truncdfdi2\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=f\")\n+\t(unsigned_fix:DI (fix:DF (match_operand:DF 1 \"register_operand\" \"f\"))))]\n+  \"! TARGET_SOFT_FLOAT && TARGET_PA_20\"\n+  \"fcnv,t,dbl,udw %1,%0\"\n+  [(set_attr \"type\" \"fpalu\")\n+   (set_attr \"length\" \"4\")])\n \f\n ;;- arithmetic instructions\n "}]}