{"sha": "2ee510b4220fe07af99aae860afa178898b12cf7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVlNTEwYjQyMjBmZTA3YWY5OWFhZTg2MGFmYTE3ODg5OGIxMmNmNw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2008-05-07T07:45:17Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-05-07T07:45:17Z"}, "message": "re PR middle-end/36013 (Wrong code involving restricted pointers to non-restricted pointers)\n\n\tPR middle-end/36013\n\t* gimplify.c (find_single_pointer_decl_1): Don't look through\n\tindirections.\n\t(find_single_pointer_decl): Adjust comments.\n\n\t* gcc.c-torture/execute/20080506-2.c: New test.\n\nFrom-SVN: r135029", "tree": {"sha": "64710767b3276cd480a6e30e9f003c1c16e08ead", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64710767b3276cd480a6e30e9f003c1c16e08ead"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ee510b4220fe07af99aae860afa178898b12cf7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ee510b4220fe07af99aae860afa178898b12cf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ee510b4220fe07af99aae860afa178898b12cf7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ee510b4220fe07af99aae860afa178898b12cf7/comments", "author": null, "committer": null, "parents": [{"sha": "f61edbf65f93da4d4c1d7c3f201b39dc85d982c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f61edbf65f93da4d4c1d7c3f201b39dc85d982c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f61edbf65f93da4d4c1d7c3f201b39dc85d982c2"}], "stats": {"total": 46, "additions": 43, "deletions": 3}, "files": [{"sha": "ebc3aad86c97bff7b1e17fc4ff7f98f8285b688c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ee510b4220fe07af99aae860afa178898b12cf7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ee510b4220fe07af99aae860afa178898b12cf7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ee510b4220fe07af99aae860afa178898b12cf7", "patch": "@@ -1,3 +1,10 @@\n+2008-05-07  Ian Lance Taylor  <iant@google.com>\n+\n+\tPR middle-end/36013\n+\t* gimplify.c (find_single_pointer_decl_1): Don't look through\n+\tindirections.\n+\t(find_single_pointer_decl): Adjust comments.\n+\n 2008-05-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/36137"}, {"sha": "e36d5db93c8eb256a9099c5c4d52af25d8b69dd5", "filename": "gcc/gimplify.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ee510b4220fe07af99aae860afa178898b12cf7/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ee510b4220fe07af99aae860afa178898b12cf7/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=2ee510b4220fe07af99aae860afa178898b12cf7", "patch": "@@ -391,6 +391,13 @@ find_single_pointer_decl_1 (tree *tp, int *walk_subtrees ATTRIBUTE_UNUSED,\n {\n   tree *pdecl = (tree *) data;\n \n+  /* We are only looking for pointers at the same level as the\n+     original tree; we must not look through any indirections.\n+     Returning anything other than NULL_TREE will cause the caller to\n+     not find a base.  */\n+  if (REFERENCE_CLASS_P (*tp))\n+    return *tp;\n+\n   if (DECL_P (*tp) && POINTER_TYPE_P (TREE_TYPE (*tp)))\n     {\n       if (*pdecl)\n@@ -406,8 +413,9 @@ find_single_pointer_decl_1 (tree *tp, int *walk_subtrees ATTRIBUTE_UNUSED,\n   return NULL_TREE;\n }\n \n-/* Find the single DECL of pointer type in the tree T and return it.\n-   If there are zero or more than one such DECLs, return NULL.  */\n+/* Find the single DECL of pointer type in the tree T, used directly\n+   rather than via an indirection, and return it.  If there are zero\n+   or more than one such DECLs, return NULL.  */\n \n static tree\n find_single_pointer_decl (tree t)\n@@ -418,7 +426,8 @@ find_single_pointer_decl (tree t)\n     {\n       /* find_single_pointer_decl_1 returns a nonzero value, causing\n \t walk_tree to return a nonzero value, to indicate that it\n-\t found more than one pointer DECL.  */\n+\t found more than one pointer DECL or that it found an\n+\t indirection.  */\n       return NULL_TREE;\n     }\n "}, {"sha": "b872afd3e19e179469e87a9239f05701546c0844", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ee510b4220fe07af99aae860afa178898b12cf7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ee510b4220fe07af99aae860afa178898b12cf7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2ee510b4220fe07af99aae860afa178898b12cf7", "patch": "@@ -1,5 +1,8 @@\n 2008-05-07  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/36013\n+\t* gcc.c-torture/execute/20080506-2.c: New test.\n+\n \tPR middle-end/36137\n \t* gcc.c-torture/execute/20080506-1.c: New test.\n "}, {"sha": "d2fac713bd8947b767a3c5c1408c0d2cb83106fc", "filename": "gcc/testsuite/gcc.c-torture/execute/20080506-2.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ee510b4220fe07af99aae860afa178898b12cf7/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20080506-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ee510b4220fe07af99aae860afa178898b12cf7/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20080506-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20080506-2.c?ref=2ee510b4220fe07af99aae860afa178898b12cf7", "patch": "@@ -0,0 +1,21 @@\n+/* PR middle-end/36013 */\n+\n+extern void abort (void);\n+\n+void __attribute__((noinline))\n+foo (int **__restrict p, int **__restrict q)\n+{\n+  *p[0] = 1;\n+  *q[0] = 2;\n+  if (*p[0] != 2)\n+    abort ();\n+}\n+\n+int\n+main (void)\n+{\n+  int a;\n+  int *p1 = &a, *p2 = &a;\n+  foo (&p1, &p2);\n+  return 0;\n+}"}]}