{"sha": "eda72164ade26fe3886515dd55dd9716ff076140", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRhNzIxNjRhZGUyNmZlMzg4NjUxNWRkNTVkZDk3MTZmZjA3NjE0MA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2020-06-12T08:08:33Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2020-06-12T08:08:33Z"}, "message": "match any program name when pruning collect messages\n\nWhen collect* programs have an executable suffix, they may include it\nin their outputs.  Match them when pruning gcc output, making room for\nother program names to print them.\n\n\nfor  gcc/testsuite/ChangeLog\n\n\t* lib/prune.exp (prune_gcc_output): Match any executable name\n\tin collect messages.", "tree": {"sha": "1e0f0f1b98b0cceb3604657ee6699296c9c91676", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e0f0f1b98b0cceb3604657ee6699296c9c91676"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eda72164ade26fe3886515dd55dd9716ff076140", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eda72164ade26fe3886515dd55dd9716ff076140", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eda72164ade26fe3886515dd55dd9716ff076140", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eda72164ade26fe3886515dd55dd9716ff076140/comments", "author": null, "committer": null, "parents": [{"sha": "47fe96341d28ff9e68990038b1beb8a760ff26d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47fe96341d28ff9e68990038b1beb8a760ff26d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47fe96341d28ff9e68990038b1beb8a760ff26d0"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "1c776249f1af6d519095ff5b365cd9b81fbd1c01", "filename": "gcc/testsuite/lib/prune.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eda72164ade26fe3886515dd55dd9716ff076140/gcc%2Ftestsuite%2Flib%2Fprune.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eda72164ade26fe3886515dd55dd9716ff076140/gcc%2Ftestsuite%2Flib%2Fprune.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fprune.exp?ref=eda72164ade26fe3886515dd55dd9716ff076140", "patch": "@@ -38,8 +38,8 @@ proc prune_gcc_output { text } {\n     regsub -all \"(^|\\n)\\[^\\n\\]*:   in .constexpr. expansion \\[^\\n\\]*\" $text \"\" text\n     regsub -all \"(^|\\n)\\[^\\n\\]*:   in requirements \\[^\\n\\]*\" $text \"\" text\n     regsub -all \"(^|\\n)    inlined from \\[^\\n\\]*\" $text \"\" text\n-    regsub -all \"(^|\\n)collect2: error: ld returned \\[^\\n\\]*\" $text \"\" text\n-    regsub -all \"(^|\\n)collect: re(compiling|linking)\\[^\\n\\]*\" $text \"\" text\n+    regsub -all \"(^|\\n)\\[^\\n\\]*: error: ld returned \\[^\\n\\]*\" $text \"\" text\n+    regsub -all \"(^|\\n)\\[^\\n\\]*: re(compiling|linking)\\[^\\n\\]*\" $text \"\" text\n     regsub -all \"(^|\\n)Please submit.*instructions\\[^\\n\\]*\" $text \"\" text\n     regsub -all \"(^|\\n)\\[0-9\\]\\[0-9\\]* errors\\.\" $text \"\" text\n     regsub -all \"(^|\\n)(In file included|\\[ \\]+from)\\[^\\n\\]*\" $text \"\" text"}]}