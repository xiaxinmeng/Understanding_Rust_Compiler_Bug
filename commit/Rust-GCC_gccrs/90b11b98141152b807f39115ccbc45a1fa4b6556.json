{"sha": "90b11b98141152b807f39115ccbc45a1fa4b6556", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBiMTFiOTgxNDExNTJiODA3ZjM5MTE1Y2NiYzQ1YTFmYTRiNjU1Ng==", "commit": {"author": {"name": "Devang Patel", "email": "dpatel@apple.com", "date": "2005-11-08T20:21:15Z"}, "committer": {"name": "Devang Patel", "email": "dpatel@gcc.gnu.org", "date": "2005-11-08T20:21:15Z"}, "message": "re PR tree-optimization/23115 (-ftree-vectorize generates wrong code)\n\n       PR tree-optimization/23115\n       * tree-if-conv.c (find_phi_replacement_condition): Check domninated_by\n       relation.\n\n       * gcc.dg/tree-ssa/pr23115.c: New.\n\nFrom-SVN: r106653", "tree": {"sha": "5bd13dafae634219e30f383bea77e97014e3ee50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bd13dafae634219e30f383bea77e97014e3ee50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90b11b98141152b807f39115ccbc45a1fa4b6556", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90b11b98141152b807f39115ccbc45a1fa4b6556", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90b11b98141152b807f39115ccbc45a1fa4b6556", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90b11b98141152b807f39115ccbc45a1fa4b6556/comments", "author": null, "committer": null, "parents": [{"sha": "30c055954235cea8114e0918f2c35783d28f16f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30c055954235cea8114e0918f2c35783d28f16f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30c055954235cea8114e0918f2c35783d28f16f0"}], "stats": {"total": 53, "additions": 49, "deletions": 4}, "files": [{"sha": "4f792d3ecd1ec0824e97b0e8a67a78a18ea5e5b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90b11b98141152b807f39115ccbc45a1fa4b6556/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90b11b98141152b807f39115ccbc45a1fa4b6556/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90b11b98141152b807f39115ccbc45a1fa4b6556", "patch": "@@ -1,3 +1,9 @@\n+2005-11-08  Devang Patel <dpatel@apple.com>\n+\n+\tPR tree-optimization/23115\n+\t* tree-if-conv.c (find_phi_replacement_condition): Check domninated_by\n+\trelation.\n+\n 2005-11-08  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* config/rs6000/t-fprules (MULTILIB_MATCHES_FLOAT): Include"}, {"sha": "6ea074165f2b3c8616eede6c1fef07d5bf35796a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90b11b98141152b807f39115ccbc45a1fa4b6556/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90b11b98141152b807f39115ccbc45a1fa4b6556/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=90b11b98141152b807f39115ccbc45a1fa4b6556", "patch": "@@ -1,3 +1,8 @@\n+2005-11-08  Devang Patel <dpatel@apple.com>\n+\n+\tPR tree-optimization/23115\n+\t* gcc.dg/tree-ssa/pr23115.c: New.\n+\t\n 2005-11-08  David Edelsohn  <edelsohn@gnu.org>\n \n \t* g++.dg/ext/altivec-{1-13}.C: XFAIL on AIX and SPE."}, {"sha": "6a52aafb458e05c5286bdc2f15eec37ae8d49548", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr23115.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90b11b98141152b807f39115ccbc45a1fa4b6556/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr23115.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90b11b98141152b807f39115ccbc45a1fa4b6556/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr23115.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr23115.c?ref=90b11b98141152b807f39115ccbc45a1fa4b6556", "patch": "@@ -0,0 +1,29 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ftree-vectorize\" } */\n+\n+extern void abort (void);\n+\n+#define MIN2(a,b) (((a)<(b)) ? (a) : (b))\n+#define MAX2(a,b) (((a)>(b)) ? (a) : (b))\n+\n+double p[2] = { 4., 5. };\n+\n+int main()\n+{\n+  long j;\n+  double R, n, x;\n+\n+  n = 1.e300;\n+  x = -1.e300;\n+  for( j=0; j < 2; j++ )\n+    {\n+      x = MAX2(x,p[j]);\n+      n = MIN2(n,p[j]);\n+    }\n+  R = x-n;\n+\n+  if( R < 0.1 )\n+      abort ();\n+\n+  return 0;\n+}"}, {"sha": "5d8375d412ed8a932a232740402044a2296f3bb9", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90b11b98141152b807f39115ccbc45a1fa4b6556/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90b11b98141152b807f39115ccbc45a1fa4b6556/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=90b11b98141152b807f39115ccbc45a1fa4b6556", "patch": "@@ -679,7 +679,7 @@ find_phi_replacement_condition (struct loop *loop,\n        S2: x = c ? b : a;\n \n        S2 is preferred over S1. Make 'b' first_bb and use its condition.\n-\n+       \n      2) Do not make loop header first_bb.\n \n      3)\n@@ -691,7 +691,10 @@ find_phi_replacement_condition (struct loop *loop,\n        S3: x = (c == d) ? b : a;\n \n        S3 is preferred over S1 and S2*, Make 'b' first_bb and use \n-       its condition.  */\n+       its condition.  \n+\n+     4) If  pred B is dominated by pred A then use pred B's condition.\n+        See PR23115.  */\n \n   /* Select condition that is not TRUTH_NOT_EXPR.  */\n   tmp_cond = first_bb->aux;\n@@ -703,8 +706,10 @@ find_phi_replacement_condition (struct loop *loop,\n       second_bb = tmp_bb;\n     }\n \n-  /* Check if FIRST_BB is loop header or not.  */\n-  if (first_bb == loop->header) \n+  /* Check if FIRST_BB is loop header or not and make sure that\n+     FIRST_BB does not dominate SECOND_BB.  */\n+  if (first_bb == loop->header\n+      || dominated_by_p (CDI_DOMINATORS, second_bb, first_bb))\n     {\n       tmp_cond = second_bb->aux;\n       if (TREE_CODE (tmp_cond) == TRUTH_NOT_EXPR)"}]}