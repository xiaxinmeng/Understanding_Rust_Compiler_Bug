{"sha": "949d707dcf9b774b3fd402d92db829cd9d47ee05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ5ZDcwN2RjZjliNzc0YjNmZDQwMmQ5MmRiODI5Y2Q5ZDQ3ZWUwNQ==", "commit": {"author": {"name": "Martin v. L\u00f6wis", "email": "loewis@informatik.hu-berlin.de", "date": "2000-03-20T13:22:38Z"}, "committer": {"name": "Martin v. L\u00f6wis", "email": "loewis@gcc.gnu.org", "date": "2000-03-20T13:22:38Z"}, "message": "c-parse.in (SAVE_WARN_FLAGS): Use size_int.\n\n\t* c-parse.in (SAVE_WARN_FLAGS): Use size_int.\n\t* c-parse.y, c-parse.c, objc/objc-parse.y, objc/objc-parse.c:\n\tRegenerated.\n\nFrom-SVN: r32648", "tree": {"sha": "27a88ee0c21f912b16068382504a3d3ea6f79c3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27a88ee0c21f912b16068382504a3d3ea6f79c3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/949d707dcf9b774b3fd402d92db829cd9d47ee05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/949d707dcf9b774b3fd402d92db829cd9d47ee05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/949d707dcf9b774b3fd402d92db829cd9d47ee05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/949d707dcf9b774b3fd402d92db829cd9d47ee05/comments", "author": null, "committer": null, "parents": [{"sha": "4b6baf0ec044f10b4f03aa921983d5c2cf7ecee7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b6baf0ec044f10b4f03aa921983d5c2cf7ecee7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b6baf0ec044f10b4f03aa921983d5c2cf7ecee7"}], "stats": {"total": 104, "additions": 50, "deletions": 54}, "files": [{"sha": "211a8f0c2a0c9477e6fc1fda851891f6e53f3462", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/949d707dcf9b774b3fd402d92db829cd9d47ee05/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/949d707dcf9b774b3fd402d92db829cd9d47ee05/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=949d707dcf9b774b3fd402d92db829cd9d47ee05", "patch": "@@ -1,3 +1,9 @@\n+2000-03-20  Martin v. L\ufffdwis  <loewis@informatik.hu-berlin.de>\n+\n+\t* c-parse.in (SAVE_WARN_FLAGS): Use size_int.\n+\t* c-parse.y, c-parse.c, objc/objc-parse.y, objc/objc-parse.c:\n+\tRegenerated.\n+\n Mon Mar 20 11:43:15 MET 2000  Jan Hubicka  <jh@suse.cz>\n \n \t* jump.c (delete_noop_moves): Remove code attempting to"}, {"sha": "5dab726f2d7ec40cb63c7057feb59d2c015e6db1", "filename": "gcc/c-parse.c", "status": "modified", "additions": 19, "deletions": 24, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/949d707dcf9b774b3fd402d92db829cd9d47ee05/gcc%2Fc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/949d707dcf9b774b3fd402d92db829cd9d47ee05/gcc%2Fc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.c?ref=949d707dcf9b774b3fd402d92db829cd9d47ee05", "patch": "@@ -1,6 +1,7 @@\n \n /*  A Bison parser, made from c-parse.y\n-    by GNU Bison version 1.28  */\n+ by  GNU Bison version 1.27\n+  */\n \n #define YYBISON 1  /* Identify Bison output.  */\n \n@@ -126,10 +127,10 @@ static int undeclared_variable_notice;\n /* For __extension__, save/restore the warning flags which are\n    controlled by __extension__.  */\n #define SAVE_WARN_FLAGS()\t\\\n-\tbuild_int_2 (pedantic | (warn_pointer_arith << 1), 0)\n+\tsize_int (pedantic | (warn_pointer_arith << 1))\n #define RESTORE_WARN_FLAGS(tval) \\\n   do {                                     \\\n-    int val = tree_low_cst (tval, 0);     \\\n+    int val = tree_low_cst (tval, 0);      \\\n     pedantic = val & 1;                    \\\n     warn_pointer_arith = (val >> 1) & 1;   \\\n   } while (0)\n@@ -1275,7 +1276,7 @@ static const short yycheck[] = {    38,\n };\n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n #line 3 \"/usr/share/bison.simple\"\n-/* This file comes from bison-1.28.  */\n+/* This file comes from bison-1.27.  */\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -1488,7 +1489,7 @@ __yy_memcpy (char *to, char *from, unsigned int count)\n #endif\n #endif\n \f\n-#line 217 \"/usr/share/bison.simple\"\n+#line 216 \"/usr/share/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -1563,7 +1564,7 @@ yyparse(YYPARSE_PARAM_ARG)\n \n   int yylen;\n \n-#if YYDEBUG != 0 && !defined YYFILE\n+#if YYDEBUG != 0\n   if (yydebug)\n     fprintf(stderr, \"Starting parse\\n\");\n #endif\n@@ -1666,7 +1667,7 @@ yyparse(YYPARSE_PARAM_ARG)\n       yylsp = yyls + size - 1;\n #endif\n \n-#if YYDEBUG != 0 && !defined YYFILE\n+#if YYDEBUG != 0\n       if (yydebug)\n \tfprintf(stderr, \"Stack size increased to %d\\n\", yystacksize);\n #endif\n@@ -1675,7 +1676,7 @@ yyparse(YYPARSE_PARAM_ARG)\n \tYYABORT;\n     }\n \n-#if YYDEBUG != 0 && !defined YYFILE\n+#if YYDEBUG != 0\n   if (yydebug)\n     fprintf(stderr, \"Entering state %d\\n\", yystate);\n #endif\n@@ -1700,7 +1701,7 @@ yyparse(YYPARSE_PARAM_ARG)\n \n   if (yychar == YYEMPTY)\n     {\n-#if YYDEBUG != 0 && !defined YYFILE\n+#if YYDEBUG != 0\n       if (yydebug)\n \tfprintf(stderr, \"Reading a token: \");\n #endif\n@@ -1714,7 +1715,7 @@ yyparse(YYPARSE_PARAM_ARG)\n       yychar1 = 0;\n       yychar = YYEOF;\t\t/* Don't call YYLEX any more */\n \n-#if YYDEBUG != 0 && !defined YYFILE\n+#if YYDEBUG != 0\n       if (yydebug)\n \tfprintf(stderr, \"Now at end of input.\\n\");\n #endif\n@@ -1723,7 +1724,7 @@ yyparse(YYPARSE_PARAM_ARG)\n     {\n       yychar1 = YYTRANSLATE(yychar);\n \n-#if YYDEBUG != 0 && !defined YYFILE\n+#if YYDEBUG != 0\n       if (yydebug)\n \t{\n \t  fprintf (stderr, \"Next token is %d (%s\", yychar, yytname[yychar1]);\n@@ -1765,7 +1766,7 @@ yyparse(YYPARSE_PARAM_ARG)\n \n   /* Shift the lookahead token.  */\n \n-#if YYDEBUG != 0 && !defined YYFILE\n+#if YYDEBUG != 0\n   if (yydebug)\n     fprintf(stderr, \"Shifting token %d (%s), \", yychar, yytname[yychar1]);\n #endif\n@@ -1802,20 +1803,14 @@ yyparse(YYPARSE_PARAM_ARG)\n   if (yydebug)\n     {\n       int i;\n-#ifdef YYFILE\n-      fprintf (stderr, YYFILE \":%d: %s:\", yyrline[yyn], yytname[yyr1[yyn]]);\n-      for (i = yyprhs[yyn]; yyrhs[i] > 0; i++)\n-\tfprintf (stderr, \" %s\", yytname[yyrhs[i]]);\n-      fputc ('\\n', stderr);\n-#else\n+\n       fprintf (stderr, \"Reducing via rule %d (line %d), \",\n \t       yyn, yyrline[yyn]);\n \n       /* Print the symbols being reduced, and their result.  */\n       for (i = yyprhs[yyn]; yyrhs[i] > 0; i++)\n \tfprintf (stderr, \"%s \", yytname[yyrhs[i]]);\n       fprintf (stderr, \" -> %s\\n\", yytname[yyr1[yyn]]);\n-#endif\n     }\n #endif\n \n@@ -3841,15 +3836,15 @@ case 407:\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 543 \"/usr/share/bison.simple\"\n+#line 542 \"/usr/share/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n #ifdef YYLSP_NEEDED\n   yylsp -= yylen;\n #endif\n \n-#if YYDEBUG != 0 && !defined YYFILE\n+#if YYDEBUG != 0\n   if (yydebug)\n     {\n       short *ssp1 = yyss - 1;\n@@ -3956,7 +3951,7 @@ case 407:\n       if (yychar == YYEOF)\n \tYYABORT;\n \n-#if YYDEBUG != 0 && !defined YYFILE\n+#if YYDEBUG != 0\n       if (yydebug)\n \tfprintf(stderr, \"Discarding token %d (%s).\\n\", yychar, yytname[yychar1]);\n #endif\n@@ -3989,7 +3984,7 @@ case 407:\n   yylsp--;\n #endif\n \n-#if YYDEBUG != 0 && !defined YYFILE\n+#if YYDEBUG != 0\n   if (yydebug)\n     {\n       short *ssp1 = yyss - 1;\n@@ -4024,7 +4019,7 @@ case 407:\n   if (yyn == YYFINAL)\n     YYACCEPT;\n \n-#if YYDEBUG != 0 && !defined YYFILE\n+#if YYDEBUG != 0\n   if (yydebug)\n     fprintf(stderr, \"Shifting error token, \");\n #endif"}, {"sha": "6a079b4946fd7514d8e16021fa19b29694bdcab3", "filename": "gcc/c-parse.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/949d707dcf9b774b3fd402d92db829cd9d47ee05/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/949d707dcf9b774b3fd402d92db829cd9d47ee05/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=949d707dcf9b774b3fd402d92db829cd9d47ee05", "patch": "@@ -232,10 +232,10 @@ static int undeclared_variable_notice;\n /* For __extension__, save/restore the warning flags which are\n    controlled by __extension__.  */\n #define SAVE_WARN_FLAGS()\t\\\n-\tbuild_int_2 (pedantic | (warn_pointer_arith << 1), 0)\n+\tsize_int (pedantic | (warn_pointer_arith << 1))\n #define RESTORE_WARN_FLAGS(tval) \\\n   do {                                     \\\n-    int val = tree_low_cst (tval, 0);     \\\n+    int val = tree_low_cst (tval, 0);      \\\n     pedantic = val & 1;                    \\\n     warn_pointer_arith = (val >> 1) & 1;   \\\n   } while (0)"}, {"sha": "4188ce49d1aeeb34fbe5182c9c219d764494cc55", "filename": "gcc/c-parse.y", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/949d707dcf9b774b3fd402d92db829cd9d47ee05/gcc%2Fc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/949d707dcf9b774b3fd402d92db829cd9d47ee05/gcc%2Fc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.y?ref=949d707dcf9b774b3fd402d92db829cd9d47ee05", "patch": "@@ -207,10 +207,10 @@ static int undeclared_variable_notice;\n /* For __extension__, save/restore the warning flags which are\n    controlled by __extension__.  */\n #define SAVE_WARN_FLAGS()\t\\\n-\tbuild_int_2 (pedantic | (warn_pointer_arith << 1), 0)\n+\tsize_int (pedantic | (warn_pointer_arith << 1))\n #define RESTORE_WARN_FLAGS(tval) \\\n   do {                                     \\\n-    int val = tree_low_cst (tval, 0);     \\\n+    int val = tree_low_cst (tval, 0);      \\\n     pedantic = val & 1;                    \\\n     warn_pointer_arith = (val >> 1) & 1;   \\\n   } while (0)"}, {"sha": "6d6679f7abd4a83f03d7fd4fe8903221d2d19041", "filename": "gcc/objc/objc-parse.c", "status": "modified", "additions": 19, "deletions": 24, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/949d707dcf9b774b3fd402d92db829cd9d47ee05/gcc%2Fobjc%2Fobjc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/949d707dcf9b774b3fd402d92db829cd9d47ee05/gcc%2Fobjc%2Fobjc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.c?ref=949d707dcf9b774b3fd402d92db829cd9d47ee05", "patch": "@@ -1,6 +1,7 @@\n \n /*  A Bison parser, made from objc-parse.y\n-    by GNU Bison version 1.28  */\n+ by  GNU Bison version 1.27\n+  */\n \n #define YYBISON 1  /* Identify Bison output.  */\n \n@@ -127,10 +128,10 @@ static int undeclared_variable_notice;\n /* For __extension__, save/restore the warning flags which are\n    controlled by __extension__.  */\n #define SAVE_WARN_FLAGS()\t\\\n-\tbuild_int_2 (pedantic | (warn_pointer_arith << 1), 0)\n+\tsize_int (pedantic | (warn_pointer_arith << 1))\n #define RESTORE_WARN_FLAGS(tval) \\\n   do {                                     \\\n-    int val = tree_low_cst (tval, 0);     \\\n+    int val = tree_low_cst (tval, 0);      \\\n     pedantic = val & 1;                    \\\n     warn_pointer_arith = (val >> 1) & 1;   \\\n   } while (0)\n@@ -1754,7 +1755,7 @@ static const short yycheck[] = {    56,\n };\n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n #line 3 \"/usr/share/bison.simple\"\n-/* This file comes from bison-1.28.  */\n+/* This file comes from bison-1.27.  */\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -1967,7 +1968,7 @@ __yy_memcpy (char *to, char *from, unsigned int count)\n #endif\n #endif\n \f\n-#line 217 \"/usr/share/bison.simple\"\n+#line 216 \"/usr/share/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -2042,7 +2043,7 @@ yyparse(YYPARSE_PARAM_ARG)\n \n   int yylen;\n \n-#if YYDEBUG != 0 && !defined YYFILE\n+#if YYDEBUG != 0\n   if (yydebug)\n     fprintf(stderr, \"Starting parse\\n\");\n #endif\n@@ -2145,7 +2146,7 @@ yyparse(YYPARSE_PARAM_ARG)\n       yylsp = yyls + size - 1;\n #endif\n \n-#if YYDEBUG != 0 && !defined YYFILE\n+#if YYDEBUG != 0\n       if (yydebug)\n \tfprintf(stderr, \"Stack size increased to %d\\n\", yystacksize);\n #endif\n@@ -2154,7 +2155,7 @@ yyparse(YYPARSE_PARAM_ARG)\n \tYYABORT;\n     }\n \n-#if YYDEBUG != 0 && !defined YYFILE\n+#if YYDEBUG != 0\n   if (yydebug)\n     fprintf(stderr, \"Entering state %d\\n\", yystate);\n #endif\n@@ -2179,7 +2180,7 @@ yyparse(YYPARSE_PARAM_ARG)\n \n   if (yychar == YYEMPTY)\n     {\n-#if YYDEBUG != 0 && !defined YYFILE\n+#if YYDEBUG != 0\n       if (yydebug)\n \tfprintf(stderr, \"Reading a token: \");\n #endif\n@@ -2193,7 +2194,7 @@ yyparse(YYPARSE_PARAM_ARG)\n       yychar1 = 0;\n       yychar = YYEOF;\t\t/* Don't call YYLEX any more */\n \n-#if YYDEBUG != 0 && !defined YYFILE\n+#if YYDEBUG != 0\n       if (yydebug)\n \tfprintf(stderr, \"Now at end of input.\\n\");\n #endif\n@@ -2202,7 +2203,7 @@ yyparse(YYPARSE_PARAM_ARG)\n     {\n       yychar1 = YYTRANSLATE(yychar);\n \n-#if YYDEBUG != 0 && !defined YYFILE\n+#if YYDEBUG != 0\n       if (yydebug)\n \t{\n \t  fprintf (stderr, \"Next token is %d (%s\", yychar, yytname[yychar1]);\n@@ -2244,7 +2245,7 @@ yyparse(YYPARSE_PARAM_ARG)\n \n   /* Shift the lookahead token.  */\n \n-#if YYDEBUG != 0 && !defined YYFILE\n+#if YYDEBUG != 0\n   if (yydebug)\n     fprintf(stderr, \"Shifting token %d (%s), \", yychar, yytname[yychar1]);\n #endif\n@@ -2281,20 +2282,14 @@ yyparse(YYPARSE_PARAM_ARG)\n   if (yydebug)\n     {\n       int i;\n-#ifdef YYFILE\n-      fprintf (stderr, YYFILE \":%d: %s:\", yyrline[yyn], yytname[yyr1[yyn]]);\n-      for (i = yyprhs[yyn]; yyrhs[i] > 0; i++)\n-\tfprintf (stderr, \" %s\", yytname[yyrhs[i]]);\n-      fputc ('\\n', stderr);\n-#else\n+\n       fprintf (stderr, \"Reducing via rule %d (line %d), \",\n \t       yyn, yyrline[yyn]);\n \n       /* Print the symbols being reduced, and their result.  */\n       for (i = yyprhs[yyn]; yyrhs[i] > 0; i++)\n \tfprintf (stderr, \"%s \", yytname[yyrhs[i]]);\n       fprintf (stderr, \" -> %s\\n\", yytname[yyr1[yyn]]);\n-#endif\n     }\n #endif\n \n@@ -5096,15 +5091,15 @@ case 570:\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 543 \"/usr/share/bison.simple\"\n+#line 542 \"/usr/share/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n #ifdef YYLSP_NEEDED\n   yylsp -= yylen;\n #endif\n \n-#if YYDEBUG != 0 && !defined YYFILE\n+#if YYDEBUG != 0\n   if (yydebug)\n     {\n       short *ssp1 = yyss - 1;\n@@ -5211,7 +5206,7 @@ case 570:\n       if (yychar == YYEOF)\n \tYYABORT;\n \n-#if YYDEBUG != 0 && !defined YYFILE\n+#if YYDEBUG != 0\n       if (yydebug)\n \tfprintf(stderr, \"Discarding token %d (%s).\\n\", yychar, yytname[yychar1]);\n #endif\n@@ -5244,7 +5239,7 @@ case 570:\n   yylsp--;\n #endif\n \n-#if YYDEBUG != 0 && !defined YYFILE\n+#if YYDEBUG != 0\n   if (yydebug)\n     {\n       short *ssp1 = yyss - 1;\n@@ -5279,7 +5274,7 @@ case 570:\n   if (yyn == YYFINAL)\n     YYACCEPT;\n \n-#if YYDEBUG != 0 && !defined YYFILE\n+#if YYDEBUG != 0\n   if (yydebug)\n     fprintf(stderr, \"Shifting error token, \");\n #endif"}, {"sha": "3413a2cd6bcdba5a6b778d13ea17bf3956e40e88", "filename": "gcc/objc/objc-parse.y", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/949d707dcf9b774b3fd402d92db829cd9d47ee05/gcc%2Fobjc%2Fobjc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/949d707dcf9b774b3fd402d92db829cd9d47ee05/gcc%2Fobjc%2Fobjc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.y?ref=949d707dcf9b774b3fd402d92db829cd9d47ee05", "patch": "@@ -219,10 +219,10 @@ static int undeclared_variable_notice;\n /* For __extension__, save/restore the warning flags which are\n    controlled by __extension__.  */\n #define SAVE_WARN_FLAGS()\t\\\n-\tbuild_int_2 (pedantic | (warn_pointer_arith << 1), 0)\n+\tsize_int (pedantic | (warn_pointer_arith << 1))\n #define RESTORE_WARN_FLAGS(tval) \\\n   do {                                     \\\n-    int val = tree_low_cst (tval, 0);     \\\n+    int val = tree_low_cst (tval, 0);      \\\n     pedantic = val & 1;                    \\\n     warn_pointer_arith = (val >> 1) & 1;   \\\n   } while (0)"}]}