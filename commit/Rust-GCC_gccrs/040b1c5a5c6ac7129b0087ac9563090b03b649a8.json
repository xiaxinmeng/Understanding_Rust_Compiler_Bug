{"sha": "040b1c5a5c6ac7129b0087ac9563090b03b649a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQwYjFjNWE1YzZhYzcxMjliMDA4N2FjOTU2MzA5MGIwM2I2NDlhOA==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2005-09-28T23:50:06Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2005-09-28T23:50:06Z"}, "message": "Index: ChangeLog\n2005-09-28  Geoffrey Keating  <geoffk@apple.com>\n\n\t* Makefile.tpl (BASE_TARGET_EXPORTS): Add LIPO, STRIP.\n\t(LIPO_FOR_TARGET): New.\n\t(CONFIGURED_LIPO_FOR_TARGET): New.\n\t(USUAL_LIPO_FOR_TARGET): New.\n\t(STRIP_FOR_TARGET): New.\n\t(CONFIGURED_STRIP_FOR_TARGET): New.\n\t(USUAL_STRIP_FOR_TARGET): New.\n\t* Makefile.def (flags_to_pass): Add LIPO_FOR_TARGET and\n\tSTRIP_FOR_TARGET.\n\t* configure.in: Set LIPO_FOR_TARGET, STRIP_FOR_TARGET,\n\tCONFIGURED_LIPO_FOR_TARGET, CONFIGURED_STRIP_FOR_TARGET.\n\t* Makefile.in: Regenerate.\n\t* configure.in: Regenerate.\n\nIndex: gcc/ChangeLog\n2005-09-28  Geoffrey Keating  <geoffk@apple.com>\n\n\t* Makefile.in: Export LIPO_FOR_TARGET, STRIP_FOR_TARGET.\n\t(stage1-start): Delete old libgcc and libunwind before moving\n\tanything into the stage directory.\n\t(stage2-start): Likewise.\n\t(stage3-start): Likewise.\n\t(stage4-start): Likewise.\n\t(stageprofile-start): Likewise.\n\t(stagefeedback-start): Likewise.\n\t* config.gcc (*-*-darwin*): Automatically use CPU-specific darwin.h\n\theader in tm_file and CPU-specific t-darwin in tmake_file.\n\t(i[34567]86-*-darwin*): Don't change tm_file.\n\t(powerpc-*-darwin*): Don't change tm_file or tmake_file.\n\t* config/darwin.h (REAL_LIBGCC_SPEC): Rewrite to use proper libgcc\n\tshared library stub for target OS version.\n\t* config/t-slibgcc-darwin (SHLIB_SOLINK): Delete.\n\t(SHLIB_LINK): Don't make SHLIB_SOLINK.\n\t(SHLIB_INSTALL): Don't install SHLIB_SOLINK.\n\t(libgcc_s.%.dylib): New.\n\t(LIBGCC): Define.\n\t(install-darwin-libgcc-stubs): New.\n\t(INSTALL_LIBGCC): New append.\n\t* config/i386/darwin-libgcc.10.4.ver: New.\n\t* config/i386/darwin-libgcc.10.5.ver: New.\n\t* config/i386/t-darwin: New.\n\t* config/rs6000/darwin-libgcc.10.4.ver: New.\n\t* config/rs6000/darwin-libgcc.10.5.ver: New.\n\t* config/rs6000/darwin.h (REAL_LIBGCC_SPEC): Delete.\n\t* config/rs6000/t-darwin (SHLIB_VERPFX): Define.\n\nFrom-SVN: r104747", "tree": {"sha": "4a941b503e4d5d57010b144fc9e315a3f4ffc9c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a941b503e4d5d57010b144fc9e315a3f4ffc9c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/040b1c5a5c6ac7129b0087ac9563090b03b649a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040b1c5a5c6ac7129b0087ac9563090b03b649a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/040b1c5a5c6ac7129b0087ac9563090b03b649a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040b1c5a5c6ac7129b0087ac9563090b03b649a8/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c7d0307027c14f6d4e64692118df456fbd6dd6e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7d0307027c14f6d4e64692118df456fbd6dd6e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7d0307027c14f6d4e64692118df456fbd6dd6e5"}], "stats": {"total": 700, "additions": 654, "deletions": 46}, "files": [{"sha": "65f3e08089273c13c6c4f7bc3462d890edc04e6d", "filename": "ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040b1c5a5c6ac7129b0087ac9563090b03b649a8/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040b1c5a5c6ac7129b0087ac9563090b03b649a8/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=040b1c5a5c6ac7129b0087ac9563090b03b649a8", "patch": "@@ -1,3 +1,19 @@\n+2005-09-28  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* Makefile.tpl (BASE_TARGET_EXPORTS): Add LIPO, STRIP.\n+\t(LIPO_FOR_TARGET): New.\n+\t(CONFIGURED_LIPO_FOR_TARGET): New.\n+\t(USUAL_LIPO_FOR_TARGET): New.\n+\t(STRIP_FOR_TARGET): New.\n+\t(CONFIGURED_STRIP_FOR_TARGET): New.\n+\t(USUAL_STRIP_FOR_TARGET): New.\n+\t* Makefile.def (flags_to_pass): Add LIPO_FOR_TARGET and\n+\tSTRIP_FOR_TARGET.\n+\t* configure.in: Set LIPO_FOR_TARGET, STRIP_FOR_TARGET,\n+\tCONFIGURED_LIPO_FOR_TARGET, CONFIGURED_STRIP_FOR_TARGET.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t\n 2005-09-19  David Edelsohn  <edelsohn@gnu.org>\n \n \t* configure.in (powerpc-*-aix*): Add target-libssp to noconfigdirs."}, {"sha": "9ad197e66b90d5cebb5e75f92e4b2a0047d6bb0e", "filename": "Makefile.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040b1c5a5c6ac7129b0087ac9563090b03b649a8/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040b1c5a5c6ac7129b0087ac9563090b03b649a8/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=040b1c5a5c6ac7129b0087ac9563090b03b649a8", "patch": "@@ -223,11 +223,13 @@ flags_to_pass = { flag= DLLTOOL_FOR_TARGET ; };\n flags_to_pass = { flag= GCJ_FOR_TARGET ; };\n flags_to_pass = { flag= GFORTRAN_FOR_TARGET ; };\n flags_to_pass = { flag= LD_FOR_TARGET ; };\n+flags_to_pass = { flag= LIPO_FOR_TARGET ; };\n flags_to_pass = { flag= LDFLAGS_FOR_TARGET ; };\n flags_to_pass = { flag= LIBCFLAGS_FOR_TARGET ; };\n flags_to_pass = { flag= LIBCXXFLAGS_FOR_TARGET ; };\n flags_to_pass = { flag= NM_FOR_TARGET ; };\n flags_to_pass = { flag= RANLIB_FOR_TARGET ; };\n+flags_to_pass = { flag= STRIP_FOR_TARGET ; };\n flags_to_pass = { flag= WINDRES_FOR_TARGET ; };\n \n // Inter-module dependencies"}, {"sha": "d5f7170841ea09765f335eb9112fe4e45cc0a3e0", "filename": "Makefile.in", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040b1c5a5c6ac7129b0087ac9563090b03b649a8/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040b1c5a5c6ac7129b0087ac9563090b03b649a8/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=040b1c5a5c6ac7129b0087ac9563090b03b649a8", "patch": "@@ -192,8 +192,10 @@ BASE_TARGET_EXPORTS = \\\n \tDLLTOOL=\"$(DLLTOOL_FOR_TARGET)\"; export DLLTOOL; \\\n \tLD=\"$(LD_FOR_TARGET)\"; export LD; \\\n \tLDFLAGS=\"$(LDFLAGS_FOR_TARGET)\"; export LDFLAGS; \\\n+\tLIPO=\"$(LIPO_FOR_TARGET)\"; export LIPO; \\\n \tNM=\"$(NM_FOR_TARGET)\"; export NM; \\\n \tRANLIB=\"$(RANLIB_FOR_TARGET)\"; export RANLIB; \\\n+\tSTRIP=\"$(STRIP_FOR_TARGET)\"; export STRIP; \\\n \tWINDRES=\"$(WINDRES_FOR_TARGET)\"; export WINDRES; \\\n \t$(RPATH_ENVVAR)=`echo \"$(HOST_LIB_PATH)$(TARGET_LIB_PATH)$$$(RPATH_ENVVAR)\" | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'`; export $(RPATH_ENVVAR);\n \n@@ -478,6 +480,19 @@ USUAL_LD_FOR_TARGET = ` \\\n \n LDFLAGS_FOR_TARGET = \n \n+LIPO_FOR_TARGET=@LIPO_FOR_TARGET@\n+CONFIGURED_LIPO_FOR_TARGET=@CONFIGURED_LIPO_FOR_TARGET@\n+USUAL_LIPO_FOR_TARGET = ` \\\n+  if [ '$(host)' = '$(target)' ] ; then \\\n+    if [ x'$(LIPO)' != x ]; then \\\n+       echo $(LIPO); \\\n+    else \\\n+       echo lipo; \\\n+    fi; \\\n+  else \\\n+    echo $(CONFIGURED_LIPO_FOR_TARGET) ; \\\n+  fi`\n+\n NM_FOR_TARGET=@NM_FOR_TARGET@\n CONFIGURED_NM_FOR_TARGET=@CONFIGURED_NM_FOR_TARGET@\n USUAL_NM_FOR_TARGET = ` \\\n@@ -510,6 +525,23 @@ USUAL_RANLIB_FOR_TARGET = ` \\\n     fi; \\\n   fi`\n \n+STRIP_FOR_TARGET=@STRIP_FOR_TARGET@\n+CONFIGURED_STRIP_FOR_TARGET=@CONFIGURED_STRIP_FOR_TARGET@\n+USUAL_STRIP_FOR_TARGET = ` \\\n+  if [ -f $$r/$(HOST_SUBDIR)/binutils/strip ] ; then \\\n+    echo $$r/$(HOST_SUBDIR)/binutils/strip ; \\\n+  else \\\n+    if [ '$(host)' = '$(target)' ] ; then \\\n+      if [ x'$(STRIP)' != x ]; then \\\n+         echo $(STRIP); \\\n+      else \\\n+         echo strip; \\\n+      fi; \\\n+    else \\\n+      echo $(CONFIGURED_STRIP_FOR_TARGET) ; \\\n+    fi; \\\n+  fi`\n+\n WINDRES_FOR_TARGET=@WINDRES_FOR_TARGET@\n CONFIGURED_WINDRES_FOR_TARGET=@CONFIGURED_WINDRES_FOR_TARGET@\n USUAL_WINDRES_FOR_TARGET = ` \\\n@@ -636,11 +668,13 @@ BASE_FLAGS_TO_PASS = \\\n \t\"GCJ_FOR_TARGET=$(GCJ_FOR_TARGET)\" \\\n \t\"GFORTRAN_FOR_TARGET=$(GFORTRAN_FOR_TARGET)\" \\\n \t\"LD_FOR_TARGET=$(LD_FOR_TARGET)\" \\\n+\t\"LIPO_FOR_TARGET=$(LIPO_FOR_TARGET)\" \\\n \t\"LDFLAGS_FOR_TARGET=$(LDFLAGS_FOR_TARGET)\" \\\n \t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \\\n \t\"LIBCXXFLAGS_FOR_TARGET=$(LIBCXXFLAGS_FOR_TARGET)\" \\\n \t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \\\n \t\"RANLIB_FOR_TARGET=$(RANLIB_FOR_TARGET)\" \\\n+\t\"STRIP_FOR_TARGET=$(STRIP_FOR_TARGET)\" \\\n \t\"WINDRES_FOR_TARGET=$(WINDRES_FOR_TARGET)\" \\\n \t\"CONFIG_SHELL=$(SHELL)\" \\\n \t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" "}, {"sha": "2413c0fa300112ab8ad6ff117be34356ab30bd16", "filename": "Makefile.tpl", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040b1c5a5c6ac7129b0087ac9563090b03b649a8/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040b1c5a5c6ac7129b0087ac9563090b03b649a8/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=040b1c5a5c6ac7129b0087ac9563090b03b649a8", "patch": "@@ -195,8 +195,10 @@ BASE_TARGET_EXPORTS = \\\n \tDLLTOOL=\"$(DLLTOOL_FOR_TARGET)\"; export DLLTOOL; \\\n \tLD=\"$(LD_FOR_TARGET)\"; export LD; \\\n \tLDFLAGS=\"$(LDFLAGS_FOR_TARGET)\"; export LDFLAGS; \\\n+\tLIPO=\"$(LIPO_FOR_TARGET)\"; export LIPO; \\\n \tNM=\"$(NM_FOR_TARGET)\"; export NM; \\\n \tRANLIB=\"$(RANLIB_FOR_TARGET)\"; export RANLIB; \\\n+\tSTRIP=\"$(STRIP_FOR_TARGET)\"; export STRIP; \\\n \tWINDRES=\"$(WINDRES_FOR_TARGET)\"; export WINDRES; \\\n \t$(RPATH_ENVVAR)=`echo \"$(HOST_LIB_PATH)$(TARGET_LIB_PATH)$$$(RPATH_ENVVAR)\" | sed 's,::*,:,g;s,^:*,,;s,:*$$,,'`; export $(RPATH_ENVVAR);\n \n@@ -481,6 +483,19 @@ USUAL_LD_FOR_TARGET = ` \\\n \n LDFLAGS_FOR_TARGET = \n \n+LIPO_FOR_TARGET=@LIPO_FOR_TARGET@\n+CONFIGURED_LIPO_FOR_TARGET=@CONFIGURED_LIPO_FOR_TARGET@\n+USUAL_LIPO_FOR_TARGET = ` \\\n+  if [ '$(host)' = '$(target)' ] ; then \\\n+    if [ x'$(LIPO)' != x ]; then \\\n+       echo $(LIPO); \\\n+    else \\\n+       echo lipo; \\\n+    fi; \\\n+  else \\\n+    echo $(CONFIGURED_LIPO_FOR_TARGET) ; \\\n+  fi`\n+\n NM_FOR_TARGET=@NM_FOR_TARGET@\n CONFIGURED_NM_FOR_TARGET=@CONFIGURED_NM_FOR_TARGET@\n USUAL_NM_FOR_TARGET = ` \\\n@@ -513,6 +528,23 @@ USUAL_RANLIB_FOR_TARGET = ` \\\n     fi; \\\n   fi`\n \n+STRIP_FOR_TARGET=@STRIP_FOR_TARGET@\n+CONFIGURED_STRIP_FOR_TARGET=@CONFIGURED_STRIP_FOR_TARGET@\n+USUAL_STRIP_FOR_TARGET = ` \\\n+  if [ -f $$r/$(HOST_SUBDIR)/binutils/strip ] ; then \\\n+    echo $$r/$(HOST_SUBDIR)/binutils/strip ; \\\n+  else \\\n+    if [ '$(host)' = '$(target)' ] ; then \\\n+      if [ x'$(STRIP)' != x ]; then \\\n+         echo $(STRIP); \\\n+      else \\\n+         echo strip; \\\n+      fi; \\\n+    else \\\n+      echo $(CONFIGURED_STRIP_FOR_TARGET) ; \\\n+    fi; \\\n+  fi`\n+\n WINDRES_FOR_TARGET=@WINDRES_FOR_TARGET@\n CONFIGURED_WINDRES_FOR_TARGET=@CONFIGURED_WINDRES_FOR_TARGET@\n USUAL_WINDRES_FOR_TARGET = ` \\"}, {"sha": "28ef316efc525d5d5b36b4f05265e2710adb3408", "filename": "configure", "status": "modified", "additions": 168, "deletions": 8, "changes": 176, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040b1c5a5c6ac7129b0087ac9563090b03b649a8/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040b1c5a5c6ac7129b0087ac9563090b03b649a8/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=040b1c5a5c6ac7129b0087ac9563090b03b649a8", "patch": "@@ -4858,12 +4858,87 @@ if test -z \"$ac_cv_prog_LD_FOR_TARGET\" ; then\n   fi\n fi\n \n- for ncn_progname in nm; do\n+ for ncn_progname in lipo; do\n   if test -n \"$ncn_target_tool_prefix\"; then\n     # Extract the first word of \"${ncn_target_tool_prefix}${ncn_progname}\", so it can be a program name with args.\n set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n echo \"configure:4867: checking for $ac_word\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_prog_LIPO_FOR_TARGET'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  if test -n \"$LIPO_FOR_TARGET\"; then\n+  ac_cv_prog_LIPO_FOR_TARGET=\"$LIPO_FOR_TARGET\" # Let the user override the test.\n+else\n+  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\":\"\n+  ac_dummy=\"$PATH\"\n+  for ac_dir in $ac_dummy; do\n+    test -z \"$ac_dir\" && ac_dir=.\n+    if test -f $ac_dir/$ac_word; then\n+      ac_cv_prog_LIPO_FOR_TARGET=\"${ncn_target_tool_prefix}${ncn_progname}\"\n+      break\n+    fi\n+  done\n+  IFS=\"$ac_save_ifs\"\n+fi\n+fi\n+LIPO_FOR_TARGET=\"$ac_cv_prog_LIPO_FOR_TARGET\"\n+if test -n \"$LIPO_FOR_TARGET\"; then\n+  echo \"$ac_t\"\"$LIPO_FOR_TARGET\" 1>&6\n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+\n+  fi\n+  if test -z \"$ac_cv_prog_LIPO_FOR_TARGET\" && test $build = $target ; then\n+    # Extract the first word of \"${ncn_progname}\", so it can be a program name with args.\n+set dummy ${ncn_progname}; ac_word=$2\n+echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n+echo \"configure:4898: checking for $ac_word\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_prog_LIPO_FOR_TARGET'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  if test -n \"$LIPO_FOR_TARGET\"; then\n+  ac_cv_prog_LIPO_FOR_TARGET=\"$LIPO_FOR_TARGET\" # Let the user override the test.\n+else\n+  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\":\"\n+  ac_dummy=\"$PATH\"\n+  for ac_dir in $ac_dummy; do\n+    test -z \"$ac_dir\" && ac_dir=.\n+    if test -f $ac_dir/$ac_word; then\n+      ac_cv_prog_LIPO_FOR_TARGET=\"${ncn_progname}\"\n+      break\n+    fi\n+  done\n+  IFS=\"$ac_save_ifs\"\n+fi\n+fi\n+LIPO_FOR_TARGET=\"$ac_cv_prog_LIPO_FOR_TARGET\"\n+if test -n \"$LIPO_FOR_TARGET\"; then\n+  echo \"$ac_t\"\"$LIPO_FOR_TARGET\" 1>&6\n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+ \n+  fi\n+  test -n \"$ac_cv_prog_LIPO_FOR_TARGET\" && break\n+done\n+\n+if test -z \"$ac_cv_prog_LIPO_FOR_TARGET\" ; then\n+  set dummy lipo\n+  if test $build = $target ; then\n+    LIPO_FOR_TARGET=\"$2\"\n+  else\n+    LIPO_FOR_TARGET=\"${ncn_target_tool_prefix}$2\"\n+  fi\n+fi\n+\n+ for ncn_progname in nm; do\n+  if test -n \"$ncn_target_tool_prefix\"; then\n+    # Extract the first word of \"${ncn_target_tool_prefix}${ncn_progname}\", so it can be a program name with args.\n+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2\n+echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n+echo \"configure:4942: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_NM_FOR_TARGET'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -4894,7 +4969,7 @@ fi\n     # Extract the first word of \"${ncn_progname}\", so it can be a program name with args.\n set dummy ${ncn_progname}; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:4898: checking for $ac_word\" >&5\n+echo \"configure:4973: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_NM_FOR_TARGET'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -4938,7 +5013,7 @@ fi\n     # Extract the first word of \"${ncn_target_tool_prefix}${ncn_progname}\", so it can be a program name with args.\n set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:4942: checking for $ac_word\" >&5\n+echo \"configure:5017: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_RANLIB_FOR_TARGET'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -4969,7 +5044,7 @@ fi\n     # Extract the first word of \"${ncn_progname}\", so it can be a program name with args.\n set dummy ${ncn_progname}; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:4973: checking for $ac_word\" >&5\n+echo \"configure:5048: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_RANLIB_FOR_TARGET'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -5003,12 +5078,87 @@ if test -z \"$ac_cv_prog_RANLIB_FOR_TARGET\" ; then\n   RANLIB_FOR_TARGET=\":\"\n fi\n \n+ for ncn_progname in strip; do\n+  if test -n \"$ncn_target_tool_prefix\"; then\n+    # Extract the first word of \"${ncn_target_tool_prefix}${ncn_progname}\", so it can be a program name with args.\n+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2\n+echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n+echo \"configure:5087: checking for $ac_word\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_prog_STRIP_FOR_TARGET'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  if test -n \"$STRIP_FOR_TARGET\"; then\n+  ac_cv_prog_STRIP_FOR_TARGET=\"$STRIP_FOR_TARGET\" # Let the user override the test.\n+else\n+  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\":\"\n+  ac_dummy=\"$PATH\"\n+  for ac_dir in $ac_dummy; do\n+    test -z \"$ac_dir\" && ac_dir=.\n+    if test -f $ac_dir/$ac_word; then\n+      ac_cv_prog_STRIP_FOR_TARGET=\"${ncn_target_tool_prefix}${ncn_progname}\"\n+      break\n+    fi\n+  done\n+  IFS=\"$ac_save_ifs\"\n+fi\n+fi\n+STRIP_FOR_TARGET=\"$ac_cv_prog_STRIP_FOR_TARGET\"\n+if test -n \"$STRIP_FOR_TARGET\"; then\n+  echo \"$ac_t\"\"$STRIP_FOR_TARGET\" 1>&6\n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+\n+  fi\n+  if test -z \"$ac_cv_prog_STRIP_FOR_TARGET\" && test $build = $target ; then\n+    # Extract the first word of \"${ncn_progname}\", so it can be a program name with args.\n+set dummy ${ncn_progname}; ac_word=$2\n+echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n+echo \"configure:5118: checking for $ac_word\" >&5\n+if eval \"test \\\"`echo '$''{'ac_cv_prog_STRIP_FOR_TARGET'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  if test -n \"$STRIP_FOR_TARGET\"; then\n+  ac_cv_prog_STRIP_FOR_TARGET=\"$STRIP_FOR_TARGET\" # Let the user override the test.\n+else\n+  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\":\"\n+  ac_dummy=\"$PATH\"\n+  for ac_dir in $ac_dummy; do\n+    test -z \"$ac_dir\" && ac_dir=.\n+    if test -f $ac_dir/$ac_word; then\n+      ac_cv_prog_STRIP_FOR_TARGET=\"${ncn_progname}\"\n+      break\n+    fi\n+  done\n+  IFS=\"$ac_save_ifs\"\n+fi\n+fi\n+STRIP_FOR_TARGET=\"$ac_cv_prog_STRIP_FOR_TARGET\"\n+if test -n \"$STRIP_FOR_TARGET\"; then\n+  echo \"$ac_t\"\"$STRIP_FOR_TARGET\" 1>&6\n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+ \n+  fi\n+  test -n \"$ac_cv_prog_STRIP_FOR_TARGET\" && break\n+done\n+\n+if test -z \"$ac_cv_prog_STRIP_FOR_TARGET\" ; then\n+  set dummy strip\n+  if test $build = $target ; then\n+    STRIP_FOR_TARGET=\"$2\"\n+  else\n+    STRIP_FOR_TARGET=\"${ncn_target_tool_prefix}$2\"\n+  fi\n+fi\n+\n  for ncn_progname in windres; do\n   if test -n \"$ncn_target_tool_prefix\"; then\n     # Extract the first word of \"${ncn_target_tool_prefix}${ncn_progname}\", so it can be a program name with args.\n set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:5012: checking for $ac_word\" >&5\n+echo \"configure:5162: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_WINDRES_FOR_TARGET'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -5039,7 +5189,7 @@ fi\n     # Extract the first word of \"${ncn_progname}\", so it can be a program name with args.\n set dummy ${ncn_progname}; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:5043: checking for $ac_word\" >&5\n+echo \"configure:5193: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_WINDRES_FOR_TARGET'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -5088,8 +5238,10 @@ CONFIGURED_GCC_FOR_TARGET=\"$GCC_FOR_TARGET\"\n CONFIGURED_GCJ_FOR_TARGET=\"$GCJ_FOR_TARGET\"\n CONFIGURED_GFORTRAN_FOR_TARGET=\"$GFORTRAN_FOR_TARGET\"\n CONFIGURED_LD_FOR_TARGET=\"$LD_FOR_TARGET\"\n+CONFIGURED_LIPO_FOR_TARGET=\"$LIPO_FOR_TARGET\"\n CONFIGURED_NM_FOR_TARGET=\"$NM_FOR_TARGET\"\n CONFIGURED_RANLIB_FOR_TARGET=\"$RANLIB_FOR_TARGET\"\n+CONFIGURED_STRIP_FOR_TARGET=\"$STRIP_FOR_TARGET\"\n CONFIGURED_WINDRES_FOR_TARGET=\"$WINDRES_FOR_TARGET\"\n \n \n@@ -5112,8 +5264,10 @@ if test \"x${build}\" = \"x${host}\" ; then\n   GCJ_FOR_TARGET=\"\\$(USUAL_GCJ_FOR_TARGET)\"\n   GFORTRAN_FOR_TARGET=\"\\$(USUAL_GFORTRAN_FOR_TARGET)\"\n   LD_FOR_TARGET=\"\\$(USUAL_LD_FOR_TARGET)\"\n+  LIPO_FOR_TARGET=\"\\$(USUAL_LIPO_FOR_TARGET)\"\n   NM_FOR_TARGET=\"\\$(USUAL_NM_FOR_TARGET)\"\n   RANLIB_FOR_TARGET=\"\\$(USUAL_RANLIB_FOR_TARGET)\"\n+  STRIP_FOR_TARGET=\"\\$(USUAL_STRIP_FOR_TARGET)\"\n   WINDRES_FOR_TARGET=\"\\$(USUAL_WINDRES_FOR_TARGET)\"\n else\n   # Just use the ones we found.\n@@ -5127,8 +5281,10 @@ else\n   GCJ_FOR_TARGET=\"\\$(CONFIGURED_GCJ_FOR_TARGET)\"\n   GFORTRAN_FOR_TARGET=\"\\$(CONFIGURED_GFORTRAN_FOR_TARGET)\"\n   LD_FOR_TARGET=\"\\$(CONFIGURED_LD_FOR_TARGET)\"\n+  LIPO_FOR_TARGET=\"\\$(CONFIGURED_LIPO_FOR_TARGET)\"\n   NM_FOR_TARGET=\"\\$(CONFIGURED_NM_FOR_TARGET)\"\n   RANLIB_FOR_TARGET=\"\\$(CONFIGURED_RANLIB_FOR_TARGET)\"\n+  STRIP_FOR_TARGET=\"\\$(CONFIGURED_STRIP_FOR_TARGET)\"\n   WINDRES_FOR_TARGET=\"\\$(CONFIGURED_WINDRES_FOR_TARGET)\"  \n fi\n \n@@ -5140,7 +5296,7 @@ RANLIB_FOR_TARGET=${RANLIB_FOR_TARGET}${extra_ranlibflags_for_target}\n NM_FOR_TARGET=${NM_FOR_TARGET}${extra_nmflags_for_target}\n \n echo $ac_n \"checking whether to enable maintainer-specific portions of Makefiles\"\"... $ac_c\" 1>&6\n-echo \"configure:5144: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n+echo \"configure:5300: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n # Check whether --enable-maintainer-mode or --disable-maintainer-mode was given.\n if test \"${enable_maintainer_mode+set}\" = set; then\n   enableval=\"$enable_maintainer_mode\"\n@@ -5187,7 +5343,7 @@ esac\n # gcc for stageN-gcc and stagePREV-gcc for stage(N-1).  In case this is not\n # possible, however, we can resort to mv.\n echo $ac_n \"checking if symbolic links between directories work\"\"... $ac_c\" 1>&6\n-echo \"configure:5191: checking if symbolic links between directories work\" >&5\n+echo \"configure:5347: checking if symbolic links between directories work\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_prog_ln_s_dir'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -5463,8 +5619,10 @@ s%@GCC_FOR_TARGET@%$GCC_FOR_TARGET%g\n s%@GCJ_FOR_TARGET@%$GCJ_FOR_TARGET%g\n s%@GFORTRAN_FOR_TARGET@%$GFORTRAN_FOR_TARGET%g\n s%@LD_FOR_TARGET@%$LD_FOR_TARGET%g\n+s%@LIPO_FOR_TARGET@%$LIPO_FOR_TARGET%g\n s%@NM_FOR_TARGET@%$NM_FOR_TARGET%g\n s%@RANLIB_FOR_TARGET@%$RANLIB_FOR_TARGET%g\n+s%@STRIP_FOR_TARGET@%$STRIP_FOR_TARGET%g\n s%@WINDRES_FOR_TARGET@%$WINDRES_FOR_TARGET%g\n s%@CONFIGURED_AR_FOR_TARGET@%$CONFIGURED_AR_FOR_TARGET%g\n s%@CONFIGURED_AS_FOR_TARGET@%$CONFIGURED_AS_FOR_TARGET%g\n@@ -5475,8 +5633,10 @@ s%@CONFIGURED_GCC_FOR_TARGET@%$CONFIGURED_GCC_FOR_TARGET%g\n s%@CONFIGURED_GCJ_FOR_TARGET@%$CONFIGURED_GCJ_FOR_TARGET%g\n s%@CONFIGURED_GFORTRAN_FOR_TARGET@%$CONFIGURED_GFORTRAN_FOR_TARGET%g\n s%@CONFIGURED_LD_FOR_TARGET@%$CONFIGURED_LD_FOR_TARGET%g\n+s%@CONFIGURED_LIPO_FOR_TARGET@%$CONFIGURED_LIPO_FOR_TARGET%g\n s%@CONFIGURED_NM_FOR_TARGET@%$CONFIGURED_NM_FOR_TARGET%g\n s%@CONFIGURED_RANLIB_FOR_TARGET@%$CONFIGURED_RANLIB_FOR_TARGET%g\n+s%@CONFIGURED_STRIP_FOR_TARGET@%$CONFIGURED_STRIP_FOR_TARGET%g\n s%@CONFIGURED_WINDRES_FOR_TARGET@%$CONFIGURED_WINDRES_FOR_TARGET%g\n s%@FLAGS_FOR_TARGET@%$FLAGS_FOR_TARGET%g\n s%@RAW_CXX_FOR_TARGET@%$RAW_CXX_FOR_TARGET%g"}, {"sha": "91e8cf249b0e18afdce17a9d841774becef0fac3", "filename": "configure.in", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040b1c5a5c6ac7129b0087ac9563090b03b649a8/configure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040b1c5a5c6ac7129b0087ac9563090b03b649a8/configure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.in?ref=040b1c5a5c6ac7129b0087ac9563090b03b649a8", "patch": "@@ -2116,8 +2116,10 @@ NCN_STRICT_CHECK_TARGET_TOOLS(GCC_FOR_TARGET, gcc, ${CC_FOR_TARGET})\n NCN_STRICT_CHECK_TARGET_TOOLS(GCJ_FOR_TARGET, gcj)\n NCN_STRICT_CHECK_TARGET_TOOLS(GFORTRAN_FOR_TARGET, gfortran)\n NCN_STRICT_CHECK_TARGET_TOOLS(LD_FOR_TARGET, ld)\n+NCN_STRICT_CHECK_TARGET_TOOLS(LIPO_FOR_TARGET, lipo)\n NCN_STRICT_CHECK_TARGET_TOOLS(NM_FOR_TARGET, nm)\n NCN_STRICT_CHECK_TARGET_TOOLS(RANLIB_FOR_TARGET, ranlib, :)\n+NCN_STRICT_CHECK_TARGET_TOOLS(STRIP_FOR_TARGET, strip)\n NCN_STRICT_CHECK_TARGET_TOOLS(WINDRES_FOR_TARGET, windres)\n \n CONFIGURED_AR_FOR_TARGET=\"$AR_FOR_TARGET\"\n@@ -2129,8 +2131,10 @@ CONFIGURED_GCC_FOR_TARGET=\"$GCC_FOR_TARGET\"\n CONFIGURED_GCJ_FOR_TARGET=\"$GCJ_FOR_TARGET\"\n CONFIGURED_GFORTRAN_FOR_TARGET=\"$GFORTRAN_FOR_TARGET\"\n CONFIGURED_LD_FOR_TARGET=\"$LD_FOR_TARGET\"\n+CONFIGURED_LIPO_FOR_TARGET=\"$LIPO_FOR_TARGET\"\n CONFIGURED_NM_FOR_TARGET=\"$NM_FOR_TARGET\"\n CONFIGURED_RANLIB_FOR_TARGET=\"$RANLIB_FOR_TARGET\"\n+CONFIGURED_STRIP_FOR_TARGET=\"$STRIP_FOR_TARGET\"\n CONFIGURED_WINDRES_FOR_TARGET=\"$WINDRES_FOR_TARGET\"\n \n AC_SUBST(CONFIGURED_AR_FOR_TARGET)dnl\n@@ -2142,8 +2146,10 @@ AC_SUBST(CONFIGURED_GCC_FOR_TARGET)dnl\n AC_SUBST(CONFIGURED_GCJ_FOR_TARGET)dnl\n AC_SUBST(CONFIGURED_GFORTRAN_FOR_TARGET)dnl\n AC_SUBST(CONFIGURED_LD_FOR_TARGET)dnl\n+AC_SUBST(CONFIGURED_LIPO_FOR_TARGET)dnl\n AC_SUBST(CONFIGURED_NM_FOR_TARGET)dnl\n AC_SUBST(CONFIGURED_RANLIB_FOR_TARGET)dnl\n+AC_SUBST(CONFIGURED_STRIP_FOR_TARGET)dnl\n AC_SUBST(CONFIGURED_WINDRES_FOR_TARGET)dnl\n AC_SUBST(FLAGS_FOR_TARGET)\n \n@@ -2165,8 +2171,10 @@ if test \"x${build}\" = \"x${host}\" ; then\n   GCJ_FOR_TARGET=\"\\$(USUAL_GCJ_FOR_TARGET)\"\n   GFORTRAN_FOR_TARGET=\"\\$(USUAL_GFORTRAN_FOR_TARGET)\"\n   LD_FOR_TARGET=\"\\$(USUAL_LD_FOR_TARGET)\"\n+  LIPO_FOR_TARGET=\"\\$(USUAL_LIPO_FOR_TARGET)\"\n   NM_FOR_TARGET=\"\\$(USUAL_NM_FOR_TARGET)\"\n   RANLIB_FOR_TARGET=\"\\$(USUAL_RANLIB_FOR_TARGET)\"\n+  STRIP_FOR_TARGET=\"\\$(USUAL_STRIP_FOR_TARGET)\"\n   WINDRES_FOR_TARGET=\"\\$(USUAL_WINDRES_FOR_TARGET)\"\n else\n   # Just use the ones we found.\n@@ -2180,8 +2188,10 @@ else\n   GCJ_FOR_TARGET=\"\\$(CONFIGURED_GCJ_FOR_TARGET)\"\n   GFORTRAN_FOR_TARGET=\"\\$(CONFIGURED_GFORTRAN_FOR_TARGET)\"\n   LD_FOR_TARGET=\"\\$(CONFIGURED_LD_FOR_TARGET)\"\n+  LIPO_FOR_TARGET=\"\\$(CONFIGURED_LIPO_FOR_TARGET)\"\n   NM_FOR_TARGET=\"\\$(CONFIGURED_NM_FOR_TARGET)\"\n   RANLIB_FOR_TARGET=\"\\$(CONFIGURED_RANLIB_FOR_TARGET)\"\n+  STRIP_FOR_TARGET=\"\\$(CONFIGURED_STRIP_FOR_TARGET)\"\n   WINDRES_FOR_TARGET=\"\\$(CONFIGURED_WINDRES_FOR_TARGET)\"  \n fi\n "}, {"sha": "db55afad71d6550346ac4f31ac29d2db9a692018", "filename": "gcc/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040b1c5a5c6ac7129b0087ac9563090b03b649a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040b1c5a5c6ac7129b0087ac9563090b03b649a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=040b1c5a5c6ac7129b0087ac9563090b03b649a8", "patch": "@@ -1,3 +1,34 @@\n+2005-09-28  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* Makefile.in: Export LIPO_FOR_TARGET, STRIP_FOR_TARGET.\n+\t(stage1-start): Delete old libgcc and libunwind before moving\n+\tanything into the stage directory.\n+\t(stage2-start): Likewise.\n+\t(stage3-start): Likewise.\n+\t(stage4-start): Likewise.\n+\t(stageprofile-start): Likewise.\n+\t(stagefeedback-start): Likewise.\n+\t* config.gcc (*-*-darwin*): Automatically use CPU-specific darwin.h\n+\theader in tm_file and CPU-specific t-darwin in tmake_file.\n+\t(i[34567]86-*-darwin*): Don't change tm_file.\n+\t(powerpc-*-darwin*): Don't change tm_file or tmake_file.\n+\t* config/darwin.h (REAL_LIBGCC_SPEC): Rewrite to use proper libgcc\n+\tshared library stub for target OS version.\n+\t* config/t-slibgcc-darwin (SHLIB_SOLINK): Delete.\n+\t(SHLIB_LINK): Don't make SHLIB_SOLINK.\n+\t(SHLIB_INSTALL): Don't install SHLIB_SOLINK.\n+\t(libgcc_s.%.dylib): New.\n+\t(LIBGCC): Define.\n+\t(install-darwin-libgcc-stubs): New.\n+\t(INSTALL_LIBGCC): New append.\n+\t* config/i386/darwin-libgcc.10.4.ver: New.\n+\t* config/i386/darwin-libgcc.10.5.ver: New.\n+\t* config/i386/t-darwin: New.\n+\t* config/rs6000/darwin-libgcc.10.4.ver: New.\n+\t* config/rs6000/darwin-libgcc.10.5.ver: New.\n+\t* config/rs6000/darwin.h (REAL_LIBGCC_SPEC): Delete.\n+\t* config/rs6000/t-darwin (SHLIB_VERPFX): Define.\n+\n 2005-09-28  Paul Brook  <paul@codesourcery.com>\n \n \t* config/m68k/fpgnulib.c (__extendsfdf2, __truncdfsf2): Handle"}, {"sha": "cd6533babcb3f90c0d27b86f5029ed6fcd7d2b1b", "filename": "gcc/Makefile.in", "status": "modified", "additions": 21, "deletions": 19, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040b1c5a5c6ac7129b0087ac9563090b03b649a8/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040b1c5a5c6ac7129b0087ac9563090b03b649a8/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=040b1c5a5c6ac7129b0087ac9563090b03b649a8", "patch": "@@ -863,8 +863,10 @@ export INCLUDES\n export INSTALL_DATA\n export LIB1ASMSRC\n export LIBGCC2_CFLAGS\n+export LIPO_FOR_TARGET\n export MACHMODE_H\n export NM_FOR_TARGET\n+export STRIP_FOR_TARGET\n export RANLIB_FOR_TARGET\n export libsubdir\n export slibdir\n@@ -4283,6 +4285,9 @@ stage1-start:\n \t do \\\n \t   if [ -d stage1/$$dir ] ; then true ; else mkdir stage1/$$dir ; fi ; \\\n \t done\n+\t-rm -f stage1/libgcc.a stage1/libgcc_eh.a stage1/libgcov.a\n+\t-rm -f stage1/libgcc_s*$(SHLIB_EXT)\n+\t-rm -f stage1/libunwind.a stage1/libunwind*$(SHLIB_EXT)\n # If SPECS is overridden, make sure it is `installed' as specs.\n \t-mv $(SPECS) stage1/specs\n \t-mv $(STAGEMOVESTUFF) stage1\n@@ -4293,9 +4298,6 @@ stage1-start:\n \t-if [ -f as$(exeext) ] ; then (cd stage1 && $(LN_S) ../as$(exeext) .) ; else true ; fi\n \t-if [ -f ld$(exeext) ] ; then (cd stage1 && $(LN_S) ../ld$(exeext) .) ; else true ; fi\n \t-if [ -f collect-ld$(exeext) ] ; then (cd stage1 && $(LN_S) ../collect-ld$(exeext) .) ; else true ; fi\n-\t-rm -f stage1/libgcc.a stage1/libgcc_eh.a stage1/libgcov.a\n-\t-rm -f stage1/libgcc_s*$(SHLIB_EXT)\n-\t-rm -f stage1/libunwind.a stage1/libunwind*$(SHLIB_EXT)\n \t-cp libgcc.a stage1\n \t-$(RANLIB_FOR_TARGET) stage1/libgcc.a\n \t-cp libgcov.a stage1\n@@ -4322,6 +4324,9 @@ stage2-start:\n \t do \\\n \t   if [ -d stage2/$$dir ] ; then true ; else mkdir stage2/$$dir ; fi ; \\\n \t done\n+\t-rm -f stage2/libgcc.a stage2/libgcov.a stage2/libgcc_eh.a\n+\t-rm -f stage2/libgcc_s*$(SHLIB_EXT)\n+\t-rm -f stage2/libunwind.a stage2/libunwind*$(SHLIB_EXT)\n # If SPECS is overridden, make sure it is `installed' as specs.\n \t-mv $(SPECS) stage2/specs\n \t-mv $(STAGEMOVESTUFF) stage2\n@@ -4332,9 +4337,6 @@ stage2-start:\n \t-if [ -f as$(exeext) ] ; then (cd stage2 && $(LN_S) ../as$(exeext) .) ; else true ; fi\n \t-if [ -f ld$(exeext) ] ; then (cd stage2 && $(LN_S) ../ld$(exeext) .) ; else true ; fi\n \t-if [ -f collect-ld$(exeext) ] ; then (cd stage2 && $(LN_S) ../collect-ld$(exeext) .) ; else true ; fi\n-\t-rm -f stage2/libgcc.a stage2/libgcov.a stage2/libgcc_eh.a\n-\t-rm -f stage2/libgcc_s*$(SHLIB_EXT)\n-\t-rm -f stage2/libunwind.a stage2/libunwind*$(SHLIB_EXT)\n \t-cp libgcc.a stage2\n \t-$(RANLIB_FOR_TARGET) stage2/libgcc.a\n \t-cp libgcov.a stage2\n@@ -4357,6 +4359,9 @@ stage3-start:\n \t do \\\n \t   if [ -d stage3/$$dir ] ; then true ; else mkdir stage3/$$dir ; fi ; \\\n \t done\n+\t-rm -f stage3/libgcc.a stage3/libgcov.a stage3/libgcc_eh.a\n+\t-rm -f stage3/libgcc_s*$(SHLIB_EXT)\n+\t-rm -f stage3/libunwind.a stage3/libunwind*$(SHLIB_EXT)\n # If SPECS is overridden, make sure it is `installed' as specs.\n \t-mv $(SPECS) stage3/specs\n \t-mv $(STAGEMOVESTUFF) stage3\n@@ -4367,9 +4372,6 @@ stage3-start:\n \t-if [ -f as$(exeext) ] ; then (cd stage3 && $(LN_S) ../as$(exeext) .) ; else true ; fi\n \t-if [ -f ld$(exeext) ] ; then (cd stage3 && $(LN_S) ../ld$(exeext) .) ; else true ; fi\n \t-if [ -f collect-ld$(exeext) ] ; then (cd stage3 && $(LN_S) ../collect-ld$(exeext) .) ; else true ; fi\n-\t-rm -f stage3/libgcc.a stage3/libgcov.a stage3/libgcc_eh.a\n-\t-rm -f stage3/libgcc_s*$(SHLIB_EXT)\n-\t-rm -f stage3/libunwind.a stage3/libunwind*$(SHLIB_EXT)\n \t-cp libgcc.a stage3\n \t-$(RANLIB_FOR_TARGET) stage3/libgcc.a\n \t-cp libgcov.a stage3\n@@ -4392,6 +4394,9 @@ stage4-start:\n \t do \\\n \t   if [ -d stage4/$$dir ] ; then true ; else mkdir stage4/$$dir ; fi ; \\\n \t done\n+\t-rm -f stage4/libgcc.a stage4/libgcov.a stage4/libgcc_eh.a\n+\t-rm -f stage4/libgcc_s*$(SHLIB_EXT)\n+\t-rm -f stage4/libunwind.a stage4/libunwind*$(SHLIB_EXT)\n # If SPECS is overridden, make sure it is `installed' as specs.\n \t-mv $(SPECS) stage4/specs\n \t-mv $(STAGEMOVESTUFF) stage4\n@@ -4402,9 +4407,6 @@ stage4-start:\n \t-if [ -f as$(exeext) ] ; then (cd stage4 && $(LN_S) ../as$(exeext) .) ; else true ; fi\n \t-if [ -f ld$(exeext) ] ; then (cd stage4 && $(LN_S) ../ld$(exeext) .) ; else true ; fi\n \t-if [ -f collect-ld$(exeext) ] ; then (cd stage4 && $(LN_S) ../collect-ld$(exeext) .) ; else true ; fi\n-\t-rm -f stage4/libgcc.a stage4/libgcov.a stage4/libgcc_eh.a\n-\t-rm -f stage4/libgcc_s*$(SHLIB_EXT)\n-\t-rm -f stage4/libunwind.a stage4/libunwind*$(SHLIB_EXT)\n \t-cp libgcc.a stage4\n \t-$(RANLIB_FOR_TARGET) stage4/libgcc.a\n \t-cp libgcov.a stage4\n@@ -4427,6 +4429,9 @@ stageprofile-start:\n \t do \\\n \t   if [ -d stageprofile/$$dir ] ; then true ; else mkdir stageprofile/$$dir ; fi ; \\\n \t done\n+\t-rm -f stageprofile/libgcc.a stageprofile/libgcov.a stageprofile/libgcc_eh.a\n+\t-rm -f stageprofile/libgcc_s*$(SHLIB_EXT)\n+\t-rm -f stageprofile/libunwind.a stageprofile/libunwind*$(SHLIB_EXT)\n \t-mv $(STAGEMOVESTUFF) stageprofile\n \t-mv build/* stageprofile/build\n \t-cp -p $(STAGECOPYSTUFF) stageprofile\n@@ -4435,9 +4440,6 @@ stageprofile-start:\n \t-if [ -f as$(exeext) ] ; then (cd stageprofile && $(LN_S) ../as$(exeext) .) ; else true ; fi\n \t-if [ -f ld$(exeext) ] ; then (cd stageprofile && $(LN_S) ../ld$(exeext) .) ; else true ; fi\n \t-if [ -f collect-ld$(exeext) ] ; then (cd stageprofile && $(LN_S) ../collect-ld$(exeext) .) ; else true ; fi\n-\t-rm -f stageprofile/libgcc.a stageprofile/libgcov.a stageprofile/libgcc_eh.a\n-\t-rm -f stageprofile/libgcc_s*$(SHLIB_EXT)\n-\t-rm -f stageprofile/libunwind.a stageprofile/libunwind*$(SHLIB_EXT)\n \t-cp libgcc.a stageprofile\n \t-$(RANLIB_FOR_TARGET) stageprofile/libgcc.a\n \t-cp libgcov.a stageprofile\n@@ -4460,6 +4462,10 @@ stagefeedback-start:\n \t do \\\n \t   if [ -d stagefeedback/$$dir ] ; then true ; else mkdir stagefeedback/$$dir ; fi ; \\\n \t done\n+\t-rm -f stagefeedback/libgcc.a stagefeedback/libgcov.a stagefeedback/libgcc_eh.a\n+\t-rm -f stagefeedback/libgcc_s*$(SHLIB_EXT)\n+\t-rm -f stagefeedback/libunwind.a stagefeedback/libunwind*$(SHLIB_EXT)\n+\t-rm -f *.da\n \t-mv $(STAGEMOVESTUFF) stagefeedback\n \t-mv build/* stagefeedback/build\n \t-cp -p $(STAGECOPYSTUFF) stagefeedback\n@@ -4468,10 +4474,6 @@ stagefeedback-start:\n \t-if [ -f as$(exeext) ] ; then (cd stagefeedback && $(LN_S) ../as$(exeext) .) ; else true ; fi\n \t-if [ -f ld$(exeext) ] ; then (cd stagefeedback && $(LN_S) ../ld$(exeext) .) ; else true ; fi\n \t-if [ -f collect-ld$(exeext) ] ; then (cd stagefeedback && $(LN_S) ../collect-ld$(exeext) .) ; else true ; fi\n-\t-rm -f stagefeedback/libgcc.a stagefeedback/libgcov.a stagefeedback/libgcc_eh.a\n-\t-rm -f stagefeedback/libgcc_s*$(SHLIB_EXT)\n-\t-rm -f stagefeedback/libunwind.a stagefeedback/libunwind*$(SHLIB_EXT)\n-\t-rm -f *.da\n \t-for dir in fixinc po testsuite $(SUBDIRS); \\\n \t do \\\n \t   rm -f $$dir/*.da ; \\"}, {"sha": "cdfc66ee18c36014fe6defd1bbd584f18f4136d9", "filename": "gcc/config.gcc", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040b1c5a5c6ac7129b0087ac9563090b03b649a8/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040b1c5a5c6ac7129b0087ac9563090b03b649a8/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=040b1c5a5c6ac7129b0087ac9563090b03b649a8", "patch": "@@ -356,9 +356,9 @@ esac\n # Common parts for widely ported systems.\n case ${target} in\n *-*-darwin*)\n-  tm_file=\"${tm_file} darwin.h\"\n+  tm_file=\"${tm_file} darwin.h ${cpu_type}/darwin.h\"\n   tm_p_file=\"${tm_p_file} darwin-protos.h\"\n-  tmake_file=\"t-darwin t-slibgcc-darwin\"\n+  tmake_file=\"t-darwin ${cpu_type}/t-darwin t-slibgcc-darwin\"\n   target_gtfiles=\"\\$(srcdir)/config/darwin.c\"\n   extra_options=\"${extra_options} darwin.opt\"\n   c_target_objs=\"darwin-c.o\"\n@@ -949,7 +949,7 @@ hppa[12]*-*-hpux11*)\n \tuse_collect2=yes\n \t;;\n i[34567]86-*-darwin*)\n-\ttm_file=\"${tm_file} i386/darwin.h\"\n+\t# All the configuration is presently done generically.\n \t;;\n i[34567]86-*-elf*)\n \ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h i386/i386elf.h\"\n@@ -1611,8 +1611,6 @@ powerpc-*-beos*)\n \tuse_fixproto=yes\n \t;;\n powerpc-*-darwin*)\n-\ttm_file=\"${tm_file} rs6000/darwin.h\"\n-\ttmake_file=\"${tmake_file} rs6000/t-darwin\"\n \textra_options=\"${extra_options} rs6000/darwin.opt\"\n \tcase ${target} in\n \t  *-darwin1[0-9]* | *-darwin[8-9]*)"}, {"sha": "a4b79c613e5ca53820172b6f43911d5ec40f6aeb", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040b1c5a5c6ac7129b0087ac9563090b03b649a8/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040b1c5a5c6ac7129b0087ac9563090b03b649a8/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=040b1c5a5c6ac7129b0087ac9563090b03b649a8", "patch": "@@ -302,12 +302,17 @@ Boston, MA 02110-1301, USA.  */\n \n #define LIB_SPEC \"%{!static:-lSystem}\"\n \n-/* -dynamiclib implies -shared-libgcc just like -shared would on linux.  */\n-#define REAL_LIBGCC_SPEC \\\n-   \"%{static|static-libgcc:-lgcc -lgcc_eh}\\\n-    %{!static:%{!static-libgcc:\\\n-      %{!Zdynamiclib:%{!shared-libgcc:-lgcc -lgcc_eh}\\\n-      %{shared-libgcc:-lgcc_s -lgcc}} %{Zdynamiclib:-lgcc_s -lgcc}}}\"\n+/* -dynamiclib implies -shared-libgcc just like -shared would on linux.  \n+   Support -mmacosx-version-min by supplying different (stub) libgcc_s.dylib\n+   libraries to link against.  */\n+#undef REAL_LIBGCC_SPEC\n+#define REAL_LIBGCC_SPEC\t\t\t\t\t\t\\\n+   \"%{static|static-libgcc:-lgcc -lgcc_eh;\t\t\t\t\\\n+      :%{shared-libgcc|Zdynamiclib\t\t\t\t\t\\\n+         :%:version-compare(!> 10.5 mmacosx-version-min= -lgcc_s.10.4)\t\\\n+          %:version-compare(>= 10.5 mmacosx-version-min= -lgcc_s.10.5)\t\\\n+          -lgcc;\t\t\t\t\t\t\t\\\n+         :-lgcc -lgcc_eh}}\"\n \n /* We specify crt0.o as -lcrt0.o so that ld will search the library path.  */\n /* We don't want anything to do with crt2.o in the 64-bit case;"}, {"sha": "aaeb934fe7dd3d1eb67d9267cd363c9cf245d61e", "filename": "gcc/config/i386/darwin-libgcc.10.4.ver", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040b1c5a5c6ac7129b0087ac9563090b03b649a8/gcc%2Fconfig%2Fi386%2Fdarwin-libgcc.10.4.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040b1c5a5c6ac7129b0087ac9563090b03b649a8/gcc%2Fconfig%2Fi386%2Fdarwin-libgcc.10.4.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin-libgcc.10.4.ver?ref=040b1c5a5c6ac7129b0087ac9563090b03b649a8", "patch": "@@ -0,0 +1,81 @@\n+__Unwind_Backtrace\n+__Unwind_DeleteException\n+__Unwind_FindEnclosingFunction\n+__Unwind_Find_FDE\n+__Unwind_ForcedUnwind\n+__Unwind_GetCFA\n+__Unwind_GetDataRelBase\n+__Unwind_GetGR\n+__Unwind_GetIP\n+__Unwind_GetLanguageSpecificData\n+__Unwind_GetRegionStart\n+__Unwind_GetTextRelBase\n+__Unwind_RaiseException\n+__Unwind_Resume\n+__Unwind_Resume_or_Rethrow\n+__Unwind_SetGR\n+__Unwind_SetIP\n+___absvdi2\n+___absvsi2\n+___addvdi3\n+___addvsi3\n+___ashldi3\n+___ashrdi3\n+___clear_cache\n+___clzdi2\n+___clzsi2\n+___cmpdi2\n+___ctzdi2\n+___ctzsi2\n+___deregister_frame\n+___deregister_frame_info\n+___deregister_frame_info_bases\n+___divdc3\n+___divdi3\n+___divsc3\n+___divxc3\n+___enable_execute_stack\n+___ffsdi2\n+___fixdfdi\n+___fixsfdi\n+___fixunsdfdi\n+___fixunsdfsi\n+___fixunssfdi\n+___fixunssfsi\n+___fixunsxfdi\n+___fixunsxfsi\n+___fixxfdi\n+___floatdidf\n+___floatdisf\n+___floatdixf\n+___gcc_personality_v0\n+___lshrdi3\n+___moddi3\n+___muldc3\n+___muldi3\n+___mulsc3\n+___mulvdi3\n+___mulvsi3\n+___mulxc3\n+___negdi2\n+___negvdi2\n+___negvsi2\n+___paritydi2\n+___paritysi2\n+___popcountdi2\n+___popcountsi2\n+___powidf2\n+___powisf2\n+___powixf2\n+___register_frame\n+___register_frame_info\n+___register_frame_info_bases\n+___register_frame_info_table\n+___register_frame_info_table_bases\n+___register_frame_table\n+___subvdi3\n+___subvsi3\n+___ucmpdi2\n+___udivdi3\n+___udivmoddi4\n+___umoddi3"}, {"sha": "aaeb934fe7dd3d1eb67d9267cd363c9cf245d61e", "filename": "gcc/config/i386/darwin-libgcc.10.5.ver", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040b1c5a5c6ac7129b0087ac9563090b03b649a8/gcc%2Fconfig%2Fi386%2Fdarwin-libgcc.10.5.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040b1c5a5c6ac7129b0087ac9563090b03b649a8/gcc%2Fconfig%2Fi386%2Fdarwin-libgcc.10.5.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin-libgcc.10.5.ver?ref=040b1c5a5c6ac7129b0087ac9563090b03b649a8", "patch": "@@ -0,0 +1,81 @@\n+__Unwind_Backtrace\n+__Unwind_DeleteException\n+__Unwind_FindEnclosingFunction\n+__Unwind_Find_FDE\n+__Unwind_ForcedUnwind\n+__Unwind_GetCFA\n+__Unwind_GetDataRelBase\n+__Unwind_GetGR\n+__Unwind_GetIP\n+__Unwind_GetLanguageSpecificData\n+__Unwind_GetRegionStart\n+__Unwind_GetTextRelBase\n+__Unwind_RaiseException\n+__Unwind_Resume\n+__Unwind_Resume_or_Rethrow\n+__Unwind_SetGR\n+__Unwind_SetIP\n+___absvdi2\n+___absvsi2\n+___addvdi3\n+___addvsi3\n+___ashldi3\n+___ashrdi3\n+___clear_cache\n+___clzdi2\n+___clzsi2\n+___cmpdi2\n+___ctzdi2\n+___ctzsi2\n+___deregister_frame\n+___deregister_frame_info\n+___deregister_frame_info_bases\n+___divdc3\n+___divdi3\n+___divsc3\n+___divxc3\n+___enable_execute_stack\n+___ffsdi2\n+___fixdfdi\n+___fixsfdi\n+___fixunsdfdi\n+___fixunsdfsi\n+___fixunssfdi\n+___fixunssfsi\n+___fixunsxfdi\n+___fixunsxfsi\n+___fixxfdi\n+___floatdidf\n+___floatdisf\n+___floatdixf\n+___gcc_personality_v0\n+___lshrdi3\n+___moddi3\n+___muldc3\n+___muldi3\n+___mulsc3\n+___mulvdi3\n+___mulvsi3\n+___mulxc3\n+___negdi2\n+___negvdi2\n+___negvsi2\n+___paritydi2\n+___paritysi2\n+___popcountdi2\n+___popcountsi2\n+___powidf2\n+___powisf2\n+___powixf2\n+___register_frame\n+___register_frame_info\n+___register_frame_info_bases\n+___register_frame_info_table\n+___register_frame_info_table_bases\n+___register_frame_table\n+___subvdi3\n+___subvsi3\n+___ucmpdi2\n+___udivdi3\n+___udivmoddi4\n+___umoddi3"}, {"sha": "3d0d5d5b89436ae80cf995bdd147860a4d22adc7", "filename": "gcc/config/i386/t-darwin", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040b1c5a5c6ac7129b0087ac9563090b03b649a8/gcc%2Fconfig%2Fi386%2Ft-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040b1c5a5c6ac7129b0087ac9563090b03b649a8/gcc%2Fconfig%2Fi386%2Ft-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-darwin?ref=040b1c5a5c6ac7129b0087ac9563090b03b649a8", "patch": "@@ -0,0 +1 @@\n+SHLIB_VERPFX = $(srcdir)/config/rs6000/darwin-libgcc"}, {"sha": "019218dd60ff9bf4ef9fea71c9b40c7cf00b4c4b", "filename": "gcc/config/rs6000/darwin-libgcc.10.4.ver", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040b1c5a5c6ac7129b0087ac9563090b03b649a8/gcc%2Fconfig%2Frs6000%2Fdarwin-libgcc.10.4.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040b1c5a5c6ac7129b0087ac9563090b03b649a8/gcc%2Fconfig%2Frs6000%2Fdarwin-libgcc.10.4.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin-libgcc.10.4.ver?ref=040b1c5a5c6ac7129b0087ac9563090b03b649a8", "patch": "@@ -0,0 +1,76 @@\n+__Unwind_Backtrace\n+__Unwind_DeleteException\n+__Unwind_FindEnclosingFunction\n+__Unwind_Find_FDE\n+__Unwind_ForcedUnwind\n+__Unwind_GetCFA\n+__Unwind_GetDataRelBase\n+__Unwind_GetGR\n+__Unwind_GetIP\n+__Unwind_GetLanguageSpecificData\n+__Unwind_GetRegionStart\n+__Unwind_GetTextRelBase\n+__Unwind_RaiseException\n+__Unwind_Resume\n+__Unwind_Resume_or_Rethrow\n+__Unwind_SetGR\n+__Unwind_SetIP\n+___absvdi2\n+___absvsi2\n+___addvdi3\n+___addvsi3\n+___ashldi3\n+___ashrdi3\n+___clear_cache\n+___clzdi2\n+___clzsi2\n+___cmpdi2\n+___ctzdi2\n+___ctzsi2\n+___deregister_frame\n+___deregister_frame_info\n+___deregister_frame_info_bases\n+___divdi3\n+___enable_execute_stack\n+___ffsdi2\n+___fixdfdi\n+___fixsfdi\n+___fixtfdi\n+___fixunsdfdi\n+___fixunsdfsi\n+___fixunssfdi\n+___fixunssfsi\n+___fixunstfdi\n+___floatdidf\n+___floatdisf\n+___floatditf\n+___gcc_personality_v0\n+___gcc_qadd\n+___gcc_qdiv\n+___gcc_qmul\n+___gcc_qsub\n+___lshrdi3\n+___moddi3\n+___muldi3\n+___mulvdi3\n+___mulvsi3\n+___negdi2\n+___negvdi2\n+___negvsi2\n+___paritydi2\n+___paritysi2\n+___popcountdi2\n+___popcountsi2\n+___register_frame\n+___register_frame_info\n+___register_frame_info_bases\n+___register_frame_info_table\n+___register_frame_info_table_bases\n+___register_frame_table\n+___subvdi3\n+___subvsi3\n+___trampoline_setup\n+___ucmpdi2\n+___udivdi3\n+___udivmoddi4\n+___umoddi3"}, {"sha": "679d8c2f471dee8d55258b65bc4dae2bf628731e", "filename": "gcc/config/rs6000/darwin-libgcc.10.5.ver", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040b1c5a5c6ac7129b0087ac9563090b03b649a8/gcc%2Fconfig%2Frs6000%2Fdarwin-libgcc.10.5.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040b1c5a5c6ac7129b0087ac9563090b03b649a8/gcc%2Fconfig%2Frs6000%2Fdarwin-libgcc.10.5.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin-libgcc.10.5.ver?ref=040b1c5a5c6ac7129b0087ac9563090b03b649a8", "patch": "@@ -0,0 +1,85 @@\n+__Unwind_Backtrace\n+__Unwind_DeleteException\n+__Unwind_FindEnclosingFunction\n+__Unwind_Find_FDE\n+__Unwind_ForcedUnwind\n+__Unwind_GetCFA\n+__Unwind_GetDataRelBase\n+__Unwind_GetGR\n+__Unwind_GetIP\n+__Unwind_GetLanguageSpecificData\n+__Unwind_GetRegionStart\n+__Unwind_GetTextRelBase\n+__Unwind_RaiseException\n+__Unwind_Resume\n+__Unwind_Resume_or_Rethrow\n+__Unwind_SetGR\n+__Unwind_SetIP\n+___absvdi2\n+___absvsi2\n+___addvdi3\n+___addvsi3\n+___ashldi3\n+___ashrdi3\n+___clear_cache\n+___clzdi2\n+___clzsi2\n+___cmpdi2\n+___ctzdi2\n+___ctzsi2\n+___deregister_frame\n+___deregister_frame_info\n+___deregister_frame_info_bases\n+___divdc3\n+___divdi3\n+___divsc3\n+___divtc3\n+___enable_execute_stack\n+___ffsdi2\n+___fixdfdi\n+___fixsfdi\n+___fixtfdi\n+___fixunsdfdi\n+___fixunsdfsi\n+___fixunssfdi\n+___fixunssfsi\n+___fixunstfdi\n+___floatdidf\n+___floatdisf\n+___floatditf\n+___gcc_personality_v0\n+___gcc_qadd\n+___gcc_qdiv\n+___gcc_qmul\n+___gcc_qsub\n+___lshrdi3\n+___moddi3\n+___muldc3\n+___muldi3\n+___mulsc3\n+___multc3\n+___mulvdi3\n+___mulvsi3\n+___negdi2\n+___negvdi2\n+___negvsi2\n+___paritydi2\n+___paritysi2\n+___popcountdi2\n+___popcountsi2\n+___powidf2\n+___powisf2\n+___powitf2\n+___register_frame\n+___register_frame_info\n+___register_frame_info_bases\n+___register_frame_info_table\n+___register_frame_info_table_bases\n+___register_frame_table\n+___subvdi3\n+___subvsi3\n+___trampoline_setup\n+___ucmpdi2\n+___udivdi3\n+___udivmoddi4\n+___umoddi3"}, {"sha": "0d633efed41d724d852df3372f3c5f3a7f47132e", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040b1c5a5c6ac7129b0087ac9563090b03b649a8/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040b1c5a5c6ac7129b0087ac9563090b03b649a8/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=040b1c5a5c6ac7129b0087ac9563090b03b649a8", "patch": "@@ -392,14 +392,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n     } \\\n   while (0)\n \n-/* Just like config/darwin.h's REAL_LIBGCC_SPEC, but use -lgcc_s_ppc64 for\n-   -m64.  */\n-#undef REAL_LIBGCC_SPEC\n-#define REAL_LIBGCC_SPEC\t\t\t\t\t\t\\\n-   \"%{static|static-libgcc:-lgcc -lgcc_eh;\t\t\t\t\\\n-      :%{shared-libgcc|Zdynamiclib:%{m64:-lgcc_s_ppc64;:-lgcc_s} -lgcc;\t\\\n-         :-lgcc -lgcc_eh}}\"\n-\n #ifdef IN_LIBGCC2\n #include <stdbool.h>\n #endif"}, {"sha": "264cb63c87d830d42330c4186e65d302bf23deac", "filename": "gcc/config/rs6000/t-darwin", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040b1c5a5c6ac7129b0087ac9563090b03b649a8/gcc%2Fconfig%2Frs6000%2Ft-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040b1c5a5c6ac7129b0087ac9563090b03b649a8/gcc%2Fconfig%2Frs6000%2Ft-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-darwin?ref=040b1c5a5c6ac7129b0087ac9563090b03b649a8", "patch": "@@ -19,6 +19,8 @@ TARGET_LIBGCC2_CFLAGS = -Wa,-force_cpusubtype_ALL -pipe\n # Export the _xlq* symbols from darwin-ldouble.c.\n SHLIB_MAPFILES += $(srcdir)/config/rs6000/libgcc-ppc64.ver\n \n+SHLIB_VERPFX = $(srcdir)/config/rs6000/darwin-libgcc\n+\n LIB2ADDEH += $(srcdir)/config/rs6000/darwin-fallback.c\n \n darwin-fpsave.o:\t$(srcdir)/config/rs6000/darwin-asm.h"}]}