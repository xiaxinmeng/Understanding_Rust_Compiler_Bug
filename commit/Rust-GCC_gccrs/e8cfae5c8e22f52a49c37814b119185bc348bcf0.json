{"sha": "e8cfae5c8e22f52a49c37814b119185bc348bcf0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThjZmFlNWM4ZTIyZjUyYTQ5YzM3ODE0YjExOTE4NWJjMzQ4YmNmMA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-10-11T02:32:35Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-10-11T02:32:35Z"}, "message": "pa.c (output_function_prologue): Pass the highest register number saved for ENTRY_GR and ENTRY_FR directives...\n\n\t* pa.c (output_function_prologue):  Pass the highest register\n\tnumber saved for ENTRY_GR and ENTRY_FR directives rather\n\tthan the number\tof registers saved.\n\t(hppa_expand_prologue):  Account for %r4 when it's being\n\tused as a frame pointer.\n\nFrom-SVN: r5718", "tree": {"sha": "5ce9377f91053c5fca833a69c5345deb6cfddd48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ce9377f91053c5fca833a69c5345deb6cfddd48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8cfae5c8e22f52a49c37814b119185bc348bcf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8cfae5c8e22f52a49c37814b119185bc348bcf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8cfae5c8e22f52a49c37814b119185bc348bcf0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8cfae5c8e22f52a49c37814b119185bc348bcf0/comments", "author": null, "committer": null, "parents": [{"sha": "0d69ab6fee5d77a22538c637e5b1d08bd8e08e88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d69ab6fee5d77a22538c637e5b1d08bd8e08e88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d69ab6fee5d77a22538c637e5b1d08bd8e08e88"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "a75814a3174d38423bd125c9cf0658994e8ace7d", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8cfae5c8e22f52a49c37814b119185bc348bcf0/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8cfae5c8e22f52a49c37814b119185bc348bcf0/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=e8cfae5c8e22f52a49c37814b119185bc348bcf0", "patch": "@@ -2023,8 +2023,18 @@ output_function_prologue (file, size)\n     fprintf (file, \",SAVE_SP\");\n \n   /* Pass on information about the number of callee register saves\n-     performed in the prologue.  */\n-  fprintf (file, \",ENTRY_GR=%d,ENTRY_FR=%d\", gr_saved, fr_saved);\n+     performed in the prologue.\n+\n+     The compiler is supposed to pass the highest register number\n+     saved, the assembler then has to adjust that number before \n+     entering it into the unwind descriptor (to account for any\n+     caller saved registers with lower register numbers than the \n+     first callee saved register).  */\n+  if (gr_saved)\n+    fprintf (file, \",ENTRY_GR=%d\", gr_saved + 2);\n+\n+  if (fr_saved)\n+    fprintf (file, \",ENTRY_FR=%d\", fr_saved + 11);\n \n   fprintf (file, \"\\n\\t.ENTRY\\n\");\n \n@@ -2179,6 +2189,8 @@ hppa_expand_prologue()\n \t    offset += 4;\n \t    gr_saved++;\n \t  }\n+      /* Account for %r4 which is saved in a special place.  */\n+      gr_saved++;\n     }\n   /* No frame pointer needed.  */\n   else"}]}