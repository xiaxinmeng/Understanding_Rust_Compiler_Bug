{"sha": "683b1112af90e02494b3eceacb8af3f7c7352efd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgzYjExMTJhZjkwZTAyNDk0YjNlY2VhY2I4YWYzZjdjNzM1MmVmZA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-07-15T05:32:21Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-07-15T05:32:21Z"}, "message": "* expr.c: Remove the last argument to expand_assignment().\n\nFrom-SVN: r69380", "tree": {"sha": "3fe8e7f99bfddf976a2628a9e0117b0310c754fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fe8e7f99bfddf976a2628a9e0117b0310c754fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/683b1112af90e02494b3eceacb8af3f7c7352efd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/683b1112af90e02494b3eceacb8af3f7c7352efd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/683b1112af90e02494b3eceacb8af3f7c7352efd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/683b1112af90e02494b3eceacb8af3f7c7352efd/comments", "author": null, "committer": null, "parents": [{"sha": "b90f141a9d681c533c209813a6aa3f6dfce01b90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b90f141a9d681c533c209813a6aa3f6dfce01b90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b90f141a9d681c533c209813a6aa3f6dfce01b90"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "07f5bcc937c96d98cbf490fcec31c49d3e54305b", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/683b1112af90e02494b3eceacb8af3f7c7352efd/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/683b1112af90e02494b3eceacb8af3f7c7352efd/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=683b1112af90e02494b3eceacb8af3f7c7352efd", "patch": "@@ -1,3 +1,7 @@\n+2003-07-15  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* expr.c: Remove the last argument to expand_assignment().\n+\n Wed Jul  9 02:29:15 CEST 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* java-tree.h (DECL_NUM_STMTS): Rename to..."}, {"sha": "5cf855c8243574ad1a958565daab5728eaafda34", "filename": "gcc/java/expr.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/683b1112af90e02494b3eceacb8af3f7c7352efd/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/683b1112af90e02494b3eceacb8af3f7c7352efd/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=683b1112af90e02494b3eceacb8af3f7c7352efd", "patch": "@@ -232,7 +232,7 @@ flush_quick_stack (void)\n \n       decl = find_stack_slot (stack_index, type);\n       if (decl != node)\n-\t  expand_assignment (decl, node, 0, 0);\n+\t  expand_assignment (decl, node, 0);\n       stack_index += 1 + TYPE_IS_WIDE (type);\n     }\n }\n@@ -986,7 +986,7 @@ expand_java_arraystore (tree rhs_type_node)\n   expand_assignment (build_java_arrayaccess (array,\n \t\t\t\t\t     rhs_type_node,\n \t\t\t\t\t     index),\n-\t\t     rhs_node, 0, 0);\n+\t\t     rhs_node, 0);\n }\n \n /* Expand the evaluation of ARRAY[INDEX]. build_java_check_indexed_type makes \n@@ -1273,7 +1273,7 @@ expand_iinc (unsigned int local_var_index, int ival, int pc)\n     local_var = find_local_variable (local_var_index, int_type_node, pc);\n     constant_value = build_int_2 (ival, ival < 0 ? -1 : 0);\n     res = fold (build (PLUS_EXPR, int_type_node, local_var, constant_value));\n-    expand_assignment (local_var, res, 0, 0);\n+    expand_assignment (local_var, res, 0);\n }\n \n       \n@@ -2350,7 +2350,7 @@ expand_java_field_op (int is_static, int is_putting, int field_ref_index)\n \t\twarning_with_decl (field_decl, \"assignment to final field `%s' not in constructor\");\n \t    }\n \t}\n-      expand_assignment (field_ref, new_value, 0, 0);\n+      expand_assignment (field_ref, new_value, 0);\n     }\n   else\n     push_value (field_ref);\n@@ -2461,7 +2461,7 @@ java_expand_expr (tree exp, rtx target, enum machine_mode tmode,\n \texpand_decl (array_decl);\n \ttmp = expand_assignment (array_decl,\n \t\t\t\t build_new_array (element_type, length),\n-\t\t\t\t 1, 0);\n+\t\t\t\t 1);\n \tif (TREE_CONSTANT (init)\n \t    && ilength >= 10 && JPRIMITIVE_TYPE_P (element_type))\n \t  {\n@@ -2480,7 +2480,7 @@ java_expand_expr (tree exp, rtx target, enum machine_mode tmode,\n \texpand_assignment (build (COMPONENT_REF, TREE_TYPE (data_fld),\n \t\t\t\t  build_java_indirect_ref (array_type, \n \t\t\t\t\t  array_decl, flag_check_references), \n-\t\t\t\t  data_fld), init, 0, 0);\n+\t\t\t\t  data_fld), init, 0);\n \treturn tmp;\n       }\n     case BLOCK:\n@@ -3091,7 +3091,7 @@ process_jvm_instruction (int PC, const unsigned char* byte_ops,\n     type = TREE_TYPE (value);\t\t\t\t\\\n     decl = find_local_variable (var, type, oldpc);\t\\\n     set_local_type (var, type );\t\t\t\\\n-    expand_assignment (decl, value, 0, 0);\t\t\\\n+    expand_assignment (decl, value, 0);\t\t\t\\\n   }\n \n #define STORE(OPERAND_TYPE, OPERAND_VALUE) \\"}]}