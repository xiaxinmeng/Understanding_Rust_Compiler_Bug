{"sha": "1c0a88060b0a9280d69fc8fa814ae953ab3b103a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWMwYTg4MDYwYjBhOTI4MGQ2OWZjOGZhODE0YWU5NTNhYjNiMTAzYQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-10-21T09:17:47Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-10-21T09:17:47Z"}, "message": "tree-ssa-loop-split.c: Remove trailing spaces.\n\n\t* tree-ssa-loop-split.c: Remove trailing spaces.\n\t* match.pd: Likewise.\n\nFrom-SVN: r241398", "tree": {"sha": "0509a70b85c65967243d5c8e1ce89383cd4cf94a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0509a70b85c65967243d5c8e1ce89383cd4cf94a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c0a88060b0a9280d69fc8fa814ae953ab3b103a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c0a88060b0a9280d69fc8fa814ae953ab3b103a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c0a88060b0a9280d69fc8fa814ae953ab3b103a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c0a88060b0a9280d69fc8fa814ae953ab3b103a/comments", "author": null, "committer": null, "parents": [{"sha": "8572922996bd2db0400ccbf5043b1fdbff2fd936", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8572922996bd2db0400ccbf5043b1fdbff2fd936", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8572922996bd2db0400ccbf5043b1fdbff2fd936"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "66f78be9b9955d0f655b7ee31b63f131e920ae01", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c0a88060b0a9280d69fc8fa814ae953ab3b103a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c0a88060b0a9280d69fc8fa814ae953ab3b103a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c0a88060b0a9280d69fc8fa814ae953ab3b103a", "patch": "@@ -45,6 +45,9 @@\n \t(cmp_ccxv_neg_set): Likewise.\n \t(cmp_ccv_neg_sltu_set): Likewise.\n \n+\t* tree-ssa-loop-split.c: Remove trailing spaces.\n+\t* match.pd: Likewise.\n+\n 2016-10-21  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR rtl-optimization/78038"}, {"sha": "767d23a4c1aba8d140cdb7f484acad75f6c166d5", "filename": "gcc/match.pd", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c0a88060b0a9280d69fc8fa814ae953ab3b103a/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c0a88060b0a9280d69fc8fa814ae953ab3b103a/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=1c0a88060b0a9280d69fc8fa814ae953ab3b103a", "patch": "@@ -2581,7 +2581,7 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n    Disable the transform if either operand is pointer to function.\n    This broke pr22051-2.c for arm where function pointer\n    canonicalizaion is not wanted.  */\n- \n+\n (for cmp (ne eq)\n  (simplify\n   (cmp (convert @0) INTEGER_CST@1)"}, {"sha": "922817e63e4ce900b2d9b63e9504673246ab338d", "filename": "gcc/tree-ssa-loop-split.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c0a88060b0a9280d69fc8fa814ae953ab3b103a/gcc%2Ftree-ssa-loop-split.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c0a88060b0a9280d69fc8fa814ae953ab3b103a/gcc%2Ftree-ssa-loop-split.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-split.c?ref=1c0a88060b0a9280d69fc8fa814ae953ab3b103a", "patch": "@@ -270,7 +270,7 @@ connect_loop_phis (struct loop *loop1, struct loop *loop2, edge new_e)\n    falling through to LOOP2, or skipping it.  This is done by splitting\n    the ex1->join edge at X in the diagram above, and inserting a condition\n    whose one arm goes to pre2, resulting in this situation:\n-   \n+\n                .------if (cond)------.\n                v                     v\n              pre1       .---------->pre2\n@@ -284,12 +284,12 @@ connect_loop_phis (struct loop *loop1, struct loop *loop2, edge new_e)\n                    |            |\n                    '--->join<---'\n \n-   \n+\n    The condition used is the exit condition of LOOP1, which effectively means\n    that when the first loop exits (for whatever reason) but the real original\n    exit expression is still false the second loop will be entered.\n    The function returns the new edge cond->pre2.\n-   \n+\n    This doesn't update the SSA form, see connect_loop_phis for that.  */\n \n static edge"}]}