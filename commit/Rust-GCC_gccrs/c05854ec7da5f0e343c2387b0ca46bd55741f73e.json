{"sha": "c05854ec7da5f0e343c2387b0ca46bd55741f73e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA1ODU0ZWM3ZGE1ZjBlMzQzYzIzODdiMGNhNDZiZDU1NzQxZjczZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2008-12-21T21:47:38Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2008-12-21T21:47:38Z"}, "message": "mips.exp: Rewrite.\n\ngcc/testsuite/\n\t* gcc.target/mips/mips.exp: Rewrite.\n\n\t* gcc.target/mips/20020620-1.c: Use dg-options instead of\n\tdg-mips-options.  Remove target restrictions from dg-do.\n\t* gcc.target/mips/mips-ps-1.c: Likewise.\n\t* gcc.target/mips/mips-ps-2.c: Likewise.\n\t* gcc.target/mips/mips-ps-3.c: Likewise.\n\t* gcc.target/mips/mips-ps-4.c: Likewise.\n\t* gcc.target/mips/mips-ps-6.c: Likewise.\n\n\t* gcc.target/mips/asm-1.c: Use dg-options instead of dg-mips-options.\n\t* gcc.target/mips/branch-1.c: Likewise.\n\t* gcc.target/mips/clear-cache-2.c: Likewise.\n\t* gcc.target/mips/dse-1.c: Likewise.\n\t* gcc.target/mips/fix-r4000-1.c: Likewise.\n\t* gcc.target/mips/fix-r4000-2.c: Likewise.\n\t* gcc.target/mips/fix-r4000-3.c: Likewise.\n\t* gcc.target/mips/fix-r4000-4.c: Likewise.\n\t* gcc.target/mips/fix-r4000-5.c: Likewise.\n\t* gcc.target/mips/fix-r4000-6.c: Likewise.\n\t* gcc.target/mips/fix-r4000-7.c: Likewise.\n\t* gcc.target/mips/fix-r4000-8.c: Likewise.\n\t* gcc.target/mips/fix-r4000-9.c: Likewise.\n\t* gcc.target/mips/fix-r4000-10.c: Likewise.\n\t* gcc.target/mips/fix-r4000-11.c: Likewise.\n\t* gcc.target/mips/fix-r4000-12.c: Likewise.\n\t* gcc.target/mips/fix-vr4130-1.c: Likewise.\n\t* gcc.target/mips/fix-vr4130-2.c: Likewise.\n\t* gcc.target/mips/fix-vr4130-3.c: Likewise.\n\t* gcc.target/mips/fix-vr4130-4.c: Likewise.\n\t* gcc.target/mips/fpcmp-1.c: Likewise.\n\t* gcc.target/mips/fpcmp-2.c: Likewise.\n\t* gcc.target/mips/fpr-moves-1.c: Likewise.\n\t* gcc.target/mips/fpr-moves-2.c: Likewise.\n\t* gcc.target/mips/fpr-moves-3.c: Likewise.\n\t* gcc.target/mips/fpr-moves-4.c: Likewise.\n\t* gcc.target/mips/fpr-moves-5.c: Likewise.\n\t* gcc.target/mips/fpr-moves-6.c: Likewise.\n\t* gcc.target/mips/gcc-have-sync-compare-and-swap-2.c: Likewise.\n\t* gcc.target/mips/madd-1.c: Likewise.\n\t* gcc.target/mips/madd-2.c: Likewise.\n\t* gcc.target/mips/madd-5.c: Likewise.\n\t* gcc.target/mips/madd-6.c: Likewise.\n\t* gcc.target/mips/madd-7.c: Likewise.\n\t* gcc.target/mips/madd-8.c: Likewise.\n\t* gcc.target/mips/maddu-1.c: Likewise.\n\t* gcc.target/mips/maddu-2.c: Likewise.\n\t* gcc.target/mips/memcpy-1.c: Likewise.\n\t* gcc.target/mips/mips-sched-madd.c: Likewise.\n\t* gcc.target/mips/msub-1.c: Likewise.\n\t* gcc.target/mips/msub-2.c: Likewise.\n\t* gcc.target/mips/msub-5.c: Likewise.\n\t* gcc.target/mips/msub-6.c: Likewise.\n\t* gcc.target/mips/msub-7.c: Likewise.\n\t* gcc.target/mips/msub-8.c: Likewise.\n\t* gcc.target/mips/msubu-1.c: Likewise.\n\t* gcc.target/mips/msubu-2.c: Likewise.\n\t* gcc.target/mips/neg-abs-1.c: Likewise.\n\t* gcc.target/mips/neg-abs-2.c: Likewise.\n\t* gcc.target/mips/no-smartmips-lwxs.c: Likewise.\n\t* gcc.target/mips/no-smartmips-ror-1.c: Likewise.\n\t* gcc.target/mips/octeon-baddu-1.c: Likewise.\n\t* gcc.target/mips/octeon-bbit-2.c: Likewise.\n\t* gcc.target/mips/octeon-bbit-3.c: Likewise.\n\t* gcc.target/mips/octeon-cins-1.c: Likewise.\n\t* gcc.target/mips/octeon-cins-2.c: Likewise.\n\t* gcc.target/mips/octeon-dmul-1.c: Likewise.\n\t* gcc.target/mips/octeon-dmul-2.c: Likewise.\n\t* gcc.target/mips/octeon-exts-1.c: Likewise.\n\t* gcc.target/mips/octeon-exts-2.c: Likewise.\n\t* gcc.target/mips/octeon-exts-3.c: Likewise.\n\t* gcc.target/mips/octeon-exts-4.c: Likewise.\n\t* gcc.target/mips/octeon-exts-5.c: Likewise.\n\t* gcc.target/mips/octeon-pop-1.c: Likewise.\n\t* gcc.target/mips/octeon-seq-1.c: Likewise.\n\t* gcc.target/mips/octeon-seq-2.c: Likewise.\n\t* gcc.target/mips/octeon-seq-3.c: Likewise.\n\t* gcc.target/mips/octeon-seq-4.c: Likewise.\n\t* gcc.target/mips/pr26765.c: Likewise.\n\t* gcc.target/mips/pr33256.c: Likewise.\n\t* gcc.target/mips/pr33635-1.c: Likewise.\n\t* gcc.target/mips/pr33755.c: Likewise.\n\t* gcc.target/mips/pr34831.c: Likewise.\n\t* gcc.target/mips/pr35802.c: Likewise.\n\t* gcc.target/mips/pr37362.c: Likewise.\n\t* gcc.target/mips/r10k-cache-barrier-1.c: Likewise.\n\t* gcc.target/mips/r10k-cache-barrier-2.c: Likewise.\n\t* gcc.target/mips/r10k-cache-barrier-3.c: Likewise.\n\t* gcc.target/mips/r10k-cache-barrier-4.c: Likewise.\n\t* gcc.target/mips/r10k-cache-barrier-5.c: Likewise.\n\t* gcc.target/mips/r10k-cache-barrier-6.c: Likewise.\n\t* gcc.target/mips/r10k-cache-barrier-7.c: Likewise.\n\t* gcc.target/mips/r10k-cache-barrier-8.c: Likewise.\n\t* gcc.target/mips/r10k-cache-barrier-9.c: Likewise.\n\t* gcc.target/mips/r10k-cache-barrier-10.c: Likewise.\n\t* gcc.target/mips/r10k-cache-barrier-11.c: Likewise.\n\t* gcc.target/mips/r10k-cache-barrier-12.c: Likewise.\n\t* gcc.target/mips/r10k-cache-barrier-13.c: Likewise.\n\t* gcc.target/mips/r10k-cache-barrier-15.c: Likewise.\n\t* gcc.target/mips/r3900-mult.c: Likewise.\n\t* gcc.target/mips/rsqrt-4.c: Likewise.\n\t* gcc.target/mips/sb1-1.c: Likewise.\n\t* gcc.target/mips/scc-2.c: Likewise.\n\t* gcc.target/mips/scc-4.c: Likewise.\n\t* gcc.target/mips/sdata-1.c: Likewise.\n\t* gcc.target/mips/sdata-2.c: Likewise.\n\t* gcc.target/mips/sdata-3.c: Likewise.\n\t* gcc.target/mips/sdata-4.c: Likewise.\n\t* gcc.target/mips/smartmips-lwxs.c: Likewise.\n\t* gcc.target/mips/smartmips-ror-1.c: Likewise.\n\t* gcc.target/mips/smartmips-ror-2.c: Likewise.\n\t* gcc.target/mips/smartmips-ror-3.c: Likewise.\n\t* gcc.target/mips/smartmips-ror-4.c: Likewise.\n\t* gcc.target/mips/timode-1.c: Likewise.\n\t* gcc.target/mips/truncate-1.c: Likewise.\n\t* gcc.target/mips/truncate-2.c: Likewise.\n\t* gcc.target/mips/vr-mult-1.c: Likewise.\n\t* gcc.target/mips/vr-mult-2.c: Likewise.\n\n\t* gcc.target/mips/atomic-memory-2.c: Use dg-options instead of\n\tdg-mips-options.  Use isa>=2 instead of -mips32.\n\n\t* gcc.target/mips/branch-cost-1.c: Use dg-options instead of\n\tdg-mips-options.  Use isa>=4 instead of -mips64.\n\t* gcc.target/mips/branch-cost-2.c: Likewise.\n\n\t* gcc.target/mips/cache-1.c: Use dg-options instead of\n\tdg-mips-options.  Add isa>=3 and NOMIPS16 attributes.\n\n\t* gcc.target/mips/call-saved-1.c: Use dg-options instead of\n\tdg-mips-options.  Replace the mips16_attribute directives with\n\ta (-mips16) dg-option.  Use isa_rev=0 instead of -mips2.\n\t* gcc.target/mips/call-saved-2.c: Likewise.\n\t* gcc.target/mips/call-saved-3.c: Likewise.\n\n\t* gcc.target/mips/clear-cache-1.c: Use dg-options instead of\n\tdg-mips-options.  Use isa_rev>=2 instead of -mips32r2.\n\t* gcc.target/mips/ext_ins.c: Likewise.\n\n\t* gcc.target/mips/code-readable-1.c: Use dg-options instead of\n\tdg-mips-options.  Replace the mips16_attribute directives with\n\ta (-mips16) dg-option.  Use addressing=absolute too.\n\t* gcc.target/mips/code-readable-2.c: Likewise.\n\t* gcc.target/mips/code-readable-3.c: Likewise.\n\n\t* gcc.target/mips/dmult-1.c: Use dg-options instead of\n\tdg-mips-options.  Remove the mips16_attribute directives.\n\t* gcc.target/mips/gcc-have-sync-compare-and-swap-4.c: Likewise.\n\n\t* gcc.target/mips/dpaq_sa_l_w.c: Use dg-options instead of\n\tdg-mips-options.  Remove target restrictions from dg-do.\n\tUse -mgp32 instead of -mips32r2.\n\t* gcc.target/mips/dpsq_sa_l_w.c: Likewise.\n\n\t* gcc.target/mips/dsp-ctrl.c: Use dg-options instead of\n\tdg-mips-options.  Remove target restrictions from dg-do.\n\tRemove the !__mips_dsp code and add -mdsp -mgp32 to dg-options\n\tinstead.  Add NOMIPS16 attributes.\n\n\t* gcc.target/mips/dspr2-MULT.c: Use dg-options instead of\n\tdg-mips-options.  Replace -march=mips32r2 with -mgp32.\n\t* gcc.target/mips/dspr2-MULTU.c: Likewise.\n\n\t* gcc.target/mips/ext-1.c: Use dg-options instead of\n\tdg-mips-options.  Use isa_rev>=2 instead of -mips64r2.\n\n\t* gcc.target/mips/fix-r10000-1.c: Use dg-options instead of\n\tdg-mips-options.  Remove -march=mips4.  \n\t* gcc.target/mips/fix-r10000-2.c: Likewise.\n\t* gcc.target/mips/fix-r10000-3.c: Likewise.\n\t* gcc.target/mips/fix-r10000-4.c: Likewise.\n\t* gcc.target/mips/fix-r10000-5.c: Likewise.\n\t* gcc.target/mips/fix-r10000-6.c: Likewise.\n\t* gcc.target/mips/fix-r10000-7.c: Likewise.\n\t* gcc.target/mips/fix-r10000-8.c: Likewise.\n\t* gcc.target/mips/fix-r10000-9.c: Likewise.\n\t* gcc.target/mips/fix-r10000-10.c: Likewise.\n\t* gcc.target/mips/fix-r10000-11.c: Likewise.\n\t* gcc.target/mips/fix-r10000-12.c: Likewise.\n\t* gcc.target/mips/fix-r10000-13.c: Likewise.\n\t* gcc.target/mips/fix-r10000-14.c: Likewise.\n\t* gcc.target/mips/fix-r10000-15.c: Likewise.\n\n\t* gcc.target/mips/fixed-scalar-type.c: Use dg-options instead\n\tof dg-mips-options.  Remove target restrictions from dg-do.\n\tRemove -march=mips32r2.\n\t* gcc.target/mips/fixed-vector-type.c: Likewise.\n\t* gcc.target/mips/mips32-dsp-run.c: Likewise.\n\t* gcc.target/mips/mips32-dspr2.c: Likewise.  Add NOMIPS16 attributes.\n\n\t* gcc.target/mips/fpr-moves-7.c: Use dg-options instead of\n\tdg-mips-options.  Replace the mips16_attribute directives with\n\ta (-mips16) dg-option.  Remove -msoft-float.\n\t* gcc.target/mips/fpr-moves-8.c: Likewise.\n\t* gcc.target/mips/int-moves-1.c: Likewise.\n\t* gcc.target/mips/int-moves-2.c: Likewise.\n\n\t* gcc.target/mips/gcc-have-sync-compare-and-swap-1.c: Use dg-options\n\tinstead of dg-mips-options.  Use isa>=2 instead of -mips2.\n\tAdd -mgp32.\n\t* gcc.target/mips/gcc-have-sync-compare-and-swap-3.c: Likewise.\n\n\t* gcc.target/mips/ins-1.c: Use dg-options instead of\n\tdg-mips-options.  Use \"isa_rev>=2 -mgp32\" instead of -march=mips32r2.\n\n\t* gcc.target/mips/loongson-muldiv-1.c: Use dg-options instead of\n\tdg-mips-options.  Use isa=loongson instead of -march=loongson2e.\n\t* gcc.target/mips/loongson-muldiv-2.c: Likewise.\n\n\t* gcc.target/mips/loongson-simd.c: Remove mips_loongson\n\ttarget requirement and use isa=loongson instead.  Add -mhard-float,\n\t-mno-mips16 and -flax-vector-conversions.\n\n\t* gcc.target/mips/lazy-binding-1.c: Use dg-options instead of\n\tdg-mips-options.  Remove target restrictions from dg-do.\n\tAdd NOMIPS16 attributes.\n\n\t* gcc.target/mips/long-calls-pg.c: Use dg-options instead of\n\tdg-mips-options.  Remove -march=mips32 and -fno-pic.\n\tAdd NOMIPS16 attributes.\n\n\t* gcc.target/mips/madd-3.c: Use dg-options instead of\n\tdg-mips-options.  Use isa_rev>=1 instead of -mips32.\n\t* gcc.target/mips/maddu-3.c: Likewise.\n\t* gcc.target/mips/msub-3.c: Likewise.\n\t* gcc.target/mips/msubu-3.c: Likewise.\n\n\t* gcc.target/mips/madd-4.c: Use dg-options instead of\n\tdg-mips-options.  Remove -mips32r2.\n\t* gcc.target/mips/maddu-4.c: Likewise.\n\t* gcc.target/mips/msub-4.c: Likewise.\n\t* gcc.target/mips/msubu-4.c: Likewise.\n\n\t* gcc.target/mips/mips-3d-1.c: Use dg-options instead of\n\tdg-mips-options.  Remove target restrictions from dg-do.\n\tRemove -mips64, -mhard-float and -mgp64.\n\t* gcc.target/mips/mips-3d-2.c: Likewise.\n\t* gcc.target/mips/mips-3d-3.c: Likewise.\n\t* gcc.target/mips/mips-3d-4.c: Likewise.\n\t* gcc.target/mips/mips-3d-5.c: Likewise.\n\t* gcc.target/mips/mips-3d-6.c: Likewise.\n\t* gcc.target/mips/mips-3d-7.c: Likewise.\n\t* gcc.target/mips/mips-3d-8.c: Likewise.\n\t* gcc.target/mips/mips-3d-9.c: Likewise.\n\n\t* gcc.target/mips/mips-ps-5.c: Use dg-options instead of\n\tdg-mips-options.  Remove -mips64.\n\t* gcc.target/mips/mips-ps-type.c: Likewise.\n\n\t* gcc.target/mips/mips-ps-7.c: Use dg-options instead of\n\tdg-mips-options.  Replace -mips32r2 with -mgp32.\n\n\t* gcc.target/mips/mips-ps-type-2.c: Use dg-options instead of\n\tdg-mips-options.  Use \"isa_rev>=2 -mgp32\" instead of -mips32r2.\n\n\t* gcc.target/mips/mips16-attributes.c: Use dg-options instead of\n\tdg-mips-options.  Replace the mips16_attribute directives with\n\ta (-mips16) dg-option.\n\t* gcc.target/mips/mips16-attributes-2.c: Likewise.\n\t* gcc.target/mips/r10k-cache-barrier-14.c: Likewise.\n\t* gcc.target/mips/scc-3.c: Likewise.\n\n\t* gcc.target/mips/mips16-attributes-3.c: Add { dg-options \"(-mips16)\" }.\n\n\t* gcc.target/mips/mips16e-extends.c: Use dg-options instead of\n\tdg-mips-options.  Replace the mips16_attribute directives with\n\ta (-mips16) dg-option.  Use isa_rev>=1 instead of -march=mips32.\n\tAdd -mlong32.\n\n\t* gcc.target/mips/mips32-dsp.c: Use dg-options instead of\n\tdg-mips-options.  Replace -march=mips32 with -mgp32.\n\n\t* gcc.target/mips/mips32-dsp-type.c: Use dg-options instead of\n\tdg-mips-options.  Remove -march=mips32.\n\n\t* gcc.target/mips/mips32-dspr2-type.c: Use dg-options instead of\n\tdg-mips-options.  Remove -march=mips32r2.\n\n\t* gcc.target/mips/mips32r2-mxhc1.c: Use dg-options instead of\n\tdg-mips-options.  Add NOMIPS16 attributes.\n\n\t* gcc.target/mips/movcc-1.c: Use dg-options instead of\n\tdg-mips-options.  Use isa>=4 instead of -mips4.\n\t* gcc.target/mips/movcc-2.c: Likewise.\n\t* gcc.target/mips/movcc-3.c: Likewise.\n\n\t* gcc.target/mips/octeon-bbit-1.c: Use dg-options instead of\n\tdg-mips-options.  Declare foo as a NOMIPS16 function.\n\tUse foo instead of g.\n\n\t* gcc.target/mips/near-far-1.c: Use dg-options instead of\n\tdg-mips-options.  Replace the nonpic directives with an\n\taddressing=absolute option.\n\t* gcc.target/mips/near-far-2.c: Likewise.\n\t* gcc.target/mips/near-far-3.c: Likewise.\n\t* gcc.target/mips/near-far-4.c: Likewise.\n\n\t* gcc.target/mips/nmadd-1.c: Use dg-options instead of\n\tdg-mips-options.  Use isa=4 instead of -mips4.\n\t* gcc.target/mips/nmadd-2.c: Likewise.\n\t* gcc.target/mips/nmadd-3.c: Likewise.\n\t* gcc.target/mips/rsqrt-1.c: Likewise.\n\t* gcc.target/mips/rsqrt-2.c: Likewise.\n\t* gcc.target/mips/rsqrt-3.c: Likewise.\n\n\t* gcc.target/mips/save-restore-1.c: Use dg-options instead of\n\tdg-mips-options.  Replace the mips16_attribute directives with\n\ta (-mips16) dg-option.  Use isa_rev>=1 instead of -mips32r2.\n\t* gcc.target/mips/save-restore-2.c: Likewise.\n\t* gcc.target/mips/save-restore-3.c: Likewise.\n\t* gcc.target/mips/save-restore-4.c: Likewise.\n\t* gcc.target/mips/save-restore-5.c: Likewise.\n\n\t* gcc.target/mips/scc-1.c: Use dg-options instead of\n\tdg-mips-options.  Replace the mips16_attribute directives with\n\ta (-mips16) dg-option.  Use isa_rev>=1 instead of -mips32.\n\n\t* gcc.target/mips/timode-2.c: Remove target restrictions from dg-do.\n\tUse -mgp64.\n\nFrom-SVN: r142875", "tree": {"sha": "b90a872bb1edc2bff50bfafadf9c5bb8775758b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b90a872bb1edc2bff50bfafadf9c5bb8775758b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c05854ec7da5f0e343c2387b0ca46bd55741f73e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05854ec7da5f0e343c2387b0ca46bd55741f73e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c05854ec7da5f0e343c2387b0ca46bd55741f73e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05854ec7da5f0e343c2387b0ca46bd55741f73e/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "816bc01baee8a2320817774195cf1d20b44075ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/816bc01baee8a2320817774195cf1d20b44075ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/816bc01baee8a2320817774195cf1d20b44075ad"}], "stats": {"total": 2266, "additions": 1639, "deletions": 627}, "files": [{"sha": "f47f4d047148d786df40573942c1f7d4a419f0a0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 322, "deletions": 0, "changes": 322, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,3 +1,325 @@\n+2008-12-21  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* gcc.target/mips/mips.exp: Rewrite.\n+\n+\t* gcc.target/mips/20020620-1.c: Use dg-options instead of\n+\tdg-mips-options.  Remove target restrictions from dg-do.\n+\t* gcc.target/mips/mips-ps-1.c: Likewise.\n+\t* gcc.target/mips/mips-ps-2.c: Likewise.\n+\t* gcc.target/mips/mips-ps-3.c: Likewise.\n+\t* gcc.target/mips/mips-ps-4.c: Likewise.\n+\t* gcc.target/mips/mips-ps-6.c: Likewise.\n+\n+\t* gcc.target/mips/asm-1.c: Use dg-options instead of dg-mips-options.\n+\t* gcc.target/mips/branch-1.c: Likewise.\n+\t* gcc.target/mips/clear-cache-2.c: Likewise.\n+\t* gcc.target/mips/dse-1.c: Likewise.\n+\t* gcc.target/mips/fix-r4000-1.c: Likewise.\n+\t* gcc.target/mips/fix-r4000-2.c: Likewise.\n+\t* gcc.target/mips/fix-r4000-3.c: Likewise.\n+\t* gcc.target/mips/fix-r4000-4.c: Likewise.\n+\t* gcc.target/mips/fix-r4000-5.c: Likewise.\n+\t* gcc.target/mips/fix-r4000-6.c: Likewise.\n+\t* gcc.target/mips/fix-r4000-7.c: Likewise.\n+\t* gcc.target/mips/fix-r4000-8.c: Likewise.\n+\t* gcc.target/mips/fix-r4000-9.c: Likewise.\n+\t* gcc.target/mips/fix-r4000-10.c: Likewise.\n+\t* gcc.target/mips/fix-r4000-11.c: Likewise.\n+\t* gcc.target/mips/fix-r4000-12.c: Likewise.\n+\t* gcc.target/mips/fix-vr4130-1.c: Likewise.\n+\t* gcc.target/mips/fix-vr4130-2.c: Likewise.\n+\t* gcc.target/mips/fix-vr4130-3.c: Likewise.\n+\t* gcc.target/mips/fix-vr4130-4.c: Likewise.\n+\t* gcc.target/mips/fpcmp-1.c: Likewise.\n+\t* gcc.target/mips/fpcmp-2.c: Likewise.\n+\t* gcc.target/mips/fpr-moves-1.c: Likewise.\n+\t* gcc.target/mips/fpr-moves-2.c: Likewise.\n+\t* gcc.target/mips/fpr-moves-3.c: Likewise.\n+\t* gcc.target/mips/fpr-moves-4.c: Likewise.\n+\t* gcc.target/mips/fpr-moves-5.c: Likewise.\n+\t* gcc.target/mips/fpr-moves-6.c: Likewise.\n+\t* gcc.target/mips/gcc-have-sync-compare-and-swap-2.c: Likewise.\n+\t* gcc.target/mips/madd-1.c: Likewise.\n+\t* gcc.target/mips/madd-2.c: Likewise.\n+\t* gcc.target/mips/madd-5.c: Likewise.\n+\t* gcc.target/mips/madd-6.c: Likewise.\n+\t* gcc.target/mips/madd-7.c: Likewise.\n+\t* gcc.target/mips/madd-8.c: Likewise.\n+\t* gcc.target/mips/maddu-1.c: Likewise.\n+\t* gcc.target/mips/maddu-2.c: Likewise.\n+\t* gcc.target/mips/memcpy-1.c: Likewise.\n+\t* gcc.target/mips/mips-sched-madd.c: Likewise.\n+\t* gcc.target/mips/msub-1.c: Likewise.\n+\t* gcc.target/mips/msub-2.c: Likewise.\n+\t* gcc.target/mips/msub-5.c: Likewise.\n+\t* gcc.target/mips/msub-6.c: Likewise.\n+\t* gcc.target/mips/msub-7.c: Likewise.\n+\t* gcc.target/mips/msub-8.c: Likewise.\n+\t* gcc.target/mips/msubu-1.c: Likewise.\n+\t* gcc.target/mips/msubu-2.c: Likewise.\n+\t* gcc.target/mips/neg-abs-1.c: Likewise.\n+\t* gcc.target/mips/neg-abs-2.c: Likewise.\n+\t* gcc.target/mips/no-smartmips-lwxs.c: Likewise.\n+\t* gcc.target/mips/no-smartmips-ror-1.c: Likewise.\n+\t* gcc.target/mips/octeon-baddu-1.c: Likewise.\n+\t* gcc.target/mips/octeon-bbit-2.c: Likewise.\n+\t* gcc.target/mips/octeon-bbit-3.c: Likewise.\n+\t* gcc.target/mips/octeon-cins-1.c: Likewise.\n+\t* gcc.target/mips/octeon-cins-2.c: Likewise.\n+\t* gcc.target/mips/octeon-dmul-1.c: Likewise.\n+\t* gcc.target/mips/octeon-dmul-2.c: Likewise.\n+\t* gcc.target/mips/octeon-exts-1.c: Likewise.\n+\t* gcc.target/mips/octeon-exts-2.c: Likewise.\n+\t* gcc.target/mips/octeon-exts-3.c: Likewise.\n+\t* gcc.target/mips/octeon-exts-4.c: Likewise.\n+\t* gcc.target/mips/octeon-exts-5.c: Likewise.\n+\t* gcc.target/mips/octeon-pop-1.c: Likewise.\n+\t* gcc.target/mips/octeon-seq-1.c: Likewise.\n+\t* gcc.target/mips/octeon-seq-2.c: Likewise.\n+\t* gcc.target/mips/octeon-seq-3.c: Likewise.\n+\t* gcc.target/mips/octeon-seq-4.c: Likewise.\n+\t* gcc.target/mips/pr26765.c: Likewise.\n+\t* gcc.target/mips/pr33256.c: Likewise.\n+\t* gcc.target/mips/pr33635-1.c: Likewise.\n+\t* gcc.target/mips/pr33755.c: Likewise.\n+\t* gcc.target/mips/pr34831.c: Likewise.\n+\t* gcc.target/mips/pr35802.c: Likewise.\n+\t* gcc.target/mips/pr37362.c: Likewise.\n+\t* gcc.target/mips/r10k-cache-barrier-1.c: Likewise.\n+\t* gcc.target/mips/r10k-cache-barrier-2.c: Likewise.\n+\t* gcc.target/mips/r10k-cache-barrier-3.c: Likewise.\n+\t* gcc.target/mips/r10k-cache-barrier-4.c: Likewise.\n+\t* gcc.target/mips/r10k-cache-barrier-5.c: Likewise.\n+\t* gcc.target/mips/r10k-cache-barrier-6.c: Likewise.\n+\t* gcc.target/mips/r10k-cache-barrier-7.c: Likewise.\n+\t* gcc.target/mips/r10k-cache-barrier-8.c: Likewise.\n+\t* gcc.target/mips/r10k-cache-barrier-9.c: Likewise.\n+\t* gcc.target/mips/r10k-cache-barrier-10.c: Likewise.\n+\t* gcc.target/mips/r10k-cache-barrier-11.c: Likewise.\n+\t* gcc.target/mips/r10k-cache-barrier-12.c: Likewise.\n+\t* gcc.target/mips/r10k-cache-barrier-13.c: Likewise.\n+\t* gcc.target/mips/r10k-cache-barrier-15.c: Likewise.\n+\t* gcc.target/mips/r3900-mult.c: Likewise.\n+\t* gcc.target/mips/rsqrt-4.c: Likewise.\n+\t* gcc.target/mips/sb1-1.c: Likewise.\n+\t* gcc.target/mips/scc-2.c: Likewise.\n+\t* gcc.target/mips/scc-4.c: Likewise.\n+\t* gcc.target/mips/sdata-1.c: Likewise.\n+\t* gcc.target/mips/sdata-2.c: Likewise.\n+\t* gcc.target/mips/sdata-3.c: Likewise.\n+\t* gcc.target/mips/sdata-4.c: Likewise.\n+\t* gcc.target/mips/smartmips-lwxs.c: Likewise.\n+\t* gcc.target/mips/smartmips-ror-1.c: Likewise.\n+\t* gcc.target/mips/smartmips-ror-2.c: Likewise.\n+\t* gcc.target/mips/smartmips-ror-3.c: Likewise.\n+\t* gcc.target/mips/smartmips-ror-4.c: Likewise.\n+\t* gcc.target/mips/timode-1.c: Likewise.\n+\t* gcc.target/mips/truncate-1.c: Likewise.\n+\t* gcc.target/mips/truncate-2.c: Likewise.\n+\t* gcc.target/mips/vr-mult-1.c: Likewise.\n+\t* gcc.target/mips/vr-mult-2.c: Likewise.\n+\n+\t* gcc.target/mips/atomic-memory-2.c: Use dg-options instead of\n+\tdg-mips-options.  Use isa>=2 instead of -mips32.\n+\n+\t* gcc.target/mips/branch-cost-1.c: Use dg-options instead of\n+\tdg-mips-options.  Use isa>=4 instead of -mips64.\n+\t* gcc.target/mips/branch-cost-2.c: Likewise.\n+\n+\t* gcc.target/mips/cache-1.c: Use dg-options instead of\n+\tdg-mips-options.  Add isa>=3 and NOMIPS16 attributes.\n+\n+\t* gcc.target/mips/call-saved-1.c: Use dg-options instead of\n+\tdg-mips-options.  Replace the mips16_attribute directives with\n+\ta (-mips16) dg-option.  Use isa_rev=0 instead of -mips2.\n+\t* gcc.target/mips/call-saved-2.c: Likewise.\n+\t* gcc.target/mips/call-saved-3.c: Likewise.\n+\n+\t* gcc.target/mips/clear-cache-1.c: Use dg-options instead of\n+\tdg-mips-options.  Use isa_rev>=2 instead of -mips32r2.\n+\t* gcc.target/mips/ext_ins.c: Likewise.\n+\n+\t* gcc.target/mips/code-readable-1.c: Use dg-options instead of\n+\tdg-mips-options.  Replace the mips16_attribute directives with\n+\ta (-mips16) dg-option.  Use addressing=absolute too.\n+\t* gcc.target/mips/code-readable-2.c: Likewise.\n+\t* gcc.target/mips/code-readable-3.c: Likewise.\n+\n+\t* gcc.target/mips/dmult-1.c: Use dg-options instead of\n+\tdg-mips-options.  Remove the mips16_attribute directives.\n+\t* gcc.target/mips/gcc-have-sync-compare-and-swap-4.c: Likewise.\n+\n+\t* gcc.target/mips/dpaq_sa_l_w.c: Use dg-options instead of\n+\tdg-mips-options.  Remove target restrictions from dg-do.\n+\tUse -mgp32 instead of -mips32r2.\n+\t* gcc.target/mips/dpsq_sa_l_w.c: Likewise.\n+\n+\t* gcc.target/mips/dsp-ctrl.c: Use dg-options instead of\n+\tdg-mips-options.  Remove target restrictions from dg-do.\n+\tRemove the !__mips_dsp code and add -mdsp -mgp32 to dg-options\n+\tinstead.  Add NOMIPS16 attributes.\n+\n+\t* gcc.target/mips/dspr2-MULT.c: Use dg-options instead of\n+\tdg-mips-options.  Replace -march=mips32r2 with -mgp32.\n+\t* gcc.target/mips/dspr2-MULTU.c: Likewise.\n+\n+\t* gcc.target/mips/ext-1.c: Use dg-options instead of\n+\tdg-mips-options.  Use isa_rev>=2 instead of -mips64r2.\n+\n+\t* gcc.target/mips/fix-r10000-1.c: Use dg-options instead of\n+\tdg-mips-options.  Remove -march=mips4.  \n+\t* gcc.target/mips/fix-r10000-2.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-3.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-4.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-5.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-6.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-7.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-8.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-9.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-10.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-11.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-12.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-13.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-14.c: Likewise.\n+\t* gcc.target/mips/fix-r10000-15.c: Likewise.\n+\n+\t* gcc.target/mips/fixed-scalar-type.c: Use dg-options instead\n+\tof dg-mips-options.  Remove target restrictions from dg-do.\n+\tRemove -march=mips32r2.\n+\t* gcc.target/mips/fixed-vector-type.c: Likewise.\n+\t* gcc.target/mips/mips32-dsp-run.c: Likewise.\n+\t* gcc.target/mips/mips32-dspr2.c: Likewise.  Add NOMIPS16 attributes.\n+\n+\t* gcc.target/mips/fpr-moves-7.c: Use dg-options instead of\n+\tdg-mips-options.  Replace the mips16_attribute directives with\n+\ta (-mips16) dg-option.  Remove -msoft-float.\n+\t* gcc.target/mips/fpr-moves-8.c: Likewise.\n+\t* gcc.target/mips/int-moves-1.c: Likewise.\n+\t* gcc.target/mips/int-moves-2.c: Likewise.\n+\n+\t* gcc.target/mips/gcc-have-sync-compare-and-swap-1.c: Use dg-options\n+\tinstead of dg-mips-options.  Use isa>=2 instead of -mips2.\n+\tAdd -mgp32.\n+\t* gcc.target/mips/gcc-have-sync-compare-and-swap-3.c: Likewise.\n+\n+\t* gcc.target/mips/ins-1.c: Use dg-options instead of\n+\tdg-mips-options.  Use \"isa_rev>=2 -mgp32\" instead of -march=mips32r2.\n+\n+\t* gcc.target/mips/loongson-muldiv-1.c: Use dg-options instead of\n+\tdg-mips-options.  Use isa=loongson instead of -march=loongson2e.\n+\t* gcc.target/mips/loongson-muldiv-2.c: Likewise.\n+\n+\t* gcc.target/mips/loongson-simd.c: Remove mips_loongson\n+\ttarget requirement and use isa=loongson instead.  Add -mhard-float,\n+\t-mno-mips16 and -flax-vector-conversions.\n+\n+\t* gcc.target/mips/lazy-binding-1.c: Use dg-options instead of\n+\tdg-mips-options.  Remove target restrictions from dg-do.\n+\tAdd NOMIPS16 attributes.\n+\n+\t* gcc.target/mips/long-calls-pg.c: Use dg-options instead of\n+\tdg-mips-options.  Remove -march=mips32 and -fno-pic.\n+\tAdd NOMIPS16 attributes.\n+\n+\t* gcc.target/mips/madd-3.c: Use dg-options instead of\n+\tdg-mips-options.  Use isa_rev>=1 instead of -mips32.\n+\t* gcc.target/mips/maddu-3.c: Likewise.\n+\t* gcc.target/mips/msub-3.c: Likewise.\n+\t* gcc.target/mips/msubu-3.c: Likewise.\n+\n+\t* gcc.target/mips/madd-4.c: Use dg-options instead of\n+\tdg-mips-options.  Remove -mips32r2.\n+\t* gcc.target/mips/maddu-4.c: Likewise.\n+\t* gcc.target/mips/msub-4.c: Likewise.\n+\t* gcc.target/mips/msubu-4.c: Likewise.\n+\n+\t* gcc.target/mips/mips-3d-1.c: Use dg-options instead of\n+\tdg-mips-options.  Remove target restrictions from dg-do.\n+\tRemove -mips64, -mhard-float and -mgp64.\n+\t* gcc.target/mips/mips-3d-2.c: Likewise.\n+\t* gcc.target/mips/mips-3d-3.c: Likewise.\n+\t* gcc.target/mips/mips-3d-4.c: Likewise.\n+\t* gcc.target/mips/mips-3d-5.c: Likewise.\n+\t* gcc.target/mips/mips-3d-6.c: Likewise.\n+\t* gcc.target/mips/mips-3d-7.c: Likewise.\n+\t* gcc.target/mips/mips-3d-8.c: Likewise.\n+\t* gcc.target/mips/mips-3d-9.c: Likewise.\n+\n+\t* gcc.target/mips/mips-ps-5.c: Use dg-options instead of\n+\tdg-mips-options.  Remove -mips64.\n+\t* gcc.target/mips/mips-ps-type.c: Likewise.\n+\n+\t* gcc.target/mips/mips-ps-7.c: Use dg-options instead of\n+\tdg-mips-options.  Replace -mips32r2 with -mgp32.\n+\n+\t* gcc.target/mips/mips-ps-type-2.c: Use dg-options instead of\n+\tdg-mips-options.  Use \"isa_rev>=2 -mgp32\" instead of -mips32r2.\n+\n+\t* gcc.target/mips/mips16-attributes.c: Use dg-options instead of\n+\tdg-mips-options.  Replace the mips16_attribute directives with\n+\ta (-mips16) dg-option.\n+\t* gcc.target/mips/mips16-attributes-2.c: Likewise.\n+\t* gcc.target/mips/r10k-cache-barrier-14.c: Likewise.\n+\t* gcc.target/mips/scc-3.c: Likewise.\n+\n+\t* gcc.target/mips/mips16-attributes-3.c: Add { dg-options \"(-mips16)\" }.\n+\n+\t* gcc.target/mips/mips16e-extends.c: Use dg-options instead of\n+\tdg-mips-options.  Replace the mips16_attribute directives with\n+\ta (-mips16) dg-option.  Use isa_rev>=1 instead of -march=mips32.\n+\tAdd -mlong32.\n+\n+\t* gcc.target/mips/mips32-dsp.c: Use dg-options instead of\n+\tdg-mips-options.  Replace -march=mips32 with -mgp32.\n+\n+\t* gcc.target/mips/mips32-dsp-type.c: Use dg-options instead of\n+\tdg-mips-options.  Remove -march=mips32.\n+\n+\t* gcc.target/mips/mips32-dspr2-type.c: Use dg-options instead of\n+\tdg-mips-options.  Remove -march=mips32r2.\n+\n+\t* gcc.target/mips/mips32r2-mxhc1.c: Use dg-options instead of\n+\tdg-mips-options.  Add NOMIPS16 attributes.\n+\n+\t* gcc.target/mips/movcc-1.c: Use dg-options instead of\n+\tdg-mips-options.  Use isa>=4 instead of -mips4.\n+\t* gcc.target/mips/movcc-2.c: Likewise.\n+\t* gcc.target/mips/movcc-3.c: Likewise.\n+\n+\t* gcc.target/mips/octeon-bbit-1.c: Use dg-options instead of\n+\tdg-mips-options.  Declare foo as a NOMIPS16 function.\n+\tUse foo instead of g.\n+\n+\t* gcc.target/mips/near-far-1.c: Use dg-options instead of\n+\tdg-mips-options.  Replace the nonpic directives with an\n+\taddressing=absolute option.\n+\t* gcc.target/mips/near-far-2.c: Likewise.\n+\t* gcc.target/mips/near-far-3.c: Likewise.\n+\t* gcc.target/mips/near-far-4.c: Likewise.\n+\n+\t* gcc.target/mips/nmadd-1.c: Use dg-options instead of\n+\tdg-mips-options.  Use isa=4 instead of -mips4.\n+\t* gcc.target/mips/nmadd-2.c: Likewise.\n+\t* gcc.target/mips/nmadd-3.c: Likewise.\n+\t* gcc.target/mips/rsqrt-1.c: Likewise.\n+\t* gcc.target/mips/rsqrt-2.c: Likewise.\n+\t* gcc.target/mips/rsqrt-3.c: Likewise.\n+\n+\t* gcc.target/mips/save-restore-1.c: Use dg-options instead of\n+\tdg-mips-options.  Replace the mips16_attribute directives with\n+\ta (-mips16) dg-option.  Use isa_rev>=1 instead of -mips32r2.\n+\t* gcc.target/mips/save-restore-2.c: Likewise.\n+\t* gcc.target/mips/save-restore-3.c: Likewise.\n+\t* gcc.target/mips/save-restore-4.c: Likewise.\n+\t* gcc.target/mips/save-restore-5.c: Likewise.\n+\n+\t* gcc.target/mips/scc-1.c: Use dg-options instead of\n+\tdg-mips-options.  Replace the mips16_attribute directives with\n+\ta (-mips16) dg-option.  Use isa_rev>=1 instead of -mips32.\n+\n+\t* gcc.target/mips/timode-2.c: Remove target restrictions from dg-do.\n+\tUse -mgp64.\n+\n 2008-12-21  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \tPR target/35899"}, {"sha": "1f2affe48fc880b22f197092ce4c01c4607a0c9d", "filename": "gcc/testsuite/gcc.target/mips/20020620-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2F20020620-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2F20020620-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2F20020620-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile { target mips64*-*-* mipsisa64*-*-* } } */\n-/* { dg-mips-options \"-O2 -mlong64\" } */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mlong64\" } */\n int foo (int *x, int i)\n {\n   return x[i] + i;"}, {"sha": "9f9cb3a3483c4d6b37c594bbbc69061a0453286e", "filename": "gcc/testsuite/gcc.target/mips/asm-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fasm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fasm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fasm-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,7 +1,7 @@\n /* PR target/17565.  GCC used to put the asm into the delay slot\n    of the call.  */\n /* { dg-do assemble } */\n-/* { dg-mips-options \"-O\" } */\n+/* { dg-options \"-O\" } */\n \n NOMIPS16 int foo (int n)\n {"}, {"sha": "bc597ab2d2be885a6327dd4d846ec274017e16cd", "filename": "gcc/testsuite/gcc.target/mips/atomic-memory-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fatomic-memory-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fatomic-memory-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fatomic-memory-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -mips32 -mabi=32\" } */\n+/* { dg-options \"-O2 isa>=2 -mabi=32\" } */\n /* { dg-final { scan-assembler \"addiu\" } } */\n /* { dg-final { scan-assembler-not \"subu\" } } */\n "}, {"sha": "fb715362e08463749962e90390cd35f9ef7db6b2", "filename": "gcc/testsuite/gcc.target/mips/branch-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fbranch-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fbranch-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fbranch-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,6 @@\n /* We should implement these \"if\" statements using an \"andi\" instruction\n    followed by a branch on zero.  */\n-/* { dg-mips-options \"-O2\" } */\n+/* { dg-options \"-O2\" } */\n \n void bar (void);\n NOMIPS16 void f1 (int x) { if (x & 4) bar (); }"}, {"sha": "d825e06176e3952206dd504deac0ecac7de7e1a1", "filename": "gcc/testsuite/gcc.target/mips/branch-cost-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fbranch-cost-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fbranch-cost-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fbranch-cost-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-mbranch-cost=1 -mips64 -O2\" } */\n+/* { dg-options \"-mbranch-cost=1 isa>=4 -O2\" } */\n NOMIPS16 int\n foo (int x, int y, int z, int k)\n {"}, {"sha": "23f528ad63fd91b13f464b84e26081c4778ac718", "filename": "gcc/testsuite/gcc.target/mips/branch-cost-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fbranch-cost-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fbranch-cost-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fbranch-cost-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-mbranch-cost=10 -mips64 -O2\" } */\n+/* { dg-options \"-mbranch-cost=10 isa>=4 -O2\" } */\n NOMIPS16 int\n foo (int x, int y, int z, int k)\n {"}, {"sha": "05cb40791576d8f75b5d2bd6ec013675340ee369", "filename": "gcc/testsuite/gcc.target/mips/cache-1.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcache-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcache-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcache-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,24 +1,24 @@\n-/* { dg-mips-options \"-O2\" } */\n+/* { dg-options \"-O2 isa>=3\" } */\n \n-void\n+NOMIPS16 void\n f1 (int *area)\n {\n   __builtin_mips_cache (20, area);\n }\n \n-void\n+NOMIPS16 void\n f2 (const short *area)\n {\n   __builtin_mips_cache (24, area + 10);\n }\n \n-void\n+NOMIPS16 void\n f3 (volatile unsigned int *area, int offset)\n {\n   __builtin_mips_cache (0, area + offset);\n }\n \n-void\n+NOMIPS16 void\n f4 (const volatile unsigned char *area)\n {\n   __builtin_mips_cache (4, area - 80);"}, {"sha": "5c86b6c8cf9293e369e840564f509e1a36cf81a6", "filename": "gcc/testsuite/gcc.target/mips/call-saved-1.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcall-saved-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcall-saved-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcall-saved-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,8 +1,6 @@\n /* Check that we save all call-saved GPRs in a MIPS16 __builtin_eh_return\n    function.  */\n-/* { dg-do compile { target mips16_attribute } } */\n-/* { dg-mips-options \"-mips2\" } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-options \"(-mips16) isa_rev=0\" } */\n \n void bar (void);\n "}, {"sha": "9ac7a2735adf77189ba4addb8923841f6c0f68e8", "filename": "gcc/testsuite/gcc.target/mips/call-saved-2.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcall-saved-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcall-saved-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcall-saved-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,7 +1,5 @@\n /* Check that we save non-MIPS16 GPRs if they are explicitly clobbered.  */\n-/* { dg-do compile { target mips16_attribute } } */\n-/* { dg-mips-options \"-mips2 -O2\" } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-options \"(-mips16) isa_rev=0 -O2\" } */\n \n MIPS16 void\n foo (void)"}, {"sha": "e178eb0f061a8a5b9d1ff8932b4f447b6a0eee75", "filename": "gcc/testsuite/gcc.target/mips/call-saved-3.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcall-saved-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcall-saved-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcall-saved-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,8 +1,6 @@\n /* Check that we save all call-saved GPRs in a MIPS16 __builtin_setjmp\n    function.  */\n-/* { dg-do compile { target mips16_attribute } } */\n-/* { dg-mips-options \"-mips2 -O2\" } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-options \"(-mips16) isa_rev=0 -O2\" } */\n \n void bar (void);\n extern int buf[];"}, {"sha": "60bbf9dfc4095e8878da9c7e1908fda0a75ebd3e", "filename": "gcc/testsuite/gcc.target/mips/clear-cache-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fclear-cache-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fclear-cache-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fclear-cache-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -mips32r2\" } */\n+/* { dg-options \"-O2 isa_rev>=2\" } */\n /* { dg-final { scan-assembler \"synci\" } } */\n /* { dg-final { scan-assembler \"jr.hb\" } } */\n /* { dg-final { scan-assembler-not \"_flush_cache\" } } */"}, {"sha": "2c925b86031c1f661a614cfbc548c44002ddc55d", "filename": "gcc/testsuite/gcc.target/mips/clear-cache-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fclear-cache-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fclear-cache-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fclear-cache-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -mips32\" } */\n+/* { dg-options \"-O2 -mips32\" } */\n /* { dg-final { scan-assembler-not \"synci\" } } */\n /* { dg-final { scan-assembler-not \"jr.hb\" } } */\n /* { dg-final { scan-assembler \"_flush_cache\" } } */"}, {"sha": "ee239e1f85fc7264775156131f1153ab66c8363f", "filename": "gcc/testsuite/gcc.target/mips/code-readable-1.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcode-readable-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcode-readable-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcode-readable-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,4 @@\n-/* { dg-do compile { target mips16_attribute } } */\n-/* { dg-mips-options \"-mcode-readable=yes -mgp32\" } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-options \"(-mips16) -mcode-readable=yes -mgp32 addressing=absolute\" } */\n \n MIPS16 int\n foo (int i)"}, {"sha": "1aeecafe1c87df4b7c2b3154d0a8853b6b24218f", "filename": "gcc/testsuite/gcc.target/mips/code-readable-2.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcode-readable-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcode-readable-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcode-readable-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,4 @@\n-/* { dg-do compile { target mips16_attribute } } */\n-/* { dg-mips-options \"-mcode-readable=pcrel -mgp32\" } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-options \"(-mips16) -mcode-readable=pcrel -mgp32 addressing=absolute\" } */\n \n MIPS16 int\n foo (int i)"}, {"sha": "21dc82be2b5243a372b72d50d56242793ceb3eb5", "filename": "gcc/testsuite/gcc.target/mips/code-readable-3.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcode-readable-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcode-readable-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcode-readable-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,4 @@\n-/* { dg-do compile { target mips16_attribute } } */\n-/* { dg-mips-options \"-mcode-readable=no -mgp32\" } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-options \"(-mips16) -mcode-readable=no -mgp32 addressing=absolute\" } */\n \n MIPS16 int\n foo (int i)"}, {"sha": "61e66c20ffc63f6b1baf52f1ceea0fb66ce95503", "filename": "gcc/testsuite/gcc.target/mips/dmult-1.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdmult-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdmult-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdmult-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,4 @@\n-/* { dg-do compile { target mips16_attribute } } */\n-/* { dg-mips-options \"-mips64 -mgp64\" } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-options \"-mips64 -mgp64\" } */\n /* { dg-final { scan-assembler \"\\tdmult\\t\" } } */\n /* { dg-final { scan-assembler \"\\tmflo\\t\" } } */\n /* { dg-final { scan-assembler-not \"\\tdmul\\t\" } } */"}, {"sha": "d1812c16520643e8ed3e70b023de4811b50ce3c6", "filename": "gcc/testsuite/gcc.target/mips/dpaq_sa_l_w.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdpaq_sa_l_w.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdpaq_sa_l_w.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdpaq_sa_l_w.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile { target {fixed_point} } } */\n-/* { dg-mips-options \"-O2 -mips32r2 -mdsp\" } */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mgp32 -mdsp\" } */\n /* { dg-final { scan-assembler-times \"\\tdpaq_sa.l.w\\t\\\\\\$ac\" 3 } } */\n \n NOMIPS16 _Sat long long _Fract"}, {"sha": "849bd923261376f733eb6b2df0f0e3b1f5112bce", "filename": "gcc/testsuite/gcc.target/mips/dpsq_sa_l_w.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdpsq_sa_l_w.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdpsq_sa_l_w.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdpsq_sa_l_w.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do compile { target {fixed_point} } } */\n-/* { dg-mips-options \"-O2 -mips32r2 -mdsp\" } */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mgp32 -mdsp\" } */\n /* { dg-final { scan-assembler-times \"\\tdpsq_sa.l.w\\t\\\\\\$ac\" 2 } } */\n \n NOMIPS16 _Sat long long _Fract"}, {"sha": "6ef55cde25e54c85ccc90dfd4f4eff0a860b46fe", "filename": "gcc/testsuite/gcc.target/mips/dse-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdse-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdse-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdse-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-mgp64 -O\" } */\n+/* { dg-options \"-mgp64 -O\" } */\n \n #define TEST(ID, TYPE1, TYPE2)\t\t\t\t\t\\\n   union u##ID {\t\t\t\t\t\t\t\\"}, {"sha": "bb89e84f239e7973caed12a8c11582c400f62d42", "filename": "gcc/testsuite/gcc.target/mips/dsp-ctrl.c", "status": "modified", "additions": 7, "deletions": 18, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdsp-ctrl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdsp-ctrl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdsp-ctrl.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,39 +1,38 @@\n-/* { dg-do run { target mips*-*-* } } */\n-/* { dg-options \"-O2\" } */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mdsp -mgp32\" } */\n \n extern void abort (void);\n extern void exit (int);\n-#if __mips_dsp\n \n-void __attribute__ ((noinline))\n+NOMIPS16 void __attribute__ ((noinline))\n test1 (int i)\n {\n   __builtin_mips_wrdsp (i, 63);\n }\n \n-void __attribute__ ((noinline))\n+NOMIPS16 void __attribute__ ((noinline))\n test2 ()\n {\n   long long a = 0;\n   __builtin_mips_extpdp (a, 3);\n }\n \n-void __attribute__ ((noinline))\n+NOMIPS16 void __attribute__ ((noinline))\n test3 (int i)\n {\n   long long a = 0;\n   __builtin_mips_extpdp (a, i);\n }\n \n-void __attribute__ ((noinline))\n+NOMIPS16 void __attribute__ ((noinline))\n test4 ()\n {\n   long long a = 0;\n   int i = 0;\n   __builtin_mips_mthlip (a, i);\n }\n \n-int\n+NOMIPS16 int\n main ()\n {\n   int cntl;\n@@ -68,13 +67,3 @@ main ()\n \n   exit (0);\n }\n-\n-#else\n-\n-int\n-main ()\n-{\n-  exit (0); \n-}\n-\n-#endif"}, {"sha": "ab2c28a73215e4dd71cf6ecc4ab51f5215d5f171", "filename": "gcc/testsuite/gcc.target/mips/dspr2-MULT.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdspr2-MULT.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdspr2-MULT.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdspr2-MULT.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,6 @@\n /* Test MIPS32 DSP REV 2 MULT instruction */\n /* { dg-do compile } */\n-/* { dg-mips-options \"-march=mips32r2 -mdspr2 -O2 -ffixed-hi -ffixed-lo\" } */\n+/* { dg-options \"-mgp32 -mdspr2 -O2 -ffixed-hi -ffixed-lo\" } */\n \n /* { dg-final { scan-assembler \"\\tmult\\t\" } } */\n /* { dg-final { scan-assembler \"ac1\" } } */"}, {"sha": "312938ae57d4c18a489fe016cc9a97419f0dc2b2", "filename": "gcc/testsuite/gcc.target/mips/dspr2-MULTU.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdspr2-MULTU.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdspr2-MULTU.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fdspr2-MULTU.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,6 @@\n /* Test MIPS32 DSP REV 2 MULTU instruction */\n /* { dg-do compile } */\n-/* { dg-mips-options \"-march=mips32r2 -mdspr2 -O2 -ffixed-hi -ffixed-lo\" } */\n+/* { dg-options \"-mgp32 -mdspr2 -O2 -ffixed-hi -ffixed-lo\" } */\n \n /* { dg-final { scan-assembler \"\\tmultu\\t\" } } */\n /* { dg-final { scan-assembler \"ac1\" } } */"}, {"sha": "426cbb28573d939c8dab86777b7754cf108b7709", "filename": "gcc/testsuite/gcc.target/mips/ext-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fext-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fext-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fext-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O -mips64r2 -mgp64\" } */\n+/* { dg-options \"-O isa_rev>=2 -mgp64\" } */\n /* { dg-final { scan-assembler \"\\tdext\\t\" } } */\n /* { dg-final { scan-assembler-not \"and\" } } */\n "}, {"sha": "8186b84a27f21e68813406ec83feb8fd13962567", "filename": "gcc/testsuite/gcc.target/mips/ext_ins.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fext_ins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fext_ins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fext_ins.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-march=mips32r2\" } */\n+/* { dg-options \"isa_rev>=2\" } */\n /* { dg-final { scan-assembler \"ext\" } } */\n /* { dg-final { scan-assembler \"ins\" } } */\n "}, {"sha": "76f3b86ec5d9e516c93e143b23096a61048090b7", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-options \"-O2 -mfix-r10000\" } */\n /* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n \n NOMIPS16 int"}, {"sha": "6ac908a71bb31efb0585427195da36be1f6789ce", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-10.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-options \"-O2 -mfix-r10000\" } */\n /* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n \n NOMIPS16 int"}, {"sha": "e1677b6577a31709389b88b8f0712d5587089751", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-11.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-options \"-O2 -mfix-r10000\" } */\n /* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n \n NOMIPS16 int"}, {"sha": "f767ae202891ead9e96fdc7ec4b77ea21e6df28b", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-12.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-options \"-O2 -mfix-r10000\" } */\n /* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n \n /* { dg-message \"note: '__sync_nand_and_fetch' changed semantics in GCC 4.4\" \"\" { target *-*-* } 0 } */"}, {"sha": "b0779e0ec34de27f709971e728df6fb6189ba560", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-13.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-options \"-O2 -mfix-r10000\" } */\n /* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n \n NOMIPS16 int"}, {"sha": "4a690f59ed159f3026df691e125baaa9834e27ea", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-14.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-14.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-options \"-O2 -mfix-r10000\" } */\n /* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n \n NOMIPS16 int"}, {"sha": "bb5fd743af79ea9bc954dc039fc9873f313938e5", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-15.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-15.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-options \"-O2 -mfix-r10000\" } */\n /* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n \n NOMIPS16 int"}, {"sha": "bac01913405d21f514d9ab9d4c922fe1406fc824", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-options \"-O2 -mfix-r10000\" } */\n /* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n \n NOMIPS16 int"}, {"sha": "bec7951c1d4f5fbc48171612bcb16af8371f5969", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-options \"-O2 -mfix-r10000\" } */\n /* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n \n NOMIPS16 int"}, {"sha": "864ab8c1ee4cac3fd89164a1493b245339a51fa8", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-4.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-options \"-O2 -mfix-r10000\" } */\n /* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n \n NOMIPS16 int"}, {"sha": "62fd70f5f09e7fc8ca96aa364c11472cc6945ba1", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-5.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-options \"-O2 -mfix-r10000\" } */\n /* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n \n NOMIPS16 int"}, {"sha": "d8bdb4516decad9941a28a7075e5321ab7957cdf", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-6.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-options \"-O2 -mfix-r10000\" } */\n /* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n \n /* { dg-message \"note: '__sync_fetch_and_nand' changed semantics in GCC 4.4\" \"\" { target *-*-* } 0 } */"}, {"sha": "d4b558e0115f5c9ae3f2ab330eec42559588bc43", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-7.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-options \"-O2 -mfix-r10000\" } */\n /* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n \n NOMIPS16 int"}, {"sha": "d48ed263c82661d3c1c0bf53f5958b1a92f87c71", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-8.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-options \"-O2 -mfix-r10000\" } */\n /* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n \n NOMIPS16 int"}, {"sha": "88afad339c9b72130e6a1edb952786c0d19bba02", "filename": "gcc/testsuite/gcc.target/mips/fix-r10000-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r10000-9.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=mips4 -mfix-r10000\" } */\n+/* { dg-options \"-O2 -mfix-r10000\" } */\n /* { dg-final { scan-assembler-times \"\\tbeql\\t\" 3 } } */\n \n NOMIPS16 int"}, {"sha": "513fc6130a545911401a32974ac97367b8d28b67", "filename": "gcc/testsuite/gcc.target/mips/fix-r4000-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-march=r4000 -mfix-r4000 -O2 -dp\" } */\n+/* { dg-options \"-march=r4000 -mfix-r4000 -O2 -dp\" } */\n typedef int int32_t;\n typedef int uint32_t;\n int32_t foo (int32_t x, int32_t y) { return x * y; }"}, {"sha": "ebf3ca3056214a32c564c2fcad00aa2e7df83afa", "filename": "gcc/testsuite/gcc.target/mips/fix-r4000-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-10.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,7 +1,7 @@\n /* ??? At the moment, lower-subreg.c decomposes the copy of the multiplication\n    result to $2, which prevents the register allocators from storing the\n    multiplication result in $2.  */\n-/* { dg-mips-options \"-mips3 -mfix-r4000 -mgp64 -O2 -fno-split-wide-types -dp -EL\" } */\n+/* { dg-options \"-mips3 -mfix-r4000 -mgp64 -O2 -fno-split-wide-types -dp -EL\" } */\n typedef unsigned long long uint64_t;\n typedef unsigned int uint128_t __attribute__((mode(TI)));\n uint128_t foo (uint64_t x, uint64_t y) { return (uint128_t) x * y; }"}, {"sha": "93f78134e4e29260fd98a037668caf1050ebfc79", "filename": "gcc/testsuite/gcc.target/mips/fix-r4000-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-11.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-march=r4000 -mfix-r4000 -mgp64 -O2 -dp\" } */\n+/* { dg-options \"-march=r4000 -mfix-r4000 -mgp64 -O2 -dp\" } */\n typedef long long int64_t;\n int64_t foo (int64_t x) { return x / 11993; }\n /* { dg-final { scan-assembler \"[concat {\\tdmult\\t\\$4,\\$[0-9]+[^\\n]+smuldi3_highpart[^\\n]+\\n\\tmfhi\\t\\$[0-9]+\\n}]\" } } */"}, {"sha": "554975ccca18c1eb6df30bdfa0c4d9693d48ef85", "filename": "gcc/testsuite/gcc.target/mips/fix-r4000-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-12.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-march=r4000 -mfix-r4000 -mgp64 -O2 -dp\" } */\n+/* { dg-options \"-march=r4000 -mfix-r4000 -mgp64 -O2 -dp\" } */\n typedef unsigned long long uint64_t;\n uint64_t foo (uint64_t x) { return x / 11993; }\n /* { dg-final { scan-assembler \"[concat {\\tdmultu\\t\\$4,\\$[0-9]+[^\\n]+umuldi3_highpart[^\\n]+\\n\\tmfhi\\t\\$[0-9]+\\n}]\" } } */"}, {"sha": "4f27041bedbbc1b7054d709b7b6a817b4a116edb", "filename": "gcc/testsuite/gcc.target/mips/fix-r4000-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-mips1 -mfix-r4000 -O2 -dp -EB\" } */\n+/* { dg-options \"-mips1 -mfix-r4000 -O2 -dp -EB\" } */\n typedef int int32_t;\n typedef long long int64_t;\n int32_t foo (int32_t x, int32_t y) { return ((int64_t) x * y) >> 32; }"}, {"sha": "207fc66b062d20b26b48545bbed4f5d9708dcfda", "filename": "gcc/testsuite/gcc.target/mips/fix-r4000-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-mips1 -mfix-r4000 -O2 -dp -EB\" } */\n+/* { dg-options \"-mips1 -mfix-r4000 -O2 -dp -EB\" } */\n typedef unsigned int uint32_t;\n typedef unsigned long long uint64_t;\n uint32_t foo (uint32_t x, uint32_t y) { return ((uint64_t) x * y) >> 32; }"}, {"sha": "be32b57ae4f5ef307a9cbe08889d82695c1e9246", "filename": "gcc/testsuite/gcc.target/mips/fix-r4000-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-4.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,7 +1,7 @@\n /* ??? At the moment, lower-subreg.c decomposes the copy of the multiplication\n    result to $2, which prevents the register allocators from storing the\n    multiplication result in $2.  */\n-/* { dg-mips-options \"-mips1 -mfix-r4000 -O2 -fno-split-wide-types -dp -EL\" } */\n+/* { dg-options \"-mips1 -mfix-r4000 -O2 -fno-split-wide-types -dp -EL\" } */\n typedef int int32_t;\n typedef long long int64_t;\n int64_t foo (int32_t x, int32_t y) { return (int64_t) x * y; }"}, {"sha": "c14e949f229dbc61ed7a26cc766258f8626988fc", "filename": "gcc/testsuite/gcc.target/mips/fix-r4000-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-5.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,7 +1,7 @@\n /* ??? At the moment, lower-subreg.c decomposes the copy of the multiplication\n    result to $2, which prevents the register allocators from storing the\n    multiplication result in $2.  */\n-/* { dg-mips-options \"-mips1 -mfix-r4000 -O2 -fno-split-wide-types -dp -EL\" } */\n+/* { dg-options \"-mips1 -mfix-r4000 -O2 -fno-split-wide-types -dp -EL\" } */\n typedef unsigned int uint32_t;\n typedef unsigned long long uint64_t;\n uint64_t foo (uint32_t x, uint32_t y) { return (uint64_t) x * y; }"}, {"sha": "32861f9750bc5343f6de08c2db80a353132391b6", "filename": "gcc/testsuite/gcc.target/mips/fix-r4000-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-6.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-march=r4000 -mfix-r4000 -mgp64 -O2 -dp\" } */\n+/* { dg-options \"-march=r4000 -mfix-r4000 -mgp64 -O2 -dp\" } */\n typedef long long int64_t;\n typedef unsigned long long uint64_t;\n int64_t foo (int64_t x, int64_t y) { return x * y; }"}, {"sha": "2555d5306d7f2810d1ce2aebc448f7007c9da801", "filename": "gcc/testsuite/gcc.target/mips/fix-r4000-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-7.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-march=r4000 -mfix-r4000 -O2 -mgp64 -dp -EB\" } */\n+/* { dg-options \"-march=r4000 -mfix-r4000 -O2 -mgp64 -dp -EB\" } */\n typedef long long int64_t;\n typedef int int128_t __attribute__((mode(TI)));\n int64_t foo (int64_t x, int64_t y) { return ((int128_t) x * y) >> 64; }"}, {"sha": "964dc222291154f5a311a882ba6c2d47e37f2a2b", "filename": "gcc/testsuite/gcc.target/mips/fix-r4000-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-8.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-march=r4000 -mfix-r4000 -O2 -mgp64 -dp -EB\" } */\n+/* { dg-options \"-march=r4000 -mfix-r4000 -O2 -mgp64 -dp -EB\" } */\n typedef unsigned long long uint64_t;\n typedef unsigned int uint128_t __attribute__((mode(TI)));\n uint64_t foo (uint64_t x, uint64_t y) { return ((uint128_t) x * y) >> 64; }"}, {"sha": "68724eb376f7c63f2a4cde716659a22975aa525c", "filename": "gcc/testsuite/gcc.target/mips/fix-r4000-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-r4000-9.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,7 +1,7 @@\n /* ??? At the moment, lower-subreg.c decomposes the copy of the multiplication\n    result to $2, which prevents the register allocators from storing the\n    multiplication result in $2.  */\n-/* { dg-mips-options \"-mips3 -mfix-r4000 -mgp64 -O2 -fno-split-wide-types -dp -EL\" } */\n+/* { dg-options \"-mips3 -mfix-r4000 -mgp64 -O2 -fno-split-wide-types -dp -EL\" } */\n typedef long long int64_t;\n typedef int int128_t __attribute__((mode(TI)));\n int128_t foo (int64_t x, int64_t y) { return (int128_t) x * y; }"}, {"sha": "f4eb492e4e46d53fbf20189c32ce48f95463a685", "filename": "gcc/testsuite/gcc.target/mips/fix-vr4130-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-march=vr4130 -mfix-vr4130\" } */\n+/* { dg-options \"-march=vr4130 -mfix-vr4130\" } */\n NOMIPS16 unsigned int\n foo (unsigned int x, unsigned int y)\n {"}, {"sha": "18708cb450aa64e74c8b1d4daedd746237fac179", "filename": "gcc/testsuite/gcc.target/mips/fix-vr4130-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-march=vr4130 -mfix-vr4130\" } */\n+/* { dg-options \"-march=vr4130 -mfix-vr4130\" } */\n NOMIPS16 int foo (void) { int r; asm (\"# foo\" : \"=l\" (r)); return r; }\n /* { dg-final { scan-assembler \"\\tmacc\\t\" } } */"}, {"sha": "d3399d10ceec61acc93f8fa509e5276d34c5f826", "filename": "gcc/testsuite/gcc.target/mips/fix-vr4130-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-march=vr4130 -mgp64 -mfix-vr4130\" } */\n+/* { dg-options \"-march=vr4130 -mgp64 -mfix-vr4130\" } */\n NOMIPS16 unsigned long long\n foo (unsigned long long x, unsigned long long y)\n {"}, {"sha": "8b307c6e621eca1b3fc8db977b596a63e5ed8064", "filename": "gcc/testsuite/gcc.target/mips/fix-vr4130-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffix-vr4130-4.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-march=vr4130 -mgp64 -mfix-vr4130\" } */\n+/* { dg-options \"-march=vr4130 -mgp64 -mfix-vr4130\" } */\n NOMIPS16 long long\n foo (void)\n {"}, {"sha": "a2e2fbfefe305d0085e5b8d2caa5b70c8a4fde93", "filename": "gcc/testsuite/gcc.target/mips/fixed-scalar-type.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffixed-scalar-type.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffixed-scalar-type.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffixed-scalar-type.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,6 @@\n /* Test scalar fixed-point instructions */\n-/* { dg-do compile { target {fixed_point} } } */\n-/* { dg-mips-options \"-march=mips32r2 -mdspr2 -O2\" } */\n+/* { dg-do compile } */\n+/* { dg-options \"-mdspr2 -O2\" } */\n /* { dg-final { scan-assembler-times \"\\taddu\\t\" 10 } } */\n /* { dg-final { scan-assembler-times \"\\tsubu\\t\" 10 } } */\n /* { dg-final { scan-assembler \"\\taddu_s.qb\\t\" } } */"}, {"sha": "2fb16aa1d07f7ab36ee48ecb0c3961d1d529168a", "filename": "gcc/testsuite/gcc.target/mips/fixed-vector-type.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffixed-vector-type.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffixed-vector-type.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffixed-vector-type.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,6 @@\n /* Test vector fixed-point instructions */\n-/* { dg-do compile { target {fixed_point} } } */\n-/* { dg-mips-options \"-march=mips32r2 -mdspr2 -O2\" } */\n+/* { dg-do compile } */\n+/* { dg-options \"-mdspr2 -O2\" } */\n /* { dg-final { scan-assembler-times \"\\taddq_s.ph\\t\" 2 } } */\n /* { dg-final { scan-assembler-times \"\\tsubq_s.ph\\t\" 2 } } */\n /* { dg-final { scan-assembler-times \"\\taddu_s.qb\\t\" 1 } } */"}, {"sha": "cae48a0e93adbd4d87458afdb40e58aaaa97c9ab", "filename": "gcc/testsuite/gcc.target/mips/fpcmp-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpcmp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpcmp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpcmp-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* We used to use c.lt.fmt instead of c.ule.fmt here.  */\n-/* { dg-mips-options \"-mhard-float -O2\" } */\n+/* { dg-options \"-mhard-float -O2\" } */\n NOMIPS16 int f1 (float x, float y) { return __builtin_isless (x, y); }\n NOMIPS16 int f2 (double x, double y) { return __builtin_isless (x, y); }\n /* { dg-final { scan-assembler \"c\\\\.ule\\\\.s\" } } */"}, {"sha": "3e1c259f89a6ba006c0f12447127f4bf0cadd0f7", "filename": "gcc/testsuite/gcc.target/mips/fpcmp-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpcmp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpcmp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpcmp-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* We used to use c.le.fmt instead of c.ult.fmt here.  */\n-/* { dg-mips-options \"-mhard-float -O2\" } */\n+/* { dg-options \"-mhard-float -O2\" } */\n NOMIPS16 int f1 (float x, float y) { return __builtin_islessequal (x, y); }\n NOMIPS16 int f2 (double x, double y) { return __builtin_islessequal (x, y); }\n /* { dg-final { scan-assembler \"c\\\\.ult\\\\.s\" } } */"}, {"sha": "92977e04e38d9555ca28bde58e40912f0212faaf", "filename": "gcc/testsuite/gcc.target/mips/fpr-moves-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-mabi=32 -mhard-float -mips1 -O2 -EL\" } */\n+/* { dg-options \"-mabi=32 -mhard-float -mips1 -O2 -EL\" } */\n \n NOMIPS16 void\n foo (double d, double *x)"}, {"sha": "3f4f833ba5eda978b627fa404edad9380248ca83", "filename": "gcc/testsuite/gcc.target/mips/fpr-moves-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-mabi=32 -mhard-float -mips1 -O2 -EB\" } */\n+/* { dg-options \"-mabi=32 -mhard-float -mips1 -O2 -EB\" } */\n \n NOMIPS16 void\n foo (double d, double *x)"}, {"sha": "34784d01ce2e1a1541c31e146441003637b05c04", "filename": "gcc/testsuite/gcc.target/mips/fpr-moves-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-mabi=32 -mfp64 -O2 -EL\" } */\n+/* { dg-options \"-mabi=32 -mfp64 -O2 -EL\" } */\n \n NOMIPS16 double\n foo (double d)"}, {"sha": "282cf761b374a1ff86f21d5c58a00a0227411e74", "filename": "gcc/testsuite/gcc.target/mips/fpr-moves-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-4.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-mabi=32 -mfp64 -O2 -EB\" } */\n+/* { dg-options \"-mabi=32 -mfp64 -O2 -EB\" } */\n \n NOMIPS16 double\n foo (double d)"}, {"sha": "848e5ea25ed0882b1e95ec9af2e82e8ee5d29f80", "filename": "gcc/testsuite/gcc.target/mips/fpr-moves-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-5.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-mabi=64 -mhard-float -O2 -EL\" } */\n+/* { dg-options \"-mabi=64 -mhard-float -O2 -EL\" } */\n \n NOMIPS16 void\n foo (long double d, long double *x)"}, {"sha": "7f2611397ba805e2fcfcec9bd324e1bc51608af1", "filename": "gcc/testsuite/gcc.target/mips/fpr-moves-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-6.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-mabi=64 -mhard-float -O2 -EB\" } */\n+/* { dg-options \"-mabi=64 -mhard-float -O2 -EB\" } */\n \n NOMIPS16 void\n foo (long double d, long double *x)"}, {"sha": "3abd10417d77c2c820ef9328d8e33f483823706d", "filename": "gcc/testsuite/gcc.target/mips/fpr-moves-7.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-7.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,4 @@\n-/* { dg-do compile { target mips16_attribute } } */\n-/* { dg-mips-options \"-mabi=64 -msoft-float -O2 -EL\" } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-options \"(-mips16) -mabi=64 -O2 -EL\" } */\n \n extern long double g[16];\n extern unsigned char gstuff[0x10000];"}, {"sha": "8b6901b7fc7d4f8960fcbb44a960ac303730c698", "filename": "gcc/testsuite/gcc.target/mips/fpr-moves-8.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ffpr-moves-8.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,4 @@\n-/* { dg-do compile { target mips16_attribute } } */\n-/* { dg-mips-options \"-mabi=64 -msoft-float -O2 -EB\" } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-options \"(-mips16) -mabi=64 -O2 -EB\" } */\n \n extern long double g[16];\n extern unsigned char gstuff[0x10000];"}, {"sha": "74df7de1481215e308aff42820912928608d9e11", "filename": "gcc/testsuite/gcc.target/mips/gcc-have-sync-compare-and-swap-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do preprocess } */\n-/* { dg-mips-options \"-mips2\" } */\n+/* { dg-options \"isa>=2 -mgp32\" } */\n \n #ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1\n #error nonono"}, {"sha": "3a03ba3491b475eb3ed2a40bc9e939f869816409", "filename": "gcc/testsuite/gcc.target/mips/gcc-have-sync-compare-and-swap-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do preprocess } */\n-/* { dg-mips-options \"-mgp64\" } */\n+/* { dg-options \"-mgp64\" } */\n \n #ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1\n #error nonono"}, {"sha": "b47a2ceb2db71a1c29b0283a912997a4e7bad874", "filename": "gcc/testsuite/gcc.target/mips/gcc-have-sync-compare-and-swap-3.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,4 @@\n-/* { dg-do preprocess { target mips16_attribute } } */\n-/* { dg-mips-options \"-mips2 -mips16\" } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-options \"isa>=2 -mgp32 -mips16\" } */\n \n #ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1\n #error nonono"}, {"sha": "78a12440a2ed347d4063326829cc999d54e57616", "filename": "gcc/testsuite/gcc.target/mips/gcc-have-sync-compare-and-swap-4.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fgcc-have-sync-compare-and-swap-4.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,4 @@\n-/* { dg-do preprocess { target mips16_attribute } } */\n-/* { dg-mips-options \"-mgp64 -mips16\" } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-options \"-mgp64 -mips16\" } */\n \n #ifndef __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1\n #error nonono"}, {"sha": "9e19354d1a600ef143746490557604b4fb2db878", "filename": "gcc/testsuite/gcc.target/mips/ins-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fins-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fins-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fins-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O -march=mips32r2\" } */\n+/* { dg-options \"-O isa_rev>=2 -mgp32\" } */\n /* { dg-final { scan-assembler \"\\tins\\t\" } } */\n \n struct"}, {"sha": "485555c39ffea6925380035d9d3293df6fc786df", "filename": "gcc/testsuite/gcc.target/mips/int-moves-1.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fint-moves-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fint-moves-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fint-moves-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,4 @@\n-/* { dg-do compile { target mips16_attribute } } */\n-/* { dg-mips-options \"-mgp64 -msoft-float -O2 -EL\" } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-options \"(-mips16) -mgp64 -O2 -EL\" } */\n \n typedef unsigned uint128_t __attribute__((mode(TI)));\n "}, {"sha": "eba7983707b5dd3c6739eacbbd3d10d1d709eff7", "filename": "gcc/testsuite/gcc.target/mips/int-moves-2.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fint-moves-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fint-moves-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fint-moves-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,4 @@\n-/* { dg-do compile { target mips16_attribute } } */\n-/* { dg-mips-options \"-mgp64 -msoft-float -O2 -EB\" } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-options \"(-mips16) -mgp64 -O2 -EB\" } */\n \n typedef unsigned uint128_t __attribute__((mode(TI)));\n "}, {"sha": "e85727c42d7bdceb60c884376bfc7e6e8976d31f", "filename": "gcc/testsuite/gcc.target/mips/lazy-binding-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Flazy-binding-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Flazy-binding-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Flazy-binding-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,9 +1,9 @@\n-/* { dg-do compile { target nomips16 } } */\n-/* { dg-mips-options \"-mabicalls -mshared -mexplicit-relocs -O2 -fno-delayed-branch\" } */\n+/* { dg-do compile } */\n+/* { dg-options \"-mabicalls -mshared -mexplicit-relocs -O2 -fno-delayed-branch\" } */\n \n void bar (void);\n \n-void\n+NOMIPS16 void\n foo (int n)\n {\n   while (n--)"}, {"sha": "5e554c497d86e6d912c11e1fa29fa0a97d55f1f5", "filename": "gcc/testsuite/gcc.target/mips/long-calls-pg.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Flong-calls-pg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Flong-calls-pg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Flong-calls-pg.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -mabi=32 -march=mips32 -fno-pic -pg -mno-abicalls -mlong-calls\" } */\n+/* { dg-options \"-O2 -mabi=32 -pg -mno-abicalls -mlong-calls\" } */\n /* { dg-final { scan-assembler-not \"\\tjal\\t_mcount\" } } */\n-void\n+NOMIPS16 void\n foo (void)\n {\n }"}, {"sha": "fd7289ceaf7107d6eac91ce72d750455c0cd0268", "filename": "gcc/testsuite/gcc.target/mips/loongson-muldiv-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-muldiv-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-muldiv-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-muldiv-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O2 -march=loongson2e\" } */\n+/* { dg-options \"-O2 isa=loongson\" } */\n \n typedef int st;\n typedef unsigned int ut;"}, {"sha": "6f1f13875514245c03d39b6f3c6fbdd0bde81bb1", "filename": "gcc/testsuite/gcc.target/mips/loongson-muldiv-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-muldiv-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-muldiv-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-muldiv-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O2 -march=loongson2e -mgp64\" } */\n+/* { dg-options \"-O2 isa=loongson -mgp64\" } */\n \n typedef long long st;\n typedef unsigned long long ut;"}, {"sha": "ae3565f479507d970daf8ba5574bf2f02c05fb59", "filename": "gcc/testsuite/gcc.target/mips/loongson-simd.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-simd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-simd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Floongson-simd.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -19,7 +19,10 @@ along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n /* { dg-do run } */\n-/* { dg-require-effective-target mips_loongson } */\n+/* loongson.h does not handle or check for MIPS16ness.  There doesn't\n+   seem any good reason for it to, given that the Loongson processors\n+   do not support MIPS16.  */\n+/* { dg-options \"isa=loongson -mhard-float -mno-mips16 -flax-vector-conversions\" } */\n \n #include \"loongson.h\"\n #include <stdio.h>"}, {"sha": "53881a4b08587f034099f26d84a4be78344dafa2", "filename": "gcc/testsuite/gcc.target/mips/madd-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=vr4130 -mgp32\" } */\n+/* { dg-options \"-O2 -march=vr4130 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmacc\\t\\\\\\$1,\" 3 } } */\n \n NOMIPS16 long long"}, {"sha": "eab7a68454c369f26a608095b97e3e39159c359d", "filename": "gcc/testsuite/gcc.target/mips/madd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=vr5500 -mgp32\" } */\n+/* { dg-options \"-O2 -march=vr5500 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmadd\\t\" 3 } } */\n \n NOMIPS16 long long"}, {"sha": "6b479f59c718391ad7dffc1a01706efcf33cc76d", "filename": "gcc/testsuite/gcc.target/mips/madd-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -mips32 -mgp32\" } */\n+/* { dg-options \"-O2 isa_rev>=1 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmadd\\t\" 3 } } */\n \n NOMIPS16 long long"}, {"sha": "f325af74698dfe086112314f4961642c1d9cff8c", "filename": "gcc/testsuite/gcc.target/mips/madd-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-4.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -mips32r2 -mdspr2 -mgp32\" } */\n+/* { dg-options \"-O2 -mdspr2 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmadd\\t\\\\\\$ac\" 3 } } */\n \n NOMIPS16 long long"}, {"sha": "1ad1c91f3e1eecd22e9d3c906f2dad73e7a315a4", "filename": "gcc/testsuite/gcc.target/mips/madd-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-5.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O2 -march=5kc\" } */\n+/* { dg-options \"-O2 -march=5kc\" } */\n /* { dg-final { scan-assembler-times \"\\tmadd\\t\" 4 } } */\n /* { dg-final { scan-assembler-not \"\\tmtlo\\t\" } } */\n /* { dg-final { scan-assembler-times \"\\tmflo\\t\" 3 } } */"}, {"sha": "4e5afadceb25884ae9231c380a12ba5d47b95962", "filename": "gcc/testsuite/gcc.target/mips/madd-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-6.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O2 -march=5kc\" } */\n+/* { dg-options \"-O2 -march=5kc\" } */\n /* { dg-final { scan-assembler-not \"\\tmadd\\t\" } } */\n /* { dg-final { scan-assembler \"\\tmul\\t\" } } */\n /* { dg-final { scan-assembler \"\\taddu\\t\" } } */"}, {"sha": "93ed0fc6f06ae8d0e5dbff40cd9d4fa32d4beee8", "filename": "gcc/testsuite/gcc.target/mips/madd-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-7.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* -mlong32 added because of PR target/38598.  */\n-/* { dg-mips-options \"-O2 -march=5kc -mlong32\" } */\n+/* { dg-options \"-O2 -march=5kc -mlong32\" } */\n /* { dg-final { scan-assembler-not \"\\tmul\\t\" } } */\n /* { dg-final { scan-assembler \"\\tmadd\\t\" } } */\n "}, {"sha": "35092a8ad935e321e28b7b4cebafb03008301a3f", "filename": "gcc/testsuite/gcc.target/mips/madd-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmadd-8.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O2 -march=5kc\" } */\n+/* { dg-options \"-O2 -march=5kc\" } */\n /* { dg-final { scan-assembler \"\\tmul\\t\" } } */\n /* { dg-final { scan-assembler-not \"\\tmadd\\t\" } } */\n /* { dg-final { scan-assembler-not \"\\tmtlo\\t\" } } */"}, {"sha": "04161ce3a2188de7f9ea261c458b9f9b83a149f2", "filename": "gcc/testsuite/gcc.target/mips/maddu-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=vr4130 -mgp32\" } */\n+/* { dg-options \"-O2 -march=vr4130 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmaccu\\t\\\\\\$1,\" 3 } } */\n \n typedef unsigned int ui;"}, {"sha": "a9768f15bf8841871656d16f2c84f5ee899e467a", "filename": "gcc/testsuite/gcc.target/mips/maddu-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=vr5500 -mgp32\" } */\n+/* { dg-options \"-O2 -march=vr5500 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmaddu\\t\" 3 } } */\n \n typedef unsigned int ui;"}, {"sha": "b0b4817a47f4b638555c3499cec7a6409bf89a7f", "filename": "gcc/testsuite/gcc.target/mips/maddu-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -mips32 -mgp32\" } */\n+/* { dg-options \"-O2 isa_rev>=1 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmaddu\\t\" 3 } } */\n \n typedef unsigned int ui;"}, {"sha": "9c1ccd5f926716be473a2bac7c224616e7292301", "filename": "gcc/testsuite/gcc.target/mips/maddu-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmaddu-4.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -mips32r2 -mdspr2 -mgp32\" } */\n+/* { dg-options \"-O2 -mdspr2 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmaddu\\t\\\\\\$ac\" 3 } } */\n \n typedef unsigned int ui;"}, {"sha": "f3eda7500db8d5f5aaefe71fc1bf2d245ebd3caa", "filename": "gcc/testsuite/gcc.target/mips/memcpy-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmemcpy-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmemcpy-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmemcpy-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2\" } */\n+/* { dg-options \"-O2\" } */\n /* { dg-final { scan-assembler-not \"\\tlbu\\t\" } } */\n \n #include <string.h>"}, {"sha": "eb3f8f9a864934f11edfa1bd2f6fdb1d0434827f", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-mips-options \"-mips64 -O2 -mips3d -mhard-float -mgp64\" } */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mips3d\" } */\n \n /* Test MIPS-3D builtin functions */\n #include <stdlib.h>"}, {"sha": "dc815748ebd74191475f48e55806331eb01d5f82", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-mips-options \"-mips64 -O2 -mips3d -mhard-float -mgp64\" } */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mips3d\" } */\n \n /* Test MIPS-3D branch-if-any-two builtin functions */\n #include <stdlib.h>"}, {"sha": "7df590f5c308b1b2db32d8cb2a4b0cc6fe54dee6", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-mips-options \"-mips64 -O2 -mips3d -mhard-float -mgp64\" } */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mips3d\" } */\n \n /* Test MIPS-3D absolute compare builtin functions */\n #include <stdlib.h>"}, {"sha": "7f9cbdb1b8453cd07142cdba00afe05366161719", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-4.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-mips-options \"-mips64 -O2 -mips3d -mhard-float -mgp64\" } */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mips3d\" } */\n \n /* Test MIPS-3D branch-if-any-four builtin functions */\n #include <stdlib.h>"}, {"sha": "c07dbe50580555344fcd2e4940ac9335f94661dd", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-5.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-5.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-mips-options \"-mips64 -O2 -mips3d -mhard-float -mgp64\" } */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mips3d\" } */\n \n /* Test MIPS-3D absolute-compare & branch-if-any-four builtin functions */\n #include <stdlib.h>"}, {"sha": "848414540f0ec1a7ad9e4257b7936daf80e85e22", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-6.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-6.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-mips-options \"-mips64 -O2 -mips3d -mhard-float -mgp64\" } */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mips3d\" } */\n \n /* Test MIPS-3D absolute compare (floats) builtin functions */\n #include <stdlib.h>"}, {"sha": "d5d09f99869a2da9a53acd4169e3726a08ed3071", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-7.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-7.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-mips-options \"-mips64 -O2 -mips3d -mhard-float -mgp64\" } */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mips3d\" } */\n \n /* Test MIPS-3D absolute compare (doubles) builtin functions */\n #include <stdlib.h>"}, {"sha": "c80f2b9c893130015405ff4c1752a82146da1a74", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-8.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-mips-options \"-mips64 -O2 -mips3d -mhard-float -mgp64\" } */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mips3d\" } */\n \n /* Test MIPS-3D absolute compare and conditional move builtin functions */\n #include <stdlib.h>"}, {"sha": "3875391b5359e8e9afc64af9acc1d1a7781b9eea", "filename": "gcc/testsuite/gcc.target/mips/mips-3d-9.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-3d-9.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do run { target mipsisa64*-*-* } } */\n-/* { dg-mips-options \"-mips64 -O2 -mips3d -mhard-float -mgp64\" } */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mips3d\" } */\n \n /* Matrix Multiplications */\n #include <stdlib.h>"}, {"sha": "9e6c6600617783f6e8b5f812880994d591a9a910", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do run { target mpaired_single } } */\n-/* { dg-mips-options \"-O2 -mpaired-single\" } */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mpaired-single\" } */\n \n /* Test v2sf calculations */\n #include <stdlib.h>"}, {"sha": "baec12c1ce6f9c329acad301d54612c0ea1defce", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do run { target mpaired_single } } */\n-/* { dg-mips-options \"-O2 -mpaired-single\" } */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mpaired-single\" } */\n \n /* Test MIPS paired-single builtin functions */\n #include <stdlib.h>"}, {"sha": "e9ed4c03f5f7dec3628aa96ad9d5ea0bda1bb682", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do run { target mpaired_single } } */\n-/* { dg-mips-options \"-O2 -mpaired-single\" } */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mpaired-single\" } */\n \n /* Test MIPS paired-single conditional move */\n #include <stdlib.h>"}, {"sha": "b4452d09105c7b8fca472fe3ad86b7ea84889695", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-4.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n-/* { dg-do run { target mpaired_single } } */\n-/* { dg-mips-options \"-O2 -mpaired-single\" } */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mpaired-single\" } */\n \n /* Test MIPS paired-single comparisons */\n #include <stdlib.h>"}, {"sha": "94d2f80efc7591b31769792a8e6d147bf82f5e0f", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-5.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-mips64 -O2 -mpaired-single -mgp64 -ftree-vectorize\" } */\n+/* { dg-options \"-O2 -mpaired-single -mgp64 -ftree-vectorize\" } */\n \n extern float a[], b[], c[];\n "}, {"sha": "5b8b2522866268649d640e7df1b927b8aba2945a", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-6.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-6.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,7 +1,7 @@\n /* mips-ps-2.c with an extra -ffinite-math-only option.  This option\n    changes the way that abs.ps is handled.  */\n-/* { dg-do run { target mpaired_single } } */\n-/* { dg-mips-options \"-O2 -mpaired-single -ffinite-math-only\" } */\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mpaired-single -ffinite-math-only\" } */\n \n /* Test MIPS paired-single builtin functions */\n #include <stdlib.h>"}, {"sha": "65a1104ba39f086a7d2e843154228b693e149e9c", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-7.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-7.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,6 @@\n-/* mips-ps-5.c with -mips32r2 instead of -mips64.  */\n+/* mips-ps-5.c with -mgp32 instead of -mgp64.  */\n /* { dg-do compile } */\n-/* { dg-mips-options \"-mips32r2 -O2 -mpaired-single -ftree-vectorize\" } */\n+/* { dg-options \"-mgp32 -O2 -mpaired-single -ftree-vectorize\" } */\n \n extern float a[], b[], c[];\n "}, {"sha": "f7988553394a231349efc42de70102f5cdcbbaed", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-type-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-type-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-type-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-type-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,7 +1,7 @@\n /* Test v2sf calculations.  The nmadd and nmsub patterns need\n    -ffinite-math-only.  */\n /* { dg-do compile } */\n-/* { dg-mips-options \"-mips32r2 -O2 -mpaired-single -ffinite-math-only\" } */\n+/* { dg-options \"isa_rev>=2 -mgp32 -O2 -mpaired-single -ffinite-math-only\" } */\n /* { dg-final { scan-assembler \"cvt.ps.s\" } } */\n /* { dg-final { scan-assembler \"mov.ps\" } } */\n /* { dg-final { scan-assembler \"ldc1\" } } */"}, {"sha": "2a10f91bd54e3948b637387532e242b88e70f6be", "filename": "gcc/testsuite/gcc.target/mips/mips-ps-type.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-type.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-type.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-ps-type.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,7 +1,7 @@\n /* Test v2sf calculations.  The nmadd and nmsub patterns need\n    -ffinite-math-only.  */\n /* { dg-do compile } */ \n-/* { dg-mips-options \"-mips64 -O2 -mpaired-single -mgp64 -ffinite-math-only\" } */\n+/* { dg-options \"-O2 -mpaired-single -mgp64 -ffinite-math-only\" } */\n /* { dg-final { scan-assembler \"cvt.ps.s\" } } */ \n /* { dg-final { scan-assembler \"mov.ps\" } } */ \n /* { dg-final { scan-assembler \"ldc1\" } } */ "}, {"sha": "c0f9d332a5944053693e7f3da910c1e4631dffa6", "filename": "gcc/testsuite/gcc.target/mips/mips-sched-madd.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-sched-madd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-sched-madd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips-sched-madd.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,7 +1,7 @@\n /* Test for case where another independent multiply insn may interfere\n    with a macc chain.  */\n /* { dg-do compile } */\n-/* { dg-mips-options \"-Os -march=24kf\" } */\n+/* { dg-options \"-Os -march=24kf\" } */\n \n NOMIPS16 int foo (int a, int b, int c, int d, int e, int f, int g)\n {"}, {"sha": "e1496d9d6a7f8d52367bdba5a6e2388abdb31a1c", "filename": "gcc/testsuite/gcc.target/mips/mips.exp", "status": "modified", "additions": 1052, "deletions": 310, "changes": 1362, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-#   Copyright (C) 1997, 2007 Free Software Foundation, Inc.\n+#   Copyright (C) 1997, 2007, 2008 Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -14,371 +14,1113 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-# GCC testsuite that uses the `dg.exp' driver.\n+# A MIPS version of the GCC dg.exp driver.\n+#\n+# There are many MIPS features that we want to test, and many of those\n+# features are specific to certain architectures, certain ABIs and so on.\n+# There are therefore many cases in which we want to test something that\n+# is incompatible with the user's chosen test options.\n+#\n+# In most dg testsuites, the options added by dg-options have a lower\n+# priority than the options chosen by the user.  For example, if a test\n+# specifies:\n+#\n+#    { dg-options \"-mips1\" }\n+#\n+# and the user passes the following option to runtest:\n+#\n+#    --target_board unix/-mips3\n+#\n+# the test would be compiled as MIPS III rather than MIPS I.  If the\n+# test really wouldn't work with -mips3, normal practice would be to\n+# have something like:\n+#\n+#    { dg-do compile { target can_force_mips1 } }\n+#\n+# so that the test is skipped when an option like -mips3 is passed.\n+#\n+# Sticking to the same approach here would cause us to skip many tests,\n+# even though the toolchain can generate the required code.  For example,\n+# there are 6 MIPS ABIs, plus variants.  Some configurations support\n+# more than one ABI, so it is natural to use something like:\n+#\n+#    --target_board unix{-mabi=n32,-mabi=32,-mabi=64}\n+#\n+# when testing them.  But these -mabi=* options would normally prevent any\n+# EABI and o64 tests from running.\n+#\n+# This testsuite therefore defines a local version of dg-options that\n+# overrides any user options that are incompatible with the test options.\n+# It tries to keep the other user options intact.\n+#\n+#\n+# Most of the tests in this testsuite are scan-assembler tests, but\n+# sometimes we need a link test instead.  In these cases, we must not\n+# try to link code with options that are incompatible with the current\n+# multilib, because xgcc is passed -L and -B options that are specific\n+# to that multilib.\n+#\n+# Normal GCC practice would be to skip incompatible link tests as\n+# unsupported, but in this particular case, it seems better to downgrade\n+# them to an assemble test instead.  At least that way we get some\n+# test-for-ICE and code-sanity coverage.\n+#\n+# The same problem applies to run tests.  If a test requires runtime\n+# support for a particular feature, and if the current target does not\n+# provide that support, normal practice would be to skip the test.\n+# But in this case it seems better to downgrade it to a link test instead.\n+# (We might then have to downgrade it to an assembler test according to\n+# the constraints just mentioned.)\n+#\n+# The local dg-options therefore checks whether the new options are\n+# link-compatiable with the user's options.  If not, it automatically\n+# downgrades link tests to assemble tests.  It does the same for run\n+# tests, but in addition, it downgrades run tests to link tests if the\n+# target does not provide runtime support for a required feature or ASE.\n+#\n+#\n+# Another problem is that many of the options we want to test require\n+# certain other features.  For example, -mips3d requires both 64-bit\n+# FPRs and a MIPS32 or MIPS64 target; -mfix-r10000 requires branch-\n+# likely instructions; and so on.  We could handle this by specifying\n+# a set of options that are guaranteed to give us what we want, such as:\n+#\n+#   dg-options \"-mips3d -mpaired-single -mhard-float -mgp64 -mfp64 -mabi=n32 -march=mips64 -mips64\"\n+#\n+# With the new dg-options semantics, this would override any troublesome\n+# user options like -mips3, -march=vr4100, -mfp32, -mgp32, -msoft-float,\n+# -mno-paired-single and so on.  But there are three major problems with\n+# this:\n+#\n+#   - It is easy to forget options.\n+#\n+#   - If a new option is added, all tests that are incompatible with that\n+#     option must be updated.\n+#\n+#   - We want to be able to test MIPS-3D with things like -march=mips32,\n+#     -march=mips64r2, -march=sb1, and so on.\n+#\n+# The local version of dg-options therefore works out the requirements\n+# of each test option.  As with the test options themselves, the local\n+# dg-options overrides any user options that incompatible with these\n+# requirements, but it keeps the other user options the same.\n+#\n+# For example, if the user passes -mips3, a MIPS-3D test will choose\n+# a different architecture like -mips64 instead.  But if the user\n+# passes -march=sb1, MIPS-3D tests will be run with that option.\n+#\n+#\n+# Sometimes it is useful to say \"I want an environment that is compatible\n+# with option X, but I don't want to pass option X itself\".  The main example\n+# of this is -mips16: we want to be able to test __attribute__((mips16))\n+# without requiring the test itself to be compiled as -mips16.  The local\n+# version of dg-options lets you do this by putting X in parentheses.\n+# For example:\n+#\n+#   { dg-options \"(-mips16)\" }\n+#\n+# selects a MIPS16-compatible target without passing -mips16 itself.\n+#\n+# It is also useful to say \"any architecture within this ISA range is fine\".\n+# This can be done using special pseudo-options of the form:\n+#\n+#   PROP=VALUE PROP<=VALUE PROP>=VALUE\n+#\n+# where PROP can be:\n+#\n+#   isa:\n+#\tthe value of the __mips macro.\n+#\n+#   isa_rev:\n+#\tthe value of the __mips_isa_rev macro, or 0 if it isn't defined.\n+#\n+# For example, \"isa_rev>=1\" selects a MIPS32 or MIPS64 processor,\n+# \"isa=4\" selects a MIPS IV processor, and so on.  There are also\n+# the following special pseudo-options:\n+#\n+#   isa=loongson:\n+#\tselect a Loongson processor\n+#\n+#   addressing=absolute\n+#\tforce absolute addresses to be used\n+#\n+#\n+# In summary:\n+#\n+#   (1) Try to avoid { target ... } requirements wherever possible.\n+#       Specify the requirements as dg-options instead.\n+#\n+#   (2) Don't worry about the consequences of (1) for link and run tests.\n+#       If the test uses { dg-do link } or { dg-do run }, and its\n+#       dg-options are incompatible with the current target, the\n+#       testsuite will downgrade them where necessary.\n+#\n+#   (3) Try to use the bare minimum of options and leave dg-options\n+#       to work out the dependencies.  For example, if you want\n+#       a MIPS-3D test, you should generally just specify -mips3d.\n+#       Don't specify an architecture option like -mips64 unless\n+#       the test really doesn't work with -mips32r2, -mips64r2,\n+#       -march=sb1, etc.\n+#\n+#   (4) If you want something compatible with a particular option,\n+#       but don't want to pass the option itself, wrap that option\n+#       in parentheses.  In particular, pass '(-mips16)' if you\n+#       want to use \"mips16\" attributes.\n+#\n+#   (5) When testing a feature of a generic ISA (as opposed to a\n+#\tprocessor-specific extension), try to use the \"isa\" and\n+#\t\"isa_rev\" pseudo-options instead of specific architecture\n+#\toptions.  For example, if the feature is present on revision 2\n+#\tprocessors and above, try to use \"isa_rev>=2\" instead of\n+#\t\"-mips32r2\" or \"-mips64r2\".\n \n # Exit immediately if this isn't a MIPS target.\n if ![istarget mips*-*-*] {\n-  return\n+    return\n }\n \n # Load support procs.\n load_lib gcc-dg.exp\n \n-# Find out which target is selected by the default compiler flags.\n-# Also remember which aspects of the target are forced on the command\n-# line (as opposed to being overridable defaults).\n-#\n-#    $mips_isa:\t\t the ISA level specified by __mips\n-#    $mips_isa_rev:\t the ISA revision specified by __mips_isa_rev\n-#    $mips_arch:\t the architecture specified by _MIPS_ARCH\n-#    $mips_mips16:\t true if MIPS16 output is selected\n-#    $mips_gp:\t\t the number of bytes in a general register\n-#    $mips_fp:\t\t the number of bytes in a floating-point register\n-#    $mips_float:\t \"hard\" or \"soft\"\n-#    $mips_abi:\t\t the ABI specified by _MIPS_SIM\n-#\n-#    $mips_forced_isa:\t true if the command line uses -march=* or -mips*\n-#    $mips_forced_abi:\t true if the command line uses -mabi=*\n-#    $mips_forced_regs:  true if the command line uses -mgp* or -mfp*\n-#    $mips_forced_float: true if the command line uses -mhard/soft-float\n-#    $mips_forced_be\t true if the command line uses -EB or -meb\n-#    $mips_forced_le\t true if the command line uses -EL or -mel\n-#    $mips_forced_gp\t true if the command line forces a particular GP mode\n-#    $mips_forced_no_abicalls\n-#\t\t\t true if the command line contains -mno-abicalls\n-#    $mips_forced_no_shared\n-#\t\t\t true if the command line contains -mno-shared\n-#    $mips_forced_no_er  true if the command line contains -mno-explicit-relocs\n-proc setup_mips_tests {} {\n-    global mips_isa\n-    global mips_isa_rev\n-    global mips_arch\n-    global mips_mips16\n-    global mips_gp\n-    global mips_fp\n-    global mips_float\n-    global mips_abi\n-\n-    global mips_forced_isa\n-    global mips_forced_abi\n-    global mips_forced_float\n-    global mips_forced_be\n-    global mips_forced_le\n-    global mips_forced_gp\n-    global mips_forced_no_abicalls\n-    global mips_forced_no_shared\n-    global mips_forced_no_er\n-    global mips_forced_regs\n-\n-    global compiler_flags\n+# A list of GROUP REGEXP pairs.  Each GROUP represents a logical group of\n+# options from which only option should be chosen.  REGEXP matches all the\n+# options in that group; it is implicitly wrapped in \"^(...)$\".\n+set mips_option_groups {\n+    abi \"-mabi=.*\"\n+    addressing \"addressing=.*\"\n+    arch \"-mips([1-5]|32.*|64.*)|-march=.*|isa(|_rev)(=|<=|>=).*\"\n+    dump_pattern \"-dp\"\n+    endianness \"-E(L|B)|-me(l|b)\"\n+    float \"-m(hard|soft)-float\"\n+    fp \"-mfp(32|64)\"\n+    gp \"-mgp(32|64)\"\n+    long \"-mlong(32|64)\"\n+    mips16 \"-mips16|-mno-mips16\"\n+    mips3d \"-mips3d|-mno-mips3d\"\n+    optimization \"-O(|[0-3s])\"\n+    pic \"-f(no-|)(pic|PIC)\"\n+    profiling \"-pg\"\n+    small-data \"-G[0-9]+\"\n+    warnings \"-w\"\n+}\n+\n+# Add -mfoo/-mno-foo options to mips_option_groups.\n+foreach option {\n+    abicalls\n+    branch-likely\n+    dsp\n+    dspr2\n+    explicit-relocs\n+    extern-sdata\n+    fix-r4000\n+    fix-r10000\n+    fix-vr4130\n+    gpopt\n+    local-sdata\n+    long-calls\n+    paired-single\n+    plt\n+    shared\n+    smartmips\n+    sym32\n+} {\n+    lappend mips_option_groups $option \"-m(no-|)$option\"\n+}\n+\n+# Add -mfoo= options to mips_option_groups.\n+foreach option {\n+    branch-cost\n+    code-readable\n+    r10k-cache-barrier\n+} {\n+    lappend mips_option_groups $option \"-m$option=.*\"\n+}\n+\n+# Add -ffoo/-fno-foo options to mips_option_groups.\n+foreach option {\n+    delayed-branch\n+    fast-math\n+    finite-math-only\n+    fixed-hi\n+    fixed-lo\n+    lax-vector-conversions\n+    split-wide-types\n+    tree-vectorize\n+} {\n+    lappend mips_option_groups $option \"-f(no-|)$option\"\n+}\n+\n+# A list of option groups that have an impact on the ABI.\n+set mips_abi_groups {\n+    abi\n+    abicalls\n+    arch\n+    endianness\n+    float\n+    fp\n+    gp\n+    gpopt\n+    long\n+    pic\n+    small-data\n+}\n+\n+# mips_option_tests(OPTION) is some assembly code that will run to completion\n+# on a target that supports OPTION.\n+set mips_option_tests(-mips16) {\n+    move $2,$31\n+    jal 1f\n+    b 2f\n+    .align 2\n+    .set mips16\n+1:\n+    jr $31\n+    .set nomips16\n+    .align 2\n+2:\n+    move $31,$2\n+}\n+set mips_option_tests(-mpaired-single) {\n+    .set mips64\n+    lui $2,0x3f80\n+    mtc1 $2,$f0\n+    cvt.ps.s $f2,$f0,$f0\n+}\n+set mips_option_tests(-mips3d) {\n+    .set mips64\n+    .set mips3d\n+    lui $2,0x3f80\n+    mtc1 $2,$f0\n+    cvt.ps.s $f2,$f0,$f0\n+    mulr.ps $f2,$f2,$f2\n+    rsqrt1.s $f2,$f0\n+    mul.s $f4,$f2,$f0\n+    rsqrt2.s $f4,$f4,$f2\n+    madd.s $f4,$f2,$f2,$f4\n+}\n+set mips_option_tests(-mdsp) {\n+    .set mips64r2\n+    .set dsp\n+    addsc $2,$2,$2\n+}\n+set mips_option_tests(-mdspr2) {\n+    .set mips64r2\n+    .set dspr2\n+    prepend $2,$3,11\n+}\n+\n+# Canonicalize command-line option OPTION.\n+proc mips_canonicalize_option { option } {\n+    regsub {^-mips([1-5]|32*|64*)$} $option {-march=mips\\1} option\n+\n+    regsub {^-mel$} $option {-EL} option\n+    regsub {^-meb$} $option {-EB} option\n+\n+    regsub {^-O$} $option {-O1} option\n+\n+    # MIPS doesn't use -fpic and -fPIC to distinguish between code models.\n+    regsub {^-f(no-|)PIC} $option {-f\\1pic} option\n+\n+    return $option\n+}\n+\n+# Return true if OPTION1 and OPTION2 represent the same command-line option.\n+proc mips_same_option_p { option1 option2 } {\n+    return [string equal \\\n+\t\t[mips_canonicalize_option $option1] \\\n+\t\t[mips_canonicalize_option $option2]]\n+}\n+\n+# Preprocess CODE using target_compile options OPTIONS.  Return the\n+# compiler output.\n+proc mips_preprocess { options code } {\n     global tool\n \n     set src dummy[pid].c\n     set f [open $src \"w\"]\n-    puts $f {\n-\tint isa = __mips;\n-\t#ifdef __mips_isa_rev\n-\tint isa_rev = __mips_isa_rev;\n-\t#else\n-\tint isa_rev = 1;\n-\t#endif\n-\tconst char *arch = _MIPS_ARCH;\n-\t#ifdef __mips16\n-\tint mips16 = 1;\n-\t#endif\n-\t#ifdef __mips64\n-\tint gp = 64;\n-\t#else\n-\tint gp = 32;\n-\t#endif\n-\tint fp = __mips_fpr;\n-\t#ifdef __mips_hard_float\n-\tconst char *float = \"hard\";\n-\t#else\n-\tconst char *float = \"soft\";\n-\t#endif\n-\t#if !defined _MIPS_SIM\n-\tconst char *abi = \"eabi\";\n-\t#elif _MIPS_SIM==_ABIO32\n-\tconst char *abi = \"32\";\n-\t#elif _MIPS_SIM==_ABIO64\n-\tconst char *abi = \"o64\";\n-\t#elif _MIPS_SIM==_ABIN32\n-\tconst char *abi = \"n32\";\n-\t#else\n-\tconst char *abi = \"64\";\n-\t#endif\n-    }\n+    puts $f $code\n     close $f\n-    set output [${tool}_target_compile $src \"\" preprocess \"\"]\n+    set output [${tool}_target_compile $src \"\" preprocess $options]\n     file delete $src\n \n-    regexp {isa = ([^;]*)} $output dummy mips_isa\n-    regexp {isa_rev = ([^;]*)} $output dummy mips_isa_rev\n-    regexp {arch = \"([^\"]*)} $output dummy mips_arch\n-    set mips_mips16 [regexp {mips16 = 1} $output]\n-    regexp {gp = ([^;]*)} $output dummy mips_gp\n-    regexp {fp = ([^;]*)} $output dummy mips_fp\n-    regexp {float = \"([^\"]*)} $output dummy mips_float\n-    regexp {abi = \"([^\"]*)} $output dummy mips_abi\n-\n-    set mips_forced_isa [regexp -- {(-mips[1-5][[:>:]]|-mips32*|-mips64*|-march)} $compiler_flags]\n-    set mips_forced_abi [regexp -- {-mabi} $compiler_flags]\n-    set mips_forced_regs [regexp -- {(-mgp|-mfp)} $compiler_flags]\n-    set mips_forced_float [regexp -- {-m(hard|soft)-float} $compiler_flags]\n-    set mips_forced_be [regexp -- {-(EB|meb)[[:>:]]} $compiler_flags]\n-    set mips_forced_le [regexp -- {-(EL|mel)[[:>:]]} $compiler_flags]\n-    set mips_forced_gp [regexp -- {-(G|m(|no-)((extern|local)-sdata|gpopt)|mabicalls|mrtp)} $compiler_flags]\n-    set mips_forced_no_abicalls [regexp -- {-mno-abicalls} $compiler_flags]\n-    set mips_forced_no_shared [regexp -- {-mno-shared} $compiler_flags]\n-    set mips_forced_no_er [regexp -- {-mno-explicit-relocs} $compiler_flags]\n-\n-    if {$mips_forced_regs && $mips_gp == 32 && $mips_fp == 64} {\n-\tset mips_forced_abi 1\n-\tset mips_forced_isa 1\n+    return $output\n+}\n+\n+# Set the target board's command-line options to NEW_OPTIONS, storing the\n+# old values in UPVAR.\n+proc mips_push_test_options { upvar new_options } {\n+    upvar $upvar var\n+    global board_info\n+\n+    array unset var\n+    set var(name) board_info([target_info name],multilib_flags)\n+    if { [info exists $var(name)] } {\n+\tset var(old_options) [set $var(name)]\n+\tset $var(name) [join $new_options \" \"]\n     }\n }\n \n-# Like dg-options, but treats certain MIPS-specific options specially:\n-#\n-#    -mgp32\n-#    -march=mips32*\n-#\tForce 32-bit code.  Skip the test if the multilib flags force\n-#\ta 64-bit ABI.\n-#\n-#    -mgp64\n-#\tForce 64-bit code.  Also force a 64-bit target architecture\n-#\tif the other flags don't do so.  Skip the test if the multilib\n-#\tflags force a 32-bit ABI or a 32-bit architecture.\n-#\n-#    -mfp64\n-#\tForce the use of 64-bit floating-point registers, even on a\n-#\t32-bit target.  Also force -mhard-float and an architecture that\n-#\tsupports such a combination, unless these things are already\n-#\tspecified by other parts of the given flags.\n-#\n-#    -mabi=*\n-#\tForce a particular ABI.  Skip the test if the multilib flags\n-#\tforce a specific ABI or a different register size.  If testing\n-#\tMIPS16 multilibs, try to force -msoft-float for ABIs other than\n-#\to32 and o64, and skip the test if this is not possible.\n-#\n-#    -march=*\n-#    -mips*\n-#\tSelect the target architecture.  Skip the test if the multilib\n-#\tflags force a different architecture.\n-#\n-#    -msoft-float\n-#    -mhard-float\n-#\tSelect the given floating-point mode.  Skip the test if the\n-#\tmultilib flags force a different selection.\n-#\n-#    -EB\n-#    -EL\n-#\tSelect the given endianness.  Skip the test if the multilib flags\n-#\tforce the opposite endianness.\n-#\n-#    -G*\n-#    -m(no-)extern-sdata\n-#    -m(no-)local-sdata\n-#    -m(no-)gpopt\n-#\tSelect the small-data mode, and -mno-abcialls.  Skip the test if\n-#\tthe multilib flags already contain such an option, or specify\n-#\tsomething that might be incompatible with them.\n-#\n-#    -mabicalls\n-#    -mshared\n-#\tSelect the form of SVR4 PIC.  Skip the test if the multilib flags\n-#\tconflict with the required setting.\n-#\n-#    -mexplicit-relocs\n-#\tSelect explicit relocations.  Skip the test if the multilib flags\n-#\tforce -mno-explicit-relocs.\n-#\n-#    -mpaired-single\n-#\tSelect paired-single instructions.  Also behave as for -mfp64.\n-proc dg-mips-options {args} {\n-    upvar dg-extra-tool-flags extra_tool_flags\n-    upvar dg-do-what do_what\n+# Undo the effects of [mips_push_test_options UPVAR ...]\n+proc mips_pop_test_options { upvar } {\n+    upvar $upvar var\n+    global board_info\n \n-    global mips_isa\n-    global mips_isa_rev\n-    global mips_arch\n-    global mips_mips16\n-    global mips_gp\n-    global mips_fp\n-    global mips_float\n-    global mips_abi\n-\n-    global mips_forced_isa\n-    global mips_forced_abi\n-    global mips_forced_regs\n-    global mips_forced_float\n-    global mips_forced_be\n-    global mips_forced_le\n-    global mips_forced_gp\n-    global mips_forced_no_abicalls\n-    global mips_forced_no_shared\n-    global mips_forced_no_er\n-\n-    set flags [lindex $args 1]\n-    set matches 1\n-\n-    # Add implied flags.\n-    foreach flag $flags {\n-\tif {[string match -mpaired-single $flag]\n-\t    && [lsearch $flags -mfp*] < 0} {\n-\t    append flags \" -mfp64\"\n-\t} elseif {[regexp -- {^-mabi=(.*)} $flag dummy abi]\n-\t\t  && $mips_mips16\n-\t\t  && $abi != \"32\"\n-\t\t  && $abi != \"o64\"} {\n-\t    if {[lsearch $flags -mhard-float] >= 0} {\n-\t\tset matches 0\n-\t    } else {\n-\t\tappend flags \" -msoft-float\"\n-\t    }\n-\t} elseif {[regexp -- {^-mr10k-cache-barrier=(load|store)} $flag]\n-\t\t  && $mips_isa < 3\n-\t\t  && [lsearch -regexp $flags {^(-mips|-march)}] < 0} {\n-\t    append flags \" -mips3\"\n+    if { [info exists var(old_options)] } {\n+\tset $var(name) $var(old_options)\n+    }\n+}\n+\n+# Return property PROP for architecture option ARCH (which belongs to\n+# the \"arch\" group in mips_option_groups).  See the comment at the\n+# top of the file for the valid property names.\n+#\n+# Cache the results in mips_arch_info (which can be reused between test\n+# variants).\n+proc mips_arch_info { arch prop } {\n+    global mips_arch_info\n+    global board_info\n+\n+    set arch [mips_canonicalize_option $arch]\n+    if { ![info exists mips_arch_info($arch,$prop)] } {\n+\tmips_push_test_options saved_options {}\n+\tset output [mips_preprocess [list \"additional_flags=$arch -mabi=32\"] {\n+\t    int isa = __mips;\n+\t    #ifdef __mips_isa_rev\n+\t    int isa_rev = __mips_isa_rev;\n+\t    #else\n+\t    int isa_rev = 0;\n+\t    #endif\n+\t}]\n+\tforeach lhs { isa isa_rev } {\n+\t    regsub \".*$lhs = (\\[^;\\]*).*\" $output {\\1} rhs\n+\t    verbose -log \"Architecture $arch has $lhs $rhs\"\n+\t    set mips_arch_info($arch,$lhs) $rhs\n \t}\n+\tmips_pop_test_options saved_options\n     }\n-    foreach flag $flags {\n-\tif {[string match -mfp* $flag]\n-\t    && [lsearch -regexp $flags {^-m(hard|soft)-float$}] < 0} {\n-\t    append flags \" -mhard-float\"\n+    return $mips_arch_info($arch,$prop)\n+}\n+\n+# Return the option group associated with OPTION, or \"\" if none.\n+proc mips_option_maybe_group { option } {\n+    global mips_option_groups\n+\n+    foreach { group regexp } $mips_option_groups {\n+\tif { [regexp -- \"^($regexp)\\$\" $option] } {\n+\t    return $group\n \t}\n     }\n+    return \"\"\n+}\n \n-    # Handle options that force a particular register size.  Add\n-    # architecture and ABI options if necessary.\n-    set mips_new_gp $mips_gp\n-    set mips_new_fp $mips_fp\n-    foreach flag $flags {\n-\tswitch -glob -- $flag {\n-\t    -msmartmips -\n-\t    -mips[12] -\n-\t    -mips32* -\n-\t    -march=mips32* -\n-\t    -march=r3900 -\n-\t    -march=24k* -\n-\t    -mabi=32 -\n-\t    -mgp32 {\n-\t\tset mips_new_gp 32\n-\t    }\n-\t    -mabi=64 -\n-\t    -mabi=o64 -\n-\t    -mabi=n32 -\n-\t    -mgp64 {\n-\t\tset mips_new_gp 64\n-\t    }\n-\t    -mfp64 {\n-\t\tset mips_new_fp 64\n-\t    }\n+# Return the option group associated with OPTION.  Raise an error if\n+# there is none.\n+proc mips_option_group { option } {\n+    set group [mips_option_maybe_group $option]\n+    if { [string equal $group \"\"] } {\n+\terror \"Unrecognised option: $option\"\n+    }\n+    return $group\n+}\n+\n+# Return the option for option group GROUP, or \"\" if no option in that\n+# group has been chosen.  UPSTATUS describes the option status.\n+proc mips_option { upstatus group } {\n+    upvar $upstatus status\n+\n+    return $status(option,$group)\n+}\n+\n+# If the default options for this test run include an option in group GROUP,\n+# return that option, otherwise return \"\".\n+proc mips_original_option { group } {\n+    global mips_base_options\n+\n+    return [mips_option mips_base_options $group]\n+}\n+\n+# Return true if the test described up UPSTATUS requires a specific\n+# option in group GROUP.\n+proc mips_test_option_p { upstatus group } {\n+    upvar $upstatus status\n+\n+    return $status(test_option_p,$group)\n+}\n+\n+# If the test described by UPSTATUS requires a particular option in group\n+# GROUP, return that option, otherwise return \"\".\n+proc mips_test_option { upstatus group } {\n+    upvar $upstatus status\n+\n+    if { [mips_test_option_p status $group] } {\n+\treturn [mips_option status $group]\n+    } else {\n+\treturn \"\"\n+    }\n+}\n+\n+# Return true if the options described by UPSTATUS include OPTION.\n+proc mips_have_option_p { upstatus option } {\n+    upvar $upstatus status\n+\n+    return [mips_same_option_p \\\n+\t\t[mips_option status [mips_option_group $option]] \\\n+\t\t$option]\n+}\n+\n+# Return true if the test described by UPSTATUS requires option OPTION.\n+proc mips_have_test_option_p { upstatus option } {\n+    upvar $upstatus status\n+\n+    set group [mips_option_group $option]\n+    return [mips_same_option_p [mips_test_option status $group] $option]\n+}\n+\n+# If the test described by UPSTATUS does not specify an option in\n+# OPTION's group, act as though it had specified OPTION.\n+#\n+# The first optional argument indicates whether the option should be\n+# treated as though it were wrapped in parentheses; see the comment at\n+# the top of the file for details about this convention.  The default is 0.\n+proc mips_make_test_option { upstatus option args } {\n+    upvar $upstatus status\n+\n+    set group [mips_option_group $option]\n+    if { ![mips_test_option_p status $group] } {\n+\tset status(option,$group) $option\n+\tset status(test_option_p,$group) 1\n+\tif { [llength $args] == 0 || ![lindex $args 0] } {\n+\t    set status(explicit_p,$group) 1\n+\t}\n+    }\n+}\n+\n+# If the test described by UPSTATUS requires option FROM, assume that\n+# it implicitly requires option TO.\n+proc mips_option_dependency { upstatus from to } {\n+    upvar $upstatus status\n+\n+    if { [mips_have_test_option_p status $from] } {\n+\tmips_make_test_option status $to\n+    }\n+}\n+\n+# Return true if the given arch-group option specifies a 32-bit ISA.\n+proc mips_32bit_arch_p { option } {\n+    set isa [mips_arch_info $option isa]\n+    return [expr { $isa < 3 || $isa == 32 }]\n+}\n+\n+# Return true if the given arch-group option specifies a 64-bit ISA.\n+proc mips_64bit_arch_p { option } {\n+    return [expr { ![mips_32bit_arch_p $option] }]\n+}\n+\n+# Return true if the given abi-group option implicitly requires -mgp32.\n+proc mips_32bit_abi_p { option } {\n+    switch -glob -- $option {\n+\t-mabi=32 {\n+\t    return 1\n \t}\n     }\n+    return 0\n+}\n \n-    if {$mips_new_gp != $mips_gp || $mips_new_fp != $mips_fp} {\n-\tif {$mips_forced_regs} {\n-\t    set matches 0\n+# Return true if the given abi-group option implicitly requires -mgp64.\n+proc mips_64bit_abi_p { option } {\n+    switch -glob -- $option {\n+\t-mabi=o64 -\n+\t-mabi=n32 -\n+\t-mabi=64 {\n+\t    return 1\n \t}\n-\t# Select an appropriate ABI.\n-\tif {[lsearch $flags \"-mabi=*\"] < 0} {\n-\t    if {$mips_new_gp == 32} {\n-\t\tappend flags \" -mabi=32\"\n-\t    } else {\n-\t\tappend flags \" -mabi=o64\"\n+    }\n+    return 0\n+}\n+\n+# Check whether the current target supports all the options that the\n+# current test requires.  Return \"\" if so, otherwise return one of\n+# the incompatible options.  UPSTATUS describes the option status.\n+proc mips_first_unsupported_option { upstatus } {\n+    global mips_option_tests\n+    upvar $upstatus status\n+\n+    foreach { option code } [array get mips_option_tests] {\n+\tif { [mips_have_test_option_p status $option] } {\n+\t    regsub -all \"\\n\" $code \"\\\\n\\\\\\n\" asm\n+\t    # Use check_runtime from target-supports.exp, which caches\n+\t    # the result for us.\n+\t    if { ![check_runtime mips_option_$option [subst {\n+\t\t__attribute__((nomips16)) int\n+\t\tmain (void)\n+\t\t{\n+\t\t    asm (\".set push\\\n+\t\t    $asm\\\n+\t\t    .set pop\");\n+\t\t    return 0;\n+\t\t}\n+\t    }]] } {\n+\t\treturn $option\n \t    }\n \t}\n-\t# And an appropriate architecture.\n-\tif {[lsearch -regexp $flags {^(-mips|-march)}] < 0} {\n-\t    if {$mips_new_gp == 64 && $mips_gp == 32} {\n-\t\tappend flags \" -mips3\"\n-\t    } elseif {$mips_new_gp == 32 && $mips_new_fp == 64} {\n-\t\tappend flags \" -mips32r2\"\n-\t    }\n+    }\n+    return \"\"\n+}\n+\n+# Initialize this testsuite for a new test variant.\n+proc mips-dg-init {} {\n+    # Invariant information.\n+    global mips_option_groups\n+\n+    # Internally-generated information about this run.\n+    global mips_base_options\n+    global mips_extra_options\n+\n+    # Override dg-options with our mips-dg-options routine.\n+    rename dg-options mips-old-dg-options\n+    rename mips-dg-options dg-options\n+\n+    # Start with a fresh option status.\n+    array unset mips_base_options\n+    foreach { group regexp } $mips_option_groups {\n+\tset mips_base_options(option,$group) \"\"\n+\tset mips_base_options(explicit_p,$group) 0\n+\tset mips_base_options(test_option_p,$group) 0\n+    }\n+\n+    # Use preprocessor macros to work out as many implicit options as we can.\n+    set output [mips_preprocess \"\" {\n+\tconst char *options[] = {\n+\t    #if !defined _MIPS_SIM\n+\t    \"-mabi=eabi\",\n+\t    #elif _MIPS_SIM==_ABIO32\n+\t    \"-mabi=32\",\n+\t    #elif _MIPS_SIM==_ABIO64\n+\t    \"-mabi=o64\",\n+\t    #elif _MIPS_SIM==_ABIN32\n+\t    \"-mabi=n32\",\n+\t    #else\n+\t    \"-mabi=64\",\n+\t    #endif\n+\n+\t    \"-march=\" _MIPS_ARCH,\n+\n+\t    #ifdef _MIPSEB\n+\t    \"-EB\",\n+\t    #else\n+\t    \"-EL\",\n+\t    #endif\n+\n+\t    #ifdef __mips_hard_float\n+\t    \"-mhard-float\",\n+\t    #else\n+\t    \"-msoft-float\",\n+\t    #endif\n+\n+\t    #if __mips_fpr == 64\n+\t    \"-mfp64\",\n+\t    #else\n+\t    \"-mfp32\",\n+\t    #endif\n+\n+\t    #ifdef __mips64\n+\t    \"-mgp64\",\n+\t    #else\n+\t    \"-mgp32\",\n+\t    #endif\n+\n+\t    #if _MIPS_SZLONG == 64\n+\t    \"-mlong64\",\n+\t    #else\n+\t    \"-mlong32\",\n+\t    #endif\n+\n+\t    #ifdef __mips16\n+\t    \"-mips16\",\n+\t    #else\n+\t    \"-mno-mips16\",\n+\t    #endif\n+\n+\t    #ifdef __mips3d\n+\t    \"-mips3d\",\n+\t    #else\n+\t    \"-mno-mips3d\",\n+\t    #endif\n+\n+\t    #ifdef __mips_paired_single_float\n+\t    \"-mpaired-single\",\n+\t    #else\n+\t    \"-mno-paired-single\",\n+\t    #endif\n+\n+\t    #if __mips_abicalls\n+\t    \"-mabicalls\",\n+\t    #else\n+\t    \"-mno-abicalls\",\n+\t    #endif\n+\n+\t    #if __mips_dsp_rev >= 2\n+\t    \"-mdspr2\",\n+\t    #else\n+\t    \"-mno-dspr2\",\n+\t    #endif\n+\n+\t    #if __mips_dsp_rev >= 1\n+\t    \"-mdsp\",\n+\t    #else\n+\t    \"-mno-dsp\",\n+\t    #endif\n+\n+\t    #ifndef __PIC__\n+\t    \"addressing=absolute\",\n+\t    #endif\n+\n+\t    #ifdef __mips_smartmips\n+\t    \"-msmartmips\",\n+\t    #else\n+\t    \"-mno-smartmips\",\n+\t    #endif\n+\n+\t    0\n+\t};\n+    }]\n+    foreach line [split $output \"\\r\\n\"] {\n+\t# Poor man's string concatenation.\n+\tregsub -all {\" \"} $line \"\" line\n+\tif { [regexp {\"(.*)\",} $line dummy option] } {\n+\t    set group [mips_option_group $option]\n+\t    set mips_base_options(option,$group) $option\n \t}\n     }\n \n-    foreach flag $flags {\n-\tif {[string match -mabicalls $flag]} {\n-\t    # EABI has no SVR4-style PIC mode, so try to force another ABI.\n-\t    if {$mips_abi == \"eabi\" && [lsearch $flags \"-mabi=*\"] < 0} {\n-\t\tif {$mips_new_gp == 32} {\n-\t\t    append flags \" -mabi=32\"\n+    # Process the target's multilib options, saving any unrecognized\n+    # ones in mips_extra_options.\n+    set mips_extra_options {}\n+    foreach option [split [board_info target multilib_flags]] {\n+\tset group [mips_option_maybe_group $option]\n+\tif { ![string equal $group \"\"] } {\n+\t    set mips_base_options(option,$group) $option\n+\t    set mips_base_options(explicit_p,$group) 1\n+\t} else {\n+\t    lappend mips_extra_options $option\n+\t}\n+    }\n+}\n+\n+# Finish a test run started by mips-dg-init.\n+proc mips-dg-finish {} {\n+    rename dg-options mips-dg-options\n+    rename mips-old-dg-options dg-options\n+}\n+\n+# Override dg-options so that we can do some MIPS-specific processing.\n+# All options used in this testsuite must appear in mips_option_groups.\n+#\n+# Test options override multilib options.  Certain test options can\n+# also imply other test options, which also override multilib options.\n+# These dependencies are ordered as follows:\n+#\n+#          START                        END\n+#            |                           |\n+#         -mips16                     -mno-mips16\n+#            |                           |\n+#         -mips3d                     -mno-mips3d\n+#            |                           |\n+#         -mpaired-single             -mno-paired-single\n+#            |                           |\n+#         -mfp64                      -mfp32\n+#            |                           |\n+#         -mhard-float                -msoft-float\n+#            |                           |\n+#         -mno-sym32                  -msym32\n+#            |                           |\n+#         -fpic                       -fno-pic\n+#            |                           |\n+#         -mshared                    -mno-shared\n+#            |                           |\n+#         -mno-plt                    -mplt\n+#            |                           |\n+#         addressing=unknown          addressing=absolute\n+#            |                           |\n+#         -mabicalls                  -mno-abicalls\n+#            |                           |\n+#         -G0                         <other value>\n+#            |                           |\n+#         <other value>               -mr10k-cache-barrier=none\n+#            |                           |\n+#         -mfix-r10000                -mno-fix-r10000\n+#            |                           |\n+#         -mbranch-likely             -mno-branch-likely\n+#            |                           |\n+#         -msmartmips                 -mno-smartmips\n+#            |                           |\n+#         -mno-gpopt                  -mgpopt\n+#            |                           |\n+#         -mexplicit-relocs           -mno-explicit-relocs\n+#            |                           |\n+#            +-- gp, abi & arch ---------+\n+#\n+# For these purposes, the \"gp\", \"abi\" & \"arch\" option groups are treated\n+# as a single node.\n+proc mips-dg-options { args } {\n+    # dg.exp variables.\n+    upvar dg-extra-tool-flags extra_tool_flags\n+    upvar dg-do-what do_what\n+\n+    # Invariant information.\n+    global mips_option_groups\n+    global mips_abi_groups\n+\n+    # Information about this run.\n+    global mips_base_options\n+\n+    # Start out with the default option state.\n+    array set options [array get mips_base_options]\n+\n+    # Record the options that this test explicitly needs.\n+    foreach option [lindex $args 1] {\n+\tset all_but_p [regexp {^\\((.*)\\)$} $option dummy option]\n+\tset group [mips_option_group $option]\n+\tif { [mips_test_option_p options $group] } {\n+\t    set old [mips_option options $group]\n+\t    error \"Inconsistent $group option: $old vs. $option\"\n+\t} else {\n+\t    mips_make_test_option options $option $all_but_p\n+\t}\n+    }\n+\n+    # Handle dependencies between options on the left of the\n+    # dependency diagram.\n+    mips_option_dependency options \"-mips3d\" \"-mpaired-single\"\n+    mips_option_dependency options \"-mpaired-single\" \"-mfp64\"\n+    mips_option_dependency options \"-mfp64\" \"-mhard-float\"\n+    mips_option_dependency options \"-fpic\" \"-mshared\"\n+    mips_option_dependency options \"-mshared\" \"-mno-plt\"\n+    mips_option_dependency options \"-mno-plt\" \"addressing=unknown\"\n+    mips_option_dependency options \"-mabicalls\" \"-G0\"\n+    mips_option_dependency options \"-mno-gpopt\" \"-mexplicit-relocs\"\n+\n+    # Work out information about the current ABI.\n+    set abi_test_option_p [mips_test_option_p options abi]\n+    set abi [mips_option options abi]\n+    set eabi_p [mips_same_option_p $abi \"-mabi=eabi\"]\n+\n+    # If the test forces a particular ABI, set the register size\n+    # accordingly.\n+    if { $abi_test_option_p } {\n+\tif { [mips_32bit_abi_p $abi] } {\n+\t    mips_make_test_option options \"-mgp32\"\n+\t} elseif { [mips_64bit_abi_p $abi] } {\n+\t    mips_make_test_option options \"-mgp64\"\n+\t}\n+    }\n+\n+    # Interpret the special \"isa\" and \"isa_rev\" options.  If we have\n+    # a choice of a 32-bit or a 64-bit architecture, prefer to keep\n+    # the -mgp setting the same.\n+    set spec [mips_option options arch]\n+    if { [regexp {^[^-]} $spec] } {\n+\tset arch [mips_option mips_base_options arch]\n+\tif { [string equal $spec \"isa=loongson\"] } {\n+\t    if { ![regexp {^-march=loongson} $arch] } {\n+\t\tset arch \"-march=loongson2f\"\n+\t    }\n+\t} else {\n+\t    if { ![regexp {^(isa(?:|_rev))(=|<=|>=)([0-9]+)$} $spec \\\n+\t\t       dummy prop relation value] } {\n+\t\terror \"Unrecognized isa specification: $isa_spec\"\n+\t    }\n+\t    set current [mips_arch_info $arch $prop]\n+\t    if { ($current < $value && ![string equal $relation \"<=\"])\n+\t\t || ($current > $value && ![string equal $relation \">=\"])\n+\t\t || ([mips_have_test_option_p options \"-mgp64\"]\n+\t\t     && [mips_32bit_arch_p $arch]) } {\n+\t\t# The current setting is out of range; it cannot\n+\t\t# possibly be used.  Find a replacement that can.\n+\t\tif { [string equal $prop \"isa\"] } {\n+\t\t    set arch \"-mips$value\"\n+\t\t} elseif { $value == 0 } {\n+\t\t    set arch \"-mips4\"\n \t\t} else {\n-\t\t    append flags \" -mabi=n32\"\n+\t\t    if { [mips_have_option_p options \"-mgp32\"] } {\n+\t\t\tset arch \"-mips32\"\n+\t\t    } else {\n+\t\t\tset arch \"-mips64\"\n+\t\t    }\n+\t\t    if { $value > 1 } {\n+\t\t\tappend arch \"r$value\"\n+\t\t    }\n \t\t}\n \t    }\n-\t    # Turn off small data, if on by default.\n-\t    append flags \" -G0\"\n \t}\n+\tset options(option,arch) $arch\n     }\n \n-    # Handle the other options.\n-    foreach flag $flags {\n-\tif {[regexp -- {^-mabi=(.*)} $flag dummy abi]} {\n-\t    if {$abi != $mips_abi && $mips_forced_abi} {\n-\t\tset matches 0\n-\t    }\n-\t} elseif {[regexp -- {^-mips(.*)} $flag dummy isa]\n-\t\t  || [regexp -- {^-march=mips(.*)} $flag dummy isa]} {\n-\t    if {![regexp {(.*)r(.*)} $isa dummy isa isa_rev]} {\n-\t\tset isa_rev 1\n-\t    }\n-\t    if {($isa != $mips_isa || $isa_rev != $mips_isa_rev)\n-\t\t&& $mips_forced_isa} {\n-\t\tset matches 0\n+    # Work out information about the current architecture.\n+    set arch_test_option_p [mips_test_option_p options arch]\n+    set arch [mips_option options arch]\n+    set isa [mips_arch_info $arch isa]\n+    set isa_rev [mips_arch_info $arch isa_rev]\n+\n+    # If the test forces a 32-bit architecture, force -mgp32.\n+    # Force the current -mgp setting otherwise; if we don't,\n+    # some configurations would make a 64-bit architecture\n+    # imply -mgp64.\n+    if { $arch_test_option_p } {\n+\tif { [mips_32bit_arch_p $arch] } {\n+\t    mips_make_test_option options \"-mgp32\"\n+\t} else {\n+\t    mips_make_test_option options [mips_option options gp]\n+\t}\n+    }\n+\n+    # We've now fixed the GP register size.  Make it easily available.\n+    set gp_size [expr { [mips_have_option_p options \"-mgp32\"] ? 32 : 64 }]\n+\n+    # Handle dependencies between the pre-arch options and the arch option.\n+    # This should mirror the arch and post-arch code below.\n+    if { !$arch_test_option_p } {\n+\t# We need a revision 2 or better ISA for:\n+\t#\n+\t#   - the combination of -mgp32 -mfp64\n+\t#   - the DSP ASE\n+\tif { $isa_rev < 2\n+\t     && (($gp_size == 32 && [mips_have_test_option_p options \"-mfp64\"])\n+\t\t || [mips_have_test_option_p options \"-mdsp\"]\n+\t\t || [mips_have_test_option_p options \"-mdspr2\"]) } {\n+\t    if { $gp_size == 32 } {\n+\t\tmips_make_test_option options \"-mips32r2\"\n+\t    } else {\n+\t\tmips_make_test_option options \"-mips64r2\"\n \t    }\n-\t} elseif {[regexp -- {^-march=(.*)} $flag dummy arch]} {\n-\t    if {$arch != $mips_arch && $mips_forced_isa} {\n-\t\tset matches 0\n+        # We need a MIPS32 or MIPS64 ISA for:\n+\t#\n+        #   - paired-single instructions(*)\n+        #\n+\t# (*) Note that we don't support MIPS V at the moment.\n+\t} elseif { $isa_rev < 1\n+\t\t   && [mips_have_test_option_p options \"-mpaired-single\"] } {\n+\t    if { $gp_size == 32 } {\n+\t\tmips_make_test_option options \"-mips32\"\n+\t    } else {\n+\t\tmips_make_test_option options \"-mips64\"\n \t    }\n-\t} elseif {[regexp -- {^-m(hard|soft)-float} $flag dummy float]} {\n-\t    if {$mips_float != $float && $mips_forced_float} {\n-\t\tset matches 0\n+        # We need MIPS III or higher for:\n+\t#\n+\t#   - the \"cache\" instruction\n+\t} elseif { $isa < 3\n+\t\t   && ([mips_have_test_option_p options \\\n+\t\t\t    \"-mr10k-cache-barrier=load-store\"]\n+\t\t       || [mips_have_test_option_p options \\\n+\t\t\t       \"-mr10k-cache-barrier=store\"]) } {\n+\t    mips_make_test_option options \"-mips3\"\n+        # We need MIPS II or higher for:\n+\t#\n+\t#   - branch-likely instructions(*)\n+        #\n+\t# (*) needed by both -mbranch-likely and -mfix-r10000\n+\t} elseif { $isa < 2\n+\t\t   && ([mips_have_test_option_p options \"-mbranch-likely\"]\n+\t\t       || [mips_have_test_option_p options \"-mfix-r10000\"]) } {\n+\t    mips_make_test_option options \"-mips2\"\n+\t# Check whether we need to switch from a 32-bit processor to the\n+\t# \"nearest\" 64-bit processor.\n+\t} elseif { $gp_size == 64 && [mips_32bit_arch_p $arch] } {\n+\t    if { $isa_rev == 0 } {\n+\t\tmips_make_test_option options \"-mips3\"\n+\t    } elseif { $isa_rev == 1 } {\n+\t\tmips_make_test_option options \"-mips64\"\n+\t    } else {\n+\t\tmips_make_test_option options \"-mips64r$isa_rev\"\n \t    }\n-\t} elseif {[regexp -- {^-(EB|meb)$} $flag]} {\n-\t    if {$mips_forced_le} {\n-\t\tset matches 0\n+\t}\n+\tunset arch\n+\tunset isa\n+\tunset isa_rev\n+    }\n+\n+    # Set an appropriate ABI, handling dependencies between the pre-abi\n+    # options and the abi options.  This should mirror the abi and post-abi\n+    # code below.\n+    if { !$abi_test_option_p } {\n+\tif { ($eabi_p\n+\t      && ([mips_have_option_p options \"-mabicalls\"]\n+\t\t  || ($gp_size == 32\n+\t\t      && [mips_have_option_p options \"-mfp64\"]))) } {\n+\t    # EABI doesn't support -mabicalls.\n+\t    # EABI doesn't support the combination -mgp32 -mfp64.\n+\t    set force_abi 1\n+\t} elseif { [mips_have_option_p options \"-mips16\"]\n+\t\t   && ![mips_same_option_p $abi \"-mabi=32\"]\n+\t\t   && ![mips_same_option_p $abi \"-mabi=o64\"]\n+\t\t   && (![mips_have_option_p options \"addressing=absolute\"]\n+\t\t       || [mips_have_option_p options \"-mhard-float\"]) } {\n+\t    # -mips16 -mhard-float requires o32 or o64.\n+\t    # -mips16 PIC requires o32 or o64.\n+\t    set force_abi 1\n+\t} else {\n+\t    set force_abi 0\n+\t}\n+\tif { $gp_size == 32 } {\n+\t    if { $force_abi || [mips_64bit_abi_p $abi] } {\n+\t\tmips_make_test_option options \"-mabi=32\"\n \t    }\n-\t} elseif {[regexp -- {^-(EL|mel)$} $flag]} {\n-\t    if {$mips_forced_be} {\n-\t\tset matches 0\n+\t} else {\n+\t    if { $force_abi || [mips_32bit_abi_p $abi] } {\n+\t\t# All configurations should have an assembler that\n+\t\t# supports o64, since it requires the same BFD target\n+\t\t# vector as o32.  In contrast, many assembler\n+\t\t# configurations do not have n32 or n64 support.\n+\t\tmips_make_test_option options \"-mabi=o64\"\n \t    }\n-\t} elseif {[regexp -- {^-(G|m(|no-)((extern|local)-sdata|gpopt))} $flag]} {\n-\t    if {$flag != \"-G0\"} {\n-\t\tappend flags \" -mno-abicalls\"\n+\t}\n+\tunset abi\n+\tunset eabi_p\n+    }\n+\n+    # Handle dependencies between the abi options and the post-abi options.\n+    # This should mirror the abi and pre-abi code above.\n+    if { $abi_test_option_p } {\n+\tif { $eabi_p } {\n+\t    mips_make_test_option options \"-mno-abicalls\"\n+\t    if { $gp_size == 32 } {\n+\t\tmips_make_test_option options \"-mfp32\"\n \t    }\n-\t    if {$mips_forced_gp} {\n-\t\tset matches 0\n+\t}\n+\tif { [mips_have_option_p options \"-mips16\"]\n+\t     && ![mips_same_option_p $abi \"-mabi=32\"]\n+\t     && ![mips_same_option_p $abi \"-mabi=o64\"]\n+\t     && (![mips_have_option_p options \"addressing=absolute\"]\n+\t\t || [mips_have_option_p options \"-mhard-float\"]) } {\n+\t    if { [mips_test_option_p options mips16] } {\n+\t\tmips_make_test_option options \"addressing=absolute\"\n+\t\tmips_make_test_option options \"-msoft-float\"\n+\t    } else {\n+\t\tmips_make_test_option options \"-mno-mips16\"\n \t    }\n-\t} elseif {[regexp -- {^-mabicalls$} $flag]} {\n-\t    if {$mips_forced_no_abicalls} {\n-\t\tset matches 0\n+\t}\n+\tunset abi\n+\tunset eabi_p\n+    }\n+\n+    # Handle dependencies between the arch option and the post-arch options.\n+    # This should mirror the arch and pre-arch code above.\n+    if { $arch_test_option_p } {\n+\tif { $isa < 2 } {\n+\t    mips_make_test_option options \"-mno-branch-likely\"\n+\t    mips_make_test_option options \"-mno-fix-r10000\"\n+\t}\n+\tif { $isa < 3 } {\n+\t    mips_make_test_option options \"-mr10k-cache-barrier=none\"\n+\t}\n+\tif { $isa_rev < 1 } {\n+\t    mips_make_test_option options \"-mno-paired-single\"\n+\t}\n+\tif { $isa_rev < 2 } {\n+\t    if { $gp_size == 32 } {\n+\t\tmips_make_test_option options \"-mfp32\"\n \t    }\n-\t} elseif {[regexp -- {^-mshared$} $flag]} {\n-\t    if {$mips_forced_no_shared} {\n-\t\tset matches 0\n+\t    mips_make_test_option options \"-mno-dsp\"\n+\t    mips_make_test_option options \"-mno-dspr2\"\n+\t}\n+\tunset arch\n+\tunset isa\n+\tunset isa_rev\n+    }\n+\n+    # Handle dependencies between options on the right of the diagram.\n+    mips_option_dependency options \"-mno-explicit-relocs\" \"-mgpopt\"\n+    switch -- [mips_test_option options small-data] {\n+\t\"\" -\n+\t-G0 {}\n+\tdefault {\n+\t    mips_make_test_option options \"-mno-abicalls\"\n+\t}\n+    }\n+    if { [mips_have_option_p options \"-mabicalls\"] } {\n+\tmips_option_dependency options \"addressing=absolute\" \"-mplt\"\n+    }\n+    mips_option_dependency options \"-mplt\" \"-msym32\"\n+    mips_option_dependency options \"-mplt\" \"-mno-shared\"\n+    mips_option_dependency options \"-mno-shared\" \"-fno-pic\"\n+    mips_option_dependency options \"-mfp32\" \"-mno-paired-single\"\n+    mips_option_dependency options \"-msoft-float\" \"-mno-paired-single\"\n+    mips_option_dependency options \"-mno-paired-single\" \"-mno-mips3d\"\n+\n+    # If the test requires an unsupported option, change run tests\n+    # to link tests.\n+\n+    switch -- [lindex $do_what 0] {\n+\trun {\n+\t    set option [mips_first_unsupported_option options]\n+\t    if { ![string equal $option \"\"] } {\n+\t\tset do_what [lreplace $do_what 0 0 link]\n+\t\tverbose -log \"Downgraded to a 'link' test due to unsupported option '$option'\"\n \t    }\n-\t} elseif {[regexp -- {^-mexplicit-relocs$} $flag]} {\n-\t    if {$mips_forced_no_er} {\n-\t\tset matches 0\n+\t}\n+    }\n+\n+    # If the test has overridden a option that changes the ABI,\n+    # downgrade a link or execution test to an assembler test.\n+    foreach group $mips_abi_groups {\n+\tset old_option [mips_original_option $group]\n+\tset new_option [mips_option options $group]\n+\tif { ![mips_same_option_p $old_option $new_option] } {\n+\t    switch -- [lindex $do_what 0] {\n+\t\tlink -\n+\t\trun {\n+\t\t    set do_what [lreplace $do_what 0 0 assemble]\n+\t\t    verbose -log \"Downgraded to an 'assemble' test due to incompatible $group option ($old_option changed to $new_option)\"\n+\t\t}\n \t    }\n+\t    break\n \t}\n     }\n-    if {$matches} {\n-\tappend extra_tool_flags \" \" $flags\n-    } else {\n-\tset do_what [list [lindex $do_what 0] \"N\" \"P\"]\n+\n+    # Add all options to the dg variable.\n+    set options(explicit_p,addressing) 0\n+    foreach { group regexp } $mips_option_groups {\n+\tif { $options(explicit_p,$group) } {\n+\t    append extra_tool_flags \" \" $options(option,$group)\n+\t}\n+    }\n+\n+    # If the test is MIPS16-compatible, provide a counterpart to the\n+    # NOMIPS16 convenience macro.\n+    if { [mips_have_test_option_p options \"-mips16\"] } {\n+\tappend extra_tool_flags \" -DMIPS16=__attribute__((mips16))\"\n+    }\n+\n+    # Use our version of gcc-dg-test for this test.\n+    if { ![string equal [info procs \"mips-gcc-dg-test\"] \"\"] } {\n+\trename gcc-dg-test mips-old-gcc-dg-test\n+\trename mips-gcc-dg-test gcc-dg-test\n     }\n }\n \n-setup_mips_tests\n+# A version of gcc-dg-test that is used by dg-options tests.\n+proc mips-gcc-dg-test { prog do_what extra_tool_flags } {\n+    global board_info\n+    global mips_extra_options\n+\n+    # Override the user's chosen test options with the combined test/user\n+    # version.\n+    mips_push_test_options saved_options $mips_extra_options\n+    set result [gcc-dg-test-1 gcc_target_compile $prog \\\n+\t\t    $do_what $extra_tool_flags]\n+    mips_pop_test_options saved_options\n+\n+    # Restore the usual gcc-dg-test.\n+    rename gcc-dg-test mips-gcc-dg-test\n+    rename mips-old-gcc-dg-test gcc-dg-test\n+\n+    return $result\n+}\n \n dg-init\n-# MIPS16 is defined in add_options_for_mips16_attribute.\n+mips-dg-init\n+# MIPS16 is defined by \"-mips16\" or \"(-mips16)\" in dg-options.\n dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c]] \"\" \\\n     \"-DNOMIPS16=__attribute__((nomips16))\"\n+mips-dg-finish\n dg-finish"}, {"sha": "bc81cfa7e03727602c908f55d8bbab57817befbd", "filename": "gcc/testsuite/gcc.target/mips/mips16-attributes-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16-attributes-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16-attributes-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16-attributes-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,5 @@\n-/* { dg-do compile { target mips16_attribute } } */\n /* { dg-skip-if \"\" { *-*-* } { \"-mflip-mips16\" } { \"\" } } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-options \"(-mips16)\" } */\n \n void f1 (void);\n void __attribute__((mips16)) f1 (void) {} /* { dg-error \"conflicting\" } */"}, {"sha": "747450390568cd617ce90627ce4aa738c1141b3e", "filename": "gcc/testsuite/gcc.target/mips/mips16-attributes-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16-attributes-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16-attributes-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16-attributes-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-options \"(-mips16)\" } */\n /* We should be able to assign mips16 and nomips16 functions to a pointer.  */\n void __attribute__((mips16)) f1 (void);\n void (*ptr1) (void) = f1;"}, {"sha": "28bb9aae7fa23efe2514b987d5b5e874a7311ce8", "filename": "gcc/testsuite/gcc.target/mips/mips16-attributes.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16-attributes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16-attributes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16-attributes.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,8 +1,8 @@\n /* Verify that mips16 and nomips16 attributes work, checking all combinations\n    of calling a nomips16/mips16/default function from a nomips16/mips16/default\n    function.  */\n-/* { dg-do run { target { mipsisa*-*-elf* && mips16_attribute } } } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-do run } */\n+/* { dg-options \"(-mips16)\" } */\n \n #include <stdlib.h>\n "}, {"sha": "d077f2fae6ed21d65d0afe5c5f7a4de6d5f901c6", "filename": "gcc/testsuite/gcc.target/mips/mips16e-extends.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16e-extends.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16e-extends.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips16e-extends.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,5 @@\n-/* { dg-do compile { target mips16_attribute } } */\n-/* { dg-mips-options \"-Os -march=mips32\" } */\n-/* { dg-add-options mips16_attribute } */\n+/* -mlong32 added because of PR target/38595.  */\n+/* { dg-options \"(-mips16) -Os isa_rev>=1 -mlong32\" } */\n \n MIPS16 short cksum16 (unsigned long n)\n {"}, {"sha": "e6a271e246bbf2bb641c757a7a46e2ceb76d545e", "filename": "gcc/testsuite/gcc.target/mips/mips32-dsp-run.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp-run.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp-run.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp-run.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,6 @@\n /* Test MIPS32 DSP instructions */\n-/* { dg-do run { target mipsisa32r2*-*-* } } */\n-/* { dg-mips-options \"-march=mips32r2 -mdsp -O2\" } */\n+/* { dg-do run } */\n+/* { dg-options \"-mdsp -O2\" } */\n \n #include <stdlib.h>\n #include <stdio.h>"}, {"sha": "cbf347b29c9d35c5c827de37e0b53e436032a2c8", "filename": "gcc/testsuite/gcc.target/mips/mips32-dsp-type.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp-type.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp-type.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp-type.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,6 @@\n /* Test MIPS32 DSP instructions */\n /* { dg-do compile } */\n-/* { dg-mips-options \"-march=mips32 -mdsp\" } */\n+/* { dg-options \"-mdsp\" } */\n /* { dg-final { scan-assembler \"addq.ph\" } } */\n /* { dg-final { scan-assembler \"addu.qb\" } } */\n /* { dg-final { scan-assembler \"subq.ph\" } } */"}, {"sha": "c00ea3e0b494aeb47764bc252bb0c5013245de03", "filename": "gcc/testsuite/gcc.target/mips/mips32-dsp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dsp.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,6 @@\n /* Test MIPS32 DSP instructions */\n /* { dg-do compile } */\n-/* { dg-mips-options \"-march=mips32 -mdsp\" } */\n+/* { dg-options \"-mgp32 -mdsp\" } */\n /* { dg-final { scan-assembler \"addq.ph\" } } */\n /* { dg-final { scan-assembler \"addq_s.ph\" } } */\n /* { dg-final { scan-assembler \"addq_s.w\" } } */"}, {"sha": "9501e9cbeac31f5592d0c2dfefdcd717cfea9125", "filename": "gcc/testsuite/gcc.target/mips/mips32-dspr2-type.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dspr2-type.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dspr2-type.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dspr2-type.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,6 @@\n /* Test MIPS32 DSP REV 2 instructions */\n /* { dg-do compile } */\n-/* { dg-mips-options \"-march=mips32r2 -mdspr2\" } */\n+/* { dg-options \"-mdspr2\" } */\n /* { dg-final { scan-assembler \"\\tmul.ph\\t\" } } */\n \n typedef short v2hi __attribute__ ((vector_size(4)));"}, {"sha": "1b3031ff19d3ceddc87a1b63d1b82fe3ae970afc", "filename": "gcc/testsuite/gcc.target/mips/mips32-dspr2.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dspr2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dspr2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32-dspr2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,6 @@\n /* Test MIPS32 DSP REV 2 instructions */\n-/* { dg-do run { target mipsisa32r2*-*-* } } */\n-/* { dg-mips-options \"-march=mips32r2 -mdspr2 -O2\" } */\n+/* { dg-do run } */\n+/* { dg-options \"-mdspr2 -O2\" } */\n \n typedef signed char v4q7 __attribute__ ((vector_size(4)));\n typedef signed char v4i8 __attribute__ ((vector_size(4)));\n@@ -13,7 +13,7 @@ typedef long long a64;\n \n void abort (void);\n \n-void test_MIPS_DSPR2 (void);\n+NOMIPS16 void test_MIPS_DSPR2 (void);\n \n int little_endian;\n \n@@ -28,7 +28,7 @@ int main ()\n   return 0;\n }\n \n-void test_MIPS_DSPR2 ()\n+NOMIPS16 void test_MIPS_DSPR2 ()\n {\n   v4q7 v4q7_a,v4q7_b,v4q7_c,v4q7_r,v4q7_s;\n   v4i8 v4i8_a,v4i8_b,v4i8_c,v4i8_r,v4i8_s;"}, {"sha": "cf57323db1acaf07114d7e40bdd6ee95cc819c10", "filename": "gcc/testsuite/gcc.target/mips/mips32r2-mxhc1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32r2-mxhc1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32r2-mxhc1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips32r2-mxhc1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,14 +1,14 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O -mabi=32 -mfp64\" } */\n+/* { dg-options \"-O -mabi=32 -mfp64\" } */\n /* { dg-final { scan-assembler \"mthc1\" } } */\n /* { dg-final { scan-assembler \"mfhc1\" } } */\n \n-double func1 (long long a)\n+NOMIPS16 double func1 (long long a)\n {\n   return a;\n }\n \n-long long func2 (double b)\n+NOMIPS16 long long func2 (double b)\n {\n   return b;\n }"}, {"sha": "1a930c9ac06cc022b766e71df8929bf9e5f7cc36", "filename": "gcc/testsuite/gcc.target/mips/movcc-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmovcc-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmovcc-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmovcc-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -mips4\" } */\n+/* { dg-options \"-O2 isa>=4\" } */\n /* { dg-final { scan-assembler \"movz\" } } */\n /* { dg-final { scan-assembler \"movn\" } } */\n "}, {"sha": "d42acc1d77caecee2dd2c9b5a6f77631357d085e", "filename": "gcc/testsuite/gcc.target/mips/movcc-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmovcc-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmovcc-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmovcc-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -mips4\" } */\n+/* { dg-options \"-O2 isa>=4\" } */\n /* { dg-final { scan-assembler \"movz\" } } */\n /* { dg-final { scan-assembler \"movn\" } } */\n "}, {"sha": "e6481777addb0076e34c23e697ed55290aba9bf9", "filename": "gcc/testsuite/gcc.target/mips/movcc-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmovcc-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmovcc-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmovcc-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -mips4 -mhard-float\" } */\n+/* { dg-options \"-O2 isa>=4 -mhard-float\" } */\n /* { dg-final { scan-assembler \"movt\" } } */\n /* { dg-final { scan-assembler \"movf\" } } */\n /* { dg-final { scan-assembler \"movz.s\" } } */"}, {"sha": "803ea77df742e14a951ad772996d879c6d2ab17c", "filename": "gcc/testsuite/gcc.target/mips/msub-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=vr5400 -mgp32\" } */\n+/* { dg-options \"-O2 -march=vr5400 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmsac\\t\\\\\\$0,\" 2 } } */\n \n NOMIPS16 long long"}, {"sha": "e6cdc2c1a9a91aa566fcf44cb6059dab509c800d", "filename": "gcc/testsuite/gcc.target/mips/msub-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=vr5500 -mgp32\" } */\n+/* { dg-options \"-O2 -march=vr5500 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmsub\\t\" 2 } } */\n \n NOMIPS16 long long"}, {"sha": "c44f34f4f0eccc5149a85648e4c10e167f4237eb", "filename": "gcc/testsuite/gcc.target/mips/msub-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -mips32 -mgp32\" } */\n+/* { dg-options \"-O2 isa_rev>=1 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmsub\\t\" 2 } } */\n \n NOMIPS16 long long"}, {"sha": "d41c31299144ba145fd72e9a4d67099c0cc896b7", "filename": "gcc/testsuite/gcc.target/mips/msub-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-4.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -mips32r2 -mdspr2 -mgp32\" } */\n+/* { dg-options \"-O2 -mdspr2 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmsub\\t\\\\\\$ac\" 2 } } */\n \n NOMIPS16 long long"}, {"sha": "dcb124a71983cca773408d2f3818754b83c6eab3", "filename": "gcc/testsuite/gcc.target/mips/msub-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-5.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O2 -march=5kc\" } */\n+/* { dg-options \"-O2 -march=5kc\" } */\n /* { dg-final { scan-assembler-times \"\\tmsub\\t\" 4 } } */\n /* { dg-final { scan-assembler-not \"\\tmtlo\\t\" } } */\n /* { dg-final { scan-assembler-times \"\\tmflo\\t\" 3 } } */"}, {"sha": "ee4ca3d8da0631860ffe632fb49065de798806e7", "filename": "gcc/testsuite/gcc.target/mips/msub-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-6.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O2 -march=5kc\" } */\n+/* { dg-options \"-O2 -march=5kc\" } */\n /* { dg-final { scan-assembler-not \"\\tmsub\\t\" } } */\n /* { dg-final { scan-assembler \"\\tmul\\t\" } } */\n /* { dg-final { scan-assembler \"\\tsubu\\t\" } } */"}, {"sha": "ca90cee9ea56cb6b25092617150c17f1b2469ac1", "filename": "gcc/testsuite/gcc.target/mips/msub-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-7.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* -mlong32 added because of PR target/38598.  */\n-/* { dg-mips-options \"-O2 -march=5kc -mlong32\" } */\n+/* { dg-options \"-O2 -march=5kc -mlong32\" } */\n /* { dg-final { scan-assembler-not \"\\tmul\\t\" } } */\n /* { dg-final { scan-assembler \"\\tmsub\\t\" } } */\n "}, {"sha": "49d67f24a6c9a7cf9255915d20ea41dbe0deb726", "filename": "gcc/testsuite/gcc.target/mips/msub-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsub-8.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O2 -march=5kc\" } */\n+/* { dg-options \"-O2 -march=5kc\" } */\n /* { dg-final { scan-assembler \"\\tmul\\t\" } } */\n /* { dg-final { scan-assembler-not \"\\tmsub\\t\" } } */\n /* { dg-final { scan-assembler-not \"\\tmtlo\\t\" } } */"}, {"sha": "ae80403464400df4db4308d7e8cb207b5e714ae6", "filename": "gcc/testsuite/gcc.target/mips/msubu-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=vr5400 -mgp32\" } */\n+/* { dg-options \"-O2 -march=vr5400 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmsacu\\t\\\\\\$0,\" 2 } } */\n \n typedef unsigned int ui;"}, {"sha": "186dc47d6f7225bcbd9f2d282eaf175f291ff668", "filename": "gcc/testsuite/gcc.target/mips/msubu-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=vr5500 -mgp32\" } */\n+/* { dg-options \"-O2 -march=vr5500 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmsubu\\t\" 2 } } */\n \n typedef unsigned int ui;"}, {"sha": "272c64818e31a69157cb08ee757950fa6cc2cb12", "filename": "gcc/testsuite/gcc.target/mips/msubu-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -mips32 -mgp32\" } */\n+/* { dg-options \"-O2 isa_rev>=1 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmsubu\\t\" 2 } } */\n \n typedef unsigned int ui;"}, {"sha": "8f5fd647b37931e6a0b208f389d339a7a2df338e", "filename": "gcc/testsuite/gcc.target/mips/msubu-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsubu-4.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -mips32r2 -mdspr2 -mgp32\" } */\n+/* { dg-options \"-O2 -mdspr2 -mgp32\" } */\n /* { dg-final { scan-assembler-times \"\\tmsubu\\t\\\\\\$ac\" 2 } } */\n \n typedef unsigned int ui;"}, {"sha": "ac0cc1ef79b1666ca8c49346d4105faf730f7b1a", "filename": "gcc/testsuite/gcc.target/mips/near-far-1.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnear-far-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnear-far-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnear-far-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-mlong-calls\" } */\n-/* { dg-require-effective-target nonpic } */\n+/* { dg-options \"-mlong-calls addressing=absolute\" } */\n \n extern int long_call_func () __attribute__((long_call));\n extern int far_func () __attribute__((far));"}, {"sha": "c954b444cb021235706724e47fd86cba3f884968", "filename": "gcc/testsuite/gcc.target/mips/near-far-2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnear-far-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnear-far-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnear-far-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-mno-long-calls\" } */\n-/* { dg-require-effective-target nonpic } */\n+/* { dg-options \"-mno-long-calls addressing=absolute\" } */\n \n extern int long_call_func () __attribute__((long_call));\n extern int far_func () __attribute__((far));"}, {"sha": "f4ae791f1a0e325913474b9fd1d48bdd726fc956", "filename": "gcc/testsuite/gcc.target/mips/near-far-3.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnear-far-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnear-far-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnear-far-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-mlong-calls -O2\" } */\n-/* { dg-require-effective-target nonpic } */\n+/* { dg-options \"-mlong-calls addressing=absolute -O2\" } */\n \n NOMIPS16 extern int long_call_func () __attribute__((long_call));\n NOMIPS16 extern int far_func () __attribute__((far));"}, {"sha": "b9aa21fe4f4c6a91e7e75f0e0e1705cc93ae517c", "filename": "gcc/testsuite/gcc.target/mips/near-far-4.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnear-far-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnear-far-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnear-far-4.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-mno-long-calls -O2\" } */\n-/* { dg-require-effective-target nonpic } */\n+/* { dg-options \"-mno-long-calls addressing=absolute -O2\" } */\n \n NOMIPS16 extern int long_call_func () __attribute__((long_call));\n NOMIPS16 extern int far_func () __attribute__((far));"}, {"sha": "20691ff2c4b9a9d8ce456c0b2ae26d5171ea19ac", "filename": "gcc/testsuite/gcc.target/mips/neg-abs-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fneg-abs-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fneg-abs-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fneg-abs-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,7 +1,7 @@\n /* Make sure that we use abs.fmt and neg.fmt when the signs of NaNs don't\n    matter.  */\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -mhard-float -ffinite-math-only\" } */\n+/* { dg-options \"-O2 -mhard-float -ffinite-math-only\" } */\n /* { dg-final { scan-assembler \"neg.s\" } } */\n /* { dg-final { scan-assembler \"neg.d\" } } */\n /* { dg-final { scan-assembler \"abs.s\" } } */"}, {"sha": "67125f78a67171d04275d4399cd7c97e2e3335d3", "filename": "gcc/testsuite/gcc.target/mips/neg-abs-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fneg-abs-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fneg-abs-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fneg-abs-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,7 +1,7 @@\n /* Make sure that we avoid abs.fmt and neg.fmt when the signs of NaNs\n    matter.  */\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -mhard-float -fno-finite-math-only\" } */\n+/* { dg-options \"-O2 -mhard-float -fno-finite-math-only\" } */\n /* { dg-final { scan-assembler-not \"neg.s\" } } */\n /* { dg-final { scan-assembler-not \"neg.d\" } } */\n /* { dg-final { scan-assembler-not \"abs.s\" } } */"}, {"sha": "123d48799ed8160e219f690c0e0d77ad64085074", "filename": "gcc/testsuite/gcc.target/mips/nmadd-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -ffast-math -mips4 -mhard-float\" } */\n+/* { dg-options \"-O2 -ffast-math isa=4 -mhard-float\" } */\n /* { dg-final { scan-assembler \"nmadd.s\" } } */\n /* { dg-final { scan-assembler \"nmadd.d\" } } */\n /* { dg-final { scan-assembler \"nmsub.s\" } } */"}, {"sha": "90e4d838d892e46af34a67349b8ea3142f84e25e", "filename": "gcc/testsuite/gcc.target/mips/nmadd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -fno-fast-math -ffinite-math-only -mips4 -mhard-float\" } */\n+/* { dg-options \"-O2 -fno-fast-math -ffinite-math-only isa=4 -mhard-float\" } */\n /* { dg-final { scan-assembler \"nmadd.s\" } } */\n /* { dg-final { scan-assembler \"nmadd.d\" } } */\n /* { dg-final { scan-assembler \"nmsub.s\" } } */"}, {"sha": "df726186128a83bf8d2f4bd381e43724963dd0f1", "filename": "gcc/testsuite/gcc.target/mips/nmadd-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fnmadd-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,7 +1,7 @@\n /* The same code as nmadd-2.c, but compiled with -fno-finite-math-only.\n    We can't use nmadd and nmsub in that case.  */\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -fno-fast-math -fno-finite-math-only -mips4 -mhard-float\" } */\n+/* { dg-options \"-O2 -fno-fast-math -fno-finite-math-only isa=4 -mhard-float\" } */\n /* { dg-final { scan-assembler-not \"nmadd.s\" } } */\n /* { dg-final { scan-assembler-not \"nmadd.d\" } } */\n /* { dg-final { scan-assembler-not \"nmsub.s\" } } */"}, {"sha": "ee7f3d54d5d93b685a7d0daddcc4558e955f7359", "filename": "gcc/testsuite/gcc.target/mips/no-smartmips-lwxs.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fno-smartmips-lwxs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fno-smartmips-lwxs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fno-smartmips-lwxs.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O -mno-smartmips\" } */\n+/* { dg-options \"-O -mno-smartmips\" } */\n \n NOMIPS16 int scaled_indexed_word_load (int a[], int b)\n {"}, {"sha": "d1f50a8fbefc3326b0bff132d4a81eb8e0b3aa4d", "filename": "gcc/testsuite/gcc.target/mips/no-smartmips-ror-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fno-smartmips-ror-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fno-smartmips-ror-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fno-smartmips-ror-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O -mno-smartmips -march=mips32\" } */\n+/* { dg-options \"-O -mno-smartmips -march=mips32\" } */\n \n NOMIPS16 int rotate_left (unsigned a, unsigned s)\n {"}, {"sha": "8dd5be1676598668967e6d10db3a4596311afc68", "filename": "gcc/testsuite/gcc.target/mips/octeon-baddu-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-baddu-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-baddu-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-baddu-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O -march=octeon\" } */\n+/* { dg-options \"-O -march=octeon\" } */\n /* { dg-final { scan-assembler-times \"\\tbaddu\\t\" 4 } } */\n /* { dg-final { scan-assembler-not \"\\tandi\\t\" } } */\n "}, {"sha": "6629dbb5844889576dee181a8ffbd1075d152d64", "filename": "gcc/testsuite/gcc.target/mips/octeon-bbit-1.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-bbit-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-bbit-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-bbit-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,9 +1,11 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=octeon\" } */\n+/* { dg-options \"-O2 -march=octeon\" } */\n /* { dg-final { scan-assembler-times \"\\tbbit1\\t\" 4 } } */\n /* { dg-final { scan-assembler-times \"\\tbbit0\\t\" 2 } } */\n /* { dg-final { scan-assembler-not \"andi\\t\" } } */\n \n+NOMIPS16 void foo (void);\n+\n NOMIPS16 void\n f1 (long long i)\n {\n@@ -51,5 +53,5 @@ NOMIPS16 void\n f6 ()\n {\n   if (!test_bit(0, &r))\n-    g ();\n+    foo ();\n }"}, {"sha": "55bf23eae4e74ecb849d201469bd53fb7519ed33", "filename": "gcc/testsuite/gcc.target/mips/octeon-bbit-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-bbit-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-bbit-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-bbit-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=octeon -mbranch-likely\" } */\n+/* { dg-options \"-O2 -march=octeon -mbranch-likely\" } */\n /* { dg-final { scan-assembler \"\\tbbit\\[01\\]\\t\" } } */\n /* { dg-final { scan-assembler-not \"\\tbbit\\[01\\]l\\t\" } } */\n /* { dg-final { scan-assembler \"\\tbnel\\t\" } } */"}, {"sha": "bcc37d29e34ba71dc9f408adef2f2d700f34c3f8", "filename": "gcc/testsuite/gcc.target/mips/octeon-bbit-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-bbit-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-bbit-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-bbit-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -11,7 +11,7 @@\n \n   which does not get recognized as a valid bbit pattern.  The\n   middle-end should be able to simplify this further.  */\n-/* { dg-mips-options \"-O2 -march=octeon -meb\" } */\n+/* { dg-options \"-O2 -march=octeon -meb\" } */\n \n /* { dg-final { scan-assembler-times \"\\tbbit\\[01\\]\\t|\\tbgez\\t\" 2 } } */\n /* { dg-final { scan-assembler-not \"ext\\t\" } } */"}, {"sha": "ac85e23784640268aecbca43d81c5a8e63dd34b2", "filename": "gcc/testsuite/gcc.target/mips/octeon-cins-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-cins-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-cins-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-cins-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* The tests also work with -mgp32.  For long long tests, only one of\n    the 32-bit parts is used.  */\n-/* { dg-mips-options \"-O -march=octeon\" } */\n+/* { dg-options \"-O -march=octeon\" } */\n /* { dg-final { scan-assembler-times \"\\tcins\\t\" 3 } } */\n /* { dg-final { scan-assembler-not \"\\tandi\\t|sll\\t\" } } */\n "}, {"sha": "2dcff0aad1c11d1a2b7434e10ea56d2ad00eca26", "filename": "gcc/testsuite/gcc.target/mips/octeon-cins-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-cins-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-cins-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-cins-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O -march=octeon -mgp64\" } */\n+/* { dg-options \"-O -march=octeon -mgp64\" } */\n /* { dg-final { scan-assembler-not \"\\tcins\\t\" } } */\n \n NOMIPS16 unsigned"}, {"sha": "b8b8c1bc32470796d9842c3b25649ef1b18656d3", "filename": "gcc/testsuite/gcc.target/mips/octeon-dmul-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-dmul-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-dmul-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-dmul-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-march=octeon -mgp64\" } */\n+/* { dg-options \"-march=octeon -mgp64\" } */\n /* { dg-final { scan-assembler \"\\tdmul\\t\" } } */\n /* { dg-final { scan-assembler-not \"\\tdmult\\t\" } } */\n /* { dg-final { scan-assembler-not \"\\tmflo\\t\" } } */"}, {"sha": "6b2308c0bba51683ae6f79078234d9a9ed77fed5", "filename": "gcc/testsuite/gcc.target/mips/octeon-dmul-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-dmul-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-dmul-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-dmul-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-march=octeon -mgp64\" } */\n+/* { dg-options \"-march=octeon -mgp64\" } */\n /* { dg-final { scan-assembler-not \"\\tdmul\" } } */\n \n NOMIPS16 long long"}, {"sha": "b0f4be143fc2fd21f9ab471493891751c11d3361", "filename": "gcc/testsuite/gcc.target/mips/octeon-exts-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-exts-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-exts-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-exts-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-march=octeon\" } */\n+/* { dg-options \"-march=octeon\" } */\n /* { dg-final { scan-assembler \"\\texts\\t\" } } */\n \n struct foo"}, {"sha": "fc5df639d02bc4d64586da7cc2b4227191ef681f", "filename": "gcc/testsuite/gcc.target/mips/octeon-exts-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-exts-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-exts-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-exts-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O -march=octeon -meb\" } */\n+/* { dg-options \"-O -march=octeon -meb\" } */\n /* { dg-final { scan-assembler-times \"\\texts\\t\" 4 } } */\n \n struct bar"}, {"sha": "9d0e9302a54e0b2facf8bf9f3f138be7c76a9c22", "filename": "gcc/testsuite/gcc.target/mips/octeon-exts-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-exts-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-exts-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-exts-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O -march=octeon -mgp64\" } */\n+/* { dg-options \"-O -march=octeon -mgp64\" } */\n /* { dg-final { scan-assembler-times \"\\texts\\t\" 3 } } */\n \n struct foo"}, {"sha": "7e6a578a19ceec9e310416d1ac0ce951ea32a12d", "filename": "gcc/testsuite/gcc.target/mips/octeon-exts-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-exts-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-exts-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-exts-4.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O -march=octeon -mgp64\" } */\n+/* { dg-options \"-O -march=octeon -mgp64\" } */\n /* { dg-final { scan-assembler-not \"\\tsll\\t\\[^\\n\\]*,0\" } } */\n /* { dg-final { scan-assembler-times \"\\texts\\t\" 6 } } */\n "}, {"sha": "e7a4738b96fbd97b6264f33dc667fb3096eb97ac", "filename": "gcc/testsuite/gcc.target/mips/octeon-exts-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-exts-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-exts-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-exts-5.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,6 @@\n /* -mel version of octeon-exts-2.c.  */\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O -march=octeon -mel\" } */\n+/* { dg-options \"-O -march=octeon -mel\" } */\n /* { dg-final { scan-assembler-times \"\\texts\\t\" 4 } } */\n \n struct bar"}, {"sha": "54d2e9c04aa5a22c3280fff09b5e80de3e800a6a", "filename": "gcc/testsuite/gcc.target/mips/octeon-pop-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-pop-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-pop-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-pop-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O -march=octeon -mgp64\" } */\n+/* { dg-options \"-O -march=octeon -mgp64\" } */\n /* { dg-final { scan-assembler \"\\tpop\\t\" } } */\n /* { dg-final { scan-assembler \"\\tdpop\\t\" } } */\n "}, {"sha": "c07660a2e66ee1f231cd979fe91546fd0c689f80", "filename": "gcc/testsuite/gcc.target/mips/octeon-seq-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,7 +1,7 @@\n /* Check if we expand seq and sne.  */\n \n /* { dg-do compile } */\n-/* { dg-mips-options \"-march=octeon\" } */\n+/* { dg-options \"-march=octeon\" } */\n /* { dg-final { scan-assembler-times \"\\tseq\\t|\\tseqi\\t\" 4 } } */\n /* { dg-final { scan-assembler-times \"\\tsne\\t|\\tsnei\\t\" 4 } } */\n "}, {"sha": "83e068c54fd3f12b89c20dfb6696286b4696da30", "filename": "gcc/testsuite/gcc.target/mips/octeon-seq-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-march=octeon -mgp64\" } */\n+/* { dg-options \"-march=octeon -mgp64\" } */\n /* { dg-final { scan-assembler-times \"\\tseq\\t|\\tseqi\\t\" 3 } } */\n /* { dg-final { scan-assembler-times \"\\tsne\\t|\\tsnei\\t\" 3 } } */\n "}, {"sha": "899f145844bdd5469766f96be065994b738f1ed0", "filename": "gcc/testsuite/gcc.target/mips/octeon-seq-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O -march=octeon -mgp64\" } */\n+/* { dg-options \"-O -march=octeon -mgp64\" } */\n \n /* { dg-final { scan-assembler-not \"and\\t\\|andi\\t\\|ext\\t\\|sll\\t\\|srl\\t\" } } */\n /* { dg-final { scan-assembler-times \"\\tseqi\\t\\|\\tsnei\\t\" 4 } } */"}, {"sha": "e61bcb361c022af5124d6d0c0d92aabcf0324918", "filename": "gcc/testsuite/gcc.target/mips/octeon-seq-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Focteon-seq-4.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=octeon\" } */\n+/* { dg-options \"-O2 -march=octeon\" } */\n /* { dg-final { scan-assembler-not \"xor\" } } */\n \n unsigned"}, {"sha": "25c2e8d4c83a1bec2757ee2415ee6316d0a72fa7", "filename": "gcc/testsuite/gcc.target/mips/pr26765.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr26765.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr26765.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr26765.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -2,7 +2,7 @@\n    This testcase used to trigger an unrecognizable insn.  */\n \n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -w\" } */\n+/* { dg-options \"-O2 -w\" } */\n \n __thread int *a = 0;\n "}, {"sha": "ead5888cc079167247835b728df6b8ee4a3cc547", "filename": "gcc/testsuite/gcc.target/mips/pr33256.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr33256.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr33256.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr33256.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,6 @@\n /* GCC used to report an ICE for this test because we generated a LO_SUM\n    for an illegitimate constant.  */\n-/* { dg-mips-options \"-mabi=64 -msym32 -O2 -EB -mno-abicalls\" } */\n+/* { dg-options \"-mabi=64 -msym32 -O2 -EB -mno-abicalls\" } */\n extern unsigned long a[];\n int b (int);\n "}, {"sha": "78e761f71c5e638b2a26911fa826350f64f87679", "filename": "gcc/testsuite/gcc.target/mips/pr33635-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr33635-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr33635-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr33635-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-mabi=64 -O2\" } */\n+/* { dg-options \"-mabi=64 -O2\" } */\n \n NOMIPS16 long double __powitf2 (long double x, int m)\n {"}, {"sha": "ca6a1e6984d806a5fbc2dd0d04028685f0f2a7c2", "filename": "gcc/testsuite/gcc.target/mips/pr33755.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr33755.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr33755.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr33755.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do link } */\n-/* { dg-mips-options \"-O2\" } */\n+/* { dg-options \"-O2\" } */\n \n volatile int gv;\n const char *ptrs[2];"}, {"sha": "2da436f71b898ec0ccc3b98ac629cd191e404c84", "filename": "gcc/testsuite/gcc.target/mips/pr34831.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr34831.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr34831.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr34831.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-ffast-math -mips64 -mgp32\" } */\n+/* { dg-options \"-ffast-math -mips64 -mgp32\" } */\n \n double\n foo (void)"}, {"sha": "9ecc4d06ea6fb9f7f6cc6c97c2bac5ce6054d3fb", "filename": "gcc/testsuite/gcc.target/mips/pr35802.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr35802.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr35802.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr35802.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O2 -march=74kc -mgp32\" } */\n+/* { dg-options \"-O2 -march=74kc -mgp32\" } */\n __thread int x __attribute__((tls_model(\"initial-exec\")));\n __thread int y __attribute__((tls_model(\"initial-exec\")));\n "}, {"sha": "14e3a75f1bb24bcad8c17a94f201da247e958c60", "filename": "gcc/testsuite/gcc.target/mips/pr37362.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr37362.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr37362.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr37362.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-march=mips64r2 -mabi=n32\" } */\n+/* { dg-options \"-march=mips64r2 -mabi=n32\" } */\n \n typedef float TFtype __attribute__((mode(TF)));\n "}, {"sha": "b271e2bf416b152f60842d4d9f2ea583abd68b0e", "filename": "gcc/testsuite/gcc.target/mips/r10k-cache-barrier-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O2 -mabi=64 -mr10k-cache-barrier=store\" } */\n+/* { dg-options \"-O2 -mabi=64 -mr10k-cache-barrier=store\" } */\n \n /* Test that stores to uncached addresses do not get unnecessary\n    cache barriers.  */"}, {"sha": "68c4b7ef2392103540d44b28a93c7ca5866eb263", "filename": "gcc/testsuite/gcc.target/mips/r10k-cache-barrier-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-10.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O2 -mr10k-cache-barrier=store -mips4 -mbranch-likely -mno-abicalls\" } */\n+/* { dg-options \"-O2 -mr10k-cache-barrier=store -mips4 -mbranch-likely -mno-abicalls\" } */\n int bar (int);\n \n /* Test that code after a branch-likely does not get an unnecessary"}, {"sha": "d1082d910d8825a10282649a7e14bb73a8215704", "filename": "gcc/testsuite/gcc.target/mips/r10k-cache-barrier-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-11.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O2 -mr10k-cache-barrier=store -mno-abicalls\" } */\n+/* { dg-options \"-O2 -mr10k-cache-barrier=store -mno-abicalls\" } */\n \n /* Test that loads are not unnecessarily protected.  */\n "}, {"sha": "d4163910900b8795ceb0bf4cc17a6a351802dc72", "filename": "gcc/testsuite/gcc.target/mips/r10k-cache-barrier-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-12.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O2 -mr10k-cache-barrier=load-store -mno-abicalls\" } */\n+/* { dg-options \"-O2 -mr10k-cache-barrier=load-store -mno-abicalls\" } */\n \n /* Test that loads are correctly protected.  */\n "}, {"sha": "3e955abf549bc7100f04e574c4826138b7b9ed7f", "filename": "gcc/testsuite/gcc.target/mips/r10k-cache-barrier-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-13.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O2 -mr10k-cache-barrier=store\" } */\n+/* { dg-options \"-O2 -mr10k-cache-barrier=store\" } */\n \n /* Test that indirect calls are protected.  */\n "}, {"sha": "1fdcee0e25a0fa5dbad02bd7a1f139f2e6407cb3", "filename": "gcc/testsuite/gcc.target/mips/r10k-cache-barrier-14.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-14.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,4 @@\n-/* { dg-do compile { target mips16_attribute } } */\n-/* { dg-mips-options \"-O2 -mr10k-cache-barrier=store\" } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-options \"(-mips16) -O2 -mr10k-cache-barrier=store\" } */\n \n /* Test that indirect calls are protected.  */\n "}, {"sha": "a3e7f0db92c42da813c6be2e4d5d6a5b42c3c6a8", "filename": "gcc/testsuite/gcc.target/mips/r10k-cache-barrier-15.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-15.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,2 +1,2 @@\n-/* { dg-mips-options \"-O2 -mr10k-cache-barrier=store -mips2\" } */\n+/* { dg-options \"-O2 -mr10k-cache-barrier=store -mips2\" } */\n /* { dg-error \"requires.*cache.*instruction\" \"\" { target *-*-* } 0 } */"}, {"sha": "3d06d0ddb6e9382b344bf50b2df64b16e06f65a4", "filename": "gcc/testsuite/gcc.target/mips/r10k-cache-barrier-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O2 -mabi=64 -mr10k-cache-barrier=store\" } */\n+/* { dg-options \"-O2 -mabi=64 -mr10k-cache-barrier=store\" } */\n \n /* Test that stores to constant cached addresses are protected\n    by cache barriers.  */"}, {"sha": "be2c7fbd76e597bc19808b6bf2699839af967fb0", "filename": "gcc/testsuite/gcc.target/mips/r10k-cache-barrier-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O2 -mr10k-cache-barrier=store -mno-abicalls\" } */\n+/* { dg-options \"-O2 -mr10k-cache-barrier=store -mno-abicalls\" } */\n \n /* Test that in-range stores to the frame are not protected by\n    cache barriers.  */"}, {"sha": "9dd23eafa781ec199a4c59f29a90982f62f8ef58", "filename": "gcc/testsuite/gcc.target/mips/r10k-cache-barrier-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-4.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O2 -mr10k-cache-barrier=store -mno-abicalls\" } */\n+/* { dg-options \"-O2 -mr10k-cache-barrier=store -mno-abicalls\" } */\n \n void bar (int *x);\n "}, {"sha": "a6b53a9ea3483d3581a54d90b2c096571d5ffc1f", "filename": "gcc/testsuite/gcc.target/mips/r10k-cache-barrier-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-5.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O2 -mr10k-cache-barrier=store -mno-abicalls -mabi=64\" } */\n+/* { dg-options \"-O2 -mr10k-cache-barrier=store -mno-abicalls -mabi=64\" } */\n \n /* Test that in-range stores to static objects do not get an unnecessary\n    cache barrier.  */"}, {"sha": "c52caaa1ad2696bca86f65d2968a8fbea5dc106d", "filename": "gcc/testsuite/gcc.target/mips/r10k-cache-barrier-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-6.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O2 -mr10k-cache-barrier=store -mabi=64\" } */\n+/* { dg-options \"-O2 -mr10k-cache-barrier=store -mabi=64\" } */\n \n int x[4];\n void bar (void);"}, {"sha": "3f738654cc166e04cf3f8e8ae719905546e62825", "filename": "gcc/testsuite/gcc.target/mips/r10k-cache-barrier-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-7.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O2 -mr10k-cache-barrier=store -mno-abicalls\" } */\n+/* { dg-options \"-O2 -mr10k-cache-barrier=store -mno-abicalls\" } */\n \n void bar1 (void);\n void bar2 (void);"}, {"sha": "394bf486f3829529706c493f52686c5013a03f7e", "filename": "gcc/testsuite/gcc.target/mips/r10k-cache-barrier-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-8.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O2 -mr10k-cache-barrier=store -G8\" } */\n+/* { dg-options \"-O2 -mr10k-cache-barrier=store -G8\" } */\n \n /* Test that in-range stores to components of static objects\n    do not get an unnecessary cache barrier.  */"}, {"sha": "67b52f92d35be897aa214543af7514d3a413a0b0", "filename": "gcc/testsuite/gcc.target/mips/r10k-cache-barrier-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr10k-cache-barrier-9.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O2 -mr10k-cache-barrier=store -G8\" } */\n+/* { dg-options \"-O2 -mr10k-cache-barrier=store -G8\" } */\n \n /* Test that out-of-range stores to components of static objects\n    are protected by a cache barrier.  */"}, {"sha": "4dc2b003f358080c0e001cf36f10920a89a66632", "filename": "gcc/testsuite/gcc.target/mips/r3900-mult.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr3900-mult.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr3900-mult.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fr3900-mult.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-march=r3900\" } */\n+/* { dg-options \"-march=r3900\" } */\n /* { dg-final { scan-assembler \"\\tmult\\t\\[^\\n\\]*,\\[^\\n\\]*,\" } } */\n \n NOMIPS16 int"}, {"sha": "f0a9b3aed62429978d2290fc5f5438d78de7ac36", "filename": "gcc/testsuite/gcc.target/mips/rsqrt-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -ffast-math -mips4 -mhard-float -mgp64\" } */\n+/* { dg-options \"-O2 -ffast-math isa=4 -mhard-float -mgp64\" } */\n /* { dg-final { scan-assembler \"rsqrt.d\" } } */\n /* { dg-final { scan-assembler \"rsqrt.s\" } } */\n "}, {"sha": "bc81039d523a125bc6f2747fec20f0b450e59022", "filename": "gcc/testsuite/gcc.target/mips/rsqrt-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -ffast-math -mips4 -mhard-float -mgp64\" } */\n+/* { dg-options \"-O2 -ffast-math isa=4 -mhard-float -mgp64\" } */\n /* { dg-final { scan-assembler \"rsqrt.d\" } } */\n /* { dg-final { scan-assembler \"rsqrt.s\" } } */\n "}, {"sha": "cfa771ef86be6de1c53beb063277a9c42e7a47da", "filename": "gcc/testsuite/gcc.target/mips/rsqrt-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -mips4 -mhard-float\" } */\n+/* { dg-options \"-O2 isa=4 -mhard-float\" } */\n /* { dg-final { scan-assembler-not \"rsqrt.d\" } } */\n /* { dg-final { scan-assembler-not \"rsqrt.s\" } } */\n "}, {"sha": "726c35403dcb9e8b61b1d3cca98301a61d4f70f2", "filename": "gcc/testsuite/gcc.target/mips/rsqrt-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Frsqrt-4.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -ffast-math -mips64 -mhard-float -mgp32\" } */\n+/* { dg-options \"-O2 -ffast-math -mips64 -mhard-float -mgp32\" } */\n /* { dg-final { scan-assembler-not \"\\trsqrt.d\\t\" } } */\n /* { dg-final { scan-assembler-times \"\\trsqrt.s\\t\" 2 } } */\n "}, {"sha": "f6a854ee9f3b18f5742c77af76a7f1e6ce8b1166", "filename": "gcc/testsuite/gcc.target/mips/save-restore-1.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,7 +1,5 @@\n /* Check that we can use the save instruction to save varargs.  */\n-/* { dg-do compile { target mips16_attribute } } */\n-/* { dg-mips-options \"-mips32r2 -mabi=32 -O2\" } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-options \"(-mips16) isa_rev>=1 -mabi=32 -O2\" } */\n \n #include <stdarg.h>\n "}, {"sha": "4a11bc2108315da84b0986789c8a6398f1dcb52b", "filename": "gcc/testsuite/gcc.target/mips/save-restore-2.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,7 +1,5 @@\n /* Check that we can use the save instruction to save spilled arguments.  */\n-/* { dg-do compile { target mips16_attribute } } */\n-/* { dg-mips-options \"-mips32r2 -mabi=32 -O2\" } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-options \"(-mips16) isa_rev>=1 -mabi=32 -O2\" } */\n \n MIPS16 void\n foo (int *a, int b, int c)"}, {"sha": "d45fe50ea6bd75bd5b6a21bd0a6ca75323346911", "filename": "gcc/testsuite/gcc.target/mips/save-restore-3.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,8 +1,6 @@\n /* Check that we can use the save instruction to save spilled arguments\n    when the argument save area is out of range of a direct load or store.  */\n-/* { dg-do compile { target mips16_attribute } } */\n-/* { dg-mips-options \"-mips32r2 -mabi=32 -O2\" } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-options \"(-mips16) isa_rev>=1 -mabi=32 -O2\" } */\n \n void bar (int *);\n "}, {"sha": "ef7722bce0948793bdeb7239434fdb426906b674", "filename": "gcc/testsuite/gcc.target/mips/save-restore-4.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-4.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,7 +1,5 @@\n /* Check that we can use the save instruction to save $16, $17 and $31.  */\n-/* { dg-do compile { target mips16_attribute } } */\n-/* { dg-mips-options \"-mips32r2 -mabi=32 -O2\" } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-options \"(-mips16) isa_rev>=1 -mabi=32 -O2\" } */\n \n void bar (void);\n "}, {"sha": "0dd823a68138040b04be0a1b47af765d4e9c334a", "filename": "gcc/testsuite/gcc.target/mips/save-restore-5.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsave-restore-5.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,7 +1,5 @@\n /* Check that we don't try to save the same register twice.  */\n-/* { dg-do assemble { target mips16_attribute } } */\n-/* { dg-mips-options \"-mips32r2 -mgp32 -O2\" } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-options \"(-mips16) isa_rev>=1 -mgp32 -O2\" } */\n \n int bar (int, int, int, int);\n void frob (void);"}, {"sha": "819938fcdc0f67ba73fb1d6fce44d51d3e8e0486", "filename": "gcc/testsuite/gcc.target/mips/sb1-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsb1-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsb1-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsb1-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,6 @@\n /* Test SB-1 v2sf extensions.  */\n /* { dg-do compile } */ \n-/* { dg-mips-options \"-march=sb1 -O2 -mpaired-single -mgp64 -ffast-math\" } */\n+/* { dg-options \"-march=sb1 -O2 -mpaired-single -mgp64 -ffast-math\" } */\n /* { dg-final { scan-assembler \"div.ps\" } } */ \n /* { dg-final { scan-assembler \"recip.ps\" } } */ \n /* { dg-final { scan-assembler \"sqrt.ps\" } } */ "}, {"sha": "d0dc040151c0fe72de68bc70b659351ebf625b5b", "filename": "gcc/testsuite/gcc.target/mips/scc-1.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fscc-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fscc-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fscc-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,4 @@\n-/* { dg-do compile { target mips16_attribute } } */\n-/* { dg-mips-options \"-O -mips32\" } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-options \"(-mips16) -O isa_rev>=1\" } */\n \n /* { dg-final { scan-assembler-times {slt\t\\$2,\\$5,\\$4} 1 } } */\n /* { dg-final { scan-assembler-times {sltu\t\\$2,\\$5,\\$4} 1 } } */"}, {"sha": "440c28b84bf3bd4aeab6aefeea04e6830eff0af0", "filename": "gcc/testsuite/gcc.target/mips/scc-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fscc-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fscc-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fscc-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O -mgp64\" } */\n+/* { dg-options \"-O -mgp64\" } */\n \n /* { dg-final { scan-assembler-not \"and\\t\\|andi\\t\\|ext\\t\\|sll\\t\\|srl\\t\" } } */\n /* { dg-final { scan-assembler-times \"slt\\t\\|slti?u\\t\" 12 } } */"}, {"sha": "b295e782c2df63fb0a6042e441cdc9fe66caa29d", "filename": "gcc/testsuite/gcc.target/mips/scc-3.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fscc-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fscc-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fscc-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,4 @@\n-/* { dg-do compile { target mips16_attribute } } */\n-/* { dg-mips-options \"-O -mabi=o64\" } */\n-/* { dg-add-options mips16_attribute } */\n+/* { dg-options \"(-mips16) -O -mabi=o64\" } */\n \n /* { dg-final { scan-assembler-not \"and\\t\\|andi\\t\\|ext\\t\\|sll\\t\\|srl\\t\" } } */\n /* { dg-final { scan-assembler-times \"slt\\t\\|slti?u\\t\" 8 } } */"}, {"sha": "40460666c7f2815910407a9ead7ac3d344c9a0d3", "filename": "gcc/testsuite/gcc.target/mips/scc-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fscc-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fscc-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fscc-4.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O -mabi=o64\" } */\n+/* { dg-options \"-O -mabi=o64\" } */\n \n /* { dg-final { scan-assembler \"slt\\t\" } } */\n /* { dg-final { scan-assembler \"sltu\\t\\|xor\\t\\|xori\\t\" } } */"}, {"sha": "f9a25cdc9f789e6787febada683d5c70e51eeb9c", "filename": "gcc/testsuite/gcc.target/mips/sdata-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsdata-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsdata-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsdata-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-G4 -mexplicit-relocs\" } */\n+/* { dg-options \"-G4 -mexplicit-relocs\" } */\n \n /* { dg-final { scan-assembler     \"%gp_?rel\\\\(l4a\\\\)\" } } */\n /* { dg-final { scan-assembler     \"%gp_?rel\\\\(l4b\\\\)\" } } */"}, {"sha": "5a9fff2da1da1772796a1bf5d0508f14590ce77d", "filename": "gcc/testsuite/gcc.target/mips/sdata-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsdata-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsdata-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsdata-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-G4 -mexplicit-relocs -mno-local-sdata\" } */\n+/* { dg-options \"-G4 -mexplicit-relocs -mno-local-sdata\" } */\n \n /* { dg-final { scan-assembler-not \"%gp_?rel\\\\(l4a\\\\)\" } } */\n /* { dg-final { scan-assembler-not \"%gp_?rel\\\\(l4b\\\\)\" } } */"}, {"sha": "f232324954f40511f52938dab67a373f3fbf2ebe", "filename": "gcc/testsuite/gcc.target/mips/sdata-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsdata-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsdata-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsdata-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-G4 -mexplicit-relocs -mno-extern-sdata\" } */\n+/* { dg-options \"-G4 -mexplicit-relocs -mno-extern-sdata\" } */\n \n /* { dg-final { scan-assembler     \"%gp_?rel\\\\(l4a\\\\)\" } } */\n /* { dg-final { scan-assembler     \"%gp_?rel\\\\(l4b\\\\)\" } } */"}, {"sha": "7786c6db9e4c1465c075d0f4d213a9c22e1ef913", "filename": "gcc/testsuite/gcc.target/mips/sdata-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsdata-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsdata-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsdata-4.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-G4 -mexplicit-relocs -mno-gpopt\" } */\n+/* { dg-options \"-G4 -mexplicit-relocs -mno-gpopt\" } */\n \n /* { dg-final { scan-assembler-not \"%gp_?rel\" } } */\n /* { dg-final { scan-assembler-not \"\\\\\\$gp\" } } */"}, {"sha": "c6bc495c8de4c121848d3b68b73d2fab3623943a", "filename": "gcc/testsuite/gcc.target/mips/smartmips-lwxs.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-lwxs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-lwxs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-lwxs.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* -mlong32 added because of PR target/38599.  */\n-/* { dg-mips-options \"-O -msmartmips -mlong32\" } */\n+/* { dg-options \"-O -msmartmips -mlong32\" } */\n \n NOMIPS16 int scaled_indexed_word_load (int a[], int b)\n {"}, {"sha": "e9735b20a52e135c2b8999310dab90f8199a7cd7", "filename": "gcc/testsuite/gcc.target/mips/smartmips-ror-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O -msmartmips\" } */\n+/* { dg-options \"-O -msmartmips\" } */\n \n NOMIPS16 int rotate_left (unsigned a, unsigned s)\n {"}, {"sha": "ac4c94df8e2d59b433cdacbd65d67f13c0a26436", "filename": "gcc/testsuite/gcc.target/mips/smartmips-ror-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O -msmartmips\" } */\n+/* { dg-options \"-O -msmartmips\" } */\n \n NOMIPS16 int rotate_right (unsigned a, unsigned s)\n {"}, {"sha": "360f3c463ff39ccffff897488a5eb9bb3a175633", "filename": "gcc/testsuite/gcc.target/mips/smartmips-ror-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-3.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O -msmartmips\" } */\n+/* { dg-options \"-O -msmartmips\" } */\n \n #define S 13\n "}, {"sha": "b8b82944540566480eef1b2510e61822d2f5dbd2", "filename": "gcc/testsuite/gcc.target/mips/smartmips-ror-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fsmartmips-ror-4.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O -msmartmips\" } */\n+/* { dg-options \"-O -msmartmips\" } */\n \n #define S 13\n "}, {"sha": "fc087ee1c351663d76fd03a0fcd4ce6ad8e42786", "filename": "gcc/testsuite/gcc.target/mips/timode-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ftimode-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ftimode-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ftimode-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-mgp64\" } */\n+/* { dg-options \"-mgp64\" } */\n typedef int int128_t __attribute__((mode(TI)));\n typedef unsigned int uint128_t __attribute__((mode(TI)));\n "}, {"sha": "9f3e43c41bded6487b26bb13b8be5f8513c85912", "filename": "gcc/testsuite/gcc.target/mips/timode-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ftimode-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ftimode-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ftimode-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,5 @@\n-/* { dg-do run { target mips64 } } */\n+/* { dg-do run } */\n+/* { dg-options \"-mgp64\" } */\n typedef int int128_t __attribute__((mode(TI)));\n typedef unsigned int uint128_t __attribute__((mode(TI)));\n "}, {"sha": "7e54aae3ebaa67e2bf083a8a9f670bc0edb29946", "filename": "gcc/testsuite/gcc.target/mips/truncate-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ftruncate-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ftruncate-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ftruncate-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O -mgp64\" } */\n+/* { dg-options \"-O -mgp64\" } */\n \n #define TEST(ID, TYPE, SHIFT)\t\t\t\t\\\n   int __attribute__((nomips16))\t\t\t\t\\"}, {"sha": "423dc26f4dafa3232a8f1ad5b59aea005b540a51", "filename": "gcc/testsuite/gcc.target/mips/truncate-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ftruncate-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ftruncate-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Ftruncate-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-mips-options \"-O -mgp64\" } */\n+/* { dg-options \"-O -mgp64\" } */\n \n #define TEST(ID, TYPE, SHIFT)\t\t\t\t\\\n   int NOMIPS16\t\t\t\t\t\t\\"}, {"sha": "2ed4f2f9b064a7f6995aac13eb9947de7e9dbb8c", "filename": "gcc/testsuite/gcc.target/mips/vr-mult-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fvr-mult-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fvr-mult-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fvr-mult-1.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,7 +1,7 @@\n /* Make sure that mul/addu is preferred over mtlo/macc and that mul/subu\n    is preferred over mtlo/msac.  */\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=vr5400\" } */\n+/* { dg-options \"-O2 -march=vr5400\" } */\n NOMIPS16 int f1 (int a, int b, int c) { return a + b * c; }\n NOMIPS16 int f2 (int a, int b, int c) { return a - b * c; }\n /* { dg-final { scan-assembler \"\\tmul\\t.*\\tmul\\t\" } } */"}, {"sha": "7e8be5e42837db353bf100bffec0f6185e26107f", "filename": "gcc/testsuite/gcc.target/mips/vr-mult-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fvr-mult-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05854ec7da5f0e343c2387b0ca46bd55741f73e/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fvr-mult-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fvr-mult-2.c?ref=c05854ec7da5f0e343c2387b0ca46bd55741f73e", "patch": "@@ -1,7 +1,7 @@\n /* Make sure that mul/addu is preferred over mtlo/macc and that mul/subu\n    is preferred over mtlo/msac.  */\n /* { dg-do compile } */\n-/* { dg-mips-options \"-O2 -march=vr5500\" } */\n+/* { dg-options \"-O2 -march=vr5500\" } */\n NOMIPS16 int f1 (int a, int b, int c) { return a + b * c; }\n NOMIPS16 int f2 (int a, int b, int c) { return a - b * c; }\n /* { dg-final { scan-assembler \"\\tmul\\t.*\\tmul\\t\" } } */"}]}