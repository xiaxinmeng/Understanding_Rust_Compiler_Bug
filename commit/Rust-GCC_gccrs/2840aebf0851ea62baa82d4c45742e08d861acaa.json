{"sha": "2840aebf0851ea62baa82d4c45742e08d861acaa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg0MGFlYmYwODUxZWE2MmJhYTgyZDRjNDU3NDJlMDhkODYxYWNhYQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-04-13T21:10:16Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-04-13T21:10:16Z"}, "message": "Makefile.in (reg-stack.o): Depend on reload.h.\n\n\t* Makefile.in (reg-stack.o): Depend on reload.h.\n\t(insn-attrtab.o): Depend on flags.h.\n\n\t* genattrtab (main): Include flags.h in insn-attrtab.c.\n\n\t* reg-stack.c: Include reload.h.\n\n\t* sparc.h (flag_pic): Delete redundant declaration.\n\n\t* output.h (flag_pic): Likewise.\n\n\t* tree.h (pedantic): Likewise.\n\nFrom-SVN: r41340", "tree": {"sha": "5b294d8463829ad525276d8e5f2b1399f5e4dc7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b294d8463829ad525276d8e5f2b1399f5e4dc7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2840aebf0851ea62baa82d4c45742e08d861acaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2840aebf0851ea62baa82d4c45742e08d861acaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2840aebf0851ea62baa82d4c45742e08d861acaa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2840aebf0851ea62baa82d4c45742e08d861acaa/comments", "author": null, "committer": null, "parents": [{"sha": "8461e9845556229b33d5dbb6474f4fa3e7929ae1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8461e9845556229b33d5dbb6474f4fa3e7929ae1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8461e9845556229b33d5dbb6474f4fa3e7929ae1"}], "stats": {"total": 34, "additions": 20, "deletions": 14}, "files": [{"sha": "f34c8a04c16be322f309366f63ca9567e2bcd724", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2840aebf0851ea62baa82d4c45742e08d861acaa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2840aebf0851ea62baa82d4c45742e08d861acaa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2840aebf0851ea62baa82d4c45742e08d861acaa", "patch": "@@ -1,3 +1,18 @@\n+2001-04-13  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (reg-stack.o): Depend on reload.h.\n+\t(insn-attrtab.o): Depend on flags.h.\n+\n+\t* genattrtab (main): Include flags.h in insn-attrtab.c.\n+\n+\t* reg-stack.c: Include reload.h.\n+\n+\t* sparc.h (flag_pic): Delete redundant declaration.\n+\n+\t* output.h (flag_pic): Likewise.\n+\n+\t* tree.h (pedantic): Likewise.\n+\n 2001-04-13  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* Makefile.in (toplev.o, jump.o, regmove.o): Depend on reload.h"}, {"sha": "69054d02ef443bab9b327538362e21f7429f5026", "filename": "gcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2840aebf0851ea62baa82d4c45742e08d861acaa/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2840aebf0851ea62baa82d4c45742e08d861acaa/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=2840aebf0851ea62baa82d4c45742e08d861acaa", "patch": "@@ -1557,7 +1557,7 @@ recog.o : recog.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) function.h $(BASIC_BLOCK_H) \\\n    $(REGS_H) $(RECOG_H) hard-reg-set.h flags.h insn-config.h $(INSN_ATTR_H) \\\n    real.h toplev.h output.h reload.h $(TM_P_H)\n reg-stack.o : reg-stack.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) $(RECOG_H) \\\n-   $(REGS_H) hard-reg-set.h flags.h insn-config.h toplev.h \\\n+   $(REGS_H) hard-reg-set.h flags.h insn-config.h toplev.h reload.h \\\n    varray.h function.h $(TM_P_H)\n predict.o: predict.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h \\\n    insn-config.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h output.h toplev.h \\\n@@ -1696,7 +1696,8 @@ s-peep : $(md_file) genpeep$(build_exeext) $(srcdir)/move-if-change\n \ttouch s-peep\n \n insn-attrtab.o : insn-attrtab.c $(CONFIG_H) $(RTL_H) $(REGS_H) real.h \\\n-    output.h $(INSN_ATTR_H) insn-config.h $(SYSTEM_H) toplev.h $(RECOG_H) $(TM_P_H)\n+    output.h $(INSN_ATTR_H) insn-config.h $(SYSTEM_H) toplev.h $(RECOG_H) \\\n+\t$(TM_P_H) flags.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-attrtab.c\n \n insn-attr.h: s-attr ; @true"}, {"sha": "9cfe4f7abcaf8a3fb84b3d891e916337796028d2", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2840aebf0851ea62baa82d4c45742e08d861acaa/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2840aebf0851ea62baa82d4c45742e08d861acaa/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=2840aebf0851ea62baa82d4c45742e08d861acaa", "patch": "@@ -3409,6 +3409,3 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #define DONT_ACCESS_GBLS_AFTER_EPILOGUE (flag_pic)\n \n-/* Defined in flags.h, but insn-emit.c does not include flags.h.  */\n-\n-extern int flag_pic;"}, {"sha": "fcf449c073bf0a4f5cecc0ba7e02f2af737b91e3", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2840aebf0851ea62baa82d4c45742e08d861acaa/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2840aebf0851ea62baa82d4c45742e08d861acaa/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=2840aebf0851ea62baa82d4c45742e08d861acaa", "patch": "@@ -6149,6 +6149,7 @@ from the machine description file `md'.  */\\n\\n\");\n   printf (\"#include \\\"output.h\\\"\\n\");\n   printf (\"#include \\\"insn-attr.h\\\"\\n\");\n   printf (\"#include \\\"toplev.h\\\"\\n\");\n+  printf (\"#include \\\"flags.h\\\"\\n\");\n   printf (\"\\n\");\n   printf (\"#define operands recog_data.operand\\n\\n\");\n "}, {"sha": "407435f04a9dc936ed7a722cc112f63388e5abb8", "filename": "gcc/output.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2840aebf0851ea62baa82d4c45742e08d861acaa/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2840aebf0851ea62baa82d4c45742e08d861acaa/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=2840aebf0851ea62baa82d4c45742e08d861acaa", "patch": "@@ -375,11 +375,6 @@ extern int which_alternative;\n extern rtx final_sequence;\n #endif\n \n-/* Nonzero means generate position-independent code.\n-   This is not fully implemented yet.  */\n-\n-extern int flag_pic;\n-\n /* The line number of the beginning of the current function.\n    sdbout.c needs this so that it can output relative linenumbers.  */\n "}, {"sha": "43bedebd90a6b70ee89691d0aad2891f9ecb87ab", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2840aebf0851ea62baa82d4c45742e08d861acaa/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2840aebf0851ea62baa82d4c45742e08d861acaa/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=2840aebf0851ea62baa82d4c45742e08d861acaa", "patch": "@@ -166,6 +166,7 @@\n #include \"output.h\"\n #include \"basic-block.h\"\n #include \"varray.h\"\n+#include \"reload.h\"\n \n #ifdef STACK_REGS\n "}, {"sha": "25bf7de292d57fa1fa42190c24018f64f3a248b8", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2840aebf0851ea62baa82d4c45742e08d861acaa/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2840aebf0851ea62baa82d4c45742e08d861acaa/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=2840aebf0851ea62baa82d4c45742e08d861acaa", "patch": "@@ -2455,10 +2455,6 @@ extern const char *input_filename;\n /* Current line number in input file.  */\n extern int lineno;\n \n-/* Nonzero for -pedantic switch: warn about anything\n-   that standard C forbids.  */\n-extern int pedantic;\n-\n /* Nonzero means lvalues are limited to those valid in pedantic ANSI C.\n    Zero means allow extended lvalues.  */\n "}]}