{"sha": "e962c1b0f424781a95684d0ca4e0dbab3a39b8b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk2MmMxYjBmNDI0NzgxYTk1Njg0ZDBjYTRlMGRiYWIzYTM5YjhiOA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-03-13T12:47:09Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-03-13T12:47:09Z"}, "message": "array (swap(array<>&, array<>&)): Use member swap.\n\n2010-03-13  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/tr1_impl/array (swap(array<>&, array<>&)): Use member swap.\n\t\n\t* include/bits/stl_algo.h: Improve comment.\n\nFrom-SVN: r157421", "tree": {"sha": "55062433ed07dc454121afa6622cf79275a88d0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55062433ed07dc454121afa6622cf79275a88d0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e962c1b0f424781a95684d0ca4e0dbab3a39b8b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e962c1b0f424781a95684d0ca4e0dbab3a39b8b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e962c1b0f424781a95684d0ca4e0dbab3a39b8b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e962c1b0f424781a95684d0ca4e0dbab3a39b8b8/comments", "author": null, "committer": null, "parents": [{"sha": "929769f4ea0bbebf3a4a15bdc72ccd353789848f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/929769f4ea0bbebf3a4a15bdc72ccd353789848f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/929769f4ea0bbebf3a4a15bdc72ccd353789848f"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "2b2d0634b9fc53e61a87a83a464a9deae899548e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e962c1b0f424781a95684d0ca4e0dbab3a39b8b8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e962c1b0f424781a95684d0ca4e0dbab3a39b8b8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e962c1b0f424781a95684d0ca4e0dbab3a39b8b8", "patch": "@@ -1,3 +1,9 @@\n+2010-03-13  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/tr1_impl/array (swap(array<>&, array<>&)): Use member swap.\n+\n+\t* include/bits/stl_algo.h: Improve comment.\n+\n 2010-03-12  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* scripts/run_doxygen: Adjust."}, {"sha": "560ac1bb07bd2988cdac495bc3e6d2def729ab07", "filename": "libstdc++-v3/include/bits/stl_algo.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e962c1b0f424781a95684d0ca4e0dbab3a39b8b8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e962c1b0f424781a95684d0ca4e0dbab3a39b8b8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h?ref=e962c1b0f424781a95684d0ca4e0dbab3a39b8b8", "patch": "@@ -4141,7 +4141,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       return std::make_pair(__min, __max);\n     }\n \n-  // N2722 + fixes.\n+  // N2722 + DR 915.\n   template<typename _Tp>\n     inline _Tp\n     min(initializer_list<_Tp> __l)"}, {"sha": "edc4aec90b4ed266594f97d31f61b69f30abd33f", "filename": "libstdc++-v3/include/tr1_impl/array", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e962c1b0f424781a95684d0ca4e0dbab3a39b8b8/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Farray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e962c1b0f424781a95684d0ca4e0dbab3a39b8b8/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Farray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Farray?ref=e962c1b0f424781a95684d0ca4e0dbab3a39b8b8", "patch": "@@ -229,7 +229,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n   template<typename _Tp, std::size_t _Nm>\n     inline void\n     swap(array<_Tp, _Nm>& __one, array<_Tp, _Nm>& __two)\n-    { std::swap_ranges(__one.begin(), __one.end(), __two.begin()); }\n+    { __one.swap(__two); }\n \n   // Tuple interface to class template array [6.2.2.5].\n "}]}