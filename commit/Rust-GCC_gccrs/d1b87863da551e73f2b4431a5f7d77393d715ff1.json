{"sha": "d1b87863da551e73f2b4431a5f7d77393d715ff1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFiODc4NjNkYTU1MWU3M2YyYjQ0MzFhNWY3ZDc3MzkzZDcxNWZmMQ==", "commit": {"author": {"name": "Bernardo Innocenti", "email": "bernie@develer.com", "date": "2003-08-21T00:04:22Z"}, "committer": {"name": "Bernardo Innocenti", "email": "bernie@gcc.gnu.org", "date": "2003-08-21T00:04:22Z"}, "message": "m68k.c: Strip away code depending on NO_ADDSUB_Q definition.\n\n\t* config/m68k/m68k.c: Strip away code depending on NO_ADDSUB_Q definition.\n\t* config/m68k/m68k.md: Likewise.\n\nFrom-SVN: r70626", "tree": {"sha": "849fee2dc54bcb92692d7fb00b76cb38f1fa4de1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/849fee2dc54bcb92692d7fb00b76cb38f1fa4de1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1b87863da551e73f2b4431a5f7d77393d715ff1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1b87863da551e73f2b4431a5f7d77393d715ff1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1b87863da551e73f2b4431a5f7d77393d715ff1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1b87863da551e73f2b4431a5f7d77393d715ff1/comments", "author": {"login": "codewiz", "id": 1184492, "node_id": "MDQ6VXNlcjExODQ0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1184492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codewiz", "html_url": "https://github.com/codewiz", "followers_url": "https://api.github.com/users/codewiz/followers", "following_url": "https://api.github.com/users/codewiz/following{/other_user}", "gists_url": "https://api.github.com/users/codewiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/codewiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codewiz/subscriptions", "organizations_url": "https://api.github.com/users/codewiz/orgs", "repos_url": "https://api.github.com/users/codewiz/repos", "events_url": "https://api.github.com/users/codewiz/events{/privacy}", "received_events_url": "https://api.github.com/users/codewiz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b6343a3395b83445977a58f32c462ed0d8101734", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6343a3395b83445977a58f32c462ed0d8101734", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6343a3395b83445977a58f32c462ed0d8101734"}], "stats": {"total": 112, "additions": 11, "deletions": 101}, "files": [{"sha": "2e140c8204761008cc558e8ef8b610604274304a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1b87863da551e73f2b4431a5f7d77393d715ff1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1b87863da551e73f2b4431a5f7d77393d715ff1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d1b87863da551e73f2b4431a5f7d77393d715ff1", "patch": "@@ -1,3 +1,8 @@\n+2003-08-20  Bernardo Innocenti  <bernie@develer.com>\n+\n+\t* config/m68k/m68k.c: Strip away code depending on NO_ADDSUB_Q definition.\n+\t* config/m68k/m68k.md: Likewise.\n+\n 2003-08-20  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR java/11996"}, {"sha": "31da70bf6099f7a594a5f750effe40fe4ce58ee3", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1b87863da551e73f2b4431a5f7d77393d715ff1/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1b87863da551e73f2b4431a5f7d77393d715ff1/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=d1b87863da551e73f2b4431a5f7d77393d715ff1", "patch": "@@ -345,7 +345,6 @@ m68k_output_function_prologue (stream, size)\n     {\n       if (fsize + 4 < 0x8000)\n \t{\n-#ifndef NO_ADDSUB_Q\n \t  if (fsize + 4 <= 8)\n \t    {\n \t      if (!TARGET_5200)\n@@ -381,9 +380,7 @@ m68k_output_function_prologue (stream, size)\n \t\t\t   fsize + 4 - 8);\n #endif\n \t    }\n-\t  else \n-#endif /* not NO_ADDSUB_Q */\n-\t  if (TARGET_68040)\n+\t  else if (TARGET_68040)\n \t    {\n \t      /* Adding negative number is faster on the 68040.  */\n \t      /* asm_fprintf() cannot handle %.  */\n@@ -800,7 +797,6 @@ m68k_output_function_epilogue (stream, size)\n \t     reg_names[FRAME_POINTER_REGNUM]);\n   else if (fsize)\n     {\n-#ifndef NO_ADDSUB_Q\n       if (fsize + 4 <= 8) \n \t{\n \t  if (!TARGET_5200)\n@@ -833,9 +829,7 @@ m68k_output_function_epilogue (stream, size)\n \t\t       fsize + 4 - 8);\n #endif\n \t}\n-      else\n-#endif /* not NO_ADDSUB_Q */\n-      if (fsize + 4 < 0x8000)\n+      else if (fsize + 4 < 0x8000)\n \t{\n \t  if (TARGET_68040)\n \t    { \n@@ -1763,11 +1757,7 @@ output_move_qimode (operands)\n       if (!reg_mentioned_p (stack_pointer_rtx, operands[1]))\n \t{\n \t  xoperands[3] = stack_pointer_rtx;\n-#ifndef NO_ADDSUB_Q\n \t  output_asm_insn (\"subq%.l %#2,%3\\n\\tmove%.b %1,%2\", xoperands);\n-#else\n-\t  output_asm_insn (\"sub%.l %#2,%3\\n\\tmove%.b %1,%2\", xoperands);\n-#endif\n \t}\n       else\n \toutput_asm_insn (\"move%.b %1,%-\\n\\tmove%.b %@,%2\", xoperands);\n@@ -2268,7 +2258,6 @@ output_addsi3 (operands)\n     }\n   if (GET_CODE (operands[2]) == CONST_INT)\n     {\n-#ifndef NO_ADDSUB_Q\n       if (INTVAL (operands[2]) > 0\n \t  && INTVAL (operands[2]) <= 8)\n \treturn \"addq%.l %2,%0\";\n@@ -2296,7 +2285,6 @@ output_addsi3 (operands)\n \t      return \"subq%.l %#8,%0\\n\\tsubq%.l %2,%0\";\n \t    }\n \t}\n-#endif\n       if (ADDRESS_REG_P (operands[0])\n \t  && INTVAL (operands[2]) >= -0x8000\n \t  && INTVAL (operands[2]) < 0x8000)"}, {"sha": "68c665cc214b11dab5c11fd7178d8f10135428bd", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 4, "deletions": 87, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1b87863da551e73f2b4431a5f7d77393d715ff1/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1b87863da551e73f2b4431a5f7d77393d715ff1/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=d1b87863da551e73f2b4431a5f7d77393d715ff1", "patch": "@@ -1948,21 +1948,11 @@\n \t  if (GET_CODE (operands[1]) == CONST_INT)\n \t    {\n \t      if (INTVAL (operands[1]) > 0 && INTVAL (operands[1]) <= 8)\n-\t\t{\n-#ifdef NO_ADDSUB_Q\n-\t\t  return \\\"add%.l %1,%R0\\;addx%.l %3,%0\\\";\n-#else\n-\t\t  return \\\"addq%.l %1,%R0\\;addx%.l %3,%0\\\";\n-#endif\n-\t\t}\n+\t\treturn \\\"addq%.l %1,%R0\\;addx%.l %3,%0\\\";\n \t      else if (INTVAL (operands[1]) >= -8 && INTVAL (operands[1]) < 0)\n \t\t{\n \t\t  operands[1] = GEN_INT (-INTVAL (operands[1]));\n-#ifdef NO_ADDSUB_Q\n-\t\t  return \\\"sub%.l %1,%R0\\;subx%.l %3,%0\\\";\n-#else\n \t\t  return \\\"subq%.l %1,%R0\\;subx%.l %3,%0\\\";\n-#endif\n \t\t}\n \t    }\n \t  return \\\"add%.l %1,%R0\\;addx%.l %3,%0\\\";\n@@ -2018,11 +2008,7 @@\n #else\n   output_asm_insn (\\\"jpl %l3\\\", operands);\n #endif\n-#ifndef NO_ADDSUB_Q\n   output_asm_insn (\\\"addq%.l %#1,%2\\\", operands);\n-#else\n-  output_asm_insn (\\\"add%.l %#1,%2\\\", operands);\n-#endif\n   (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\",\n \t\t\t\tCODE_LABEL_NUMBER (operands[3]));\n   return \\\"\\\";\n@@ -2072,7 +2058,6 @@\n {\n   if (GET_CODE (operands[2]) == CONST_INT)\n     {\n-#ifndef NO_ADDSUB_Q\n       /* If the constant would be a negative number when interpreted as\n \t HImode, make it negative.  This is usually, but not always, done\n \t elsewhere in the compiler.  First check for constants out of range,\n@@ -2108,7 +2093,6 @@\n \t      return \\\"subq%.w %#8,%0\\;subq%.w %2,%0\\\";\n \t    }\n \t}\n-#endif\n       if (ADDRESS_REG_P (operands[0]) && !TARGET_68040)\n #ifdef MOTOROLA  \n \t    return \\\"lea (%c2,%0),%0\\\";\n@@ -2134,7 +2118,6 @@\n {\n   if (GET_CODE (operands[1]) == CONST_INT)\n     {\n-#ifndef NO_ADDSUB_Q\n       /* If the constant would be a negative number when interpreted as\n \t HImode, make it negative.  This is usually, but not always, done\n \t elsewhere in the compiler.  First check for constants out of range,\n@@ -2170,7 +2153,6 @@\n \t      return \\\"subq%.w %#8,%0\\;subq%.w %1,%0\\\";\n \t    }\n \t}\n-#endif\n       if (ADDRESS_REG_P (operands[0]) && !TARGET_68040)\n #ifdef MOTOROLA  \n \t    return \\\"lea (%c1,%0),%0\\\";\n@@ -2190,7 +2172,6 @@\n {\n   if (GET_CODE (operands[1]) == CONST_INT)\n     {\n-#ifndef NO_ADDSUB_Q\n       /* If the constant would be a negative number when interpreted as\n \t HImode, make it negative.  This is usually, but not always, done\n \t elsewhere in the compiler.  First check for constants out of range,\n@@ -2226,7 +2207,6 @@\n \t      return \\\"subq%.w %#8,%0\\;subq%.w %1,%0\\\";\n \t    }\n \t}\n-#endif\n       if (ADDRESS_REG_P (operands[0]) && !TARGET_68040)\n #ifdef MOTOROLA  \n \t    return \\\"lea (%c1,%0),%0\\\";\n@@ -2244,7 +2224,6 @@\n   \"!TARGET_5200\"\n   \"*\n {\n-#ifndef NO_ADDSUB_Q\n   if (GET_CODE (operands[2]) == CONST_INT)\n     {\n       if (INTVAL (operands[2]) >= 128)\n@@ -2259,7 +2238,6 @@\n \t return \\\"subq%.b %2,%0\\\";\n        }\n     }\n-#endif\n   return \\\"add%.b %2,%0\\\";\n }\")\n \n@@ -2270,7 +2248,6 @@\n   \"!TARGET_5200\"\n   \"*\n {\n-#ifndef NO_ADDSUB_Q\n   if (GET_CODE (operands[1]) == CONST_INT)\n     {\n       if (INTVAL (operands[1]) >= 128)\n@@ -2285,7 +2262,6 @@\n \t return \\\"subq%.b %1,%0\\\";\n        }\n     }\n-#endif\n   return \\\"add%.b %1,%0\\\";\n }\")\n \n@@ -2296,7 +2272,6 @@\n   \"!TARGET_5200\"\n   \"*\n {\n-#ifndef NO_ADDSUB_Q\n   if (GET_CODE (operands[1]) == CONST_INT)\n     {\n       if (INTVAL (operands[1]) >= 128)\n@@ -2311,7 +2286,6 @@\n \t return \\\"subq%.b %1,%0\\\";\n        }\n     }\n-#endif\n   return \\\"add%.b %1,%0\\\";\n }\")\n \n@@ -2478,21 +2452,11 @@\n \t  if (GET_CODE (operands[1]) == CONST_INT)\n \t    {\n \t      if (INTVAL (operands[1]) > 0 && INTVAL (operands[1]) <= 8)\n-\t\t{\n-#ifdef NO_ADDSUB_Q\n-\t\t  return \\\"sub%.l %1,%R0\\;subx%.l %3,%0\\\";\n-#else\n-\t\t  return \\\"subq%.l %1,%R0\\;subx%.l %3,%0\\\";\n-#endif\n-\t\t}\n+\t\treturn \\\"subq%.l %1,%R0\\;subx%.l %3,%0\\\";\n \t      else if (INTVAL (operands[1]) >= -8 && INTVAL (operands[1]) < 0)\n \t\t{\n \t\t  operands[1] = GEN_INT (-INTVAL (operands[1]));\n-#ifdef NO_ADDSUB_Q\n-\t\t  return \\\"add%.l %1,%R0\\;addx%.l %3,%0\\\";\n-#else\n \t\t  return \\\"addq%.l %1,%R0\\;addx%.l %3,%0\\\";\n-#endif\n \t\t}\n \t    }\n \t  return \\\"sub%.l %1,%R0\\;subx%.l %3,%0\\\";\n@@ -6571,22 +6535,14 @@\n   if (GET_CODE (operands[0]) == MEM)\n     {\n #ifdef MOTOROLA\n-#ifdef NO_ADDSUB_Q\n-      return \\\"sub%.w %#1,%0\\;jbcc %l1\\\";\n-#else\n       return \\\"subq%.w %#1,%0\\;jbcc %l1\\\";\n-#endif\n #else /* not MOTOROLA */\n       return \\\"subqw %#1,%0\\;jcc %l1\\\";\n #endif\n     }\n #ifdef MOTOROLA\n #ifdef SGS_CMP_ORDER\n-#ifdef NO_ADDSUB_Q\n-  return \\\"sub%.w %#1,%0\\;cmp%.w %0,%#-1\\;jbne %l1\\\";\n-#else\n   return \\\"subq%.w %#1,%0\\;cmp%.w %0,%#-1\\;jbne %l1\\\";\n-#endif\n #else /* not SGS_CMP_ORDER */\n   return \\\"subq%.w %#1,%0\\;cmp%.w %#-1,%0\\;jbne %l1\\\";\n #endif\n@@ -6610,23 +6566,12 @@\n {\n   CC_STATUS_INIT;\n #ifdef MOTOROLA\n-#ifdef NO_ADDSUB_Q\n-  if (DATA_REG_P (operands[0]))\n-    return \\\"dbra %0,%l1\\;clr%.w %0\\;sub%.l %#1,%0\\;jbcc %l1\\\";\n-  if (GET_CODE (operands[0]) == MEM)\n-    return \\\"sub%.l %#1,%0\\;jbcc %l1\\\";\n-#else\n   if (DATA_REG_P (operands[0]))\n     return \\\"dbra %0,%l1\\;clr%.w %0\\;subq%.l %#1,%0\\;jbcc %l1\\\";\n   if (GET_CODE (operands[0]) == MEM)\n     return \\\"subq%.l %#1,%0\\;jbcc %l1\\\";\n-#endif /* NO_ADDSUB_Q */\n #ifdef SGS_CMP_ORDER\n-#ifdef NO_ADDSUB_Q\n-  return \\\"sub.l %#1,%0\\;cmp.l %0,%#-1\\;jbne %l1\\\";\n-#else\n   return \\\"subq.l %#1,%0\\;cmp.l %0,%#-1\\;jbne %l1\\\";\n-#endif\n #else /* not SGS_CMP_ORDER */\n   return \\\"subq.l %#1,%0\\;cmp.l %#-1,%0\\;jbne %l1\\\";\n #endif /* not SGS_CMP_ORDER */\n@@ -6657,23 +6602,12 @@\n {\n   CC_STATUS_INIT;\n #ifdef MOTOROLA\n-#ifdef NO_ADDSUB_Q\n-  if (DATA_REG_P (operands[0]))\n-    return \\\"dbra %0,%l1\\\";\n-  if (GET_CODE (operands[0]) == MEM)\n-    return \\\"sub%.w %#1,%0\\;jbcc %l1\\\";\n-#else\n   if (DATA_REG_P (operands[0]))\n     return \\\"dbra %0,%l1\\\";\n   if (GET_CODE (operands[0]) == MEM)\n     return \\\"subq%.w %#1,%0\\;jbcc %l1\\\";\n-#endif\n #ifdef SGS_CMP_ORDER\n-#ifdef NO_ADDSUB_Q\n-  return \\\"sub.w %#1,%0\\;cmp.w %0,%#-1\\;jbne %l1\\\";\n-#else\n   return \\\"subq.w %#1,%0\\;cmp.w %0,%#-1\\;jbne %l1\\\";\n-#endif\n #else /* not SGS_CMP_ORDER */\n   return \\\"subq.w %#1,%0\\;cmp.w %#-1,%0\\;jbne %l1\\\";\n #endif /* not SGS_CMP_ORDER */\n@@ -6716,23 +6650,12 @@\n {\n   CC_STATUS_INIT;\n #ifdef MOTOROLA\n-#ifdef NO_ADDSUB_Q\n-  if (DATA_REG_P (operands[0]))\n-    return \\\"dbra %0,%l1\\;clr%.w %0\\;sub%.l %#1,%0\\;jbcc %l1\\\";\n-  if (GET_CODE (operands[0]) == MEM)\n-    return \\\"sub%.l %#1,%0\\;jbcc %l1\\\";\n-#else\n   if (DATA_REG_P (operands[0]))\n     return \\\"dbra %0,%l1\\;clr%.w %0\\;subq%.l %#1,%0\\;jbcc %l1\\\";\n   if (GET_CODE (operands[0]) == MEM)\n     return \\\"subq%.l %#1,%0\\;jbcc %l1\\\";\n-#endif\n #ifdef SGS_CMP_ORDER\n-#ifdef NO_ADDSUB_Q\n-  return \\\"sub.l %#1,%0\\;cmp.l %0,%#-1\\;jbne %l1\\\";\n-#else\n   return \\\"subq.l %#1,%0\\;cmp.l %0,%#-1\\;jbne %l1\\\";\n-#endif\n #else /* not SGS_CMP_ORDER */\n   return \\\"subq.l %#1,%0\\;cmp.l %#-1,%0\\;jbne %l1\\\";\n #endif /* not SGS_CMP_ORDER */\n@@ -7048,7 +6971,6 @@\n       rtx xoperands[2];\n       xoperands[0] = stack_pointer_rtx;\n       xoperands[1] = GEN_INT (INTVAL (operands[0]) - 4);\n-#ifndef NO_ADDSUB_Q\n       if (INTVAL (xoperands[1]) <= 8)\n \t{\n \t  if (!TARGET_5200)\n@@ -7061,9 +6983,7 @@\n \t  xoperands[1] = GEN_INT (INTVAL (xoperands[1]) - 8);\n \t  output_asm_insn (\\\"addq%.w %#8,%0\\;addq%.w %1,%0\\\", xoperands);\n \t}\n-      else\n-#endif\n-        if (INTVAL (xoperands[1]) <= 0x7FFF)\n+      else if (INTVAL (xoperands[1]) <= 0x7FFF)\n         {\n \t  if (TARGET_68040)\n \t    output_asm_insn (\\\"add%.w %1,%0\\\", xoperands);\n@@ -7098,7 +7018,6 @@\n       rtx xoperands[2];\n       xoperands[0] = stack_pointer_rtx;\n       xoperands[1] = GEN_INT (INTVAL (operands[0]) - 4);\n-#ifndef NO_ADDSUB_Q\n       if (INTVAL (xoperands[1]) <= 8)\n \t{\n \t  if (!TARGET_5200)\n@@ -7111,9 +7030,7 @@\n \t  xoperands[1] = GEN_INT (INTVAL (xoperands[1]) - 8);\n \t  output_asm_insn (\\\"addq%.w %#8,%0\\;addq%.w %1,%0\\\", xoperands);\n \t}\n-      else\n-#endif\n-        if (INTVAL (xoperands[1]) <= 0x7FFF)\n+      else if (INTVAL (xoperands[1]) <= 0x7FFF)\n         {\n \t  if (TARGET_68040)\n \t    output_asm_insn (\\\"add%.w %1,%0\\\", xoperands);"}]}