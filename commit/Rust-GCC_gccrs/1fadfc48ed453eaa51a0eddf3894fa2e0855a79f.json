{"sha": "1fadfc48ed453eaa51a0eddf3894fa2e0855a79f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZhZGZjNDhlZDQ1M2VhYTUxYTBlZGRmMzg5NGZhMmUwODU1YTc5Zg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-19T23:29:18Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-19T23:29:18Z"}, "message": "(cmphi, movhi, movstricthi, extendhisi2): Correct generation of short integer (Halfword)\n\n(cmphi, movhi, movstricthi, extendhisi2): Correct generation of short\ninteger (Halfword)\n({add,sub,mul,and,ior,xor}hi3): Likewise.\n\nFrom-SVN: r10379", "tree": {"sha": "1f748efc0c390c0da605d0cb8fab8475ea4bc4de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f748efc0c390c0da605d0cb8fab8475ea4bc4de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fadfc48ed453eaa51a0eddf3894fa2e0855a79f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fadfc48ed453eaa51a0eddf3894fa2e0855a79f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fadfc48ed453eaa51a0eddf3894fa2e0855a79f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fadfc48ed453eaa51a0eddf3894fa2e0855a79f/comments", "author": null, "committer": null, "parents": [{"sha": "f2423e1975946cbe71f9302c38e84de26e1789b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2423e1975946cbe71f9302c38e84de26e1789b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2423e1975946cbe71f9302c38e84de26e1789b2"}], "stats": {"total": 64, "additions": 32, "deletions": 32}, "files": [{"sha": "2e4e3b74ec240d08277987cc79076a05d6ad17ee", "filename": "gcc/config/i370/i370.md", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fadfc48ed453eaa51a0eddf3894fa2e0855a79f/gcc%2Fconfig%2Fi370%2Fi370.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fadfc48ed453eaa51a0eddf3894fa2e0855a79f/gcc%2Fconfig%2Fi370%2Fi370.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fi370.md?ref=1fadfc48ed453eaa51a0eddf3894fa2e0855a79f", "patch": "@@ -1,7 +1,7 @@\n ;;- Machine description for GNU compiler -- System/370 version.\n-;;  Copyright (C) 1989, 1993, 1994 Free Software Foundation, Inc.\n+;;  Copyright (C) 1989, 1993, 1994, 1995 Free Software Foundation, Inc.\n ;;  Contributed by Jan Stein (jan@cd.chalmers.se).\n-;;  Modified for MVS C/370 by Dave Pitts (pitts@mcdata.com)\n+;;  Modified for MVS C/370 by Dave Pitts (dpitts@nyx.cs.du.edu)\n \n ;; This file is part of GNU CC.\n \n@@ -266,8 +266,8 @@\n     }\n   if (GET_CODE (operands[1]) == CONST_INT)\n     {\n-      mvs_check_page (0, 4, 2);\n-      return \\\"CH\t%0,=H'%h1'\\\";\n+      mvs_check_page (0, 4, 0);\n+      return \\\"CH\t%0,%H1\\\";\n     }\n   mvs_check_page (0, 4, 0);\n   return \\\"CH\t%0,%1\\\";\n@@ -781,8 +781,8 @@ check_label_emit ();\n \t}\n       if (GET_CODE (operands[1]) == CONST_INT)\n \t{\n-\t  mvs_check_page (0, 4, 2);\n-\t  return \\\"LH\t%0,=H'%h1'\\\";\n+\t  mvs_check_page (0, 4, 0);\n+\t  return \\\"LH\t%0,%H1\\\";\n \t}\n       mvs_check_page (0, 4, 0);\n       return \\\"LH\t%0,%1\\\";\n@@ -795,7 +795,7 @@ check_label_emit ();\n   if (GET_CODE (operands[1]) == CONST_INT)\n     {\n       mvs_check_page (0, 6, 0);\n-      return \\\"MVC\t%O0(2,%R0),=H'%h1'\\\";\n+      return \\\"MVC\t%O0(2,%R0),%H1\\\";\n     }\n   mvs_check_page (0, 6, 0);\n   return \\\"MVC\t%O0(2,%R0),%1\\\";\n@@ -829,8 +829,8 @@ check_label_emit ();\n \t}\n       if (GET_CODE (operands[1]) == CONST_INT)\n \t{\n-\t  mvs_check_page (0, 4, 2);\n-\t  return \\\"LH\t%0,=H'%h1'\\\";\n+\t  mvs_check_page (0, 4, 0);\n+\t  return \\\"LH\t%0,%H1\\\";\n \t}\n       mvs_check_page (0, 4, 0);\n       return \\\"LH\t%0,%1\\\";\n@@ -965,8 +965,8 @@ check_label_emit ();\n     }\n   else if (GET_CODE (operands[1]) == CONST_INT)\n     {\n-      mvs_check_page (0, 4, 2);\n-      return \\\"ICM\t%0,3,=H'%h1'\\\";\n+      mvs_check_page (0, 4, 0);\n+      return \\\"ICM\t%0,3,%H1\\\";\n     }\n   mvs_check_page (0, 4, 0);\n   return \\\"ICM\t%0,3,%1\\\";\n@@ -1367,14 +1367,14 @@ check_label_emit ();\n \t}\n       if (GET_CODE (operands[1]) == CONST_INT)\n \t{\n-\t  mvs_check_page (0, 4, 2);\n-\t  return \\\"LH\t%0,=H'%h1'\\\";\n+\t  mvs_check_page (0, 4, 0);\n+\t  return \\\"LH\t%0,%H1\\\";\n \t}\n       mvs_check_page (0, 4, 0);\n       return \\\"LH\t%0,%1\\\";\n     }\n   mvs_check_page (0, 4, 0);\n-  return \\\"SLL\t%0,16\\;SRA\t%0,16\\;ST\t%1,%0\\\";\n+  return \\\"SLL\t%1,16\\;SRA\t%1,16\\;ST\t%1,%0\\\";\n }\")\n \n ;\n@@ -1780,7 +1780,7 @@ check_label_emit ();\n   check_label_emit ();\n   if (REG_P (operands[2]))\n     {\n-      mvs_check_page (0, 2, 0);\n+      mvs_check_page (0, 8, 0);\n       return \\\"STH\t%2,140(,13)\\;AH\t%0,140(,13)\\\";\n     }\n   if (GET_CODE (operands[2]) == CONST_INT)\n@@ -1791,8 +1791,8 @@ check_label_emit ();\n \t  mvs_check_page (0, 2, 0);\n \t  return \\\"BCTR\t%0,0\\\";\n \t}\n-      mvs_check_page (0, 4, 2);\n-      return \\\"AH\t%0,=H'%h2'\\\";\n+      mvs_check_page (0, 4, 0);\n+      return \\\"AH\t%0,%H2\\\";\n     }\n   mvs_check_page (0, 4, 0);\n   return \\\"AH\t%0,%2\\\";\n@@ -1977,7 +1977,7 @@ check_label_emit ();\n   check_label_emit ();\n   if (REG_P (operands[2]))\n     {\n-      mvs_check_page (0, 2, 0);\n+      mvs_check_page (0, 8, 0);\n       return \\\"STH\t%2,140(,13)\\;SH\t%0,140(,13)\\\";\n     }\n   if (operands[2] == const1_rtx)\n@@ -1988,8 +1988,8 @@ check_label_emit ();\n     }\n   if (GET_CODE (operands[2]) == CONST_INT)\n     {\n-      mvs_check_page (0, 4, 2);\n-      return \\\"SH\t%0,=H'%h2'\\\";\n+      mvs_check_page (0, 4, 0);\n+      return \\\"SH\t%0,%H2\\\";\n     }\n   mvs_check_page (0, 4, 0);\n   return \\\"SH\t%0,%2\\\";\n@@ -2125,7 +2125,7 @@ check_label_emit ();\n {\n   check_label_emit ();\n   mvs_check_page (0, 4, 0);\n-  return \\\"MH\t%0,%2\\\";\n+  return \\\"MH\t%0,%H2\\\";\n }\")\n \n (define_insn \"\"\n@@ -2551,13 +2551,13 @@ check_label_emit ();\n   if (REG_P (operands[0]))\n     {\n       mvs_check_page (0, 4, 0);\n-      return \\\"N\t%0,%H2\\\";\n+      return \\\"N\t%0,%2\\\";\n     }\n   CC_STATUS_INIT;\n   if (GET_CODE (operands[2]) == CONST_INT)\n     {\n-      mvs_check_page (0, 6, 2);\n-      return \\\"NC\t%O0(2,%R0),=H'%h2'\\\";\n+      mvs_check_page (0, 6, 0);\n+      return \\\"NC\t%O0(2,%R0),%H2\\\";\n     }\n   mvs_check_page (0, 6, 0);\n   return \\\"NC\t%O0(2,%R0),%2\\\";\n@@ -2574,7 +2574,7 @@ check_label_emit ();\n   if (GET_CODE (operands[2]) == CONST_INT)\n     {\n       mvs_check_page (0, 4, 0);\n-      return \\\"N\t%0,%H2\\\";\n+      return \\\"N\t%0,%2\\\";\n     }\n   mvs_check_page (0, 2, 0);\n   return \\\"NR\t%0,%2\\\";\n@@ -2720,13 +2720,13 @@ check_label_emit ();\n   if (REG_P (operands[0]))\n     {\n       mvs_check_page (0, 4, 0);\n-      return \\\"O\t%0,%H2\\\";\n+      return \\\"O\t%0,%2\\\";\n     }\n   CC_STATUS_INIT;\n   if (GET_CODE (operands[2]) == CONST_INT)\n     {\n-      mvs_check_page (0, 6, 2);\n-      return \\\"OC\t%O0(2,%R0),=H'%h2'\\\";\n+      mvs_check_page (0, 6, 0);\n+      return \\\"OC\t%O0(2,%R0),%H2\\\";\n     }\n   mvs_check_page (0, 6, 0);\n   return \\\"OC\t%O0(2,%R0),%2\\\";\n@@ -2743,7 +2743,7 @@ check_label_emit ();\n   if (GET_CODE (operands[2]) == CONST_INT)\n     {\n       mvs_check_page (0, 4, 0);\n-      return \\\"O\t%0,%H2\\\";\n+      return \\\"O\t%0,%2\\\";\n     }\n   mvs_check_page (0, 2, 0);\n   return \\\"OR\t%0,%2\\\";\n@@ -2890,13 +2890,13 @@ check_label_emit ();\n   if (REG_P (operands[0]))\n     {\n       mvs_check_page (0, 4, 0);\n-      return \\\"X\t%0,%H2\\\";\n+      return \\\"X\t%0,%2\\\";\n     }\n   CC_STATUS_INIT;\n   if (GET_CODE (operands[2]) == CONST_INT)\n     {\n-      mvs_check_page (0, 6, 2);\n-      return \\\"XC\t%O0(2,%R0),=H'%h2'\\\";\n+      mvs_check_page (0, 6, 0);\n+      return \\\"XC\t%O0(2,%R0),%H2\\\";\n     }\n   mvs_check_page (0, 6, 0);\n   return \\\"XC\t%O0(2,%R0),%2\\\";"}]}