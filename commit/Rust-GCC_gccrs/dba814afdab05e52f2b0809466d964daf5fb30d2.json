{"sha": "dba814afdab05e52f2b0809466d964daf5fb30d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJhODE0YWZkYWIwNWU1MmYyYjA4MDk0NjZkOTY0ZGFmNWZiMzBkMg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-11-22T16:31:19Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-11-22T16:31:19Z"}, "message": "PR78465 Remove runtime tests for <atomic> macros\n\n\tPR libstdc++/78465\n\t* testsuite/29_atomics/headers/atomic/macros.cc: Replace runtime tests\n\twith preprocessor conditions.\n\nFrom-SVN: r242704", "tree": {"sha": "0e65f9ac813cc3aca07e048e1a074d9f010e580e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e65f9ac813cc3aca07e048e1a074d9f010e580e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dba814afdab05e52f2b0809466d964daf5fb30d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dba814afdab05e52f2b0809466d964daf5fb30d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dba814afdab05e52f2b0809466d964daf5fb30d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dba814afdab05e52f2b0809466d964daf5fb30d2/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d382ed61b571550179b016b5809790613cda1a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d382ed61b571550179b016b5809790613cda1a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d382ed61b571550179b016b5809790613cda1a1"}], "stats": {"total": 73, "additions": 26, "deletions": 47}, "files": [{"sha": "29d6eb7b7112efedb1f0efdd6526821785032a33", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba814afdab05e52f2b0809466d964daf5fb30d2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba814afdab05e52f2b0809466d964daf5fb30d2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=dba814afdab05e52f2b0809466d964daf5fb30d2", "patch": "@@ -1,3 +1,9 @@\n+2016-11-22  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/78465\n+\t* testsuite/29_atomics/headers/atomic/macros.cc: Replace runtime tests\n+\twith preprocessor conditions.\n+\n 2016-11-21  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* acinclude.m4 (GLIBCXX_CHECK_MATH11_PROTO): Update comments."}, {"sha": "4cb3e1ae9886e780b9d81509ff39cb79e0cb778d", "filename": "libstdc++-v3/testsuite/29_atomics/headers/atomic/macros.cc", "status": "modified", "additions": 20, "deletions": 47, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba814afdab05e52f2b0809466d964daf5fb30d2/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fheaders%2Fatomic%2Fmacros.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba814afdab05e52f2b0809466d964daf5fb30d2/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fheaders%2Fatomic%2Fmacros.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fheaders%2Fatomic%2Fmacros.cc?ref=dba814afdab05e52f2b0809466d964daf5fb30d2", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do compile { target c++11 } }\n+// { dg-do preprocess { target c++11 } }\n \n // Copyright (C) 2008-2016 Free Software Foundation, Inc.\n //\n@@ -21,42 +21,61 @@\n \n #ifndef ATOMIC_BOOL_LOCK_FREE \n # error \"ATOMIC_BOOL_LOCK_FREE must be a macro\"\n+#elif ATOMIC_BOOL_LOCK_FREE != 1 && ATOMIC_BOOL_LOCK_FREE != 2\n+# error \"ATOMIC_BOOL_LOCK_FREE must be 1 or 2\"\n #endif\n \n #ifndef ATOMIC_CHAR_LOCK_FREE \n # error \"ATOMIC_CHAR_LOCK_FREE must be a macro\"\n+#elif ATOMIC_CHAR_LOCK_FREE != 1 && ATOMIC_CHAR_LOCK_FREE != 2\n+# error \"ATOMIC_CHAR_LOCK_FREE must be 1 or 2\"\n #endif\n \n #ifndef ATOMIC_CHAR16_T_LOCK_FREE \n # error \"ATOMIC_CHAR16_T_LOCK_FREE must be a macro\"\n+#elif ATOMIC_CHAR16_T_LOCK_FREE != 1 && ATOMIC_CHAR16_T_LOCK_FREE != 2\n #endif\n \n #ifndef ATOMIC_CHAR32_T_LOCK_FREE \n # error \"ATOMIC_CHAR32_T_LOCK_FREE must be a macro\"\n+#elif ATOMIC_CHAR32_T_LOCK_FREE != 1 && ATOMIC_CHAR32_T_LOCK_FREE != 2\n+# error \"ATOMIC_CHAR32_T_LOCK_FREE must be 1 or 2\"\n #endif\n \n #ifndef ATOMIC_WCHAR_T_LOCK_FREE \n # error \"ATOMIC_WCHAR_T_LOCK_FREE must be a macro\"\n+#elif ATOMIC_WCHAR_T_LOCK_FREE != 1 && ATOMIC_WCHAR_T_LOCK_FREE != 2\n+# error \"ATOMIC_WCHAR_T_LOCK_FREE must be 1 or 2\"\n #endif\n \n #ifndef ATOMIC_SHORT_LOCK_FREE \n # error \"ATOMIC_SHORT_LOCK_FREE must be a macro\"\n+#elif ATOMIC_SHORT_LOCK_FREE != 1 && ATOMIC_SHORT_LOCK_FREE != 2\n+# error \"ATOMIC_SHORT_LOCK_FREE must be 1 or 2\"\n #endif\n \n #ifndef ATOMIC_INT_LOCK_FREE \n # error \"ATOMIC_INT_LOCK_FREE must be a macro\"\n+#elif ATOMIC_INT_LOCK_FREE != 1 && ATOMIC_INT_LOCK_FREE != 2\n+# error \"ATOMIC_INT_LOCK_FREE must be 1 or 2\"\n #endif\n \n #ifndef ATOMIC_LONG_LOCK_FREE \n # error \"ATOMIC_LONG_LOCK_FREE must be a macro\"\n+#elif ATOMIC_LONG_LOCK_FREE != 1 && ATOMIC_LONG_LOCK_FREE != 2\n+# error \"ATOMIC_LONG_LOCK_FREE must be 1 or 2\"\n #endif\n \n #ifndef ATOMIC_LLONG_LOCK_FREE \n # error \"ATOMIC_LLONG_LOCK_FREE must be a macro\"\n+#elif ATOMIC_LLONG_LOCK_FREE != 1 && ATOMIC_LLONG_LOCK_FREE != 2\n+# error \"ATOMIC_LLONG_LOCK_FREE must be 1 or 2\"\n #endif\n \n #ifndef ATOMIC_POINTER_LOCK_FREE \n # error \"ATOMIC_POINTER_LOCK_FREE must be a macro\"\n+#elif ATOMIC_POINTER_LOCK_FREE != 1 && ATOMIC_POINTER_LOCK_FREE != 2\n+# error \"ATOMIC_POINTER_LOCK_FREE must be 1 or 2\"\n #endif\n \n #ifndef ATOMIC_FLAG_INIT\n@@ -66,49 +85,3 @@\n #ifndef ATOMIC_VAR_INIT\n     #error \"ATOMIC_VAR_INIT_must_be_a_macro\"\n #endif\n-\n-\n-extern void abort(void);\n-\n-int main ()\n-{\n-#if (ATOMIC_BOOL_LOCK_FREE != 1 && ATOMIC_BOOL_LOCK_FREE != 2)\n-   abort ();\n-#endif\n-\n-#if (ATOMIC_CHAR_LOCK_FREE != 1 && ATOMIC_CHAR_LOCK_FREE != 2)\n-   abort ();\n-#endif\n-\n-#if (ATOMIC_CHAR16_T_LOCK_FREE != 1 && ATOMIC_CHAR16_T_LOCK_FREE != 2)\n-   abort ();\n-#endif\n-\n-#if (ATOMIC_CHAR32_T_LOCK_FREE != 1 && ATOMIC_CHAR32_T_LOCK_FREE != 2)\n-   abort ();\n-#endif\n-\n-#if (ATOMIC_WCHAR_T_LOCK_FREE != 1 && ATOMIC_WCHAR_T_LOCK_FREE != 2)\n-   abort ();\n-#endif\n-\n-#if (ATOMIC_SHORT_LOCK_FREE != 1 && ATOMIC_SHORT_LOCK_FREE != 2)\n-   abort ();\n-#endif\n-\n-#if (ATOMIC_INT_LOCK_FREE != 1 && ATOMIC_INT_LOCK_FREE != 2)\n-   abort ();\n-#endif\n-\n-#if (ATOMIC_LONG_LOCK_FREE != 1 && ATOMIC_LONG_LOCK_FREE != 2)\n-   abort ();\n-#endif\n-\n-#if (ATOMIC_LLONG_LOCK_FREE != 1 && ATOMIC_LLONG_LOCK_FREE != 2)\n-   abort ();\n-#endif\n-\n-#if (ATOMIC_POINTER_LOCK_FREE != 1 && ATOMIC_POINTER_LOCK_FREE != 2)\n-   abort ();\n-#endif\n-}"}]}