{"sha": "4ecfc7e3debac53a30558d7ae33e8cdfdf351466", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVjZmM3ZTNkZWJhYzUzYTMwNTU4ZDdhZTMzZThjZGZkZjM1MTQ2Ng==", "commit": {"author": {"name": "YunQiang Su", "email": "yunqiang.su@cipunited.com", "date": "2021-08-28T11:28:55Z"}, "committer": {"name": "YunQiang Su", "email": "syq@debian.org", "date": "2021-08-31T01:34:57Z"}, "message": "MIPS: use mips_isa enum instead hardcoded numbers\n\nCurrently mips-cpu.defs, mips.h, netbsd.h and config.gcc are\nusing hardcoded numbers for isa level.\n\nLet's replace them with more readable enum mips_isa.\n\ngcc/ChangeLog:\n\t* config/mips/mips.h (struct mips_cpu_info): define enum mips_isa;\n\t  use enum instead of int for 'isa' member.\n\t* config.gcc, config/mips/mips.c, config/mips/mips-cpus.def,\n\t  config/mips/netbsd.h: replace hardcoded numbers with enum.", "tree": {"sha": "d51b174c6137a0d4eea7ac4f377c9f159c27b415", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d51b174c6137a0d4eea7ac4f377c9f159c27b415"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ecfc7e3debac53a30558d7ae33e8cdfdf351466", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ecfc7e3debac53a30558d7ae33e8cdfdf351466", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ecfc7e3debac53a30558d7ae33e8cdfdf351466", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ecfc7e3debac53a30558d7ae33e8cdfdf351466/comments", "author": null, "committer": {"login": "wzssyqa", "id": 163337, "node_id": "MDQ6VXNlcjE2MzMzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/163337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wzssyqa", "html_url": "https://github.com/wzssyqa", "followers_url": "https://api.github.com/users/wzssyqa/followers", "following_url": "https://api.github.com/users/wzssyqa/following{/other_user}", "gists_url": "https://api.github.com/users/wzssyqa/gists{/gist_id}", "starred_url": "https://api.github.com/users/wzssyqa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wzssyqa/subscriptions", "organizations_url": "https://api.github.com/users/wzssyqa/orgs", "repos_url": "https://api.github.com/users/wzssyqa/repos", "events_url": "https://api.github.com/users/wzssyqa/events{/privacy}", "received_events_url": "https://api.github.com/users/wzssyqa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4b41701382885fc6219045bed207ec645fded2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4b41701382885fc6219045bed207ec645fded2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4b41701382885fc6219045bed207ec645fded2e"}], "stats": {"total": 384, "additions": 203, "deletions": 181}, "files": [{"sha": "0eba332bd45cafe314adda591e883e50027b4005", "filename": "gcc/config.gcc", "status": "modified", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ecfc7e3debac53a30558d7ae33e8cdfdf351466/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ecfc7e3debac53a30558d7ae33e8cdfdf351466/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=4ecfc7e3debac53a30558d7ae33e8cdfdf351466", "patch": "@@ -2512,7 +2512,7 @@ mips*-img-linux*)\n \ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h linux-android.h glibc-stdint.h ${tm_file} mips/gnu-user.h mips/linux.h mips/linux-common.h mips/mti-linux.h\"\n \textra_options=\"${extra_options} linux-android.opt\"\n \ttmake_file=\"${tmake_file} mips/t-img-linux\"\n-\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=37 MIPS_ABI_DEFAULT=ABI_32\"\n+\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=MIPS_ISA_MIPS32R6 MIPS_ABI_DEFAULT=ABI_32\"\n \twith_arch_32=\"mips32r6\"\n \twith_arch_64=\"mips64r6\"\n \tgnu_ld=yes\n@@ -2522,7 +2522,7 @@ mips*-mti-linux*)\n \ttm_file=\"dbxelf.h elfos.h gnu-user.h linux.h linux-android.h glibc-stdint.h ${tm_file} mips/gnu-user.h mips/linux.h mips/linux-common.h mips/mti-linux.h\"\n \textra_options=\"${extra_options} linux-android.opt\"\n \ttmake_file=\"${tmake_file} mips/t-mti-linux\"\n-\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=33 MIPS_ABI_DEFAULT=ABI_32\"\n+\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=MIPS_ISA_MIPS32R2 MIPS_ABI_DEFAULT=ABI_32\"\n \twith_arch_32=\"mips32r2\"\n \twith_arch_64=\"mips64r2\"\n \tgnu_ld=yes\n@@ -2592,14 +2592,14 @@ mips*-*-linux*)\t\t\t\t# Linux MIPS, either endian.\n mips*-mti-elf*)\n \ttm_file=\"elfos.h newlib-stdint.h ${tm_file} mips/elf.h mips/n32-elf.h mips/sde.h mips/mti-elf.h\"\n \ttmake_file=\"mips/t-mti-elf\"\n-\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=33 MIPS_ABI_DEFAULT=ABI_32\"\n+\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=MIPS_ISA_MIPS32R2 MIPS_ABI_DEFAULT=ABI_32\"\n \twith_arch_32=\"mips32r2\"\n \twith_arch_64=\"mips64r2\"\n \t;;\n mips*-img-elf*)\n \ttm_file=\"elfos.h newlib-stdint.h ${tm_file} mips/elf.h mips/n32-elf.h mips/sde.h mips/mti-elf.h\"\n \ttmake_file=\"mips/t-img-elf\"\n-\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=37 MIPS_ABI_DEFAULT=ABI_32\"\n+\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=MIPS_ISA_MIPS32R6 MIPS_ABI_DEFAULT=ABI_32\"\n \twith_arch_32=\"mips32r6\"\n \twith_arch_64=\"mips64r6\"\n \t;;\n@@ -2624,22 +2624,22 @@ mips*-sde-elf*)\n \tesac\n \tcase ${target} in\n \t  mipsisa32r6*)\n-\t    tm_defines=\"MIPS_ISA_DEFAULT=37 MIPS_ABI_DEFAULT=ABI_32\"\n+\t    tm_defines=\"MIPS_ISA_DEFAULT=MIPS_ISA_MIPS32R6 MIPS_ABI_DEFAULT=ABI_32\"\n \t    ;;\n \t  mipsisa32r2*)\n-\t    tm_defines=\"MIPS_ISA_DEFAULT=33 MIPS_ABI_DEFAULT=ABI_32\"\n+\t    tm_defines=\"MIPS_ISA_DEFAULT=MIPS_ISA_MIPS32R2 MIPS_ABI_DEFAULT=ABI_32\"\n \t    ;;\n \t  mipsisa32*)\n-\t    tm_defines=\"MIPS_ISA_DEFAULT=32 MIPS_ABI_DEFAULT=ABI_32\"\n+\t    tm_defines=\"MIPS_ISA_DEFAULT=MIPS_ISA_MIPS32 MIPS_ABI_DEFAULT=ABI_32\"\n \t    ;;\n \t  mipsisa64r6*)\n-\t    tm_defines=\"MIPS_ISA_DEFAULT=69 MIPS_ABI_DEFAULT=ABI_N32\"\n+\t    tm_defines=\"MIPS_ISA_DEFAULT=MIPS_ISA_MIPS64R6 MIPS_ABI_DEFAULT=ABI_N32\"\n \t    ;;\n \t  mipsisa64r2*)\n-\t    tm_defines=\"MIPS_ISA_DEFAULT=65 MIPS_ABI_DEFAULT=ABI_N32\"\n+\t    tm_defines=\"MIPS_ISA_DEFAULT=MIPS_ISA_MIPS64R2 MIPS_ABI_DEFAULT=ABI_N32\"\n \t    ;;\n \t  mipsisa64*)\n-\t    tm_defines=\"MIPS_ISA_DEFAULT=64 MIPS_ABI_DEFAULT=ABI_N32\"\n+\t    tm_defines=\"MIPS_ISA_DEFAULT=MIPS_ISA_MIPS64 MIPS_ABI_DEFAULT=ABI_N32\"\n \t    ;;\n \tesac\n \t;;\n@@ -2653,22 +2653,22 @@ mipsisa64r6-*-elf* | mipsisa64r6el-*-elf*)\n \ttmake_file=\"mips/t-isa3264\"\n \tcase ${target} in\n \t  mipsisa32r6*)\n-\t    tm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=37\"\n+\t    tm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=MIPS_ISA_MIPS32R6\"\n \t    ;;\n \t  mipsisa32r2*)\n-\t    tm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=33\"\n+\t    tm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=MIPS_ISA_MIPS32R2\"\n \t    ;;\n \t  mipsisa32*)\n-\t    tm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=32\"\n+\t    tm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=MIPS_ISA_MIPS32\"\n \t    ;;\n \t  mipsisa64r6*)\n-\t    tm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=69\"\n+\t    tm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=MIPS_ISA_MIPS64R6\"\n \t    ;;\n \t  mipsisa64r2*)\n-\t    tm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=65\"\n+\t    tm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=MIPS_ISA_MIPS64R2\"\n \t    ;;\n \t  mipsisa64*)\n-\t    tm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=64\"\n+\t    tm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=MIPS_ISA_MIPS64\"\n \t    ;;\n \tesac\n \tcase ${target} in\n@@ -2688,12 +2688,12 @@ mipsisa64r6-*-elf* | mipsisa64r6el-*-elf*)\n mipsisa64sr71k-*-elf*)\n         tm_file=\"elfos.h newlib-stdint.h ${tm_file} mips/elf.h\"\n         tmake_file=mips/t-sr71k\n-\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=64 MIPS_CPU_STRING_DEFAULT=\\\\\\\"sr71000\\\\\\\" MIPS_ABI_DEFAULT=ABI_EABI\"\n+\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=MIPS_ISA_MIPS64 MIPS_CPU_STRING_DEFAULT=\\\\\\\"sr71000\\\\\\\" MIPS_ABI_DEFAULT=ABI_EABI\"\n         ;;\n mipsisa64sb1-*-elf* | mipsisa64sb1el-*-elf*)\n \ttm_file=\"elfos.h newlib-stdint.h ${tm_file} mips/elf.h\"\n \ttmake_file=\"mips/t-elf mips/t-sb1\"\n-\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=64 MIPS_CPU_STRING_DEFAULT=\\\\\\\"sb1\\\\\\\" MIPS_ABI_DEFAULT=ABI_O64\"\n+\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=MIPS_ISA_MIPS64 MIPS_CPU_STRING_DEFAULT=\\\\\\\"sb1\\\\\\\" MIPS_ABI_DEFAULT=ABI_O64\"\n \t;;\n mips-*-elf* | mipsel-*-elf* | mipsr5900-*-elf* | mipsr5900el-*-elf*)\n \ttm_file=\"elfos.h newlib-stdint.h ${tm_file} mips/elf.h\"\n@@ -2702,12 +2702,12 @@ mips-*-elf* | mipsel-*-elf* | mipsr5900-*-elf* | mipsr5900el-*-elf*)\n mips64r5900-*-elf* | mips64r5900el-*-elf*)\n \ttm_file=\"elfos.h newlib-stdint.h ${tm_file} mips/elf.h mips/n32-elf.h\"\n \ttmake_file=\"mips/t-elf\"\n-\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=3 MIPS_ABI_DEFAULT=ABI_N32\"\n+\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=MIPS_ISA_MIPS3 MIPS_ABI_DEFAULT=ABI_N32\"\n \t;;\n mips64-*-elf* | mips64el-*-elf*)\n \ttm_file=\"elfos.h newlib-stdint.h ${tm_file} mips/elf.h\"\n \ttmake_file=\"mips/t-elf\"\n-\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=3 MIPS_ABI_DEFAULT=ABI_O64\"\n+\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=MIPS_ISA_MIPS3 MIPS_ABI_DEFAULT=ABI_O64\"\n \t;;\n mips64vr-*-elf* | mips64vrel-*-elf*)\n         tm_file=\"elfos.h newlib-stdint.h ${tm_file} mips/vr.h mips/elf.h\"\n@@ -2717,7 +2717,7 @@ mips64vr-*-elf* | mips64vrel-*-elf*)\n mips64orion-*-elf* | mips64orionel-*-elf*)\n \ttm_file=\"elfos.h newlib-stdint.h ${tm_file} mips/elforion.h mips/elf.h\"\n \ttmake_file=\"mips/t-elf\"\n-\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=3 MIPS_ABI_DEFAULT=ABI_O64\"\n+\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=MIPS_ISA_MIPS3 MIPS_ABI_DEFAULT=ABI_O64\"\n \t;;\n mips*-*-rtems*)\n \ttm_file=\"elfos.h newlib-stdint.h ${tm_file} mips/elf.h mips/rtems.h rtems.h\"\n@@ -5367,16 +5367,16 @@ case ${target} in\n \t\t\tdefault_mips_abi=$with_abi\n \t\tfi\n \t\tcase ${default_mips_arch} in\n-\t\t    mips1)    tm_defines=\"$tm_defines MIPS_ISA_DEFAULT=1\" ;;\n-\t\t    mips2)    tm_defines=\"$tm_defines MIPS_ISA_DEFAULT=2\" ;;\n-\t\t    mips3)    tm_defines=\"$tm_defines MIPS_ISA_DEFAULT=3\" ;;\n-\t\t    mips4)    tm_defines=\"$tm_defines MIPS_ISA_DEFAULT=4\" ;;\n-\t\t    mips32)   tm_defines=\"$tm_defines MIPS_ISA_DEFAULT=32\" ;;\n-\t\t    mips32r2) tm_defines=\"$tm_defines MIPS_ISA_DEFAULT=33\" ;;\n-\t\t    mips32r6) tm_defines=\"$tm_defines MIPS_ISA_DEFAULT=37\" ;;\n-\t\t    mips64)   tm_defines=\"$tm_defines MIPS_ISA_DEFAULT=64\" ;;\n-\t\t    mips64r2) tm_defines=\"$tm_defines MIPS_ISA_DEFAULT=65\" ;;\n-\t\t    mips64r6) tm_defines=\"$tm_defines MIPS_ISA_DEFAULT=69\" ;;\n+\t\t    mips1)    tm_defines=\"$tm_defines MIPS_ISA_DEFAULT=MIPS_ISA_MIPS1\" ;;\n+\t\t    mips2)    tm_defines=\"$tm_defines MIPS_ISA_DEFAULT=MIPS_ISA_MIPS2\" ;;\n+\t\t    mips3)    tm_defines=\"$tm_defines MIPS_ISA_DEFAULT=MIPS_ISA_MIPS3\" ;;\n+\t\t    mips4)    tm_defines=\"$tm_defines MIPS_ISA_DEFAULT=MIPS_ISA_MIPS4\" ;;\n+\t\t    mips32)   tm_defines=\"$tm_defines MIPS_ISA_DEFAULT=MIPS_ISA_MIPS32\" ;;\n+\t\t    mips32r2) tm_defines=\"$tm_defines MIPS_ISA_DEFAULT=MIPS_ISA_MIPS32R2\" ;;\n+\t\t    mips32r6) tm_defines=\"$tm_defines MIPS_ISA_DEFAULT=MIPS_ISA_MIPS32R6\" ;;\n+\t\t    mips64)   tm_defines=\"$tm_defines MIPS_ISA_DEFAULT=MIPS_ISA_MIPS64\" ;;\n+\t\t    mips64r2) tm_defines=\"$tm_defines MIPS_ISA_DEFAULT=MIPS_ISA_MIPS64R2\" ;;\n+\t\t    mips64r6) tm_defines=\"$tm_defines MIPS_ISA_DEFAULT=MIPS_ISA_MIPS64R6\" ;;\n \t\tesac\n \t\tcase ${default_mips_abi} in\n \t\t    32)   tm_defines=\"$tm_defines MIPS_ABI_DEFAULT=ABI_32\" ;;"}, {"sha": "45fb6bc8bfd92cb2edf95d2eb1c885e8a37a7d96", "filename": "gcc/config/mips/mips-cpus.def", "status": "modified", "additions": 114, "deletions": 114, "changes": 228, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ecfc7e3debac53a30558d7ae33e8cdfdf351466/gcc%2Fconfig%2Fmips%2Fmips-cpus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ecfc7e3debac53a30558d7ae33e8cdfdf351466/gcc%2Fconfig%2Fmips%2Fmips-cpus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-cpus.def?ref=4ecfc7e3debac53a30558d7ae33e8cdfdf351466", "patch": "@@ -33,146 +33,146 @@ along with GCC; see the file COPYING3.  If not see\n    where the arguments are the fields of struct mips_cpu_info.  */\n \n /* Entries for generic ISAs.  */\n-MIPS_CPU (\"mips1\", PROCESSOR_R3000, 1, 0)\n-MIPS_CPU (\"mips2\", PROCESSOR_R6000, 2, PTF_AVOID_BRANCHLIKELY_SIZE)\n-MIPS_CPU (\"mips3\", PROCESSOR_R4000, 3, PTF_AVOID_BRANCHLIKELY_SIZE)\n-MIPS_CPU (\"mips4\", PROCESSOR_R10000, 4, PTF_AVOID_BRANCHLIKELY_SIZE)\n+MIPS_CPU (\"mips1\", PROCESSOR_R3000, MIPS_ISA_MIPS1, 0)\n+MIPS_CPU (\"mips2\", PROCESSOR_R6000, MIPS_ISA_MIPS2, PTF_AVOID_BRANCHLIKELY_SIZE)\n+MIPS_CPU (\"mips3\", PROCESSOR_R4000, MIPS_ISA_MIPS3, PTF_AVOID_BRANCHLIKELY_SIZE)\n+MIPS_CPU (\"mips4\", PROCESSOR_R10000, MIPS_ISA_MIPS4, PTF_AVOID_BRANCHLIKELY_SIZE)\n /* Prefer not to use branch-likely instructions for generic MIPS32rX\n    and MIPS64rX code.  The instructions were officially deprecated\n    in revisions 2 and earlier, but revision 3 is likely to downgrade\n    that to a recommendation to avoid the instructions in code that\n    isn't tuned to a specific processor.  */\n-MIPS_CPU (\"mips32\", PROCESSOR_4KC, 32, PTF_AVOID_BRANCHLIKELY_ALWAYS)\n-MIPS_CPU (\"mips32r2\", PROCESSOR_74KF2_1, 33, PTF_AVOID_BRANCHLIKELY_ALWAYS)\n+MIPS_CPU (\"mips32\", PROCESSOR_4KC, MIPS_ISA_MIPS32, PTF_AVOID_BRANCHLIKELY_ALWAYS)\n+MIPS_CPU (\"mips32r2\", PROCESSOR_74KF2_1, MIPS_ISA_MIPS32R2, PTF_AVOID_BRANCHLIKELY_ALWAYS)\n /* mips32r3 is micromips hense why it uses the M4K processor.  */\n-MIPS_CPU (\"mips32r3\", PROCESSOR_M4K, 34, PTF_AVOID_BRANCHLIKELY_ALWAYS)\n-MIPS_CPU (\"mips32r5\", PROCESSOR_P5600, 36, PTF_AVOID_BRANCHLIKELY_ALWAYS)\n-MIPS_CPU (\"mips32r6\", PROCESSOR_I6400, 37, 0)\n-MIPS_CPU (\"mips64\", PROCESSOR_5KC, 64, PTF_AVOID_BRANCHLIKELY_ALWAYS)\n+MIPS_CPU (\"mips32r3\", PROCESSOR_M4K, MIPS_ISA_MIPS32R3, PTF_AVOID_BRANCHLIKELY_ALWAYS)\n+MIPS_CPU (\"mips32r5\", PROCESSOR_P5600, MIPS_ISA_MIPS32R5, PTF_AVOID_BRANCHLIKELY_ALWAYS)\n+MIPS_CPU (\"mips32r6\", PROCESSOR_I6400, MIPS_ISA_MIPS32R6, 0)\n+MIPS_CPU (\"mips64\", PROCESSOR_5KC, MIPS_ISA_MIPS64, PTF_AVOID_BRANCHLIKELY_ALWAYS)\n /* ??? For now just tune the generic MIPS64r2 and above for 5KC as well.   */\n-MIPS_CPU (\"mips64r2\", PROCESSOR_5KC, 65, PTF_AVOID_BRANCHLIKELY_ALWAYS)\n-MIPS_CPU (\"mips64r3\", PROCESSOR_5KC, 66, PTF_AVOID_BRANCHLIKELY_ALWAYS)\n-MIPS_CPU (\"mips64r5\", PROCESSOR_5KC, 68, PTF_AVOID_BRANCHLIKELY_ALWAYS)\n-MIPS_CPU (\"mips64r6\", PROCESSOR_I6400, 69, 0)\n+MIPS_CPU (\"mips64r2\", PROCESSOR_5KC, MIPS_ISA_MIPS64R2, PTF_AVOID_BRANCHLIKELY_ALWAYS)\n+MIPS_CPU (\"mips64r3\", PROCESSOR_5KC, MIPS_ISA_MIPS64R3, PTF_AVOID_BRANCHLIKELY_ALWAYS)\n+MIPS_CPU (\"mips64r5\", PROCESSOR_5KC, MIPS_ISA_MIPS64R5, PTF_AVOID_BRANCHLIKELY_ALWAYS)\n+MIPS_CPU (\"mips64r6\", PROCESSOR_I6400, MIPS_ISA_MIPS64R6, 0)\n \n /* MIPS I processors.  */\n-MIPS_CPU (\"r3000\", PROCESSOR_R3000, 1, 0)\n-MIPS_CPU (\"r2000\", PROCESSOR_R3000, 1, 0)\n-MIPS_CPU (\"r3900\", PROCESSOR_R3900, 1, 0)\n+MIPS_CPU (\"r3000\", PROCESSOR_R3000, MIPS_ISA_MIPS1, 0)\n+MIPS_CPU (\"r2000\", PROCESSOR_R3000, MIPS_ISA_MIPS1, 0)\n+MIPS_CPU (\"r3900\", PROCESSOR_R3900, MIPS_ISA_MIPS1, 0)\n \n /* MIPS II processors.  */\n-MIPS_CPU (\"r6000\", PROCESSOR_R6000, 2, 0)\n+MIPS_CPU (\"r6000\", PROCESSOR_R6000, MIPS_ISA_MIPS2, 0)\n \n /* MIPS III processors.  */\n-MIPS_CPU (\"r4000\", PROCESSOR_R4000, 3, 0)\n-MIPS_CPU (\"vr4100\", PROCESSOR_R4100, 3, 0)\n-MIPS_CPU (\"vr4111\", PROCESSOR_R4111, 3, 0)\n-MIPS_CPU (\"vr4120\", PROCESSOR_R4120, 3, 0)\n-MIPS_CPU (\"vr4130\", PROCESSOR_R4130, 3, 0)\n-MIPS_CPU (\"vr4300\", PROCESSOR_R4300, 3, 0)\n-MIPS_CPU (\"r4400\", PROCESSOR_R4000, 3, 0)\n-MIPS_CPU (\"r4600\", PROCESSOR_R4600, 3, 0)\n-MIPS_CPU (\"orion\", PROCESSOR_R4600, 3, 0)\n-MIPS_CPU (\"r4650\", PROCESSOR_R4650, 3, 0)\n-MIPS_CPU (\"r4700\", PROCESSOR_R4700, 3, 0)\n-MIPS_CPU (\"r5900\", PROCESSOR_R5900, 3, 0)\n+MIPS_CPU (\"r4000\", PROCESSOR_R4000, MIPS_ISA_MIPS3, 0)\n+MIPS_CPU (\"vr4100\", PROCESSOR_R4100, MIPS_ISA_MIPS3, 0)\n+MIPS_CPU (\"vr4111\", PROCESSOR_R4111, MIPS_ISA_MIPS3, 0)\n+MIPS_CPU (\"vr4120\", PROCESSOR_R4120, MIPS_ISA_MIPS3, 0)\n+MIPS_CPU (\"vr4130\", PROCESSOR_R4130, MIPS_ISA_MIPS3, 0)\n+MIPS_CPU (\"vr4300\", PROCESSOR_R4300, MIPS_ISA_MIPS3, 0)\n+MIPS_CPU (\"r4400\", PROCESSOR_R4000, MIPS_ISA_MIPS3, 0)\n+MIPS_CPU (\"r4600\", PROCESSOR_R4600, MIPS_ISA_MIPS3, 0)\n+MIPS_CPU (\"orion\", PROCESSOR_R4600, MIPS_ISA_MIPS3, 0)\n+MIPS_CPU (\"r4650\", PROCESSOR_R4650, MIPS_ISA_MIPS3, 0)\n+MIPS_CPU (\"r4700\", PROCESSOR_R4700, MIPS_ISA_MIPS3, 0)\n+MIPS_CPU (\"r5900\", PROCESSOR_R5900, MIPS_ISA_MIPS3, 0)\n /* ST Loongson 2E/2F processors.  */\n-MIPS_CPU (\"loongson2e\", PROCESSOR_LOONGSON_2E, 3, PTF_AVOID_BRANCHLIKELY_SPEED)\n-MIPS_CPU (\"loongson2f\", PROCESSOR_LOONGSON_2F, 3, PTF_AVOID_BRANCHLIKELY_SPEED)\n+MIPS_CPU (\"loongson2e\", PROCESSOR_LOONGSON_2E, MIPS_ISA_MIPS3, PTF_AVOID_BRANCHLIKELY_SPEED)\n+MIPS_CPU (\"loongson2f\", PROCESSOR_LOONGSON_2F, MIPS_ISA_MIPS3, PTF_AVOID_BRANCHLIKELY_SPEED)\n \n /* MIPS IV processors. */\n-MIPS_CPU (\"r8000\", PROCESSOR_R8000, 4, 0)\n-MIPS_CPU (\"r10000\", PROCESSOR_R10000, 4, 0)\n-MIPS_CPU (\"r12000\", PROCESSOR_R10000, 4, 0)\n-MIPS_CPU (\"r14000\", PROCESSOR_R10000, 4, 0)\n-MIPS_CPU (\"r16000\", PROCESSOR_R10000, 4, 0)\n-MIPS_CPU (\"vr5000\", PROCESSOR_R5000, 4, 0)\n-MIPS_CPU (\"vr5400\", PROCESSOR_R5400, 4, 0)\n-MIPS_CPU (\"vr5500\", PROCESSOR_R5500, 4, PTF_AVOID_BRANCHLIKELY_SPEED)\n-MIPS_CPU (\"rm7000\", PROCESSOR_R7000, 4, 0)\n-MIPS_CPU (\"rm9000\", PROCESSOR_R9000, 4, 0)\n+MIPS_CPU (\"r8000\", PROCESSOR_R8000, MIPS_ISA_MIPS4, 0)\n+MIPS_CPU (\"r10000\", PROCESSOR_R10000, MIPS_ISA_MIPS4, 0)\n+MIPS_CPU (\"r12000\", PROCESSOR_R10000, MIPS_ISA_MIPS4, 0)\n+MIPS_CPU (\"r14000\", PROCESSOR_R10000, MIPS_ISA_MIPS4, 0)\n+MIPS_CPU (\"r16000\", PROCESSOR_R10000, MIPS_ISA_MIPS4, 0)\n+MIPS_CPU (\"vr5000\", PROCESSOR_R5000, MIPS_ISA_MIPS4, 0)\n+MIPS_CPU (\"vr5400\", PROCESSOR_R5400, MIPS_ISA_MIPS4, 0)\n+MIPS_CPU (\"vr5500\", PROCESSOR_R5500, MIPS_ISA_MIPS4, PTF_AVOID_BRANCHLIKELY_SPEED)\n+MIPS_CPU (\"rm7000\", PROCESSOR_R7000, MIPS_ISA_MIPS4, 0)\n+MIPS_CPU (\"rm9000\", PROCESSOR_R9000, MIPS_ISA_MIPS4, 0)\n \n /* MIPS32 processors.  */\n-MIPS_CPU (\"4kc\", PROCESSOR_4KC, 32, 0)\n-MIPS_CPU (\"4km\", PROCESSOR_4KC, 32, 0)\n-MIPS_CPU (\"4kp\", PROCESSOR_4KP, 32, 0)\n-MIPS_CPU (\"4ksc\", PROCESSOR_4KC, 32, 0)\n+MIPS_CPU (\"4kc\", PROCESSOR_4KC, MIPS_ISA_MIPS32, 0)\n+MIPS_CPU (\"4km\", PROCESSOR_4KC, MIPS_ISA_MIPS32, 0)\n+MIPS_CPU (\"4kp\", PROCESSOR_4KP, MIPS_ISA_MIPS32, 0)\n+MIPS_CPU (\"4ksc\", PROCESSOR_4KC, MIPS_ISA_MIPS32, 0)\n \n /* MIPS32 Release 2 processors.  */\n-MIPS_CPU (\"m4k\", PROCESSOR_M4K, 33, 0)\n-MIPS_CPU (\"m14kc\", PROCESSOR_M4K, 33, 0)\n-MIPS_CPU (\"m14k\", PROCESSOR_M4K, 33, 0)\n-MIPS_CPU (\"m14ke\", PROCESSOR_M4K, 33, 0)\n-MIPS_CPU (\"m14kec\", PROCESSOR_M4K, 33, 0)\n-MIPS_CPU (\"4kec\", PROCESSOR_4KC, 33, 0)\n-MIPS_CPU (\"4kem\", PROCESSOR_4KC, 33, 0)\n-MIPS_CPU (\"4kep\", PROCESSOR_4KP, 33, 0)\n-MIPS_CPU (\"4ksd\", PROCESSOR_4KC, 33, 0)\n-\n-MIPS_CPU (\"24kc\", PROCESSOR_24KC, 33, 0)\n-MIPS_CPU (\"24kf2_1\", PROCESSOR_24KF2_1, 33, 0)\n-MIPS_CPU (\"24kf\", PROCESSOR_24KF2_1, 33, 0)\n-MIPS_CPU (\"24kf1_1\", PROCESSOR_24KF1_1, 33, 0)\n-MIPS_CPU (\"24kfx\", PROCESSOR_24KF1_1, 33, 0)\n-MIPS_CPU (\"24kx\", PROCESSOR_24KF1_1, 33, 0)\n-\n-MIPS_CPU (\"24kec\", PROCESSOR_24KC, 33, 0) /* 24K with DSP.  */\n-MIPS_CPU (\"24kef2_1\", PROCESSOR_24KF2_1, 33, 0)\n-MIPS_CPU (\"24kef\", PROCESSOR_24KF2_1, 33, 0)\n-MIPS_CPU (\"24kef1_1\", PROCESSOR_24KF1_1, 33, 0)\n-MIPS_CPU (\"24kefx\", PROCESSOR_24KF1_1, 33, 0)\n-MIPS_CPU (\"24kex\", PROCESSOR_24KF1_1, 33, 0)\n-\n-MIPS_CPU (\"34kc\", PROCESSOR_24KC, 33, 0) /* 34K with MT/DSP.  */\n-MIPS_CPU (\"34kf2_1\", PROCESSOR_24KF2_1, 33, 0)\n-MIPS_CPU (\"34kf\", PROCESSOR_24KF2_1, 33, 0)\n-MIPS_CPU (\"34kf1_1\", PROCESSOR_24KF1_1, 33, 0)\n-MIPS_CPU (\"34kfx\", PROCESSOR_24KF1_1, 33, 0)\n-MIPS_CPU (\"34kx\", PROCESSOR_24KF1_1, 33, 0)\n-MIPS_CPU (\"34kn\", PROCESSOR_24KC, 33, 0)  /* 34K with MT but no DSP.  */\n-\n-MIPS_CPU (\"74kc\", PROCESSOR_74KC, 33, PTF_AVOID_IMADD) /* 74K with DSPr2.  */\n-MIPS_CPU (\"74kf2_1\", PROCESSOR_74KF2_1, 33, PTF_AVOID_IMADD)\n-MIPS_CPU (\"74kf\", PROCESSOR_74KF2_1, 33, PTF_AVOID_IMADD)\n-MIPS_CPU (\"74kf1_1\", PROCESSOR_74KF1_1, 33, PTF_AVOID_IMADD)\n-MIPS_CPU (\"74kfx\", PROCESSOR_74KF1_1, 33, PTF_AVOID_IMADD)\n-MIPS_CPU (\"74kx\", PROCESSOR_74KF1_1, 33, PTF_AVOID_IMADD)\n-MIPS_CPU (\"74kf3_2\", PROCESSOR_74KF3_2, 33, PTF_AVOID_IMADD)\n-\n-MIPS_CPU (\"1004kc\", PROCESSOR_24KC, 33, 0) /* 1004K with MT/DSP.  */\n-MIPS_CPU (\"1004kf2_1\", PROCESSOR_24KF2_1, 33, 0)\n-MIPS_CPU (\"1004kf\", PROCESSOR_24KF2_1, 33, 0)\n-MIPS_CPU (\"1004kf1_1\", PROCESSOR_24KF1_1, 33, 0)\n-\n-MIPS_CPU (\"interaptiv\", PROCESSOR_24KF2_1, 33, 0)\n+MIPS_CPU (\"m4k\", PROCESSOR_M4K, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"m14kc\", PROCESSOR_M4K, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"m14k\", PROCESSOR_M4K, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"m14ke\", PROCESSOR_M4K, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"m14kec\", PROCESSOR_M4K, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"4kec\", PROCESSOR_4KC, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"4kem\", PROCESSOR_4KC, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"4kep\", PROCESSOR_4KP, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"4ksd\", PROCESSOR_4KC, MIPS_ISA_MIPS32R2, 0)\n+\n+MIPS_CPU (\"24kc\", PROCESSOR_24KC, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"24kf2_1\", PROCESSOR_24KF2_1, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"24kf\", PROCESSOR_24KF2_1, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"24kf1_1\", PROCESSOR_24KF1_1, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"24kfx\", PROCESSOR_24KF1_1, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"24kx\", PROCESSOR_24KF1_1, MIPS_ISA_MIPS32R2, 0)\n+\n+MIPS_CPU (\"24kec\", PROCESSOR_24KC, MIPS_ISA_MIPS32R2, 0) /* 24K with DSP.  */\n+MIPS_CPU (\"24kef2_1\", PROCESSOR_24KF2_1, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"24kef\", PROCESSOR_24KF2_1, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"24kef1_1\", PROCESSOR_24KF1_1, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"24kefx\", PROCESSOR_24KF1_1, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"24kex\", PROCESSOR_24KF1_1, MIPS_ISA_MIPS32R2, 0)\n+\n+MIPS_CPU (\"34kc\", PROCESSOR_24KC, MIPS_ISA_MIPS32R2, 0) /* 34K with MT/DSP.  */\n+MIPS_CPU (\"34kf2_1\", PROCESSOR_24KF2_1, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"34kf\", PROCESSOR_24KF2_1, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"34kf1_1\", PROCESSOR_24KF1_1, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"34kfx\", PROCESSOR_24KF1_1, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"34kx\", PROCESSOR_24KF1_1, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"34kn\", PROCESSOR_24KC, MIPS_ISA_MIPS32R2, 0)  /* 34K with MT but no DSP.  */\n+\n+MIPS_CPU (\"74kc\", PROCESSOR_74KC, MIPS_ISA_MIPS32R2, PTF_AVOID_IMADD) /* 74K with DSPr2.  */\n+MIPS_CPU (\"74kf2_1\", PROCESSOR_74KF2_1, MIPS_ISA_MIPS32R2, PTF_AVOID_IMADD)\n+MIPS_CPU (\"74kf\", PROCESSOR_74KF2_1, MIPS_ISA_MIPS32R2, PTF_AVOID_IMADD)\n+MIPS_CPU (\"74kf1_1\", PROCESSOR_74KF1_1, MIPS_ISA_MIPS32R2, PTF_AVOID_IMADD)\n+MIPS_CPU (\"74kfx\", PROCESSOR_74KF1_1, MIPS_ISA_MIPS32R2, PTF_AVOID_IMADD)\n+MIPS_CPU (\"74kx\", PROCESSOR_74KF1_1, MIPS_ISA_MIPS32R2, PTF_AVOID_IMADD)\n+MIPS_CPU (\"74kf3_2\", PROCESSOR_74KF3_2, MIPS_ISA_MIPS32R2, PTF_AVOID_IMADD)\n+\n+MIPS_CPU (\"1004kc\", PROCESSOR_24KC, MIPS_ISA_MIPS32R2, 0) /* 1004K with MT/DSP.  */\n+MIPS_CPU (\"1004kf2_1\", PROCESSOR_24KF2_1, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"1004kf\", PROCESSOR_24KF2_1, MIPS_ISA_MIPS32R2, 0)\n+MIPS_CPU (\"1004kf1_1\", PROCESSOR_24KF1_1, MIPS_ISA_MIPS32R2, 0)\n+\n+MIPS_CPU (\"interaptiv\", PROCESSOR_24KF2_1, MIPS_ISA_MIPS32R2, 0)\n \n /* MIPS32 Release 5 processors.  */\n-MIPS_CPU (\"p5600\", PROCESSOR_P5600, 36, (PTF_AVOID_BRANCHLIKELY_SPEED\n+MIPS_CPU (\"p5600\", PROCESSOR_P5600, MIPS_ISA_MIPS32R5, (PTF_AVOID_BRANCHLIKELY_SPEED\n \t\t\t\t\t | PTF_AVOID_IMADD))\n-MIPS_CPU (\"m5100\", PROCESSOR_M5100, 36, PTF_AVOID_BRANCHLIKELY_SPEED)\n-MIPS_CPU (\"m5101\", PROCESSOR_M5100, 36, PTF_AVOID_BRANCHLIKELY_SPEED)\n+MIPS_CPU (\"m5100\", PROCESSOR_M5100, MIPS_ISA_MIPS32R5, PTF_AVOID_BRANCHLIKELY_SPEED)\n+MIPS_CPU (\"m5101\", PROCESSOR_M5100, MIPS_ISA_MIPS32R5, PTF_AVOID_BRANCHLIKELY_SPEED)\n \n /* MIPS64 processors.  */\n-MIPS_CPU (\"5kc\", PROCESSOR_5KC, 64, 0)\n-MIPS_CPU (\"5kf\", PROCESSOR_5KF, 64, 0)\n-MIPS_CPU (\"20kc\", PROCESSOR_20KC, 64, PTF_AVOID_BRANCHLIKELY_SPEED)\n-MIPS_CPU (\"sb1\", PROCESSOR_SB1, 64, PTF_AVOID_BRANCHLIKELY_SPEED)\n-MIPS_CPU (\"sb1a\", PROCESSOR_SB1A, 64, PTF_AVOID_BRANCHLIKELY_SPEED)\n-MIPS_CPU (\"sr71000\", PROCESSOR_SR71000, 64, PTF_AVOID_BRANCHLIKELY_SPEED)\n-MIPS_CPU (\"xlr\", PROCESSOR_XLR, 64, PTF_AVOID_BRANCHLIKELY_SPEED)\n+MIPS_CPU (\"5kc\", PROCESSOR_5KC, MIPS_ISA_MIPS64, 0)\n+MIPS_CPU (\"5kf\", PROCESSOR_5KF, MIPS_ISA_MIPS64, 0)\n+MIPS_CPU (\"20kc\", PROCESSOR_20KC, MIPS_ISA_MIPS64, PTF_AVOID_BRANCHLIKELY_SPEED)\n+MIPS_CPU (\"sb1\", PROCESSOR_SB1, MIPS_ISA_MIPS64, PTF_AVOID_BRANCHLIKELY_SPEED)\n+MIPS_CPU (\"sb1a\", PROCESSOR_SB1A, MIPS_ISA_MIPS64, PTF_AVOID_BRANCHLIKELY_SPEED)\n+MIPS_CPU (\"sr71000\", PROCESSOR_SR71000, MIPS_ISA_MIPS64, PTF_AVOID_BRANCHLIKELY_SPEED)\n+MIPS_CPU (\"xlr\", PROCESSOR_XLR, MIPS_ISA_MIPS64, PTF_AVOID_BRANCHLIKELY_SPEED)\n \n /* MIPS64 Release 2 processors.  */\n-MIPS_CPU (\"loongson3a\", PROCESSOR_GS464, 65, PTF_AVOID_BRANCHLIKELY_SPEED)\n-MIPS_CPU (\"gs464\", PROCESSOR_GS464, 65, PTF_AVOID_BRANCHLIKELY_SPEED)\n-MIPS_CPU (\"gs464e\", PROCESSOR_GS464E, 65, PTF_AVOID_BRANCHLIKELY_SPEED)\n-MIPS_CPU (\"gs264e\", PROCESSOR_GS264E, 65, PTF_AVOID_BRANCHLIKELY_SPEED)\n-MIPS_CPU (\"octeon\", PROCESSOR_OCTEON, 65, PTF_AVOID_BRANCHLIKELY_SPEED)\n-MIPS_CPU (\"octeon+\", PROCESSOR_OCTEON, 65, PTF_AVOID_BRANCHLIKELY_SPEED)\n-MIPS_CPU (\"octeon2\", PROCESSOR_OCTEON2, 65, PTF_AVOID_BRANCHLIKELY_SPEED)\n-MIPS_CPU (\"octeon3\", PROCESSOR_OCTEON3, 65, PTF_AVOID_BRANCHLIKELY_SPEED)\n-MIPS_CPU (\"xlp\", PROCESSOR_XLP, 65, PTF_AVOID_BRANCHLIKELY_SPEED)\n+MIPS_CPU (\"loongson3a\", PROCESSOR_GS464, MIPS_ISA_MIPS64R2, PTF_AVOID_BRANCHLIKELY_SPEED)\n+MIPS_CPU (\"gs464\", PROCESSOR_GS464, MIPS_ISA_MIPS64R2, PTF_AVOID_BRANCHLIKELY_SPEED)\n+MIPS_CPU (\"gs464e\", PROCESSOR_GS464E, MIPS_ISA_MIPS64R2, PTF_AVOID_BRANCHLIKELY_SPEED)\n+MIPS_CPU (\"gs264e\", PROCESSOR_GS264E, MIPS_ISA_MIPS64R2, PTF_AVOID_BRANCHLIKELY_SPEED)\n+MIPS_CPU (\"octeon\", PROCESSOR_OCTEON, MIPS_ISA_MIPS64R2, PTF_AVOID_BRANCHLIKELY_SPEED)\n+MIPS_CPU (\"octeon+\", PROCESSOR_OCTEON, MIPS_ISA_MIPS64R2, PTF_AVOID_BRANCHLIKELY_SPEED)\n+MIPS_CPU (\"octeon2\", PROCESSOR_OCTEON2, MIPS_ISA_MIPS64R2, PTF_AVOID_BRANCHLIKELY_SPEED)\n+MIPS_CPU (\"octeon3\", PROCESSOR_OCTEON3, MIPS_ISA_MIPS64R2, PTF_AVOID_BRANCHLIKELY_SPEED)\n+MIPS_CPU (\"xlp\", PROCESSOR_XLP, MIPS_ISA_MIPS64R2, PTF_AVOID_BRANCHLIKELY_SPEED)\n \n /* MIPS64 Release 6 processors.  */\n-MIPS_CPU (\"i6400\", PROCESSOR_I6400, 69, 0)\n-MIPS_CPU (\"i6500\", PROCESSOR_I6400, 69, 0)\n-MIPS_CPU (\"p6600\", PROCESSOR_P6600, 69, 0)\n+MIPS_CPU (\"i6400\", PROCESSOR_I6400, MIPS_ISA_MIPS64R6, 0)\n+MIPS_CPU (\"i6500\", PROCESSOR_I6400, MIPS_ISA_MIPS64R6, 0)\n+MIPS_CPU (\"p6600\", PROCESSOR_P6600, MIPS_ISA_MIPS64R6, 0)"}, {"sha": "493d3de487b2a67c4d464e1e529465ac00af5a4f", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ecfc7e3debac53a30558d7ae33e8cdfdf351466/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ecfc7e3debac53a30558d7ae33e8cdfdf351466/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=4ecfc7e3debac53a30558d7ae33e8cdfdf351466", "patch": "@@ -19817,9 +19817,12 @@ mips_set_architecture (const struct mips_cpu_info *info)\n       mips_arch_info = info;\n       mips_arch = info->cpu;\n       mips_isa = info->isa;\n-      if (mips_isa < 32)\n+      if (mips_isa < MIPS_ISA_MIPS32)\n \tmips_isa_rev = 0;\n       else\n+\t/* we can do this is due to the\n+\t * enum of MIPS32rN is from 32 to 37\n+\t * enum of MIPS64rN is from 64 to 69 */\n \tmips_isa_rev = (mips_isa & 31) + 1;\n     }\n }"}, {"sha": "973372e787ff87a04be8ef6f309f16372a4aa468", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 51, "deletions": 33, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ecfc7e3debac53a30558d7ae33e8cdfdf351466/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ecfc7e3debac53a30558d7ae33e8cdfdf351466/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=4ecfc7e3debac53a30558d7ae33e8cdfdf351466", "patch": "@@ -42,6 +42,23 @@ extern int target_flags_explicit;\n #define ABI_EABI 3\n #define ABI_O64  4\n \n+enum mips_isa {\n+  MIPS_ISA_MIPS1 = 1,\n+  MIPS_ISA_MIPS2 = 2,\n+  MIPS_ISA_MIPS3 = 3,\n+  MIPS_ISA_MIPS4 = 4,\n+  MIPS_ISA_MIPS32 = 32,\n+  MIPS_ISA_MIPS32R2 = 33,\n+  MIPS_ISA_MIPS32R3 = 34,\n+  MIPS_ISA_MIPS32R5 = 36,\n+  MIPS_ISA_MIPS32R6 = 37,\n+  MIPS_ISA_MIPS64 = 64,\n+  MIPS_ISA_MIPS64R2 = 65,\n+  MIPS_ISA_MIPS64R3 = 66,\n+  MIPS_ISA_MIPS64R5 = 68,\n+  MIPS_ISA_MIPS64R6 = 69\n+};\n+\n /* Masks that affect tuning.\n \n    PTF_AVOID_BRANCHLIKELY_SPEED\n@@ -81,7 +98,7 @@ struct mips_cpu_info {\n   enum processor cpu;\n \n   /* The ISA level that the processor implements.  */\n-  int isa;\n+  enum mips_isa isa;\n \n   /* A mask of PTF_* values.  */\n   unsigned int tune_flags;\n@@ -232,7 +249,7 @@ struct mips_cpu_info {\n /* Generate mips16 code */\n #define TARGET_MIPS16\t\t((target_flags & MASK_MIPS16) != 0)\n /* Generate mips16e code. Default 16bit ASE for mips32* and mips64* */\n-#define GENERATE_MIPS16E\t(TARGET_MIPS16 && mips_isa >= 32)\n+#define GENERATE_MIPS16E\t(TARGET_MIPS16 && mips_isa >= MIPS_ISA_MIPS32)\n /* Generate mips16e register save/restore sequences.  */\n #define GENERATE_MIPS16E_SAVE_RESTORE (GENERATE_MIPS16E && mips_abi == ABI_32)\n \n@@ -247,20 +264,20 @@ struct mips_cpu_info {\n   (TARGET_MIPS16 && mips_code_readable >= CODE_READABLE_PCREL)\n \n /* Generic ISA defines.  */\n-#define ISA_MIPS1\t\t    (mips_isa == 1)\n-#define ISA_MIPS2\t\t    (mips_isa == 2)\n-#define ISA_MIPS3                   (mips_isa == 3)\n-#define ISA_MIPS4\t\t    (mips_isa == 4)\n-#define ISA_MIPS32\t\t    (mips_isa == 32)\n-#define ISA_MIPS32R2\t\t    (mips_isa == 33)\n-#define ISA_MIPS32R3\t\t    (mips_isa == 34)\n-#define ISA_MIPS32R5\t\t    (mips_isa == 36)\n-#define ISA_MIPS32R6\t\t    (mips_isa == 37)\n-#define ISA_MIPS64                  (mips_isa == 64)\n-#define ISA_MIPS64R2\t\t    (mips_isa == 65)\n-#define ISA_MIPS64R3\t\t    (mips_isa == 66)\n-#define ISA_MIPS64R5\t\t    (mips_isa == 68)\n-#define ISA_MIPS64R6\t\t    (mips_isa == 69)\n+#define ISA_MIPS1\t\t    (mips_isa == MIPS_ISA_MIPS1)\n+#define ISA_MIPS2\t\t    (mips_isa == MIPS_ISA_MIPS2)\n+#define ISA_MIPS3                   (mips_isa == MIPS_ISA_MIPS3)\n+#define ISA_MIPS4\t\t    (mips_isa == MIPS_ISA_MIPS4)\n+#define ISA_MIPS32\t\t    (mips_isa == MIPS_ISA_MIPS32)\n+#define ISA_MIPS32R2\t\t    (mips_isa == MIPS_ISA_MIPS32R2)\n+#define ISA_MIPS32R3\t\t    (mips_isa == MIPS_ISA_MIPS32R3)\n+#define ISA_MIPS32R5\t\t    (mips_isa == MIPS_ISA_MIPS32R5)\n+#define ISA_MIPS32R6\t\t    (mips_isa == MIPS_ISA_MIPS32R6)\n+#define ISA_MIPS64                  (mips_isa == MIPS_ISA_MIPS64)\n+#define ISA_MIPS64R2\t\t    (mips_isa == MIPS_ISA_MIPS64R2)\n+#define ISA_MIPS64R3\t\t    (mips_isa == MIPS_ISA_MIPS64R3)\n+#define ISA_MIPS64R5\t\t    (mips_isa == MIPS_ISA_MIPS64R5)\n+#define ISA_MIPS64R6\t\t    (mips_isa == MIPS_ISA_MIPS64R6)\n \n /* Architecture target defines.  */\n #define TARGET_LOONGSON_2E          (mips_arch == PROCESSOR_LOONGSON_2E)\n@@ -511,12 +528,13 @@ struct mips_cpu_info {\n \t  builtin_define (\"__mips=4\");\t\t\t\t\t\\\n \t  builtin_define (\"_MIPS_ISA=_MIPS_ISA_MIPS4\");\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n-      else if (mips_isa >= 32 && mips_isa < 64)\t\t\t\t\\\n+      else if (mips_isa >= MIPS_ISA_MIPS32\t\t\t\t\\\n+\t       && mips_isa < MIPS_ISA_MIPS64)\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n \t  builtin_define (\"__mips=32\");\t\t\t\t\t\\\n \t  builtin_define (\"_MIPS_ISA=_MIPS_ISA_MIPS32\");\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n-      else if (mips_isa >= 64)\t\t\t\t\t\t\\\n+      else if (mips_isa >= MIPS_ISA_MIPS64)\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n \t  builtin_define (\"__mips=64\");\t\t\t\t\t\\\n \t  builtin_define (\"_MIPS_ISA=_MIPS_ISA_MIPS64\");\t\t\\\n@@ -708,25 +726,25 @@ struct mips_cpu_info {\n #endif\n \n #ifndef MULTILIB_ISA_DEFAULT\n-#if MIPS_ISA_DEFAULT == 1\n+#if MIPS_ISA_DEFAULT == MIPS_ISA_MIPS1\n #define MULTILIB_ISA_DEFAULT \"mips1\"\n-#elif MIPS_ISA_DEFAULT == 2\n+#elif MIPS_ISA_DEFAULT == MIPS_ISA_MIPS2\n #define MULTILIB_ISA_DEFAULT \"mips2\"\n-#elif MIPS_ISA_DEFAULT == 3\n+#elif MIPS_ISA_DEFAULT == MIPS_ISA_MIPS3\n #define MULTILIB_ISA_DEFAULT \"mips3\"\n-#elif MIPS_ISA_DEFAULT == 4\n+#elif MIPS_ISA_DEFAULT == MIPS_ISA_MIPS4\n #define MULTILIB_ISA_DEFAULT \"mips4\"\n-#elif MIPS_ISA_DEFAULT == 32\n+#elif MIPS_ISA_DEFAULT == MIPS_ISA_MIPS32\n #define MULTILIB_ISA_DEFAULT \"mips32\"\n-#elif MIPS_ISA_DEFAULT == 33\n+#elif MIPS_ISA_DEFAULT == MIPS_ISA_MIPS32R2\n #define MULTILIB_ISA_DEFAULT \"mips32r2\"\n-#elif MIPS_ISA_DEFAULT == 37\n+#elif MIPS_ISA_DEFAULT == MIPS_ISA_MIPS32R6\n #define MULTILIB_ISA_DEFAULT \"mips32r6\"\n-#elif MIPS_ISA_DEFAULT == 64\n+#elif MIPS_ISA_DEFAULT == MIPS_ISA_MIPS64\n #define MULTILIB_ISA_DEFAULT \"mips64\"\n-#elif MIPS_ISA_DEFAULT == 65\n+#elif MIPS_ISA_DEFAULT == MIPS_ISA_MIPS64R2\n #define MULTILIB_ISA_DEFAULT \"mips64r2\"\n-#elif MIPS_ISA_DEFAULT == 69\n+#elif MIPS_ISA_DEFAULT == MIPS_ISA_MIPS64R6\n #define MULTILIB_ISA_DEFAULT \"mips64r6\"\n #else\n #define MULTILIB_ISA_DEFAULT \"mips1\"\n@@ -1275,12 +1293,12 @@ struct mips_cpu_info {\n \t\t\t\t && !TARGET_MICROMIPS)\n \n /* Likewise mtc1 and mfc1.  */\n-#define ISA_HAS_XFER_DELAY\t(mips_isa <= 3\t\t\t\\\n+#define ISA_HAS_XFER_DELAY\t(mips_isa <= MIPS_ISA_MIPS3\t\\\n \t\t\t\t && !TARGET_MIPS5900\t\t\\\n \t\t\t\t && !TARGET_LOONGSON_2EF)\n \n /* Likewise floating-point comparisons.  */\n-#define ISA_HAS_FCMP_DELAY\t(mips_isa <= 3\t\t\t\\\n+#define ISA_HAS_FCMP_DELAY\t(mips_isa <= MIPS_ISA_MIPS3\t\\\n \t\t\t\t && !TARGET_MIPS5900\t\t\\\n \t\t\t\t && !TARGET_LOONGSON_2EF)\n \n@@ -1305,7 +1323,7 @@ struct mips_cpu_info {\n #define ISA_HAS_SYNCI (mips_isa_rev >= 2 && !TARGET_MIPS16)\n \n /* ISA includes sync.  */\n-#define ISA_HAS_SYNC ((mips_isa >= 2 || TARGET_MIPS3900) && !TARGET_MIPS16)\n+#define ISA_HAS_SYNC ((mips_isa >= MIPS_ISA_MIPS2 || TARGET_MIPS3900) && !TARGET_MIPS16)\n #define GENERATE_SYNC\t\t\t\\\n   (target_flags_explicit & MASK_LLSC\t\\\n    ? TARGET_LLSC && !TARGET_MIPS16\t\\\n@@ -1314,7 +1332,7 @@ struct mips_cpu_info {\n /* ISA includes ll and sc.  Note that this implies ISA_HAS_SYNC\n    because the expanders use both ISA_HAS_SYNC and ISA_HAS_LL_SC\n    instructions.  */\n-#define ISA_HAS_LL_SC (mips_isa >= 2 && !TARGET_MIPS5900 && !TARGET_MIPS16)\n+#define ISA_HAS_LL_SC (mips_isa >= MIPS_ISA_MIPS2 && !TARGET_MIPS5900 && !TARGET_MIPS16)\n #define GENERATE_LL_SC\t\t\t\\\n   (target_flags_explicit & MASK_LLSC\t\\\n    ? TARGET_LLSC && !TARGET_MIPS16\t\\\n@@ -1342,7 +1360,7 @@ struct mips_cpu_info {\n #define ISA_HAS_POP\t\t(TARGET_OCTEON && !TARGET_MIPS16)\n \n /* The CACHE instruction is available in non-MIPS16 code.  */\n-#define TARGET_CACHE_BUILTIN (mips_isa >= 3)\n+#define TARGET_CACHE_BUILTIN (mips_isa >= MIPS_ISA_MIPS3)\n \n /* The CACHE instruction is available.  */\n #define ISA_HAS_CACHE (TARGET_CACHE_BUILTIN && !TARGET_MIPS16)"}, {"sha": "85c27793d4ebd77a2340738b6601e2f1466d9273", "filename": "gcc/config/mips/netbsd.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ecfc7e3debac53a30558d7ae33e8cdfdf351466/gcc%2Fconfig%2Fmips%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ecfc7e3debac53a30558d7ae33e8cdfdf351466/gcc%2Fconfig%2Fmips%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fnetbsd.h?ref=4ecfc7e3debac53a30558d7ae33e8cdfdf351466", "patch": "@@ -84,9 +84,10 @@ along with GCC; see the file COPYING3.  If not see\n \tbuiltin_define (\"__mips=3\");\t\t\t\t\\\n       else if (ISA_MIPS4)\t\t\t\t\t\\\n \tbuiltin_define (\"__mips=4\");\t\t\t\t\\\n-      else if (mips_isa >= 32 && mips_isa < 64)\t\t\t\\\n+      else if (mips_isa >= MIPS_ISA_MIPS32\t\t\t\\\n+\t       && mips_isa < MIPS_ISA_MIPS64)\t\t\t\\\n \tbuiltin_define (\"__mips=32\");\t\t\t\t\\\n-      else if (mips_isa >= 64)\t\t\t\t\t\\\n+      else if (mips_isa >= MIPS_ISA_64)\t\t\t\t\\\n \tbuiltin_define (\"__mips=64\");\t\t\t\t\\\n       if (mips_isa_rev > 0)\t\t\t\t\t\\\n         builtin_define_with_int_value (\"__mips_isa_rev\",\t\\"}]}