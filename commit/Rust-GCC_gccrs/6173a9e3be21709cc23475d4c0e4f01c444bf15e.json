{"sha": "6173a9e3be21709cc23475d4c0e4f01c444bf15e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE3M2E5ZTNiZTIxNzA5Y2MyMzQ3NWQ0YzBlNGYwMWM0NDRiZjE1ZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-05-22T07:14:10Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-05-22T07:14:10Z"}, "message": "df-scan.c (df_insn_refs_verify): Speedup when not verifying.\n\n2017-05-22  Richard Biener  <rguenther@suse.de>\n\n\t* df-scan.c (df_insn_refs_verify): Speedup when not verifying.\n\nFrom-SVN: r248318", "tree": {"sha": "db72b530047188304b260e47f054568301fd52cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db72b530047188304b260e47f054568301fd52cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6173a9e3be21709cc23475d4c0e4f01c444bf15e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6173a9e3be21709cc23475d4c0e4f01c444bf15e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6173a9e3be21709cc23475d4c0e4f01c444bf15e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6173a9e3be21709cc23475d4c0e4f01c444bf15e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bca5a34d9374527c965d4eedbac5a9bd74096ee7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bca5a34d9374527c965d4eedbac5a9bd74096ee7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bca5a34d9374527c965d4eedbac5a9bd74096ee7"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "5e76d2ffe35012d7fedaed9615f11a3df170addd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6173a9e3be21709cc23475d4c0e4f01c444bf15e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6173a9e3be21709cc23475d4c0e4f01c444bf15e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6173a9e3be21709cc23475d4c0e4f01c444bf15e", "patch": "@@ -1,3 +1,7 @@\n+2017-05-22  Richard Biener  <rguenther@suse.de>\n+\n+\t* df-scan.c (df_insn_refs_verify): Speedup when not verifying.\n+\n 2017-05-19  Jason Merrill  <jason@redhat.com>\n \n \t* tree.c (make_tree_vec_stat, grow_tree_vec_stat): Use size_t."}, {"sha": "dde6d15d07b848f6e5145f63109188b580e3a3ba", "filename": "gcc/df-scan.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6173a9e3be21709cc23475d4c0e4f01c444bf15e/gcc%2Fdf-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6173a9e3be21709cc23475d4c0e4f01c444bf15e/gcc%2Fdf-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-scan.c?ref=6173a9e3be21709cc23475d4c0e4f01c444bf15e", "patch": "@@ -4103,23 +4103,30 @@ df_insn_refs_verify (struct df_collection_rec *collection_rec,\n                      rtx_insn *insn,\n \t\t     bool abort_if_fail)\n {\n-  bool ret1, ret2, ret3, ret4;\n+  bool ret1, ret2, ret3;\n   unsigned int uid = INSN_UID (insn);\n   struct df_insn_info *insn_info = DF_INSN_INFO_GET (insn);\n \n   df_insn_refs_collect (collection_rec, bb, insn_info);\n \n   /* Unfortunately we cannot opt out early if one of these is not\n-     right because the marks will not get cleared.  */\n+     right and abort_if_fail is set because the marks will not get cleared.  */\n   ret1 = df_refs_verify (&collection_rec->def_vec, DF_INSN_UID_DEFS (uid),\n \t\t\t abort_if_fail);\n+  if (!ret1 && !abort_if_fail)\n+    return false;\n   ret2 = df_refs_verify (&collection_rec->use_vec, DF_INSN_UID_USES (uid),\n \t\t\t abort_if_fail);\n+  if (!ret2 && !abort_if_fail)\n+    return false;\n   ret3 = df_refs_verify (&collection_rec->eq_use_vec, DF_INSN_UID_EQ_USES (uid),\n \t\t\t abort_if_fail);\n-  ret4 = df_mws_verify (&collection_rec->mw_vec, DF_INSN_UID_MWS (uid),\n-\t\t       abort_if_fail);\n-  return (ret1 && ret2 && ret3 && ret4);\n+  if (!ret3 && !abort_if_fail)\n+    return false;\n+  if (! df_mws_verify (&collection_rec->mw_vec, DF_INSN_UID_MWS (uid),\n+\t\t       abort_if_fail))\n+    return false;\n+  return (ret1 && ret2 && ret3);\n }\n \n "}]}