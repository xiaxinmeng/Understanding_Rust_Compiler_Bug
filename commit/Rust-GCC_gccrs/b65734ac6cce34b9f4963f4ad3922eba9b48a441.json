{"sha": "b65734ac6cce34b9f4963f4ad3922eba9b48a441", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY1NzM0YWM2Y2NlMzRiOWY0OTYzZjRhZDM5MjJlYmE5YjQ4YTQ0MQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-02-29T20:02:31Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-02-29T20:02:31Z"}, "message": "syscall: Fill out GNU/Linux support.\n\nFrom-SVN: r184669", "tree": {"sha": "a76090660cf29338112a978aac141d863ef02a82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a76090660cf29338112a978aac141d863ef02a82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b65734ac6cce34b9f4963f4ad3922eba9b48a441", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b65734ac6cce34b9f4963f4ad3922eba9b48a441", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b65734ac6cce34b9f4963f4ad3922eba9b48a441", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b65734ac6cce34b9f4963f4ad3922eba9b48a441/comments", "author": null, "committer": null, "parents": [{"sha": "3f675741b17720d4124a4f901203b8c7da5ea309", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f675741b17720d4124a4f901203b8c7da5ea309", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f675741b17720d4124a4f901203b8c7da5ea309"}], "stats": {"total": 316, "additions": 269, "deletions": 47}, "files": [{"sha": "69244a8fdbac15051da3a993c8419dd88c35c268", "filename": "libgo/Makefile.am", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b65734ac6cce34b9f4963f4ad3922eba9b48a441/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b65734ac6cce34b9f4963f4ad3922eba9b48a441/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=b65734ac6cce34b9f4963f4ad3922eba9b48a441", "patch": "@@ -1489,6 +1489,13 @@ else\n syscall_netlink_file =\n endif\n \n+# GNU/Linux specific socket filters.\n+if LIBGO_IS_LINUX\n+syscall_lsf_file = go/syscall/lsf_linux.go\n+else\n+syscall_lsf_file =\n+endif\n+\n go_base_syscall_files = \\\n \tgo/syscall/env_unix.go \\\n \tgo/syscall/syscall_errno.go \\\n@@ -1509,6 +1516,7 @@ go_base_syscall_files = \\\n \t$(syscall_socket_file) \\\n \t$(syscall_uname_file) \\\n \t$(syscall_netlink_file) \\\n+\t$(syscall_lsf_file) \\\n \t$(GO_LIBCALL_OS_FILE) \\\n \t$(GO_LIBCALL_OS_ARCH_FILE) \\\n \t$(GO_SYSCALL_OS_FILE) \\"}, {"sha": "0fac3511a571f26deed0c34f37084d4d20baee25", "filename": "libgo/Makefile.in", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b65734ac6cce34b9f4963f4ad3922eba9b48a441/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b65734ac6cce34b9f4963f4ad3922eba9b48a441/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=b65734ac6cce34b9f4963f4ad3922eba9b48a441", "patch": "@@ -1795,6 +1795,10 @@ go_unicode_utf8_files = \\\n \n # Support for netlink sockets and messages.\n @LIBGO_IS_LINUX_TRUE@syscall_netlink_file = go/syscall/netlink_linux.go\n+@LIBGO_IS_LINUX_FALSE@syscall_lsf_file = \n+\n+# GNU/Linux specific socket filters.\n+@LIBGO_IS_LINUX_TRUE@syscall_lsf_file = go/syscall/lsf_linux.go\n go_base_syscall_files = \\\n \tgo/syscall/env_unix.go \\\n \tgo/syscall/syscall_errno.go \\\n@@ -1815,6 +1819,7 @@ go_base_syscall_files = \\\n \t$(syscall_socket_file) \\\n \t$(syscall_uname_file) \\\n \t$(syscall_netlink_file) \\\n+\t$(syscall_lsf_file) \\\n \t$(GO_LIBCALL_OS_FILE) \\\n \t$(GO_LIBCALL_OS_ARCH_FILE) \\\n \t$(GO_SYSCALL_OS_FILE) \\"}, {"sha": "22f296970a764595593aeafd9188e78efcc7e4d6", "filename": "libgo/config.h.in", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b65734ac6cce34b9f4963f4ad3922eba9b48a441/libgo%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b65734ac6cce34b9f4963f4ad3922eba9b48a441/libgo%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfig.h.in?ref=b65734ac6cce34b9f4963f4ad3922eba9b48a441", "patch": "@@ -33,6 +33,9 @@\n /* Define to 1 if you have the `inotify_init' function. */\n #undef HAVE_INOTIFY_INIT\n \n+/* Define to 1 if you have the `inotify_init1' function. */\n+#undef HAVE_INOTIFY_INIT1\n+\n /* Define to 1 if you have the `inotify_rm_watch' function. */\n #undef HAVE_INOTIFY_RM_WATCH\n \n@@ -45,6 +48,9 @@\n /* Define to 1 if you have the <linux/netlink.h> header file. */\n #undef HAVE_LINUX_NETLINK_H\n \n+/* Define to 1 if you have the <linux/reboot.h> header file. */\n+#undef HAVE_LINUX_REBOOT_H\n+\n /* Define to 1 if you have the <linux/rtnetlink.h> header file. */\n #undef HAVE_LINUX_RTNETLINK_H\n \n@@ -124,6 +130,9 @@\n    uint32 */\n #undef HAVE_SYNC_FETCH_AND_ADD_4\n \n+/* Define to 1 if you have the `sync_file_range' function. */\n+#undef HAVE_SYNC_FILE_RANGE\n+\n /* Define to 1 if you have the <syscall.h> header file. */\n #undef HAVE_SYSCALL_H\n \n@@ -157,6 +166,12 @@\n /* Define to 1 if you have the <sys/syscall.h> header file. */\n #undef HAVE_SYS_SYSCALL_H\n \n+/* Define to 1 if you have the <sys/sysinfo.h> header file. */\n+#undef HAVE_SYS_SYSINFO_H\n+\n+/* Define to 1 if you have the <sys/timex.h> header file. */\n+#undef HAVE_SYS_TIMEX_H\n+\n /* Define to 1 if you have the <sys/types.h> header file. */\n #undef HAVE_SYS_TYPES_H\n \n@@ -181,6 +196,12 @@\n /* Define to 1 if you have the `unshare' function. */\n #undef HAVE_UNSHARE\n \n+/* Define to 1 if you have the <ustat.h> header file. */\n+#undef HAVE_USTAT_H\n+\n+/* Define to 1 if you have the <utime.h> header file. */\n+#undef HAVE_UTIME_H\n+\n /* Define to 1 if you have the `wait4' function. */\n #undef HAVE_WAIT4\n "}, {"sha": "6a4fb91e9e5632df20def9a9ed263b1b1143c8e6", "filename": "libgo/configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b65734ac6cce34b9f4963f4ad3922eba9b48a441/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b65734ac6cce34b9f4963f4ad3922eba9b48a441/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=b65734ac6cce34b9f4963f4ad3922eba9b48a441", "patch": "@@ -14508,7 +14508,7 @@ no)\n   ;;\n esac\n \n-for ac_header in sys/mman.h syscall.h sys/epoll.h sys/ptrace.h sys/syscall.h sys/user.h sys/utsname.h sys/select.h sys/socket.h net/if.h sys/prctl.h sys/mount.h sys/vfs.h sys/statfs.h\n+for ac_header in sys/mman.h syscall.h sys/epoll.h sys/ptrace.h sys/syscall.h sys/user.h sys/utsname.h sys/select.h sys/socket.h net/if.h sys/prctl.h sys/mount.h sys/vfs.h sys/statfs.h sys/timex.h sys/sysinfo.h ustat.h utime.h linux/reboot.h\n do :\n   as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n ac_fn_c_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\"\n@@ -14581,7 +14581,7 @@ else\n fi\n \n \n-for ac_func in epoll_create1 faccessat fallocate fchmodat fchownat futimesat inotify_add_watch inotify_init inotify_rm_watch mkdirat mknodat openat renameat splice tee unlinkat unshare\n+for ac_func in epoll_create1 faccessat fallocate fchmodat fchownat futimesat inotify_add_watch inotify_init inotify_init1 inotify_rm_watch mkdirat mknodat openat renameat sync_file_range splice tee unlinkat unshare\n do :\n   as_ac_var=`$as_echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n ac_fn_c_check_func \"$LINENO\" \"$ac_func\" \"$as_ac_var\""}, {"sha": "f2e23a693829ca93684043eac946d0fce582f5f2", "filename": "libgo/configure.ac", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b65734ac6cce34b9f4963f4ad3922eba9b48a441/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b65734ac6cce34b9f4963f4ad3922eba9b48a441/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=b65734ac6cce34b9f4963f4ad3922eba9b48a441", "patch": "@@ -453,7 +453,7 @@ no)\n   ;;\n esac\n \n-AC_CHECK_HEADERS(sys/mman.h syscall.h sys/epoll.h sys/ptrace.h sys/syscall.h sys/user.h sys/utsname.h sys/select.h sys/socket.h net/if.h sys/prctl.h sys/mount.h sys/vfs.h sys/statfs.h)\n+AC_CHECK_HEADERS(sys/mman.h syscall.h sys/epoll.h sys/ptrace.h sys/syscall.h sys/user.h sys/utsname.h sys/select.h sys/socket.h net/if.h sys/prctl.h sys/mount.h sys/vfs.h sys/statfs.h sys/timex.h sys/sysinfo.h ustat.h utime.h linux/reboot.h)\n \n AC_CHECK_HEADERS([linux/filter.h linux/netlink.h linux/rtnetlink.h], [], [],\n [#ifdef HAVE_SYS_SOCKET_H\n@@ -467,7 +467,7 @@ AC_CHECK_FUNCS(strerror_r strsignal wait4 mincore setenv)\n AM_CONDITIONAL(HAVE_STRERROR_R, test \"$ac_cv_func_strerror_r\" = yes)\n AM_CONDITIONAL(HAVE_WAIT4, test \"$ac_cv_func_wait4\" = yes)\n \n-AC_CHECK_FUNCS(epoll_create1 faccessat fallocate fchmodat fchownat futimesat inotify_add_watch inotify_init inotify_rm_watch mkdirat mknodat openat renameat splice tee unlinkat unshare)\n+AC_CHECK_FUNCS(epoll_create1 faccessat fallocate fchmodat fchownat futimesat inotify_add_watch inotify_init inotify_init1 inotify_rm_watch mkdirat mknodat openat renameat sync_file_range splice tee unlinkat unshare)\n AC_TYPE_OFF_T\n AC_CHECK_TYPES([loff_t])\n "}, {"sha": "cb04eac90363e387222392ae27e470da26eaa5ea", "filename": "libgo/go/syscall/libcall_linux.go", "status": "modified", "additions": 72, "deletions": 29, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b65734ac6cce34b9f4963f4ad3922eba9b48a441/libgo%2Fgo%2Fsyscall%2Flibcall_linux.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b65734ac6cce34b9f4963f4ad3922eba9b48a441/libgo%2Fgo%2Fsyscall%2Flibcall_linux.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Flibcall_linux.go?ref=b65734ac6cce34b9f4963f4ad3922eba9b48a441", "patch": "@@ -160,20 +160,17 @@ func PtraceAttach(pid int) (err error) { return ptrace(PTRACE_ATTACH, pid, 0, 0)\n \n func PtraceDetach(pid int) (err error) { return ptrace(PTRACE_DETACH, pid, 0, 0) }\n \n-// FIXME: mksysinfo needs to produce LINUX_REBOOT_MAGIC[12].\n-\n-// //sys\treboot(magic1 uint, magic2 uint, cmd int, arg string) (err error)\n-// //reboot(magic1 uint, magic2 uint, cmd int, arg *byte) int\n-// func Reboot(cmd int) (err error) {\n-// \treturn reboot(LINUX_REBOOT_MAGIC1, LINUX_REBOOT_MAGIC2, cmd, \"\")\n-// }\n+//sys\treboot(magic1 uint, magic2 uint, cmd int, arg string) (err error)\n+//reboot(magic1 uint, magic2 uint, cmd int, arg *byte) int\n+func Reboot(cmd int) (err error) {\n+\treturn reboot(LINUX_REBOOT_MAGIC1, LINUX_REBOOT_MAGIC2, cmd, \"\")\n+}\n \n //sys\tAcct(path string) (err error)\n //acct(path *byte) int\n \n-// FIXME: mksysinfo Timex\n-// //sys\tAdjtimex(buf *Timex) (state int, err error)\n-// //adjtimex(buf *Timex) int\n+//sys\tAdjtimex(buf *Timex) (state int, err error)\n+//adjtimex(buf *Timex) int\n \n //sys\tFaccessat(dirfd int, path string, mode uint32, flags int) (err error)\n //faccessat(dirfd int, pathname *byte, mode int, flags int) int\n@@ -198,20 +195,65 @@ func Gettid() (tid int) {\n \treturn int(r1)\n }\n \n-// FIXME: mksysinfo linux_dirent\n-//    Or just abandon this function.\n-// //sys\tGetdents(fd int, buf []byte) (n int, err error)\n-// //getdents64(fd int, buf *byte, count uint)\n+func Getdents(fd int, buf []byte) (n int, err error) {\n+\tvar p *byte\n+\tif len(buf) > 0 {\n+\t\tp = &buf[0]\n+\t} else {\n+\t\tp = (*byte)(unsafe.Pointer(&_zero))\n+\t}\n+\tentersyscall()\n+\tr1, _, errno := Syscall(SYS_GETDENTS64, uintptr(fd), uintptr(unsafe.Pointer(p)), uintptr(len(buf)))\n+\tn = int(r1)\n+\tif n < 0 {\n+\t\terr = errno\n+\t}\n+\texitsyscall()\n+\treturn\n+}\n+\n+func clen(n []byte) int {\n+\tfor i := 0; i < len(n); i++ {\n+\t\tif n[i] == 0 {\n+\t\t\treturn i\n+\t\t}\n+\t}\n+\treturn len(n)\n+}\n+\n+func ReadDirent(fd int, buf []byte) (n int, err error) {\n+\treturn Getdents(fd, buf)\n+}\n+\n+func ParseDirent(buf []byte, max int, names []string) (consumed int, count int, newnames []string) {\n+\toriglen := len(buf)\n+\tcount = 0\n+\tfor max != 0 && len(buf) > 0 {\n+\t\tdirent := (*Dirent)(unsafe.Pointer(&buf[0]))\n+\t\tbuf = buf[dirent.Reclen:]\n+\t\tif dirent.Ino == 0 { // File absent in directory.\n+\t\t\tcontinue\n+\t\t}\n+\t\tbytes := (*[10000]byte)(unsafe.Pointer(&dirent.Name[0]))\n+\t\tvar name = string(bytes[0:clen(bytes[:])])\n+\t\tif name == \".\" || name == \"..\" { // Useless names\n+\t\t\tcontinue\n+\t\t}\n+\t\tmax--\n+\t\tcount++\n+\t\tnames = append(names, name)\n+\t}\n+\treturn origlen - len(buf), count, names\n+}\n \n //sys\tInotifyAddWatch(fd int, pathname string, mask uint32) (watchdesc int, err error)\n //inotify_add_watch(fd int, pathname *byte, mask uint32) int\n \n //sysnb\tInotifyInit() (fd int, err error)\n //inotify_init() int\n \n-// FIXME: Only in glibc 2.9 and later.\n-// //sysnb\tInotifyInit1(flags int) (fd int, err error)\n-// //inotify_init1(flags int) int\n+//sysnb\tInotifyInit1(flags int) (fd int, err error)\n+//inotify_init1(flags int) int\n \n //sysnb\tInotifyRmWatch(fd int, watchdesc uint32) (success int, err error)\n //inotify_rm_watch(fd int, wd uint32) int\n@@ -284,20 +326,22 @@ func Splice(rfd int, roff *int64, wfd int, woff *int64, len int, flags int) (n i\n //sys\tStatfs(path string, buf *Statfs_t) (err error)\n //statfs(path *byte, buf *Statfs_t) int\n \n-// FIXME: Only in glibc 2.6 and later.\n-// //sys\tSyncFileRange(fd int, off int64, n int64, flags int) (err error)\n-// //sync_file_range(fd int, off Offset_t, n Offset_t, flags uint) int\n+//sys\tSyncFileRange(fd int, off int64, n int64, flags int) (err error)\n+//sync_file_range(fd int, off Offset_t, n Offset_t, flags uint) int\n \n-// FIXME: mksysinfo Sysinfo_t\n-// //sysnb\tSysinfo(info *Sysinfo_t) (err error)\n-// //sysinfo(info *Sysinfo_t) int\n+//sysnb\tSysinfo(info *Sysinfo_t) (err error)\n+//sysinfo(info *Sysinfo_t) int\n \n //sys\tTee(rfd int, wfd int, len int, flags int) (n int64, err error)\n //tee(rfd int, wfd int, len Size_t, flags uint) Ssize_t\n \n-// FIXME: Only available as a syscall.\n-// //sysnb\tTgkill(tgid int, tid int, sig int) (err error)\n-// //tgkill(tgid int, tid int, sig int) int\n+func Tgkill(tgid, tid, sig int) error {\n+\tr1, _, errno := Syscall(SYS_TGKILL, uintptr(tgid), uintptr(tid), uintptr(sig))\n+\tif r1 < 0 {\n+\t\treturn errno\n+\t}\n+\treturn nil\n+}\n \n //sys\tunlinkat(dirfd int, path string, flags int) (err error)\n //unlinkat(dirfd int, path *byte, flags int) int\n@@ -312,6 +356,5 @@ func Unlinkat(dirfd int, path string) (err error) {\n //sys\tUnshare(flags int) (err error)\n //unshare(flags int) int\n \n-// FIXME: mksysinfo Ustat_t\n-// //sys\tUstat(dev int, ubuf *Ustat_t) (err error)\n-// //ustat(dev _dev_t, ubuf *Ustat_t) int\n+//sys\tUstat(dev int, ubuf *Ustat_t) (err error)\n+//ustat(dev _dev_t, ubuf *Ustat_t) int"}, {"sha": "3901fe094eb9bdeea846a01101fca5cdf90d4780", "filename": "libgo/go/syscall/libcall_posix.go", "status": "modified", "additions": 20, "deletions": 12, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b65734ac6cce34b9f4963f4ad3922eba9b48a441/libgo%2Fgo%2Fsyscall%2Flibcall_posix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b65734ac6cce34b9f4963f4ad3922eba9b48a441/libgo%2Fgo%2Fsyscall%2Flibcall_posix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Flibcall_posix.go?ref=b65734ac6cce34b9f4963f4ad3922eba9b48a441", "patch": "@@ -61,6 +61,18 @@ func Getwd() (ret string, err error) {\n \t}\n }\n \n+func Getcwd(buf []byte) (n int, err error) {\n+\terr = getcwd(&buf[0], Size_t(len(buf)))\n+\tif err == nil {\n+\t\ti := 0\n+\t\tfor buf[i] != 0 {\n+\t\t\ti++\n+\t\t}\n+\t\tn = i + 1\n+\t}\n+\treturn\n+}\n+\n //sysnb\tgetgroups(size int, list *Gid_t) (nn int, err error)\n //getgroups(size int, list *Gid_t) int\n \n@@ -226,9 +238,8 @@ func FDZero(set *FdSet) {\n //sysnb\tGetppid() (ppid int)\n //getppid() Pid_t\n \n-// FIXME: mksysinfo Rlimit\n-// //sysnb\tGetrlimit(resource int, rlim *Rlimit) (err error)\n-// //getrlimit(resource int, rlim *Rlimit) int\n+//sysnb\tGetrlimit(resource int, rlim *Rlimit) (err error)\n+//getrlimit(resource int, rlim *Rlimit) int\n \n //sysnb\tGetrusage(who int, rusage *Rusage) (err error)\n //getrusage(who int, rusage *Rusage) int\n@@ -296,9 +307,8 @@ func Gettimeofday(tv *Timeval) (err error) {\n //sysnb\tSetreuid(ruid int, euid int) (err error)\n //setreuid(ruid Uid_t, euid Uid_t) int\n \n-// FIXME: mksysinfo Rlimit\n-// //sysnb\tSetrlimit(resource int, rlim *Rlimit) (err error)\n-// //setrlimit(resource int, rlim *Rlimit) int\n+//sysnb\tSetrlimit(resource int, rlim *Rlimit) (err error)\n+//setrlimit(resource int, rlim *Rlimit) int\n \n //sysnb\tSetsid() (pid int, err error)\n //setsid() Pid_t\n@@ -319,9 +329,8 @@ func Settimeofday(tv *Timeval) (err error) {\n //sys\tSync()\n //sync()\n \n-// FIXME: mksysinfo Time_t\n-// //sysnb\tTime(t *Time_t) (tt Time_t, err error)\n-// //time(t *Time_t) Time_t\n+//sysnb\tTime(t *Time_t) (tt Time_t, err error)\n+//time(t *Time_t) Time_t\n \n //sysnb\tTimes(tms *Tms) (ticks uintptr, err error)\n //times(tms *Tms) _clock_t\n@@ -332,9 +341,8 @@ func Settimeofday(tv *Timeval) (err error) {\n //sys\tUnlink(path string) (err error)\n //unlink(path *byte) int\n \n-// FIXME: mksysinfo Utimbuf\n-// //sys\tUtime(path string, buf *Utimbuf) (err error)\n-// //utime(path *byte, buf *Utimbuf) int\n+//sys\tUtime(path string, buf *Utimbuf) (err error)\n+//utime(path *byte, buf *Utimbuf) int\n \n //sys\tWrite(fd int, p []byte) (n int, err error)\n //write(fd int, buf *byte, count Size_t) Ssize_t"}, {"sha": "5296cec9c6edb9e56fab11ab3c2833167d9635eb", "filename": "libgo/go/syscall/lsf_linux.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b65734ac6cce34b9f4963f4ad3922eba9b48a441/libgo%2Fgo%2Fsyscall%2Flsf_linux.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b65734ac6cce34b9f4963f4ad3922eba9b48a441/libgo%2Fgo%2Fsyscall%2Flsf_linux.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Flsf_linux.go?ref=b65734ac6cce34b9f4963f4ad3922eba9b48a441", "patch": "@@ -69,10 +69,10 @@ func AttachLsf(fd int, i []SockFilter) error {\n \tvar p SockFprog\n \tp.Len = uint16(len(i))\n \tp.Filter = (*SockFilter)(unsafe.Pointer(&i[0]))\n-\treturn setsockopt(fd, SOL_SOCKET, SO_ATTACH_FILTER, uintptr(unsafe.Pointer(&p)), unsafe.Sizeof(p))\n+\treturn setsockopt(fd, SOL_SOCKET, SO_ATTACH_FILTER, (*byte)(unsafe.Pointer(&p)), Socklen_t(unsafe.Sizeof(p)))\n }\n \n func DetachLsf(fd int) error {\n \tvar dummy int\n-\treturn setsockopt(fd, SOL_SOCKET, SO_DETACH_FILTER, uintptr(unsafe.Pointer(&dummy)), unsafe.Sizeof(dummy))\n+\treturn setsockopt(fd, SOL_SOCKET, SO_DETACH_FILTER, (*byte)(unsafe.Pointer(&dummy)), Socklen_t(unsafe.Sizeof(dummy)))\n }"}, {"sha": "5e3e9bb0897e6bb3b34d128d8b747120afab5a19", "filename": "libgo/mksysinfo.sh", "status": "modified", "additions": 116, "deletions": 0, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b65734ac6cce34b9f4963f4ad3922eba9b48a441/libgo%2Fmksysinfo.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b65734ac6cce34b9f4963f4ad3922eba9b48a441/libgo%2Fmksysinfo.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmksysinfo.sh?ref=b65734ac6cce34b9f4963f4ad3922eba9b48a441", "patch": "@@ -78,6 +78,7 @@ cat > sysinfo.c <<EOF\n #if defined(HAVE_SYS_SELECT_H)\n #include <sys/select.h>\n #endif\n+#include <time.h>\n #include <unistd.h>\n #include <netdb.h>\n #include <pwd.h>\n@@ -102,6 +103,21 @@ cat > sysinfo.c <<EOF\n #if defined(HAVE_STATFS_H)\n #include <sys/statfs.h>\n #endif\n+#if defined(HAVE_SYS_TIMEX_H)\n+#include <sys/timex.h>\n+#endif\n+#if defined(HAVE_SYS_SYSINFO_H)\n+#include <sys/sysinfo.h>\n+#endif\n+#if defined(HAVE_USTAT_H)\n+#include <ustat.h>\n+#endif\n+#if defined(HAVE_UTIME_H)\n+#include <utime.h>\n+#endif\n+#if defined(HAVE_LINUX_REBOOT_H)\n+#include <linux/reboot.h>\n+#endif\n \n /* Constants that may only be defined as expressions on some systems,\n    expressions too complex for -fdump-go-spec to handle.  These are\n@@ -339,6 +355,11 @@ if grep \"^// type _upad128_t\" gen-sysinfo.go > /dev/null 2>&1; then\n   echo \"type _upad128_t struct { _l [4]uint32; }\" >> ${OUT}\n fi\n \n+# The time_t type.\n+if grep '^type _time_t ' gen-sysinfo.go > /dev/null 2>&1; then\n+  echo 'type Time_t _time_t' >> ${OUT}\n+fi\n+\n # The time structures need special handling: we need to name the\n # types, so that we can cast integers to the right types when\n # assigning to the structures.\n@@ -712,6 +733,10 @@ grep '^const _IFLA' gen-sysinfo.go | \\\n     sed -e 's/^\\(const \\)_\\(IFLA[^= ]*\\)\\(.*\\)$/\\1\\2 = _\\2/' >> ${OUT}\n grep '^const _IFF' gen-sysinfo.go | \\\n     sed -e 's/^\\(const \\)_\\(IFF[^= ]*\\)\\(.*\\)$/\\1\\2 = _\\2/' >> ${OUT}\n+grep '^const _IFNAMSIZ' gen-sysinfo.go | \\\n+    sed -e 's/^\\(const \\)_\\(IFNAMSIZ[^= ]*\\)\\(.*\\)$/\\1\\2 = _\\2/' >> ${OUT}\n+grep '^const _SIOC' gen-sysinfo.go |\n+    sed -e 's/^\\(const \\)_\\(SIOC[^= ]*\\)\\(.*\\)$/\\1\\2 = _\\2/' >> ${OUT}\n \n # The size of the ifinfomsg struct.\n if grep 'type IfInfomsg ' ${OUT} > /dev/null 2>&1; then\n@@ -806,4 +831,95 @@ fi | sed -e 's/type _statfs64/type Statfs_t/' \\\n \t -e 's/f_spare/Spare/' \\\n     >> ${OUT}\n \n+# The timex struct.\n+grep '^type _timex ' gen-sysinfo.go | \\\n+    sed -e 's/_timex/Timex/' \\\n+      -e 's/modes/Modes/' \\\n+      -e 's/offset/Offset/' \\\n+      -e 's/freq/Freq/' \\\n+      -e 's/maxerror/Maxerror/' \\\n+      -e 's/esterror/Esterror/' \\\n+      -e 's/status/Status/' \\\n+      -e 's/constant/Constant/' \\\n+      -e 's/precision/Precision/' \\\n+      -e 's/tolerance/Tolerance/' \\\n+      -e 's/ time / Time /' \\\n+      -e 's/tick/Tick/' \\\n+      -e 's/ppsfreq/Ppsfreq/' \\\n+      -e 's/jitter/Jitter/' \\\n+      -e 's/shift/Shift/' \\\n+      -e 's/stabil/Stabil/' \\\n+      -e 's/jitcnt/Jitcnt/' \\\n+      -e 's/calcnt/Calcnt/' \\\n+      -e 's/errcnt/Errcnt/' \\\n+      -e 's/stbcnt/Stbcnt/' \\\n+      -e 's/tai/Tai/' \\\n+      -e 's/_timeval/Timeval/' \\\n+    >> ${OUT}\n+\n+# The rlimit struct.\n+grep '^type _rlimit ' gen-sysinfo.go | \\\n+    sed -e 's/_rlimit/Rlimit/' \\\n+      -e 's/rlim_cur/Cur/' \\\n+      -e 's/rlim_max/Max/' \\\n+    >> ${OUT}\n+\n+# The RLIMIT constants.\n+grep '^const _RLIMIT_' gen-sysinfo.go |\n+    sed -e 's/^\\(const \\)_\\(RLIMIT_[^= ]*\\)\\(.*\\)$/\\1\\2 = _\\2/' >> ${OUT}\n+\n+# The sysinfo struct.\n+grep '^type _sysinfo ' gen-sysinfo.go | \\\n+    sed -e 's/_sysinfo/Sysinfo_t/' \\\n+      -e 's/uptime/Uptime/' \\\n+      -e 's/loads/Loads/' \\\n+      -e 's/totalram/Totalram/' \\\n+      -e 's/freeram/Freeram/' \\\n+      -e 's/sharedram/Sharedram/' \\\n+      -e 's/bufferram/Bufferram/' \\\n+      -e 's/totalswap/Totalswap/' \\\n+      -e 's/freeswap/Freeswap/' \\\n+      -e 's/procs/Procs/' \\\n+      -e 's/totalhigh/Totalhigh/' \\\n+      -e 's/freehigh/Freehigh/' \\\n+      -e 's/mem_unit/Unit/' \\\n+    >> ${OUT}\n+\n+# The ustat struct.\n+grep '^type _ustat ' gen-sysinfo.go | \\\n+    sed -e 's/_ustat/Ustat_t/' \\\n+      -e 's/f_tfree/Tfree/' \\\n+      -e 's/f_tinode/Tinoe/' \\\n+      -e 's/f_fname/Fname/' \\\n+      -e 's/f_fpack/Fpack/' \\\n+    >> ${OUT}\n+\n+# The utimbuf struct.\n+grep '^type _utimbuf ' gen-sysinfo.go | \\\n+    sed -e 's/_utimbuf/Utimbuf/' \\\n+      -e 's/actime/Actime/' \\\n+      -e 's/modtime/Modtime/' \\\n+    >> ${OUT}\n+\n+# The GNU/Linux LINUX_REBOOT flags.\n+grep '^const _LINUX_REBOOT_' gen-sysinfo.go |\n+    sed -e 's/^\\(const \\)_\\(LINUX_REBOOT_[^= ]*\\)\\(.*\\)$/\\1\\2 = _\\2/' >> ${OUT}\n+\n+# The GNU/Linux sock_filter struct.\n+grep '^type _sock_filter ' gen-sysinfo.go | \\\n+    sed -e 's/_sock_filter/SockFilter/' \\\n+      -e 's/code/Code/' \\\n+      -e 's/jt/Jt/' \\\n+      -e 's/jf/Jf/' \\\n+      -e 's/k /K /' \\\n+    >> ${OUT}\n+\n+# The GNU/Linux sock_fprog struct.\n+grep '^type _sock_fprog ' gen-sysinfo.go | \\\n+    sed -e 's/_sock_fprog/SockFprog/' \\\n+      -e 's/len/Len/' \\\n+      -e 's/filter/Filter/' \\\n+      -e 's/_sock_filter/SockFilter/' \\\n+    >> ${OUT}\n+\n exit $?"}, {"sha": "4a30a57ad25a0709e304a5148a52030a7097eb34", "filename": "libgo/runtime/go-nosys.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b65734ac6cce34b9f4963f4ad3922eba9b48a441/libgo%2Fruntime%2Fgo-nosys.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b65734ac6cce34b9f4963f4ad3922eba9b48a441/libgo%2Fruntime%2Fgo-nosys.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-nosys.c?ref=b65734ac6cce34b9f4963f4ad3922eba9b48a441", "patch": "@@ -116,6 +116,15 @@ inotify_init (void)\n }\n #endif\n \n+#ifndef HAVE_INOTIFY_INIT1\n+int\n+inotify_init1 (int flags __attribute__ ((unused)))\n+{\n+  errno = ENOSYS;\n+  return -1;\n+}\n+#endif\n+\n #ifndef HAVE_INOTIFY_RM_WATCH\n int\n inotify_rm_watch (int fd __attribute__ ((unused)),\n@@ -187,6 +196,18 @@ splice (int fd __attribute__ ((unused)),\n }\n #endif\n \n+#ifndef HAVE_SYNC_FILE_RANGE\n+int\n+sync_file_range (int fd __attribute__ ((unused)),\n+\t\t off64_t offset __attribute__ ((unused)),\n+\t\t off64_t nbytes __attribute__ ((unused)),\n+\t\t unsigned int flags __attribute__ ((unused)))\n+{\n+  errno = ENOSYS;\n+  return -1;\n+}\n+#endif\n+\n #ifndef HAVE_TEE\n int\n tee (int fd_in __attribute__ ((unused)),"}]}