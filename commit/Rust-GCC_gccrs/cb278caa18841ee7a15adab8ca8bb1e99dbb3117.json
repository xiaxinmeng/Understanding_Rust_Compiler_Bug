{"sha": "cb278caa18841ee7a15adab8ca8bb1e99dbb3117", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IyNzhjYWExODg0MWVlN2ExNWFkYWI4Y2E4YmIxZTk5ZGJiMzExNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-04-11T08:54:54Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-04-11T08:54:54Z"}, "message": "re PR target/80381 (AVX512: -O3, _mm512_srai_epi32, the last argument must be an 8-bit immediate)\n\n\tPR target/80381\n\t* config/i386/i386-builtin-types.def\n\t(V16HI_FTYPE_V16HI_INT_V16HI_UHI_COUNT,\n\tV16HI_FTYPE_V16HI_V8HI_V16HI_UHI_COUNT,\n\tV16SI_FTYPE_V16SI_INT_V16SI_UHI_COUNT,\n\tV16SI_FTYPE_V16SI_V4SI_V16SI_UHI_COUNT,\n\tV2DI_FTYPE_V2DI_INT_V2DI_UQI_COUNT,\n\tV2DI_FTYPE_V2DI_V2DI_V2DI_UQI_COUNT,\n\tV32HI_FTYPE_V32HI_INT_V32HI_USI_COUNT,\n\tV32HI_FTYPE_V32HI_V8HI_V32HI_USI_COUNT,\n\tV4DI_FTYPE_V4DI_INT_V4DI_UQI_COUNT,\n\tV4DI_FTYPE_V4DI_V2DI_V4DI_UQI_COUNT,\n\tV4SI_FTYPE_V4SI_INT_V4SI_UQI_COUNT,\n\tV4SI_FTYPE_V4SI_V4SI_V4SI_UQI_COUNT,\n\tV8DI_FTYPE_V8DI_INT_V8DI_UQI_COUNT,\n\tV8DI_FTYPE_V8DI_V2DI_V8DI_UQI_COUNT,\n\tV8HI_FTYPE_V8HI_INT_V8HI_UQI_COUNT,\n\tV8HI_FTYPE_V8HI_V8HI_V8HI_UQI_COUNT,\n\tV8SI_FTYPE_V8SI_INT_V8SI_UQI_COUNT,\n\tV8SI_FTYPE_V8SI_V4SI_V8SI_UQI_COUNT): New function type aliases.\n\t* config/i386/i386-builtin.def (__builtin_ia32_pslld512_mask,\n\t__builtin_ia32_pslldi512_mask, __builtin_ia32_psllq512_mask,\n\t__builtin_ia32_psllqi512_mask, __builtin_ia32_psrad512_mask,\n\t__builtin_ia32_psradi512_mask, __builtin_ia32_psraq512_mask,\n\t__builtin_ia32_psraqi512_mask, __builtin_ia32_psrld512_mask,\n\t__builtin_ia32_psrldi512_mask, __builtin_ia32_psrlq512_mask,\n\t__builtin_ia32_psrlqi512_mask, __builtin_ia32_psllwi128_mask,\n\t__builtin_ia32_pslldi128_mask, __builtin_ia32_psllqi128_mask,\n\t__builtin_ia32_psllw128_mask, __builtin_ia32_pslld128_mask,\n\t__builtin_ia32_psllq128_mask, __builtin_ia32_psllwi256_mask,\n\t__builtin_ia32_psllw256_mask, __builtin_ia32_pslldi256_mask,\n\t__builtin_ia32_pslld256_mask, __builtin_ia32_psllqi256_mask,\n\t__builtin_ia32_psllq256_mask, __builtin_ia32_psradi128_mask,\n\t__builtin_ia32_psrad128_mask, __builtin_ia32_psradi256_mask,\n\t__builtin_ia32_psrad256_mask, __builtin_ia32_psraqi128_mask,\n\t__builtin_ia32_psraq128_mask, __builtin_ia32_psraqi256_mask,\n\t__builtin_ia32_psraq256_mask, __builtin_ia32_psrldi128_mask,\n\t__builtin_ia32_psrld128_mask, __builtin_ia32_psrldi256_mask,\n\t__builtin_ia32_psrld256_mask, __builtin_ia32_psrlqi128_mask,\n\t__builtin_ia32_psrlq128_mask, __builtin_ia32_psrlqi256_mask,\n\t__builtin_ia32_psrlq256_mask, __builtin_ia32_psrawi256_mask,\n\t__builtin_ia32_psraw256_mask, __builtin_ia32_psrawi128_mask,\n\t__builtin_ia32_psraw128_mask, __builtin_ia32_psrlwi256_mask,\n\t__builtin_ia32_psrlw256_mask, __builtin_ia32_psrlwi128_mask,\n\t__builtin_ia32_psrlw128_mask, __builtin_ia32_psllwi512_mask,\n\t__builtin_ia32_psllw512_mask, __builtin_ia32_psrawi512_mask,\n\t__builtin_ia32_psraw512_mask, __builtin_ia32_psrlwi512_mask,\n\t__builtin_ia32_psrlw512_mask): Use _COUNT suffixed function type\n\taliases.\n\t* config/i386/i386.c (ix86_expand_args_builtin): Rename last_arg_count\n\tflag to second_arg_count, handle 4 argument function type _COUNT\n\taliases, handle second_arg_count on second argument rather than last.\n\n\t* gcc.target/i386/pr80381.c: New test.\n\nFrom-SVN: r246835", "tree": {"sha": "8f316edad289cf80f52faca6589335b19a467f41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f316edad289cf80f52faca6589335b19a467f41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb278caa18841ee7a15adab8ca8bb1e99dbb3117", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb278caa18841ee7a15adab8ca8bb1e99dbb3117", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb278caa18841ee7a15adab8ca8bb1e99dbb3117", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb278caa18841ee7a15adab8ca8bb1e99dbb3117/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "82665822b174f025389699abd0a124d44d80a200", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82665822b174f025389699abd0a124d44d80a200", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82665822b174f025389699abd0a124d44d80a200"}], "stats": {"total": 240, "additions": 183, "deletions": 57}, "files": [{"sha": "c56b4505a35d335c4b90ede37460e3d99a6ab332", "filename": "gcc/ChangeLog", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb278caa18841ee7a15adab8ca8bb1e99dbb3117/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb278caa18841ee7a15adab8ca8bb1e99dbb3117/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb278caa18841ee7a15adab8ca8bb1e99dbb3117", "patch": "@@ -1,3 +1,58 @@\n+2017-04-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/80381\n+\t* config/i386/i386-builtin-types.def\n+\t(V16HI_FTYPE_V16HI_INT_V16HI_UHI_COUNT,\n+\tV16HI_FTYPE_V16HI_V8HI_V16HI_UHI_COUNT,\n+\tV16SI_FTYPE_V16SI_INT_V16SI_UHI_COUNT,\n+\tV16SI_FTYPE_V16SI_V4SI_V16SI_UHI_COUNT,\n+\tV2DI_FTYPE_V2DI_INT_V2DI_UQI_COUNT,\n+\tV2DI_FTYPE_V2DI_V2DI_V2DI_UQI_COUNT,\n+\tV32HI_FTYPE_V32HI_INT_V32HI_USI_COUNT,\n+\tV32HI_FTYPE_V32HI_V8HI_V32HI_USI_COUNT,\n+\tV4DI_FTYPE_V4DI_INT_V4DI_UQI_COUNT,\n+\tV4DI_FTYPE_V4DI_V2DI_V4DI_UQI_COUNT,\n+\tV4SI_FTYPE_V4SI_INT_V4SI_UQI_COUNT,\n+\tV4SI_FTYPE_V4SI_V4SI_V4SI_UQI_COUNT,\n+\tV8DI_FTYPE_V8DI_INT_V8DI_UQI_COUNT,\n+\tV8DI_FTYPE_V8DI_V2DI_V8DI_UQI_COUNT,\n+\tV8HI_FTYPE_V8HI_INT_V8HI_UQI_COUNT,\n+\tV8HI_FTYPE_V8HI_V8HI_V8HI_UQI_COUNT,\n+\tV8SI_FTYPE_V8SI_INT_V8SI_UQI_COUNT,\n+\tV8SI_FTYPE_V8SI_V4SI_V8SI_UQI_COUNT): New function type aliases.\n+\t* config/i386/i386-builtin.def (__builtin_ia32_pslld512_mask,\n+\t__builtin_ia32_pslldi512_mask, __builtin_ia32_psllq512_mask,\n+\t__builtin_ia32_psllqi512_mask, __builtin_ia32_psrad512_mask,\n+\t__builtin_ia32_psradi512_mask, __builtin_ia32_psraq512_mask,\n+\t__builtin_ia32_psraqi512_mask, __builtin_ia32_psrld512_mask,\n+\t__builtin_ia32_psrldi512_mask, __builtin_ia32_psrlq512_mask,\n+\t__builtin_ia32_psrlqi512_mask, __builtin_ia32_psllwi128_mask,\n+\t__builtin_ia32_pslldi128_mask, __builtin_ia32_psllqi128_mask,\n+\t__builtin_ia32_psllw128_mask, __builtin_ia32_pslld128_mask,\n+\t__builtin_ia32_psllq128_mask, __builtin_ia32_psllwi256_mask,\n+\t__builtin_ia32_psllw256_mask, __builtin_ia32_pslldi256_mask,\n+\t__builtin_ia32_pslld256_mask, __builtin_ia32_psllqi256_mask,\n+\t__builtin_ia32_psllq256_mask, __builtin_ia32_psradi128_mask,\n+\t__builtin_ia32_psrad128_mask, __builtin_ia32_psradi256_mask,\n+\t__builtin_ia32_psrad256_mask, __builtin_ia32_psraqi128_mask,\n+\t__builtin_ia32_psraq128_mask, __builtin_ia32_psraqi256_mask,\n+\t__builtin_ia32_psraq256_mask, __builtin_ia32_psrldi128_mask,\n+\t__builtin_ia32_psrld128_mask, __builtin_ia32_psrldi256_mask,\n+\t__builtin_ia32_psrld256_mask, __builtin_ia32_psrlqi128_mask,\n+\t__builtin_ia32_psrlq128_mask, __builtin_ia32_psrlqi256_mask,\n+\t__builtin_ia32_psrlq256_mask, __builtin_ia32_psrawi256_mask,\n+\t__builtin_ia32_psraw256_mask, __builtin_ia32_psrawi128_mask,\n+\t__builtin_ia32_psraw128_mask, __builtin_ia32_psrlwi256_mask,\n+\t__builtin_ia32_psrlw256_mask, __builtin_ia32_psrlwi128_mask,\n+\t__builtin_ia32_psrlw128_mask, __builtin_ia32_psllwi512_mask,\n+\t__builtin_ia32_psllw512_mask, __builtin_ia32_psrawi512_mask,\n+\t__builtin_ia32_psraw512_mask, __builtin_ia32_psrlwi512_mask,\n+\t__builtin_ia32_psrlw512_mask): Use _COUNT suffixed function type\n+\taliases.\n+\t* config/i386/i386.c (ix86_expand_args_builtin): Rename last_arg_count\n+\tflag to second_arg_count, handle 4 argument function type _COUNT\n+\taliases, handle second_arg_count on second argument rather than last.\n+\n 2017-04-10  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/80374"}, {"sha": "1334633c65fc6cbcc609e2f77247e04062be22b2", "filename": "gcc/config/i386/i386-builtin-types.def", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb278caa18841ee7a15adab8ca8bb1e99dbb3117/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb278caa18841ee7a15adab8ca8bb1e99dbb3117/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin-types.def?ref=cb278caa18841ee7a15adab8ca8bb1e99dbb3117", "patch": "@@ -1146,6 +1146,24 @@ DEF_FUNCTION_TYPE_ALIAS (V8SI_FTYPE_V8SI_SI, COUNT)\n DEF_FUNCTION_TYPE_ALIAS (V8SI_FTYPE_V8SI_V4SI, COUNT)\n DEF_FUNCTION_TYPE_ALIAS (V4DI_FTYPE_V4DI_INT, COUNT)\n DEF_FUNCTION_TYPE_ALIAS (V4DI_FTYPE_V4DI_V2DI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V16HI_FTYPE_V16HI_INT_V16HI_UHI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V16HI_FTYPE_V16HI_V8HI_V16HI_UHI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V16SI_FTYPE_V16SI_INT_V16SI_UHI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V16SI_FTYPE_V16SI_V4SI_V16SI_UHI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V2DI_FTYPE_V2DI_INT_V2DI_UQI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V2DI_FTYPE_V2DI_V2DI_V2DI_UQI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V32HI_FTYPE_V32HI_INT_V32HI_USI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V32HI_FTYPE_V32HI_V8HI_V32HI_USI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V4DI_FTYPE_V4DI_INT_V4DI_UQI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V4DI_FTYPE_V4DI_V2DI_V4DI_UQI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V4SI_FTYPE_V4SI_INT_V4SI_UQI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V4SI_FTYPE_V4SI_V4SI_V4SI_UQI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V8DI_FTYPE_V8DI_INT_V8DI_UQI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V8DI_FTYPE_V8DI_V2DI_V8DI_UQI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V8HI_FTYPE_V8HI_INT_V8HI_UQI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V8HI_FTYPE_V8HI_V8HI_V8HI_UQI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V8SI_FTYPE_V8SI_INT_V8SI_UQI, COUNT)\n+DEF_FUNCTION_TYPE_ALIAS (V8SI_FTYPE_V8SI_V4SI_V8SI_UQI, COUNT)\n \n DEF_FUNCTION_TYPE_ALIAS (V2DF_FTYPE_V2DF_V2DF, SWAP)\n DEF_FUNCTION_TYPE_ALIAS (V4SF_FTYPE_V4SF_V4SF, SWAP)"}, {"sha": "43b5b620e47535ea95d4f19ebee948f5f987d142", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 54, "deletions": 54, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb278caa18841ee7a15adab8ca8bb1e99dbb3117/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb278caa18841ee7a15adab8ca8bb1e99dbb3117/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=cb278caa18841ee7a15adab8ca8bb1e99dbb3117", "patch": "@@ -1338,22 +1338,22 @@ BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_rorv8di_mask, \"__builtin_ia32_p\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_rorvv16si_mask, \"__builtin_ia32_prorvd512_mask\", IX86_BUILTIN_PRORVD512, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_UHI)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_rorvv8di_mask, \"__builtin_ia32_prorvq512_mask\", IX86_BUILTIN_PRORVQ512, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_V8DI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_pshufdv3_mask, \"__builtin_ia32_pshufd512_mask\", IX86_BUILTIN_PSHUFD512, UNKNOWN, (int) V16SI_FTYPE_V16SI_INT_V16SI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_ashlv16si3_mask, \"__builtin_ia32_pslld512_mask\", IX86_BUILTIN_PSLLD512, UNKNOWN, (int) V16SI_FTYPE_V16SI_V4SI_V16SI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_ashlv16si3_mask, \"__builtin_ia32_pslldi512_mask\", IX86_BUILTIN_PSLLDI512, UNKNOWN, (int) V16SI_FTYPE_V16SI_INT_V16SI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_ashlv8di3_mask, \"__builtin_ia32_psllq512_mask\", IX86_BUILTIN_PSLLQ512, UNKNOWN, (int) V8DI_FTYPE_V8DI_V2DI_V8DI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_ashlv8di3_mask, \"__builtin_ia32_psllqi512_mask\", IX86_BUILTIN_PSLLQI512, UNKNOWN, (int) V8DI_FTYPE_V8DI_INT_V8DI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_ashlv16si3_mask, \"__builtin_ia32_pslld512_mask\", IX86_BUILTIN_PSLLD512, UNKNOWN, (int) V16SI_FTYPE_V16SI_V4SI_V16SI_UHI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_ashlv16si3_mask, \"__builtin_ia32_pslldi512_mask\", IX86_BUILTIN_PSLLDI512, UNKNOWN, (int) V16SI_FTYPE_V16SI_INT_V16SI_UHI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_ashlv8di3_mask, \"__builtin_ia32_psllq512_mask\", IX86_BUILTIN_PSLLQ512, UNKNOWN, (int) V8DI_FTYPE_V8DI_V2DI_V8DI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_ashlv8di3_mask, \"__builtin_ia32_psllqi512_mask\", IX86_BUILTIN_PSLLQI512, UNKNOWN, (int) V8DI_FTYPE_V8DI_INT_V8DI_UQI_COUNT)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_ashlvv16si_mask, \"__builtin_ia32_psllv16si_mask\", IX86_BUILTIN_PSLLVV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_UHI)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_ashlvv8di_mask, \"__builtin_ia32_psllv8di_mask\", IX86_BUILTIN_PSLLVV8DI, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_V8DI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_ashrv16si3_mask, \"__builtin_ia32_psrad512_mask\", IX86_BUILTIN_PSRAD512, UNKNOWN, (int) V16SI_FTYPE_V16SI_V4SI_V16SI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_ashrv16si3_mask, \"__builtin_ia32_psradi512_mask\", IX86_BUILTIN_PSRADI512, UNKNOWN, (int) V16SI_FTYPE_V16SI_INT_V16SI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_ashrv8di3_mask, \"__builtin_ia32_psraq512_mask\", IX86_BUILTIN_PSRAQ512, UNKNOWN, (int) V8DI_FTYPE_V8DI_V2DI_V8DI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_ashrv8di3_mask, \"__builtin_ia32_psraqi512_mask\", IX86_BUILTIN_PSRAQI512, UNKNOWN, (int) V8DI_FTYPE_V8DI_INT_V8DI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_ashrv16si3_mask, \"__builtin_ia32_psrad512_mask\", IX86_BUILTIN_PSRAD512, UNKNOWN, (int) V16SI_FTYPE_V16SI_V4SI_V16SI_UHI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_ashrv16si3_mask, \"__builtin_ia32_psradi512_mask\", IX86_BUILTIN_PSRADI512, UNKNOWN, (int) V16SI_FTYPE_V16SI_INT_V16SI_UHI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_ashrv8di3_mask, \"__builtin_ia32_psraq512_mask\", IX86_BUILTIN_PSRAQ512, UNKNOWN, (int) V8DI_FTYPE_V8DI_V2DI_V8DI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_ashrv8di3_mask, \"__builtin_ia32_psraqi512_mask\", IX86_BUILTIN_PSRAQI512, UNKNOWN, (int) V8DI_FTYPE_V8DI_INT_V8DI_UQI_COUNT)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_ashrvv16si_mask, \"__builtin_ia32_psrav16si_mask\", IX86_BUILTIN_PSRAVV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_UHI)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_ashrvv8di_mask, \"__builtin_ia32_psrav8di_mask\", IX86_BUILTIN_PSRAVV8DI, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_V8DI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_lshrv16si3_mask, \"__builtin_ia32_psrld512_mask\", IX86_BUILTIN_PSRLD512, UNKNOWN, (int) V16SI_FTYPE_V16SI_V4SI_V16SI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_lshrv16si3_mask, \"__builtin_ia32_psrldi512_mask\", IX86_BUILTIN_PSRLDI512, UNKNOWN, (int) V16SI_FTYPE_V16SI_INT_V16SI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_lshrv8di3_mask, \"__builtin_ia32_psrlq512_mask\", IX86_BUILTIN_PSRLQ512, UNKNOWN, (int) V8DI_FTYPE_V8DI_V2DI_V8DI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_lshrv8di3_mask, \"__builtin_ia32_psrlqi512_mask\", IX86_BUILTIN_PSRLQI512, UNKNOWN, (int) V8DI_FTYPE_V8DI_INT_V8DI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_lshrv16si3_mask, \"__builtin_ia32_psrld512_mask\", IX86_BUILTIN_PSRLD512, UNKNOWN, (int) V16SI_FTYPE_V16SI_V4SI_V16SI_UHI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_lshrv16si3_mask, \"__builtin_ia32_psrldi512_mask\", IX86_BUILTIN_PSRLDI512, UNKNOWN, (int) V16SI_FTYPE_V16SI_INT_V16SI_UHI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_lshrv8di3_mask, \"__builtin_ia32_psrlq512_mask\", IX86_BUILTIN_PSRLQ512, UNKNOWN, (int) V8DI_FTYPE_V8DI_V2DI_V8DI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_lshrv8di3_mask, \"__builtin_ia32_psrlqi512_mask\", IX86_BUILTIN_PSRLQI512, UNKNOWN, (int) V8DI_FTYPE_V8DI_INT_V8DI_UQI_COUNT)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_lshrvv16si_mask, \"__builtin_ia32_psrlv16si_mask\", IX86_BUILTIN_PSRLVV16SI, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_UHI)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_lshrvv8di_mask, \"__builtin_ia32_psrlv8di_mask\", IX86_BUILTIN_PSRLVV8DI, UNKNOWN, (int) V8DI_FTYPE_V8DI_V8DI_V8DI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_subv16si3_mask, \"__builtin_ia32_psubd512_mask\", IX86_BUILTIN_PSUBD512, UNKNOWN, (int) V16SI_FTYPE_V16SI_V16SI_V16SI_UHI)\n@@ -1783,36 +1783,36 @@ BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx_andnotv\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_sse2_andnotv2df3_mask, \"__builtin_ia32_andnpd128_mask\", IX86_BUILTIN_ANDNPD128_MASK, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF_V2DF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx_andnotv8sf3_mask, \"__builtin_ia32_andnps256_mask\", IX86_BUILTIN_ANDNPS256_MASK, UNKNOWN, (int) V8SF_FTYPE_V8SF_V8SF_V8SF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_sse_andnotv4sf3_mask, \"__builtin_ia32_andnps128_mask\", IX86_BUILTIN_ANDNPS128_MASK, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF_V4SF_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv8hi3_mask, \"__builtin_ia32_psllwi128_mask\", IX86_BUILTIN_PSLLWI128_MASK, UNKNOWN, (int) V8HI_FTYPE_V8HI_INT_V8HI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv4si3_mask, \"__builtin_ia32_pslldi128_mask\", IX86_BUILTIN_PSLLDI128_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_INT_V4SI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv2di3_mask, \"__builtin_ia32_psllqi128_mask\", IX86_BUILTIN_PSLLQI128_MASK, UNKNOWN, (int) V2DI_FTYPE_V2DI_INT_V2DI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv8hi3_mask, \"__builtin_ia32_psllw128_mask\", IX86_BUILTIN_PSLLW128_MASK, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv4si3_mask, \"__builtin_ia32_pslld128_mask\", IX86_BUILTIN_PSLLD128_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv2di3_mask, \"__builtin_ia32_psllq128_mask\", IX86_BUILTIN_PSLLQ128_MASK, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_V2DI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv16hi3_mask, \"__builtin_ia32_psllwi256_mask\", IX86_BUILTIN_PSLLWI256_MASK , UNKNOWN, (int) V16HI_FTYPE_V16HI_INT_V16HI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv16hi3_mask, \"__builtin_ia32_psllw256_mask\", IX86_BUILTIN_PSLLW256_MASK, UNKNOWN, (int) V16HI_FTYPE_V16HI_V8HI_V16HI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv8si3_mask, \"__builtin_ia32_pslldi256_mask\", IX86_BUILTIN_PSLLDI256_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_INT_V8SI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv8si3_mask, \"__builtin_ia32_pslld256_mask\", IX86_BUILTIN_PSLLD256_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V4SI_V8SI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv4di3_mask, \"__builtin_ia32_psllqi256_mask\", IX86_BUILTIN_PSLLQI256_MASK, UNKNOWN, (int) V4DI_FTYPE_V4DI_INT_V4DI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv4di3_mask, \"__builtin_ia32_psllq256_mask\", IX86_BUILTIN_PSLLQ256_MASK, UNKNOWN, (int) V4DI_FTYPE_V4DI_V2DI_V4DI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv4si3_mask, \"__builtin_ia32_psradi128_mask\", IX86_BUILTIN_PSRADI128_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_INT_V4SI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv4si3_mask, \"__builtin_ia32_psrad128_mask\", IX86_BUILTIN_PSRAD128_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv8si3_mask, \"__builtin_ia32_psradi256_mask\", IX86_BUILTIN_PSRADI256_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_INT_V8SI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv8si3_mask, \"__builtin_ia32_psrad256_mask\", IX86_BUILTIN_PSRAD256_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V4SI_V8SI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv2di3_mask, \"__builtin_ia32_psraqi128_mask\", IX86_BUILTIN_PSRAQI128_MASK, UNKNOWN, (int) V2DI_FTYPE_V2DI_INT_V2DI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv2di3_mask, \"__builtin_ia32_psraq128_mask\", IX86_BUILTIN_PSRAQ128_MASK, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_V2DI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv4di3_mask, \"__builtin_ia32_psraqi256_mask\", IX86_BUILTIN_PSRAQI256_MASK, UNKNOWN, (int) V4DI_FTYPE_V4DI_INT_V4DI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv4di3_mask, \"__builtin_ia32_psraq256_mask\", IX86_BUILTIN_PSRAQ256_MASK, UNKNOWN, (int) V4DI_FTYPE_V4DI_V2DI_V4DI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv8hi3_mask, \"__builtin_ia32_psllwi128_mask\", IX86_BUILTIN_PSLLWI128_MASK, UNKNOWN, (int) V8HI_FTYPE_V8HI_INT_V8HI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv4si3_mask, \"__builtin_ia32_pslldi128_mask\", IX86_BUILTIN_PSLLDI128_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_INT_V4SI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv2di3_mask, \"__builtin_ia32_psllqi128_mask\", IX86_BUILTIN_PSLLQI128_MASK, UNKNOWN, (int) V2DI_FTYPE_V2DI_INT_V2DI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv8hi3_mask, \"__builtin_ia32_psllw128_mask\", IX86_BUILTIN_PSLLW128_MASK, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv4si3_mask, \"__builtin_ia32_pslld128_mask\", IX86_BUILTIN_PSLLD128_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv2di3_mask, \"__builtin_ia32_psllq128_mask\", IX86_BUILTIN_PSLLQ128_MASK, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_V2DI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv16hi3_mask, \"__builtin_ia32_psllwi256_mask\", IX86_BUILTIN_PSLLWI256_MASK , UNKNOWN, (int) V16HI_FTYPE_V16HI_INT_V16HI_UHI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv16hi3_mask, \"__builtin_ia32_psllw256_mask\", IX86_BUILTIN_PSLLW256_MASK, UNKNOWN, (int) V16HI_FTYPE_V16HI_V8HI_V16HI_UHI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv8si3_mask, \"__builtin_ia32_pslldi256_mask\", IX86_BUILTIN_PSLLDI256_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_INT_V8SI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv8si3_mask, \"__builtin_ia32_pslld256_mask\", IX86_BUILTIN_PSLLD256_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V4SI_V8SI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv4di3_mask, \"__builtin_ia32_psllqi256_mask\", IX86_BUILTIN_PSLLQI256_MASK, UNKNOWN, (int) V4DI_FTYPE_V4DI_INT_V4DI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashlv4di3_mask, \"__builtin_ia32_psllq256_mask\", IX86_BUILTIN_PSLLQ256_MASK, UNKNOWN, (int) V4DI_FTYPE_V4DI_V2DI_V4DI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv4si3_mask, \"__builtin_ia32_psradi128_mask\", IX86_BUILTIN_PSRADI128_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_INT_V4SI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv4si3_mask, \"__builtin_ia32_psrad128_mask\", IX86_BUILTIN_PSRAD128_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv8si3_mask, \"__builtin_ia32_psradi256_mask\", IX86_BUILTIN_PSRADI256_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_INT_V8SI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv8si3_mask, \"__builtin_ia32_psrad256_mask\", IX86_BUILTIN_PSRAD256_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V4SI_V8SI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv2di3_mask, \"__builtin_ia32_psraqi128_mask\", IX86_BUILTIN_PSRAQI128_MASK, UNKNOWN, (int) V2DI_FTYPE_V2DI_INT_V2DI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv2di3_mask, \"__builtin_ia32_psraq128_mask\", IX86_BUILTIN_PSRAQ128_MASK, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_V2DI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv4di3_mask, \"__builtin_ia32_psraqi256_mask\", IX86_BUILTIN_PSRAQI256_MASK, UNKNOWN, (int) V4DI_FTYPE_V4DI_INT_V4DI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv4di3_mask, \"__builtin_ia32_psraq256_mask\", IX86_BUILTIN_PSRAQ256_MASK, UNKNOWN, (int) V4DI_FTYPE_V4DI_V2DI_V4DI_UQI_COUNT)\n BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_andv8si3_mask, \"__builtin_ia32_pandd256_mask\", IX86_BUILTIN_PANDD256, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_andv4si3_mask, \"__builtin_ia32_pandd128_mask\", IX86_BUILTIN_PANDD128, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv4si3_mask, \"__builtin_ia32_psrldi128_mask\", IX86_BUILTIN_PSRLDI128_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_INT_V4SI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv4si3_mask, \"__builtin_ia32_psrld128_mask\", IX86_BUILTIN_PSRLD128_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv8si3_mask, \"__builtin_ia32_psrldi256_mask\", IX86_BUILTIN_PSRLDI256_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_INT_V8SI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv8si3_mask, \"__builtin_ia32_psrld256_mask\", IX86_BUILTIN_PSRLD256_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V4SI_V8SI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv2di3_mask, \"__builtin_ia32_psrlqi128_mask\", IX86_BUILTIN_PSRLQI128_MASK, UNKNOWN, (int) V2DI_FTYPE_V2DI_INT_V2DI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv2di3_mask, \"__builtin_ia32_psrlq128_mask\", IX86_BUILTIN_PSRLQ128_MASK, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_V2DI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv4di3_mask, \"__builtin_ia32_psrlqi256_mask\", IX86_BUILTIN_PSRLQI256_MASK, UNKNOWN, (int) V4DI_FTYPE_V4DI_INT_V4DI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv4di3_mask, \"__builtin_ia32_psrlq256_mask\", IX86_BUILTIN_PSRLQ256_MASK, UNKNOWN, (int) V4DI_FTYPE_V4DI_V2DI_V4DI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv4si3_mask, \"__builtin_ia32_psrldi128_mask\", IX86_BUILTIN_PSRLDI128_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_INT_V4SI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv4si3_mask, \"__builtin_ia32_psrld128_mask\", IX86_BUILTIN_PSRLD128_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv8si3_mask, \"__builtin_ia32_psrldi256_mask\", IX86_BUILTIN_PSRLDI256_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_INT_V8SI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv8si3_mask, \"__builtin_ia32_psrld256_mask\", IX86_BUILTIN_PSRLD256_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V4SI_V8SI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv2di3_mask, \"__builtin_ia32_psrlqi128_mask\", IX86_BUILTIN_PSRLQI128_MASK, UNKNOWN, (int) V2DI_FTYPE_V2DI_INT_V2DI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv2di3_mask, \"__builtin_ia32_psrlq128_mask\", IX86_BUILTIN_PSRLQ128_MASK, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_V2DI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv4di3_mask, \"__builtin_ia32_psrlqi256_mask\", IX86_BUILTIN_PSRLQI256_MASK, UNKNOWN, (int) V4DI_FTYPE_V4DI_INT_V4DI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv4di3_mask, \"__builtin_ia32_psrlq256_mask\", IX86_BUILTIN_PSRLQ256_MASK, UNKNOWN, (int) V4DI_FTYPE_V4DI_V2DI_V4DI_UQI_COUNT)\n BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_andv4di3_mask, \"__builtin_ia32_pandq256_mask\", IX86_BUILTIN_PANDQ256, UNKNOWN, (int) V4DI_FTYPE_V4DI_V4DI_V4DI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_andv2di3_mask, \"__builtin_ia32_pandq128_mask\", IX86_BUILTIN_PANDQ128, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_V2DI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx2_andnotv8si3_mask, \"__builtin_ia32_pandnd256_mask\", IX86_BUILTIN_PANDND256, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_UQI)\n@@ -1983,14 +1983,14 @@ BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx2_lshrvv4di_mask, \"__builtin_ia32_p\n BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx2_lshrvv2di_mask, \"__builtin_ia32_psrlv2di_mask\", IX86_BUILTIN_PSRLVV2DI_MASK, UNKNOWN, (int) V2DI_FTYPE_V2DI_V2DI_V2DI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx2_lshrvv8si_mask, \"__builtin_ia32_psrlv8si_mask\", IX86_BUILTIN_PSRLVV8SI_MASK, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx2_lshrvv4si_mask, \"__builtin_ia32_psrlv4si_mask\", IX86_BUILTIN_PSRLVV4SI_MASK, UNKNOWN, (int) V4SI_FTYPE_V4SI_V4SI_V4SI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv16hi3_mask, \"__builtin_ia32_psrawi256_mask\", IX86_BUILTIN_PSRAWI256_MASK, UNKNOWN, (int) V16HI_FTYPE_V16HI_INT_V16HI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv16hi3_mask, \"__builtin_ia32_psraw256_mask\", IX86_BUILTIN_PSRAW256_MASK, UNKNOWN, (int) V16HI_FTYPE_V16HI_V8HI_V16HI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv8hi3_mask, \"__builtin_ia32_psrawi128_mask\", IX86_BUILTIN_PSRAWI128_MASK, UNKNOWN, (int) V8HI_FTYPE_V8HI_INT_V8HI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv8hi3_mask, \"__builtin_ia32_psraw128_mask\", IX86_BUILTIN_PSRAW128_MASK, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv16hi3_mask, \"__builtin_ia32_psrlwi256_mask\", IX86_BUILTIN_PSRLWI256_MASK, UNKNOWN, (int) V16HI_FTYPE_V16HI_INT_V16HI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv16hi3_mask, \"__builtin_ia32_psrlw256_mask\", IX86_BUILTIN_PSRLW256_MASK, UNKNOWN, (int) V16HI_FTYPE_V16HI_V8HI_V16HI_UHI)\n-BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv8hi3_mask, \"__builtin_ia32_psrlwi128_mask\", IX86_BUILTIN_PSRLWI128_MASK, UNKNOWN, (int) V8HI_FTYPE_V8HI_INT_V8HI_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv8hi3_mask, \"__builtin_ia32_psrlw128_mask\", IX86_BUILTIN_PSRLW128_MASK, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv16hi3_mask, \"__builtin_ia32_psrawi256_mask\", IX86_BUILTIN_PSRAWI256_MASK, UNKNOWN, (int) V16HI_FTYPE_V16HI_INT_V16HI_UHI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv16hi3_mask, \"__builtin_ia32_psraw256_mask\", IX86_BUILTIN_PSRAW256_MASK, UNKNOWN, (int) V16HI_FTYPE_V16HI_V8HI_V16HI_UHI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv8hi3_mask, \"__builtin_ia32_psrawi128_mask\", IX86_BUILTIN_PSRAWI128_MASK, UNKNOWN, (int) V8HI_FTYPE_V8HI_INT_V8HI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_ashrv8hi3_mask, \"__builtin_ia32_psraw128_mask\", IX86_BUILTIN_PSRAW128_MASK, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv16hi3_mask, \"__builtin_ia32_psrlwi256_mask\", IX86_BUILTIN_PSRLWI256_MASK, UNKNOWN, (int) V16HI_FTYPE_V16HI_INT_V16HI_UHI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv16hi3_mask, \"__builtin_ia32_psrlw256_mask\", IX86_BUILTIN_PSRLW256_MASK, UNKNOWN, (int) V16HI_FTYPE_V16HI_V8HI_V16HI_UHI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv8hi3_mask, \"__builtin_ia32_psrlwi128_mask\", IX86_BUILTIN_PSRLWI128_MASK, UNKNOWN, (int) V8HI_FTYPE_V8HI_INT_V8HI_UQI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_lshrv8hi3_mask, \"__builtin_ia32_psrlw128_mask\", IX86_BUILTIN_PSRLW128_MASK, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI_UQI_COUNT)\n BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_rorvv8si_mask, \"__builtin_ia32_prorvd256_mask\", IX86_BUILTIN_PRORVD256, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_rolvv8si_mask, \"__builtin_ia32_prolvd256_mask\", IX86_BUILTIN_PROLVD256, UNKNOWN, (int) V8SI_FTYPE_V8SI_V8SI_V8SI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_rorv8si_mask, \"__builtin_ia32_prord256_mask\", IX86_BUILTIN_PRORD256, UNKNOWN, (int) V8SI_FTYPE_V8SI_INT_V8SI_UQI)\n@@ -2307,8 +2307,8 @@ BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_avx512bw_umulhrswv32hi3_mask, \"__built\n BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_umulv32hi3_highpart_mask, \"__builtin_ia32_pmulhuw512_mask\" , IX86_BUILTIN_PMULHUW512_MASK, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_V32HI_USI)\n BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_smulv32hi3_highpart_mask, \"__builtin_ia32_pmulhw512_mask\"  , IX86_BUILTIN_PMULHW512_MASK, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_V32HI_USI)\n BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_mulv32hi3_mask, \"__builtin_ia32_pmullw512_mask\", IX86_BUILTIN_PMULLW512_MASK, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_V32HI_USI)\n-BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_ashlv32hi3_mask, \"__builtin_ia32_psllwi512_mask\", IX86_BUILTIN_PSLLWI512_MASK, UNKNOWN, (int) V32HI_FTYPE_V32HI_INT_V32HI_USI)\n-BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_ashlv32hi3_mask, \"__builtin_ia32_psllw512_mask\", IX86_BUILTIN_PSLLW512_MASK, UNKNOWN, (int) V32HI_FTYPE_V32HI_V8HI_V32HI_USI)\n+BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_ashlv32hi3_mask, \"__builtin_ia32_psllwi512_mask\", IX86_BUILTIN_PSLLWI512_MASK, UNKNOWN, (int) V32HI_FTYPE_V32HI_INT_V32HI_USI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_ashlv32hi3_mask, \"__builtin_ia32_psllw512_mask\", IX86_BUILTIN_PSLLW512_MASK, UNKNOWN, (int) V32HI_FTYPE_V32HI_V8HI_V32HI_USI_COUNT)\n BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_avx512bw_packsswb_mask, \"__builtin_ia32_packsswb512_mask\",  IX86_BUILTIN_PACKSSWB512, UNKNOWN, (int) V64QI_FTYPE_V32HI_V32HI_V64QI_UDI)\n BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_avx512bw_packuswb_mask, \"__builtin_ia32_packuswb512_mask\",  IX86_BUILTIN_PACKUSWB512, UNKNOWN, (int) V64QI_FTYPE_V32HI_V32HI_V64QI_UDI)\n BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_avx512bw_ashrvv32hi_mask, \"__builtin_ia32_psrav32hi_mask\", IX86_BUILTIN_PSRAVV32HI, UNKNOWN, (int) V32HI_FTYPE_V32HI_V32HI_V32HI_USI)\n@@ -2322,10 +2322,10 @@ BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_avx512bw_interleave_lowv32hi_mask, \"__\n BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_avx512bw_pshufbv64qi3_mask, \"__builtin_ia32_pshufb512_mask\", IX86_BUILTIN_PSHUFB512, UNKNOWN, (int) V64QI_FTYPE_V64QI_V64QI_V64QI_UDI)\n BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_avx512bw_pshufhwv32hi_mask, \"__builtin_ia32_pshufhw512_mask\", IX86_BUILTIN_PSHUFHW512, UNKNOWN, (int) V32HI_FTYPE_V32HI_INT_V32HI_USI)\n BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_avx512bw_pshuflwv32hi_mask, \"__builtin_ia32_pshuflw512_mask\", IX86_BUILTIN_PSHUFLW512, UNKNOWN, (int) V32HI_FTYPE_V32HI_INT_V32HI_USI)\n-BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_ashrv32hi3_mask, \"__builtin_ia32_psrawi512_mask\", IX86_BUILTIN_PSRAWI512, UNKNOWN, (int) V32HI_FTYPE_V32HI_INT_V32HI_USI)\n-BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_ashrv32hi3_mask, \"__builtin_ia32_psraw512_mask\", IX86_BUILTIN_PSRAW512, UNKNOWN, (int) V32HI_FTYPE_V32HI_V8HI_V32HI_USI)\n-BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_lshrv32hi3_mask, \"__builtin_ia32_psrlwi512_mask\", IX86_BUILTIN_PSRLWI512, UNKNOWN, (int) V32HI_FTYPE_V32HI_INT_V32HI_USI)\n-BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_lshrv32hi3_mask, \"__builtin_ia32_psrlw512_mask\", IX86_BUILTIN_PSRLW512, UNKNOWN, (int) V32HI_FTYPE_V32HI_V8HI_V32HI_USI)\n+BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_ashrv32hi3_mask, \"__builtin_ia32_psrawi512_mask\", IX86_BUILTIN_PSRAWI512, UNKNOWN, (int) V32HI_FTYPE_V32HI_INT_V32HI_USI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_ashrv32hi3_mask, \"__builtin_ia32_psraw512_mask\", IX86_BUILTIN_PSRAW512, UNKNOWN, (int) V32HI_FTYPE_V32HI_V8HI_V32HI_USI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_lshrv32hi3_mask, \"__builtin_ia32_psrlwi512_mask\", IX86_BUILTIN_PSRLWI512, UNKNOWN, (int) V32HI_FTYPE_V32HI_INT_V32HI_USI_COUNT)\n+BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_lshrv32hi3_mask, \"__builtin_ia32_psrlw512_mask\", IX86_BUILTIN_PSRLW512, UNKNOWN, (int) V32HI_FTYPE_V32HI_V8HI_V32HI_USI_COUNT)\n BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_avx512bw_cvtb2maskv64qi, \"__builtin_ia32_cvtb2mask512\", IX86_BUILTIN_CVTB2MASK512, UNKNOWN, (int) UDI_FTYPE_V64QI)\n BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_avx512bw_cvtw2maskv32hi, \"__builtin_ia32_cvtw2mask512\", IX86_BUILTIN_CVTW2MASK512, UNKNOWN, (int) USI_FTYPE_V32HI)\n BDESC (OPTION_MASK_ISA_AVX512BW, CODE_FOR_avx512bw_cvtmask2bv64qi, \"__builtin_ia32_cvtmask2b512\", IX86_BUILTIN_CVTMASK2B512, UNKNOWN, (int) V64QI_FTYPE_UDI)"}, {"sha": "e92ffc496f63530343278dd53b5e8bbb7bc84798", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb278caa18841ee7a15adab8ca8bb1e99dbb3117/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb278caa18841ee7a15adab8ca8bb1e99dbb3117/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=cb278caa18841ee7a15adab8ca8bb1e99dbb3117", "patch": "@@ -34857,7 +34857,7 @@ ix86_expand_args_builtin (const struct builtin_description *d,\n       rtx op;\n       machine_mode mode;\n     } args[6];\n-  bool last_arg_count = false;\n+  bool second_arg_count = false;\n   enum insn_code icode = d->icode;\n   const struct insn_data_d *insn_p = &insn_data[icode];\n   machine_mode tmode = insn_p->operand[0].mode;\n@@ -35093,7 +35093,28 @@ ix86_expand_args_builtin (const struct builtin_description *d,\n     case V1DI_FTYPE_V1DI_V1DI_COUNT:\n     case V1DI_FTYPE_V1DI_SI_COUNT:\n       nargs = 2;\n-      last_arg_count = true;\n+      second_arg_count = true;\n+      break;\n+    case V16HI_FTYPE_V16HI_INT_V16HI_UHI_COUNT:\n+    case V16HI_FTYPE_V16HI_V8HI_V16HI_UHI_COUNT:\n+    case V16SI_FTYPE_V16SI_INT_V16SI_UHI_COUNT:\n+    case V16SI_FTYPE_V16SI_V4SI_V16SI_UHI_COUNT:\n+    case V2DI_FTYPE_V2DI_INT_V2DI_UQI_COUNT:\n+    case V2DI_FTYPE_V2DI_V2DI_V2DI_UQI_COUNT:\n+    case V32HI_FTYPE_V32HI_INT_V32HI_USI_COUNT:\n+    case V32HI_FTYPE_V32HI_V8HI_V32HI_USI_COUNT:\n+    case V4DI_FTYPE_V4DI_INT_V4DI_UQI_COUNT:\n+    case V4DI_FTYPE_V4DI_V2DI_V4DI_UQI_COUNT:\n+    case V4SI_FTYPE_V4SI_INT_V4SI_UQI_COUNT:\n+    case V4SI_FTYPE_V4SI_V4SI_V4SI_UQI_COUNT:\n+    case V8DI_FTYPE_V8DI_INT_V8DI_UQI_COUNT:\n+    case V8DI_FTYPE_V8DI_V2DI_V8DI_UQI_COUNT:\n+    case V8HI_FTYPE_V8HI_INT_V8HI_UQI_COUNT:\n+    case V8HI_FTYPE_V8HI_V8HI_V8HI_UQI_COUNT:\n+    case V8SI_FTYPE_V8SI_INT_V8SI_UQI_COUNT:\n+    case V8SI_FTYPE_V8SI_V4SI_V8SI_UQI_COUNT:\n+      nargs = 4;\n+      second_arg_count = true;\n       break;\n     case UINT64_FTYPE_UINT64_UINT64:\n     case UINT_FTYPE_UINT_UINT:\n@@ -35572,7 +35593,7 @@ ix86_expand_args_builtin (const struct builtin_description *d,\n       machine_mode mode = insn_p->operand[i + 1].mode;\n       bool match = insn_p->operand[i + 1].predicate (op, mode);\n \n-      if (last_arg_count && (i + 1) == nargs)\n+      if (second_arg_count && i == 1)\n \t{\n \t  /* SIMD shift insns take either an 8-bit immediate or\n \t     register as count.  But builtin functions take int as"}, {"sha": "ebfe7392a9858a4464f62654f80b8db48fce2bc6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb278caa18841ee7a15adab8ca8bb1e99dbb3117/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb278caa18841ee7a15adab8ca8bb1e99dbb3117/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cb278caa18841ee7a15adab8ca8bb1e99dbb3117", "patch": "@@ -1,5 +1,8 @@\n 2017-04-11  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/80381\n+\t* gcc.target/i386/pr80381.c: New test.\n+\n \tPR c++/80363\n \t* g++.dg/ext/pr80363.C: New test.\n "}, {"sha": "5ab0e7eb336cce01e2910d372389db18cc1c6b48", "filename": "gcc/testsuite/gcc.target/i386/pr80381.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb278caa18841ee7a15adab8ca8bb1e99dbb3117/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr80381.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb278caa18841ee7a15adab8ca8bb1e99dbb3117/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr80381.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr80381.c?ref=cb278caa18841ee7a15adab8ca8bb1e99dbb3117", "patch": "@@ -0,0 +1,29 @@\n+/* PR target/80381 */\n+/* { dg-do compile } */\n+/* { dg-options \"-mavx512f -O2\" } */\n+\n+#include <x86intrin.h>\n+\n+__m512i\n+f1 (__m512i x, int a)\n+{\n+  return _mm512_srai_epi32 (x, a);\n+}\n+\n+__m512i\n+f2 (__m512i x, __m512i y, __mmask16 m, int a)\n+{\n+  return _mm512_mask_srai_epi32 (y, m, x, a);\n+}\n+\n+__m512i\n+f3 (__m512i x)\n+{\n+  return _mm512_srai_epi32 (x, 6);\n+}\n+\n+__m512i\n+f4 (__m512i x, __m512i y, __mmask16 m)\n+{\n+  return _mm512_mask_srai_epi32 (y, m, x, 6);\n+}"}]}