{"sha": "80eb8ec67277b83fdeec01427cf1609f1f679fed", "node_id": "C_kwDOANBUbNoAKDgwZWI4ZWM2NzI3N2I4M2ZkZWVjMDE0MjdjZjE2MDlmMWY2NzlmZWQ", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-04-07T00:16:45Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-04-07T00:16:45Z"}, "message": "Daily bump.", "tree": {"sha": "f719925afbead7636babd7604c8a0df910cb737e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f719925afbead7636babd7604c8a0df910cb737e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80eb8ec67277b83fdeec01427cf1609f1f679fed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80eb8ec67277b83fdeec01427cf1609f1f679fed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80eb8ec67277b83fdeec01427cf1609f1f679fed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80eb8ec67277b83fdeec01427cf1609f1f679fed/comments", "author": null, "committer": null, "parents": [{"sha": "5e431ae4ccc5fb0e077e598cb4efb1e12fc66c68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e431ae4ccc5fb0e077e598cb4efb1e12fc66c68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e431ae4ccc5fb0e077e598cb4efb1e12fc66c68"}], "stats": {"total": 245, "additions": 244, "deletions": 1}, "files": [{"sha": "66e7bb83746e9b7f39404e593d7f9346204a726b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 121, "deletions": 0, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80eb8ec67277b83fdeec01427cf1609f1f679fed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80eb8ec67277b83fdeec01427cf1609f1f679fed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80eb8ec67277b83fdeec01427cf1609f1f679fed", "patch": "@@ -1,3 +1,124 @@\n+2022-04-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/104985\n+\t* combine.cc (struct undo): Add where.regno member.\n+\t(do_SUBST_MODE): Rename to ...\n+\t(subst_mode): ... this.  Change first argument from rtx * into int,\n+\toperate on regno_reg_rtx[regno] and save regno into where.regno.\n+\t(SUBST_MODE): Remove.\n+\t(try_combine): Use subst_mode instead of SUBST_MODE, change first\n+\targument from regno_reg_rtx[whatever] to whatever.  For UNDO_MODE, use\n+\tregno_reg_rtx[undo->where.regno] instead of *undo->where.r.\n+\t(undo_to_marker): For UNDO_MODE, use regno_reg_rtx[undo->where.regno]\n+\tinstead of *undo->where.r.\n+\t(simplify_set): Use subst_mode instead of SUBST_MODE, change first\n+\targument from regno_reg_rtx[whatever] to whatever.\n+\n+2022-04-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/105069\n+\t* config/sh/sh.opt (mdiv=): Add Save.\n+\n+2022-04-06  Martin Liska  <mliska@suse.cz>\n+\n+\tPR driver/105096\n+\t* common.opt: Document properly based on what it does.\n+\t* gcc.cc (display_help): Unify with what we have in common.opt.\n+\t* opts.cc (common_handle_option): Do not print undocumented\n+\toptions.\n+\n+2022-04-06  Xi Ruoyao  <xry111@mengyan1223.wang>\n+\n+\t* config/mips/mips.cc (mips_fpr_return_fields): Ignore\n+\tcxx17_empty_base_field_p fields and set an indicator.\n+\t(mips_return_in_msb): Adjust for mips_fpr_return_fields change.\n+\t(mips_function_value_1): Inform psABI change about C++17 empty\n+\tbases.\n+\n+2022-04-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/105150\n+\t* gimple.cc (gimple_builtin_call_types_compatible_p): Use\n+\tbuiltin_decl_explicit here...\n+\t(gimple_call_builtin_p, gimple_call_combined_fn): ... rather than\n+\there.\n+\n+2022-04-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/105173\n+\t* tree-ssa-reassoc.cc (find_insert_point): Get extra\n+\tinsert_before output argument and compute it.\n+\t(insert_stmt_before_use): Adjust.\n+\t(rewrite_expr_tree): Likewise.\n+\n+2022-04-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/105166\n+\t* ipa-modref-tree.cc (modref_access_node::get_ao_ref ): Bail\n+\tout for non-pointer arguments.\n+\n+2022-04-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/105163\n+\t* tree-ssa-reassoc.cc (repropagate_negates): Avoid propagating\n+\tnegated abnormals.\n+\n+2022-04-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/105150\n+\t* gimple.cc (gimple_call_builtin_p, gimple_call_combined_fn):\n+\tFor BUILT_IN_NORMAL calls, call gimple_builtin_call_types_compatible_p\n+\tpreferrably on builtin_decl_explicit decl rather than fndecl.\n+\t* tree-ssa-strlen.cc (valid_builtin_call): Don't call\n+\tgimple_builtin_call_types_compatible_p here.\n+\n+2022-04-06  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/103761\n+\t* tree-vect-stmts.cc (check_load_store_for_partial_vectors): Replace\n+\tthe ncopies parameter with an slp_node parameter.  Calculate the\n+\tnumber of vectors based on it and vectype.  Rename lambda to\n+\tgroup_memory_nvectors.\n+\t(vectorizable_store, vectorizable_load): Update calls accordingly.\n+\n+2022-04-06  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/invoke.texi: Document it.\n+\n+2022-04-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/105148\n+\t* tree-ssa-loop-ivopts.cc (idx_record_use): Walk raw operands\n+\t2 and 3 of ARRAY_REFs.\n+\n+2022-04-06  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* config/i386/sse.md (ANDNOT_MODE): New mode iterator for TF and V1TI.\n+\t(*andnottf3): Replace with...\n+\t(*andnot<mode>3): New define_insn using ANDNOT_MODE.\n+\n+2022-04-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/105142\n+\t* gimple-fold.h (maybe_fold_and_comparisons): Add defaulted\n+\tbasic-block parameter.\n+\t(maybe_fold_or_comparisons): Likewise.\n+\t* gimple-fold.cc (follow_outer_ssa_edges): New.\n+\t(maybe_fold_comparisons_from_match_pd): Use follow_outer_ssa_edges\n+\twhen an outer condition basic-block is specified.\n+\t(and_comparisons_1, and_var_with_comparison,\n+\tand_var_with_comparison_1, or_comparisons_1,\n+\tor_var_with_comparison, or_var_with_comparison_1): Receive and pass\n+\tdown the outer condition basic-block.\n+\t* tree-ssa-ifcombine.cc (ifcombine_ifandif): Pass down the\n+\tbasic-block of the outer condition.\n+\n+2022-04-06  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\tPR target/105002\n+\t* config/rs6000/rs6000.cc (rs6000_maybe_emit_maxc_minc): Support more\n+\tcomparison codes UNLT/UNLE/UNGT/UNGE.\n+\n 2022-04-05  David Malcolm  <dmalcolm@redhat.com>\n \n \t* doc/extend.texi (Common Function Attributes): Document that"}, {"sha": "0e235becadf8e16509a7dc999f1599ac4d3b807e", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80eb8ec67277b83fdeec01427cf1609f1f679fed/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80eb8ec67277b83fdeec01427cf1609f1f679fed/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=80eb8ec67277b83fdeec01427cf1609f1f679fed", "patch": "@@ -1 +1 @@\n-20220406\n+20220407"}, {"sha": "032e75c32f8eedcd07cf8aa03e6074593cf2d08e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80eb8ec67277b83fdeec01427cf1609f1f679fed/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80eb8ec67277b83fdeec01427cf1609f1f679fed/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=80eb8ec67277b83fdeec01427cf1609f1f679fed", "patch": "@@ -1,3 +1,28 @@\n+2022-04-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/104668\n+\t* decl2.cc (splice_template_attributes): Return NULL if *p is\n+\terror_mark_node.\n+\t(cplus_decl_attributes): Return early if attributes is\n+\terror_mark_node.  Don't check that later.\n+\n+2022-04-06  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/105143\n+\t* pt.cc (do_class_deduction): Check complain before attempting\n+\tto issue a -Wctad-maybe-unsupported warning.\n+\n+2022-04-06  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/104702\n+\t* init.cc (build_vec_init): Use a reference for the result.\n+\n+2022-04-06  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/100608\n+\t* name-lookup.cc (check_local_shadow): Use -Wshadow=local\n+\tif exactly one of 'old' and 'decl' is a type.\n+\n 2022-04-05  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/103852"}, {"sha": "78135db7d74f3e93f8d3b942ef5d018e1e4dc78c", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80eb8ec67277b83fdeec01427cf1609f1f679fed/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80eb8ec67277b83fdeec01427cf1609f1f679fed/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=80eb8ec67277b83fdeec01427cf1609f1f679fed", "patch": "@@ -1,3 +1,15 @@\n+2022-04-06  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR jit/102824\n+\t* docs/_build/texinfo/factorial.png: Move to...\n+\t* docs/_build/texinfo/libgccjit-figures/factorial.png: ...here.\n+\t* docs/_build/texinfo/factorial1.png: Move to...\n+\t* docs/_build/texinfo/libgccjit-figures/factorial1.png: ...here.\n+\t* docs/_build/texinfo/sum-of-squares.png: Move to...\n+\t* docs/_build/texinfo/libgccjit-figures/sum-of-squares.png: ...here.\n+\t* docs/_build/texinfo/sum-of-squares1.png: Move to...\n+\t* docs/_build/texinfo/libgccjit-figures/sum-of-squares1.png: ...here.\n+\n 2022-04-01  David Malcolm  <dmalcolm@redhat.com>\n \n \t* docs/topics/expressions.rst: Fix formatting."}, {"sha": "7615f5a3eeecb3bb4945b4a50790b57568a7d77a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80eb8ec67277b83fdeec01427cf1609f1f679fed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80eb8ec67277b83fdeec01427cf1609f1f679fed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=80eb8ec67277b83fdeec01427cf1609f1f679fed", "patch": "@@ -1,3 +1,75 @@\n+2022-04-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/104668\n+\t* g++.dg/cpp0x/pr104668.C: New test.\n+\n+2022-04-06  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/105143\n+\t* g++.dg/cpp2a/nodiscard1.C: New test.\n+\t* g++.dg/warn/Wctad-maybe-unsupported4.C: New test.\n+\n+2022-04-06  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/105147\n+\t* gcc.dg/pr105140.c: Skip for powerpc*-*-*.\n+\n+2022-04-06  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/104702\n+\t* g++.dg/warn/Wunused-19.C: New test.\n+\n+2022-04-06  Xi Ruoyao  <xry111@mengyan1223.wang>\n+\n+\t* g++.target/mips/cxx17_empty_base.C: New test.\n+\n+2022-04-06  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/100608\n+\t* g++.dg/warn/Wshadow-compatible-local-3.C: New test.\n+\n+2022-04-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/105173\n+\t* gcc.dg/pr105173.c: New testcase.\n+\n+2022-04-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/105166\n+\t* gcc.dg/torture/pr105166.c: New testcase.\n+\n+2022-04-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/105163\n+\t* gcc.dg/torture/pr105163.c: New testcase.\n+\n+2022-04-06  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR tree-optimization/103761\n+\t* gcc.dg/vect/pr103761.c: New test.\n+\t* gcc.target/aarch64/sve/pr103761.c: Likewise.\n+\n+2022-04-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/105148\n+\t* gcc.dg/torture/pr105148.c: New testcase.\n+\n+2022-04-06  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* gcc.target/i386/sse2-v1ti-andnot.c: New test case.\n+\n+2022-04-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/105142\n+\t* g++.dg/torture/pr105142.C: New testcase.\n+\n+2022-04-06  Richard Biener  <rguenther@suse.de>\n+\n+\tPR testsuite/105122\n+\t* gcc.dg/memcpy-6.c: Adjust.\n+\t* gcc.dg/strlenopt-73.c: Likewise.\n+\t* gcc.dg/strlenopt-80.c: Likewise.\n+\n 2022-04-05  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* gfortran.dg/gomp/masked-taskloop.f90: New."}, {"sha": "ce988517e898e458f821762f16f567e1241c1cbb", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80eb8ec67277b83fdeec01427cf1609f1f679fed/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80eb8ec67277b83fdeec01427cf1609f1f679fed/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=80eb8ec67277b83fdeec01427cf1609f1f679fed", "patch": "@@ -1,3 +1,7 @@\n+2022-04-06  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* cuda/cuda.h: New file.\n+\n 2022-03-19  Tiezhu Yang  <yangtiezhu@loongson.cn>\n \n \t* floatformat.h (floatformat_ieee_quad_big): Renamed from"}, {"sha": "ed5cb2226cdc3b33035ec95fc679787d78c76af6", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80eb8ec67277b83fdeec01427cf1609f1f679fed/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80eb8ec67277b83fdeec01427cf1609f1f679fed/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=80eb8ec67277b83fdeec01427cf1609f1f679fed", "patch": "@@ -1,3 +1,12 @@\n+2022-04-06  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* plugin/cuda/cuda.h: Remove file.\n+\t* plugin/plugin-nvptx.c [PLUGIN_NVPTX_DYNAMIC]: Include\n+\t\"cuda/cuda.h\" instead of <cuda.h>.\n+\t* plugin/configfrag.ac <PLUGIN_NVPTX_DYNAMIC>: Don't set\n+\t'PLUGIN_NVPTX_CPPFLAGS'.\n+\t* configure: Regenerate.\n+\n 2022-04-05  Chung-Lin Tang  <cltang@codesourcery.com>\n \n \t* testsuite/libgomp.fortran/use_device_ptr-4.f90: New testcase."}]}