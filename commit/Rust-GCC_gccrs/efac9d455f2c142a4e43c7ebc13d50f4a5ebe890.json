{"sha": "efac9d455f2c142a4e43c7ebc13d50f4a5ebe890", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWZhYzlkNDU1ZjJjMTQyYTRlNDNjN2ViYzEzZDUwZjRhNWViZTg5MA==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2015-05-26T15:16:35Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2015-05-26T15:16:35Z"}, "message": "* config/rs6000/constraints.md (Y, U): Use match_test.\n\nFrom-SVN: r223702", "tree": {"sha": "0234a188f08abb57830241eacbe796f78d230671", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0234a188f08abb57830241eacbe796f78d230671"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/efac9d455f2c142a4e43c7ebc13d50f4a5ebe890", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efac9d455f2c142a4e43c7ebc13d50f4a5ebe890", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efac9d455f2c142a4e43c7ebc13d50f4a5ebe890", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efac9d455f2c142a4e43c7ebc13d50f4a5ebe890/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "28c206e10c3dfa3213eb703afd7a0b6749239ea7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28c206e10c3dfa3213eb703afd7a0b6749239ea7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28c206e10c3dfa3213eb703afd7a0b6749239ea7"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "23e92d8e1cb320cc35defa430d7dfb341409b4d0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efac9d455f2c142a4e43c7ebc13d50f4a5ebe890/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efac9d455f2c142a4e43c7ebc13d50f4a5ebe890/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=efac9d455f2c142a4e43c7ebc13d50f4a5ebe890", "patch": "@@ -1,3 +1,7 @@\n+2015-05-26  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* config/rs6000/constraints.md (Y, U): Use match_test.\n+\n 2015-05-26  Christian Bruel  <christian.bruel@st.com>\n \n \tPR target/52144"}, {"sha": "7fc635b07a7e7a656a57fa7bc1778951fac396e1", "filename": "gcc/config/rs6000/constraints.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/efac9d455f2c142a4e43c7ebc13d50f4a5ebe890/gcc%2Fconfig%2Frs6000%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/efac9d455f2c142a4e43c7ebc13d50f4a5ebe890/gcc%2Fconfig%2Frs6000%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fconstraints.md?ref=efac9d455f2c142a4e43c7ebc13d50f4a5ebe890", "patch": "@@ -211,7 +211,7 @@ to use @samp{m} or @samp{es} in @code{asm} statements)\"\n (define_memory_constraint \"Y\"\n   \"memory operand for 8 byte and 16 byte gpr load/store\"\n   (and (match_code \"mem\")\n-       (match_operand 0 \"mem_operand_gpr\")))\n+       (match_test \"mem_operand_gpr (op, mode)\")))\n \n (define_memory_constraint \"Z\"\n   \"Memory operand that is an indexed or indirect from a register (it is\n@@ -242,7 +242,7 @@ usually better to use @samp{m} or @samp{es} in @code{asm} statements)\"\n (define_constraint \"U\"\n   \"V.4 small data reference\"\n   (and (match_test \"DEFAULT_ABI == ABI_V4\")\n-       (match_operand 0 \"small_data_operand\")))\n+       (match_test \"small_data_operand (op, mode)\")))\n \n (define_constraint \"t\"\n   \"AND masks that can be performed by two rldic{l,r} insns"}]}