{"sha": "01577df7793e949ed8d31cb18c931fbbe7ef00d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE1NzdkZjc3OTNlOTQ5ZWQ4ZDMxY2IxOGM5MzFmYmJlN2VmMDBkMA==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2008-12-16T12:03:41Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2008-12-16T12:03:41Z"}, "message": "re PR target/37436 (arm-cross-g++. internal compiler error: in extract_insn, at recog.c:1990)\n\nPR target/37436\n* arm.c (arm_legitimate_index): Only accept addresses that are in\ncanonical form.\n* predicates.md (arm_reg_or_extendqisi_mem_op): New predicate.\n* arm.md (extendqihi2): Use arm_reg_or_extendqisi_mem_op predicate\nfor operand1.\n(extendqisi2): Likewise.\n(arm_extendqisi, arm_extendqisi_v6): Use arm_extendqisi_mem_op\npredicate for operand1.\n\nFrom-SVN: r142778", "tree": {"sha": "a7a3d210a6068cb824a9dbae55403ebb06d8eba6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7a3d210a6068cb824a9dbae55403ebb06d8eba6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01577df7793e949ed8d31cb18c931fbbe7ef00d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01577df7793e949ed8d31cb18c931fbbe7ef00d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01577df7793e949ed8d31cb18c931fbbe7ef00d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01577df7793e949ed8d31cb18c931fbbe7ef00d0/comments", "author": null, "committer": null, "parents": [{"sha": "d4e1b0727a0d795a7edc712032f1712197b70eb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4e1b0727a0d795a7edc712032f1712197b70eb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4e1b0727a0d795a7edc712032f1712197b70eb8"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "c941cd247d5700de6b8886ebb0d9318f1fa7d4d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01577df7793e949ed8d31cb18c931fbbe7ef00d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01577df7793e949ed8d31cb18c931fbbe7ef00d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=01577df7793e949ed8d31cb18c931fbbe7ef00d0", "patch": "@@ -1,3 +1,15 @@\n+2008-12-16  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/37436\n+\t* arm.c (arm_legitimate_index): Only accept addresses that are in\n+\tcanonical form.\n+\t* predicates.md (arm_reg_or_extendqisi_mem_op): New predicate.\n+\t* arm.md (extendqihi2): Use arm_reg_or_extendqisi_mem_op predicate\n+\tfor operand1.\n+\t(extendqisi2): Likewise.\n+\t(arm_extendqisi, arm_extendqisi_v6): Use arm_extendqisi_mem_op\n+\tpredicate for operand1.\n+\t\n 2008-12-15  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* config/mips/mips.c (mips_output_conditional_branch): Assert that"}, {"sha": "46aa238e45a3832e2b3d9a001fc988f1cbfea12c", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01577df7793e949ed8d31cb18c931fbbe7ef00d0/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01577df7793e949ed8d31cb18c931fbbe7ef00d0/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=01577df7793e949ed8d31cb18c931fbbe7ef00d0", "patch": "@@ -3844,6 +3844,7 @@ arm_legitimate_address_p (enum machine_mode mode, rtx x, RTX_CODE outer,\n       rtx xop1 = XEXP (x, 1);\n \n       return ((arm_address_register_rtx_p (xop0, strict_p)\n+\t       && GET_CODE(xop1) == CONST_INT\n \t       && arm_legitimate_index_p (mode, xop1, outer, strict_p))\n \t      || (arm_address_register_rtx_p (xop1, strict_p)\n \t\t  && arm_legitimate_index_p (mode, xop0, outer, strict_p)));"}, {"sha": "96e2f3b1bb38d17c70d32f75a100f78b5602460d", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01577df7793e949ed8d31cb18c931fbbe7ef00d0/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01577df7793e949ed8d31cb18c931fbbe7ef00d0/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=01577df7793e949ed8d31cb18c931fbbe7ef00d0", "patch": "@@ -4299,7 +4299,7 @@\n \n (define_expand \"extendqihi2\"\n   [(set (match_dup 2)\n-\t(ashift:SI (match_operand:QI 1 \"general_operand\" \"\")\n+\t(ashift:SI (match_operand:QI 1 \"arm_reg_or_extendqisi_mem_op\" \"\")\n \t\t   (const_int 24)))\n    (set (match_operand:HI 0 \"s_register_operand\" \"\")\n \t(ashiftrt:SI (match_dup 2)\n@@ -4324,7 +4324,7 @@\n \n (define_insn \"*arm_extendqihi_insn\"\n   [(set (match_operand:HI 0 \"s_register_operand\" \"=r\")\n-\t(sign_extend:HI (match_operand:QI 1 \"memory_operand\" \"Uq\")))]\n+\t(sign_extend:HI (match_operand:QI 1 \"arm_extendqisi_mem_op\" \"Uq\")))]\n   \"TARGET_ARM && arm_arch4\"\n   \"ldr%(sb%)\\\\t%0, %1\"\n   [(set_attr \"type\" \"load_byte\")\n@@ -4335,7 +4335,7 @@\n \n (define_expand \"extendqisi2\"\n   [(set (match_dup 2)\n-\t(ashift:SI (match_operand:QI 1 \"general_operand\" \"\")\n+\t(ashift:SI (match_operand:QI 1 \"arm_reg_or_extendqisi_mem_op\" \"\")\n \t\t   (const_int 24)))\n    (set (match_operand:SI 0 \"s_register_operand\" \"\")\n \t(ashiftrt:SI (match_dup 2)\n@@ -4367,7 +4367,7 @@\n \n (define_insn \"*arm_extendqisi\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n-\t(sign_extend:SI (match_operand:QI 1 \"memory_operand\" \"Uq\")))]\n+\t(sign_extend:SI (match_operand:QI 1 \"arm_extendqisi_mem_op\" \"Uq\")))]\n   \"TARGET_ARM && arm_arch4 && !arm_arch6\"\n   \"ldr%(sb%)\\\\t%0, %1\"\n   [(set_attr \"type\" \"load_byte\")\n@@ -4378,7 +4378,8 @@\n \n (define_insn \"*arm_extendqisi_v6\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r,r\")\n-\t(sign_extend:SI (match_operand:QI 1 \"nonimmediate_operand\" \"r,Uq\")))]\n+\t(sign_extend:SI\n+\t (match_operand:QI 1 \"arm_reg_or_extendqisi_mem_op\" \"r,Uq\")))]\n   \"TARGET_ARM && arm_arch6\"\n   \"@\n    sxtb%?\\\\t%0, %1"}, {"sha": "48e697fa9e4a8a429eee5e58b1ea6988c43a941b", "filename": "gcc/config/arm/predicates.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01577df7793e949ed8d31cb18c931fbbe7ef00d0/gcc%2Fconfig%2Farm%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01577df7793e949ed8d31cb18c931fbbe7ef00d0/gcc%2Fconfig%2Farm%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpredicates.md?ref=01577df7793e949ed8d31cb18c931fbbe7ef00d0", "patch": "@@ -234,6 +234,10 @@\n        (match_test \"arm_legitimate_address_p (mode, XEXP (op, 0), SIGN_EXTEND,\n \t\t\t\t\t      0)\")))\n \n+(define_special_predicate \"arm_reg_or_extendqisi_mem_op\"\n+  (ior (match_operand 0 \"arm_extendqisi_mem_op\")\n+       (match_operand 0 \"s_register_operand\")))\n+\n (define_predicate \"power_of_two_operand\"\n   (match_code \"const_int\")\n {"}]}