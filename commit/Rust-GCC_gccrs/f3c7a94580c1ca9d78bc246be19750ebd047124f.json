{"sha": "f3c7a94580c1ca9d78bc246be19750ebd047124f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNjN2E5NDU4MGMxY2E5ZDc4YmMyNDZiZTE5NzUwZWJkMDQ3MTI0Zg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-03-01T00:22:26Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-03-01T00:22:26Z"}, "message": "re PR target/69706 (internal compiler error: in extract_constrain_insn, at recog.c:2246)\n\n\tPR target/69706\n\t* config/sparc/sparc.c (NWORDS_UP): Rename to...\n\t(CEIL_NWORDS): ...this.  Use CEIL macro.\n\t(compute_fp_layout): Adjust to above renaming.\n\t(function_arg_union_value): Likewise.\n\t(sparc_arg_partial_bytes): Likewise.\n\t(sparc_function_arg_advance): Likewise.\n\nFrom-SVN: r233833", "tree": {"sha": "af6b8491e6031953830d47c152177d95f2822fcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af6b8491e6031953830d47c152177d95f2822fcd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3c7a94580c1ca9d78bc246be19750ebd047124f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3c7a94580c1ca9d78bc246be19750ebd047124f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3c7a94580c1ca9d78bc246be19750ebd047124f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3c7a94580c1ca9d78bc246be19750ebd047124f/comments", "author": null, "committer": null, "parents": [{"sha": "9cb37fca64a1a2a180b7e1508e4c3ec617ed98cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cb37fca64a1a2a180b7e1508e4c3ec617ed98cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cb37fca64a1a2a180b7e1508e4c3ec617ed98cf"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "1461a956204e54ae1a64490031ba9141de94ae23", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3c7a94580c1ca9d78bc246be19750ebd047124f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3c7a94580c1ca9d78bc246be19750ebd047124f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f3c7a94580c1ca9d78bc246be19750ebd047124f", "patch": "@@ -1,4 +1,14 @@\n-2016-02-28  Jeff Law  <law@redhat.com>\n+2016-02-29  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR target/69706\n+\t* config/sparc/sparc.c (NWORDS_UP): Rename to...\n+\t(CEIL_NWORDS): ...this.  Use CEIL macro.\n+\t(compute_fp_layout): Adjust to above renaming.\n+\t(function_arg_union_value): Likewise.\n+\t(sparc_arg_partial_bytes): Likewise.\n+\t(sparc_function_arg_advance): Likewise.\n+\n+2016-02-29  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/70005\n \t* tree-ssa-uncprop.c (associate_equivalences_with_edges): Handle case"}, {"sha": "080be617a5aae6aa51e5bc855baadbd637b1ed1a", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3c7a94580c1ca9d78bc246be19750ebd047124f/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3c7a94580c1ca9d78bc246be19750ebd047124f/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=f3c7a94580c1ca9d78bc246be19750ebd047124f", "patch": "@@ -6086,7 +6086,7 @@ conventions.  */\n /* Maximum number of fp regs for args.  */\n #define SPARC_FP_ARG_MAX 16\n /* Number of words (partially) occupied for a given size in units.  */\n-#define NWORDS_UP(SIZE) (((SIZE) + UNITS_PER_WORD - 1) / UNITS_PER_WORD)\n+#define CEIL_NWORDS(SIZE) CEIL((SIZE), UNITS_PER_WORD)\n \n /* Handle the INIT_CUMULATIVE_ARGS macro.\n    Initialize a variable CUM of type CUMULATIVE_ARGS\n@@ -6429,7 +6429,7 @@ compute_fp_layout (const_tree field, HOST_WIDE_INT bitpos,\n   else\n     nregs = 1;\n \n-  nslots = NWORDS_UP (nregs * GET_MODE_SIZE (mode));\n+  nslots = CEIL_NWORDS (nregs * GET_MODE_SIZE (mode));\n \n   if (nslots > SPARC_FP_ARG_MAX - this_slotno)\n     {\n@@ -6661,7 +6661,7 @@ static rtx\n function_arg_union_value (int size, machine_mode mode, int slotno,\n \t\t\t  int regno)\n {\n-  int nwords = NWORDS_UP (size), i;\n+  int nwords = CEIL_NWORDS (size), i;\n   rtx regs;\n \n   /* See comment in previous function for empty structures.  */\n@@ -6893,8 +6893,8 @@ sparc_arg_partial_bytes (cumulative_args_t cum, machine_mode mode,\n   if (TARGET_ARCH32)\n     {\n       if ((slotno + (mode == BLKmode\n-\t\t     ? NWORDS_UP (int_size_in_bytes (type))\n-\t\t     : NWORDS_UP (GET_MODE_SIZE (mode))))\n+\t\t     ? CEIL_NWORDS (int_size_in_bytes (type))\n+\t\t     : CEIL_NWORDS (GET_MODE_SIZE (mode))))\n \t  > SPARC_INT_ARG_MAX)\n \treturn (SPARC_INT_ARG_MAX - slotno) * UNITS_PER_WORD;\n     }\n@@ -7004,8 +7004,8 @@ sparc_function_arg_advance (cumulative_args_t cum_v, machine_mode mode,\n \n   if (TARGET_ARCH32)\n     cum->words += (mode == BLKmode\n-\t\t   ? NWORDS_UP (int_size_in_bytes (type))\n-\t\t   : NWORDS_UP (GET_MODE_SIZE (mode)));\n+\t\t   ? CEIL_NWORDS (int_size_in_bytes (type))\n+\t\t   : CEIL_NWORDS (GET_MODE_SIZE (mode)));\n   else\n     {\n       if (type && AGGREGATE_TYPE_P (type))\n@@ -7021,8 +7021,8 @@ sparc_function_arg_advance (cumulative_args_t cum_v, machine_mode mode,\n \t}\n       else\n \tcum->words += (mode == BLKmode\n-\t\t       ? NWORDS_UP (int_size_in_bytes (type))\n-\t\t       : NWORDS_UP (GET_MODE_SIZE (mode)));\n+\t\t       ? CEIL_NWORDS (int_size_in_bytes (type))\n+\t\t       : CEIL_NWORDS (GET_MODE_SIZE (mode)));\n     }\n }\n "}]}