{"sha": "e14b10df7a1935c2c403e5711bab1ba25dfc1cee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE0YjEwZGY3YTE5MzVjMmM0MDNlNTcxMWJhYjFiYTI1ZGZjMWNlZQ==", "commit": {"author": {"name": "Sebastian Pop", "email": "pop@cri.ensmp.fr", "date": "2006-03-29T20:25:23Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2006-03-29T20:25:23Z"}, "message": "tree-loop-linear.c (compute_data_dependences_for_loop): Adjust calls.\n\n\t* tree-loop-linear.c (compute_data_dependences_for_loop): Adjust calls.\n\t* tree-data-ref.c (find_data_references_in_loop,\n\tcompute_data_dependences_for_loop): Use pointers to VEC.\n\t(analyze_all_data_dependences): Adjust calls.\n\t* tree-data-ref.h (find_data_references_in_loop,\n\tcompute_data_dependences_for_loop): Adjust declarations.\n\t* tree-vect-analyze.c (vect_analyze_data_refs): Adjust call to\n\tcompute_data_dependences_for_loop.\n\nFrom-SVN: r112507", "tree": {"sha": "74912e962f9e22efafe3a42bf74230ec53807486", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74912e962f9e22efafe3a42bf74230ec53807486"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e14b10df7a1935c2c403e5711bab1ba25dfc1cee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e14b10df7a1935c2c403e5711bab1ba25dfc1cee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e14b10df7a1935c2c403e5711bab1ba25dfc1cee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e14b10df7a1935c2c403e5711bab1ba25dfc1cee/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4e3674320b093c8393afed5e95b6c9106447303", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4e3674320b093c8393afed5e95b6c9106447303", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4e3674320b093c8393afed5e95b6c9106447303"}], "stats": {"total": 45, "additions": 28, "deletions": 17}, "files": [{"sha": "519980b1b351712424489744c19479d9d21821a2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14b10df7a1935c2c403e5711bab1ba25dfc1cee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14b10df7a1935c2c403e5711bab1ba25dfc1cee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e14b10df7a1935c2c403e5711bab1ba25dfc1cee", "patch": "@@ -1,3 +1,14 @@\n+2006-03-29  Sebastian Pop  <pop@cri.ensmp.fr>\n+\n+\t* tree-loop-linear.c (compute_data_dependences_for_loop): Adjust calls.\n+\t* tree-data-ref.c (find_data_references_in_loop,\n+\tcompute_data_dependences_for_loop): Use pointers to VEC.\n+\t(analyze_all_data_dependences): Adjust calls.\n+\t* tree-data-ref.h (find_data_references_in_loop,\n+\tcompute_data_dependences_for_loop): Adjust declarations.\n+\t* tree-vect-analyze.c (vect_analyze_data_refs): Adjust call to\n+\tcompute_data_dependences_for_loop.\n+\n 2006-03-29  Paul Brook  <paul@codesourcery.com>\n \n \t* config/arm/vfp.md (movsf_vfp): Disparage w<->r alternatives."}, {"sha": "dd9e4d64a94813fb9d663dcaf88af7afa708695b", "filename": "gcc/tree-data-ref.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14b10df7a1935c2c403e5711bab1ba25dfc1cee/gcc%2Ftree-data-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14b10df7a1935c2c403e5711bab1ba25dfc1cee/gcc%2Ftree-data-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.c?ref=e14b10df7a1935c2c403e5711bab1ba25dfc1cee", "patch": "@@ -3968,7 +3968,7 @@ compute_all_dependences (VEC (data_reference_p, heap) *datarefs,\n \n tree \n find_data_references_in_loop (struct loop *loop,\n-\t\t\t      VEC (data_reference_p, heap) *datarefs)\n+\t\t\t      VEC (data_reference_p, heap) **datarefs)\n {\n   basic_block bb, *bbs;\n   unsigned int i;\n@@ -4012,7 +4012,7 @@ find_data_references_in_loop (struct loop *loop,\n \t\t    dr = create_data_ref (opnd0, stmt, false);\n \t\t    if (dr) \n \t\t      {\n-\t\t\tVEC_safe_push (data_reference_p, heap, datarefs, dr);\n+\t\t\tVEC_safe_push (data_reference_p, heap, *datarefs, dr);\n \t\t\tone_inserted = true;\n \t\t      }\n \t\t  }\n@@ -4024,7 +4024,7 @@ find_data_references_in_loop (struct loop *loop,\n \t\t    dr = create_data_ref (opnd1, stmt, true);\n \t\t    if (dr) \n \t\t      {\n-\t\t\tVEC_safe_push (data_reference_p, heap, datarefs, dr);\n+\t\t\tVEC_safe_push (data_reference_p, heap, *datarefs, dr);\n \t\t\tone_inserted = true;\n \t\t      }\n \t\t  }\n@@ -4049,7 +4049,7 @@ find_data_references_in_loop (struct loop *loop,\n \t\t      dr = create_data_ref (TREE_VALUE (args), stmt, true);\n \t\t      if (dr)\n \t\t\t{\n-\t\t\t  VEC_safe_push (data_reference_p, heap, datarefs, dr);\n+\t\t\t  VEC_safe_push (data_reference_p, heap, *datarefs, dr);\n \t\t\t  one_inserted = true;\n \t\t\t}\n \t\t    }\n@@ -4080,7 +4080,7 @@ find_data_references_in_loop (struct loop *loop,\n \t\t  DR_OFFSET_MISALIGNMENT (res) = NULL_TREE;\n \t\t  DR_MEMTAG (res) = NULL_TREE;\n \t\t  DR_PTR_INFO (res) = NULL;\n-\t\t  VEC_safe_push (data_reference_p, heap, datarefs, res);\n+\t\t  VEC_safe_push (data_reference_p, heap, *datarefs, res);\n \n \t\t  free (bbs);\n \t\t  return chrec_dont_know;\n@@ -4149,8 +4149,8 @@ find_loop_nest (struct loop *loop, VEC (loop_p, heap) *loop_nest)\n void\n compute_data_dependences_for_loop (struct loop *loop, \n \t\t\t\t   bool compute_self_and_read_read_dependences,\n-\t\t\t\t   VEC (data_reference_p, heap) *datarefs,\n-\t\t\t\t   VEC (ddr_p, heap) *dependence_relations)\n+\t\t\t\t   VEC (data_reference_p, heap) **datarefs,\n+\t\t\t\t   VEC (ddr_p, heap) **dependence_relations)\n {\n   struct loop *loop_nest = loop;\n   VEC (loop_p, heap) *vloops = VEC_alloc (loop_p, heap, 3);\n@@ -4169,10 +4169,10 @@ compute_data_dependences_for_loop (struct loop *loop,\n       /* Insert a single relation into dependence_relations:\n \t chrec_dont_know.  */\n       ddr = initialize_data_dependence_relation (NULL, NULL, vloops);\n-      VEC_safe_push (ddr_p, heap, dependence_relations, ddr);\n+      VEC_safe_push (ddr_p, heap, *dependence_relations, ddr);\n     }\n   else\n-    compute_all_dependences (datarefs, dependence_relations, vloops,\n+    compute_all_dependences (*datarefs, *dependence_relations, vloops,\n \t\t\t     compute_self_and_read_read_dependences);\n \n   if (dump_file && (dump_flags & TDF_STATS))\n@@ -4258,7 +4258,7 @@ analyze_all_data_dependences (struct loops *loops)\n \n   /* Compute DDs on the whole function.  */\n   compute_data_dependences_for_loop (loops->parray[0], false,\n-\t\t\t\t     datarefs, dependence_relations);\n+\t\t\t\t     &datarefs, &dependence_relations);\n \n   if (dump_file)\n     {"}, {"sha": "8cf17ae8fb5f2201a99e4c5367f3178ca5f6c050", "filename": "gcc/tree-data-ref.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14b10df7a1935c2c403e5711bab1ba25dfc1cee/gcc%2Ftree-data-ref.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14b10df7a1935c2c403e5711bab1ba25dfc1cee/gcc%2Ftree-data-ref.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-data-ref.h?ref=e14b10df7a1935c2c403e5711bab1ba25dfc1cee", "patch": "@@ -270,10 +270,10 @@ DEF_VEC_ALLOC_P(ddr_p,heap);\n \f\n \n extern tree find_data_references_in_loop (struct loop *,\n-\t\t\t\t\t  VEC (data_reference_p, heap) *);\n+\t\t\t\t\t  VEC (data_reference_p, heap) **);\n extern void compute_data_dependences_for_loop (struct loop *, bool,\n-\t\t\t\t\t       VEC (data_reference_p, heap) *,\n-\t\t\t\t\t       VEC (ddr_p, heap) *);\n+\t\t\t\t\t       VEC (data_reference_p, heap) **,\n+\t\t\t\t\t       VEC (ddr_p, heap) **);\n extern void print_direction_vector (FILE *, lambda_vector, int);\n extern void print_dir_vectors (FILE *, VEC (lambda_vector, heap) *, int);\n extern void print_dist_vectors (FILE *, VEC (lambda_vector, heap) *, int);"}, {"sha": "bf353e59f5b4ba99e8f1ee1e35a2c59e4795ad8c", "filename": "gcc/tree-loop-linear.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14b10df7a1935c2c403e5711bab1ba25dfc1cee/gcc%2Ftree-loop-linear.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14b10df7a1935c2c403e5711bab1ba25dfc1cee/gcc%2Ftree-loop-linear.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-linear.c?ref=e14b10df7a1935c2c403e5711bab1ba25dfc1cee", "patch": "@@ -289,8 +289,8 @@ linear_transform_loops (struct loops *loops)\n  \n       datarefs = VEC_alloc (data_reference_p, heap, 10);\n       dependence_relations = VEC_alloc (ddr_p, heap, 10 * 10);\n-      compute_data_dependences_for_loop (loop_nest, true, datarefs,\n-\t\t\t\t\t dependence_relations);\n+      compute_data_dependences_for_loop (loop_nest, true, &datarefs,\n+\t\t\t\t\t &dependence_relations);\n \n       if (dump_file && (dump_flags & TDF_DETAILS))\n \tdump_ddrs (dump_file, dependence_relations);"}, {"sha": "b031ceb16408e19fb9e452104ced934f877a475f", "filename": "gcc/tree-vect-analyze.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e14b10df7a1935c2c403e5711bab1ba25dfc1cee/gcc%2Ftree-vect-analyze.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e14b10df7a1935c2c403e5711bab1ba25dfc1cee/gcc%2Ftree-vect-analyze.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-analyze.c?ref=e14b10df7a1935c2c403e5711bab1ba25dfc1cee", "patch": "@@ -1334,8 +1334,8 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo)\n     fprintf (vect_dump, \"=== vect_analyze_data_refs ===\");\n \n   compute_data_dependences_for_loop (loop, false,\n-                                     LOOP_VINFO_DATAREFS (loop_vinfo),\n-                                     LOOP_VINFO_DDRS (loop_vinfo));\n+                                     &LOOP_VINFO_DATAREFS (loop_vinfo),\n+                                     &LOOP_VINFO_DDRS (loop_vinfo));\n \n   /* Go through the data-refs, check that the analysis succeeded. Update pointer\n      from stmt_vec_info struct to DR and vectype.  */"}]}