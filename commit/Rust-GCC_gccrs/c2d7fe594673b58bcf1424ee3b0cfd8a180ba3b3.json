{"sha": "c2d7fe594673b58bcf1424ee3b0cfd8a180ba3b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJkN2ZlNTk0NjczYjU4YmNmMTQyNGVlM2IwY2ZkOGExODBiYTNiMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gnat.com", "date": "2001-10-10T21:48:38Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-10-10T21:48:38Z"}, "message": "decl.c: (gnat_to_gnu_entity...\n\n\t* decl.c: (gnat_to_gnu_entity, case object): Also materialize\n\tVAR_DECL for constant if not Is_Public but -O0.\n\nFrom-SVN: r46160", "tree": {"sha": "c7f7c2bcb76c9f454d8ad2d41ce302c26f0419d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7f7c2bcb76c9f454d8ad2d41ce302c26f0419d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2d7fe594673b58bcf1424ee3b0cfd8a180ba3b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2d7fe594673b58bcf1424ee3b0cfd8a180ba3b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2d7fe594673b58bcf1424ee3b0cfd8a180ba3b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2d7fe594673b58bcf1424ee3b0cfd8a180ba3b3/comments", "author": null, "committer": null, "parents": [{"sha": "fb75e1008f0b178cc11814e5c868fa3407b6f8cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb75e1008f0b178cc11814e5c868fa3407b6f8cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb75e1008f0b178cc11814e5c868fa3407b6f8cd"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "194dde5c00a4aa8fad21e52f778de633df8c6926", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2d7fe594673b58bcf1424ee3b0cfd8a180ba3b3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2d7fe594673b58bcf1424ee3b0cfd8a180ba3b3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c2d7fe594673b58bcf1424ee3b0cfd8a180ba3b3", "patch": "@@ -1,3 +1,8 @@\n+2001-10-10  Richard Kenner <kenner@gnat.com>\n+\n+\t* decl.c: (gnat_to_gnu_entity, case object): Also materialize \n+\tVAR_DECL for constant if not Is_Public but -O0.\n+\n 2001-10-10  Richard Kenner  <kenner@gnat.com>\n \n \t* misc.c (struct lang_hooks): Add new initializer to match GCC change."}, {"sha": "34a01cd275ffbece3216ea0d56be0f17dffc3a97", "filename": "gcc/ada/decl.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2d7fe594673b58bcf1424ee3b0cfd8a180ba3b3/gcc%2Fada%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2d7fe594673b58bcf1424ee3b0cfd8a180ba3b3/gcc%2Fada%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdecl.c?ref=c2d7fe594673b58bcf1424ee3b0cfd8a180ba3b3", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *                            $Revision: 1.3 $\n+ *                            $Revision$\n  *                                                                          *\n  *          Copyright (C) 1992-2001, Free Software Foundation, Inc.         *\n  *                                                                          *\n@@ -1033,11 +1033,13 @@ gnat_to_gnu_entity (gnat_entity, gnu_expr, definition)\n \t\t\t\t\t     STACK_CHECK_MAX_VAR_SIZE))))\n \t  update_setjmp_buf (TREE_VALUE (gnu_block_stack));\n \n-\t/* If this is a public constant and we're not making a VAR_DECL for\n-\t   it, make one just for export or debugger use.  Likewise if\n-\t   the address is taken or if the object or type is aliased.  */\n+\t/* If this is a public constant or we're not optimizing and we're not\n+\t   making a VAR_DECL for it, make one just for export or debugger\n+\t   use.  Likewise if the address is taken or if the object or type is\n+\t   aliased.  */\n \tif (definition && TREE_CODE (gnu_decl) == CONST_DECL\n \t    && (Is_Public (gnat_entity)\n+\t\t|| optimize == 0\n \t\t|| Address_Taken (gnat_entity)\n \t\t|| Is_Aliased (gnat_entity)\n \t\t|| Is_Aliased (Etype (gnat_entity))))"}]}