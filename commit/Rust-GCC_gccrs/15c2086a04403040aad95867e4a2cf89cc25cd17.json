{"sha": "15c2086a04403040aad95867e4a2cf89cc25cd17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVjMjA4NmEwNDQwMzA0MGFhZDk1ODY3ZTRhMmNmODljYzI1Y2QxNw==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "2000-11-30T08:15:41Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-11-30T08:15:41Z"}, "message": "pa.md (conditional moves): Avoid holes in operand list.\n\n        * pa.md (conditional moves): Avoid holes in operand list.\n        (mod, umod patterns): Similarly.\n        (variable extract/shift patterns): Similarly.\n\nFrom-SVN: r37867", "tree": {"sha": "6dd0079421366be8bb42e2e813e0849296f77f51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6dd0079421366be8bb42e2e813e0849296f77f51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15c2086a04403040aad95867e4a2cf89cc25cd17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15c2086a04403040aad95867e4a2cf89cc25cd17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15c2086a04403040aad95867e4a2cf89cc25cd17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15c2086a04403040aad95867e4a2cf89cc25cd17/comments", "author": null, "committer": null, "parents": [{"sha": "9105f6718c685ed7f972a94265afe181534c96ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9105f6718c685ed7f972a94265afe181534c96ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9105f6718c685ed7f972a94265afe181534c96ef"}], "stats": {"total": 40, "additions": 23, "deletions": 17}, "files": [{"sha": "654e0237d05eac39e406ab756d1d6c74edf79235", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15c2086a04403040aad95867e4a2cf89cc25cd17/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15c2086a04403040aad95867e4a2cf89cc25cd17/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=15c2086a04403040aad95867e4a2cf89cc25cd17", "patch": "@@ -1,3 +1,9 @@\n+Thu Nov 30 01:12:52 2000  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* pa.md (conditional moves): Avoid holes in operand list.\n+\t(mod, umod patterns): Similarly.\n+\t(variable extract/shift patterns): Similarly.\n+\n 2000-11-30  Neil Booth  <neilb@earthling.net>\n \n         * objc/objc-act.c (lang_init, finish_file, maybe_objc_comptypes,"}, {"sha": "3f6f7f74d62a013e511f129302ceed5ba0fb6d2a", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15c2086a04403040aad95867e4a2cf89cc25cd17/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15c2086a04403040aad95867e4a2cf89cc25cd17/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=15c2086a04403040aad95867e4a2cf89cc25cd17", "patch": "@@ -1098,17 +1098,17 @@\n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r,r,r\")\n \t(if_then_else:SI\n-\t (match_operator 5 \"comparison_operator\"\n+\t (match_operator 2 \"comparison_operator\"\n \t    [(match_operand:SI 3 \"register_operand\" \"r,r,r,r\")\n \t     (match_operand:SI 4 \"arith11_operand\" \"rI,rI,rI,rI\")])\n \t (match_operand:SI 1 \"reg_or_cint_move_operand\" \"0,J,N,K\")\n \t (const_int 0)))]\n   \"\"\n   \"@\n-   {com%I4clr|cmp%I4clr},%S5 %4,%3,%%r0\\;ldi 0,%0\n-   {com%I4clr|cmp%I4clr},%B5 %4,%3,%0\\;ldi %1,%0\n-   {com%I4clr|cmp%I4clr},%B5 %4,%3,%0\\;ldil L'%1,%0\n-   {com%I4clr|cmp%I4clr},%B5 %4,%3,%0\\;{zdepi|depwi,z} %Z1,%0\"\n+   {com%I4clr|cmp%I4clr},%S2 %4,%3,%%r0\\;ldi 0,%0\n+   {com%I4clr|cmp%I4clr},%B2 %4,%3,%0\\;ldi %1,%0\n+   {com%I4clr|cmp%I4clr},%B2 %4,%3,%0\\;ldil L'%1,%0\n+   {com%I4clr|cmp%I4clr},%B2 %4,%3,%0\\;{zdepi|depwi,z} %Z1,%0\"\n   [(set_attr \"type\" \"multi,multi,multi,nullshift\")\n    (set_attr \"length\" \"8,8,8,8\")])\n \n@@ -1165,18 +1165,18 @@\n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r,r,r,r\")\n \t(if_then_else:DI\n-\t (match_operator 5 \"comparison_operator\"\n+\t (match_operator 2 \"comparison_operator\"\n \t    [(match_operand:DI 3 \"register_operand\" \"r,r,r,r,r\")\n \t     (match_operand:DI 4 \"arith11_operand\" \"rI,rI,rI,rI,rI\")])\n \t (match_operand:DI 1 \"reg_or_cint_move_operand\" \"0,r,J,N,K\")\n \t (const_int 0)))]\n   \"TARGET_64BIT\"\n   \"@\n-   cmp%I4clr,*%S5 %4,%3,%%r0\\;ldi 0,%0\n-   cmp%I4clr,*%B5 %4,%3,%0\\;copy %1,%0\n-   cmp%I4clr,*%B5 %4,%3,%0\\;ldi %1,%0\n-   cmp%I4clr,*%B5 %4,%3,%0\\;ldil L'%1,%0\n-   cmp%I4clr,*%B5 %4,%3,%0\\;depdi,z %z1,%0\"\n+   cmp%I4clr,*%S2 %4,%3,%%r0\\;ldi 0,%0\n+   cmp%I4clr,*%B2 %4,%3,%0\\;copy %1,%0\n+   cmp%I4clr,*%B2 %4,%3,%0\\;ldi %1,%0\n+   cmp%I4clr,*%B2 %4,%3,%0\\;ldil L'%1,%0\n+   cmp%I4clr,*%B2 %4,%3,%0\\;depdi,z %z1,%0\"\n   [(set_attr \"type\" \"multi,multi,multi,multi,nullshift\")\n    (set_attr \"length\" \"8,8,8,8,8\")])\n \n@@ -4068,7 +4068,7 @@\n (define_insn \"\"\n   [(set (reg:SI 29) (mod:SI (reg:SI 26) (reg:SI 25)))\n    (clobber (match_operand:SI 0 \"register_operand\" \"=a\"))\n-   (clobber (match_operand:SI 2 \"register_operand\" \"=&r\"))\n+   (clobber (match_operand:SI 1 \"register_operand\" \"=&r\"))\n    (clobber (reg:SI 26))\n    (clobber (reg:SI 25))\n    (clobber (reg:SI 31))]\n@@ -4123,7 +4123,7 @@\n (define_insn \"\"\n   [(set (reg:SI 29) (umod:SI (reg:SI 26) (reg:SI 25)))\n    (clobber (match_operand:SI 0 \"register_operand\" \"=a\"))\n-   (clobber (match_operand:SI 2 \"register_operand\" \"=&r\"))\n+   (clobber (match_operand:SI 1 \"register_operand\" \"=&r\"))\n    (clobber (reg:SI 26))\n    (clobber (reg:SI 25))\n    (clobber (reg:SI 31))]\n@@ -6210,7 +6210,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(zero_extract:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t\t (const_int 1)\n-\t\t\t (match_operand:SI 3 \"register_operand\" \"q\")))]\n+\t\t\t (match_operand:SI 2 \"register_operand\" \"q\")))]\n   \"\"\n   \"{vextru %1,1,%0|extrw,u %1,%%sar,1,%0}\"\n   [(set_attr \"type\" \"shift\")\n@@ -6230,7 +6230,7 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(zero_extract:DI (match_operand:DI 1 \"register_operand\" \"r\")\n \t\t\t (const_int 1)\n-\t\t\t (match_operand:DI 3 \"register_operand\" \"q\")))]\n+\t\t\t (match_operand:DI 2 \"register_operand\" \"q\")))]\n   \"TARGET_64BIT\"\n   \"extrd,u %1,%%sar,1,%0\"\n   [(set_attr \"type\" \"shift\")\n@@ -6267,7 +6267,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(sign_extract:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t\t (const_int 1)\n-\t\t\t (match_operand:SI 3 \"register_operand\" \"q\")))]\n+\t\t\t (match_operand:SI 2 \"register_operand\" \"q\")))]\n   \"!TARGET_64BIT\"\n   \"{vextrs %1,1,%0|extrw,s %1,%%sar,1,%0}\"\n   [(set_attr \"type\" \"shift\")\n@@ -6287,7 +6287,7 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(sign_extract:DI (match_operand:DI 1 \"register_operand\" \"r\")\n \t\t\t (const_int 1)\n-\t\t\t (match_operand:DI 3 \"register_operand\" \"q\")))]\n+\t\t\t (match_operand:DI 2 \"register_operand\" \"q\")))]\n   \"TARGET_64BIT\"\n   \"extrd,s %1,%%sar,1,%0\"\n   [(set_attr \"type\" \"shift\")"}]}