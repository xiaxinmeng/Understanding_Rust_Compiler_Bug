{"sha": "2d926395014049357f052b3f708517c9ae66bb50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ5MjYzOTUwMTQwNDkzNTdmMDUyYjNmNzA4NTE3YzlhZTY2YmI1MA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-03-15T00:46:47Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-03-15T00:46:47Z"}, "message": "cp-tree.h: Tweak documentation.\n\n\t* cp-tree.h: Tweak documentation.\n\t* class.c (build_vbase_pointer_fields): Layout the fields, too.\n\t(avoid_overlap): Remove.\n\t(get_binfo_offset_as_int): New function.\n\t(dfs_serach_base_offsets): Likewise.\n\t(layout_nonempty_base_or_field): Likewise.\n\t(build_base_field): Layout fields here.  Avoid placing two objects\n\tof the same type at the same address, under the new ABI.\n\t(build_base_fields): Adjust accordingly.\n\t(create_vtable_ptr): Return the new field, but don't attach it to\n\tTYPE_FIELDS.\n\t(remove_base_field): Remove.\n\t(remove_base_fields): Remove.\n\t(layout_basetypes): Adjust accordingly.\n\t(layout_class_type): Call layout_field for each field, rather than\n\tjust making a wholesale call to layout_type.\n\nFrom-SVN: r32550", "tree": {"sha": "639313ef4f3848c75a406d03af007a220603e045", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/639313ef4f3848c75a406d03af007a220603e045"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d926395014049357f052b3f708517c9ae66bb50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d926395014049357f052b3f708517c9ae66bb50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d926395014049357f052b3f708517c9ae66bb50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d926395014049357f052b3f708517c9ae66bb50/comments", "author": null, "committer": null, "parents": [{"sha": "5c24fba69a24164f2d99c8a540aca311427dd5b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c24fba69a24164f2d99c8a540aca311427dd5b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c24fba69a24164f2d99c8a540aca311427dd5b8"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "5772d3880838eaac0cb7c3270bc5c27d5bb8cc0d", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d926395014049357f052b3f708517c9ae66bb50/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d926395014049357f052b3f708517c9ae66bb50/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=2d926395014049357f052b3f708517c9ae66bb50", "patch": "@@ -1578,8 +1578,8 @@ struct lang_type\n    which uses this must define what exactly this slot is used for.  */\n #define CLASSTYPE_SEARCH_SLOT(NODE) (TYPE_LANG_SPECIFIC(NODE)->search_slot)\n \n-/* These are the size, mode and alignment of the type without its\n-   virtual base classes, for when we use this type as a base itself.  */\n+/* These are the size and alignment of the type without its virtual\n+   base classes, for when we use this type as a base itself.  */\n #define CLASSTYPE_SIZE(NODE) (TYPE_LANG_SPECIFIC(NODE)->size)\n #define CLASSTYPE_SIZE_UNIT(NODE) (TYPE_LANG_SPECIFIC(NODE)->size_unit)\n #define CLASSTYPE_ALIGN(NODE) (TYPE_LANG_SPECIFIC(NODE)->align)"}]}