{"sha": "92812757648109dc6cd35a52374ab3f6e9f44f78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI4MTI3NTc2NDgxMDlkYzZjZDM1YTUyMzc0YWIzZjZlOWY0NGY3OA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-06-11T12:40:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-06-11T12:40:08Z"}, "message": "gdbhooks.py (TreePrinter.to_string): Recognize ggc_free'd memory.\n\n\t* gdbhooks.py (TreePrinter.to_string): Recognize ggc_free'd memory.\n\n\t* tree.c (get_tree_code_name): Likewise.\n\t* print-tree.c (print_node): Only briefly print a node with an\n\tinvalid code.\n\nFrom-SVN: r272150", "tree": {"sha": "b10ff4fbd325eb277a8c2342eb2f325d56b91b60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b10ff4fbd325eb277a8c2342eb2f325d56b91b60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92812757648109dc6cd35a52374ab3f6e9f44f78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92812757648109dc6cd35a52374ab3f6e9f44f78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92812757648109dc6cd35a52374ab3f6e9f44f78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92812757648109dc6cd35a52374ab3f6e9f44f78/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de6abd8514fa7a2bed078935fd950f8cb8dee45c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de6abd8514fa7a2bed078935fd950f8cb8dee45c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de6abd8514fa7a2bed078935fd950f8cb8dee45c"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "f115982cf1d7f0c30a2a69fa0a878cf17e43c7a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92812757648109dc6cd35a52374ab3f6e9f44f78/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92812757648109dc6cd35a52374ab3f6e9f44f78/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=92812757648109dc6cd35a52374ab3f6e9f44f78", "patch": "@@ -1,3 +1,10 @@\n+2019-06-11  Jason Merrill  <jason@redhat.com>\n+\n+\t* gdbhooks.py (TreePrinter.to_string): Recognize ggc_free'd memory.\n+\t* tree.c (get_tree_code_name): Likewise.\n+\t* print-tree.c (print_node): Only briefly print a node with an\n+\tinvalid code.\n+\n 2019-06-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/90819"}, {"sha": "e08208e1533667cf55f131d80d1e854d0cf3f292", "filename": "gcc/gdbhooks.py", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92812757648109dc6cd35a52374ab3f6e9f44f78/gcc%2Fgdbhooks.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92812757648109dc6cd35a52374ab3f6e9f44f78/gcc%2Fgdbhooks.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgdbhooks.py?ref=92812757648109dc6cd35a52374ab3f6e9f44f78", "patch": "@@ -222,6 +222,9 @@ def to_string (self):\n         # extern const enum tree_code_class tree_code_type[];\n         # #define TREE_CODE_CLASS(CODE)\ttree_code_type[(int) (CODE)]\n \n+        if val_TREE_CODE == 0xa5a5:\n+            return '<ggc_freed 0x%x>' % intptr(self.gdbval)\n+\n         val_tree_code_type = gdb.parse_and_eval('tree_code_type')\n         val_tclass = val_tree_code_type[val_TREE_CODE]\n "}, {"sha": "f69a2c2667998c3649cb3b38af482611b63d4197", "filename": "gcc/print-tree.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92812757648109dc6cd35a52374ab3f6e9f44f78/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92812757648109dc6cd35a52374ab3f6e9f44f78/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=92812757648109dc6cd35a52374ab3f6e9f44f78", "patch": "@@ -233,6 +233,15 @@ print_node (FILE *file, const char *prefix, tree node, int indent,\n     return;\n \n   code = TREE_CODE (node);\n+\n+  /* It is unsafe to look at any other fields of a node with ERROR_MARK or\n+     invalid code.  */\n+  if (code == ERROR_MARK || code >= MAX_TREE_CODES)\n+    {\n+      print_node_brief (file, prefix, node, indent);\n+      return;\n+    }\n+\n   tclass = TREE_CODE_CLASS (code);\n \n   /* Don't get too deep in nesting.  If the user wants to see deeper,\n@@ -251,13 +260,6 @@ print_node (FILE *file, const char *prefix, tree node, int indent,\n       return;\n     }\n \n-  /* It is unsafe to look at any other fields of an ERROR_MARK node.  */\n-  if (code == ERROR_MARK)\n-    {\n-      print_node_brief (file, prefix, node, indent);\n-      return;\n-    }\n-\n   /* Allow this function to be called if the table is not there.  */\n   if (table)\n     {"}, {"sha": "e879f15a841d26de994c6c94402eaf40963b0d8e", "filename": "gcc/tree.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92812757648109dc6cd35a52374ab3f6e9f44f78/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92812757648109dc6cd35a52374ab3f6e9f44f78/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=92812757648109dc6cd35a52374ab3f6e9f44f78", "patch": "@@ -13450,7 +13450,11 @@ get_tree_code_name (enum tree_code code)\n   const char *invalid = \"<invalid tree code>\";\n \n   if (code >= MAX_TREE_CODES)\n-    return invalid;\n+    {\n+      if (code == 0xa5a5)\n+\treturn \"ggc_freed\";\n+      return invalid;\n+    }\n \n   return tree_code_name[code];\n }"}]}