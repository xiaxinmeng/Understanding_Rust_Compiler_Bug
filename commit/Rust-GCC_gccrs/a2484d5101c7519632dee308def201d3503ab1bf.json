{"sha": "a2484d5101c7519632dee308def201d3503ab1bf", "node_id": "C_kwDOANBUbNoAKGEyNDg0ZDUxMDFjNzUxOTYzMmRlZTMwOGRlZjIwMWQzNTAzYWIxYmY", "commit": {"author": {"name": "CohenArthur", "email": "arthur.cohen@epita.fr", "date": "2021-10-17T09:35:27Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@epita.fr", "date": "2021-10-17T10:00:12Z"}, "message": "v0-mangling: Add base for base62 encoding", "tree": {"sha": "433980f5acb9e7b46e629db18c8e4352332bb46a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/433980f5acb9e7b46e629db18c8e4352332bb46a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2484d5101c7519632dee308def201d3503ab1bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2484d5101c7519632dee308def201d3503ab1bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2484d5101c7519632dee308def201d3503ab1bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2484d5101c7519632dee308def201d3503ab1bf/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5e389241dd7b6e4ce32c61f3ea11c3dbc2cb3e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5e389241dd7b6e4ce32c61f3ea11c3dbc2cb3e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5e389241dd7b6e4ce32c61f3ea11c3dbc2cb3e4"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "258e3b0df25ff577d05809a76dbef8c282b9ce50", "filename": "gcc/rust/backend/rust-mangle.cc", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2484d5101c7519632dee308def201d3503ab1bf/gcc%2Frust%2Fbackend%2Frust-mangle.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2484d5101c7519632dee308def201d3503ab1bf/gcc%2Frust%2Fbackend%2Frust-mangle.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-mangle.cc?ref=a2484d5101c7519632dee308def201d3503ab1bf", "patch": "@@ -1,5 +1,6 @@\n #include \"rust-mangle.h\"\n #include \"fnv-hash.h\"\n+#include <algorithm>\n \n // FIXME: Rename those to legacy_*\n static const std::string kMangledSymbolPrefix = \"_ZN\";\n@@ -154,6 +155,44 @@ v0_simple_type_prefix (const TyTy::BaseType *ty)\n   gcc_unreachable ();\n }\n \n+// FIXME: Is this present somewhere in libbiberty already?\n+static std::string\n+v0_base62_integer(uint64_t x)\n+{\n+  const static std::string base_64\n+    = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@$\";\n+  std::string buffer(128, '\\0');\n+  size_t idx = 0;\n+  size_t base = 62;\n+\n+  do\n+    {\n+      buffer[idx] = base_64[(x % base)];\n+      idx++;\n+      x /= base;\n+  } while (x != 0);\n+\n+  std::reverse(buffer.begin(), buffer.begin() + idx);\n+  return buffer.substr(0, idx);\n+}\n+\n+static std::string\n+v0_add_integer_62 (std::string mangled, std::string tag, uint64_t x)\n+{\n+    // /// Push a `_`-terminated base 62 integer, using the format\n+    // /// specified in the RFC as `<base-62-number>`, that is:\n+    // /// * `x = 0` is encoded as just the `\"_\"` terminator\n+    // /// * `x > 0` is encoded as `x - 1` in base 62, followed by `\"_\"`,\n+    // ///   e.g. `1` becomes `\"0_\"`, `62` becomes `\"Z_\"`, etc.\n+    // fn push_integer_62(&mut self, x: u64) {\n+    //     if let Some(x) = x.checked_sub(1) {\n+    //         base_n::push_str(x as u128, 62, &mut self.out);\n+    //     }\n+    //     self.push(\"_\");\n+    // }\n+}\n+\n+\n static std::string\n v0_type_prefix (const TyTy::BaseType *ty)\n {\n@@ -194,7 +233,11 @@ static std::string\n v0_mangle_item (const TyTy::BaseType *ty, const Resolver::CanonicalPath &path,\n \t\tconst std::string &crate_name)\n {\n+  auto def_id = ty->get_ref();\n   auto ty_prefix = v0_type_prefix (ty);\n+  auto prefix = \"_R\";\n+\n+\n   gcc_unreachable ();\n }\n "}]}