{"sha": "5b9a3332c27e2f4ea372f2fc53bcbd27e204fb73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI5YTMzMzJjMjdlMmY0ZWEzNzJmMmZjNTNiY2JkMjdlMjA0ZmI3Mw==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-06-03T11:14:51Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-06-03T11:14:51Z"}, "message": "re PR fortran/36497 (USE association, cray pointers and error checking)\n\n2018-06-03  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/36497\n\t* decl.c (variable_decl): Use gfc_add_type for cray pointees.\n\n2018-06-03  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/36497\n\t* gfortran.dg/cray_pointer_12.f90: New test.\n\nFrom-SVN: r261127", "tree": {"sha": "d015315146730a48895c8f167a12153e06f89093", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d015315146730a48895c8f167a12153e06f89093"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b9a3332c27e2f4ea372f2fc53bcbd27e204fb73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b9a3332c27e2f4ea372f2fc53bcbd27e204fb73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b9a3332c27e2f4ea372f2fc53bcbd27e204fb73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b9a3332c27e2f4ea372f2fc53bcbd27e204fb73/comments", "author": null, "committer": null, "parents": [{"sha": "12193bf1b0143795b460c96ebd609321f9663398", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12193bf1b0143795b460c96ebd609321f9663398", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12193bf1b0143795b460c96ebd609321f9663398"}], "stats": {"total": 50, "additions": 41, "deletions": 9}, "files": [{"sha": "ef7e941fd660686437205e25e51c3ace78c38a58", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9a3332c27e2f4ea372f2fc53bcbd27e204fb73/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9a3332c27e2f4ea372f2fc53bcbd27e204fb73/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5b9a3332c27e2f4ea372f2fc53bcbd27e204fb73", "patch": "@@ -1,10 +1,15 @@\n+2018-06-03  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/36497\n+\t* decl.c (variable_decl): Use gfc_add_type for cray pointees.\n+\n 2018-06-01  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/63570\n \t* check.c (gfc_check_random_init): New function. Check arguments of\n \tRANDOM_INIT.\n \t* gfortran.h (GFC_ISYM_RANDOM_INIT): New enum token.\n-\t* intrinsic.c (add_subroutines): Add RANDOM_INIT to list of \n+\t* intrinsic.c (add_subroutines): Add RANDOM_INIT to list of\n \tsubroutines.\n \t(gfc_check_intrinsic_standard): Introduce Fortran 2018 check.\n \t* intrinsic.h: Add prototypes for gfc_check_random_init and"}, {"sha": "df21ce0943b86f3f024a2b1160a90f5e399bf499", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9a3332c27e2f4ea372f2fc53bcbd27e204fb73/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9a3332c27e2f4ea372f2fc53bcbd27e204fb73/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=5b9a3332c27e2f4ea372f2fc53bcbd27e204fb73", "patch": "@@ -2431,7 +2431,7 @@ variable_decl (int elem)\n \t    }\n \n \t  if (not_constant)\n-\t    { \n+\t    {\n \t      gfc_error (\"Explicit shaped array with nonconstant bounds at %C\");\n \t      m = MATCH_ERROR;\n \t      goto cleanup;\n@@ -2535,13 +2535,12 @@ variable_decl (int elem)\n       gfc_find_symbol (name, gfc_current_ns, 1, &sym);\n       if (sym != NULL && sym->attr.cray_pointee)\n \t{\n-\t  sym->ts.type = current_ts.type;\n-\t  sym->ts.kind = current_ts.kind;\n-\t  sym->ts.u.cl = cl;\n-\t  sym->ts.u.derived = current_ts.u.derived;\n-\t  sym->ts.is_c_interop = current_ts.is_c_interop;\n-\t  sym->ts.is_iso_c = current_ts.is_iso_c;\n \t  m = MATCH_YES;\n+\t  if (!gfc_add_type (sym, &current_ts, &gfc_current_locus))\n+\t    {\n+\t      m = MATCH_ERROR;\n+\t      goto cleanup;\n+\t    }\n \n \t  /* Check to see if we have an array specification.  */\n \t  if (cp_as != NULL)"}, {"sha": "084c231960e984036f644a33d8aa8951af1763e2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9a3332c27e2f4ea372f2fc53bcbd27e204fb73/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9a3332c27e2f4ea372f2fc53bcbd27e204fb73/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5b9a3332c27e2f4ea372f2fc53bcbd27e204fb73", "patch": "@@ -1,3 +1,8 @@\n+2018-06-03  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/36497\n+\t* gfortran.dg/cray_pointer_12.f90: New test.\n+\n 2018-06-02  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/85938\n@@ -77,7 +82,7 @@\n \t* gfortran.dg/pr85975.f90: New test.\n \n 2018-06-01  Steven G. Kargl  <kargl@gcc.gnu.org>\n- \n+\n \tPR fortran/63570\n \t* gfortran.dg/random_init_1.f90: New test.\n \t* gfortran.dg/random_init_2.f90: New test."}, {"sha": "f9d25a91d99cef0710cd3ec83f0c8674869d6244", "filename": "gcc/testsuite/gfortran.dg/cray_pointers_12.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b9a3332c27e2f4ea372f2fc53bcbd27e204fb73/gcc%2Ftestsuite%2Fgfortran.dg%2Fcray_pointers_12.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b9a3332c27e2f4ea372f2fc53bcbd27e204fb73/gcc%2Ftestsuite%2Fgfortran.dg%2Fcray_pointers_12.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcray_pointers_12.f90?ref=5b9a3332c27e2f4ea372f2fc53bcbd27e204fb73", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do compile }\n+! { dg-options \"-fcray-pointer\" }\n+!\n+! Test the fix for PR36497 in which there was no error for the second\n+! declaration of 'x'.\n+!\n+! Contributed by Tobias Burnus  <burnus@gcc.gnu.org>\n+!\n+module test\n+ integer(8) ipt\n+ integer z(2), x\n+ pointer (ipt, x)\n+end module\n+\n+program bar\n+ use test   ! { dg-error \"conflicts with symbol\" }\n+ integer x  ! { dg-error \"conflicts with symbol\" }\n+ ipt = loc(z(1))\n+ x = 1\n+ ipt = loc(z(2))\n+ x = 3\n+ if (any (z .ne. [1,3])) stop 1\n+end"}]}