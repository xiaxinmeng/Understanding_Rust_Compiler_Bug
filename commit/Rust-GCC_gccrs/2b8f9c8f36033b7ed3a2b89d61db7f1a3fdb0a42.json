{"sha": "2b8f9c8f36033b7ed3a2b89d61db7f1a3fdb0a42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI4ZjljOGYzNjAzM2I3ZWQzYTJiODlkNjFkYjdmMWEzZmRiMGE0Mg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-02-25T21:46:29Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-02-25T21:46:29Z"}, "message": "re PR c++/65209 (Broken code with global static variables, invalid pointer when freeing global variables)\n\n\tPR c++/65209\n\t* decl2.c (constrain_visibility) [VISIBILITY_ANON]: Clear\n\tDECL_COMDAT.\n\t(constrain_visibility_for_template): Handle reference arguments.\n\nFrom-SVN: r220991", "tree": {"sha": "592147f21b784a100deceaa9bf9f077ed9b31910", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/592147f21b784a100deceaa9bf9f077ed9b31910"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b8f9c8f36033b7ed3a2b89d61db7f1a3fdb0a42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b8f9c8f36033b7ed3a2b89d61db7f1a3fdb0a42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b8f9c8f36033b7ed3a2b89d61db7f1a3fdb0a42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b8f9c8f36033b7ed3a2b89d61db7f1a3fdb0a42/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "76fabbf42df41d1275c71a4ff159b8b53147c6f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76fabbf42df41d1275c71a4ff159b8b53147c6f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76fabbf42df41d1275c71a4ff159b8b53147c6f4"}], "stats": {"total": 54, "additions": 52, "deletions": 2}, "files": [{"sha": "ebe84c6dc693decf4b2b28796d078a5afbc35a58", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8f9c8f36033b7ed3a2b89d61db7f1a3fdb0a42/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8f9c8f36033b7ed3a2b89d61db7f1a3fdb0a42/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2b8f9c8f36033b7ed3a2b89d61db7f1a3fdb0a42", "patch": "@@ -1,5 +1,10 @@\n 2015-02-25  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/65209\n+\t* decl2.c (constrain_visibility) [VISIBILITY_ANON]: Clear\n+\tDECL_COMDAT.\n+\t(constrain_visibility_for_template): Handle reference arguments.\n+\n \tPR debug/58315\n \t* decl.c (start_preparsed_function): Use create_artificial_label\n \tfor cdtor_label."}, {"sha": "a4a5ebf58ea12426580ee37970e7b0f605bb0dfc", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8f9c8f36033b7ed3a2b89d61db7f1a3fdb0a42/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8f9c8f36033b7ed3a2b89d61db7f1a3fdb0a42/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=2b8f9c8f36033b7ed3a2b89d61db7f1a3fdb0a42", "patch": "@@ -2175,6 +2175,7 @@ constrain_visibility (tree decl, int visibility, bool tmpl)\n \t  TREE_PUBLIC (decl) = 0;\n \t  DECL_WEAK (decl) = 0;\n \t  DECL_COMMON (decl) = 0;\n+\t  DECL_COMDAT (decl) = false;\n \t  if (TREE_CODE (decl) == FUNCTION_DECL\n \t      || TREE_CODE (decl) == VAR_DECL)\n \t    {\n@@ -2215,9 +2216,12 @@ constrain_visibility_for_template (tree decl, tree targs)\n       tree arg = TREE_VEC_ELT (args, i-1);\n       if (TYPE_P (arg))\n \tvis = type_visibility (arg);\n-      else if (TREE_TYPE (arg) && POINTER_TYPE_P (TREE_TYPE (arg)))\n+      else\n \t{\n-\t  STRIP_NOPS (arg);\n+\t  if (REFERENCE_REF_P (arg))\n+\t    arg = TREE_OPERAND (arg, 0);\n+\t  if (TREE_TYPE (arg))\n+\t    STRIP_NOPS (arg);\n \t  if (TREE_CODE (arg) == ADDR_EXPR)\n \t    arg = TREE_OPERAND (arg, 0);\n \t  if (VAR_OR_FUNCTION_DECL_P (arg))"}, {"sha": "088ba99401936c62b401ff6c91dc1607c3e0a5c8", "filename": "gcc/testsuite/g++.dg/abi/anon4.C", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b8f9c8f36033b7ed3a2b89d61db7f1a3fdb0a42/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fanon4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b8f9c8f36033b7ed3a2b89d61db7f1a3fdb0a42/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fanon4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fanon4.C?ref=2b8f9c8f36033b7ed3a2b89d61db7f1a3fdb0a42", "patch": "@@ -0,0 +1,41 @@\n+// PR c++/65209\n+// { dg-final { scan-assembler-not \"comdat\" } }\n+\n+// Everything involving the anonymous namespace bits should be private, not\n+// COMDAT.\n+\n+struct Bar\n+{\n+  static Bar *self();\n+  char pad[24];\n+};\n+\n+template <Bar *(&holderFunction)()>\n+struct BarGlobalStatic\n+{\n+  Bar *operator()() { return holderFunction(); }\n+};\n+\n+namespace {\n+  namespace Q_QGS_s_self {\n+    inline Bar *innerFunction() {\n+      static struct Holder {\n+\tBar value;\n+\t~Holder() {}\n+      } holder;\n+      return &holder.value;\n+    }\n+  }\n+}\n+static BarGlobalStatic<Q_QGS_s_self::innerFunction> s_self;\n+\n+Bar *Bar::self()\n+{\n+  return s_self();\n+}\n+\n+int main(int argc, char *argv[])\n+{\n+  Bar* bar = Bar::self();\n+  return 0;\n+}"}]}