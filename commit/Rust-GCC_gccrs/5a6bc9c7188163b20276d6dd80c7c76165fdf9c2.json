{"sha": "5a6bc9c7188163b20276d6dd80c7c76165fdf9c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE2YmM5YzcxODgxNjNiMjAyNzZkNmRkODBjN2M3NjE2NWZkZjljMg==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2014-11-06T14:18:52Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2014-11-06T14:18:52Z"}, "message": "[Patchv3] Control SRA and IPA-SRA by a param rather than MOVE_RATIO\n\ngcc/\n\n\t* params.def (sra-max-scalarization-size-Ospeed): New.\n\t(sra-max-scalarization-size-Osize): Likewise.\n\t* doc/invoke.texi (sra-max-scalarization-size-Ospeed): Document.\n\t(sra-max-scalarization-size-Osize): Likewise.\n\t* toplev.c (process_options): Set default values for new\n\tparameters.\n\t* tree-sra.c (analyze_all_variable_accesses): Use new parameters.\n\t* targhooks.c (get_move_ratio): Remove static designator.\n\t* target.h (get_move_ratio): Declare.\n\nFrom-SVN: r217191", "tree": {"sha": "162af30bab815fda1ca85c7ea7dcbb61d48d87e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/162af30bab815fda1ca85c7ea7dcbb61d48d87e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a6bc9c7188163b20276d6dd80c7c76165fdf9c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a6bc9c7188163b20276d6dd80c7c76165fdf9c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a6bc9c7188163b20276d6dd80c7c76165fdf9c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a6bc9c7188163b20276d6dd80c7c76165fdf9c2/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "34896cd612476e1ee0937ff5bd32f597da944866", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34896cd612476e1ee0937ff5bd32f597da944866", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34896cd612476e1ee0937ff5bd32f597da944866"}], "stats": {"total": 66, "additions": 60, "deletions": 6}, "files": [{"sha": "dafb268c1f6bf5e47d4c4ae862e5ea31c7a47baa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a6bc9c7188163b20276d6dd80c7c76165fdf9c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a6bc9c7188163b20276d6dd80c7c76165fdf9c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a6bc9c7188163b20276d6dd80c7c76165fdf9c2", "patch": "@@ -1,3 +1,15 @@\n+2014-11-06  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* params.def (sra-max-scalarization-size-Ospeed): New.\n+\t(sra-max-scalarization-size-Osize): Likewise.\n+\t* doc/invoke.texi (sra-max-scalarization-size-Ospeed): Document.\n+\t(sra-max-scalarization-size-Osize): Likewise.\n+\t* toplev.c (process_options): Set default values for new\n+\tparameters.\n+\t* tree-sra.c (analyze_all_variable_accesses): Use new parameters.\n+\t* targhooks.c (get_move_ratio): Remove static designator.\n+\t* target.h (get_move_ratio): Declare.\n+\n 2014-11-06  Marek Polacek  <polacek@redhat.com>\n \n \t* sanopt.c (sanopt_optimize_walker): Limit removal of the checks."}, {"sha": "2f89284560c14eeb64b058e98e51903bbaccc8a5", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a6bc9c7188163b20276d6dd80c7c76165fdf9c2/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a6bc9c7188163b20276d6dd80c7c76165fdf9c2/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=5a6bc9c7188163b20276d6dd80c7c76165fdf9c2", "patch": "@@ -10401,6 +10401,16 @@ parameters only when their cumulative size is less or equal to\n @option{ipa-sra-ptr-growth-factor} times the size of the original\n pointer parameter.\n \n+@item sra-max-scalarization-size-Ospeed\n+@item sra-max-scalarization-size-Osize\n+The two Scalar Reduction of Aggregates passes (SRA and IPA-SRA) aim to\n+replace scalar parts of aggregates with uses of independent scalar\n+variables.  These parameters control the maximum size, in storage units,\n+of aggregate which will be considered for replacement when compiling for\n+speed\n+(@option{sra-max-scalarization-size-Ospeed}) or size\n+(@option{sra-max-scalarization-size-Osize}) respectively.\n+\n @item tm-max-aggregate-size\n When making copies of thread-local variables in a transaction, this\n parameter specifies the size in bytes after which variables are"}, {"sha": "d2d2add4e24885a522f6f16fd6dee2c206555e50", "filename": "gcc/params.def", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a6bc9c7188163b20276d6dd80c7c76165fdf9c2/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a6bc9c7188163b20276d6dd80c7c76165fdf9c2/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=5a6bc9c7188163b20276d6dd80c7c76165fdf9c2", "patch": "@@ -950,6 +950,18 @@ DEFPARAM (PARAM_TM_MAX_AGGREGATE_SIZE,\n \t  \"pairs\",\n \t  9, 0, 0)\n \n+DEFPARAM (PARAM_SRA_MAX_SCALARIZATION_SIZE_SPEED,\n+\t  \"sra-max-scalarization-size-Ospeed\",\n+\t  \"Maximum size, in storage units, of an aggregate which should be \"\n+\t  \"considered for scalarization when compiling for speed\",\n+\t  0, 0, 0)\n+\n+DEFPARAM (PARAM_SRA_MAX_SCALARIZATION_SIZE_SIZE,\n+\t  \"sra-max-scalarization-size-Osize\",\n+\t  \"Maximum size, in storage units, of an aggregate which should be \"\n+\t  \"considered for scalarization when compiling for size\",\n+\t  0, 0, 0)\n+\n DEFPARAM (PARAM_IPA_CP_VALUE_LIST_SIZE,\n \t  \"ipa-cp-value-list-size\",\n \t  \"Maximum size of a list of values associated with each parameter for \""}, {"sha": "65250edec55f5636193c2449fd63705397dadfed", "filename": "gcc/target.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a6bc9c7188163b20276d6dd80c7c76165fdf9c2/gcc%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a6bc9c7188163b20276d6dd80c7c76165fdf9c2/gcc%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.h?ref=5a6bc9c7188163b20276d6dd80c7c76165fdf9c2", "patch": "@@ -102,6 +102,10 @@ extern int elf_record_gcc_switches (print_switch_type type, const char *);\n    we disable such optimizations on such targets, using this function.  */\n extern bool target_default_pointer_address_modes_p (void);\n \n+/* For hooks which use the MOVE_RATIO macro, this gives the legacy default\n+   behaviour.  */\n+extern unsigned int get_move_ratio (bool);\n+\n struct stdarg_info;\n struct spec_info_def;\n struct hard_reg_set_container;"}, {"sha": "7b1b5dcfee4834c3be3e4130baca664defac6612", "filename": "gcc/targhooks.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a6bc9c7188163b20276d6dd80c7c76165fdf9c2/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a6bc9c7188163b20276d6dd80c7c76165fdf9c2/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=5a6bc9c7188163b20276d6dd80c7c76165fdf9c2", "patch": "@@ -1409,7 +1409,7 @@ default_register_move_cost (machine_mode mode ATTRIBUTE_UNUSED,\n /* For hooks which use the MOVE_RATIO macro, this gives the legacy default\n    behaviour.  SPEED_P is true if we are compiling for speed.  */\n \n-static unsigned int\n+unsigned int\n get_move_ratio (bool speed_p ATTRIBUTE_UNUSED)\n {\n   unsigned int move_ratio;"}, {"sha": "ef2a813abebf1c36658792fcbbcac741c2e9c375", "filename": "gcc/toplev.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a6bc9c7188163b20276d6dd80c7c76165fdf9c2/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a6bc9c7188163b20276d6dd80c7c76165fdf9c2/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=5a6bc9c7188163b20276d6dd80c7c76165fdf9c2", "patch": "@@ -1270,6 +1270,20 @@ process_options (void)\n      so we can correctly initialize debug output.  */\n   no_backend = lang_hooks.post_options (&main_input_filename);\n \n+  /* Set default values for parameters relation to the Scalar Reduction\n+     of Aggregates passes (SRA and IP-SRA).  We must do this here, rather\n+     than in opts.c:default_options_optimization as historically these\n+     tuning heuristics have been based on MOVE_RATIO, which on some\n+     targets requires other symbols from the backend.  */\n+  maybe_set_param_value\n+    (PARAM_SRA_MAX_SCALARIZATION_SIZE_SPEED,\n+     get_move_ratio (true) * UNITS_PER_WORD,\n+     global_options.x_param_values, global_options_set.x_param_values);\n+  maybe_set_param_value\n+    (PARAM_SRA_MAX_SCALARIZATION_SIZE_SIZE,\n+     get_move_ratio (false) * UNITS_PER_WORD,\n+     global_options.x_param_values, global_options_set.x_param_values);\n+\n   /* Some machines may reject certain combinations of options.  */\n   targetm.target_option.override ();\n "}, {"sha": "1e629bca040be03cf0db09291b5853ae67f96388", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a6bc9c7188163b20276d6dd80c7c76165fdf9c2/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a6bc9c7188163b20276d6dd80c7c76165fdf9c2/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=5a6bc9c7188163b20276d6dd80c7c76165fdf9c2", "patch": "@@ -2511,10 +2511,12 @@ analyze_all_variable_accesses (void)\n   int res = 0;\n   bitmap tmp = BITMAP_ALLOC (NULL);\n   bitmap_iterator bi;\n-  unsigned i, max_total_scalarization_size;\n-\n-  max_total_scalarization_size = UNITS_PER_WORD * BITS_PER_UNIT\n-    * MOVE_RATIO (optimize_function_for_speed_p (cfun));\n+  unsigned i;\n+  unsigned max_scalarization_size\n+    = (optimize_function_for_size_p (cfun)\n+\t? PARAM_VALUE (PARAM_SRA_MAX_SCALARIZATION_SIZE_SIZE)\n+\t: PARAM_VALUE (PARAM_SRA_MAX_SCALARIZATION_SIZE_SPEED))\n+      * BITS_PER_UNIT;\n \n   EXECUTE_IF_SET_IN_BITMAP (candidate_bitmap, 0, i, bi)\n     if (bitmap_bit_p (should_scalarize_away_bitmap, i)\n@@ -2526,7 +2528,7 @@ analyze_all_variable_accesses (void)\n \t    && type_consists_of_records_p (TREE_TYPE (var)))\n \t  {\n \t    if (tree_to_uhwi (TYPE_SIZE (TREE_TYPE (var)))\n-\t\t<= max_total_scalarization_size)\n+\t\t<= max_scalarization_size)\n \t      {\n \t\tcompletely_scalarize_var (var);\n \t\tif (dump_file && (dump_flags & TDF_DETAILS))"}]}