{"sha": "ddd5c5b7c66a934bb54e4acdddad08a4191d6043", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRkNWM1YjdjNjZhOTM0YmI1NGU0YWNkZGRhZDA4YTQxOTFkNjA0Mw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-03-26T14:37:50Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-03-26T14:37:50Z"}, "message": "PR c++/85049 - ICE with __integer_pack.\n\n\t* pt.c (unify_pack_expansion): Don't try to deduce generated packs.\n\t* cp-tree.h (TEMPLATE_PARM_P): New.\n\nFrom-SVN: r258856", "tree": {"sha": "e209efd2bc036ca3d19879028032881a63295c3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e209efd2bc036ca3d19879028032881a63295c3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddd5c5b7c66a934bb54e4acdddad08a4191d6043", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd5c5b7c66a934bb54e4acdddad08a4191d6043", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddd5c5b7c66a934bb54e4acdddad08a4191d6043", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd5c5b7c66a934bb54e4acdddad08a4191d6043/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aafaa3254ec6fc3d5e3a15a40185950d3af04432", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aafaa3254ec6fc3d5e3a15a40185950d3af04432", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aafaa3254ec6fc3d5e3a15a40185950d3af04432"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "011b24e90687f2dd7db984a3b074c4b03b45eac4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd5c5b7c66a934bb54e4acdddad08a4191d6043/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd5c5b7c66a934bb54e4acdddad08a4191d6043/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ddd5c5b7c66a934bb54e4acdddad08a4191d6043", "patch": "@@ -1,3 +1,9 @@\n+2018-03-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/85049 - ICE with __integer_pack.\n+\t* pt.c (unify_pack_expansion): Don't try to deduce generated packs.\n+\t* cp-tree.h (TEMPLATE_PARM_P): New.\n+\n 2018-03-23  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/78489 - wrong SFINAE behavior."}, {"sha": "db79338035da28c9a86a8556ee3acf367e0a2f00", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd5c5b7c66a934bb54e4acdddad08a4191d6043/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd5c5b7c66a934bb54e4acdddad08a4191d6043/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=ddd5c5b7c66a934bb54e4acdddad08a4191d6043", "patch": "@@ -4554,6 +4554,12 @@ more_aggr_init_expr_args_p (const aggr_init_expr_arg_iterator *iter)\n        || TREE_CODE (NODE) == TYPE_DECL\t\t\\\n        || TREE_CODE (NODE) == TEMPLATE_DECL))\n \n+/* Nonzero for a raw template parameter node.  */\n+#define TEMPLATE_PARM_P(NODE)\t\t\t\t\t\\\n+  (TREE_CODE (NODE) == TEMPLATE_TYPE_PARM\t\t\t\\\n+   || TREE_CODE (NODE) == TEMPLATE_TEMPLATE_PARM\t\t\\\n+   || TREE_CODE (NODE) == TEMPLATE_PARM_INDEX)\n+\n /* Mark NODE as a template parameter.  */\n #define SET_DECL_TEMPLATE_PARM_P(NODE) \\\n   (DECL_LANG_FLAG_0 (NODE) = 1)"}, {"sha": "d6cce3e67dafd4dcec621d00443893f484764d07", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd5c5b7c66a934bb54e4acdddad08a4191d6043/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd5c5b7c66a934bb54e4acdddad08a4191d6043/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ddd5c5b7c66a934bb54e4acdddad08a4191d6043", "patch": "@@ -20645,6 +20645,11 @@ unify_pack_expansion (tree tparms, tree targs, tree packed_parms,\n       tree parm_pack = TREE_VALUE (pack);\n       int idx, level;\n \n+      /* Only template parameter packs can be deduced, not e.g. function\n+\t parameter packs or __bases or __integer_pack.  */\n+      if (!TEMPLATE_PARM_P (parm_pack))\n+\tcontinue;\n+\n       /* Determine the index and level of this parameter pack.  */\n       template_parm_level_and_index (parm_pack, &level, &idx);\n       if (level < levels)"}, {"sha": "d3ed1363016b9831703421101b2aaffdf9cb38c5", "filename": "gcc/testsuite/g++.dg/ext/integer-pack3.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddd5c5b7c66a934bb54e4acdddad08a4191d6043/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Finteger-pack3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddd5c5b7c66a934bb54e4acdddad08a4191d6043/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Finteger-pack3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Finteger-pack3.C?ref=ddd5c5b7c66a934bb54e4acdddad08a4191d6043", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/85049\n+// { dg-do compile { target c++11 } }\n+\n+typedef __SIZE_TYPE__ size_t;\n+template<typename _Tp, _Tp... _Idx>\n+struct integer_sequence\n+{\n+  typedef _Tp value_type;\n+  static constexpr size_t size() noexcept { return sizeof...(_Idx); }\n+};\n+template<typename _Tp, _Tp _Num>\n+using make_integer_sequence = integer_sequence<_Tp, __integer_pack(_Num)...>;\n+template<size_t _Num>\n+using make_index_sequence = make_integer_sequence<size_t, _Num>;\n+template<typename... _Types>\n+using index_sequence_for = make_index_sequence<sizeof...(_Types)>;\n+template <typename...>\n+struct tuple {};\n+template <typename... Ts>\n+int get(tuple<index_sequence_for<Ts...>, Ts...>);\n+int x = get(tuple<index_sequence_for<>>{});"}]}