{"sha": "98095aa3379c4db453d656b82f368e3bbacbfa07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTgwOTVhYTMzNzljNGRiNDUzZDY1NmI4MmYzNjhlM2JiYWNiZmEwNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-04-25T16:59:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-04-25T16:59:11Z"}, "message": "common.opt (flag_debug_types_section): Default to 0.\n\n\t* common.opt (flag_debug_types_section): Default to 0.\n\t(dwarf_version): Default to 4.\n\t(dwarf_record_gcc_switches): Default to 1.\n\t(dwarf_strict): Default to 0.\n\t* toplev.c (process_options): Don't handle dwarf_strict\n\tor dwarf_version here.\n\t* config/vxworks.c (vxworks_override_options): Don't\n\ttest whether dwarf_strict or dwarf_version are negative,\n\tinstead test !global_options_set.x_dwarf_*.\n\t* config/darwin.c (darwin_override_options): Default to\n\tdwarf_version 2.\n\t* doc/invoke.texi: Note that -gdwarf-4, -grecord-gcc-switches\n\tand -fno-debug-types-section are now the default.\n\nFrom-SVN: r186835", "tree": {"sha": "c0adf84823b69e93515bec4add24e4f996c6ec10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0adf84823b69e93515bec4add24e4f996c6ec10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98095aa3379c4db453d656b82f368e3bbacbfa07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98095aa3379c4db453d656b82f368e3bbacbfa07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98095aa3379c4db453d656b82f368e3bbacbfa07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98095aa3379c4db453d656b82f368e3bbacbfa07/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9c8305f8fcfdab61ed276d1c30e7832e87d9ac55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c8305f8fcfdab61ed276d1c30e7832e87d9ac55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c8305f8fcfdab61ed276d1c30e7832e87d9ac55"}], "stats": {"total": 60, "additions": 36, "deletions": 24}, "files": [{"sha": "f51ccbc28438fc4ac79a3add9aae4d34aba30971", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98095aa3379c4db453d656b82f368e3bbacbfa07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98095aa3379c4db453d656b82f368e3bbacbfa07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98095aa3379c4db453d656b82f368e3bbacbfa07", "patch": "@@ -1,3 +1,19 @@\n+2012-04-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* common.opt (flag_debug_types_section): Default to 0.\n+\t(dwarf_version): Default to 4.\n+\t(dwarf_record_gcc_switches): Default to 1.\n+\t(dwarf_strict): Default to 0.\n+\t* toplev.c (process_options): Don't handle dwarf_strict\n+\tor dwarf_version here.\n+\t* config/vxworks.c (vxworks_override_options): Don't\n+\ttest whether dwarf_strict or dwarf_version are negative,\n+\tinstead test !global_options_set.x_dwarf_*.\n+\t* config/darwin.c (darwin_override_options): Default to\n+\tdwarf_version 2.\n+\t* doc/invoke.texi: Note that -gdwarf-4, -grecord-gcc-switches\n+\tand -fno-debug-types-section are now the default.\n+\n 2012-04-25  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraphunit.c: Update toplevel comment."}, {"sha": "4a2508c7113a65439e12731c77325f87a1e0cb5f", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98095aa3379c4db453d656b82f368e3bbacbfa07/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98095aa3379c4db453d656b82f368e3bbacbfa07/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=98095aa3379c4db453d656b82f368e3bbacbfa07", "patch": "@@ -967,7 +967,7 @@ Common Joined RejectNegative Var(common_deferred_options) Defer\n Map one directory name to another in debug information\n \n fdebug-types-section\n-Common Report Var(flag_debug_types_section) Init(1)\n+Common Report Var(flag_debug_types_section) Init(0)\n Output .debug_types section when using DWARF v4 debuginfo.\n \n ; Nonzero for -fdefer-pop: don't pop args after each function call\n@@ -2212,15 +2212,15 @@ Common JoinedOrMissing Negative(gdwarf-)\n Generate debug information in COFF format\n \n gdwarf-\n-Common Joined UInteger Var(dwarf_version) Init(-1) Negative(gstabs)\n+Common Joined UInteger Var(dwarf_version) Init(4) Negative(gstabs)\n Generate debug information in DWARF v2 (or later) format\n \n ggdb\n Common JoinedOrMissing\n Generate debug information in default extended format\n \n gno-record-gcc-switches\n-Common RejectNegative Var(dwarf_record_gcc_switches,0) Init(0)\n+Common RejectNegative Var(dwarf_record_gcc_switches,0) Init(1)\n Don't record gcc command line switches in DWARF DW_AT_producer.\n \n grecord-gcc-switches\n@@ -2236,7 +2236,7 @@ Common JoinedOrMissing Negative(gvms)\n Generate debug information in extended STABS format\n \n gno-strict-dwarf\n-Common RejectNegative Var(dwarf_strict,0) Init(-1)\n+Common RejectNegative Var(dwarf_strict,0) Init(0)\n Emit DWARF additions beyond selected version\n \n gstrict-dwarf"}, {"sha": "15efaa3d8a743d8a79eff969569011fd099e3df0", "filename": "gcc/config/darwin.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98095aa3379c4db453d656b82f368e3bbacbfa07/gcc%2Fconfig%2Fdarwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98095aa3379c4db453d656b82f368e3bbacbfa07/gcc%2Fconfig%2Fdarwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.c?ref=98095aa3379c4db453d656b82f368e3bbacbfa07", "patch": "@@ -1,6 +1,6 @@\n /* Functions for generic Darwin as target machine for GNU C compiler.\n    Copyright (C) 1989, 1990, 1991, 1992, 1993, 2000, 2001, 2002, 2003, 2004,\n-   2005, 2006, 2007, 2008, 2009, 2010, 2011\n+   2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n    Contributed by Apple Computer Inc.\n \n@@ -2973,6 +2973,8 @@ darwin_override_options (void)\n      workaround for tool bugs.  */\n   if (!global_options_set.x_dwarf_strict) \n     dwarf_strict = 1;\n+  if (!global_options_set.x_dwarf_version)\n+    dwarf_version = 2;\n \n   /* Do not allow unwind tables to be generated by default for m32.  \n      fnon-call-exceptions will override this, regardless of what we do.  */"}, {"sha": "d88f03ffecb4caa848f969c6e8eb96a26b77906a", "filename": "gcc/config/vxworks.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98095aa3379c4db453d656b82f368e3bbacbfa07/gcc%2Fconfig%2Fvxworks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98095aa3379c4db453d656b82f368e3bbacbfa07/gcc%2Fconfig%2Fvxworks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks.c?ref=98095aa3379c4db453d656b82f368e3bbacbfa07", "patch": "@@ -1,5 +1,5 @@\n /* Common VxWorks target definitions for GNU compiler.\n-   Copyright (C) 2007, 2008, 2010\n+   Copyright (C) 2007, 2008, 2010, 2012\n    Free Software Foundation, Inc.\n    Contributed by CodeSourcery, Inc.\n \n@@ -147,9 +147,9 @@ vxworks_override_options (void)\n \n   /* Default to strict dwarf-2 to prevent potential difficulties observed with\n      non-gdb debuggers on extensions > 2.  */\n-  if (dwarf_strict < 0)\n+  if (!global_options_set.x_dwarf_strict)\n     dwarf_strict = 1;\n \n-  if (dwarf_version < 0)\n+  if (!global_options_set.x_dwarf_version)\n     dwarf_version = 2;\n }"}, {"sha": "c6bf20dd3d3fca57ad40b08bfc89b0d27a92b364", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98095aa3379c4db453d656b82f368e3bbacbfa07/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98095aa3379c4db453d656b82f368e3bbacbfa07/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=98095aa3379c4db453d656b82f368e3bbacbfa07", "patch": "@@ -4781,14 +4781,16 @@ normally emits debugging information for classes because using this\n option increases the size of debugging information by as much as a\n factor of two.\n \n-@item -fno-debug-types-section\n-@opindex fno-debug-types-section\n+@item -fdebug-types-section\n @opindex fdebug-types-section\n-By default when using DWARF Version 4 or higher, type DIEs are put into\n+@opindex fno-debug-types-section\n+When using DWARF Version 4 or higher, type DIEs can be put into\n their own @code{.debug_types} section instead of making them part of the\n @code{.debug_info} section.  It is more efficient to put them in a separate\n comdat sections since the linker can then remove duplicates.\n-But not all DWARF consumers support @code{.debug_types} sections yet.\n+But not all DWARF consumers support @code{.debug_types} sections yet\n+and on some objects @code{.debug_types} produces larger instead of smaller\n+debugging information.\n \n @item -gstabs+\n @opindex gstabs+\n@@ -4819,7 +4821,8 @@ assembler (GAS) to fail with an error.\n @item -gdwarf-@var{version}\n @opindex gdwarf-@var{version}\n Produce debugging information in DWARF format (if that is supported).\n-The value of @var{version} may be either 2, 3 or 4; the default version is 2.\n+The value of @var{version} may be either 2, 3 or 4; the default version\n+for most targets is 4.\n \n Note that with DWARF Version 2, some ports require and always\n use some non-conflicting DWARF 3 extensions in the unwind tables.\n@@ -4834,12 +4837,12 @@ compiler that may affect code generation to be appended to the\n DW_AT_producer attribute in DWARF debugging information.  The options\n are concatenated with spaces separating them from each other and from\n the compiler version.  See also @option{-frecord-gcc-switches} for another\n-way of storing compiler options into the object file.\n+way of storing compiler options into the object file.  This is the default.\n \n @item -gno-record-gcc-switches\n @opindex gno-record-gcc-switches\n Disallow appending command-line options to the DW_AT_producer attribute\n-in DWARF debugging information.  This is the default.\n+in DWARF debugging information.\n \n @item -gstrict-dwarf\n @opindex gstrict-dwarf"}, {"sha": "53590b0194a916e621272de0dab09013f81f809c", "filename": "gcc/toplev.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98095aa3379c4db453d656b82f368e3bbacbfa07/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98095aa3379c4db453d656b82f368e3bbacbfa07/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=98095aa3379c4db453d656b82f368e3bbacbfa07", "patch": "@@ -1375,15 +1375,6 @@ process_options (void)\n \t}\n     }\n \n-  /* Unless over-ridden for the target, assume that all DWARF levels\n-     may be emitted, if DWARF2_DEBUG is selected.  */\n-  if (dwarf_strict < 0)\n-    dwarf_strict = 0;\n-\n-  /* And select a default dwarf level.  */\n-  if (dwarf_version < 0)\n-    dwarf_version = 2;\n-\n   /* A lot of code assumes write_symbols == NO_DEBUG if the debugging\n      level is 0.  */\n   if (debug_info_level == DINFO_LEVEL_NONE)"}]}