{"sha": "9714ca724859e90773df206f552937ddc4da004c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTcxNGNhNzI0ODU5ZTkwNzczZGYyMDZmNTUyOTM3ZGRjNGRhMDA0Yw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2011-04-19T16:26:13Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-04-19T16:26:13Z"}, "message": "re PR fortran/48588 (ICE (segfault) in gfc_get_nodesc_array_type)\n\n2011-04-19  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/48588\n        * parse.c (resolve_all_program_units): Skip modules.\n        (translate_all_program_units): Handle modules.\n        (gfc_parse_file): Defer code generation for modules.\n\n2011-04-19  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/48588\n        * gfortran.dg/whole_file_33.f90: New.\n\nFrom-SVN: r172718", "tree": {"sha": "365315d3e0d08f05fe1ed353686015e0eaf3a51e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/365315d3e0d08f05fe1ed353686015e0eaf3a51e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9714ca724859e90773df206f552937ddc4da004c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9714ca724859e90773df206f552937ddc4da004c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9714ca724859e90773df206f552937ddc4da004c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9714ca724859e90773df206f552937ddc4da004c/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0004f992f087081cab0f22574347d2d97ea698c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0004f992f087081cab0f22574347d2d97ea698c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0004f992f087081cab0f22574347d2d97ea698c1"}], "stats": {"total": 119, "additions": 109, "deletions": 10}, "files": [{"sha": "c60ba46edebf97615e1411bfcbe71f58f68092a4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9714ca724859e90773df206f552937ddc4da004c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9714ca724859e90773df206f552937ddc4da004c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9714ca724859e90773df206f552937ddc4da004c", "patch": "@@ -1,3 +1,10 @@\n+2011-04-19  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/48588\n+\t* parse.c (resolve_all_program_units): Skip modules.\n+\t(translate_all_program_units): Handle modules.\n+\t(gfc_parse_file): Defer code generation for modules.\n+\n 2011-04-19  Martin Jambor  <mjambor@suse.cz>\n \n \t* trans-decl.c (gfc_generate_function_code): Call cgraph_create_node"}, {"sha": "5d2237a108956cb4539346d0829ba7c50e49b0b9", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 47, "deletions": 10, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9714ca724859e90773df206f552937ddc4da004c/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9714ca724859e90773df206f552937ddc4da004c/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=9714ca724859e90773df206f552937ddc4da004c", "patch": "@@ -4191,6 +4191,10 @@ resolve_all_program_units (gfc_namespace *gfc_global_ns_list)\n   gfc_current_ns = gfc_global_ns_list;\n   for (; gfc_current_ns; gfc_current_ns = gfc_current_ns->sibling)\n     {\n+      if (gfc_current_ns->proc_name\n+\t  && gfc_current_ns->proc_name->attr.flavor == FL_MODULE)\n+\tcontinue; /* Already resolved.  */\n+\n       if (gfc_current_ns->proc_name)\n \tgfc_current_locus = gfc_current_ns->proc_name->declared_at;\n       gfc_resolve (gfc_current_ns);\n@@ -4231,8 +4235,28 @@ translate_all_program_units (gfc_namespace *gfc_global_ns_list)\n   gfc_current_ns = gfc_global_ns_list;\n   gfc_get_errors (NULL, &errors);\n \n+  /* We first translate all modules to make sure that later parts\n+     of the program can use the decl. Then we translate the nonmodules.  */\n+\n+  for (; !errors && gfc_current_ns; gfc_current_ns = gfc_current_ns->sibling)\n+    {\n+      if (!gfc_current_ns->proc_name\n+\t  || gfc_current_ns->proc_name->attr.flavor != FL_MODULE)\n+\tcontinue;\n+\n+      gfc_current_locus = gfc_current_ns->proc_name->declared_at;\n+      gfc_derived_types = gfc_current_ns->derived_types;\n+      gfc_generate_module_code (gfc_current_ns);\n+      gfc_current_ns->translated = 1;\n+    }\n+\n+  gfc_current_ns = gfc_global_ns_list;\n   for (; !errors && gfc_current_ns; gfc_current_ns = gfc_current_ns->sibling)\n     {\n+      if (gfc_current_ns->proc_name\n+\t  && gfc_current_ns->proc_name->attr.flavor == FL_MODULE)\n+\tcontinue;\n+\n       gfc_current_locus = gfc_current_ns->proc_name->declared_at;\n       gfc_derived_types = gfc_current_ns->derived_types;\n       gfc_generate_code (gfc_current_ns);\n@@ -4243,7 +4267,16 @@ translate_all_program_units (gfc_namespace *gfc_global_ns_list)\n   gfc_current_ns = gfc_global_ns_list;\n   for (;gfc_current_ns;)\n     {\n-      gfc_namespace *ns = gfc_current_ns->sibling;\n+      gfc_namespace *ns;\n+\n+      if (gfc_current_ns->proc_name\n+\t  && gfc_current_ns->proc_name->attr.flavor == FL_MODULE)\n+\t{\n+\t  gfc_current_ns = gfc_current_ns->sibling;\n+\t  continue;\n+\t}\n+\n+      ns = gfc_current_ns->sibling;\n       gfc_derived_types = gfc_current_ns->derived_types;\n       gfc_done_2 ();\n       gfc_current_ns = ns;\n@@ -4375,16 +4408,18 @@ gfc_parse_file (void)\n   if (s.state == COMP_MODULE)\n     {\n       gfc_dump_module (s.sym->name, errors_before == errors);\n-      if (errors == 0)\n-\tgfc_generate_module_code (gfc_current_ns);\n-      pop_state ();\n       if (!gfc_option.flag_whole_file)\n-\tgfc_done_2 ();\n+\t{\n+\t  if (errors == 0)\n+\t    gfc_generate_module_code (gfc_current_ns);\n+\t  pop_state ();\n+\t  gfc_done_2 ();\n+\t}\n       else\n \t{\n \t  gfc_current_ns->derived_types = gfc_derived_types;\n \t  gfc_derived_types = NULL;\n-\t  gfc_current_ns = NULL;\n+\t  goto prog_units;\n \t}\n     }\n   else\n@@ -4429,10 +4464,12 @@ gfc_parse_file (void)\n \t= gfc_option.dump_fortran_original ? gfc_global_ns_list : NULL;\n \n   for (; gfc_current_ns; gfc_current_ns = gfc_current_ns->sibling)\n-    {\n-      gfc_dump_parse_tree (gfc_current_ns, stdout);\n-      fputs (\"------------------------------------------\\n\\n\", stdout);\n-    }\n+    if (!gfc_current_ns->proc_name\n+\t|| gfc_current_ns->proc_name->attr.flavor != FL_MODULE)\n+      {\n+\tgfc_dump_parse_tree (gfc_current_ns, stdout);\n+\tfputs (\"------------------------------------------\\n\\n\", stdout);\n+      }\n \n   /* Do the translation.  */\n   translate_all_program_units (gfc_global_ns_list);"}, {"sha": "bc66cbb3d4d623f319719623a0eb755089eb3285", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9714ca724859e90773df206f552937ddc4da004c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9714ca724859e90773df206f552937ddc4da004c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9714ca724859e90773df206f552937ddc4da004c", "patch": "@@ -1,3 +1,8 @@\n+2011-04-19  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/48588\n+\t* gfortran.dg/whole_file_33.f90: New.\n+\n 2011-04-19  Martin Jambor  <mjambor@suse.cz>\n \n \t* g++.dg/ipa/devirt-7.C: New test."}, {"sha": "31faeaa09927ca1b07cc1292eeffc2edda947db3", "filename": "gcc/testsuite/gfortran.dg/whole_file_33.f90", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9714ca724859e90773df206f552937ddc4da004c/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhole_file_33.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9714ca724859e90773df206f552937ddc4da004c/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhole_file_33.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhole_file_33.f90?ref=9714ca724859e90773df206f552937ddc4da004c", "patch": "@@ -0,0 +1,50 @@\n+! { dg-do compile }\n+!\n+! PR fortran/48588\n+!\n+! Contributed by Andres Legarra.\n+!\n+\n+MODULE LA_PRECISION\n+IMPLICIT NONE\n+INTEGER, PARAMETER :: dp = KIND(1.0D0)\n+END MODULE LA_PRECISION\n+\n+module lapack90\n+INTERFACE\n+  SUBROUTINE DGESV_F90( A, B, IPIV, INFO )\n+    USE la_precision, ONLY: wp => dp\n+    IMPLICIT NONE\n+    INTEGER, INTENT(OUT), OPTIONAL         :: INFO\n+    INTEGER, INTENT(OUT), OPTIONAL, TARGET :: IPIV(:)\n+    REAL(WP), INTENT(IN OUT)               :: A(:,:), B(:,:)\n+  END SUBROUTINE DGESV_F90\n+END INTERFACE\n+end module\n+\n+SUBROUTINE DGESV_F90( A, B, IPIV, INFO )\n+  USE la_precision, ONLY: wp => dp\n+  IMPLICIT NONE\n+  INTEGER, INTENT(OUT), OPTIONAL         :: INFO\n+  INTEGER, INTENT(OUT), OPTIONAL, TARGET :: IPIV(:)\n+  REAL(WP), INTENT(IN OUT)               :: A(:,:), B(:,:)\n+END SUBROUTINE DGESV_F90\n+\n+MODULE DENSEOP\n+  USE LAPACK90\n+  implicit none\n+  integer, parameter :: r8 = SELECTED_REAL_KIND( 15, 307 )\n+  real(r8)::denseop_tol=1.d-50\n+\n+  CONTAINS\n+\n+  SUBROUTINE GEINV8 (x)\n+   real(r8)::x(:,:)\n+   real(r8),allocatable::x_o(:,:)\n+   allocate(x_o(size(x,1),size(x,1)))\n+   CALL dgesv_f90(x,x_o)\n+   x=x_o\n+  END SUBROUTINE GEINV8\n+END MODULE DENSEOP\n+\n+! { dg-final { cleanup-modules \"la_precision lapack90 denseop\" } }"}]}