{"sha": "18e2ca55d452f95bbd3739f86bad2490726ee378", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThlMmNhNTVkNDUyZjk1YmJkMzczOWY4NmJhZDI0OTA3MjZlZTM3OA==", "commit": {"author": {"name": "Mihailo Stojanovic", "email": "mistojanovic@wavecomp.com", "date": "2019-10-28T19:03:38Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2019-10-28T19:03:38Z"}, "message": "mips-msa.md (msa_insert_<msaftm_f>): Add an alternative which covers the floating-point input value.\n\n        * config/mips/mips-msa.md (msa_insert_<msaftm_f>): Add an\n        alternative which covers the floating-point input value. Also\n        forbid the split of insert.d pattern for floating-point values.\n\n        * gcc.target/mips/msa-insert-split.c: New test.\n\nFrom-SVN: r277533", "tree": {"sha": "183a642d6b2aab76cd9d123fa9ca5e119f0202a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/183a642d6b2aab76cd9d123fa9ca5e119f0202a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18e2ca55d452f95bbd3739f86bad2490726ee378", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18e2ca55d452f95bbd3739f86bad2490726ee378", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18e2ca55d452f95bbd3739f86bad2490726ee378", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18e2ca55d452f95bbd3739f86bad2490726ee378/comments", "author": null, "committer": null, "parents": [{"sha": "e18a6d1441cfb5d43d3193a2643207fc3f95fd5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e18a6d1441cfb5d43d3193a2643207fc3f95fd5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e18a6d1441cfb5d43d3193a2643207fc3f95fd5a"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "a3fbadfacbfff72b55b79ab5e0c8bb16890193d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18e2ca55d452f95bbd3739f86bad2490726ee378/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18e2ca55d452f95bbd3739f86bad2490726ee378/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18e2ca55d452f95bbd3739f86bad2490726ee378", "patch": "@@ -1,3 +1,9 @@\n+2019-10-28  Mihailo Stojanovic  <mistojanovic@wavecomp.com>\n+\n+\t* config/mips/mips-msa.md (msa_insert_<msaftm_f>): Add an\n+\talternative which covers the floating-point input value. Also\n+\tforbid the split of insert.d pattern for floating-point values.\n+\n 2019-10-28  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* config.gcc: Add riscv-sr.o to extra_objs for riscv."}, {"sha": "628423d71ae9e66c9f5aa76cfb259c143d18eb9e", "filename": "gcc/config/mips/mips-msa.md", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18e2ca55d452f95bbd3739f86bad2490726ee378/gcc%2Fconfig%2Fmips%2Fmips-msa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18e2ca55d452f95bbd3739f86bad2490726ee378/gcc%2Fconfig%2Fmips%2Fmips-msa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-msa.md?ref=18e2ca55d452f95bbd3739f86bad2490726ee378", "patch": "@@ -436,14 +436,17 @@\n })\n \n (define_insn \"msa_insert_<msafmt_f>\"\n-  [(set (match_operand:MSA 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:MSA 0 \"register_operand\" \"=f,f\")\n \t(vec_merge:MSA\n \t  (vec_duplicate:MSA\n-\t    (match_operand:<UNITMODE> 1 \"reg_or_0_operand\" \"dJ\"))\n-\t  (match_operand:MSA 2 \"register_operand\" \"0\")\n+\t    (match_operand:<UNITMODE> 1 \"reg_or_0_operand\" \"dJ,f\"))\n+\t  (match_operand:MSA 2 \"register_operand\" \"0,0\")\n \t  (match_operand 3 \"const_<bitmask>_operand\" \"\")))]\n   \"ISA_HAS_MSA\"\n {\n+  if (which_alternative == 1)\n+    return \"insve.<msafmt>\\t%w0[%y3],%w1[0]\";\n+\n   if (!TARGET_64BIT && (<MODE>mode == V2DImode || <MODE>mode == V2DFmode))\n     return \"#\";\n   else\n@@ -462,6 +465,8 @@\n   \"reload_completed && ISA_HAS_MSA && !TARGET_64BIT\"\n   [(const_int 0)]\n {\n+  if (REG_P (operands[1]) && FP_REG_P (REGNO (operands[1])))\n+    FAIL;\n   mips_split_msa_insert_d (operands[0], operands[2], operands[3], operands[1]);\n   DONE;\n })"}, {"sha": "e5cecf4a7675fbe223d8912e45f192d2b5d8baa8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18e2ca55d452f95bbd3739f86bad2490726ee378/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18e2ca55d452f95bbd3739f86bad2490726ee378/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=18e2ca55d452f95bbd3739f86bad2490726ee378", "patch": "@@ -1,3 +1,7 @@\n+2019-10-28  Mihailo Stojanovic  <mistojanovic@wavecomp.com>\n+\n+\t* gcc.target/mips/msa-insert-split.c: New test.\n+\n 2019-10-28  Andrew Burgess  <andrew.burgess@embecosm.com>\n \n \t* gcc.target/riscv/save-restore-2.c: New file."}, {"sha": "50f3b8a61a1ca620f73479de9062f0ed204d7bac", "filename": "gcc/testsuite/gcc.target/mips/msa-insert-split.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18e2ca55d452f95bbd3739f86bad2490726ee378/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsa-insert-split.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18e2ca55d452f95bbd3739f86bad2490726ee378/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsa-insert-split.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsa-insert-split.c?ref=18e2ca55d452f95bbd3739f86bad2490726ee378", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mfp64 -mhard-float -mmsa\" } */\n+/* { dg-skip-if \"code quality test\" { *-*-* } { \"-O0\" } { \"\" } } */\n+\n+typedef double v2f64 __attribute__ ((vector_size (16)));\n+\n+void foo (double* arr, v2f64* vec)\n+{\n+  v2f64 v;\n+  v[0] = arr[0];\n+  v[1] = arr[1];\n+  *vec = v;\n+}\n+\n+/* { dg-final { scan-assembler-not \"insert.w\" } } */\n+/* { dg-final { scan-assembler-times \"insve.d\" 2 } } */"}]}