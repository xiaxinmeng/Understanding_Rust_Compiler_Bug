{"sha": "856c79ea8d01c8094a6db7cb80de53303bed3e08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU2Yzc5ZWE4ZDAxYzgwOTRhNmRiN2NiODBkZTUzMzAzYmVkM2UwOA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2018-02-26T14:58:47Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2018-02-26T14:58:47Z"}, "message": "lambda.c (build_capture_proxy): Define static.\n\n2018-02-26  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* lambda.c (build_capture_proxy): Define static.\n\t* cp-tree.h (build_capture_proxy): Remove.\n\nFrom-SVN: r257990", "tree": {"sha": "b59ca04bcf8bd580cf042ceda2520191339d293c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b59ca04bcf8bd580cf042ceda2520191339d293c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/856c79ea8d01c8094a6db7cb80de53303bed3e08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/856c79ea8d01c8094a6db7cb80de53303bed3e08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/856c79ea8d01c8094a6db7cb80de53303bed3e08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/856c79ea8d01c8094a6db7cb80de53303bed3e08/comments", "author": null, "committer": null, "parents": [{"sha": "ff9fccdcb5118d494bba801038a1c334bf2e38fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff9fccdcb5118d494bba801038a1c334bf2e38fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff9fccdcb5118d494bba801038a1c334bf2e38fd"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "217bc72ac233ad8eb7b8c8e86d747ced07b6f1a2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/856c79ea8d01c8094a6db7cb80de53303bed3e08/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/856c79ea8d01c8094a6db7cb80de53303bed3e08/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=856c79ea8d01c8094a6db7cb80de53303bed3e08", "patch": "@@ -1,3 +1,8 @@\n+2018-02-26  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* lambda.c (build_capture_proxy): Define static.\n+\t* cp-tree.h (build_capture_proxy): Remove.\n+\n 2018-02-26  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/84537"}, {"sha": "aef022fb7b5af736408b62533fd46e599a97616d", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/856c79ea8d01c8094a6db7cb80de53303bed3e08/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/856c79ea8d01c8094a6db7cb80de53303bed3e08/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=856c79ea8d01c8094a6db7cb80de53303bed3e08", "patch": "@@ -6890,7 +6890,6 @@ extern tree lambda_function\t\t\t(tree);\n extern void apply_deduced_return_type           (tree, tree);\n extern tree add_capture                         (tree, tree, tree, bool, bool);\n extern tree add_default_capture                 (tree, tree, tree);\n-extern tree build_capture_proxy\t\t\t(tree, tree);\n extern void insert_capture_proxy\t\t(tree);\n extern void insert_pending_capture_proxies\t(void);\n extern bool is_capture_proxy\t\t\t(tree);"}, {"sha": "6a798266f12d5e7f9a4e16c4263cf1136c25abcf", "filename": "gcc/cp/lambda.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/856c79ea8d01c8094a6db7cb80de53303bed3e08/gcc%2Fcp%2Flambda.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/856c79ea8d01c8094a6db7cb80de53303bed3e08/gcc%2Fcp%2Flambda.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flambda.c?ref=856c79ea8d01c8094a6db7cb80de53303bed3e08", "patch": "@@ -388,7 +388,7 @@ lambda_proxy_type (tree ref)\n    inside the operator(), build a placeholder var for future lookups and\n    debugging.  */\n \n-tree\n+static tree\n build_capture_proxy (tree member, tree init)\n {\n   tree var, object, fn, closure, name, lam, type;"}]}