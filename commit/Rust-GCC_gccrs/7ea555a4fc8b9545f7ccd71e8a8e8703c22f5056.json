{"sha": "7ea555a4fc8b9545f7ccd71e8a8e8703c22f5056", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VhNTU1YTRmYzhiOTU0NWY3Y2NkNzFlOGE4ZTg3MDNjMjJmNTA1Ng==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-09-01T22:41:53Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-09-01T22:41:53Z"}, "message": "(SECONDARY_MEMORY_NEEDED): New macro.\n\nFrom-SVN: r5242", "tree": {"sha": "712ff65a3c5e999714e4e626ad605268d683d0fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/712ff65a3c5e999714e4e626ad605268d683d0fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ea555a4fc8b9545f7ccd71e8a8e8703c22f5056", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ea555a4fc8b9545f7ccd71e8a8e8703c22f5056", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ea555a4fc8b9545f7ccd71e8a8e8703c22f5056", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ea555a4fc8b9545f7ccd71e8a8e8703c22f5056/comments", "author": null, "committer": null, "parents": [{"sha": "eb4e8003779f378da296e06a7ad0548cad10048e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb4e8003779f378da296e06a7ad0548cad10048e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb4e8003779f378da296e06a7ad0548cad10048e"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "e4706fccaeca2e0241006ddc3f3121172c78fd9b", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ea555a4fc8b9545f7ccd71e8a8e8703c22f5056/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ea555a4fc8b9545f7ccd71e8a8e8703c22f5056/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=7ea555a4fc8b9545f7ccd71e8a8e8703c22f5056", "patch": "@@ -558,6 +558,12 @@ enum reg_class { NO_REGS, BASE_REGS, GENERAL_REGS, FLOAT_REGS,\n #define SECONDARY_RELOAD_CLASS(CLASS,MODE,IN) \\\n   secondary_reload_class (CLASS, MODE, IN)\n \n+/* If we are copying between FP registers and anything else, we need a memory\n+   location.  */\n+\n+#define SECONDARY_MEMORY_NEEDED(CLASS1,CLASS2,MODE) \\\n+ ((CLASS1) != (CLASS2) && ((CLASS1) == FLOAT_REGS || (CLASS2) == FLOAT_REGS))\n+\n /* Return the maximum number of consecutive registers\n    needed to represent mode MODE in a register of class CLASS.\n "}]}