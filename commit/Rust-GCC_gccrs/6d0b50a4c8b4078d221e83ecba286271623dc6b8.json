{"sha": "6d0b50a4c8b4078d221e83ecba286271623dc6b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQwYjUwYTRjOGI0MDc4ZDIyMWU4M2VjYmEyODYyNzE2MjNkYzZiOA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2003-07-14T20:29:34Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2003-07-14T20:29:34Z"}, "message": "elf.h (ASM_OUTPUT_ALIGNED_BSS): Use mips_output_aligned_bss.\n\n\t* config/mips/elf.h (ASM_OUTPUT_ALIGNED_BSS): Use\n\tmips_output_aligned_bss.\n\t* config/mips/linux.h: Likewise.\n\t* config/mips/mips-protos.h (mips_output_aligned_bss): Declare.\n\t* config/mips/mips.c (mips_output_aligned_bss): New function.\n\nFrom-SVN: r69355", "tree": {"sha": "9f96681335dd0d10dbc40455f3aa085de12537a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f96681335dd0d10dbc40455f3aa085de12537a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d0b50a4c8b4078d221e83ecba286271623dc6b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d0b50a4c8b4078d221e83ecba286271623dc6b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d0b50a4c8b4078d221e83ecba286271623dc6b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d0b50a4c8b4078d221e83ecba286271623dc6b8/comments", "author": null, "committer": null, "parents": [{"sha": "8d50bd1960c12c8f10703221c80f0e91a36dfebf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d50bd1960c12c8f10703221c80f0e91a36dfebf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d50bd1960c12c8f10703221c80f0e91a36dfebf"}], "stats": {"total": 74, "additions": 36, "deletions": 38}, "files": [{"sha": "05801cd8f5027b5fd92a89750a057166ef0535ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0b50a4c8b4078d221e83ecba286271623dc6b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0b50a4c8b4078d221e83ecba286271623dc6b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d0b50a4c8b4078d221e83ecba286271623dc6b8", "patch": "@@ -1,5 +1,11 @@\n 2003-07-14  Richard Sandiford  <rsandifo@redhat.com>\n \n+\t* config/mips/elf.h (ASM_OUTPUT_ALIGNED_BSS): Use\n+\tmips_output_aligned_bss.\n+\t* config/mips/linux.h: Likewise.\n+\t* config/mips/mips-protos.h (mips_output_aligned_bss): Declare.\n+\t* config/mips/mips.c (mips_output_aligned_bss): New function.\n+\n \t* config/mips/elf.h (DBX_DEBUGGING_INFO): Delete.\n \t* config/mips/elf64.h: Likewise.\n "}, {"sha": "61999e2c372283883843b7492418aec22900c76d", "filename": "gcc/config/mips/elf.h", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0b50a4c8b4078d221e83ecba286271623dc6b8/gcc%2Fconfig%2Fmips%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0b50a4c8b4078d221e83ecba286271623dc6b8/gcc%2Fconfig%2Fmips%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felf.h?ref=6d0b50a4c8b4078d221e83ecba286271623dc6b8", "patch": "@@ -71,26 +71,8 @@ Boston, MA 02111-1307, USA.  */\n #define BSS_SECTION_ASM_OP\t\"\\t.section\\t.bss\"\n #endif\n \n-/* Like `ASM_OUTPUT_BSS' except takes the required alignment as a\n-   separate, explicit argument.  If you define this macro, it is used\n-   in place of `ASM_OUTPUT_BSS', and gives you more flexibility in\n-   handling the required alignment of the variable.  The alignment is\n-   specified as the number of bits.\n-\n-   Try to use function `asm_output_aligned_bss' defined in file\n-   `varasm.c' when defining this macro.  */\n #ifndef ASM_OUTPUT_ALIGNED_BSS\n-#define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  if (SIZE > 0 && SIZE <= (unsigned HOST_WIDE_INT)mips_section_threshold)\\\n-    named_section (0, \".sbss\", 0);\t\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\t\\\n-    bss_section ();\t\t\t\t\t\t\t\\\n-  ASM_OUTPUT_ALIGN (FILE, floor_log2 (ALIGN / BITS_PER_UNIT));\t\t\\\n-  last_assemble_variable_decl = DECL;\t\t\t\t\t\\\n-  ASM_DECLARE_OBJECT_NAME (FILE, NAME, DECL);\t\t\t\t\\\n-  ASM_OUTPUT_SKIP (FILE, SIZE ? SIZE : 1);\t\t\t\t\\\n-} while (0)\n+#define ASM_OUTPUT_ALIGNED_BSS mips_output_aligned_bss\n #endif\n \n #undef ASM_DECLARE_OBJECT_NAME"}, {"sha": "70acf11ee99d2d8b74dc2966d0132c8902468b47", "filename": "gcc/config/mips/linux.h", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0b50a4c8b4078d221e83ecba286271623dc6b8/gcc%2Fconfig%2Fmips%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0b50a4c8b4078d221e83ecba286271623dc6b8/gcc%2Fconfig%2Fmips%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux.h?ref=6d0b50a4c8b4078d221e83ecba286271623dc6b8", "patch": "@@ -34,25 +34,7 @@ Boston, MA 02111-1307, USA.  */\n    used.  */\n #define BSS_SECTION_ASM_OP\t\"\\t.section\\t.bss\"\n \n-/* Like `ASM_OUTPUT_BSS' except takes the required alignment as a\n-   separate, explicit argument.  If you define this macro, it is used\n-   in place of `ASM_OUTPUT_BSS', and gives you more flexibility in\n-   handling the required alignment of the variable.  The alignment is\n-   specified as the number of bits.\n-\n-   Try to use function `asm_output_aligned_bss' defined in file\n-   `varasm.c' when defining this macro.  */\n-#define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN)\t\\\n-do {\t\t\t\t\t\t\t\t\\\n-  if (SIZE > 0 && (long)(SIZE) <= mips_section_threshold)\t\\\n-    named_section (0, \".sbss\", 0);\t\t\t\t\\\n-  else\t\t\t\t\t\t\t\t\\\n-    bss_section ();\t\t\t\t\t\t\\\n-  ASM_OUTPUT_ALIGN (FILE, floor_log2 (ALIGN / BITS_PER_UNIT));\t\\\n-  last_assemble_variable_decl = DECL;\t\t\t\t\\\n-  ASM_DECLARE_OBJECT_NAME (FILE, NAME, DECL);\t\t\t\\\n-  ASM_OUTPUT_SKIP (FILE, SIZE ? SIZE : 1);\t\t\t\\\n-} while (0)\n+#define ASM_OUTPUT_ALIGNED_BSS mips_output_aligned_bss\n \n #undef ASM_DECLARE_OBJECT_NAME\n #define ASM_DECLARE_OBJECT_NAME mips_declare_object_name"}, {"sha": "4185fda1763a09a617a190ae02e8c736653cf518", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0b50a4c8b4078d221e83ecba286271623dc6b8/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0b50a4c8b4078d221e83ecba286271623dc6b8/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=6d0b50a4c8b4078d221e83ecba286271623dc6b8", "patch": "@@ -39,6 +39,9 @@ extern void\t\tmips_declare_object_name PARAMS ((FILE *, const char *,\n \t\t\t\t\t\t\t  tree));\n extern void\t\tmips_finish_declare_object PARAMS ((FILE *, tree,\n \t\t\t\t\t\t\t    int, int));\n+extern void\t\tmips_output_aligned_bss\n+\t\t\t\tPARAMS ((FILE *, tree, const char *,\n+\t\t\t\t\t unsigned HOST_WIDE_INT, int));\n extern void\t\tmips_expand_epilogue PARAMS ((int));\n extern void\t\tmips_expand_prologue PARAMS ((void));\n extern void\t\tmips_output_filename PARAMS ((FILE *, const char *));"}, {"sha": "037e88707b34140960c8f0e6fe5238d1ad6d8b0f", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d0b50a4c8b4078d221e83ecba286271623dc6b8/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d0b50a4c8b4078d221e83ecba286271623dc6b8/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=6d0b50a4c8b4078d221e83ecba286271623dc6b8", "patch": "@@ -6175,6 +6175,31 @@ mips_file_start ()\n \t     ASM_COMMENT_START,\n \t     mips_section_threshold, mips_arch_info->name, mips_isa);\n }\n+\n+#ifdef BSS_SECTION_ASM_OP\n+/* Implement ASM_OUTPUT_ALIGNED_BSS.  This differs from the default only\n+   in the use of sbss.  */\n+\n+void\n+mips_output_aligned_bss (stream, decl, name, size, align)\n+     FILE *stream;\n+     tree decl;\n+     const char *name;\n+     unsigned HOST_WIDE_INT size;\n+     int align;\n+{\n+  extern tree last_assemble_variable_decl;\n+\n+  if (mips_in_small_data_p (decl))\n+    named_section (0, \".sbss\", 0);\n+  else\n+    bss_section ();\n+  ASM_OUTPUT_ALIGN (stream, floor_log2 (align / BITS_PER_UNIT));\n+  last_assemble_variable_decl = decl;\n+  ASM_DECLARE_OBJECT_NAME (stream, name, decl);\n+  ASM_OUTPUT_SKIP (stream, size != 0 ? size : 1);\n+}\n+#endif\n \f\n /* If we are optimizing the global pointer, emit the text section now and any\n    small externs which did not have .comm, etc that are needed.  Also, give a"}]}