{"sha": "da9c26dd266f4af21d7f57520c2a804375f4457f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGE5YzI2ZGQyNjZmNGFmMjFkN2Y1NzUyMGMyYTgwNDM3NWY0NDU3Zg==", "commit": {"author": {"name": "Michael Collison", "email": "michael.collison@arm.com", "date": "2017-06-28T07:07:49Z"}, "committer": {"name": "Michael Collison", "email": "collison@gcc.gnu.org", "date": "2017-06-28T07:07:49Z"}, "message": "re PR target/68535 (arm.c: 5 * set but not used)\n\n2017-06-28  Michael Collison  <michael.collison@arm.com>\n\n\tPR target/68535\n\t* config/arm/arm.c (gen_ldm_seq): Remove last unnecessary\n\tset of base_reg\n\t(arm_gen_movmemqi): Removed unused variable 'i'.\n\tConvert 'for' loop into 'while' loop.\n\t(arm_expand_prologue): Remove last unnecessary set of insn.\n\t(thumb_pop): Remove unused variable 'pushed_words'.\n\t(thumb_exit): Remove last unnecessary set of regs_to_pop.\n\nFrom-SVN: r249721", "tree": {"sha": "8f8dc453d5d169db9086fcb03bc01a008735aca1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f8dc453d5d169db9086fcb03bc01a008735aca1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da9c26dd266f4af21d7f57520c2a804375f4457f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da9c26dd266f4af21d7f57520c2a804375f4457f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da9c26dd266f4af21d7f57520c2a804375f4457f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da9c26dd266f4af21d7f57520c2a804375f4457f/comments", "author": null, "committer": null, "parents": [{"sha": "935b5226c385e34088c314374cbbe9e4995b9e44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/935b5226c385e34088c314374cbbe9e4995b9e44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/935b5226c385e34088c314374cbbe9e4995b9e44"}], "stats": {"total": 29, "additions": 15, "deletions": 14}, "files": [{"sha": "79c825ec7ebd04501d216c417b49c1ff2add872f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da9c26dd266f4af21d7f57520c2a804375f4457f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da9c26dd266f4af21d7f57520c2a804375f4457f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da9c26dd266f4af21d7f57520c2a804375f4457f", "patch": "@@ -1,3 +1,14 @@\n+2017-06-28  Michael Collison  <michael.collison@arm.com>\n+\n+\tPR target/68535\n+\t* config/arm/arm.c (gen_ldm_seq): Remove last unnecessary\n+\tset of base_reg\n+\t(arm_gen_movmemqi): Removed unused variable 'i'.\n+\tConvert 'for' loop into 'while' loop.\n+\t(arm_expand_prologue): Remove last unnecessary set of insn.\n+\t(thumb_pop): Remove unused variable 'pushed_words'.\n+\t(thumb_exit): Remove last unnecessary set of regs_to_pop.\n+\n 2017-06-28  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n \n \t* config/s390/predicates.md: Use s390_rel_address_ok_p."}, {"sha": "c00bdd80b8c84e931574bc2dd2d87ebe9af80132", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da9c26dd266f4af21d7f57520c2a804375f4457f/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da9c26dd266f4af21d7f57520c2a804375f4457f/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=da9c26dd266f4af21d7f57520c2a804375f4457f", "patch": "@@ -13614,10 +13614,7 @@ gen_ldm_seq (rtx *operands, int nops, bool sort_regs)\n       emit_insn (gen_addsi3 (newbase, base_reg_rtx, GEN_INT (offset)));\n       offset = 0;\n       if (!TARGET_THUMB1)\n-\t{\n-\t  base_reg = regs[0];\n-\t  base_reg_rtx = newbase;\n-\t}\n+\tbase_reg_rtx = newbase;\n     }\n \n   for (i = 0; i < nops; i++)\n@@ -14141,7 +14138,6 @@ arm_gen_movmemqi (rtx *operands)\n {\n   HOST_WIDE_INT in_words_to_go, out_words_to_go, last_bytes;\n   HOST_WIDE_INT srcoffset, dstoffset;\n-  int i;\n   rtx src, dst, srcbase, dstbase;\n   rtx part_bytes_reg = NULL;\n   rtx mem;\n@@ -14171,7 +14167,7 @@ arm_gen_movmemqi (rtx *operands)\n   if (out_words_to_go != in_words_to_go && ((in_words_to_go - 1) & 3) != 0)\n     part_bytes_reg = gen_rtx_REG (SImode, (in_words_to_go - 1) & 3);\n \n-  for (i = 0; in_words_to_go >= 2; i+=4)\n+  while (in_words_to_go >= 2)\n     {\n       if (in_words_to_go > 4)\n \temit_insn (arm_gen_load_multiple (arm_regs_in_sequence, 4, src,\n@@ -21725,8 +21721,8 @@ arm_expand_prologue (void)\n \t will prevent the scheduler from moving stores to the frame\n \t before the stack adjustment.  */\n       if (frame_pointer_needed)\n-\tinsn = emit_insn (gen_stack_tie (stack_pointer_rtx,\n-\t\t\t\t\t hard_frame_pointer_rtx));\n+\temit_insn (gen_stack_tie (stack_pointer_rtx,\n+\t\t\t\t  hard_frame_pointer_rtx));\n     }\n \n \n@@ -23811,7 +23807,6 @@ thumb_pop (FILE *f, unsigned long mask)\n {\n   int regno;\n   int lo_mask = mask & 0xFF;\n-  int pushed_words = 0;\n \n   gcc_assert (mask);\n \n@@ -23834,8 +23829,6 @@ thumb_pop (FILE *f, unsigned long mask)\n \n \t  if ((lo_mask & ~1) != 0)\n \t    fprintf (f, \", \");\n-\n-\t  pushed_words++;\n \t}\n     }\n \n@@ -24105,9 +24098,6 @@ thumb_exit (FILE *f, int reg_containing_return_addr)\n       move_to     = number_of_first_bit_set (regs_to_pop);\n \n       asm_fprintf (f, \"\\tmov\\t%r, %r\\n\", move_to, popped_into);\n-\n-      regs_to_pop &= ~(1 << move_to);\n-\n       --pops_needed;\n     }\n "}]}