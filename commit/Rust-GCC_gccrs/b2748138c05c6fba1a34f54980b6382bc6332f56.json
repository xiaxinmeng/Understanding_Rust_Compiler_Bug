{"sha": "b2748138c05c6fba1a34f54980b6382bc6332f56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI3NDgxMzhjMDVjNmZiYTFhMzRmNTQ5ODBiNjM4MmJjNjMzMmY1Ng==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-09-08T00:16:23Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-09-08T00:16:23Z"}, "message": "Daily bump.", "tree": {"sha": "fa7444f460cff5a1a84caca1e959304e9cb5ae6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa7444f460cff5a1a84caca1e959304e9cb5ae6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2748138c05c6fba1a34f54980b6382bc6332f56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2748138c05c6fba1a34f54980b6382bc6332f56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2748138c05c6fba1a34f54980b6382bc6332f56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2748138c05c6fba1a34f54980b6382bc6332f56/comments", "author": null, "committer": null, "parents": [{"sha": "b552c4e601c7fdc4d341e29cc1ed6081d42b00d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b552c4e601c7fdc4d341e29cc1ed6081d42b00d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b552c4e601c7fdc4d341e29cc1ed6081d42b00d0"}], "stats": {"total": 283, "additions": 282, "deletions": 1}, "files": [{"sha": "4283c00f272f23ee2cfa7fd3036bf07426b921c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 150, "deletions": 0, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2748138c05c6fba1a34f54980b6382bc6332f56/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2748138c05c6fba1a34f54980b6382bc6332f56/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b2748138c05c6fba1a34f54980b6382bc6332f56", "patch": "@@ -1,3 +1,153 @@\n+2021-09-07  Takayuki 'January June' Suwa  <jjsuwa_sys3175@yahoo.co.jp>\n+\n+\tPR target/102115\n+\t* config/xtensa/xtensa.c (xtensa_emit_move_sequence): Add\n+\t'CONST_INT_P (src)' to the condition of the block that tries to\n+\teliminate literal when loading integer contant.\n+\n+2021-09-07  David Faust  <david.faust@oracle.com>\n+\n+\t* doc/extend.texi (BPF Type Attributes) New node.\n+\tDocument new preserve_access_index attribute.\n+\tDocument new preserve_access_index builtin.\n+\t* doc/invoke.texi: Document -mco-re and -mno-co-re options.\n+\n+2021-09-07  David Faust  <david.faust@oracle.com>\n+\n+\t* config/bpf/bpf.c: Adjust includes.\n+\t(bpf_handle_preserve_access_index_attribute): New function.\n+\t(bpf_attribute_table): Use it here.\n+\t(bpf_builtins): Add BPF_BUILTIN_PRESERVE_ACCESS_INDEX.\n+\t(bpf_option_override): Handle \"-mco-re\" option.\n+\t(bpf_asm_init_sections): New.\n+\t(TARGET_ASM_INIT_SECTIONS): Redefine.\n+\t(bpf_file_end): New.\n+\t(TARGET_ASM_FILE_END): Redefine.\n+\t(bpf_init_builtins): Add \"__builtin_preserve_access_index\".\n+\t(bpf_core_compute, bpf_core_get_index): New.\n+\t(is_attr_preserve_access): New.\n+\t(bpf_expand_builtin): Handle new builtins.\n+\t(bpf_core_newdecl, bpf_core_is_maybe_aggregate_access): New.\n+\t(bpf_core_walk): New.\n+\t(bpf_resolve_overloaded_builtin): New.\n+\t(TARGET_RESOLVE_OVERLOADED_BUILTIN): Redefine.\n+\t(handle_attr): New.\n+\t(pass_bpf_core_attr): New RTL pass.\n+\t* config/bpf/bpf-passes.def: New file.\n+\t* config/bpf/bpf-protos.h (make_pass_bpf_core_attr): New.\n+\t* config/bpf/coreout.c: New file.\n+\t* config/bpf/coreout.h: Likewise.\n+\t* config/bpf/t-bpf (TM_H): Add $(srcdir)/config/bpf/coreout.h.\n+\t(coreout.o): New rule.\n+\t(PASSES_EXTRA): Add $(srcdir)/config/bpf/bpf-passes.def.\n+\t* config.gcc (bpf): Add coreout.h to extra_headers.\n+\tAdd coreout.o to extra_objs.\n+\tAdd $(srcdir)/config/bpf/coreout.c to target_gtfiles.\n+\n+2021-09-07  David Faust  <david.faust@oracle.com>\n+\n+\t* btfout.c (get_btf_id): Function is no longer static.\n+\t* ctfc.h: Expose it here.\n+\n+2021-09-07  David Faust  <david.faust@oracle.com>\n+\n+\t* ctfc.c (ctf_lookup_tree_type): New function.\n+\t* ctfc.h: Likewise.\n+\n+2021-09-07  David Faust  <david.faust@oracle.com>\n+\n+\t* ctfc.c (ctf_dtd_lookup): Function is no longer static.\n+\t* ctfc.h: Analogous change.\n+\n+2021-09-07  David Faust  <david.faust@oracle.com>\n+\n+\t* dwarf2out.c (lookup_type_die): Function is no longer static.\n+\t* dwarf2out.h: Expose it here.\n+\n+2021-09-07  Indu Bhagat  <indu.bhagat@oracle.com>\n+\n+\t* dwarf2ctf.c (ctf_debug_finalize): Make it static.\n+\t(ctf_debug_early_finish): New definition.\n+\t(ctf_debug_finish): Likewise.\n+\t* dwarf2ctf.h (ctf_debug_finalize): Remove declaration.\n+\t(ctf_debug_early_finish): New declaration.\n+\t(ctf_debug_finish): Likewise.\n+\t* dwarf2out.c (dwarf2out_finish): Invoke ctf_debug_finish.\n+\t(dwarf2out_early_finish): Invoke ctf_debug_early_finish.\n+\n+2021-09-07  Indu Bhagat  <indu.bhagat@oracle.com>\n+\n+\t* config/bpf/bpf.c (bpf_option_override): For BPF backend, disable LTO\n+\tsupport when compiling for CO-RE.\n+\t* config/bpf/bpf.opt: Add new command line option -mco-re.\n+\n+2021-09-07  Indu Bhagat  <indu.bhagat@oracle.com>\n+\n+\t* flag-types.h (enum debug_info_type): Add new enum\n+\tDINFO_TYPE_BTF_WITH_CORE.\n+\t(BTF_WITH_CORE_DEBUG): New bitmask.\n+\t* flags.h (btf_with_core_debuginfo_p): New declaration.\n+\t* opts.c (btf_with_core_debuginfo_p): New definition.\n+\n+2021-09-07  Jason Merrill  <jason@redhat.com>\n+\n+\t* tree.h (error_operand_p): Change to inline function.\n+\n+2021-09-07  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* tree-ssa-threadedge.c (forwarder_block_p): Rename to...\n+\t(empty_block_with_phis_p): ...this.\n+\t(potentially_threadable_block): Same.\n+\t(jump_threader::thread_through_normal_block): Same.\n+\n+2021-09-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR debug/101947\n+\t* dwarf2out.c (mark_base_types): New overloaded function.\n+\t(dwarf2out_early_finish): Invoke it on the COMDAT type list as well\n+\tas the compilation unit, and call move_marked_base_types afterward.\n+\n+2021-09-07  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/85819\n+\t* config/i386/i386-expand.c (ix86_expand_convert_uns_sisf_sse):\n+\tEnable FMA.\n+\t(ix86_expand_vector_convert_uns_vsivsf): Likewise.\n+\n+2021-09-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/102226\n+\t* tree-vect-loop.c (vect_transform_cycle_phi): Record\n+\tthe converted value for the epilogue PHI use.\n+\n+2021-09-07  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/80223\n+\t* ipa-inline.c (can_inline_edge_p): Similarly to sanitizer\n+\toptions, do not inline when no_profile_instrument_function\n+\tattributes are different in early inliner. It's fine to inline\n+\tit after PGO instrumentation.\n+\n+2021-09-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/101555\n+\t* tree-ssa-pre.c (translate_vuse_through_block): Do not\n+\tperform an alias walk to determine the validity of the\n+\tmem at the start of the block which is already guaranteed\n+\tby means of prune_clobbered_mems.\n+\t(phi_translate_1): Pass edge to translate_vuse_through_block.\n+\n+2021-09-07  Xionghu Luo  <luoxhu@linux.ibm.com>\n+\n+\tPR target/97142\n+\t* config/rs6000/rs6000.md (fmod<mode>3): New define_expand.\n+\t(remainder<mode>3): Likewise.\n+\n+2021-09-07  YunQiang Su  <yunqiang.su@cipunited.com>\n+\n+\t* config/mips/mips.c (mips_file_start): add .module for\n+\t  arch and ase.\n+\n 2021-09-06  Roger Sayle  <roger@nextmovesoftware.com>\n \n \t* wide-int.cc (wi::clz): Reorder tests to ensure the result"}, {"sha": "f1d7f5b06bc0327a78561362e50f7d364f483452", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2748138c05c6fba1a34f54980b6382bc6332f56/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2748138c05c6fba1a34f54980b6382bc6332f56/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=b2748138c05c6fba1a34f54980b6382bc6332f56", "patch": "@@ -1 +1 @@\n-20210907\n+20210908"}, {"sha": "3d40b9aed9a354cabd3777ba0c1aa24834d9c031", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2748138c05c6fba1a34f54980b6382bc6332f56/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2748138c05c6fba1a34f54980b6382bc6332f56/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=b2748138c05c6fba1a34f54980b6382bc6332f56", "patch": "@@ -1,3 +1,7 @@\n+2021-09-07  Marcel Vollweiler  <marcel@codesourcery.com>\n+\n+\t* c-omp.c (c_finish_omp_flush): Handle MEMMODEL_SEQ_CST.\n+\n 2021-09-03  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* c-ada-spec.c (dump_ads): Generate pragmas to disable style checks"}, {"sha": "9deeb0e3f7eb2a03fdcbb37b87224290ad8e743d", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2748138c05c6fba1a34f54980b6382bc6332f56/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2748138c05c6fba1a34f54980b6382bc6332f56/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=b2748138c05c6fba1a34f54980b6382bc6332f56", "patch": "@@ -1,3 +1,8 @@\n+2021-09-07  Marcel Vollweiler  <marcel@codesourcery.com>\n+\n+\t* c-parser.c (c_parser_omp_flush): Parse 'seq_cst' clause on 'flush'\n+\tdirective.\n+\n 2021-09-01  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* c-decl.c (enum deprecated_states): Add unavailable state."}, {"sha": "2b4bbdc18e99edb11469d7c3dbacada7ed018470", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2748138c05c6fba1a34f54980b6382bc6332f56/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2748138c05c6fba1a34f54980b6382bc6332f56/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b2748138c05c6fba1a34f54980b6382bc6332f56", "patch": "@@ -1,3 +1,17 @@\n+2021-09-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/100495\n+\t* constexpr.c (maybe_save_constexpr_fundef): Save body even for\n+\tconstexpr deleting dtors.\n+\t(cxx_eval_call_expression): Don't use DECL_CLONED_FUNCTION for\n+\tdeleting dtors.\n+\n+2021-09-07  Marcel Vollweiler  <marcel@codesourcery.com>\n+\n+\t* parser.c (cp_parser_omp_flush): Parse 'seq_cst' clause on 'flush'\n+\tdirective.\n+\t* semantics.c (finish_omp_flush): Handle MEMMODEL_SEQ_CST.\n+\n 2021-09-03  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* coroutines.cc (register_local_var_uses): Do not mangle"}, {"sha": "6c479da6e1cd226f3fec72191c15ba43cf15ed6e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2748138c05c6fba1a34f54980b6382bc6332f56/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2748138c05c6fba1a34f54980b6382bc6332f56/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b2748138c05c6fba1a34f54980b6382bc6332f56", "patch": "@@ -1,3 +1,15 @@\n+2021-09-07  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/101327\n+\t* expr.c (find_array_element): When bounds cannot be determined as\n+\tconstant, return error instead of aborting.\n+\n+2021-09-07  Marcel Vollweiler  <marcel@codesourcery.com>\n+\n+\t* openmp.c (gfc_match_omp_flush): Parse 'seq_cst' clause on 'flush'\n+\tdirective.\n+\t* trans-openmp.c (gfc_trans_omp_flush): Handle OMP_MEMORDER_SEQ_CST.\n+\n 2021-09-03  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* decl.c (gfc_verify_c_interop_param): Reject pointer with"}, {"sha": "92c978e4979f7a376a2d5379ef1617fda34eb120", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2748138c05c6fba1a34f54980b6382bc6332f56/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2748138c05c6fba1a34f54980b6382bc6332f56/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b2748138c05c6fba1a34f54980b6382bc6332f56", "patch": "@@ -1,3 +1,67 @@\n+2021-09-07  David Faust  <david.faust@oracle.com>\n+\n+\t* gcc.target/bpf/core-attr-1.c: New test.\n+\t* gcc.target/bpf/core-attr-2.c: Likewise.\n+\t* gcc.target/bpf/core-attr-3.c: Likewise.\n+\t* gcc.target/bpf/core-attr-4.c: Likewise\n+\t* gcc.target/bpf/core-builtin-1.c: Likewise\n+\t* gcc.target/bpf/core-builtin-2.c: Likewise.\n+\t* gcc.target/bpf/core-builtin-3.c: Likewise.\n+\t* gcc.target/bpf/core-section-1.c: Likewise.\n+\n+2021-09-07  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* gcc.dg/no_profile_instrument_function-attr-2.c: Fix\n+\ttypo in last change.\n+\n+2021-09-07  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/101327\n+\t* gfortran.dg/pr101327.f90: New test.\n+\n+2021-09-07  Indu Bhagat  <indu.bhagat@oracle.com>\n+\n+\t* gcc.target/bpf/core-lto-1.c: New test.\n+\n+2021-09-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/100495\n+\t* g++.dg/cpp2a/constexpr-new21.C: New test.\n+\n+2021-09-07  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tPR target/85819\n+\t* gcc.target/i386/pr85819-1a.c: New test.\n+\t* gcc.target/i386/pr85819-1b.c: Likewise.\n+\t* gcc.target/i386/pr85819-2a.c: Likewise.\n+\t* gcc.target/i386/pr85819-2b.c: Likewise.\n+\t* gcc.target/i386/pr85819-2c.c: Likewise.\n+\t* gcc.target/i386/pr85819-3.c: Likewise.\n+\n+2021-09-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/102226\n+\t* g++.dg/vect/pr102226.cc: New testcase.\n+\n+2021-09-07  Marcel Vollweiler  <marcel@codesourcery.com>\n+\n+\t* c-c++-common/gomp/flush-1.c: Add test case for 'seq_cst'.\n+\t* c-c++-common/gomp/flush-2.c: Add test case for 'seq_cst'.\n+\t* g++.dg/gomp/attrs-1.C: Adapt test to handle all flush clauses.\n+\t* g++.dg/gomp/attrs-2.C: Adapt test to handle all flush clauses.\n+\t* gfortran.dg/gomp/flush-1.f90: Add test case for 'seq_cst'.\n+\t* gfortran.dg/gomp/flush-2.f90: Add test case for 'seq_cst'.\n+\n+2021-09-07  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/80223\n+\t* gcc.dg/no_profile_instrument_function-attr-2.c: New test.\n+\n+2021-09-07  Xionghu Luo  <luoxhu@linux.ibm.com>\n+\n+\tPR target/97142\n+\t* gcc.target/powerpc/pr97142.c: New test.\n+\n 2021-09-06  H.J. Lu  <hjl.tools@gmail.com>\n \n \tPR target/89984"}, {"sha": "89ef63db8d1971bd446126fea0f0bb595586ea45", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2748138c05c6fba1a34f54980b6382bc6332f56/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2748138c05c6fba1a34f54980b6382bc6332f56/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=b2748138c05c6fba1a34f54980b6382bc6332f56", "patch": "@@ -1,3 +1,23 @@\n+2021-09-07  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* Makefile.am (gfor_built_src): Depend on\n+\tinclude/ISO_Fortran_binding.h not on ISO_Fortran_binding.h.\n+\t(ISO_Fortran_binding.h): Rename make target to ...\n+\t(include/ISO_Fortran_binding.h): ... this.\n+\t* Makefile.in: Regenerate.\n+\n+2021-09-07  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\t* ISO_Fortran_binding-1-tmpl.h: Deleted.\n+\t* ISO_Fortran_binding-2-tmpl.h: Deleted.\n+\t* ISO_Fortran_binding-3-tmpl.h: Deleted.\n+\t* ISO_Fortran_binding.h: New file to replace the above.\n+\t* Makefile.am (gfor_cdir): Remove MULTISUBDIR.\n+\t(ISO_Fortran_binding.h): Simplify to just copy the file.\n+\t* Makefile.in: Regenerated.\n+\t* mk-kinds-h.sh: Revert pieces no longer needed for\n+\tISO_Fortran_binding.h.\n+\n 2021-09-02  Sandra Loosemore  <sandra@codesourcery.com>\n \t    Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n "}, {"sha": "7175309f3eaf0a4c8ebb9d51e19afc0ecad2a8ef", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2748138c05c6fba1a34f54980b6382bc6332f56/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2748138c05c6fba1a34f54980b6382bc6332f56/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=b2748138c05c6fba1a34f54980b6382bc6332f56", "patch": "@@ -1,3 +1,15 @@\n+2021-09-07  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* libgomp.texi (OpenMP Implementation Status): Extend\n+\tOpenMP 5.0 section.\n+\t(OpenACC Profiling Interface): Fix typo.\n+\n+2021-09-07  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* libgomp.texi (Enabling OpenMP): Refer to OMP spec in general\n+\tnot to 4.5; link to new section.\n+\t(OpenMP Implementation Status): New.\n+\n 2021-09-06  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* testsuite/libgomp.c/target-43.c: '-latomic' for nvptx offloading."}]}