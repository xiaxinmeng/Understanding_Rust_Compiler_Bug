{"sha": "fc53a8251da0a419ffc09ad00fac1136a814ecf4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM1M2E4MjUxZGEwYTQxOWZmYzA5YWQwMGZhYzExMzZhODE0ZWNmNA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2006-10-04T07:52:14Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2006-10-04T07:52:14Z"}, "message": "pop_test.hpp: Correct typo.\n\n2006-10-04  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* testsuite/util/performance/priority_queue/mem_usage/\n\tpop_test.hpp: Correct typo.\n\t* testsuite/util/performance/assoc/mem_usage/\n\tmultimap_insert_test.hpp: Same.\n\t* testsuite/util/performance/assoc/mem_usage/erase_test.hpp: Same.\n\nFrom-SVN: r117427", "tree": {"sha": "21f6ea79836308e8072334f95b762519c3dd3751", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21f6ea79836308e8072334f95b762519c3dd3751"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc53a8251da0a419ffc09ad00fac1136a814ecf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc53a8251da0a419ffc09ad00fac1136a814ecf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc53a8251da0a419ffc09ad00fac1136a814ecf4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc53a8251da0a419ffc09ad00fac1136a814ecf4/comments", "author": null, "committer": null, "parents": [{"sha": "1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cd7d7bf707cf5c6ecdf223de4175c5a6d01ca7c"}], "stats": {"total": 38, "additions": 29, "deletions": 9}, "files": [{"sha": "93c78d4e5153bb1d2063ffaf355f1406d1b9efe5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc53a8251da0a419ffc09ad00fac1136a814ecf4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc53a8251da0a419ffc09ad00fac1136a814ecf4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=fc53a8251da0a419ffc09ad00fac1136a814ecf4", "patch": "@@ -1,3 +1,11 @@\n+2006-10-04  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* testsuite/util/performance/priority_queue/mem_usage/\n+\tpop_test.hpp: Correct typo.\n+\t* testsuite/util/performance/assoc/mem_usage/\n+\tmultimap_insert_test.hpp: Same.\n+\t* testsuite/util/performance/assoc/mem_usage/erase_test.hpp: Same.\n+\n 2006-10-03  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/util/testsuite_allocator.h (allocation_tracker): To"}, {"sha": "3d2804e81f5ac0e8060d37d736bd44b2a98c094f", "filename": "libstdc++-v3/testsuite/util/performance/assoc/mem_usage/erase_test.hpp", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc53a8251da0a419ffc09ad00fac1136a814ecf4/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Fmem_usage%2Ferase_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc53a8251da0a419ffc09ad00fac1136a814ecf4/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Fmem_usage%2Ferase_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Fmem_usage%2Ferase_test.hpp?ref=fc53a8251da0a419ffc09ad00fac1136a814ecf4", "patch": "@@ -96,14 +96,17 @@ namespace pb_ds\n \t  It ins_it_e = m_ins_b;\n \t  std::advance(ins_it_e, ins_size);\n \n+\t  typedef __gnu_test::tracker_allocator_counter counter_type;\n \t  __gnu_test::tracker_allocator<char> alloc;\n-\t  const size_t init_mem = alloc.get_allocation_count() - alloc.get_deallocation_count();\n+\t  const size_t init_mem = counter_type::get_allocation_count() \n+\t                          - counter_type::get_deallocation_count();\n \t  Cntnr cntnr(ins_it_b, ins_it_e);\n \n \t  while (cntnr.size() > 1)\n             cntnr.erase(*cntnr.begin());\n \n-\t  const size_t final_mem = alloc.get_allocation_count() - alloc.get_deallocation_count();\n+\t  const size_t final_mem = counter_type::get_allocation_count() \n+\t                         - counter_type::get_deallocation_count();\n \t  assert(final_mem > init_mem);\n \t  const size_t delta_mem = final_mem - init_mem;\n \t  res_set_fmt.add_res(ins_size, static_cast<double>(delta_mem));"}, {"sha": "1fb4eef90032222de518b103e4c28d0702d0641b", "filename": "libstdc++-v3/testsuite/util/performance/assoc/mem_usage/multimap_insert_test.hpp", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc53a8251da0a419ffc09ad00fac1136a814ecf4/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Fmem_usage%2Fmultimap_insert_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc53a8251da0a419ffc09ad00fac1136a814ecf4/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Fmem_usage%2Fmultimap_insert_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fassoc%2Fmem_usage%2Fmultimap_insert_test.hpp?ref=fc53a8251da0a419ffc09ad00fac1136a814ecf4", "patch": "@@ -116,12 +116,15 @@ namespace pb_ds\n     multimap_insert_test<It, Native>::\n     insert(Cntnr, It ins_it_b, It ins_it_e, pb_ds::detail::true_type)\n     {\n+      typedef __gnu_test::tracker_allocator_counter counter_type;\n       __gnu_test::tracker_allocator<char> alloc;\n-      const size_t init_mem = alloc.get_allocation_count() - alloc.get_deallocation_count();\n+      const size_t init_mem = counter_type::get_allocation_count() \n+\t                      - counter_type::get_deallocation_count();\n       Cntnr cntnr;\n       for (It ins_it = ins_it_b; ins_it != ins_it_e; ++ins_it)\n         cntnr.insert((typename Cntnr::const_reference)(*ins_it));\n-      const size_t final_mem = alloc.get_allocation_count() - alloc.get_deallocation_count();\n+      const size_t final_mem = counter_type::get_allocation_count() \n+\t                       - counter_type::get_deallocation_count();\n       assert(final_mem > init_mem);\n       return (final_mem - init_mem);\n     }\n@@ -132,12 +135,15 @@ namespace pb_ds\n     multimap_insert_test<It, Native>::\n     insert(Cntnr, It ins_it_b, It ins_it_e, pb_ds::detail::false_type)\n     {\n+      typedef __gnu_test::tracker_allocator_counter counter_type;\n       __gnu_test::tracker_allocator<char> alloc;\n-      const size_t init_mem = alloc.get_allocation_count() - alloc.get_deallocation_count();\n+      const size_t init_mem = counter_type::get_allocation_count() \n+\t                      - counter_type::get_deallocation_count();\n       Cntnr cntnr;\n       for (It ins_it = ins_it_b; ins_it != ins_it_e; ++ins_it)\n         cntnr[ins_it->first].insert(ins_it->second);\n-      const size_t final_mem = alloc.get_allocation_count() - alloc.get_deallocation_count();\n+      const size_t final_mem =  counter_type::get_allocation_count() \n+\t                        - counter_type::get_deallocation_count();\n       assert(final_mem > init_mem);\n       return (final_mem - init_mem);\n     }"}, {"sha": "a3b8486f191c6081038750314dff7122b56b98ec", "filename": "libstdc++-v3/testsuite/util/performance/priority_queue/mem_usage/pop_test.hpp", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc53a8251da0a419ffc09ad00fac1136a814ecf4/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fpriority_queue%2Fmem_usage%2Fpop_test.hpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc53a8251da0a419ffc09ad00fac1136a814ecf4/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fpriority_queue%2Fmem_usage%2Fpop_test.hpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Fperformance%2Fpriority_queue%2Fmem_usage%2Fpop_test.hpp?ref=fc53a8251da0a419ffc09ad00fac1136a814ecf4", "patch": "@@ -95,17 +95,20 @@ namespace pb_ds\n \t  It ins_it_e = m_ins_b;\n \t  std::advance(ins_it_e, ins_size);\n \n+\t  typedef __gnu_test::tracker_allocator_counter counter_type;\n \t  __gnu_test::tracker_allocator<char> alloc;\n \n-\t  const size_t init_mem = alloc.get_allocation_count() - alloc.get_deallocation_count();\n+\t  const size_t init_mem = counter_type::get_allocation_count() \n+\t                          - counter_type::get_deallocation_count();\n \t  Cntnr cntnr;\n \t  for (It ins_it =    ins_it_b; ins_it != ins_it_e; ++ins_it)\n             cntnr.push(ins_it->first);\n \n \t  while (cntnr.size() > 1)\n             cntnr.pop();\n \n-\t  const size_t final_mem = alloc.get_allocation_count() - alloc.get_deallocation_count();\n+\t  const size_t final_mem = counter_type::get_allocation_count() \n+\t                           - counter_type::get_deallocation_count();\n \t  assert(final_mem > init_mem);\n \t  const size_t delta_mem = final_mem - init_mem;\n \t  res_set_fmt.add_res(ins_size, static_cast<double>(delta_mem));\n@@ -114,5 +117,5 @@ namespace pb_ds\n   } // namespace test\n } // namespace pb_ds\n \n-#endif // #ifndef PB_DS_POP_TEST_HPP\n+#endif \n "}]}