{"sha": "5c825fc20b3eb4103360771e557739bd60df1fff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM4MjVmYzIwYjNlYjQxMDMzNjA3NzFlNTU3NzM5YmQ2MGRmMWZmZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1997-09-16T21:08:30Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-09-16T21:08:30Z"}, "message": "decl.c (store_parm_decls): last_parm_cleanup_insn is the insn after the exception spec.\n\n\t* decl.c (store_parm_decls): last_parm_cleanup_insn is the insn\n \tafter the exception spec.\n\nFrom-SVN: r15497", "tree": {"sha": "a890d01e42cdefb5aba18bcc5d7a10fe91211caf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a890d01e42cdefb5aba18bcc5d7a10fe91211caf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c825fc20b3eb4103360771e557739bd60df1fff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c825fc20b3eb4103360771e557739bd60df1fff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c825fc20b3eb4103360771e557739bd60df1fff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c825fc20b3eb4103360771e557739bd60df1fff/comments", "author": null, "committer": null, "parents": [{"sha": "21002281e55cbe5b1c8fbacc9074629612dd1b4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21002281e55cbe5b1c8fbacc9074629612dd1b4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21002281e55cbe5b1c8fbacc9074629612dd1b4a"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "3edc73c57689cb1ad868968ac588d580a40ec4f7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c825fc20b3eb4103360771e557739bd60df1fff/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c825fc20b3eb4103360771e557739bd60df1fff/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5c825fc20b3eb4103360771e557739bd60df1fff", "patch": "@@ -1,3 +1,8 @@\n+Tue Sep 16 14:06:56 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* decl.c (store_parm_decls): last_parm_cleanup_insn is the insn\n+ \tafter the exception spec.\n+\n Mon Sep 15 11:52:13 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* call.c (null_ptr_cst_p): Integer type, not integral type."}, {"sha": "0a8df4c92cea2e48118900e273da48977bed1cfc", "filename": "gcc/cp/NEWS", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c825fc20b3eb4103360771e557739bd60df1fff/gcc%2Fcp%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c825fc20b3eb4103360771e557739bd60df1fff/gcc%2Fcp%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FNEWS?ref=5c825fc20b3eb4103360771e557739bd60df1fff", "patch": "@@ -7,6 +7,8 @@\n \n   for more information.\n \n+* Member function templates are now supported.\n+\n * New flags -Wsign-promo (warn about potentially confusing promotions in\n   overload resolution), -Wno-pmf-conversion (don't warn about converting\n   from a bound member function pointer to function pointer)."}, {"sha": "c57f522e7a39945151a760f2eb02a06f95750627", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c825fc20b3eb4103360771e557739bd60df1fff/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c825fc20b3eb4103360771e557739bd60df1fff/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=5c825fc20b3eb4103360771e557739bd60df1fff", "patch": "@@ -11680,15 +11680,14 @@ store_parm_decls ()\n       expand_start_bindings (0);\n     }\n \n-  last_parm_cleanup_insn = get_last_insn ();\n-\n   if (! processing_template_decl && flag_exceptions)\n     {\n       /* Do the starting of the exception specifications, if we have any.  */\n       if (TYPE_RAISES_EXCEPTIONS (TREE_TYPE (current_function_decl)))\n \texpand_start_eh_spec ();\n     }\n \n+  last_parm_cleanup_insn = get_last_insn ();\n   last_dtor_insn = get_last_insn ();\n }\n "}]}