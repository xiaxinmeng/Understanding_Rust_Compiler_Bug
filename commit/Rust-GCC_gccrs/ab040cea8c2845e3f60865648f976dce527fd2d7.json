{"sha": "ab040cea8c2845e3f60865648f976dce527fd2d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWIwNDBjZWE4YzI4NDVlM2Y2MDg2NTY0OGY5NzZkY2U1MjdmZDJkNw==", "commit": {"author": {"name": "Joern Rennecke", "email": "amylaar@spamcop.net", "date": "2010-11-04T14:58:40Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2010-11-04T14:58:40Z"}, "message": "re PR bootstrap/44756 ([meta-bug] --enable-werror-always issues)\n\n        PR bootstrap/44756\n        * ifcvt.c (noce_emit_cmove): Add ATTRIBUTE_UNUSED to target and\n        unsignedp.\n        * reload1.c (set_reload_reg): Add ATTRIBUTE_UNUSED to regno.\n\nFrom-SVN: r166313", "tree": {"sha": "7115c4f4b31194460ec6ff126d78685d1c9873b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7115c4f4b31194460ec6ff126d78685d1c9873b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab040cea8c2845e3f60865648f976dce527fd2d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab040cea8c2845e3f60865648f976dce527fd2d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab040cea8c2845e3f60865648f976dce527fd2d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab040cea8c2845e3f60865648f976dce527fd2d7/comments", "author": null, "committer": null, "parents": [{"sha": "844d5fca1fcf3c1adf83b7c0b8e0d8e4141b5c33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/844d5fca1fcf3c1adf83b7c0b8e0d8e4141b5c33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/844d5fca1fcf3c1adf83b7c0b8e0d8e4141b5c33"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "5ec536dcf34f77c627f5ed0c35c45eb860e3948d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab040cea8c2845e3f60865648f976dce527fd2d7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab040cea8c2845e3f60865648f976dce527fd2d7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ab040cea8c2845e3f60865648f976dce527fd2d7", "patch": "@@ -21,6 +21,11 @@\n \t* emit-rtl.c (gen_rtx_REG): Before using PIC_OFFSET_TABLE_REGNUM\n \tas an index, check it is not INVALID_REGNUM.\n \n+\tPR bootstrap/44756\n+\t* ifcvt.c (noce_emit_cmove): Add ATTRIBUTE_UNUSED to target and\n+\tunsignedp.\n+\t* reload1.c (set_reload_reg): Add ATTRIBUTE_UNUSED to regno.\n+\n 2010-11-04  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/46213"}, {"sha": "58ee90c4b21abd763fd4020638ddbdad6c901ea1", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab040cea8c2845e3f60865648f976dce527fd2d7/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab040cea8c2845e3f60865648f976dce527fd2d7/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=ab040cea8c2845e3f60865648f976dce527fd2d7", "patch": "@@ -1333,8 +1333,8 @@ static rtx\n noce_emit_cmove (struct noce_if_info *if_info, rtx x, enum rtx_code code,\n \t\t rtx cmp_a, rtx cmp_b, rtx vfalse, rtx vtrue)\n {\n-  rtx target;\n-  int unsignedp;\n+  rtx target ATTRIBUTE_UNUSED;\n+  int unsignedp ATTRIBUTE_UNUSED;\n \n   /* If earliest == jump, try to build the cmove insn directly.\n      This is helpful when combine has created some complex condition"}, {"sha": "a8a656e6e4bbfc7364818254836996656c629b3a", "filename": "gcc/reload1.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab040cea8c2845e3f60865648f976dce527fd2d7/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab040cea8c2845e3f60865648f976dce527fd2d7/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=ab040cea8c2845e3f60865648f976dce527fd2d7", "patch": "@@ -6025,7 +6025,9 @@ failed_reload (rtx insn, int r)\n static int\n set_reload_reg (int i, int r)\n {\n-  int regno;\n+  /* regno is 'set but not used' if HARD_REGNO_MODE_OK doesn't use its first\n+     parameter.  */\n+  int regno ATTRIBUTE_UNUSED;\n   rtx reg = spill_reg_rtx[i];\n \n   if (reg == 0 || GET_MODE (reg) != rld[r].mode)"}]}