{"sha": "3c241c19b0770d5f13dcdb7353f3e66fab2a8de1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MyNDFjMTliMDc3MGQ1ZjEzZGNkYjczNTNmM2U2NmZhYjJhOGRlMQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2004-02-04T23:58:11Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2004-02-04T23:58:11Z"}, "message": "reload.c (find_equiv_reg): When checking for register overlap, don't index hard_regno_nregs with a pseudo-reg.\n\n\t* reload.c (find_equiv_reg): When checking for register overlap,\n\tdon't index hard_regno_nregs with a pseudo-reg.\n\nFrom-SVN: r77278", "tree": {"sha": "e48646a1fc93d9be9ff6de8341380a95b52e689d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e48646a1fc93d9be9ff6de8341380a95b52e689d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c241c19b0770d5f13dcdb7353f3e66fab2a8de1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c241c19b0770d5f13dcdb7353f3e66fab2a8de1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c241c19b0770d5f13dcdb7353f3e66fab2a8de1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c241c19b0770d5f13dcdb7353f3e66fab2a8de1/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a322288b35dccf90cf73143c34f5c7fd9ebc42e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a322288b35dccf90cf73143c34f5c7fd9ebc42e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a322288b35dccf90cf73143c34f5c7fd9ebc42e8"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "848a04e945ce4423aef47bedc44bdf1d42eb2396", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c241c19b0770d5f13dcdb7353f3e66fab2a8de1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c241c19b0770d5f13dcdb7353f3e66fab2a8de1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c241c19b0770d5f13dcdb7353f3e66fab2a8de1", "patch": "@@ -1,3 +1,8 @@\n+2004-02-04  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* reload.c (find_equiv_reg): When checking for register overlap,\n+\tdon't index hard_regno_nregs with a pseudo-reg.\n+\n 2004-02-04  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390.c (s390_trampoline_template): Remove gen_rtx()."}, {"sha": "ae123cffdcabcd43f6ddbdcf7b7f9d294fa3d236", "filename": "gcc/reload.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c241c19b0770d5f13dcdb7353f3e66fab2a8de1/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c241c19b0770d5f13dcdb7353f3e66fab2a8de1/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=3c241c19b0770d5f13dcdb7353f3e66fab2a8de1", "patch": "@@ -6587,17 +6587,16 @@ find_equiv_reg (rtx goal, rtx insn, enum reg_class class, int other,\n \n   /* Reject registers that overlap GOAL.  */\n \n-  if (!goal_mem && !goal_const\n-      && regno + (int) hard_regno_nregs[regno][mode] > valueno\n-      && regno < valueno + (int) hard_regno_nregs[valueno][mode])\n-    return 0;\n-\n   if (regno >= 0 && regno < FIRST_PSEUDO_REGISTER)\n     nregs = hard_regno_nregs[regno][mode];\n   else\n     nregs = 1;\n   valuenregs = hard_regno_nregs[valueno][mode];\n \n+  if (!goal_mem && !goal_const\n+      && regno + nregs > valueno && regno < valueno + valuenregs)\n+    return 0;\n+\n   /* Reject VALUE if it is one of the regs reserved for reloads.\n      Reload1 knows how to reuse them anyway, and it would get\n      confused if we allocated one without its knowledge."}]}