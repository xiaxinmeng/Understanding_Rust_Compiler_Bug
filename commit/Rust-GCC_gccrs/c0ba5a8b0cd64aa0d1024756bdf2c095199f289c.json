{"sha": "c0ba5a8b0cd64aa0d1024756bdf2c095199f289c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzBiYTVhOGIwY2Q2NGFhMGQxMDI0NzU2YmRmMmMwOTUxOTlmMjg5Yw==", "commit": {"author": {"name": "Yvan Roux", "email": "yvan.roux@linaro.org", "date": "2015-08-12T13:27:41Z"}, "committer": {"name": "Yvan Roux", "email": "yroux@gcc.gnu.org", "date": "2015-08-12T13:27:41Z"}, "message": "re PR target/67127 ([ARM] Avoiding odd-number ldrd/strd in movdi introduced a regression on armeb-linux-gnueabihf)\n\n2015-08-12  Yvan Roux  <yvan.roux@linaro.org>\n\n\tPR target/67127\n\t* config/arm/arm.md (movdi): Restrict illegitimate ldrd/strd checking\n\tto ARM core registers.\n\nFrom-SVN: r226811", "tree": {"sha": "8d38f5fe1b5c4d283a60f6a2b4ac10938f3e21de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d38f5fe1b5c4d283a60f6a2b4ac10938f3e21de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0ba5a8b0cd64aa0d1024756bdf2c095199f289c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0ba5a8b0cd64aa0d1024756bdf2c095199f289c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0ba5a8b0cd64aa0d1024756bdf2c095199f289c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0ba5a8b0cd64aa0d1024756bdf2c095199f289c/comments", "author": {"login": "yroux", "id": 2749479, "node_id": "MDQ6VXNlcjI3NDk0Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/2749479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yroux", "html_url": "https://github.com/yroux", "followers_url": "https://api.github.com/users/yroux/followers", "following_url": "https://api.github.com/users/yroux/following{/other_user}", "gists_url": "https://api.github.com/users/yroux/gists{/gist_id}", "starred_url": "https://api.github.com/users/yroux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yroux/subscriptions", "organizations_url": "https://api.github.com/users/yroux/orgs", "repos_url": "https://api.github.com/users/yroux/repos", "events_url": "https://api.github.com/users/yroux/events{/privacy}", "received_events_url": "https://api.github.com/users/yroux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "da7db2ced2f26dc763e69176e850e8175945bc46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da7db2ced2f26dc763e69176e850e8175945bc46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da7db2ced2f26dc763e69176e850e8175945bc46"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "06650098dc9b8948814cd94a91181c646e655baf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0ba5a8b0cd64aa0d1024756bdf2c095199f289c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0ba5a8b0cd64aa0d1024756bdf2c095199f289c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c0ba5a8b0cd64aa0d1024756bdf2c095199f289c", "patch": "@@ -1,3 +1,9 @@\n+2015-08-12  Yvan Roux  <yvan.roux@linaro.org>\n+\n+\tPR target/67127\n+\t* config/arm/arm.md (movdi): Restrict illegitimate ldrd/strd checking\n+\tto ARM core registers.\n+\n 2015-08-12  Nathan Sidwell  <nathan@acm.org>\n \n \t* tree-vrp.c (simplify_min_or_max_using_ranges): New."}, {"sha": "288bbb9f83638db0c5d298d17a60ff96ff3c982e", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0ba5a8b0cd64aa0d1024756bdf2c095199f289c/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0ba5a8b0cd64aa0d1024756bdf2c095199f289c/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=c0ba5a8b0cd64aa0d1024756bdf2c095199f289c", "patch": "@@ -5519,7 +5519,7 @@\n       if (!REG_P (operands[0]))\n \toperands[1] = force_reg (DImode, operands[1]);\n     }\n-  if (REG_P (operands[0]) && REGNO (operands[0]) < FIRST_VIRTUAL_REGISTER\n+  if (REG_P (operands[0]) && REGNO (operands[0]) <= LAST_ARM_REGNUM\n       && !HARD_REGNO_MODE_OK (REGNO (operands[0]), DImode))\n     {\n       /* Avoid LDRD's into an odd-numbered register pair in ARM state\n@@ -5538,7 +5538,7 @@\n \t\t      gen_highpart (SImode, operands[1]));\n       DONE;\n     }\n-  else if (REG_P (operands[1]) && REGNO (operands[1]) < FIRST_VIRTUAL_REGISTER\n+  else if (REG_P (operands[1]) && REGNO (operands[1]) <= LAST_ARM_REGNUM\n \t   && !HARD_REGNO_MODE_OK (REGNO (operands[1]), DImode))\n     {\n       /* Avoid STRD's from an odd-numbered register pair in ARM state"}]}