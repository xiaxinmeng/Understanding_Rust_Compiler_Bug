{"sha": "e53ec543e66382d2552e89077e05fe70e2a75c78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUzZWM1NDNlNjYzODJkMjU1MmU4OTA3N2UwNWZlNzBlMmE3NWM3OA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-04-03T21:51:36Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-04-03T21:51:36Z"}, "message": "PR c++/81866 - ICE with member template and default targ.\n\nThis testcase manages to find a way to look up the partial instantiation of\nB for the default argument of C before we've created the partial\ninstantiation of B as part of the normal instantiation of the members of A.\nWhich we can deal with, but we were getting confused because the partial\ninstantiation was stored with a RECORD_TYPE specialization rather than\nTEMPLATE_DECL.\n\n\t* pt.c (tsubst_template_decl): Handle getting a type from\n\tretrieve_specialization.\n\nFrom-SVN: r270138", "tree": {"sha": "e07810196903d37d30a63e7b9caacb49b8c556d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e07810196903d37d30a63e7b9caacb49b8c556d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e53ec543e66382d2552e89077e05fe70e2a75c78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e53ec543e66382d2552e89077e05fe70e2a75c78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e53ec543e66382d2552e89077e05fe70e2a75c78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e53ec543e66382d2552e89077e05fe70e2a75c78/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c17bad5326d5f1f79207409e13e80ec61934ebfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c17bad5326d5f1f79207409e13e80ec61934ebfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c17bad5326d5f1f79207409e13e80ec61934ebfe"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "888b431e09949fd94549c66c83b1e25ad321b976", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e53ec543e66382d2552e89077e05fe70e2a75c78/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e53ec543e66382d2552e89077e05fe70e2a75c78/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e53ec543e66382d2552e89077e05fe70e2a75c78", "patch": "@@ -1,5 +1,9 @@\n 2019-04-03  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/81866 - ICE with member template and default targ.\n+\t* pt.c (tsubst_template_decl): Handle getting a type from\n+\tretrieve_specialization.\n+\n \tPR c++/86586 - -fcompare-debug=-Wsign-compare.\n \t* typeck.c (cp_build_binary_op): Don't fold for -Wsign-compare.\n "}, {"sha": "9cb29d22ca3105e83e3d1276f02bd2086992f6a1", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e53ec543e66382d2552e89077e05fe70e2a75c78/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e53ec543e66382d2552e89077e05fe70e2a75c78/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=e53ec543e66382d2552e89077e05fe70e2a75c78", "patch": "@@ -13266,7 +13266,13 @@ tsubst_template_decl (tree t, tree args, tsubst_flags_t complain,\n       hash = hash_tmpl_and_args (t, full_args);\n       spec = retrieve_specialization (t, full_args, hash);\n       if (spec != NULL_TREE)\n-\treturn spec;\n+\t{\n+\t  if (TYPE_P (spec))\n+\t    /* Type partial instantiations are stored as the type by\n+\t       lookup_template_class_1, not here as the template.  */\n+\t    spec = CLASSTYPE_TI_TEMPLATE (spec);\n+\t  return spec;\n+\t}\n     }\n \n   /* Make a new template decl.  It will be similar to the"}, {"sha": "9ce35abfc4eece1893a3d74313e9a00deab70afb", "filename": "gcc/testsuite/g++.dg/template/memtmpl6.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e53ec543e66382d2552e89077e05fe70e2a75c78/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmemtmpl6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e53ec543e66382d2552e89077e05fe70e2a75c78/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmemtmpl6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmemtmpl6.C?ref=e53ec543e66382d2552e89077e05fe70e2a75c78", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/81866\n+\n+template<class>\n+struct A {\n+  template<class> struct C;\n+  template<class> struct B;\n+  template<class T = B<int> > struct C {};\n+};\n+\n+int main() {\n+  A<int>::C<> ac;\n+  return 0;\n+}"}]}