{"sha": "27a0b7f2ee9689c9a0092a6403edacdcb7158516", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdhMGI3ZjJlZTk2ODljOWEwMDkyYTY0MDNlZGFjZGNiNzE1ODUxNg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2015-06-03T15:46:41Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-06-03T15:46:41Z"}, "message": "re PR target/66275 (__attribute__((sysv_abi)) with x86_64-w64-mingw32-gcc generates incorrect code)\n\n\tPR target/66275\n\t* config/i386/i386.c (ix86_function_arg_regno): Use ix86_cfun_abi\n\tto determine current function ABI.\n\t(ix86_function_value_regno_p): Ditto.\n\ntestsuite/ChangeLog:\n\n\tPR target/66275\n\t* gcc.target/i386/pr66275.c: New test.\n\nFrom-SVN: r224094", "tree": {"sha": "2747f9a15d221bfbb9ad62dd70a5659cc7d7e05d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2747f9a15d221bfbb9ad62dd70a5659cc7d7e05d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27a0b7f2ee9689c9a0092a6403edacdcb7158516", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27a0b7f2ee9689c9a0092a6403edacdcb7158516", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27a0b7f2ee9689c9a0092a6403edacdcb7158516", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27a0b7f2ee9689c9a0092a6403edacdcb7158516/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bc51ace3600b5c9b5dcad09f16858e5727866e27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc51ace3600b5c9b5dcad09f16858e5727866e27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc51ace3600b5c9b5dcad09f16858e5727866e27"}], "stats": {"total": 37, "additions": 30, "deletions": 7}, "files": [{"sha": "3951a8e4942f20122f551222c35013d55fc2c543", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27a0b7f2ee9689c9a0092a6403edacdcb7158516/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27a0b7f2ee9689c9a0092a6403edacdcb7158516/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27a0b7f2ee9689c9a0092a6403edacdcb7158516", "patch": "@@ -1,3 +1,10 @@\n+2015-06-03  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/66275\n+\t* config/i386/i386.c (ix86_function_arg_regno): Use ix86_cfun_abi\n+\tto determine current function ABI.\n+\t(ix86_function_value_regno_p): Ditto.\n+\n 2015-06-03  Martin Liska  <mliska@suse.cz>\n \n \t* alloc-pool.h (struct pool_usage): Correct GNU coding style.\n@@ -13,7 +20,7 @@\n \t-Bsymbolic.\n \n 2015-06-02  Andres Tiraboschi  <andres.tiraboschi@tallertechnologies.com>\n-\t\n+\n \t* doc/plugins.texi (enum plugin_event): New event.\n \t* plugin.c (register_callback): Handle PLUGIN_START_PARSE_FUNCTION\n \tand PLUGIN_FINISH_FUNCTION."}, {"sha": "de8ce37cb0f9c1a2382147fe7c0d364f27527ba4", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27a0b7f2ee9689c9a0092a6403edacdcb7158516/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27a0b7f2ee9689c9a0092a6403edacdcb7158516/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=27a0b7f2ee9689c9a0092a6403edacdcb7158516", "patch": "@@ -6149,6 +6149,7 @@ bool\n ix86_function_arg_regno_p (int regno)\n {\n   int i;\n+  enum calling_abi call_abi;\n   const int *parm_regs;\n \n   if (TARGET_MPX && BND_REGNO_P (regno))\n@@ -6174,16 +6175,18 @@ ix86_function_arg_regno_p (int regno)\n   /* TODO: The function should depend on current function ABI but\n      builtins.c would need updating then. Therefore we use the\n      default ABI.  */\n+  call_abi = ix86_cfun_abi ();\n \n   /* RAX is used as hidden argument to va_arg functions.  */\n-  if (ix86_abi == SYSV_ABI && regno == AX_REG)\n+  if (call_abi == SYSV_ABI && regno == AX_REG)\n     return true;\n \n-  if (ix86_abi == MS_ABI)\n+  if (call_abi == MS_ABI)\n     parm_regs = x86_64_ms_abi_int_parameter_registers;\n   else\n     parm_regs = x86_64_int_parameter_registers;\n-  for (i = 0; i < (ix86_abi == MS_ABI\n+\n+  for (i = 0; i < (call_abi == MS_ABI\n \t\t   ? X86_64_MS_REGPARM_MAX : X86_64_REGPARM_MAX); i++)\n     if (regno == parm_regs[i])\n       return true;\n@@ -8212,10 +8215,10 @@ ix86_function_value_regno_p (const unsigned int regno)\n     case AX_REG:\n       return true;\n     case DX_REG:\n-      return (!TARGET_64BIT || ix86_abi != MS_ABI);\n+      return (!TARGET_64BIT || ix86_cfun_abi () != MS_ABI);\n     case DI_REG:\n     case SI_REG:\n-      return TARGET_64BIT && ix86_abi != MS_ABI;\n+      return TARGET_64BIT && ix86_cfun_abi () != MS_ABI;\n \n     case BND0_REG:\n     case BND1_REG:\n@@ -8227,7 +8230,7 @@ ix86_function_value_regno_p (const unsigned int regno)\n       /* TODO: The function should depend on current function ABI but\n        builtins.c would need updating then. Therefore we use the\n        default ABI.  */\n-      if (TARGET_64BIT && ix86_abi == MS_ABI)\n+      if (TARGET_64BIT && ix86_cfun_abi () == MS_ABI)\n \treturn false;\n       return TARGET_FLOAT_RETURNS_IN_80387;\n "}, {"sha": "a1d74917010b5a34ebf05b529c0fa36d75fa7b33", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27a0b7f2ee9689c9a0092a6403edacdcb7158516/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27a0b7f2ee9689c9a0092a6403edacdcb7158516/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=27a0b7f2ee9689c9a0092a6403edacdcb7158516", "patch": "@@ -1,3 +1,8 @@\n+2015-06-03  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/66275\n+\t* gcc.target/i386/pr66275.c: New test.\n+\n 2015-06-03  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \t* gcc.dg/Wcxx-compat-22.c: New testcase."}, {"sha": "b8759aeb5ec36de4abbddf574cbec9a3fe2a8a00", "filename": "gcc/testsuite/gcc.target/i386/pr66275.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27a0b7f2ee9689c9a0092a6403edacdcb7158516/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66275.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27a0b7f2ee9689c9a0092a6403edacdcb7158516/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66275.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66275.c?ref=27a0b7f2ee9689c9a0092a6403edacdcb7158516", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile { target { *-*-linux* && { ! ia32 } } } } */\n+/* { dg-options \"-mabi=ms -fdump-rtl-dfinit\" } */\n+\n+void\n+__attribute__((sysv_abi))\n+foo () {};\n+\n+/* { dg-final { scan-rtl-dump \"entry block defs\\[^\\\\n]*\\\\\\[si\\\\]\\[^\\\\n]*\\\\\\[di\\\\]\" \"dfinit\" } } */"}]}