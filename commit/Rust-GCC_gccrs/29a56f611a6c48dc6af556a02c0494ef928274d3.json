{"sha": "29a56f611a6c48dc6af556a02c0494ef928274d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjlhNTZmNjExYTZjNDhkYzZhZjU1NmEwMmMwNDk0ZWY5MjgyNzRkMw==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2016-04-21T08:14:08Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-21T08:14:08Z"}, "message": "frontend.adb: Update call to Unnest_Subprograms.\n\n2016-04-21  Javier Miranda  <miranda@adacore.com>\n\n\t* frontend.adb: Update call to Unnest_Subprograms.\n\t* exp_ch6.ads, exp_ch6.adb, exp_unst.ads, exp_unst.adb\n\t(Unnest_Subprograms): Moved to package exp_unst.\n\t* exp_unst.ads (Unnest_Subprogram): Moved to the body of the\n\tpackage.\n\t* exp_dbug.adb (Qualify_Entity_Name): Enable qualification of\n\tenumeration literals when generating C code.\n\nFrom-SVN: r235303", "tree": {"sha": "1ff9cef286d4a241dd8a12d5405aa182e5dc3484", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ff9cef286d4a241dd8a12d5405aa182e5dc3484"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29a56f611a6c48dc6af556a02c0494ef928274d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29a56f611a6c48dc6af556a02c0494ef928274d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29a56f611a6c48dc6af556a02c0494ef928274d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29a56f611a6c48dc6af556a02c0494ef928274d3/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e379beb56f0b1e597c8aeb10c84813c8326197a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e379beb56f0b1e597c8aeb10c84813c8326197a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e379beb56f0b1e597c8aeb10c84813c8326197a9"}], "stats": {"total": 170, "additions": 97, "deletions": 73}, "files": [{"sha": "917345be9a6c65fa1fa59421f8e864985c0819a2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29a56f611a6c48dc6af556a02c0494ef928274d3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29a56f611a6c48dc6af556a02c0494ef928274d3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=29a56f611a6c48dc6af556a02c0494ef928274d3", "patch": "@@ -1,3 +1,13 @@\n+2016-04-21  Javier Miranda  <miranda@adacore.com>\n+\n+\t* frontend.adb: Update call to Unnest_Subprograms.\n+\t* exp_ch6.ads, exp_ch6.adb, exp_unst.ads, exp_unst.adb\n+\t(Unnest_Subprograms): Moved to package exp_unst.\n+\t* exp_unst.ads (Unnest_Subprogram): Moved to the body of the\n+\tpackage.\n+\t* exp_dbug.adb (Qualify_Entity_Name): Enable qualification of\n+\tenumeration literals when generating C code.\n+\n 2016-04-21  Javier Miranda  <miranda@adacore.com>\n \n \t* frontend.adb: Remove call to initialize Exp_Ch6."}, {"sha": "d2cded58a271a637b568160bcb28a87096283ba9", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 0, "deletions": 56, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29a56f611a6c48dc6af556a02c0494ef928274d3/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29a56f611a6c48dc6af556a02c0494ef928274d3/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=29a56f611a6c48dc6af556a02c0494ef928274d3", "patch": "@@ -42,7 +42,6 @@ with Exp_Dist;  use Exp_Dist;\n with Exp_Intr;  use Exp_Intr;\n with Exp_Pakd;  use Exp_Pakd;\n with Exp_Tss;   use Exp_Tss;\n-with Exp_Unst;  use Exp_Unst;\n with Exp_Util;  use Exp_Util;\n with Freeze;    use Freeze;\n with Ghost;     use Ghost;\n@@ -8434,59 +8433,4 @@ package body Exp_Ch6 is\n       end loop;\n    end Set_Enclosing_Sec_Stack_Return;\n \n-   ------------------------\n-   -- Unnest_Subprograms --\n-   ------------------------\n-\n-   procedure Unnest_Subprograms (N : Node_Id) is\n-\n-      function Search_Subprograms (N : Node_Id) return Traverse_Result;\n-      --  Tree visitor that search for outer level procedures with nested\n-      --  subprograms and invokes Unnest_Subprogram()\n-\n-      ------------------------\n-      -- Search_Subprograms --\n-      ------------------------\n-\n-      function Search_Subprograms (N : Node_Id) return Traverse_Result is\n-      begin\n-         if Nkind_In (N, N_Subprogram_Body,\n-                         N_Subprogram_Body_Stub)\n-         then\n-            declare\n-               Spec_Id : constant Entity_Id := Unique_Defining_Entity (N);\n-\n-            begin\n-               --  We are only interested in subprograms (not generic\n-               --  subprograms), that have nested subprograms.\n-\n-               if Is_Subprogram (Spec_Id)\n-                 and then Has_Nested_Subprogram (Spec_Id)\n-                 and then Is_Library_Level_Entity (Spec_Id)\n-               then\n-                  Unnest_Subprogram (Spec_Id, N);\n-               end if;\n-            end;\n-         end if;\n-\n-         return OK;\n-      end Search_Subprograms;\n-\n-      ---------------\n-      -- Do_Search --\n-      ---------------\n-\n-      procedure Do_Search is new Traverse_Proc (Search_Subprograms);\n-      --  Subtree visitor instantiation\n-\n-   --  Start of processing for Unnest_Subprograms\n-\n-   begin\n-      if not Opt.Unnest_Subprogram_Mode then\n-         return;\n-      end if;\n-\n-      Do_Search (N);\n-   end Unnest_Subprograms;\n-\n end Exp_Ch6;"}, {"sha": "5d23e47e74313fcbac14d0c6a62ddd78d4e8508e", "filename": "gcc/ada/exp_ch6.ads", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29a56f611a6c48dc6af556a02c0494ef928274d3/gcc%2Fada%2Fexp_ch6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29a56f611a6c48dc6af556a02c0494ef928274d3/gcc%2Fada%2Fexp_ch6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.ads?ref=29a56f611a6c48dc6af556a02c0494ef928274d3", "patch": "@@ -209,9 +209,4 @@ package Exp_Ch6 is\n    --  parameter to identify the accessibility level of the function result\n    --  \"determined by the point of call\".\n \n-   procedure Unnest_Subprograms (N : Node_Id);\n-   --  Called to unnest subprograms. If we are in unnest subprogram mode, this\n-   --  is the call that traverses the tree N and locates all the library level\n-   --  subprograms with nested subprograms to process them.\n-\n end Exp_Ch6;"}, {"sha": "1f706d6bca570d514d1bb757e0d315445dadeb48", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29a56f611a6c48dc6af556a02c0494ef928274d3/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29a56f611a6c48dc6af556a02c0494ef928274d3/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=29a56f611a6c48dc6af556a02c0494ef928274d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1441,6 +1441,17 @@ package body Exp_Dbug is\n          Name_Len := Full_Qualify_Len;\n          Name_Buffer (1 .. Name_Len) := Full_Qualify_Name (1 .. Name_Len);\n \n+      --  Qualification needed for enumeration literals when generating C code\n+      --  (to simplify their management in the backend).\n+\n+      elsif Generate_C_Code\n+        and then Ekind (Ent) = E_Enumeration_Literal\n+        and then Scope (Ultimate_Alias (Ent)) /= Standard_Standard\n+      then\n+         Fully_Qualify_Name (Ent);\n+         Name_Len := Full_Qualify_Len;\n+         Name_Buffer (1 .. Name_Len) := Full_Qualify_Name (1 .. Name_Len);\n+\n       elsif Qualify_Needed (Scope (Ent)) then\n          Name_Len := 0;\n          Set_Entity_Name (Ent);"}, {"sha": "d5eb07d4383e4cad9f2371490061815f800fc52b", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 68, "deletions": 1, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29a56f611a6c48dc6af556a02c0494ef928274d3/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29a56f611a6c48dc6af556a02c0494ef928274d3/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=29a56f611a6c48dc6af556a02c0494ef928274d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2014-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2014-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -47,6 +47,18 @@ with Uintp;    use Uintp;\n \n package body Exp_Unst is\n \n+   -----------------------\n+   -- Local Subprograms --\n+   -----------------------\n+\n+   procedure Unnest_Subprogram (Subp : Entity_Id; Subp_Body : Node_Id);\n+   --  Subp is a library-level subprogram which has nested subprograms, and\n+   --  Subp_Body is the corresponding N_Subprogram_Body node. This procedure\n+   --  declares the AREC types and objects, adds assignments to the AREC record\n+   --  as required, defines the xxxPTR types for uplevel referenced objects,\n+   --  adds the ARECP parameter to all nested subprograms which need it, and\n+   --  modifies all uplevel references appropriately.\n+\n    -----------\n    -- Calls --\n    -----------\n@@ -1704,4 +1716,59 @@ package body Exp_Unst is\n       return;\n    end Unnest_Subprogram;\n \n+   ------------------------\n+   -- Unnest_Subprograms --\n+   ------------------------\n+\n+   procedure Unnest_Subprograms (N : Node_Id) is\n+\n+      function Search_Subprograms (N : Node_Id) return Traverse_Result;\n+      --  Tree visitor that search for outer level procedures with nested\n+      --  subprograms and invokes Unnest_Subprogram()\n+\n+      ------------------------\n+      -- Search_Subprograms --\n+      ------------------------\n+\n+      function Search_Subprograms (N : Node_Id) return Traverse_Result is\n+      begin\n+         if Nkind_In (N, N_Subprogram_Body,\n+                         N_Subprogram_Body_Stub)\n+         then\n+            declare\n+               Spec_Id : constant Entity_Id := Unique_Defining_Entity (N);\n+\n+            begin\n+               --  We are only interested in subprograms (not generic\n+               --  subprograms), that have nested subprograms.\n+\n+               if Is_Subprogram (Spec_Id)\n+                 and then Has_Nested_Subprogram (Spec_Id)\n+                 and then Is_Library_Level_Entity (Spec_Id)\n+               then\n+                  Unnest_Subprogram (Spec_Id, N);\n+               end if;\n+            end;\n+         end if;\n+\n+         return OK;\n+      end Search_Subprograms;\n+\n+      ---------------\n+      -- Do_Search --\n+      ---------------\n+\n+      procedure Do_Search is new Traverse_Proc (Search_Subprograms);\n+      --  Subtree visitor instantiation\n+\n+   --  Start of processing for Unnest_Subprograms\n+\n+   begin\n+      if not Opt.Unnest_Subprogram_Mode then\n+         return;\n+      end if;\n+\n+      Do_Search (N);\n+   end Unnest_Subprograms;\n+\n end Exp_Unst;"}, {"sha": "c013e25da51a52d869e79156e89d1e6c7da87f17", "filename": "gcc/ada/exp_unst.ads", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29a56f611a6c48dc6af556a02c0494ef928274d3/gcc%2Fada%2Fexp_unst.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29a56f611a6c48dc6af556a02c0494ef928274d3/gcc%2Fada%2Fexp_unst.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.ads?ref=29a56f611a6c48dc6af556a02c0494ef928274d3", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2014-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2014-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -686,12 +686,9 @@ package Exp_Unst is\n    function Subp_Index (Sub : Entity_Id) return SI_Type;\n    --  Given the entity for a subprogram, return corresponding Subp's index\n \n-   procedure Unnest_Subprogram (Subp : Entity_Id; Subp_Body : Node_Id);\n-   --  Subp is a library-level subprogram which has nested subprograms, and\n-   --  Subp_Body is the corresponding N_Subprogram_Body node. This procedure\n-   --  declares the AREC types and objects, adds assignments to the AREC record\n-   --  as required, defines the xxxPTR types for uplevel referenced objects,\n-   --  adds the ARECP parameter to all nested subprograms which need it, and\n-   --  modifies all uplevel references appropriately.\n+   procedure Unnest_Subprograms (N : Node_Id);\n+   --  Called to unnest subprograms. If we are in unnest subprogram mode, this\n+   --  is the call that traverses the tree N and locates all the library level\n+   --  subprograms with nested subprograms to process them.\n \n end Exp_Unst;"}, {"sha": "386190357618c1647ff173d2cc9b33d36eeb7a87", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29a56f611a6c48dc6af556a02c0494ef928274d3/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29a56f611a6c48dc6af556a02c0494ef928274d3/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=29a56f611a6c48dc6af556a02c0494ef928274d3", "patch": "@@ -30,8 +30,8 @@ with Checks;\n with CStand;\n with Debug;    use Debug;\n with Elists;\n-with Exp_Ch6;\n with Exp_Dbug;\n+with Exp_Unst;\n with Fmap;\n with Fname.UF;\n with Ghost;    use Ghost;\n@@ -439,7 +439,7 @@ begin\n \n          --  At this stage we can unnest subprogram bodies if required\n \n-         Exp_Ch6.Unnest_Subprograms (Cunit (Main_Unit));\n+         Exp_Unst.Unnest_Subprograms (Cunit (Main_Unit));\n \n          --  List library units if requested\n "}]}