{"sha": "6f11ddd8b7dc020545d0d0e8ae20d34b83265ff6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmYxMWRkZDhiN2RjMDIwNTQ1ZDBkMGU4YWUyMGQzNGI4MzI2NWZmNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-02-22T22:50:37Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-02-22T22:50:37Z"}, "message": "PR c++/84424 - ICE with constexpr and __builtin_shuffle.\n\n\t* constexpr.c (reduced_constant_expression_p): Handle CONSTRUCTOR of\n\tVECTOR_TYPE.\n\nFrom-SVN: r257924", "tree": {"sha": "77c560e22438f93739f3c458d857d12564ee7776", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77c560e22438f93739f3c458d857d12564ee7776"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f11ddd8b7dc020545d0d0e8ae20d34b83265ff6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f11ddd8b7dc020545d0d0e8ae20d34b83265ff6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f11ddd8b7dc020545d0d0e8ae20d34b83265ff6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f11ddd8b7dc020545d0d0e8ae20d34b83265ff6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8304bcf24a2d301044a881438221841cf09444d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8304bcf24a2d301044a881438221841cf09444d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8304bcf24a2d301044a881438221841cf09444d7"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "79b7f00644dc2e9613919d47162e68c2fcde1808", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f11ddd8b7dc020545d0d0e8ae20d34b83265ff6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f11ddd8b7dc020545d0d0e8ae20d34b83265ff6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6f11ddd8b7dc020545d0d0e8ae20d34b83265ff6", "patch": "@@ -1,3 +1,9 @@\n+2018-02-22  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/84424 - ICE with constexpr and __builtin_shuffle.\n+\t* constexpr.c (reduced_constant_expression_p): Handle CONSTRUCTOR of\n+\tVECTOR_TYPE.\n+\n 2018-02-22  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/84493"}, {"sha": "47ff90cb05561193fa270ff66556bead9aad0b90", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f11ddd8b7dc020545d0d0e8ae20d34b83265ff6/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f11ddd8b7dc020545d0d0e8ae20d34b83265ff6/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=6f11ddd8b7dc020545d0d0e8ae20d34b83265ff6", "patch": "@@ -1763,7 +1763,13 @@ reduced_constant_expression_p (tree t)\n       /* And we need to handle PTRMEM_CST wrapped in a CONSTRUCTOR.  */\n       tree idx, val, field; unsigned HOST_WIDE_INT i;\n       if (CONSTRUCTOR_NO_IMPLICIT_ZERO (t))\n-\tfield = next_initializable_field (TYPE_FIELDS (TREE_TYPE (t)));\n+\t{\n+\t  if (TREE_CODE (TREE_TYPE (t)) == VECTOR_TYPE)\n+\t    /* An initialized vector would have a VECTOR_CST.  */\n+\t    return false;\n+\t  else\n+\t    field = next_initializable_field (TYPE_FIELDS (TREE_TYPE (t)));\n+\t}\n       else\n \tfield = NULL_TREE;\n       FOR_EACH_CONSTRUCTOR_ELT (CONSTRUCTOR_ELTS (t), i, idx, val)"}, {"sha": "5cca53070b276dac4945ce47dc7707d169c7f857", "filename": "gcc/testsuite/g++.dg/ext/vector34.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f11ddd8b7dc020545d0d0e8ae20d34b83265ff6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector34.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f11ddd8b7dc020545d0d0e8ae20d34b83265ff6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector34.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector34.C?ref=6f11ddd8b7dc020545d0d0e8ae20d34b83265ff6", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/84424\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"\" }\n+\n+typedef int vec __attribute__ ((vector_size (2 * sizeof (int))));\n+\n+constexpr vec u = { 1, 2 };\n+constexpr vec v = __builtin_shuffle (v, u); // { dg-error \"\" }"}]}