{"sha": "8b03b9843b8129d41b806a5e26f0da6142cc7468", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGIwM2I5ODQzYjgxMjlkNDFiODA2YTVlMjZmMGRhNjE0MmNjNzQ2OA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@redhat.com", "date": "2001-01-05T20:42:30Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2001-01-05T20:42:30Z"}, "message": "cse.c (find_comparison_args): Stop if the argument is known to be constant.\n\n\t* cse.c (find_comparison_args): Stop if the argument is known to\n\tbe constant.\n\nFrom-SVN: r38723", "tree": {"sha": "9a0f9a440b9459868686ca70d71720180e9365ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a0f9a440b9459868686ca70d71720180e9365ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b03b9843b8129d41b806a5e26f0da6142cc7468", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b03b9843b8129d41b806a5e26f0da6142cc7468", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b03b9843b8129d41b806a5e26f0da6142cc7468", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b03b9843b8129d41b806a5e26f0da6142cc7468/comments", "author": null, "committer": null, "parents": [{"sha": "18a7c2a7a1fd3ef6f769e9374931103589197f1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18a7c2a7a1fd3ef6f769e9374931103589197f1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18a7c2a7a1fd3ef6f769e9374931103589197f1d"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "650faa7838f9c398330a8f4b9b71fc92f35e8d06", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b03b9843b8129d41b806a5e26f0da6142cc7468/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b03b9843b8129d41b806a5e26f0da6142cc7468/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8b03b9843b8129d41b806a5e26f0da6142cc7468", "patch": "@@ -1,3 +1,8 @@\n+Fri Jan  5 20:34:06 2001  J\"orn Rennecke <amylaar@redhat.com>\n+\n+\t* cse.c (find_comparison_args): Stop if the argument is known to\n+\tbe constant.\n+\n 2001-01-05  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* config/sh/sh.md (movdf): When splitting load into pair of"}, {"sha": "8642550c5127208c42b4384301eed19824eddd68", "filename": "gcc/cse.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b03b9843b8129d41b806a5e26f0da6142cc7468/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b03b9843b8129d41b806a5e26f0da6142cc7468/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=8b03b9843b8129d41b806a5e26f0da6142cc7468", "patch": "@@ -3161,7 +3161,20 @@ find_comparison_args (code, parg1, parg2, pmode1, pmode2)\n \tp = lookup (arg1, safe_hash (arg1, GET_MODE (arg1)) & HASH_MASK,\n \t\t    GET_MODE (arg1));\n       if (p)\n-\tp = p->first_same_value;\n+\t{\n+\t  p = p->first_same_value;\n+\n+\t  /* If what we compare is already known to be constant, that is as\n+\t     good as it gets.\n+\t     We need to break the loop in this case, because otherwise we\n+\t     can have an infinite loop when looking at a reg that is known\n+\t     to be a constant which is the same as a comparison of a reg\n+\t     against zero which appears later in the insn stream, which in\n+\t     turn is constant and the same as the comparison of the first reg\n+\t     against zero...  */\n+\t  if (p->is_const)\n+\t    break;\n+\t}\n \n       for (; p; p = p->next_same_value)\n \t{"}]}