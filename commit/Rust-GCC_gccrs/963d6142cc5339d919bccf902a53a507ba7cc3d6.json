{"sha": "963d6142cc5339d919bccf902a53a507ba7cc3d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTYzZDYxNDJjYzUzMzlkOTE5YmNjZjkwMmE1M2E1MDdiYTdjYzNkNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-06-23T11:54:14Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-06-23T11:54:14Z"}, "message": "(fill_slots_from_thread): When replacing a use of a register with what it was set to...\n\n(fill_slots_from_thread): When replacing a use of a register with what\nit was set to, don't do it when either the destination or source of\nthe copy is set in the insn.\n\nFrom-SVN: r4716", "tree": {"sha": "0324d1b9a4c27af7dce89a387ff9cdd7b99df9c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0324d1b9a4c27af7dce89a387ff9cdd7b99df9c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/963d6142cc5339d919bccf902a53a507ba7cc3d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/963d6142cc5339d919bccf902a53a507ba7cc3d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/963d6142cc5339d919bccf902a53a507ba7cc3d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/963d6142cc5339d919bccf902a53a507ba7cc3d6/comments", "author": null, "committer": null, "parents": [{"sha": "c71ebae3c4909d3ccad83bf87a6e36a21744182f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c71ebae3c4909d3ccad83bf87a6e36a21744182f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c71ebae3c4909d3ccad83bf87a6e36a21744182f"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "5b89943a24b0064156fcff697d27f614e0e87580", "filename": "gcc/reorg.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/963d6142cc5339d919bccf902a53a507ba7cc3d6/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/963d6142cc5339d919bccf902a53a507ba7cc3d6/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=963d6142cc5339d919bccf902a53a507ba7cc3d6", "patch": "@@ -3237,9 +3237,11 @@ fill_slots_from_thread (insn, condition, thread, opposite_thread, likely,\n \t but it doesn't seem worth it.  It might also be a good idea to try\n \t to swap the two insns.  That might do better.\n \n-\t We can't do this if the next insn modifies our source, because that\n-\t would make the replacement into the insn invalid.  This also\n-\t prevents updating the contents of a PRE_INC.  */\n+\t We can't do this if the next insn modifies our destination, because\n+\t that would make the replacement into the insn invalid.  We also can't\n+\t do this if it modifies our source, because it might be an earlyclobber\n+\t operand.  This latter test also prevents updating the contents of\n+\t a PRE_INC.  */\n \n       if (GET_CODE (trial) == INSN && GET_CODE (pat) == SET\n \t  && GET_CODE (SET_SRC (pat)) == REG\n@@ -3250,6 +3252,7 @@ fill_slots_from_thread (insn, condition, thread, opposite_thread, likely,\n \t  if (next && GET_CODE (next) == INSN\n \t      && GET_CODE (PATTERN (next)) != USE\n \t      && ! reg_set_p (SET_DEST (pat), next)\n+\t      && ! reg_set_p (SET_SRC (pat), next)\n \t      && reg_referenced_p (SET_DEST (pat), PATTERN (next)))\n \t    validate_replace_rtx (SET_DEST (pat), SET_SRC (pat), next);\n \t}"}]}