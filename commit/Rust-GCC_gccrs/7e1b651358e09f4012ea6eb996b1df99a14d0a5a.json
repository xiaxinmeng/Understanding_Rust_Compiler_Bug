{"sha": "7e1b651358e09f4012ea6eb996b1df99a14d0a5a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2UxYjY1MTM1OGUwOWY0MDEyZWE2ZWI5OTZiMWRmOTlhMTRkMGE1YQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2000-06-27T07:12:20Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2000-06-27T07:12:20Z"}, "message": "Correct previous botched commit.\n\nFrom-SVN: r34728", "tree": {"sha": "b2be4dbc53e2ad34967510b6d9839452d974c94c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2be4dbc53e2ad34967510b6d9839452d974c94c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e1b651358e09f4012ea6eb996b1df99a14d0a5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e1b651358e09f4012ea6eb996b1df99a14d0a5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e1b651358e09f4012ea6eb996b1df99a14d0a5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e1b651358e09f4012ea6eb996b1df99a14d0a5a/comments", "author": null, "committer": null, "parents": [{"sha": "ad69b5b6698dc2339b4c227da0319371690dc8ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad69b5b6698dc2339b4c227da0319371690dc8ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad69b5b6698dc2339b4c227da0319371690dc8ef"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "e4bdc9bdcf58085b579e13184b7c072a06c279b8", "filename": "gcc/ssa.c", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e1b651358e09f4012ea6eb996b1df99a14d0a5a/gcc%2Fssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e1b651358e09f4012ea6eb996b1df99a14d0a5a/gcc%2Fssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fssa.c?ref=7e1b651358e09f4012ea6eb996b1df99a14d0a5a", "patch": "@@ -784,10 +784,16 @@ rename_block (bb, idom)\n \t     not to the old version inner insn.)  */\n \t  if (get_insns () != NULL_RTX)\n \t    {\n+\t      rtx seq;\n \t      int i;\n \t      \n \t      emit (PATTERN (insn));\n-\t      PATTERN (insn) = gen_sequence ();\n+\t      seq = gen_sequence ();\n+\t      /* We really want a SEQUENCE of SETs, not a SEQUENCE\n+\t\t of INSNs.  */\n+\t      for (i = 0; i < XVECLEN (seq, 0); i++)\n+\t\tXVECEXP (seq, 0, i) = PATTERN (XVECEXP (seq, 0, i));\n+\t      PATTERN (insn) = seq;\n \t    }\n \t  end_sequence ();\n \t  \n@@ -1833,17 +1839,9 @@ rename_equivalent_regs (reg_partition)\n \t\t  if (slen <= 1)\n \t\t    abort();\n \n-\t\t  PATTERN (insn) = PATTERN (XVECEXP (s, 0, slen-1));\n+\t\t  PATTERN (insn) = XVECEXP (s, 0, slen-1);\n \t\t  for (i = 0; i < slen - 1; i++)\n-\t\t    {\n-\t\t      rtx new_insn;\n-\t\t      rtx old_insn = XVECEXP (s, 0, i);\n-\t\t      \n-\t\t      new_insn = emit_block_insn_before (PATTERN (old_insn),\n-\t\t\t\t\t\t\t insn, b);\n-\t\t      REG_NOTES (new_insn) = REG_NOTES (old_insn);\n-\t\t    }\n-\t\t  \n+\t\t    emit_block_insn_before (XVECEXP (s, 0, i), insn, b);\n \t\t}\n \t    }\n "}]}