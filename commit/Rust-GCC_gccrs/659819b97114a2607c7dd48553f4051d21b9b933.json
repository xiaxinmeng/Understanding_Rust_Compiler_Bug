{"sha": "659819b97114a2607c7dd48553f4051d21b9b933", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU5ODE5Yjk3MTE0YTI2MDdjN2RkNDg1NTNmNDA1MWQyMWI5YjkzMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-19T12:23:38Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-19T12:23:38Z"}, "message": "[multiple changes]\n\n2009-06-19  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-ext.adb, makeutl.adb, makeutl.ads (Executable_Prefix_Path): Now\n\tmake sure we always return a name ending with a path separator.\n\n2009-06-19  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch12.adb (Instantiate_Package_Body, Instantiate_Subprogram_Body):\n\tSave and restore the visibility of the parent when installed.\n\n2009-06-19  Jose Ruiz  <ruiz@adacore.com>\n\n\t* s-tposen.ads (Protection_Entry): Replace fields L, Ceiling, and Owner\n\tby Common which contains all these fields.\n\n\t* s-tposen.adb (Initialize_Protection_Entry, Lock_Entry,\n\tLock_Read_Only_Entry, Timed_Protected_Single_Entry_Call, Unlock_Entry):\n\tRemove code duplication in this package by means of calling the\n\tequivalent code in s-taprob.\n\n2009-06-19  Robert Dewar  <dewar@adacore.com>\n\n\t* a-einuoc.ads: Minor reformatting\n\nFrom-SVN: r148701", "tree": {"sha": "14cb24c21ec875e765b4243c9cf89edfa2fab5cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14cb24c21ec875e765b4243c9cf89edfa2fab5cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/659819b97114a2607c7dd48553f4051d21b9b933", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/659819b97114a2607c7dd48553f4051d21b9b933", "html_url": "https://github.com/Rust-GCC/gccrs/commit/659819b97114a2607c7dd48553f4051d21b9b933", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/659819b97114a2607c7dd48553f4051d21b9b933/comments", "author": null, "committer": null, "parents": [{"sha": "0eed21bd6a5a55dc95747ea54113288add46e090", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eed21bd6a5a55dc95747ea54113288add46e090", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0eed21bd6a5a55dc95747ea54113288add46e090"}], "stats": {"total": 223, "additions": 72, "deletions": 151}, "files": [{"sha": "194ac3706b47415ebb719f637c9cced5176d0fa2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/659819b97114a2607c7dd48553f4051d21b9b933/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/659819b97114a2607c7dd48553f4051d21b9b933/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=659819b97114a2607c7dd48553f4051d21b9b933", "patch": "@@ -1,3 +1,27 @@\n+2009-06-19  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-ext.adb, makeutl.adb, makeutl.ads (Executable_Prefix_Path): Now\n+\tmake sure we always return a name ending with a path separator.\n+\n+2009-06-19  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch12.adb (Instantiate_Package_Body, Instantiate_Subprogram_Body):\n+\tSave and restore the visibility of the parent when installed.\n+\n+2009-06-19  Jose Ruiz  <ruiz@adacore.com>\n+\n+\t* s-tposen.ads (Protection_Entry): Replace fields L, Ceiling, and Owner\n+\tby Common which contains all these fields.\n+\n+\t* s-tposen.adb (Initialize_Protection_Entry, Lock_Entry,\n+\tLock_Read_Only_Entry, Timed_Protected_Single_Entry_Call, Unlock_Entry):\n+\tRemove code duplication in this package by means of calling the\n+\tequivalent code in s-taprob.\n+\n+2009-06-19  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-einuoc.ads: Minor reformatting\n+\n 2009-06-19  Ed Falis  <falis@adacore.com>\n \n \t* a-einuoc.ads, s-osinte-vxworks.ads, s-vxwext.ads, s-vxwext-kernel.adb,"}, {"sha": "8d772b01f52f7acca8f105fbb909f6b07ee654f7", "filename": "gcc/ada/a-einuoc.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/659819b97114a2607c7dd48553f4051d21b9b933/gcc%2Fada%2Fa-einuoc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/659819b97114a2607c7dd48553f4051d21b9b933/gcc%2Fada%2Fa-einuoc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-einuoc.ads?ref=659819b97114a2607c7dd48553f4051d21b9b933", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 2000-2009, Free Software Foundation, Inc.       --\n+--          Copyright (C) 2000-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,7 +35,6 @@\n --  be made in a conforming manner.\n \n function Ada.Exceptions.Is_Null_Occurrence\n-  (X    : Exception_Occurrence)\n-  return Boolean;\n+  (X : Exception_Occurrence) return Boolean;\n pragma Preelaborate (Ada.Exceptions.Is_Null_Occurrence);\n --  This function yields True if X is Null_Occurrence, and False otherwise"}, {"sha": "46169d5fa62553ebbee13f0d081e90a617b310e0", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/659819b97114a2607c7dd48553f4051d21b9b933/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/659819b97114a2607c7dd48553f4051d21b9b933/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=659819b97114a2607c7dd48553f4051d21b9b933", "patch": "@@ -229,7 +229,8 @@ package body Makeutl is\n             return \"\";\n          end if;\n \n-         return Normalize_Pathname (Exec (Exec'First .. Path_Last - 4));\n+         return Normalize_Pathname (Exec (Exec'First .. Path_Last - 4))\n+           & Directory_Separator;\n       end Get_Install_Dir;\n \n    --  Beginning of Executable_Prefix_Path\n@@ -248,12 +249,17 @@ package body Makeutl is\n       --  directory prefix.\n \n       declare\n-         Path : constant String_Access := Locate_Exec_On_Path (Exec_Name);\n+         Path : String_Access := Locate_Exec_On_Path (Exec_Name);\n       begin\n          if Path = null then\n             return \"\";\n          else\n-            return Get_Install_Dir (Path.all);\n+            declare\n+               Dir : constant String := Get_Install_Dir (Path.all);\n+            begin\n+               Free (Path);\n+               return Dir;\n+            end;\n          end if;\n       end;\n    end Executable_Prefix_Path;"}, {"sha": "ae55ebbe62adc58d7fb7c6ac235c705a36a4579f", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/659819b97114a2607c7dd48553f4051d21b9b933/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/659819b97114a2607c7dd48553f4051d21b9b933/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=659819b97114a2607c7dd48553f4051d21b9b933", "patch": "@@ -62,7 +62,8 @@ package Makeutl is\n    function Executable_Prefix_Path return String;\n    --  Return the absolute path parent directory of the directory where the\n    --  current executable resides, if its directory is named \"bin\", otherwise\n-   --  return an empty string.\n+   --  return an empty string. When a directory is returned, it is guaranteed\n+   --  to end with a directory separator.\n \n    procedure Inform (N : Name_Id := No_Name; Msg : String);\n    procedure Inform (N : File_Name_Type; Msg : String);"}, {"sha": "37c6296787f397b9e4d0f2aaf56601acf011bdba", "filename": "gcc/ada/prj-ext.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/659819b97114a2607c7dd48553f4051d21b9b933/gcc%2Fada%2Fprj-ext.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/659819b97114a2607c7dd48553f4051d21b9b933/gcc%2Fada%2Fprj-ext.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.adb?ref=659819b97114a2607c7dd48553f4051d21b9b933", "patch": "@@ -263,8 +263,7 @@ package body Prj.Ext is\n                   if Get_Mode = Multi_Language then\n                      Add_Str_To_Name_Buffer\n                        (Path_Separator & Prefix.all &\n-                        Directory_Separator & \"share\" &\n-                        Directory_Separator & \"gpr\");\n+                        \"share\" & Directory_Separator & \"gpr\");\n                   end if;\n \n                   Add_Str_To_Name_Buffer"}, {"sha": "a429903d64b3819fe85887fb2b8eae845ead0e93", "filename": "gcc/ada/s-tposen.adb", "status": "modified", "additions": 5, "deletions": 123, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/659819b97114a2607c7dd48553f4051d21b9b933/gcc%2Fada%2Fs-tposen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/659819b97114a2607c7dd48553f4051d21b9b933/gcc%2Fada%2Fs-tposen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tposen.adb?ref=659819b97114a2607c7dd48553f4051d21b9b933", "patch": "@@ -318,15 +318,9 @@ package body System.Tasking.Protected_Objects.Single_Entry is\n       Compiler_Info     : System.Address;\n       Entry_Body        : Entry_Body_Access)\n    is\n-      Init_Priority : Integer := Ceiling_Priority;\n    begin\n-      if Init_Priority = Unspecified_Priority then\n-         Init_Priority := System.Priority'Last;\n-      end if;\n+      Initialize_Protection (Object.Common'Access, Ceiling_Priority);\n \n-      STPO.Initialize_Lock (Init_Priority, Object.L'Access);\n-      Object.Ceiling := System.Any_Priority (Init_Priority);\n-      Object.Owner := Null_Task;\n       Object.Compiler_Info := Compiler_Info;\n       Object.Call_In_Progress := null;\n       Object.Entry_Body := Entry_Body;\n@@ -341,45 +335,8 @@ package body System.Tasking.Protected_Objects.Single_Entry is\n    --  Do not call this procedure from within the run-time system.\n \n    procedure Lock_Entry (Object : Protection_Entry_Access) is\n-      Ceiling_Violation : Boolean;\n-\n    begin\n-      --  If pragma Detect_Blocking is active then, as described in the ARM\n-      --  9.5.1, par. 15, we must check whether this is an external call on a\n-      --  protected subprogram with the same target object as that of the\n-      --  protected action that is currently in progress (i.e., if the caller\n-      --  is already the protected object's owner). If this is the case hence\n-      --  Program_Error must be raised.\n-\n-      if Detect_Blocking and then Object.Owner = Self then\n-         raise Program_Error;\n-      end if;\n-\n-      STPO.Write_Lock (Object.L'Access, Ceiling_Violation);\n-\n-      if Ceiling_Violation then\n-         raise Program_Error;\n-      end if;\n-\n-      --  We are entering in a protected action, so that we increase the\n-      --  protected object nesting level (if pragma Detect_Blocking is\n-      --  active), and update the protected object's owner.\n-\n-      if Detect_Blocking then\n-         declare\n-            Self_Id : constant Task_Id := Self;\n-\n-         begin\n-            --  Update the protected object's owner\n-\n-            Object.Owner := Self_Id;\n-\n-            --  Increase protected object nesting level\n-\n-            Self_Id.Common.Protected_Action_Nesting :=\n-              Self_Id.Common.Protected_Action_Nesting + 1;\n-         end;\n-      end if;\n+      Lock (Object.Common'Access);\n    end Lock_Entry;\n \n    --------------------------\n@@ -391,53 +348,8 @@ package body System.Tasking.Protected_Objects.Single_Entry is\n    --  Do not call this procedure from within the runtime system\n \n    procedure Lock_Read_Only_Entry (Object : Protection_Entry_Access) is\n-      Ceiling_Violation : Boolean;\n-\n    begin\n-      --  If pragma Detect_Blocking is active then, as described in the ARM\n-      --  9.5.1, par. 15, we must check whether this is an external call on a\n-      --  protected subprogram with the same target object as that of the\n-      --  protected action that is currently in progress (i.e., if the caller\n-      --  is already the protected object's owner). If this is the case hence\n-      --  Program_Error must be raised.\n-\n-      --  Note that in this case (getting read access), several tasks may\n-      --  have read ownership of the protected object, so that this method of\n-      --  storing the (single) protected object's owner does not work\n-      --  reliably for read locks. However, this is the approach taken for two\n-      --  major reasons: first, this function is not currently being used (it\n-      --  is provided for possible future use), and second, it largely\n-      --  simplifies the implementation.\n-\n-      if Detect_Blocking and then Object.Owner = Self then\n-         raise Program_Error;\n-      end if;\n-\n-      STPO.Read_Lock (Object.L'Access, Ceiling_Violation);\n-\n-      if Ceiling_Violation then\n-         raise Program_Error;\n-      end if;\n-\n-      --  We are entering in a protected action, so that we increase the\n-      --  protected object nesting level (if pragma Detect_Blocking is\n-      --  active), and update the protected object's owner.\n-\n-      if Detect_Blocking then\n-         declare\n-            Self_Id : constant Task_Id := Self;\n-\n-         begin\n-            --  Update the protected object's owner\n-\n-            Object.Owner := Self_Id;\n-\n-            --  Increase protected object nesting level\n-\n-            Self_Id.Common.Protected_Action_Nesting :=\n-              Self_Id.Common.Protected_Action_Nesting + 1;\n-         end;\n-      end if;\n+      Lock_Read_Only (Object.Common'Access);\n    end Lock_Read_Only_Entry;\n \n    --------------------\n@@ -665,7 +577,6 @@ package body System.Tasking.Protected_Objects.Single_Entry is\n    is\n       Self_Id           : constant Task_Id  := STPO.Self;\n       Entry_Call        : Entry_Call_Record renames Self_Id.Entry_Calls (1);\n-      Ceiling_Violation : Boolean;\n \n    begin\n       --  If pragma Detect_Blocking is active then Program_Error must be\n@@ -678,11 +589,7 @@ package body System.Tasking.Protected_Objects.Single_Entry is\n          raise Program_Error with \"potentially blocking operation\";\n       end if;\n \n-      STPO.Write_Lock (Object.L'Access, Ceiling_Violation);\n-\n-      if Ceiling_Violation then\n-         raise Program_Error;\n-      end if;\n+      Lock (Object.Common'Access);\n \n       Entry_Call.Mode := Timed_Call;\n       Entry_Call.State := Now_Abortable;\n@@ -730,32 +637,7 @@ package body System.Tasking.Protected_Objects.Single_Entry is\n \n    procedure Unlock_Entry (Object : Protection_Entry_Access) is\n    begin\n-      --  We are exiting from a protected action, so that we decrease the\n-      --  protected object nesting level (if pragma Detect_Blocking is\n-      --  active), and remove ownership of the protected object.\n-\n-      if Detect_Blocking then\n-         declare\n-            Self_Id : constant Task_Id := Self;\n-\n-         begin\n-            --  Calls to this procedure can only take place when being within\n-            --  a protected action and when the caller is the protected\n-            --  object's owner.\n-\n-            pragma Assert (Self_Id.Common.Protected_Action_Nesting > 0\n-                             and then Object.Owner = Self_Id);\n-\n-            --  Remove ownership of the protected object\n-\n-            Object.Owner := Null_Task;\n-\n-            Self_Id.Common.Protected_Action_Nesting :=\n-              Self_Id.Common.Protected_Action_Nesting - 1;\n-         end;\n-      end if;\n-\n-      STPO.Unlock (Object.L'Access);\n+      Unlock (Object.Common'Access);\n    end Unlock_Entry;\n \n end System.Tasking.Protected_Objects.Single_Entry;"}, {"sha": "8c07cfd3ac9f38d0d0939dc70b3892ac691b18a6", "filename": "gcc/ada/s-tposen.ads", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/659819b97114a2607c7dd48553f4051d21b9b933/gcc%2Fada%2Fs-tposen.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/659819b97114a2607c7dd48553f4051d21b9b933/gcc%2Fada%2Fs-tposen.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tposen.ads?ref=659819b97114a2607c7dd48553f4051d21b9b933", "patch": "@@ -275,28 +275,16 @@ package System.Tasking.Protected_Objects.Single_Entry is\n \n private\n    type Protection_Entry is record\n-      L : aliased Task_Primitives.Lock;\n-      --  The underlying lock associated with a Protection_Entries. Note that\n-      --  you should never (un)lock Object.L directly, but instead use\n-      --  Lock_Entry/Unlock_Entry.\n+      Common : aliased Protection;\n+      --  State of the protected object. This part is common to any protected\n+      --  object, including those without entries.\n \n       Compiler_Info : System.Address;\n       --  Pointer to compiler-generated record representing protected object\n \n       Call_In_Progress : Entry_Call_Link;\n       --  Pointer to the entry call being executed (if any)\n \n-      Ceiling : System.Any_Priority;\n-      --  Ceiling priority associated to the protected object\n-\n-      Owner : Task_Id;\n-      --  This field contains the protected object's owner. Null_Task\n-      --  indicates that the protected object is not currently being used.\n-      --  This information is used for detecting the type of potentially\n-      --  blocking operations described in the ARM 9.5.1, par. 15 (external\n-      --  calls on a protected subprogram with the same target object as that\n-      --  of the protected action).\n-\n       Entry_Body : Entry_Body_Access;\n       --  Pointer to executable code for the entry body of the protected type\n "}, {"sha": "a3f7cde4814262d9e8b179ac6255ce80192df0ac", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/659819b97114a2607c7dd48553f4051d21b9b933/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/659819b97114a2607c7dd48553f4051d21b9b933/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=659819b97114a2607c7dd48553f4051d21b9b933", "patch": "@@ -8562,6 +8562,9 @@ package body Sem_Ch12 is\n       Parent_Installed : Boolean := False;\n       Save_Style_Check : constant Boolean := Style_Check;\n \n+      Par_Ent : Entity_Id := Empty;\n+      Par_Vis : Boolean   := False;\n+\n    begin\n       Gen_Body_Id := Corresponding_Body (Gen_Decl);\n \n@@ -8637,11 +8640,15 @@ package body Sem_Ch12 is\n          if Ekind (Scope (Gen_Unit)) = E_Generic_Package\n            and then Nkind (Gen_Id) = N_Expanded_Name\n          then\n-            Install_Parent (Entity (Prefix (Gen_Id)), In_Body => True);\n+            Par_Ent := Entity (Prefix (Gen_Id));\n+            Par_Vis := Is_Immediately_Visible (Par_Ent);\n+            Install_Parent (Par_Ent, In_Body => True);\n             Parent_Installed := True;\n \n          elsif Is_Child_Unit (Gen_Unit) then\n-            Install_Parent (Scope (Gen_Unit), In_Body => True);\n+            Par_Ent := Scope (Gen_Unit);\n+            Par_Vis := Is_Immediately_Visible (Par_Ent);\n+            Install_Parent (Par_Ent, In_Body => True);\n             Parent_Installed := True;\n          end if;\n \n@@ -8712,6 +8719,10 @@ package body Sem_Ch12 is\n \n          if Parent_Installed then\n             Remove_Parent (In_Body => True);\n+\n+            --  Restore the previous visibility of the parent\n+\n+            Set_Is_Immediately_Visible (Par_Ent, Par_Vis);\n          end if;\n \n          Restore_Private_Views (Act_Decl_Id);\n@@ -8806,6 +8817,9 @@ package body Sem_Ch12 is\n       Parent_Installed : Boolean := False;\n       Save_Style_Check : constant Boolean := Style_Check;\n \n+      Par_Ent : Entity_Id := Empty;\n+      Par_Vis : Boolean   := False;\n+\n    begin\n       Gen_Body_Id := Corresponding_Body (Gen_Decl);\n \n@@ -8909,11 +8923,15 @@ package body Sem_Ch12 is\n          if Ekind (Scope (Gen_Unit)) = E_Generic_Package\n            and then Nkind (Gen_Id) = N_Expanded_Name\n          then\n-            Install_Parent (Entity (Prefix (Gen_Id)), In_Body => True);\n+            Par_Ent := Entity (Prefix (Gen_Id));\n+            Par_Vis := Is_Immediately_Visible (Par_Ent);\n+            Install_Parent (Par_Ent, In_Body => True);\n             Parent_Installed := True;\n \n          elsif Is_Child_Unit (Gen_Unit) then\n-            Install_Parent (Scope (Gen_Unit), In_Body => True);\n+            Par_Ent := Scope (Gen_Unit);\n+            Par_Vis := Is_Immediately_Visible (Par_Ent);\n+            Install_Parent (Par_Ent, In_Body => True);\n             Parent_Installed := True;\n          end if;\n \n@@ -8994,6 +9012,10 @@ package body Sem_Ch12 is\n \n          if Parent_Installed then\n             Remove_Parent (In_Body => True);\n+\n+            --  Restore the previous visibility of the parent\n+\n+            Set_Is_Immediately_Visible (Par_Ent, Par_Vis);\n          end if;\n \n          Restore_Env;"}]}