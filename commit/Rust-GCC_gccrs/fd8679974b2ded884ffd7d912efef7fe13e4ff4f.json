{"sha": "fd8679974b2ded884ffd7d912efef7fe13e4ff4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ4Njc5OTc0YjJkZWQ4ODRmZmQ3ZDkxMmVmZWY3ZmUxM2U0ZmY0Zg==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-03-13T09:48:59Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-03-13T09:49:16Z"}, "message": "i386: Use ix86_output_ssemov for DFmode TYPE_SSEMOV\n\nThere is no need to set mode attribute to XImode nor V8DFmode since\nix86_output_ssemov can properly encode xmm16-xmm31 registers with and\nwithout AVX512VL.\n\ngcc/\n\n\tPR target/89229\n\t* config/i386/i386.c (ix86_output_ssemov): Handle MODE_DF.\n\t* config/i386/i386.md (*movdf_internal): Call ix86_output_ssemov\n\tfor TYPE_SSEMOV.  Remove TARGET_AVX512F, TARGET_PREFER_AVX256,\n\tTARGET_AVX512VL and ext_sse_reg_operand check.\n\ngcc/testsuite/\n\n\tPR target/89229\n\t* gcc.target/i386/pr89229-4a.c: New test.\n\t* gcc.target/i386/pr89229-4b.c: Likewise.\n\t* gcc.target/i386/pr89229-4c.c: Likewise.", "tree": {"sha": "119536201b931e0d76cd136de322b8363ddc85ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/119536201b931e0d76cd136de322b8363ddc85ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd8679974b2ded884ffd7d912efef7fe13e4ff4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd8679974b2ded884ffd7d912efef7fe13e4ff4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd8679974b2ded884ffd7d912efef7fe13e4ff4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd8679974b2ded884ffd7d912efef7fe13e4ff4f/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbf3dc75888623e9d4bb7cc5e9c30caa9b24ffe7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbf3dc75888623e9d4bb7cc5e9c30caa9b24ffe7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbf3dc75888623e9d4bb7cc5e9c30caa9b24ffe7"}], "stats": {"total": 94, "additions": 53, "deletions": 41}, "files": [{"sha": "25abfcfd70defd72b9e381daf3cdf88c73504145", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd8679974b2ded884ffd7d912efef7fe13e4ff4f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd8679974b2ded884ffd7d912efef7fe13e4ff4f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fd8679974b2ded884ffd7d912efef7fe13e4ff4f", "patch": "@@ -1,3 +1,11 @@\n+2020-03-13  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/89229\n+\t* config/i386/i386.c (ix86_output_ssemov): Handle MODE_DF.\n+\t* config/i386/i386.md (*movdf_internal): Call ix86_output_ssemov\n+\tfor TYPE_SSEMOV.  Remove TARGET_AVX512F, TARGET_PREFER_AVX256,\n+\tTARGET_AVX512VL and ext_sse_reg_operand check.\n+\n 2020-03-13  Bu Le  <bule1@huawei.com>\n \n \tPR target/94154"}, {"sha": "924f9558b244b0f287deadebb89dd2cf7581353b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd8679974b2ded884ffd7d912efef7fe13e4ff4f/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd8679974b2ded884ffd7d912efef7fe13e4ff4f/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=fd8679974b2ded884ffd7d912efef7fe13e4ff4f", "patch": "@@ -5127,6 +5127,12 @@ ix86_output_ssemov (rtx_insn *insn, rtx *operands)\n       else\n \treturn \"%vmovq\\t{%1, %0|%0, %1}\";\n \n+    case MODE_DF:\n+      if (TARGET_AVX && REG_P (operands[0]) && REG_P (operands[1]))\n+\treturn \"vmovsd\\t{%d1, %0|%0, %d1}\";\n+      else\n+\treturn \"%vmovsd\\t{%1, %0|%0, %1}\";\n+\n     case MODE_V1DF:\n       gcc_assert (!TARGET_AVX);\n       return \"movlpd\\t{%1, %0|%0, %1}\";"}, {"sha": "0f57f939cc326c20ba9e1f518b0c918af1c80ca1", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 3, "deletions": 41, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd8679974b2ded884ffd7d912efef7fe13e4ff4f/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd8679974b2ded884ffd7d912efef7fe13e4ff4f/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=fd8679974b2ded884ffd7d912efef7fe13e4ff4f", "patch": "@@ -3355,37 +3355,7 @@\n       return standard_sse_constant_opcode (insn, operands);\n \n     case TYPE_SSEMOV:\n-      switch (get_attr_mode (insn))\n-\t{\n-\tcase MODE_DF:\n-\t  if (TARGET_AVX && REG_P (operands[0]) && REG_P (operands[1]))\n-\t    return \"vmovsd\\t{%d1, %0|%0, %d1}\";\n-\t  return \"%vmovsd\\t{%1, %0|%0, %1}\";\n-\n-\tcase MODE_V4SF:\n-\t  return \"%vmovaps\\t{%1, %0|%0, %1}\";\n-\tcase MODE_V8DF:\n-\t  return \"vmovapd\\t{%g1, %g0|%g0, %g1}\";\n-\tcase MODE_V2DF:\n-\t  return \"%vmovapd\\t{%1, %0|%0, %1}\";\n-\n-\tcase MODE_V2SF:\n-\t  gcc_assert (!TARGET_AVX);\n-\t  return \"movlps\\t{%1, %0|%0, %1}\";\n-\tcase MODE_V1DF:\n-\t  gcc_assert (!TARGET_AVX);\n-\t  return \"movlpd\\t{%1, %0|%0, %1}\";\n-\n-\tcase MODE_DI:\n-\t  /* Handle broken assemblers that require movd instead of movq.  */\n-\t  if (!HAVE_AS_IX86_INTERUNIT_MOVQ\n-\t      && (GENERAL_REG_P (operands[0]) || GENERAL_REG_P (operands[1])))\n-\t    return \"%vmovd\\t{%1, %0|%0, %1}\";\n-\t  return \"%vmovq\\t{%1, %0|%0, %1}\";\n-\n-\tdefault:\n-\t  gcc_unreachable ();\n-\t}\n+      return ix86_output_ssemov (insn, operands);\n \n     default:\n       gcc_unreachable ();\n@@ -3439,10 +3409,7 @@\n \n \t       /* xorps is one byte shorter for non-AVX targets.  */\n \t       (eq_attr \"alternative\" \"12,16\")\n-\t\t (cond [(and (match_test \"TARGET_AVX512F\")\n-\t\t\t     (not (match_test \"TARGET_PREFER_AVX256\")))\n-\t\t\t  (const_string \"XI\")\n-\t\t\t(match_test \"TARGET_AVX\")\n+\t\t (cond [(match_test \"TARGET_AVX\")\n \t\t\t  (const_string \"V2DF\")\n \t\t\t(ior (not (match_test \"TARGET_SSE2\"))\n \t\t\t     (match_test \"optimize_function_for_size_p (cfun)\"))\n@@ -3458,12 +3425,7 @@\n \n \t       /* movaps is one byte shorter for non-AVX targets.  */\n \t       (eq_attr \"alternative\" \"13,17\")\n-\t\t (cond [(and (ior (not (match_test \"TARGET_PREFER_AVX256\"))\n-\t\t\t\t  (not (match_test \"TARGET_AVX512VL\")))\n-\t\t\t     (ior (match_operand 0 \"ext_sse_reg_operand\")\n-\t\t\t\t  (match_operand 1 \"ext_sse_reg_operand\")))\n-\t\t\t  (const_string \"V8DF\")\n-\t\t\t(match_test \"TARGET_AVX\")\n+\t\t (cond [(match_test \"TARGET_AVX\")\n \t\t\t  (const_string \"DF\")\n \t\t\t(ior (not (match_test \"TARGET_SSE2\"))\n \t\t\t     (match_test \"optimize_function_for_size_p (cfun)\"))"}, {"sha": "5060981700ae83107795a7bafb83477713d9add8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd8679974b2ded884ffd7d912efef7fe13e4ff4f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd8679974b2ded884ffd7d912efef7fe13e4ff4f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fd8679974b2ded884ffd7d912efef7fe13e4ff4f", "patch": "@@ -1,3 +1,10 @@\n+2020-03-13  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/89229\n+\t* gcc.target/i386/pr89229-4a.c: New test.\n+\t* gcc.target/i386/pr89229-4b.c: Likewise.\n+\t* gcc.target/i386/pr89229-4c.c: Likewise.\n+\n 2019-03-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.c-torture/compile/20200313-1.c: New test."}, {"sha": "5bc10d256193ebe57957a0e9250e7c2a394bbe03", "filename": "gcc/testsuite/gcc.target/i386/pr89229-4a.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd8679974b2ded884ffd7d912efef7fe13e4ff4f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-4a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd8679974b2ded884ffd7d912efef7fe13e4ff4f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-4a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-4a.c?ref=fd8679974b2ded884ffd7d912efef7fe13e4ff4f", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -march=skylake-avx512\" } */\n+\n+extern double d;\n+\n+void\n+foo1 (double x)\n+{\n+  register double xmm16 __asm (\"xmm16\") = x;\n+  asm volatile (\"\" : \"+v\" (xmm16));\n+  register double xmm17 __asm (\"xmm17\") = xmm16;\n+  asm volatile (\"\" : \"+v\" (xmm17));\n+  d = xmm17;\n+}\n+\n+/* { dg-final { scan-assembler-not \"vmovapd\" } } */"}, {"sha": "228aeb7b5800fa462e2b4b5c98bb1ea91632bbba", "filename": "gcc/testsuite/gcc.target/i386/pr89229-4b.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd8679974b2ded884ffd7d912efef7fe13e4ff4f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-4b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd8679974b2ded884ffd7d912efef7fe13e4ff4f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-4b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-4b.c?ref=fd8679974b2ded884ffd7d912efef7fe13e4ff4f", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -march=skylake-avx512 -mno-avx512vl\" } */\n+\n+#include \"pr89229-4a.c\"\n+\n+/* { dg-final { scan-assembler-not \"%zmm\\[0-9\\]+\" } } */\n+/* { dg-final { scan-assembler-not \"vmovapd\" } } */"}, {"sha": "537c82fbc540101ed81ece487597852fd99a3f8c", "filename": "gcc/testsuite/gcc.target/i386/pr89229-4c.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd8679974b2ded884ffd7d912efef7fe13e4ff4f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-4c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd8679974b2ded884ffd7d912efef7fe13e4ff4f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-4c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-4c.c?ref=fd8679974b2ded884ffd7d912efef7fe13e4ff4f", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -march=skylake-avx512 -mprefer-vector-width=512\" } */\n+\n+#include \"pr89229-4a.c\"\n+\n+/* { dg-final { scan-assembler-not \"%zmm\\[0-9\\]+\" } } */"}]}