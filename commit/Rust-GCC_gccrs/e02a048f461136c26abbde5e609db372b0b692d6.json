{"sha": "e02a048f461136c26abbde5e609db372b0b692d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTAyYTA0OGY0NjExMzZjMjZhYmJkZTVlNjA5ZGIzNzJiMGI2OTJkNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-02-07T12:16:22Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-02-07T12:16:22Z"}, "message": "re PR c++/30703 (ICE Segmentation fault on using OpenMP)\n\n\tPR c++/30703\n\t* gimplify.c (gimplify_scan_omp_clauses): Remove special casing\n\tof INDIRECT_REF <RESULT_DECL>.\n\n\t* cp-gimplify.c (cp_genericize_r): Don't dereference invisiref\n\tparameters and result decls in omp clauses.\n\t(cxx_omp_privatize_by_reference): Pass also invisiref PARM_DECLs\n\tby reference.\n\n\t* testsuite/libgomp.c++/pr30703.C: New test.\n\nFrom-SVN: r121688", "tree": {"sha": "0dbce13b42cdf7ff6f06b7e4a999b86fadffd4f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dbce13b42cdf7ff6f06b7e4a999b86fadffd4f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e02a048f461136c26abbde5e609db372b0b692d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e02a048f461136c26abbde5e609db372b0b692d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e02a048f461136c26abbde5e609db372b0b692d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e02a048f461136c26abbde5e609db372b0b692d6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca6e5fe99408ffaec70249480e4fb7aaba3cd5a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca6e5fe99408ffaec70249480e4fb7aaba3cd5a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca6e5fe99408ffaec70249480e4fb7aaba3cd5a8"}], "stats": {"total": 121, "additions": 110, "deletions": 11}, "files": [{"sha": "b76b3dd189b1eb44968c350adf6dea618ba0a277", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e02a048f461136c26abbde5e609db372b0b692d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e02a048f461136c26abbde5e609db372b0b692d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e02a048f461136c26abbde5e609db372b0b692d6", "patch": "@@ -1,5 +1,9 @@\n 2007-02-07  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/30703\n+\t* gimplify.c (gimplify_scan_omp_clauses): Remove special casing\n+\tof INDIRECT_REF <RESULT_DECL>.\n+\n \t* config/i386/i386.c (override_options): Set PTA_SSSE3 for core2.\n \n 2007-02-06  J\"orn Rennecke  <joern.rennecke@arc.com>"}, {"sha": "59f7260dfb0cd21d47ae8bfe0d525c1c7672c450", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e02a048f461136c26abbde5e609db372b0b692d6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e02a048f461136c26abbde5e609db372b0b692d6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e02a048f461136c26abbde5e609db372b0b692d6", "patch": "@@ -1,3 +1,11 @@\n+2007-02-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/30703\n+\t* cp-gimplify.c (cp_genericize_r): Don't dereference invisiref\n+\tparameters and result decls in omp clauses.\n+\t(cxx_omp_privatize_by_reference): Pass also invisiref PARM_DECLs\n+\tby reference.\n+\n 2007-02-05  Dirk Mueller  <dmueller@suse.de>\n \n \tPR bootstrap/30510"}, {"sha": "5ee1931dde127cb4904a21f043237f60224e1f39", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e02a048f461136c26abbde5e609db372b0b692d6/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e02a048f461136c26abbde5e609db372b0b692d6/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=e02a048f461136c26abbde5e609db372b0b692d6", "patch": "@@ -672,6 +672,25 @@ cp_genericize_r (tree *stmt_p, int *walk_subtrees, void *data)\n \t   && is_invisiref_parm (TREE_OPERAND (stmt, 0)))\n     /* Don't dereference an invisiref RESULT_DECL inside a RETURN_EXPR.  */\n     *walk_subtrees = 0;\n+  else if (TREE_CODE (stmt) == OMP_CLAUSE)\n+    switch (OMP_CLAUSE_CODE (stmt))\n+      {\n+      case OMP_CLAUSE_PRIVATE:\n+      case OMP_CLAUSE_SHARED:\n+      case OMP_CLAUSE_FIRSTPRIVATE:\n+      case OMP_CLAUSE_LASTPRIVATE:\n+      case OMP_CLAUSE_COPYIN:\n+      case OMP_CLAUSE_COPYPRIVATE:\n+\t/* Don't dereference an invisiref in OpenMP clauses.  */\n+\tif (is_invisiref_parm (OMP_CLAUSE_DECL (stmt)))\n+\t  *walk_subtrees = 0;\n+\tbreak;\n+      case OMP_CLAUSE_REDUCTION:\n+\tgcc_assert (!is_invisiref_parm (OMP_CLAUSE_DECL (stmt)));\n+\tbreak;\n+      default:\n+\tbreak;\n+      }\n   else if (IS_TYPE_OR_DECL_P (stmt))\n     *walk_subtrees = 0;\n \n@@ -911,5 +930,5 @@ cxx_omp_clause_dtor (tree clause, tree decl)\n bool\n cxx_omp_privatize_by_reference (tree decl)\n {\n-  return TREE_CODE (decl) == RESULT_DECL && DECL_BY_REFERENCE (decl);\n+  return is_invisiref_parm (decl);\n }"}, {"sha": "7ac43f421555f2904c0414fcaa1a60edba6d97f3", "filename": "gcc/gimplify.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e02a048f461136c26abbde5e609db372b0b692d6/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e02a048f461136c26abbde5e609db372b0b692d6/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=e02a048f461136c26abbde5e609db372b0b692d6", "patch": "@@ -4747,11 +4747,6 @@ gimplify_scan_omp_clauses (tree *list_p, tree *pre_p, bool in_parallel,\n \t      remove = true;\n \t      break;\n \t    }\n-\t  /* Handle NRV results passed by reference.  */\n-\t  if (TREE_CODE (decl) == INDIRECT_REF\n-\t      && TREE_CODE (TREE_OPERAND (decl, 0)) == RESULT_DECL\n-\t      && DECL_BY_REFERENCE (TREE_OPERAND (decl, 0)))\n-\t    OMP_CLAUSE_DECL (c) = decl = TREE_OPERAND (decl, 0);\n \t  omp_add_variable (ctx, decl, flags);\n \t  if (OMP_CLAUSE_CODE (c) == OMP_CLAUSE_REDUCTION\n \t      && OMP_CLAUSE_REDUCTION_PLACEHOLDER (c))\n@@ -4779,11 +4774,6 @@ gimplify_scan_omp_clauses (tree *list_p, tree *pre_p, bool in_parallel,\n \t      remove = true;\n \t      break;\n \t    }\n-\t  /* Handle NRV results passed by reference.  */\n-\t  if (TREE_CODE (decl) == INDIRECT_REF\n-\t      && TREE_CODE (TREE_OPERAND (decl, 0)) == RESULT_DECL\n-\t      && DECL_BY_REFERENCE (TREE_OPERAND (decl, 0)))\n-\t    OMP_CLAUSE_DECL (c) = decl = TREE_OPERAND (decl, 0);\n \tdo_notice:\n \t  if (outer_ctx)\n \t    omp_notice_variable (outer_ctx, decl, true);"}, {"sha": "300e733f54e6c1d417dc381097cb609c3c767c58", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e02a048f461136c26abbde5e609db372b0b692d6/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e02a048f461136c26abbde5e609db372b0b692d6/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=e02a048f461136c26abbde5e609db372b0b692d6", "patch": "@@ -1,3 +1,8 @@\n+2007-02-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/30703\n+\t* testsuite/libgomp.c++/pr30703.C: New test.\n+\n 2007-02-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tRevert:"}, {"sha": "d48efd952d4fa7e3cd7e2887c13f7045be559f6a", "filename": "libgomp/testsuite/libgomp.c++/pr30703.C", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e02a048f461136c26abbde5e609db372b0b692d6/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fpr30703.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e02a048f461136c26abbde5e609db372b0b692d6/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fpr30703.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fpr30703.C?ref=e02a048f461136c26abbde5e609db372b0b692d6", "patch": "@@ -0,0 +1,73 @@\n+// PR c++/30703\n+// { dg-do run }\n+\n+#include <omp.h>\n+\n+extern \"C\" void abort ();\n+\n+int ctor, cctor, dtor;\n+\n+struct A\n+{\n+  A();\n+  A(const A &);\n+  ~A();\n+  int i;\n+};\n+\n+A::A()\n+{\n+#pragma omp atomic\n+  ctor++;\n+}\n+\n+A::A(const A &r)\n+{\n+  i = r.i;\n+#pragma omp atomic\n+  cctor++;\n+}\n+\n+A::~A()\n+{\n+#pragma omp atomic\n+  dtor++;\n+}\n+\n+void\n+foo (A a, A b)\n+{\n+  int i, j = 0;\n+#pragma omp parallel for firstprivate (a) lastprivate (a) private (b) schedule (static, 1) num_threads (5)\n+  for (i = 0; i < 5; i++)\n+    {\n+      b.i = 5;\n+      if (a.i != 6)\n+\t#pragma omp atomic\n+\t  j += 1;\n+      a.i = b.i + i + 6;\n+    }\n+\n+  if (j || a.i != 15)\n+    abort ();\n+}\n+\n+void\n+bar ()\n+{\n+  A a, b;\n+  a.i = 6;\n+  b.i = 7;\n+  foo (a, b);\n+}\n+\n+int\n+main ()\n+{\n+  omp_set_dynamic (false);\n+  if (ctor || cctor || dtor)\n+    abort ();\n+  bar ();\n+  if (ctor + cctor != dtor)\n+    abort ();\n+}"}]}