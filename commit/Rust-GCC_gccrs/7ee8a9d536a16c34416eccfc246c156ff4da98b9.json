{"sha": "7ee8a9d536a16c34416eccfc246c156ff4da98b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VlOGE5ZDUzNmExNmMzNDQxNmVjY2ZjMjQ2YzE1NmZmNGRhOThiOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-17T21:44:20Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-17T21:44:20Z"}, "message": "(same_regs): Now arrays of ints.\n\nFrom-SVN: r4176", "tree": {"sha": "9d8c71d17f057a11bcdcb7c50f67fa0ad74191ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d8c71d17f057a11bcdcb7c50f67fa0ad74191ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ee8a9d536a16c34416eccfc246c156ff4da98b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ee8a9d536a16c34416eccfc246c156ff4da98b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ee8a9d536a16c34416eccfc246c156ff4da98b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ee8a9d536a16c34416eccfc246c156ff4da98b9/comments", "author": null, "committer": null, "parents": [{"sha": "568356af7b6ce5d567dde9fe765103d985b70b5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/568356af7b6ce5d567dde9fe765103d985b70b5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/568356af7b6ce5d567dde9fe765103d985b70b5b"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "303a700882e36250564fbfa7ecac13e66aa4d9e1", "filename": "gcc/jump.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ee8a9d536a16c34416eccfc246c156ff4da98b9/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ee8a9d536a16c34416eccfc246c156ff4da98b9/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=7ee8a9d536a16c34416eccfc246c156ff4da98b9", "patch": "@@ -3861,7 +3861,7 @@ true_regnum (x)\n    pending equivalences.  If nonzero, the expressions really aren't the\n    same.  */\n \n-static short *same_regs;\n+static int *same_regs;\n \n static int num_same_regs;\n \n@@ -3924,12 +3924,12 @@ thread_jumps (f, max_reg, verbose)\n   rtx b1op0, b1op1, b2op0, b2op1;\n   int changed = 1;\n   int i;\n-  short *all_reset;\n+  int *all_reset;\n \n   /* Allocate register tables and quick-reset table.  */\n   modified_regs = (char *) alloca (max_reg * sizeof (char));\n-  same_regs = (short *) alloca (max_reg * sizeof (short));\n-  all_reset = (short *) alloca (max_reg * sizeof (short));\n+  same_regs = (int *) alloca (max_reg * sizeof (int));\n+  all_reset = (int *) alloca (max_reg * sizeof (int));\n   for (i = 0; i < max_reg; i++)\n     all_reset[i] = -1;\n     \n@@ -3948,7 +3948,7 @@ thread_jumps (f, max_reg, verbose)\n \t  bzero (modified_regs, max_reg * sizeof (char));\n \t  modified_mem = 0;\n \n-\t  bcopy (all_reset, same_regs, max_reg * sizeof (short));\n+\t  bcopy (all_reset, same_regs, max_reg * sizeof (int));\n \t  num_same_regs = 0;\n \n \t  label = JUMP_LABEL (b1);"}]}