{"sha": "62446e6e25e2483e1ec5c3bfb119833fab0dd218", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI0NDZlNmUyNWUyNDgzZTFlYzVjM2JmYjExOTgzM2ZhYjBkZDIxOA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-01-11T16:02:23Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-01-11T16:02:23Z"}, "message": "re PR tree-optimization/69173 (ICE (segfault) in vinfo_for_stmt)\n\n2016-01-11  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/69173\n\t* tree-vect-loop.c (vect_fixup_scalar_cycles_with_patterns): Only\n\tfixup the cycle if all stmts are in a pattern.\n\n\t* gcc.dg/torture/pr69173.c: New testcase.\n\nFrom-SVN: r232230", "tree": {"sha": "5d7520898bbd7542c9de33d1ab99f3bdea430f87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d7520898bbd7542c9de33d1ab99f3bdea430f87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62446e6e25e2483e1ec5c3bfb119833fab0dd218", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62446e6e25e2483e1ec5c3bfb119833fab0dd218", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62446e6e25e2483e1ec5c3bfb119833fab0dd218", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62446e6e25e2483e1ec5c3bfb119833fab0dd218/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a28db463b4d0ce7ee87a85ab2dbcb68eda9ef22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a28db463b4d0ce7ee87a85ab2dbcb68eda9ef22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a28db463b4d0ce7ee87a85ab2dbcb68eda9ef22"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "a256b34d9785728f2695e05e530f137c87e26134", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62446e6e25e2483e1ec5c3bfb119833fab0dd218/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62446e6e25e2483e1ec5c3bfb119833fab0dd218/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62446e6e25e2483e1ec5c3bfb119833fab0dd218", "patch": "@@ -1,3 +1,9 @@\n+2016-01-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/69173\n+\t* tree-vect-loop.c (vect_fixup_scalar_cycles_with_patterns): Only\n+\tfixup the cycle if all stmts are in a pattern.\n+\n 2016-01-11  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR middle-end/68999"}, {"sha": "414c17411fc8e934e73f606d5db9521b3a2f50a7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62446e6e25e2483e1ec5c3bfb119833fab0dd218/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62446e6e25e2483e1ec5c3bfb119833fab0dd218/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=62446e6e25e2483e1ec5c3bfb119833fab0dd218", "patch": "@@ -1,3 +1,8 @@\n+2016-01-11  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/69173\n+\t* gcc.dg/torture/pr69173.c: New testcase.\n+\n 2016-01-11  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR rtl-optimization/68796"}, {"sha": "f2936ce1e702ff0bd744c79198a6b886f0bb2025", "filename": "gcc/testsuite/gcc.dg/torture/pr69173.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62446e6e25e2483e1ec5c3bfb119833fab0dd218/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr69173.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62446e6e25e2483e1ec5c3bfb119833fab0dd218/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr69173.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr69173.c?ref=62446e6e25e2483e1ec5c3bfb119833fab0dd218", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+\n+unsigned a;\n+unsigned *b;\n+void fn1() {\n+    char c;\n+    while (b < (unsigned *)fn1)\n+      {\n+\ta += b[2] + c;\n+\tb++;\n+      }\n+}"}, {"sha": "a797f7056de22ffc842ea687bb4c77956ce0b62e", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62446e6e25e2483e1ec5c3bfb119833fab0dd218/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62446e6e25e2483e1ec5c3bfb119833fab0dd218/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=62446e6e25e2483e1ec5c3bfb119833fab0dd218", "patch": "@@ -985,9 +985,21 @@ vect_fixup_scalar_cycles_with_patterns (loop_vec_info loop_vinfo)\n   FOR_EACH_VEC_ELT (LOOP_VINFO_REDUCTION_CHAINS (loop_vinfo), i, first)\n     if (STMT_VINFO_IN_PATTERN_P (vinfo_for_stmt (first)))\n       {\n-\tvect_fixup_reduc_chain (first);\n-\tLOOP_VINFO_REDUCTION_CHAINS (loop_vinfo)[i]\n-\t  = STMT_VINFO_RELATED_STMT (vinfo_for_stmt (first));\n+\tgimple *next = GROUP_NEXT_ELEMENT (vinfo_for_stmt (first));\n+\twhile (next)\n+\t  {\n+\t    if (! STMT_VINFO_IN_PATTERN_P (vinfo_for_stmt (next)))\n+\t      break;\n+\t    next = GROUP_NEXT_ELEMENT (vinfo_for_stmt (next));\n+\t  }\n+\t/* If not all stmt in the chain are patterns try to handle\n+\t   the chain without patterns.  */\n+\tif (! next)\n+\t  {\n+\t    vect_fixup_reduc_chain (first);\n+\t    LOOP_VINFO_REDUCTION_CHAINS (loop_vinfo)[i]\n+\t      = STMT_VINFO_RELATED_STMT (vinfo_for_stmt (first));\n+\t  }\n       }\n }\n "}]}