{"sha": "2e8e74c0ad0110732111082eb48deed18b66221d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU4ZTc0YzBhZDAxMTA3MzIxMTEwODJlYjQ4ZGVlZDE4YjY2MjIxZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-08-07T19:48:30Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-08-07T19:48:30Z"}, "message": "re PR c++/61959 (ICE: in tree_to_uhwi, at tree.h:3657 when building Mozilla code)\n\n\tPR c++/61959\n\t* semantics.c (cxx_eval_bare_aggregate): Handle POINTER_PLUS_EXPR.\n\nFrom-SVN: r213731", "tree": {"sha": "f24f43aa8bdf5341497ccecdba62f97d103406fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f24f43aa8bdf5341497ccecdba62f97d103406fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e8e74c0ad0110732111082eb48deed18b66221d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e8e74c0ad0110732111082eb48deed18b66221d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e8e74c0ad0110732111082eb48deed18b66221d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e8e74c0ad0110732111082eb48deed18b66221d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "34c1359ee150a881d2d3df46687a975aef5538ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34c1359ee150a881d2d3df46687a975aef5538ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34c1359ee150a881d2d3df46687a975aef5538ad"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "1925891c3f38b980c9ae0b62246a10a6161375b1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e8e74c0ad0110732111082eb48deed18b66221d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e8e74c0ad0110732111082eb48deed18b66221d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2e8e74c0ad0110732111082eb48deed18b66221d", "patch": "@@ -1,3 +1,8 @@\n+2014-08-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/61959\n+\t* semantics.c (cxx_eval_bare_aggregate): Handle POINTER_PLUS_EXPR.\n+\n 2014-08-07  Trevor Saunders  <tsaunders@mozilla.com>\n \n \t* cp-tree.h, pt.c: Use hash_map instead of pointer_map."}, {"sha": "4cd9bee353fbbaf2ae861225cb95747183938a98", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e8e74c0ad0110732111082eb48deed18b66221d/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e8e74c0ad0110732111082eb48deed18b66221d/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=2e8e74c0ad0110732111082eb48deed18b66221d", "patch": "@@ -8977,7 +8977,9 @@ cxx_eval_bare_aggregate (const constexpr_call *call, tree t,\n \t  constructor_elt *inner = base_field_constructor_elt (n, ce->index);\n \t  inner->value = elt;\n \t}\n-      else if (ce->index && TREE_CODE (ce->index) == NOP_EXPR)\n+      else if (ce->index\n+\t       && (TREE_CODE (ce->index) == NOP_EXPR\n+\t\t   || TREE_CODE (ce->index) == POINTER_PLUS_EXPR))\n \t{\n \t  /* This is an initializer for an empty base; now that we've\n \t     checked that it's constant, we can ignore it.  */"}, {"sha": "f491994a1fed1a7f6fdd60dd075a086f7e4fe51b", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-empty7.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e8e74c0ad0110732111082eb48deed18b66221d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e8e74c0ad0110732111082eb48deed18b66221d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-empty7.C?ref=2e8e74c0ad0110732111082eb48deed18b66221d", "patch": "@@ -0,0 +1,28 @@\n+// PR c++/61959\n+// { dg-do compile { target c++11 } }\n+\n+template <class Coord> struct BasePoint\n+{\n+  Coord x, y;\n+  constexpr BasePoint (Coord, Coord) : x (0), y (0) {}\n+};\n+template <class T> struct BaseCoord\n+{\n+  int value;\n+  constexpr BaseCoord (T) : value (1) {}\n+};\n+template <class units> struct IntCoordTyped : BaseCoord<int>, units\n+{\n+  typedef BaseCoord Super;\n+  constexpr IntCoordTyped (int) : Super (0) {}\n+};\n+template <class units>\n+struct IntPointTyped : BasePoint<IntCoordTyped<units> >, units\n+{\n+  typedef BasePoint<IntCoordTyped<units> > Super;\n+  constexpr IntPointTyped (int, int) : Super (0, 0) {}\n+};\n+struct A\n+{\n+};\n+IntPointTyped<A> a (0, 0);"}]}