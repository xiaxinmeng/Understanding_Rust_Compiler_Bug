{"sha": "25412599b4618a042ef23c2de92d423391679ad8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU0MTI1OTliNDYxOGEwNDJlZjIzYzJkZTkyZDQyMzM5MTY3OWFkOA==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2003-10-22T21:34:51Z"}, "committer": {"name": "Danny Smith", "email": "dannysmith@gcc.gnu.org", "date": "2003-10-22T21:34:51Z"}, "message": "sysdep.c: Include conio.h if __MINGW32__ and !OLD_MINGW.\n\n\t* sysdep.c: Include conio.h if __MINGW32__ and !OLD_MINGW.\n\n\t* ctrl_c.c (__gnat_int_handler): Remove declaration.\n\n\t* decl.c (creat_concat_name):  Const-ify prefix.\n\n\t* adaint.c: Include ctype.h if __MINGW32__.\n\t(__gnat_readlink): Mark arguments as possibly unused.\n\t(__gnat_symlink): Likewise.\n\t(__gnat_is_symbolic_link): Likewise.\n\t(__gnat_portable_spawn): Likewise.  Cast last arg of spawnvp to match\n\tdeclaration\n\t(__gnat_file_time_name): Don't declare struct stat statbuf when\n\tnot needed.\n\t(__gnat_is_absolute_path): Add parenthesis around condition of\n\t'if' statement to avoid warning.\n\t(__gnat_plist_init): Specify void as parameter.\n\t(plist_enter): Likewise.\n\t(plist_leave): Likewise.\n\t(remove_handle): Make static. Initialize prev.\n\nFrom-SVN: r72824", "tree": {"sha": "1780c9b5b3a2f29ec96b896c364f0c77eb0c06ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1780c9b5b3a2f29ec96b896c364f0c77eb0c06ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25412599b4618a042ef23c2de92d423391679ad8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25412599b4618a042ef23c2de92d423391679ad8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25412599b4618a042ef23c2de92d423391679ad8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25412599b4618a042ef23c2de92d423391679ad8/comments", "author": null, "committer": null, "parents": [{"sha": "218d5a871cff811b258266b2ff91addbb6f49a47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/218d5a871cff811b258266b2ff91addbb6f49a47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/218d5a871cff811b258266b2ff91addbb6f49a47"}], "stats": {"total": 64, "additions": 46, "deletions": 18}, "files": [{"sha": "1eb48bf41d4f0b40e7e74b6fac7f4937aeecf79c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25412599b4618a042ef23c2de92d423391679ad8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25412599b4618a042ef23c2de92d423391679ad8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=25412599b4618a042ef23c2de92d423391679ad8", "patch": "@@ -1,3 +1,26 @@\n+2003-10-22  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\t* sysdep.c: Include conio.h if __MINGW32__ and !OLD_MINGW.\n+\n+\t* ctrl_c.c (__gnat_int_handler): Remove declaration.\n+\n+\t* decl.c (creat_concat_name):  Const-ify prefix.\n+\n+\t* adaint.c: Include ctype.h if __MINGW32__.\n+\t(__gnat_readlink): Mark arguments as possibly unused.\n+\t(__gnat_symlink): Likewise.\n+\t(__gnat_is_symbolic_link): Likewise.\n+\t(__gnat_portable_spawn): Likewise.  Cast last arg of spawnvp to match\n+\tdeclaration\n+\t(__gnat_file_time_name): Don't declare struct stat statbuf when \n+\tnot needed.\n+\t(__gnat_is_absolute_path): Add parenthesis around condition of\n+\t'if' statement to avoid warning.\n+\t(__gnat_plist_init): Specify void as parameter.\n+\t(plist_enter): Likewise.\n+\t(plist_leave): Likewise.\n+\t(remove_handle): Make static. Initialize prev.\n+\n 2003-10-22  Arnaud Charlet  <charlet@act-europe.fr>\n \n \t* Makefile.in: Disable build of gnatpa. PR ada/10110."}, {"sha": "6ad07530b8d6349442b0b477469a80c4195249bd", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25412599b4618a042ef23c2de92d423391679ad8/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25412599b4618a042ef23c2de92d423391679ad8/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=25412599b4618a042ef23c2de92d423391679ad8", "patch": "@@ -69,6 +69,7 @@\n #ifdef __MINGW32__\n #include \"mingw32.h\"\n #include <sys/utime.h>\n+#include <ctype.h>\n #else\n #ifndef VMS\n #include <utime.h>\n@@ -312,7 +313,9 @@ __gnat_to_gm_time\n    OS/2 and vxworks, always return -1.  */\n \n int\n-__gnat_readlink (char *path, char *buf, size_t bufsiz)\n+__gnat_readlink (char *path ATTRIBUTE_UNUSED,\n+\t\t char *buf ATTRIBUTE_UNUSED,\n+\t\t size_t bufsiz ATTRIBUTE_UNUSED)\n {\n #if defined (MSDOS) || defined (_WIN32) || defined (__EMX__)\n   return -1;\n@@ -330,7 +333,8 @@ __gnat_readlink (char *path, char *buf, size_t bufsiz)\n    Interix and VMS, always return -1. */\n \n int\n-__gnat_symlink (char *oldpath, char *newpath)\n+__gnat_symlink (char *oldpath ATTRIBUTE_UNUSED,\n+\t\tchar *newpath ATTRIBUTE_UNUSED)\n {\n #if defined (MSDOS) || defined (_WIN32) || defined (__EMX__)\n   return -1;\n@@ -826,7 +830,6 @@ win32_filetime (HANDLE h)\n time_t\n __gnat_file_time_name (char *name)\n {\n-  struct stat statbuf;\n \n #if defined (__EMX__) || defined (MSDOS)\n   int fd = open (name, O_RDONLY | O_BINARY);\n@@ -841,7 +844,7 @@ __gnat_file_time_name (char *name)\n   CloseHandle (h);\n   return ret;\n #else\n-\n+  struct stat statbuf;\n   (void) __gnat_stat (name, &statbuf);\n #ifdef VMS\n   /* VMS has file versioning.  */\n@@ -1343,7 +1346,7 @@ __gnat_is_absolute_path (char *name)\n {\n   return (*name == '/' || *name == DIR_SEPARATOR\n #if defined (__EMX__) || defined (MSDOS) || defined (WINNT)\n-      || strlen (name) > 1 && isalpha (name[0]) && name[1] == ':'\n+      || (strlen (name) > 1 && isalpha (name[0]) && name[1] == ':')\n #endif\n \t  );\n }\n@@ -1421,7 +1424,7 @@ __gnat_set_readonly (char *name)\n }\n \n int\n-__gnat_is_symbolic_link (char *name)\n+__gnat_is_symbolic_link (char *name ATTRIBUTE_UNUSED)\n {\n #if defined (__vxworks)\n   return 0;\n@@ -1455,11 +1458,11 @@ int\n __gnat_portable_spawn (char *args[])\n {\n   int status = 0;\n-  int finished;\n-  int pid;\n+  int finished ATTRIBUTE_UNUSED;\n+  int pid ATTRIBUTE_UNUSED;\n \n #if defined (MSDOS) || defined (_WIN32)\n-  status = spawnvp (P_WAIT, args[0], args);\n+  status = spawnvp (P_WAIT, args[0],(const char* const*)args);\n   if (status < 0)\n     return -1;\n   else\n@@ -1512,19 +1515,19 @@ __gnat_portable_spawn (char *args[])\n static CRITICAL_SECTION plist_cs;\n \n void\n-__gnat_plist_init ()\n+__gnat_plist_init (void)\n {\n   InitializeCriticalSection (&plist_cs);\n }\n \n static void\n-plist_enter ()\n+plist_enter (void)\n {\n   EnterCriticalSection (&plist_cs);\n }\n \n static void\n-plist_leave ()\n+plist_leave (void)\n {\n   LeaveCriticalSection (&plist_cs);\n }\n@@ -1558,9 +1561,11 @@ add_handle (HANDLE h)\n   plist_leave();\n }\n \n-void remove_handle (HANDLE h)\n+static void\n+remove_handle (HANDLE h)\n {\n-  Process_List *pl, *prev;\n+  Process_List *pl;\n+  Process_List *prev = NULL;\n \n   plist_enter();\n "}, {"sha": "22d00667275dd4bed38e379568771160b543970c", "filename": "gcc/ada/ctrl_c.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25412599b4618a042ef23c2de92d423391679ad8/gcc%2Fada%2Fctrl_c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25412599b4618a042ef23c2de92d423391679ad8/gcc%2Fada%2Fctrl_c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fctrl_c.c?ref=25412599b4618a042ef23c2de92d423391679ad8", "patch": "@@ -48,8 +48,6 @@ void __gnat_install_int_handler (void (*) (void));\n /* __gnat_uninstall_int_handler will reinstall the original handler */\n void __gnat_uninstall_int_handler (void);\n \n-static void __gnat_int_handler (int);\n-\n /* POSIX implementation */\n \n #if (defined (_AIX) || defined (unix)) && !defined (__vxworks)\n@@ -104,7 +102,7 @@ __gnat_uninstall_int_handler (void)\n #include \"mingw32.h\"\n #include <windows.h>\n \n-void (*sigint_intercepted) () = NULL;\n+void (*sigint_intercepted) (void) = NULL;\n \n static BOOL WINAPI\n __gnat_int_handler  (DWORD dwCtrlType)"}, {"sha": "bbad5b50e4676eca6744ad05bc4343281a317f4c", "filename": "gcc/ada/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25412599b4618a042ef23c2de92d423391679ad8/gcc%2Fada%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25412599b4618a042ef23c2de92d423391679ad8/gcc%2Fada%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdecl.c?ref=25412599b4618a042ef23c2de92d423391679ad8", "patch": "@@ -6451,7 +6451,7 @@ create_concat_name (gnat_entity, suffix)\n \n   {\n     Entity_Kind kind = Ekind (gnat_entity);\n-    char *prefix = \"_imp__\";\n+    const char *prefix = \"_imp__\";\n     int plen = strlen (prefix);\n \n     if ((kind == E_Variable || kind == E_Constant)"}, {"sha": "836f3d53528154e2fbbffce3e8e0ee51ca5eeab3", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25412599b4618a042ef23c2de92d423391679ad8/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25412599b4618a042ef23c2de92d423391679ad8/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=25412599b4618a042ef23c2de92d423391679ad8", "patch": "@@ -298,6 +298,8 @@ __gnat_ttyname (filedes)\n #ifdef __MINGW32__\n #if OLD_MINGW\n #include <termios.h>\n+#else\n+#include <conio.h>  /* for getch(), kbhit() */\n #endif\n #else\n #include <termios.h>"}]}