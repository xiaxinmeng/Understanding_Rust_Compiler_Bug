{"sha": "b343a29dbcbfc5eaca11243ac603a1e5b48630f3", "node_id": "C_kwDOANBUbNoAKGIzNDNhMjlkYmNiZmM1ZWFjYTExMjQzYWM2MDNhMWU1YjQ4NjMwZjM", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2021-10-28T06:11:56Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2021-10-28T07:45:55Z"}, "message": "rs6000: Fix ICE of vect cost related to V1TI [PR102767]\n\nAs PR102767 shows, the commit r12-3482 exposed one ICE in function\nrs6000_builtin_vectorization_cost.  We claims V1TI supports\nmovmisalign on rs6000 (See define_expand \"movmisalign<mode>\"), so\nit return true in rs6000_builtin_support_vector_misalignment for\nmisalign 8.  Later in the cost querying function\nrs6000_builtin_vectorization_cost, we don't have the arms to handle\nthe V1TI input under (TARGET_VSX && TARGET_ALLOW_MOVMISALIGN).\n\nThe proposed fix is to add the consideration for V1TI, simply make\nit as the cost for doubleword which is apparently bigger than the\ncost of scalar, won't have the vectorization to happen, just to\nkeep consistency and avoid ICE.  Another thought is to not support\nmovmisalign for V1TI, but it sounds like a bad idea since it doesn't\nmatch the reality.\n\nNote that this patch also fixes up the wrong indentations around.\n\ngcc/ChangeLog:\n\n\tPR target/102767\n\t* config/rs6000/rs6000.c (rs6000_builtin_vectorization_cost): Consider\n\tV1T1 mode for unaligned load and store.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/102767\n\t* gcc.target/powerpc/ppc-fortran/pr102767.f90: New file.", "tree": {"sha": "eadded5b9791d06c64dbefdd7a20ccbc9215eef5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eadded5b9791d06c64dbefdd7a20ccbc9215eef5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b343a29dbcbfc5eaca11243ac603a1e5b48630f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b343a29dbcbfc5eaca11243ac603a1e5b48630f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b343a29dbcbfc5eaca11243ac603a1e5b48630f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b343a29dbcbfc5eaca11243ac603a1e5b48630f3/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2dc835cd0b5183a0e30b2b052362ad05f5c082b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dc835cd0b5183a0e30b2b052362ad05f5c082b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dc835cd0b5183a0e30b2b052362ad05f5c082b0"}], "stats": {"total": 85, "additions": 54, "deletions": 31}, "files": [{"sha": "bee3fc8cbe4c33c7937712f713e08afbf80f0dde", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 33, "deletions": 31, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b343a29dbcbfc5eaca11243ac603a1e5b48630f3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b343a29dbcbfc5eaca11243ac603a1e5b48630f3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=b343a29dbcbfc5eaca11243ac603a1e5b48630f3", "patch": "@@ -5146,7 +5146,8 @@ rs6000_builtin_vectorization_cost (enum vect_cost_for_stmt type_of_cost,\n \tif (TARGET_VSX && TARGET_ALLOW_MOVMISALIGN)\n \t  {\n \t    elements = TYPE_VECTOR_SUBPARTS (vectype);\n-\t    if (elements == 2)\n+\t    /* See PR102767, consider V1TI to keep consistency.  */\n+\t    if (elements == 2 || elements == 1)\n \t      /* Double word aligned.  */\n \t      return 4;\n \n@@ -5183,39 +5184,40 @@ rs6000_builtin_vectorization_cost (enum vect_cost_for_stmt type_of_cost,\n \tif (TARGET_EFFICIENT_UNALIGNED_VSX)\n \t  return 1;\n \n-        if (TARGET_VSX && TARGET_ALLOW_MOVMISALIGN)\n-          {\n-            elements = TYPE_VECTOR_SUBPARTS (vectype);\n-            if (elements == 2)\n-              /* Double word aligned.  */\n-              return 2;\n+\tif (TARGET_VSX && TARGET_ALLOW_MOVMISALIGN)\n+\t  {\n+\t    elements = TYPE_VECTOR_SUBPARTS (vectype);\n+\t    /* See PR102767, consider V1TI to keep consistency.  */\n+\t    if (elements == 2 || elements == 1)\n+\t      /* Double word aligned.  */\n+\t      return 2;\n \n-            if (elements == 4)\n-              {\n-                switch (misalign)\n-                  {\n-                    case 8:\n-                      /* Double word aligned.  */\n-                      return 2;\n-\n-                    case -1:\n-                      /* Unknown misalignment.  */\n-                    case 4:\n-                    case 12:\n-                      /* Word aligned.  */\n-                      return 23;\n-\n-                    default:\n-                      gcc_unreachable ();\n-                  }\n-              }\n-          }\n+\t    if (elements == 4)\n+\t      {\n+\t\tswitch (misalign)\n+\t\t  {\n+\t\t  case 8:\n+\t\t    /* Double word aligned.  */\n+\t\t    return 2;\n \n-        if (TARGET_ALTIVEC)\n-          /* Misaligned stores are not supported.  */\n-          gcc_unreachable ();\n+\t\t  case -1:\n+\t\t    /* Unknown misalignment.  */\n+\t\t  case 4:\n+\t\t  case 12:\n+\t\t    /* Word aligned.  */\n+\t\t    return 23;\n \n-        return 2;\n+\t\t  default:\n+\t\t    gcc_unreachable ();\n+\t\t  }\n+\t      }\n+\t  }\n+\n+\tif (TARGET_ALTIVEC)\n+\t  /* Misaligned stores are not supported.  */\n+\t  gcc_unreachable ();\n+\n+\treturn 2;\n \n       case vec_construct:\n \t/* This is a rough approximation assuming non-constant elements"}, {"sha": "6853cfee772f86f03bfe619a71b4cf4c0440e233", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-fortran/pr102767.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b343a29dbcbfc5eaca11243ac603a1e5b48630f3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-fortran%2Fpr102767.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b343a29dbcbfc5eaca11243ac603a1e5b48630f3/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-fortran%2Fpr102767.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-fortran%2Fpr102767.f90?ref=b343a29dbcbfc5eaca11243ac603a1e5b48630f3", "patch": "@@ -0,0 +1,21 @@\n+! { dg-require-effective-target powerpc_vsx_ok }\n+! { dg-options \"-mvsx -O2 -ftree-vectorize -mno-efficient-unaligned-vsx\" }\n+\n+INTERFACE\n+  FUNCTION elemental_mult (a, b, c)\n+    type(*), DIMENSION(..) :: a, b, c\n+  END\n+END INTERFACE\n+\n+allocatable  z\n+integer, dimension(2,2) :: a, b\n+call test_CFI_address\n+contains\n+  subroutine test_CFI_address\n+    if (elemental_mult (z, x, y) .ne. 0) stop\n+    a = reshape ([4,3,2,1], [2,2])\n+    b = reshape ([2,3,4,5], [2,2])\n+    if (elemental_mult (i, a, b) .ne. 0) stop\n+  end\n+end\n+"}]}