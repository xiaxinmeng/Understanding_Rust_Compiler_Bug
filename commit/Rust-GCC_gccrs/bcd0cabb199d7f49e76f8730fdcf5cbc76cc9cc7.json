{"sha": "bcd0cabb199d7f49e76f8730fdcf5cbc76cc9cc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmNkMGNhYmIxOTlkN2Y0OWU3NmY4NzMwZmRjZjVjYmM3NmNjOWNjNw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2001-02-16T03:35:50Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-02-16T03:35:50Z"}, "message": "istream.tcc: Use ios_base::iostate in place of iostate throughout.\n\n\t* include/bits/istream.tcc: Use ios_base::iostate in place of\n\tiostate throughout.  Insert `typename' keyword where necessary.\n\t* include/bits/ostream.tcc: Insert `typename' keyword where\n\tnecessary.\n\nFrom-SVN: r39743", "tree": {"sha": "21418664bffc0a711be8d7e32ff634aea6d88e95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21418664bffc0a711be8d7e32ff634aea6d88e95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bcd0cabb199d7f49e76f8730fdcf5cbc76cc9cc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcd0cabb199d7f49e76f8730fdcf5cbc76cc9cc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcd0cabb199d7f49e76f8730fdcf5cbc76cc9cc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcd0cabb199d7f49e76f8730fdcf5cbc76cc9cc7/comments", "author": null, "committer": null, "parents": [{"sha": "e6ec3b2ac3348292003d72c7daac8d0fab619d18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6ec3b2ac3348292003d72c7daac8d0fab619d18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6ec3b2ac3348292003d72c7daac8d0fab619d18"}], "stats": {"total": 51, "additions": 29, "deletions": 22}, "files": [{"sha": "71edd6af3c6c862e385da337fd9df7fc7ed942d8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcd0cabb199d7f49e76f8730fdcf5cbc76cc9cc7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcd0cabb199d7f49e76f8730fdcf5cbc76cc9cc7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bcd0cabb199d7f49e76f8730fdcf5cbc76cc9cc7", "patch": "@@ -1,3 +1,10 @@\n+2001-02-15  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* include/bits/istream.tcc: Use ios_base::iostate in place of\n+\tiostate throughout.  Insert `typename' keyword where necessary.\n+\t* include/bits/ostream.tcc: Insert `typename' keyword where\n+\tnecessary.\n+\t\n 2001-02-15  Jeffrey Oldham  <oldham@codesourcery.com>\n \n         * include/bits/c++config (_GLIBCPP_FULLY_COMPLIANT_HEADERS):"}, {"sha": "fdec945365db2014084fccfb2605022f89c37a79", "filename": "libstdc++-v3/include/bits/istream.tcc", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcd0cabb199d7f49e76f8730fdcf5cbc76cc9cc7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcd0cabb199d7f49e76f8730fdcf5cbc76cc9cc7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc?ref=bcd0cabb199d7f49e76f8730fdcf5cbc76cc9cc7", "patch": "@@ -151,7 +151,7 @@ namespace std {\n       if (__cerb) \n \t{\n \t  try {\n-\t    iostate __err = iostate(ios_base::goodbit);\n+\t    ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);\n \t    _M_fnumget->get(*this, 0, *this, __err, __n);\n \t    this->setstate(__err);\n \t  }\n@@ -175,7 +175,7 @@ namespace std {\n       if (__cerb) \n \t{\n \t  try {\n-\t    iostate __err = iostate(ios_base::goodbit);\n+\t    ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);\n \t    _M_fnumget->get(*this, 0, *this, __err, __n);\n \t    this->setstate(__err);\n \t  }\n@@ -199,7 +199,7 @@ namespace std {\n       if (__cerb) \n \t{\n \t  try {\n-\t    iostate __err = iostate(ios_base::goodbit);\n+\t    ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);\n \t    _M_fnumget->get(*this, 0, *this, __err, __n);\n \t    this->setstate(__err);\n \t  }\n@@ -223,7 +223,7 @@ namespace std {\n       if (__cerb) \n \t{\n \t  try {\n-\t    iostate __err = iostate(ios_base::goodbit);\n+\t    ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);\n \t    _M_fnumget->get(*this, 0, *this, __err, __n);\n \t    this->setstate(__err);\n \t  }\n@@ -247,7 +247,7 @@ namespace std {\n       if (__cerb) \n \t{\n \t  try {\n-\t    iostate __err = iostate(ios_base::goodbit);\n+\t    ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);\n \t    _M_fnumget->get(*this, 0, *this, __err, __n);\n \t    this->setstate(__err);\n \t  }\n@@ -271,7 +271,7 @@ namespace std {\n       if (__cerb) \n \t{\n \t  try {\n-\t    iostate __err = iostate(ios_base::goodbit);\n+\t    ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);\n \t    _M_fnumget->get(*this, 0, *this, __err, __n);\n \t    this->setstate(__err);\n \t  }\n@@ -295,7 +295,7 @@ namespace std {\n       if (__cerb) \n \t{\n \t  try {\n-\t    iostate __err = iostate(ios_base::goodbit);\n+\t    ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);\n \t    _M_fnumget->get(*this, 0, *this, __err, __n);\n \t    this->setstate(__err);\n \t  }\n@@ -320,7 +320,7 @@ namespace std {\n       if (__cerb) \n \t{\n \t  try {\n-\t    iostate __err = iostate(ios_base::goodbit);\n+\t    ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);\n \t    _M_fnumget->get(*this, 0, *this, __err, __n);\n \t    this->setstate(__err);\n \t  }\n@@ -344,7 +344,7 @@ namespace std {\n       if (__cerb) \n \t{\n \t  try {\n-\t    iostate __err = iostate(ios_base::goodbit);\n+\t    ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);\n \t    _M_fnumget->get(*this, 0, *this, __err, __n);\n \t    this->setstate(__err);\n \t  }\n@@ -369,7 +369,7 @@ namespace std {\n       if (__cerb) \n \t{\n \t  try {\n-\t    iostate __err = iostate(ios_base::goodbit);\n+\t    ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);\n \t    _M_fnumget->get(*this, 0, *this, __err, __n);\n \t    this->setstate(__err);\n \t  }\n@@ -393,7 +393,7 @@ namespace std {\n       if (__cerb) \n \t{\n \t  try {\n-\t    iostate __err = iostate(ios_base::goodbit);\n+\t    ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);\n \t    _M_fnumget->get(*this, 0, *this, __err, __n);\n \t    this->setstate(__err);\n \t  }\n@@ -417,7 +417,7 @@ namespace std {\n       if (__cerb) \n \t{\n \t  try {\n-\t    iostate __err = iostate(ios_base::goodbit);\n+\t    ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);\n \t    _M_fnumget->get(*this, 0, *this, __err, __n);\n \t    this->setstate(__err);\n \t  }\n@@ -441,7 +441,7 @@ namespace std {\n       if (__cerb) \n \t{\n \t  try {\n-\t    iostate __err = iostate(ios_base::goodbit);\n+\t    ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);\n \t    _M_fnumget->get(*this, 0, *this, __err, __n);\n \t    this->setstate(__err);\n \t  }\n@@ -988,7 +988,7 @@ namespace std {\n     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT& __c)\n     {\n       typedef basic_istream<_CharT, _Traits> \t\t__istream_type;\n-      __istream_type::sentry __cerb(__in, false);\n+      typename __istream_type::sentry __cerb(__in, false);\n       if (__cerb)\n \t{\n \t  try {\n@@ -1018,7 +1018,7 @@ namespace std {\n       typedef ctype<_CharT>     \t\t\t__ctype_type;\n       int_type __extracted = 0;\n \n-      __istream_type::sentry __cerb(__in, false);\n+      typename __istream_type::sentry __cerb(__in, false);\n       if (__cerb)\n \t{\n \t  try {\n@@ -1115,7 +1115,7 @@ namespace std {\n       typedef typename __string_type::size_type\t\t__size_type;\n       __int_type __extracted = 0;\n \n-      __istream_type::sentry __cerb(__in, false);\n+      typename __istream_type::sentry __cerb(__in, false);\n       if (__cerb) \n \t{\n \t  __str.erase();\n@@ -1166,7 +1166,7 @@ namespace std {\n \n       __size_type __extracted = 0;\n       bool __testdelim = false;\n-      __istream_type::sentry __cerb(__in, true);\n+      typename __istream_type::sentry __cerb(__in, true);\n       if (__cerb) \n \t{\n \t  __str.erase();"}, {"sha": "64e006f15ad8a18e7a607e437562bf554dc360af", "filename": "libstdc++-v3/include/bits/ostream.tcc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bcd0cabb199d7f49e76f8730fdcf5cbc76cc9cc7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bcd0cabb199d7f49e76f8730fdcf5cbc76cc9cc7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc?ref=bcd0cabb199d7f49e76f8730fdcf5cbc76cc9cc7", "patch": "@@ -491,7 +491,7 @@ namespace std {\n     operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)\n     {\n       typedef basic_ostream<_CharT, _Traits> __ostream_type;\n-      __ostream_type::sentry __cerb(__out);\n+      typename __ostream_type::sentry __cerb(__out);\n       if (__cerb)\n \t{\n \t  try {\n@@ -524,7 +524,7 @@ namespace std {\n     operator<<(basic_ostream<char, _Traits>& __out, char __c)\n     {\n       typedef basic_ostream<char, _Traits> __ostream_type;\n-      __ostream_type::sentry __cerb(__out);\n+      typename __ostream_type::sentry __cerb(__out);\n       if (__cerb)\n \t{\n \t  try {\n@@ -556,7 +556,7 @@ namespace std {\n     operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)\n     {\n       typedef basic_ostream<_CharT, _Traits> __ostream_type;\n-      __ostream_type::sentry __cerb(__out);\n+      typename __ostream_type::sentry __cerb(__out);\n       if (__cerb)\n \t{\n \t  try {\n@@ -592,7 +592,7 @@ namespace std {\n // 167.  Improper use of traits_type::length()\n       typedef char_traits<char>\t\t     __ctraits_type;\n #endif\n-      __ostream_type::sentry __cerb(__out);\n+      typename __ostream_type::sentry __cerb(__out);\n       if (__cerb)\n \t{\n \t  size_t __clen = __ctraits_type::length(__s);\n@@ -632,7 +632,7 @@ namespace std {\n     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)\n     {\n       typedef basic_ostream<char, _Traits> __ostream_type;\n-      __ostream_type::sentry __cerb(__out);\n+      typename __ostream_type::sentry __cerb(__out);\n       if (__cerb)\n \t{\n \t  try {"}]}