{"sha": "3ef4678208cb06208343de776ad96de2db4de25c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VmNDY3ODIwOGNiMDYyMDgzNDNkZTc3NmFkOTZkZTJkYjRkZTI1Yw==", "commit": {"author": {"name": "Alexander Monakov", "email": "amonakov@ispras.ru", "date": "2016-07-15T11:01:23Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2016-07-15T11:01:23Z"}, "message": "handle undefined extern vars in output_in_order\n\n* cgraphunit.c (cgraph_order_sort_kind): New entry ORDER_VAR_UNDEF.\n(output_in_order): Loop over undefined variables too.  Output them\nvia assemble_undefined_decl.  Skip variables that correspond to hard\nregisters or have value-exprs.\n* varpool.c (symbol_table::output_variables): Handle undefined\nvariables together with defined ones.\n\nFrom-SVN: r238371", "tree": {"sha": "652086436fa04743a73656233cc4b3f5c0a32a3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/652086436fa04743a73656233cc4b3f5c0a32a3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ef4678208cb06208343de776ad96de2db4de25c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ef4678208cb06208343de776ad96de2db4de25c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ef4678208cb06208343de776ad96de2db4de25c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ef4678208cb06208343de776ad96de2db4de25c/comments", "author": {"login": "amonakov", "id": 1997391, "node_id": "MDQ6VXNlcjE5OTczOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1997391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amonakov", "html_url": "https://github.com/amonakov", "followers_url": "https://api.github.com/users/amonakov/followers", "following_url": "https://api.github.com/users/amonakov/following{/other_user}", "gists_url": "https://api.github.com/users/amonakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/amonakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amonakov/subscriptions", "organizations_url": "https://api.github.com/users/amonakov/orgs", "repos_url": "https://api.github.com/users/amonakov/repos", "events_url": "https://api.github.com/users/amonakov/events{/privacy}", "received_events_url": "https://api.github.com/users/amonakov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a8e15f9074d70cf2b029e04f3f56ed64e5171556", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8e15f9074d70cf2b029e04f3f56ed64e5171556", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8e15f9074d70cf2b029e04f3f56ed64e5171556"}], "stats": {"total": 67, "additions": 36, "deletions": 31}, "files": [{"sha": "e2c0598d43d2a9d84e4de319d5c5bbdcf827bab6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ef4678208cb06208343de776ad96de2db4de25c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ef4678208cb06208343de776ad96de2db4de25c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ef4678208cb06208343de776ad96de2db4de25c", "patch": "@@ -1,3 +1,12 @@\n+2016-07-15  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\t* cgraphunit.c (cgraph_order_sort_kind): New entry ORDER_VAR_UNDEF.\n+\t(output_in_order): Loop over undefined variables too.  Output them\n+\tvia assemble_undefined_decl.  Skip variables that correspond to hard\n+\tregisters or have value-exprs.\n+\t* varpool.c (symbol_table::output_variables): Handle undefined\n+\tvariables together with defined ones.\n+\n 2016-07-15  Richard Biener  <rguenther@suse.de>\n \n \t* tree-ssa-pre.c (get_representative_for): Make sure to return"}, {"sha": "e30fe6e423b3a2f16875dd46d787e85c28abaab8", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ef4678208cb06208343de776ad96de2db4de25c/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ef4678208cb06208343de776ad96de2db4de25c/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=3ef4678208cb06208343de776ad96de2db4de25c", "patch": "@@ -2141,6 +2141,7 @@ enum cgraph_order_sort_kind\n   ORDER_UNDEFINED = 0,\n   ORDER_FUNCTION,\n   ORDER_VAR,\n+  ORDER_VAR_UNDEF,\n   ORDER_ASM\n };\n \n@@ -2187,16 +2188,20 @@ output_in_order (bool no_reorder)\n \t}\n     }\n \n-  FOR_EACH_DEFINED_VARIABLE (pv)\n-    if (!DECL_EXTERNAL (pv->decl))\n-      {\n-\tif (no_reorder && !pv->no_reorder)\n-\t    continue;\n-\ti = pv->order;\n-\tgcc_assert (nodes[i].kind == ORDER_UNDEFINED);\n-\tnodes[i].kind = ORDER_VAR;\n-\tnodes[i].u.v = pv;\n-      }\n+  /* There is a similar loop in symbol_table::output_variables.\n+     Please keep them in sync.  */\n+  FOR_EACH_VARIABLE (pv)\n+    {\n+      if (no_reorder && !pv->no_reorder)\n+\tcontinue;\n+      if (DECL_HARD_REGISTER (pv->decl)\n+\t  || DECL_HAS_VALUE_EXPR_P (pv->decl))\n+\tcontinue;\n+      i = pv->order;\n+      gcc_assert (nodes[i].kind == ORDER_UNDEFINED);\n+      nodes[i].kind = pv->definition ? ORDER_VAR : ORDER_VAR_UNDEF;\n+      nodes[i].u.v = pv;\n+    }\n \n   for (pa = symtab->first_asm_symbol (); pa; pa = pa->next)\n     {\n@@ -2222,16 +2227,13 @@ output_in_order (bool no_reorder)\n \t  break;\n \n \tcase ORDER_VAR:\n-#ifdef ACCEL_COMPILER\n-\t  /* Do not assemble \"omp declare target link\" vars.  */\n-\t  if (DECL_HAS_VALUE_EXPR_P (nodes[i].u.v->decl)\n-\t      && lookup_attribute (\"omp declare target link\",\n-\t\t\t\t   DECL_ATTRIBUTES (nodes[i].u.v->decl)))\n-\t    break;\n-#endif\n \t  nodes[i].u.v->assemble_decl ();\n \t  break;\n \n+\tcase ORDER_VAR_UNDEF:\n+\t  assemble_undefined_decl (nodes[i].u.v->decl);\n+\t  break;\n+\n \tcase ORDER_ASM:\n \t  assemble_asm (nodes[i].u.a->asm_str);\n \t  break;"}, {"sha": "e5f991eb759272e0634145a8c94a492000f2daea", "filename": "gcc/varpool.c", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ef4678208cb06208343de776ad96de2db4de25c/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ef4678208cb06208343de776ad96de2db4de25c/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=3ef4678208cb06208343de776ad96de2db4de25c", "patch": "@@ -733,11 +733,6 @@ symbol_table::output_variables (void)\n \n   timevar_push (TV_VAROUT);\n \n-  FOR_EACH_VARIABLE (node)\n-    if (!node->definition\n-\t&& !DECL_HAS_VALUE_EXPR_P (node->decl)\n- \t&& !DECL_HARD_REGISTER (node->decl))\n-      assemble_undefined_decl (node->decl);\n   FOR_EACH_DEFINED_VARIABLE (node)\n     {\n       /* Handled in output_in_order.  */\n@@ -747,20 +742,19 @@ symbol_table::output_variables (void)\n       node->finalize_named_section_flags ();\n     }\n \n-  FOR_EACH_DEFINED_VARIABLE (node)\n+  /* There is a similar loop in output_in_order.  Please keep them in sync.  */\n+  FOR_EACH_VARIABLE (node)\n     {\n       /* Handled in output_in_order.  */\n       if (node->no_reorder)\n \tcontinue;\n-#ifdef ACCEL_COMPILER\n-      /* Do not assemble \"omp declare target link\" vars.  */\n-      if (DECL_HAS_VALUE_EXPR_P (node->decl)\n-\t  && lookup_attribute (\"omp declare target link\",\n-\t\t\t       DECL_ATTRIBUTES (node->decl)))\n+      if (DECL_HARD_REGISTER (node->decl)\n+\t  || DECL_HAS_VALUE_EXPR_P (node->decl))\n \tcontinue;\n-#endif\n-      if (node->assemble_decl ())\n-        changed = true;\n+      if (node->definition)\n+\tchanged |= node->assemble_decl ();\n+      else\n+\tassemble_undefined_decl (node->decl);\n     }\n   timevar_pop (TV_VAROUT);\n   return changed;"}]}