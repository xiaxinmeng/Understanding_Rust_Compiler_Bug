{"sha": "07ee67a44d90380c3ab13587dd7d3f4714379d1f", "node_id": "C_kwDOANBUbNoAKDA3ZWU2N2E0NGQ5MDM4MGMzYWIxMzU4N2RkN2QzZjQ3MTQzNzlkMWY", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-03-04T16:46:30Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-16T08:42:02Z"}, "message": "[Ada] Remove duplicated code for detecting enabled pragmas\n\nRoutines Is_Enabled and Is_Enabled_Pragma are identical (except for\ncomments); remove this duplication.\n\nCleanup related to handling of volatile refinement aspects in SPARK;\nbehaviour is unaffected.\n\ngcc/ada/\n\n\t* sem_util.adb (Is_Enabled): Remove; use Is_Enabled_Pragma\n\tinstead.", "tree": {"sha": "cf31ed675c0a9d58f9999b3a3843e623425282df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf31ed675c0a9d58f9999b3a3843e623425282df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07ee67a44d90380c3ab13587dd7d3f4714379d1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07ee67a44d90380c3ab13587dd7d3f4714379d1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07ee67a44d90380c3ab13587dd7d3f4714379d1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07ee67a44d90380c3ab13587dd7d3f4714379d1f/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca32b29ec3e92dcf8dda5c2501d0baf9dd1cb09d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca32b29ec3e92dcf8dda5c2501d0baf9dd1cb09d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca32b29ec3e92dcf8dda5c2501d0baf9dd1cb09d"}], "stats": {"total": 48, "additions": 4, "deletions": 44}, "files": [{"sha": "d53c43569760a0c4e6c499083bfbd1c2b778e387", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 4, "deletions": 44, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07ee67a44d90380c3ab13587dd7d3f4714379d1f/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07ee67a44d90380c3ab13587dd7d3f4714379d1f/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=07ee67a44d90380c3ab13587dd7d3f4714379d1f", "patch": "@@ -12632,44 +12632,6 @@ package body Sem_Util is\n       function Type_Or_Variable_Has_Enabled_Property\n         (Item_Id : Entity_Id) return Boolean\n       is\n-         function Is_Enabled (Prag : Node_Id) return Boolean;\n-         --  Determine whether property pragma Prag (if present) denotes an\n-         --  enabled property.\n-\n-         ----------------\n-         -- Is_Enabled --\n-         ----------------\n-\n-         function Is_Enabled (Prag : Node_Id) return Boolean is\n-            Arg1 : Node_Id;\n-\n-         begin\n-            if Present (Prag) then\n-               Arg1 := First (Pragma_Argument_Associations (Prag));\n-\n-               --  The pragma has an optional Boolean expression, the related\n-               --  property is enabled only when the expression evaluates to\n-               --  True.\n-\n-               if Present (Arg1) then\n-                  return Is_True (Expr_Value (Get_Pragma_Arg (Arg1)));\n-\n-               --  Otherwise the lack of expression enables the property by\n-               --  default.\n-\n-               else\n-                  return True;\n-               end if;\n-\n-            --  The property was never set in the first place\n-\n-            else\n-               return False;\n-            end if;\n-         end Is_Enabled;\n-\n-         --  Local variables\n-\n          AR : constant Node_Id :=\n                 Get_Pragma (Item_Id, Pragma_Async_Readers);\n          AW : constant Node_Id :=\n@@ -12683,8 +12645,6 @@ package body Sem_Util is\n            Is_Derived_Type (Item_Id)\n            and then Is_Effectively_Volatile (Etype (Base_Type (Item_Id)));\n \n-      --  Start of processing for Type_Or_Variable_Has_Enabled_Property\n-\n       begin\n          --  A non-effectively volatile object can never possess external\n          --  properties.\n@@ -12699,16 +12659,16 @@ package body Sem_Util is\n          --  missing altogether.\n \n          elsif Property = Name_Async_Readers    and then Present (AR) then\n-            return Is_Enabled (AR);\n+            return Is_Enabled_Pragma (AR);\n \n          elsif Property = Name_Async_Writers    and then Present (AW) then\n-            return Is_Enabled (AW);\n+            return Is_Enabled_Pragma (AW);\n \n          elsif Property = Name_Effective_Reads  and then Present (ER) then\n-            return Is_Enabled (ER);\n+            return Is_Enabled_Pragma (ER);\n \n          elsif Property = Name_Effective_Writes and then Present (EW) then\n-            return Is_Enabled (EW);\n+            return Is_Enabled_Pragma (EW);\n \n          --  If other properties are set explicitly, then this one is set\n          --  implicitly to False, except in the case of a derived type"}]}