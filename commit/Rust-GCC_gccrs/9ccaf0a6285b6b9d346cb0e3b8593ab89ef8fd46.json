{"sha": "9ccaf0a6285b6b9d346cb0e3b8593ab89ef8fd46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNjYWYwYTYyODViNmI5ZDM0NmNiMGUzYjg1OTNhYjg5ZWY4ZmQ0Ng==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2007-09-11T00:41:19Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2007-09-11T00:41:19Z"}, "message": "* config/spu/spu.md: Formatting fixes.\n\nFrom-SVN: r128359", "tree": {"sha": "e97e5f1749e05cbb6db22cd3ef3eb60bc5905d30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e97e5f1749e05cbb6db22cd3ef3eb60bc5905d30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ccaf0a6285b6b9d346cb0e3b8593ab89ef8fd46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ccaf0a6285b6b9d346cb0e3b8593ab89ef8fd46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ccaf0a6285b6b9d346cb0e3b8593ab89ef8fd46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ccaf0a6285b6b9d346cb0e3b8593ab89ef8fd46/comments", "author": null, "committer": null, "parents": [{"sha": "fb27b3f6ef2fe946ef98a74bbfb83eac9819df1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb27b3f6ef2fe946ef98a74bbfb83eac9819df1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb27b3f6ef2fe946ef98a74bbfb83eac9819df1c"}], "stats": {"total": 76, "additions": 40, "deletions": 36}, "files": [{"sha": "c02cd4b02b04b6a15355a52e6b6cb5a6e3f25542", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccaf0a6285b6b9d346cb0e3b8593ab89ef8fd46/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccaf0a6285b6b9d346cb0e3b8593ab89ef8fd46/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ccaf0a6285b6b9d346cb0e3b8593ab89ef8fd46", "patch": "@@ -1,3 +1,7 @@\n+2007-09-11  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* config/spu/spu.md: Formatting fixes.\n+\n 2007-09-10  Janis Johnson  <janis187@us.ibm.com>\n \n \t* config/dfp-bit.c (dfp_unary_func): Delete.\n@@ -328,7 +332,7 @@\n \tvectorizable_assignment): Likewise.\n \t(vect_model_simple_cost, vect_model_store_cost, vect_model_load_cost):\n \tDeclare (make extern).\n-\t* tree-vectorizer.c (new_stmt_vec_info): Initiliaze the new field.\n+\t* tree-vectorizer.c (new_stmt_vec_info): Initialize the new field.\n \t(new_loop_vec_info): Likewise.\n \t(destroy_loop_vec_info): Free memory allocated for SLP structures.\n \t* tree-vect-analyze.c: Include recog.h."}, {"sha": "8207d0b31e9181a301b774dec98f76c88ec3800c", "filename": "gcc/config/spu/spu.md", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ccaf0a6285b6b9d346cb0e3b8593ab89ef8fd46/gcc%2Fconfig%2Fspu%2Fspu.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ccaf0a6285b6b9d346cb0e3b8593ab89ef8fd46/gcc%2Fconfig%2Fspu%2Fspu.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.md?ref=9ccaf0a6285b6b9d346cb0e3b8593ab89ef8fd46", "patch": "@@ -997,7 +997,7 @@\n   {\n     rtx zero = gen_reg_rtx(DImode);\n     emit_move_insn(zero, GEN_INT(0));\n-    emit_insn(gen_subdi3(operands[0], zero, operands[1]));\n+    emit_insn (gen_subdi3(operands[0], zero, operands[1]));\n     DONE;\n   })\n \n@@ -1008,7 +1008,7 @@\n   {\n     rtx zero = gen_reg_rtx(TImode);\n     emit_move_insn(zero, GEN_INT(0));\n-    emit_insn(gen_subti3(operands[0], zero, operands[1]));\n+    emit_insn (gen_subti3(operands[0], zero, operands[1]));\n     DONE;\n   })\n \n@@ -1159,22 +1159,22 @@\n       }\n     if (val && (val & 0xffff) == 0)\n       {\n-\temit_insn(gen_mpyh_si(operands[0], operands[2], operands[1]));\n+\temit_insn (gen_mpyh_si(operands[0], operands[2], operands[1]));\n       }\n     else if (val > 0 && val < 0x10000)\n       {\n \trtx cst = satisfies_constraint_K (GEN_INT (val)) ? GEN_INT(val) : d;\n-\temit_insn(gen_mpyh_si(a, operands[1], operands[2]));\n-\temit_insn(gen_mpyu_si(c, operands[1], cst));\n-\temit_insn(gen_addsi3(operands[0], a, c));\n+\temit_insn (gen_mpyh_si(a, operands[1], operands[2]));\n+\temit_insn (gen_mpyu_si(c, operands[1], cst));\n+\temit_insn (gen_addsi3(operands[0], a, c));\n       }\n     else\n       {\n-\temit_insn(gen_mpyh_si(a, operands[1], operands[2]));\n-\temit_insn(gen_mpyh_si(b, operands[2], operands[1]));\n-\temit_insn(gen_mpyu_si(c, operands[1], operands[2]));\n-\temit_insn(gen_addsi3(d, a, b));\n-\temit_insn(gen_addsi3(operands[0], d, c));\n+\temit_insn (gen_mpyh_si(a, operands[1], operands[2]));\n+\temit_insn (gen_mpyh_si(b, operands[2], operands[1]));\n+\temit_insn (gen_mpyu_si(c, operands[1], operands[2]));\n+\temit_insn (gen_addsi3(d, a, b));\n+\temit_insn (gen_addsi3(operands[0], d, c));\n       }\n     DONE;\n    })\n@@ -1200,11 +1200,11 @@\n     rtx d = operands[6];\n     rtx op1 = simplify_gen_subreg (V8HImode, operands[1], V4SImode, 0);\n     rtx op2 = simplify_gen_subreg (V8HImode, operands[2], V4SImode, 0);\n-    emit_insn(gen_spu_mpyh(a, op1, op2));\n-    emit_insn(gen_spu_mpyh(b, op2, op1));\n-    emit_insn(gen_spu_mpyu(c, op1, op2));\n-    emit_insn(gen_addv4si3(d, a, b));\n-    emit_insn(gen_addv4si3(operands[0], d, c));\n+    emit_insn (gen_spu_mpyh(a, op1, op2));\n+    emit_insn (gen_spu_mpyh(b, op2, op1));\n+    emit_insn (gen_spu_mpyu(c, op1, op2));\n+    emit_insn (gen_addv4si3(d, a, b));\n+    emit_insn (gen_addv4si3(operands[0], d, c));\n     DONE;\n    })\n \n@@ -1620,11 +1620,11 @@\n    (clobber (match_dup:VSF 3))\n    (clobber (match_dup:VSF 4))]\n   {\n-    emit_insn(gen_frest_<mode>(operands[3], operands[2]));\n-    emit_insn(gen_fi_<mode>(operands[3], operands[2], operands[3]));\n-    emit_insn(gen_mul<mode>3(operands[4], operands[1], operands[3]));\n-    emit_insn(gen_fnms_<mode>(operands[0], operands[4], operands[2], operands[1]));\n-    emit_insn(gen_fma_<mode>(operands[0], operands[0], operands[3], operands[4]));\n+    emit_insn (gen_frest_<mode>(operands[3], operands[2]));\n+    emit_insn (gen_fi_<mode>(operands[3], operands[2], operands[3]));\n+    emit_insn (gen_mul<mode>3(operands[4], operands[1], operands[3]));\n+    emit_insn (gen_fnms_<mode>(operands[0], operands[4], operands[2], operands[1]));\n+    emit_insn (gen_fma_<mode>(operands[0], operands[0], operands[3], operands[4]));\n     DONE;\n   })\n \n@@ -1650,12 +1650,12 @@\n   {\n     emit_move_insn (operands[3],spu_float_const(\\\"0.5\\\",SFmode));\n     emit_move_insn (operands[4],spu_float_const(\\\"1.00000011920928955078125\\\",SFmode));\n-    emit_insn(gen_frsqest_sf(operands[2],operands[1]));\n-    emit_insn(gen_fi_sf(operands[2],operands[1],operands[2]));\n-    emit_insn(gen_mulsf3(operands[5],operands[2],operands[1]));\n-    emit_insn(gen_mulsf3(operands[3],operands[5],operands[3]));\n-    emit_insn(gen_fnms_sf(operands[4],operands[2],operands[5],operands[4]));\n-    emit_insn(gen_fma_sf(operands[0],operands[4],operands[3],operands[5]));\n+    emit_insn (gen_frsqest_sf(operands[2],operands[1]));\n+    emit_insn (gen_fi_sf(operands[2],operands[1],operands[2]));\n+    emit_insn (gen_mulsf3(operands[5],operands[2],operands[1]));\n+    emit_insn (gen_mulsf3(operands[3],operands[5],operands[3]));\n+    emit_insn (gen_fnms_sf(operands[4],operands[2],operands[5],operands[4]));\n+    emit_insn (gen_fma_sf(operands[0],operands[4],operands[3],operands[5]));\n     DONE;\n   })\n \n@@ -1990,7 +1990,7 @@\n   \"\"\n   \"if (GET_CODE (operands[2]) == CONST_INT)\n     {\n-      emit_insn(gen_ashlti3_imm(operands[0], operands[1], operands[2]));\n+      emit_insn (gen_ashlti3_imm(operands[0], operands[1], operands[2]));\n       DONE;\n     }\n    operands[3] = gen_reg_rtx (TImode);\")\n@@ -2110,7 +2110,7 @@\n   \"\"\n   \"if (GET_CODE (operands[2]) == CONST_INT)\n     {\n-      emit_insn(gen_lshr<mode>3_imm(operands[0], operands[1], operands[2]));\n+      emit_insn (gen_lshr<mode>3_imm(operands[0], operands[1], operands[2]));\n       DONE;\n     }\n    operands[3] = gen_reg_rtx (<MODE>mode);\n@@ -2159,8 +2159,8 @@\n \t\t\t\t\t     (const_int -8)))\n \t\t\t     (const_int -8))))]\n   {\n-    emit_insn(gen_subsi3(operands[4], GEN_INT(0), operands[2]));\n-    emit_insn(gen_subsi3(operands[5], GEN_INT(7), operands[2]));\n+    emit_insn (gen_subsi3(operands[4], GEN_INT(0), operands[2]));\n+    emit_insn (gen_subsi3(operands[5], GEN_INT(7), operands[2]));\n   })\n \n (define_insn \"rotqmbybi_<mode>\"\n@@ -2643,7 +2643,7 @@\n                  (abs:V2DF (match_operand:V2DF 2 \"spu_reg_operand\" \"r\"))))]\n   \"\"\n {\n-  if(spu_arch == PROCESSOR_CELL)\n+  if (spu_arch == PROCESSOR_CELL)\n     {\n       rtx ra = spu_gen_subreg (V4SImode, operands[1]);\n       rtx rb = spu_gen_subreg (V4SImode, operands[2]);\n@@ -2819,7 +2819,7 @@ selb\\t%0,%5,%0,%3\"\n                  (match_operand:V2DF 2 \"spu_reg_operand\" \"r\")))]\n   \"\"\n {\n-  if(spu_arch == PROCESSOR_CELL)\n+  if (spu_arch == PROCESSOR_CELL)\n     {\n       rtx ra = spu_gen_subreg (V4SImode, operands[1]);\n       rtx rb = spu_gen_subreg (V4SImode, operands[2]);\n@@ -2908,7 +2908,7 @@ selb\\t%0,%5,%0,%3\"\n                  (abs:V2DF (match_operand:V2DF 2 \"spu_reg_operand\" \"r\"))))]\n   \"\"\n {\n-  if(spu_arch == PROCESSOR_CELL)\n+  if (spu_arch == PROCESSOR_CELL)\n     {\n       rtx ra = spu_gen_subreg (V4SImode, operands[1]);\n       rtx rb = spu_gen_subreg (V4SImode, operands[2]);\n@@ -3043,7 +3043,7 @@ selb\\t%0,%4,%0,%3\"\n \t\t      UNSPEC_DFTSV))]\n   \"\"\n {\n-  if(spu_arch == PROCESSOR_CELL)\n+  if (spu_arch == PROCESSOR_CELL)\n     {\n       rtx result = gen_reg_rtx (V4SImode);\n       emit_move_insn (result, CONST0_RTX (V4SImode));"}]}