{"sha": "ad075b500fc6da9afd6a5bfc710a715b33b01e22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQwNzViNTAwZmM2ZGE5YWZkNmE1YmZjNzEwYTcxNWIzM2IwMWUyMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-23T10:45:48Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-23T10:45:48Z"}, "message": "[multiple changes]\n\n2014-10-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_eval.adb (Check_Non_Static_Context): Do not set\n\tIs_Machine_Number on a literal of a fixed-point type.\n\n2014-10-23  Robert Dewar  <dewar@adacore.com>\n\n\t* mlib-prj.adb, sem_ch4.adb, exp_ch3.adb: Minor reformatting.\n\n2014-10-23  Pierre-Marie Derodat  <derodat@adacore.com>\n\n\t* exp_dbug.ads: Update ___XA parallel type specification.\n\n2014-10-23  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch3.adb (Copy_Array_Subtype_Attributes): Inherit the rep\n\tchain of the source type.\n\t* sem_ch13.adb (Analyze_Aspect_Specifications): Minor\n\treformatting of an error message.\n\t* sem_util.adb (Inherit_Rep_Item_Chain): Do not inherit a rep\n\tchain that has been inherited already.\n\nFrom-SVN: r216588", "tree": {"sha": "ee93cdec7f19508d21676f596d5c2af440247f21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee93cdec7f19508d21676f596d5c2af440247f21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad075b500fc6da9afd6a5bfc710a715b33b01e22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad075b500fc6da9afd6a5bfc710a715b33b01e22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad075b500fc6da9afd6a5bfc710a715b33b01e22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad075b500fc6da9afd6a5bfc710a715b33b01e22/comments", "author": null, "committer": null, "parents": [{"sha": "e699b76e9252a4bb0c1af7276113d23e289e8973", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e699b76e9252a4bb0c1af7276113d23e289e8973", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e699b76e9252a4bb0c1af7276113d23e289e8973"}], "stats": {"total": 167, "additions": 74, "deletions": 93}, "files": [{"sha": "7c3f5bb7c7d434f22127b00d341bdb39a50bf05b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad075b500fc6da9afd6a5bfc710a715b33b01e22/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad075b500fc6da9afd6a5bfc710a715b33b01e22/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ad075b500fc6da9afd6a5bfc710a715b33b01e22", "patch": "@@ -1,3 +1,25 @@\n+2014-10-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_eval.adb (Check_Non_Static_Context): Do not set\n+\tIs_Machine_Number on a literal of a fixed-point type.\n+\n+2014-10-23  Robert Dewar  <dewar@adacore.com>\n+\n+\t* mlib-prj.adb, sem_ch4.adb, exp_ch3.adb: Minor reformatting.\n+\n+2014-10-23  Pierre-Marie Derodat  <derodat@adacore.com>\n+\n+\t* exp_dbug.ads: Update ___XA parallel type specification.\n+\n+2014-10-23  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch3.adb (Copy_Array_Subtype_Attributes): Inherit the rep\n+\tchain of the source type.\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications): Minor\n+\treformatting of an error message.\n+\t* sem_util.adb (Inherit_Rep_Item_Chain): Do not inherit a rep\n+\tchain that has been inherited already.\n+\n 2014-10-23  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch6.adb (Analyze_Expression_Function): Simplify analysis"}, {"sha": "2de1887af75716692cf18e2228bfaf1a9d46b758", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad075b500fc6da9afd6a5bfc710a715b33b01e22/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad075b500fc6da9afd6a5bfc710a715b33b01e22/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=ad075b500fc6da9afd6a5bfc710a715b33b01e22", "patch": "@@ -5366,9 +5366,9 @@ package body Exp_Ch3 is\n         and then Static_Dispatch_Tables\n         and then Is_Library_Level_Entity (Def_Id)\n         and then Is_Library_Level_Tagged_Type (Base_Typ)\n-        and then (Ekind (Base_Typ) = E_Record_Type\n-                   or else Ekind (Base_Typ) = E_Protected_Type\n-                   or else Ekind (Base_Typ) = E_Task_Type)\n+        and then Ekind_In (Base_Typ, E_Record_Type,\n+                                     E_Protected_Type,\n+                                     E_Task_Type)\n         and then not Has_Dispatch_Table (Base_Typ)\n       then\n          declare"}, {"sha": "727be929aae81bf0c217c59809fe5bb9e26f8351", "filename": "gcc/ada/exp_dbug.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad075b500fc6da9afd6a5bfc710a715b33b01e22/gcc%2Fada%2Fexp_dbug.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad075b500fc6da9afd6a5bfc710a715b33b01e22/gcc%2Fada%2Fexp_dbug.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.ads?ref=ad075b500fc6da9afd6a5bfc710a715b33b01e22", "patch": "@@ -854,9 +854,8 @@ package Exp_Dbug is\n       --  names of these types).\n \n       --  To conserve space, we do not produce this type unless one of the\n-      --  index types is either an enumeration type, has a variable upper\n-      --  bound, has a lower bound different from the constant 1, is a biased\n-      --  type, or is wider than \"sizetype\".\n+      --  index types is either an enumeration type, has a variable lower or\n+      --  upper bound or is a biased type.\n \n       --  Given the full encoding of these types (see above description for\n       --  the encoding of discrete types), this means that all necessary"}, {"sha": "ff84abace85bd4cbdbd3ad89c6b45228b6dc03f6", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad075b500fc6da9afd6a5bfc710a715b33b01e22/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad075b500fc6da9afd6a5bfc710a715b33b01e22/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=ad075b500fc6da9afd6a5bfc710a715b33b01e22", "patch": "@@ -2395,21 +2395,23 @@ package body MLib.Prj is\n             --  because they are also needed for non Stand-Alone shared\n             --  libraries.\n \n-            --  Also ignore the shared libraries which are :\n+            --  Also ignore the shared libraries which are:\n \n             --  -lgnat-<version>  (7 + version'length chars)\n             --  -lgnarl-<version> (8 + version'length chars)\n \n             if Next_Line (1 .. Nlast) /= \"-static\" and then\n                Next_Line (1 .. Nlast) /= \"-shared\" and then\n                Next_Line (1 .. Nlast) /= \"-lgnarl\" and then\n-               Next_Line (1 .. Nlast) /= \"-lgnat\" and then\n-               Next_Line\n-                 (1 .. Natural'Min (Nlast, 8 + Library_Version'Length)) /=\n-                   Shared_Lib (\"gnarl\") and then\n-               Next_Line\n-                 (1 .. Natural'Min (Nlast, 7 + Library_Version'Length)) /=\n-                   Shared_Lib (\"gnat\")\n+               Next_Line (1 .. Nlast) /= \"-lgnat\"\n+              and then\n+                Next_Line\n+                  (1 .. Natural'Min (Nlast, 8 + Library_Version'Length)) /=\n+                    Shared_Lib (\"gnarl\")\n+              and then\n+                Next_Line\n+                  (1 .. Natural'Min (Nlast, 7 + Library_Version'Length)) /=\n+                    Shared_Lib (\"gnat\")\n             then\n                if Next_Line (1) /= '-' then\n "}, {"sha": "15e232be3361caf681464b7efca76799c7adc54e", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad075b500fc6da9afd6a5bfc710a715b33b01e22/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad075b500fc6da9afd6a5bfc710a715b33b01e22/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=ad075b500fc6da9afd6a5bfc710a715b33b01e22", "patch": "@@ -2701,7 +2701,7 @@ package body Sem_Ch13 is\n                when Aspect_Default_Value =>\n                   if not Is_Scalar_Type (E) then\n                      Error_Msg_N\n-                       (\"aspect Default_Value must apply to a scalar_Type\", N);\n+                       (\"aspect Default_Value must apply to a scalar type\", N);\n                   end if;\n \n                   Aitem := Empty;"}, {"sha": "5993bdb634dcc27338321c678ed4767210a426a1", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 13, "deletions": 65, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad075b500fc6da9afd6a5bfc710a715b33b01e22/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad075b500fc6da9afd6a5bfc710a715b33b01e22/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=ad075b500fc6da9afd6a5bfc710a715b33b01e22", "patch": "@@ -8697,61 +8697,9 @@ package body Sem_Ch3 is\n          Set_Has_Predicates (Derived_Type);\n       end if;\n \n-      --  The derived type inherits the representation clauses of the parent.\n-      --  However, for a private type that is completed by a derivation, there\n-      --  may be operation attributes that have been specified already (stream\n-      --  attributes and External_Tag) and those must be provided. Finally, if\n-      --  the partial view is a private extension, the representation items of\n-      --  the parent have been inherited already, and should not be chained\n-      --  twice to the derived type.\n-\n-      --  Historic note: The guard below used to check whether the parent type\n-      --  is tagged. This is no longer needed because an untagged derived type\n-      --  may carry rep items of its own as a result of certain SPARK pragmas.\n-      --  With the old guard in place, the rep items of the derived type were\n-      --  clobbered.\n-\n-      if Present (First_Rep_Item (Derived_Type)) then\n-         declare\n-            Par_Item  : constant Node_Id := First_Rep_Item (Parent_Type);\n-            Inherited : Boolean := False;\n-            Item      : Node_Id;\n-            Last_Item : Node_Id;\n-\n-         begin\n-            --  Inspect the rep item chain of the derived type and perform the\n-            --  following two functions:\n-            --    1) Determine whether the derived type already inherited the\n-            --       rep items of the parent type.\n-            --    2) Find the last rep item of the derived type\n-\n-            Item := First_Rep_Item (Derived_Type);\n-            Last_Item := Item;\n-            while Present (Item) loop\n-               if Item = Par_Item then\n-                  Inherited := True;\n-                  exit;\n-               end if;\n-\n-               Last_Item := Item;\n-               Item := Next_Rep_Item (Item);\n-            end loop;\n+      --  The derived type inherits the representation clauses of the parent\n \n-            --  Nothing to do if the derived type already inherited the rep\n-            --  items from the parent type, otherwise append the parent rep\n-            --  item chain to that of the derived type.\n-\n-            if not Inherited then\n-               Set_Next_Rep_Item (Last_Item, Par_Item);\n-            end if;\n-         end;\n-\n-      --  Otherwise the derived type lacks rep items and directly inherits the\n-      --  rep items of the parent type.\n-\n-      else\n-         Set_First_Rep_Item (Derived_Type, First_Rep_Item (Parent_Type));\n-      end if;\n+      Inherit_Rep_Item_Chain (Derived_Type, Parent_Type);\n \n       --  Propagate the attributes related to pragma Default_Initial_Condition\n       --  from the parent type to the private extension. A derived type always\n@@ -13396,17 +13344,17 @@ package body Sem_Ch3 is\n    begin\n       Set_Size_Info (T1, T2);\n \n-      Set_First_Index          (T1, First_Index           (T2));\n-      Set_Is_Aliased           (T1, Is_Aliased            (T2));\n-      Set_Is_Volatile          (T1, Is_Volatile           (T2));\n-      Set_Treat_As_Volatile    (T1, Treat_As_Volatile     (T2));\n-      Set_Is_Constrained       (T1, Is_Constrained        (T2));\n-      Set_Depends_On_Private   (T1, Has_Private_Component (T2));\n-      Set_First_Rep_Item       (T1, First_Rep_Item        (T2));\n-      Set_Convention           (T1, Convention            (T2));\n-      Set_Is_Limited_Composite (T1, Is_Limited_Composite  (T2));\n-      Set_Is_Private_Composite (T1, Is_Private_Composite  (T2));\n-      Set_Packed_Array_Impl_Type    (T1, Packed_Array_Impl_Type     (T2));\n+      Set_First_Index            (T1, First_Index            (T2));\n+      Set_Is_Aliased             (T1, Is_Aliased             (T2));\n+      Set_Is_Volatile            (T1, Is_Volatile            (T2));\n+      Set_Treat_As_Volatile      (T1, Treat_As_Volatile      (T2));\n+      Set_Is_Constrained         (T1, Is_Constrained         (T2));\n+      Set_Depends_On_Private     (T1, Has_Private_Component  (T2));\n+      Inherit_Rep_Item_Chain     (T1,                         T2);\n+      Set_Convention             (T1, Convention             (T2));\n+      Set_Is_Limited_Composite   (T1, Is_Limited_Composite   (T2));\n+      Set_Is_Private_Composite   (T1, Is_Private_Composite   (T2));\n+      Set_Packed_Array_Impl_Type (T1, Packed_Array_Impl_Type (T2));\n    end Copy_Array_Subtype_Attributes;\n \n    -----------------------------------"}, {"sha": "3f9fc98e78fd3205b7f2973fde3d1e59233dfb3f", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad075b500fc6da9afd6a5bfc710a715b33b01e22/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad075b500fc6da9afd6a5bfc710a715b33b01e22/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=ad075b500fc6da9afd6a5bfc710a715b33b01e22", "patch": "@@ -7591,7 +7591,7 @@ package body Sem_Ch4 is\n                  or else not Is_Variable (Obj)\n                then\n                   Error_Msg_NE\n-                    (\"actual for& must be a variable\", Obj, Control);\n+                    (\"actual for & must be a variable\", Obj, Control);\n                end if;\n             end if;\n \n@@ -7602,9 +7602,8 @@ package body Sem_Ch4 is\n \n             if not Is_Aliased_View (Obj) then\n                Error_Msg_NE\n-                 (\"object in prefixed call to& must be aliased\"\n-                      & \" (RM-2005 4.3.1 (13))\",\n-                 Prefix (First_Actual), Subprog);\n+                 (\"object in prefixed call to & must be aliased \"\n+                  & \" (RM-2005 4.3.1 (13))\", Prefix (First_Actual), Subprog);\n             end if;\n \n             Analyze (First_Actual);"}, {"sha": "77eb48c36c5e1a7aacb1f551afb7b28634a45d2e", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad075b500fc6da9afd6a5bfc710a715b33b01e22/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad075b500fc6da9afd6a5bfc710a715b33b01e22/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=ad075b500fc6da9afd6a5bfc710a715b33b01e22", "patch": "@@ -498,13 +498,15 @@ package body Sem_Eval is\n             --  differences in rounding between static and non-static\n             --  expressions. AI-100 specifies that the effect of such rounding\n             --  is implementation dependent, and in GNAT we round to nearest\n-            --  even to match the run-time behavior.\n+            --  even to match the run-time behavior. Note that this applies\n+            --  to floating point literals, not fixed points ones, even though\n+            --  their compiler representation is also as a universal real.\n \n             Set_Realval\n               (N, Machine (Base_Type (T), Realval (N), Round_Even, N));\n+            Set_Is_Machine_Number (N);\n          end if;\n \n-         Set_Is_Machine_Number (N);\n       end if;\n \n       --  Check for out of range universal integer. This is a non-static"}, {"sha": "1f1128c24375ddbcda55de7d327066be3a6d3a3c", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad075b500fc6da9afd6a5bfc710a715b33b01e22/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad075b500fc6da9afd6a5bfc710a715b33b01e22/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=ad075b500fc6da9afd6a5bfc710a715b33b01e22", "patch": "@@ -9296,25 +9296,34 @@ package body Sem_Util is\n \n    procedure Inherit_Rep_Item_Chain (Typ : Entity_Id; From_Typ : Entity_Id) is\n       From_Item : constant Node_Id := First_Rep_Item (From_Typ);\n-      Item      : Node_Id;\n+      Item      : Node_Id := Empty;\n+      Last_Item : Node_Id := Empty;\n \n    begin\n-      --  Reach the end of the destination type's chain (if any). The traversal\n-      --  ensures that we do not go past the last item.\n+      --  Reach the end of the destination type's chain (if any) and capture\n+      --  the last item.\n \n       Item := First_Rep_Item (Typ);\n-      while Present (Item) and then Present (Next_Rep_Item (Item)) loop\n+      while Present (Item) loop\n+\n+         --  Do not inherit a chain that has been inherited already\n+\n+         if Item = From_Item then\n+            return;\n+         end if;\n+\n+         Last_Item := Item;\n          Item := Next_Rep_Item (Item);\n       end loop;\n \n       --  When the destination type has a rep item chain, the chain of the\n       --  source type is appended to it.\n \n-      if Present (Item) then\n-         Set_Next_Rep_Item (Item, From_Item);\n+      if Present (Last_Item) then\n+         Set_Next_Rep_Item (Last_Item, From_Item);\n \n       --  Otherwise the destination type directly inherits the rep item chain\n-      --  of the source type.\n+      --  of the source type (if any).\n \n       else\n          Set_First_Rep_Item (Typ, From_Item);"}]}