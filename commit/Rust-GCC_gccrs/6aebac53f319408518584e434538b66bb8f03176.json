{"sha": "6aebac53f319408518584e434538b66bb8f03176", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFlYmFjNTNmMzE5NDA4NTE4NTg0ZTQzNDUzOGI2NmJiOGYwMzE3Ng==", "commit": {"author": {"name": "Andrew Pinski", "email": "andrew_pinski@playstation.sony.com", "date": "2008-08-31T02:40:13Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2008-08-31T02:40:13Z"}, "message": "#define vector __attribute__((vector_size(16) )) struct struct1 { union { float a[3]...\n\n#define vector __attribute__((vector_size(16) ))\nstruct struct1  {\n  union { float a[3]; }    vmx;\n  struct struct2   {\n    struct2(const struct2& r) {}\n  } w;\n} __attribute__((aligned(16)));\nstruct struct3  {\n  vector float vmx;\n  operator const struct1& () const{\n    return *reinterpret_cast<const struct1*>(this);\n  }\n};\nstruct3 func3( struct3 V1);\nstruct3 func2( void );\nvoid func1( )  {\n  struct1 vVec = func2() ;\n  func3 ( (struct3&)vVec );\n}\n\nFrom-SVN: r139820", "tree": {"sha": "c26fb67132b81ba83d6eaed246bea9658b7cfd2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c26fb67132b81ba83d6eaed246bea9658b7cfd2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6aebac53f319408518584e434538b66bb8f03176", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aebac53f319408518584e434538b66bb8f03176", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aebac53f319408518584e434538b66bb8f03176", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aebac53f319408518584e434538b66bb8f03176/comments", "author": null, "committer": null, "parents": [{"sha": "617c394a0358b066551d89ad11fc02e1dfb32143", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/617c394a0358b066551d89ad11fc02e1dfb32143", "html_url": "https://github.com/Rust-GCC/gccrs/commit/617c394a0358b066551d89ad11fc02e1dfb32143"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "9d386fc0d9efa4e6cbf9988d36e93de7f6494437", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aebac53f319408518584e434538b66bb8f03176/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aebac53f319408518584e434538b66bb8f03176/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6aebac53f319408518584e434538b66bb8f03176", "patch": "@@ -1,3 +1,9 @@\n+2008-08-30  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\n+\tPR middle-end/36444\n+\t* expmed.c (extract_bit_field_1): Check the mode size to make\n+\tsure the vector modes have the same size.\n+\n 2008-08-29  Michael Meissner  <gnu@the-meissners.org>\n \n \t* dojump.c (top level): Include basic-block.h to declare"}, {"sha": "83a8760b13124071264ae8662dbb9879ed63ab05", "filename": "gcc/expmed.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aebac53f319408518584e434538b66bb8f03176/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aebac53f319408518584e434538b66bb8f03176/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=6aebac53f319408518584e434538b66bb8f03176", "patch": "@@ -1204,7 +1204,7 @@ extract_bit_field_1 (rtx str_rtx, unsigned HOST_WIDE_INT bitsize,\n \n       for (; new_mode != VOIDmode ; new_mode = GET_MODE_WIDER_MODE (new_mode))\n \tif (GET_MODE_NUNITS (new_mode) == nunits\n-\t    && GET_MODE_INNER (new_mode) == tmode\n+\t    && GET_MODE_SIZE (new_mode) == GET_MODE_SIZE (GET_MODE (op0))\n \t    && targetm.vector_mode_supported_p (new_mode))\n \t  break;\n       if (new_mode != VOIDmode)"}, {"sha": "405e0f37084cdc02f0edd99c16a9536d2b640d4d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aebac53f319408518584e434538b66bb8f03176/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aebac53f319408518584e434538b66bb8f03176/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6aebac53f319408518584e434538b66bb8f03176", "patch": "@@ -1,3 +1,9 @@\n+2008-08-30  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\n+\tPR middle-end/36444\n+\t* g++.dg/torture/pr36444.C: New testcase.\n+\t* gcc.c-torture/compile/vector-4.c: New testcase.\n+\n 2008-08-30  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/36895"}, {"sha": "fd20bde3d47bdce7c93b6c383facc2eaa9e6550b", "filename": "gcc/testsuite/g++.dg/torture/pr36444.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aebac53f319408518584e434538b66bb8f03176/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr36444.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aebac53f319408518584e434538b66bb8f03176/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr36444.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr36444.C?ref=6aebac53f319408518584e434538b66bb8f03176", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+#define vector __attribute__((vector_size(16) ))\n+struct struct1  {\n+  union {}    vmx;\n+  struct struct2   {\n+    struct2(const struct2& r) {}\n+  } w;\n+} __attribute__((aligned(16)));\n+struct struct3  {\n+  vector float vmx;\n+  operator const struct1& () const{\n+    return *reinterpret_cast<const struct1*>(this);\n+  }\n+};\n+struct3 func3( struct3 V1);\n+struct3 func2( void );\n+void func1( )  {\n+  struct1 vVec = func2() ;\n+  func3 ( (struct3&)vVec );\n+}\n+"}, {"sha": "b0d8e81c82dddf40b11b4bac1715840bdcc57785", "filename": "gcc/testsuite/gcc.c-torture/compile/vector-4.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aebac53f319408518584e434538b66bb8f03176/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fvector-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aebac53f319408518584e434538b66bb8f03176/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fvector-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fvector-4.c?ref=6aebac53f319408518584e434538b66bb8f03176", "patch": "@@ -0,0 +1,10 @@\n+/* Make sure that vector of size 8 of signed char works. This used to crash with AVX on x86\n+   as we would produce try to extract the chars inside the vector mode using the vector mode of V8SI\n+   which was wrong. */\n+__attribute__ ((vector_size (8))) signed char v4, v5, v6;\n+void\n+two (void)\n+{\n+ v4 = v5 + v6;\n+}\n+"}]}