{"sha": "5f9ee6953e441cdd6cc0d85229f85c34abb4fd11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY5ZWU2OTUzZTQ0MWNkZDZjYzBkODUyMjlmODVjMzRhYmI0ZmQxMQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-08-28T05:33:02Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-08-28T05:33:02Z"}, "message": "gjavah.c, [...]: Do not use C++ style comments in C code.\n\n        * gjavah.c, jcf-write.c, verify.c: Do not use C++ style\n        comments in C code.\n\nFrom-SVN: r28940", "tree": {"sha": "b0395b4841f76f7a3ece6a97b8331aaa0a6aaef3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0395b4841f76f7a3ece6a97b8331aaa0a6aaef3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f9ee6953e441cdd6cc0d85229f85c34abb4fd11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f9ee6953e441cdd6cc0d85229f85c34abb4fd11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f9ee6953e441cdd6cc0d85229f85c34abb4fd11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f9ee6953e441cdd6cc0d85229f85c34abb4fd11/comments", "author": null, "committer": null, "parents": [{"sha": "7144300698452876d425409f8d17bb56bff271b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7144300698452876d425409f8d17bb56bff271b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7144300698452876d425409f8d17bb56bff271b7"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "4735ac4873543d26591d27ca8424cfead1cc96c1", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f9ee6953e441cdd6cc0d85229f85c34abb4fd11/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f9ee6953e441cdd6cc0d85229f85c34abb4fd11/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=5f9ee6953e441cdd6cc0d85229f85c34abb4fd11", "patch": "@@ -1,3 +1,8 @@\n+Fri Aug 27 23:31:57 1999  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* gjavah.c, jcf-write.c, verify.c: Do not use C++ style\n+\tcomments in C code.\n+\n 1999-08-26  Tom Tromey  <tromey@cygnus.com>\n \n \t* gjavah.c (print_cxx_classname): Print \"::\" before qualified"}, {"sha": "0859e3d4b1e68f17cb62429d4f91ecc96c720245", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f9ee6953e441cdd6cc0d85229f85c34abb4fd11/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f9ee6953e441cdd6cc0d85229f85c34abb4fd11/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=5f9ee6953e441cdd6cc0d85229f85c34abb4fd11", "patch": "@@ -840,7 +840,7 @@ DEFUN(print_c_decl, (stream, jcf, name_index, signature_index, is_init,\n     }\n }\n \n-// Print the unqualified method name followed by the signature.\n+/* Print the unqualified method name followed by the signature. */\n static void\n DEFUN(print_full_cxx_name, (stream, jcf, name_index, signature_index, is_init, name_override),\n       FILE* stream AND JCF* jcf"}, {"sha": "91567d04f21d0c8e71da530af1e2f4bb26aaa46a", "filename": "gcc/java/jcf-write.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f9ee6953e441cdd6cc0d85229f85c34abb4fd11/gcc%2Fjava%2Fjcf-write.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f9ee6953e441cdd6cc0d85229f85c34abb4fd11/gcc%2Fjava%2Fjcf-write.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-write.c?ref=5f9ee6953e441cdd6cc0d85229f85c34abb4fd11", "patch": "@@ -1073,7 +1073,7 @@ emit_if (target, opcode, inv_opcode, state)\n      struct jcf_partial *state;\n {\n   OP1 (opcode);\n-  // value is 1 byte from reloc back to start of instruction.\n+  /* value is 1 byte from reloc back to start of instruction.  */\n   emit_reloc (1, - inv_opcode, target, state);\n }\n \n@@ -1083,7 +1083,7 @@ emit_goto (target, state)\n      struct jcf_partial *state;\n {\n   OP1 (OPCODE_goto);\n- // Value is 1 byte from reloc back to start of instruction.\n+  /* Value is 1 byte from reloc back to start of instruction.  */\n   emit_reloc (1, OPCODE_goto_w, target, state);\n }\n \n@@ -1093,7 +1093,7 @@ emit_jsr (target, state)\n      struct jcf_partial *state;\n {\n   OP1 (OPCODE_jsr);\n- // Value is 1 byte from reloc back to start of instruction.\n+  /* Value is 1 byte from reloc back to start of instruction.  */\n   emit_reloc (1, OPCODE_jsr_w, target, state);\n }\n "}, {"sha": "77d96719c4e71b0665216a2fad94760b4d4d2a06", "filename": "gcc/java/verify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f9ee6953e441cdd6cc0d85229f85c34abb4fd11/gcc%2Fjava%2Fverify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f9ee6953e441cdd6cc0d85229f85c34abb4fd11/gcc%2Fjava%2Fverify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fverify.c?ref=5f9ee6953e441cdd6cc0d85229f85c34abb4fd11", "patch": "@@ -1066,7 +1066,7 @@ verify_jvm_instructions (jcf, byte_ops, length)\n \t  break;\n \n \tcase OPCODE_athrow:\n-\t  // FIXME: athrow also empties the stack.\n+\t  /* FIXME: athrow also empties the stack. */\n \t  pop_type (throwable_type_node);\n \t  INVALIDATE_PC;\n \t  break;"}]}