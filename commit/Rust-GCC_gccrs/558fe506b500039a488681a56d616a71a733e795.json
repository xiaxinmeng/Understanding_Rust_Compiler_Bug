{"sha": "558fe506b500039a488681a56d616a71a733e795", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU4ZmU1MDZiNTAwMDM5YTQ4ODY4MWE1NmQ2MTZhNzFhNzMzZTc5NQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-05-17T14:43:50Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-05-17T14:43:50Z"}, "message": "fixfixes.c (char_macro_use_fix, [...]): Don't check the return value of sprintf.\n\n\t* fixinc/fixfixes.c (char_macro_use_fix, char_macro_def_fix):\n\tDon't check the return value of sprintf.  Use asprintf to avoid\n\tbuffer overflows.\n\nFrom-SVN: r33955", "tree": {"sha": "1f7682065e552b701a88411e15b3c967fa957715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f7682065e552b701a88411e15b3c967fa957715"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/558fe506b500039a488681a56d616a71a733e795", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/558fe506b500039a488681a56d616a71a733e795", "html_url": "https://github.com/Rust-GCC/gccrs/commit/558fe506b500039a488681a56d616a71a733e795", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/558fe506b500039a488681a56d616a71a733e795/comments", "author": null, "committer": null, "parents": [{"sha": "6f6ceed067f961614a880bc4ac4e0d72a4e89a1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f6ceed067f961614a880bc4ac4e0d72a4e89a1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f6ceed067f961614a880bc4ac4e0d72a4e89a1d"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "b0b621d151e64a913ea91b72a108d7947fee74c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558fe506b500039a488681a56d616a71a733e795/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558fe506b500039a488681a56d616a71a733e795/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=558fe506b500039a488681a56d616a71a733e795", "patch": "@@ -1,3 +1,9 @@\n+2000-05-17  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* fixinc/fixfixes.c (char_macro_use_fix, char_macro_def_fix):\n+\tDon't check the return value of sprintf.  Use asprintf to avoid\n+\tbuffer overflows.\n+\n Wed May 17 17:27:44 2000  Andrew Cagney  <cagney@b1.cygnus.com>\n \n \t* flags.h (warn_unused_function, warn_unused_label,"}, {"sha": "0aa2cd74736319f5a49c348dd4d0ad5109308cb5", "filename": "gcc/fixinc/fixfixes.c", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/558fe506b500039a488681a56d616a71a733e795/gcc%2Ffixinc%2Ffixfixes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/558fe506b500039a488681a56d616a71a733e795/gcc%2Ffixinc%2Ffixfixes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixfixes.c?ref=558fe506b500039a488681a56d616a71a733e795", "patch": "@@ -296,7 +296,7 @@ FIX_PROC_HEAD( char_macro_use_fix )\n #endif\n     ;\n \n-  char zPat[ sizeof( zPatFmt ) + 32 ];\n+  char *pz_pat;\n \n   static regex_t re;\n \n@@ -309,13 +309,15 @@ FIX_PROC_HEAD( char_macro_use_fix )\n       exit(3);\n     }\n \n-  if (sprintf( zPat, zPatFmt, p_fixd->patch_args[1] ) >= sizeof( zPat ))\n+  asprintf (&pz_pat, zPatFmt, p_fixd->patch_args[1]);\n+  if (!pz_pat)\n     {\n-      fprintf( stderr, \"Oversize format:  %s\\n\", zPat );\n+      fprintf( stderr, \"Virtual memory exhausted\\n\" );\n       exit(3);\n     }\n \n-  compile_re (zPat, &re, 2, \"macro pattern\", \"char_macro_use_fix\");\n+  compile_re (pz_pat, &re, 2, \"macro pattern\", \"char_macro_use_fix\");\n+  free (pz_pat);\n \n   while (regexec (&re, text, 3, rm, 0) == 0)\n     {\n@@ -378,7 +380,7 @@ FIX_PROC_HEAD( char_macro_def_fix )\n #endif\n     ;\n \n-  char zPat[ sizeof( zPatFmt ) + 32 ];\n+  char *pz_pat;\n \n   static regex_t re;\n \n@@ -393,20 +395,23 @@ FIX_PROC_HEAD( char_macro_def_fix )\n       exit(3);\n     }\n \n-  if (sprintf( zPat, zPatFmt, p_fixd->patch_args[1] ) >= sizeof( zPat ))\n+  asprintf (&pz_pat, zPatFmt, p_fixd->patch_args[1]);\n+  if (!pz_pat)\n     {\n-      fprintf( stderr, \"Oversize format:  %s\\n\", zPat );\n+      fprintf (stderr, \"Virtual memory exhausted\\n\");\n       exit(3);\n     }\n \n-  compile_re (zPat, &re, 1, \"macro pattern\", \"char_macro_def_fix\");\n+  compile_re (pz_pat, &re, 1, \"macro pattern\", \"char_macro_def_fix\");\n \n   if ((rerr = regexec (&re, text, 3, rm, 0)) != 0)\n     {\n-      fprintf( stderr, \"Match error %d:\\n%s\\n\", rerr, zPat );\n+      fprintf( stderr, \"Match error %d:\\n%s\\n\", rerr, pz_pat );\n       exit(3);\n     }\n \n+  free (pz_pat);\n+  \n   while ((rerr = regexec (&re, text, 3, rm, 0)) == 0)\n     {\n       const char* pz = text + rm[2].rm_so;"}]}