{"sha": "437018ea2b6dc966ce40cd5dd684054126ddda6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM3MDE4ZWEyYjZkYzk2NmNlNDBjZDVkZDY4NDA1NDEyNmRkZGE2Yg==", "commit": {"author": {"name": "Than McIntosh", "email": "thanm@google.com", "date": "2016-09-27T20:49:05Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-09-27T20:49:05Z"}, "message": "compiler: add src information to AST dumps (part 1 of 2).\n\n    \n    When emitting AST dumps, tag the end of selected statements with with\n    source file and line number information where available. Example:\n    \n      tmp.76832448 = 0 // p.go:6\n    \n    Requires a corresponding change in gcc/go as well as this change to\n    gofrontend.\n    \n    Reviewed-on: https://go-review.googlesource.com/29856\n\n\t* go-linemap.cc (Gcc_linemap::to_string): New method.\n\nFrom-SVN: r240558", "tree": {"sha": "10cc817706743a8a7bea457f727d3ab9ee181ab8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10cc817706743a8a7bea457f727d3ab9ee181ab8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/437018ea2b6dc966ce40cd5dd684054126ddda6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/437018ea2b6dc966ce40cd5dd684054126ddda6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/437018ea2b6dc966ce40cd5dd684054126ddda6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/437018ea2b6dc966ce40cd5dd684054126ddda6b/comments", "author": {"login": "thanm", "id": 12280172, "node_id": "MDQ6VXNlcjEyMjgwMTcy", "avatar_url": "https://avatars.githubusercontent.com/u/12280172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thanm", "html_url": "https://github.com/thanm", "followers_url": "https://api.github.com/users/thanm/followers", "following_url": "https://api.github.com/users/thanm/following{/other_user}", "gists_url": "https://api.github.com/users/thanm/gists{/gist_id}", "starred_url": "https://api.github.com/users/thanm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thanm/subscriptions", "organizations_url": "https://api.github.com/users/thanm/orgs", "repos_url": "https://api.github.com/users/thanm/repos", "events_url": "https://api.github.com/users/thanm/events{/privacy}", "received_events_url": "https://api.github.com/users/thanm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6e39060a7f6f58dacf4e74762fd5dd85a5afb0d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e39060a7f6f58dacf4e74762fd5dd85a5afb0d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e39060a7f6f58dacf4e74762fd5dd85a5afb0d8"}], "stats": {"total": 116, "additions": 88, "deletions": 28}, "files": [{"sha": "7292b2b93cc4cb90cdd47c40dfe88b494592f994", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437018ea2b6dc966ce40cd5dd684054126ddda6b/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437018ea2b6dc966ce40cd5dd684054126ddda6b/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=437018ea2b6dc966ce40cd5dd684054126ddda6b", "patch": "@@ -1,3 +1,7 @@\n+2016-09-27  Than McIntosh  <thanm@google.com>\n+\n+\t* go-linemap.cc (Gcc_linemap::to_string): New method.\n+\n 2016-09-23  Than McIntosh  <thanm@google.com>\n \n \t* go-gcc-diagnostics.cc: New file."}, {"sha": "b58a54b9544f59d21ba08430219af04e24c1a5a9", "filename": "gcc/go/go-linemap.cc", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437018ea2b6dc966ce40cd5dd684054126ddda6b/gcc%2Fgo%2Fgo-linemap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437018ea2b6dc966ce40cd5dd684054126ddda6b/gcc%2Fgo%2Fgo-linemap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-linemap.cc?ref=437018ea2b6dc966ce40cd5dd684054126ddda6b", "patch": "@@ -29,6 +29,9 @@ class Gcc_linemap : public Linemap\n   void\n   stop();\n \n+  std::string\n+  to_string(Location);\n+\n  protected:\n   Location\n   get_predeclared_location();\n@@ -60,6 +63,31 @@ Gcc_linemap::start_file(const char *file_name, unsigned line_begin)\n   this->in_file_ = true;\n }\n \n+// Stringify a location\n+\n+std::string\n+Gcc_linemap::to_string(Location location)\n+{\n+  const line_map_ordinary *lmo;\n+  source_location resolved_location;\n+\n+  // Screen out unknown and predeclared locations; produce output\n+  // only for simple file:line locations.\n+  resolved_location =\n+      linemap_resolve_location (line_table, location.gcc_location(),\n+                                LRK_SPELLING_LOCATION, &lmo);\n+  if (lmo == NULL || resolved_location < RESERVED_LOCATION_COUNT)\n+    return \"\";\n+  const char *path = LINEMAP_FILE (lmo);\n+  if (!path)\n+    return \"\";\n+\n+  // Strip the source file down to the base file, to reduce clutter.\n+  std::stringstream ss;\n+  ss << lbasename(path) << \":\" << SOURCE_LINE (lmo, location.gcc_location());\n+  return ss.str();\n+}\n+\n // Stop getting locations.\n \n void"}, {"sha": "e80ed9f94df2e329865ca9648fcd14baa998030a", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437018ea2b6dc966ce40cd5dd684054126ddda6b/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437018ea2b6dc966ce40cd5dd684054126ddda6b/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=437018ea2b6dc966ce40cd5dd684054126ddda6b", "patch": "@@ -1,4 +1,4 @@\n-28b79f1d5a3a8924329128999a21d0693e08a603\n+1d8d834b5eb9f683cc06529145b353bb5b08e7ea\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "d60cff6f5d59c3874efd84bfc4cb775dfd6d471c", "filename": "gcc/go/gofrontend/go-linemap.h", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437018ea2b6dc966ce40cd5dd684054126ddda6b/gcc%2Fgo%2Fgofrontend%2Fgo-linemap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437018ea2b6dc966ce40cd5dd684054126ddda6b/gcc%2Fgo%2Fgofrontend%2Fgo-linemap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgo-linemap.h?ref=437018ea2b6dc966ce40cd5dd684054126ddda6b", "patch": "@@ -17,7 +17,6 @@\n // The type is normally passed by value rather than by reference, and\n // it should support that efficiently.  The type should be defined in\n // \"go-location.h\".\n-\n #include \"go-location.h\"\n \n // The Linemap class is a pure abstract interface, plus some static\n@@ -58,6 +57,12 @@ class Linemap\n   virtual void\n   stop() = 0;\n \n+  // Produce a human-readable description of a Location, e.g.\n+  // \"foo.go:10\". Returns an empty string for predeclared, builtin or\n+  // unknown locations.\n+  virtual std::string\n+  to_string(Location) = 0;\n+\n  protected:\n   // Return a special Location used for predeclared identifiers.  This\n   // Location should be different from that for any actual source\n@@ -122,6 +127,14 @@ class Linemap\n     go_assert(Linemap::instance_ != NULL);\n     return Linemap::instance_->is_unknown(loc);\n   }\n+\n+  // Produce a human-readable description of a Location.\n+  static std::string\n+  location_to_string(Location loc)\n+  {\n+    go_assert(Linemap::instance_ != NULL);\n+    return Linemap::instance_->to_string(loc);\n+  }\n };\n \n // The backend interface must define this function.  It should return"}, {"sha": "2eb363a979824a4b120ed165ae72cbfe23bb2435", "filename": "gcc/go/gofrontend/statements.cc", "status": "modified", "additions": 41, "deletions": 26, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/437018ea2b6dc966ce40cd5dd684054126ddda6b/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/437018ea2b6dc966ce40cd5dd684054126ddda6b/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fstatements.cc?ref=437018ea2b6dc966ce40cd5dd684054126ddda6b", "patch": "@@ -191,6 +191,21 @@ class Error_statement : public Statement\n   do_dump_statement(Ast_dump_context*) const;\n };\n \n+//\n+// Helper to tack on available source position information\n+// at the end of a statement.\n+//\n+static std::string\n+dsuffix(Location location)\n+{\n+  std::string lstr = Linemap::location_to_string(location);\n+  if (lstr == \"\")\n+    return lstr;\n+  std::string rval(\" // \");\n+  rval += lstr;\n+  return rval;\n+}\n+\n // Dump the AST representation for an error statement.\n \n void\n@@ -338,7 +353,7 @@ Variable_declaration_statement::do_dump_statement(\n       ast_dump_context->ostream() <<  \"= \";\n       ast_dump_context->dump_expression(var->init());\n     }\n-  ast_dump_context->ostream() << std::endl;\n+  ast_dump_context->ostream() << dsuffix(location()) << std::endl;\n }\n \n // Make a variable declaration.\n@@ -533,7 +548,7 @@ Temporary_statement::do_dump_statement(Ast_dump_context* ast_dump_context) const\n       ast_dump_context->ostream() << \" = \";\n       ast_dump_context->dump_expression(this->init_);\n     }\n-  ast_dump_context->ostream() << std::endl;\n+  ast_dump_context->ostream() << dsuffix(location()) << std::endl;\n }\n \n // Make and initialize a temporary variable in BLOCK.\n@@ -839,7 +854,7 @@ Assignment_statement::do_dump_statement(Ast_dump_context* ast_dump_context)\n   ast_dump_context->dump_expression(this->lhs_);\n   ast_dump_context->ostream() << \" = \" ;\n   ast_dump_context->dump_expression(this->rhs_);\n-  ast_dump_context->ostream() << std::endl;\n+  ast_dump_context->ostream() << dsuffix(location()) << std::endl;\n }\n \n // Make an assignment statement.\n@@ -980,7 +995,7 @@ Assignment_operation_statement::do_dump_statement(\n   ast_dump_context->dump_expression(this->lhs_);\n   ast_dump_context->dump_operator(this->op_);\n   ast_dump_context->dump_expression(this->rhs_);\n-  ast_dump_context->ostream() << std::endl;\n+  ast_dump_context->ostream() << dsuffix(location()) << std::endl;\n }\n \n // Make an assignment operation statement.\n@@ -1126,7 +1141,7 @@ Tuple_assignment_statement::do_dump_statement(\n   ast_dump_context->dump_expression_list(this->lhs_);\n   ast_dump_context->ostream() << \" = \";\n   ast_dump_context->dump_expression_list(this->rhs_);\n-  ast_dump_context->ostream()  << std::endl;\n+  ast_dump_context->ostream()  << dsuffix(location()) << std::endl;\n }\n \n // Make a tuple assignment statement.\n@@ -1287,7 +1302,7 @@ Tuple_map_assignment_statement::do_dump_statement(\n   ast_dump_context->dump_expression(this->present_);\n   ast_dump_context->ostream() << \" = \";\n   ast_dump_context->dump_expression(this->map_index_);\n-  ast_dump_context->ostream() << std::endl;\n+  ast_dump_context->ostream() << dsuffix(location()) << std::endl;\n }\n \n // Make a map assignment statement which returns a pair of values.\n@@ -1429,7 +1444,7 @@ Tuple_receive_assignment_statement::do_dump_statement(\n   ast_dump_context->dump_expression(this->closed_);\n   ast_dump_context->ostream() << \" <- \";\n   ast_dump_context->dump_expression(this->channel_);\n-  ast_dump_context->ostream() << std::endl;\n+  ast_dump_context->ostream() << dsuffix(location()) << std::endl;\n }\n \n // Make a nonblocking receive statement.\n@@ -1623,7 +1638,7 @@ Tuple_type_guard_assignment_statement::do_dump_statement(\n   ast_dump_context->dump_expression(this->expr_);\n   ast_dump_context->ostream() << \" . \";\n   ast_dump_context->dump_type(this->type_);\n-  ast_dump_context->ostream()  << std::endl;\n+  ast_dump_context->ostream()  << dsuffix(location()) << std::endl;\n }\n \n // Make an assignment from a type guard to a pair of variables.\n@@ -1720,7 +1735,7 @@ Expression_statement::do_dump_statement(Ast_dump_context* ast_dump_context)\n {\n   ast_dump_context->print_indent();\n   ast_dump_context->dump_expression(expr_);\n-  ast_dump_context->ostream() << std::endl;\n+  ast_dump_context->ostream() << dsuffix(location()) << std::endl;\n }\n \n // Make an expression statement from an Expression.\n@@ -1810,7 +1825,7 @@ Inc_dec_statement::do_dump_statement(Ast_dump_context* ast_dump_context) const\n {\n   ast_dump_context->print_indent();\n   ast_dump_context->dump_expression(expr_);\n-  ast_dump_context->ostream() << (is_inc_? \"++\": \"--\") << std::endl;\n+  ast_dump_context->ostream() << (is_inc_? \"++\": \"--\") << dsuffix(location()) << std::endl;\n }\n \n // Make an increment statement.\n@@ -2501,7 +2516,7 @@ Go_statement::do_dump_statement(Ast_dump_context* ast_dump_context) const\n   ast_dump_context->print_indent();\n   ast_dump_context->ostream() << \"go \";\n   ast_dump_context->dump_expression(this->call());\n-  ast_dump_context->ostream() << std::endl;\n+  ast_dump_context->ostream() << dsuffix(location()) << std::endl;\n }\n \n // Make a go statement.\n@@ -2539,7 +2554,7 @@ Defer_statement::do_dump_statement(Ast_dump_context* ast_dump_context) const\n   ast_dump_context->print_indent();\n   ast_dump_context->ostream() << \"defer \";\n   ast_dump_context->dump_expression(this->call());\n-  ast_dump_context->ostream() << std::endl;\n+  ast_dump_context->ostream() << dsuffix(location()) << std::endl;\n }\n \n // Make a defer statement.\n@@ -2733,7 +2748,7 @@ Return_statement::do_dump_statement(Ast_dump_context* ast_dump_context) const\n   ast_dump_context->print_indent();\n   ast_dump_context->ostream() << \"return \" ;\n   ast_dump_context->dump_expression_list(this->vals_);\n-  ast_dump_context->ostream() << std::endl;\n+  ast_dump_context->ostream() << dsuffix(location()) << std::endl;\n }\n \n // Make a return statement.\n@@ -2816,7 +2831,7 @@ Bc_statement::do_dump_statement(Ast_dump_context* ast_dump_context) const\n       ast_dump_context->ostream() << \" \";\n       ast_dump_context->dump_label_name(this->label_);\n     }\n-  ast_dump_context->ostream() << std::endl;\n+  ast_dump_context->ostream() << dsuffix(location()) << std::endl;\n }\n \n // Make a break statement.\n@@ -2873,7 +2888,7 @@ void\n Goto_statement::do_dump_statement(Ast_dump_context* ast_dump_context) const\n {\n   ast_dump_context->print_indent();\n-  ast_dump_context->ostream() << \"goto \" << this->label_->name() << std::endl;\n+  ast_dump_context->ostream() << \"goto \" << this->label_->name() << dsuffix(location()) << std::endl;\n }\n \n // Make a goto statement.\n@@ -2909,7 +2924,7 @@ Goto_unnamed_statement::do_dump_statement(\n   ast_dump_context->print_indent();\n   ast_dump_context->ostream() << \"goto \";\n   ast_dump_context->dump_label_name(this->label_);\n-  ast_dump_context->ostream() << std::endl;\n+  ast_dump_context->ostream() << dsuffix(location()) << std::endl;\n }\n \n // Make a goto statement to an unnamed label.\n@@ -2952,7 +2967,7 @@ void\n Label_statement::do_dump_statement(Ast_dump_context* ast_dump_context) const\n {\n   ast_dump_context->print_indent();\n-  ast_dump_context->ostream() << this->label_->name() << \":\" << std::endl;\n+  ast_dump_context->ostream() << this->label_->name() << \":\" << dsuffix(location()) << std::endl;\n }\n \n // Make a label statement.\n@@ -2992,7 +3007,7 @@ Unnamed_label_statement::do_dump_statement(Ast_dump_context* ast_dump_context)\n {\n   ast_dump_context->print_indent();\n   ast_dump_context->dump_label_name(this->label_);\n-  ast_dump_context->ostream() << \":\" << std::endl;\n+  ast_dump_context->ostream() << \":\" << dsuffix(location()) << std::endl;\n }\n \n // Make an unnamed label statement.\n@@ -3077,7 +3092,7 @@ If_statement::do_dump_statement(Ast_dump_context* ast_dump_context) const\n   ast_dump_context->print_indent();\n   ast_dump_context->ostream() << \"if \";\n   ast_dump_context->dump_expression(this->cond_);\n-  ast_dump_context->ostream() << std::endl;\n+  ast_dump_context->ostream() << dsuffix(location()) << std::endl;\n   if (ast_dump_context->dump_subblocks())\n     {\n       ast_dump_context->dump_block(this->then_block_);\n@@ -3391,7 +3406,7 @@ Case_clauses::Case_clause::dump_clause(Ast_dump_context* ast_dump_context)\n   if (this->is_fallthrough_)\n     {\n       ast_dump_context->print_indent();\n-      ast_dump_context->ostream() <<  \" (fallthrough)\" << std::endl;\n+      ast_dump_context->ostream() <<  \" (fallthrough)\" << dsuffix(location()) << std::endl;\n     }\n }\n \n@@ -3782,7 +3797,7 @@ Switch_statement::do_dump_statement(Ast_dump_context* ast_dump_context) const\n     }\n   if (ast_dump_context->dump_subblocks())\n     {\n-      ast_dump_context->ostream() << \" {\" << std::endl;\n+      ast_dump_context->ostream() << \" {\" << dsuffix(location()) << std::endl;\n       this->clauses_->dump_clauses(ast_dump_context);\n       ast_dump_context->print_indent();\n       ast_dump_context->ostream() << \"}\";\n@@ -4202,7 +4217,7 @@ Type_switch_statement::do_dump_statement(Ast_dump_context* ast_dump_context)\n   ast_dump_context->ostream() << \" .(type)\";\n   if (ast_dump_context->dump_subblocks())\n     {\n-      ast_dump_context->ostream() << \" {\" << std::endl;\n+      ast_dump_context->ostream() << \" {\" << dsuffix(location()) << std::endl;\n       this->clauses_->dump_clauses(ast_dump_context);\n       ast_dump_context->ostream() << \"}\";\n     }\n@@ -4419,7 +4434,7 @@ Send_statement::do_dump_statement(Ast_dump_context* ast_dump_context) const\n   ast_dump_context->dump_expression(this->channel_);\n   ast_dump_context->ostream() << \" <- \";\n   ast_dump_context->dump_expression(this->val_);\n-  ast_dump_context->ostream() << std::endl;\n+  ast_dump_context->ostream() << dsuffix(location()) << std::endl;\n }\n \n // Make a send statement.\n@@ -4950,7 +4965,7 @@ Select_statement::do_dump_statement(Ast_dump_context* ast_dump_context) const\n   ast_dump_context->ostream() << \"select\";\n   if (ast_dump_context->dump_subblocks())\n     {\n-      ast_dump_context->ostream() << \" {\" << std::endl;\n+      ast_dump_context->ostream() << \" {\" << dsuffix(location()) << std::endl;\n       this->clauses_->dump_clauses(ast_dump_context);\n       ast_dump_context->ostream() << \"}\";\n     }\n@@ -5143,7 +5158,7 @@ For_statement::do_dump_statement(Ast_dump_context* ast_dump_context) const\n       ast_dump_context->ostream() << \"}\";\n     }\n \n-  ast_dump_context->ostream() << std::endl;\n+  ast_dump_context->ostream() << dsuffix(location()) << std::endl;\n }\n \n // Make a for statement.\n@@ -5895,7 +5910,7 @@ For_range_statement::do_dump_statement(Ast_dump_context* ast_dump_context) const\n       ast_dump_context->print_indent();\n       ast_dump_context->ostream() << \"}\";\n     }\n-  ast_dump_context->ostream() << std::endl;\n+  ast_dump_context->ostream() << dsuffix(location()) << std::endl;\n }\n \n // Make a for statement with a range clause."}]}