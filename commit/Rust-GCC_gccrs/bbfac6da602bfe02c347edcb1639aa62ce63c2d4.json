{"sha": "bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJmYWM2ZGE2MDJiZmUwMmMzNDdlZGNiMTYzOWFhNjJjZTYzYzJkNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-09-27T18:14:10Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-09-27T18:14:10Z"}, "message": "auto-inc-dec.c (try_merge): Remove break after return.\n\n\t* auto-inc-dec.c (try_merge): Remove break after return.\n\t* cselib.c (autoinc_split): Likewise.\n\t* explow.c (promote_mode): Likewise.\n\t* fixed-value.c (fixed_arithmetic): Likewise.\n\t* hsa.c (hsa_internal_fn::get_arity): Likewise.\n\t* rtlanal.c (modified_between_p, modified_in_p): Likewise.\n\t* trans-mem.c (get_attrs_for): Likewise.\n\t* tree-if-conv.c (if_convertible_stmt_p): Likewise.\n\t* tree-vrp.c (simplify_stmt_using_ranges): Likewise.\n\t* config/aarch64/aarch64-builtins.c (aarch64_fold_builtin): Likewise.\n\t* config/aarch64/aarch64.c (aarch64_get_condition_code_1): Likewise.\n\t* config/c6x/c6x.c (c6x_get_unit_specifier): Likewise.\n\t* config/cr16/cr16.c (legitimate_pic_operand_p): Likewise.\n\t* config/cris/cris.c (cris_op_str): Likewise.\n\t* config/mn10300/mn10300.c (cc_flags_for_code): Likewise.\n\t* config/tilepro/tilepro.c (tilepro_emit_setcc_internal_di): Likewise.\nc-family/\n\t* c-ada-spec.c (print_ada_declaration): Remove break after return.\nobjc/\n\t* objc-act.c (continue_class): Remove break after return.\n\t(objc_maybe_printable_name): Likewise.\nfortran/\n\t* dependency.c (gfc_dep_compare_expr): Remove break after return.\n\t* frontend-passes.c (optimize_op): Likewise.\n\t* interface.c (gfc_current_interface_head): Likewise.\n\t* symbol.c (check_conflict): Likewise.\n\t* trans-intrinsic.c (build_fix_expr): Likewise.\nada/\n\t* terminals.c (is_gui_app): Remove break after return.\n\nFrom-SVN: r240554", "tree": {"sha": "a601929874bbef2d5c3385172c48dcd6c71a5e97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a601929874bbef2d5c3385172c48dcd6c71a5e97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4d58c533a8a54cfd07f617fd4cfa91e67e51c57d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d58c533a8a54cfd07f617fd4cfa91e67e51c57d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d58c533a8a54cfd07f617fd4cfa91e67e51c57d"}], "stats": {"total": 110, "additions": 38, "deletions": 72}, "files": [{"sha": "47029b043395ea0af662b0afe687ffa54b787bad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -1,3 +1,22 @@\n+2016-09-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* auto-inc-dec.c (try_merge): Remove break after return.\n+\t* cselib.c (autoinc_split): Likewise.\n+\t* explow.c (promote_mode): Likewise.\n+\t* fixed-value.c (fixed_arithmetic): Likewise.\n+\t* hsa.c (hsa_internal_fn::get_arity): Likewise.\n+\t* rtlanal.c (modified_between_p, modified_in_p): Likewise.\n+\t* trans-mem.c (get_attrs_for): Likewise.\n+\t* tree-if-conv.c (if_convertible_stmt_p): Likewise.\n+\t* tree-vrp.c (simplify_stmt_using_ranges): Likewise.\n+\t* config/aarch64/aarch64-builtins.c (aarch64_fold_builtin): Likewise.\n+\t* config/aarch64/aarch64.c (aarch64_get_condition_code_1): Likewise.\n+\t* config/c6x/c6x.c (c6x_get_unit_specifier): Likewise.\n+\t* config/cr16/cr16.c (legitimate_pic_operand_p): Likewise.\n+\t* config/cris/cris.c (cris_op_str): Likewise.\n+\t* config/mn10300/mn10300.c (cc_flags_for_code): Likewise.\n+\t* config/tilepro/tilepro.c (tilepro_emit_setcc_internal_di): Likewise.\n+\n 2016-09-27  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* internal-fn.h (IFN_UNIQUE_CODES, IFN_GOACC_LOOP_CODES,"}, {"sha": "4f941ec8501370f3853dd210fe83348ce8587947", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -1,3 +1,7 @@\n+2016-09-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* terminals.c (is_gui_app): Remove break after return.\n+\n 2016-09-26  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* gcc-interface/decl.c: Fix fall through comment formatting."}, {"sha": "31f21f7a6fda74ed665f4d969ba5b8336add03d3", "filename": "gcc/ada/terminals.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fada%2Fterminals.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fada%2Fterminals.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fterminals.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -289,34 +289,27 @@ is_gui_app (char *exe)\n     {\n     case IMAGE_SUBSYSTEM_UNKNOWN:\n         return 1;\n-        break;\n \n     case IMAGE_SUBSYSTEM_NATIVE:\n         return 1;\n-        break;\n \n     case IMAGE_SUBSYSTEM_WINDOWS_GUI:\n         return 1;\n-        break;\n \n     case IMAGE_SUBSYSTEM_WINDOWS_CUI:\n         return 0;\n-        break;\n \n     case IMAGE_SUBSYSTEM_OS2_CUI:\n         return 0;\n-        break;\n \n     case IMAGE_SUBSYSTEM_POSIX_CUI:\n         return 0;\n-        break;\n \n     default:\n         /* Unknown, return GUI app to be preservative: if yes, it will be\n            correctly launched, if no, it will be launched, and a console will\n            be also displayed, which is not a big deal */\n         return 1;\n-        break;\n     }\n \n }"}, {"sha": "eb2dc21f801c51084468b45d2a1d28643bdc927d", "filename": "gcc/auto-inc-dec.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fauto-inc-dec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fauto-inc-dec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fauto-inc-dec.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -658,25 +658,21 @@ try_merge (void)\n       if (dump_file)\n \tfprintf (dump_file, \"trying SIMPLE_PRE_INC\\n\");\n       return attempt_change (gen_rtx_PRE_INC (reg_mode, inc_reg), inc_reg);\n-      break;\n \n     case SIMPLE_POST_INC:    /* size++  */\n       if (dump_file)\n \tfprintf (dump_file, \"trying SIMPLE_POST_INC\\n\");\n       return attempt_change (gen_rtx_POST_INC (reg_mode, inc_reg), inc_reg);\n-      break;\n \n     case SIMPLE_PRE_DEC:     /* --size  */\n       if (dump_file)\n \tfprintf (dump_file, \"trying SIMPLE_PRE_DEC\\n\");\n       return attempt_change (gen_rtx_PRE_DEC (reg_mode, inc_reg), inc_reg);\n-      break;\n \n     case SIMPLE_POST_DEC:    /* size--  */\n       if (dump_file)\n \tfprintf (dump_file, \"trying SIMPLE_POST_DEC\\n\");\n       return attempt_change (gen_rtx_POST_DEC (reg_mode, inc_reg), inc_reg);\n-      break;\n \n     case DISP_PRE:           /* ++con   */\n       if (dump_file)\n@@ -687,7 +683,6 @@ try_merge (void)\n \t\t\t\t\t\t\t       inc_reg,\n \t\t\t\t\t\t\t       inc_insn.reg1)),\n \t\t\t     inc_reg);\n-      break;\n \n     case DISP_POST:          /* con++   */\n       if (dump_file)\n@@ -698,7 +693,6 @@ try_merge (void)\n \t\t\t\t\t\t\t\tinc_reg,\n \t\t\t\t\t\t\t\tinc_insn.reg1)),\n \t\t\t     inc_reg);\n-      break;\n \n     case REG_PRE:            /* ++reg   */\n       if (dump_file)\n@@ -709,7 +703,6 @@ try_merge (void)\n \t\t\t\t\t\t\t       inc_reg,\n \t\t\t\t\t\t\t       inc_insn.reg1)),\n \t\t\t     inc_reg);\n-      break;\n \n     case REG_POST:            /* reg++   */\n       if (dump_file)\n@@ -720,7 +713,6 @@ try_merge (void)\n \t\t\t\t\t\t\t\tinc_reg,\n \t\t\t\t\t\t\t\tinc_insn.reg1)),\n \t\t\t     inc_reg);\n-      break;\n     }\n }\n "}, {"sha": "f60f63eee25e4d2309f53858b4c9dcde6237d270", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -1,3 +1,7 @@\n+2016-09-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-ada-spec.c (print_ada_declaration): Remove break after return.\n+\n 2016-09-26  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* c-common.c: Include memmodel.h."}, {"sha": "a5395b69489c0f25935b46918a20a09f1c577f4b", "filename": "gcc/c-family/c-ada-spec.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fc-family%2Fc-ada-spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fc-family%2Fc-ada-spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -2902,7 +2902,6 @@ print_ada_declaration (pretty_printer *buffer, tree t, tree type, int spc)\n \t    pp_string (buffer, \"--  skipped function type \");\n \t    dump_generic_ada_node (buffer, t, type, spc, false, true);\n \t    return 1;\n-\t    break;\n \n \t  case ENUMERAL_TYPE:\n \t    if ((orig && TYPE_NAME (orig) && orig != TREE_TYPE (t))"}, {"sha": "b3625801761fd5bc3891920fe27f69756e92db6e", "filename": "gcc/config/aarch64/aarch64-builtins.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -1460,7 +1460,6 @@ aarch64_fold_builtin (tree fndecl, int n_args ATTRIBUTE_UNUSED, tree *args,\n     {\n       BUILTIN_VDQF (UNOP, abs, 2)\n \treturn fold_build1 (ABS_EXPR, type, args[0]);\n-\tbreak;\n       VAR1 (UNOP, floatv2si, 2, v2sf)\n       VAR1 (UNOP, floatv4si, 2, v4sf)\n       VAR1 (UNOP, floatv2di, 2, v2df)"}, {"sha": "df6514d85e660ae6d50847d90ef62b3a2b2cd4e6", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -4433,7 +4433,6 @@ aarch64_get_condition_code_1 (enum machine_mode mode, enum rtx_code comp_code)\n \n     default:\n       return -1;\n-      break;\n     }\n \n   return -1;"}, {"sha": "305f31ea0b338f8c466e682b8813553b01ec67a9", "filename": "gcc/config/c6x/c6x.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fconfig%2Fc6x%2Fc6x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fconfig%2Fc6x%2Fc6x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Fc6x.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -1987,17 +1987,13 @@ c6x_get_unit_specifier (rtx_insn *insn)\n     case UNITS_DLS:\n     case UNITS_D_ADDR:\n       return 'd';\n-      break;\n     case UNITS_L:\n     case UNITS_LS:\n       return 'l';\n-      break;\n     case UNITS_S:\n       return 's';\n-      break;\n     case UNITS_M:\n       return 'm';\n-      break;\n     default:\n       gcc_unreachable ();\n     }"}, {"sha": "13e8e475ae9960988cd126a67a34c995038d10b2", "filename": "gcc/config/cr16/cr16.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fconfig%2Fcr16%2Fcr16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fconfig%2Fcr16%2Fcr16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcr16%2Fcr16.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -1120,10 +1120,8 @@ legitimate_pic_operand_p (rtx x)\n     {\n     case SYMBOL_REF:\n       return 0;\n-      break;\n     case LABEL_REF:\n       return 0;\n-      break;\n     case CONST:\n       /* REVISIT: Use something like symbol_referenced_p.  */\n       if (GET_CODE (XEXP (x, 0)) == PLUS\n@@ -1134,7 +1132,6 @@ legitimate_pic_operand_p (rtx x)\n       break;\n     case MEM:\n       return legitimate_pic_operand_p (XEXP (x, 0));\n-      break;\n     default:\n       break;\n     }"}, {"sha": "7532b8e501a0a1b78f4644cd3eab74cd731b36c1", "filename": "gcc/config/cris/cris.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fconfig%2Fcris%2Fcris.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fconfig%2Fcris%2Fcris.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -544,11 +544,9 @@ cris_op_str (rtx x)\n     {\n     case PLUS:\n       return \"add\";\n-      break;\n \n     case MINUS:\n       return \"sub\";\n-      break;\n \n     case MULT:\n       /* This function is for retrieving a part of an instruction name for\n@@ -560,46 +558,36 @@ cris_op_str (rtx x)\n \n     case DIV:\n       return \"div\";\n-      break;\n \n     case AND:\n       return \"and\";\n-      break;\n \n     case IOR:\n       return \"or\";\n-      break;\n \n     case XOR:\n       return \"xor\";\n-      break;\n \n     case NOT:\n       return \"not\";\n-      break;\n \n     case ASHIFT:\n       return \"lsl\";\n-      break;\n \n     case LSHIFTRT:\n       return \"lsr\";\n-      break;\n \n     case ASHIFTRT:\n       return \"asr\";\n-      break;\n \n     case UMIN:\n       /* Used to control the sign/zero-extend character for the 'E' modifier.\n \t BOUND has none.  */\n       cris_output_insn_is_bound = 1;\n       return \"bound\";\n-      break;\n \n     default:\n       return \"Unknown operator\";\n-      break;\n   }\n }\n "}, {"sha": "81c8506a0ff82f01e550a3faeca675391f6fed27", "filename": "gcc/config/mn10300/mn10300.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -2693,7 +2693,6 @@ cc_flags_for_code (enum rtx_code code)\n     case LT:\t/* N */\n     case GE:\t/* ~N */\n       return CC_FLAG_N;\n-      break;\n \n     case GT:    /* ~(Z|(N^V)) */\n     case LE:    /* Z|(N^V) */"}, {"sha": "b39eff4b6a80d2aa65ac855b0fc12c257237184c", "filename": "gcc/config/tilepro/tilepro.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fconfig%2Ftilepro%2Ftilepro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fconfig%2Ftilepro%2Ftilepro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilepro%2Ftilepro.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -2137,13 +2137,11 @@ tilepro_emit_setcc_internal_di (rtx res, enum rtx_code code, rtx op0, rtx op1)\n       emit_insn (gen_insn_seq (tmp1, hi_half[0], hi_half[1]));\n       emit_insn (gen_andsi3 (res, tmp0, tmp1));\n       return true;\n-      break;\n     case NE:\n       emit_insn (gen_insn_sne (tmp0, lo_half[0], lo_half[1]));\n       emit_insn (gen_insn_sne (tmp1, hi_half[0], hi_half[1]));\n       emit_insn (gen_iorsi3 (res, tmp0, tmp1));\n       return true;\n-      break;\n     case LE:\n       emit_insn (gen_insn_slte (tmp0, hi_half[0], hi_half[1]));\n       emit_insn (gen_insn_seq (tmp1, hi_half[0], hi_half[1]));"}, {"sha": "24e15bca2112395d9608048e092f5b005ddad3d7", "filename": "gcc/cselib.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fcselib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fcselib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -805,7 +805,6 @@ autoinc_split (rtx x, rtx *off, machine_mode memmode)\n \n       *off = GEN_INT (-GET_MODE_SIZE (memmode));\n       return XEXP (x, 0);\n-      break;\n \n     case PRE_INC:\n       if (memmode == VOIDmode)"}, {"sha": "8dcef8bb3507bc97ebd0a1b5fb145f97f8ae1817", "filename": "gcc/explow.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -802,15 +802,13 @@ promote_mode (const_tree type ATTRIBUTE_UNUSED, machine_mode mode,\n       PROMOTE_MODE (mode, unsignedp, type);\n       *punsignedp = unsignedp;\n       return mode;\n-      break;\n \n #ifdef POINTERS_EXTEND_UNSIGNED\n     case REFERENCE_TYPE:\n     case POINTER_TYPE:\n       *punsignedp = POINTERS_EXTEND_UNSIGNED;\n       return targetm.addr_space.address_mode\n \t       (TYPE_ADDR_SPACE (TREE_TYPE (type)));\n-      break;\n #endif\n \n     default:"}, {"sha": "ddb8ee112d55b40683f57155b505ff80438e1682", "filename": "gcc/fixed-value.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Ffixed-value.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Ffixed-value.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixed-value.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -730,35 +730,28 @@ fixed_arithmetic (FIXED_VALUE_TYPE *f, int icode, const FIXED_VALUE_TYPE *op0,\n     {\n     case NEGATE_EXPR:\n       return do_fixed_neg (f, op0, sat_p);\n-      break;\n \n     case PLUS_EXPR:\n       gcc_assert (op0->mode == op1->mode);\n       return do_fixed_add (f, op0, op1, false, sat_p);\n-      break;\n \n     case MINUS_EXPR:\n       gcc_assert (op0->mode == op1->mode);\n       return do_fixed_add (f, op0, op1, true, sat_p);\n-      break;\n \n     case MULT_EXPR:\n       gcc_assert (op0->mode == op1->mode);\n       return do_fixed_multiply (f, op0, op1, sat_p);\n-      break;\n \n     case TRUNC_DIV_EXPR:\n       gcc_assert (op0->mode == op1->mode);\n       return do_fixed_divide (f, op0, op1, sat_p);\n-      break;\n \n     case LSHIFT_EXPR:\n       return do_fixed_shift (f, op0, op1, true, sat_p);\n-      break;\n \n     case RSHIFT_EXPR:\n       return do_fixed_shift (f, op0, op1, false, sat_p);\n-      break;\n \n     default:\n       gcc_unreachable ();"}, {"sha": "a2b9a96ecedfec5690b1ebaf762ecfabd8c10431", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -1,5 +1,11 @@\n 2016-09-27  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* dependency.c (gfc_dep_compare_expr): Remove break after return.\n+\t* frontend-passes.c (optimize_op): Likewise.\n+\t* interface.c (gfc_current_interface_head): Likewise.\n+\t* symbol.c (check_conflict): Likewise.\n+\t* trans-intrinsic.c (build_fix_expr): Likewise.\n+\n \tPR fortran/77666\n \t* trans-openmp.c (gfc_omp_private_outer_ref): Return true even for\n \treferences to allocatable arrays."}, {"sha": "8e78e43083219402c6719db8256a7a78b7e16e7e", "filename": "gcc/fortran/dependency.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Ffortran%2Fdependency.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Ffortran%2Fdependency.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdependency.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -486,7 +486,6 @@ gfc_dep_compare_expr (gfc_expr *e1, gfc_expr *e2)\n \n     case EXPR_FUNCTION:\n       return gfc_dep_compare_functions (e1, e2, false);\n-      break;\n \n     default:\n       return -2;"}, {"sha": "54b85544459e72708987cecf17139f0ea315ff4a", "filename": "gcc/fortran/frontend-passes.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Ffortran%2Ffrontend-passes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Ffortran%2Ffrontend-passes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ffrontend-passes.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -1491,7 +1491,6 @@ optimize_op (gfc_expr *e)\n \n     case INTRINSIC_POWER:\n       return optimize_power (e);\n-      break;\n \n     default:\n       break;"}, {"sha": "5883e390d31024ef991e30e1d9f6b5a7446652ed", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -4306,16 +4306,13 @@ gfc_current_interface_head (void)\n     {\n       case INTERFACE_INTRINSIC_OP:\n \treturn current_interface.ns->op[current_interface.op];\n-\tbreak;\n \n       case INTERFACE_GENERIC:\n       case INTERFACE_DTIO:\n \treturn current_interface.sym->generic;\n-\tbreak;\n \n       case INTERFACE_USER_OP:\n \treturn current_interface.uop->op;\n-\tbreak;\n \n       default:\n \tgcc_unreachable ();"}, {"sha": "cbe4347351f43b7b10ec05fa21f18b9eaa7f9efb", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -464,7 +464,6 @@ check_conflict (symbol_attribute *attr, const char *name, locus *where)\n \t    gfc_error (\"Namelist group name at %L cannot have the \"\n \t\t       \"SAVE attribute\", where);\n \t    return false; \n-\t    break;\n \t  case FL_PROCEDURE:\n \t    /* Conflicts between SAVE and PROCEDURE will be checked at\n \t       resolution stage, see \"resolve_fl_procedure\".  */"}, {"sha": "954f7b3afd405ed609798ff0b0eb9b36c5a1242b", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -410,19 +410,15 @@ build_fix_expr (stmtblock_t * pblock, tree arg, tree type,\n     {\n     case RND_FLOOR:\n       return build_fixbound_expr (pblock, arg, type, 0);\n-      break;\n \n     case RND_CEIL:\n       return build_fixbound_expr (pblock, arg, type, 1);\n-      break;\n \n     case RND_ROUND:\n       return build_round_expr (arg, type);\n-      break;\n \n     case RND_TRUNC:\n       return fold_build1_loc (input_location, FIX_TRUNC_EXPR, type, arg);\n-      break;\n \n     default:\n       gcc_unreachable ();"}, {"sha": "c9c4957e425065e7e0e1050704fc42d67a12d638", "filename": "gcc/hsa.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fhsa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fhsa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -947,7 +947,6 @@ hsa_internal_fn::get_arity ()\n     case IFN_SCALB:\n     case IFN_LDEXP:\n       return 2;\n-      break;\n     case IFN_CLRSB:\n     case IFN_CLZ:\n     case IFN_CTZ:"}, {"sha": "74dda97e39c96f711e6cfb624dc87059ab17c4e4", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -1,3 +1,8 @@\n+2016-09-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* objc-act.c (continue_class): Remove break after return.\n+\t(objc_maybe_printable_name): Likewise.\n+\n 2016-08-12  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/7652"}, {"sha": "374f1041aea2cf3c84644b7cb106b04edbd84527", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -7054,7 +7054,6 @@ continue_class (tree klass)\n #endif /* OBJCPLUS */\n \n \treturn get_class_ivars (implementation_template, true);\n-\tbreak;\n       }\n     case CLASS_INTERFACE_TYPE:\n       {\n@@ -7070,7 +7069,6 @@ continue_class (tree klass)\n \tpop_lang_context ();\n #endif /* OBJCPLUS */\n \treturn NULL_TREE;\n-\tbreak;\n       }\n     default:\n       return error_mark_node;\n@@ -9279,7 +9277,6 @@ objc_maybe_printable_name (tree decl, int v ATTRIBUTE_UNUSED)\n     {\n     case FUNCTION_DECL:\n       return objc_demangle (IDENTIFIER_POINTER (DECL_NAME (decl)));\n-      break;\n \n       /* The following happens when we are printing a deprecation\n \t warning for a method.  The warn_deprecation() will end up\n@@ -9294,17 +9291,14 @@ objc_maybe_printable_name (tree decl, int v ATTRIBUTE_UNUSED)\n     case INSTANCE_METHOD_DECL:\n     case CLASS_METHOD_DECL:\n       return IDENTIFIER_POINTER (DECL_NAME (decl));\n-      break;\n       /* This happens when printing a deprecation warning for a\n \t property.  We may want to consider some sort of pretty\n \t printing (eg, include the class name where it was declared\n \t ?).  */\n     case PROPERTY_DECL:\n       return IDENTIFIER_POINTER (PROPERTY_NAME (decl));\n-      break;\n     default:\n       return NULL;\n-      break;\n     }\n }\n "}, {"sha": "2a0a1d2d99ddfc2db0655b36935cb7fcbbb342d8", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -1244,7 +1244,6 @@ modified_between_p (const_rtx x, const rtx_insn *start, const rtx_insn *end)\n \tif (memory_modified_in_insn_p (x, insn))\n \t  return 1;\n       return 0;\n-      break;\n \n     case REG:\n       return reg_set_between_p (x, start, end);\n@@ -1299,7 +1298,6 @@ modified_in_p (const_rtx x, const_rtx insn)\n       if (memory_modified_in_insn_p (x, insn))\n \treturn 1;\n       return 0;\n-      break;\n \n     case REG:\n       return reg_set_p (x, insn);"}, {"sha": "6fc67fb1a22ca9d3efbb7972ce9602dae0f919ca", "filename": "gcc/trans-mem.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Ftrans-mem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Ftrans-mem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftrans-mem.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -165,7 +165,6 @@ get_attrs_for (const_tree x)\n     {\n     case FUNCTION_DECL:\n       return TYPE_ATTRIBUTES (TREE_TYPE (x));\n-      break;\n \n     default:\n       if (TYPE_P (x))"}, {"sha": "eec431e6a4fbdd791d9dd7b0d07584ca4ac6ca1a", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -1050,7 +1050,6 @@ if_convertible_stmt_p (gimple *stmt, vec<data_reference_p> refs)\n \t  print_gimple_stmt (dump_file, stmt, 0, TDF_SLIM);\n \t}\n       return false;\n-      break;\n     }\n \n   return true;"}, {"sha": "e07e93be30ef842aeaf8050d59ce4beeb92fc50d", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbfac6da602bfe02c347edcb1639aa62ce63c2d4/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=bbfac6da602bfe02c347edcb1639aa62ce63c2d4", "patch": "@@ -10215,7 +10215,6 @@ simplify_stmt_using_ranges (gimple_stmt_iterator *gsi)\n \tcase MIN_EXPR:\n \tcase MAX_EXPR:\n \t  return simplify_min_or_max_using_ranges (stmt);\n-\t  break;\n \n \tdefault:\n \t  break;"}]}