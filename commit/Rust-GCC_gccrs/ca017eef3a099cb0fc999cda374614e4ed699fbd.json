{"sha": "ca017eef3a099cb0fc999cda374614e4ed699fbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EwMTdlZWYzYTA5OWNiMGZjOTk5Y2RhMzc0NjE0ZTRlZDY5OWZiZA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2002-09-26T05:25:14Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-09-26T05:25:14Z"}, "message": "Makefile.am (target_headers): Remove cpu_limits.h.\n\n\n2002-09-25  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/Makefile.am (target_headers): Remove cpu_limits.h.\n\t* include/Makefile.in: Regenerate.\n\t* configure.in (CPU_LIMITS_INC_SRCDIR): Remove\n\t* configure: Regenerate.\n\t* configure.target (CPULIMITS): Remove.\n\n\t* include/std/std_limits.h: Remove cpu_limits.h include.\n\n\t* config/os/solaris/solaris2.7/os_defines.h (__glibcpp_long_bits):\n\tRemove.\n\t* config/os/irix/irix6.5/os_defines.h\n\t(__glibcpp_long_double_bits): Remove.\n\t(__glibcpp_wchar_t_bits): Remove.\n\t(__glibcpp_long_bits): Remove.\n\t* config/os/irix/irix5.2/os_defines.h\n\t(__glibcpp_long_double_bits): Remove.\n\t(__glibcpp_long_bits): Remove.\n\t* config/os/hpux/os_defines.h (__glibcpp_wchar_t_is_signed): Remove.\n\t* config/os/bsd/freebsd/os_defines.h:\n\t(__glibcpp_long_double_bits): Remove.\n\t* config/os/aix/os_defines.h (__glibcpp_wchar_t_bits): Remove.\n\t(__glibcpp_wchar_t_is_signed): Remove.\n\t(__glibcpp_long_bits): Remove.\n\t* config/os/gnu-linux/os_defines.h (__glibcpp_long_bits): Remove.\n\t(__glibcpp_long_double_bits): Remove.\n\n\t* config/os/osf/osf5.0/cpu_limits.h: Remove.\n\t* config/cpu/alpha/cpu_limits.h: Remove.\n\t* config/cpu/arm/cpu_limits.h: Remove.\n\t* config/cpu/cris/cpu_limits.h: Remove.\n\t* config/cpu/generic/cpu_limits.h: Remove.\n\t* config/cpu/generic/limits.h: Remove.\n\t* config/cpu/ia64/cpu_limits.h: Remove.\n\t* config/cpu/m68k/cpu_limits.h: Remove.\n\t* config/cpu/mmix/cpu_limits.h: Remove.\n\t* config/cpu/powerpc/cpu_limits.h: Remove.\n\t* config/cpu/S390/cpu_limits.h: Remove.\n\nFrom-SVN: r57524", "tree": {"sha": "697a9e175e63381a0f521525b487a4733591cbfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/697a9e175e63381a0f521525b487a4733591cbfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca017eef3a099cb0fc999cda374614e4ed699fbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca017eef3a099cb0fc999cda374614e4ed699fbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca017eef3a099cb0fc999cda374614e4ed699fbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca017eef3a099cb0fc999cda374614e4ed699fbd/comments", "author": null, "committer": null, "parents": [{"sha": "9ced0328fbe9b57808219107cd9b11eb5b1696ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ced0328fbe9b57808219107cd9b11eb5b1696ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ced0328fbe9b57808219107cd9b11eb5b1696ec"}], "stats": {"total": 609, "additions": 57, "deletions": 552}, "files": [{"sha": "da241623541c6fbf6bd8a02a2452114531f59faf", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ca017eef3a099cb0fc999cda374614e4ed699fbd", "patch": "@@ -1,3 +1,43 @@\n+2002-09-25  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/Makefile.am (target_headers): Remove cpu_limits.h.\n+\t* include/Makefile.in: Regenerate.\n+\t* configure.in (CPU_LIMITS_INC_SRCDIR): Remove\n+\t* configure: Regenerate.\n+\t* configure.target (CPULIMITS): Remove.\n+\n+\t* include/std/std_limits.h: Remove cpu_limits.h include.\n+\n+\t* config/os/solaris/solaris2.7/os_defines.h (__glibcpp_long_bits):\n+\tRemove.\n+\t* config/os/irix/irix6.5/os_defines.h\n+\t(__glibcpp_long_double_bits): Remove.\n+\t(__glibcpp_wchar_t_bits): Remove.\n+\t(__glibcpp_long_bits): Remove.\n+\t* config/os/irix/irix5.2/os_defines.h\n+\t(__glibcpp_long_double_bits): Remove.\n+\t(__glibcpp_long_bits): Remove.\n+\t* config/os/hpux/os_defines.h (__glibcpp_wchar_t_is_signed): Remove.\n+\t* config/os/bsd/freebsd/os_defines.h: \n+\t(__glibcpp_long_double_bits): Remove.\n+\t* config/os/aix/os_defines.h (__glibcpp_wchar_t_bits): Remove.\n+\t(__glibcpp_wchar_t_is_signed): Remove.\n+\t(__glibcpp_long_bits): Remove.\n+\t* config/os/gnu-linux/os_defines.h (__glibcpp_long_bits): Remove.\n+\t(__glibcpp_long_double_bits): Remove.\n+\n+\t* config/os/osf/osf5.0/cpu_limits.h: Remove.\n+\t* config/cpu/alpha/cpu_limits.h: Remove.\n+\t* config/cpu/arm/cpu_limits.h: Remove.\n+\t* config/cpu/cris/cpu_limits.h: Remove.\n+\t* config/cpu/generic/cpu_limits.h: Remove.\n+\t* config/cpu/generic/limits.h: Remove.\t\t\n+\t* config/cpu/ia64/cpu_limits.h: Remove.\n+\t* config/cpu/m68k/cpu_limits.h: Remove.\t\n+\t* config/cpu/mmix/cpu_limits.h: Remove.\t\t\n+\t* config/cpu/powerpc/cpu_limits.h: Remove.\t\t\t\n+\t* config/cpu/S390/cpu_limits.h: Remove.\n+\t\n 2002-09-25  Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n \n \t* testsuite/18_support/numeric_limits.cc: Check the maximum and"}, {"sha": "6d83bd1c6f0dd8785cb368aebdc56d396434dd71", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=ca017eef3a099cb0fc999cda374614e4ed699fbd", "patch": "@@ -74,7 +74,6 @@ CCODECVT_H = @CCODECVT_H@\n CLOCALE_H = @CLOCALE_H@\n CMESSAGES_H = @CMESSAGES_H@\n CPP = @CPP@\n-CPU_LIMITS_INC_SRCDIR = @CPU_LIMITS_INC_SRCDIR@\n CSTDIO_H = @CSTDIO_H@\n CXX = @CXX@\n CXXCPP = @CXXCPP@"}, {"sha": "21d31e3631a66a95ac93fd7739c541113f283a76", "filename": "libstdc++-v3/config/cpu/alpha/cpu_limits.h", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Falpha%2Fcpu_limits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Falpha%2Fcpu_limits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Falpha%2Fcpu_limits.h?ref=9ced0328fbe9b57808219107cd9b11eb5b1696ec", "patch": "@@ -1,38 +0,0 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#ifndef _GLIBCPP_CPU_LIMITS\n-#define _GLIBCPP_CPU_LIMITS 1\n-\n-#define __glibcpp_long_bits 64\n-\n-#define __glibcpp_long_double_bits 64\n-\n-#endif\n-\n-\n-"}, {"sha": "d5d9fe72610df4d6faa3289ff694619471b29cee", "filename": "libstdc++-v3/config/cpu/arm/cpu_limits.h", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Farm%2Fcpu_limits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Farm%2Fcpu_limits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Farm%2Fcpu_limits.h?ref=9ced0328fbe9b57808219107cd9b11eb5b1696ec", "patch": "@@ -1,33 +0,0 @@\n-// Copyright (C) 2002 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#ifndef _GLIBCPP_CPU_LIMITS\n-#define _GLIBCPP_CPU_LIMITS 1\n-\n-#define __glibcpp_long_double_bits 64\n-\n-#endif"}, {"sha": "f0ff04dedaa106817981d0c18b3c4432ce790142", "filename": "libstdc++-v3/config/cpu/cris/cpu_limits.h", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fcris%2Fcpu_limits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fcris%2Fcpu_limits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fcris%2Fcpu_limits.h?ref=9ced0328fbe9b57808219107cd9b11eb5b1696ec", "patch": "@@ -1,33 +0,0 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#ifndef _GLIBCPP_CPU_LIMITS\n-#define _GLIBCPP_CPU_LIMITS 1\n-\n-#define __glibcpp_long_double_bits 64\n-\n-#endif"}, {"sha": "0438f7c6e9f8dd1b66c400cb89a639a135a07d9d", "filename": "libstdc++-v3/config/cpu/generic/cpu_limits.h", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fcpu_limits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fcpu_limits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Fcpu_limits.h?ref=9ced0328fbe9b57808219107cd9b11eb5b1696ec", "patch": "@@ -1,41 +0,0 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#ifndef _GLIBCPP_CPU_LIMITS\n-#define _GLIBCPP_CPU_LIMITS 1\n-\n-// Nothing is defined in the generic file.  In that way, we fall back\n-// on the defaults in std_limits.h.\n-\n-// If you need to override these defaults, you can either use a\n-// CPU-specific version (in which case you must modify\n-// configure.target) or you must add the overrides to your\n-// os_defines.h.  In general, if all systems for your CPU use the\n-// same values, it is best to use a cpu-specific configuration file.\n-\n-#endif\n-"}, {"sha": "8fa5a82145f6e0331bb06d7f97c796ae63299d76", "filename": "libstdc++-v3/config/cpu/generic/limits.h", "status": "removed", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Flimits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Flimits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fgeneric%2Flimits.h?ref=9ced0328fbe9b57808219107cd9b11eb5b1696ec", "patch": "@@ -1,40 +0,0 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#ifndef _GLIBCPP_CPU_LIMITS\n-#define _GLIBCPP_CPU_LIMITS 1\n-\n-// Nothing is defined in the generic file.  In that way, we fall back\n-// on the defaults in std_limits.h.\n-\n-// If you need to override these defaults, you can either use a\n-// CPU-specific version (in which case you must modify\n-// configure.target) or you must add the overrides to your\n-// os_defines.h.  In general, if all systems for your CPU use the\n-// same values, it is best to use a cpu-specific configuration file.\n-\n-#endif"}, {"sha": "be304e2d8055a3b5a7bdf5129ac0abc703ec6fe4", "filename": "libstdc++-v3/config/cpu/i386/cpu_limits.h", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fi386%2Fcpu_limits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fi386%2Fcpu_limits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fi386%2Fcpu_limits.h?ref=9ced0328fbe9b57808219107cd9b11eb5b1696ec", "patch": "@@ -1,33 +0,0 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#ifndef _GLIBCPP_CPU_LIMITS\n-#define _GLIBCPP_CPU_LIMITS 1\n-\n-#define __glibcpp_long_double_bits 80\n-\n-#endif"}, {"sha": "735f7d5bb217f10891c52dd39f9082b59aae6276", "filename": "libstdc++-v3/config/cpu/ia64/cpu_limits.h", "status": "removed", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fia64%2Fcpu_limits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fia64%2Fcpu_limits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fia64%2Fcpu_limits.h?ref=9ced0328fbe9b57808219107cd9b11eb5b1696ec", "patch": "@@ -1,36 +0,0 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#ifndef _GLIBCPP_CPU_LIMITS\n-#define _GLIBCPP_CPU_LIMITS 1\n-\n-#define __glibcpp_long_bits 64\n-\n-// While sizeof(long double) == 16, the format is the same as the x86.\n-#define __glibcpp_long_double_bits 80\n-\n-#endif"}, {"sha": "07e4e03a12b44af68ddebc8429c3bdab2ad7b5e5", "filename": "libstdc++-v3/config/cpu/m68k/cpu_limits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fm68k%2Fcpu_limits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fm68k%2Fcpu_limits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fm68k%2Fcpu_limits.h?ref=9ced0328fbe9b57808219107cd9b11eb5b1696ec", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#ifndef _GLIBCPP_CPU_LIMITS\n-#define _GLIBCPP_CPU_LIMITS 1\n-\n-#define __glibcpp_long_double_bits 96\n-\n-#endif\n-\n-"}, {"sha": "e40ce97413ae60b8c95ec5101ae6cc23860bd429", "filename": "libstdc++-v3/config/cpu/mmix/cpu_limits.h", "status": "removed", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fmmix%2Fcpu_limits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fmmix%2Fcpu_limits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fmmix%2Fcpu_limits.h?ref=9ced0328fbe9b57808219107cd9b11eb5b1696ec", "patch": "@@ -1,34 +0,0 @@\n-// Copyright (C) 2002 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#ifndef _GLIBCPP_CPU_LIMITS\n-#define _GLIBCPP_CPU_LIMITS 1\n-\n-#define __glibcpp_long_bits 64\n-#define __glibcpp_long_double_bits 64\n-\n-#endif"}, {"sha": "42cffa91441d7ccf0cece06053002dc28657e42a", "filename": "libstdc++-v3/config/cpu/powerpc/cpu_limits.h", "status": "removed", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fcpu_limits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fcpu_limits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fcpu_limits.h?ref=9ced0328fbe9b57808219107cd9b11eb5b1696ec", "patch": "@@ -1,42 +0,0 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#ifndef _GLIBCPP_CPU_LIMITS\n-#define _GLIBCPP_CPU_LIMITS 1\n-\n-#ifdef __powerpc64__\n-#define __glibcpp_long_bits 64\n-#endif\n-\n-#ifndef __LONG_DOUBLE_128__\n-#define __glibcpp_long_double_bits 64\n-#endif\n-\n-#endif\n-\n-\n-"}, {"sha": "f0ff04dedaa106817981d0c18b3c4432ce790142", "filename": "libstdc++-v3/config/cpu/s390/cpu_limits.h", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fs390%2Fcpu_limits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fs390%2Fcpu_limits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fs390%2Fcpu_limits.h?ref=9ced0328fbe9b57808219107cd9b11eb5b1696ec", "patch": "@@ -1,33 +0,0 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#ifndef _GLIBCPP_CPU_LIMITS\n-#define _GLIBCPP_CPU_LIMITS 1\n-\n-#define __glibcpp_long_double_bits 64\n-\n-#endif"}, {"sha": "7de187e2080e7f77e8df6fb9acfa5283088aafa3", "filename": "libstdc++-v3/config/cpu/x86-64/cpu_limits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fx86-64%2Fcpu_limits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fx86-64%2Fcpu_limits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fx86-64%2Fcpu_limits.h?ref=9ced0328fbe9b57808219107cd9b11eb5b1696ec", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#ifndef _GLIBCPP_CPU_LIMITS\n-#define _GLIBCPP_CPU_LIMITS 1\n-\n-#define __glibcpp_long_bits 64\n-\n-#define __glibcpp_long_double_bits 80\n-\n-#endif"}, {"sha": "6e4dbda3256bdfaae9fa1898ac9265e8a8b9c546", "filename": "libstdc++-v3/config/os/aix/os_defines.h", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fos_defines.h?ref=ca017eef3a099cb0fc999cda374614e4ed699fbd", "patch": "@@ -1,6 +1,6 @@\n // Specific definitions for AIX  -*- C++ -*-\n \n-// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -55,13 +55,4 @@\n #undef _G_USING_THUNKS\n #define _G_USING_THUNKS 0\n \n-#if !defined(_AIX51) || !defined(__64BIT__)\n-#define __glibcpp_wchar_t_bits 16\n-#define __glibcpp_wchar_t_is_signed false\n-#endif\n-\n-#ifdef __64BIT__\n-#define __glibcpp_long_bits 64\n-#endif\n-\n #endif"}, {"sha": "b898c1ce252d37da3b284b2a0352fbd270e43e38", "filename": "libstdc++-v3/config/os/bsd/freebsd/os_defines.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fos_defines.h?ref=ca017eef3a099cb0fc999cda374614e4ed699fbd", "patch": "@@ -1,6 +1,6 @@\n // Specific definitions for BSD  -*- C++ -*-\n \n-// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -34,6 +34,4 @@\n // System-specific #define, typedefs, corrections, etc, go here.  This\n // file will come before all others.\n \n-#define __glibcpp_long_double_bits __glibcpp_double_bits\n-\n #endif"}, {"sha": "21ea29693a68db5d31e1929a5ee31d3cf07275a1", "filename": "libstdc++-v3/config/os/gnu-linux/os_defines.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fgnu-linux%2Fos_defines.h?ref=ca017eef3a099cb0fc999cda374614e4ed699fbd", "patch": "@@ -1,6 +1,6 @@\n // Specific definitions for GNU/Linux  -*- C++ -*-\n \n-// Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -65,12 +65,4 @@ typedef __loff_t __off64_t;\n #define __NO_STRING_INLINES\n #endif\n \n-#if (defined(__hppa__) && defined(__LP64__)) || defined(__powerpc64__) || defined(__s390x__) || (defined(__sparc__) && defined(__arch64__))\n-#define __glibcpp_long_bits 64\n-#endif\n-\n-#if defined(__hppa__) || (defined(__sparc__) && !defined(__arch64__))\n-#define __glibcpp_long_double_bits 64\n-#endif\n-\n #endif"}, {"sha": "5deef5f9edb40b7291e4177a7b32bb05ced587c3", "filename": "libstdc++-v3/config/os/hpux/os_defines.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fhpux%2Fos_defines.h?ref=ca017eef3a099cb0fc999cda374614e4ed699fbd", "patch": "@@ -37,8 +37,6 @@\n #define __off64_t off64_t\n #define __ssize_t ssize_t\n \n-#define __glibcpp_wchar_t_is_signed false\n-\n // Use macro form of ctype functions to ensure __SB_masks is defined.\n #define _SB_CTYPE_MACROS 1\n "}, {"sha": "1d7f96848ee06778391d2cbbed3e09d31e08ec4a", "filename": "libstdc++-v3/config/os/irix/irix5.2/os_defines.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix5.2%2Fos_defines.h?ref=ca017eef3a099cb0fc999cda374614e4ed699fbd", "patch": "@@ -51,11 +51,5 @@\n // GCC does not use thunks on IRIX. \n #define _G_USING_THUNKS 0\n \n-#define __glibcpp_long_double_bits 64\n-\n-#if __LONG_MAX__ > 2147483647\n-#define __glibcpp_long_bits 64\n-#endif\n-\n #endif\n "}, {"sha": "838b747e2abd813d2cc3a34a2ff6b3f700cc46be", "filename": "libstdc++-v3/config/os/irix/irix6.5/os_defines.h", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Firix%2Firix6.5%2Fos_defines.h?ref=ca017eef3a099cb0fc999cda374614e4ed699fbd", "patch": "@@ -1,6 +1,6 @@\n // Specific definitions for IRIX  -*- C++ -*-\n \n-// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -51,12 +51,5 @@\n // GCC does not use thunks on IRIX. \n #define _G_USING_THUNKS 0\n \n-#define __glibcpp_long_double_bits 64\n-\n-#if __LONG_MAX__ > 2147483647\n-#define __glibcpp_wchar_t_bits 64\n-#define __glibcpp_long_bits 64\n-#endif\n-\n #endif\n "}, {"sha": "d74b15c9a9a4d5a8bbf450eb5c57a382b5b5fcbc", "filename": "libstdc++-v3/config/os/osf/osf5.0/cpu_limits.h", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fosf%2Fosf5.0%2Fcpu_limits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ced0328fbe9b57808219107cd9b11eb5b1696ec/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fosf%2Fosf5.0%2Fcpu_limits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fosf%2Fosf5.0%2Fcpu_limits.h?ref=9ced0328fbe9b57808219107cd9b11eb5b1696ec", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2001 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#ifndef _GLIBCPP_CPU_LIMITS\n-#define _GLIBCPP_CPU_LIMITS 1\n-\n-#define __glibcpp_long_bits 64\n-\n-#define __glibcpp_long_double_bits 128\n-\n-#endif"}, {"sha": "cf53fa46908111b5478e50e915280d6e0b3af858", "filename": "libstdc++-v3/config/os/solaris/solaris2.7/os_defines.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.7%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.7%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fsolaris%2Fsolaris2.7%2Fos_defines.h?ref=ca017eef3a099cb0fc999cda374614e4ed699fbd", "patch": "@@ -39,9 +39,5 @@\n #define __off64_t   off64_t\n #define __ssize_t   ssize_t\n \n-#if defined(__sparcv9) || defined(__arch64__)\n-#define __glibcpp_long_bits 64\n-#endif\n-\n #endif\n "}, {"sha": "fd0c325cd0132d5b104193dd09c8ad2ed06c3eeb", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=ca017eef3a099cb0fc999cda374614e4ed699fbd", "patch": "@@ -22233,12 +22233,10 @@ echo \"$ac_t\"\"$enable_symvers\" 1>&6\n \n \n # Propagate the target-specific source directories through the build chain.\n-# (Nothing currently uses cpu_include_dir directly; only ATOMICITYH and\n-# CPULIMITSH [might] use it, and they only get used here.)\n+# (Nothing currently uses cpu_include_dir directly; only ATOMICITYH \n+# uses it, and they only get used here.)\n OS_INC_SRCDIR=config/${os_include_dir}\n ATOMICITY_INC_SRCDIR=config/${ATOMICITYH}\n-CPU_LIMITS_INC_SRCDIR=config/${CPULIMITSH}\n-\n \n \n \n@@ -22317,7 +22315,7 @@ glibcpp_prefixdir=${prefix}\n \n # Process the option --with-gxx-include-dir=<path to include-files directory>\n echo $ac_n \"checking for --with-gxx-include-dir\"\"... $ac_c\" 1>&6\n-echo \"configure:22321: checking for --with-gxx-include-dir\" >&5\n+echo \"configure:22319: checking for --with-gxx-include-dir\" >&5\n # Check whether --with-gxx-include-dir or --without-gxx-include-dir was given.\n if test \"${with_gxx_include_dir+set}\" = set; then\n   withval=\"$with_gxx_include_dir\"\n@@ -22341,7 +22339,7 @@ echo \"$ac_t\"\"$gxx_include_dir\" 1>&6\n \n # Process the option \"--enable-version-specific-runtime-libs\"\n echo $ac_n \"checking for --enable-version-specific-runtime-libs\"\"... $ac_c\" 1>&6\n-echo \"configure:22345: checking for --enable-version-specific-runtime-libs\" >&5\n+echo \"configure:22343: checking for --enable-version-specific-runtime-libs\" >&5\n # Check whether --enable-version-specific-runtime-libs or --disable-version-specific-runtime-libs was given.\n if test \"${enable_version_specific_runtime_libs+set}\" = set; then\n   enableval=\"$enable_version_specific_runtime_libs\"\n@@ -22387,7 +22385,7 @@ if test x\"$glibcpp_toolexecdir\" = x\"no\"; then\n fi\n \n echo $ac_n \"checking for install location\"\"... $ac_c\" 1>&6\n-echo \"configure:22391: checking for install location\" >&5\n+echo \"configure:22389: checking for install location\" >&5\n echo \"$ac_t\"\"$gxx_include_dir\" 1>&6\n \n \n@@ -22673,7 +22671,6 @@ s%@GLIBCPP_BUILD_VERSIONED_SHLIB_TRUE@%$GLIBCPP_BUILD_VERSIONED_SHLIB_TRUE%g\n s%@GLIBCPP_BUILD_VERSIONED_SHLIB_FALSE@%$GLIBCPP_BUILD_VERSIONED_SHLIB_FALSE%g\n s%@OS_INC_SRCDIR@%$OS_INC_SRCDIR%g\n s%@ATOMICITY_INC_SRCDIR@%$ATOMICITY_INC_SRCDIR%g\n-s%@CPU_LIMITS_INC_SRCDIR@%$CPU_LIMITS_INC_SRCDIR%g\n s%@GLIBCPP_IS_CROSS_COMPILING@%$GLIBCPP_IS_CROSS_COMPILING%g\n s%@CANADIAN_TRUE@%$CANADIAN_TRUE%g\n s%@CANADIAN_FALSE@%$CANADIAN_FALSE%g"}, {"sha": "f73a4c12a823bb1db1c8885a4067d3ff31fd79c5", "filename": "libstdc++-v3/configure.in", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.in?ref=ca017eef3a099cb0fc999cda374614e4ed699fbd", "patch": "@@ -354,14 +354,12 @@ fi\n GLIBCPP_ENABLE_SYMVERS([yes])\n \n # Propagate the target-specific source directories through the build chain.\n-# (Nothing currently uses cpu_include_dir directly; only ATOMICITYH and\n-# CPULIMITSH [might] use it, and they only get used here.)\n+# (Nothing currently uses cpu_include_dir directly; only ATOMICITYH \n+# uses it, and they only get used here.)\n OS_INC_SRCDIR=config/${os_include_dir}\n ATOMICITY_INC_SRCDIR=config/${ATOMICITYH}\n-CPU_LIMITS_INC_SRCDIR=config/${CPULIMITSH}\n AC_SUBST(OS_INC_SRCDIR)\n AC_SUBST(ATOMICITY_INC_SRCDIR)\n-AC_SUBST(CPU_LIMITS_INC_SRCDIR)\n \n # Set up cross-compile flags\n AC_SUBST(GLIBCPP_IS_CROSS_COMPILING)  dnl Unused so far."}, {"sha": "95b533cab498ad3c04a976c2550bf8b686b48b45", "filename": "libstdc++-v3/configure.target", "status": "modified", "additions": 4, "deletions": 17, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fconfigure.target", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fconfigure.target", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.target?ref=ca017eef3a099cb0fc999cda374614e4ed699fbd", "patch": "@@ -19,10 +19,6 @@\n #   cpu_include_dir        CPU-specific directory, defaults to cpu/generic\n #                              if cpu/target_cpu doesn't exist.  This is\n #                              used to set the next two:\n-#   ATOMICITYH             location of atomicity.h,\n-#                              defaults to cpu_include_dir\n-#   CPULIMITSH             location of cpu_limits.h,\n-#                              defaults to cpu_include_dir\n #\n #   os_include_dir         OS-specific directory, defaults to os/generic.\n #\n@@ -34,6 +30,9 @@\n #   abi_baseline_triplet   directory name for ABI compat testing,\n #                              defaults to target (as per config.guess)\n #\n+#   ATOMICITYH             location of atomicity.h,\n+#                              defaults to cpu_include_dir\n+#\n # It possibly modifies the following variables:\n #\n #   OPT_LDFLAGS            extra flags to pass when linking the library, of\n@@ -78,7 +77,6 @@ case \"${target_cpu}\" in\n   i486 | i586 | i686 | i786)\n     # add athlons here maybe\n     cpu_include_dir=\"cpu/i486\"\n-    CPULIMITSH=\"cpu/i386\"\n     ;;\n   m68k | m680[246]0)\n     cpu_include_dir=\"cpu/m68k\"\n@@ -106,7 +104,7 @@ case \"${target_cpu}\" in\n esac\n \n \n-# Now look for the two files usually tied to a CPU model, and make default\n+# Now look for the file(s) usually tied to a CPU model, and make default\n # choices for those if they haven't been explicitly set already.\n _cpu_incdir_fullpath=${glibcpp_srcdir}/config/${cpu_include_dir}\n if test x${ATOMICITYH+set} != xset; then\n@@ -116,13 +114,6 @@ if test x${ATOMICITYH+set} != xset; then\n     ATOMICITYH=\"cpu/generic\"\n   fi\n fi\n-if test x${CPULIMITSH+set} != xset; then\n-  if test -f ${_cpu_incdir_fullpath}/cpu_limits.h; then\n-    CPULIMITSH=$cpu_include_dir\n-  else\n-    CPULIMITSH=\"cpu/generic\"\n-  fi\n-fi\n unset _cpu_incdir_fullpath\n \n \n@@ -161,7 +152,6 @@ case \"${target_os}\" in\n     ;;\n   hpux*)\n     os_include_dir=\"os/hpux\"\n-    CPULIMITSH=\"os/hpux\"\n     ;;\n   irix[1-6] | irix[1-5].* | irix6.[0-4]*)\n     # This is known to work on at least IRIX 5.2 and 6.3.\n@@ -203,9 +193,6 @@ esac\n # Set any OS-dependent and CPU-dependent bits.\n # THIS TABLE IS SORTED.  KEEP IT THAT WAY.\n case \"${target}\" in\n-  alpha*-*-*osf5*)\n-    CPULIMITSH=\"os/osf/osf5.0\"\n-    ;;\n   mips*-*-linux*)\n     ATOMICITYH=\"cpu/mips\"\n     ;;"}, {"sha": "da7646aed059daac27d9cd14f12c76ec762baf15", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=ca017eef3a099cb0fc999cda374614e4ed699fbd", "patch": "@@ -311,8 +311,7 @@ target_headers = \\\n \t${target_srcdir}/ctype_inline.h \\\n \t${target_srcdir}/ctype_noninline.h \\\n \t${target_srcdir}/os_defines.h \\\n-\t${glibcpp_srcdir}/@ATOMICITY_INC_SRCDIR@/atomicity.h \\\n-\t${glibcpp_srcdir}/@CPU_LIMITS_INC_SRCDIR@/cpu_limits.h \n+\t${glibcpp_srcdir}/@ATOMICITY_INC_SRCDIR@/atomicity.h \n # These target_headers_extra files are all built with ad hoc naming rules.\n target_headers_extra = \\\n \t${target_builddir}/basic_file.h \\"}, {"sha": "5441e974d4f5194f285d0b6010a53e6577bfcbfe", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=ca017eef3a099cb0fc999cda374614e4ed699fbd", "patch": "@@ -74,7 +74,6 @@ CCODECVT_H = @CCODECVT_H@\n CLOCALE_H = @CLOCALE_H@\n CMESSAGES_H = @CMESSAGES_H@\n CPP = @CPP@\n-CPU_LIMITS_INC_SRCDIR = @CPU_LIMITS_INC_SRCDIR@\n CSTDIO_H = @CSTDIO_H@\n CXXCPP = @CXXCPP@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@\n@@ -414,8 +413,7 @@ target_headers = \\\n \t${target_srcdir}/ctype_inline.h \\\n \t${target_srcdir}/ctype_noninline.h \\\n \t${target_srcdir}/os_defines.h \\\n-\t${glibcpp_srcdir}/@ATOMICITY_INC_SRCDIR@/atomicity.h \\\n-\t${glibcpp_srcdir}/@CPU_LIMITS_INC_SRCDIR@/cpu_limits.h \n+\t${glibcpp_srcdir}/@ATOMICITY_INC_SRCDIR@/atomicity.h \n \n # These target_headers_extra files are all built with ad hoc naming rules.\n target_headers_extra = \\"}, {"sha": "f8df6ba789596fc307596de5712d98935a048e6c", "filename": "libstdc++-v3/include/std/std_limits.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_limits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_limits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_limits.h?ref=ca017eef3a099cb0fc999cda374614e4ed699fbd", "patch": "@@ -45,7 +45,6 @@\n \n #pragma GCC system_header\n \n-#include <bits/cpu_limits.h>\n #include <bits/c++config.h>\n \n //"}, {"sha": "08c71d94d1bda8f6e89dde058234cc11feb29d9b", "filename": "libstdc++-v3/libio/Makefile.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FMakefile.in?ref=ca017eef3a099cb0fc999cda374614e4ed699fbd", "patch": "@@ -74,7 +74,6 @@ CCODECVT_H = @CCODECVT_H@\n CLOCALE_H = @CLOCALE_H@\n CMESSAGES_H = @CMESSAGES_H@\n CPP = @CPP@\n-CPU_LIMITS_INC_SRCDIR = @CPU_LIMITS_INC_SRCDIR@\n CSTDIO_H = @CSTDIO_H@\n CXX = @CXX@\n CXXCPP = @CXXCPP@"}, {"sha": "09f2df1f77d99d048237d9723c3f4a2120247251", "filename": "libstdc++-v3/libmath/Makefile.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in?ref=ca017eef3a099cb0fc999cda374614e4ed699fbd", "patch": "@@ -74,7 +74,6 @@ CCODECVT_H = @CCODECVT_H@\n CLOCALE_H = @CLOCALE_H@\n CMESSAGES_H = @CMESSAGES_H@\n CPP = @CPP@\n-CPU_LIMITS_INC_SRCDIR = @CPU_LIMITS_INC_SRCDIR@\n CSTDIO_H = @CSTDIO_H@\n CXX = @CXX@\n CXXCPP = @CXXCPP@"}, {"sha": "144b50948419e607c41e128200696464ec84efd9", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=ca017eef3a099cb0fc999cda374614e4ed699fbd", "patch": "@@ -73,7 +73,6 @@ CCODECVT_H = @CCODECVT_H@\n CLOCALE_H = @CLOCALE_H@\n CMESSAGES_H = @CMESSAGES_H@\n CPP = @CPP@\n-CPU_LIMITS_INC_SRCDIR = @CPU_LIMITS_INC_SRCDIR@\n CSTDIO_H = @CSTDIO_H@\n CXXCPP = @CXXCPP@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@"}, {"sha": "7ebb03291f33e7e674df949c89ff17b6334a1b6d", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=ca017eef3a099cb0fc999cda374614e4ed699fbd", "patch": "@@ -74,7 +74,6 @@ CCODECVT_H = @CCODECVT_H@\n CLOCALE_H = @CLOCALE_H@\n CMESSAGES_H = @CMESSAGES_H@\n CPP = @CPP@\n-CPU_LIMITS_INC_SRCDIR = @CPU_LIMITS_INC_SRCDIR@\n CSTDIO_H = @CSTDIO_H@\n CXX = @CXX@\n CXXCPP = @CXXCPP@"}, {"sha": "0974449aaa11e18201f58cfc7a64dbb5cec02445", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=ca017eef3a099cb0fc999cda374614e4ed699fbd", "patch": "@@ -73,7 +73,6 @@ CCODECVT_H = @CCODECVT_H@\n CLOCALE_H = @CLOCALE_H@\n CMESSAGES_H = @CMESSAGES_H@\n CPP = @CPP@\n-CPU_LIMITS_INC_SRCDIR = @CPU_LIMITS_INC_SRCDIR@\n CSTDIO_H = @CSTDIO_H@\n CXXCPP = @CXXCPP@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@"}, {"sha": "5f19c9171089e626754911bc85fbcdeb45f423de", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca017eef3a099cb0fc999cda374614e4ed699fbd/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=ca017eef3a099cb0fc999cda374614e4ed699fbd", "patch": "@@ -74,7 +74,6 @@ CCODECVT_H = @CCODECVT_H@\n CLOCALE_H = @CLOCALE_H@\n CMESSAGES_H = @CMESSAGES_H@\n CPP = @CPP@\n-CPU_LIMITS_INC_SRCDIR = @CPU_LIMITS_INC_SRCDIR@\n CSTDIO_H = @CSTDIO_H@\n CXXCPP = @CXXCPP@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@"}]}