{"sha": "6bdfaf09101d7f64d10932aa1d8e48ddc4a8b477", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJkZmFmMDkxMDFkN2Y2NGQxMDkzMmFhMWQ4ZTQ4ZGRjNGE4YjQ3Nw==", "commit": {"author": {"name": "Jeffrey Oldham", "email": "oldham@codesourcery.com", "date": "2001-06-04T15:23:05Z"}, "committer": {"name": "Jeffrey D. Oldham", "email": "oldham@gcc.gnu.org", "date": "2001-06-04T15:23:05Z"}, "message": "g++.exp (g++_include_flags): Change `args' to gccpath's value.\n\n2001-06-04  Jeffrey Oldham  <oldham@codesourcery.com>\n\n\t* lib/g++.exp (g++_include_flags): Change `args' to gccpath's value.\n\t(g++_link_flags): Likewise.\n\t(g++_init): Pass gccpath's value to two previous functions.\n\nFrom-SVN: r42852", "tree": {"sha": "5c9afb0f867883bcb2aaff07acb14c8897333783", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c9afb0f867883bcb2aaff07acb14c8897333783"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bdfaf09101d7f64d10932aa1d8e48ddc4a8b477", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bdfaf09101d7f64d10932aa1d8e48ddc4a8b477", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bdfaf09101d7f64d10932aa1d8e48ddc4a8b477", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bdfaf09101d7f64d10932aa1d8e48ddc4a8b477/comments", "author": null, "committer": null, "parents": [{"sha": "e0e08ac26c828bca4b9323d3139eba9293f3ecf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0e08ac26c828bca4b9323d3139eba9293f3ecf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0e08ac26c828bca4b9323d3139eba9293f3ecf4"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "f219049f8d3483f18f2c72db2b1cc6358e2c2902", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdfaf09101d7f64d10932aa1d8e48ddc4a8b477/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdfaf09101d7f64d10932aa1d8e48ddc4a8b477/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6bdfaf09101d7f64d10932aa1d8e48ddc4a8b477", "patch": "@@ -1,3 +1,9 @@\n+2001-06-04  Jeffrey Oldham  <oldham@codesourcery.com>\n+\n+\t* lib/g++.exp (g++_include_flags): Change `args' to gccpath's value.\n+\t(g++_link_flags): Likewise.\n+\t(g++_init): Pass gccpath's value to two previous functions.\n+\n 2001-06-02  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* gcc.misc-tests/linkage.exp: Use wildcards when matching N32."}, {"sha": "40e8f90d41d81763162817f4b328919023609699", "filename": "gcc/testsuite/lib/g++.exp", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdfaf09101d7f64d10932aa1d8e48ddc4a8b477/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdfaf09101d7f64d10932aa1d8e48ddc4a8b477/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp?ref=6bdfaf09101d7f64d10932aa1d8e48ddc4a8b477", "patch": "@@ -63,7 +63,7 @@ proc g++_version { } {\n # provide new versions of g++_include_flags and g++_link_flags (both\n # originally from libgloss.exp) which know about the new gcc tree structure\n #\n-proc g++_include_flags { args } {\n+proc g++_include_flags { paths } {\n     global srcdir\n     global HAVE_LIBSTDCXX_V3\n     global TESTING_IN_BUILD_TREE\n@@ -79,7 +79,7 @@ proc g++_include_flags { args } {\n       append flags \"-I${dir} -I${dir}/src \"\n     }\n \n-    set gccpath [get_multilibs ${args}]\n+    set gccpath ${paths}\n \n     if { ${HAVE_LIBSTDCXX_V3} } {\n       set odir_v3 [lookfor_file ${gccpath} libstdc++-v3]\n@@ -93,12 +93,12 @@ proc g++_include_flags { args } {\n     return \"$flags\"\n }\n \n-proc g++_link_flags { args } {\n+proc g++_link_flags { paths } {\n     global rootme\n     global srcdir\n     global ld_library_path\n \n-    set gccpath [get_multilibs ${args}];\n+    set gccpath ${paths}\n     set libio_dir \"\"\n     set flags \"\"\n     set ld_library_path \".\"\n@@ -214,11 +214,11 @@ proc g++_init { args } {\n \n     if ![is_remote host] {\n \tif [info exists TOOL_OPTIONS] {\n-\t    lappend ALWAYS_CXXFLAGS \"additional_flags=[g++_include_flags ${TOOL_OPTIONS}]\";\n-\t    lappend ALWAYS_CXXFLAGS \"ldflags=[g++_link_flags ${TOOL_OPTIONS}]\";\n+\t    lappend ALWAYS_CXXFLAGS \"additional_flags=[g++_include_flags [get_multilibs ${TOOL_OPTIONS}] ]\";\n+\t    lappend ALWAYS_CXXFLAGS \"ldflags=[g++_link_flags [get_multilibs ${TOOL_OPTIONS}] ]\";\n \t} else {\n-\t    lappend ALWAYS_CXXFLAGS \"additional_flags=[g++_include_flags]\";\n-\t    lappend ALWAYS_CXXFLAGS \"ldflags=[g++_link_flags]\";\n+\t    lappend ALWAYS_CXXFLAGS \"additional_flags=[g++_include_flags [get_multilibs] ]\";\n+\t    lappend ALWAYS_CXXFLAGS \"ldflags=[g++_link_flags [get_multilibs] ]\";\n \t}\n     }\n "}]}