{"sha": "e2d3a4bba91302346202e83b4c79a4d2c68d856c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJkM2E0YmJhOTEzMDIzNDYyMDJlODNiNGM3OWE0ZDJjNjhkODU2Yw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-12-13T18:10:49Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-12-13T18:10:49Z"}, "message": "decl.c (gnat_to_gnu_entity): Build a stub DECL for the dummy fat pointer type in the unconstrained array case.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_General_Access_Type>:\n\tBuild a stub DECL for the dummy fat pointer type in the unconstrained\n\tarray case.\n\t* gcc-interface/utils.c (update_pointer_to): Set the DECL_ORIGINAL_TYPE\n\tfor all the variants in the fat pointer case.\n\nFrom-SVN: r167758", "tree": {"sha": "426e4bc3cd3eadacc2a1434004a4933e098e1a8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/426e4bc3cd3eadacc2a1434004a4933e098e1a8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2d3a4bba91302346202e83b4c79a4d2c68d856c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2d3a4bba91302346202e83b4c79a4d2c68d856c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2d3a4bba91302346202e83b4c79a4d2c68d856c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2d3a4bba91302346202e83b4c79a4d2c68d856c/comments", "author": null, "committer": null, "parents": [{"sha": "5128d641baf69fc385182d30d93c8e1cdc0bae0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5128d641baf69fc385182d30d93c8e1cdc0bae0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5128d641baf69fc385182d30d93c8e1cdc0bae0b"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "4972d30517d7b18c89177888e8a7e77aad9f13a0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d3a4bba91302346202e83b4c79a4d2c68d856c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d3a4bba91302346202e83b4c79a4d2c68d856c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e2d3a4bba91302346202e83b4c79a4d2c68d856c", "patch": "@@ -1,3 +1,11 @@\n+2010-12-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_General_Access_Type>:\n+\tBuild a stub DECL for the dummy fat pointer type in the unconstrained\n+\tarray case.\n+\t* gcc-interface/utils.c (update_pointer_to): Set the DECL_ORIGINAL_TYPE\n+\tfor all the variants in the fat pointer case.\n+\n 2010-12-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (can_be_lower_p): New predicate."}, {"sha": "b45033f303faa21e7e8e552bc919befebdf64a3c", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d3a4bba91302346202e83b4c79a4d2c68d856c/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d3a4bba91302346202e83b4c79a4d2c68d856c/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=e2d3a4bba91302346202e83b4c79a4d2c68d856c", "patch": "@@ -3566,6 +3566,11 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\tTYPE_DUMMY_P (gnu_array_type) = 1;\n \n \t\tgnu_type = make_node (RECORD_TYPE);\n+\t\t/* Build a stub DECL to trigger the special processing for fat\n+\t\t   pointer types in gnat_pushdecl.  */\n+\t\tTYPE_NAME (gnu_type)\n+\t\t  = create_type_stub_decl\n+\t\t    (create_concat_name (gnat_desig_equiv, \"XUP\"), gnu_type);\n \t\tSET_TYPE_UNCONSTRAINED_ARRAY (gnu_type, gnu_desig_type);\n \t\tTYPE_POINTER_TO (gnu_desig_type) = gnu_type;\n "}, {"sha": "d0449571d85b48755a8ce2e8a0597e203ca9413d", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2d3a4bba91302346202e83b4c79a4d2c68d856c/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2d3a4bba91302346202e83b4c79a4d2c68d856c/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=e2d3a4bba91302346202e83b4c79a4d2c68d856c", "patch": "@@ -3501,15 +3501,16 @@ update_pointer_to (tree old_type, tree new_type)\n \t{\n \t  TYPE_MAIN_VARIANT (t) = new_ptr;\n \t  SET_TYPE_UNCONSTRAINED_ARRAY (t, new_type);\n-\t}\n \n-      /* And show the original pointer NEW_PTR to the debugger.  This is the\n-\t counterpart of the equivalent processing in gnat_pushdecl when the\n-\t unconstrained array type is frozen after access types to it.  */\n-      if (TYPE_NAME (ptr) && TREE_CODE (TYPE_NAME (ptr)) == TYPE_DECL)\n-\t{\n-\t  DECL_ORIGINAL_TYPE (TYPE_NAME (ptr)) = new_ptr;\n-\t  DECL_ARTIFICIAL (TYPE_NAME (ptr)) = 0;\n+\t  /* And show the original pointer NEW_PTR to the debugger.  This is\n+\t     the counterpart of the special processing for fat pointer types\n+\t     in gnat_pushdecl, but when the unconstrained array type is only\n+\t     frozen after access types to it.  */\n+\t  if (TYPE_NAME (t) && TREE_CODE (TYPE_NAME (t)) == TYPE_DECL)\n+\t    {\n+\t      DECL_ORIGINAL_TYPE (TYPE_NAME (t)) = new_ptr;\n+\t      DECL_ARTIFICIAL (TYPE_NAME (t)) = 0;\n+\t    }\n \t}\n \n       /* Now handle updating the allocation record, what the thin pointer"}]}