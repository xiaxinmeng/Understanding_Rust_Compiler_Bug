{"sha": "09e983244e5589b9777ed719e615c5704f163282", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDllOTgzMjQ0ZTU1ODliOTc3N2VkNzE5ZTYxNWM1NzA0ZjE2MzI4Mg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2001-06-07T16:56:31Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2001-06-07T16:56:31Z"}, "message": "alpha.c (alpha_va_arg): Handle TFmode, TCmode args, passed by reference.\n\n\t* config/alpha/alpha.c (alpha_va_arg): Handle TFmode, TCmode args,\n\tpassed by reference.\n\nFrom-SVN: r42969", "tree": {"sha": "ea5708585eb1a7457f73e893147208460c25c71e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea5708585eb1a7457f73e893147208460c25c71e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09e983244e5589b9777ed719e615c5704f163282", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09e983244e5589b9777ed719e615c5704f163282", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09e983244e5589b9777ed719e615c5704f163282", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09e983244e5589b9777ed719e615c5704f163282/comments", "author": null, "committer": null, "parents": [{"sha": "561c1ae11356ee8b60b85113c948dafea9a76eb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/561c1ae11356ee8b60b85113c948dafea9a76eb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/561c1ae11356ee8b60b85113c948dafea9a76eb4"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "7b78f12486213bc8f4c5b969645126ea6ff9896b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09e983244e5589b9777ed719e615c5704f163282/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09e983244e5589b9777ed719e615c5704f163282/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=09e983244e5589b9777ed719e615c5704f163282", "patch": "@@ -1,3 +1,8 @@\n+2001-06-07  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* config/alpha/alpha.c (alpha_va_arg): Handle TFmode, TCmode args,\n+\tpassed by reference.\n+\n 2001-06-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* doc/tm.texi (TARGET_SWITCHES, TARGET_OPTIONS): Adjust markup."}, {"sha": "0bf04cd10521b1308722b5114010e9d5f414d311", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09e983244e5589b9777ed719e615c5704f163282/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09e983244e5589b9777ed719e615c5704f163282/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=09e983244e5589b9777ed719e615c5704f163282", "patch": "@@ -1,6 +1,6 @@\n /* Subroutines used for code generation on the DEC Alpha.\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000 Free Software Foundation, Inc. \n+   2000, 2001 Free Software Foundation, Inc. \n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n This file is part of GNU CC.\n@@ -4316,6 +4316,7 @@ alpha_va_arg (valist, type)\n   tree t;\n   tree offset_field, base_field, addr_tree, addend;\n   tree wide_type, wide_ofs;\n+  int indirect = 0;\n \n   if (TARGET_OPEN_VMS)\n     return std_expand_builtin_va_arg (valist, type);\n@@ -4334,7 +4335,13 @@ alpha_va_arg (valist, type)\n   wide_ofs = save_expr (build1 (CONVERT_EXPR, wide_type, offset_field));\n \n   addend = wide_ofs;\n-  if (FLOAT_TYPE_P (type))\n+\n+  if (TYPE_MODE (type) == TFmode || TYPE_MODE (type) == TCmode)\n+    {\n+      indirect = 1;\n+      tsize = UNITS_PER_WORD;\n+    }\n+  else if (FLOAT_TYPE_P (type))\n     {\n       tree fpaddend, cond;\n \n@@ -4360,6 +4367,12 @@ alpha_va_arg (valist, type)\n   TREE_SIDE_EFFECTS (t) = 1;\n   expand_expr (t, const0_rtx, VOIDmode, EXPAND_NORMAL);\n \n+  if (indirect)\n+    {\n+      addr = force_reg (Pmode, addr);\n+      addr = gen_rtx_MEM (Pmode, addr);\n+    }\n+\n   return addr;\n }\n \f"}]}