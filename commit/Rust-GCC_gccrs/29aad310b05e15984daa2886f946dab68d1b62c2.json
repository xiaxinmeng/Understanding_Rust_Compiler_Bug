{"sha": "29aad310b05e15984daa2886f946dab68d1b62c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjlhYWQzMTBiMDVlMTU5ODRkYWEyODg2Zjk0NmRhYjY4ZDFiNjJjMg==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-01-20T09:34:13Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-01-20T09:34:13Z"}, "message": "* gcc.dg/cpp/macro3.c,macro4.c,strp1.c: Update.\n\nFrom-SVN: r39153", "tree": {"sha": "ac477ab87ca8eb68fb4419d4bee0e92d3b4943a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac477ab87ca8eb68fb4419d4bee0e92d3b4943a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29aad310b05e15984daa2886f946dab68d1b62c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29aad310b05e15984daa2886f946dab68d1b62c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29aad310b05e15984daa2886f946dab68d1b62c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29aad310b05e15984daa2886f946dab68d1b62c2/comments", "author": null, "committer": null, "parents": [{"sha": "673b13e2f6c1df4f23e117095437df11b35b09fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/673b13e2f6c1df4f23e117095437df11b35b09fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/673b13e2f6c1df4f23e117095437df11b35b09fc"}], "stats": {"total": 53, "additions": 18, "deletions": 35}, "files": [{"sha": "505bc082f1bc8f8c8acbda3d6d2b9251d1dafee2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29aad310b05e15984daa2886f946dab68d1b62c2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29aad310b05e15984daa2886f946dab68d1b62c2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=29aad310b05e15984daa2886f946dab68d1b62c2", "patch": "@@ -1,3 +1,7 @@\n+2001-01-20  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+        * gcc.dg/cpp/macro3.c,macro4.c,strp1.c: Update.\n+\n 2001-01-19  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.c-torture/execute/20010119-1.c: New test."}, {"sha": "e6a5ffc1ed40070fe43fc7cc4acec058231f895d", "filename": "gcc/testsuite/gcc.dg/cpp/macro3.c", "status": "modified", "additions": 7, "deletions": 17, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29aad310b05e15984daa2886f946dab68d1b62c2/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacro3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29aad310b05e15984daa2886f946dab68d1b62c2/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacro3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacro3.c?ref=29aad310b05e15984daa2886f946dab68d1b62c2", "patch": "@@ -5,23 +5,17 @@\n    Varargs test source Jamie Lokier.\n    All adapted for the testsuite by Neil Booth, Oct 2000.  */\n \n-int c(int x)\n-{\n-  return x;\n-}\n-\n-int a(int x)\n-{\n-  return x;\n-}\n-\n /* Tests various macro abuse is correctly expanded.  */\n+static int d = 4;\n #define c(x) d\n #define d(x) c(2)\n \n-/* Every GCC <= 2.96 appears to fail this.  */\n+#if 0\n+/* This macro chain above sucks up the whole file once it starts, so\n+   I've commented it out.  The example is left for idle amusement :-) */\n #define a(x) b(\n #define b(x) a(\n+#endif\n \n #define apply(...)   apply2 (__VA_ARGS__)  \n #define half(x)      ((x) / 2)\n@@ -32,12 +26,8 @@ extern void exit (int);\n \n int main()\n {\n-  /* Expands to c(2).  */\n-  if (c(c)(c) != 2)\n-    abort ();\n-\n-  /* Expands to a(2).  */\n-  if (a(a)x)2) != 2)\n+  /* Expands to c(2) then d.  */\n+  if (c(c)(c) != 4)\n     abort ();\n \n   if (apply (half, 200) != 100)"}, {"sha": "ceaf8ddbfa419988035a8f44c2cdf907a51ba1f0", "filename": "gcc/testsuite/gcc.dg/cpp/macro4.c", "status": "modified", "additions": 6, "deletions": 17, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29aad310b05e15984daa2886f946dab68d1b62c2/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacro4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29aad310b05e15984daa2886f946dab68d1b62c2/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacro4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmacro4.c?ref=29aad310b05e15984daa2886f946dab68d1b62c2", "patch": "@@ -1,24 +1,13 @@\n /* Copyright (C) 2000 Free Software Foundation, Inc.  */\n \n-/* { dg-do run } */\n+/* { dg-do preprocess } */\n \n-/* Test source Neil Booth.  GCC <= 2.96 don't get this right.  */\n-\n-extern void abort (void);\n-\n-int glue (int x, int y)\n-{\n-  return x + y;\n-}\n+/* Test source Neil Booth.  */\n \n #define glue(x, y) x ## y\n #define xglue(x, y) glue (x, y)\n \n-int main ()\n-{\n-  /* Should expand to glue (1, 2) as the second \"glue\" is nested.  */\n-  if (glue (xgl, ue) (1, 2) != 3)\n-    abort ();\n-\n-  return 0;\n-}\n+/* Should expand to glue (1, 2), then 12.  */\n+#if glue (xgl, ue) (1, 2) != 12\n+#error glue macro\n+#endif"}, {"sha": "096d968c96bd3d57c4c5a489fad932cc2d822125", "filename": "gcc/testsuite/gcc.dg/cpp/strp1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29aad310b05e15984daa2886f946dab68d1b62c2/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fstrp1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29aad310b05e15984daa2886f946dab68d1b62c2/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fstrp1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fstrp1.c?ref=29aad310b05e15984daa2886f946dab68d1b62c2", "patch": "@@ -16,7 +16,7 @@ static const char t1[] = \"1.1\";\n #define f h\n #define h(a) a+f\n static const char s2[] = S( f(1)(2) );\n-static const char t2[] = \"1+f(2)\";\n+static const char t2[] = \"1+h(2)\";\n \n #undef I\n #undef f"}]}