{"sha": "22069036efda4661862aeee213859f1ee8511ab5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIwNjkwMzZlZmRhNDY2MTg2MmFlZWUyMTM4NTlmMWVlODUxMWFiNQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-06-23T13:46:22Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-06-28T09:28:03Z"}, "message": "v850: add v850_can_inline_p target hook\n\ngcc/ChangeLog:\n\n\t* config/v850/v850.c (v850_option_override): Build default\n\ttarget node.\n\t(v850_can_inline_p): New.  Allow MASK_PROLOG_FUNCTION to be\n\tignored for inlining.\n\t(TARGET_CAN_INLINE_P): New.", "tree": {"sha": "87a4aa0f4cdecbe187fe73a0d1fc7aae7ce0f303", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87a4aa0f4cdecbe187fe73a0d1fc7aae7ce0f303"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22069036efda4661862aeee213859f1ee8511ab5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22069036efda4661862aeee213859f1ee8511ab5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22069036efda4661862aeee213859f1ee8511ab5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22069036efda4661862aeee213859f1ee8511ab5/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ad71efb5de9e929ffd2b8ce0a37c3c34021c0f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ad71efb5de9e929ffd2b8ce0a37c3c34021c0f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ad71efb5de9e929ffd2b8ce0a37c3c34021c0f1"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "371e6026e9a28b2d4943adb6595e818347b58132", "filename": "gcc/config/v850/v850.c", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22069036efda4661862aeee213859f1ee8511ab5/gcc%2Fconfig%2Fv850%2Fv850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22069036efda4661862aeee213859f1ee8511ab5/gcc%2Fconfig%2Fv850%2Fv850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.c?ref=22069036efda4661862aeee213859f1ee8511ab5", "patch": "@@ -3140,6 +3140,11 @@ v850_option_override (void)\n   /* The RH850 ABI does not (currently) support the use of the CALLT instruction.  */\n   if (! TARGET_GCC_ABI)\n     target_flags |= MASK_DISABLE_CALLT;\n+\n+  /* Save the initial options in case the user does function specific\n+     options.  */\n+  target_option_default_node = target_option_current_node\n+    = build_target_option_node (&global_options, &global_options_set);\n }\n \f\n const char *\n@@ -3192,6 +3197,29 @@ v850_modes_tieable_p (machine_mode mode1, machine_mode mode2)\n   return (mode1 == mode2\n \t  || (GET_MODE_SIZE (mode1) <= 4 && GET_MODE_SIZE (mode2) <= 4));\n }\n+\n+static bool\n+v850_can_inline_p (tree caller, tree callee)\n+{\n+  tree caller_tree = DECL_FUNCTION_SPECIFIC_TARGET (caller);\n+  tree callee_tree = DECL_FUNCTION_SPECIFIC_TARGET (callee);\n+\n+  const unsigned HOST_WIDE_INT safe_flags = MASK_PROLOG_FUNCTION;\n+\n+  if (!callee_tree)\n+    callee_tree = target_option_default_node;\n+  if (!caller_tree)\n+    caller_tree = target_option_default_node;\n+  if (callee_tree == caller_tree)\n+    return true;\n+\n+  cl_target_option *caller_opts = TREE_TARGET_OPTION (caller_tree);\n+  cl_target_option *callee_opts = TREE_TARGET_OPTION (callee_tree);\n+\n+  return ((caller_opts->x_target_flags & ~safe_flags)\n+\t  == (callee_opts->x_target_flags & ~safe_flags));\n+}\n+\n \f\n /* Initialize the GCC target structure.  */\n \n@@ -3306,6 +3334,10 @@ v850_modes_tieable_p (machine_mode mode1, machine_mode mode2)\n #undef  TARGET_HAVE_SPECULATION_SAFE_VALUE\n #define TARGET_HAVE_SPECULATION_SAFE_VALUE speculation_safe_value_not_needed\n \n+#undef TARGET_CAN_INLINE_P\n+#define TARGET_CAN_INLINE_P v850_can_inline_p\n+\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n #include \"gt-v850.h\""}]}