{"sha": "9fa67f1c1228a852e23943a41e68b664172c654c", "node_id": "C_kwDOANBUbNoAKDlmYTY3ZjFjMTIyOGE4NTJlMjM5NDNhNDFlNjhiNjY0MTcyYzY1NGM", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-11-28T10:11:43Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-11-28T10:11:43Z"}, "message": "gcn: Fix __builtin_gcn_first_call_this_thread_p\n\nContrary naive expectation, unspec_volatile (via prologue_use) did not\nprevent the cprop pass (at -O2) to remove the access to the s[0:1]\n(PRIVATE_SEGMENT_BUFFER_ARG) register as the volatile got just put on\nthe preceeding pseudoregister.  Solution: Use gen_rtx_USE instead.\nAdditionally, this patch removes (gen_)prologue_use_di as it is then no\nlonger used.\n\nFinally, as we already do bit manipulation, instead of using the full\n64bit side - and then just keeping the value of 's0', just move directly\nto use only s1 of s[0:1] and do the bit manipulations there, generating\nmore readable assembly code and better matching the '#else' branch.\n\ngcc/ChangeLog:\n\n\t* config/gcn/gcn.cc (gcn_expand_builtin_1): Work on s1 instead\n\tof s[0:1] and use USE to prevent removal of setting that register.\n\t* config/gcn/gcn.md (prologue_use_di): Remove.", "tree": {"sha": "6bab9ccf8a60059c9ee6419a5fd437fbf777862b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bab9ccf8a60059c9ee6419a5fd437fbf777862b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fa67f1c1228a852e23943a41e68b664172c654c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fa67f1c1228a852e23943a41e68b664172c654c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fa67f1c1228a852e23943a41e68b664172c654c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fa67f1c1228a852e23943a41e68b664172c654c/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "091b6dbc48177fa3ef15d62ea280ef6cb61c05b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/091b6dbc48177fa3ef15d62ea280ef6cb61c05b2"}], "stats": {"total": 29, "additions": 8, "deletions": 21}, "files": [{"sha": "c74fa007a211271c3031639f38f80536c10d166f", "filename": "gcc/config/gcn/gcn.cc", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fa67f1c1228a852e23943a41e68b664172c654c/gcc%2Fconfig%2Fgcn%2Fgcn.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fa67f1c1228a852e23943a41e68b664172c654c/gcc%2Fconfig%2Fgcn%2Fgcn.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.cc?ref=9fa67f1c1228a852e23943a41e68b664172c654c", "patch": "@@ -4556,21 +4556,21 @@ gcn_expand_builtin_1 (tree exp, rtx target, rtx /*subtarget */ ,\n \t    rtx not_first = gen_label_rtx ();\n \t    rtx reg = gen_rtx_REG (DImode,\n \t\t\tcfun->machine->args.reg[PRIVATE_SEGMENT_BUFFER_ARG]);\n-\t    rtx cmp = force_reg (DImode,\n-\t\t\t\t gen_rtx_LSHIFTRT (DImode, reg, GEN_INT (48)));\n+\t    reg = gcn_operand_part (DImode, reg, 1);\n+\t    rtx cmp = force_reg (SImode,\n+\t\t\t\t gen_rtx_LSHIFTRT (SImode, reg, GEN_INT (16)));\n \t    emit_insn (gen_cstoresi4 (result, gen_rtx_NE (BImode, cmp,\n \t\t\t\t\t\t\t  GEN_INT(12345)),\n \t\t\t\t      cmp, GEN_INT(12345)));\n \t    emit_jump_insn (gen_cjump (not_first, gen_rtx_EQ (BImode, result,\n \t\t\t\t\t\t\t      const0_rtx),\n \t\t\t\t       result));\n \t    emit_move_insn (reg,\n-\t      force_reg (DImode,\n-\t\tgen_rtx_IOR (DImode,\n-\t\t\t     gen_rtx_AND (DImode, reg,\n-\t\t\t\t\t  GEN_INT (0x0000ffffffffffffL)),\n-\t\t\t     GEN_INT (12345L << 48))));\n-\t    emit_insn (gen_prologue_use (reg));\n+\t      force_reg (SImode,\n+\t\tgen_rtx_IOR (SImode,\n+\t\t\t     gen_rtx_AND (SImode, reg, GEN_INT (0x0000ffff)),\n+\t\t\t     GEN_INT (12345L << 16))));\n+\t    emit_insn (gen_rtx_USE (VOIDmode, reg));\n \t    emit_label (not_first);\n \t  }\n \treturn result;"}, {"sha": "92e9892c4f78e93b2d2f47c561c6e2c1a6654089", "filename": "gcc/config/gcn/gcn.md", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fa67f1c1228a852e23943a41e68b664172c654c/gcc%2Fconfig%2Fgcn%2Fgcn.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fa67f1c1228a852e23943a41e68b664172c654c/gcc%2Fconfig%2Fgcn%2Fgcn.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.md?ref=9fa67f1c1228a852e23943a41e68b664172c654c", "patch": "@@ -697,19 +697,6 @@\n   \"\"\n   [(set_attr \"length\" \"0\")])\n \n-(define_insn_and_split \"prologue_use_di\"\n-  [(unspec_volatile [(match_operand:DI 0 \"register_operand\")] UNSPECV_PROLOGUE_USE)]\n-  \"\"\n-  \"#\"\n-  \"reload_completed\"\n-  [(unspec_volatile [(match_dup 0)] UNSPECV_PROLOGUE_USE)\n-   (unspec_volatile [(match_dup 1)] UNSPECV_PROLOGUE_USE)]\n-  {\n-    operands[1] = gcn_operand_part (DImode, operands[0], 1);\n-    operands[0] = gcn_operand_part (DImode, operands[0], 0);\n-  }\n-  [(set_attr \"length\" \"0\")])\n-\n (define_expand \"prologue\"\n   [(const_int 0)]\n   \"\""}]}