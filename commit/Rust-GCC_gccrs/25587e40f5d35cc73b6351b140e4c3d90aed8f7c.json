{"sha": "25587e40f5d35cc73b6351b140e4c3d90aed8f7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU1ODdlNDBmNWQzNWNjNzNiNjM1MWIxNDBlNGMzZDkwYWVkOGY3Yw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2002-08-15T21:16:23Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2002-08-15T21:16:23Z"}, "message": "c-tree.h (skip_evaluation): Move declaration...\n\n* c-tree.h (skip_evaluation): Move declaration...\n* c-common.h: ... here.\n* c-typeck.c (build_external_ref): Don't assemble_external nor\nmark a tree as used if skip_evaluation is set.\n* c-parse.in (typeof): New non-terminal to set skip_evaluation\naround TYPEOF.\n(typespec_nonreserved_nonattr): Use it.\n\nFrom-SVN: r56358", "tree": {"sha": "be917cdfeaeec953b25fe411d7db833f292e9f3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be917cdfeaeec953b25fe411d7db833f292e9f3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25587e40f5d35cc73b6351b140e4c3d90aed8f7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25587e40f5d35cc73b6351b140e4c3d90aed8f7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25587e40f5d35cc73b6351b140e4c3d90aed8f7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25587e40f5d35cc73b6351b140e4c3d90aed8f7c/comments", "author": null, "committer": null, "parents": [{"sha": "0053afb9651947ee0bb421501ba71f042981dcae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0053afb9651947ee0bb421501ba71f042981dcae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0053afb9651947ee0bb421501ba71f042981dcae"}], "stats": {"total": 35, "additions": 25, "deletions": 10}, "files": [{"sha": "015b2406aafcd0f7c71c42f9aeab8bdc4b13a4c7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25587e40f5d35cc73b6351b140e4c3d90aed8f7c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25587e40f5d35cc73b6351b140e4c3d90aed8f7c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=25587e40f5d35cc73b6351b140e4c3d90aed8f7c", "patch": "@@ -1,3 +1,13 @@\n+2002-08-15  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* c-tree.h (skip_evaluation): Move declaration...\n+\t* c-common.h: ... here.\n+\t* c-typeck.c (build_external_ref): Don't assemble_external nor\n+\tmark a tree as used if skip_evaluation is set.\n+\t* c-parse.in (typeof): New non-terminal to set skip_evaluation\n+\taround TYPEOF.\n+\t(typespec_nonreserved_nonattr): Use it.\n+\n 2002-08-15  Douglas B Rupp  <rupp@gnat.com>\n \n \t* dbxout.c (dbx_debug_hooks): Update end_prologue, end_epilogue."}, {"sha": "6968d70dac9f326ca820183722ad0658db091da4", "filename": "gcc/c-common.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25587e40f5d35cc73b6351b140e4c3d90aed8f7c/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25587e40f5d35cc73b6351b140e4c3d90aed8f7c/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=25587e40f5d35cc73b6351b140e4c3d90aed8f7c", "patch": "@@ -790,6 +790,11 @@ extern int warn_deprecated;\n \n extern int max_tinst_depth;\n \n+/* Nonzero means the expression being parsed will never be evaluated.\n+   This is a count, since unevaluated expressions can nest.  */\n+\n+extern int skip_evaluation;\n+\n /* C types are partitioned into three subsets: object, function, and\n    incomplete types.  */\n #define C_TYPE_OBJECT_P(type) \\"}, {"sha": "eab176a62f7f47ce92eba39df454d83a2f3caa7f", "filename": "gcc/c-parse.in", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25587e40f5d35cc73b6351b140e4c3d90aed8f7c/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25587e40f5d35cc73b6351b140e4c3d90aed8f7c/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=25587e40f5d35cc73b6351b140e4c3d90aed8f7c", "patch": "@@ -562,6 +562,10 @@ alignof:\n \tALIGNOF { skip_evaluation++; }\n \t;\n \n+typeof:\n+\tTYPEOF { skip_evaluation++; }\n+\t;\n+\n cast_expr:\n \tunary_expr\n \t| '(' typename ')' cast_expr  %prec UNARY\n@@ -1394,10 +1398,10 @@ ifobjc\n         | non_empty_protocolrefs\n                 { $$ = get_object_reference ($1); }\n end ifobjc\n-\t| TYPEOF '(' expr ')'\n-\t\t{ $$ = TREE_TYPE ($3); }\n-\t| TYPEOF '(' typename ')'\n-\t\t{ $$ = groktypename ($3); }\n+\t| typeof '(' expr ')'\n+\t\t{ skip_evaluation--; $$ = TREE_TYPE ($3); }\n+\t| typeof '(' typename ')'\n+\t\t{ skip_evaluation--; $$ = groktypename ($3); }\n \t;\n \n /* typespec_nonreserved_attr does not exist.  */"}, {"sha": "0d6829fc6e9005217246fb6f5c00c9e3754f8182", "filename": "gcc/c-tree.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25587e40f5d35cc73b6351b140e4c3d90aed8f7c/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25587e40f5d35cc73b6351b140e4c3d90aed8f7c/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=25587e40f5d35cc73b6351b140e4c3d90aed8f7c", "patch": "@@ -311,11 +311,6 @@ extern int current_function_returns_null;\n \n extern int current_function_returns_abnormally;\n \n-/* Nonzero means the expression being parsed will never be evaluated.\n-   This is a count, since unevaluated expressions can nest.  */\n-\n-extern int skip_evaluation;\n-\n /* Nonzero means we are reading code that came from a system header file.  */\n \n extern int system_header_p;"}, {"sha": "bfc44848ad76e35bde413de2b38c4051d948a2d6", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25587e40f5d35cc73b6351b140e4c3d90aed8f7c/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25587e40f5d35cc73b6351b140e4c3d90aed8f7c/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=25587e40f5d35cc73b6351b140e4c3d90aed8f7c", "patch": "@@ -1441,7 +1441,8 @@ build_external_ref (id, fun)\n   if (TREE_TYPE (ref) == error_mark_node)\n     return error_mark_node;\n \n-  assemble_external (ref);\n+  if (!skip_evaluation)\n+    assemble_external (ref);\n   TREE_USED (ref) = 1;\n \n   if (TREE_CODE (ref) == CONST_DECL)"}]}