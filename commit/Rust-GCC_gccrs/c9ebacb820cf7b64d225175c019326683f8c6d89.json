{"sha": "c9ebacb820cf7b64d225175c019326683f8c6d89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzllYmFjYjgyMGNmN2I2NGQyMjUxNzVjMDE5MzI2NjgzZjhjNmQ4OQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-20T02:49:26Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-20T02:49:26Z"}, "message": "(process_command): Handle `-Wl,' and `-Wa,'.\n\n(do_spec_1): Handle %Y.\n(default_compilers): Use %Y in assembler commands.\n\nFrom-SVN: r1637", "tree": {"sha": "ed9d13e9d7fe31990ac3e001e03b92ad8041f2d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed9d13e9d7fe31990ac3e001e03b92ad8041f2d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9ebacb820cf7b64d225175c019326683f8c6d89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9ebacb820cf7b64d225175c019326683f8c6d89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9ebacb820cf7b64d225175c019326683f8c6d89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9ebacb820cf7b64d225175c019326683f8c6d89/comments", "author": null, "committer": null, "parents": [{"sha": "26fcb35ae229b69189f35637125952fa2eabd0a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26fcb35ae229b69189f35637125952fa2eabd0a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26fcb35ae229b69189f35637125952fa2eabd0a0"}], "stats": {"total": 102, "additions": 93, "deletions": 9}, "files": [{"sha": "4efe9e230ef421a3959cab8c16e4df42bf0d5861", "filename": "gcc/gcc.c", "status": "modified", "additions": 93, "deletions": 9, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9ebacb820cf7b64d225175c019326683f8c6d89/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9ebacb820cf7b64d225175c019326683f8c6d89/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=c9ebacb820cf7b64d225175c019326683f8c6d89", "patch": "@@ -223,6 +223,7 @@ or with constant text in a single argument.\n         Use this when inconsistent options are detected.\n  %x{OPTION}\tAccumulate an option for %X.\n  %X\tOutput the accumulated linker options specified by compilations.\n+ %Y\tOutput the accumulated assembler options specified by compilations.\n  %a     process ASM_SPEC as a spec.\n         This allows config.h to specify part of the spec for running as.\n  %A\tprocess ASM_FINAL_SPEC as a spec.  A capital A is actually\n@@ -426,7 +427,7 @@ static struct compiler default_compilers[] =\n \t\t   %{aux-info*}\\\n \t\t   %{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}}\\\n \t\t   %{S:%W{o*}%{!o*:-o %b.s}}%{!S:-o %{|!pipe:%g.s}} |\\n\\\n-              %{!S:as %{R} %{j} %{J} %{h} %{d2} %a \\\n+              %{!S:as %{R} %{j} %{J} %{h} %{d2} %a %Y\\\n \t\t      %{c:%W{o*}%{!o*:-o %w%b.o}}%{!c:-o %d%w%b.o}\\\n                       %{!pipe:%g.s} %A\\n }}}}\"},\n   {\"-\",\n@@ -459,7 +460,7 @@ static struct compiler default_compilers[] =\n \t\t   %{aux-info*}\\\n \t\t   %{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}}\\\n \t\t   %{S:%W{o*}%{!o*:-o %b.s}}%{!S:-o %{|!pipe:%g.s}} |\\n\\\n-              %{!S:as %{R} %{j} %{J} %{h} %{d2} %a \\\n+              %{!S:as %{R} %{j} %{J} %{h} %{d2} %a %Y\\\n \t\t      %{c:%W{o*}%{!o*:-o %w%b.o}}%{!c:-o %d%w%b.o}\\\n                       %{!pipe:%g.s} %A\\n }}}}\"},\n   {\".h\", \"@c-header\"},\n@@ -494,7 +495,7 @@ static struct compiler default_compilers[] =\n \t\t   %{aux-info*}\\\n \t\t   %{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}}\\\n \t\t   %{S:%W{o*}%{!o*:-o %b.s}}%{!S:-o %{|!pipe:%g.s}} |\\n\\\n-              %{!S:as %{R} %{j} %{J} %{h} %{d2} %a \\\n+              %{!S:as %{R} %{j} %{J} %{h} %{d2} %a %Y\\\n \t\t      %{c:%W{o*}%{!o*:-o %w%b.o}}%{!c:-o %d%w%b.o}\\\n                       %{!pipe:%g.s} %A\\n }}}}\"},\n   {\".i\", \"@cpp-output\"},\n@@ -505,7 +506,7 @@ static struct compiler default_compilers[] =\n \t%{aux-info*}\\\n \t%{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}}\\\n \t%{S:%W{o*}%{!o*:-o %b.s}}%{!S:-o %{|!pipe:%g.s}} |\\n\\\n-    %{!S:as %{R} %{j} %{J} %{h} %{d2} %a \\\n+    %{!S:as %{R} %{j} %{J} %{h} %{d2} %a %Y\\\n             %{c:%W{o*}%{!o*:-o %w%b.o}}%{!c:-o %d%w%b.o} %{!pipe:%g.s} %A\\n }\"},\n   {\".ii\", \"@c++-cpp-output\"},\n   {\"@c++-cpp-output\",\n@@ -515,12 +516,12 @@ static struct compiler default_compilers[] =\n \t    %{aux-info*}\\\n \t    %{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}}\\\n \t    %{S:%W{o*}%{!o*:-o %b.s}}%{!S:-o %{|!pipe:%g.s}} |\\n\\\n-       %{!S:as %{R} %{j} %{J} %{h} %{d2} %a \\\n+       %{!S:as %{R} %{j} %{J} %{h} %{d2} %a %Y\\\n \t       %{c:%W{o*}%{!o*:-o %w%b.o}}%{!c:-o %d%w%b.o}\\\n \t       %{!pipe:%g.s} %A\\n }\"},\n   {\".s\", \"@assembler\"},\n   {\"@assembler\",\n-   \"%{!S:as %{R} %{j} %{J} %{h} %{d2} %a \\\n+   \"%{!S:as %{R} %{j} %{J} %{h} %{d2} %a %Y\\\n             %{c:%W{o*}%{!o*:-o %w%b.o}}%{!c:-o %d%w%b.o} %i %A\\n }\"},\n   {\".S\", \"@assembler-with-cpp\"},\n   {\"@assembler-with-cpp\",\n@@ -532,7 +533,7 @@ static struct compiler default_compilers[] =\n         %{traditional-cpp:-traditional}\\\n \t%{g*} %{W*} %{w} %{pedantic*} %{H} %{d*} %C\\\n         %i %{!M:%{!MM:%{!E:%{!pipe:%g.s}}}}%{E:%W{o*}}%{M:%W{o*}}%{MM:%W{o*}} |\\n\\\n-    %{!M:%{!MM:%{!E:%{!S:as %{R} %{j} %{J} %{h} %{d2} %a \\\n+    %{!M:%{!MM:%{!E:%{!S:as %{R} %{j} %{J} %{h} %{d2} %a %Y\\\n                     %{c:%W{o*}%{!o*:-o %w%b.o}}%{!c:-o %d%w%b.o}\\\n \t\t    %{!pipe:%g.s} %A\\n }}}}\"},\n   /* Mark end of table */\n@@ -564,10 +565,16 @@ static char *link_command_spec = \"\\\n #endif\n \n /* A vector of options to give to the linker.\n-   These options are accumulated by %x\n+   These options are accumulated by -Xlinker and -Wl,\n    and substituted into the linker command with %X.  */\n static int n_linker_options;\n static char **linker_options;\n+\n+/* A vector of options to give to the assembler.\n+   These options are accumulated by -Wa,\n+   and substituted into the assembler command with %X.  */\n+static int n_assembler_options;\n+static char **assembler_options;\n \f\n /* Read compilation specs from a file named FILENAME,\n    replacing the default ones.\n@@ -1933,6 +1940,66 @@ process_command (argc, argv)\n \n \t  linker_options[n_linker_options - 1] = argv[++i];\n \t}\n+      else if (! strncmp (argv[i], \"-Wl,\", 4))\n+\t{\n+\t  int prev, j;\n+\t  /* Pass the rest of this option to the linker when we link.  */\n+\n+\t  n_linker_options++;\n+\t  if (!linker_options)\n+\t    linker_options\n+\t      = (char **) xmalloc (n_linker_options * sizeof (char **));\n+\t  else\n+\t    linker_options\n+\t      = (char **) xrealloc (linker_options,\n+\t\t\t\t    n_linker_options * sizeof (char **));\n+\n+\t  /* Split the argument at commas.  */\n+\t  prev = 4;\n+\t  for (j = 4; argv[i][j]; j++)\n+\t    if (argv[i][j] == ',')\n+\t      {\n+\t\tlinker_options[n_linker_options - 1]\n+\t\t  = save_string (argv[i] + prev, j - prev);\n+\t\tn_linker_options++;\n+\t\tlinker_options\n+\t\t  = (char **) xrealloc (linker_options,\n+\t\t\t\t\tn_linker_options * sizeof (char **));\n+\t\tprev = j + 1;\n+\t      }\n+\t  /* Record the part after the last comma.  */\n+\t  linker_options[n_linker_options - 1] = argv[i] + prev;\n+\t}\n+      else if (! strncmp (argv[i], \"-Wa,\", 4))\n+\t{\n+\t  int prev, j;\n+\t  /* Pass the rest of this option to the assembler.  */\n+\n+\t  n_assembler_options++;\n+\t  if (!assembler_options)\n+\t    assembler_options\n+\t      = (char **) xmalloc (n_assembler_options * sizeof (char **));\n+\t  else\n+\t    assembler_options\n+\t      = (char **) xrealloc (assembler_options,\n+\t\t\t\t    n_assembler_options * sizeof (char **));\n+\n+\t  /* Split the argument at commas.  */\n+\t  prev = 4;\n+\t  for (j = 4; argv[i][j]; j++)\n+\t    if (argv[i][j] == ',')\n+\t      {\n+\t\tassembler_options[n_assembler_options - 1]\n+\t\t  = save_string (argv[i] + prev, j - prev);\n+\t\tn_assembler_options++;\n+\t\tassembler_options\n+\t\t  = (char **) xrealloc (assembler_options,\n+\t\t\t\t\tn_assembler_options * sizeof (char **));\n+\t\tprev = j + 1;\n+\t      }\n+\t  /* Record the part after the last comma.  */\n+\t  assembler_options[n_assembler_options - 1] = argv[i] + prev;\n+\t}\n       else if (argv[i][0] == '-' && argv[i][1] != 0 && argv[i][1] != 'l')\n \t{\n \t  register char *p = &argv[i][1];\n@@ -2031,6 +2098,10 @@ process_command (argc, argv)\n     {\n       if (!strcmp (argv[i], \"-Xlinker\"))\n \ti++;\n+      else if (! strncmp (argv[i], \"-Wl,\", 4))\n+\ti++;\n+      else if (! strncmp (argv[i], \"-Wa,\", 4))\n+\ti++;\n       else if (! strcmp (argv[i], \"-print-libgcc-file-name\"))\n \ti++;\n       else if (argv[i][0] == '-' && argv[i][1] != 0 && argv[i][1] != 'l')\n@@ -2497,7 +2568,8 @@ do_spec_1 (spec, inswitch, soft_matched_part)\n \t    }\n \t    break;\n \n-\t  /* Dump out the options accumulated previously using %x.  */\n+\t  /* Dump out the options accumulated previously using %x,\n+\t     -Xlinker and -Wl,.  */\n \t  case 'X':\n \t    for (i = 0; i < n_linker_options; i++)\n \t      {\n@@ -2507,6 +2579,18 @@ do_spec_1 (spec, inswitch, soft_matched_part)\n \t      }\n \t    break;\n \n+\t  /* Dump out the options accumulated previously using -Wa,.  */\n+\t  case 'Y':\n+\t    for (i = 0; i < n_assembler_options; i++)\n+\t      {\n+\t\tdo_spec_1 (assembler_options[i], 1, NULL_PTR);\n+\t\t/* Make each accumulated option a separate argument.  */\n+\t\tdo_spec_1 (\" \", 0, NULL_PTR);\n+\t      }\n+\t    break;\n+\n+\t    /* Here are digits and numbers that just process\n+\t       a certain constant string as a spec.\n \t    /* Here are digits and numbers that just process\n \t       a certain constant string as a spec.  */\n "}]}