{"sha": "e7afe229578ce66db3edf26702e2cadd3c481993", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdhZmUyMjk1NzhjZTY2ZGIzZWRmMjY3MDJlMmNhZGQzYzQ4MTk5Mw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2002-01-14T23:55:52Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-01-14T23:55:52Z"}, "message": "h8300-protos.h: Remove the prototype for eq_operator.\n\n\t* config/h8300/h8300-protos.h: Remove the prototype for\n\teq_operator.\n\t* config/h8300/h8300.c (eq_operator): Remove.\n\nFrom-SVN: r48857", "tree": {"sha": "12775bffa5eff457e9a7f6e46b61784a04e3ec63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12775bffa5eff457e9a7f6e46b61784a04e3ec63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7afe229578ce66db3edf26702e2cadd3c481993", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7afe229578ce66db3edf26702e2cadd3c481993", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7afe229578ce66db3edf26702e2cadd3c481993", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7afe229578ce66db3edf26702e2cadd3c481993/comments", "author": null, "committer": null, "parents": [{"sha": "7d378549a5a00e7054e374fcf82b8cdd8acc5394", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d378549a5a00e7054e374fcf82b8cdd8acc5394", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d378549a5a00e7054e374fcf82b8cdd8acc5394"}], "stats": {"total": 17, "additions": 6, "deletions": 11}, "files": [{"sha": "488986844d405131a7450f638d75ccbcebfddba2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7afe229578ce66db3edf26702e2cadd3c481993/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7afe229578ce66db3edf26702e2cadd3c481993/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e7afe229578ce66db3edf26702e2cadd3c481993", "patch": "@@ -1,3 +1,9 @@\n+2002-01-14  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300-protos.h: Remove the prototype for\n+\teq_operator.\n+\t* config/h8300/h8300.c (eq_operator): Remove.\n+\n 2002-01-14  Richard Henderson  <rth@redhat.com>\n \n \t* config/i386/i386.md (prefetch): Tidy."}, {"sha": "57e5bd4ea8c264e277876e098a35602e1c801a71", "filename": "gcc/config/h8300/h8300-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7afe229578ce66db3edf26702e2cadd3c481993/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7afe229578ce66db3edf26702e2cadd3c481993/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h?ref=e7afe229578ce66db3edf26702e2cadd3c481993", "patch": "@@ -54,7 +54,6 @@ extern int small_call_insn_operand PARAMS ((rtx, enum machine_mode));\n extern int jump_address_operand PARAMS ((rtx, enum machine_mode));\n extern int bit_operand PARAMS ((rtx, enum machine_mode));\n extern int bit_memory_operand PARAMS ((rtx, enum machine_mode));\n-extern int eq_operator PARAMS ((rtx, enum machine_mode));\n extern int bit_operator PARAMS ((rtx, enum machine_mode));\n extern int nshift_operator PARAMS ((rtx, enum machine_mode));\n "}, {"sha": "ef6c7fe0d7cf359f25b1f0e422b3e569f6b671ae", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7afe229578ce66db3edf26702e2cadd3c481993/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7afe229578ce66db3edf26702e2cadd3c481993/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=e7afe229578ce66db3edf26702e2cadd3c481993", "patch": "@@ -769,16 +769,6 @@ bit_memory_operand (op, mode)\n \t  && EXTRA_CONSTRAINT (op, 'U'));\n }\n \n-/* Recognize valid operators for bit test.  */\n-\n-int\n-eq_operator (x, mode)\n-     rtx x;\n-     enum machine_mode mode ATTRIBUTE_UNUSED;\n-{\n-  return (GET_CODE (x) == EQ || GET_CODE (x) == NE);\n-}\n-\n /* Handle machine specific pragmas for compatibility with existing\n    compilers for the H8/300.\n "}]}