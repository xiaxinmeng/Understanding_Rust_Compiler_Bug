{"sha": "dcad005d5078d4d02963c27920a0810469d7d0f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNhZDAwNWQ1MDc4ZDRkMDI5NjNjMjc5MjBhMDgxMDQ2OWQ3ZDBmMg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2010-06-30T14:16:28Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2010-06-30T14:16:28Z"}, "message": "re PR tree-optimization/39799 (missing 'may be used uninitialized' warning)\n\n\tPR tree-optimization/39799\n\t* tree-inline.c (remap_ssa_name): Initialize variable only if\n\tSSA_NAME_OCCURS_IN_ABNORMAL_PHI.\n\ntestsuite/\n\tPR tree-optimization/39799\n\t* c-c++-common/uninit-17.c: New test.\n\nFrom-SVN: r161605", "tree": {"sha": "a5c67dd771a3e990f38004d48afabb3d4131a938", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5c67dd771a3e990f38004d48afabb3d4131a938"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcad005d5078d4d02963c27920a0810469d7d0f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcad005d5078d4d02963c27920a0810469d7d0f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcad005d5078d4d02963c27920a0810469d7d0f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcad005d5078d4d02963c27920a0810469d7d0f2/comments", "author": null, "committer": null, "parents": [{"sha": "1d468b06b93557dedbb74e130a4b7b830876038d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d468b06b93557dedbb74e130a4b7b830876038d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d468b06b93557dedbb74e130a4b7b830876038d"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "4ee0756b6f913638758dd18d9ed38a31105fe096", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcad005d5078d4d02963c27920a0810469d7d0f2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcad005d5078d4d02963c27920a0810469d7d0f2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dcad005d5078d4d02963c27920a0810469d7d0f2", "patch": "@@ -1,3 +1,9 @@\n+2010-06-30  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\tPR tree-optimization/39799\n+\t* tree-inline.c (remap_ssa_name): Initialize variable only if\n+\tSSA_NAME_OCCURS_IN_ABNORMAL_PHI.\n+\n 2010-06-30  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* c-parser.c (c_parser_omp_for_loop): Use a VEC for for_block."}, {"sha": "ddc100b8169512a07081cc30c6aad9a079b3c5d4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcad005d5078d4d02963c27920a0810469d7d0f2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcad005d5078d4d02963c27920a0810469d7d0f2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dcad005d5078d4d02963c27920a0810469d7d0f2", "patch": "@@ -1,3 +1,8 @@\n+2010-06-30  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\tPR tree-optimization/39799\n+\t* c-c++-common/uninit-17.c: New test.\n+\n 2010-06-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/43298"}, {"sha": "b895ac7dcd9cc3c3c911c88bc3c820e4fe448ddd", "filename": "gcc/testsuite/c-c++-common/uninit-17.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcad005d5078d4d02963c27920a0810469d7d0f2/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Funinit-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcad005d5078d4d02963c27920a0810469d7d0f2/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Funinit-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Funinit-17.c?ref=dcad005d5078d4d02963c27920a0810469d7d0f2", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wuninitialized\" } */\n+\n+inline int foo(int x)\n+{\n+  return x;\n+}\n+static void bar(int a, int *ptr)\n+{\n+  do\n+  {\n+    int b; /* { dg-message \"note: 'b' was declared here\" } */\n+    if (b < 40) {\n+      ptr[0] = b; /* { dg-warning \"may be used uninitialized\" } */\n+    }\n+    b += 1;\n+    ptr++;\n+  }\n+  while (--a != 0);\n+}\n+void foobar(int a, int *ptr)\n+{\n+  bar(foo(a), ptr);\n+}\n+"}, {"sha": "f1470d7a3848c3fdbb0c9f49e93da78615e7d90d", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcad005d5078d4d02963c27920a0810469d7d0f2/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcad005d5078d4d02963c27920a0810469d7d0f2/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=dcad005d5078d4d02963c27920a0810469d7d0f2", "patch": "@@ -234,6 +234,7 @@ remap_ssa_name (tree name, copy_body_data *id)\n \t     regions of the CFG, but this is expensive to test.  */\n \t  if (id->entry_bb\n \t      && is_gimple_reg (SSA_NAME_VAR (name))\n+\t      && SSA_NAME_OCCURS_IN_ABNORMAL_PHI (name)\n \t      && TREE_CODE (SSA_NAME_VAR (name)) != PARM_DECL\n \t      && (id->entry_bb != EDGE_SUCC (ENTRY_BLOCK_PTR, 0)->dest\n \t\t  || EDGE_COUNT (id->entry_bb->preds) != 1))"}]}