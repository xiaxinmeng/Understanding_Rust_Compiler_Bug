{"sha": "04a2ecf7808fe3c8e79141f7dca30eaacc085a8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRhMmVjZjc4MDhmZTNjOGU3OTE0MWY3ZGNhMzBlYWFjYzA4NWE4ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1999-12-15T09:18:21Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-12-15T09:18:21Z"}, "message": "cp-tree.def (TEMPLATE_PARM_INDEX): Calculate size using sizeof (struct tree_common).\n\n\t* cp-tree.def (TEMPLATE_PARM_INDEX): Calculate size using\n\tsizeof (struct tree_common).\n\nFrom-SVN: r30949", "tree": {"sha": "0b7e82cf37dd9e72e5c39b65341795f41a0d29df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b7e82cf37dd9e72e5c39b65341795f41a0d29df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04a2ecf7808fe3c8e79141f7dca30eaacc085a8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04a2ecf7808fe3c8e79141f7dca30eaacc085a8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04a2ecf7808fe3c8e79141f7dca30eaacc085a8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04a2ecf7808fe3c8e79141f7dca30eaacc085a8e/comments", "author": null, "committer": null, "parents": [{"sha": "03c3ba3937cfed20613cde8a4b3934403dd96581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03c3ba3937cfed20613cde8a4b3934403dd96581", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03c3ba3937cfed20613cde8a4b3934403dd96581"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "6bb2211b2d62d65213f6f2c849849f86180e3b6e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04a2ecf7808fe3c8e79141f7dca30eaacc085a8e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04a2ecf7808fe3c8e79141f7dca30eaacc085a8e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=04a2ecf7808fe3c8e79141f7dca30eaacc085a8e", "patch": "@@ -1,3 +1,8 @@\n+1999-12-15  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* cp-tree.def (TEMPLATE_PARM_INDEX): Calculate size using\n+\tsizeof (struct tree_common).\n+\n 1999-12-14  Jason Merrill  <jason@casey.cygnus.com>\n \n \t* optimize.c (expand_call_inline): Set BLOCK_ABSTRACT_ORIGIN on the"}, {"sha": "70a41b5aafa4c8095fb6c53117a1f32f57725dc7", "filename": "gcc/cp/cp-tree.def", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04a2ecf7808fe3c8e79141f7dca30eaacc085a8e/gcc%2Fcp%2Fcp-tree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04a2ecf7808fe3c8e79141f7dca30eaacc085a8e/gcc%2Fcp%2Fcp-tree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.def?ref=04a2ecf7808fe3c8e79141f7dca30eaacc085a8e", "patch": "@@ -1,7 +1,7 @@\n /* This file contains the definitions and documentation for the\n    additional tree codes used in the GNU C++ compiler (see tree.def\n    for the standard codes).\n-   Copyright (C) 1987, 1988, 1990, 1993, 1997, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1987,88,90,93,97-8,1999 Free Software Foundation, Inc.\n    Hacked by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GNU CC.\n@@ -125,12 +125,15 @@ DEFTREECODE (TEMPLATE_DECL, \"template_decl\", 'd', 0)\n    the types of things; the ORIG_LEVEL is the level when we are\n    worrying about instantiating things.  */\n DEFTREECODE (TEMPLATE_PARM_INDEX, \"template_parm_index\", 'x', \n-\t     /* The addition of (sizeof(char*) - 1) in the next\n-\t\texpression is to ensure against the case where\n-\t\tsizeof(char*) does not evenly divide\n-\t\tsizeof(HOST_WIDE_INT).  */\n-\t     1 + ((3 * sizeof (HOST_WIDE_INT) + sizeof(char*) - 1)\n-\t\t  / sizeof (char*)))\n+\t     /* The addition of (sizeof(tree) - 1) in the next expression\n+\t\tis to handle the case when padding pushes us past an even\n+\t\tmultiple of sizeof(tree).  */\n+\t     /* We used to try to calculate this using\n+\t\t1+3*sizeof(HOST_WIDE_INT), but that fails if alignment\n+\t\tmakes it bigger.  */\n+\t     ((sizeof (template_parm_index) - sizeof (struct tree_common))\n+\t      + sizeof (tree) - 1)\n+\t     / sizeof (tree))\n \n /* Index into a template parameter list.  This parameter must be a type.\n    The TYPE_FIELDS value will be a TEMPLATE_PARM_INDEX.  */"}]}