{"sha": "564475d71fb78d1a6eaf34a81825018c9dd59477", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTY0NDc1ZDcxZmI3OGQxYTZlYWYzNGE4MTgyNTAxOGM5ZGQ1OTQ3Nw==", "commit": {"author": {"name": "Andy Hutchinson", "email": "hutchinsonandy@aim.com", "date": "2008-09-08T22:41:27Z"}, "committer": {"name": "Andy Hutchinson", "email": "hutchinsonandy@gcc.gnu.org", "date": "2008-09-08T22:41:27Z"}, "message": "wo_prof_escape_substr_value.c: Limit allocation based on STACK_SIZE.\n\n* gcc.dg/struct/wo_prof_escape_substr_value.c: Limit allocation based on STACK_SIZE.\n* gcc.dg/struct/wo_prof_array_through_pointer.c: Ditto.\n* gcc.dg/struct/wo_prof_escape_substr_pointer.c: Ditto.\n* gcc.dg/struct/wo_prof_escape_arg_to_local.c: Limit allocation based on STACK_SIZE. Check malloc return for NULL.\n* gcc.dg/struct/w_prof_local_var.c: Ditto.\n* gcc.dg/struct/wo_prof_mult_field_peeling.c: Ditto.\n* gcc.dg/struct/w_prof_local_array.c: Limit allocation based on STACK_SIZE. XFAIL AVR target.\n* gcc.dg/struct/wo_prof_local_array.c: Ditto.\n* gcc.dg/struct/w_prof_two_strs.c: Limit allocation based on STACK_SIZE. Limit random size to N.\n* gcc.dg/struct/wo_prof_two_strs.c: Limit allocation based on STACK_SIZE. XFAIL AVR target. Limit random size to N.\n* gcc.dg/struct/w_prof_single_str_global.c: XFAIL AVR target.\n* gcc.dg/struct/wo_prof_array_field.c: Ditto.\n* gcc.dg/struct/wo_prof_double_malloc.c: Ditto.\n* gcc.dg/struct/wo_prof_global_array.c: Ditto.\n* gcc.dg/struct/wo_prof_single_str_global.c: Ditto.\n* gcc.dg/struct/wo_prof_single_str_local.c: Ditto.\n* gcc.dg/struct/w_prof_global_var.c: Limit allocation based on STACK_SIZE. Check malloc return for NULL. XFAIL AVR target.\n* gcc.dg/struct/wo_prof_global_var.c: Ditto.\n* gcc.dg/struct/wo_prof_local_var.c: Ditto.\n* gcc.dg/struct/wo_prof_malloc_size_var.c: Access only allocated space. Limit allocation based on STACK_SIZE. XFAIL AVR target.\n\nFrom-SVN: r140126", "tree": {"sha": "f973e0244a11e9a84195c1a3871da73a7b5bafa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f973e0244a11e9a84195c1a3871da73a7b5bafa2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/564475d71fb78d1a6eaf34a81825018c9dd59477", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/564475d71fb78d1a6eaf34a81825018c9dd59477", "html_url": "https://github.com/Rust-GCC/gccrs/commit/564475d71fb78d1a6eaf34a81825018c9dd59477", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/564475d71fb78d1a6eaf34a81825018c9dd59477/comments", "author": null, "committer": null, "parents": [{"sha": "d70ddd9078f3591673e892174888b8b30d988554", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d70ddd9078f3591673e892174888b8b30d988554", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d70ddd9078f3591673e892174888b8b30d988554"}], "stats": {"total": 200, "additions": 175, "deletions": 25}, "files": [{"sha": "138351adc3f87c89dcd4f80a0d09a7831564737f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=564475d71fb78d1a6eaf34a81825018c9dd59477", "patch": "@@ -1,3 +1,33 @@\n+2008-09-08  Andy Hutchinson  <hutchinsonandy@aim.com>\n+\n+\t* gcc.dg/struct/wo_prof_escape_substr_value.c: Limit allocation\n+\tbased on STACK_SIZE.\n+\t* gcc.dg/struct/wo_prof_array_through_pointer.c: Ditto.\n+\t* gcc.dg/struct/wo_prof_escape_substr_pointer.c: Ditto.\n+\t* gcc.dg/struct/wo_prof_escape_arg_to_local.c: Limit allocation\n+\tbased on STACK_SIZE. Check malloc return for NULL.\n+\t* gcc.dg/struct/w_prof_local_var.c: Ditto.\n+\t* gcc.dg/struct/wo_prof_mult_field_peeling.c: Ditto.\n+\t* gcc.dg/struct/w_prof_local_array.c: Limit allocation based on\n+\tSTACK_SIZE. XFAIL AVR target.\n+\t* gcc.dg/struct/wo_prof_local_array.c: Ditto.\n+\t* gcc.dg/struct/w_prof_two_strs.c: Limit allocation based on\n+\tSTACK_SIZE. Limit random size to N.\n+\t* gcc.dg/struct/wo_prof_two_strs.c: Limit allocation based on\n+\tSTACK_SIZE. XFAIL AVR target. Limit random size to N.\n+\t* gcc.dg/struct/w_prof_single_str_global.c: XFAIL AVR target.\n+\t* gcc.dg/struct/wo_prof_array_field.c: Ditto.\n+\t* gcc.dg/struct/wo_prof_double_malloc.c: Ditto.\n+\t* gcc.dg/struct/wo_prof_global_array.c: Ditto.\n+\t* gcc.dg/struct/wo_prof_single_str_global.c: Ditto.\n+\t* gcc.dg/struct/wo_prof_single_str_local.c: Ditto.\n+\t* gcc.dg/struct/w_prof_global_var.c: Limit allocation based on\n+\tSTACK_SIZE. Check malloc return for NULL. XFAIL AVR target.\n+\t* gcc.dg/struct/wo_prof_global_var.c: Ditto.\n+\t* gcc.dg/struct/wo_prof_local_var.c: Ditto.\n+\t* gcc.dg/struct/wo_prof_malloc_size_var.c: Access only allocated\n+\tspace. Limit allocation based on STACK_SIZE. XFAIL AVR target.\n+\n 2008-09-08  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* g++.dg/cdce3.C: Require c99 runtime."}, {"sha": "c51648c4ef070ce64c6430fb45465ca334d12159", "filename": "gcc/testsuite/gcc.dg/struct/w_prof_global_var.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fw_prof_global_var.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fw_prof_global_var.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fw_prof_global_var.c?ref=564475d71fb78d1a6eaf34a81825018c9dd59477", "patch": "@@ -5,7 +5,15 @@ typedef struct\n   float b;\n }str_t;\n \n+#ifdef STACK_SIZE\n+#if STACK_SIZE > 8000\n #define N 1000\n+#else\n+#define N (STACK_SIZE/8)\n+#endif\n+#else\n+#define N 1000\n+#endif\n \n str_t *p;\n \n@@ -15,7 +23,8 @@ main ()\n   int i, sum;\n \n   p = malloc (N * sizeof (str_t));\n-\n+  if (p == NULL)\n+    return 0;\n   for (i = 0; i < N; i++)\n     p[i].b = i;\n \n@@ -30,5 +39,5 @@ main ()\n }\n \n /*--------------------------------------------------------------------------*/\n-/* { dg-final-use { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" } } */\n+/* { dg-final-use { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" { xfail { \"avr-*-*\" } } } } */\n /* { dg-final-use { cleanup-ipa-dump \"*\" } } */"}, {"sha": "1a798e399d3f90cb8310111470009f4900c57b2d", "filename": "gcc/testsuite/gcc.dg/struct/w_prof_local_array.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fw_prof_local_array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fw_prof_local_array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fw_prof_local_array.c?ref=564475d71fb78d1a6eaf34a81825018c9dd59477", "patch": "@@ -5,7 +5,15 @@ typedef struct\n   float b;\n }str_t;\n \n+#ifdef STACK_SIZE\n+#if STACK_SIZE > 8000\n #define N 1000\n+#else\n+#define N (STACK_SIZE/8)\n+#endif\n+#else\n+#define N 1000\n+#endif\n \n int\n main ()\n@@ -26,5 +34,5 @@ main ()\n }\n \n /*--------------------------------------------------------------------------*/\n-/* { dg-final-use { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" } } */\n+/* { dg-final-use { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" { xfail { \"avr-*-*\" } } } } */\n /* { dg-final-use { cleanup-ipa-dump \"*\" } } */"}, {"sha": "82f24a1a4b19ade2075b3944701ae5d42db6b426", "filename": "gcc/testsuite/gcc.dg/struct/w_prof_local_var.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fw_prof_local_var.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fw_prof_local_var.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fw_prof_local_var.c?ref=564475d71fb78d1a6eaf34a81825018c9dd59477", "patch": "@@ -5,15 +5,24 @@ typedef struct\n   float b;\n }str_t;\n \n+#ifdef STACK_SIZE\n+#if STACK_SIZE > 8000\n #define N 1000\n+#else\n+#define N (STACK_SIZE/8)\n+#endif\n+#else\n+#define N 1000\n+#endif\n \n int\n main ()\n {\n   int i, sum;\n \n   str_t * p = malloc (N * sizeof (str_t));\n-\n+  if (p == NULL)\n+    return 0;\n   for (i = 0; i < N; i++)\n     p[i].b = i;\n "}, {"sha": "6a717ddb23f470966f3ad4f9cc627ecf30174d47", "filename": "gcc/testsuite/gcc.dg/struct/w_prof_single_str_global.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fw_prof_single_str_global.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fw_prof_single_str_global.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fw_prof_single_str_global.c?ref=564475d71fb78d1a6eaf34a81825018c9dd59477", "patch": "@@ -26,6 +26,6 @@ main ()\n }\n \n /*--------------------------------------------------------------------------*/\n-/* { dg-final-use { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" } } */\n+/* { dg-final-use { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" { xfail { \"avr-*-*\" } } } } */\n /* { dg-final-use { cleanup-ipa-dump \"*\" } } */\n "}, {"sha": "308c30e4fd7ac4d6d8629deac13f971a53cef6ff", "filename": "gcc/testsuite/gcc.dg/struct/w_prof_two_strs.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fw_prof_two_strs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fw_prof_two_strs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fw_prof_two_strs.c?ref=564475d71fb78d1a6eaf34a81825018c9dd59477", "patch": "@@ -12,7 +12,15 @@ typedef struct\n   float d;\n }str_t2;\n \n+#ifdef STACK_SIZE\n+#if STACK_SIZE > 16000\n #define N 1000\n+#else\n+#define N (STACK_SIZE/16)\n+#endif\n+#else\n+#define N 1000\n+#endif\n \n str_t1 *p1;\n str_t2 *p2;\n@@ -33,7 +41,7 @@ main ()\n   int i, r;\n \n   r = rand ();\n-  num = r > N ? N : num; \n+  num = r > N ? N : r; \n   p1 = malloc (num * sizeof (str_t1));\n   p2 = malloc (num * sizeof (str_t2));\n "}, {"sha": "12c217aad97ec9f8924b2d8489e611691ddfa791", "filename": "gcc/testsuite/gcc.dg/struct/wo_prof_array_field.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_array_field.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_array_field.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_array_field.c?ref=564475d71fb78d1a6eaf34a81825018c9dd59477", "patch": "@@ -23,5 +23,5 @@ int main()\n }\n \n /*--------------------------------------------------------------------------*/\n-/* { dg-final { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" } } */\n+/* { dg-final { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" { xfail { \"avr-*-*\" } } } } */\n /* { dg-final { cleanup-ipa-dump \"*\" } } */"}, {"sha": "303afb72b36cd51ece03b658c76e003534febaaf", "filename": "gcc/testsuite/gcc.dg/struct/wo_prof_array_through_pointer.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_array_through_pointer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_array_through_pointer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_array_through_pointer.c?ref=564475d71fb78d1a6eaf34a81825018c9dd59477", "patch": "@@ -8,7 +8,15 @@ typedef struct\n   float b;\n }str_t;\n \n+#ifdef STACK_SIZE\n+#if STACK_SIZE > 8000\n #define N 1000\n+#else\n+#define N (STACK_SIZE/8)\n+#endif\n+#else\n+#define N 1000\n+#endif\n \n int\n main ()"}, {"sha": "b1508eec5c7e330f32da6e5461c853fd094063b6", "filename": "gcc/testsuite/gcc.dg/struct/wo_prof_double_malloc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_double_malloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_double_malloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_double_malloc.c?ref=564475d71fb78d1a6eaf34a81825018c9dd59477", "patch": "@@ -26,5 +26,5 @@ int main()\n }\n \n /*--------------------------------------------------------------------------*/\n-/* { dg-final { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" } } */\n+/* { dg-final { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" { xfail { \"avr-*-*\" } } } } */\n /* { dg-final { cleanup-ipa-dump \"*\" } } */"}, {"sha": "43ca58b9ef2f7ff45ec3c2882673874d3092b3e4", "filename": "gcc/testsuite/gcc.dg/struct/wo_prof_escape_arg_to_local.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_escape_arg_to_local.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_escape_arg_to_local.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_escape_arg_to_local.c?ref=564475d71fb78d1a6eaf34a81825018c9dd59477", "patch": "@@ -9,7 +9,15 @@ struct str\n   float b;\n };\n \n+#ifdef STACK_SIZE\n+#if STACK_SIZE > 8000\n #define N 1000\n+#else\n+#define N (STACK_SIZE/8)\n+#endif\n+#else\n+#define N 1000\n+#endif\n \n int\n foo (struct str * p_str)\n@@ -25,7 +33,8 @@ main ()\n {\n   int i, sum;\n   struct str * p = malloc (N * sizeof (struct str));\n-\n+  if (p == NULL)\n+    return 0;\n   for (i = 0; i < N; i++)\n     sum = foo (p+i);\n "}, {"sha": "8e54632454ee01bfbaeb5e695f1289ec9f9e3272", "filename": "gcc/testsuite/gcc.dg/struct/wo_prof_escape_substr_pointer.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_escape_substr_pointer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_escape_substr_pointer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_escape_substr_pointer.c?ref=564475d71fb78d1a6eaf34a81825018c9dd59477", "patch": "@@ -8,7 +8,15 @@ typedef struct\n   float b;\n }str_t;\n \n+#ifdef STACK_SIZE\n+#if STACK_SIZE > 16000\n #define N 1000\n+#else\n+#define N (STACK_SIZE/16)\n+#endif\n+#else\n+#define N 1000\n+#endif\n \n typedef struct \n {"}, {"sha": "bade315390903d46122b50d7d49494ead056df62", "filename": "gcc/testsuite/gcc.dg/struct/wo_prof_escape_substr_value.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_escape_substr_value.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_escape_substr_value.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_escape_substr_value.c?ref=564475d71fb78d1a6eaf34a81825018c9dd59477", "patch": "@@ -8,7 +8,16 @@ typedef struct\n   float b;\n }str_t;\n \n+#ifdef STACK_SIZE\n+#if STACK_SIZE > 8000\n #define N 1000\n+#else\n+#define N (STACK_SIZE/8)\n+#endif\n+#else\n+#define N 1000\n+#endif\n+\n \n typedef struct \n {"}, {"sha": "4ffd4b5a265a521d67216eb1b7ba618fbf62e57c", "filename": "gcc/testsuite/gcc.dg/struct/wo_prof_global_array.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_global_array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_global_array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_global_array.c?ref=564475d71fb78d1a6eaf34a81825018c9dd59477", "patch": "@@ -29,5 +29,5 @@ main ()\n }\n \n /*--------------------------------------------------------------------------*/\n-/* { dg-final { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" } } */\n+/* { dg-final { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" { xfail { \"avr-*-*\" } } } } */\n /* { dg-final { cleanup-ipa-dump \"*\" } } */"}, {"sha": "58790bfd527091c2808ad82e7054a5a1911e7a5b", "filename": "gcc/testsuite/gcc.dg/struct/wo_prof_global_var.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_global_var.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_global_var.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_global_var.c?ref=564475d71fb78d1a6eaf34a81825018c9dd59477", "patch": "@@ -8,7 +8,15 @@ typedef struct\n   float b;\n }str_t;\n \n+#ifdef STACK_SIZE\n+#if STACK_SIZE > 8000\n #define N 1000\n+#else\n+#define N (STACK_SIZE/8)\n+#endif\n+#else\n+#define N 1000\n+#endif\n \n str_t *p;\n \n@@ -18,7 +26,8 @@ main ()\n   int i, sum;\n \n   p = malloc (N * sizeof (str_t));\n-\n+  if (p == NULL)\n+    return 0;\n   for (i = 0; i < N; i++)\n     p[i].b = i;\n \n@@ -33,5 +42,5 @@ main ()\n }\n \n /*--------------------------------------------------------------------------*/\n-/* { dg-final { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" } } */\n+/* { dg-final { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" { xfail { \"avr-*-*\" } } } } */\n /* { dg-final { cleanup-ipa-dump \"*\" } } */"}, {"sha": "3d92da4051719cd9ff7fedc0ef7847f1c2192d50", "filename": "gcc/testsuite/gcc.dg/struct/wo_prof_local_array.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_local_array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_local_array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_local_array.c?ref=564475d71fb78d1a6eaf34a81825018c9dd59477", "patch": "@@ -8,7 +8,15 @@ typedef struct\n   float b;\n }str_t;\n \n+#ifdef STACK_SIZE\n+#if STACK_SIZE > 8000\n #define N 1000\n+#else\n+#define N (STACK_SIZE/8)\n+#endif\n+#else\n+#define N 1000\n+#endif\n \n int\n main ()\n@@ -29,5 +37,5 @@ main ()\n }\n \n /*--------------------------------------------------------------------------*/\n-/* { dg-final { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" } } */\n+/* { dg-final { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" { xfail { \"avr-*-*\" } } } } */\n /* { dg-final { cleanup-ipa-dump \"*\" } } */"}, {"sha": "5a778a7d439169c83f4b7e316ea60d693b2f0e3b", "filename": "gcc/testsuite/gcc.dg/struct/wo_prof_local_var.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_local_var.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_local_var.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_local_var.c?ref=564475d71fb78d1a6eaf34a81825018c9dd59477", "patch": "@@ -8,15 +8,24 @@ typedef struct\n   float b;\n }str_t;\n \n+#ifdef STACK_SIZE\n+#if STACK_SIZE > 8000\n #define N 1000\n+#else\n+#define N (STACK_SIZE/8)\n+#endif\n+#else\n+#define N 1000\n+#endif\n \n int\n main ()\n {\n   int i, sum;\n \n   str_t * p = malloc (N * sizeof (str_t));\n-\n+  if (p == NULL)\n+    return 0;\n   for (i = 0; i < N; i++)\n     p[i].b = i;\n \n@@ -31,5 +40,5 @@ main ()\n }\n \n /*--------------------------------------------------------------------------*/\n-/* { dg-final { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" } } */\n+/* { dg-final { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" { xfail { \"avr-*-*\" } } } } */\n /* { dg-final { cleanup-ipa-dump \"*\" } } */"}, {"sha": "04b8b6621fb0416208c194fd9adf1c8da0697c60", "filename": "gcc/testsuite/gcc.dg/struct/wo_prof_malloc_size_var.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_malloc_size_var.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_malloc_size_var.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_malloc_size_var.c?ref=564475d71fb78d1a6eaf34a81825018c9dd59477", "patch": "@@ -8,32 +8,41 @@ typedef struct\n   float b;\n }str_t;\n \n+#ifdef STACK_SIZE\n+#if STACK_SIZE > 8000\n #define N 1000\n+#else\n+#define N (STACK_SIZE/8)\n+#endif\n+#else\n+#define N 1000\n+#endif\n \n int\n main ()\n {\n   int i, num;\n \n-  num = rand(); \n+  num = rand();\n+  num = num > N ? N : num; \n   str_t * p = malloc (num * sizeof (str_t));\n \n   if (p == 0)\n     return 0;\n \n-  for (i = 0; i < N; i++)\n+  for (i = 0; i < num; i++)\n     p[i].b = i;\n \n-  for (i = 0; i < N; i++)\n+  for (i = 0; i < num; i++)\n     p[i].a = p[i].b + 1;\n \n-  for (i = 0; i < N; i++)\n+  for (i = 0; i < num; i++)\n     if (p[i].a != p[i].b + 1)\n       abort ();\n   \n   return 0;\n }\n \n /*--------------------------------------------------------------------------*/\n-/* { dg-final { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" } } */\n+/* { dg-final { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" { xfail { \"avr-*-*\" } } } } */\n /* { dg-final { cleanup-ipa-dump \"*\" } } */"}, {"sha": "8f116df4d014a08c069da6f9966d198f65ffac32", "filename": "gcc/testsuite/gcc.dg/struct/wo_prof_mult_field_peeling.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_mult_field_peeling.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_mult_field_peeling.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_mult_field_peeling.c?ref=564475d71fb78d1a6eaf34a81825018c9dd59477", "patch": "@@ -10,14 +10,23 @@ typedef struct\n   float d;\n }str_t;\n \n+#ifdef STACK_SIZE\n+#if STACK_SIZE > 1600\n #define N 100\n+#else\n+#define N (STACK_SIZE/16)\n+#endif\n+#else\n+#define N 100\n+#endif\n \n int \n main ()\n {\n   int i;\n   str_t *p = malloc (N * sizeof (str_t));\n-\n+  if (p == NULL)\n+    return 0;\n   for (i = 0; i < N; i++)\n     p[i].a = 5;\n "}, {"sha": "81c3edfa4135decd15d698e7ce493e4336ab7790", "filename": "gcc/testsuite/gcc.dg/struct/wo_prof_single_str_global.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_single_str_global.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_single_str_global.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_single_str_global.c?ref=564475d71fb78d1a6eaf34a81825018c9dd59477", "patch": "@@ -29,5 +29,5 @@ main ()\n }\n \n /*--------------------------------------------------------------------------*/\n-/* { dg-final { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" } } */\n+/* { dg-final { scan-ipa-dump \"Number of structures to transform is 1\" \"ipa_struct_reorg\" { xfail { \"avr-*-*\" } } } } */\n /* { dg-final { cleanup-ipa-dump \"*\" } } */"}, {"sha": "f9cb7d58a5d62f0fc1c288e00513b4b93da4eddc", "filename": "gcc/testsuite/gcc.dg/struct/wo_prof_single_str_local.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_single_str_local.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_single_str_local.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_single_str_local.c?ref=564475d71fb78d1a6eaf34a81825018c9dd59477", "patch": "@@ -29,5 +29,5 @@ main ()\n }\n \n /*--------------------------------------------------------------------------*/\n-/* { dg-final { scan-ipa-dump \"No structures to transform\" \"ipa_struct_reorg\" } } */\n+/* { dg-final { scan-ipa-dump \"No structures to transform\" \"ipa_struct_reorg\" { xfail { \"avr-*-*\" } } } } */\n /* { dg-final { cleanup-ipa-dump \"*\" } } */"}, {"sha": "24dae559829eb50bf84479c8e9dc615e50816191", "filename": "gcc/testsuite/gcc.dg/struct/wo_prof_two_strs.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_two_strs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/564475d71fb78d1a6eaf34a81825018c9dd59477/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_two_strs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstruct%2Fwo_prof_two_strs.c?ref=564475d71fb78d1a6eaf34a81825018c9dd59477", "patch": "@@ -15,7 +15,15 @@ typedef struct\n   float d;\n }str_t2;\n \n+#ifdef STACK_SIZE\n+#if STACK_SIZE > 16000\n #define N 1000\n+#else\n+#define N (STACK_SIZE/16)\n+#endif\n+#else\n+#define N 1000\n+#endif\n \n str_t1 *p1;\n str_t2 *p2;\n@@ -36,7 +44,7 @@ main ()\n   int i, r;\n \n   r = rand ();\n-  num = r > N ? N : num; \n+  num = r > N ? N : r; \n   p1 = malloc (num * sizeof (str_t1));\n   p2 = malloc (num * sizeof (str_t2));\n \n@@ -56,5 +64,5 @@ main ()\n }\n \n /*--------------------------------------------------------------------------*/\n-/* { dg-final { scan-ipa-dump \"Number of structures to transform is 2\" \"ipa_struct_reorg\" } } */\n+/* { dg-final { scan-ipa-dump \"Number of structures to transform is 2\" \"ipa_struct_reorg\" { xfail { \"avr-*-*\" } } } } */\n /* { dg-final { cleanup-ipa-dump \"*\" } } */"}]}