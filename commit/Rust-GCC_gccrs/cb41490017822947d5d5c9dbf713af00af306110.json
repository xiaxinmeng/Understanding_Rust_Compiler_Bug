{"sha": "cb41490017822947d5d5c9dbf713af00af306110", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I0MTQ5MDAxNzgyMjk0N2Q1ZDVjOWRiZjcxM2FmMDBhZjMwNjExMA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2014-04-11T22:35:47Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2014-04-11T22:35:47Z"}, "message": "re PR fortran/58880 ([OOP] ICE on valid with FINAL function and type extension)\n\n2014-04-11  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/58880\n        PR fortran/60495\n        * resolve.c (gfc_resolve_finalizers): Ensure that vtables\n        and finalization wrappers are generated.\n\n2014-04-11  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/58880\n        PR fortran/60495\n        * gfortran.dg/finalize_25.f90: New.\n\nFrom-SVN: r209327", "tree": {"sha": "d8db72dd28f91f1000a64ffe73007eb3286b1452", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8db72dd28f91f1000a64ffe73007eb3286b1452"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb41490017822947d5d5c9dbf713af00af306110", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb41490017822947d5d5c9dbf713af00af306110", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb41490017822947d5d5c9dbf713af00af306110", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb41490017822947d5d5c9dbf713af00af306110/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b1cd42c580ca1ad82341c60a689882e754db6d32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1cd42c580ca1ad82341c60a689882e754db6d32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1cd42c580ca1ad82341c60a689882e754db6d32"}], "stats": {"total": 110, "additions": 104, "deletions": 6}, "files": [{"sha": "c14e209752c1e902418412f2aae427fb7d9bebb1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb41490017822947d5d5c9dbf713af00af306110/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb41490017822947d5d5c9dbf713af00af306110/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cb41490017822947d5d5c9dbf713af00af306110", "patch": "@@ -1,3 +1,10 @@\n+2014-04-11  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/58880\n+\tPR fortran/60495\n+\t* resolve.c (gfc_resolve_finalizers): Ensure that vtables\n+\tand finalization wrappers are generated.\n+\n 2014-04-11  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \t* intrinsic.texi (RANDOM_SEED): Improve example."}, {"sha": "38755fef6a27ee1db5fec00f8c4f20e6794dbaf6", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 36, "deletions": 6, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb41490017822947d5d5c9dbf713af00af306110/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb41490017822947d5d5c9dbf713af00af306110/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=cb41490017822947d5d5c9dbf713af00af306110", "patch": "@@ -11200,15 +11200,36 @@ resolve_fl_procedure (gfc_symbol *sym, int mp_flag)\n    the requirements of the standard for procedures used as finalizers.  */\n \n static bool\n-gfc_resolve_finalizers (gfc_symbol* derived)\n+gfc_resolve_finalizers (gfc_symbol* derived, bool *finalizable)\n {\n   gfc_finalizer* list;\n   gfc_finalizer** prev_link; /* For removing wrong entries from the list.  */\n   bool result = true;\n   bool seen_scalar = false;\n+  gfc_symbol *vtab;\n+  gfc_component *c;\n \n+  /* Return early when not finalizable. Additionally, ensure that derived-type\n+     components have a their finalizables resolved.  */\n   if (!derived->f2k_derived || !derived->f2k_derived->finalizers)\n-    return true;\n+    {\n+      bool has_final = false;\n+      for (c = derived->components; c; c = c->next)\n+\tif (c->ts.type == BT_DERIVED\n+\t    && !c->attr.pointer && !c->attr.proc_pointer && !c->attr.allocatable)\n+\t  {\n+\t    bool has_final2 = false;\n+\t    if (!gfc_resolve_finalizers (c->ts.u.derived, &has_final))\n+\t      return false;  /* Error.  */\n+\t    has_final = has_final || has_final2;\n+\t  }\n+      if (!has_final)\n+\t{\n+\t  if (finalizable)\n+\t    *finalizable = false;\n+\t  return true;\n+\t}\n+    }\n \n   /* Walk over the list of finalizer-procedures, check them, and if any one\n      does not fit in with the standard's definition, print an error and remove\n@@ -11330,12 +11351,15 @@ gfc_resolve_finalizers (gfc_symbol* derived)\n \t/* Remove wrong nodes immediately from the list so we don't risk any\n \t   troubles in the future when they might fail later expectations.  */\n error:\n-\tresult = false;\n \ti = list;\n \t*prev_link = list->next;\n \tgfc_free_finalizer (i);\n+\tresult = false;\n     }\n \n+  if (result == false)\n+    return false;\n+\n   /* Warn if we haven't seen a scalar finalizer procedure (but we know there\n      were nodes in the list, must have been for arrays.  It is surely a good\n      idea to have a scalar version there if there's something to finalize.  */\n@@ -11344,8 +11368,14 @@ gfc_resolve_finalizers (gfc_symbol* derived)\n \t\t \" defined at %L, suggest also scalar one\",\n \t\t derived->name, &derived->declared_at);\n \n-  gfc_find_derived_vtab (derived);\n-  return result;\n+  vtab = gfc_find_derived_vtab (derived);\n+  c = vtab->ts.u.derived->components->next->next->next->next->next;\n+  gfc_set_sym_referenced (c->initializer->symtree->n.sym);\n+\n+  if (finalizable)\n+    *finalizable = true;\n+\n+  return true;\n }\n \n \n@@ -12513,7 +12543,7 @@ resolve_fl_derived (gfc_symbol *sym)\n     return false;\n \n   /* Resolve the finalizer procedures.  */\n-  if (!gfc_resolve_finalizers (sym))\n+  if (!gfc_resolve_finalizers (sym, NULL))\n     return false;\n \n   if (sym->attr.is_class && sym->ts.u.derived == NULL)"}, {"sha": "ad54ae8cebd30bbeada8e89e8ecb5cdf4622c27b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb41490017822947d5d5c9dbf713af00af306110/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb41490017822947d5d5c9dbf713af00af306110/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cb41490017822947d5d5c9dbf713af00af306110", "patch": "@@ -1,3 +1,9 @@\n+2014-04-11  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/58880\n+\tPR fortran/60495\n+\t* gfortran.dg/finalize_25.f90: New.\n+\n 2014-04-11  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* gcc.target/epiphany/t1068-2.c: New file."}, {"sha": "cdbec4caca0e9d6927cfd649cbb263ae2632c978", "filename": "gcc/testsuite/gfortran.dg/finalize_25.f90", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb41490017822947d5d5c9dbf713af00af306110/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_25.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb41490017822947d5d5c9dbf713af00af306110/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_25.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_25.f90?ref=cb41490017822947d5d5c9dbf713af00af306110", "patch": "@@ -0,0 +1,55 @@\n+! { dg-do run }\n+!\n+! PR fortran/58880\n+! PR fortran/60495\n+!\n+! Contributed by Andrew Benson and Janus Weil\n+!\n+\n+module gn\n+  implicit none\n+  type sl\n+     integer, allocatable, dimension(:) :: lv\n+   contains\n+     final :: sld\n+  end type\n+  type :: nde\n+     type(sl) :: r\n+  end type nde\n+\n+  integer :: cnt = 0\n+\n+contains\n+\n+  subroutine sld(s)\n+    type(sl) :: s\n+    cnt = cnt + 1\n+    ! print *,'Finalize sl'\n+  end subroutine\n+  subroutine ndm(s)\n+    type(nde), intent(inout) :: s\n+    type(nde)                :: i\n+    i=s\n+  end subroutine ndm\n+end module\n+\n+program main\n+  use gn\n+  type :: nde2\n+     type(sl) :: r\n+  end type nde2\n+  type(nde) :: x\n+\n+  cnt = 0\n+  call ndm(x)\n+  if (cnt /= 2) call abort()\n+\n+  cnt = 0\n+  call ndm2()\n+  if (cnt /= 3) call abort()\n+contains\n+  subroutine ndm2\n+    type(nde2) :: s,i\n+    i=s\n+  end subroutine ndm2\n+end program main"}]}