{"sha": "82b63eb0f30333b3c59e8f37c4007cb6fd3fe0f9", "node_id": "C_kwDOANBUbNoAKDgyYjYzZWIwZjMwMzMzYjNjNTllOGYzN2M0MDA3Y2I2ZmQzZmUwZjk", "commit": {"author": {"name": "Claire Dross", "email": "dross@adacore.com", "date": "2022-05-24T08:42:46Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-04T07:45:52Z"}, "message": "[Ada] Add GNAT specific pragmas to the equivalent Assertion_Policy for -gnata\n\nAll assertion pragmas are enabled by default when using -gnata. We need\nto add the GNAT specific ones to the list.\n\ngcc/ada/\n\n\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst\n\t(Debugging and Assertion Control): Add GNAT specific assertion\n\tpragmas to the equivalent Assertion_Policy for the -gnata\n\toption.\n\t* gnat_ugn.texi: Regenerate.", "tree": {"sha": "2d4cfce385c5ee44064c3dda15e96adc0a24cc35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d4cfce385c5ee44064c3dda15e96adc0a24cc35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82b63eb0f30333b3c59e8f37c4007cb6fd3fe0f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82b63eb0f30333b3c59e8f37c4007cb6fd3fe0f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82b63eb0f30333b3c59e8f37c4007cb6fd3fe0f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82b63eb0f30333b3c59e8f37c4007cb6fd3fe0f9/comments", "author": {"login": "clairedross", "id": 8180017, "node_id": "MDQ6VXNlcjgxODAwMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/8180017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clairedross", "html_url": "https://github.com/clairedross", "followers_url": "https://api.github.com/users/clairedross/followers", "following_url": "https://api.github.com/users/clairedross/following{/other_user}", "gists_url": "https://api.github.com/users/clairedross/gists{/gist_id}", "starred_url": "https://api.github.com/users/clairedross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clairedross/subscriptions", "organizations_url": "https://api.github.com/users/clairedross/orgs", "repos_url": "https://api.github.com/users/clairedross/repos", "events_url": "https://api.github.com/users/clairedross/events{/privacy}", "received_events_url": "https://api.github.com/users/clairedross/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddd88925273e86018b6cf57c9f6acc798a38e112", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddd88925273e86018b6cf57c9f6acc798a38e112", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddd88925273e86018b6cf57c9f6acc798a38e112"}], "stats": {"total": 72, "additions": 52, "deletions": 20}, "files": [{"sha": "2e835f2f35356b33b18571ee80bc07027a7265d8", "filename": "gcc/ada/doc/gnat_ugn/building_executable_programs_with_gnat.rst", "status": "modified", "additions": 25, "deletions": 9, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82b63eb0f30333b3c59e8f37c4007cb6fd3fe0f9/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82b63eb0f30333b3c59e8f37c4007cb6fd3fe0f9/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst?ref=82b63eb0f30333b3c59e8f37c4007cb6fd3fe0f9", "patch": "@@ -4331,15 +4331,31 @@ Debugging and Assertion Control\n   Which is a shorthand for::\n \n        pragma Assertion_Policy\n-         (Assert               => Check,\n-          Static_Predicate     => Check,\n-          Dynamic_Predicate    => Check,\n-          Pre                  => Check,\n-          Pre'Class            => Check,\n-          Post                 => Check,\n-          Post'Class           => Check,\n-          Type_Invariant       => Check,\n-          Type_Invariant'Class => Check);\n+       --  Ada RM assertion pragmas\n+         (Assert                    => Check,\n+          Static_Predicate          => Check,\n+          Dynamic_Predicate         => Check,\n+          Pre                       => Check,\n+          Pre'Class                 => Check,\n+          Post                      => Check,\n+          Post'Class                => Check,\n+          Type_Invariant            => Check,\n+          Type_Invariant'Class      => Check,\n+          Default_Initial_Condition => Check,\n+       --  GNAT specific assertion pragmas\n+          Assert_And_Cut            => Check,\n+          Assume                    => Check,\n+          Contract_Cases            => Check,\n+          Debug                     => Check,\n+          Ghost                     => Check,\n+          Initial_Condition         => Check,\n+          Loop_Invariant            => Check,\n+          Loop_Variant              => Check,\n+          Postcondition             => Check,\n+          Precondition              => Check,\n+          Predicate                 => Check,\n+          Refined_Post              => Check,\n+          Subprogram_Variant        => Check);\n \n   The pragmas ``Assert`` and ``Debug`` normally have no effect and\n   are ignored. This switch, where ``a`` stands for 'assert', causes"}, {"sha": "a080cd438714128c07ebb5fdf3efcbcffac3ffdc", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 27, "deletions": 11, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82b63eb0f30333b3c59e8f37c4007cb6fd3fe0f9/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82b63eb0f30333b3c59e8f37c4007cb6fd3fe0f9/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=82b63eb0f30333b3c59e8f37c4007cb6fd3fe0f9", "patch": "@@ -21,7 +21,7 @@\n \n @copying\n @quotation\n-GNAT User's Guide for Native Platforms , May 24, 2022\n+GNAT User's Guide for Native Platforms , Jun 24, 2022\n \n AdaCore\n \n@@ -12853,15 +12853,31 @@ Which is a shorthand for:\n \n @example\n pragma Assertion_Policy\n-  (Assert               => Check,\n-   Static_Predicate     => Check,\n-   Dynamic_Predicate    => Check,\n-   Pre                  => Check,\n-   Pre'Class            => Check,\n-   Post                 => Check,\n-   Post'Class           => Check,\n-   Type_Invariant       => Check,\n-   Type_Invariant'Class => Check);\n+--  Ada RM assertion pragmas\n+  (Assert                    => Check,\n+   Static_Predicate          => Check,\n+   Dynamic_Predicate         => Check,\n+   Pre                       => Check,\n+   Pre'Class                 => Check,\n+   Post                      => Check,\n+   Post'Class                => Check,\n+   Type_Invariant            => Check,\n+   Type_Invariant'Class      => Check,\n+   Default_Initial_Condition => Check,\n+--  GNAT specific assertion pragmas\n+   Assert_And_Cut            => Check,\n+   Assume                    => Check,\n+   Contract_Cases            => Check,\n+   Debug                     => Check,\n+   Ghost                     => Check,\n+   Initial_Condition         => Check,\n+   Loop_Invariant            => Check,\n+   Loop_Variant              => Check,\n+   Postcondition             => Check,\n+   Precondition              => Check,\n+   Predicate                 => Check,\n+   Refined_Post              => Check,\n+   Subprogram_Variant        => Check);\n @end example\n \n The pragmas @code{Assert} and @code{Debug} normally have no effect and\n@@ -29249,8 +29265,8 @@ to permit their use in free software.\n \n @printindex ge\n \n-@anchor{gnat_ugn/gnat_utility_programs switches-related-to-project-files}@w{                              }\n @anchor{cf}@w{                              }\n+@anchor{gnat_ugn/gnat_utility_programs switches-related-to-project-files}@w{                              }\n \n @c %**end of body\n @bye"}]}