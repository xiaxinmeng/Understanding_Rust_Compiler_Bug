{"sha": "8f74423d5b0f6a9508a0be50a6de291913bb0baf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY3NDQyM2Q1YjBmNmE5NTA4YTBiZTUwYTZkZTI5MTkxM2JiMGJhZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-05-18T17:43:18Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-05-18T17:43:18Z"}, "message": "pt.c (value_dependent_expression_p): Tweak new cases to better match the wording in the standard.\n\n\t* pt.c (value_dependent_expression_p): Tweak new cases to better\n\tmatch the wording in the standard.\n\nFrom-SVN: r236421", "tree": {"sha": "5b0f51959f869b34fb04dab4396de3dcfe7f6b1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b0f51959f869b34fb04dab4396de3dcfe7f6b1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f74423d5b0f6a9508a0be50a6de291913bb0baf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f74423d5b0f6a9508a0be50a6de291913bb0baf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f74423d5b0f6a9508a0be50a6de291913bb0baf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f74423d5b0f6a9508a0be50a6de291913bb0baf/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "04643334f9769263db3a2f71956876886ef6cdd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04643334f9769263db3a2f71956876886ef6cdd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04643334f9769263db3a2f71956876886ef6cdd5"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "81baa89a30d18b98f1c28d22d15615d12d9a38a0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f74423d5b0f6a9508a0be50a6de291913bb0baf/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f74423d5b0f6a9508a0be50a6de291913bb0baf/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8f74423d5b0f6a9508a0be50a6de291913bb0baf", "patch": "@@ -1,3 +1,8 @@\n+2016-05-18  Jason Merrill  <jason@redhat.com>\n+\n+\t* pt.c (value_dependent_expression_p): Tweak new cases to better\n+\tmatch the wording in the standard.\n+\n 2016-05-18  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/69793"}, {"sha": "fde3091951747e7f9ed4c7195b41baa71ade989a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f74423d5b0f6a9508a0be50a6de291913bb0baf/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f74423d5b0f6a9508a0be50a6de291913bb0baf/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=8f74423d5b0f6a9508a0be50a6de291913bb0baf", "patch": "@@ -22649,19 +22649,14 @@ value_dependent_expression_p (tree expression)\n   switch (TREE_CODE (expression))\n     {\n     case BASELINK:\n-      /* A member function of a dependent class has dependent template\n-\t arguments from its class.  */\n-      if (dependent_type_p (BINFO_TYPE (BASELINK_BINFO (expression))))\n-\treturn true;\n-      return value_dependent_expression_p (BASELINK_FUNCTIONS (expression));\n+      /* A dependent member function of the current instantiation.  */\n+      return dependent_type_p (BINFO_TYPE (BASELINK_BINFO (expression)));\n \n     case FUNCTION_DECL:\n-      /* A function template specialization is value-dependent if it has any\n-\t dependent template arguments, since that means it cannot be\n-\t instantiated for constexpr evaluation.  */\n-      if (DECL_LANG_SPECIFIC (expression)\n-\t  && DECL_TEMPLATE_INFO (expression))\n-\treturn any_dependent_template_arguments_p (DECL_TI_ARGS (expression));\n+      /* A dependent member function of the current instantiation.  */\n+      if (DECL_CLASS_SCOPE_P (expression)\n+\t  && dependent_type_p (DECL_CONTEXT (expression)))\n+\treturn true;\n       break;\n \n     case IDENTIFIER_NODE:"}]}