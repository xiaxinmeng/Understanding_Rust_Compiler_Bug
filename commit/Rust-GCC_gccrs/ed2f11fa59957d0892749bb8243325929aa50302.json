{"sha": "ed2f11fa59957d0892749bb8243325929aa50302", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQyZjExZmE1OTk1N2QwODkyNzQ5YmI4MjQzMzI1OTI5YWE1MDMwMg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-10-22T18:06:38Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-10-22T18:06:38Z"}, "message": "jcf-write.c: Follow spelling conventions.\n\n\t* jcf-write.c: Follow spelling conventions.\n\t* parse.y: Likewise.\n\nFrom-SVN: r72812", "tree": {"sha": "f3009b7d6c4bb682cee5936ee2eb5cde181fd90f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3009b7d6c4bb682cee5936ee2eb5cde181fd90f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed2f11fa59957d0892749bb8243325929aa50302", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed2f11fa59957d0892749bb8243325929aa50302", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed2f11fa59957d0892749bb8243325929aa50302", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed2f11fa59957d0892749bb8243325929aa50302/comments", "author": null, "committer": null, "parents": [{"sha": "4badbfa2b31aad9725489b74f6bc6b975c4dc37b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4badbfa2b31aad9725489b74f6bc6b975c4dc37b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4badbfa2b31aad9725489b74f6bc6b975c4dc37b"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "16bb5135d565c19b3335a92f772af8d3c39d7b00", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2f11fa59957d0892749bb8243325929aa50302/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2f11fa59957d0892749bb8243325929aa50302/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=ed2f11fa59957d0892749bb8243325929aa50302", "patch": "@@ -1,3 +1,8 @@\n+2003-10-22  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* jcf-write.c: Follow spelling conventions.\n+\t* parse.y: Likewise.\n+\n 2003-10-22  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* ChangeLog: Fix typos."}, {"sha": "578fa4aa8262d8f91d6d2f18ec1b3a6376b4b643", "filename": "gcc/java/jcf-write.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2f11fa59957d0892749bb8243325929aa50302/gcc%2Fjava%2Fjcf-write.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2f11fa59957d0892749bb8243325929aa50302/gcc%2Fjava%2Fjcf-write.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-write.c?ref=ed2f11fa59957d0892749bb8243325929aa50302", "patch": "@@ -3429,7 +3429,7 @@ write_classfile (tree clas)\n \tfatal_error (\"error closing %s: %m\", temporary_file_name);\n \n       /* If a file named by the string pointed to by `new' exists\n-         prior to the call to the `rename' function, the bahaviour\n+         prior to the call to the `rename' function, the behavior\n          is implementation-defined.  ISO 9899-1990 7.9.4.2.\n \n          For example, on Win32 with MSVCRT, it is an error. */"}, {"sha": "3f63300fbc517638ac166d138ca96224510868ce", "filename": "gcc/java/parse.y", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed2f11fa59957d0892749bb8243325929aa50302/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed2f11fa59957d0892749bb8243325929aa50302/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=ed2f11fa59957d0892749bb8243325929aa50302", "patch": "@@ -402,7 +402,7 @@ static GTY(()) tree package_list;\n static GTY(()) tree current_this;\n \n /* Hold a list of catch clauses list. The first element of this list is\n-   the list of the catch clauses of the currently analysed try block. */\n+   the list of the catch clauses of the currently analyzed try block. */\n static GTY(()) tree currently_caught_type_list;\n \n /* This holds a linked list of all the case labels for the current\n@@ -8514,7 +8514,7 @@ build_outer_method_access_method (tree decl)\n   /* There is a potential bug here. We should be able to use\n      fix_method_argument_names, but then arg names get mixed up and\n      eventually a constructor will have its this$0 altered and the\n-     outer context won't be assignment properly. The test case is\n+     outer context won't be assignment properly. The testcase is\n      stub.java FIXME */\n   TYPE_ARG_TYPES (TREE_TYPE (mdecl)) = args;\n "}]}