{"sha": "5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "node_id": "C_kwDOANBUbNoAKDU2OTE1MDNmMTFmYjZiYzVhY2Q4YmUxZTQzZmFhMGM1ODk4YzRiMTQ", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-02-02T22:45:31Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-02-03T11:44:54Z"}, "message": "GCC/Rust pieces of GCC upstream \"Mass rename of C++ .c files to .cc suffix\"\n\n... in preparation of merge of the latter.", "tree": {"sha": "7ce6d130244d4875c3fa71f2e8d84eb9fe3c1b6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ce6d130244d4875c3fa71f2e8d84eb9fe3c1b6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7f14de056eb3887e70f29b0f29da4025f746559", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7f14de056eb3887e70f29b0f29da4025f746559", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7f14de056eb3887e70f29b0f29da4025f746559"}], "stats": {"total": 110, "additions": 55, "deletions": 55}, "files": [{"sha": "f707a3587d0affb36c3cbf273b2be19c9086be36", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -2307,7 +2307,7 @@ default-d.o: config/default-d.c\n \n # Files used by the Rust language front end.\n \n-default-rust.o: config/default-rust.c\n+default-rust.o: config/default-rust.cc\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n "}, {"sha": "9419b7549b266d1e19fcb69c47d844795af4e1b7", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -1026,7 +1026,7 @@ std::string aarch64_get_extension_string_for_isa_flags (uint64_t, uint64_t);\n extern void aarch64_d_target_versions (void);\n extern void aarch64_d_register_target_info (void);\n \n-/* In aarch64-rust.c  */\n+/* In aarch64-rust.cc  */\n extern void aarch64_rust_target_cpu_info (void);\n \n rtl_opt_pass *make_pass_fma_steering (gcc::context *);"}, {"sha": "eb16a98891e33b3b0023fbde06bfad1eb30a53cd", "filename": "gcc/config/aarch64/aarch64-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Faarch64%2Faarch64-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Faarch64%2Faarch64-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/aarch64/aarch64-rust.c"}, {"sha": "baf5bff4626527e2ff993fdab5f52c09c4f26b6b", "filename": "gcc/config/aarch64/t-aarch64", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Faarch64%2Ft-aarch64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Faarch64%2Ft-aarch64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Ft-aarch64?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -118,7 +118,7 @@ aarch64-d.o: $(srcdir)/config/aarch64/aarch64-d.c\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n \n-aarch64-rust.o: $(srcdir)/config/aarch64/aarch64-rust.c\n+aarch64-rust.o: $(srcdir)/config/aarch64/aarch64-rust.cc\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n "}, {"sha": "80c9ad0412fe3263beb2306c81b09c2b82cb107d", "filename": "gcc/config/alpha/alpha-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Falpha%2Falpha-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Falpha%2Falpha-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -112,7 +112,7 @@ extern bool some_small_symbolic_operand_int (rtx);\n extern int tls_symbolic_operand_1 (rtx, int, int);\n extern rtx resolve_reload_operand (rtx);\n \n-/* Declare functions in alpha-rust.c  */\n+/* Declare functions in alpha-rust.cc  */\n extern void alpha_rust_target_cpu_info (void);\n \n namespace gcc { class context; }"}, {"sha": "74a6902a7d2bef62bd0001055de3771a81de12d0", "filename": "gcc/config/alpha/alpha-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Falpha%2Falpha-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Falpha%2Falpha-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/alpha/alpha-rust.c"}, {"sha": "bbf991454f10847d880a1e592162a25f03cc9930", "filename": "gcc/config/alpha/t-alpha", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Falpha%2Ft-alpha", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Falpha%2Ft-alpha", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Ft-alpha?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -18,6 +18,6 @@\n \n PASSES_EXTRA += $(srcdir)/config/alpha/alpha-passes.def\n \n-alpha-rust.o: $(srcdir)/config/alpha/alpha-rust.c\n+alpha-rust.o: $(srcdir)/config/alpha/alpha-rust.cc\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)"}, {"sha": "315b677c9be7fc572dccd036ac915870a8d3be43", "filename": "gcc/config/arc/arc-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Farc%2Farc-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Farc%2Farc-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -108,7 +108,7 @@ extern bool arc_is_jli_call_p (rtx);\n extern void arc_file_end (void);\n extern bool arc_is_secure_call_p (rtx);\n \n-/* Declare functions in arc-rust.c  */\n+/* Declare functions in arc-rust.cc  */\n extern void arc_rust_target_cpu_info (void);\n \n rtl_opt_pass * make_pass_arc_ifcvt (gcc::context *ctxt);"}, {"sha": "c94749f0559335819a27904a9fbee77644bc9ab7", "filename": "gcc/config/arc/arc-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Farc%2Farc-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Farc%2Farc-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/arc/arc-rust.c"}, {"sha": "2f374994cd5be3aa4e73a0d2813cce3c33e5b960", "filename": "gcc/config/arc/t-arc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Farc%2Ft-arc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Farc%2Ft-arc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Ft-arc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -28,10 +28,10 @@ $(TREE_H) $(TM_H) $(TM_P_H) coretypes.h\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/arc/arc-c.c\n \n-arc-rust.o: $(srcdir)/config/arc/arc-rust.c $(CONFIG_H) $(SYSTEM_H) \\\n+arc-rust.o: $(srcdir)/config/arc/arc-rust.cc $(CONFIG_H) $(SYSTEM_H) \\\n $(TREE_H) $(TM_H) $(TM_P_H) coretypes.h\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t\t$(srcdir)/config/arc/arc-rust.c\n+\t\t$(srcdir)/config/arc/arc-rust.cc\n \n #Run `arc-cpus` if you changed something in arc-cpus.def\n "}, {"sha": "0f5d640d562c1bf5e4347d3f6c4d311114c60953", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -403,7 +403,7 @@ extern void arm_cpu_cpp_builtins (struct cpp_reader *);\n extern void arm_d_target_versions (void);\n extern void arm_d_register_target_info (void);\n \n-/* Defined in arm-rust.c  */\n+/* Defined in arm-rust.cc  */\n extern void arm_rust_target_cpu_info (void);\n \n extern bool arm_is_constant_pool_ref (rtx);"}, {"sha": "0c78ce6e92a9fda366ea52a9f42ac2e7ad0c1a70", "filename": "gcc/config/arm/arm-rust.cc", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Farm%2Farm-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Farm%2Farm-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -40,7 +40,7 @@ void arm_rust_target_cpu_info(void) {\n             rust_add_target_info(\"target_feature\", \"mclass\");\n             break;\n         default:\n-            fprintf(stderr, \"Screwed up profile selection in arm-rust.c - unknown profile '%c'\",\n+            fprintf(stderr, \"Screwed up profile selection in arm-rust.cc - unknown profile '%c'\",\n               TARGET_ARM_ARCH_PROFILE);\n             break;\n     }", "previous_filename": "gcc/config/arm/arm-rust.c"}, {"sha": "8a4193d8fcb540446e39950ee4c929da5d0ce900", "filename": "gcc/config/arm/t-arm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Farm%2Ft-arm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Farm%2Ft-arm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-arm?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -172,7 +172,7 @@ arm-d.o: $(srcdir)/config/arm/arm-d.c\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n \n-arm-rust.o: $(srcdir)/config/arm/arm-rust.c\n+arm-rust.o: $(srcdir)/config/arm/arm-rust.cc\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n "}, {"sha": "a8a14b41401ed021294809a94c5ec4e0d4693654", "filename": "gcc/config/c6x/c6x-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fc6x%2Fc6x-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fc6x%2Fc6x-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Fc6x-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -21,7 +21,7 @@\n #ifndef GCC_C6X_PROTOS_H\n #define GCC_C6X_PROTOS_H\n \n-/* Defined in c6x-rust.c  */\n+/* Defined in c6x-rust.cc  */\n extern void c6x_rust_target_cpu_info (void);\n \n /* Functions defined in c6x.c.  */"}, {"sha": "31b0dd0f320e139eb416364292163fe929087b82", "filename": "gcc/config/c6x/c6x-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fc6x%2Fc6x-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fc6x%2Fc6x-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Fc6x-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/c6x/c6x-rust.c"}, {"sha": "7ed31d38d8582df8377264dd30f36c1aefe2f290", "filename": "gcc/config/c6x/t-c6x", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fc6x%2Ft-c6x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fc6x%2Ft-c6x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Ft-c6x?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -43,6 +43,6 @@ $(srcdir)/config/c6x/c6x-tables.opt: $(srcdir)/config/c6x/genopt.sh \\\n \t$(SHELL) $(srcdir)/config/c6x/genopt.sh $(srcdir)/config/c6x > \\\n \t\t$(srcdir)/config/c6x/c6x-tables.opt\n \n-c6x-rust.o: $(srcdir)/config/c6x/c6x-rust.c \\\n+c6x-rust.o: $(srcdir)/config/c6x/c6x-rust.cc \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "a1c5d2663091c19af93d6238d32a50cca026c1a6", "filename": "gcc/config/cr16/cr16-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fcr16%2Fcr16-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fcr16%2Fcr16-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcr16%2Fcr16-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -45,7 +45,7 @@ enum data_model_type\n   ILLEGAL_DM\t\t/* Illegal data model.  */\n };\n \n-/* Defined in cr16-rust.c  */\n+/* Defined in cr16-rust.cc  */\n extern void cr16_rust_target_cpu_info (void);\n \n #ifdef RTX_CODE"}, {"sha": "a999d05e50510ee3beeefc4f1d2be2e82ec2e202", "filename": "gcc/config/cr16/cr16-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fcr16%2Fcr16-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fcr16%2Fcr16-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcr16%2Fcr16-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/cr16/cr16-rust.c"}, {"sha": "dfc714be97900e8ff6e75273b6cca57cfa2c9fbc", "filename": "gcc/config/cr16/t-cr16", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fcr16%2Ft-cr16", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fcr16%2Ft-cr16", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcr16%2Ft-cr16?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -23,6 +23,6 @@ MULTILIB_DIRNAMES    = far-pic int32\n MULTILIB_MATCHES     =\n MULTILIB_EXTRA_OPTS  = mcr16cplus mdata-model=far\n \n-cr16-rust.o: $(srcdir)/config/cr16/cr16-rust.c \\\n+cr16-rust.o: $(srcdir)/config/cr16/cr16-rust.cc \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "07999073a8546e78895d0b42bc8b0058530216b2", "filename": "gcc/config/csky/csky-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fcsky%2Fcsky-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fcsky%2Fcsky-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcsky%2Fcsky-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/csky/csky-rust.c"}, {"sha": "902ec7035c0886046012321ae6b8316e4b09cf2f", "filename": "gcc/config/csky/t-csky", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fcsky%2Ft-csky", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fcsky%2Ft-csky", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcsky%2Ft-csky?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -28,6 +28,6 @@ $(srcdir)/config/csky/csky_tables.opt: $(srcdir)/config/csky/csky_genopt.sh \\\n \t$(SHELL) $(srcdir)/config/csky/csky_genopt.sh $(srcdir)/config/csky > \\\n \t\t$(srcdir)/config/csky/csky_tables.opt\n \n-csky-rust.o: $(srcdir)/config/csky/csky-rust.c \\\n+csky-rust.o: $(srcdir)/config/csky/csky-rust.cc \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "a2754396e8ccbda92805f94e83950a18869eaac3", "filename": "gcc/config/default-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fdefault-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fdefault-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdefault-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/default-rust.c"}, {"sha": "c1c9b3d5b18a01535f86c60d47bf2bcb469639eb", "filename": "gcc/config/epiphany/epiphany-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fepiphany%2Fepiphany-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fepiphany%2Fepiphany-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fepiphany-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -26,7 +26,7 @@ extern struct rtx_def *gen_compare_reg (machine_mode, enum rtx_code,\n \t\t\t\t\tmachine_mode, rtx, rtx);\n #endif\n \n-/* Defined in epiphany-rust.c  */\n+/* Defined in epiphany-rust.cc  */\n extern void epiphany_rust_target_cpu_info (void);\n \n /* Declarations for various fns used in the .md file.  */"}, {"sha": "254f14a8d74cd0f2beffcf1c3b4379274b7b0917", "filename": "gcc/config/epiphany/epiphany-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fepiphany%2Fepiphany-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fepiphany%2Fepiphany-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fepiphany-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/epiphany/epiphany-rust.c"}, {"sha": "c7f243494079bfeff170cf2b23b3e9e5609eaf18", "filename": "gcc/config/epiphany/t-epiphany", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fepiphany%2Ft-epiphany", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fepiphany%2Ft-epiphany", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Ft-epiphany?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -30,7 +30,7 @@ resolve-sw-modes.o : $(srcdir)/config/epiphany/resolve-sw-modes.c \\\n   insn-attr-common.h $(TREE_PASS_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $<\n \n-epiphany-rust.o: $(srcdir)/config/epiphany/epiphany-rust.c \\\n+epiphany-rust.o: $(srcdir)/config/epiphany/epiphany-rust.cc \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n "}, {"sha": "3926f2e04d5d002d2ee449ab1f5f4bcbd16d2229", "filename": "gcc/config/frv/frv-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Ffrv%2Ffrv-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Ffrv%2Ffrv-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -26,7 +26,7 @@ extern void frv_debug_stack\t\t\t(frv_stack_t *);\n extern int frv_initial_elimination_offset\t(int, int);\n extern void frv_ifcvt_machdep_init\t\t(void *);\n \n-/* Defined in frv-rust.c  */\n+/* Defined in frv-rust.cc  */\n extern void frv_rust_target_cpu_info (void);\n \n #ifdef RTX_CODE"}, {"sha": "775481b86a3b90511475ee7e01ea093a93f76636", "filename": "gcc/config/frv/frv-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Ffrv%2Ffrv-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Ffrv%2Ffrv-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/frv/frv-rust.c"}, {"sha": "d0c94221055b700449c66a2e42c5237328676ab0", "filename": "gcc/config/frv/t-frv", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Ffrv%2Ft-frv", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Ffrv%2Ft-frv", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ft-frv?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -35,6 +35,6 @@ MULTILIB_EXCEPTIONS\t= mcpu=frv/mno-pack* mcpu=simple/mno-pack*\n \n EXTRA_HEADERS = $(srcdir)/config/frv/frv-asm.h\n \n-frv-rust.o: $(srcdir)/config/frv/frv-rust.c \\\n+frv-rust.o: $(srcdir)/config/frv/frv-rust.cc \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "8a9fe6ccd1642a52533460b0a7f0afffd9ae1f07", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -276,7 +276,7 @@ extern void ix86_d_target_versions (void);\n extern void ix86_d_register_target_info (void);\n extern bool ix86_d_has_stdcall_convention (unsigned int *, unsigned int *);\n \n-/* In i386-rust.c  */\n+/* In i386-rust.cc  */\n extern void ix86_rust_target_cpu_info (void);\n \n /* In winnt.c  */"}, {"sha": "1441a63f32cc0b5923a703c1a11dafc92672e474", "filename": "gcc/config/i386/i386-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fi386%2Fi386-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fi386%2Fi386-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/i386/i386-rust.c"}, {"sha": "1203f2e77fa7ef894a0fbb297aaa44ad38522fac", "filename": "gcc/config/i386/t-i386", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fi386%2Ft-i386", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fi386%2Ft-i386", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-i386?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -46,7 +46,7 @@ i386-d.o: $(srcdir)/config/i386/i386-d.c\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n \n-i386-rust.o: $(srcdir)/config/i386/i386-rust.c\n+i386-rust.o: $(srcdir)/config/i386/i386-rust.cc\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n "}, {"sha": "34857bacf1b04dc856d11dc20cc1f4520350236b", "filename": "gcc/config/ia64/ia64-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fia64%2Fia64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fia64%2Fia64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -65,7 +65,7 @@ extern void ia64_expand_vec_perm_even_odd (rtx, rtx, rtx, int);\n extern void ia64_expand_vec_setv2sf (rtx op[3]);\n #endif /* RTX_CODE */\n \n-/* Defined in ia64-rust.c  */\n+/* Defined in ia64-rust.cc  */\n extern void ia64_rust_target_cpu_info (void);\n \n #ifdef TREE_CODE"}, {"sha": "b1ee77aabc4faf150e17e2c0c467952e20c55ad5", "filename": "gcc/config/ia64/ia64-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fia64%2Fia64-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fia64%2Fia64-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/ia64/ia64-rust.c"}, {"sha": "79790bd20116270b250ead30cb6029fdacc6c5b8", "filename": "gcc/config/ia64/t-ia64", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fia64%2Ft-ia64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fia64%2Ft-ia64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ft-ia64?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -21,7 +21,7 @@ ia64-c.o: $(srcdir)/config/ia64/ia64-c.c $(CONFIG_H) $(SYSTEM_H) \\\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/ia64/ia64-c.c\n \n-ia64-rust.o: $(srcdir)/config/ia64/ia64-rust.c \\\n+ia64-rust.o: $(srcdir)/config/ia64/ia64-rust.cc \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n "}, {"sha": "3140b1d46fd309ccfbb31f9378ecbf21a71e4891", "filename": "gcc/config/m68k/m68k-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fm68k%2Fm68k-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fm68k%2Fm68k-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -101,7 +101,7 @@ extern enum attr_op_mem m68k_sched_attr_op_mem (rtx_insn *);\n \n #endif /* RTX_CODE */\n \n-/* Defined in m68k-rust.c  */\n+/* Defined in m68k-rust.cc  */\n extern void m68k_rust_target_cpu_info (void);\n \n extern enum reg_class m68k_secondary_reload_class (enum reg_class,"}, {"sha": "bad94e4657df0d497b587d2ab252825f0be43b84", "filename": "gcc/config/m68k/m68k-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fm68k%2Fm68k-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fm68k%2Fm68k-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/m68k/m68k-rust.c"}, {"sha": "5e43b47446134869821364addd5ff673ddb81e84", "filename": "gcc/config/m68k/t-opts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fm68k%2Ft-opts", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fm68k%2Ft-opts", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ft-opts?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -7,6 +7,6 @@ $(srcdir)/config/m68k/m68k-tables.opt: $(srcdir)/config/m68k/genopt.sh \\\n \t$(SHELL) $(srcdir)/config/m68k/genopt.sh $(srcdir)/config/m68k > \\\n \t\t$(srcdir)/config/m68k/m68k-tables.opt\n \n-m68k-rust.o: $(srcdir)/config/m68k/m68k-rust.c \\\n+m68k-rust.o: $(srcdir)/config/m68k/m68k-rust.cc \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "5e12826ed9040393c416b4f8514944c3ddf3b5cb", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -392,7 +392,7 @@ extern void mips_expand_vec_cmp_expr (rtx *);\n extern void mips_d_target_versions (void);\n extern void mips_d_register_target_info (void);\n \n-/* Routines implemented in mips-rust.c  */\n+/* Routines implemented in mips-rust.cc  */\n extern void mips_rust_target_cpu_info (void);\n \n #endif /* ! GCC_MIPS_PROTOS_H */"}, {"sha": "31b9c222de445e93ee31ebfe87345f54b80056e2", "filename": "gcc/config/mips/mips-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fmips%2Fmips-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fmips%2Fmips-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/mips/mips-rust.c"}, {"sha": "851dd55907f456fdcc5cb35635810671617d8669", "filename": "gcc/config/mips/t-mips", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fmips%2Ft-mips", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fmips%2Ft-mips", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-mips?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -29,6 +29,6 @@ mips-d.o: $(srcdir)/config/mips/mips-d.c\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n \n-mips-rust.o: $(srcdir)/config/mips/mips-rust.c \\\n+mips-rust.o: $(srcdir)/config/mips/mips-rust.cc \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "e525656bd84c27a65b50457f4c521e6d1d421771", "filename": "gcc/config/nds32/nds32-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fnds32%2Fnds32-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fnds32%2Fnds32-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -319,7 +319,7 @@ extern int nds32_address_cost_impl (rtx, machine_mode, addr_space_t, bool);\n /* Auxiliary functions for pre-define marco.  */\n extern void nds32_cpu_cpp_builtins(struct cpp_reader *);\n \n-/* Routines implemented in nds32-rust.c  */\n+/* Routines implemented in nds32-rust.cc  */\n extern void nds32_rust_target_cpu_info (void);\n \n /* Auxiliary functions for const_vector's constraints.  */"}, {"sha": "e866674f7ad65c520be8efc415b3ccf1ba07333a", "filename": "gcc/config/nds32/nds32-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fnds32%2Fnds32-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fnds32%2Fnds32-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/nds32/nds32-rust.c"}, {"sha": "0afea637445a425780ac3eaea9739cead0408ebb", "filename": "gcc/config/nds32/t-nds32", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fnds32%2Ft-nds32", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fnds32%2Ft-nds32", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Ft-nds32?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -145,6 +145,6 @@ nds32-utils.o: \\\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/nds32/nds32-utils.c\n \n-nds32-rust.o: $(srcdir)/config/nds32/nds32-rust.c \\\n+nds32-rust.o: $(srcdir)/config/nds32/nds32-rust.cc \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "de3be7116b358bc023bf09e70c27fd480ef37bc3", "filename": "gcc/config/nios2/nios2-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fnios2%2Fnios2-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fnios2%2Fnios2-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fnios2-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -30,7 +30,7 @@ extern bool nios2_expand_return (void);\n extern void nios2_function_profiler (FILE *, int);\n extern bool nios2_fpu_insn_enabled (enum n2fpu_code);\n \n-/* Routines implemented in nios2-rust.c  */\n+/* Routines implemented in nios2-rust.cc  */\n extern void nios2_rust_target_cpu_info (void);\n \n #ifdef RTX_CODE"}, {"sha": "c00194ca08bc8fbe9c65c3deca4bb457dde41faa", "filename": "gcc/config/nios2/nios2-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fnios2%2Fnios2-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fnios2%2Fnios2-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fnios2-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/nios2/nios2-rust.c"}, {"sha": "f48788c2ff593031ac9feab7b562864711701c47", "filename": "gcc/config/nios2/t-nios2", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fnios2%2Ft-nios2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fnios2%2Ft-nios2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Ft-nios2?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -26,6 +26,6 @@\n # MULTILIB_DIRNAMES += le be\n # MULTILIB_MATCHES += EL=mel EB=meb\n \n-nios2-rust.o: $(srcdir)/config/nios2/nios2-rust.c \\\n+nios2-rust.o: $(srcdir)/config/nios2/nios2-rust.cc \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "2756376fb7b5983b95b4231201ed8a0951b185c6", "filename": "gcc/config/nvptx/nvptx-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fnvptx%2Fnvptx-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fnvptx%2Fnvptx-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -44,7 +44,7 @@ extern void nvptx_cpu_cpp_builtins (void);\n extern void nvptx_register_pragmas (void);\n extern unsigned int nvptx_data_alignment (const_tree, unsigned int);\n \n-/* Routines implemented in nvptx-rust.c  */\n+/* Routines implemented in nvptx-rust.cc  */\n extern void nvptx_rust_target_cpu_info (void);\n \n #ifdef RTX_CODE"}, {"sha": "0e18abd5435bbfc46ccfcadb02953038caaacc51", "filename": "gcc/config/nvptx/nvptx-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fnvptx%2Fnvptx-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fnvptx%2Fnvptx-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/nvptx/nvptx-rust.c"}, {"sha": "643a72919a8f83f2affc6c8160f4046befafb206", "filename": "gcc/config/nvptx/t-nvptx", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fnvptx%2Ft-nvptx", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fnvptx%2Ft-nvptx", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Ft-nvptx?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -15,6 +15,6 @@ mkoffload$(exeext): mkoffload.o collect-utils.o libcommon-target.a $(LIBIBERTY)\n \n MULTILIB_OPTIONS = mgomp\n \n-nvptx-rust.o: $(srcdir)/config/nvptx/nvptx-rust.c \\\n+nvptx-rust.o: $(srcdir)/config/nvptx/nvptx-rust.cc \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "08e4e7fdc99d5047def4d96155179c23cd168051", "filename": "gcc/config/or1k/or1k-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2For1k%2For1k-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2For1k%2For1k-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2For1k%2For1k-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -29,7 +29,7 @@ extern void or1k_expand_move (machine_mode, rtx, rtx);\n extern void or1k_expand_compare (rtx *);\n extern void or1k_expand_call (rtx, rtx, rtx, bool);\n \n-/* Routines implemented in or1k-rust.c  */\n+/* Routines implemented in or1k-rust.cc  */\n extern void or1k_rust_target_cpu_info (void);\n \n #ifdef RTX_CODE"}, {"sha": "f0b8cee260913de5e06adfdb4dab9c40066eacd2", "filename": "gcc/config/or1k/or1k-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2For1k%2For1k-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2For1k%2For1k-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2For1k%2For1k-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/or1k/or1k-rust.c"}, {"sha": "d8e96831a3e8e36bfd1d03724b34dfc4c296afe2", "filename": "gcc/config/or1k/t-or1k", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2For1k%2Ft-or1k", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2For1k%2Ft-or1k", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2For1k%2Ft-or1k?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -21,6 +21,6 @@\n comma=,\n MULTILIB_OPTIONS = $(subst $(comma), ,$(TM_MULTILIB_CONFIG))\n \n-or1k-rust.o: $(srcdir)/config/or1k/or1k-rust.c \\\n+or1k-rust.o: $(srcdir)/config/or1k/or1k-rust.cc \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "68a7c18544974adfb35a2d7b0c6894d0e2075585", "filename": "gcc/config/pa/pa-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fpa%2Fpa-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fpa%2Fpa-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -116,5 +116,5 @@ extern const int pa_magic_milli[];\n extern void pa_d_target_versions (void);\n extern void pa_d_register_target_info (void);\n \n-/* Routines implemented in pa-rust.c  */\n+/* Routines implemented in pa-rust.cc  */\n extern void pa_rust_target_cpu_info (void);"}, {"sha": "aab742f888d12b4553ed30c9bc3afda35e8ae0ee", "filename": "gcc/config/pa/pa-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fpa%2Fpa-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fpa%2Fpa-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/pa/pa-rust.c"}, {"sha": "42dbde291f49a1e5c77f421b440c6cfa5aa54171", "filename": "gcc/config/pa/t-pa", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fpa%2Ft-pa", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fpa%2Ft-pa", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Ft-pa?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -2,6 +2,6 @@ pa-d.o: $(srcdir)/config/pa/pa-d.c\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n \n-pa-rust.o: $(srcdir)/config/pa/pa-rust.c \\\n+pa-rust.o: $(srcdir)/config/pa/pa-rust.cc \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "19592ea5ac9ccad349018c353770a73b9efcf4ec", "filename": "gcc/config/pdp11/pdp11-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fpdp11%2Fpdp11-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fpdp11%2Fpdp11-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -56,5 +56,5 @@ extern void pdp11_output_labelref (FILE *, const char *);\n extern void pdp11_output_def (FILE *, const char *, const char *);\n extern void pdp11_output_addr_vec_elt (FILE *, int);\n \n-/* Routines implemented in pdp11-rust.c  */\n+/* Routines implemented in pdp11-rust.cc  */\n extern void pdp11_rust_target_cpu_info (void);"}, {"sha": "4b195657364bdc866a3651cd7eea4e4f501ab00c", "filename": "gcc/config/pdp11/pdp11-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fpdp11%2Fpdp11-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fpdp11%2Fpdp11-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/pdp11/pdp11-rust.c"}, {"sha": "c57fce5752369296e1e1c9e38971ba8e7a9b4659", "filename": "gcc/config/pdp11/t-pdp11", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fpdp11%2Ft-pdp11", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fpdp11%2Ft-pdp11", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Ft-pdp11?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -30,6 +30,6 @@ CRTSTUFF_T_CFLAGS = -Os\n # gcc bootstrap compilers support the latter option.\n dwarf2out.o-warn = -Wno-error\n \n-pdp11-rust.o: $(srcdir)/config/pdp11/pdp11-rust.c \\\n+pdp11-rust.o: $(srcdir)/config/pdp11/pdp11-rust.cc \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "c641780ad092305e4d53643e8d5555098f251cbd", "filename": "gcc/config/riscv/riscv-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Friscv%2Friscv-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Friscv%2Friscv-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -82,7 +82,7 @@ void riscv_cpu_cpp_builtins (cpp_reader *);\n extern void riscv_d_target_versions (void);\n extern void riscv_d_register_target_info (void);\n \n-/* Routines implemented in riscv-rust.c  */\n+/* Routines implemented in riscv-rust.cc  */\n extern void riscv_rust_target_cpu_info (void);\n \n /* Routines implemented in riscv-builtins.c.  */"}, {"sha": "27d41aea8bff9be5956fd19662eedcd0130f8aec", "filename": "gcc/config/riscv/riscv-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Friscv%2Friscv-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Friscv%2Friscv-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/riscv/riscv-rust.c"}, {"sha": "e8edea569448517286aa198d9b5746dccc36ce54", "filename": "gcc/config/riscv/t-riscv", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Friscv%2Ft-riscv", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Friscv%2Ft-riscv", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Ft-riscv?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -29,6 +29,6 @@ $(common_out_file): $(srcdir)/config/riscv/riscv-cores.def \\\n     $(srcdir)/config/riscv/riscv-protos.h \\\n     $(srcdir)/config/riscv/riscv-subset.h\n \n-riscv-rust.o: $(srcdir)/config/riscv/riscv-rust.c \\\n+riscv-rust.o: $(srcdir)/config/riscv/riscv-rust.cc \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "38f258b2150547d9f3a662a7327219c0c461cc4a", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -329,7 +329,7 @@ extern void (*rs6000_target_modify_macros_ptr) (bool, HOST_WIDE_INT,\n extern void rs6000_d_target_versions (void);\n extern void rs6000_d_register_target_info (void);\n \n-/* Declare functions in rs6000-rust.c  */\n+/* Declare functions in rs6000-rust.cc  */\n extern void rs6000_rust_target_cpu_info (void);\n \n #ifdef NO_DOLLAR_IN_LABEL"}, {"sha": "f1211490e889eb9c6d60c8e573052216faa1cd6c", "filename": "gcc/config/rs6000/rs6000-rust.cc", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Frs6000%2Frs6000-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Frs6000%2Frs6000-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -35,7 +35,7 @@ rs6000_rust_target_cpu_info (void)\n \n   // TODO: define properly instead of macros\n #ifdef flags\n-# error \"multiple flags already defined in rs6000-rust.c\"\n+# error \"multiple flags already defined in rs6000-rust.cc\"\n #endif\n #define flags rs6000_isa_flags\n ", "previous_filename": "gcc/config/rs6000/rs6000-rust.c"}, {"sha": "d7447c45bb865db6ca684a1d5b744c194c32772f", "filename": "gcc/config/rs6000/t-rs6000", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Frs6000%2Ft-rs6000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Frs6000%2Ft-rs6000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-rs6000?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -39,7 +39,7 @@ rs6000-d.o: $(srcdir)/config/rs6000/rs6000-d.c\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n \n-rs6000-rust.o: $(srcdir)/config/rs6000/rs6000-rust.c\n+rs6000-rust.o: $(srcdir)/config/rs6000/rs6000-rust.cc\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n "}, {"sha": "f8748e2c00c27e3c63eed2321b18a77635457322", "filename": "gcc/config/rx/rx-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Frx%2Frx-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Frx%2Frx-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -171,7 +171,7 @@ rx_find_use_of_reg (rtx reg, rtx_insn* insn, F stepfunc)\n \n #endif\n \n-/* Routines implemented in rx-rust.c  */\n+/* Routines implemented in rx-rust.cc  */\n extern void rx_rust_target_cpu_info (void);\n \n #endif /* GCC_RX_PROTOS_H */"}, {"sha": "62792b37079f966643928dbeeb9920e4c0d958e8", "filename": "gcc/config/rx/rx-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Frx%2Frx-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Frx%2Frx-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/rx/rx-rust.c"}, {"sha": "dd11760f8e41cb519c25bcf066af33025bc39051", "filename": "gcc/config/rx/t-rx", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Frx%2Ft-rx", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Frx%2Ft-rx", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Ft-rx?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -36,6 +36,6 @@ MULTILIB_MATCHES    = nofpu=mnofpu  nofpu=mcpu?rx200  nofpu=mcpu?rx100\n MULTILIB_EXCEPTIONS =\n MULTILIB_EXTRA_OPTS = \n \n-rx-rust.o: $(srcdir)/config/rx/rx-rust.c \\\n+rx-rust.o: $(srcdir)/config/rx/rx-rust.cc \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "d043df1bc37afc258bdb67a8528f821b736f2cc6", "filename": "gcc/config/s390/s390-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fs390%2Fs390-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fs390%2Fs390-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -179,7 +179,7 @@ extern bool s390_const_operand_ok (tree, int, int, tree);\n extern void s390_d_target_versions (void);\n extern void s390_d_register_target_info (void);\n \n-/* Routines implemented in s390-rust.c  */\n+/* Routines implemented in s390-rust.cc  */\n extern void s390_rust_target_cpu_info (void);\n \n /* Pass management.  */"}, {"sha": "8af43dcf5755d0911653ee79316020973da9d02d", "filename": "gcc/config/s390/s390-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fs390%2Fs390-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fs390%2Fs390-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/s390/s390-rust.c"}, {"sha": "354d3c66ff19ab22bcc1dc22b3e4d87b9b9e8ad4", "filename": "gcc/config/s390/t-s390", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fs390%2Ft-s390", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fs390%2Ft-s390", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Ft-s390?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -31,6 +31,6 @@ s390-d.o: $(srcdir)/config/s390/s390-d.c\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n \n-s390-rust.o: $(srcdir)/config/s390/s390-rust.c \\\n+s390-rust.o: $(srcdir)/config/s390/s390-rust.cc \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "cf7be511d3691f8c3bf0664aafb9366f151b664b", "filename": "gcc/config/sh/sh-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -313,7 +313,7 @@ sh_cbranch_distance (rtx_insn* cbranch_insn,\n \n extern void sh_cpu_cpp_builtins (cpp_reader* pfile);\n \n-/* Routines implemented in sh-rust.c  */\n+/* Routines implemented in sh-rust.cc  */\n extern void sh_rust_target_cpu_info (void);\n \n extern const char *output_jump_label_table (void);"}, {"sha": "bae718ddf956a4e806f9cefc8b50600dac8504d3", "filename": "gcc/config/sh/sh-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fsh%2Fsh-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fsh%2Fsh-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/sh/sh-rust.c"}, {"sha": "682deb6bc4170f76e3330a5fdf090944c945bcef", "filename": "gcc/config/sh/t-sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fsh%2Ft-sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fsh%2Ft-sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-sh?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -25,7 +25,7 @@ sh-c.o: $(srcdir)/config/sh/sh-c.c \\\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/sh/sh-c.c\n \n-sh-rust.o: $(srcdir)/config/sh/sh-rust.c \\\n+sh-rust.o: $(srcdir)/config/sh/sh-rust.cc \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n "}, {"sha": "4675e1dd3662887cb5d432d827781296f2d994a4", "filename": "gcc/config/sparc/sparc-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fsparc%2Fsparc-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fsparc%2Fsparc-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -116,7 +116,7 @@ extern rtl_opt_pass *make_pass_work_around_errata (gcc::context *);\n extern void sparc_d_target_versions (void);\n extern void sparc_d_register_target_info (void);\n \n-/* Routines implemented in sparc-rust.c  */\n+/* Routines implemented in sparc-rust.cc  */\n extern void sparc_rust_target_cpu_info (void);\n \n #endif /* __SPARC_PROTOS_H__ */"}, {"sha": "8921ba6376ce7b4a0a0858d7ff60c35de8e78784", "filename": "gcc/config/sparc/sparc-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fsparc%2Fsparc-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fsparc%2Fsparc-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/sparc/sparc-rust.c"}, {"sha": "003fefe511922afcd1b34efcd6034700a89faf18", "filename": "gcc/config/sparc/t-sparc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fsparc%2Ft-sparc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fsparc%2Ft-sparc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-sparc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -28,7 +28,7 @@ sparc-d.o: $(srcdir)/config/sparc/sparc-d.c\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n \n-sparc-rust.o: $(srcdir)/config/sparc/sparc-rust.c \\\n+sparc-rust.o: $(srcdir)/config/sparc/sparc-rust.cc \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n "}, {"sha": "4a13d8cea27984f35a7be36c0fb5e421d69b0470", "filename": "gcc/config/v850/t-v850", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fv850%2Ft-v850", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fv850%2Ft-v850", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Ft-v850?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -30,7 +30,7 @@ v850-c.o: $(srcdir)/config/v850/v850-c.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/v850/v850-c.c \n \n-v850-rust.o: $(srcdir)/config/v850/v850-rust.c \\\n+v850-rust.o: $(srcdir)/config/v850/v850-rust.cc \\\n   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) $(C_COMMON_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<\n "}, {"sha": "6693e60fbc940ffa0418f72e0b408e14faee915e", "filename": "gcc/config/v850/v850-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fv850%2Fv850-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fv850%2Fv850-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850-protos.h?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "patch": "@@ -65,7 +65,7 @@ extern void ghs_pragma_endtda\t\t    (struct cpp_reader *);\n extern void ghs_pragma_endsda\t\t    (struct cpp_reader *);\n extern void ghs_pragma_endzda\t\t    (struct cpp_reader *);\n \n-/* Routines implemented in v850-rust.c  */\n+/* Routines implemented in v850-rust.cc  */\n extern void v850_rust_target_cpu_info (void);\n \n #endif /* ! GCC_V850_PROTOS_H */"}, {"sha": "e676e384cddb82b98b15911f4671362ad2e60171", "filename": "gcc/config/v850/v850-rust.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fv850%2Fv850-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Fconfig%2Fv850%2Fv850-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850-rust.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/config/v850/v850-rust.c"}, {"sha": "dbeaa2652916879ee4cd2e78ee5761cc97c6aba4", "filename": "gcc/rust/rust-object-export.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Frust%2Frust-object-export.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5691503f11fb6bc5acd8be1e43faa0c5898c4b14/gcc%2Frust%2Frust-object-export.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-object-export.cc?ref=5691503f11fb6bc5acd8be1e43faa0c5898c4b14", "previous_filename": "gcc/rust/rust-object-export.c"}]}