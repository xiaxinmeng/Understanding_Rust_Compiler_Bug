{"sha": "6c6aa8e6ca95c9415d21359e606bc0bba1b87846", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM2YWE4ZTZjYTk1Yzk0MTVkMjEzNTllNjA2YmMwYmJhMWI4Nzg0Ng==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-04-28T13:13:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-04-28T13:13:50Z"}, "message": "re PR tree-optimization/60979 (ICE: in gimple_redirect_edge_and_branch_force, at tree-cfg.c:5544, w/ -O -ftree-loop-linear or -fgraphite-identity)\n\n2014-04-28  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/60979\n\t* graphite-scop-detection.c (scopdet_basic_block_info): Reject\n\tSCOPs that end in a block with a successor with abnormal\n\tpredecessors.\n\n\t* gcc.dg/graphite/pr60979.c: New testcase.\n\nFrom-SVN: r209859", "tree": {"sha": "59b0cb6e75de78a045e75871a70cf34ee1e2625d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59b0cb6e75de78a045e75871a70cf34ee1e2625d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c6aa8e6ca95c9415d21359e606bc0bba1b87846", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c6aa8e6ca95c9415d21359e606bc0bba1b87846", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c6aa8e6ca95c9415d21359e606bc0bba1b87846", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c6aa8e6ca95c9415d21359e606bc0bba1b87846/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9540b3c316d16dd49bc890937b4974f51dfa33a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9540b3c316d16dd49bc890937b4974f51dfa33a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9540b3c316d16dd49bc890937b4974f51dfa33a7"}], "stats": {"total": 55, "additions": 53, "deletions": 2}, "files": [{"sha": "61fd558d29de79ec0b6becba22c87b9a73278116", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6aa8e6ca95c9415d21359e606bc0bba1b87846/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6aa8e6ca95c9415d21359e606bc0bba1b87846/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c6aa8e6ca95c9415d21359e606bc0bba1b87846", "patch": "@@ -1,3 +1,10 @@\n+2014-04-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/60979\n+\t* graphite-scop-detection.c (scopdet_basic_block_info): Reject\n+\tSCOPs that end in a block with a successor with abnormal\n+\tpredecessors.\n+\n 2014-04-28  Richard Biener  <rguenther@suse.de>\n \n \t* tree-pass.h (execute_pass_list): Adjust prototype."}, {"sha": "635e21a8519b53464edd8298fdda0d9d6f09c61c", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6aa8e6ca95c9415d21359e606bc0bba1b87846/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6aa8e6ca95c9415d21359e606bc0bba1b87846/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=6c6aa8e6ca95c9415d21359e606bc0bba1b87846", "patch": "@@ -474,8 +474,10 @@ scopdet_basic_block_info (basic_block bb, loop_p outermost_loop,\n       result.exits = false;\n \n       /* Mark bbs terminating a SESE region difficult, if they start\n-\t a condition.  */\n-      if (!single_succ_p (bb))\n+\t a condition or if the block it exits to cannot be split\n+\t with make_forwarder_block.  */\n+      if (!single_succ_p (bb)\n+\t  || bb_has_abnormal_pred (single_succ (bb)))\n \tresult.difficult = true;\n       else\n \tresult.exit = single_succ (bb);"}, {"sha": "df5af3aae5ad497fd6d49732a2996145fe05becc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6aa8e6ca95c9415d21359e606bc0bba1b87846/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6aa8e6ca95c9415d21359e606bc0bba1b87846/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6c6aa8e6ca95c9415d21359e606bc0bba1b87846", "patch": "@@ -1,3 +1,8 @@\n+2014-04-28  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/60979\n+\t* gcc.dg/graphite/pr60979.c: New testcase.\n+\n 2014-04-28  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR c/60983"}, {"sha": "0004a51248d40561718fbd6343db6f750a92af58", "filename": "gcc/testsuite/gcc.dg/graphite/pr60979.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c6aa8e6ca95c9415d21359e606bc0bba1b87846/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr60979.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c6aa8e6ca95c9415d21359e606bc0bba1b87846/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr60979.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr60979.c?ref=6c6aa8e6ca95c9415d21359e606bc0bba1b87846", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-options \"-O -fgraphite-identity\" } */\n+\n+#include <setjmp.h>\n+\n+struct x;\n+\n+typedef struct x **(*a)(struct x *);\n+\n+struct x {\n+    union {\n+\tstruct {\n+\t    union {\n+\t\ta *i;\n+\t    } l;\n+\t    int s;\n+\t} y;\n+    } e;\n+};\n+\n+jmp_buf c;\n+\n+void\n+b(struct x *r)\n+{\n+  int f;\n+  static int w = 0;\n+  volatile jmp_buf m;\n+  f = (*(((struct x *)r)->e.y.l.i[2]((struct x *)r)))->e.y.s;\n+  if (w++ != 0)\n+    __builtin_memcpy((char *)m, (const char *)c, sizeof(jmp_buf));\n+  if (setjmp (c) == 0) {\n+      int z;\n+      for (z = 0; z < 0; ++z)\n+\t;\n+  }\n+  d((const char *)m);\n+}"}]}