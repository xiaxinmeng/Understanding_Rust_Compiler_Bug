{"sha": "f6f7aabcd65e1b80d70e7919c334b97934629773", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZmN2FhYmNkNjVlMWI4MGQ3MGU3OTE5YzMzNGI5NzkzNDYyOTc3Mw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@kss-loka.si", "date": "2006-10-01T05:47:33Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2006-10-01T05:47:33Z"}, "message": "inclhack.def (pthread_mutex_init): New fix.\n\n        * inclhack.def (pthread_mutex_init): New fix.\n        * tests/base/pthread.h: Update.\n\n        * fixincl.x: Regenerate.\n\nFrom-SVN: r117343", "tree": {"sha": "a45e7b9bb89be3197d95776b3f0bc2349489a9f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a45e7b9bb89be3197d95776b3f0bc2349489a9f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6f7aabcd65e1b80d70e7919c334b97934629773", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6f7aabcd65e1b80d70e7919c334b97934629773", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6f7aabcd65e1b80d70e7919c334b97934629773", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6f7aabcd65e1b80d70e7919c334b97934629773/comments", "author": null, "committer": null, "parents": [{"sha": "da1e2517fa43519a38a32be959acccafd7f67f02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da1e2517fa43519a38a32be959acccafd7f67f02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da1e2517fa43519a38a32be959acccafd7f67f02"}], "stats": {"total": 105, "additions": 100, "deletions": 5}, "files": [{"sha": "d32327ba4d26ac505d9f9da6603b3921b3eb459f", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f7aabcd65e1b80d70e7919c334b97934629773/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f7aabcd65e1b80d70e7919c334b97934629773/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=f6f7aabcd65e1b80d70e7919c334b97934629773", "patch": "@@ -1,3 +1,10 @@\n+2006-10-01  Uros Bizjak <uros@kss-loka.si>\n+\n+        * inclhack.def (glibc_mutex_init): New fix.\n+        * tests/base/pthread.h: Update.\n+\n+        * fixincl.x: Regenerate.\n+\n 2006-09-29  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* inclhack.def (solaris_mutex_init_2): Update for Solaris9."}, {"sha": "38d4f276c8befaa52e927bb3516fe48b38aad3b3", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 47, "deletions": 5, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f7aabcd65e1b80d70e7919c334b97934629773/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f7aabcd65e1b80d70e7919c334b97934629773/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=f6f7aabcd65e1b80d70e7919c334b97934629773", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Thursday September 28, 2006 at 11:06:33 PM EDT\n+ * It has been AutoGen-ed  Saturday September 30, 2006 at 01:08:07 PM CEST\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT CVS-MERGE THIS FILE, EITHER Thu Sep 28 23:06:33 EDT 2006\n+/* DO NOT CVS-MERGE THIS FILE, EITHER Sat Sep 30 13:08:07 CEST 2006\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 199 fixup descriptions.\n+ * This file contains 200 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -2180,6 +2180,42 @@ static const char* apzFreebsd_Gcc4_BreakagePatch[] = {\n     \"#if __GNUC__ == 2 && __GNUC_MINOR__ >= 7 || __GNUC__ >= 3\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Glibc_Mutex_Init fix\n+ */\n+tSCC zGlibc_Mutex_InitName[] =\n+     \"glibc_mutex_init\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zGlibc_Mutex_InitList[] =\n+  \"|pthread.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzGlibc_Mutex_InitMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zGlibc_Mutex_InitSelect0[] =\n+       \"\\\\{ *\\\\{ *0, *\\\\} *\\\\}\";\n+\n+#define    GLIBC_MUTEX_INIT_TEST_CT  1\n+static tTestDesc aGlibc_Mutex_InitTests[] = {\n+  { TT_EGREP,    zGlibc_Mutex_InitSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Glibc_Mutex_Init\n+ */\n+static const char* apzGlibc_Mutex_InitPatch[] = { \"sed\",\n+    \"-e\", \"/define[ \\t]\\\\+PTHREAD_MUTEX_INITIALIZER[ \\t]*\\\\\\\\/,+1s/{ { 0, } }/{ { 0, 0, 0, 0, 0, 0 } }/\",\n+    \"-e\", \"/define[ \\t]\\\\+PTHREAD_RWLOCK_INITIALIZER[ \\t]*\\\\\\\\/N;s/^[ \\t]*#[ \\t]*\\\\(define[ \\t]\\\\+PTHREAD_RWLOCK_INITIALIZER[ \\t]*\\\\\\\\\\\\)\\\\n[ \\t]*{ { 0, } }/# if __WORDSIZE == 64\\\\n#  \\\\1\\\\n  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }\\\\n# else\\\\n#  \\\\1\\\\n  { { 0, 0, 0, 0, 0, 0, 0, 0 } }\\\\n# endif/\",\n+    \"-e\", \"/define[ \\t]\\\\+PTHREAD_COND_INITIALIZER/s/{ { 0, } }/{ { 0, 0, 0, 0, 0, (void *) 0, 0, 0 } }/\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Gnu_Types fix\n@@ -8104,9 +8140,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          242\n+#define REGEX_COUNT          243\n #define MACH_LIST_SIZE_LIMIT 261\n-#define FIX_COUNT            199\n+#define FIX_COUNT            200\n \n /*\n  *  Enumerate the fixes\n@@ -8162,6 +8198,7 @@ typedef enum {\n     EXCEPTION_STRUCTURE_FIXIDX,\n     FREEBSD_GCC3_BREAKAGE_FIXIDX,\n     FREEBSD_GCC4_BREAKAGE_FIXIDX,\n+    GLIBC_MUTEX_INIT_FIXIDX,\n     GNU_TYPES_FIXIDX,\n     HP_INLINE_FIXIDX,\n     HP_SYSFILE_FIXIDX,\n@@ -8564,6 +8601,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      FREEBSD_GCC4_BREAKAGE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aFreebsd_Gcc4_BreakageTests,   apzFreebsd_Gcc4_BreakagePatch, 0 },\n \n+  {  zGlibc_Mutex_InitName,    zGlibc_Mutex_InitList,\n+     apzGlibc_Mutex_InitMachs,\n+     GLIBC_MUTEX_INIT_TEST_CT, FD_MACH_ONLY,\n+     aGlibc_Mutex_InitTests,   apzGlibc_Mutex_InitPatch, 0 },\n+\n   {  zGnu_TypesName,    zGnu_TypesList,\n      apzGnu_TypesMachs,\n      GNU_TYPES_TEST_CT, FD_MACH_IFNOT | FD_SUBROUTINE,"}, {"sha": "04c6ef5f8992d50dd3be5833d79e67133e8ab628", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f7aabcd65e1b80d70e7919c334b97934629773/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f7aabcd65e1b80d70e7919c334b97934629773/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=f6f7aabcd65e1b80d70e7919c334b97934629773", "patch": "@@ -1288,6 +1288,38 @@ fix = {\n };\n \n \n+/*  glibc-2.3.5 defines pthread mutex initializers incorrectly,\n+ *  so we replace them with versions that correspond to the\n+ *  definition.\n+ */\n+fix = {\n+    hackname = glibc_mutex_init;\n+    files    = pthread.h;\n+    select   = '\\{ *\\{ *0, *\\} *\\}';\n+    sed      = \"/define[ \\t]\\\\+PTHREAD_MUTEX_INITIALIZER[ \\t]*\\\\\\\\/,+1\"\n+               \"s/{ { 0, } }/{ { 0, 0, 0, 0, 0, 0 } }/\";\n+    sed      = \"/define[ \\t]\\\\+PTHREAD_RWLOCK_INITIALIZER[ \\t]*\\\\\\\\/\"\n+               \"N;s/^[ \\t]*#[ \\t]*\"\n+               \"\\\\(define[ \\t]\\\\+PTHREAD_RWLOCK_INITIALIZER[ \\t]*\\\\\\\\\\\\)\\\\n\"\n+               \"[ \\t]*{ { 0, } }/# if __WORDSIZE == 64\\\\n\"\n+               \"#  \\\\1\\\\n\"\n+               \"  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }\\\\n\"\n+               \"# else\\\\n\"\n+               \"#  \\\\1\\\\n\"\n+               \"  { { 0, 0, 0, 0, 0, 0, 0, 0 } }\\\\n\"\n+               \"# endif/\";\n+    sed      = \"/define[ \\t]\\\\+PTHREAD_COND_INITIALIZER/\"\n+               \"s/{ { 0, } }/{ { 0, 0, 0, 0, 0, (void *) 0, 0, 0 } }/\";\n+\n+    test_text =\n+    \"#define PTHREAD_MUTEX_INITIALIZER \\\\\\\\\\n\"\n+    \"  { { 0, } }\\n\"\n+    \"# define PTHREAD_RWLOCK_INITIALIZER \\\\\\\\\\n\"\n+    \"  { { 0, } }\\n\"\n+    \"#define PTHREAD_COND_INITIALIZER { { 0, } }\";\n+};\n+\n+\n /*\n  * Fix these files to use the types we think they should for\n  * ptrdiff_t, size_t, and wchar_t."}, {"sha": "b1c4d517bce55435ad38385e12d8b1aeac3b1f71", "filename": "fixincludes/tests/base/pthread.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f7aabcd65e1b80d70e7919c334b97934629773/fixincludes%2Ftests%2Fbase%2Fpthread.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f7aabcd65e1b80d70e7919c334b97934629773/fixincludes%2Ftests%2Fbase%2Fpthread.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fpthread.h?ref=f6f7aabcd65e1b80d70e7919c334b97934629773", "patch": "@@ -56,6 +56,20 @@\n #endif  /* ALPHA_PTHREAD_INIT_CHECK */\n \n \n+#if defined( GLIBC_MUTEX_INIT_CHECK )\n+#define PTHREAD_MUTEX_INITIALIZER \\\n+  { { 0, 0, 0, 0, 0, 0 } }\n+# if __WORDSIZE == 64\n+#  define PTHREAD_RWLOCK_INITIALIZER \\\n+  { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }\n+# else\n+#  define PTHREAD_RWLOCK_INITIALIZER \\\n+  { { 0, 0, 0, 0, 0, 0, 0, 0 } }\n+# endif\n+#define PTHREAD_COND_INITIALIZER { { 0, 0, 0, 0, 0, (void *) 0, 0, 0 } }\n+#endif  /* GLIBC_MUTEX_INIT_CHECK */\n+\n+\n #if defined( PTHREAD_PAGE_SIZE_CHECK )\n extern int __page_size;\n #endif  /* PTHREAD_PAGE_SIZE_CHECK */"}]}