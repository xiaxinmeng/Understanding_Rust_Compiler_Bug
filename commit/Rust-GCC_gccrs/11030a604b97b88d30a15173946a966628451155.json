{"sha": "11030a604b97b88d30a15173946a966628451155", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEwMzBhNjA0Yjk3Yjg4ZDMwYTE1MTczOTQ2YTk2NjYyODQ1MTE1NQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-28T00:07:20Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-28T00:07:20Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r604", "tree": {"sha": "9fa5f98825f78665eaba2954cd34e4da8a756fa1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fa5f98825f78665eaba2954cd34e4da8a756fa1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11030a604b97b88d30a15173946a966628451155", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11030a604b97b88d30a15173946a966628451155", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11030a604b97b88d30a15173946a966628451155", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11030a604b97b88d30a15173946a966628451155/comments", "author": null, "committer": null, "parents": [{"sha": "c5abcf1dde599cc2b596b9a15ad98b60627d7ed6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5abcf1dde599cc2b596b9a15ad98b60627d7ed6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5abcf1dde599cc2b596b9a15ad98b60627d7ed6"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "3f8c3aa5fb0373b7d689e0b8deefa3afa913bd6f", "filename": "gcc/real.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11030a604b97b88d30a15173946a966628451155/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11030a604b97b88d30a15173946a966628451155/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=11030a604b97b88d30a15173946a966628451155", "patch": "@@ -142,9 +142,14 @@ extern double (atof) ();\n #define REAL_VALUE_ISNAN(x) (target_isnan (x))\n #endif\n \n+/* Determine whether a floating-point value X is negative. */\n+#ifndef REAL_VALUE_NEGATIVE\n+#define REAL_VALUE_NEGATIVE(x) (target_negative (x))\n+#endif\n+\n /* Determine whether a floating-point value X is minus 0. */\n #ifndef REAL_VALUE_MINUS_ZERO\n-#define REAL_VALUE_MINUS_ZERO(x) (target_minus_zero (x))\n+#define REAL_VALUE_MINUS_ZERO(x) ((x) == 0 && REAL_VALUE_NEGATIVE (x))\n #endif\n \f\n /* Constant real values 0, 1, 2, and -1.  */"}]}