{"sha": "2db4599393fa0727729a9106fd14582188539331", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRiNDU5OTM5M2ZhMDcyNzcyOWE5MTA2ZmQxNDU4MjE4ODUzOTMzMQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-06-05T11:32:28Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-06-05T11:32:28Z"}, "message": "haifa-sched.c (rank_for_schedule): For \"equally good insns\", prefer the insn which has the most insns dependent on it.\n\n        * haifa-sched.c (rank_for_schedule): For \"equally good insns\", prefer\n        the insn which has the most insns dependent on it.\n\nFrom-SVN: r20243", "tree": {"sha": "8b7b568cba192b365198f55d2e5552643d76ee81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b7b568cba192b365198f55d2e5552643d76ee81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2db4599393fa0727729a9106fd14582188539331", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2db4599393fa0727729a9106fd14582188539331", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2db4599393fa0727729a9106fd14582188539331", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2db4599393fa0727729a9106fd14582188539331/comments", "author": null, "committer": null, "parents": [{"sha": "192231fbe54b828f716f9ec44ed298dc61d6601c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/192231fbe54b828f716f9ec44ed298dc61d6601c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/192231fbe54b828f716f9ec44ed298dc61d6601c"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "c14859301d8aefc962445c4b59651ce639a270dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2db4599393fa0727729a9106fd14582188539331/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2db4599393fa0727729a9106fd14582188539331/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2db4599393fa0727729a9106fd14582188539331", "patch": "@@ -1,3 +1,8 @@\n+Fri Jun  5 12:29:28 1998  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* haifa-sched.c (rank_for_schedule): For \"equally good insns\", prefer\n+\tthe insn which has the most insns dependent on it.\n+\n Fri Jun  5 09:03:22 1998  John Carr  <jfc@mit.edu>\n \n \t* alias.c (find_base_value): Avoid reading past\tend of reg_base_value."}, {"sha": "fed2a129f9ac7e459cc8c86bdd799d31cf4194cc", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2db4599393fa0727729a9106fd14582188539331/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2db4599393fa0727729a9106fd14582188539331/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=2db4599393fa0727729a9106fd14582188539331", "patch": "@@ -87,7 +87,8 @@\n    broken by\n    6.  choose insn with the least dependences upon the previously\n    scheduled insn, or finally\n-   7.  choose insn with lowest UID.\n+   7   choose the insn which has the most insns dependent on it.\n+   8.  choose insn with lowest UID.\n \n    Memory references complicate matters.  Only if we can be certain\n    that memory references are not part of the data dependency graph\n@@ -4029,7 +4030,7 @@ rank_for_schedule (x, y)\n   rtx tmp = *(rtx *)y;\n   rtx tmp2 = *(rtx *)x;\n   rtx link;\n-  int tmp_class, tmp2_class;\n+  int tmp_class, tmp2_class, depend_count1, depend_count2;\n   int val, priority_val, spec_val, prob_val, weight_val;\n \n \n@@ -4090,6 +4091,21 @@ rank_for_schedule (x, y)\n \treturn val;\n     }\n \n+  /* Prefer the insn which has more later insns that depend on it. \n+     This gives the scheduler more freedom when scheduling later\n+     instructions at the expense of added register pressure.  */\n+  depend_count1 = 0;\n+  for (link = INSN_DEPEND (tmp); link; link = XEXP (link, 1))\n+    depend_count1++;\n+\n+  depend_count2 = 0;\n+  for (link = INSN_DEPEND (tmp2); link; link = XEXP (link, 1))\n+    depend_count2++;\n+\n+  val = depend_count2 - depend_count1;\n+  if (val)\n+    return val;\n+  \n   /* If insns are equally good, sort by INSN_LUID (original insn order),\n      so that we make the sort stable.  This minimizes instruction movement,\n      thus minimizing sched's effect on debugging and cross-jumping.  */"}]}