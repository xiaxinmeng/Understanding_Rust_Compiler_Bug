{"sha": "4672940951fd298f1a8ffd5e32a53fb5a08c3877", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY3Mjk0MDk1MWZkMjk4ZjFhOGZmZDVlMzJhNTNmYjVhMDhjMzg3Nw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2013-07-05T09:52:38Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-07-05T09:52:38Z"}, "message": "gnat_rm.texi, [...]: Minor comment/text fixes.\n\n2013-07-05  Robert Dewar  <dewar@adacore.com>\n\n\t* gnat_rm.texi, sem_prag.adb: Minor comment/text fixes.\n\nFrom-SVN: r200697", "tree": {"sha": "23e8e4764016e7dd34afdb42e1e761b0241fe16a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23e8e4764016e7dd34afdb42e1e761b0241fe16a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4672940951fd298f1a8ffd5e32a53fb5a08c3877", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4672940951fd298f1a8ffd5e32a53fb5a08c3877", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4672940951fd298f1a8ffd5e32a53fb5a08c3877", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4672940951fd298f1a8ffd5e32a53fb5a08c3877/comments", "author": null, "committer": null, "parents": [{"sha": "e4e61dce547165b2f34e0a02a3539e3de599b5e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4e61dce547165b2f34e0a02a3539e3de599b5e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4e61dce547165b2f34e0a02a3539e3de599b5e8"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "01d84ba0d11f5d8239b0d62bec056f2061e9318f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4672940951fd298f1a8ffd5e32a53fb5a08c3877/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4672940951fd298f1a8ffd5e32a53fb5a08c3877/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4672940951fd298f1a8ffd5e32a53fb5a08c3877", "patch": "@@ -1,3 +1,7 @@\n+2013-07-05  Robert Dewar  <dewar@adacore.com>\n+\n+\t* gnat_rm.texi, sem_prag.adb: Minor comment/text fixes.\n+\n 2013-07-05  Robert Dewar  <dewar@adacore.com>\n \n \t* gnat_rm.texi: Add missing doc for various pragmas."}, {"sha": "312e0a8ca3da39134e61aa1806df1be8d3a921ce", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4672940951fd298f1a8ffd5e32a53fb5a08c3877/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4672940951fd298f1a8ffd5e32a53fb5a08c3877/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=4672940951fd298f1a8ffd5e32a53fb5a08c3877", "patch": "@@ -5540,6 +5540,12 @@ semantics are identical to pragma Atomic.\n @node Pragma Short_Circuit_And_Or\n @unnumberedsec Pragma Short_Circuit_And_Or\n @findex Short_Circuit_And_Or\n+@noindent\n+Syntax:\n+\n+@smallexample @c ada\n+pragma Short_Circuit_And_Or;\n+@end smallexample\n \n @noindent\n This configuration pragma causes any occurrence of the AND operator applied to"}, {"sha": "553ce2131dde8b99aa8936c426e38c1e8ccbbfe5", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4672940951fd298f1a8ffd5e32a53fb5a08c3877/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4672940951fd298f1a8ffd5e32a53fb5a08c3877/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=4672940951fd298f1a8ffd5e32a53fb5a08c3877", "patch": "@@ -5997,6 +5997,8 @@ package body Sem_Prag is\n          Check_No_Identifiers;\n          Check_At_Least_N_Arguments (1);\n \n+         --  Check all arguments are names of generic units or instances\n+\n          Arg := Arg1;\n          while Present (Arg) loop\n             Exp := Get_Pragma_Arg (Arg);\n@@ -16059,6 +16061,8 @@ package body Sem_Prag is\n          -- Short_Circuit_And_Or --\n          --------------------------\n \n+         --  pragma Short_Circuit_And_Or;\n+\n          when Pragma_Short_Circuit_And_Or =>\n             GNAT_Pragma;\n             Check_Arg_Count (0);\n@@ -16069,7 +16073,9 @@ package body Sem_Prag is\n          -- Share_Generic --\n          -------------------\n \n-         --  pragma Share_Generic (NAME {, NAME});\n+         --  pragma Share_Generic (GNAME {, GNAME});\n+\n+         --  GNAME ::= generic_unit_NAME | generic_instance_NAME\n \n          when Pragma_Share_Generic =>\n             GNAT_Pragma;"}]}