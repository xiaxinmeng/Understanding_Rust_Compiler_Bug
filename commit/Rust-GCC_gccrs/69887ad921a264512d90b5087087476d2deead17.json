{"sha": "69887ad921a264512d90b5087087476d2deead17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk4ODdhZDkyMWEyNjQ1MTJkOTBiNTA4NzA4NzQ3NmQyZGVlYWQxNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-08T22:08:42Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-08T22:08:42Z"}, "message": "Remove previous Berg change.\n\nFrom-SVN: r6998", "tree": {"sha": "f6141f857be19f898559843011a72ebd7561ab55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6141f857be19f898559843011a72ebd7561ab55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69887ad921a264512d90b5087087476d2deead17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69887ad921a264512d90b5087087476d2deead17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69887ad921a264512d90b5087087476d2deead17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69887ad921a264512d90b5087087476d2deead17/comments", "author": null, "committer": null, "parents": [{"sha": "e0bfcea5c918f2a20437d58cdb22ad83e4851eb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0bfcea5c918f2a20437d58cdb22ad83e4851eb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0bfcea5c918f2a20437d58cdb22ad83e4851eb5"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "35d457313594019eeda9ac4fef27161426acaf0b", "filename": "gcc/caller-save.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69887ad921a264512d90b5087087476d2deead17/gcc%2Fcaller-save.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69887ad921a264512d90b5087087476d2deead17/gcc%2Fcaller-save.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcaller-save.c?ref=69887ad921a264512d90b5087087476d2deead17", "patch": "@@ -406,7 +406,11 @@ save_call_clobbered_regs (insn_mode)\n \t saved because we restore all of them before the end of the basic\n \t block.  */\n \n-      COPY_HARD_REG_SET (hard_regs_live, *regs_live);\n+#ifdef HARD_REG_SET\n+      hard_regs_live = *regs_live;\n+#else\n+      COPY_HARD_REG_SET (hard_regs_live, regs_live);\n+#endif\n \n       CLEAR_HARD_REG_SET (hard_regs_saved);\n       CLEAR_HARD_REG_SET (hard_regs_need_restore);"}, {"sha": "cbc9f008f37f3734b8527d339fab350ec5cbbf87", "filename": "gcc/global.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69887ad921a264512d90b5087087476d2deead17/gcc%2Fglobal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69887ad921a264512d90b5087087476d2deead17/gcc%2Fglobal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fglobal.c?ref=69887ad921a264512d90b5087087476d2deead17", "patch": "@@ -625,8 +625,11 @@ global_conflicts ()\n \tregister regset old = basic_block_live_at_start[b];\n \tint ax = 0;\n \n-\tCOPY_HARD_REG_SET (hard_regs_live, old[0]);\n-\n+#ifdef HARD_REG_SET\n+\thard_regs_live = old[0];\n+#else\n+\tCOPY_HARD_REG_SET (hard_regs_live, old);\n+#endif\n \tfor (offset = 0, i = 0; offset < regset_size; offset++)\n \t  if (old[offset] == 0)\n \t    i += REGSET_ELT_BITS;"}, {"sha": "a7b272f8de456912e9113621460b5946df733f68", "filename": "gcc/local-alloc.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69887ad921a264512d90b5087087476d2deead17/gcc%2Flocal-alloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69887ad921a264512d90b5087087476d2deead17/gcc%2Flocal-alloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flocal-alloc.c?ref=69887ad921a264512d90b5087087476d2deead17", "patch": "@@ -1131,7 +1131,11 @@ block_alloc (b)\n \n   /* Initialize table of hardware registers currently live.  */\n \n-  COPY_HARD_REG_SET (regs_live, *basic_block_live_at_start[b]);\n+#ifdef HARD_REG_SET\n+  regs_live = *basic_block_live_at_start[b];\n+#else\n+  COPY_HARD_REG_SET (regs_live, basic_block_live_at_start[b]);\n+#endif\n \n   /* This loop scans the instructions of the basic block\n      and assigns quantities to registers."}, {"sha": "d4ebbabf84baef5423e08b9acdaeed80deb90dde", "filename": "gcc/reorg.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69887ad921a264512d90b5087087476d2deead17/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69887ad921a264512d90b5087087476d2deead17/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=69887ad921a264512d90b5087087476d2deead17", "patch": "@@ -2399,7 +2399,11 @@ mark_target_live_regs (target, res)\n \t marked live, plus live pseudo regs that have been renumbered to\n \t hard regs.  */\n \n-      COPY_HARD_REG_SET (current_live_regs, *regs_live);\n+#ifdef HARD_REG_SET\n+      current_live_regs = *regs_live;\n+#else\n+      COPY_HARD_REG_SET (current_live_regs, regs_live);\n+#endif\n \n       for (offset = 0, i = 0; offset < regset_size; offset++)\n \t{"}]}