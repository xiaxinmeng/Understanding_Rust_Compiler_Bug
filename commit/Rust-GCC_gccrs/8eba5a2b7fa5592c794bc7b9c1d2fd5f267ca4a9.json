{"sha": "8eba5a2b7fa5592c794bc7b9c1d2fd5f267ca4a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGViYTVhMmI3ZmE1NTkyYzc5NGJjN2I5YzFkMmZkNWYyNjdjYTRhOQ==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2001-09-23T01:05:55Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2001-09-23T01:05:55Z"}, "message": "misc fixes\n\nFrom-SVN: r45758", "tree": {"sha": "d5961a79b911430bc7bf41fbed8f936626b1fe43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5961a79b911430bc7bf41fbed8f936626b1fe43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8eba5a2b7fa5592c794bc7b9c1d2fd5f267ca4a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eba5a2b7fa5592c794bc7b9c1d2fd5f267ca4a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eba5a2b7fa5592c794bc7b9c1d2fd5f267ca4a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eba5a2b7fa5592c794bc7b9c1d2fd5f267ca4a9/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "040cc0718f8b93a667211eac1c95e86fc591c16f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040cc0718f8b93a667211eac1c95e86fc591c16f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/040cc0718f8b93a667211eac1c95e86fc591c16f"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "506b21a7d60c5632d083fa8e70d09652eb725402", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eba5a2b7fa5592c794bc7b9c1d2fd5f267ca4a9/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eba5a2b7fa5592c794bc7b9c1d2fd5f267ca4a9/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=8eba5a2b7fa5592c794bc7b9c1d2fd5f267ca4a9", "patch": "@@ -1,3 +1,16 @@\n+2001-09-22  Anthony Green  <green@redhat.com>\n+\n+ \t* java/security/DummyKeyPairGenerator.java (initialize): New\n+ \tmethod (with AlgorithmParameterSpec argument).\n+\n+2001-09-22  Anthony Green  <green@redhat.com>\n+\n+\t* java/security/spec/EncodedKeySpec.java: Implements KeySpec.\n+\n+\t* gnu/java/security/provider/SHA1PRNG.java: Extend from\n+\tSecureRandomSpi.  \n+\t(engineNextBytes): Fix order of memory copies.\n+\t\n 2001-09-21  Richard Henderson  <rth@redhat.com>\n \n \t* include/jvm.h (_Jv_VTable): Handle function descriptors for ia64;"}, {"sha": "bb34ef0f189f43181b4911d397e93665eef2d6e1", "filename": "libjava/gnu/java/security/provider/SHA1PRNG.java", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eba5a2b7fa5592c794bc7b9c1d2fd5f267ca4a9/libjava%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FSHA1PRNG.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eba5a2b7fa5592c794bc7b9c1d2fd5f267ca4a9/libjava%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FSHA1PRNG.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FSHA1PRNG.java?ref=8eba5a2b7fa5592c794bc7b9c1d2fd5f267ca4a9", "patch": "@@ -28,13 +28,12 @@\n package gnu.java.security.provider;\n \n import java.util.Random;\n-// import java.security.SecureRandomSpi;\n+import java.security.SecureRandomSpi;\n import java.security.MessageDigest;\n import java.security.NoSuchAlgorithmException;\n import java.io.Serializable;\n \n-// public class SHA1PRNG extends SecureRandomSpi implements Serializable\n-public class SHA1PRNG implements Serializable\n+public class SHA1PRNG extends SecureRandomSpi implements Serializable\n {\n   MessageDigest digest;\n   byte seed[];\n@@ -76,7 +75,7 @@ public void engineNextBytes(byte[] bytes)\n   {\n \n     if( bytes.length < (20 - datapos) ) {\n-      System.arraycopy( bytes, 0, data, datapos, bytes.length);\n+      System.arraycopy( data, datapos, bytes, 0, bytes.length);\n       datapos += bytes.length;\n       return;\n     }\n@@ -85,7 +84,7 @@ public void engineNextBytes(byte[] bytes)\n     byte digestdata[];\n     while( bpos < blen ) {\n       i = 20 - datapos;\n-      System.arraycopy( bytes, bpos, data, datapos, i);\n+      System.arraycopy( data, datapos, bytes, bpos, i);\n       bpos += i;\n       datapos += i;\n       if( datapos >= 20) {"}, {"sha": "32605765416833a973267d17341a50555c8f6170", "filename": "libjava/java/security/DummyKeyPairGenerator.java", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eba5a2b7fa5592c794bc7b9c1d2fd5f267ca4a9/libjava%2Fjava%2Fsecurity%2FDummyKeyPairGenerator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eba5a2b7fa5592c794bc7b9c1d2fd5f267ca4a9/libjava%2Fjava%2Fsecurity%2FDummyKeyPairGenerator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FDummyKeyPairGenerator.java?ref=8eba5a2b7fa5592c794bc7b9c1d2fd5f267ca4a9", "patch": "@@ -25,6 +25,7 @@\n executable file might be covered by the GNU General Public License. */\n \n package java.security;\n+import java.security.spec.AlgorithmParameterSpec;\n \n final class DummyKeyPairGenerator extends KeyPairGenerator\n {\n@@ -41,6 +42,12 @@ public void initialize(int keysize, SecureRandom random)\n     kpgSpi.initialize(keysize, random);\n   }\n \n+  public void initialize(AlgorithmParameterSpec params, SecureRandom random)\n+    throws InvalidAlgorithmParameterException\n+  {\n+    kpgSpi.initialize(params, random);\n+  }\n+\n   public KeyPair generateKeyPair()\n   {\n     return kpgSpi.generateKeyPair();"}, {"sha": "2d6bd120caaa56004e813046cdef2f75cbc6be70", "filename": "libjava/java/security/spec/EncodedKeySpec.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eba5a2b7fa5592c794bc7b9c1d2fd5f267ca4a9/libjava%2Fjava%2Fsecurity%2Fspec%2FEncodedKeySpec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eba5a2b7fa5592c794bc7b9c1d2fd5f267ca4a9/libjava%2Fjava%2Fsecurity%2Fspec%2FEncodedKeySpec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2Fspec%2FEncodedKeySpec.java?ref=8eba5a2b7fa5592c794bc7b9c1d2fd5f267ca4a9", "patch": "@@ -35,7 +35,7 @@\n \n \t@author Mark Benvenuto\n */\n-public abstract class EncodedKeySpec \n+public abstract class EncodedKeySpec implements KeySpec\n {\n \n   private byte[] encodedKey;"}]}