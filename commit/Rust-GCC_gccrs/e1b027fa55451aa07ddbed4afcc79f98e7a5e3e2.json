{"sha": "e1b027fa55451aa07ddbed4afcc79f98e7a5e3e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTFiMDI3ZmE1NTQ1MWFhMDdkZGJlZDRhZmNjNzlmOThlN2E1ZTNlMg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-01-04T05:46:01Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-01-04T05:46:01Z"}, "message": "(perform_*): Rename macro args to arg0, arg1.\n\nFrom-SVN: r3084", "tree": {"sha": "bb4a1ecde891d2aab9cbd5baad1da9166b7ada61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb4a1ecde891d2aab9cbd5baad1da9166b7ada61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1b027fa55451aa07ddbed4afcc79f98e7a5e3e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1b027fa55451aa07ddbed4afcc79f98e7a5e3e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1b027fa55451aa07ddbed4afcc79f98e7a5e3e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1b027fa55451aa07ddbed4afcc79f98e7a5e3e2/comments", "author": null, "committer": null, "parents": [{"sha": "63671b345fa788e85633b04d68b554813a18a78e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63671b345fa788e85633b04d68b554813a18a78e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63671b345fa788e85633b04d68b554813a18a78e"}], "stats": {"total": 31, "additions": 17, "deletions": 14}, "files": [{"sha": "a67415f4cb324808d533ec247923844dc3fa69d4", "filename": "gcc/config/i386/386bsd.h", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1b027fa55451aa07ddbed4afcc79f98e7a5e3e2/gcc%2Fconfig%2Fi386%2F386bsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1b027fa55451aa07ddbed4afcc79f98e7a5e3e2/gcc%2Fconfig%2Fi386%2F386bsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2F386bsd.h?ref=e1b027fa55451aa07ddbed4afcc79f98e7a5e3e2", "patch": "@@ -64,50 +64,53 @@\n    call libgcc for these functions.  But programs might be linked with\n    code compiled by gcc 1, and then these will be used.  */\n \n-#define perform_udivsi3(a,b)\t\t\t\t\t\t\\\n+/* The arg names used to be a and b, but `a' appears inside strings\n+   and that confuses non-ANSI cpp.  */\n+\n+#define perform_udivsi3(arg0,arg1)\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   register int dx asm(\"dx\");\t\t\t\t\t\t\\\n   register int ax asm(\"ax\");\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   dx = 0;\t\t\t\t\t\t\t\t\\\n-  ax = a;\t\t\t\t\t\t\t\t\\\n-  asm (\"divl %3\" : \"=a\" (ax), \"=d\" (dx) : \"a\" (ax), \"g\" (b), \"d\" (dx));\t\\\n+  ax = arg0;\t\t\t\t\t\t\t\t\\\n+  asm (\"divl %3\" : \"=a\" (ax), \"=d\" (dx) : \"a\" (ax), \"g\" (arg1), \"d\" (dx)); \\\n   return ax;\t\t\t\t\t\t\t\t\\\n }\n \n-#define perform_divsi3(a,b)\t\t\t\t\t\t\\\n+#define perform_divsi3(arg0,arg1)\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   register int dx asm(\"dx\");\t\t\t\t\t\t\\\n   register int ax asm(\"ax\");\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  ax = a;\t\t\t\t\t\t\t\t\\\n-  asm (\"cltd\\n\\tidivl %3\" : \"=a\" (ax), \"=d\" (dx) : \"a\" (ax), \"g\" (b));\t\\\n+  ax = arg0;\t\t\t\t\t\t\t\t\\\n+  asm (\"cltd\\n\\tidivl %3\" : \"=a\" (ax), \"=d\" (dx) : \"a\" (ax), \"g\" (arg1)); \\\n   return ax;\t\t\t\t\t\t\t\t\\\n }\n \n-#define perform_umodsi3(a,b)\t\t\t\t\t\t\\\n+#define perform_umodsi3(arg0,arg1)\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   register int dx asm(\"dx\");\t\t\t\t\t\t\\\n   register int ax asm(\"ax\");\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n   dx = 0;\t\t\t\t\t\t\t\t\\\n-  ax = a;\t\t\t\t\t\t\t\t\\\n-  asm (\"divl %3\" : \"=a\" (ax), \"=d\" (dx) : \"a\" (ax), \"g\" (b), \"d\" (dx));\t\\\n+  ax = arg0;\t\t\t\t\t\t\t\t\\\n+  asm (\"divl %3\" : \"=a\" (ax), \"=d\" (dx) : \"a\" (ax), \"g\" (arg1), \"d\" (dx)); \\\n   return dx;\t\t\t\t\t\t\t\t\\\n }\n \n-#define perform_modsi3(a,b)\t\t\t\t\t\t\\\n+#define perform_modsi3(arg0,arg1)\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   register int dx asm(\"dx\");\t\t\t\t\t\t\\\n   register int ax asm(\"ax\");\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-  ax = a;\t\t\t\t\t\t\t\t\\\n-  asm (\"cltd\\n\\tidivl %3\" : \"=a\" (ax), \"=d\" (dx) : \"a\" (ax), \"g\" (b));\t\\\n+  ax = arg0;\t\t\t\t\t\t\t\t\\\n+  asm (\"cltd\\n\\tidivl %3\" : \"=a\" (ax), \"=d\" (dx) : \"a\" (ax), \"g\" (arg1)); \\\n   return dx;\t\t\t\t\t\t\t\t\\\n }\n \n \n-#define perform_fixdfsi(a)\t\t\t\t\t\t\\\n+#define perform_fixdfsi(arg0)\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   auto unsigned short ostatus;\t\t\t\t\t\t\\\n   auto unsigned short nstatus;\t\t\t\t\t\t\\\n@@ -122,7 +125,7 @@\n   asm volatile (\"fnstcw %0\" : \"=m\" (ostatus));\t\t\t\t\\\n   nstatus = ostatus | 0x0c00;\t\t\t\t\t\t\\\n   asm volatile (\"fldcw %0\" : /* no outputs */ : \"m\" (nstatus));\t\t\\\n-  tmp = a;\t\t\t\t\t\t\t\t\\\n+  tmp = arg0;\t\t\t\t\t\t\t\t\\\n   asm volatile (\"fldl %0\" : /* no outputs */ : \"m\" (tmp));\t\t\\\n   asm volatile (\"fistpl %0\" : \"=m\" (ret));\t\t\t\t\\\n   asm volatile (\"fldcw %0\" : /* no outputs */ : \"m\" (ostatus));\t\t\\"}]}