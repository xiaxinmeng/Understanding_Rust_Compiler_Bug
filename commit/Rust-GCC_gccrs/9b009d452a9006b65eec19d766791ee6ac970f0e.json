{"sha": "9b009d452a9006b65eec19d766791ee6ac970f0e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIwMDlkNDUyYTkwMDZiNjVlZWMxOWQ3NjY3OTFlZTZhYzk3MGYwZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-07-19T21:59:19Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-07-19T21:59:19Z"}, "message": "(override_options): Allow processor of ev56 or 21164a.\n\n(input_operand, case MEM): Correct test involving TARGET_BYTE_OPS.\n\nFrom-SVN: r14494", "tree": {"sha": "5f9bfdf4e4ee35b65708054bcff3686689900a07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f9bfdf4e4ee35b65708054bcff3686689900a07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b009d452a9006b65eec19d766791ee6ac970f0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b009d452a9006b65eec19d766791ee6ac970f0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b009d452a9006b65eec19d766791ee6ac970f0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b009d452a9006b65eec19d766791ee6ac970f0e/comments", "author": null, "committer": null, "parents": [{"sha": "818b66cca8d0fb62d6d4dbf9a63d9d790c44ae63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/818b66cca8d0fb62d6d4dbf9a63d9d790c44ae63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/818b66cca8d0fb62d6d4dbf9a63d9d790c44ae63"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "25943ff6d3476a70d35603adc5da77df48e81f29", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b009d452a9006b65eec19d766791ee6ac970f0e/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b009d452a9006b65eec19d766791ee6ac970f0e/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=9b009d452a9006b65eec19d766791ee6ac970f0e", "patch": "@@ -39,7 +39,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"tree.h\"\n \n /* Specify which cpu to schedule for. */\n- enum processor_type alpha_cpu;\n+enum processor_type alpha_cpu;\n \n /* Specify how accurate floating-point traps need to be.  */\n \n@@ -115,6 +115,12 @@ override_options ()\n       else if (! strcmp (alpha_cpu_string, \"ev5\")\n \t       || ! strcmp (alpha_cpu_string, \"21164\"))\n \talpha_cpu = PROCESSOR_EV5;\n+      else if (! strcmp (alpha_cpu_string, \"ev56\")\n+\t       || ! strcmp (alpha_cpu_string, \"21164a\"))\n+\t{\n+\t  alpha_cpu = PROCESSOR_EV5;\n+\t  target_flags |= MASK_BYTE_OPS;\n+\t}\n       else\n \terror (\"bad value `%s' for -mcpu switch\", alpha_cpu_string);\n     }\n@@ -469,7 +475,7 @@ input_operand (op, mode)\n \treturn 1;\n       /* ... fall through ... */\n     case MEM:\n-      return (TARGET_BYTE_OPS || (mode != HImode && mode != QImode)\n+      return ((TARGET_BYTE_OPS || (mode != HImode && mode != QImode))\n \t      && general_operand (op, mode));\n \n     case CONST_DOUBLE:"}]}