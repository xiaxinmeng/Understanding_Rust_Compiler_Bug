{"sha": "d0ed412a967910ba8fe96f328a22dc72e945181a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBlZDQxMmE5Njc5MTBiYThmZTk2ZjMyOGEyMmRjNzJlOTQ1MTgxYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-03-24T13:41:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-03-24T13:41:30Z"}, "message": "re PR debug/19192 (Current development gcc generates inaccurate line info for example code)\n\n\tPR debug/19192\n\tPR debug/43479\n\t* cfgexpand.c (gimple_assign_rhs_to_tree): Also set TREE_BLOCK\n\tfrom gimple_block.\n\t* expr.c (expand_expr_real): Restore previous\n\tcurr_insn_source_location and curr_insn_block after\n\texpand_expr_real_1 call.\n\t(expand_expr_real_1) <case SSA_NAME>: Call expand_expr_real\n\tinstead of expand_expr_real_1.\n\n\t* gcc.dg/guality/pr43479.c: New test.\n\t* gcc.dg/debug/dwarf2/inline2.c (third): Make a a global var\n\tand add volatile keyword.\n\nFrom-SVN: r157693", "tree": {"sha": "20f32d2f9c282d0e29f5a06f4b4707bb295fab42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20f32d2f9c282d0e29f5a06f4b4707bb295fab42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0ed412a967910ba8fe96f328a22dc72e945181a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0ed412a967910ba8fe96f328a22dc72e945181a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0ed412a967910ba8fe96f328a22dc72e945181a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0ed412a967910ba8fe96f328a22dc72e945181a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "012cd3b6b52f81950a23953ef21e383d7bd29d06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/012cd3b6b52f81950a23953ef21e383d7bd29d06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/012cd3b6b52f81950a23953ef21e383d7bd29d06"}], "stats": {"total": 73, "additions": 68, "deletions": 5}, "files": [{"sha": "62aef06388f50852867294911d91e808df6a1acb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ed412a967910ba8fe96f328a22dc72e945181a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ed412a967910ba8fe96f328a22dc72e945181a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d0ed412a967910ba8fe96f328a22dc72e945181a", "patch": "@@ -1,3 +1,15 @@\n+2010-03-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/19192\n+\tPR debug/43479\n+\t* cfgexpand.c (gimple_assign_rhs_to_tree): Also set TREE_BLOCK\n+\tfrom gimple_block.\n+\t* expr.c (expand_expr_real): Restore previous\n+\tcurr_insn_source_location and curr_insn_block after\n+\texpand_expr_real_1 call.\n+\t(expand_expr_real_1) <case SSA_NAME>: Call expand_expr_real\n+\tinstead of expand_expr_real_1.\n+\n 2010-03-23  Mike Stump  <mikestump@comcast.net>\n \n \tPR target/33120"}, {"sha": "a797af9a167936b644d191a4845ba40d8b68f428", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ed412a967910ba8fe96f328a22dc72e945181a/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ed412a967910ba8fe96f328a22dc72e945181a/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=d0ed412a967910ba8fe96f328a22dc72e945181a", "patch": "@@ -77,15 +77,21 @@ gimple_assign_rhs_to_tree (gimple stmt)\n     {\n       t = gimple_assign_rhs1 (stmt);\n       /* Avoid modifying this tree in place below.  */\n-      if (gimple_has_location (stmt) && CAN_HAVE_LOCATION_P (t)\n-\t  && gimple_location (stmt) != EXPR_LOCATION (t))\n+      if ((gimple_has_location (stmt) && CAN_HAVE_LOCATION_P (t)\n+\t   && gimple_location (stmt) != EXPR_LOCATION (t))\n+\t  || (gimple_block (stmt)\n+\t      && currently_expanding_to_rtl\n+\t      && EXPR_P (t)\n+\t      && gimple_block (stmt) != TREE_BLOCK (t)))\n \tt = copy_node (t);\n     }\n   else\n     gcc_unreachable ();\n \n   if (gimple_has_location (stmt) && CAN_HAVE_LOCATION_P (t))\n     SET_EXPR_LOCATION (t, gimple_location (stmt));\n+  if (gimple_block (stmt) && currently_expanding_to_rtl && EXPR_P (t))\n+    TREE_BLOCK (t) = gimple_block (stmt);\n \n   return t;\n }"}, {"sha": "ad66d934d2f324532d1e6436a6dace93db132ed3", "filename": "gcc/expr.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ed412a967910ba8fe96f328a22dc72e945181a/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ed412a967910ba8fe96f328a22dc72e945181a/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=d0ed412a967910ba8fe96f328a22dc72e945181a", "patch": "@@ -7176,6 +7176,8 @@ expand_expr_real (tree exp, rtx target, enum machine_mode tmode,\n   if (cfun && EXPR_HAS_LOCATION (exp))\n     {\n       location_t saved_location = input_location;\n+      location_t saved_curr_loc = get_curr_insn_source_location ();\n+      tree saved_block = get_curr_insn_block ();\n       input_location = EXPR_LOCATION (exp);\n       set_curr_insn_source_location (input_location);\n \n@@ -7185,6 +7187,8 @@ expand_expr_real (tree exp, rtx target, enum machine_mode tmode,\n       ret = expand_expr_real_1 (exp, target, tmode, modifier, alt_rtl);\n \n       input_location = saved_location;\n+      set_curr_insn_block (saved_block);\n+      set_curr_insn_source_location (saved_curr_loc);\n     }\n   else\n     {\n@@ -8409,8 +8413,8 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n       {\n \tgimple g = get_gimple_for_ssa_name (exp);\n \tif (g)\n-\t  return expand_expr_real_1 (gimple_assign_rhs_to_tree (g), target,\n-\t\t\t\t     tmode, modifier, NULL);\n+\t  return expand_expr_real (gimple_assign_rhs_to_tree (g), target,\n+\t\t\t\t   tmode, modifier, NULL);\n       }\n       decl_rtl = get_rtx_for_ssa_name (exp);\n       exp = SSA_NAME_VAR (exp);"}, {"sha": "81510249632fdbcd14b1089d75abf05d4d537d53", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ed412a967910ba8fe96f328a22dc72e945181a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ed412a967910ba8fe96f328a22dc72e945181a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d0ed412a967910ba8fe96f328a22dc72e945181a", "patch": "@@ -1,3 +1,11 @@\n+2010-03-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/19192\n+\tPR debug/43479\n+\t* gcc.dg/guality/pr43479.c: New test.\n+\t* gcc.dg/debug/dwarf2/inline2.c (third): Make a a global var\n+\tand add volatile keyword.\n+\n 2010-03-23  Mike Stump  <mikestump@comcast.net>\n \n \t* g++.dg/warn/Wstrict-aliasing-float-ref-int-obj.C: Enhance portability."}, {"sha": "06d1b59c3b16c8e3f8646d7994bb2bd097355fe7", "filename": "gcc/testsuite/gcc.dg/debug/dwarf2/inline2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ed412a967910ba8fe96f328a22dc72e945181a/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Finline2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ed412a967910ba8fe96f328a22dc72e945181a/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Finline2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Finline2.c?ref=d0ed412a967910ba8fe96f328a22dc72e945181a", "patch": "@@ -36,12 +36,12 @@\n    actually inlined.  */\n /* { dg-final { scan-assembler-times  \"(?:byte|data1)\\[^\\n\\]*0x3\\[^\\n\\]* DW_AT_inline\" 3 } } */\n \n+volatile int *a;\n \n inline void\n third (int arg3)\n {\n   int var3 = arg3;\n-  int* a = 0;\n   a[0] = var3;\n }\n "}, {"sha": "e0bc246cdae7b3122a16f05e25c64cdf4902c04d", "filename": "gcc/testsuite/gcc.dg/guality/pr43479.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ed412a967910ba8fe96f328a22dc72e945181a/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43479.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ed412a967910ba8fe96f328a22dc72e945181a/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43479.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr43479.c?ref=d0ed412a967910ba8fe96f328a22dc72e945181a", "patch": "@@ -0,0 +1,33 @@\n+/* PR debug/43479 */\n+/* { dg-do run } */\n+/* { dg-options \"-g\" } */\n+\n+__attribute__((noinline)) void\n+foo (int k, int l, int m, int n)\n+{\n+  l++;\n+  {\n+    int h = n;\n+    {\n+      int i = k;\n+      k++;\t/* { dg-final { gdb-test 13 \"i\" \"6\" } } */\n+    }\t\t/* { dg-final { gdb-test 13 \"h\" \"9\" } } */\n+\t\t/* { dg-final { gdb-test 13 \"n\" \"9\" } } */\n+    {\n+      int j = m;\n+      m++;\t/* { dg-final { gdb-test 18 \"j\" \"8\" } } */\n+    }\t\t/* { dg-final { gdb-test 18 \"h\" \"9\" } } */\n+\t\t/* { dg-final { gdb-test 12 \"n\" \"9\" } } */\n+  }\n+  asm volatile (\"\" : : \"r\" (k), \"r\" (l));\n+  asm volatile (\"\" : : \"r\" (m), \"r\" (n));\n+}\n+\n+int\n+main (void)\n+{\n+  int q = 6;\n+  asm (\"\" : \"+r\" (q));\n+  foo (q, q + 1, q + 2, q + 3);\n+  return 0;\n+}"}]}