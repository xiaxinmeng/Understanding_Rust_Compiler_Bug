{"sha": "b16bcb178a4671d33cc6a8f82e93b93518230cf3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE2YmNiMTc4YTQ2NzFkMzNjYzZhOGY4MmU5M2I5MzUxODIzMGNmMw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-12-08T02:04:57Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-12-08T02:04:57Z"}, "message": "tree-pretty-print.c (dump_array_domain): Split out from dump_generic_node; fix off-by-one error on zero-based array bounds.\n\n        * tree-pretty-print.c (dump_array_domain): Split out from\n        dump_generic_node; fix off-by-one error on zero-based array bounds.\n        (dump_generic_node): Use it.\n        (print_declaration): Likewise.\n\nFrom-SVN: r91850", "tree": {"sha": "c6e4eb8f5b0aed4a5c5049a830e01d9dc4808f07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6e4eb8f5b0aed4a5c5049a830e01d9dc4808f07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b16bcb178a4671d33cc6a8f82e93b93518230cf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b16bcb178a4671d33cc6a8f82e93b93518230cf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b16bcb178a4671d33cc6a8f82e93b93518230cf3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b16bcb178a4671d33cc6a8f82e93b93518230cf3/comments", "author": null, "committer": null, "parents": [{"sha": "74515a0a1a73fc58630c1b6116c80dc24638c102", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74515a0a1a73fc58630c1b6116c80dc24638c102", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74515a0a1a73fc58630c1b6116c80dc24638c102"}], "stats": {"total": 81, "additions": 39, "deletions": 42}, "files": [{"sha": "b74fcd8e5163ab90f6e4b724ea8fe5530d0b4393", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b16bcb178a4671d33cc6a8f82e93b93518230cf3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b16bcb178a4671d33cc6a8f82e93b93518230cf3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b16bcb178a4671d33cc6a8f82e93b93518230cf3", "patch": "@@ -1,3 +1,10 @@\n+2004-12-07  Richard Henderson  <rth@redhat.com>\n+\n+\t* tree-pretty-print.c (dump_array_domain): Split out from\n+\tdump_generic_node; fix off-by-one error on zero-based array bounds.\n+\t(dump_generic_node): Use it.\n+\t(print_declaration): Likewise.\n+\n 2004-12-08  Richard Guenther <richard.guenther@uni-tuebingen.de>\n \n \t* doc/invoke.texi: Adjust default values for"}, {"sha": "8f36235eb43d65da64e5f848c62eb986802498e0", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 32, "deletions": 42, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b16bcb178a4671d33cc6a8f82e93b93518230cf3/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b16bcb178a4671d33cc6a8f82e93b93518230cf3/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=b16bcb178a4671d33cc6a8f82e93b93518230cf3", "patch": "@@ -217,6 +217,35 @@ dump_function_declaration (pretty_printer *buffer, tree node,\n   pp_character (buffer, ')');\n }\n \n+/* Dump the domain associated with an array.  */\n+\n+static void\n+dump_array_domain (pretty_printer *buffer, tree domain, int spc, int flags)\n+{\n+  pp_character (buffer, '[');\n+  if (domain)\n+    {\n+      tree min = TYPE_MIN_VALUE (domain);\n+      tree max = TYPE_MAX_VALUE (domain);\n+\n+      if (min && max\n+\t  && integer_zerop (min)\n+\t  && host_integerp (max, 0))\n+\tpp_wide_integer (buffer, TREE_INT_CST_LOW (max) + 1);\n+      else\n+\t{\n+\t  if (min)\n+\t    dump_generic_node (buffer, min, spc, flags, false);\n+\t  pp_character (buffer, ':');\n+\t  if (max)\n+\t    dump_generic_node (buffer, max, spc, flags, false);\n+\t}\n+    }\n+  else\n+    pp_string (buffer, \"<unknown>\");\n+  pp_character (buffer, ']');\n+}\n+\n /* Dump the node NODE on the pretty_printer BUFFER, SPC spaces of indent.\n    FLAGS specifies details to show in the dump (see TDF_* in tree.h).  If\n    IS_STMT is true, the object printed is considered to be a statement\n@@ -427,31 +456,8 @@ dump_generic_node (pretty_printer *buffer, tree node, int spc, int flags,\n \tdump_generic_node (buffer, tmp, spc, flags, false);\n \n \t/* Print the dimensions.  */\n-\tfor (tmp = node; TREE_CODE (tmp) == ARRAY_TYPE;\n-\t     tmp = TREE_TYPE (tmp))\n-\t  {\n-\t    tree domain = TYPE_DOMAIN (tmp);\n-\n-\t    pp_character (buffer, '[');\n-\t    if (domain)\n-\t      {\n-\t\tif (TYPE_MIN_VALUE (domain)\n-\t\t    && !integer_zerop (TYPE_MIN_VALUE (domain)))\n-\t\t  {\n-\t\t    dump_generic_node (buffer, TYPE_MIN_VALUE (domain),\n-\t\t\t\t       spc, flags, false);\n-\t\t    pp_string (buffer, \" .. \");\n-\t\t  }\n-\n-\t\tif (TYPE_MAX_VALUE (domain))\n-\t\t  dump_generic_node (buffer, TYPE_MAX_VALUE (domain),\n-\t\t\t\t     spc, flags, false);\n-\t      }\n-\t    else\n-\t      pp_string (buffer, \"<unknown>\");\n-\n-\t    pp_character (buffer, ']');\n-\t  }\n+\tfor (tmp = node; TREE_CODE (tmp) == ARRAY_TYPE; tmp = TREE_TYPE (tmp))\n+\t  dump_array_domain (buffer, TYPE_DOMAIN (tmp), spc, flags);\n \tbreak;\n       }\n \n@@ -1515,23 +1521,7 @@ print_declaration (pretty_printer *buffer, tree t, int spc, int flags)\n       tmp = TREE_TYPE (t);\n       while (TREE_CODE (tmp) == ARRAY_TYPE)\n \t{\n-\t  pp_character (buffer, '[');\n-\t  if (TYPE_DOMAIN (tmp))\n-\t    {\n-\t      if (TYPE_MIN_VALUE (TYPE_DOMAIN (tmp))\n-\t\t  && !integer_zerop (TYPE_MIN_VALUE (TYPE_DOMAIN (tmp))))\n-\t\t{\n-\t\t  dump_generic_node (buffer,\n-\t\t\t\t     TYPE_MIN_VALUE (TYPE_DOMAIN (tmp)),\n-\t\t\t\t     spc, flags, false);\n-\t\t  pp_string (buffer, \" .. \");\n-\t\t}\n-\n-\t      if (TYPE_MAX_VALUE (TYPE_DOMAIN (tmp)))\n-\t\tdump_generic_node (buffer, TYPE_MAX_VALUE (TYPE_DOMAIN (tmp)),\n-\t\t\t\t   spc, flags, false);\n-\t    }\n-\t  pp_character (buffer, ']');\n+\t  dump_array_domain (buffer, TYPE_DOMAIN (tmp), spc, flags);\n \t  tmp = TREE_TYPE (tmp);\n \t}\n     }"}]}