{"sha": "5068c62534ea09fb508d49be3e596a637eee54d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA2OGM2MjUzNGVhMDlmYjUwOGQ0OWJlM2U1OTZhNjM3ZWVlNTRkMA==", "commit": {"author": {"name": "Thomas Koenig", "email": "Thomas.Koenig@online.de", "date": "2006-03-25T21:31:48Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2006-03-25T21:31:48Z"}, "message": "re PR libfortran/26735 ([4.1 only] -fconvert=swap and implied open)\n\n2006-03-25  Thomas Koenig  <Thomas.Koenig@online.de>\n\n\tPR libfortran/26735\n\t* io/transfer.c (data_transfer_init):  Set u_flags.convert\n\ton an unopened unit if specified by environment variable\n\t(via get_unformatted_convert) or by compile-time option.\n\n2006-03-25  Thomas Koenig  <Thomas.Koenig@online.de>\n\n\tPR libfortran/26735\n\t* gfortran.dg/convert_implied_open.f90:  New test case.\n\nFrom-SVN: r112382", "tree": {"sha": "43f3551e20dd0b93f0b50726351f0865ff0fe609", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43f3551e20dd0b93f0b50726351f0865ff0fe609"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5068c62534ea09fb508d49be3e596a637eee54d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5068c62534ea09fb508d49be3e596a637eee54d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5068c62534ea09fb508d49be3e596a637eee54d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5068c62534ea09fb508d49be3e596a637eee54d0/comments", "author": null, "committer": null, "parents": [{"sha": "9a0fb43ea1f6aabf4668d4ad3faf76c2da4d8647", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a0fb43ea1f6aabf4668d4ad3faf76c2da4d8647", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a0fb43ea1f6aabf4668d4ad3faf76c2da4d8647"}], "stats": {"total": 58, "additions": 58, "deletions": 0}, "files": [{"sha": "7bd5d1f69218bc0cefd2d92608e1107d340a86b5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5068c62534ea09fb508d49be3e596a637eee54d0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5068c62534ea09fb508d49be3e596a637eee54d0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5068c62534ea09fb508d49be3e596a637eee54d0", "patch": "@@ -1,3 +1,8 @@\n+2006-03-25  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR libfortran/26735\n+\t* gfortran.dg/convert_implied_open.f90:  New test case.\n+\n 2006-03-25  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \tPR fortran/26769"}, {"sha": "4066f618cc223f50bd0312ad6a3c781c1caf0d54", "filename": "gcc/testsuite/gfortran.dg/convert_implied_open.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5068c62534ea09fb508d49be3e596a637eee54d0/gcc%2Ftestsuite%2Fgfortran.dg%2Fconvert_implied_open.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5068c62534ea09fb508d49be3e596a637eee54d0/gcc%2Ftestsuite%2Fgfortran.dg%2Fconvert_implied_open.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fconvert_implied_open.f90?ref=5068c62534ea09fb508d49be3e596a637eee54d0", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do run }\n+! { dg-options \"-fconvert=swap\" }\n+! PR 26735 - implied open didn't use to honor -fconvert\n+program main\n+  implicit none\n+  integer (kind=8) :: i1, i2, i3\n+  write (10) 1_8\n+  close (10)\n+  open (10, form=\"unformatted\", access=\"direct\", recl=8)\n+  read (10,rec=1) i1\n+  read (10,rec=2) i2\n+  read (10,rec=3) i3\n+  if (i1 /= 8 .or. i2 /= 1 .or. i3 /= 8) call abort\n+  close (10,status=\"delete\")\n+end program main"}, {"sha": "136556af07e16bfe05b1ba7f70ee91bb75b426d0", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5068c62534ea09fb508d49be3e596a637eee54d0/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5068c62534ea09fb508d49be3e596a637eee54d0/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=5068c62534ea09fb508d49be3e596a637eee54d0", "patch": "@@ -1,3 +1,10 @@\n+2006-03-25  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR libfortran/26735\n+\t* io/transfer.c (data_transfer_init):  Set u_flags.convert\n+\ton an unopened unit if specified by environment variable\n+\t(via get_unformatted_convert) or by compile-time option.\n+\n 2006-03-25  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \tPR fortran/26769"}, {"sha": "5f5f32303c9e3f31e6016c469e1adb7e870784ba", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5068c62534ea09fb508d49be3e596a637eee54d0/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5068c62534ea09fb508d49be3e596a637eee54d0/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=5068c62534ea09fb508d49be3e596a637eee54d0", "patch": "@@ -1390,6 +1390,8 @@ data_transfer_init (st_parameter_dt *dtp, int read_flag)\n   if (dtp->u.p.current_unit->s == NULL)\n   {  /* Open the unit with some default flags.  */\n      st_parameter_open opp;\n+     unit_convert conv;\n+\n      if (dtp->common.unit < 0)\n      {\n        close_unit (dtp->u.p.current_unit);\n@@ -1413,6 +1415,35 @@ data_transfer_init (st_parameter_dt *dtp, int read_flag)\n      u_flags.blank = BLANK_UNSPECIFIED;\n      u_flags.pad = PAD_UNSPECIFIED;\n      u_flags.status = STATUS_UNKNOWN;\n+\n+     conv = get_unformatted_convert (dtp->common.unit);\n+\n+     if (conv == CONVERT_NONE)\n+       conv = compile_options.convert;\n+\n+     /* We use l8_to_l4_offset, which is 0 on little-endian machines\n+\tand 1 on big-endian machines.  */\n+     switch (conv)\n+       {\n+       case CONVERT_NATIVE:\n+       case CONVERT_SWAP:\n+\t break;\n+\t \n+       case CONVERT_BIG:\n+\t conv = l8_to_l4_offset ? CONVERT_NATIVE : CONVERT_SWAP;\n+\t break;\n+      \n+       case CONVERT_LITTLE:\n+\t conv = l8_to_l4_offset ? CONVERT_SWAP : CONVERT_NATIVE;\n+\t break;\n+\t \n+       default:\n+\t internal_error (&opp.common, \"Illegal value for CONVERT\");\n+\t break;\n+       }\n+\n+     u_flags.convert = conv;\n+\n      opp.common = dtp->common;\n      opp.common.flags &= IOPARM_COMMON_MASK;\n      dtp->u.p.current_unit = new_unit (&opp, dtp->u.p.current_unit, &u_flags);"}]}