{"sha": "d2dc5305d87f4e6a1b861f59164c124636e2b69d", "node_id": "C_kwDOANBUbNoAKGQyZGM1MzA1ZDg3ZjRlNmExYjg2MWY1OTE2NGMxMjQ2MzZlMmI2OWQ", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-01-11T14:11:46Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-01-11T15:17:26Z"}, "message": "libstdc++: Make copyable-box completely constexpr (LWG 3572)\n\nThis LWG issue was approved at the October 2021 plenary and can be\nimplemented now that std::optional is fully constexpr.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/ranges (ranges::__detail::__box): Add constexpr to\n\tassignment operators (LWG 3572).\n\t* testsuite/std/ranges/adaptors/filter.cc: Check assignment of a\n\tview that uses copyable-box.", "tree": {"sha": "15021ef10a5aaa736543f8db0ffce8b90a8b21db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15021ef10a5aaa736543f8db0ffce8b90a8b21db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2dc5305d87f4e6a1b861f59164c124636e2b69d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2dc5305d87f4e6a1b861f59164c124636e2b69d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2dc5305d87f4e6a1b861f59164c124636e2b69d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2dc5305d87f4e6a1b861f59164c124636e2b69d/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06bc1b0c539e3a60692d7432d15e701c38610f80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06bc1b0c539e3a60692d7432d15e701c38610f80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06bc1b0c539e3a60692d7432d15e701c38610f80"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "780a3633417eb8a50f9339cdca9c2f46c06de154", "filename": "libstdc++-v3/include/std/ranges", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2dc5305d87f4e6a1b861f59164c124636e2b69d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2dc5305d87f4e6a1b861f59164c124636e2b69d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges?ref=d2dc5305d87f4e6a1b861f59164c124636e2b69d", "patch": "@@ -109,7 +109,8 @@ namespace ranges\n \n \t// _GLIBCXX_RESOLVE_LIB_DEFECTS\n \t// 3477. Simplify constraints for semiregular-box\n-\t__box&\n+\t// 3572. copyable-box should be fully constexpr\n+\tconstexpr __box&\n \toperator=(const __box& __that)\n \tnoexcept(is_nothrow_copy_constructible_v<_Tp>)\n \trequires (!copyable<_Tp>)\n@@ -124,7 +125,7 @@ namespace ranges\n \t  return *this;\n \t}\n \n-\t__box&\n+\tconstexpr __box&\n \toperator=(__box&& __that)\n \tnoexcept(is_nothrow_move_constructible_v<_Tp>)\n \trequires (!movable<_Tp>)"}, {"sha": "ed5a01ca595370cf4011b1e5038f5524c6b0f670", "filename": "libstdc++-v3/testsuite/std/ranges/adaptors/filter.cc", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2dc5305d87f4e6a1b861f59164c124636e2b69d/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Ffilter.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2dc5305d87f4e6a1b861f59164c124636e2b69d/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Ffilter.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Ffilter.cc?ref=d2dc5305d87f4e6a1b861f59164c124636e2b69d", "patch": "@@ -140,6 +140,33 @@ test06()\n   static_assert(!requires { views::all | filter; });\n }\n \n+constexpr bool\n+test07()\n+{\n+  struct Pred\n+  {\n+    constexpr Pred() { }\n+    constexpr Pred(const Pred&) { }\n+    constexpr Pred(Pred&&) { }\n+    // These make it non-copyable, so non-copyable-box<Pred> will provide\n+    // assignment.\n+    Pred& operator=(const Pred&) = delete;\n+    Pred& operator=(Pred&&) = delete;\n+\n+    bool operator()(int i) const { return i < 10; }\n+  };\n+\n+  int i = 0;\n+  ranges::filter_view v(views::single(i), Pred{});\n+  // LWG 3572. copyable-box should be fully constexpr\n+  v = v;\n+  v = std::move(v);\n+\n+  return true;\n+}\n+\n+static_assert( test07() );\n+\n int\n main()\n {\n@@ -150,4 +177,5 @@ main()\n   test05<forward_iterator_wrapper>();\n   test05<random_access_iterator_wrapper>();\n   test06();\n+  test07();\n }"}]}