{"sha": "62daa13984dac4fbe37f94755978ad886925939d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJkYWExMzk4NGRhYzRmYmUzN2Y5NDc1NTk3OGFkODg2OTI1OTM5ZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-04-06T16:12:15Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-04-06T16:12:15Z"}, "message": "re PR c++/43648 (ICE with explicit destructor call and typedef)\n\n\tPR c++/43648\n\t* name-lookup.c (constructor_name_p): Allow X::~X even for typedefs.\n\nFrom-SVN: r158007", "tree": {"sha": "32fa8edb54507dcc439e45fd466f7cd32e1d1fb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32fa8edb54507dcc439e45fd466f7cd32e1d1fb9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62daa13984dac4fbe37f94755978ad886925939d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62daa13984dac4fbe37f94755978ad886925939d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62daa13984dac4fbe37f94755978ad886925939d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62daa13984dac4fbe37f94755978ad886925939d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d5eebac0bb24b578e98d99d290c68ed0e101b0b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5eebac0bb24b578e98d99d290c68ed0e101b0b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5eebac0bb24b578e98d99d290c68ed0e101b0b0"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "59b0e40b0004040a725988bcb1193d70f8d9b3b9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62daa13984dac4fbe37f94755978ad886925939d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62daa13984dac4fbe37f94755978ad886925939d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=62daa13984dac4fbe37f94755978ad886925939d", "patch": "@@ -1,5 +1,8 @@\n 2010-04-06  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/43648\n+\t* name-lookup.c (constructor_name_p): Allow X::~X even for typedefs.\n+\n \tPR c++/43621\n \t* pt.c (maybe_update_decl_type): Check the return value from\n \tpush_scope."}, {"sha": "8a1bb9f600ed0ddfbb99b1f5bba6bc41f37cbf32", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62daa13984dac4fbe37f94755978ad886925939d/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62daa13984dac4fbe37f94755978ad886925939d/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=62daa13984dac4fbe37f94755978ad886925939d", "patch": "@@ -3897,13 +3897,15 @@ cp_parser_unqualified_id (cp_parser* parser,\n \t  }\n \tgcc_assert (!scope || TYPE_P (scope));\n \n-\t/* If the name is of the form \"X::~X\" it's OK.  */\n+\t/* If the name is of the form \"X::~X\" it's OK even if X is a\n+\t   typedef.  */\n \ttoken = cp_lexer_peek_token (parser->lexer);\n \tif (scope\n \t    && token->type == CPP_NAME\n \t    && (cp_lexer_peek_nth_token (parser->lexer, 2)->type\n \t\t!= CPP_LESS)\n-\t    && constructor_name_p (token->u.value, scope))\n+\t    && (token->u.value == TYPE_IDENTIFIER (scope)\n+\t\t|| constructor_name_p (token->u.value, scope)))\n \t  {\n \t    cp_lexer_consume_token (parser->lexer);\n \t    return build_nt (BIT_NOT_EXPR, scope);"}, {"sha": "66018c5a4f365b977a998f402419a508c3c88d0e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62daa13984dac4fbe37f94755978ad886925939d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62daa13984dac4fbe37f94755978ad886925939d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=62daa13984dac4fbe37f94755978ad886925939d", "patch": "@@ -1,5 +1,8 @@\n 2010-04-06  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/43648\n+\t* g++.dg/template/dtor8.C: New.\n+\n \tPR c++/43621\n \t* g++.dg/template/error-recovery2.C: New.\n "}, {"sha": "a96b7982f5d489bab08d54f5e5f817b2d3fd81de", "filename": "gcc/testsuite/g++.dg/template/dtor8.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62daa13984dac4fbe37f94755978ad886925939d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdtor8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62daa13984dac4fbe37f94755978ad886925939d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdtor8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdtor8.C?ref=62daa13984dac4fbe37f94755978ad886925939d", "patch": "@@ -0,0 +1,23 @@\n+// PR c++/43648\n+\n+namespace dealii\n+{\n+  namespace FEValuesViews\n+  {\n+    template <int dim, int spacedim> struct Scalar {};\n+  }\n+\n+  template <int dim, int spacedim>\n+  struct X\n+  {\n+      FEValuesViews::Scalar<dim,spacedim> scalars[dim*spacedim];\n+\n+      void f()\n+        {\n+          typedef dealii::FEValuesViews::Scalar<dim,spacedim> ScalarView;\n+          scalars[0].ScalarView::~ScalarView ();\n+        }\n+  };\n+\n+  template struct X<2,2>;\n+}"}]}