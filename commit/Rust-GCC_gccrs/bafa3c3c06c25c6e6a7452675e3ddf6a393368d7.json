{"sha": "bafa3c3c06c25c6e6a7452675e3ddf6a393368d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFmYTNjM2MwNmMyNWM2ZTZhNzQ1MjY3NWUzZGRmNmEzOTMzNjhkNw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2003-04-15T22:38:47Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-04-15T22:38:47Z"}, "message": "re PR libstdc++/9423 (filebuf::pubsetbuf(0, 0) doesn't turn off buffering if called after open)\n\n2003-04-15  Benjamin Kosnik  <bkoz@redhat.com>\n\t    Paolo Carlini  <pcarlini@unitus.it>\n\n\tPR libstdc++/9423\n\t* docs/html/27_io/howto.html\n\t('The buffering is screwing up my program!'): Explain that\n\topening counts as an I/O operation.\n\nCo-Authored-By: Paolo Carlini <pcarlini@unitus.it>\n\nFrom-SVN: r65665", "tree": {"sha": "8ea1527fa5014d95106306a8eb1b3308e622d13b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ea1527fa5014d95106306a8eb1b3308e622d13b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bafa3c3c06c25c6e6a7452675e3ddf6a393368d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bafa3c3c06c25c6e6a7452675e3ddf6a393368d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bafa3c3c06c25c6e6a7452675e3ddf6a393368d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bafa3c3c06c25c6e6a7452675e3ddf6a393368d7/comments", "author": null, "committer": null, "parents": [{"sha": "0b78a9b6a0599e01fd2415f09422f73a26e14fcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b78a9b6a0599e01fd2415f09422f73a26e14fcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b78a9b6a0599e01fd2415f09422f73a26e14fcd"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "0f3232d4dde29f99b946a93df0b5c9aad2a4c7f4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bafa3c3c06c25c6e6a7452675e3ddf6a393368d7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bafa3c3c06c25c6e6a7452675e3ddf6a393368d7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bafa3c3c06c25c6e6a7452675e3ddf6a393368d7", "patch": "@@ -1,3 +1,11 @@\n+2003-04-15  Benjamin Kosnik  <bkoz at redhat dot com>\n+\t    Paolo Carlini  <pcarlini at unitus dot it>\n+\n+\tPR libstdc++/9423\n+\t* docs/html/27_io/howto.html\n+\t('The buffering is screwing up my program!'): Explain that\n+\topening counts as an I/O operation.\n+\n 2003-04-15  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* testsuite/thread/pthread1.cc: Enable for darwin test."}, {"sha": "5cf4f4f05ef4e636fd57a05960d0bc7eb6821b68", "filename": "libstdc++-v3/docs/html/27_io/howto.html", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bafa3c3c06c25c6e6a7452675e3ddf6a393368d7/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bafa3c3c06c25c6e6a7452675e3ddf6a393368d7/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F27_io%2Fhowto.html?ref=bafa3c3c06c25c6e6a7452675e3ddf6a393368d7", "patch": "@@ -159,15 +159,18 @@ <h2><a name=\"2\">The buffering is screwing up my program!</a></h2>\n       because the data needs to appear quickly (a prime example is a\n       log file for security-related information).  The way to do this is\n       just to turn off the buffering <em>before any I/O operations at\n-      all</em> have been done, i.e., as soon as possible after opening:\n+      all</em> have been done (note that opening counts as an I/O operation):\n    </p>\n    <pre>\n-   std::ofstream    os (&quot;/foo/bar/baz&quot;);\n-   std::ifstream    is (&quot;/qux/quux/quuux&quot;);\n+   std::ofstream    os;\n+   std::ifstream    is;\n    int   i;\n \n    os.rdbuf()-&gt;pubsetbuf(0,0);\n    is.rdbuf()-&gt;pubsetbuf(0,0);\n+\n+   os.open(&quot;/foo/bar/baz&quot;);\n+   is.open(&quot;/qux/quux/quuux&quot;);\n    ...\n    os &lt;&lt; &quot;this data is written immediately\\n&quot;;\n    is &gt;&gt; i;   // and this will probably cause a disk read </pre>"}]}