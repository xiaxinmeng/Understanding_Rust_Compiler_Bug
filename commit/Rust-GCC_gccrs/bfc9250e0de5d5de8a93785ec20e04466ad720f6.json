{"sha": "bfc9250e0de5d5de8a93785ec20e04466ad720f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZjOTI1MGUwZGU1ZDVkZThhOTM3ODVlYzIwZTA0NDY2YWQ3MjBmNg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-08-20T14:35:18Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-08-26T07:51:11Z"}, "message": "Use non-numbered clones for target_clones.\n\ngcc/ChangeLog:\n\n\t* cgraph.h (create_version_clone_with_body): Add new parameter.\n\t* cgraphclones.c: Likewise.\n\t* multiple_target.c (create_dispatcher_calls): Do not use\n\tnumbered suffixes.\n\t(create_target_clone): Likewise here.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/i386/mvc5.c: Scan assembly names.\n\t* gcc.target/i386/mvc7.c: Likewise.\n\t* gcc.target/i386/pr95778-1.c: Update scanned patterns.\n\t* gcc.target/i386/pr95778-2.c: Likewise.\n\nCo-Authored-By: Stefan Kneifel <stefan.kneifel@bluewin.ch>", "tree": {"sha": "95ca94cb87d04e5bbacf651d743450e2928693f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95ca94cb87d04e5bbacf651d743450e2928693f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfc9250e0de5d5de8a93785ec20e04466ad720f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfc9250e0de5d5de8a93785ec20e04466ad720f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfc9250e0de5d5de8a93785ec20e04466ad720f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfc9250e0de5d5de8a93785ec20e04466ad720f6/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4b782985b4adb86ebcccff697366136321d45b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4b782985b4adb86ebcccff697366136321d45b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4b782985b4adb86ebcccff697366136321d45b2"}], "stats": {"total": 52, "additions": 33, "deletions": 19}, "files": [{"sha": "4cdb3738b4de0c3dbaaa0059fe0c1e4ff345ce2d", "filename": "gcc/cgraph.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc9250e0de5d5de8a93785ec20e04466ad720f6/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc9250e0de5d5de8a93785ec20e04466ad720f6/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=bfc9250e0de5d5de8a93785ec20e04466ad720f6", "patch": "@@ -1006,13 +1006,16 @@ struct GTY((tag (\"SYMTAB_FUNCTION\"))) cgraph_node : public symtab_node\n      that will promote value of the attribute DECL_FUNCTION_SPECIFIC_TARGET\n      of the declaration.\n \n+     If VERSION_DECL is set true, use clone_function_name_numbered for the\n+     function clone.  Otherwise, use clone_function_name.\n+\n      Return the new version's cgraph node.  */\n   cgraph_node *create_version_clone_with_body\n     (vec<cgraph_edge *> redirect_callers,\n      vec<ipa_replace_map *, va_gc> *tree_map,\n      ipa_param_adjustments *param_adjustments,\n      bitmap bbs_to_copy, basic_block new_entry_block, const char *clone_name,\n-     tree target_attributes = NULL_TREE);\n+     tree target_attributes = NULL_TREE, bool version_decl = true);\n \n   /* Insert a new cgraph_function_version_info node into cgraph_fnver_htab\n      corresponding to cgraph_node.  */"}, {"sha": "ae91dccd31d5e828352508e7f7786dbbf8ebd4eb", "filename": "gcc/cgraphclones.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc9250e0de5d5de8a93785ec20e04466ad720f6/gcc%2Fcgraphclones.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc9250e0de5d5de8a93785ec20e04466ad720f6/gcc%2Fcgraphclones.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.c?ref=bfc9250e0de5d5de8a93785ec20e04466ad720f6", "patch": "@@ -987,6 +987,9 @@ cgraph_node::create_version_clone (tree new_decl,\n    that will promote value of the attribute DECL_FUNCTION_SPECIFIC_TARGET\n    of the declaration.\n \n+   If VERSION_DECL is set true, use clone_function_name_numbered for the\n+   function clone.  Otherwise, use clone_function_name.\n+\n    Return the new version's cgraph node.  */\n \n cgraph_node *\n@@ -995,7 +998,7 @@ cgraph_node::create_version_clone_with_body\n    vec<ipa_replace_map *, va_gc> *tree_map,\n    ipa_param_adjustments *param_adjustments,\n    bitmap bbs_to_copy, basic_block new_entry_block, const char *suffix,\n-   tree target_attributes)\n+   tree target_attributes, bool version_decl)\n {\n   tree old_decl = decl;\n   cgraph_node *new_version_node = NULL;\n@@ -1016,8 +1019,10 @@ cgraph_node::create_version_clone_with_body\n     new_decl = copy_node (old_decl);\n \n   /* Generate a new name for the new version. */\n-  DECL_NAME (new_decl) = clone_function_name_numbered (old_decl, suffix);\n-  SET_DECL_ASSEMBLER_NAME (new_decl, DECL_NAME (new_decl));\n+  tree fnname = (version_decl ? clone_function_name_numbered (old_decl, suffix)\n+\t\t: clone_function_name (old_decl, suffix));\n+  DECL_NAME (new_decl) = fnname;\n+  SET_DECL_ASSEMBLER_NAME (new_decl, fnname);\n   SET_DECL_RTL (new_decl, NULL);\n \n   DECL_VIRTUAL_P (new_decl) = 0;"}, {"sha": "28d5f95dca52bf3b65ff394ab298040636f918da", "filename": "gcc/multiple_target.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc9250e0de5d5de8a93785ec20e04466ad720f6/gcc%2Fmultiple_target.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc9250e0de5d5de8a93785ec20e04466ad720f6/gcc%2Fmultiple_target.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmultiple_target.c?ref=bfc9250e0de5d5de8a93785ec20e04466ad720f6", "patch": "@@ -166,9 +166,8 @@ create_dispatcher_calls (struct cgraph_node *node)\n \t}\n     }\n \n-  symtab->change_decl_assembler_name (node->decl,\n-\t\t\t\t      clone_function_name_numbered (\n-\t\t\t\t\t  node->decl, \"default\"));\n+  tree fname = clone_function_name (node->decl, \"default\");\n+  symtab->change_decl_assembler_name (node->decl, fname);\n \n   if (node->definition)\n     {\n@@ -309,9 +308,9 @@ create_target_clone (cgraph_node *node, bool definition, char *name,\n \n   if (definition)\n     {\n-      new_node = node->create_version_clone_with_body (vNULL, NULL,\n-    \t\t\t\t\t\t       NULL, NULL,\n-\t\t\t\t\t\t       NULL, name, attributes);\n+      new_node\n+\t= node->create_version_clone_with_body (vNULL, NULL, NULL, NULL, NULL,\n+\t\t\t\t\t\tname, attributes, false);\n       if (new_node == NULL)\n \treturn NULL;\n       new_node->force_output = true;\n@@ -322,9 +321,8 @@ create_target_clone (cgraph_node *node, bool definition, char *name,\n       new_node = cgraph_node::get_create (new_decl);\n       DECL_ATTRIBUTES (new_decl) = attributes;\n       /* Generate a new name for the new version.  */\n-      symtab->change_decl_assembler_name (new_node->decl,\n-\t\t\t\t\t  clone_function_name_numbered (\n-\t\t\t\t\t      node->decl, name));\n+      tree fname = clone_function_name (node->decl, name);\n+      symtab->change_decl_assembler_name (new_node->decl, fname);\n     }\n   return new_node;\n }"}, {"sha": "0e02bf661ae1a855b38f0628e9e0f4b934db6016", "filename": "gcc/testsuite/gcc.target/i386/mvc5.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc9250e0de5d5de8a93785ec20e04466ad720f6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmvc5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc9250e0de5d5de8a93785ec20e04466ad720f6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmvc5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmvc5.c?ref=bfc9250e0de5d5de8a93785ec20e04466ad720f6", "patch": "@@ -3,6 +3,10 @@\n /* { dg-options \"-fno-inline\" } */\n /* { dg-final { scan-assembler \"foo,foo.resolver\" } } */\n \n+/* Verify that foo clones are not numbered.  */\n+/* { dg-final { scan-assembler \"foo.default:\" } } */\n+/* { dg-final { scan-assembler \"foo.avx:\" } } */\n+\n __attribute__((target_clones(\"default\",\"avx\",\"avx2\")))\n int\n foo ()"}, {"sha": "7fb9dded849a51c37cb8854bad1666b2f033f7ef", "filename": "gcc/testsuite/gcc.target/i386/mvc7.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc9250e0de5d5de8a93785ec20e04466ad720f6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmvc7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc9250e0de5d5de8a93785ec20e04466ad720f6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmvc7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmvc7.c?ref=bfc9250e0de5d5de8a93785ec20e04466ad720f6", "patch": "@@ -1,7 +1,11 @@\n /* { dg-do compile } */\n /* { dg-require-ifunc \"\" } */\n-/* { dg-final { scan-assembler \"foo.resolver\" } } */\n-/* { dg-final { scan-assembler \"avx\" } } */\n+\n+/* Verify that foo clones are not numbered.  */\n+/* { dg-final { scan-assembler \"foo.resolver,\" } } */\n+/* { dg-final { scan-assembler \"foo.default,\" } } */\n+/* { dg-final { scan-assembler \"foo.avx,\" } } */\n+\n /* { dg-final { scan-assembler \"slm\" } } */\n /* { dg-final { scan-assembler \"foo,foo.resolver\" } } */\n "}, {"sha": "18f83832117be817d264551a3dfae198b1257143", "filename": "gcc/testsuite/gcc.target/i386/pr95778-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc9250e0de5d5de8a93785ec20e04466ad720f6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95778-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc9250e0de5d5de8a93785ec20e04466ad720f6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95778-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95778-1.c?ref=bfc9250e0de5d5de8a93785ec20e04466ad720f6", "patch": "@@ -17,5 +17,5 @@ g2(int *p)\n   return f2(p);\n }\n \n-/* { dg-final { scan-assembler \"g2.default.1:\\n\\tjmp\\tf2.default.1\\n\" } } */\n-/* { dg-final { scan-assembler \"g2.avx2.0:\\n\\tjmp\\tf2.avx2.0\\n\" } } */\n+/* { dg-final { scan-assembler \"g2.default:\\n\\tjmp\\tf2.default\\n\" } } */\n+/* { dg-final { scan-assembler \"g2.avx2:\\n\\tjmp\\tf2.avx2\\n\" } } */"}, {"sha": "9ef513aab30d6aa63cdd5bb4330570bbc1091186", "filename": "gcc/testsuite/gcc.target/i386/pr95778-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfc9250e0de5d5de8a93785ec20e04466ad720f6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95778-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfc9250e0de5d5de8a93785ec20e04466ad720f6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95778-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95778-2.c?ref=bfc9250e0de5d5de8a93785ec20e04466ad720f6", "patch": "@@ -17,5 +17,5 @@ g2(int *p)\n   return f2(p);\n }\n \n-/* { dg-final { scan-assembler \"g2.default.1:\\n\\tjmp\\tf2.default.1\\n\" } } */\n-/* { dg-final { scan-assembler \"g2.avx2.0:\\n\\tjmp\\tf2.avx2.0\\n\" } } */\n+/* { dg-final { scan-assembler \"g2.default:\\n\\tjmp\\tf2.default\\n\" } } */\n+/* { dg-final { scan-assembler \"g2.avx2:\\n\\tjmp\\tf2.avx2\\n\" } } */"}]}