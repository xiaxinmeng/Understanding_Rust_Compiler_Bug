{"sha": "6724f8a61d49dfdfaa11995765b85ee170e48ac7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjcyNGY4YTYxZDQ5ZGZkZmFhMTE5OTU3NjViODVlZTE3MGU0OGFjNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-02-09T23:22:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-02-09T23:22:43Z"}, "message": "re PR sanitizer/83987 (ICE with OpenMP, sanitizer and virtual bases)\n\n\tPR sanitizer/83987\n\t* omp-low.c (maybe_remove_omp_member_access_dummy_vars,\n\tremove_member_access_dummy_vars): New functions.\n\t(lower_omp_for, lower_omp_taskreg, lower_omp_target,\n\tlower_omp_1, execute_lower_omp): Use them.\n\n\t* tree.c (cp_free_lang_data): Revert 2018-01-23 change.\n\n\t* g++.dg/ubsan/pr83987-2.C: New test.\n\nFrom-SVN: r257545", "tree": {"sha": "1bcb77e081a3462478d62cb53e68a5a3c07df260", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bcb77e081a3462478d62cb53e68a5a3c07df260"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6724f8a61d49dfdfaa11995765b85ee170e48ac7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6724f8a61d49dfdfaa11995765b85ee170e48ac7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6724f8a61d49dfdfaa11995765b85ee170e48ac7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6724f8a61d49dfdfaa11995765b85ee170e48ac7/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ca8e744641e1b03cc6e4cdbc46e7ece0750240d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ca8e744641e1b03cc6e4cdbc46e7ece0750240d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ca8e744641e1b03cc6e4cdbc46e7ece0750240d"}], "stats": {"total": 101, "additions": 91, "deletions": 10}, "files": [{"sha": "0ee4f1cf6b34996683bd1c55a028f5e6acecf19a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6724f8a61d49dfdfaa11995765b85ee170e48ac7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6724f8a61d49dfdfaa11995765b85ee170e48ac7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6724f8a61d49dfdfaa11995765b85ee170e48ac7", "patch": "@@ -1,5 +1,11 @@\n 2018-02-10  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR sanitizer/83987\n+\t* omp-low.c (maybe_remove_omp_member_access_dummy_vars,\n+\tremove_member_access_dummy_vars): New functions.\n+\t(lower_omp_for, lower_omp_taskreg, lower_omp_target,\n+\tlower_omp_1, execute_lower_omp): Use them.\n+\n \tPR rtl-optimization/84308\n \t* shrink-wrap.c (spread_components): Release todo vector.\n "}, {"sha": "e01e73bb97ba70a1d414db69bb07369c7f75fae0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6724f8a61d49dfdfaa11995765b85ee170e48ac7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6724f8a61d49dfdfaa11995765b85ee170e48ac7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6724f8a61d49dfdfaa11995765b85ee170e48ac7", "patch": "@@ -1,3 +1,8 @@\n+2018-02-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/83987\n+\t* tree.c (cp_free_lang_data): Revert 2018-01-23 change.\n+\n 2018-02-09  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/81917 - ICE with void_t and partial specialization."}, {"sha": "a53bddf2ef009fe4d66e7483967a68335377839e", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6724f8a61d49dfdfaa11995765b85ee170e48ac7/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6724f8a61d49dfdfaa11995765b85ee170e48ac7/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=6724f8a61d49dfdfaa11995765b85ee170e48ac7", "patch": "@@ -5273,16 +5273,6 @@ cp_free_lang_data (tree t)\n     /* We do not need the leftover chaining of namespaces from the\n        binding level.  */\n     DECL_CHAIN (t) = NULL_TREE;\n-  /* Set DECL_VALUE_EXPRs of OpenMP privatized member artificial\n-     decls to error_mark_node.  These are DECL_IGNORED_P and after\n-     OpenMP lowering they aren't useful anymore.  Clearing DECL_VALUE_EXPR\n-     doesn't work, as expansion could then consider them as something\n-     to be expanded.  */\n-  if (VAR_P (t)\n-      && DECL_LANG_SPECIFIC (t)\n-      && DECL_OMP_PRIVATIZED_MEMBER (t)\n-      && DECL_IGNORED_P (t))\n-    SET_DECL_VALUE_EXPR (t, error_mark_node);\n }\n \n /* Stub for c-common.  Please keep in sync with c-decl.c."}, {"sha": "d8588b9faed0a937fd9ef5940e13e657d40a9d35", "filename": "gcc/omp-low.c", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6724f8a61d49dfdfaa11995765b85ee170e48ac7/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6724f8a61d49dfdfaa11995765b85ee170e48ac7/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=6724f8a61d49dfdfaa11995765b85ee170e48ac7", "patch": "@@ -3208,6 +3208,43 @@ scan_omp (gimple_seq *body_p, omp_context *ctx)\n \f\n /* Re-gimplification and code generation routines.  */\n \n+/* Remove omp_member_access_dummy_var variables from gimple_bind_vars\n+   of BIND if in a method.  */\n+\n+static void\n+maybe_remove_omp_member_access_dummy_vars (gbind *bind)\n+{\n+  if (DECL_ARGUMENTS (current_function_decl)\n+      && DECL_ARTIFICIAL (DECL_ARGUMENTS (current_function_decl))\n+      && (TREE_CODE (TREE_TYPE (DECL_ARGUMENTS (current_function_decl)))\n+\t  == POINTER_TYPE))\n+    {\n+      tree vars = gimple_bind_vars (bind);\n+      for (tree *pvar = &vars; *pvar; )\n+\tif (omp_member_access_dummy_var (*pvar))\n+\t  *pvar = DECL_CHAIN (*pvar);\n+\telse\n+\t  pvar = &DECL_CHAIN (*pvar);\n+      gimple_bind_set_vars (bind, vars);\n+    }\n+}\n+\n+/* Remove omp_member_access_dummy_var variables from BLOCK_VARS of\n+   block and its subblocks.  */\n+\n+static void\n+remove_member_access_dummy_vars (tree block)\n+{\n+  for (tree *pvar = &BLOCK_VARS (block); *pvar; )\n+    if (omp_member_access_dummy_var (*pvar))\n+      *pvar = DECL_CHAIN (*pvar);\n+    else\n+      pvar = &DECL_CHAIN (*pvar);\n+\n+  for (block = BLOCK_SUBBLOCKS (block); block; block = BLOCK_CHAIN (block))\n+    remove_member_access_dummy_vars (block);\n+}\n+\n /* If a context was created for STMT when it was scanned, return it.  */\n \n static omp_context *\n@@ -6961,6 +6998,7 @@ lower_omp_for (gimple_stmt_iterator *gsi_p, omp_context *ctx)\n   pop_gimplify_context (new_stmt);\n \n   gimple_bind_append_vars (new_stmt, ctx->block_vars);\n+  maybe_remove_omp_member_access_dummy_vars (new_stmt);\n   BLOCK_VARS (block) = gimple_bind_vars (new_stmt);\n   if (BLOCK_VARS (block))\n     TREE_USED (block) = 1;\n@@ -7413,6 +7451,7 @@ lower_omp_taskreg (gimple_stmt_iterator *gsi_p, omp_context *ctx)\n   /* Declare all the variables created by mapping and the variables\n      declared in the scope of the parallel body.  */\n   record_vars_into (ctx->block_vars, child_fn);\n+  maybe_remove_omp_member_access_dummy_vars (par_bind);\n   record_vars_into (gimple_bind_vars (par_bind), child_fn);\n \n   if (ctx->record_type)\n@@ -7781,6 +7820,7 @@ lower_omp_target (gimple_stmt_iterator *gsi_p, omp_context *ctx)\n       /* Declare all the variables created by mapping and the variables\n \t declared in the scope of the target body.  */\n       record_vars_into (ctx->block_vars, child_fn);\n+      maybe_remove_omp_member_access_dummy_vars (tgt_bind);\n       record_vars_into (gimple_bind_vars (tgt_bind), child_fn);\n     }\n \n@@ -8772,6 +8812,7 @@ lower_omp_1 (gimple_stmt_iterator *gsi_p, omp_context *ctx)\n       break;\n     case GIMPLE_BIND:\n       lower_omp (gimple_bind_body_ptr (as_a <gbind *> (stmt)), ctx);\n+      maybe_remove_omp_member_access_dummy_vars (as_a <gbind *> (stmt));\n       break;\n     case GIMPLE_OMP_PARALLEL:\n     case GIMPLE_OMP_TASK:\n@@ -8976,6 +9017,16 @@ execute_lower_omp (void)\n       all_contexts = NULL;\n     }\n   BITMAP_FREE (task_shared_vars);\n+\n+  /* If current function is a method, remove artificial dummy VAR_DECL created\n+     for non-static data member privatization, they aren't needed for\n+     debuginfo nor anything else, have been already replaced everywhere in the\n+     IL and cause problems with LTO.  */\n+  if (DECL_ARGUMENTS (current_function_decl)\n+      && DECL_ARTIFICIAL (DECL_ARGUMENTS (current_function_decl))\n+      && (TREE_CODE (TREE_TYPE (DECL_ARGUMENTS (current_function_decl)))\n+\t  == POINTER_TYPE))\n+    remove_member_access_dummy_vars (DECL_INITIAL (current_function_decl));\n   return 0;\n }\n "}, {"sha": "1688f5a8aa2697c2fada44ea05854142cd5dec4b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6724f8a61d49dfdfaa11995765b85ee170e48ac7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6724f8a61d49dfdfaa11995765b85ee170e48ac7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6724f8a61d49dfdfaa11995765b85ee170e48ac7", "patch": "@@ -1,3 +1,8 @@\n+2018-02-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/83987\n+\t* g++.dg/ubsan/pr83987-2.C: New test.\n+\n 2018-02-09  Peter Bergner  <bergner@vnet.ibm.com>\n \n \tPR target/83926"}, {"sha": "a70b7b2850bbfbe3f9898803ab38f058a00dbdf1", "filename": "gcc/testsuite/g++.dg/ubsan/pr83987-2.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6724f8a61d49dfdfaa11995765b85ee170e48ac7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr83987-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6724f8a61d49dfdfaa11995765b85ee170e48ac7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr83987-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr83987-2.C?ref=6724f8a61d49dfdfaa11995765b85ee170e48ac7", "patch": "@@ -0,0 +1,24 @@\n+// PR sanitizer/83987\n+// { dg-do compile { target fopenmp } }\n+// { dg-options \"-fopenmp -fsanitize=vptr\" }\n+\n+struct A\n+{\n+  int i;\n+};\n+\n+struct B : virtual A\n+{\n+  void foo();\n+};\n+\n+void B::foo()\n+{\n+#pragma omp parallel\n+  {\n+  #pragma omp sections lastprivate (i)\n+    {\n+      i = 0;\n+    }\n+  }\n+}"}]}