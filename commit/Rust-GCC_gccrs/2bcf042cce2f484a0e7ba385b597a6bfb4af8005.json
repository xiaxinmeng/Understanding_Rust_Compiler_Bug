{"sha": "2bcf042cce2f484a0e7ba385b597a6bfb4af8005", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJjZjA0MmNjZTJmNDg0YTBlN2JhMzg1YjU5N2E2YmZiNGFmODAwNQ==", "commit": {"author": {"name": "Mumit Khan", "email": "khan@xraylith.wisc.edu", "date": "1999-04-11T22:35:17Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-04-11T22:35:17Z"}, "message": "aclocal.m4: New file.\n\n        * libU77/aclocal.m4: New file.\n        * libU77/configure.in (LIBU77_HAVE_STRUCT_TIMEZONE): Add test.\n        * libU77/acconfig.h (HAVE_STRUCT_TIMEZONE): Add macro.\n        * libU77/datetime_c.c (G77_date_and_time_0): Use.\n        * libU77/config.hin: Regenerate.\n        * libU77/configure: Likewise.\n\nFrom-SVN: r26353", "tree": {"sha": "dd16fac232282ee1ffae2ddc2ed25b4eaec02499", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd16fac232282ee1ffae2ddc2ed25b4eaec02499"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bcf042cce2f484a0e7ba385b597a6bfb4af8005", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bcf042cce2f484a0e7ba385b597a6bfb4af8005", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bcf042cce2f484a0e7ba385b597a6bfb4af8005", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bcf042cce2f484a0e7ba385b597a6bfb4af8005/comments", "author": null, "committer": null, "parents": [{"sha": "36eb4217ac1176310c53f97c252c55054cfe0722", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36eb4217ac1176310c53f97c252c55054cfe0722", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36eb4217ac1176310c53f97c252c55054cfe0722"}], "stats": {"total": 62, "additions": 61, "deletions": 1}, "files": [{"sha": "a899f27348d5b01e89afddea84d401ae336dbc3c", "filename": "libf2c/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bcf042cce2f484a0e7ba385b597a6bfb4af8005/libf2c%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bcf042cce2f484a0e7ba385b597a6bfb4af8005/libf2c%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FChangeLog?ref=2bcf042cce2f484a0e7ba385b597a6bfb4af8005", "patch": "@@ -1,3 +1,12 @@\n+Sun Apr 11 23:30:42 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n+\n+\t* libU77/aclocal.m4: New file.\n+\t* libU77/configure.in (LIBU77_HAVE_STRUCT_TIMEZONE): Add test.\n+\t* libU77/acconfig.h (HAVE_STRUCT_TIMEZONE): Add macro.\n+\t* libU77/datetime_c.c (G77_date_and_time_0): Use.\n+\t* libU77/config.hin: Regenerate.\n+\t* libU77/configure: Likewise.\n+\n Wed Mar 31 13:50:24 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* configure.in (extra_includes): Don't attempt to calculate the"}, {"sha": "1400ba589b2349dbe82fb8420fbc901cae8c5372", "filename": "libf2c/libU77/acconfig.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bcf042cce2f484a0e7ba385b597a6bfb4af8005/libf2c%2FlibU77%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bcf042cce2f484a0e7ba385b597a6bfb4af8005/libf2c%2FlibU77%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Facconfig.h?ref=2bcf042cce2f484a0e7ba385b597a6bfb4af8005", "patch": "@@ -1,2 +1,6 @@\n /* Define as the path of the `chmod' program. */\n #undef CHMOD_PATH\n+\n+/* Define if your sys/time.h defines struct timezone. */\n+#undef HAVE_STRUCT_TIMEZONE\n+"}, {"sha": "27a89c05bb9905d12d5a2e4c3a352a4a5fe036c2", "filename": "libf2c/libU77/config.hin", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bcf042cce2f484a0e7ba385b597a6bfb4af8005/libf2c%2FlibU77%2Fconfig.hin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bcf042cce2f484a0e7ba385b597a6bfb4af8005/libf2c%2FlibU77%2Fconfig.hin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fconfig.hin?ref=2bcf042cce2f484a0e7ba385b597a6bfb4af8005", "patch": "@@ -33,6 +33,9 @@\n /* Define as the path of the `chmod' program. */\n #undef CHMOD_PATH\n \n+/* Define if your sys/time.h defines struct timezone. */\n+#undef HAVE_STRUCT_TIMEZONE\n+\n /* Define if you have the alarm function.  */\n #undef HAVE_ALARM\n "}, {"sha": "fc8a4908c9f57fe6646e113ea25778d95e456a87", "filename": "libf2c/libU77/configure", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bcf042cce2f484a0e7ba385b597a6bfb4af8005/libf2c%2FlibU77%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bcf042cce2f484a0e7ba385b597a6bfb4af8005/libf2c%2FlibU77%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fconfigure?ref=2bcf042cce2f484a0e7ba385b597a6bfb4af8005", "patch": "@@ -1510,6 +1510,41 @@ test $ac_cv_func_gethostname = yes && MAYBES=\"$MAYBES hostnm_.o\"\n test $ac_cv_func_clock = yes && MAYBES=\"$MAYBES mclock_.o\"\n \n \n+echo $ac_n \"checking whether struct timezone exists\"\"... $ac_c\" 1>&6\n+echo \"configure:1515: checking whether struct timezone exists\" >&5\n+if eval \"test \\\"`echo '$''{'libu77_cv_have_struct_timezone'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  cat > conftest.$ac_ext <<EOF\n+#line 1520 \"configure\"\n+#include \"confdefs.h\"\n+#include <sys/time.h>\n+int main() {\n+struct timezone tz;\n+; return 0; }\n+EOF\n+if { (eval echo configure:1527: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+  rm -rf conftest*\n+  libu77_ac_have_struct_timezone=yes\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat conftest.$ac_ext >&5\n+  rm -rf conftest*\n+  libu77_ac_have_struct_timezone=no\n+fi\n+rm -f conftest*\n+fi\n+\n+if test $libu77_ac_have_struct_timezone = yes; then\n+  echo \"$ac_t\"\"yes\" 1>&6\n+  cat >> confdefs.h <<EOF\n+#define HAVE_STRUCT_TIMEZONE 1\n+EOF\n+\n+else\n+  echo \"$ac_t\"\"no\" 1>&6\n+fi\n+\n \n \n "}, {"sha": "1262645c932f8a3b905cdb38df49a7e00f5a7da8", "filename": "libf2c/libU77/configure.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bcf042cce2f484a0e7ba385b597a6bfb4af8005/libf2c%2FlibU77%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bcf042cce2f484a0e7ba385b597a6bfb4af8005/libf2c%2FlibU77%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fconfigure.in?ref=2bcf042cce2f484a0e7ba385b597a6bfb4af8005", "patch": "@@ -94,6 +94,7 @@ test $ac_cv_func_gethostname = yes && MAYBES=\"$MAYBES hostnm_.o\"\n test $ac_cv_func_clock = yes && MAYBES=\"$MAYBES mclock_.o\"\n AC_SUBST(MAYBES)\n \n+LIBU77_HAVE_STRUCT_TIMEZONE\n \n AC_SUBST(CROSS)\n AC_SUBST(RANLIB)"}, {"sha": "faf773a944c20b81fc0b3d96d41421844f7296fa", "filename": "libf2c/libU77/datetime_.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bcf042cce2f484a0e7ba385b597a6bfb4af8005/libf2c%2FlibU77%2Fdatetime_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bcf042cce2f484a0e7ba385b597a6bfb4af8005/libf2c%2FlibU77%2Fdatetime_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2Fdatetime_.c?ref=2bcf042cce2f484a0e7ba385b597a6bfb4af8005", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1997, 1998 Free Software Foundation, Inc.\n+/* Copyright (C) 1997, 1998, 1999 Free Software Foundation, Inc.\n This file is part of GNU Fortran libU77 library.\n \n This library is free software; you can redistribute it and/or modify it\n@@ -62,8 +62,16 @@ int G77_date_and_time_0 (char *date, char *fftime, char *zone,\n #if HAVE_GETTIMEOFDAY\n   {\n     struct timeval tp;\n+#if HAVE_STRUCT_TIMEZONE\n     struct timezone tzp;\n+    /* This is still not strictly correct on some systems such as HPUX, \n+       which does have struct timezone, but gettimeofday takes void* as \n+       the 2nd arg.  However, the effect of passing anything other than a null \n+       pointer is unspecified on HPUX. */\n     if (! gettimeofday (&tp, &tzp))\n+#else\n+    if (! gettimeofday (&tp, (void *) 0))\n+#endif\n       vals[7] = tp.tv_usec/1000;\n   }\n #endif"}]}