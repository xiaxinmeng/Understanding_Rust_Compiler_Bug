{"sha": "694d519fb0a8b8c784895c780c2510a092624165", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk0ZDUxOWZiMGE4YjhjNzg0ODk1Yzc4MGMyNTEwYTA5MjYyNDE2NQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2002-02-28T21:16:45Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2002-02-28T21:16:45Z"}, "message": "locale_facets.tcc (num_get::_M_extract_int): Admit grouping for octals and hexadecimals too.\n\n2002-02-28  Paolo Carlini  <pcarlini@unitus.it>\n\n        * include/bits/locale_facets.tcc (num_get::_M_extract_int):\n        Admit grouping for octals and hexadecimals too.\n        * testsuite/22_locale/num_get_members_char.cc: Add test04.\n        (test01): Tweak \".\" -> \",\" in void* test.\n        * testsuite/22_locale/num_get_members_wchar_t.cc: Ditto.\n\n        * testsuite/27_io/ios_manip_basefield.cc: Remove static keyword.\n        * testsuite/27_io/ios_manip_fmtflags.cc: Remove two of them.\n\nFrom-SVN: r50162", "tree": {"sha": "84093a8ea6c178d4b3645af17dee99080214e396", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84093a8ea6c178d4b3645af17dee99080214e396"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/694d519fb0a8b8c784895c780c2510a092624165", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/694d519fb0a8b8c784895c780c2510a092624165", "html_url": "https://github.com/Rust-GCC/gccrs/commit/694d519fb0a8b8c784895c780c2510a092624165", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/694d519fb0a8b8c784895c780c2510a092624165/comments", "author": null, "committer": null, "parents": [{"sha": "abda4f1c2d763d7bbaff9ace16015938b73de107", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abda4f1c2d763d7bbaff9ace16015938b73de107", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abda4f1c2d763d7bbaff9ace16015938b73de107"}], "stats": {"total": 153, "additions": 147, "deletions": 6}, "files": [{"sha": "d1b2116b28993dc1fd7b2ff7cb62bc6d3d1e194d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694d519fb0a8b8c784895c780c2510a092624165/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694d519fb0a8b8c784895c780c2510a092624165/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=694d519fb0a8b8c784895c780c2510a092624165", "patch": "@@ -1,3 +1,14 @@\n+2002-02-28  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* include/bits/locale_facets.tcc (num_get::_M_extract_int):\n+\tAdmit grouping for octals and hexadecimals too.\n+\t* testsuite/22_locale/num_get_members_char.cc: Add test04.\n+\t(test01): Tweak \".\" -> \",\" in void* test.\n+\t* testsuite/22_locale/num_get_members_wchar_t.cc: Ditto.\n+\n+\t* testsuite/27_io/ios_manip_basefield.cc: Remove static keyword.\n+\t* testsuite/27_io/ios_manip_fmtflags.cc: Remove two of them.\n+\n 2002-02-27  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* testsuite/27_io/ios_manip_basefield.cc (test01):"}, {"sha": "4f31bd6e0c97efb2ad123a3aa1996aa2592d51a0", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694d519fb0a8b8c784895c780c2510a092624165/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694d519fb0a8b8c784895c780c2510a092624165/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=694d519fb0a8b8c784895c780c2510a092624165", "patch": "@@ -310,7 +310,7 @@ namespace std\n       __ctype.widen(_S_atoms, _S_atoms + __len, __watoms);\n       string __found_grouping;\n       const string __grouping = __np.grouping();\n-      bool __check_grouping = __grouping.size() && __base == 10;\n+      bool __check_grouping = __grouping.size();\n       int __sep_pos = 0;\n       const char_type __sep = __np.thousands_sep();\n       while (__beg != __end)"}, {"sha": "8907d08ba220b0109e63128fc1526a00a2ce57f9", "filename": "libstdc++-v3/testsuite/22_locale/num_get_members_char.cc", "status": "modified", "additions": 66, "deletions": 1, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694d519fb0a8b8c784895c780c2510a092624165/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get_members_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694d519fb0a8b8c784895c780c2510a092624165/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get_members_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get_members_char.cc?ref=694d519fb0a8b8c784895c780c2510a092624165", "patch": "@@ -213,7 +213,7 @@ void test01()\n   VERIFY( err == goodbit );\n \n   // const void\n-  iss.str(\"0xbffff74c.\");\n+  iss.str(\"0xbffff74c,\");\n   iss.clear();\n   err = goodbit;\n   ng.get(iss.rdbuf(), 0, iss, err, v);\n@@ -332,11 +332,76 @@ void test03()\n #endif\n }\n \n+struct MyNP : std::numpunct<char>\n+{\n+  std::string do_grouping() const;\n+  char   do_thousands_sep() const;\n+};\n+\n+std::string MyNP::do_grouping() const { std::string s(\"\\3\"); return s; }\n+char   MyNP::do_thousands_sep() const { return ' '; }\n+\n+// Testing the correct parsing of grouped hexadecimals and octals.\n+void test04()\n+{\n+  using namespace std;\n+\n+  bool test = true;\n+ \n+  unsigned long ul;\n+\n+  istringstream iss;\n+  iss.imbue(locale(locale(), new MyNP));\n+\n+  const num_get<char>& ng = use_facet<num_get<char> >(iss.getloc()); \n+  const ios_base::iostate goodbit = ios_base::goodbit;\n+  ios_base::iostate err = ios_base::goodbit;\n+\n+  iss.setf(ios::hex, ios::basefield);\n+  iss.str(\"0xbf fff 74c.\");\n+  err = goodbit;\n+  ng.get(iss.rdbuf(), 0, iss, err, ul);\n+  VERIFY( err == goodbit );\n+  VERIFY( ul == 0xbffff74c );\n+\n+  iss.str(\"0Xf fff.\");\n+  err = goodbit;\n+  ng.get(iss.rdbuf(), 0, iss, err, ul);\n+  VERIFY( err == goodbit );\n+  VERIFY( ul == 0xffff );\n+\n+  iss.str(\"f ffe.\");\n+  err = goodbit;\n+  ng.get(iss.rdbuf(), 0, iss, err, ul);\n+  VERIFY( err == goodbit );\n+  VERIFY( ul == 0xfffe );\n+\n+  iss.setf(ios::oct, ios::basefield);\n+  iss.str(\"07 654 321.\");\n+  err = goodbit;\n+  ng.get(iss.rdbuf(), 0, iss, err, ul);\n+  VERIFY( err == goodbit );\n+  VERIFY( ul == 07654321 );\n+\n+  iss.str(\"07 777.\");\n+  err = goodbit;\n+  ng.get(iss.rdbuf(), 0, iss, err, ul);\n+  VERIFY( err == goodbit );\n+  VERIFY( ul == 07777 );\n+\n+  iss.str(\"7 776.\");\n+  err = goodbit;\n+  ng.get(iss.rdbuf(), 0, iss, err, ul);\n+  VERIFY( err == goodbit );\n+  VERIFY( ul == 07776 );\n+}\n+\n int main()\n {\n   test01();\n   test02();\n   test03();\n+  test04();\n   return 0;\n }\n "}, {"sha": "cbd39aefd9d762cf6212d175be003c0c0ca0917d", "filename": "libstdc++-v3/testsuite/22_locale/num_get_members_wchar_t.cc", "status": "modified", "additions": 66, "deletions": 1, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694d519fb0a8b8c784895c780c2510a092624165/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get_members_wchar_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694d519fb0a8b8c784895c780c2510a092624165/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get_members_wchar_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get_members_wchar_t.cc?ref=694d519fb0a8b8c784895c780c2510a092624165", "patch": "@@ -214,7 +214,7 @@ void test01()\n   VERIFY( err == goodbit );\n \n   // const void\n-  iss.str(L\"0xbffff74c.\");\n+  iss.str(L\"0xbffff74c,\");\n   iss.clear();\n   err = goodbit;\n   ng.get(iss.rdbuf(), 0, iss, err, v);\n@@ -333,6 +333,70 @@ void test03()\n     }\n #endif\n }\n+\n+struct MyNP : std::numpunct<wchar_t>\n+{\n+  std::string do_grouping() const;\n+  wchar_t   do_thousands_sep() const;\n+};\n+\n+std::string MyNP::do_grouping() const { std::string s(\"\\3\"); return s; }\n+wchar_t   MyNP::do_thousands_sep() const { return L' '; }\n+\n+// Testing the correct parsing of grouped hexadecimals and octals.\n+void test04()\n+{\n+  using namespace std;\n+\n+  bool test = true;\n+ \n+  unsigned long ul;\n+\n+  wistringstream iss;\n+  iss.imbue(locale(locale(), new MyNP));\n+\n+  const num_get<wchar_t>& ng = use_facet<num_get<wchar_t> >(iss.getloc()); \n+  const ios_base::iostate goodbit = ios_base::goodbit;\n+  ios_base::iostate err = ios_base::goodbit;\n+\n+  iss.setf(ios::hex, ios::basefield);\n+  iss.str(L\"0xbf fff 74c.\");\n+  err = goodbit;\n+  ng.get(iss.rdbuf(), 0, iss, err, ul);\n+  VERIFY( err == goodbit );\n+  VERIFY( ul == 0xbffff74c );\n+\n+  iss.str(L\"0Xf fff.\");\n+  err = goodbit;\n+  ng.get(iss.rdbuf(), 0, iss, err, ul);\n+  VERIFY( err == goodbit );\n+  VERIFY( ul == 0xffff );\n+\n+  iss.str(L\"f ffe.\");\n+  err = goodbit;\n+  ng.get(iss.rdbuf(), 0, iss, err, ul);\n+  VERIFY( err == goodbit );\n+  VERIFY( ul == 0xfffe );\n+\n+  iss.setf(ios::oct, ios::basefield);\n+  iss.str(L\"07 654 321.\");\n+  err = goodbit;\n+  ng.get(iss.rdbuf(), 0, iss, err, ul);\n+  VERIFY( err == goodbit );\n+  VERIFY( ul == 07654321 );\n+\n+  iss.str(L\"07 777.\");\n+  err = goodbit;\n+  ng.get(iss.rdbuf(), 0, iss, err, ul);\n+  VERIFY( err == goodbit );\n+  VERIFY( ul == 07777 );\n+\n+  iss.str(L\"7 776.\");\n+  err = goodbit;\n+  ng.get(iss.rdbuf(), 0, iss, err, ul);\n+  VERIFY( err == goodbit );\n+  VERIFY( ul == 07776 );\n+}\n #endif\n \n int main()\n@@ -341,6 +405,7 @@ int main()\n   test01();\n   test02();\n   test03();\n+  test04();\n #endif\n   return 0;\n }"}, {"sha": "1ce1d087f10b2560a36fe87973cb189e6ae71264", "filename": "libstdc++-v3/testsuite/27_io/ios_manip_basefield.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694d519fb0a8b8c784895c780c2510a092624165/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_manip_basefield.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694d519fb0a8b8c784895c780c2510a092624165/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_manip_basefield.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_manip_basefield.cc?ref=694d519fb0a8b8c784895c780c2510a092624165", "patch": "@@ -38,7 +38,7 @@ struct MyNP : std::numpunct<char>\n   char   do_thousands_sep() const;\n };\n \n-std::string MyNP::do_grouping() const { static std::string s(\"\\3\"); return s; }\n+std::string MyNP::do_grouping() const { std::string s(\"\\3\"); return s; }\n char   MyNP::do_thousands_sep() const { return ' '; }\n \n int"}, {"sha": "3173dc3a54cb9876159abbeb0bebbbf2d64d18d0", "filename": "libstdc++-v3/testsuite/27_io/ios_manip_fmtflags.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694d519fb0a8b8c784895c780c2510a092624165/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_manip_fmtflags.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694d519fb0a8b8c784895c780c2510a092624165/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_manip_fmtflags.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_manip_fmtflags.cc?ref=694d519fb0a8b8c784895c780c2510a092624165", "patch": "@@ -41,13 +41,13 @@ struct MyNP : std::numpunct<char>\n \n std::string MyNP::do_truename()  const \n { \n-  static std::string s(\"yea\"); \n+  std::string s(\"yea\"); \n   return s; \n }\n \n std::string MyNP::do_falsename() const \n { \n-  static std::string s(\"nay\"); \n+  std::string s(\"nay\"); \n   return s; \n }\n "}]}