{"sha": "46dedae6a8ea4a034761910b38f3f510dfa547b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZkZWRhZTZhOGVhNGEwMzQ3NjE5MTBiMzhmM2Y1MTBkZmE1NDdiOQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2019-01-12T10:27:00Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2019-01-12T10:27:00Z"}, "message": "[openacc] Add used parameter to TARGET_GOACC_VALIDATE_DIMS\n\nAdd a used parameter to TARGET_GOACC_VALIDATE_DIMS, allowing a target to make\ndecisions in the hook implementation based on whether a dimension is used or\nnot.\n\n2019-01-12  Tom de Vries  <tdevries@suse.de>\n\n\t* config/nvptx/nvptx.c (nvptx_goacc_validate_dims_1)\n\t(nvptx_goacc_validate_dims): Add used parameter.\n\t* doc/tm.texi: Regenerate.\n\t* omp-offload.c (oacc_parse_default_dims, oacc_validate_dims): Add\n\targument to call to targetm.goacc.validate_dims.\n\t(default_goacc_validate_dims): Add used\n\tparameter.\n\t* target.def (validate_dims): Add used parameter in DEFHOOK.\n\t* targhooks.h (default_goacc_validate_dims): Add used parameter.\n\nFrom-SVN: r267876", "tree": {"sha": "092a7de09bcfd7b4e739e36f538d1f819607152e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/092a7de09bcfd7b4e739e36f538d1f819607152e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46dedae6a8ea4a034761910b38f3f510dfa547b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46dedae6a8ea4a034761910b38f3f510dfa547b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46dedae6a8ea4a034761910b38f3f510dfa547b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46dedae6a8ea4a034761910b38f3f510dfa547b9/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fc560ecd493c75c59ff6a12dccbe61e59de2e423", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc560ecd493c75c59ff6a12dccbe61e59de2e423", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc560ecd493c75c59ff6a12dccbe61e59de2e423"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "d2f3751910109a65d53febfa06f860dd19cfd11a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46dedae6a8ea4a034761910b38f3f510dfa547b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46dedae6a8ea4a034761910b38f3f510dfa547b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46dedae6a8ea4a034761910b38f3f510dfa547b9", "patch": "@@ -1,3 +1,15 @@\n+2019-01-12  Tom de Vries  <tdevries@suse.de>\n+\n+\t* config/nvptx/nvptx.c (nvptx_goacc_validate_dims_1)\n+\t(nvptx_goacc_validate_dims): Add used parameter.\n+\t* doc/tm.texi: Regenerate.\n+\t* omp-offload.c (oacc_parse_default_dims, oacc_validate_dims): Add\n+\targument to call to targetm.goacc.validate_dims.\n+\t(default_goacc_validate_dims): Add used\n+\tparameter.\n+\t* target.def (validate_dims): Add used parameter in DEFHOOK.\n+\t* targhooks.h (default_goacc_validate_dims): Add used parameter.\n+\n 2019-01-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/85956"}, {"sha": "89f0e560910bb492db0b962791e743d99cda5133", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46dedae6a8ea4a034761910b38f3f510dfa547b9/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46dedae6a8ea4a034761910b38f3f510dfa547b9/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=46dedae6a8ea4a034761910b38f3f510dfa547b9", "patch": "@@ -5549,7 +5549,7 @@ has_vector_partitionable_routine_calls_p (tree fndecl)\n    DIMS has changed.  */\n \n static void\n-nvptx_goacc_validate_dims_1 (tree decl, int dims[], int fn_level)\n+nvptx_goacc_validate_dims_1 (tree decl, int dims[], int fn_level, unsigned used)\n {\n   bool oacc_default_dims_p = false;\n   bool oacc_min_dims_p = false;\n@@ -5711,15 +5711,15 @@ nvptx_goacc_validate_dims_1 (tree decl, int dims[], int fn_level)\n    DECL is null, we are validating the default dimensions.  */\n \n static bool\n-nvptx_goacc_validate_dims (tree decl, int dims[], int fn_level)\n+nvptx_goacc_validate_dims (tree decl, int dims[], int fn_level, unsigned used)\n {\n   int old_dims[GOMP_DIM_MAX];\n   unsigned int i;\n \n   for (i = 0; i < GOMP_DIM_MAX; ++i)\n     old_dims[i] = dims[i];\n \n-  nvptx_goacc_validate_dims_1 (decl, dims, fn_level);\n+  nvptx_goacc_validate_dims_1 (decl, dims, fn_level, used);\n \n   gcc_assert (dims[GOMP_DIM_VECTOR] != 0);\n   if (dims[GOMP_DIM_WORKER] > 0 && dims[GOMP_DIM_VECTOR] > 0)"}, {"sha": "4347f89cd2f08af99082f2e261f9d8a859d177e8", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46dedae6a8ea4a034761910b38f3f510dfa547b9/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46dedae6a8ea4a034761910b38f3f510dfa547b9/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=46dedae6a8ea4a034761910b38f3f510dfa547b9", "patch": "@@ -6097,7 +6097,7 @@ to use it.\n Return number of threads in SIMT thread group on the target.\n @end deftypefn\n \n-@deftypefn {Target Hook} bool TARGET_GOACC_VALIDATE_DIMS (tree @var{decl}, int *@var{dims}, int @var{fn_level})\n+@deftypefn {Target Hook} bool TARGET_GOACC_VALIDATE_DIMS (tree @var{decl}, int *@var{dims}, int @var{fn_level}, unsigned @var{used})\n This hook should check the launch dimensions provided for an OpenACC\n compute region, or routine.  Defaulted values are represented as -1\n and non-constant values as 0.  The @var{fn_level} is negative for the"}, {"sha": "201c459fa1f8b0b07a3429e6b28fe9c3eb2f2bb1", "filename": "gcc/omp-offload.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46dedae6a8ea4a034761910b38f3f510dfa547b9/gcc%2Fomp-offload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46dedae6a8ea4a034761910b38f3f510dfa547b9/gcc%2Fomp-offload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-offload.c?ref=46dedae6a8ea4a034761910b38f3f510dfa547b9", "patch": "@@ -644,8 +644,8 @@ oacc_parse_default_dims (const char *dims)\n     }\n \n   /* Allow the backend to validate the dimensions.  */\n-  targetm.goacc.validate_dims (NULL_TREE, oacc_default_dims, -1);\n-  targetm.goacc.validate_dims (NULL_TREE, oacc_min_dims, -2);\n+  targetm.goacc.validate_dims (NULL_TREE, oacc_default_dims, -1, 0);\n+  targetm.goacc.validate_dims (NULL_TREE, oacc_min_dims, -2, 0);\n }\n \n /* Validate and update the dimensions for offloaded FN.  ATTRS is the\n@@ -673,7 +673,7 @@ oacc_validate_dims (tree fn, tree attrs, int *dims, int level, unsigned used)\n       pos = TREE_CHAIN (pos);\n     }\n \n-  bool changed = targetm.goacc.validate_dims (fn, dims, level);\n+  bool changed = targetm.goacc.validate_dims (fn, dims, level, used);\n \n   /* Default anything left to 1 or a partitioned default.  */\n   for (ix = 0; ix != GOMP_DIM_MAX; ix++)\n@@ -1717,7 +1717,8 @@ execute_oacc_device_lower ()\n \n bool\n default_goacc_validate_dims (tree ARG_UNUSED (decl), int *dims,\n-\t\t\t     int ARG_UNUSED (fn_level))\n+\t\t\t     int ARG_UNUSED (fn_level),\n+\t\t\t     unsigned ARG_UNUSED (used))\n {\n   bool changed = false;\n "}, {"sha": "05c9cc1da2822e29286b037b02bd0b20e05904fb", "filename": "gcc/target.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46dedae6a8ea4a034761910b38f3f510dfa547b9/gcc%2Ftarget.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46dedae6a8ea4a034761910b38f3f510dfa547b9/gcc%2Ftarget.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.def?ref=46dedae6a8ea4a034761910b38f3f510dfa547b9", "patch": "@@ -1686,7 +1686,7 @@ are being validated and unspecified defaults should be filled in.\\n\\\n Diagnostics should be issued as appropriate.  Return\\n\\\n true, if changes have been made.  You must override this hook to\\n\\\n provide dimensions larger than 1.\",\n-bool, (tree decl, int *dims, int fn_level),\n+bool, (tree decl, int *dims, int fn_level, unsigned used),\n default_goacc_validate_dims)\n \n DEFHOOK"}, {"sha": "59436278dcf706c9283920eda52f073cb6c06195", "filename": "gcc/targhooks.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46dedae6a8ea4a034761910b38f3f510dfa547b9/gcc%2Ftarghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46dedae6a8ea4a034761910b38f3f510dfa547b9/gcc%2Ftarghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.h?ref=46dedae6a8ea4a034761910b38f3f510dfa547b9", "patch": "@@ -121,7 +121,7 @@ extern void default_finish_cost (void *, unsigned *, unsigned *, unsigned *);\n extern void default_destroy_cost_data (void *);\n \n /* OpenACC hooks.  */\n-extern bool default_goacc_validate_dims (tree, int [], int);\n+extern bool default_goacc_validate_dims (tree, int [], int, unsigned);\n extern int default_goacc_dim_limit (int);\n extern bool default_goacc_fork_join (gcall *, const int [], bool);\n extern void default_goacc_reduction (gcall *);"}]}