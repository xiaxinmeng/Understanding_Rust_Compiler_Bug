{"sha": "537bbabdc32f48c72bbd20dfd7f0b9ce57482fd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM3YmJhYmRjMzJmNDhjNzJiYmQyMGRmZDdmMGI5Y2U1NzQ4MmZkMg==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2007-01-31T05:16:23Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2007-01-31T05:16:23Z"}, "message": "config.gcc: Add geode.\n\n2007-01-30  Eric Christopher  <echristo@apple.com>\n\n\t* config.gcc: Add geode.\n\nFrom-SVN: r121376", "tree": {"sha": "ea0dddfd748a3c609aa107657c7e0627cf02d319", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea0dddfd748a3c609aa107657c7e0627cf02d319"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/537bbabdc32f48c72bbd20dfd7f0b9ce57482fd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/537bbabdc32f48c72bbd20dfd7f0b9ce57482fd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/537bbabdc32f48c72bbd20dfd7f0b9ce57482fd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/537bbabdc32f48c72bbd20dfd7f0b9ce57482fd2/comments", "author": null, "committer": null, "parents": [{"sha": "fa7a9f691c79721f71797ed09b22e627d5980911", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa7a9f691c79721f71797ed09b22e627d5980911", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa7a9f691c79721f71797ed09b22e627d5980911"}], "stats": {"total": 49, "additions": 28, "deletions": 21}, "files": [{"sha": "9bda36fc1c4a8f8a2829a3a81aec13e29924e64f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 20, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537bbabdc32f48c72bbd20dfd7f0b9ce57482fd2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537bbabdc32f48c72bbd20dfd7f0b9ce57482fd2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=537bbabdc32f48c72bbd20dfd7f0b9ce57482fd2", "patch": "@@ -1,3 +1,7 @@\n+2007-01-30  Eric Christopher  <echristo@apple.com>\n+\n+\t* config.gcc: Add geode.\n+\n 2007-01-31  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* cgraphunit.c, config/arm/arm.c, config/m68k/m68k.c,\n@@ -9,7 +13,7 @@\n \n \tPR c++/24745\n \t* doc/invoke.texi (Wpointer-arith): Document warning.\n-\t\n+\n 2007-01-30  Janis Johnson\n \n \t* doc/extend.texi (Decimal Floating Types): Remove decfloat.h from\n@@ -19,7 +23,7 @@\n \n \tPR c++/30601\n \t* doc/invoke.texi (-Wreturn-type): Update description to\n-\tmatch new behavior. \n+\tmatch new behavior.\n \n 2007-01-30  Richard Sandiford  <richard@codesourcery.com>\n \n@@ -94,7 +98,7 @@\n \t(MTAG_ALIASES): New macro.\n \t* tree-ssa-alias.c (alias_bitmap_obstack): New variable.\n \t(add_may_alias): Remove pointer-set. Update for may_aliases being\n-\ta bitmap. \n+\ta bitmap.\n \t(mark_aliases_call_clobbered): Update for may_aliases being a\n \tbitmap.\n \t(compute_tag_properties): Ditto.\n@@ -125,7 +129,7 @@\n \tbeing a bitmap.\n \t* tree-ssa-operands.c (add_virtual_operand): Update for\n \tmay_aliases being a bitmap.\n-\t\n+\n 2007-01-29  Daniel Berlin  <dberlin@dberlin.org>\n \n \tPR tree-optimization/30630\n@@ -441,15 +445,15 @@\n \n 2007-01-25  Razya Ladelsky  <razya@il.ibm.com>\n \n-\t* ipa-cp.c (ipcp_insert_stage, ipcp_driver): Support for SSA. \n-\t(ipcp_driver): Change to static definition. \n+\t* ipa-cp.c (ipcp_insert_stage, ipcp_driver): Support for SSA.\n+\t(ipcp_driver): Change to static definition.\n \tAdd dumping of the ifunctions.\n \t(constant_val_insert): Remove unused parameter. Support for SSA.\n \t(ipcp_propagate_const): Support for SSA.\n \t(ipcp_profile_bb_print): Print only analyzed nodes.\n-\t(ipcp_replace_map_create): Remove support for Fortran constant \n+\t(ipcp_replace_map_create): Remove support for Fortran constant\n \tfor now.\n-\t* ipa-prop.c (ipa_method_modify_stmt, \n+\t* ipa-prop.c (ipa_method_modify_stmt,\n \tipa_callsite_compute_param): Support for SSA.\n \t* ipa-prop.h (ipcp_driver): Remove declaration.\n \t(IS_VALID_TREE_MAP_INDEX): Add define.\n@@ -534,7 +538,7 @@\n \n 2007-01-24  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n-\t* unwind-dw2-fde.c (get_cie_encoding): Replaced _Unwind_Word with \n+\t* unwind-dw2-fde.c (get_cie_encoding): Replaced _Unwind_Word with\n \t_uleb128_t and _Unwind_SWord with _sleb128_t.\n \t* unwind-dw2.c (extract_cie_info, execute_stack_op, execute_cfa_program,\n \tuw_frame_state_for, uw_update_context_1): Likewise.\n@@ -741,17 +745,17 @@\n \n 2007-01-21  Ira Rosen  <irar@il.ibm.com>\n \n-\t* tree-vectorizer.h (struct _stmt_vec_info): Add new field \n+\t* tree-vectorizer.h (struct _stmt_vec_info): Add new field\n \tread_write_dep and macros for its access.\n \t* tree-vectorizer.c (new_stmt_vec_info): Initialize the new field.\n-\t* tree-vect-analyze.c (vect_analyze_data_ref_dependence): Remove \n+\t* tree-vect-analyze.c (vect_analyze_data_ref_dependence): Remove\n \targument, call vect_check_interleaving for every independent pair of\n \tdata-refs. Mark loads that access the same memory location as a store\n \tin the loop.\n \t(vect_check_dependences): Remove.\n-\t(vect_analyze_data_ref_dependences): Remove  vect_check_dependences \n+\t(vect_analyze_data_ref_dependences): Remove  vect_check_dependences\n \tcall, fix the call to vect_analyze_data_ref_dependence.\n-\t(vect_analyze_data_ref_access): For statements that access the same \n+\t(vect_analyze_data_ref_access): For statements that access the same\n \tdata-ref, check that they are not stores; for loads, check that there\n \tis no store that access the same location.\n \n@@ -876,7 +880,7 @@\n \t__gcov_one_value_profiler_body and calls it\n \n 2007-01-19  Basile Starynkevitch  <basile@starynkevitch.net>\n-\t\n+\n \t* doc/gty.texi (Options): Document the mark_hook option to GTY.\n         * gengtype.c (write_types_data, write_func_for_structure,\n         write_types, ggc_wtd, pch_wtd): Add skip_hooks to\n@@ -897,7 +901,7 @@\n \tPR c++/17947\n \t* toplev.c (warn_deprecated_use): Use %qD instead of %qs to print\n \tthe name of the declared identifier.\n-\t\t\n+\n 2007-01-19  Dirk Mueller  <dmueller@suse.de>\n \n \t* config/i386.h (CONDITIONAL_REGISTER_USAGE): Store\n@@ -1087,7 +1091,7 @@\n \t(merge_node_constraints): This. Also fix bug in handling of\n \toffseted copy constraints.\n \t(clear_edges_for_node): No longer need to deal with preds at all,\n-\tor removing associated preds/succs. \n+\tor removing associated preds/succs.\n \t(merge_graph_nodes): Deal with indirect_cycles.\n \tDon't deal with predecessors.\n \t(add_implicit_graph_edge): New function.\n@@ -1535,18 +1539,18 @@\n \t(AVR_HAVE_MUL): ... new.\n \t(avr_enhanced_p): Rename to ...\n \t(avr_have_mul_p): ... new.\n-\t(TARGET_CPU_CPP_BUILTINS): Use 'avr_have_mul_p' instead of \n+\t(TARGET_CPU_CPP_BUILTINS): Use 'avr_have_mul_p' instead of\n \t'avr_enhanced_p' for \"__AVR_ENHANCED__\". Define \"__AVR_HAVE_MUL__\".\n \t* config/avr/avr.c (avr_enhanced_p): Rename to ...\n \t(avr_have_mul_p): ... new.\n \t(base_arch_s): Rename 'enhanced' to 'have_mul'.\n \t(avr_override_options): Use 'avr_have_mul_p' and 'have_mul' instead of\n \t'avr_enhanced_p' and 'enhanced'.\n-\t(ashlhi3_out, ashrhi3_out, lshrhi3_out, avr_rtx_costs): Use \n+\t(ashlhi3_out, ashrhi3_out, lshrhi3_out, avr_rtx_costs): Use\n \tAVR_HAVE_MUL instead of AVR_ENHANCED.\n \t* avr.md (*tablejump_enh): Use AVR_HAVE_LPMX instead of AVR_ENHANCED.\n-\t(mulqi3, *mulqi3_enh, *mulqi3_call, mulqihi3, umulqihi3, mulhi3, \n-\t*mulhi3_enh, *mulhi3_call, mulsi3, *mulsi3_call): Use AVR_HAVE_MUL \n+\t(mulqi3, *mulqi3_enh, *mulqi3_call, mulqihi3, umulqihi3, mulhi3,\n+\t*mulhi3_enh, *mulhi3_call, mulsi3, *mulsi3_call): Use AVR_HAVE_MUL\n \tinstead of AVR_ENHANCED.\n \t(*tablejump_enh): Use AVR_HAVE_LPMX instead of AVR_ENHANCED.\n \t* libgcc.S: Use __AVR_HAVE_MUL__ instead of __AVR_ENHANCED__."}, {"sha": "0fcaa8f9d0c3643d6770aa6211205d00d9f2dbc7", "filename": "gcc/config.gcc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/537bbabdc32f48c72bbd20dfd7f0b9ce57482fd2/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/537bbabdc32f48c72bbd20dfd7f0b9ce57482fd2/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=537bbabdc32f48c72bbd20dfd7f0b9ce57482fd2", "patch": "@@ -2577,6 +2577,9 @@ if test x$with_cpu = x ; then\n         athlon_tbird-*|athlon-*)\n           with_cpu=athlon\n           ;;\n+\tgeode-*)\n+\t  with_cpu=geode\n+\t  ;;\n         pentium2-*)\n           with_cpu=pentium2\n           ;;\n@@ -2861,7 +2864,7 @@ case \"${target}\" in\n \t\t\t| i586 | pentium | pentium-mmx | winchip-c6 | winchip2 \\\n \t\t\t| c3 | c3-2 | i686 | pentiumpro | pentium2 | pentium3 \\\n \t\t\t| pentium4 | k6 | k6-2 | k6-3 | athlon | athlon-tbird \\\n-\t\t\t| athlon-4 | athlon-xp | athlon-mp \\\n+\t\t\t| athlon-4 | athlon-xp | athlon-mp | geode \\\n \t\t\t| prescott | pentium-m | pentium4m | pentium3m)\n \t\t\t\tcase \"${target}\" in\n \t\t\t\t  x86_64-*-*)"}]}