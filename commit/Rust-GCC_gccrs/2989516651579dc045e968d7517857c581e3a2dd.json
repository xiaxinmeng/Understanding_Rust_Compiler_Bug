{"sha": "2989516651579dc045e968d7517857c581e3a2dd", "node_id": "C_kwDOANBUbNoAKDI5ODk1MTY2NTE1NzlkYzA0NWU5NjhkNzUxNzg1N2M1ODFlM2EyZGQ", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-01-31T16:05:28Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2022-02-01T07:12:24Z"}, "message": "[ldist] Don't add lib calls with -fno-tree-loop-distribute-patterns\n\nAs mentioned in PR56888 comment 21:\n...\n-fno-tree-loop-distribute-patterns is the reliable way to not\ntransform loops into library calls.\n...\n\nHowever, since commit 6f966f06146 (\"ldist: Recognize strlen and rawmemchr like\nloops\") a strlen or rawmemchr library call may be introduced by ldist.\n\nThis caused regressions in testcases\ngcc.c-torture/execute/builtins/strlen{,-2,-3}.c for nvptx.\n\nFix this by not calling transform_reduction_loop from\nloop_distribution::execute for -fno-tree-loop-distribute-patterns.\n\nTested regressed test-cases as well as gcc.dg/tree-ssa/ldist-*.c on\nnvptx.\n\ngcc/ChangeLog:\n\n2022-01-31  Tom de Vries  <tdevries@suse.de>\n\n\t* tree-loop-distribution.cc (generate_reduction_builtin_1): Check for\n\t-ftree-loop-distribute-patterns.\n\t(loop_distribution::execute): Don't call transform_reduction_loop for\n\t-fno-tree-loop-distribute-patterns.\n\ngcc/testsuite/ChangeLog:\n\n2022-01-31  Tom de Vries  <tdevries@suse.de>\n\n\t* gcc.dg/tree-ssa/ldist-strlen-4.c: New test.", "tree": {"sha": "f9621a228dd4d3d1b0cd5fddec46a58b8f54b2ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9621a228dd4d3d1b0cd5fddec46a58b8f54b2ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2989516651579dc045e968d7517857c581e3a2dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2989516651579dc045e968d7517857c581e3a2dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2989516651579dc045e968d7517857c581e3a2dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2989516651579dc045e968d7517857c581e3a2dd/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bb52662574f6c98de48a5db8c180786e4a53039", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bb52662574f6c98de48a5db8c180786e4a53039", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bb52662574f6c98de48a5db8c180786e4a53039"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "eafb37e84fc39648081640d9ebfeaf6e3199f2bc", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ldist-strlen-4.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989516651579dc045e968d7517857c581e3a2dd/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fldist-strlen-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989516651579dc045e968d7517857c581e3a2dd/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fldist-strlen-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fldist-strlen-4.c?ref=2989516651579dc045e968d7517857c581e3a2dd", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-loop-distribution -fno-tree-loop-distribute-patterns -fdump-tree-ldist-details\" } */\n+/* { dg-final { scan-tree-dump-not \"generated strlen\" \"ldist\" } } */\n+\n+/* Copied from gcc/testsuite/gcc.c-torture/execute/builtins/lib/strlen.c.  */\n+\n+__SIZE_TYPE__\n+foo (const char *s)\n+{\n+  __SIZE_TYPE__ i;\n+\n+  i = 0;\n+  while (s[i] != 0)\n+    i++;\n+\n+  return i;\n+}"}, {"sha": "c7b42857263627665f5bd0241b77ad93c56b8c0a", "filename": "gcc/tree-loop-distribution.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2989516651579dc045e968d7517857c581e3a2dd/gcc%2Ftree-loop-distribution.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2989516651579dc045e968d7517857c581e3a2dd/gcc%2Ftree-loop-distribution.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.cc?ref=2989516651579dc045e968d7517857c581e3a2dd", "patch": "@@ -3290,6 +3290,8 @@ generate_reduction_builtin_1 (loop_p loop, gimple_seq &seq,\n \t\t\t      tree reduction_var_old, tree reduction_var_new,\n \t\t\t      const char *info, machine_mode load_mode)\n {\n+  gcc_assert (flag_tree_loop_distribute_patterns);\n+\n   /* Place new statements before LOOP.  */\n   gimple_stmt_iterator gsi = gsi_last_bb (loop_preheader_edge (loop)->src);\n   gsi_insert_seq_after (&gsi, seq, GSI_CONTINUE_LINKING);\n@@ -3773,7 +3775,8 @@ loop_distribution::execute (function *fun)\n       if (niters == NULL_TREE || niters == chrec_dont_know)\n \t{\n \t  datarefs_vec.create (20);\n-\t  if (transform_reduction_loop (loop))\n+\t  if (flag_tree_loop_distribute_patterns\n+\t      && transform_reduction_loop (loop))\n \t    {\n \t      changed = true;\n \t      loops_to_be_destroyed.safe_push (loop);"}]}