{"sha": "e43a157747ca2a71a4a55c16b2bc6299e9a636c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQzYTE1Nzc0N2NhMmE3MWE0YTU1YzE2YjJiYzYyOTllOWE2MzZjOA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.cumb.org", "date": "2000-05-10T19:29:20Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-05-10T19:29:20Z"}, "message": "cppexp.c (lex): Use %.*s to print non-NUL-terminated string.\n\n\t* cppexp.c (lex): Use %.*s to print non-NUL-terminated string.\n\tMake error message friendlier.\n\nFrom-SVN: r33829", "tree": {"sha": "f3b430924614b3fbd0ba60c6319d5b379b8108b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3b430924614b3fbd0ba60c6319d5b379b8108b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e43a157747ca2a71a4a55c16b2bc6299e9a636c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e43a157747ca2a71a4a55c16b2bc6299e9a636c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e43a157747ca2a71a4a55c16b2bc6299e9a636c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e43a157747ca2a71a4a55c16b2bc6299e9a636c8/comments", "author": null, "committer": null, "parents": [{"sha": "fa5572714eed920f6d162a1d7ab08d990926ba83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa5572714eed920f6d162a1d7ab08d990926ba83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa5572714eed920f6d162a1d7ab08d990926ba83"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "a942946f2cdbc85342c384f535da8afde77afd8d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43a157747ca2a71a4a55c16b2bc6299e9a636c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43a157747ca2a71a4a55c16b2bc6299e9a636c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e43a157747ca2a71a4a55c16b2bc6299e9a636c8", "patch": "@@ -1,5 +1,8 @@\n 2000-05-10  Zack Weinberg  <zack@wolery.cumb.org>\n \n+\t* cppexp.c (lex): Use %.*s to print non-NUL-terminated string.\n+\tMake error message friendlier.\n+\n \t* cpphash.h (struct hashnode): Use struct hack for name\n \tmember.\n \t* cpphash.c (struct hashdummy): New."}, {"sha": "7e99292f9a104534f93ae83d7a40498a410d0fad", "filename": "gcc/cppexp.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43a157747ca2a71a4a55c16b2bc6299e9a636c8/gcc%2Fcppexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43a157747ca2a71a4a55c16b2bc6299e9a636c8/gcc%2Fcppexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppexp.c?ref=e43a157747ca2a71a4a55c16b2bc6299e9a636c8", "patch": "@@ -466,8 +466,8 @@ lex (pfile, skip_evaluation)\n \t\t&& tok_start[1] == toktab->operator[1])\n \t\tbreak;\n \t  if (toktab->token == ERROR)\n-\t    cpp_error (pfile, \"'%s' not allowed in operand of #if\",\n-\t\t       tok_start);\n+\t    cpp_error (pfile, \"'%.*s' is not allowed in #if expressions\",\n+\t\t       (int) (tok_end - tok_start), tok_start);\n \t  op.op = toktab->token; \n \t  return op;\n \t}"}, {"sha": "84764fbf0f62d93a2de0124b789aeb537880df59", "filename": "gcc/testsuite/gcc.dg/cpp-if4.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e43a157747ca2a71a4a55c16b2bc6299e9a636c8/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp-if4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e43a157747ca2a71a4a55c16b2bc6299e9a636c8/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp-if4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp-if4.c?ref=e43a157747ca2a71a4a55c16b2bc6299e9a636c8", "patch": "@@ -0,0 +1,8 @@\n+/* Regression test for proper error message.  The token name isn't\n+   NUL terminated, so we would print garbage after it.  */\n+/* { dg-do compile } */\n+\n+#if 1 += 2   /* { dg-error \"'\\\\+=' is not allowed\" \"+= in if\" } */\n+syntax_error\n+#endif\n+int foo;"}]}