{"sha": "038eab67cde22a3405950a60bc62df7e4681f44e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM4ZWFiNjdjZGUyMmEzNDA1OTUwYTYwYmM2MmRmN2U0NjgxZjQ0ZQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2010-04-22T11:05:12Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2010-04-22T11:05:12Z"}, "message": "* config/stormy16/stormy16.c\n        (xstormy16_asm_output_aligned_common): Handle a NULL decl\n        parameter.\n        * config/stormy16/stormy16.h: Tidy up formatting.\n        (DONT_USE_BUILTIN_SETJMP): Remove definition.\n        * config/stormy16/stormy16.c (cbranchsi4): Delete pattern.\n        (ineqbranchsi): Delete pattern.\n        * config/stormy16/stormy16-lib2-ucmpsi2.c: New file.\n        * config/stormy16/stormy16-lib2.c (__ucmpsi2): New function.\n        * config/stormy16/t-stormy16 (LIB2FUNCS_EXTRA): Add\n        stormy16-lib2-ucmpsi2.c.\n\nFrom-SVN: r158640", "tree": {"sha": "313c8847909b5e642b4df8ef558c7361f2f62b68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/313c8847909b5e642b4df8ef558c7361f2f62b68"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/038eab67cde22a3405950a60bc62df7e4681f44e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/038eab67cde22a3405950a60bc62df7e4681f44e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/038eab67cde22a3405950a60bc62df7e4681f44e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/038eab67cde22a3405950a60bc62df7e4681f44e/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "907deb1a1e215a24985eb6b5db529feceb782d46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/907deb1a1e215a24985eb6b5db529feceb782d46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/907deb1a1e215a24985eb6b5db529feceb782d46"}], "stats": {"total": 410, "additions": 120, "deletions": 290}, "files": [{"sha": "a37cc4bec2246c78de37b250f3d15b78c3f0d1ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/038eab67cde22a3405950a60bc62df7e4681f44e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/038eab67cde22a3405950a60bc62df7e4681f44e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=038eab67cde22a3405950a60bc62df7e4681f44e", "patch": "@@ -1,3 +1,17 @@\n+2010-04-22  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/stormy16/stormy16.c\n+\t(xstormy16_asm_output_aligned_common): Handle a NULL decl\n+\tparameter.\n+\t* config/stormy16/stormy16.h: Tidy up formatting.\n+\t(DONT_USE_BUILTIN_SETJMP): Remove definition.\n+\t* config/stormy16/stormy16.c (cbranchsi4): Delete pattern.\n+\t(ineqbranchsi): Delete pattern.\n+\t* config/stormy16/stormy16-lib2-ucmpsi2.c: New file.\n+\t* config/stormy16/stormy16-lib2.c (__ucmpsi2): New function.\n+\t* config/stormy16/t-stormy16 (LIB2FUNCS_EXTRA): Add\n+\tstormy16-lib2-ucmpsi2.c.\n+\n 2010-04-22  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* ifcvt.c (dead_or_predicable): Use df_simulate_find_defs and"}, {"sha": "da1a3e7075352a073a4408a71eab28b3b7223f56", "filename": "gcc/config/stormy16/stormy16-lib2-ucmpsi2.c", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/038eab67cde22a3405950a60bc62df7e4681f44e/gcc%2Fconfig%2Fstormy16%2Fstormy16-lib2-ucmpsi2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/038eab67cde22a3405950a60bc62df7e4681f44e/gcc%2Fconfig%2Fstormy16%2Fstormy16-lib2-ucmpsi2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16-lib2-ucmpsi2.c?ref=038eab67cde22a3405950a60bc62df7e4681f44e", "patch": "@@ -0,0 +1,2 @@\n+#define XSTORMY16_UCMPSI2\n+#include \"stormy16-lib2.c\""}, {"sha": "b8f957e915cf63b5366378173b0be8c5ecdabad5", "filename": "gcc/config/stormy16/stormy16-lib2.c", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/038eab67cde22a3405950a60bc62df7e4681f44e/gcc%2Fconfig%2Fstormy16%2Fstormy16-lib2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/038eab67cde22a3405950a60bc62df7e4681f44e/gcc%2Fconfig%2Fstormy16%2Fstormy16-lib2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16-lib2.c?ref=038eab67cde22a3405950a60bc62df7e4681f44e", "patch": "@@ -4,7 +4,7 @@\n    files.  On this glorious day maybe this code can be integrated into\n    it too.  */\n \n-/* Copyright (C) 2005, 2008, 2009  Free Software Foundation, Inc.\n+/* Copyright (C) 2005, 2008, 2009, 2010  Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -309,3 +309,26 @@ __ffshi2 (UHWtype u)\n   return 16 - __builtin_clz (u & - u);\n }\n #endif\n+\n+#ifdef XSTORMY16_UCMPSI2\n+/* Performs an unsigned comparison of two 32-bit values: A and B.\n+   If A is less than B, then 0 is returned.  If A is greater than B,\n+   then 2 is returned.  Otherwise A and B are equal and 1 is returned.  */\n+\n+word_type\n+__ucmpsi2 (USItype a, USItype b)\n+{\n+  word_type hi_a = (a << 16);\n+  word_type hi_b = (b << 16);\n+\n+  if (hi_a == hi_b)\n+    {\n+      word_type low_a = (a & 0xff);\n+      word_type low_b = (b & 0xff);\n+\n+      return low_a < low_b ? 0 : (low_a > low_b ? 2 : 1);\n+    }\n+\n+  return hi_a < hi_b ? 0 : 2;\n+}\n+#endif"}, {"sha": "c3627ca6e96cd09d3af8b3031ced72a92f8d19de", "filename": "gcc/config/stormy16/stormy16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/038eab67cde22a3405950a60bc62df7e4681f44e/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/038eab67cde22a3405950a60bc62df7e4681f44e/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.c?ref=038eab67cde22a3405950a60bc62df7e4681f44e", "patch": "@@ -1561,7 +1561,7 @@ xstormy16_asm_output_aligned_common (FILE *stream,\n \t\t\t\t     int align,\n \t\t\t\t     int global)\n {\n-  rtx mem = DECL_RTL (decl);\n+  rtx mem = decl == NULL_TREE ? NULL_RTX : DECL_RTL (decl);\n   rtx symbol;\n \n   if (mem != NULL_RTX"}, {"sha": "cf6acf586c237f5e7af724b90d2e150891cf871e", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 76, "deletions": 253, "changes": 329, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/038eab67cde22a3405950a60bc62df7e4681f44e/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/038eab67cde22a3405950a60bc62df7e4681f44e/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=038eab67cde22a3405950a60bc62df7e4681f44e", "patch": "@@ -1,71 +1,62 @@\n /* Xstormy16 cpu description.\n    Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2007,\n-   2008, 2009  Free Software Foundation, Inc.\n+   2008, 2009, 2010  Free Software Foundation, Inc.\n    Contributed by Red Hat, Inc.\n \n-This file is part of GCC.\n+   This file is part of GCC.\n \n-GCC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 3, or (at your option)\n-any later version.\n+   GCC is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 3, or (at your option)\n+   any later version.\n \n-GCC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n+   GCC is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n \n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING3.  If not see\n-<http://www.gnu.org/licenses/>.  */\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.  */\n \n \f\n-/* Driver configuration */\n+/* Driver configuration.  */\n \n-/* Defined in svr4.h.  */\n-#undef ASM_SPEC\n+#undef  ASM_SPEC\n #define ASM_SPEC \"\"\n \n /* For xstormy16:\n    - If -msim is specified, everything is built and linked as for the sim.\n    - If -T is specified, that linker script is used, and it should provide\n      appropriate libraries.\n    - If neither is specified, everything is built as for the sim, but no\n-     I/O support is assumed.\n-\n-*/\n-#undef LIB_SPEC\n+     I/O support is assumed.  */\n+#undef  LIB_SPEC\n #define LIB_SPEC \"-( -lc %{msim:-lsim}%{!msim:%{!T*:-lnosys}} -)\"\n \n-/* Defined in svr4.h.  */\n-#undef STARTFILE_SPEC\n+#undef  STARTFILE_SPEC\n #define STARTFILE_SPEC \"crt0.o%s crti.o%s crtbegin.o%s\"\n \n-/* Defined in svr4.h.  */\n-#undef ENDFILE_SPEC\n+#undef  ENDFILE_SPEC\n #define ENDFILE_SPEC \"crtend.o%s crtn.o%s\"\n \n-/* Defined in svr4.h for host compilers.  */\n-/* #define MD_EXEC_PREFIX \"\" */\n-\n-/* Defined in svr4.h for host compilers.  */\n-/* #define MD_STARTFILE_PREFIX \"\" */\n-\n \f\n-/* Run-time target specifications */\n+/* Run-time target specifications.  */\n \n-#define TARGET_CPU_CPP_BUILTINS() do {\t\\\n-  builtin_define_std (\"xstormy16\");\t\\\n-  builtin_assert (\"machine=xstormy16\");\t\\\n-  builtin_assert (\"cpu=xstormy16\");     \\\n-} while (0)\n+#define TARGET_CPU_CPP_BUILTINS()\t\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      builtin_define_std (\"xstormy16\");\t\t\\\n+      builtin_assert (\"machine=xstormy16\");\t\\\n+      builtin_assert (\"cpu=xstormy16\");\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n #define TARGET_VERSION fprintf (stderr, \" (xstormy16 cpu core)\");\n \n #define CAN_DEBUG_WITHOUT_FP\n-\n \f\n-/* Storage Layout */\n+/* Storage Layout.  */\n \n #define BITS_BIG_ENDIAN 1\n \n@@ -75,12 +66,14 @@ along with GCC; see the file COPYING3.  If not see\n \n #define UNITS_PER_WORD 2\n \n-#define PROMOTE_MODE(MODE,UNSIGNEDP,TYPE)\t\t\t\t\\\n-do {\t\t\t\t\t\t\t\t\t\\\n-  if (GET_MODE_CLASS (MODE) == MODE_INT\t\t\t\t\t\\\n-      && GET_MODE_SIZE (MODE) < 2)\t\t\t\t\t\\\n-    (MODE) = HImode;\t\t\t\t\t\t\t\\\n-} while (0)\n+#define PROMOTE_MODE(MODE,UNSIGNEDP,TYPE)\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      if (GET_MODE_CLASS (MODE) == MODE_INT\t\\\n+\t  && GET_MODE_SIZE (MODE) < 2)\t\t\\\n+\t(MODE) = HImode;\t\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n #define PARM_BOUNDARY 16\n \n@@ -90,9 +83,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #define BIGGEST_ALIGNMENT 16\n \n-/* Defined in svr4.h.  */\n-/* #define MAX_OFILE_ALIGNMENT */\n-\n #define DATA_ALIGNMENT(TYPE, ALIGN)\t\t\\\n   (TREE_CODE (TYPE) == ARRAY_TYPE\t\t\\\n    && TYPE_MODE (TREE_TYPE (TYPE)) == QImode\t\\\n@@ -104,10 +94,9 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #define STRICT_ALIGNMENT 1\n \n-/* Defined in svr4.h.  */\n #define PCC_BITFIELD_TYPE_MATTERS 1\n \f\n-/* Layout of Source Language Data Types */\n+/* Layout of Source Language Data Types.  */\n \n #define INT_TYPE_SIZE 16\n \n@@ -125,27 +114,15 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #define DEFAULT_SIGNED_CHAR 0\n \n-/* Defined in svr4.h.  */\n #define SIZE_TYPE \"unsigned int\"\n \n-/* Defined in svr4.h.  */\n #define PTRDIFF_TYPE \"int\"\n \n-/* Defined in svr4.h, to \"long int\".  */\n-/* #define WCHAR_TYPE \"long int\" */\n-\n-/* Defined in svr4.h.  */\n-#undef WCHAR_TYPE_SIZE\n+#undef  WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE 32\n \n-/* Define this macro if the type of Objective-C selectors should be `int'.\n-\n-   If this macro is not defined, then selectors should have the type `struct\n-   objc_selector *'.  */\n-/* #define OBJC_INT_SELECTORS */\n-\n \f\n-/* Register Basics */\n+/* Register Basics.  */\n \n #define FIRST_PSEUDO_REGISTER 19\n \n@@ -156,12 +133,12 @@ do {\t\t\t\t\t\t\t\t\t\\\n   { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1 }\n \n \f\n-/* Order of allocation of registers */\n+/* Order of allocation of registers.  */\n \n #define REG_ALLOC_ORDER { 7, 6, 5, 4, 3, 2, 1, 0, 9, 8, 10, 11, 12, 13, 14, 15, 16 }\n \n \f\n-/* How Values Fit in Registers */\n+/* How Values Fit in Registers.  */\n \n #define HARD_REGNO_NREGS(REGNO, MODE) \t\t\t\t\\\n   ((GET_MODE_SIZE (MODE) + UNITS_PER_WORD - 1) / UNITS_PER_WORD)\n@@ -178,7 +155,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define MODES_TIEABLE_P(MODE1, MODE2) ((MODE1) != BImode && (MODE2) != BImode)\n \n \f\n-/* Register Classes */\n+/* Register Classes.  */\n \n enum reg_class\n {\n@@ -199,7 +176,7 @@ enum reg_class\n \n #define IRA_COVER_CLASSES\t\t\t\\\n {\t\t\t\t\t\t\\\n-  GENERAL_REGS, LIM_REG_CLASSES\t\\\n+  GENERAL_REGS, LIM_REG_CLASSES\t\t\t\\\n }\n \n #define REG_CLASS_NAMES\t\t\t\t\\\n@@ -251,7 +228,7 @@ enum reg_class\n \t'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P'\n \t'Q', 'R', 'S', 'T', 'U'\n \t'V', 'X'\n-\t'g', 'i', 'm', 'n', 'o', 'p', 'r', 's' */\n+\t'g', 'i', 'm', 'n', 'o', 'p', 'r', 's'.  */\n \n #define REG_CLASS_FROM_LETTER(CHAR)\t\t\\\n  (  (CHAR) == 'a' ? R0_REGS\t\t\t\\\n@@ -267,7 +244,6 @@ enum reg_class\n \n #define REGNO_OK_FOR_INDEX_P(NUM) REGNO_OK_FOR_BASE_P (NUM)\n \n-/* This declaration must be present.  */\n #define PREFERRED_RELOAD_CLASS(X, CLASS) \\\n   xstormy16_preferred_reload_class (X, CLASS)\n \n@@ -279,40 +255,9 @@ enum reg_class\n #define SECONDARY_RELOAD_CLASS(CLASS, MODE, X)\t\t\t\\\n   xstormy16_secondary_reload_class (CLASS, MODE, X)\n \n-/* Normally the compiler avoids choosing registers that have been explicitly\n-   mentioned in the rtl as spill registers (these registers are normally those\n-   used to pass parameters and return values).  However, some machines have so\n-   few registers of certain classes that there would not be enough registers to\n-   use as spill registers if this were done.\n-\n-   Define `SMALL_REGISTER_CLASSES' to be an expression with a nonzero value on\n-   these machines.  When this macro has a nonzero value, the compiler allows\n-   registers explicitly used in the rtl to be used as spill registers but\n-   avoids extending the lifetime of these registers.\n-\n-   It is always safe to define this macro with a nonzero value, but if you\n-   unnecessarily define it, you will reduce the amount of optimizations that\n-   can be performed in some cases.  If you do not define this macro with a\n-   nonzero value when it is required, the compiler will run out of spill\n-   registers and print a fatal error message.  For most machines, you should\n-   not define this macro at all.  */\n-/* #define SMALL_REGISTER_CLASSES */\n-\n-/* This declaration is required.  */\n #define CLASS_MAX_NREGS(CLASS, MODE) \\\n   ((GET_MODE_SIZE (MODE) + UNITS_PER_WORD - 1) / UNITS_PER_WORD)\n \n-/* If defined, a C expression for a class that contains registers which the\n-   compiler must always access in a mode that is the same size as the mode in\n-   which it loaded the register.\n-\n-   For the example, loading 32-bit integer or floating-point objects into\n-   floating-point registers on the Alpha extends them to 64-bits.  Therefore\n-   loading a 64-bit object and then storing it as a 32-bit object does not\n-   store the low-order 32-bits, as would be the case for a normal register.\n-   Therefore, `alpha.h' defines this macro as `FLOAT_REGS'.  */\n-/* #define CLASS_CANNOT_CHANGE_SIZE */\n-\n #define CONST_OK_FOR_LETTER_P(VALUE, C)\t\t\t\\\n   (  (C) == 'I' ? (VALUE) >= 0 && (VALUE) <= 3\t\t\\\n    : (C) == 'J' ? exact_log2 (VALUE) != -1\t\t\\\n@@ -330,7 +275,7 @@ enum reg_class\n   xstormy16_extra_constraint_p (VALUE, C)\n \n \f\n-/* Basic Stack Layout */\n+/* Basic Stack Layout.  */\n \n /* We want to use post-increment instructions to push things on the stack,\n    because we don't have any pre-increment ones.  */\n@@ -365,7 +310,7 @@ enum reg_class\n #define ARG_POINTER_REGNUM\t18\n \n \f\n-/* Eliminating the Frame Pointer and the Arg Pointer */\n+/* Eliminating the Frame Pointer and the Arg Pointer.  */\n \n #define ELIMINABLE_REGS\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\\\n@@ -379,16 +324,16 @@ enum reg_class\n   (OFFSET) = xstormy16_initial_elimination_offset (FROM, TO)\n \n \f\n-/* Passing Function Arguments on the Stack */\n+/* Passing Function Arguments on the Stack.  */\n \n #define PUSH_ROUNDING(BYTES) (((BYTES) + 1) & ~1)\n \n #define RETURN_POPS_ARGS(FUNDECL, FUNTYPE, STACK_SIZE) 0\n \n \f\n-/* Function Arguments in Registers */\n+/* Function Arguments in Registers.  */\n \n-#define NUM_ARGUMENT_REGISTERS 6\n+#define NUM_ARGUMENT_REGISTERS  6\n #define FIRST_ARGUMENT_REGISTER 2\n \n #define XSTORMY16_WORD_SIZE(TYPE, MODE)\t\t\t\t\\\n@@ -414,7 +359,7 @@ enum reg_class\n    && (REGNO) < FIRST_ARGUMENT_REGISTER + NUM_ARGUMENT_REGISTERS)\n \n \f\n-/* How Scalar Function Values are Returned */\n+/* How Scalar Function Values are Returned.  */\n \n /* The number of the hard register that is used to return a scalar value from a\n    function call.  */\n@@ -428,7 +373,7 @@ enum reg_class\n #define FUNCTION_VALUE_REGNO_P(REGNO) ((REGNO) == RETURN_VALUE_REGNUM)\n \n \f\n-/* Function Entry and Exit */\n+/* Function Entry and Exit.  */\n \n #define EPILOGUE_USES(REGNO) \\\n   xstormy16_epilogue_uses (REGNO)\n@@ -441,82 +386,14 @@ enum reg_class\n      \n #define FUNCTION_PROFILER(FILE, LABELNO) xstormy16_function_profiler ()\n \n-\f\n-/* If the target has particular reasons why a function cannot be inlined,\n-   it may define the TARGET_CANNOT_INLINE_P.  This macro takes one argument,\n-   the DECL describing the function.  The function should NULL if the function\n-   *can* be inlined.  Otherwise it should return a pointer to a string containing\n-   a message describing why the function could not be inlined.  The message will\n-   displayed if the '-Winline' command line switch has been given.  If the message\n-   contains a '%s' sequence, this will be replaced by the name of the function.  */\n-/* #define TARGET_CANNOT_INLINE_P(FN_DECL) xstormy16_cannot_inline_p (FN_DECL) */\n \f\n /* Trampolines for Nested Functions.  */\n \n #define TRAMPOLINE_SIZE 8\n #define TRAMPOLINE_ALIGNMENT 16\n \f\n-/* Define this macro to override the type used by the library routines to pick\n-   up arguments of type `float'.  (By default, they use a union of `float' and\n-   `int'.)\n-\n-   The obvious choice would be `float'--but that won't work with traditional C\n-   compilers that expect all arguments declared as `float' to arrive as\n-   `double'.  To avoid this conversion, the library routines ask for the value\n-   as some other type and then treat it as a `float'.  */\n-/* #define FLOAT_ARG_TYPE */\n-\n-/* Define this macro to override the way library routines redesignate a `float'\n-   argument as a `float' instead of the type it was passed as.  The default is\n-   an expression which takes the `float' field of the union.  */\n-/* #define FLOATIFY(PASSED_VALUE) */\n-\n-/* Define this macro to override the type used by the library routines to\n-   return values that ought to have type `float'.  (By default, they use\n-   `int'.)\n-\n-   The obvious choice would be `float'--but that won't work with traditional C\n-   compilers gratuitously convert values declared as `float' into `double'.  */\n-/* #define FLOAT_VALUE_TYPE */\n-\n-/* Define this macro to override the way the value of a `float'-returning\n-   library routine should be packaged in order to return it.  These functions\n-   are actually declared to return type `FLOAT_VALUE_TYPE' (normally `int').\n-\n-   These values can't be returned as type `float' because traditional C\n-   compilers would gratuitously convert the value to a `double'.\n-\n-   A local variable named `intify' is always available when the macro `INTIFY'\n-   is used.  It is a union of a `float' field named `f' and a field named `i'\n-   whose type is `FLOAT_VALUE_TYPE' or `int'.\n \n-   If you don't define this macro, the default definition works by copying the\n-   value through that union.  */\n-/* #define INTIFY(FLOAT_VALUE) */\n-\n-/* Define this macro as the name of the data type corresponding to `SImode' in\n-   the system's own C compiler.\n-\n-   You need not define this macro if that type is `long int', as it usually is.  */\n-/* #define nongcc_SI_type */\n-\n-/* Define this macro as the name of the data type corresponding to the\n-   word_mode in the system's own C compiler.\n-\n-   You need not define this macro if that type is `long int', as it usually is.  */\n-/* #define nongcc_word_type */\n-\n-/* Define these macros to supply explicit C statements to carry out various\n-   arithmetic operations on types `float' and `double' in the library routines\n-   in `libgcc1.c'.  See that file for a full list of these macros and their\n-   arguments.\n-\n-   On most machines, you don't need to define any of these macros, because the\n-   C compiler that comes with the system takes care of doing them.  */\n-/* #define perform_...  */\n-\n-\f\n-/* Addressing Modes */\n+/* Addressing Modes.  */\n \n #define HAVE_POST_INCREMENT 1\n \n@@ -536,16 +413,15 @@ enum reg_class\n /* On this chip, this is true if the address is valid with an offset\n    of 0 but not of 6, because in that case it cannot be used as an\n    address for DImode or DFmode, or if the address is a post-increment\n-   or pre-decrement address.\n-*/\n+   or pre-decrement address.  */\n #define GO_IF_MODE_DEPENDENT_ADDRESS(ADDR,LABEL)\t\t\t\\\n-  if (xstormy16_mode_dependent_address_p (ADDR))\t\t\t\t\\\n+  if (xstormy16_mode_dependent_address_p (ADDR))\t\t\t\\\n     goto LABEL\n \n #define LEGITIMATE_CONSTANT_P(X) 1\n \n \f\n-/* Describing Relative Costs of Operations */\n+/* Describing Relative Costs of Operations.  */\n \n #define REGISTER_MOVE_COST(MODE, FROM, TO) 2\n \n@@ -602,63 +478,30 @@ enum reg_class\n /* Output and Generation of Labels.  */\n #define SYMBOL_FLAG_XSTORMY16_BELOW100\t(SYMBOL_FLAG_MACH_DEP << 0)\n \n-#define ASM_OUTPUT_SYMBOL_REF(STREAM, SYMBOL)\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    const char *rn = XSTR (SYMBOL, 0);\t\t\t\t\t\\\n-    if (SYMBOL_REF_FUNCTION_P (SYMBOL))\t\t\t\t\t\\\n-      ASM_OUTPUT_LABEL_REF ((STREAM), rn);\t\t\t\t\\\n-    else\t\t\t\t\t\t\t\t\\\n-      assemble_name (STREAM, rn);\t\t\t\t\t\\\n-  } while (0)\n+#define ASM_OUTPUT_SYMBOL_REF(STREAM, SYMBOL)\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      const char *rn = XSTR (SYMBOL, 0);\t\\\n+\t\t\t\t\t\t\\\n+      if (SYMBOL_REF_FUNCTION_P (SYMBOL))\t\\\n+\tASM_OUTPUT_LABEL_REF ((STREAM), rn);\t\\\n+      else\t\t\t\t\t\\\n+\tassemble_name (STREAM, rn);\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n #define ASM_OUTPUT_LABEL_REF(STREAM, NAME)\t\\\n-do  {\t\t\t\t\t\t\\\n-  fputs (\"@fptr(\", STREAM);\t\t\t\\\n-  assemble_name (STREAM, NAME);\t\t\t\\\n-  fputc (')', STREAM);\t\t\t\t\\\n-} while (0)\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      fputs (\"@fptr(\", STREAM);\t\t\t\\\n+      assemble_name (STREAM, NAME);\t\t\\\n+      fputc (')', STREAM);\t\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \n /* Globalizing directive for a label.  */\n #define GLOBAL_ASM_OP \"\\t.globl \"\n \n-\f\n-/* Macros Controlling Initialization Routines.  */\n-\n-/* When you are using special sections for\n-   initialization and termination functions, this macro also controls how\n-   `crtstuff.c' and `libgcc2.c' arrange to run the initialization functions.\n-\n-   Defined in svr4.h.  */\n-/* #define INIT_SECTION_ASM_OP */\n-\n-/* Define this macro as a C statement to output on the stream STREAM the\n-   assembler code to arrange to call the function named NAME at initialization\n-   time.\n-\n-   Assume that NAME is the name of a C function generated automatically by the\n-   compiler.  This function takes no arguments.  Use the function\n-   `assemble_name' to output the name NAME; this performs any system-specific\n-   syntactic transformations such as adding an underscore.\n-\n-   If you don't define this macro, nothing special is output to arrange to call\n-   the function.  This is correct when the function will be called in some\n-   other manner--for example, by means of the `collect2' program, which looks\n-   through the symbol table to find these functions by their names.\n-\n-   Defined in svr4.h.  */\n-/* #define ASM_OUTPUT_CONSTRUCTOR(STREAM, NAME) */\n-\n-/* This is like `ASM_OUTPUT_CONSTRUCTOR' but used for termination functions\n-   rather than initialization functions.\n-\n-   Defined in svr4.h.  */\n-/* #define ASM_OUTPUT_DESTRUCTOR(STREAM, NAME) */\n-\n-/* Define this macro if the system uses ELF format object files.\n-\n-   Defined in svr4.h.  */\n-/* #define OBJECT_FORMAT_ELF */\n-\n \f\n /* Output of Assembler Instructions.  */\n \n@@ -705,9 +548,7 @@ do  {\t\t\t\t\t\t\\\n #define DWARF2_UNWIND_INFO \t\t0\n #define DWARF_CIE_DATA_ALIGNMENT\t1\n \n-/* Don't use __builtin_setjmp for unwinding, since it's tricky to get\n-   at the high 16 bits of an address.  */\n-#define DONT_USE_BUILTIN_SETJMP\n+#undef  DONT_USE_BUILTIN_SETJMP\n #define JMP_BUF_SIZE  8\n \f\n /* Assembler Commands for Alignment.  */\n@@ -719,7 +560,7 @@ do  {\t\t\t\t\t\t\\\n /* Macros Affecting all Debug Formats.  */\n \n /* Defined in svr4.h.  */\n-#undef PREFERRED_DEBUGGING_TYPE\n+#undef  PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n \n \f\n@@ -757,22 +598,4 @@ do  {\t\t\t\t\t\t\\\n \n #define NO_IMPLICIT_EXTERN_C\n \n-/* Defined in svr4.h.  */\n #define HANDLE_SYSV_PRAGMA 1\n-\n-/* Define this if the target system supports the function `atexit' from the\n-   ANSI C standard.  If this is not defined, and `INIT_SECTION_ASM_OP' is not\n-   defined, a default `exit' function will be provided to support C++.\n-\n-   Defined by svr4.h */\n-/* #define HAVE_ATEXIT */\n-\n-/* A C statement which is executed by the Haifa scheduler after it has scheduled\n-   an insn from the ready list.  FILE is either a null pointer, or a stdio stream\n-   to write any debug output to.  VERBOSE is the verbose level provided by\n-   -fsched-verbose-<n>.  INSN is the instruction that was scheduled.  MORE is the\n-   number of instructions that can be issued in the current cycle.  This macro\n-   is responsible for updating the value of MORE (typically by (MORE)--).  */\n-/* #define MD_SCHED_VARIABLE_ISSUE (FILE, VERBOSE, INSN, MORE) */\n-\n-/* End of xstormy16.h */"}, {"sha": "d8113420abac50ac83dad0801d9166c74e610621", "filename": "gcc/config/stormy16/stormy16.md", "status": "modified", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/038eab67cde22a3405950a60bc62df7e4681f44e/gcc%2Fconfig%2Fstormy16%2Fstormy16.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/038eab67cde22a3405950a60bc62df7e4681f44e/gcc%2Fconfig%2Fstormy16%2Fstormy16.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.md?ref=038eab67cde22a3405950a60bc62df7e4681f44e", "patch": "@@ -759,21 +759,6 @@\n   DONE;\n })\n \n-(define_expand \"cbranchsi4\"\n-  [(set (pc)\n-\t(if_then_else (match_operator 0 \"comparison_operator\"\n-\t\t\t\t      [(match_operand:SI 1 \"register_operand\" \"\")\n-\t\t\t\t       (match_operand:SI 2 \"nonmemory_operand\" \"\")])\n-\t\t      (label_ref (match_operand 3 \"\" \"\"))\n-\t\t      (pc)))\n-   (clobber (reg:BI CARRY_REG))]\n-  \"\"\n-  {\n-  xstormy16_emit_cbranch (GET_CODE (operands[0]), operands[1], operands[2],\n-\t\t\t  operands[3]);\n-  DONE;\n-})\n-\n (define_insn \"cbranchhi\"\n   [(set (pc)\n \t(if_then_else (match_operator:HI 1 \"comparison_operator\"\n@@ -827,24 +812,6 @@\n   [(set_attr \"branch_class\" \"bcc8p2\")\n    (set_attr \"psw_operand\" \"clobber\")])\n \n-(define_insn_and_split \"*ineqbranchsi\"\n-  [(set (pc)\n-\t(if_then_else (match_operator:SI 1 \"xstormy16_ineqsi_operator\"\n-\t\t\t\t      [(match_operand:SI 2 \"register_operand\"\n-\t\t\t\t\t\t\t \"r\")\n-\t\t\t\t       (match_operand:SI 3 \"nonmemory_operand\"\n-\t\t\t\t\t\t\t \"ri\")])\n-\t\t      (label_ref (match_operand 0 \"\" \"\"))\n-\t\t      (pc)))\n-   (clobber (match_operand:SI 4 \"register_operand\" \"=2\"))\n-   (clobber (reg:BI CARRY_REG))]\n-  \"\"\n-  \"#\"\n-  \"reload_completed\"\n-  [(pc)]\n-  { xstormy16_split_cbranch (SImode, operands[0], operands[1], operands[2]); DONE; }\n-  [(set_attr \"length\" \"8\")])\n-\n (define_insn \"*ineqbranch_1\"\n   [(set (pc)\n \t(if_then_else (match_operator:HI 4 \"xstormy16_ineqsi_operator\""}, {"sha": "7ca26356cb7189f3bab49d6710c70edbc644fb02", "filename": "gcc/config/stormy16/t-stormy16", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/038eab67cde22a3405950a60bc62df7e4681f44e/gcc%2Fconfig%2Fstormy16%2Ft-stormy16", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/038eab67cde22a3405950a60bc62df7e4681f44e/gcc%2Fconfig%2Fstormy16%2Ft-stormy16", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Ft-stormy16?ref=038eab67cde22a3405950a60bc62df7e4681f44e", "patch": "@@ -1,6 +1,6 @@\n # -*- makefile -*-\n #\n-# Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n+# Copyright (C) 2001, 2004, 2010 Free Software Foundation, Inc.\n #\n # This file is part of GCC.\n #\n@@ -32,7 +32,8 @@ LIB2FUNCS_EXTRA = \\\n \t$(srcdir)/config/stormy16/stormy16-lib2-parityhi2.c \\\n \t$(srcdir)/config/stormy16/stormy16-lib2-clzhi2.c \\\n \t$(srcdir)/config/stormy16/stormy16-lib2-ctzhi2.c \\\n-\t$(srcdir)/config/stormy16/stormy16-lib2-ffshi2.c\n+\t$(srcdir)/config/stormy16/stormy16-lib2-ffshi2.c \\\n+\t$(srcdir)/config/stormy16/stormy16-lib2-ucmpsi2.c\n \n # Floating point emulation libraries.\n FPBIT = fp-bit.c"}]}