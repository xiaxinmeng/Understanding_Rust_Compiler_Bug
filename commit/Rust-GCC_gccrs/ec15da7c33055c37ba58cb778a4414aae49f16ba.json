{"sha": "ec15da7c33055c37ba58cb778a4414aae49f16ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMxNWRhN2MzMzA1NWMzN2JhNThjYjc3OGE0NDE0YWFlNDlmMTZiYQ==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-02-24T21:21:55Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-02-25T18:04:32Z"}, "message": "libstdc++: LWG 3325 Constrain return type of transformation function for transform_view\n\nlibstdc++-v3/ChangeLog:\n\n\tLWG 3325 Constrain return type of transformation function for\n\ttransform_view\n\t* include/std/ranges (transform_view): Constrain the return type of the\n\ttransformation function as per LWG 3325.\n\t* testsuite/std/ranges/adaptors/lwg3325_neg.cc: New test.", "tree": {"sha": "f8f6e536d68589d03c58f5e12891623a3657a26e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8f6e536d68589d03c58f5e12891623a3657a26e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec15da7c33055c37ba58cb778a4414aae49f16ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec15da7c33055c37ba58cb778a4414aae49f16ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec15da7c33055c37ba58cb778a4414aae49f16ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec15da7c33055c37ba58cb778a4414aae49f16ba/comments", "author": null, "committer": null, "parents": [{"sha": "55c4b3f486200bcfd6c5c333754e6abb7acd470c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55c4b3f486200bcfd6c5c333754e6abb7acd470c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55c4b3f486200bcfd6c5c333754e6abb7acd470c"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "66c319d598c845bf0bfb5d650c49bb7b93da72c1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec15da7c33055c37ba58cb778a4414aae49f16ba/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec15da7c33055c37ba58cb778a4414aae49f16ba/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ec15da7c33055c37ba58cb778a4414aae49f16ba", "patch": "@@ -1,5 +1,11 @@\n 2020-02-25  Patrick Palka  <ppalka@redhat.com>\n \n+\tLWG 3325 Constrain return type of transformation function for\n+\ttransform_view\n+\t* include/std/ranges (transform_view): Constrain the return type of the\n+\ttransformation function as per LWG 3325.\n+\t* testsuite/std/ranges/adaptors/lwg3325_neg.cc: New test.\n+\n \tLWG 3313 join_view::_Iterator::operator-- is incorrectly constrained\n \t* include/std/ranges (join_view::_Iterator::operator--): Require that\n \trange_reference_t<_Base> models common_range."}, {"sha": "442d1d08098e73d44f9df495c863f246f48f16d3", "filename": "libstdc++-v3/include/std/ranges", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec15da7c33055c37ba58cb778a4414aae49f16ba/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec15da7c33055c37ba58cb778a4414aae49f16ba/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges?ref=ec15da7c33055c37ba58cb778a4414aae49f16ba", "patch": "@@ -1540,6 +1540,8 @@ namespace views\n   template<input_range _Vp, copy_constructible _Fp>\n     requires view<_Vp> && is_object_v<_Fp>\n       && regular_invocable<_Fp&, range_reference_t<_Vp>>\n+      && std::__detail::__can_reference<invoke_result_t<_Fp&,\n+\t\t\t\t\t\t\trange_reference_t<_Vp>>>\n     class transform_view : public view_interface<transform_view<_Vp, _Fp>>\n     {\n     private:"}, {"sha": "ac1747145740c8062c8d10871f466dc49bb0f789", "filename": "libstdc++-v3/testsuite/std/ranges/adaptors/lwg3325_neg.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec15da7c33055c37ba58cb778a4414aae49f16ba/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Flwg3325_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec15da7c33055c37ba58cb778a4414aae49f16ba/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Flwg3325_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Flwg3325_neg.cc?ref=ec15da7c33055c37ba58cb778a4414aae49f16ba", "patch": "@@ -0,0 +1,35 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <ranges>\n+\n+namespace ranges = std::ranges;\n+namespace views = std::views;\n+\n+void\n+test01()\n+{\n+  auto f = [] (int x) { };\n+  int x[] = {1};\n+  auto v = ranges::transform_view{x, f}; // { dg-error \"deduction failed|no match\" }\n+}\n+\n+// { dg-prune-output \"constraint failure\" }\n+// { dg-prune-output \"in requirements\" }"}]}