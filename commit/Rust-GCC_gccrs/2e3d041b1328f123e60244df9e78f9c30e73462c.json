{"sha": "2e3d041b1328f123e60244df9e78f9c30e73462c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUzZDA0MWIxMzI4ZjEyM2U2MDI0NGRmOWU3OGY5YzMwZTczNDYyYw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-09-10T18:56:59Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-09-10T18:56:59Z"}, "message": "Remove redundant fixed_regs tests\n\nThis patch removes redundant fixed_regs tests in things like:\n\n  !fixed_regs[i] && !call_used_or_fixed_reg_p (i)\n\n2019-09-10  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* config/alpha/alpha.c (alpha_compute_frame_layout): Remove redundant\n\tfixed_regs test.\n\t* config/bpf/bpf.c (bpf_compute_frame_layout, bpf_expand_prologue)\n\t(bpf_expand_epilogue): Likewise.\n\t* config/c6x/c6x.c (c6x_save_reg): Likewise.\n\t* config/ft32/ft32.c (ft32_expand_prologue): Likewise.\n\t(ft32_expand_epilogue): Likewise.\n\t* config/i386/i386.c (ix86_save_reg): Likewise.\n\t* config/moxie/moxie.c (moxie_expand_prologue): Likewise.\n\t(moxie_expand_epilogue): Likewise.\n\t* config/tilegx/tilegx.c (need_to_save_reg): Likewise.\n\t* config/tilepro/tilepro.c (need_to_save_reg): Likewise.\n\t* config/xtensa/xtensa.c (xtensa_call_save_reg): Likewise.\n\nFrom-SVN: r275603", "tree": {"sha": "87b78fda6482711d37131af066629bcf30356d58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87b78fda6482711d37131af066629bcf30356d58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e3d041b1328f123e60244df9e78f9c30e73462c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e3d041b1328f123e60244df9e78f9c30e73462c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e3d041b1328f123e60244df9e78f9c30e73462c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e3d041b1328f123e60244df9e78f9c30e73462c/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a365fa0636886aeda83e57b84d837cfba13597fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a365fa0636886aeda83e57b84d837cfba13597fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a365fa0636886aeda83e57b84d837cfba13597fe"}], "stats": {"total": 49, "additions": 29, "deletions": 20}, "files": [{"sha": "86aa67688979d921ad75900d1faa91b5b7f9d2af", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e3d041b1328f123e60244df9e78f9c30e73462c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e3d041b1328f123e60244df9e78f9c30e73462c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e3d041b1328f123e60244df9e78f9c30e73462c", "patch": "@@ -1,3 +1,19 @@\n+2019-09-10  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/alpha/alpha.c (alpha_compute_frame_layout): Remove redundant\n+\tfixed_regs test.\n+\t* config/bpf/bpf.c (bpf_compute_frame_layout, bpf_expand_prologue)\n+\t(bpf_expand_epilogue): Likewise.\n+\t* config/c6x/c6x.c (c6x_save_reg): Likewise.\n+\t* config/ft32/ft32.c (ft32_expand_prologue): Likewise.\n+\t(ft32_expand_epilogue): Likewise.\n+\t* config/i386/i386.c (ix86_save_reg): Likewise.\n+\t* config/moxie/moxie.c (moxie_expand_prologue): Likewise.\n+\t(moxie_expand_epilogue): Likewise.\n+\t* config/tilegx/tilegx.c (need_to_save_reg): Likewise.\n+\t* config/tilepro/tilepro.c (need_to_save_reg): Likewise.\n+\t* config/xtensa/xtensa.c (xtensa_call_save_reg): Likewise.\n+\n 2019-09-10  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* hard-reg-set.h (call_used_or_fixed_reg_p): New macro."}, {"sha": "f01305b3c1a64faa2e299add7c9bc384f11bc696", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e3d041b1328f123e60244df9e78f9c30e73462c/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e3d041b1328f123e60244df9e78f9c30e73462c/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=2e3d041b1328f123e60244df9e78f9c30e73462c", "patch": "@@ -7225,7 +7225,7 @@ alpha_compute_frame_layout (void)\n \n       /* One for every register we have to save.  */\n       for (unsigned i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n-\tif (! fixed_regs[i] && ! call_used_or_fixed_reg_p (i)\n+\tif (! call_used_or_fixed_reg_p (i)\n \t    && df_regs_ever_live_p (i) && i != REG_RA)\n \t  sa_mask |= HOST_WIDE_INT_1U << i;\n "}, {"sha": "0fe80ce58aca94b5b95aad310e08bea9ff4d90ef", "filename": "gcc/config/bpf/bpf.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e3d041b1328f123e60244df9e78f9c30e73462c/gcc%2Fconfig%2Fbpf%2Fbpf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e3d041b1328f123e60244df9e78f9c30e73462c/gcc%2Fconfig%2Fbpf%2Fbpf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbpf%2Fbpf.c?ref=2e3d041b1328f123e60244df9e78f9c30e73462c", "patch": "@@ -271,8 +271,7 @@ bpf_compute_frame_layout (void)\n      the current function.  There is no need to round up, since the\n      registers are all 8 bytes wide.  */\n   for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n-    if ((!fixed_regs[regno]\n-\t && df_regs_ever_live_p (regno)\n+    if ((df_regs_ever_live_p (regno)\n \t && !call_used_or_fixed_reg_p (regno))\n \t|| (cfun->calls_alloca\n \t    && regno == STACK_POINTER_REGNUM))\n@@ -312,8 +311,7 @@ bpf_expand_prologue (void)\n      right after the local variables.  */\n   for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n     {\n-      if ((!fixed_regs[regno]\n-\t   && df_regs_ever_live_p (regno)\n+      if ((df_regs_ever_live_p (regno)\n \t   && !call_used_or_fixed_reg_p (regno))\n \t  || (cfun->calls_alloca\n \t      && regno == STACK_POINTER_REGNUM))\n@@ -372,8 +370,7 @@ bpf_expand_epilogue (void)\n   /* Restore callee-saved hard registes from the stack.  */\n   for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n     {\n-      if ((!fixed_regs[regno]\n-\t   && df_regs_ever_live_p (regno)\n+      if ((df_regs_ever_live_p (regno)\n \t   && !call_used_or_fixed_reg_p (regno))\n \t  || (cfun->calls_alloca\n \t      && regno == STACK_POINTER_REGNUM))"}, {"sha": "e593273bbf5e9d17ce09d0a33d2ad5c504b1b33c", "filename": "gcc/config/c6x/c6x.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e3d041b1328f123e60244df9e78f9c30e73462c/gcc%2Fconfig%2Fc6x%2Fc6x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e3d041b1328f123e60244df9e78f9c30e73462c/gcc%2Fconfig%2Fc6x%2Fc6x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Fc6x.c?ref=2e3d041b1328f123e60244df9e78f9c30e73462c", "patch": "@@ -2532,8 +2532,7 @@ static int\n c6x_save_reg (unsigned int regno)\n {\n   return ((df_regs_ever_live_p (regno)\n-\t   && !call_used_or_fixed_reg_p (regno)\n-\t   && !fixed_regs[regno])\n+\t   && !call_used_or_fixed_reg_p (regno))\n \t  || (regno == RETURN_ADDR_REGNO\n \t      && (df_regs_ever_live_p (regno)\n \t\t  || !crtl->is_leaf))"}, {"sha": "840882f63441830869e148b2063b4946abd1ad84", "filename": "gcc/config/ft32/ft32.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e3d041b1328f123e60244df9e78f9c30e73462c/gcc%2Fconfig%2Fft32%2Fft32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e3d041b1328f123e60244df9e78f9c30e73462c/gcc%2Fconfig%2Fft32%2Fft32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fft32%2Fft32.c?ref=2e3d041b1328f123e60244df9e78f9c30e73462c", "patch": "@@ -475,7 +475,7 @@ ft32_expand_prologue (void)\n     {\n       for (regno = FIRST_PSEUDO_REGISTER; regno-- > 0;)\n \t{\n-\t  if (!fixed_regs[regno] && !call_used_or_fixed_reg_p (regno)\n+\t  if (!call_used_or_fixed_reg_p (regno)\n \t      && df_regs_ever_live_p (regno))\n \t    {\n \t      rtx preg = gen_rtx_REG (Pmode, regno);\n@@ -488,7 +488,7 @@ ft32_expand_prologue (void)\n     {\n       for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n \t{\n-\t  if (!fixed_regs[regno] && df_regs_ever_live_p (regno)\n+\t  if (df_regs_ever_live_p (regno)\n \t      && !call_used_or_fixed_reg_p (regno))\n \t    {\n \t      insn = emit_insn (gen_movsi_push (gen_rtx_REG (Pmode, regno)));\n@@ -554,7 +554,7 @@ ft32_expand_epilogue (void)\n     {\n       for (regno = FIRST_PSEUDO_REGISTER; regno-- > 0;)\n         {\n-          if (!fixed_regs[regno] && !call_used_or_fixed_reg_p (regno)\n+          if (!call_used_or_fixed_reg_p (regno)\n               && df_regs_ever_live_p (regno))\n             {\n               rtx preg = gen_rtx_REG (Pmode, regno);"}, {"sha": "9a87413ee1e18bcd428e63505207a935aeb1e521", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e3d041b1328f123e60244df9e78f9c30e73462c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e3d041b1328f123e60244df9e78f9c30e73462c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=2e3d041b1328f123e60244df9e78f9c30e73462c", "patch": "@@ -5666,7 +5666,6 @@ ix86_save_reg (unsigned int regno, bool maybe_eh_return, bool ignore_outlined)\n \n   return (df_regs_ever_live_p (regno)\n \t  && !call_used_or_fixed_reg_p (regno)\n-\t  && !fixed_regs[regno]\n \t  && (regno != HARD_FRAME_POINTER_REGNUM || !frame_pointer_needed));\n }\n "}, {"sha": "fa4ed3ff40d01bdb3b542eadbd6a97243d7a8360", "filename": "gcc/config/moxie/moxie.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e3d041b1328f123e60244df9e78f9c30e73462c/gcc%2Fconfig%2Fmoxie%2Fmoxie.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e3d041b1328f123e60244df9e78f9c30e73462c/gcc%2Fconfig%2Fmoxie%2Fmoxie.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fmoxie.c?ref=2e3d041b1328f123e60244df9e78f9c30e73462c", "patch": "@@ -288,8 +288,7 @@ moxie_expand_prologue (void)\n   /* Save callee-saved registers.  */\n   for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n     {\n-      if (!fixed_regs[regno]\n-\t  && df_regs_ever_live_p (regno)\n+      if (df_regs_ever_live_p (regno)\n \t  && !call_used_or_fixed_reg_p (regno))\n \t{\n \t  insn = emit_insn (gen_movsi_push (gen_rtx_REG (Pmode, regno)));\n@@ -351,7 +350,7 @@ moxie_expand_epilogue (void)\n \t  emit_insn (gen_addsi3 (reg, reg, hard_frame_pointer_rtx));\n \t}\n       for (regno = FIRST_PSEUDO_REGISTER; regno-- > 0; )\n-\tif (!fixed_regs[regno] && !call_used_or_fixed_reg_p (regno)\n+\tif (!call_used_or_fixed_reg_p (regno)\n \t    && df_regs_ever_live_p (regno))\n \t  {\n \t    rtx preg = gen_rtx_REG (Pmode, regno);"}, {"sha": "f2ea9bb9b0f6562f70614f4020cc09bb843309b3", "filename": "gcc/config/tilegx/tilegx.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e3d041b1328f123e60244df9e78f9c30e73462c/gcc%2Fconfig%2Ftilegx%2Ftilegx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e3d041b1328f123e60244df9e78f9c30e73462c/gcc%2Fconfig%2Ftilegx%2Ftilegx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilegx%2Ftilegx.c?ref=2e3d041b1328f123e60244df9e78f9c30e73462c", "patch": "@@ -3660,7 +3660,7 @@ tilegx_builtin_decl (unsigned code, bool initialize_p ATTRIBUTE_UNUSED)\n static bool\n need_to_save_reg (unsigned int regno)\n {\n-  if (!fixed_regs[regno] && !call_used_or_fixed_reg_p (regno)\n+  if (!call_used_or_fixed_reg_p (regno)\n       && df_regs_ever_live_p (regno))\n     return true;\n "}, {"sha": "a1d59b19a5e3c77174e4e5d2634b317238ff1d8a", "filename": "gcc/config/tilepro/tilepro.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e3d041b1328f123e60244df9e78f9c30e73462c/gcc%2Fconfig%2Ftilepro%2Ftilepro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e3d041b1328f123e60244df9e78f9c30e73462c/gcc%2Fconfig%2Ftilepro%2Ftilepro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilepro%2Ftilepro.c?ref=2e3d041b1328f123e60244df9e78f9c30e73462c", "patch": "@@ -3202,7 +3202,7 @@ tilepro_builtin_decl (unsigned code, bool initialize_p ATTRIBUTE_UNUSED)\n static bool\n need_to_save_reg (unsigned int regno)\n {\n-  if (!fixed_regs[regno] && !call_used_or_fixed_reg_p (regno)\n+  if (!call_used_or_fixed_reg_p (regno)\n       && df_regs_ever_live_p (regno))\n     return true;\n "}, {"sha": "3c129fdca1d8f03a3e457be470bdfa2f21804c21", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e3d041b1328f123e60244df9e78f9c30e73462c/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e3d041b1328f123e60244df9e78f9c30e73462c/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=2e3d041b1328f123e60244df9e78f9c30e73462c", "patch": "@@ -2686,8 +2686,7 @@ xtensa_call_save_reg(int regno)\n   if (crtl->calls_eh_return && regno >= 2 && regno < 4)\n     return true;\n \n-  return !fixed_regs[regno] && !call_used_or_fixed_reg_p (regno) &&\n-    df_regs_ever_live_p (regno);\n+  return !call_used_or_fixed_reg_p (regno) && df_regs_ever_live_p (regno);\n }\n \n /* Return the bytes needed to compute the frame pointer from the current"}]}