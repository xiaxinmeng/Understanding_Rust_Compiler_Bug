{"sha": "77f484defc4e7853896db5885a2d4ff8781dc047", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdmNDg0ZGVmYzRlNzg1Mzg5NmRiNTg4NWEyZDRmZjg3ODFkYzA0Nw==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-03-29T12:45:05Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-03-29T12:45:05Z"}, "message": "* typeck.c (expand_target_expr): Delete dead function.\n\nFrom-SVN: r18903", "tree": {"sha": "e62e3913c6addffb51ee9c89aac643464f11c0c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e62e3913c6addffb51ee9c89aac643464f11c0c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77f484defc4e7853896db5885a2d4ff8781dc047", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77f484defc4e7853896db5885a2d4ff8781dc047", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77f484defc4e7853896db5885a2d4ff8781dc047", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77f484defc4e7853896db5885a2d4ff8781dc047/comments", "author": null, "committer": null, "parents": [{"sha": "769467b9da9bb49beba06f1f5c6fb13e8847e549", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/769467b9da9bb49beba06f1f5c6fb13e8847e549", "html_url": "https://github.com/Rust-GCC/gccrs/commit/769467b9da9bb49beba06f1f5c6fb13e8847e549"}], "stats": {"total": 37, "additions": 2, "deletions": 35}, "files": [{"sha": "b4830ed7ecef22e32d2eb9be9833a5b9ffe30b53", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f484defc4e7853896db5885a2d4ff8781dc047/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f484defc4e7853896db5885a2d4ff8781dc047/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=77f484defc4e7853896db5885a2d4ff8781dc047", "patch": "@@ -1,5 +1,7 @@\n Sun Mar 29 00:47:32 1998  Jeffrey A Law  (law@cygnus.com)\n \n+\t* typeck.c (expand_target_expr): Delete dead function.\n+\n \t* search.c: Put various prototypes inside #ifdef MI_MATRIX.\n \n \t* repo.c (save_string): Delete dead function."}, {"sha": "9786dfb59c26dde8760b69bd89be409332ce001e", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f484defc4e7853896db5885a2d4ff8781dc047/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f484defc4e7853896db5885a2d4ff8781dc047/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=77f484defc4e7853896db5885a2d4ff8781dc047", "patch": "@@ -62,7 +62,6 @@ static tree convert_sequence PROTO((tree, tree));\n static tree lookup_anon_field PROTO((tree, tree));\n static tree pointer_diff PROTO((tree, tree, tree));\n static tree qualify_type PROTO((tree, tree));\n-static tree expand_target_expr PROTO((tree));\n static tree get_delta_difference PROTO((tree, tree, int));\n \n /* Return the target type of TYPE, which meas return T for:\n@@ -5725,40 +5724,6 @@ build_c_cast (type, expr)\n   return value;\n }\n \f\n-static tree\n-expand_target_expr (t)\n-     tree t;\n-{\n-  extern int temp_slot_level;\n-  extern int target_temp_slot_level;\n-  int old_temp_level = target_temp_slot_level;\n-\n-  tree xval = make_node (RTL_EXPR);\n-  rtx rtxval;\n-\n-  /* Any TARGET_EXPR temps live only as long as the outer temp level.\n-     Since they are preserved in this new inner level, we know they\n-     will make it into the outer level.  */\n-  push_temp_slots ();\n-  target_temp_slot_level = temp_slot_level;\n-\n-  do_pending_stack_adjust ();\n-  start_sequence_for_rtl_expr (xval);\n-  emit_note (0, -1);\n-  rtxval = expand_expr (t, NULL_RTX, VOIDmode, EXPAND_NORMAL);\n-  do_pending_stack_adjust ();\n-  TREE_SIDE_EFFECTS (xval) = 1;\n-  RTL_EXPR_SEQUENCE (xval) = get_insns ();\n-  end_sequence ();\n-  RTL_EXPR_RTL (xval) = rtxval;\n-  TREE_TYPE (xval) = TREE_TYPE (t);\n-\n-  pop_temp_slots ();\n-  target_temp_slot_level = old_temp_level;\n-\n-  return xval;\n-}\n-\n /* Build an assignment expression of lvalue LHS from value RHS.\n    MODIFYCODE is the code for a binary operator that we use\n    to combine the old value of LHS with RHS to get the new value."}]}