{"sha": "adc1de25276100ea46ca23002c889f8b45fa22a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRjMWRlMjUyNzYxMDBlYTQ2Y2EyMzAwMmM4ODlmOGI0NWZhMjJhMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-18T09:58:14Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-18T09:58:14Z"}, "message": "[multiple changes]\n\n2014-07-18  Robert Dewar  <dewar@adacore.com>\n\n\t* g-memdum.adb, g-memdum.ads, exp_strm.adb: Minor reformatting.\n\n2014-07-18  Pascal Obry  <obry@adacore.com>\n\n\t* s-crtl.ads, i-cstrea.ads (fputwc): New routine.\n\t* a-witeio.adb (Put): On platforms where there is translation\n\tdone by the OS output the raw text.\n\t(New_Line): Use Put above to properly handle the LM wide characters.\n\nFrom-SVN: r212800", "tree": {"sha": "dc2bfa97a56b2e0b9e4729202cd749a21c087149", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc2bfa97a56b2e0b9e4729202cd749a21c087149"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/adc1de25276100ea46ca23002c889f8b45fa22a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adc1de25276100ea46ca23002c889f8b45fa22a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adc1de25276100ea46ca23002c889f8b45fa22a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adc1de25276100ea46ca23002c889f8b45fa22a0/comments", "author": null, "committer": null, "parents": [{"sha": "6128aad4587fea11e2e351490fe97a8d7051556b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6128aad4587fea11e2e351490fe97a8d7051556b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6128aad4587fea11e2e351490fe97a8d7051556b"}], "stats": {"total": 94, "additions": 75, "deletions": 19}, "files": [{"sha": "59ad09f051dc8c98386fe13772f650aa255c9797", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc1de25276100ea46ca23002c889f8b45fa22a0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc1de25276100ea46ca23002c889f8b45fa22a0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=adc1de25276100ea46ca23002c889f8b45fa22a0", "patch": "@@ -1,3 +1,14 @@\n+2014-07-18  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-memdum.adb, g-memdum.ads, exp_strm.adb: Minor reformatting.\n+\n+2014-07-18  Pascal Obry  <obry@adacore.com>\n+\n+\t* s-crtl.ads, i-cstrea.ads (fputwc): New routine.\n+\t* a-witeio.adb (Put): On platforms where there is translation\n+\tdone by the OS output the raw text.\n+\t(New_Line): Use Put above to properly handle the LM wide characters.\n+\n 2014-07-18  Thomas Quinot  <quinot@adacore.com>\n \n \t* g-memdum.adb, g-memdum.ads (Dump): New parameter Prefix, defaulted"}, {"sha": "b1d2bef5ed7f15c9def1b6940e1bb1d839eb2145", "filename": "gcc/ada/a-witeio.adb", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc1de25276100ea46ca23002c889f8b45fa22a0/gcc%2Fada%2Fa-witeio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc1de25276100ea46ca23002c889f8b45fa22a0/gcc%2Fada%2Fa-witeio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-witeio.adb?ref=adc1de25276100ea46ca23002c889f8b45fa22a0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1082,13 +1082,13 @@ package body Ada.Wide_Text_IO is\n       FIO.Check_Write_Status (AP (File));\n \n       for K in 1 .. Spacing loop\n-         Putc (LM, File);\n+         Put (File, Wide_Character'Val (LM));\n          File.Line := File.Line + 1;\n \n          if File.Page_Length /= 0\n            and then File.Line > File.Page_Length\n          then\n-            Putc (PM, File);\n+            Put (File, Wide_Character'Val (PM));\n             File.Line := 1;\n             File.Page := File.Page + 1;\n          end if;\n@@ -1220,6 +1220,14 @@ package body Ada.Wide_Text_IO is\n      (File : File_Type;\n       Item : Wide_Character)\n    is\n+      text_translation_required : Boolean;\n+      for text_translation_required'Size use Character'Size;\n+      pragma Import (C, text_translation_required,\n+                       \"__gnat_text_translation_required\");\n+      --  Text translation is required on Windows only. This means that the\n+      --  console is doing translation and we do not want to do any encoding\n+      --  here. If this boolean is set we just output the character as-is.\n+\n       procedure Out_Char (C : Character);\n       --  Procedure to output one character of a wide character sequence\n \n@@ -1234,11 +1242,21 @@ package body Ada.Wide_Text_IO is\n          Putc (Character'Pos (C), File);\n       end Out_Char;\n \n+      R : int;\n+      pragma Unreferenced (R);\n+\n    --  Start of processing for Put\n \n    begin\n       FIO.Check_Write_Status (AP (File));\n-      WC_Out (Item, File.WC_Method);\n+\n+      if text_translation_required then\n+         set_wide_text_mode (fileno (File.Stream));\n+         R := fputwc (Wide_Character'Pos (Item), File.Stream);\n+      else\n+         WC_Out (Item, File.WC_Method);\n+      end if;\n+\n       File.Col := File.Col + 1;\n    end Put;\n "}, {"sha": "1ffe9a51d97e63d78b4d12ac168705f7b79737ee", "filename": "gcc/ada/exp_strm.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc1de25276100ea46ca23002c889f8b45fa22a0/gcc%2Fada%2Fexp_strm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc1de25276100ea46ca23002c889f8b45fa22a0/gcc%2Fada%2Fexp_strm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_strm.adb?ref=adc1de25276100ea46ca23002c889f8b45fa22a0", "patch": "@@ -1254,9 +1254,9 @@ package body Exp_Strm is\n       Stms := New_List;\n \n       --  Note that of course there will be no discriminants for the elementary\n-      --  type case, so Has_Discriminants will be False. Note that the\n-      --  language rules do not require writing the discriminants in the\n-      --  defaulted case, because those are written by 'Write.\n+      --  type case, so Has_Discriminants will be False. Note that the language\n+      --  rules do not allow writing the discriminants in the defaulted case,\n+      --  because those are written by 'Write.\n \n       if Has_Discriminants (Typ)\n         and then"}, {"sha": "9d7b25c785fbf70ee393697cee397c6483f254ae", "filename": "gcc/ada/g-memdum.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc1de25276100ea46ca23002c889f8b45fa22a0/gcc%2Fada%2Fg-memdum.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc1de25276100ea46ca23002c889f8b45fa22a0/gcc%2Fada%2Fg-memdum.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-memdum.adb?ref=adc1de25276100ea46ca23002c889f8b45fa22a0", "patch": "@@ -81,17 +81,21 @@ package body GNAT.Memory_Dump is\n       case Prefix is\n          when Absolute_Address =>\n             AIL := Address_Image_Length - 4 + 2;\n+\n          when Offset =>\n             Offset_Last := Offset_Buf'First - 1;\n             Set_Image_Based_Integer (Ctr, 16, 0, Offset_Buf, Offset_Last);\n             AIL := Offset_Last - 4 + 2;\n+\n          when None =>\n             AIL := 0;\n       end case;\n+\n       Line_Len := AIL + 3 * 16 + 2 + 16;\n \n       declare\n          Line_Buf : String (1 .. Line_Len);\n+\n       begin\n          while Ctr /= 0 loop\n \n@@ -110,6 +114,7 @@ package body GNAT.Memory_Dump is\n                      declare\n                         Last : Natural := 0;\n                         Len  : Natural;\n+\n                      begin\n                         Set_Image_Based_Integer\n                           (Count - Ctr, 16, 0, Offset_Buf, Last);\n@@ -160,7 +165,6 @@ package body GNAT.Memory_Dump is\n             GNAT.IO.Put_Line (Line_Buf (1 .. AIL + 3 * 16 + 2 + N));\n          end if;\n       end;\n-\n    end Dump;\n \n end GNAT.Memory_Dump;"}, {"sha": "840fc92b5c27fe26e51973370d58630d371bc02c", "filename": "gcc/ada/g-memdum.ads", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc1de25276100ea46ca23002c889f8b45fa22a0/gcc%2Fada%2Fg-memdum.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc1de25276100ea46ca23002c889f8b45fa22a0/gcc%2Fada%2Fg-memdum.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-memdum.ads?ref=adc1de25276100ea46ca23002c889f8b45fa22a0", "patch": "@@ -45,15 +45,17 @@ package GNAT.Memory_Dump is\n       Count  : Natural;\n       Prefix : Prefix_Type := Absolute_Address);\n    --  Dumps indicated number (Count) of bytes, starting at the address given\n-   --  by Addr. The coding of this routine in its current form assumes the\n-   --  case of a byte addressable machine (and is therefore inapplicable to\n-   --  machines like the AAMP, where the storage unit is not 8 bits). The\n-   --  output is one or more lines in the following format, which is for the\n-   --  case of 32-bit addresses (64-bit addresses are handled appropriately):\n+   --  by Addr. The coding of this routine in its current form assumes the case\n+   --  of a byte addressable machine (and is therefore inapplicable to machines\n+   --  like the AAMP, where the storage unit is not 8 bits). The output is one\n+   --  or more lines in the following format, which is for the case of 32-bit\n+   --  addresses (64-bit addresses are handled appropriately):\n    --\n    --    0234_3368: 66 67 68 . . .  73 74 75 \"fghijklmnopqstuv\"\n    --\n    --  All but the last line have 16 bytes. A question mark is used in the\n    --  string data to indicate a non-printable character.\n+   --\n+   --  Please document Prefix ???\n \n end GNAT.Memory_Dump;"}, {"sha": "a2d6ab0056d2f35bee4fced9cdfe801917c80c5a", "filename": "gcc/ada/i-cstrea.ads", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc1de25276100ea46ca23002c889f8b45fa22a0/gcc%2Fada%2Fi-cstrea.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc1de25276100ea46ca23002c889f8b45fa22a0/gcc%2Fada%2Fi-cstrea.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrea.ads?ref=adc1de25276100ea46ca23002c889f8b45fa22a0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1995-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -119,6 +119,9 @@ package Interfaces.C_Streams is\n    function fputc (C : int; stream : FILEs) return int\n      renames System.CRTL.fputc;\n \n+   function fputwc (C : int; stream : FILEs) return int\n+     renames System.CRTL.fputwc;\n+\n    function fputs (Strng : chars; Stream : FILEs) return int\n      renames System.CRTL.fputs;\n \n@@ -223,8 +226,9 @@ package Interfaces.C_Streams is\n    --  versa. These functions have no effect if text_translation_required is\n    --  false (i.e. in normal unix mode). Use fileno to get a stream handle.\n \n-   procedure set_binary_mode (handle : int);\n-   procedure set_text_mode   (handle : int);\n+   procedure set_binary_mode    (handle : int);\n+   procedure set_text_mode      (handle : int);\n+   procedure set_wide_text_mode (handle : int);\n \n    ----------------------------\n    -- Full Path Name support --\n@@ -256,6 +260,7 @@ private\n \n    pragma Import (C, set_binary_mode, \"__gnat_set_binary_mode\");\n    pragma Import (C, set_text_mode, \"__gnat_set_text_mode\");\n+   pragma Import (C, set_wide_text_mode, \"__gnat_set_wide_text_mode\");\n \n    pragma Import (C, max_path_len, \"__gnat_max_path_len\");\n    pragma Import (C, full_name, \"__gnat_full_name\");"}, {"sha": "0e809ab4fa20e7d39118a5bf1a26e0e0586cebf8", "filename": "gcc/ada/s-crtl.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc1de25276100ea46ca23002c889f8b45fa22a0/gcc%2Fada%2Fs-crtl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc1de25276100ea46ca23002c889f8b45fa22a0/gcc%2Fada%2Fs-crtl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-crtl.ads?ref=adc1de25276100ea46ca23002c889f8b45fa22a0", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2003-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -122,6 +122,9 @@ package System.CRTL is\n    function fputc (C : int; stream : FILEs) return int;\n    pragma Import (C, fputc, \"fputc\");\n \n+   function fputwc (C : int; stream : FILEs) return int;\n+   pragma Import (C, fputwc, \"fputwc\");\n+\n    function fputs (Strng : chars; Stream : FILEs) return int;\n    pragma Import (C, fputs, \"fputs\");\n "}, {"sha": "9e129460a5481bf40a8e5e0c7d3dd40a7ad7204a", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc1de25276100ea46ca23002c889f8b45fa22a0/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc1de25276100ea46ca23002c889f8b45fa22a0/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=adc1de25276100ea46ca23002c889f8b45fa22a0", "patch": "@@ -104,11 +104,12 @@ extern struct tm *localtime_r(const time_t *, struct tm *);\n    file positioning function, unless the input operation encounters\n    end-of-file.\n \n-   The other target dependent declarations here are for the two functions\n-   __gnat_set_binary_mode and __gnat_set_text_mode:\n+   The other target dependent declarations here are for the three functions\n+   __gnat_set_binary_mode, __gnat_set_text_mode and __gnat_set_wide_text_mode:\n \n       void __gnat_set_binary_mode (int handle);\n       void __gnat_set_text_mode   (int handle);\n+      void __gnat_set_wide_text_mode   (int handle);\n \n    These functions have no effect in Unix (or similar systems where there is\n    no distinction between binary and text files), but in DOS (and similar\n@@ -150,6 +151,12 @@ __gnat_set_text_mode (int handle)\n   WIN_SETMODE (handle, O_TEXT);\n }\n \n+void\n+__gnat_set_wide_text_mode (int handle)\n+{\n+  WIN_SETMODE (handle, _O_U16TEXT);\n+}\n+\n #ifdef __CYGWIN__\n \n char *\n@@ -245,6 +252,12 @@ void\n __gnat_set_text_mode (int handle ATTRIBUTE_UNUSED)\n {\n }\n+\n+void\n+__gnat_set_wide_text_mode (int handle ATTRIBUTE_UNUSED)\n+{\n+}\n+\n char *\n __gnat_ttyname (int filedes)\n {"}]}