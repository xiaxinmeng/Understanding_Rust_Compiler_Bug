{"sha": "d74e9142ac9b840a314530dc25d91df22f9170db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc0ZTkxNDJhYzliODQwYTMxNDUzMGRjMjVkOTFkZjIyZjkxNzBkYg==", "commit": {"author": {"name": "Stephane Carrez", "email": "Stephane.Carrez@worldnet.fr", "date": "2001-07-20T19:34:56Z"}, "committer": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2001-07-20T19:34:56Z"}, "message": "m68hc11.c (m68hc11_gen_highpart): Don't use gen_highpart.\n\n\t* config/m68hc11/m68hc11.c (m68hc11_gen_highpart): Don't use\n\tgen_highpart.\n\nFrom-SVN: r44206", "tree": {"sha": "f52f23103a59fe5ffa86f08fbf437df11791dabe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f52f23103a59fe5ffa86f08fbf437df11791dabe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d74e9142ac9b840a314530dc25d91df22f9170db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d74e9142ac9b840a314530dc25d91df22f9170db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d74e9142ac9b840a314530dc25d91df22f9170db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d74e9142ac9b840a314530dc25d91df22f9170db/comments", "author": null, "committer": null, "parents": [{"sha": "1c432a87d9bff9e86ef664d3c9f87189ec035d72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c432a87d9bff9e86ef664d3c9f87189ec035d72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c432a87d9bff9e86ef664d3c9f87189ec035d72"}], "stats": {"total": 31, "additions": 24, "deletions": 7}, "files": [{"sha": "f19c5f8266a7dc918265d5c39d5d31263600bd75", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d74e9142ac9b840a314530dc25d91df22f9170db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d74e9142ac9b840a314530dc25d91df22f9170db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d74e9142ac9b840a314530dc25d91df22f9170db", "patch": "@@ -1,3 +1,8 @@\n+2001-07-20  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n+\n+\t* config/m68hc11/m68hc11.c (m68hc11_gen_highpart): Don't use\n+\tgen_highpart.\n+\n 2001-07-20  Daniel Berlin  <dan@cgsoftware.com>\n \n \t* params.def: Change default max inline insns to 100."}, {"sha": "da7f490a587e27b7c80bdc53bb3b0e7798f3b018", "filename": "gcc/config/m68hc11/m68hc11.c", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d74e9142ac9b840a314530dc25d91df22f9170db/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d74e9142ac9b840a314530dc25d91df22f9170db/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c?ref=d74e9142ac9b840a314530dc25d91df22f9170db", "patch": "@@ -1922,18 +1922,30 @@ m68hc11_gen_highpart (mode, x)\n     }\n \n   /* gen_highpart crashes when it is called with a SUBREG.  */\n-  if (GET_CODE (x) == SUBREG && SUBREG_BYTE (x) != 0)\n+  if (GET_CODE (x) == SUBREG)\n     {\n       return gen_rtx (SUBREG, mode, XEXP (x, 0), XEXP (x, 1));\n     }\n-  x = gen_highpart (mode, x);\n+  if (GET_CODE (x) == REG)\n+    {\n+      if (REGNO (x) < FIRST_PSEUDO_REGISTER)\n+        return gen_rtx (REG, mode, REGNO (x));\n+      else\n+        return gen_rtx_SUBREG (mode, x, 0);\n+    }\n \n-  /* Return a different rtx to avoid to share it in several insns\n-     (when used by a split pattern).  Sharing addresses within\n-     a MEM breaks the Z register replacement (and reloading).  */\n   if (GET_CODE (x) == MEM)\n-    x = copy_rtx (x);\n-  return x;\n+    {\n+      x = change_address (x, mode, 0);\n+\n+      /* Return a different rtx to avoid to share it in several insns\n+\t (when used by a split pattern).  Sharing addresses within\n+\t a MEM breaks the Z register replacement (and reloading).  */\n+      if (GET_CODE (x) == MEM)\n+\tx = copy_rtx (x);\n+      return x;\n+    }\n+  abort ();\n }\n \f\n "}]}