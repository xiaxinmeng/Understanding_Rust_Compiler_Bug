{"sha": "acee84866682d56e06be28e1d81e399214cde5f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNlZTg0ODY2NjgyZDU2ZTA2YmUyOGUxZDgxZTM5OTIxNGNkZTVmNg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-10-21T09:25:17Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-10-21T09:25:17Z"}, "message": "re PR fortran/46067 ([F03] invalid procedure pointer assignment not detected)\n\n2010-10-21  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/46067\n\t* interface.c (gfc_compare_interfaces): Switch arguments of type\n\tcomparison (important for polymorphic variables).\n\n\n2010-10-21  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/46067\n\t* gfortran.dg/dummy_procedure_4.f90: New.\n\t* gfortran.dg/proc_ptr_30.f90: New.\n\nFrom-SVN: r165755", "tree": {"sha": "3e58f9853e10a350cd0ff2a572637e5c60ee49f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e58f9853e10a350cd0ff2a572637e5c60ee49f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acee84866682d56e06be28e1d81e399214cde5f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acee84866682d56e06be28e1d81e399214cde5f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acee84866682d56e06be28e1d81e399214cde5f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acee84866682d56e06be28e1d81e399214cde5f6/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5490de28a24febd89bed4bb027d5013c4e6ee83c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5490de28a24febd89bed4bb027d5013c4e6ee83c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5490de28a24febd89bed4bb027d5013c4e6ee83c"}], "stats": {"total": 100, "additions": 99, "deletions": 1}, "files": [{"sha": "1bc4917f29e74bf13e13801b9bf6d8a62f04dbc0", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acee84866682d56e06be28e1d81e399214cde5f6/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acee84866682d56e06be28e1d81e399214cde5f6/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=acee84866682d56e06be28e1d81e399214cde5f6", "patch": "@@ -1,3 +1,9 @@\n+2010-10-21  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/46067\n+\t* interface.c (gfc_compare_interfaces): Switch arguments of type\n+\tcomparison (important for polymorphic variables).\n+\n 2010-10-21  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/46100"}, {"sha": "6ae36c2fb6a79d505d81cf9ce2416339fecab5ff", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acee84866682d56e06be28e1d81e399214cde5f6/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acee84866682d56e06be28e1d81e399214cde5f6/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=acee84866682d56e06be28e1d81e399214cde5f6", "patch": "@@ -1056,7 +1056,7 @@ gfc_compare_interfaces (gfc_symbol *s1, gfc_symbol *s2, const char *name2,\n \t  }\n \n \t/* Check type and rank.  */\n-\tif (!compare_type_rank (f1->sym, f2->sym))\n+\tif (!compare_type_rank (f2->sym, f1->sym))\n \t  {\n \t    if (errmsg != NULL)\n \t      snprintf (errmsg, err_len, \"Type/rank mismatch in argument '%s'\","}, {"sha": "7d1dbb9dfefcb2ebf532e072d356f5d554a148f8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acee84866682d56e06be28e1d81e399214cde5f6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acee84866682d56e06be28e1d81e399214cde5f6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=acee84866682d56e06be28e1d81e399214cde5f6", "patch": "@@ -1,3 +1,9 @@\n+2010-10-21  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/46067\n+\t* gfortran.dg/dummy_procedure_4.f90: New.\n+\t* gfortran.dg/proc_ptr_30.f90: New.\n+\n 2010-10-21  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/46100"}, {"sha": "498685bde38c356fdb5d3b6a0d15733e93804a87", "filename": "gcc/testsuite/gfortran.dg/dummy_procedure_4.f90", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acee84866682d56e06be28e1d81e399214cde5f6/gcc%2Ftestsuite%2Fgfortran.dg%2Fdummy_procedure_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acee84866682d56e06be28e1d81e399214cde5f6/gcc%2Ftestsuite%2Fgfortran.dg%2Fdummy_procedure_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdummy_procedure_4.f90?ref=acee84866682d56e06be28e1d81e399214cde5f6", "patch": "@@ -0,0 +1,48 @@\n+! { dg-do compile }\n+!\n+! PR 46067: [F03] invalid procedure pointer assignment not detected\n+!\n+! Contributed by Janus Weil <janus@gcc.gnu.org>\n+\n+module m\n+\n+  type test_type\n+    integer :: id = 1\n+  end type\n+\n+contains\n+\n+  real function fun1 (t,x)\n+    real, intent(in) :: x\n+    type(test_type) :: t\n+    print *,\" id = \", t%id\n+    fun1 = cos(x)\n+  end function\n+\n+end module\n+\n+\n+  use m\n+  implicit none\n+\n+  call test (fun1)  ! { dg-error \"Interface mismatch in dummy procedure\" }\n+\n+contains\n+\n+  subroutine test(proc)\n+    interface\n+      real function proc(t,x)\n+        import :: test_type\n+        real, intent(in) :: x\n+        class(test_type) :: t\n+      end function\n+    end interface\n+    type(test_type) :: funs\n+    real :: r\n+    r = proc(funs,0.)\n+    print *, \" proc(0) \",r\n+  end subroutine\n+\n+end\n+\n+! { dg-final { cleanup-modules \"m\" } }"}, {"sha": "5996deecb814e51c547bcd968afb39ca3cafc176", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_30.f90", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acee84866682d56e06be28e1d81e399214cde5f6/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_30.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acee84866682d56e06be28e1d81e399214cde5f6/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_30.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_30.f90?ref=acee84866682d56e06be28e1d81e399214cde5f6", "patch": "@@ -0,0 +1,38 @@\n+! { dg-do compile }\n+!\n+! PR 46067: [F03] invalid procedure pointer assignment not detected\n+!\n+! Contributed by Stephen J. Bespalko <sjbespa@comcast.net>\n+\n+  implicit none\n+  \n+  type test_type\n+    integer :: id = 1\n+  end type\n+  \n+  abstract interface\n+    real function fun_interface(t,x)\n+      import :: test_type\n+      real, intent(in) :: x\n+      class(test_type) :: t\n+    end function\n+  end interface  \n+  \n+  type(test_type) :: funs\n+  real :: r\n+  procedure(fun_interface), pointer :: pp\n+\n+  pp => fun1        ! { dg-error \"Interface mismatch in procedure pointer assignment\" }\n+  r = pp(funs,0.)\n+  print *, \" pp(0) \", r \n+\n+contains\n+\n+  real function fun1 (t,x)\n+    real, intent(in) :: x\n+    type(test_type) :: t\n+    print *,\" id = \", t%id\n+    fun1 = cos(x)\n+  end function\n+ \n+end"}]}