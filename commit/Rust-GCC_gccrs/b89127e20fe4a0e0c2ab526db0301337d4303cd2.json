{"sha": "b89127e20fe4a0e0c2ab526db0301337d4303cd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg5MTI3ZTIwZmU0YTBlMGMyYWI1MjZkYjAzMDEzMzdkNDMwM2NkMg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-10-11T11:24:10Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-10-11T11:24:10Z"}, "message": "re PR tree-optimization/41555 (possible miscompilation in whole-program mode)\n\n2009-10-11  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/41555\n\t* gcc.dg/torture/pr41555.c: New testcase.\n\nFrom-SVN: r152639", "tree": {"sha": "8927bf5db48e8da51bb6d775cb764624ee2b5612", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8927bf5db48e8da51bb6d775cb764624ee2b5612"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b89127e20fe4a0e0c2ab526db0301337d4303cd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b89127e20fe4a0e0c2ab526db0301337d4303cd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b89127e20fe4a0e0c2ab526db0301337d4303cd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b89127e20fe4a0e0c2ab526db0301337d4303cd2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "57703d27e254a3bc6f9b51ee1df0049cf8de34fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57703d27e254a3bc6f9b51ee1df0049cf8de34fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57703d27e254a3bc6f9b51ee1df0049cf8de34fd"}], "stats": {"total": 123, "additions": 123, "deletions": 0}, "files": [{"sha": "45c792032957fcd49a487ec39b4450443bf59969", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b89127e20fe4a0e0c2ab526db0301337d4303cd2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b89127e20fe4a0e0c2ab526db0301337d4303cd2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b89127e20fe4a0e0c2ab526db0301337d4303cd2", "patch": "@@ -1,3 +1,8 @@\n+2009-10-11  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/41555\n+\t* gcc.dg/torture/pr41555.c: New testcase.\n+\n 2009-10-10  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/35862"}, {"sha": "219b34275b74c9af2bdc2a8144bd4fb813d472c4", "filename": "gcc/testsuite/gcc.dg/torture/pr41555.c", "status": "added", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b89127e20fe4a0e0c2ab526db0301337d4303cd2/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr41555.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b89127e20fe4a0e0c2ab526db0301337d4303cd2/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr41555.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr41555.c?ref=b89127e20fe4a0e0c2ab526db0301337d4303cd2", "patch": "@@ -0,0 +1,118 @@\n+/* { dg-do run } */\n+\n+#include <stdint.h>\n+#include <limits.h>\n+\n+extern void abort (void);\n+\n+static uint64_t safe_div_func_uint64_t_u_u (uint64_t _ui1, uint64_t _ui2)\n+{\n+  if (_ui2==0) return _ui1;\n+  return _ui1 / _ui2;\n+}\n+\n+static int64_t safe_div_func_int64_t_s_s (int64_t _si1, int64_t _si2)\n+{\n+  if (_si2==0 || (_si1==INT64_MIN && _si2==-1)) return _si1;\n+  return _si1 / _si2;\n+}\n+\n+#define safe_add_macro_int8_t_s_s(si1,si2) \\\n+                ((((((int8_t)(si1))>((int8_t)0)) && (((int8_t)(si2))>((int8_t)0)) && (((int8_t)(si1)) > ((INT8_MAX)-((int8_t)(si2))))) \\\n+                  || ((((int8_t)(si1))<((int8_t)0)) && (((int8_t)(si2))<((int8_t)0)) && (((int8_t)(si1)) < ((INT8_MIN)-((int8_t)(si2)))))) \\\n+                 ? ((int8_t)(si1)) \\\n+                 : (((int8_t)(si1)) + ((int8_t)(si2))) \\\n+                 ) \n+\n+static int8_t\n+safe_add_func_int8_t_s_s(int8_t _si1, int8_t _si2)\n+{\n+  return safe_add_macro_int8_t_s_s(_si1,_si2);\n+}\n+\n+#define safe_rshift_macro_uint64_t_u_s(left,right) \\\n+        (((((int)(right)) < ((uint64_t)0)) \\\n+                         || (((int)(right)) >= sizeof(uint64_t)*CHAR_BIT)) \\\n+                        ? ((uint64_t)(left)) \\\n+                        : (((uint64_t)(left)) >> ((int)(right))))\n+\n+static uint64_t\n+safe_rshift_func_uint64_t_u_s(uint64_t _left, int _right)\n+{\n+  return safe_rshift_macro_uint64_t_u_s(_left,_right);\n+}\n+\n+#define safe_mul_macro_int32_t_s_s(si1,si2) \\\n+  ((((((int32_t)(si1)) > ((int32_t)0)) && (((int32_t)(si2)) > ((int32_t)0)) && (((int32_t)(si1)) > ((INT32_MAX) / ((int32_t)(si2))))) || \\\n+  ((((int32_t)(si1)) > ((int32_t)0)) && (((int32_t)(si2)) <= ((int32_t)0)) && (((int32_t)(si2)) < ((INT32_MIN) / ((int32_t)(si1))))) || \\\n+  ((((int32_t)(si1)) <= ((int32_t)0)) && (((int32_t)(si2)) > ((int32_t)0)) && (((int32_t)(si1)) < ((INT32_MIN) / ((int32_t)(si2))))) || \\\n+  ((((int32_t)(si1)) <= ((int32_t)0)) && (((int32_t)(si2)) <= ((int32_t)0)) && (((int32_t)(si1)) != ((int32_t)0)) && (((int32_t)(si2)) < ((INT32_MAX) / ((int32_t)(si1)))))) \\\n+  ? ((int32_t)(si1)) \\\n+  : ((int32_t)(si1)) * ((int32_t)(si2)))\n+\n+static int32_t\n+safe_mul_func_int32_t_s_s (int32_t _si1, int32_t _si2)\n+{\n+  return safe_mul_macro_int32_t_s_s(_si1,_si2);\n+}\n+\n+static int8_t g_39;\n+static volatile uint8_t g_46;\n+static uint8_t g_47;\n+static uint8_t *g_62;\n+static uint8_t g_79;\n+static int8_t g_101 = -1L;\n+static uint8_t *g_114;\n+static uint8_t *g_126;\n+static uint8_t g_133;\n+\n+static uint16_t func_35 (int32_t * p_36, uint64_t p_37, uint32_t p_38);\n+static uint16_t func_35 (int32_t * p_36, uint64_t p_37, uint32_t p_38)\n+{\n+  if (g_62 != 0)\n+    abort ();\n+  for (g_39 = 1; g_39 < 0; g_39 = 1)\n+    {\n+    }\n+  return 1;\n+}\n+\n+static int32_t func_19 (int32_t p_20);\n+static int32_t func_19 (int32_t p_20)\n+{\n+  if (1 !=\n+      safe_div_func_uint64_t_u_u ((safe_div_func_int64_t_s_s (p_20, 1)),\n+                                  g_101))\n+    {\n+      func_35 (0, 1 <= (safe_add_func_int8_t_s_s (g_47, g_46)) > p_20 < 1, 1);\n+      g_133 = 1;\n+      if (g_114 != 0)\n+\tabort ();\n+      if (g_126 != 0)\n+\tabort ();\n+    }\n+  return 1;\n+}\n+\n+static uint8_t func_2 (int32_t p_6);\n+static uint8_t func_2 (int32_t p_6)\n+{\n+  for (1; p_6 > 1; 1)\n+    return 0;\n+  func_19 (g_79);\n+  if (safe_mul_func_int32_t_s_s\n+      ((0, 1 < (safe_rshift_func_uint64_t_u_s (1 ^ p_6, 1))),\n+       (func_35 (&p_6, 1, 1) < 1)))\n+    {\n+    }\n+  return 1;\n+}\n+\n+int main (void)\n+{\n+  func_2 (1);\n+  if (g_133 != 1)\n+    abort ();\n+  return 0;\n+}\n+"}]}