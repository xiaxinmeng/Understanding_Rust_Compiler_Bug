{"sha": "578e81709125628d0e641343de40e5f48b394f65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc4ZTgxNzA5MTI1NjI4ZDBlNjQxMzQzZGU0MGU1ZjQ4YjM5NGY2NQ==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2003-10-28T07:43:11Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-10-28T07:43:11Z"}, "message": "ggc-zone.c (check_cookies): Add missing variable.\n\n\t* ggc-zone.c (check_cookies): Add missing variable.\n\tAdd void to prototypes.\n\nFrom-SVN: r73000", "tree": {"sha": "7adb74f88295a045b869d9757df2e4383f98e248", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7adb74f88295a045b869d9757df2e4383f98e248"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/578e81709125628d0e641343de40e5f48b394f65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/578e81709125628d0e641343de40e5f48b394f65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/578e81709125628d0e641343de40e5f48b394f65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/578e81709125628d0e641343de40e5f48b394f65/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "525996eb67bbf7718a84b593cff8dae73345bcc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/525996eb67bbf7718a84b593cff8dae73345bcc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/525996eb67bbf7718a84b593cff8dae73345bcc0"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "197630452768603ac9a9942da3b2f04d9d761cbd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/578e81709125628d0e641343de40e5f48b394f65/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/578e81709125628d0e641343de40e5f48b394f65/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=578e81709125628d0e641343de40e5f48b394f65", "patch": "@@ -1,3 +1,8 @@\n+2003-10-28  Andreas Jaeger  <aj@suse.de>\n+\n+\t* ggc-zone.c (check_cookies): Add missing variable.\n+\tAdd void to prototypes.\n+\n 2003-10-27  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* config/mips/irix6-libc-compat.c (inet_makeaddr): Prototype."}, {"sha": "e08ba5e439fbff8f0842061a93a7b2884dddaf63", "filename": "gcc/ggc-zone.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/578e81709125628d0e641343de40e5f48b394f65/gcc%2Fggc-zone.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/578e81709125628d0e641343de40e5f48b394f65/gcc%2Fggc-zone.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-zone.c?ref=578e81709125628d0e641343de40e5f48b394f65", "patch": "@@ -1127,7 +1127,7 @@ ggc_get_size (const void *p)\n \n /* Initialize the ggc-zone-mmap allocator.  */\n void\n-init_ggc ()\n+init_ggc (void)\n {\n   /* Create the zones.  */\n   main_zone.name = \"Main zone\";\n@@ -1195,7 +1195,7 @@ init_ggc ()\n    are never freed, eliminating the need to register their roots.  */\n \n void\n-ggc_push_context ()\n+ggc_push_context (void)\n {\n   struct alloc_zone *zone;\n   for (zone = G.zones; zone; zone = zone->next_zone)\n@@ -1236,7 +1236,7 @@ ggc_pop_context_1 (struct alloc_zone *zone)\n /* Pop all the zone contexts.  */\n \n void\n-ggc_pop_context ()\n+ggc_pop_context (void)\n {\n   struct alloc_zone *zone;\n   for (zone = G.zones; zone; zone = zone->next_zone)\n@@ -1430,10 +1430,12 @@ calculate_average_page_survival (struct alloc_zone *zone)\n    structures.  */\n \n static inline void\n-check_cookies ()\n+check_cookies (void)\n {\n #ifdef COOKIE_CHECKING\n   page_entry *p;\n+  struct alloc_zone *zone;\n+\n   for (zone = G.zones; zone; zone = zone->next_zone)\n     {\n       for (p = zone->pages; p; p = p->next)\n@@ -1459,7 +1461,7 @@ check_cookies ()\n /* Top level collection routine.  */\n \n void\n-ggc_collect ()\n+ggc_collect (void)\n {\n   struct alloc_zone *zone;\n   bool marked = false;\n@@ -1558,7 +1560,7 @@ ggc_collect ()\n /* Print allocation statistics.  */\n \n void\n-ggc_print_statistics ()\n+ggc_print_statistics (void)\n {\n }\n "}]}