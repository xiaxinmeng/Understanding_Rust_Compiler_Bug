{"sha": "ddbaab134ca4603f7d4ac0d1646f40f9c13405ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRiYWFiMTM0Y2E0NjAzZjdkNGFjMGQxNjQ2ZjQwZjljMTM0MDVmZg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-05-14T14:22:54Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-05-14T14:22:54Z"}, "message": "c++: Simplify tsubst_friend_function\n\ntsubst_friend_function's control flow was a little complicated.  This\nsimplifies it, primarily by using more RAII.\n\n\t* pt.c (tsubst_friend_function): Simplify control flow.", "tree": {"sha": "c979a589bc9e1a3f2fd3f82b81f95c4f4a50d02c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c979a589bc9e1a3f2fd3f82b81f95c4f4a50d02c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddbaab134ca4603f7d4ac0d1646f40f9c13405ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddbaab134ca4603f7d4ac0d1646f40f9c13405ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddbaab134ca4603f7d4ac0d1646f40f9c13405ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddbaab134ca4603f7d4ac0d1646f40f9c13405ff/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea5a33d4536ce2af90255782bda0ada632952205", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea5a33d4536ce2af90255782bda0ada632952205", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea5a33d4536ce2af90255782bda0ada632952205"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "9dd04d24f192c08145e77f86758c19ce09c86417", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddbaab134ca4603f7d4ac0d1646f40f9c13405ff/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddbaab134ca4603f7d4ac0d1646f40f9c13405ff/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ddbaab134ca4603f7d4ac0d1646f40f9c13405ff", "patch": "@@ -1,5 +1,7 @@\n 2020-05-14  Nathan Sidwell  <nathan@acm.org>\n \n+\t* pt.c (tsubst_friend_function): Simplify control flow.\n+\n \t* pt.c (lookup_template_class_1): Remove unnecessary else by\n \tsimply grabbing TYPE_NAME earlier.\n "}, {"sha": "4517147c8aafe76dcee78485c0683816e975fd13", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 13, "deletions": 15, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddbaab134ca4603f7d4ac0d1646f40f9c13405ff/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddbaab134ca4603f7d4ac0d1646f40f9c13405ff/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ddbaab134ca4603f7d4ac0d1646f40f9c13405ff", "patch": "@@ -10900,6 +10900,8 @@ tsubst_friend_function (tree decl, tree args)\n     }\n \n   new_friend = tsubst (decl, args, tf_warning_or_error, NULL_TREE);\n+  if (new_friend == error_mark_node)\n+    return error_mark_node;\n \n   /* The NEW_FRIEND will look like an instantiation, to the\n      compiler, but is not an instantiation from the point of view of\n@@ -10911,11 +10913,9 @@ tsubst_friend_function (tree decl, tree args)\n \n      Then, in S<int>, template <class U> void f(int, U) is not an\n      instantiation of anything.  */\n-  if (new_friend == error_mark_node)\n-    return error_mark_node;\n \n   DECL_USE_TEMPLATE (new_friend) = 0;\n-  if (TREE_CODE (decl) == TEMPLATE_DECL)\n+  if (TREE_CODE (new_friend) == TEMPLATE_DECL)\n     {\n       DECL_USE_TEMPLATE (DECL_TEMPLATE_RESULT (new_friend)) = 0;\n       DECL_SAVED_TREE (DECL_TEMPLATE_RESULT (new_friend))\n@@ -10942,29 +10942,27 @@ tsubst_friend_function (tree decl, tree args)\n   if (DECL_NAMESPACE_SCOPE_P (new_friend))\n     {\n       tree old_decl;\n-      tree new_friend_template_info;\n-      tree new_friend_result_template_info;\n       tree ns;\n-      int  new_friend_is_defn;\n \n       /* We must save some information from NEW_FRIEND before calling\n \t duplicate decls since that function will free NEW_FRIEND if\n \t possible.  */\n-      new_friend_template_info = DECL_TEMPLATE_INFO (new_friend);\n-      new_friend_is_defn =\n-\t    (DECL_INITIAL (DECL_TEMPLATE_RESULT\n-\t\t\t   (template_for_substitution (new_friend)))\n-\t     != NULL_TREE);\n+      tree new_friend_template_info = DECL_TEMPLATE_INFO (new_friend);\n+      tree new_friend_result_template_info = NULL_TREE;\n+      bool new_friend_is_defn =\n+\t(DECL_INITIAL (DECL_TEMPLATE_RESULT\n+\t\t       (template_for_substitution (new_friend)))\n+\t != NULL_TREE);\n+      tree not_tmpl = new_friend;\n+\n       if (TREE_CODE (new_friend) == TEMPLATE_DECL)\n \t{\n \t  /* This declaration is a `primary' template.  */\n \t  DECL_PRIMARY_TEMPLATE (new_friend) = new_friend;\n \n-\t  new_friend_result_template_info\n-\t    = DECL_TEMPLATE_INFO (DECL_TEMPLATE_RESULT (new_friend));\n+\t  not_tmpl = DECL_TEMPLATE_RESULT (new_friend);\n+\t  new_friend_result_template_info = DECL_TEMPLATE_INFO (not_tmpl);\n \t}\n-      else\n-\tnew_friend_result_template_info = NULL_TREE;\n \n       /* Inside pushdecl_namespace_level, we will push into the\n \t current namespace. However, the friend function should go"}]}