{"sha": "fb43b412502fd975b5ff40aa3cb4b3fdd5d7b39a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI0M2I0MTI1MDJmZDk3NWI1ZmY0MGFhM2NiNGIzZmRkNWQ3YjM5YQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-07-01T16:09:48Z"}, "committer": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-07-01T16:09:48Z"}, "message": "Fix bootstrap for m68k.\n\ngcc/\n\t* config/m68k/m68k.c (m68k_output_btst): Drop \"register\" keyword.\n\t(emit_move_sequence, output_iorsi3, output_xorsi3): Likewise.", "tree": {"sha": "ca5afa6cf1c8bea886ad03083320668a9bdd1324", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca5afa6cf1c8bea886ad03083320668a9bdd1324"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb43b412502fd975b5ff40aa3cb4b3fdd5d7b39a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb43b412502fd975b5ff40aa3cb4b3fdd5d7b39a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb43b412502fd975b5ff40aa3cb4b3fdd5d7b39a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb43b412502fd975b5ff40aa3cb4b3fdd5d7b39a/comments", "author": null, "committer": null, "parents": [{"sha": "0a7183f6d173cbd69025a3deb30d16f91e6392b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a7183f6d173cbd69025a3deb30d16f91e6392b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a7183f6d173cbd69025a3deb30d16f91e6392b2"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "36a0e34fb06c53bd292fe4003ce7547e8b064e92", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb43b412502fd975b5ff40aa3cb4b3fdd5d7b39a/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb43b412502fd975b5ff40aa3cb4b3fdd5d7b39a/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=fb43b412502fd975b5ff40aa3cb4b3fdd5d7b39a", "patch": "@@ -1946,7 +1946,7 @@ m68k_output_btst (rtx countop, rtx dataop, rtx_code code, int signpos)\n \n   if (GET_CODE (countop) == CONST_INT)\n     {\n-      register int count = INTVAL (countop);\n+      int count = INTVAL (countop);\n       /* If COUNT is bigger than size of storage unit in use,\n \t advance to the containing unit of same size.  */\n       if (count > signpos)\n@@ -3850,9 +3850,9 @@ fp_reg_operand (rtx op, machine_mode mode ATTRIBUTE_UNUSED)\n int\n emit_move_sequence (rtx *operands, machine_mode mode, rtx scratch_reg)\n {\n-  register rtx operand0 = operands[0];\n-  register rtx operand1 = operands[1];\n-  register rtx tem;\n+  rtx operand0 = operands[0];\n+  rtx operand1 = operands[1];\n+  rtx tem;\n \n   if (scratch_reg\n       && reload_in_progress && GET_CODE (operand0) == REG\n@@ -5474,7 +5474,7 @@ output_andsi3 (rtx *operands)\n const char *\n output_iorsi3 (rtx *operands)\n {\n-  register int logval;\n+  int logval;\n   CC_STATUS_INIT;\n   if (GET_CODE (operands[2]) == CONST_INT\n       && INTVAL (operands[2]) >> 16 == 0\n@@ -5513,7 +5513,7 @@ output_iorsi3 (rtx *operands)\n const char *\n output_xorsi3 (rtx *operands)\n {\n-  register int logval;\n+  int logval;\n   CC_STATUS_INIT;\n   if (GET_CODE (operands[2]) == CONST_INT\n       && INTVAL (operands[2]) >> 16 == 0"}]}