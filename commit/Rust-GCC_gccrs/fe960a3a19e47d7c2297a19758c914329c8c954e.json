{"sha": "fe960a3a19e47d7c2297a19758c914329c8c954e", "node_id": "C_kwDOANBUbNoAKGZlOTYwYTNhMTllNDdkN2MyMjk3YTE5NzU4YzkxNDMyOWM4Yzk1NGU", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2022-10-07T18:43:46Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-04T13:47:29Z"}, "message": "ada: Flag unsupported dispatching constructor calls\n\ngcc/ada/\n\n\t* exp_intr.adb\n\t(Expand_Dispatching_Constructor_Call): Report an error on\n\tunsupported dispatching constructor calls and report a warning on\n\tcalls that may fail at run time.\n\ngcc/testsuite/\n\n\t* gnat.dg/abstract1.ads: Cleanup whitespaces.\n\t* gnat.dg/abstract1.adb: Likewise and add -gnatws to silence new\n\twarning.", "tree": {"sha": "332e99825bae7a3efb6f33d8f249f4456865272b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/332e99825bae7a3efb6f33d8f249f4456865272b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe960a3a19e47d7c2297a19758c914329c8c954e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe960a3a19e47d7c2297a19758c914329c8c954e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe960a3a19e47d7c2297a19758c914329c8c954e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe960a3a19e47d7c2297a19758c914329c8c954e/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f780a2d02d0b7c92a75ce1f749ffcc15b90fa32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f780a2d02d0b7c92a75ce1f749ffcc15b90fa32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f780a2d02d0b7c92a75ce1f749ffcc15b90fa32"}], "stats": {"total": 64, "additions": 55, "deletions": 9}, "files": [{"sha": "cb9b5be1090b0b38a5289f31168608ef9fea20f8", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe960a3a19e47d7c2297a19758c914329c8c954e/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe960a3a19e47d7c2297a19758c914329c8c954e/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=fe960a3a19e47d7c2297a19758c914329c8c954e", "patch": "@@ -24,13 +24,16 @@\n ------------------------------------------------------------------------------\n \n with Atree;          use Atree;\n+with Aspects;        use Aspects;\n with Checks;         use Checks;\n with Einfo;          use Einfo;\n with Einfo.Entities; use Einfo.Entities;\n with Einfo.Utils;    use Einfo.Utils;\n with Elists;         use Elists;\n+with Errout;         use Errout;\n with Expander;       use Expander;\n with Exp_Atag;       use Exp_Atag;\n+with Exp_Ch6;        use Exp_Ch6;\n with Exp_Ch7;        use Exp_Ch7;\n with Exp_Ch11;       use Exp_Ch11;\n with Exp_Code;       use Exp_Code;\n@@ -277,6 +280,47 @@ package body Exp_Intr is\n       Result_Typ : Entity_Id;\n \n    begin\n+      pragma Assert (Is_Class_Wide_Type (Etype (Entity (Name (N)))));\n+\n+      --  Report case where we know that the generated code is wrong; that\n+      --  is a dispatching constructor call whose controlling type has tasks\n+      --  but its root type does not have tasks. In such case the constructor\n+      --  subprogram of the root type does not have extra formals but the\n+      --  constructor of the derivation must have extra formals.\n+\n+      if not Global_No_Tasking\n+        and then not No_Run_Time_Mode\n+        and then Is_Build_In_Place_Function (Entity (Name (N)))\n+        and then not Has_Task (Root_Type (Etype (Entity (Name (N)))))\n+        and then not Has_Aspect (Root_Type (Etype (Entity (Name (N)))),\n+                       Aspect_No_Task_Parts)\n+      then\n+         --  Case 1: Explicit tag reference (which allows static check)\n+\n+         if Nkind (Tag_Arg) = N_Identifier\n+           and then Present (Entity (Tag_Arg))\n+           and then Is_Tag (Entity (Tag_Arg))\n+         then\n+            if Has_Task (Related_Type (Entity (Tag_Arg))) then\n+               Error_Msg_N (\"unsupported dispatching constructor call\", N);\n+               Error_Msg_NE\n+                 (\"\\work around this problem by defining task component \"\n+                  & \"type& using access-to-task-type\",\n+                  N, Related_Type (Entity (Tag_Arg)));\n+            end if;\n+\n+         --  Case 2: Dynamic tag which may fail at run time\n+\n+         else\n+            Error_Msg_N\n+              (\"unsupported dispatching constructor call if the type \"\n+               & \"of the built object has task components??\", N);\n+            Error_Msg_N\n+              (\"\\work around this problem by replacing task components \"\n+               & \"with access-to-task-type components??\", N);\n+         end if;\n+      end if;\n+\n       --  Remove side effects from tag argument early, before rewriting\n       --  the dispatching constructor call, as Remove_Side_Effects relies\n       --  on Tag_Arg's Parent link properly attached to the tree (once the"}, {"sha": "36f75e9d495d4ecab3081b4214cf736e34965d5e", "filename": "gcc/testsuite/gnat.dg/abstract1.adb", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe960a3a19e47d7c2297a19758c914329c8c954e/gcc%2Ftestsuite%2Fgnat.dg%2Fabstract1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe960a3a19e47d7c2297a19758c914329c8c954e/gcc%2Ftestsuite%2Fgnat.dg%2Fabstract1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fabstract1.adb?ref=fe960a3a19e47d7c2297a19758c914329c8c954e", "patch": "@@ -1,31 +1,33 @@\n --  { dg-do compile }\n+--  { dg-options \"-gnatws\" }\n+\n with Ada.Tags.Generic_Dispatching_Constructor;  use Ada.Tags;\n package body abstract1 is\n-   \n+\n    function New_T (Stream : not null access Root_Stream_Type'Class)\n       return T'Class is\n       function Construct is\n          new Generic_Dispatching_Constructor (T, Root_Stream_Type'Class, Input);\n       E : constant String := String'Input (Stream);\n       I : constant Tag := Internal_Tag (E);\n-   \n+\n    begin\n       return Construct (I, Stream);\n    end New_T;\n-   \n+\n    function Input (Stream : not null access Root_Stream_Type'Class)\n      return IT is\n    begin\n       return O : IT do\n         Integer'Read (Stream, O.I);\n       end return;\n    end Input;\n-   \n+\n    function Input (Stream : not null access Root_Stream_Type'Class)\n       return FT is\n    begin\n       return O : FT do\n         Float'Read (Stream, O.F);\n-      end return;                                              \n-   end Input;                                                  \n+      end return;\n+   end Input;\n end abstract1;"}, {"sha": "de14d77a9485f0465812d4535e24437fb47ad12e", "filename": "gcc/testsuite/gnat.dg/abstract1.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe960a3a19e47d7c2297a19758c914329c8c954e/gcc%2Ftestsuite%2Fgnat.dg%2Fabstract1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe960a3a19e47d7c2297a19758c914329c8c954e/gcc%2Ftestsuite%2Fgnat.dg%2Fabstract1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fabstract1.ads?ref=fe960a3a19e47d7c2297a19758c914329c8c954e", "patch": "@@ -3,15 +3,15 @@ package abstract1 is\n    type T is abstract tagged limited null record;\n    function Input (Stream : not null access Root_Stream_Type'Class) return T\n      is abstract;\n-   \n+\n    function New_T (Stream : not null access Root_Stream_Type'Class)\n      return T'Class;\n-   \n+\n    type IT is limited new T with record\n      I : Integer;\n    end record;\n    function Input (Stream : not null access Root_Stream_Type'Class) return IT;\n-   \n+\n    type FT is limited new T with record\n      F : Float;\n    end record;"}]}