{"sha": "95cd3246e62ebeafa33bd25cec72f04912e2e5cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTVjZDMyNDZlNjJlYmVhZmEzM2JkMjVjZWM3MmYwNDkxMmUyZTVjYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-24T09:41:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-24T09:41:39Z"}, "message": "[multiple changes]\n\n2009-06-24  Vincent Celier  <celier@adacore.com>\n\n\t* prj-nmsc.adb (Check): A project declared abstract is legal if no\n\tattribute Source_Dirs, Source_Files, Source_List_File or Languages is\n\tdeclared.\n\n2009-06-24  Robert Dewar  <dewar@adacore.com>\n\n\t* clean.adb, gnatcmd.adb, make.adb, mlib-prj.adb,\n\tprj-env.adb: Minor reformatting\n\n2009-06-24  Ed Falis  <falis@adacore.com>\n\n\t* s-taprop-vxworks.adb, s-osinte-vxworks.ads, s-vxwext.ads,\n\ts-vxwext-kernel.adb, s-vxwext-kernel.ads, s-vxwext-rtp.adb,\n\ts-tasinf-vxworks.ads, gcc-interface/Makefile.in: Add processor affinity\n\tsupport for VxWorks SMP.\n\n\t* gcc-interface/Make-lang.in: Update dependencies\n\nFrom-SVN: r148902", "tree": {"sha": "b139b0d558f241992058a451e7afb4d494e288f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b139b0d558f241992058a451e7afb4d494e288f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95cd3246e62ebeafa33bd25cec72f04912e2e5cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95cd3246e62ebeafa33bd25cec72f04912e2e5cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95cd3246e62ebeafa33bd25cec72f04912e2e5cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/comments", "author": null, "committer": null, "parents": [{"sha": "5a66a7661d4f7686ea0e4dea661926f7fee21653", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a66a7661d4f7686ea0e4dea661926f7fee21653", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a66a7661d4f7686ea0e4dea661926f7fee21653"}], "stats": {"total": 628, "additions": 426, "deletions": 202}, "files": [{"sha": "ea3a5d0c0c6aa362c776d8fe74bbe583e3ef3efc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=95cd3246e62ebeafa33bd25cec72f04912e2e5cc", "patch": "@@ -1,3 +1,23 @@\n+2009-06-24  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-nmsc.adb (Check): A project declared abstract is legal if no\n+\tattribute Source_Dirs, Source_Files, Source_List_File or Languages is\n+\tdeclared.\n+\n+2009-06-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* clean.adb, gnatcmd.adb, make.adb, mlib-prj.adb,\n+\tprj-env.adb: Minor reformatting\n+\n+2009-06-24  Ed Falis  <falis@adacore.com>\n+\n+\t* s-taprop-vxworks.adb, s-osinte-vxworks.ads, s-vxwext.ads,\n+\ts-vxwext-kernel.adb, s-vxwext-kernel.ads, s-vxwext-rtp.adb,\n+\ts-tasinf-vxworks.ads, gcc-interface/Makefile.in: Add processor affinity\n+\tsupport for VxWorks SMP.\n+\n+\t* gcc-interface/Make-lang.in: Update dependencies\n+\n 2009-06-24  Emmanuel Briot  <briot@adacore.com>\n \n \t* gnatcmd.adb, make.adb, mlib-prj.adb, prj.adb, prj.ads, clean.adb,"}, {"sha": "e909cae2527472a50105037df9ccd9da9112f913", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=95cd3246e62ebeafa33bd25cec72f04912e2e5cc", "patch": "@@ -577,22 +577,21 @@ package body Clean is\n                      while Unit /= No_Unit_Index loop\n                         if Unit.File_Names (Impl) /= null\n                           and then Ultimate_Extending_Project_Of\n-                            (Unit.File_Names (Impl).Project) = Project\n+                                     (Unit.File_Names (Impl).Project) = Project\n                           and then\n-                            Get_Name_String (Unit.File_Names (Impl).File)\n-                            = Name (1 .. Last)\n+                            Get_Name_String (Unit.File_Names (Impl).File) =\n+                                                              Name (1 .. Last)\n                         then\n                            Delete_File := True;\n                            exit;\n                         end if;\n \n                         if Unit.File_Names (Spec) /= null\n                           and then Ultimate_Extending_Project_Of\n-                            (Unit.File_Names (Spec).Project) = Project\n+                                     (Unit.File_Names (Spec).Project) = Project\n                           and then\n                             Get_Name_String\n-                              (Unit.File_Names (Spec).File) =\n-                          Name (1 .. Last)\n+                              (Unit.File_Names (Spec).File) = Name (1 .. Last)\n                         then\n                            Delete_File := True;\n                            exit;\n@@ -742,19 +741,19 @@ package body Clean is\n                            while Unit /= No_Unit_Index loop\n                               if Unit.File_Names (Impl) /= null\n                                 and then Unit.File_Names (Impl).Project /=\n-                                No_Project\n+                                                                   No_Project\n                               then\n                                  if Ultimate_Extending_Project_Of\n-                                   (Unit.File_Names (Impl).Project) =\n-                                   Project\n+                                      (Unit.File_Names (Impl).Project) =\n+                                                                   Project\n                                  then\n                                     Get_Name_String\n                                       (Unit.File_Names (Impl).File);\n                                     Name_Len := Name_Len -\n                                       File_Extension\n                                         (Name (1 .. Name_Len))'Length;\n                                     if Name_Buffer (1 .. Name_Len) =\n-                                      Name (1 .. Last - 4)\n+                                         Name (1 .. Last - 4)\n                                     then\n                                        Delete_File := True;\n                                        exit;\n@@ -763,25 +762,26 @@ package body Clean is\n \n                               elsif Unit.File_Names (Spec) /= null\n                                 and then Ultimate_Extending_Project_Of\n-                                (Unit.File_Names (Spec).Project) =\n-                                Project\n+                                           (Unit.File_Names (Spec).Project) =\n+                                                                    Project\n                               then\n                                  Get_Name_String\n                                    (Unit.File_Names (Spec).File);\n-                                 Name_Len := Name_Len -\n-                                   File_Extension\n-                                     (Name (1 .. Name_Len))'Length;\n+                                 Name_Len :=\n+                                   Name_Len -\n+                                     File_Extension\n+                                       (Name (1 .. Name_Len))'Length;\n \n                                  if Name_Buffer (1 .. Name_Len) =\n-                                   Name (1 .. Last - 4)\n+                                      Name (1 .. Last - 4)\n                                  then\n                                     Delete_File := True;\n                                     exit;\n                                  end if;\n                               end if;\n \n-                              Unit := Units_Htable.Get_Next\n-                                (Project_Tree.Units_HT);\n+                              Unit :=\n+                                Units_Htable.Get_Next (Project_Tree.Units_HT);\n                            end loop;\n                         end;\n                      end if;"}, {"sha": "ee3bb8f969716b5eb7ad414627ff4916592dff93", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 19, "deletions": 18, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=95cd3246e62ebeafa33bd25cec72f04912e2e5cc", "patch": "@@ -3115,24 +3115,25 @@ ada/sem_attr.o : ada/ada.ads ada/a-charac.ads ada/a-chlat1.ads \\\n    ada/nlists.adb ada/nmake.ads ada/nmake.adb ada/opt.ads ada/output.ads \\\n    ada/restrict.ads ada/rident.ads ada/rtsfind.ads ada/scans.ads \\\n    ada/sdefault.ads ada/sem.ads ada/sem_aggr.ads ada/sem_attr.ads \\\n-   ada/sem_attr.adb ada/sem_aux.ads ada/sem_cat.ads ada/sem_ch13.ads \\\n-   ada/sem_ch3.ads ada/sem_ch4.ads ada/sem_ch6.ads ada/sem_ch8.ads \\\n-   ada/sem_disp.ads ada/sem_dist.ads ada/sem_elab.ads ada/sem_elim.ads \\\n-   ada/sem_eval.ads ada/sem_eval.adb ada/sem_intr.ads ada/sem_res.ads \\\n-   ada/sem_res.adb ada/sem_type.ads ada/sem_util.ads ada/sem_warn.ads \\\n-   ada/sinfo.ads ada/sinfo.adb ada/sinput.ads ada/sinput.adb \\\n-   ada/snames.ads ada/snames.adb ada/sprint.ads ada/stand.ads \\\n-   ada/stringt.ads ada/stringt.adb ada/style.ads ada/styleg.ads \\\n-   ada/styleg.adb ada/stylesw.ads ada/system.ads ada/s-carun8.ads \\\n-   ada/s-exctab.ads ada/s-exctab.adb ada/s-htable.ads ada/s-imenne.ads \\\n-   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n-   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n-   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n-   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n-   ada/targparm.ads ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads \\\n-   ada/ttypef.ads ada/ttypes.ads ada/types.ads ada/types.adb ada/uintp.ads \\\n-   ada/uintp.adb ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads \\\n-   ada/urealp.adb ada/validsw.ads ada/widechar.ads \n+   ada/sem_attr.adb ada/sem_aux.ads ada/sem_cat.ads ada/sem_ch10.ads \\\n+   ada/sem_ch13.ads ada/sem_ch3.ads ada/sem_ch4.ads ada/sem_ch6.ads \\\n+   ada/sem_ch8.ads ada/sem_disp.ads ada/sem_dist.ads ada/sem_elab.ads \\\n+   ada/sem_elim.ads ada/sem_eval.ads ada/sem_eval.adb ada/sem_intr.ads \\\n+   ada/sem_res.ads ada/sem_res.adb ada/sem_type.ads ada/sem_util.ads \\\n+   ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb ada/sinput.ads \\\n+   ada/sinput.adb ada/snames.ads ada/snames.adb ada/sprint.ads \\\n+   ada/stand.ads ada/stringt.ads ada/stringt.adb ada/style.ads \\\n+   ada/styleg.ads ada/styleg.adb ada/stylesw.ads ada/system.ads \\\n+   ada/s-carun8.ads ada/s-exctab.ads ada/s-exctab.adb ada/s-htable.ads \\\n+   ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n+   ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads \\\n+   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n+   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n+   ada/table.adb ada/targparm.ads ada/tbuild.ads ada/tbuild.adb \\\n+   ada/tree_io.ads ada/ttypef.ads ada/ttypes.ads ada/types.ads \\\n+   ada/types.adb ada/uintp.ads ada/uintp.adb ada/unchconv.ads \\\n+   ada/unchdeal.ads ada/urealp.ads ada/urealp.adb ada/validsw.ads \\\n+   ada/widechar.ads \n \n ada/sem_aux.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/atree.ads ada/atree.adb \\"}, {"sha": "35ea1e32aa89dcbaad973fce19c263d7c40caa57", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=95cd3246e62ebeafa33bd25cec72f04912e2e5cc", "patch": "@@ -416,6 +416,7 @@ ifeq ($(strip $(filter-out m68k% wrs vx%,$(targ))),)\n   s-stchop.ads<s-stchop-limit.ads \\\n   s-stchop.adb<s-stchop-vxworks.adb \\\n   s-taprop.adb<s-taprop-vxworks.adb \\\n+  s-tasinf.ads<s-tasinf-vxworks.ads \\\n   s-taspri.ads<s-taspri-vxworks.ads \\\n   s-tpopsp.adb<s-tpopsp-vxworks.adb \\\n   s-vxwork.ads<s-vxwork-m68k.ads \\\n@@ -461,6 +462,7 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks,$(targ))),)\n   s-stchop.ads<s-stchop-limit.ads \\\n   s-stchop.adb<s-stchop-vxworks.adb \\\n   s-taprop.adb<s-taprop-vxworks.adb \\\n+  s-tasinf.ads<s-tasinf-vxworks.ads \\\n   s-taspri.ads<s-taspri-vxworks.ads \\\n   s-vxwork.ads<s-vxwork-ppc.ads \\\n   g-socthi.ads<g-socthi-vxworks.ads \\\n@@ -496,11 +498,12 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks,$(targ))),)\n     ifeq ($(strip $(filter-out rtp-smp,$(THREAD_KIND))),)\n       LIBGNAT_TARGET_PAIRS += \\\n       s-vxwext.ads<s-vxwext-rtp.ads \\\n-      s-vxwext.adb<s-vxwext-rtp.adb \\\n+      s-vxwext.adb<s-vxwext-rtp-smp.adb \\\n       s-tpopsp.adb<s-tpopsp-vxworks-tls.adb \\\n       system.ads<system-vxworks-ppc-rtp.ads\n \n       EXTRA_GNATRTL_NONTASKING_OBJS=s-vxwexc.o\n+      EXTRA_GNATRTL_TASKING_OBJS=affinity.o\n     else\n       ifeq ($(strip $(filter-out kernel-smp,$(THREAD_KIND))),)\n         LIBGNAT_TARGET_PAIRS += \\\n@@ -509,6 +512,8 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks,$(targ))),)\n         s-vxwext.ads<s-vxwext-kernel.ads \\\n         s-vxwext.adb<s-vxwext-kernel-smp.adb \\\n         system.ads<system-vxworks-ppc-kernel.ads\n+\n+        EXTRA_GNATRTL_TASKING_OBJS=affinity.o\n       else\n         LIBGNAT_TARGET_PAIRS += \\\n         s-interr.adb<s-interr-hwint.adb \\\n@@ -523,21 +528,20 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks,$(targ))),)\n           LIBGNAT_TARGET_PAIRS += \\\n           system.ads<system-vxworks-ppc.ads\n         endif\n-\n       endif\n       EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-vxwexc.o\n     endif\n   endif\n \n-  EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o s-vxwext.o\n+  EXTRA_GNATRTL_TASKING_OBJS += s-vxwork.o s-vxwext.o\n \n   EXTRA_LIBGNAT_SRCS+=vx_stack_info.c\n   EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n endif\n \n # vxworksae / vxworks 653\n ifeq ($(strip $(filter-out powerpc% wrs vxworksae,$(targ))),)\n-  # target pairs for kernel + vthreads runtime\n+  # target pairs for vthreads runtime\n   LIBGNAT_TARGET_PAIRS = \\\n   a-elchha.adb<a-elchha-vxworks-ppc-full.adb \\\n   a-intnam.ads<a-intnam-vxworks.ads \\\n@@ -554,6 +558,7 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworksae,$(targ))),)\n   s-parame.ads<s-parame-ae653.ads \\\n   s-parame.adb<s-parame-vxworks.adb \\\n   s-taprop.adb<s-taprop-vxworks.adb \\\n+  s-tasinf.ads<s-tasinf-vxworks.ads \\\n   s-taspri.ads<s-taspri-vxworks.ads \\\n   s-tpopsp.adb<s-tpopsp-vxworks.adb \\\n   s-vxwext.adb<s-vxwext-noints.adb \\\n@@ -619,6 +624,7 @@ ifeq ($(strip $(filter-out %86 wrs vxworksae,$(targ))),)\n   s-osprim.adb<s-osprim-vxworks.adb \\\n   s-parame.ads<s-parame-ae653.ads \\\n   s-taprop.adb<s-taprop-vxworks.adb \\\n+  s-tasinf.ads<s-tasinf-vxworks.ads \\\n   s-taspri.ads<s-taspri-vxworks.ads \\\n   s-thread.adb<s-thread-ae653.adb \\\n   s-tpopsp.adb<s-tpopsp-vxworks.adb \\\n@@ -679,6 +685,7 @@ ifeq ($(strip $(filter-out sparc% wrs vx%,$(targ))),)\n   s-stchop.ads<s-stchop-limit.ads \\\n   s-stchop.adb<s-stchop-vxworks.adb \\\n   s-taprop.adb<s-taprop-vxworks.adb \\\n+  s-tasinf.ads<s-tasinf-vxworks.ads \\\n   s-taspri.ads<s-taspri-vxworks.ads \\\n   s-tpopsp.adb<s-tpopsp-vxworks.adb \\\n   s-vxwork.ads<s-vxwork-sparcv9.ads \\\n@@ -719,6 +726,7 @@ ifeq ($(strip $(filter-out %86 wrs vxworks,$(targ))),)\n   s-stchop.ads<s-stchop-limit.ads \\\n   s-stchop.adb<s-stchop-vxworks.adb \\\n   s-taprop.adb<s-taprop-vxworks.adb \\\n+  s-tasinf.ads<s-tasinf-vxworks.ads \\\n   s-taspri.ads<s-taspri-vxworks.ads \\\n   s-vxwork.ads<s-vxwork-x86.ads \\\n   g-bytswa.adb<g-bytswa-x86.adb \\\n@@ -755,11 +763,12 @@ ifeq ($(strip $(filter-out %86 wrs vxworks,$(targ))),)\n     ifeq ($(strip $(filter-out rtp-smp, $(THREAD_KIND))),)\n       LIBGNAT_TARGET_PAIRS += \\\n       s-vxwext.ads<s-vxwext-rtp.ads \\\n-      s-vxwext.adb<s-vxwext-rtp.adb \\\n+      s-vxwext.adb<s-vxwext-rtp-smp.adb \\\n       s-tpopsp.adb<s-tpopsp-vxworks-tls.adb \\\n       system.ads<system-vxworks-x86-rtp.ads\n \n       EXTRA_GNATRTL_NONTASKING_OBJS=s-vxwexc.o\n+      EXTRA_GNATRTL_TASKING_OBJS=affinity.o\n     else\n       ifeq ($(strip $(filter-out kernel-smp, $(THREAD_KIND))),)\n         LIBGNAT_TARGET_PAIRS += \\\n@@ -768,6 +777,7 @@ ifeq ($(strip $(filter-out %86 wrs vxworks,$(targ))),)\n         s-vxwext.ads<s-vxwext-kernel.ads \\\n         s-vxwext.adb<s-vxwext-kernel-smp.adb \\\n         system.ads<system-vxworks-x86-kernel.ads\n+        EXTRA_GNATRTL_TASKING_OBJS=affinity.o\n       else\n         LIBGNAT_TARGET_PAIRS += \\\n         s-interr.adb<s-interr-hwint.adb \\\n@@ -787,7 +797,7 @@ ifeq ($(strip $(filter-out %86 wrs vxworks,$(targ))),)\n       EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-vxwexc.o\n     endif\n   endif\n-  EXTRA_GNATRTL_TASKING_OBJS=s-vxwork.o s-vxwext.o\n+  EXTRA_GNATRTL_TASKING_OBJS += s-vxwork.o s-vxwext.o\n \n   EXTRA_LIBGNAT_SRCS+=vx_stack_info.c\n   EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n@@ -809,6 +819,7 @@ ifeq ($(strip $(filter-out arm% coff wrs vx%,$(targ))),)\n   s-stchop.ads<s-stchop-limit.ads \\\n   s-stchop.adb<s-stchop-vxworks.adb \\\n   s-taprop.adb<s-taprop-vxworks.adb \\\n+  s-tasinf.ads<s-tasinf-vxworks.ads \\\n   s-taspri.ads<s-taspri-vxworks.ads \\\n   s-tpopsp.adb<s-tpopsp-vxworks.adb \\\n   s-vxwork.ads<s-vxwork-arm.ads \\\n@@ -848,6 +859,7 @@ ifeq ($(strip $(filter-out mips% wrs vx%,$(targ))),)\n   s-stchop.ads<s-stchop-limit.ads \\\n   s-stchop.adb<s-stchop-vxworks.adb \\\n   s-taprop.adb<s-taprop-vxworks.adb \\\n+  s-tasinf.ads<s-tasinf-vxworks.ads \\\n   s-taspri.ads<s-taspri-vxworks.ads \\\n   s-tpopsp.adb<s-tpopsp-vxworks.adb \\\n   s-vxwork.ads<s-vxwork-mips.ads \\"}, {"sha": "d4d5122b51a25a32703e959e2d90e339d4f18ea8", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 18, "deletions": 25, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=95cd3246e62ebeafa33bd25cec72f04912e2e5cc", "patch": "@@ -411,6 +411,7 @@ procedure GNATCmd is\n \n             Unit := Units_Htable.Get_First (Project_Tree.Units_HT);\n             while Unit /= No_Unit_Index loop\n+\n                --  For gnatls, we only need to put the library units, body or\n                --  spec, but not the subunits.\n \n@@ -465,10 +466,8 @@ procedure GNATCmd is\n                      then\n                         Last_Switches.Increment_Last;\n                         Last_Switches.Table (Last_Switches.Last) :=\n-                          new String'\n-                            (Get_Name_String\n-                                 (Unit.File_Names\n-                                      (Spec).Display_File));\n+                          new String'(Get_Name_String\n+                                       (Unit.File_Names (Spec).Display_File));\n                      end if;\n                   end if;\n \n@@ -485,7 +484,7 @@ procedure GNATCmd is\n                      --  must be added.\n \n                      if Check_Project\n-                         (Unit.File_Names (Impl).Project, Project)\n+                          (Unit.File_Names (Impl).Project, Project)\n                      then\n                         Subunit := False;\n \n@@ -513,38 +512,33 @@ procedure GNATCmd is\n                            Last_Switches.Table (Last_Switches.Last) :=\n                              new String'\n                                (Get_Name_String\n-                                    (Unit.File_Names\n-                                       (Impl).Project.\n-                                         Object_Directory.Name)      &\n-                                Directory_Separator                  &\n+                                 (Unit.File_Names\n+                                   (Impl).Project. Object_Directory.Name)  &\n+                                Directory_Separator                        &\n                                 MLib.Fil.Ext_To\n                                   (Get_Name_String\n-                                     (Unit.File_Names\n-                                        (Impl).Display_File),\n+                                     (Unit.File_Names (Impl).Display_File),\n                                    \"ci\"));\n                         end if;\n                      end if;\n \n                   elsif Unit.File_Names (Spec) /= null\n                     and then Unit.File_Names (Spec).Path.Name /= Slash\n                   then\n-                     --  We have a spec with no body. Check if it is for this\n-                     --  project.\n+                     --  Spec with no body, check if it is for this project\n \n                      if Check_Project\n-                       (Unit.File_Names (Spec).Project, Project)\n+                          (Unit.File_Names (Spec).Project, Project)\n                      then\n                         Last_Switches.Increment_Last;\n                         Last_Switches.Table (Last_Switches.Last) :=\n                           new String'\n                             (Get_Name_String\n-                                 (Unit.File_Names\n-                                   (Spec).Project.\n-                                      Object_Directory.Name)         &\n-                             Dir_Separator                           &\n+                              (Unit.File_Names\n+                                (Spec).Project. Object_Directory.Name)     &\n+                             Dir_Separator                                 &\n                              MLib.Fil.Ext_To\n-                               (Get_Name_String\n-                                  (Unit.File_Names (Spec).File),\n+                               (Get_Name_String (Unit.File_Names (Spec).File),\n                                 \"ci\"));\n                      end if;\n                   end if;\n@@ -557,7 +551,7 @@ procedure GNATCmd is\n                   for Kind in Spec_Or_Body loop\n                      if Unit.File_Names (Kind) /= null\n                        and then Check_Project\n-                         (Unit.File_Names (Kind).Project, Project)\n+                                  (Unit.File_Names (Kind).Project, Project)\n                        and then Unit.File_Names (Kind).Path.Name /= Slash\n                      then\n                         Get_Name_String\n@@ -576,10 +570,9 @@ procedure GNATCmd is\n                         else\n                            Last_Switches.Increment_Last;\n                            Last_Switches.Table (Last_Switches.Last) :=\n-                             new String'\n-                               (Get_Name_String\n-                                    (Unit.File_Names\n-                                         (Kind).Path.Display_Name));\n+                             new String'(Get_Name_String\n+                                          (Unit.File_Names\n+                                            (Kind).Path.Display_Name));\n                         end if;\n                      end if;\n                   end loop;"}, {"sha": "a2d4f6cf1b556725722924b1c109b04630b95d44", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 17, "deletions": 25, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=95cd3246e62ebeafa33bd25cec72f04912e2e5cc", "patch": "@@ -1471,10 +1471,10 @@ package body Make is\n \n          if UID /= Prj.No_Unit_Index then\n             if (UID.File_Names (Impl) = null\n-                or else UID.File_Names (Impl).File /= Sfile)\n+                 or else UID.File_Names (Impl).File /= Sfile)\n               and then\n                 (UID.File_Names (Spec) = null\n-                 or else UID.File_Names (Spec).File /= Sfile)\n+                  or else UID.File_Names (Spec).File /= Sfile)\n             then\n                Verbose_Msg (Uname, \"sources do not include \", Name_Id (Sfile));\n                return True;\n@@ -1951,11 +1951,9 @@ package body Make is\n                         exit;\n \n                      elsif Udata.File_Names (Spec) /= null\n-                       and then Udata.File_Names (Spec).File =\n-                         Source_File\n+                       and then Udata.File_Names (Spec).File = Source_File\n                      then\n-                        ALI_Project :=\n-                          Udata.File_Names (Spec).Project;\n+                        ALI_Project := Udata.File_Names (Spec).Project;\n                         exit;\n                      end if;\n \n@@ -3611,20 +3609,17 @@ package body Make is\n                               if Uid /= Prj.No_Unit_Index then\n                                  if Uid.File_Names (Impl) /= null\n                                    and then\n-                                     Uid.File_Names (Impl).Path.Name /=\n-                                       Slash\n+                                     Uid.File_Names (Impl).Path.Name /= Slash\n                                  then\n                                     Sfile := Uid.File_Names (Impl).File;\n                                     Source_Index :=\n                                       Uid.File_Names (Impl).Index;\n \n                                  elsif Uid.File_Names (Spec) /= null\n                                    and then\n-                                     Uid.File_Names\n-                                       (Spec).Path.Name /= Slash\n+                                     Uid.File_Names (Spec).Path.Name /= Slash\n                                  then\n-                                    Sfile :=\n-                                      Uid.File_Names (Spec).File;\n+                                    Sfile := Uid.File_Names (Spec).File;\n                                     Source_Index :=\n                                       Uid.File_Names (Spec).Index;\n                                  end if;\n@@ -4428,10 +4423,9 @@ package body Make is\n \n                   --  If we have something to put in the mapping then do it\n                   --  now. However, if the project is extended, we don't put\n-                  --  anything in the mapping file, because we do not know\n-                  --  where the ALI file is: it might be in the extended\n-                  --  project obj dir as well as in the extending project\n-                  --  obj dir.\n+                  --  anything in the mapping file, because we don't know where\n+                  --  the ALI file is: it might be in the extended project obj\n+                  --  dir as well as in the extending project obj dir.\n \n                   if ALI_Name /= No_File\n                     and then ALI_Project.Extended_By = No_Project\n@@ -4465,13 +4459,12 @@ package body Make is\n \n                         declare\n                            ALI_Path_Name : constant String :=\n-                             Name_Buffer (1 .. Name_Len);\n+                                             Name_Buffer (1 .. Name_Len);\n \n                         begin\n                            if Is_Regular_File\n-                             (ALI_Path_Name (1 .. ALI_Path_Name'Last - 1))\n+                                (ALI_Path_Name (1 .. ALI_Path_Name'Last - 1))\n                            then\n-\n                               --  First line is the unit name\n \n                               Get_Name_String (ALI_Unit);\n@@ -4494,7 +4487,7 @@ package body Make is\n                                   (Mapping_FD,\n                                    Name_Buffer (1)'Address,\n                                    Name_Len);\n-                              OK := Bytes = Name_Len;\n+                              OK := (Bytes = Name_Len);\n \n                               exit when not OK;\n \n@@ -4505,11 +4498,11 @@ package body Make is\n                                   (Mapping_FD,\n                                    ALI_Path_Name (1)'Address,\n                                    ALI_Path_Name'Length);\n-                              OK := Bytes = ALI_Path_Name'Length;\n+                              OK := (Bytes = ALI_Path_Name'Length);\n \n-                              --  If OK is False, it means we were unable\n-                              --  to write a line. No point in continuing\n-                              --  with the other units.\n+                              --  If OK is False, it means we were unable to\n+                              --  write a line. No point in continuing with the\n+                              --  other units.\n \n                               exit when not OK;\n                            end if;\n@@ -7001,7 +6994,6 @@ package body Make is\n       --  For all the sources in the project files,\n \n       Unit := Units_Htable.Get_First (Project_Tree.Units_HT);\n-\n       while Unit /= null loop\n          Sfile := No_File;\n          Index := 0;"}, {"sha": "0b97c842800dd9086459250c9926e0166dd9f189", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=95cd3246e62ebeafa33bd25cec72f04912e2e5cc", "patch": "@@ -944,30 +944,26 @@ package body MLib.Prj is\n             Processed_ALIs.Reset;\n \n             Unit := Units_Htable.Get_First (In_Tree.Units_HT);\n-\n             while Unit /= No_Unit_Index loop\n                if Unit.File_Names (Impl) /= null\n                  and then Unit.File_Names (Impl).Path.Name /= Slash\n                then\n-                  if\n-                    Check_Project (Unit.File_Names (Impl).Project)\n-                  then\n+                  if Check_Project (Unit.File_Names (Impl).Project) then\n                      if Unit.File_Names (Spec) = null then\n                         declare\n                            Src_Ind : Source_File_Index;\n \n                         begin\n                            Src_Ind := Sinput.P.Load_Project_File\n-                             (Get_Name_String\n-                                (Unit.File_Names (Impl).Path.Name));\n+                                        (Get_Name_String\n+                                          (Unit.File_Names (Impl).Path.Name));\n \n                            --  Add the ALI file only if it is not a subunit\n \n                            if not\n                              Sinput.P.Source_File_Is_Subunit (Src_Ind)\n                            then\n-                              Add_ALI_For\n-                                (Unit.File_Names (Impl).File);\n+                              Add_ALI_For (Unit.File_Names (Impl).File);\n                               exit when not Bind;\n                            end if;\n                         end;\n@@ -980,8 +976,7 @@ package body MLib.Prj is\n \n                elsif Unit.File_Names (Spec) /= null\n                  and then Unit.File_Names (Spec).Path.Name /= Slash\n-                 and then Check_Project\n-                   (Unit.File_Names (Spec).Project)\n+                 and then Check_Project (Unit.File_Names (Spec).Project)\n                then\n                   Add_ALI_For (Unit.File_Names (Spec).File);\n                   exit when not Bind;\n@@ -1019,8 +1014,7 @@ package body MLib.Prj is\n                        ALI.Units.Table\n                          (ALI.ALIs.Table (A).First_Unit).Last_Arg\n                      loop\n-                        --  Look for --RTS. If found, add the switch to call\n-                        --  gnatbind.\n+                        --  If --RTS found, add switch to call gnatbind\n \n                         declare\n                            Arg : String_Ptr renames Args.Table (Index);"}, {"sha": "e76a926607f4ded08b8def02ee8dddb6a4a22755", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=95cd3246e62ebeafa33bd25cec72f04912e2e5cc", "patch": "@@ -738,21 +738,21 @@ package body Prj.Env is\n    --------------------\n \n    procedure Create_Mapping (In_Tree : Project_Tree_Ref) is\n-      Unit          : Unit_Index;\n-      Data          : Source_Id;\n+      Unit : Unit_Index;\n+      Data : Source_Id;\n \n    begin\n       Fmap.Reset_Tables;\n \n       Unit := Units_Htable.Get_First (In_Tree.Units_HT);\n-\n       while Unit /= No_Unit_Index loop\n+\n          --  Process only if the unit has a valid name\n \n          if Unit.Name /= No_Name then\n             Data := Unit.File_Names (Spec);\n \n-            --  If there is a spec, put it in the mapping\n+            --  If there is a spec put it in the mapping\n \n             if Data /= null then\n                if Data.Path.Name = Slash then\n@@ -802,11 +802,11 @@ package body Prj.Env is\n       --  For each project in the closure of Project, the corresponding flag\n       --  will be set to True.\n \n-      Source        : Source_Id;\n-      Suffix        : File_Name_Type;\n-      Unit          : Unit_Index;\n-      Data          : Source_Id;\n-      Iter          : Source_Iterator;\n+      Source : Source_Id;\n+      Suffix : File_Name_Type;\n+      Unit   : Unit_Index;\n+      Data   : Source_Id;\n+      Iter   : Source_Iterator;\n \n       procedure Put_Name_Buffer;\n       --  Put the line contained in the Name_Buffer in the mapping file"}, {"sha": "ce5f233f6e81a2ace593ffceffe7a953382f20ea", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 143, "deletions": 85, "changes": 228, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=95cd3246e62ebeafa33bd25cec72f04912e2e5cc", "patch": "@@ -196,6 +196,10 @@ package body Prj.Nmsc is\n    --  Find the list of files that should not be considered as source files\n    --  for this project. Sets the list in the Excluded_Sources_Htable.\n \n+   procedure Override_Kind (Source : Source_Id; Kind : Source_Kind);\n+   --  Override the reference kind for a source file. This properly updates\n+   --  the unit data if necessary.\n+\n    function Hash (Unit : Unit_Info) return Header_Num;\n \n    type Name_And_Index is record\n@@ -717,26 +721,28 @@ package body Prj.Nmsc is\n          --  Process_Exceptions_Unit_Based and Check_File haven't looked it up.\n \n          UData := Units_Htable.Get (In_Tree.Units_HT, Unit);\n+\n          if UData = No_Unit_Index then\n             UData      := new Unit_Data;\n             UData.Name := Unit;\n             Units_Htable.Set (In_Tree.Units_HT, Unit, UData);\n          end if;\n \n-         UData.File_Names (Kind) := Id;\n-         Id.Unit                 := UData;\n+         Id.Unit := UData;\n+\n+         --  Note that this updates Unit information as well\n+\n+         Override_Kind (Id, Kind);\n       end if;\n \n-      Id.Index               := Index;\n-      Id.File                := File_Name;\n-      Id.Display_File        := Display_File;\n-      Id.Dep_Name            := Dependency_Name\n-        (File_Name, Lang_Id.Config.Dependency_Kind);\n-      Id.Naming_Exception    := Naming_Exception;\n+      Id.Index            := Index;\n+      Id.File             := File_Name;\n+      Id.Display_File     := Display_File;\n+      Id.Dep_Name         := Dependency_Name\n+                               (File_Name, Lang_Id.Config.Dependency_Kind);\n+      Id.Naming_Exception := Naming_Exception;\n \n-      if Is_Compilable (Id)\n-        and then Config.Object_Generated\n-      then\n+      if Is_Compilable (Id) and then Config.Object_Generated then\n          Id.Object   := Object_Name (File_Name, Config.Object_File_Suffix);\n          Id.Switches := Switches_Name (File_Name);\n       end if;\n@@ -762,17 +768,15 @@ package body Prj.Nmsc is\n \n    function ALI_File_Name (Source : String) return String is\n    begin\n-      --  If the source name has an extension, then replace it with\n-      --  the ALI suffix.\n+      --  If the source name has extension, replace it with the ALI suffix\n \n       for Index in reverse Source'First + 1 .. Source'Last loop\n          if Source (Index) = '.' then\n             return Source (Source'First .. Index - 1) & ALI_Suffix;\n          end if;\n       end loop;\n \n-      --  If there is no dot, or if it is the first character, just add the\n-      --  ALI suffix.\n+      --  If no dot, or if it is the first character, just add the ALI suffix\n \n       return Source & ALI_Suffix;\n    end ALI_File_Name;\n@@ -827,11 +831,40 @@ package body Prj.Nmsc is\n       if Project.Qualifier = Dry\n         and then Project.Source_Dirs /= Nil_String\n       then\n-         Error_Msg\n-           (Project, In_Tree,\n-            \"an abstract project needs to have no language, no sources \" &\n-            \"or no source directories\",\n-            Project.Location);\n+         declare\n+            Source_Dirs      : constant Variable_Value :=\n+                                 Util.Value_Of\n+                                   (Name_Source_Dirs,\n+                                    Project.Decl.Attributes, In_Tree);\n+            Source_Files     : constant Variable_Value :=\n+                                 Util.Value_Of\n+                                   (Name_Source_Files,\n+                                    Project.Decl.Attributes, In_Tree);\n+            Source_List_File : constant Variable_Value :=\n+                                 Util.Value_Of\n+                                   (Name_Source_List_File,\n+                                    Project.Decl.Attributes, In_Tree);\n+            Languages        : constant Variable_Value :=\n+                                 Util.Value_Of\n+                                   (Name_Languages,\n+                                    Project.Decl.Attributes, In_Tree);\n+\n+         begin\n+            if Source_Dirs.Values  = Nil_String\n+              and then Source_Files.Values = Nil_String\n+              and then Languages.Values = Nil_String\n+              and then Source_List_File.Default\n+            then\n+               Project.Source_Dirs := Nil_String;\n+\n+            else\n+               Error_Msg\n+                 (Project, In_Tree,\n+                  \"an abstract project needs to have no language, \" &\n+                  \"no sources or no source directories\",\n+                  Project.Location);\n+            end if;\n+         end;\n       end if;\n \n       --  Check configuration in multi language mode\n@@ -1221,47 +1254,49 @@ package body Prj.Nmsc is\n \n                      --  Get the name of the language\n \n-                     Lang_Index := Get_Language_From_Name\n-                       (Project, Get_Name_String (Element.Index));\n+                     Lang_Index :=\n+                       Get_Language_From_Name\n+                         (Project, Get_Name_String (Element.Index));\n \n                      if Lang_Index /= No_Language_Index then\n                         case Current_Array.Name is\n-                        when Name_Driver =>\n+                           when Name_Driver =>\n \n-                           --  Attribute Driver (<language>)\n+                              --  Attribute Driver (<language>)\n \n-                           Lang_Index.Config.Binder_Driver :=\n-                             File_Name_Type (Element.Value.Value);\n+                              Lang_Index.Config.Binder_Driver :=\n+                                File_Name_Type (Element.Value.Value);\n \n-                        when Name_Required_Switches =>\n-                           Put (Into_List =>\n+                           when Name_Required_Switches =>\n+                              Put\n+                                (Into_List =>\n                                    Lang_Index.Config.Binder_Required_Switches,\n-                                From_List => Element.Value.Values,\n-                                In_Tree   => In_Tree);\n+                                 From_List => Element.Value.Values,\n+                                 In_Tree   => In_Tree);\n \n-                        when Name_Prefix =>\n+                           when Name_Prefix =>\n \n-                           --  Attribute Prefix (<language>)\n+                              --  Attribute Prefix (<language>)\n \n-                           Lang_Index.Config.Binder_Prefix :=\n-                             Element.Value.Value;\n+                              Lang_Index.Config.Binder_Prefix :=\n+                                Element.Value.Value;\n \n-                        when Name_Objects_Path =>\n+                           when Name_Objects_Path =>\n \n-                           --  Attribute Objects_Path (<language>)\n+                              --  Attribute Objects_Path (<language>)\n \n-                           Lang_Index.Config.Objects_Path :=\n-                             Element.Value.Value;\n+                              Lang_Index.Config.Objects_Path :=\n+                                Element.Value.Value;\n \n-                        when Name_Objects_Path_File =>\n+                           when Name_Objects_Path_File =>\n \n-                           --  Attribute Objects_Path (<language>)\n+                              --  Attribute Objects_Path (<language>)\n \n-                           Lang_Index.Config.Objects_Path_File :=\n-                             Element.Value.Value;\n+                              Lang_Index.Config.Objects_Path_File :=\n+                                Element.Value.Value;\n \n-                        when others =>\n-                           null;\n+                           when others =>\n+                              null;\n                         end case;\n                      end if;\n                   end if;\n@@ -2190,8 +2225,9 @@ package body Prj.Nmsc is\n \n                --  Get the name of the language\n \n-               Lang_Index := Get_Language_From_Name\n-                 (Project, Get_Name_String (Element.Index));\n+               Lang_Index :=\n+                 Get_Language_From_Name\n+                   (Project, Get_Name_String (Element.Index));\n \n                if Lang_Index /= No_Language_Index then\n                   case Current_Array.Name is\n@@ -2994,8 +3030,8 @@ package body Prj.Nmsc is\n                   Source := Prj.Element (Iter);\n                   exit when Source = No_Source\n                     or else (Source.Unit /= null\n-                             and then Source.Unit.Name = Unit\n-                             and then Source.Index = Index);\n+                              and then Source.Unit.Name = Unit\n+                              and then Source.Index = Index);\n                   Next (Iter);\n                end loop;\n \n@@ -3009,8 +3045,8 @@ package body Prj.Nmsc is\n \n                         exit when Source = No_Source\n                           or else (Source.Unit /= null\n-                                   and then Source.Unit.Name = Unit\n-                                   and then Source.Index = Index);\n+                                    and then Source.Unit.Name = Unit\n+                                    and then Source.Index = Index);\n                      end loop;\n                   end if;\n \n@@ -4531,13 +4567,13 @@ package body Prj.Nmsc is\n                                     Src_Ind : Source_File_Index;\n \n                                  begin\n-                                    Src_Ind := Sinput.P.Load_Project_File\n-                                      (Get_Name_String\n-                                         (UData.File_Names\n-                                            (Impl).Path.Name));\n+                                    Src_Ind :=\n+                                      Sinput.P.Load_Project_File\n+                                        (Get_Name_String (UData.File_Names\n+                                                           (Impl).Path.Name));\n \n                                     if Sinput.P.Source_File_Is_Subunit\n-                                      (Src_Ind)\n+                                        (Src_Ind)\n                                     then\n                                        Error_Msg\n                                          (Project, In_Tree,\n@@ -4565,11 +4601,9 @@ package body Prj.Nmsc is\n                            end if;\n \n                         elsif UData.File_Names (Spec) /= null\n-                          and then UData.File_Names\n-                                     (Spec).Path.Name /= Slash\n+                          and then UData.File_Names (Spec).Path.Name /= Slash\n                           and then Check_Project\n-                                     (UData.File_Names\n-                                        (Spec).Project,\n+                                     (UData.File_Names (Spec).Project,\n                                       Project, Extending)\n \n                         then\n@@ -4593,21 +4627,19 @@ package body Prj.Nmsc is\n                      --  Multi_Language mode\n \n                      Next_Proj := Project.Extends;\n-\n                      Iter := For_Each_Source (In_Tree, Project);\n-\n                      loop\n                         while Prj.Element (Iter) /= No_Source\n                           and then\n                             (Prj.Element (Iter).Unit = null\n-                             or else Prj.Element (Iter).Unit.Name /= Unit)\n+                              or else Prj.Element (Iter).Unit.Name /= Unit)\n                         loop\n                            Next (Iter);\n                         end loop;\n \n                         Source := Prj.Element (Iter);\n-                        exit when Source /= No_Source or else\n-                                  Next_Proj = No_Project;\n+                        exit when Source /= No_Source\n+                          or else Next_Proj = No_Project;\n \n                         Iter := For_Each_Source (In_Tree, Next_Proj);\n                         Next_Proj := Next_Proj.Extends;\n@@ -4616,7 +4648,6 @@ package body Prj.Nmsc is\n                      if Source /= No_Source then\n                         if Source.Kind = Sep then\n                            Source := No_Source;\n-\n                         elsif Source.Kind = Spec\n                           and then Source.Other_Part /= No_Source\n                         then\n@@ -4626,8 +4657,7 @@ package body Prj.Nmsc is\n \n                      if Source /= No_Source then\n                         if Source.Project /= Project\n-                          and then\n-                            not Is_Extending (Project, Source.Project)\n+                          and then not Is_Extending (Project, Source.Project)\n                         then\n                            Source := No_Source;\n                         end if;\n@@ -4649,6 +4679,7 @@ package body Prj.Nmsc is\n \n                         String_Element_Table.Increment_Last\n                           (In_Tree.String_Elements);\n+\n                         In_Tree.String_Elements.Table\n                           (String_Element_Table.Last\n                              (In_Tree.String_Elements)) :=\n@@ -4660,8 +4691,9 @@ package body Prj.Nmsc is\n                                (Interfaces).Location,\n                            Flag          => False,\n                            Next          => Interface_ALIs);\n-                        Interface_ALIs := String_Element_Table.Last\n-                          (In_Tree.String_Elements);\n+\n+                        Interface_ALIs :=\n+                          String_Element_Table.Last (In_Tree.String_Elements);\n                      end if;\n \n                   end if;\n@@ -7267,6 +7299,27 @@ package body Prj.Nmsc is\n       end if;\n    end Check_File_Naming_Schemes;\n \n+   -------------------\n+   -- Override_Kind --\n+   -------------------\n+\n+   procedure Override_Kind (Source : Source_Id; Kind : Source_Kind) is\n+   begin\n+      --  Remove reference in the unit, if necessary\n+\n+      if Source.Unit /= null\n+        and then Source.Kind in Spec_Or_Body\n+      then\n+         Source.Unit.File_Names (Source.Kind) := null;\n+      end if;\n+\n+      Source.Kind := Kind;\n+\n+      if Source.Kind in Spec_Or_Body and then Source.Unit /= null then\n+         Source.Unit.File_Names (Source.Kind) := Source;\n+      end if;\n+   end Override_Kind;\n+\n    ----------------\n    -- Check_File --\n    ----------------\n@@ -7341,7 +7394,7 @@ package body Prj.Nmsc is\n                     (Get_Name_String (Canonical_Path));\n \n                   if Sinput.P.Source_File_Is_Subunit (Src_Ind) then\n-                     Name_Loc.Source.Kind := Sep;\n+                     Override_Kind (Name_Loc.Source, Sep);\n                   end if;\n                end if;\n             end if;\n@@ -7713,13 +7766,16 @@ package body Prj.Nmsc is\n       procedure Mark_Excluded_Sources is\n          Source   : Source_Id := No_Source;\n          OK       : Boolean;\n-         Excluded : File_Found := Excluded_Sources_Htable.Get_First;\n+         Excluded : File_Found;\n          Index    : Unit_Index;\n+\n       begin\n+         Excluded := Excluded_Sources_Htable.Get_First;\n          while Excluded /= No_File_Found loop\n-            OK     := False;\n+            OK := False;\n+\n+            --  ??? Don't we have a hash table to map files to Source_Id?\n \n-            --  ??? Don't we have a hash table to map files to Source_Id ?\n             Iter := For_Each_Source (In_Tree);\n             loop\n                Source := Prj.Element (Iter);\n@@ -7743,6 +7799,7 @@ package body Prj.Nmsc is\n                            --  ??? Should we simply set (can be done from the\n                            --  source)\n                            --  Index.File_Names (Source.Kind) := null;\n+\n                         end if;\n                      end if;\n \n@@ -7868,7 +7925,7 @@ package body Prj.Nmsc is\n                                  if Sinput.P.Source_File_Is_Subunit\n                                    (Src_Ind)\n                                  then\n-                                    Src_Id.Kind := Sep;\n+                                    Override_Kind (Src_Id, Sep);\n                                  else\n                                     Check_Object (Src_Id);\n                                  end if;\n@@ -8017,13 +8074,14 @@ package body Prj.Nmsc is\n          Unit_Kind    : Spec_Or_Body;\n          Needs_Pragma : Boolean)\n       is\n+         UData : constant Unit_Index :=\n+                   Units_Htable.Get (In_Tree.Units_HT, Unit_Name);\n          --  ??? Add_Source will look it up again, can we do that only once ?\n-         UData         : constant Unit_Index :=\n-                           Units_Htable.Get (In_Tree.Units_HT, Unit_Name);\n-         Source        : Source_Id;\n-         To_Record     : Boolean := False;\n-         The_Location  : Source_Ptr := Location;\n-         Unit_Prj      : Project_Id;\n+\n+         Source       : Source_Id;\n+         To_Record    : Boolean := False;\n+         The_Location : Source_Ptr := Location;\n+         Unit_Prj     : Project_Id;\n \n       begin\n          if Current_Verbosity = High then\n@@ -8040,7 +8098,7 @@ package body Prj.Nmsc is\n             if UData.File_Names (Unit_Kind) = null\n               or else\n                 (UData.File_Names (Unit_Kind).File = Canonical_File\n-                 and then UData.File_Names (Unit_Kind).Path.Name = Slash)\n+                  and then UData.File_Names (Unit_Kind).Path.Name = Slash)\n               or else Is_Extending\n                 (Project.Extends, UData.File_Names (Unit_Kind).Project)\n             then\n@@ -8352,8 +8410,8 @@ package body Prj.Nmsc is\n \n             if Specs then\n                if not Check_Project\n-                 (The_Unit_Data.File_Names (Spec).Project,\n-                  Project, Extending)\n+                        (The_Unit_Data.File_Names (Spec).Project,\n+                         Project, Extending)\n                then\n                   Error_Msg\n                     (Project, In_Tree,\n@@ -8365,8 +8423,8 @@ package body Prj.Nmsc is\n             else\n                if The_Unit_Data.File_Names (Impl) = null\n                  or else not Check_Project\n-                   (The_Unit_Data.File_Names (Impl).Project,\n-                    Project, Extending)\n+                               (The_Unit_Data.File_Names (Impl).Project,\n+                                Project, Extending)\n                then\n                   Error_Msg\n                     (Project, In_Tree,"}, {"sha": "0eda1ef603cd060bd4a35521d36510c009700a84", "filename": "gcc/ada/s-osinte-vxworks.ads", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fs-osinte-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fs-osinte-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-vxworks.ads?ref=95cd3246e62ebeafa33bd25cec72f04912e2e5cc", "patch": "@@ -471,15 +471,24 @@ package System.OS_Interface is\n       Handler   : Interrupt_Handler;\n       Parameter : System.Address := System.Null_Address) return int;\n    pragma Inline (Interrupt_Connect);\n-   --  Use this to set up an user handler. The routine installs a\n-   --  a user handler which is invoked after the OS has saved enough\n-   --  context for a high-level language routine to be safely invoked.\n+   --  Use this to set up an user handler. The routine installs a a user\n+   --  handler which is invoked after the OS has saved enough context for a\n+   --  high-level language routine to be safely invoked.\n \n    function Interrupt_Number_To_Vector (intNum : int) return Interrupt_Vector;\n    pragma Inline (Interrupt_Number_To_Vector);\n    --  Convert a logical interrupt number to the hardware interrupt vector\n    --  number used to connect the interrupt.\n \n+   --------------------------------\n+   -- Processor Affinity for SMP --\n+   --------------------------------\n+\n+   function taskCpuAffinitySet (tid : t_id; CPU : int) return int\n+     renames System.VxWorks.Ext.taskCpuAffinitySet;\n+   --  For SMP run-times the affinity to CPU.\n+   --  For uniprocessor systems return ERROR status.\n+\n private\n    type sigset_t is new unsigned_long_long;\n "}, {"sha": "622e3b532309f4aede44c291b70cd2a2196b997d", "filename": "gcc/ada/s-taprop-vxworks.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fs-taprop-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fs-taprop-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-vxworks.adb?ref=95cd3246e62ebeafa33bd25cec72f04912e2e5cc", "patch": "@@ -52,6 +52,7 @@ with System.Soft_Links;\n --  on. For example when using the restricted run time, it is replaced by\n --  System.Tasking.Restricted.Stages.\n \n+with System.Task_Info;\n with System.VxWorks.Ext;\n \n package body System.Task_Primitives.Operations is\n@@ -901,6 +902,10 @@ package body System.Task_Primitives.Operations is\n       Succeeded  : out Boolean)\n    is\n       Adjusted_Stack_Size : size_t;\n+      Result : int;\n+\n+      use System.Task_Info;\n+\n    begin\n       --  Ask for four extra bytes of stack space so that the ATCB pointer can\n       --  be stored below the stack limit, plus extra space for the frame of\n@@ -963,6 +968,18 @@ package body System.Task_Primitives.Operations is\n               To_Address (T));\n       end;\n \n+      --  Set processor affinity\n+\n+      if T.Common.Task_Info /= Unspecified_Task_Info then\n+         Result :=\n+           taskCpuAffinitySet (T.Common.LL.Thread, T.Common.Task_Info);\n+\n+         if Result = -1 then\n+            taskDelete (T.Common.LL.Thread);\n+            T.Common.LL.Thread := -1;\n+         end if;\n+      end if;\n+\n       if T.Common.LL.Thread = -1 then\n          Succeeded := False;\n       else"}, {"sha": "18b2ad42703b8b2327f17abe7db948038a643f4c", "filename": "gcc/ada/s-tasinf-vxworks.ads", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fs-tasinf-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fs-tasinf-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasinf-vxworks.ads?ref=95cd3246e62ebeafa33bd25cec72f04912e2e5cc", "patch": "@@ -0,0 +1,90 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                     S Y S T E M . T A S K _ I N F O                      --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package contains the definitions and routines associated with the\n+--  implementation and use of the Task_Info pragma. It is specialized\n+--  appropriately for targets that make use of this pragma.\n+\n+--  Note: the compiler generates direct calls to this interface, via Rtsfind.\n+--  Any changes to this interface may require corresponding compiler changes.\n+\n+--  This unit may be used directly from an application program by providing\n+--  an appropriate WITH, and the interface can be expected to remain stable.\n+\n+--  This is the VxWorks version of this package\n+\n+with Interfaces.C;\n+\n+package System.Task_Info is\n+   pragma Preelaborate;\n+   pragma Elaborate_Body;\n+   --  To ensure that a body is allowed\n+\n+   -----------------------------------------\n+   -- Implementation of Task_Info Feature --\n+   -----------------------------------------\n+\n+   --  The Task_Info pragma:\n+\n+   --    pragma Task_Info (EXPRESSION);\n+\n+   --  allows the specification on a task by task basis of a value of type\n+   --  System.Task_Info.Task_Info_Type to be passed to a task when it is\n+   --  created. The specification of this type, and the effect on the task\n+   --  that is created is target dependent.\n+\n+   --  The Task_Info pragma appears within a task definition (compare the\n+   --  definition and implementation of pragma Priority). If no such pragma\n+   --  appears, then the value Unspecified_Task_Info is passed. If a pragma\n+   --  is present, then it supplies an alternative value. If the argument of\n+   --  the pragma is a discriminant reference, then the value can be set on\n+   --  a task by task basis by supplying the appropriate discriminant value.\n+\n+   --  Note that this means that the type used for Task_Info_Type must be\n+   --  suitable for use as a discriminant (i.e. a scalar or access type).\n+\n+   ------------------\n+   -- Declarations --\n+   ------------------\n+\n+   subtype Task_Info_Type is Interfaces.C.int;\n+   --  This is a CPU number (positive)\n+\n+   Any_CPU : constant Task_Info_Type := 0;\n+   --  Allow task to run on any CPU\n+\n+   use type Interfaces.C.int;\n+\n+   Unspecified_Task_Info : constant Task_Info_Type := -1;\n+   --  Value passed to task in the absence of a Task_Info pragma\n+   --  This value means do not try to set the CPU affinity\n+\n+end System.Task_Info;"}, {"sha": "f93ba6bb8f1af7139d896881265c82befabe599b", "filename": "gcc/ada/s-vxwext-kernel.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fs-vxwext-kernel.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fs-vxwext-kernel.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwext-kernel.adb?ref=95cd3246e62ebeafa33bd25cec72f04912e2e5cc", "patch": "@@ -63,4 +63,14 @@ package body System.VxWorks.Ext is\n       return Os_Sem_Delete (Sem);\n    end semDelete;\n \n+   ------------------------\n+   -- taskCpuAffinitySet --\n+   ------------------------\n+\n+   function taskCpuAffinitySet (tid : t_id; CPU : int) return int is\n+      pragma Unreferenced (tid, CPU);\n+   begin\n+      return ERROR;\n+   end taskCpuAffinitySet;\n+\n end System.VxWorks.Ext;"}, {"sha": "83d4d6711f4385bafcf40239d4af67dba8be5cef", "filename": "gcc/ada/s-vxwext-kernel.ads", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fs-vxwext-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fs-vxwext-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwext-kernel.ads?ref=95cd3246e62ebeafa33bd25cec72f04912e2e5cc", "patch": "@@ -87,4 +87,13 @@ package System.VxWorks.Ext is\n    --  Needed for ravenscar-cert\n    pragma Import (C, tickGet, \"tick64Get\");\n \n+   --------------------------------\n+   -- Processor Affinity for SMP --\n+   --------------------------------\n+\n+   function taskCpuAffinitySet (tid : t_id; CPU : int) return int;\n+   pragma Convention (C, taskCpuAffinitySet);\n+   --  For SMP run-times set the CPU affinity.\n+   --  For uniprocessor systems return ERROR status.\n+\n end System.VxWorks.Ext;"}, {"sha": "b11dde27d32d02653b58d4399ae58a42f6e84138", "filename": "gcc/ada/s-vxwext-rtp.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fs-vxwext-rtp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fs-vxwext-rtp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwext-rtp.adb?ref=95cd3246e62ebeafa33bd25cec72f04912e2e5cc", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                   B o d y                                --\n --                                                                          --\n---            Copyright (C) 2009, Free Software Foundation, Inc.            --\n+--            Copyright (C) 2008-2009, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNARL is free software;  you can redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -79,4 +79,14 @@ package body System.VxWorks.Ext is\n       return 0;\n    end Interrupt_Number_To_Vector;\n \n+   ------------------------\n+   -- taskCpuAffinitySet --\n+   ------------------------\n+\n+   function taskCpuAffinitySet (tid : t_id; CPU : int) return int is\n+      pragma Unreferenced (tid, CPU);\n+   begin\n+      return ERROR;\n+   end taskCpuAffinitySet;\n+\n end System.VxWorks.Ext;"}, {"sha": "f1906a68734a49b26d0403c036ec169c52e79ced", "filename": "gcc/ada/s-vxwext.ads", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fs-vxwext.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95cd3246e62ebeafa33bd25cec72f04912e2e5cc/gcc%2Fada%2Fs-vxwext.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwext.ads?ref=95cd3246e62ebeafa33bd25cec72f04912e2e5cc", "patch": "@@ -81,4 +81,13 @@ package System.VxWorks.Ext is\n    function Set_Time_Slice (ticks : int) return int;\n    pragma Import (C, Set_Time_Slice, \"kernelTimeSlice\");\n \n+   --------------------------------\n+   -- Processor Affinity for SMP --\n+   --------------------------------\n+\n+   function taskCpuAffinitySet (tid : t_id; CPU : int) return int;\n+   pragma Convention (C, taskCpuAffinitySet);\n+   --  For SMP run-times set the CPU affinity.\n+   --  For uniprocessor systems return ERROR status.\n+\n end System.VxWorks.Ext;"}]}