{"sha": "64c2f8defe31677024073ed70b5fbdbc52d0bff4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRjMmY4ZGVmZTMxNjc3MDI0MDczZWQ3MGI1ZmJkYmM1MmQwYmZmNA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2009-11-03T16:51:52Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2009-11-03T16:51:52Z"}, "message": "re PR fortran/41907 (465.tonto in SPEC CPU 2006 runtime failure)\n\n2009-11-03  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/41907\n        * trans-expr.c (gfc_conv_procedure_call): Fix presence check\n        for optional arguments.\n\n2009-11-03  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/41907\n        * gfortran.dg/missing_optional_dummy_6.f90: New test.\n\nFrom-SVN: r153854", "tree": {"sha": "5f727c5c8d300e304725254cbdfbb8e159383810", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f727c5c8d300e304725254cbdfbb8e159383810"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64c2f8defe31677024073ed70b5fbdbc52d0bff4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64c2f8defe31677024073ed70b5fbdbc52d0bff4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64c2f8defe31677024073ed70b5fbdbc52d0bff4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64c2f8defe31677024073ed70b5fbdbc52d0bff4/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9595a419c6d743670f8554b8771156d508983efc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9595a419c6d743670f8554b8771156d508983efc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9595a419c6d743670f8554b8771156d508983efc"}], "stats": {"total": 86, "additions": 80, "deletions": 6}, "files": [{"sha": "8fc1175b35ae3c0796012d98883af6a579ce31ec", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64c2f8defe31677024073ed70b5fbdbc52d0bff4/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64c2f8defe31677024073ed70b5fbdbc52d0bff4/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=64c2f8defe31677024073ed70b5fbdbc52d0bff4", "patch": "@@ -1,3 +1,9 @@\n+2009-11-03  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/41907\n+\t* trans-expr.c (gfc_conv_procedure_call): Fix presence check\n+\tfor optional arguments.\n+\n 2009-11-01  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/41872"}, {"sha": "5a45f4f6368b9c584aad6f113a56fdcadfaa1360", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64c2f8defe31677024073ed70b5fbdbc52d0bff4/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64c2f8defe31677024073ed70b5fbdbc52d0bff4/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=64c2f8defe31677024073ed70b5fbdbc52d0bff4", "patch": "@@ -2998,16 +2998,19 @@ gfc_conv_procedure_call (gfc_se * se, gfc_symbol * sym,\n \t     only needed when passing an array to an elemental procedure\n \t     as then array elements are accessed - or no NULL pointer is\n \t     allowed and a \"1\" or \"0\" should be passed if not present.\n-\t     When passing a deferred array to a non-deferred array dummy,\n-\t     the array needs to be packed and a check needs thus to be\n-\t     inserted.  */\n+\t     When passing a non-array-descriptor full array to a\n+\t     non-array-descriptor dummy, no check is needed. For\n+\t     array-descriptor actual to array-descriptor dummy, see\n+\t     PR 41911 for why a check has to be inserted.\n+\t     fsym == NULL is checked as intrinsics required the descriptor\n+\t     but do not always set fsym.  */\n \t  if (e->expr_type == EXPR_VARIABLE\n \t      && e->symtree->n.sym->attr.optional\n \t      && ((e->rank > 0 && sym->attr.elemental)\n \t\t  || e->representation.length || e->ts.type == BT_CHARACTER\n-\t\t  || (e->rank > 0 && (fsym == NULL\n-\t\t\t\t      || (fsym->as->type != AS_ASSUMED_SHAPE\n-\t\t\t\t\t  && fsym->as->type != AS_DEFERRED)))))\n+\t\t  || (e->rank > 0\n+\t\t      && (fsym == NULL || fsym->as->type == AS_ASSUMED_SHAPE\n+\t\t\t  || fsym->as->type == AS_DEFERRED))))\n \t    gfc_conv_missing_dummy (&parmse, e, fsym ? fsym->ts : e->ts,\n \t\t\t\t    e->representation.length);\n \t}"}, {"sha": "859b5f15f7c7a1c17df38fd874e5df85e654bb90", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64c2f8defe31677024073ed70b5fbdbc52d0bff4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64c2f8defe31677024073ed70b5fbdbc52d0bff4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=64c2f8defe31677024073ed70b5fbdbc52d0bff4", "patch": "@@ -1,3 +1,8 @@\n+2009-11-03  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/41907\n+\t* gfortran.dg/missing_optional_dummy_6.f90: New test.\n+\n 2009-11-03  Nick Clifton  <nickc@redhat.com>\n \n \t* gcc.target/rx/builtins,c: Remove redundant tests."}, {"sha": "408582289f1e5212e15aeb1d357546930b3bc32a", "filename": "gcc/testsuite/gfortran.dg/missing_optional_dummy_6.f90", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64c2f8defe31677024073ed70b5fbdbc52d0bff4/gcc%2Ftestsuite%2Fgfortran.dg%2Fmissing_optional_dummy_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64c2f8defe31677024073ed70b5fbdbc52d0bff4/gcc%2Ftestsuite%2Fgfortran.dg%2Fmissing_optional_dummy_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmissing_optional_dummy_6.f90?ref=64c2f8defe31677024073ed70b5fbdbc52d0bff4", "patch": "@@ -0,0 +1,60 @@\n+! { dg-do run }\n+! { dg-options \"-fdump-tree-original\" }\n+!\n+! PR fortran/41907\n+!\n+program test\n+  implicit none\n+  call scalar1 ()\n+  call assumed_shape1 ()\n+  call explicit_shape1 ()\n+contains\n+\n+  ! Calling functions\n+  subroutine scalar1 (slr1)\n+    integer, optional :: slr1\n+    call scalar2 (slr1)\n+  end subroutine scalar1\n+\n+  subroutine assumed_shape1 (as1)\n+    integer, dimension(:), optional :: as1\n+    call assumed_shape2 (as1)\n+    call explicit_shape2 (as1)\n+  end subroutine assumed_shape1\n+\n+  subroutine explicit_shape1 (es1)\n+    integer, dimension(5), optional :: es1\n+    call assumed_shape2 (es1)\n+    call explicit_shape2 (es1)\n+  end subroutine explicit_shape1\n+\n+\n+  ! Called functions\n+  subroutine assumed_shape2 (as2)\n+    integer, dimension(:),optional :: as2\n+    if (present (as2)) call abort()\n+  end subroutine assumed_shape2\n+\n+  subroutine explicit_shape2 (es2)\n+    integer, dimension(5),optional :: es2\n+    if (present (es2)) call abort()\n+  end subroutine explicit_shape2\n+\n+  subroutine scalar2 (slr2)\n+    integer, optional :: slr2\n+    if (present (slr2)) call abort()\n+  end subroutine scalar2\n+\n+end program test\n+\n+! { dg-final { scan-tree-dump-times \"scalar2 \\\\(slr1\" 1 \"original\" } }\n+\n+! { dg-final { scan-tree-dump-times \"= es1 != 0B\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"assumed_shape2 \\\\(es1\" 0 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"explicit_shape2 \\\\(es1\" 1 \"original\" } }\n+\n+! { dg-final { scan-tree-dump-times \"= as1 != 0B\" 2 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"assumed_shape2 \\\\(as1\" 0 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"explicit_shape2 \\\\(as1\" 0 \"original\" } }\n+\n+! { dg-final { cleanup-tree-dump \"original\" } }"}]}