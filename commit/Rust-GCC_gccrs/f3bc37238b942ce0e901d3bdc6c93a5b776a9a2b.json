{"sha": "f3bc37238b942ce0e901d3bdc6c93a5b776a9a2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNiYzM3MjM4Yjk0MmNlMGU5MDFkM2JkYzZjOTNhNWI3NzZhOWEyYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2007-10-15T13:53:30Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-10-15T13:53:30Z"}, "message": "s-osinte-tru64.adb: (Hide_Yellow_Zone): Add On parameter.\n\n2007-10-15  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* s-osinte-tru64.adb: (Hide_Yellow_Zone): Add On parameter.\n\tSet the protection status of the guard page based on the value of On.\n\n\t* s-osinte-tru64.ads: (Hide_Yellow_Zone): Add On parameter.\n\n\t* s-taprop-tru64.adb: (Enter_Task): Pass True to Hide_Yellow_Zone.\n\t(Exit_Task): Pass False to Hide_Yellow_Zone.\n\nFrom-SVN: r129317", "tree": {"sha": "f11d96eced9b624d50bcbf22e4859d2f37704a62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f11d96eced9b624d50bcbf22e4859d2f37704a62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3bc37238b942ce0e901d3bdc6c93a5b776a9a2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3bc37238b942ce0e901d3bdc6c93a5b776a9a2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3bc37238b942ce0e901d3bdc6c93a5b776a9a2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3bc37238b942ce0e901d3bdc6c93a5b776a9a2b/comments", "author": null, "committer": null, "parents": [{"sha": "488fa69898ccea3bb3376a58e36bd118ef306f43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/488fa69898ccea3bb3376a58e36bd118ef306f43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/488fa69898ccea3bb3376a58e36bd118ef306f43"}], "stats": {"total": 43, "additions": 26, "deletions": 17}, "files": [{"sha": "88cc2fdd3ec03f28987a4247301f839509d7ca24", "filename": "gcc/ada/s-osinte-tru64.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3bc37238b942ce0e901d3bdc6c93a5b776a9a2b/gcc%2Fada%2Fs-osinte-tru64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3bc37238b942ce0e901d3bdc6c93a5b776a9a2b/gcc%2Fada%2Fs-osinte-tru64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-tru64.adb?ref=f3bc37238b942ce0e901d3bdc6c93a5b776a9a2b", "patch": "@@ -83,7 +83,7 @@ package body System.OS_Interface is\n    -- Hide_Yellow_Zone --\n    ----------------------\n \n-   procedure Hide_Yellow_Zone is\n+   procedure Hide_Unhide_Yellow_Zone (Hide : Boolean) is\n       type Teb_Ptr is access all pthread_teb_t;\n       Teb : Teb_Ptr;\n       Res : Interfaces.C.int;\n@@ -101,9 +101,13 @@ package body System.OS_Interface is\n       --  Stick a guard page right above the Yellow Zone if it exists\n \n       if Teb.all.stack_yellow /= Teb.all.stack_guard then\n-         Res := mprotect (Teb.all.stack_yellow, Get_Page_Size, PROT_ON);\n+         if Hide then\n+            Res := mprotect (Teb.all.stack_yellow, Get_Page_Size, PROT_ON);\n+         else\n+            Res := mprotect (Teb.all.stack_yellow, Get_Page_Size, PROT_OFF);\n+         end if;\n       end if;\n-   end Hide_Yellow_Zone;\n+   end Hide_Unhide_Yellow_Zone;\n \n    -----------------\n    -- To_Duration --"}, {"sha": "aa3eb057b43740793bb8a25459c6d8c650c70b3d", "filename": "gcc/ada/s-osinte-tru64.ads", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3bc37238b942ce0e901d3bdc6c93a5b776a9a2b/gcc%2Fada%2Fs-osinte-tru64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3bc37238b942ce0e901d3bdc6c93a5b776a9a2b/gcc%2Fada%2Fs-osinte-tru64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-tru64.ads?ref=f3bc37238b942ce0e901d3bdc6c93a5b776a9a2b", "patch": "@@ -7,7 +7,7 @@\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---             Copyright (C) 1995-2007, Free Software Foundation, Inc.      --\n+--          Copyright (C) 1995-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -273,18 +273,17 @@ package System.OS_Interface is\n    -----------\n \n    Stack_Base_Available : constant Boolean := False;\n-   --  Indicates wether the stack base is available on this target.\n+   --  Indicates if the stack base is available on this target\n \n    function Get_Stack_Base (thread : pthread_t) return Address;\n    pragma Inline (Get_Stack_Base);\n-   --  returns the stack base of the specified thread.\n-   --  Only call this function when Stack_Base_Available is True.\n+   --  Returns the stack base of the specified thread. Only call this function\n+   --  when Stack_Base_Available is True.\n \n    function Get_Page_Size return size_t;\n    function Get_Page_Size return Address;\n    pragma Import (C, Get_Page_Size, \"getpagesize\");\n-   --  returns the size of a page, or 0 if this is not relevant on this\n-   --  target\n+   --  Returns the size of a page, or 0 if this is not relevant on this target\n \n    PROT_NONE  : constant := 0;\n    PROT_READ  : constant := 1;\n@@ -298,11 +297,14 @@ package System.OS_Interface is\n    function mprotect (addr : Address; len : size_t; prot : int) return int;\n    pragma Import (C, mprotect);\n \n-   procedure Hide_Yellow_Zone;\n+   procedure Hide_Unhide_Yellow_Zone (Hide : Boolean);\n    --  Every thread except the initial one features an overflow warning area\n-   --  just above the overflow guard area on the stack. They are called\n-   --  the Yellow Zone and the Red Zone respectively. This procedure hides\n-   --  the former so that the latter could be exposed to stack probing.\n+   --  (called the Yellow Zone) which is just above the overflow guard area\n+   --  on the stack (called the Red Zone). During task execution, we want\n+   --  signals from the Red Zone, so we need to hide the Yellow Zone. This\n+   --  procedure is called at the start of task execution (with Hide set True)\n+   --  to hide the Yellow Zone, and at the end of task execution (with Hide\n+   --  set False) to unhide the Yellow Zone.\n \n    ---------------------------------------\n    -- Nonstandard Thread Initialization --"}, {"sha": "35acb26ce5859eb00fb5ce1ce67b5247425efa46", "filename": "gcc/ada/s-taprop-tru64.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3bc37238b942ce0e901d3bdc6c93a5b776a9a2b/gcc%2Fada%2Fs-taprop-tru64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3bc37238b942ce0e901d3bdc6c93a5b776a9a2b/gcc%2Fada%2Fs-taprop-tru64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-tru64.adb?ref=f3bc37238b942ce0e901d3bdc6c93a5b776a9a2b", "patch": "@@ -173,9 +173,11 @@ package body System.Task_Primitives.Operations is\n       pragma Unreferenced (Sig);\n \n       T       : constant Task_Id := Self;\n-      Result  : Interfaces.C.int;\n       Old_Set : aliased sigset_t;\n \n+      Result : Interfaces.C.int;\n+      pragma Warnings (Off, Result);\n+\n    begin\n       --  It is not safe to raise an exception when using ZCX and the GCC\n       --  exception handling mechanism.\n@@ -720,7 +722,7 @@ package body System.Task_Primitives.Operations is\n \n    procedure Enter_Task (Self_ID : Task_Id) is\n    begin\n-      Hide_Yellow_Zone;\n+      Hide_Unhide_Yellow_Zone (Hide => True);\n       Self_ID.Common.LL.Thread := pthread_self;\n       Specific.Set (Self_ID);\n \n@@ -843,8 +845,8 @@ package body System.Task_Primitives.Operations is\n       use System.Task_Info;\n \n    begin\n-      --  Account for the Yellow Zone (2 pages) and the guard page\n-      --  right above. See Hide_Yellow_Zone for the rationale.\n+      --  Account for the Yellow Zone (2 pages) and the guard page right above.\n+      --  See Hide_Unhide_Yellow_Zone for the rationale.\n \n       Adjusted_Stack_Size :=\n         Interfaces.C.size_t (Stack_Size) + 3 * Get_Page_Size;\n@@ -1006,6 +1008,7 @@ package body System.Task_Primitives.Operations is\n    procedure Exit_Task is\n    begin\n       Specific.Set (null);\n+      Hide_Unhide_Yellow_Zone (Hide => False);\n    end Exit_Task;\n \n    ----------------"}]}