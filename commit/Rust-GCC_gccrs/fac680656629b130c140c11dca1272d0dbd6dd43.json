{"sha": "fac680656629b130c140c11dca1272d0dbd6dd43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFjNjgwNjU2NjI5YjEzMGMxNDBjMTFkY2ExMjcyZDBkYmQ2ZGQ0Mw==", "commit": {"author": {"name": "Chung-Lin Tang", "email": "cltang@codesourcery.com", "date": "2010-12-03T16:15:26Z"}, "committer": {"name": "Chung-Lin Tang", "email": "cltang@gcc.gnu.org", "date": "2010-12-03T16:15:26Z"}, "message": "sysv.S (ffi_closure_SYSV): Add UNWIND to .pad directive.\n\n2010-12-03  Chung-Lin Tang  <cltang@codesourcery.com>\n\n\t* src/arm/sysv.S (ffi_closure_SYSV): Add UNWIND to .pad directive.\n\t(ffi_closure_VFP): Same.\n\t(ffi_call_VFP): Move down to before ffi_closure_VFP. Add '.fpu vfp'\n\tdirective.\n\nFrom-SVN: r167434", "tree": {"sha": "2481128ab8d5d9f7351c754a6aadb1220d50ee2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2481128ab8d5d9f7351c754a6aadb1220d50ee2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fac680656629b130c140c11dca1272d0dbd6dd43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fac680656629b130c140c11dca1272d0dbd6dd43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fac680656629b130c140c11dca1272d0dbd6dd43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fac680656629b130c140c11dca1272d0dbd6dd43/comments", "author": {"login": "cltang", "id": 4055966, "node_id": "MDQ6VXNlcjQwNTU5NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/4055966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cltang", "html_url": "https://github.com/cltang", "followers_url": "https://api.github.com/users/cltang/followers", "following_url": "https://api.github.com/users/cltang/following{/other_user}", "gists_url": "https://api.github.com/users/cltang/gists{/gist_id}", "starred_url": "https://api.github.com/users/cltang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cltang/subscriptions", "organizations_url": "https://api.github.com/users/cltang/orgs", "repos_url": "https://api.github.com/users/cltang/repos", "events_url": "https://api.github.com/users/cltang/events{/privacy}", "received_events_url": "https://api.github.com/users/cltang/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "892f61197b269627b74ab3c7d852cbc21b5a0025", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/892f61197b269627b74ab3c7d852cbc21b5a0025", "html_url": "https://github.com/Rust-GCC/gccrs/commit/892f61197b269627b74ab3c7d852cbc21b5a0025"}], "stats": {"total": 159, "additions": 85, "deletions": 74}, "files": [{"sha": "16e463806f9d452777d7f79d0ecf47edaecb6d61", "filename": "libffi/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fac680656629b130c140c11dca1272d0dbd6dd43/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fac680656629b130c140c11dca1272d0dbd6dd43/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=fac680656629b130c140c11dca1272d0dbd6dd43", "patch": "@@ -1,3 +1,10 @@\n+2010-12-03  Chung-Lin Tang  <cltang@codesourcery.com>\n+\n+\t* src/arm/sysv.S (ffi_closure_SYSV): Add UNWIND to .pad directive.\n+\t(ffi_closure_VFP): Same.\n+\t(ffi_call_VFP): Move down to before ffi_closure_VFP. Add '.fpu vfp'\n+\tdirective.\n+\n 2010-12-01  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* testsuite/libffi.call/ffitest.h [__sgi] (PRId64, PRIu64): Define."}, {"sha": "72f0ee0ca0cdba2d8d640f64bcfe736c05204f39", "filename": "libffi/src/arm/sysv.S", "status": "modified", "additions": 78, "deletions": 74, "changes": 152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fac680656629b130c140c11dca1272d0dbd6dd43/libffi%2Fsrc%2Farm%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fac680656629b130c140c11dca1272d0dbd6dd43/libffi%2Fsrc%2Farm%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Farm%2Fsysv.S?ref=fac680656629b130c140c11dca1272d0dbd6dd43", "patch": "@@ -229,6 +229,83 @@ LSYM(Lepilogue):\n         .size    CNAME(ffi_call_SYSV),.ffi_call_SYSV_end-CNAME(ffi_call_SYSV)\n \n \n+/*\n+\tunsigned int FFI_HIDDEN\n+\tffi_closure_SYSV_inner (closure, respp, args)\n+\t     ffi_closure *closure;\n+\t     void **respp;\n+  \t     void *args;\n+*/\n+\n+ARM_FUNC_START ffi_closure_SYSV\n+\tUNWIND .pad #16\n+\tadd\tip, sp, #16\n+\tstmfd\tsp!, {ip, lr}\n+\tUNWIND .save\t{r0, lr}\n+\tadd\tr2, sp, #8\n+\tUNWIND .pad #16\n+\tsub\tsp, sp, #16\n+\tstr\tsp, [sp, #8]\n+\tadd\tr1, sp, #8\n+\tbl\tffi_closure_SYSV_inner\n+\tcmp\tr0, #FFI_TYPE_INT\n+\tbeq\t.Lretint\n+\n+\tcmp\tr0, #FFI_TYPE_FLOAT\n+#if defined(__SOFTFP__) || defined(__ARM_EABI__)\n+\tbeq\t.Lretint\n+#else\n+\tbeq\t.Lretfloat\n+#endif\n+\n+\tcmp\tr0, #FFI_TYPE_DOUBLE\n+#if defined(__SOFTFP__) || defined(__ARM_EABI__)\n+\tbeq\t.Lretlonglong\n+#else\n+\tbeq\t.Lretdouble\n+#endif\n+\n+\tcmp\tr0, #FFI_TYPE_LONGDOUBLE\n+#if defined(__SOFTFP__) || defined(__ARM_EABI__)\n+\tbeq\t.Lretlonglong\n+#else\n+\tbeq\t.Lretlongdouble\n+#endif\n+\n+\tcmp\tr0, #FFI_TYPE_SINT64\n+\tbeq\t.Lretlonglong\n+.Lclosure_epilogue:\n+\tadd\tsp, sp, #16\n+\tldmfd\tsp, {sp, pc}\n+.Lretint:\n+\tldr\tr0, [sp]\n+\tb\t.Lclosure_epilogue\n+.Lretlonglong:\n+\tldr\tr0, [sp]\n+\tldr\tr1, [sp, #4]\n+\tb\t.Lclosure_epilogue\n+\n+#if !defined(__SOFTFP__) && !defined(__ARM_EABI__)\n+.Lretfloat:\n+\tldfs\tf0, [sp]\n+\tb\t.Lclosure_epilogue\n+.Lretdouble:\n+\tldfd\tf0, [sp]\n+\tb\t.Lclosure_epilogue\n+.Lretlongdouble:\n+\tldfd\tf0, [sp]\n+\tb\t.Lclosure_epilogue\n+#endif\n+\n+.ffi_closure_SYSV_end:\n+\tUNWIND .fnend\n+        .size    CNAME(ffi_closure_SYSV),.ffi_closure_SYSV_end-CNAME(ffi_closure_SYSV)\n+\n+\n+/* Below are VFP hard-float ABI call and closure implementations.\n+   Add VFP FPU directive here. */\n+\t.fpu\tvfp\n+\n \t@ r0:   fn\n \t@ r1:   &ecif\n \t@ r2:   cif->bytes\n@@ -321,79 +398,6 @@ LSYM(Lepilogue_vfp):\n .ffi_call_VFP_end:\n \tUNWIND .fnend\n         .size    CNAME(ffi_call_VFP),.ffi_call_VFP_end-CNAME(ffi_call_VFP)\n-\t\n-\t\n-/*\n-\tunsigned int FFI_HIDDEN\n-\tffi_closure_SYSV_inner (closure, respp, args)\n-\t     ffi_closure *closure;\n-\t     void **respp;\n-  \t     void *args;\n-*/\n-\n-ARM_FUNC_START ffi_closure_SYSV\n-\tUNWIND .pad #16\n-\tadd\tip, sp, #16\n-\tstmfd\tsp!, {ip, lr}\n-\tUNWIND .save\t{r0, lr}\n-\tadd\tr2, sp, #8\n-\t.pad #16\n-\tsub\tsp, sp, #16\n-\tstr\tsp, [sp, #8]\n-\tadd\tr1, sp, #8\n-\tbl\tffi_closure_SYSV_inner\n-\tcmp\tr0, #FFI_TYPE_INT\n-\tbeq\t.Lretint\n-\n-\tcmp\tr0, #FFI_TYPE_FLOAT\n-#if defined(__SOFTFP__) || defined(__ARM_EABI__)\n-\tbeq\t.Lretint\n-#else\n-\tbeq\t.Lretfloat\n-#endif\n-\n-\tcmp\tr0, #FFI_TYPE_DOUBLE\n-#if defined(__SOFTFP__) || defined(__ARM_EABI__)\n-\tbeq\t.Lretlonglong\n-#else\n-\tbeq\t.Lretdouble\n-#endif\n-\n-\tcmp\tr0, #FFI_TYPE_LONGDOUBLE\n-#if defined(__SOFTFP__) || defined(__ARM_EABI__)\n-\tbeq\t.Lretlonglong\n-#else\n-\tbeq\t.Lretlongdouble\n-#endif\n-\n-\tcmp\tr0, #FFI_TYPE_SINT64\n-\tbeq\t.Lretlonglong\n-.Lclosure_epilogue:\n-\tadd\tsp, sp, #16\n-\tldmfd\tsp, {sp, pc}\n-.Lretint:\n-\tldr\tr0, [sp]\n-\tb\t.Lclosure_epilogue\n-.Lretlonglong:\n-\tldr\tr0, [sp]\n-\tldr\tr1, [sp, #4]\n-\tb\t.Lclosure_epilogue\n-\n-#if !defined(__SOFTFP__) && !defined(__ARM_EABI__)\n-.Lretfloat:\n-\tldfs\tf0, [sp]\n-\tb\t.Lclosure_epilogue\n-.Lretdouble:\n-\tldfd\tf0, [sp]\n-\tb\t.Lclosure_epilogue\n-.Lretlongdouble:\n-\tldfd\tf0, [sp]\n-\tb\t.Lclosure_epilogue\n-#endif\n-\n-.ffi_closure_SYSV_end:\n-\tUNWIND .fnend\n-        .size    CNAME(ffi_closure_SYSV),.ffi_closure_SYSV_end-CNAME(ffi_closure_SYSV)\n \n \n ARM_FUNC_START ffi_closure_VFP\n@@ -405,7 +409,7 @@ ARM_FUNC_START ffi_closure_VFP\n \tUNWIND .save\t{r0, lr}\n \tadd\tr2, sp, #72\n \tadd\tr3, sp, #8\n-\t.pad #72\n+\tUNWIND .pad #72\n \tsub\tsp, sp, #72\n \tstr\tsp, [sp, #64]\n \tadd\tr1, sp, #64"}]}