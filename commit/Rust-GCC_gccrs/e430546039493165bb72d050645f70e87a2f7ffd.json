{"sha": "e430546039493165bb72d050645f70e87a2f7ffd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQzMDU0NjAzOTQ5MzE2NWJiNzJkMDUwNjQ1ZjcwZTg3YTJmN2ZmZA==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2006-11-01T05:16:14Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2006-11-01T05:16:14Z"}, "message": "In gcc/:\n\n\t* toplev.c (compile_file): Call final_write_globals\n\teven if there have been errors.\nIn gcc/cp/:\n\t* decl2.c (cp_write_global_declarations): Rename from\n\tcp_finish_file.\n\t* cp-lang.c (finish_file): Don't call cp_finish_file.\n\t* cp-tree.h (cp_write_global_declarations): Rename from\n\tcp_finish_file.\n\t* cp-objcp-common.h (LANG_HOOKS_WRITE_GLOBALS): Define to\n\tcp_write_global_declarations.\n\nFrom-SVN: r118362", "tree": {"sha": "699c87f45ac8d8f3301362648096b1084d3f9031", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/699c87f45ac8d8f3301362648096b1084d3f9031"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e430546039493165bb72d050645f70e87a2f7ffd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e430546039493165bb72d050645f70e87a2f7ffd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e430546039493165bb72d050645f70e87a2f7ffd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e430546039493165bb72d050645f70e87a2f7ffd/comments", "author": null, "committer": null, "parents": [{"sha": "167fa32c09eb5d93d23c74365a4ce818762de826", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/167fa32c09eb5d93d23c74365a4ce818762de826", "html_url": "https://github.com/Rust-GCC/gccrs/commit/167fa32c09eb5d93d23c74365a4ce818762de826"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "9c6a836a38faf2169258a4da02cf64b940e5808a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e430546039493165bb72d050645f70e87a2f7ffd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e430546039493165bb72d050645f70e87a2f7ffd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e430546039493165bb72d050645f70e87a2f7ffd", "patch": "@@ -1,4 +1,9 @@\n-2006-09-07  Eric Christopher  <echristo@apple.com>\n+2006-10-31  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* toplev.c (compile_file): Call final_write_globals\n+\teven if there have been errors.\n+\t\n+2006-10-31  Eric Christopher  <echristo@apple.com>\n \t    Falk Hueffner  <falk@debian.org>\n \n \t* doc/extend.texi (__builtin_bswap32): Document."}, {"sha": "add6b2c33898fbe5e425ffdd8b7de305fdceb2bc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e430546039493165bb72d050645f70e87a2f7ffd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e430546039493165bb72d050645f70e87a2f7ffd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e430546039493165bb72d050645f70e87a2f7ffd", "patch": "@@ -1,3 +1,13 @@\n+2006-09-25  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* decl2.c (cp_write_global_declarations): Rename from\n+\tcp_finish_file.\n+\t* cp-lang.c (finish_file): Don't call cp_finish_file.\n+\t* cp-tree.h (cp_write_global_declarations): Rename from\n+\tcp_finish_file.\n+\t* cp-objcp-common.h (LANG_HOOKS_WRITE_GLOBALS): Define to\n+\tcp_write_global_declarations.\n+\n 2006-10-31  Geoffrey Keating  <geoffk@apple.com>\n \n \t* name-lookup.c (get_anonymous_namespace_name): New."}, {"sha": "793046b3469d34b0cc481e07d65d624df96b53e2", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e430546039493165bb72d050645f70e87a2f7ffd/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e430546039493165bb72d050645f70e87a2f7ffd/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=e430546039493165bb72d050645f70e87a2f7ffd", "patch": "@@ -141,7 +141,6 @@ cp_init_ts (void)\n void\n finish_file (void)\n {\n-  cp_finish_file ();\n }\n \n #include \"gtype-cp.h\""}, {"sha": "23e1f0ffff1f2d77586240edfffced7dcb16a354", "filename": "gcc/cp/cp-objcp-common.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e430546039493165bb72d050645f70e87a2f7ffd/gcc%2Fcp%2Fcp-objcp-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e430546039493165bb72d050645f70e87a2f7ffd/gcc%2Fcp%2Fcp-objcp-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-objcp-common.h?ref=e430546039493165bb72d050645f70e87a2f7ffd", "patch": "@@ -84,7 +84,7 @@ extern tree objcp_tsubst_copy_and_build (tree, tree, tsubst_flags_t,\n #undef LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL\n #define LANG_HOOKS_WARN_UNUSED_GLOBAL_DECL cxx_warn_unused_global_decl\n #undef LANG_HOOKS_WRITE_GLOBALS\n-#define LANG_HOOKS_WRITE_GLOBALS lhd_do_nothing\n+#define LANG_HOOKS_WRITE_GLOBALS cp_write_global_declarations\n #undef LANG_HOOKS_COMDAT_GROUP\n #define LANG_HOOKS_COMDAT_GROUP cxx_comdat_group\n #undef  LANG_HOOKS_BUILTIN_FUNCTION"}, {"sha": "0fdbf82d02c8ce267d9db8b0d1c9a852bc233a97", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e430546039493165bb72d050645f70e87a2f7ffd/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e430546039493165bb72d050645f70e87a2f7ffd/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=e430546039493165bb72d050645f70e87a2f7ffd", "patch": "@@ -3968,7 +3968,7 @@ extern tree grokbitfield (const cp_declarator *, cp_decl_specifier_seq *,\n \t\t\t  tree);\n extern void cplus_decl_attributes\t\t(tree *, tree, int);\n extern void finish_anon_union\t\t\t(tree);\n-extern void cp_finish_file\t\t\t(void);\n+extern void cp_write_global_declarations\t(void);\n extern tree coerce_new_type\t\t\t(tree);\n extern tree coerce_delete_type\t\t\t(tree);\n extern void comdat_linkage\t\t\t(tree);"}, {"sha": "43889181f2f1e8a7e6de084472808d88c4f0ef19", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e430546039493165bb72d050645f70e87a2f7ffd/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e430546039493165bb72d050645f70e87a2f7ffd/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=e430546039493165bb72d050645f70e87a2f7ffd", "patch": "@@ -3027,13 +3027,13 @@ build_java_method_aliases (void)\n     }\n }\n \n-/* This routine is called from the last rule in yyparse ().\n+/* This routine is called at the end of compilation.\n    Its job is to create all the code needed to initialize and\n    destroy the global aggregates.  We do the destruction\n    first, since that way we only need to reverse the decls once.  */\n \n void\n-cp_finish_file (void)\n+cp_write_global_declarations (void)\n {\n   tree vars;\n   bool reconsider;"}, {"sha": "0f24ce3ebe4b1a9949f37fc774807b2e1c794195", "filename": "gcc/toplev.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e430546039493165bb72d050645f70e87a2f7ffd/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e430546039493165bb72d050645f70e87a2f7ffd/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=e430546039493165bb72d050645f70e87a2f7ffd", "patch": "@@ -1040,10 +1040,14 @@ compile_file (void)\n      what's left of the symbol table output.  */\n   timevar_pop (TV_PARSE);\n \n-  if (flag_syntax_only || errorcount || sorrycount)\n+  if (flag_syntax_only)\n     return;\n \n   lang_hooks.decls.final_write_globals ();\n+\n+  if (errorcount || sorrycount)\n+    return;\n+\n   cgraph_varpool_assemble_pending_decls ();\n   finish_aliases_2 ();\n "}]}