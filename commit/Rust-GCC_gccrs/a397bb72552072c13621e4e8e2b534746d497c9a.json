{"sha": "a397bb72552072c13621e4e8e2b534746d497c9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM5N2JiNzI1NTIwNzJjMTM2MjFlNGU4ZTJiNTM0NzQ2ZDQ5N2M5YQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-07-20T17:34:18Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-07-20T17:34:18Z"}, "message": "re PR c++/44967 ([C++0x] decltype of method call dependent on pack expansion crashes)\n\n\tPR c++/44967\n\t* pt.c (tsubst_copy_and_build): Handle partial substitution of\n\tCALL_EXPR.\n\nFrom-SVN: r162343", "tree": {"sha": "abe1aca6b2dbd2b28974f2d0c26771db07ea03b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/abe1aca6b2dbd2b28974f2d0c26771db07ea03b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a397bb72552072c13621e4e8e2b534746d497c9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a397bb72552072c13621e4e8e2b534746d497c9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a397bb72552072c13621e4e8e2b534746d497c9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a397bb72552072c13621e4e8e2b534746d497c9a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "caa4a25077716782796a7c133fc8ba166ed177d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caa4a25077716782796a7c133fc8ba166ed177d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/caa4a25077716782796a7c133fc8ba166ed177d2"}], "stats": {"total": 67, "additions": 63, "deletions": 4}, "files": [{"sha": "b2b0279baf56fa6359151419d211293ec652ddf0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a397bb72552072c13621e4e8e2b534746d497c9a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a397bb72552072c13621e4e8e2b534746d497c9a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a397bb72552072c13621e4e8e2b534746d497c9a", "patch": "@@ -1,3 +1,9 @@\n+2010-07-20  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/44967\n+\t* pt.c (tsubst_copy_and_build): Handle partial substitution of\n+\tCALL_EXPR.\n+\n 2010-07-19  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/44996"}, {"sha": "a992d6f5f7c5aa245fee2212902811d775d47453", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a397bb72552072c13621e4e8e2b534746d497c9a/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a397bb72552072c13621e4e8e2b534746d497c9a/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=a397bb72552072c13621e4e8e2b534746d497c9a", "patch": "@@ -12500,6 +12500,15 @@ tsubst_copy_and_build (tree t,\n \t      }\n \t  }\n \n+\tif (processing_template_decl\n+\t    && (type_dependent_expression_p (function)\n+\t\t|| any_type_dependent_arguments_p (call_args)))\n+\t  {\n+\t    ret = build_nt_call_vec (function, call_args);\n+\t    KOENIG_LOOKUP_P (ret) = koenig_p;\n+\t    goto call_out;\n+\t  }\n+\n \t/* We do not perform argument-dependent lookup if normal\n \t   lookup finds a non-function, in accordance with the\n \t   expected resolution of DR 218.  */\n@@ -12512,15 +12521,14 @@ tsubst_copy_and_build (tree t,\n \t\t|| TREE_CODE (function) == IDENTIFIER_NODE)\n \t    /* Only do this when substitution turns a dependent call\n \t       into a non-dependent call.  */\n-\t    && type_dependent_expression_p_push (t)\n-\t    && !any_type_dependent_arguments_p (call_args))\n+\t    && type_dependent_expression_p_push (t))\n \t  function = perform_koenig_lookup (function, call_args);\n \n \tif (TREE_CODE (function) == IDENTIFIER_NODE)\n \t  {\n \t    unqualified_name_lookup_error (function);\n-\t    release_tree_vector (call_args);\n-\t    return error_mark_node;\n+\t    ret = error_mark_node;\n+\t    goto call_out;\n \t  }\n \n \t/* Remember that there was a reference to this entity.  */\n@@ -12551,6 +12559,7 @@ tsubst_copy_and_build (tree t,\n \t\t\t\t  koenig_p,\n \t\t\t\t  complain);\n \n+      call_out:\n \trelease_tree_vector (call_args);\n \n \treturn ret;"}, {"sha": "902c9cd1f4b0f17764d84e90bd58fa547dd09fe8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a397bb72552072c13621e4e8e2b534746d497c9a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a397bb72552072c13621e4e8e2b534746d497c9a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a397bb72552072c13621e4e8e2b534746d497c9a", "patch": "@@ -1,3 +1,8 @@\n+2010-07-20  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/44967\n+\t* g++.dg/cpp0x/sfinae2.C: New.\n+\n 2010-07-20  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/42696"}, {"sha": "b9ef70d99cf5d786330c2dc24ceb7276a62d5183", "filename": "gcc/testsuite/g++.dg/cpp0x/sfinae2.C", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a397bb72552072c13621e4e8e2b534746d497c9a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a397bb72552072c13621e4e8e2b534746d497c9a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae2.C?ref=a397bb72552072c13621e4e8e2b534746d497c9a", "patch": "@@ -0,0 +1,39 @@\n+// PR c++/44967\n+// { dg-options -std=c++0x }\n+\n+template <typename T> T&& declval();\n+\n+template<typename T1, typename T2, typename... Args>\n+struct has_construct\n+{\n+    typedef char one;\n+    typedef struct {char _m[2]; } two;\n+\n+    template<typename U1, typename U2, typename... Args2>\n+    static decltype(declval<U1>().construct(declval<U2*>(), declval<Args2>()...), one()) test(int);\n+    template<typename, typename, typename...>\n+    static two test(...);\n+\n+    static const bool value = sizeof(test<T1, T2, Args...>(0)) == 1;\n+};\n+\n+\n+struct A0\n+{};\n+\n+struct A1\n+{\n+    void construct(int*, int);\n+};\n+\n+template<typename _Tp>\n+struct A2\n+{\n+  template<typename _Tp1, typename... _Args>\n+  void construct(_Tp1*, _Args&&...) {}\n+};\n+\n+#define SA(X) static_assert(X,#X)\n+SA((!has_construct<A0, int, int>::value)); // ok\n+SA((has_construct<A1, int, int>::value)); // bang\n+SA((has_construct<A2<int>, int>::value)); // bang"}]}