{"sha": "d0adc050ee3db38bace0b3c261e33d13fb82785e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBhZGMwNTBlZTNkYjM4YmFjZTBiM2MyNjFlMzNkMTNmYjgyNzg1ZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-01-03T12:09:52Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-01-03T12:09:52Z"}, "message": "(movdi): Tests were in wrong order.\n\nFrom-SVN: r3063", "tree": {"sha": "9254ced91df2905113fb30d3cd452f3d390701e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9254ced91df2905113fb30d3cd452f3d390701e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0adc050ee3db38bace0b3c261e33d13fb82785e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0adc050ee3db38bace0b3c261e33d13fb82785e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0adc050ee3db38bace0b3c261e33d13fb82785e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0adc050ee3db38bace0b3c261e33d13fb82785e/comments", "author": null, "committer": null, "parents": [{"sha": "0bb5b6bce095328bf4c6fe976e05252759b21d89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bb5b6bce095328bf4c6fe976e05252759b21d89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bb5b6bce095328bf4c6fe976e05252759b21d89"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "5ad5084931c370044c5097decd26b22c071ac0e6", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0adc050ee3db38bace0b3c261e33d13fb82785e/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0adc050ee3db38bace0b3c261e33d13fb82785e/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=d0adc050ee3db38bace0b3c261e33d13fb82785e", "patch": "@@ -4579,7 +4579,18 @@\n   \"\"\n   \"cror 0,0,0\")\n \f\n-;; Define the subtract-one-and-jump insns. \n+;; Define the subtract-one-and-jump insns, starting with the template \n+;; so loop.c knows what to generate.\n+\n+(define_expand \"decrement_and_branchsi\"\n+  [(set (pc) (if_then_else (ne (match_operand:SI 0 \"register_operand\" \"c\")\n+\t\t\t       (const_int 1))\n+\t\t\t   (label_ref (match_operand 1 \"\" \"\"))\n+\t\t\t   (pc)))\n+   (set (match_dup 0) (plus:SI (match_dup 0) (const_int -1)))]\n+  \"\"\n+  \"\")\n+\n ;; We need to be able to do this for any operand, including MEM, or we\n ;; will cause reload to blow up since we don't allow output reloads on\n ;; JUMP_INSNs. \n@@ -4599,7 +4610,7 @@\n    #\n    #\")\n \t\t\t       \n-;; Similar, but we can use GE since we have a REG_NOTES.\n+;; Similar, but we can use GE since we have a REG_NONNEG.\n (define_insn \"\"\n   [(set (pc)\n \t(if_then_else (ge (match_operand:SI 1 \"register_operand\" \"0,*r,*r\")"}]}