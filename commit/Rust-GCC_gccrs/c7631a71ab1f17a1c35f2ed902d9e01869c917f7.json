{"sha": "c7631a71ab1f17a1c35f2ed902d9e01869c917f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc2MzFhNzFhYjFmMTdhMWMzNWYyZWQ5MDJkOWUwMTg2OWM5MTdmNw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-03-08T17:49:22Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-03-08T17:49:22Z"}, "message": "Fold convert SSA_NAMEs in the scalar expander.\n\n2010-03-04  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* sese.c (expand_scalar_variables_ssa_name): Add new argument for type.\n\tCall fold_convert on all the returned values.\n\t(expand_scalar_variables_expr): Pass to expand_scalar_variables_ssa_name\n\tthe type of the resulting expression.\n\nFrom-SVN: r157284", "tree": {"sha": "f8402ff094984c4a422f270022a2cfa5a85309cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8402ff094984c4a422f270022a2cfa5a85309cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7631a71ab1f17a1c35f2ed902d9e01869c917f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7631a71ab1f17a1c35f2ed902d9e01869c917f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7631a71ab1f17a1c35f2ed902d9e01869c917f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7631a71ab1f17a1c35f2ed902d9e01869c917f7/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0602cc851a012adb398a3dd2724ac4c5c17e789", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0602cc851a012adb398a3dd2724ac4c5c17e789", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0602cc851a012adb398a3dd2724ac4c5c17e789"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "25e0c517f446f3df022e3b2eb81bf3ec91a66a79", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7631a71ab1f17a1c35f2ed902d9e01869c917f7/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7631a71ab1f17a1c35f2ed902d9e01869c917f7/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=c7631a71ab1f17a1c35f2ed902d9e01869c917f7", "patch": "@@ -1,3 +1,10 @@\n+2010-03-04  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* sese.c (expand_scalar_variables_ssa_name): Add new argument for type.\n+\tCall fold_convert on all the returned values.\n+\t(expand_scalar_variables_expr): Pass to expand_scalar_variables_ssa_name\n+\tthe type of the resulting expression.\n+\n 2010-03-04  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-ppl.c (ppl_min_for_le_polyhedron): Renamed"}, {"sha": "975eb362ae14c5dcf9c41894b385b7ff9f30a69a", "filename": "gcc/sese.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7631a71ab1f17a1c35f2ed902d9e01869c917f7/gcc%2Fsese.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7631a71ab1f17a1c35f2ed902d9e01869c917f7/gcc%2Fsese.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsese.c?ref=c7631a71ab1f17a1c35f2ed902d9e01869c917f7", "patch": "@@ -778,7 +778,7 @@ expand_scalar_variables_call (gimple stmt, basic_block bb, sese region,\n    to translate the names of induction variables.  */\n \n static tree\n-expand_scalar_variables_ssa_name (tree op0, basic_block bb,\n+expand_scalar_variables_ssa_name (tree type, tree op0, basic_block bb,\n \t\t\t\t  sese region, htab_t map,\n \t\t\t\t  gimple_stmt_iterator *gsi)\n {\n@@ -787,7 +787,7 @@ expand_scalar_variables_ssa_name (tree op0, basic_block bb,\n \n   if (is_parameter (region, op0)\n       || is_iv (op0))\n-    return get_rename (map, op0);\n+    return fold_convert (type, get_rename (map, op0));\n \n   def_stmt = SSA_NAME_DEF_STMT (op0);\n \n@@ -796,21 +796,21 @@ expand_scalar_variables_ssa_name (tree op0, basic_block bb,\n \n   if (new_op != op0\n       && gimple_bb (SSA_NAME_DEF_STMT (new_op)) == bb)\n-    return new_op;\n+    return fold_convert (type, new_op);\n \n   if (gimple_bb (def_stmt) == bb)\n     {\n       /* If the defining statement is in the basic block already\n \t we do not need to create a new expression for it, we\n \t only need to ensure its operands are expanded.  */\n       expand_scalar_variables_stmt (def_stmt, bb, region, map, gsi);\n-      return new_op;\n+      return fold_convert (type, new_op);\n     }\n   else\n     {\n       if (!gimple_bb (def_stmt)\n \t  || !bb_in_sese_p (gimple_bb (def_stmt), region))\n-\treturn new_op;\n+\treturn fold_convert (type, new_op);\n \n       switch (gimple_code (def_stmt))\n \t{\n@@ -871,7 +871,7 @@ expand_scalar_variables_expr (tree type, tree op0, enum tree_code code,\n \t  {\n \t    tree old_name = TREE_OPERAND (op0, 0);\n \t    tree expr = expand_scalar_variables_ssa_name\n-\t      (old_name, bb, region, map, gsi);\n+\t      (type, old_name, bb, region, map, gsi);\n \n \t    if (TREE_CODE (expr) != SSA_NAME\n \t\t&& is_gimple_reg (old_name))\n@@ -938,7 +938,7 @@ expand_scalar_variables_expr (tree type, tree op0, enum tree_code code,\n     }\n \n   if (code == SSA_NAME)\n-    return expand_scalar_variables_ssa_name (op0, bb, region, map, gsi);\n+    return expand_scalar_variables_ssa_name (type, op0, bb, region, map, gsi);\n \n   if (code == ADDR_EXPR)\n     {"}]}