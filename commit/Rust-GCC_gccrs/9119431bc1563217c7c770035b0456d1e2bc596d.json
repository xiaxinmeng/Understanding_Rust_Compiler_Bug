{"sha": "9119431bc1563217c7c770035b0456d1e2bc596d", "node_id": "C_kwDOANBUbNoAKDkxMTk0MzFiYzE1NjMyMTdjN2M3NzAwMzViMDQ1NmQxZTJiYzU5NmQ", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-03-31T10:06:29Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-10-27T08:41:41Z"}, "message": "options: Clarify 'Init' option property usage for streaming optimization\n\nThis clarifies commit 95db7e9afe57ca1c269d46baa2accced004e5c74\n\"options, lto: Optimize streaming of optimization nodes\".\n\nNo functional change; no change in generated files.\n\n\tgcc/\n\t* optc-save-gen.awk: Clarify 'Init' option property usage for\n\tstreaming optimization.", "tree": {"sha": "4e9624bc0a5a2a3d46c6dbc48e8bf41f3387a463", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e9624bc0a5a2a3d46c6dbc48e8bf41f3387a463"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9119431bc1563217c7c770035b0456d1e2bc596d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9119431bc1563217c7c770035b0456d1e2bc596d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9119431bc1563217c7c770035b0456d1e2bc596d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9119431bc1563217c7c770035b0456d1e2bc596d/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be6c75547385c69706370f4e792b04295f708a5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be6c75547385c69706370f4e792b04295f708a5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be6c75547385c69706370f4e792b04295f708a5a"}], "stats": {"total": 31, "additions": 24, "deletions": 7}, "files": [{"sha": "2b8557f41ada1fb603e910c505ca8bfa84da2118", "filename": "gcc/optc-save-gen.awk", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9119431bc1563217c7c770035b0456d1e2bc596d/gcc%2Foptc-save-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9119431bc1563217c7c770035b0456d1e2bc596d/gcc%2Foptc-save-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptc-save-gen.awk?ref=9119431bc1563217c7c770035b0456d1e2bc596d", "patch": "@@ -1291,7 +1291,22 @@ for (i = 0; i < n_opts; i++) {\n \t\tvar_opt_val_type[n_opt_val] = otype;\n \t\tvar_opt_val[n_opt_val] = \"x_\" name;\n \t\tvar_opt_hash[n_opt_val] = flag_set_p(\"Optimization\", flags[i]);\n-\t\tvar_opt_init[n_opt_val] = opt_args(\"Init\", flags[i]);\n+\n+\t\t# If applicable, optimize streaming for the common case that\n+\t\t# the current value is unchanged from the 'Init' value:\n+\t\t# XOR-encode it so that we stream value zero.\n+\t\t# Not handling non-parameters as those really generally don't\n+\t\t# have large initializers.\n+\t\t# Not handling enums as we don't know if '(enum ...) 10' is\n+\t\t# even valid (see synthesized 'if' conditionals below).\n+\t\tif (flag_set_p(\"Param\", flags[i]) \\\n+\t\t    && !(otype ~ \"^enum \")) {\n+\t\t\t# Those without 'Init' are zero-initialized and thus\n+\t\t\t# already encoded ideally.\n+\t\t\tinit = opt_args(\"Init\", flags[i])\n+\t\t\tvar_opt_optimize_init[n_opt_val] = init;\n+\t\t}\n+\n \t\tn_opt_val++;\n \t}\n }\n@@ -1369,9 +1384,10 @@ for (i = 0; i < n_opt_val; i++) {\n \t\t} else {\n \t\t\tsgn = \"int\";\n \t\t}\n-\t\tif (name ~ \"^x_param\" && !(otype ~ \"^enum \") && var_opt_init[i]) {\n-\t\t\tprint \"  if (\" var_opt_init[i] \" > (\" var_opt_val_type[i] \") 10)\";\n-\t\t\tprint \"    bp_pack_var_len_\" sgn \" (bp, ptr->\" name\" ^ \" var_opt_init[i] \");\";\n+\t\t# If applicable, encode the streamed value.\n+\t\tif (var_opt_optimize_init[i]) {\n+\t\t\tprint \"  if (\" var_opt_optimize_init[i] \" > (\" var_opt_val_type[i] \") 10)\";\n+\t\t\tprint \"    bp_pack_var_len_\" sgn \" (bp, ptr->\" name\" ^ \" var_opt_optimize_init[i] \");\";\n \t\t\tprint \"  else\";\n \t\t\tprint \"    bp_pack_var_len_\" sgn \" (bp, ptr->\" name\");\";\n \t\t} else {\n@@ -1405,9 +1421,10 @@ for (i = 0; i < n_opt_val; i++) {\n \t\t\tsgn = \"int\";\n \t\t}\n \t\tprint \"  ptr->\" name\" = (\" var_opt_val_type[i] \") bp_unpack_var_len_\" sgn \" (bp);\";\n-\t\tif (name ~ \"^x_param\" && !(otype ~ \"^enum \") && var_opt_init[i]) {\n-\t\t\tprint \"  if (\" var_opt_init[i] \" > (\" var_opt_val_type[i] \") 10)\";\n-\t\t\tprint \"    ptr->\" name\" ^= \" var_opt_init[i] \";\";\n+\t\t# If applicable, decode the streamed value.\n+\t\tif (var_opt_optimize_init[i]) {\n+\t\t\tprint \"  if (\" var_opt_optimize_init[i] \" > (\" var_opt_val_type[i] \") 10)\";\n+\t\t\tprint \"    ptr->\" name\" ^= \" var_opt_optimize_init[i] \";\";\n \t\t}\n \t}\n }"}]}