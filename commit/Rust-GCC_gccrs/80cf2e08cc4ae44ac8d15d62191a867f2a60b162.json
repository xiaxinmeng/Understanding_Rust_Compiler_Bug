{"sha": "80cf2e08cc4ae44ac8d15d62191a867f2a60b162", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBjZjJlMDhjYzRhZTQ0YWM4ZDE1ZDYyMTkxYTg2N2YyYTYwYjE2Mg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-05-10T14:41:47Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-05-10T14:41:47Z"}, "message": "config.gcc (libgcc_tm_file): Define instead of including files from ../../libgcc/config/ in tm_file.\n\ngcc:\n\t* config.gcc (libgcc_tm_file): Define instead of including files\n\tfrom ../../libgcc/config/ in tm_file.\n\t* configure.ac (libgcc_tm_file_list, libgcc_tm_include_list):\n\tDefine.\n\t* configure: Regenerate.\n\t* Makefile.in (libgcc_tm_file_list, libgcc_tm_include_list,\n\tlibgcc_tm.h, cs-libgcc_tm.h): New.\n\t(TM_H): Include libgcc_tm.h and $(libgcc_tm_file_list).\n\t(clean): Remove libgcc_tm.h.\n\t* config/arm/symbian.h (RENAME_LIBRARY): Remove.\n\t* mkconfig.sh: Include libgcc_tm.h in tm.h if USED_FOR_TARGET.\n\t* system.h (DECLARE_LIBRARY_RENAMES): Poison.\n\nlibgcc:\n\t* config/arm/symbian-lib.h: New.\n\nFrom-SVN: r173619", "tree": {"sha": "f5124d3153896b6d1a523caa3279182000e1d0c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5124d3153896b6d1a523caa3279182000e1d0c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80cf2e08cc4ae44ac8d15d62191a867f2a60b162", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80cf2e08cc4ae44ac8d15d62191a867f2a60b162", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80cf2e08cc4ae44ac8d15d62191a867f2a60b162", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80cf2e08cc4ae44ac8d15d62191a867f2a60b162/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd01a351dff3f953994a7a14015b9aaa3f77582d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd01a351dff3f953994a7a14015b9aaa3f77582d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd01a351dff3f953994a7a14015b9aaa3f77582d"}], "stats": {"total": 129, "additions": 109, "deletions": 20}, "files": [{"sha": "d1da16a63dc76e6a445727b806c78d7cde435808", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2e08cc4ae44ac8d15d62191a867f2a60b162/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2e08cc4ae44ac8d15d62191a867f2a60b162/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80cf2e08cc4ae44ac8d15d62191a867f2a60b162", "patch": "@@ -1,3 +1,18 @@\n+2011-05-10  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config.gcc (libgcc_tm_file): Define instead of including files\n+\tfrom ../../libgcc/config/ in tm_file.\n+\t* configure.ac (libgcc_tm_file_list, libgcc_tm_include_list):\n+\tDefine.\n+\t* configure: Regenerate.\n+\t* Makefile.in (libgcc_tm_file_list, libgcc_tm_include_list,\n+\tlibgcc_tm.h, cs-libgcc_tm.h): New.\n+\t(TM_H): Include libgcc_tm.h and $(libgcc_tm_file_list).\n+\t(clean): Remove libgcc_tm.h.\n+\t* config/arm/symbian.h (RENAME_LIBRARY): Remove.\n+\t* mkconfig.sh: Include libgcc_tm.h in tm.h if USED_FOR_TARGET.\n+\t* system.h (DECLARE_LIBRARY_RENAMES): Poison.\n+\n 2011-05-10  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/48896"}, {"sha": "3be33a2b54a488248269cff8bc47de440224b1c2", "filename": "gcc/Makefile.in", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2e08cc4ae44ac8d15d62191a867f2a60b162/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2e08cc4ae44ac8d15d62191a867f2a60b162/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=80cf2e08cc4ae44ac8d15d62191a867f2a60b162", "patch": "@@ -484,6 +484,8 @@ md_file=$(srcdir)/config/@md_file@\n tm_file_list=@tm_file_list@\n tm_include_list=@tm_include_list@\n tm_defines=@tm_defines@\n+libgcc_tm_file_list=@libgcc_tm_file_list@\n+libgcc_tm_include_list=@libgcc_tm_include_list@\n tm_p_file_list=@tm_p_file_list@\n tm_p_include_list=@tm_p_include_list@\n build_xm_file_list=@build_xm_file_list@\n@@ -840,7 +842,8 @@ CONFIG_H  = config.h  $(host_xm_file_list)\n TCONFIG_H = tconfig.h $(xm_file_list)\n TM_P_H    = tm_p.h    $(tm_p_file_list)\n GTM_H     = tm.h      $(tm_file_list) insn-constants.h\n-TM_H      = $(GTM_H) insn-flags.h $(OPTIONS_H)\n+TM_H      = $(GTM_H) libgcc_tm.h $(libgcc_tm_file_list) insn-flags.h \\\n+\t$(OPTIONS_H)\n \n # Variables for version information.\n BASEVER     := $(srcdir)/BASE-VER  # 4.x.y\n@@ -1687,6 +1690,7 @@ config.h: cs-config.h ; @true\n bconfig.h: cs-bconfig.h ; @true\n tconfig.h: cs-tconfig.h ; @true\n tm.h: cs-tm.h ; @true\n+libgcc_tm.h: cs-libgcc_tm.h ; @true\n tm_p.h: cs-tm_p.h ; @true\n \n cs-config.h: Makefile\n@@ -1709,6 +1713,11 @@ cs-tm.h: Makefile\n \tHEADERS=\"$(tm_include_list)\" DEFINES=\"$(tm_defines)\" \\\n \t$(SHELL) $(srcdir)/mkconfig.sh tm.h\n \n+cs-libgcc_tm.h: Makefile\n+\tTARGET_CPU_DEFAULT=\"\" \\\n+\tHEADERS=\"$(libgcc_tm_include_list)\" DEFINES=\"\" \\\n+\t$(SHELL) $(srcdir)/mkconfig.sh libgcc_tm.h\n+\n cs-tm_p.h: Makefile\n \tTARGET_CPU_DEFAULT=\"\" \\\n \tHEADERS=\"$(tm_p_include_list)\" DEFINES=\"\" \\\n@@ -4464,7 +4473,7 @@ clean: mostlyclean lang.clean\n \t-rm -f libgcc.a libgcc_eh.a libgcov.a\n \t-rm -f libgcc_s*\n \t-rm -f libunwind*\n-\t-rm -f config.h tconfig.h bconfig.h tm_p.h tm.h\n+\t-rm -f config.h tconfig.h bconfig.h tm_p.h tm.h libgcc_tm.h\n \t-rm -f options.c options.h optionlist\n \t-rm -f cs-*\n \t-rm -f doc/*.dvi"}, {"sha": "f87f1251561159cd6ced5999d88a8763b7dbc2f0", "filename": "gcc/config.gcc", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2e08cc4ae44ac8d15d62191a867f2a60b162/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2e08cc4ae44ac8d15d62191a867f2a60b162/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=80cf2e08cc4ae44ac8d15d62191a867f2a60b162", "patch": "@@ -84,6 +84,12 @@\n #\t\t\tbuild-directory files by prefixing them with \"./\".\n #\t\t\tAll other files should relative to $srcdir/config.\n #\n+#  libgcc_tm_file\tA list of target macro files used only for code\n+#\t\t\tbuilt for the target, not the host.  These files\n+#\t\t\tare relative to $srcdir/../libgcc/config and\n+#\t\t\tmust not have the same names as files in\n+#\t\t\t$srcdir/config.\n+#\n #  tm_p_file\t\tLocation of file with declarations for functions\n #\t\t\tin $out_file.\n #\n@@ -206,6 +212,7 @@ fortran_target_objs=\n target_has_targetcm=no\n tm_defines=\n xm_defines=\n+libgcc_tm_file=\n # Set this to force installation and use of collect2.\n use_collect2=\n # Set this to override the default target model.\n@@ -794,7 +801,7 @@ arm*-*-linux*)\t\t\t# ARM GNU/Linux with ELF\n \tcase ${target} in\n \tarm*-*-linux-*eabi)\n \t    tm_file=\"$tm_file arm/bpabi.h arm/linux-eabi.h\"\n-\t    tm_file=\"$tm_file ../../libgcc/config/arm/bpabi-lib.h\"\n+\t    libgcc_tm_file=\"$libgcc_tm_file arm/bpabi-lib.h\"\n \t    tmake_file=\"$tmake_file arm/t-arm-elf arm/t-bpabi arm/t-linux-eabi t-slibgcc-libgcc\"\n \t    # Define multilib configuration for arm-linux-androideabi.\n \t    case ${target} in\n@@ -822,7 +829,7 @@ arm*-*-uclinux*)\t\t# ARM ucLinux\n \tcase ${target} in\n \tarm*-*-uclinux*eabi)\n \t    tm_file=\"$tm_file arm/bpabi.h arm/uclinux-eabi.h\"\n-\t    tm_file=\"$tm_file ../../libgcc/config/arm/bpabi-lib.h\"\n+\t    libgcc_tm_file=\"$libgcc_tm_file arm/bpabi-lib.h\"\n \t    tmake_file=\"$tmake_file arm/t-bpabi\"\n   \t    # The BPABI long long divmod functions return a 128-bit value in\n \t    # registers r0-r3.  Correctly modeling that requires the use of\n@@ -846,7 +853,7 @@ arm*-*-eabi* | arm*-*-symbianelf* )\n \tneed_64bit_hwint=yes\n \tdefault_use_cxa_atexit=yes\n \ttm_file=\"dbxelf.h elfos.h arm/unknown-elf.h arm/elf.h arm/bpabi.h\"\n-\ttm_file=\"$tm_file ../../libgcc/config/arm/bpabi-lib.h\"\n+\tlibgcc_tm_file=\"$libgcc_tm_file arm/bpabi-lib.h\"\n \ttmake_file=\"arm/t-arm arm/t-arm-elf\"\n \tcase ${target} in\n \tarm*-*-eabi*)\n@@ -856,6 +863,7 @@ arm*-*-eabi* | arm*-*-symbianelf* )\n \t  ;;\n \tarm*-*-symbianelf*)\n \t  tm_file=\"${tm_file} arm/symbian.h\"\n+\t  libgcc_tm_file=\"$libgcc_tm_file arm/symbian-lib.h\"\n \t  # We do not include t-bpabi for Symbian OS because the system\n \t  # provides its own implementation of the BPABI functions.\n \t  tmake_file=\"${tmake_file} arm/t-symbian\"\n@@ -954,13 +962,13 @@ fr30-*-elf)\n \t;;\n frv-*-elf)\n \ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file}\"\n-\ttm_file=\"${tm_file} ../../libgcc/config/frv/frv-abi.h\"\n+\tlibgcc_tm_file=\"${libgcc_tm_file} frv/frv-abi.h\"\n \ttmake_file=frv/t-frv\n \t;;\n frv-*-*linux*)\n \ttm_file=\"dbxelf.h elfos.h ${tm_file} \\\n \t         gnu-user.h linux.h glibc-stdint.h frv/linux.h\"\n-\ttm_file=\"${tm_file} ../../libgcc/config/frv/frv-abi.h\"\n+\tlibgcc_tm_file=\"${libgcc_tm_file} frv/frv-abi.h\"\n \ttmake_file=\"${tmake_file} frv/t-frv frv/t-linux\"\n \t;;\n moxie-*-elf)\n@@ -2197,7 +2205,8 @@ rs6000-ibm-aix[6789].* | powerpc-ibm-aix[6789].*)\n \textra_headers=altivec.h\n \t;;\n rx-*-elf*)\n-\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file} ../../libgcc/config/rx/rx-abi.h\"\n+\ttm_file=\"dbxelf.h elfos.h newlib-stdint.h ${tm_file}\"\n+\tlibgcc_tm_file=\"${libgcc_tm_file} rx/rx-abi.h\"\n \ttmake_file=\"${tmake_file} rx/t-rx\"\n \t;;\n s390-*-linux*)"}, {"sha": "b24c6ec75931aa3ee8cbf6f2070e8b44c8bdc551", "filename": "gcc/config/arm/symbian.h", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2e08cc4ae44ac8d15d62191a867f2a60b162/gcc%2Fconfig%2Farm%2Fsymbian.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2e08cc4ae44ac8d15d62191a867f2a60b162/gcc%2Fconfig%2Farm%2Fsymbian.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fsymbian.h?ref=80cf2e08cc4ae44ac8d15d62191a867f2a60b162", "patch": "@@ -1,5 +1,5 @@\n /* Configuration file for Symbian OS on ARM processors.\n-   Copyright (C) 2004, 2005, 2007, 2008\n+   Copyright (C) 2004, 2005, 2007, 2008, 2011\n    Free Software Foundation, Inc.\n    Contributed by CodeSourcery, LLC   \n \n@@ -71,11 +71,6 @@\n #define SUBTARGET_ASM_FLOAT_SPEC \\\n   \"%{!mfpu=*:-mfpu=vfp} %{!mcpu=*:%{!march=*:-march=armv5t}}\"\n   \n-/* SymbianOS provides the BPABI routines in a separate library.\n-   Therefore, we do not need to define any of them in libgcc.  */\n-#undef RENAME_LIBRARY\n-#define RENAME_LIBRARY(GCC_NAME, AEABI_NAME) /* empty */\n-\n /* Define the __symbian__ macro.  */\n #undef TARGET_OS_CPP_BUILTINS\n #define TARGET_OS_CPP_BUILTINS()\t\t\t\t\\"}, {"sha": "fe21f86fe329d098758bd386cf157e2c17287a98", "filename": "gcc/configure", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2e08cc4ae44ac8d15d62191a867f2a60b162/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2e08cc4ae44ac8d15d62191a867f2a60b162/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=80cf2e08cc4ae44ac8d15d62191a867f2a60b162", "patch": "@@ -618,6 +618,8 @@ xm_include_list\n xm_file_list\n tm_p_include_list\n tm_p_file_list\n+libgcc_tm_include_list\n+libgcc_tm_file_list\n tm_defines\n tm_include_list\n tm_file_list\n@@ -11233,6 +11235,13 @@ for f in $tm_file; do\n   esac\n done\n \n+libgcc_tm_file_list=\n+libgcc_tm_include_list=\n+for f in $libgcc_tm_file; do\n+  libgcc_tm_file_list=\"${libgcc_tm_file_list} \\$(srcdir)/../libgcc/config/$f\"\n+  libgcc_tm_include_list=\"${libgcc_tm_include_list} ../libgcc/config/$f\"\n+done\n+\n tm_p_file_list=\n tm_p_include_list=\n for f in $tm_p_file; do\n@@ -17505,7 +17514,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17508 \"configure\"\n+#line 17517 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -17611,7 +17620,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17614 \"configure\"\n+#line 17623 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -26220,6 +26229,8 @@ fi\n \n \n \n+\n+\n \n \n "}, {"sha": "3f51efd36173f89a3cf6cead2a1855406b96f114", "filename": "gcc/configure.ac", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2e08cc4ae44ac8d15d62191a867f2a60b162/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2e08cc4ae44ac8d15d62191a867f2a60b162/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=80cf2e08cc4ae44ac8d15d62191a867f2a60b162", "patch": "@@ -1638,6 +1638,13 @@ for f in $tm_file; do\n   esac\n done\n \n+libgcc_tm_file_list=\n+libgcc_tm_include_list=\n+for f in $libgcc_tm_file; do\n+  libgcc_tm_file_list=\"${libgcc_tm_file_list} \\$(srcdir)/../libgcc/config/$f\"\n+  libgcc_tm_include_list=\"${libgcc_tm_include_list} ../libgcc/config/$f\"\n+done\n+\n tm_p_file_list=\n tm_p_include_list=\n for f in $tm_p_file; do\n@@ -4773,6 +4780,8 @@ AC_SUBST(thread_file)\n AC_SUBST(tm_file_list)\n AC_SUBST(tm_include_list)\n AC_SUBST(tm_defines)\n+AC_SUBST(libgcc_tm_file_list)\n+AC_SUBST(libgcc_tm_include_list)\n AC_SUBST(tm_p_file_list)\n AC_SUBST(tm_p_include_list)\n AC_SUBST(xm_file_list)"}, {"sha": "d96af1d2f2bc5b5c71a12020525b222e03cc148a", "filename": "gcc/mkconfig.sh", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2e08cc4ae44ac8d15d62191a867f2a60b162/gcc%2Fmkconfig.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2e08cc4ae44ac8d15d62191a867f2a60b162/gcc%2Fmkconfig.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmkconfig.sh?ref=80cf2e08cc4ae44ac8d15d62191a867f2a60b162", "patch": "@@ -1,6 +1,7 @@\n #! /bin/sh\n \n-# Copyright (C) 2001, 2002, 2006, 2007, 2010 Free Software Foundation, Inc.\n+# Copyright (C) 2001, 2002, 2006, 2007, 2010, 2011\n+# Free Software Foundation, Inc.\n # This file is part of GCC.\n \n # GCC is free software; you can redistribute it and/or modify\n@@ -19,7 +20,7 @@\n \n \n # Generate gcc's various configuration headers:\n-# config.h, tconfig.h, bconfig.h, tm.h, and tm_p.h.\n+# config.h, tconfig.h, bconfig.h, tm.h, libgcc_tm.h, and tm_p.h.\n # $1 is the file to generate.  DEFINES, HEADERS, and possibly\n # TARGET_CPU_DEFAULT are expected to be set in the environment.\n \n@@ -88,15 +89,19 @@ if [ -n \"$HEADERS\" ]; then\n fi\n \n # If this is tm.h, now include insn-flags.h only if IN_GCC is defined\n-# but neither GENERATOR_FILE nor USED_FOR_TARGET is defined.  (Much of\n-# this is temporary.)\n+# but neither GENERATOR_FILE nor USED_FOR_TARGET is defined.  Also\n+# include libgcc_tm.h if USED_FOR_TARGET is defined.  (Much of this is\n+# temporary.)\n \n case $output in\n     tm.h )\n         cat >> ${output}T <<EOF\n #if defined IN_GCC && !defined GENERATOR_FILE && !defined USED_FOR_TARGET\n # include \"insn-flags.h\"\n #endif\n+#ifdef USED_FOR_TARGET\n+# include \"libgcc_tm.h\"\n+#endif\n EOF\n     ;;\n esac"}, {"sha": "a57df7ce753e24a02656cc7f5dc5d58e11426343", "filename": "gcc/system.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2e08cc4ae44ac8d15d62191a867f2a60b162/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2e08cc4ae44ac8d15d62191a867f2a60b162/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=80cf2e08cc4ae44ac8d15d62191a867f2a60b162", "patch": "@@ -761,6 +761,10 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \tCAN_DEBUG_WITHOUT_FP UNLIKELY_EXECUTED_TEXT_SECTION_NAME\t\\\n \tHOT_TEXT_SECTION_NAME LEGITIMATE_CONSTANT_P\n \n+/* Target macros only used for code built for the target, that have\n+   moved to libgcc-tm.h.  */\n+ #pragma GCC poison DECLARE_LIBRARY_RENAMES\n+\n /* Other obsolete target macros, or macros that used to be in target\n    headers and were not used, and may be obsolete or may never have\n    been used.  */"}, {"sha": "44663bf025fefcee8ecdc2d4d8f08fffdf6028e7", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2e08cc4ae44ac8d15d62191a867f2a60b162/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2e08cc4ae44ac8d15d62191a867f2a60b162/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=80cf2e08cc4ae44ac8d15d62191a867f2a60b162", "patch": "@@ -1,3 +1,7 @@\n+2011-05-10  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/arm/symbian-lib.h: New.\n+\n 2011-05-04  Chris Demetriou  <cgd@google.com>\n \n \t* config/i386/morestack.S (__i686.get_pc_thunk.bx): Rename to..."}, {"sha": "79d259af683a6586c84237e9d005e97d19c3ff27", "filename": "libgcc/config/arm/symbian-lib.h", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80cf2e08cc4ae44ac8d15d62191a867f2a60b162/libgcc%2Fconfig%2Farm%2Fsymbian-lib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80cf2e08cc4ae44ac8d15d62191a867f2a60b162/libgcc%2Fconfig%2Farm%2Fsymbian-lib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Fsymbian-lib.h?ref=80cf2e08cc4ae44ac8d15d62191a867f2a60b162", "patch": "@@ -0,0 +1,28 @@\n+/* Configuration file for Symbian OS on ARM processors, library renames.\n+   Copyright (C) 2004, 2011 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+Under Section 7 of GPL version 3, you are granted additional\n+permissions described in the GCC Runtime Library Exception, version\n+3.1, as published by the Free Software Foundation.\n+\n+You should have received a copy of the GNU General Public License and\n+a copy of the GCC Runtime Library Exception along with this program;\n+see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+<http://www.gnu.org/licenses/>.  */\n+\n+/* SymbianOS provides the BPABI routines in a separate library.\n+   Therefore, we do not need to define any of them in libgcc.  */\n+#undef RENAME_LIBRARY\n+#define RENAME_LIBRARY(GCC_NAME, AEABI_NAME) /* empty */"}]}