{"sha": "e5139d18dfb8130876ea59178e8471fb1b34bb80", "node_id": "C_kwDOANBUbNoAKGU1MTM5ZDE4ZGZiODEzMDg3NmVhNTkxNzhlODQ3MWZiMWIzNGJiODA", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-10-13T12:56:01Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-10-13T14:28:12Z"}, "message": "tree-optimization/107247 - reduce SLP reduction accumulator\n\nThe following makes sure to reduce a multi-vector SLP reduction\naccumulator to a single vector using vector operations if\neasily possible (if the number of lanes in the vector type is\na multiple of the number of scalar accumulators).\n\n\tPR tree-optimization/107247\n\t* tree-vect-loop.cc (vect_create_epilog_for_reduction):\n\tReduce multi vector SLP reduction accumulators.  Check\n\tthe adjusted number of accumulator vectors against\n\tone for the re-use in the epilogue.", "tree": {"sha": "6e762f847c382d2bbf720c37245c89e85d59fdf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e762f847c382d2bbf720c37245c89e85d59fdf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5139d18dfb8130876ea59178e8471fb1b34bb80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5139d18dfb8130876ea59178e8471fb1b34bb80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5139d18dfb8130876ea59178e8471fb1b34bb80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5139d18dfb8130876ea59178e8471fb1b34bb80/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b7966191a69238c6d6fd5537b3e77c3a4027eb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b7966191a69238c6d6fd5537b3e77c3a4027eb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b7966191a69238c6d6fd5537b3e77c3a4027eb2"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "98a943d8a4ba06a8963dec465e6a092fa39e713f", "filename": "gcc/tree-vect-loop.cc", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5139d18dfb8130876ea59178e8471fb1b34bb80/gcc%2Ftree-vect-loop.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5139d18dfb8130876ea59178e8471fb1b34bb80/gcc%2Ftree-vect-loop.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.cc?ref=e5139d18dfb8130876ea59178e8471fb1b34bb80", "patch": "@@ -5642,9 +5642,21 @@ vect_create_epilog_for_reduction (loop_vec_info loop_vinfo,\n      we may end up with more than one vector result.  Here we reduce them\n      to one vector.\n \n+     The same is true for a SLP reduction, e.g.,\n+     # a1 = phi <a2, a0>\n+     # b1 = phi <b2, b0>\n+     a2 = operation (a1)\n+     b2 = operation (a2),\n+\n+     where we can end up with more than one vector as well.  We can\n+     easily accumulate vectors when the number of vector elements is\n+     a multiple of the SLP group size.\n+\n      The same is true if we couldn't use a single defuse cycle.  */\n   if (REDUC_GROUP_FIRST_ELEMENT (stmt_info)\n       || direct_slp_reduc\n+      || (slp_reduc\n+\t  && constant_multiple_p (TYPE_VECTOR_SUBPARTS (vectype), group_size))\n       || ncopies > 1)\n     {\n       gimple_seq stmts = NULL;\n@@ -6233,7 +6245,7 @@ vect_create_epilog_for_reduction (loop_vec_info loop_vinfo,\n \n   /* Record this operation if it could be reused by the epilogue loop.  */\n   if (STMT_VINFO_REDUC_TYPE (reduc_info) == TREE_CODE_REDUCTION\n-      && vec_num == 1)\n+      && reduc_inputs.length () == 1)\n     loop_vinfo->reusable_accumulators.put (scalar_results[0],\n \t\t\t\t\t   { orig_reduc_input, reduc_info });\n "}]}