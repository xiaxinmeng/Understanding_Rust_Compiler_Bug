{"sha": "65985d787504047cb0a82947f7287138b0c54bc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU5ODVkNzg3NTA0MDQ3Y2IwYTgyOTQ3ZjcyODcxMzhiMGM1NGJjNQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2019-06-06T02:53:01Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2019-06-06T02:53:01Z"}, "message": "PR c/90737 - [8/9/10 Regression] inconsistent address of a local converted to intptr_t between callee and caller\n\ngcc/c/ChangeLog:\n\n\tPR c/90737\n\t* c-typeck.c (c_finish_return): Only consider functions returning\n\tpointers as candidates for -Wreturn-local-addr.\n\ngcc/cp/ChangeLog:\n\n\tPR c/90737\n\t* typeck.c (maybe_warn_about_returning_address_of_local): Only\n\tconsider functions returning pointers as candidates for\n\t-Wreturn-local-addr.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c/90737\n\t* c-c++-common/Wreturn-local-addr.c: New test.\n\t* g++.dg/warn/Wreturn-local-addr-6.C: New test.\n\nFrom-SVN: r271985", "tree": {"sha": "64d80c6241d50dde32f1122d2cf47c9f5236dad0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64d80c6241d50dde32f1122d2cf47c9f5236dad0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65985d787504047cb0a82947f7287138b0c54bc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65985d787504047cb0a82947f7287138b0c54bc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65985d787504047cb0a82947f7287138b0c54bc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65985d787504047cb0a82947f7287138b0c54bc5/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3146ec83db7e65982776a979b8c75883202a4e90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3146ec83db7e65982776a979b8c75883202a4e90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3146ec83db7e65982776a979b8c75883202a4e90"}], "stats": {"total": 103, "additions": 100, "deletions": 3}, "files": [{"sha": "5a0dabbd034c6a259cd9a3666c67c26e0552565a", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65985d787504047cb0a82947f7287138b0c54bc5/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65985d787504047cb0a82947f7287138b0c54bc5/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=65985d787504047cb0a82947f7287138b0c54bc5", "patch": "@@ -1,3 +1,9 @@\n+2019-06-05  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/90737\n+\t* c-typeck.c (c_finish_return): Only consider functions returning\n+\tpointers as candidates for -Wreturn-local-addr.\n+\n 2019-06-05  Martin Sebor  <msebor@redhat.com>\n \n \t* c-decl.c (start_decl): Adjust quoting and hyphenation"}, {"sha": "0dd86f074b91108b5563ce4e55f7396a7d2a9cd3", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65985d787504047cb0a82947f7287138b0c54bc5/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65985d787504047cb0a82947f7287138b0c54bc5/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=65985d787504047cb0a82947f7287138b0c54bc5", "patch": "@@ -10628,7 +10628,8 @@ c_finish_return (location_t loc, tree retval, tree origtype)\n \t      if (DECL_P (inner)\n \t\t  && !DECL_EXTERNAL (inner)\n \t\t  && !TREE_STATIC (inner)\n-\t\t  && DECL_CONTEXT (inner) == current_function_decl)\n+\t\t  && DECL_CONTEXT (inner) == current_function_decl\n+\t\t  && POINTER_TYPE_P (TREE_TYPE (TREE_TYPE (current_function_decl))))\n \t\t{\n \t\t  if (TREE_CODE (inner) == LABEL_DECL)\n \t\t    warning_at (loc, OPT_Wreturn_local_addr,"}, {"sha": "1489238b716da23f7b77fc7bf531f9133e41da77", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65985d787504047cb0a82947f7287138b0c54bc5/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65985d787504047cb0a82947f7287138b0c54bc5/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=65985d787504047cb0a82947f7287138b0c54bc5", "patch": "@@ -1,3 +1,10 @@\n+2019-06-05  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/90737\n+\t* typeck.c (maybe_warn_about_returning_address_of_local): Only\n+\tconsider functions returning pointers as candidates for\n+\t-Wreturn-local-addr.\n+\n 2019-06-05  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* decl.c (smallest_type_location): New."}, {"sha": "154da59627b66288c6d1098066b29c4974994a62", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65985d787504047cb0a82947f7287138b0c54bc5/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65985d787504047cb0a82947f7287138b0c54bc5/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=65985d787504047cb0a82947f7287138b0c54bc5", "patch": "@@ -9307,11 +9307,12 @@ maybe_warn_about_returning_address_of_local (tree retval)\n \t\t\t\"returning local %<initializer_list%> variable %qD \"\n \t\t\t\"does not extend the lifetime of the underlying array\",\n \t\t\twhats_returned);\n-      else if (TREE_CODE (whats_returned) == LABEL_DECL)\n+      else if (POINTER_TYPE_P (valtype)\n+\t       && TREE_CODE (whats_returned) == LABEL_DECL)\n \tw = warning_at (loc, OPT_Wreturn_local_addr,\n \t\t\t\"address of label %qD returned\",\n \t\t\twhats_returned);\n-      else\n+      else if (POINTER_TYPE_P (valtype))\n \tw = warning_at (loc, OPT_Wreturn_local_addr,\n \t\t\t\"address of local variable %qD returned\",\n \t\t\twhats_returned);"}, {"sha": "18a480fcdab85bfc9d5e61f1a80498171719b106", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65985d787504047cb0a82947f7287138b0c54bc5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65985d787504047cb0a82947f7287138b0c54bc5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=65985d787504047cb0a82947f7287138b0c54bc5", "patch": "@@ -1,3 +1,9 @@\n+2019-06-05  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/90737\n+\t* c-c++-common/Wreturn-local-addr.c: New test.\n+\t* g++.dg/warn/Wreturn-local-addr-6.C: New test.\n+\n 2019-06-05  Hongtao Liu  <hongtao.liu@intel.com>\n \n \t* gcc.target/i386/avx512dq-vfpclasspd-1.c: Adjust scan assember"}, {"sha": "c8c3b9002912c9cc12ba093d6eb512b9a88c8f31", "filename": "gcc/testsuite/c-c++-common/Wreturn-local-addr.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65985d787504047cb0a82947f7287138b0c54bc5/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWreturn-local-addr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65985d787504047cb0a82947f7287138b0c54bc5/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWreturn-local-addr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWreturn-local-addr.c?ref=65985d787504047cb0a82947f7287138b0c54bc5", "patch": "@@ -0,0 +1,47 @@\n+/* PR c/90737 - inconsistent address of a local converted to intptr_t\n+   between callee and caller\n+   { dg-do compile }\n+   { dg-options \"-O1 -Wall -Wreturn-local-addr -fdump-tree-optimized\" } */\n+\n+typedef __INTPTR_TYPE__ intptr_t;\n+\n+static inline intptr_t\n+return_addr_local_as_int (void)\n+{\n+  int i;\n+  if ((intptr_t)&i == 0)\n+    __builtin_abort ();\n+\n+  return (intptr_t)&i;\n+}\n+\n+void get_addr_local_as_int (void)\n+{\n+  intptr_t i = return_addr_local_as_int ();\n+  if (i == 0)\n+    __builtin_abort ();\n+}\n+\n+\n+static inline intptr_t\n+return_addr_label_as_int (void)\n+{\n+ label:\n+  if ((intptr_t)&&label == 0)\n+    __builtin_abort ();\n+\n+  return (intptr_t)&&label;\n+}\n+\n+void get_addr_label_as_int (void)\n+{\n+  intptr_t i = return_addr_label_as_int ();\n+  if (i == 0)\n+    __builtin_abort ();\n+}\n+\n+/* Verify that the functions that return the address of the label\n+   or local variable have been optimized away and so have the calls\n+   to abort.\n+  { dg-final { scan-tree-dump-not \"return_addr_\" \"optimized\" } }\n+  { dg-final { scan-tree-dump-not \"abort\" \"optimized\" } } */"}, {"sha": "bfe144575478f29f059b2eb6eb2ce28f29b4a03f", "filename": "gcc/testsuite/g++.dg/warn/Wreturn-local-addr-6.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65985d787504047cb0a82947f7287138b0c54bc5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWreturn-local-addr-6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65985d787504047cb0a82947f7287138b0c54bc5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWreturn-local-addr-6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWreturn-local-addr-6.C?ref=65985d787504047cb0a82947f7287138b0c54bc5", "patch": "@@ -0,0 +1,29 @@\n+/* PR c/90737 - inconsistent address of a local converted to intptr_t\n+   between callee and caller\n+   { dg-do compile }\n+   { dg-options \"-O1 -Wall -Wreturn-local-addr -fdump-tree-optimized\" } */\n+\n+typedef __INTPTR_TYPE__ intptr_t;\n+\n+const intptr_t&\n+return_addr_label_as_intref (void)\n+{\n+ label:\n+  if ((const intptr_t*)&&label == 0)\n+    __builtin_exit (1);\n+\n+  return *(const intptr_t*)&&label;   // { dg-warning \"\\\\\\[-Wreturn-local-addr]\" } */\n+}\n+\n+const intptr_t&\n+return_addr_local_as_intref (void)\n+{\n+  int a[1];\n+  if ((const intptr_t*)a == 0)\n+    __builtin_exit (1);\n+\n+  return (const intptr_t&)a;   // { dg-warning \"\\\\\\[-Wreturn-local-addr]\" } */\n+}\n+\n+/* Verify that the return value has been replaced with zero:\n+  { dg-final { scan-tree-dump-times \"return 0;\" 2 \"optimized\" } } */"}]}