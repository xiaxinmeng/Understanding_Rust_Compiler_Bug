{"sha": "307f83a3e7e625eb0fdb68e6b746aa90a3323cc2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA3ZjgzYTNlN2U2MjVlYjBmZGI2OGU2Yjc0NmFhOTBhMzMyM2NjMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-02-27T21:35:53Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-02-27T21:35:53Z"}, "message": "re PR middle-end/56461 (GCC is leaking lots of memory)\n\n\tPR middle-end/56461\n\t* ipa-pure-const.c (propagate): Use FOR_EACH_FUNCTION instead of\n\tFOR_EACH_DEFINED_FUNCTION when freeing state.\n\nFrom-SVN: r196322", "tree": {"sha": "12f259e1572b11060670d90fe959d41b0348fffd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12f259e1572b11060670d90fe959d41b0348fffd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/307f83a3e7e625eb0fdb68e6b746aa90a3323cc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/307f83a3e7e625eb0fdb68e6b746aa90a3323cc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/307f83a3e7e625eb0fdb68e6b746aa90a3323cc2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/307f83a3e7e625eb0fdb68e6b746aa90a3323cc2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e19624ee2a4863da6ec9479252cafcf1ef1e1e78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e19624ee2a4863da6ec9479252cafcf1ef1e1e78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e19624ee2a4863da6ec9479252cafcf1ef1e1e78"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "88fcb16da45c38e22c8ee301de066e72dad0b835", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/307f83a3e7e625eb0fdb68e6b746aa90a3323cc2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/307f83a3e7e625eb0fdb68e6b746aa90a3323cc2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=307f83a3e7e625eb0fdb68e6b746aa90a3323cc2", "patch": "@@ -1,5 +1,9 @@\n 2013-02-27  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/56461\n+\t* ipa-pure-const.c (propagate): Use FOR_EACH_FUNCTION instead of\n+\tFOR_EACH_DEFINED_FUNCTION when freeing state.\n+\n \tPR middle-end/56461\n \t* df-scan.c (df_insn_delete): Use df_scan_free_mws_vec before\n \tpool_free."}, {"sha": "94c7315c1244ebdc5546b5eecca7db37d86537f8", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/307f83a3e7e625eb0fdb68e6b746aa90a3323cc2/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/307f83a3e7e625eb0fdb68e6b746aa90a3323cc2/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=307f83a3e7e625eb0fdb68e6b746aa90a3323cc2", "patch": "@@ -1479,7 +1479,7 @@ propagate (void)\n   propagate_pure_const ();\n \n   /* Cleanup. */\n-  FOR_EACH_DEFINED_FUNCTION (node)\n+  FOR_EACH_FUNCTION (node)\n     if (has_function_state (node))\n       free (get_function_state (node));\n   funct_state_vec.release ();"}]}