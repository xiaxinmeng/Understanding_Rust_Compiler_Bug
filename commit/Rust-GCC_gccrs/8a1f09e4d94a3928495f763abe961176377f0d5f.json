{"sha": "8a1f09e4d94a3928495f763abe961176377f0d5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGExZjA5ZTRkOTRhMzkyODQ5NWY3NjNhYmU5NjExNzYzNzdmMGQ1Zg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-01-08T16:43:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-01-08T16:43:30Z"}, "message": "re PR rtl-optimization/79003 (r238991 breaks ODR)\n\n\tPR bootstrap/79003\n\t* Makefile.in (CFLAGS, CPPFLAGS, LDFLAGS): Remove -fno-lto.\n\t(NOLTO_FLAGS): New variable.\n\t(ALL_CFLAGS): Use it.\n\t* configure.ac (nolto_flags): New ACX_PROG_CC_WARNING_OPTS,\n\tcheck for whether -fno-lto works.\n\t* configure: Regenerated.\n\nFrom-SVN: r244208", "tree": {"sha": "9b3c79329c41692b65d6f625d7deb4eb37fc0372", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b3c79329c41692b65d6f625d7deb4eb37fc0372"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a1f09e4d94a3928495f763abe961176377f0d5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a1f09e4d94a3928495f763abe961176377f0d5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a1f09e4d94a3928495f763abe961176377f0d5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a1f09e4d94a3928495f763abe961176377f0d5f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8dc87c24cf4883d3934d285a9bf1e5ca5384022", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8dc87c24cf4883d3934d285a9bf1e5ca5384022", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8dc87c24cf4883d3934d285a9bf1e5ca5384022"}], "stats": {"total": 81, "additions": 77, "deletions": 4}, "files": [{"sha": "287e373efc873d9a4cec475fdd869690b84f1db6", "filename": "libdecnumber/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a1f09e4d94a3928495f763abe961176377f0d5f/libdecnumber%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a1f09e4d94a3928495f763abe961176377f0d5f/libdecnumber%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FChangeLog?ref=8a1f09e4d94a3928495f763abe961176377f0d5f", "patch": "@@ -1,3 +1,13 @@\n+2017-01-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR bootstrap/79003\n+\t* Makefile.in (CFLAGS, CPPFLAGS, LDFLAGS): Remove -fno-lto.\n+\t(NOLTO_FLAGS): New variable.\n+\t(ALL_CFLAGS): Use it.\n+\t* configure.ac (nolto_flags): New ACX_PROG_CC_WARNING_OPTS,\n+\tcheck for whether -fno-lto works.\n+\t* configure: Regenerated.\n+\n 2017-01-06  Martin Liska  <mliska@suse.cz>\n \n \tPR bootstrap/79003"}, {"sha": "8f13f324edf1f1d02de1ca1dcf920ba18b0a640b", "filename": "libdecnumber/Makefile.in", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a1f09e4d94a3928495f763abe961176377f0d5f/libdecnumber%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a1f09e4d94a3928495f763abe961176377f0d5f/libdecnumber%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2FMakefile.in?ref=8a1f09e4d94a3928495f763abe961176377f0d5f", "patch": "@@ -31,19 +31,20 @@ ACLOCAL = @ACLOCAL@\n AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n CC = @CC@\n-CFLAGS = @CFLAGS@ -fno-lto\n+CFLAGS = @CFLAGS@\n WARN_CFLAGS = @WARN_CFLAGS@ @WARN_PEDANTIC@ @WERROR@\n CPP = @CPP@\n-CPPFLAGS = @CPPFLAGS@ -fno-lto\n+CPPFLAGS = @CPPFLAGS@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n-LDFLAGS = @LDFLAGS@ -fno-lto\n+LDFLAGS = @LDFLAGS@\n LIBICONV = @LIBICONV@\n PACKAGE = @PACKAGE@\n PICFLAG = @PICFLAG@\n RANLIB = @RANLIB@\n SHELL = @SHELL@\n objext = @OBJEXT@\n+NOLTO_FLAGS = @nolto_flags@\n \n datarootdir = @datarootdir@\n datadir = @datadir@\n@@ -58,7 +59,8 @@ enable_decimal_float= @enable_decimal_float@\n \n INCLUDES = -I$(srcdir) -I.\n \n-ALL_CFLAGS = $(CFLAGS) $(WARN_CFLAGS) $(INCLUDES) $(CPPFLAGS) $(PICFLAG)\n+ALL_CFLAGS = $(CFLAGS) $(WARN_CFLAGS) $(NOLTO_FLAGS) $(INCLUDES) $(CPPFLAGS) \\\n+\t     $(PICFLAG)\n \n bid_OBJS = bid2dpd_dpd2bid.$(objext) host-ieee32.$(objext) \\\n \thost-ieee64.$(objext) host-ieee128.$(objext)"}, {"sha": "4cb732e80d45e0f23c6ecf3c3bd41fecfef87b7c", "filename": "libdecnumber/configure", "status": "modified", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a1f09e4d94a3928495f763abe961176377f0d5f/libdecnumber%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a1f09e4d94a3928495f763abe961176377f0d5f/libdecnumber%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2Fconfigure?ref=8a1f09e4d94a3928495f763abe961176377f0d5f", "patch": "@@ -613,6 +613,7 @@ EGREP\n GREP\n CPP\n WERROR\n+nolto_flags\n WARN_PEDANTIC\n WARN_CFLAGS\n AUTOHEADER\n@@ -3382,6 +3383,64 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+nolto_flags=\n+save_CFLAGS=\"$CFLAGS\"\n+for real_option in -fno-lto; do\n+  # Do the check with the no- prefix removed since gcc silently\n+  # accepts any -Wno-* option on purpose\n+  case $real_option in\n+    -Wno-*) option=-W`expr x$real_option : 'x-Wno-\\(.*\\)'` ;;\n+    *) option=$real_option ;;\n+  esac\n+  as_acx_Woption=`$as_echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n+\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports $option\" >&5\n+$as_echo_n \"checking whether $CC supports $option... \" >&6; }\n+if { as_var=$as_acx_Woption; eval \"test \\\"\\${$as_var+set}\\\" = set\"; }; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  CFLAGS=\"$option\"\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  eval \"$as_acx_Woption=yes\"\n+else\n+  eval \"$as_acx_Woption=no\"\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+fi\n+eval ac_res=\\$$as_acx_Woption\n+\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n+$as_echo \"$ac_res\" >&6; }\n+  if test `eval 'as_val=${'$as_acx_Woption'};$as_echo \"$as_val\"'` = yes; then :\n+  nolto_flags=\"$nolto_flags${nolto_flags:+ }$real_option\"\n+fi\n+  done\n+CFLAGS=\"$save_CFLAGS\"\n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+\n+\n # Only enable with --enable-werror-always until existing warnings are\n # corrected.\n ac_ext=c"}, {"sha": "c9f341f2f7bc74fcfb3f2942ca23b1ff554ea040", "filename": "libdecnumber/configure.ac", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a1f09e4d94a3928495f763abe961176377f0d5f/libdecnumber%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a1f09e4d94a3928495f763abe961176377f0d5f/libdecnumber%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libdecnumber%2Fconfigure.ac?ref=8a1f09e4d94a3928495f763abe961176377f0d5f", "patch": "@@ -43,6 +43,8 @@ ACX_PROG_CC_WARNING_OPTS([-W -Wall -Wwrite-strings -Wstrict-prototypes \\\n \t\t\t  -Wmissing-format-attribute -Wcast-qual])\n ACX_PROG_CC_WARNING_ALMOST_PEDANTIC([-Wno-long-long])\n \n+ACX_PROG_CC_WARNING_OPTS([-fno-lto], [nolto_flags])\n+\n # Only enable with --enable-werror-always until existing warnings are\n # corrected.\n ACX_PROG_CC_WARNINGS_ARE_ERRORS([manual])"}]}