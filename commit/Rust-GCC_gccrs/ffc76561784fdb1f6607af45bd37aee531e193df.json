{"sha": "ffc76561784fdb1f6607af45bd37aee531e193df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZjNzY1NjE3ODRmZGIxZjY2MDdhZjQ1YmQzN2FlZTUzMWUxOTNkZg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2003-08-10T14:59:58Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-08-10T14:59:58Z"}, "message": "re PR c++/11670 (ICE in convert_like_real on illegal code)\n\ncp:\n\tPR c++/11670\n\t* call.c (convert_like_real): Add rvalue binding error message.\n\t* error.c (dump_expr) <NOP_EXPR case>: Detect when the no expr is\n\treally a cast.\ntestsuite:\n\tPR c++/11670\n\t* g++.dg/expr/cast2.C: New test.\n\nFrom-SVN: r70294", "tree": {"sha": "79a8e14a107c6b67adc6e7382a0c8ad9ec746999", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79a8e14a107c6b67adc6e7382a0c8ad9ec746999"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffc76561784fdb1f6607af45bd37aee531e193df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffc76561784fdb1f6607af45bd37aee531e193df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffc76561784fdb1f6607af45bd37aee531e193df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffc76561784fdb1f6607af45bd37aee531e193df/comments", "author": null, "committer": null, "parents": [{"sha": "86306a6b111cf8e6bef4c451761f3a458212a756", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86306a6b111cf8e6bef4c451761f3a458212a756", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86306a6b111cf8e6bef4c451761f3a458212a756"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "c4a59498cad2959f86d5b9760c5e2dd62d1c1fc6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffc76561784fdb1f6607af45bd37aee531e193df/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffc76561784fdb1f6607af45bd37aee531e193df/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ffc76561784fdb1f6607af45bd37aee531e193df", "patch": "@@ -1,5 +1,10 @@\n 2003-08-10  Nathan Sidwell  <nathan@codesourcery.com>\n \n+\tPR c++/11670\n+\t* call.c (convert_like_real): Add rvalue binding error message.\n+\t* error.c (dump_expr) <NOP_EXPR case>: Detect when the no expr is\n+\treally a cast.\n+\t\n \tPR c++/10530\n \t* pt.c (dependent_type_p_r): A dependent template-id is a class\n \ttype with dependent template arguments, or a bound template"}, {"sha": "73c8c44ea79ecb498fd42809d42f210d65758af1", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffc76561784fdb1f6607af45bd37aee531e193df/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffc76561784fdb1f6607af45bd37aee531e193df/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=ffc76561784fdb1f6607af45bd37aee531e193df", "patch": "@@ -4133,7 +4133,7 @@ convert_like_real (tree convs, tree expr, tree fn, int argnum, int inner,\n \t\t  error (\"cannot bind packed field `%E' to `%T'\",\n \t\t\t expr, ref_type);\n \t\telse\n-\t\t  my_friendly_assert (0, 20030715);\n+\t\t  error (\"cannot bind rvalue `%E' to `%T'\", expr, ref_type);\n \t\treturn error_mark_node;\n \t      }\n \t    expr = build_target_expr_with_type (expr, type);"}, {"sha": "3531f94ec8aa4c4e1c63076313cffc4dbc0e7bec", "filename": "gcc/cp/error.c", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffc76561784fdb1f6607af45bd37aee531e193df/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffc76561784fdb1f6607af45bd37aee531e193df/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=ffc76561784fdb1f6607af45bd37aee531e193df", "patch": "@@ -1682,9 +1682,27 @@ dump_expr (tree t, int flags)\n       break;\n \n     case NOP_EXPR:\n-      dump_expr (TREE_OPERAND (t, 0), flags);\n-      break;\n-\n+      {\n+\ttree op = TREE_OPERAND (t, 0);\n+\t\n+\tif (!same_type_p (TREE_TYPE (op), TREE_TYPE (t)))\n+\t  {\n+\t    /* It is a cast, but we cannot tell whether it is a\n+\t       reinterpret or static cast. Use the C style notation.  */\n+\t    if (flags & TFF_EXPR_IN_PARENS)\n+\t      pp_left_paren (cxx_pp);\n+\t    pp_left_paren (cxx_pp);\n+\t    dump_type (TREE_TYPE (t), flags);\n+\t    pp_right_paren (cxx_pp);\n+\t    dump_expr (op, flags | TFF_EXPR_IN_PARENS);\n+\t    if (flags & TFF_EXPR_IN_PARENS)\n+\t      pp_right_paren (cxx_pp);\n+\t  }\n+\telse\n+\t  dump_expr (op, flags);\n+\tbreak;\n+      }\n+      \n     case EXPR_WITH_FILE_LOCATION:\n       dump_expr (EXPR_WFL_NODE (t), flags);\n       break;"}, {"sha": "efdfe31f3a2a014086c4a48b4d90655374b55328", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffc76561784fdb1f6607af45bd37aee531e193df/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffc76561784fdb1f6607af45bd37aee531e193df/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ffc76561784fdb1f6607af45bd37aee531e193df", "patch": "@@ -1,5 +1,8 @@\n 2003-08-10  Nathan Sidwell  <nathan@codesourcery.com>\n \n+\tPR c++/11670\n+\t* g++.dg/expr/cast2.C: New test.\n+\t\n \tPR c++/10530\n \t* g++.dg/template/dependent-name2.C: New test.\n "}]}