{"sha": "a7df3bea9cf1e42d44ec02b548fc43dd214eda79", "node_id": "C_kwDOANBUbNoAKGE3ZGYzYmVhOWNmMWU0MmQ0NGVjMDJiNTQ4ZmM0M2RkMjE0ZWRhNzk", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2023-03-29T21:34:30Z"}, "committer": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2023-03-30T03:49:14Z"}, "message": "Fix fc-prototypes usage with C_INT64_T and non LP64 Targets.\n\nThe problem here is we were outputing long_long instead of\n\"long long\". This was just an oversight and a missing check.\n\nCommitted as obvious after a bootstrap/test on x86_64-linux-gnu.\n\ngcc/fortran/ChangeLog:\n\n\t* dump-parse-tree.cc (get_c_type_name): Fix \"long_long\"\n\ttype name to be \"long long\". Add a comment on why adding\n\t2 to the name too.", "tree": {"sha": "37f7d57a3705117977398c2c27acca237e7e6af9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37f7d57a3705117977398c2c27acca237e7e6af9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7df3bea9cf1e42d44ec02b548fc43dd214eda79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7df3bea9cf1e42d44ec02b548fc43dd214eda79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7df3bea9cf1e42d44ec02b548fc43dd214eda79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7df3bea9cf1e42d44ec02b548fc43dd214eda79/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3588c8cbc1003d004c3ce5ff96af67aa95c073e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3588c8cbc1003d004c3ce5ff96af67aa95c073e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3588c8cbc1003d004c3ce5ff96af67aa95c073e9"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "f4490da6a198511607d3c7a5b66b0cb27640251a", "filename": "gcc/fortran/dump-parse-tree.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7df3bea9cf1e42d44ec02b548fc43dd214eda79/gcc%2Ffortran%2Fdump-parse-tree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7df3bea9cf1e42d44ec02b548fc43dd214eda79/gcc%2Ffortran%2Fdump-parse-tree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdump-parse-tree.cc?ref=a7df3bea9cf1e42d44ec02b548fc43dd214eda79", "patch": "@@ -3696,7 +3696,10 @@ get_c_type_name (gfc_typespec *ts, gfc_array_spec *as, const char **pre,\n \t  if (c_interop_kinds_table[i].f90_type == ts->type\n \t      && c_interop_kinds_table[i].value == ts->kind)\n \t    {\n+\t      /* Skip over 'c_'. */\n \t      *type_name = c_interop_kinds_table[i].name + 2;\n+\t      if (strcmp (*type_name, \"long_long\") == 0)\n+\t\t*type_name = \"long long\";\n \t      if (strcmp (*type_name, \"signed_char\") == 0)\n \t\t*type_name = \"signed char\";\n \t      else if (strcmp (*type_name, \"size_t\") == 0)"}]}