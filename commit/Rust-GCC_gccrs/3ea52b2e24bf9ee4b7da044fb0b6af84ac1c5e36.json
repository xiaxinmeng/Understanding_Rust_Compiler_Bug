{"sha": "3ea52b2e24bf9ee4b7da044fb0b6af84ac1c5e36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VhNTJiMmUyNGJmOWVlNGI3ZGEwNDRmYjBiNmFmODRhYzFjNWUzNg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2008-08-22T09:03:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-22T09:03:16Z"}, "message": "sem_ch8.adb (Use_One_Type): when checking which of two use_type clauses in related units is redundant...\n\n2008-08-22  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch8.adb (Use_One_Type): when checking which of two use_type\n\tclauses in related units is redundant, if one of the units is a package\n\tinstantiation, use its instance_spec to determine which unit is the\n\tancestor of the other.\n\nFrom-SVN: r139430", "tree": {"sha": "aab83e261286b8114a757165e1475884f7fee1a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aab83e261286b8114a757165e1475884f7fee1a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ea52b2e24bf9ee4b7da044fb0b6af84ac1c5e36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ea52b2e24bf9ee4b7da044fb0b6af84ac1c5e36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ea52b2e24bf9ee4b7da044fb0b6af84ac1c5e36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ea52b2e24bf9ee4b7da044fb0b6af84ac1c5e36/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d41bf558bdf241357c441807d1e395c283268cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d41bf558bdf241357c441807d1e395c283268cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d41bf558bdf241357c441807d1e395c283268cd"}], "stats": {"total": 69, "additions": 55, "deletions": 14}, "files": [{"sha": "67d21644ef4dd6fc35ba5a9b15b6c293d88c7e9c", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 55, "deletions": 14, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ea52b2e24bf9ee4b7da044fb0b6af84ac1c5e36/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ea52b2e24bf9ee4b7da044fb0b6af84ac1c5e36/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=3ea52b2e24bf9ee4b7da044fb0b6af84ac1c5e36", "patch": "@@ -7060,43 +7060,75 @@ package body Sem_Ch8 is\n          --  The type already has a use clause\n \n          if In_Use (T) then\n+\n+            --  Case where we know the current use clause for the type\n+\n             if Present (Current_Use_Clause (T)) then\n                declare\n                   Clause1 : constant Node_Id := Parent (Id);\n                   Clause2 : constant Node_Id := Current_Use_Clause (T);\n+                  Ent1    : Entity_Id;\n+                  Ent2    : Entity_Id;\n                   Err_No  : Node_Id;\n                   Unit1   : Node_Id;\n                   Unit2   : Node_Id;\n \n                begin\n+                  --  If both current use type clause and the use type\n+                  --  clause for the type are at the compilation unit level,\n+                  --  one of the units must be an ancestor of the other, and\n+                  --  the warning belongs on the descendant.\n+\n                   if Nkind (Parent (Clause1)) = N_Compilation_Unit\n-                    and then Nkind (Parent (Clause2)) = N_Compilation_Unit\n+                       and then\n+                     Nkind (Parent (Clause2)) = N_Compilation_Unit\n                   then\n+                     Unit1 := Unit (Parent (Clause1));\n+                     Unit2 := Unit (Parent (Clause2));\n+\n                      --  There is a redundant use type clause in a child unit.\n                      --  Determine which of the units is more deeply nested.\n+                     --  If a unit is a package instance, retrieve the entity\n+                     --  and its scope from the instance spec\n \n-                     Unit1 := Defining_Entity (Unit (Parent (Clause1)));\n-                     Unit2 := Defining_Entity (Unit (Parent (Clause2)));\n+                     if Nkind (Unit1) =  N_Package_Instantiation\n+                       and then Analyzed (Unit1)\n+                     then\n+                        Ent1 := Defining_Entity (Instance_Spec (Unit1));\n+                     else\n+                        Ent1 := Defining_Entity (Unit1);\n+                     end if;\n \n-                     if Scope (Unit2) = Standard_Standard  then\n+                     if Nkind (Unit2) =  N_Package_Instantiation\n+                       and then Analyzed (Unit2)\n+                     then\n+                        Ent2 := Defining_Entity (Instance_Spec (Unit2));\n+                     else\n+                        Ent2 := Defining_Entity (Unit2);\n+                     end if;\n+\n+                     if Scope (Ent2) = Standard_Standard  then\n                         Error_Msg_Sloc := Sloc (Current_Use_Clause (T));\n                         Err_No := Clause1;\n \n-                     elsif Scope (Unit1) = Standard_Standard then\n+                     elsif Scope (Ent1) = Standard_Standard then\n                         Error_Msg_Sloc := Sloc (Id);\n                         Err_No := Clause2;\n \n-                     else\n-                        --  Determine which is the descendant unit\n+                     --  If both units are child units, we determine which\n+                     --  one is the descendant by the scope distance to the\n+                     --  ultimate parent unit.\n \n+                     else\n                         declare\n                            S1, S2 : Entity_Id;\n \n                         begin\n-                           S1 := Scope (Unit1);\n-                           S2 := Scope (Unit2);\n+                           S1 := Scope (Ent1);\n+                           S2 := Scope (Ent2);\n                            while S1 /= Standard_Standard\n-                             and then S2 /= Standard_Standard\n+                                   and then\n+                                 S2 /= Standard_Standard\n                            loop\n                               S1 := Scope (S1);\n                               S2 := Scope (S2);\n@@ -7115,16 +7147,25 @@ package body Sem_Ch8 is\n                      Error_Msg_NE\n                        (\"& is already use-visible through previous \"\n                         & \"use_type_clause #?\", Err_No, Id);\n+\n+                  --  Case where current use type clause and the use type\n+                  --  clause for the type are not both at the compilation unit\n+                  --  level. In this case we don't have location information.\n+\n                   else\n                      Error_Msg_NE\n-                       (\"& is already use-visible through previous use type \"\n-                        & \"clause?\", Id, Id);\n+                       (\"& is already use-visible through previous \"\n+                        & \"use type clause?\", Id, Id);\n                   end if;\n                end;\n+\n+            --  Here if Current_Use_Clause is not set for T, another case\n+            --  where we do not have the location information available.\n+\n             else\n                Error_Msg_NE\n-                 (\"& is already use-visible through previous use type \"\n-                  & \"clause?\", Id, Id);\n+                 (\"& is already use-visible through previous \"\n+                  & \"use type clause?\", Id, Id);\n             end if;\n \n          --  The package where T is declared is already used"}]}