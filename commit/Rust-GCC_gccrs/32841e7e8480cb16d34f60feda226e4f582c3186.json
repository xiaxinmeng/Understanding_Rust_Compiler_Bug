{"sha": "32841e7e8480cb16d34f60feda226e4f582c3186", "node_id": "C_kwDOANBUbNoAKDMyODQxZTdlODQ4MGNiMTZkMzRmNjBmZWRhMjI2ZTRmNTgyYzMxODY", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-12-08T22:21:58Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2023-01-03T09:29:53Z"}, "message": "ada: Make Apply_Discriminant_Check.Denotes_Explicit_Dereference more robust\n\nThe predicate implements the rules of the language so it needs to cope with\nconstructs rewritten by the expander, in particular explicit dereferences\nthat the expander uses liberally for various purposes.\n\nThis change makes the detection of rewritten calls more robust and adds the\ndetection of rewritten return objects.\n\ngcc/ada/\n\n\t* checks.adb (Apply_Discriminant_Check.Denotes_Explicit_Dereference):\n\tReturn false for artificial dereferences generated by the expander.", "tree": {"sha": "60d866e4fd81c68f950a4ddddc5c912cd589cdf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60d866e4fd81c68f950a4ddddc5c912cd589cdf2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32841e7e8480cb16d34f60feda226e4f582c3186", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32841e7e8480cb16d34f60feda226e4f582c3186", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32841e7e8480cb16d34f60feda226e4f582c3186", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32841e7e8480cb16d34f60feda226e4f582c3186/comments", "author": null, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfe1ab222a8095b31c29d8f3530268f048fea00f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfe1ab222a8095b31c29d8f3530268f048fea00f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfe1ab222a8095b31c29d8f3530268f048fea00f"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "d518e6720a21c7bbcb390b3d94212dba3cb9ea5d", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32841e7e8480cb16d34f60feda226e4f582c3186/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32841e7e8480cb16d34f60feda226e4f582c3186/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=32841e7e8480cb16d34f60feda226e4f582c3186", "patch": "@@ -1388,13 +1388,23 @@ package body Checks is\n \n       function Denotes_Explicit_Dereference (Obj : Node_Id) return Boolean is\n       begin\n-         return\n-           Nkind (Obj) = N_Explicit_Dereference\n-             or else\n-               (Is_Entity_Name (Obj)\n-                 and then Present (Renamed_Object (Entity (Obj)))\n-                 and then Nkind (Renamed_Object (Entity (Obj))) =\n-                                              N_Explicit_Dereference);\n+         if Is_Entity_Name (Obj) then\n+            return Present (Renamed_Object (Entity (Obj)))\n+              and then\n+                Denotes_Explicit_Dereference (Renamed_Object (Entity (Obj)));\n+\n+         --  This routine uses the rules of the language so we need to exclude\n+         --  rewritten constructs that introduce artificial dereferences.\n+\n+         elsif Nkind (Obj) = N_Explicit_Dereference then\n+            return not Is_Captured_Function_Call (Obj)\n+              and then not\n+                (Nkind (Parent (Obj)) = N_Object_Renaming_Declaration\n+                  and then Is_Return_Object (Defining_Entity (Parent (Obj))));\n+\n+         else\n+            return False;\n+         end if;\n       end Denotes_Explicit_Dereference;\n \n       ----------------------------------------\n@@ -1497,9 +1507,7 @@ package body Checks is\n                              and then not Is_Aliased_Unconstrained_Component)\n                    or else (Ada_Version >= Ada_2005\n                              and then not Is_Constrained (T_Typ)\n-                             and then Denotes_Explicit_Dereference (Lhs)\n-                             and then Nkind (Original_Node (Lhs)) /=\n-                                        N_Function_Call))\n+                             and then Denotes_Explicit_Dereference (Lhs)))\n       then\n          T_Typ := Get_Actual_Subtype (Lhs);\n       end if;"}]}