{"sha": "433516e1c6b1f8eeceeceb83cec5ea02a14065dc", "node_id": "C_kwDOANBUbNoAKDQzMzUxNmUxYzZiMWY4ZWVjZWVjZWI4M2NlYzVlYTAyYTE0MDY1ZGM", "commit": {"author": {"name": "qing zhao", "email": "qing.zhao@oracle.com", "date": "2021-10-05T23:14:00Z"}, "committer": {"name": "qing zhao", "email": "qing.zhao@oracle.com", "date": "2021-10-05T23:14:00Z"}, "message": "Not add initialization for variables been initialized by FEs [PR102359]\n\nC++ FE creates proxy variables, which have associated DECL_VALUE_EXPR\nand have been initialized by FE. For such auto variable, we should not\nadd initialization when -ftrivial-auto-var-init presents.\n\n\tPR middle-end/102359\n\ngcc/ChangeLog:\n\n2021-10-05  qing zhao  <qing.zhao@oracle.com>\n\n\t* gimplify.c (gimplify_decl_expr): Not add initialization for an\n\tauto variable when it has been initialized by frontend.\n\ngcc/testsuite/ChangeLog:\n\n2021-10-05  qing zhao  <qing.zhao@oracle.com>\n\n\t* g++.dg/pr102359_1.C: New test.\n\t* g++.dg/pr102359_2.C: New test.", "tree": {"sha": "a1f0a10fe6f6ae2ba1511e3b11668da0eafffeaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1f0a10fe6f6ae2ba1511e3b11668da0eafffeaa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/433516e1c6b1f8eeceeceb83cec5ea02a14065dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/433516e1c6b1f8eeceeceb83cec5ea02a14065dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/433516e1c6b1f8eeceeceb83cec5ea02a14065dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/433516e1c6b1f8eeceeceb83cec5ea02a14065dc/comments", "author": {"login": "qingzhao69", "id": 89154636, "node_id": "MDQ6VXNlcjg5MTU0NjM2", "avatar_url": "https://avatars.githubusercontent.com/u/89154636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qingzhao69", "html_url": "https://github.com/qingzhao69", "followers_url": "https://api.github.com/users/qingzhao69/followers", "following_url": "https://api.github.com/users/qingzhao69/following{/other_user}", "gists_url": "https://api.github.com/users/qingzhao69/gists{/gist_id}", "starred_url": "https://api.github.com/users/qingzhao69/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qingzhao69/subscriptions", "organizations_url": "https://api.github.com/users/qingzhao69/orgs", "repos_url": "https://api.github.com/users/qingzhao69/repos", "events_url": "https://api.github.com/users/qingzhao69/events{/privacy}", "received_events_url": "https://api.github.com/users/qingzhao69/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qingzhao69", "id": 89154636, "node_id": "MDQ6VXNlcjg5MTU0NjM2", "avatar_url": "https://avatars.githubusercontent.com/u/89154636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qingzhao69", "html_url": "https://github.com/qingzhao69", "followers_url": "https://api.github.com/users/qingzhao69/followers", "following_url": "https://api.github.com/users/qingzhao69/following{/other_user}", "gists_url": "https://api.github.com/users/qingzhao69/gists{/gist_id}", "starred_url": "https://api.github.com/users/qingzhao69/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qingzhao69/subscriptions", "organizations_url": "https://api.github.com/users/qingzhao69/orgs", "repos_url": "https://api.github.com/users/qingzhao69/repos", "events_url": "https://api.github.com/users/qingzhao69/events{/privacy}", "received_events_url": "https://api.github.com/users/qingzhao69/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab67380fe60798946371b0493d2f40dedb6bc5a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab67380fe60798946371b0493d2f40dedb6bc5a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab67380fe60798946371b0493d2f40dedb6bc5a9"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "d8e4b13934952c31005694a8aad238f51eb094b8", "filename": "gcc/gimplify.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/433516e1c6b1f8eeceeceb83cec5ea02a14065dc/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/433516e1c6b1f8eeceeceb83cec5ea02a14065dc/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=433516e1c6b1f8eeceeceb83cec5ea02a14065dc", "patch": "@@ -1872,6 +1872,12 @@ gimplify_decl_expr (tree *stmt_p, gimple_seq *seq_p)\n     {\n       tree init = DECL_INITIAL (decl);\n       bool is_vla = false;\n+      /* Check whether a decl has FE created VALUE_EXPR here BEFORE\n+\t gimplify_vla_decl creates VALUE_EXPR for a vla decl.\n+\t If the decl has VALUE_EXPR that was created by FE (usually\n+\t C++FE), it's a proxy varaible, and FE already initialized\n+\t the VALUE_EXPR of it, we should not initialize it anymore.  */\n+      bool decl_had_value_expr_p = DECL_HAS_VALUE_EXPR_P (decl);\n \n       poly_uint64 size;\n       if (!poly_int_tree_p (DECL_SIZE_UNIT (decl), &size)\n@@ -1934,7 +1940,8 @@ gimplify_decl_expr (tree *stmt_p, gimple_seq *seq_p)\n       /* When there is no explicit initializer, if the user requested,\n \t We should insert an artifical initializer for this automatic\n \t variable.  */\n-      else if (is_var_need_auto_init (decl))\n+      else if (is_var_need_auto_init (decl)\n+\t       && !decl_had_value_expr_p)\n \t{\n \t  gimple_add_init_for_auto_var (decl,\n \t\t\t\t\tflag_auto_var_init,"}, {"sha": "da643cde7bedeb0de1822b0208d8185f5df708c7", "filename": "gcc/testsuite/g++.dg/pr102359_1.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/433516e1c6b1f8eeceeceb83cec5ea02a14065dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr102359_1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/433516e1c6b1f8eeceeceb83cec5ea02a14065dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr102359_1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr102359_1.C?ref=433516e1c6b1f8eeceeceb83cec5ea02a14065dc", "patch": "@@ -0,0 +1,13 @@\n+/* PR middle-end/102359 ICE gimplification failed since\n+   r12-3433-ga25e0b5e6ac8a77a.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-ftrivial-auto-var-init=zero\" } */\n+/* { dg-require-effective-target c++17 } */\n+\n+struct A {\n+  double a = 111;\n+  auto foo() {\n+    return [*this] { return a; };\n+  }\n+};\n+int X = A{}.foo()();"}, {"sha": "d026d727dd5c3c711a03ef712cd04ab6eab2d5ac", "filename": "gcc/testsuite/g++.dg/pr102359_2.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/433516e1c6b1f8eeceeceb83cec5ea02a14065dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr102359_2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/433516e1c6b1f8eeceeceb83cec5ea02a14065dc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr102359_2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr102359_2.C?ref=433516e1c6b1f8eeceeceb83cec5ea02a14065dc", "patch": "@@ -0,0 +1,13 @@\n+/* PR middle-end/102359 ICE gimplification failed since\n+   r12-3433-ga25e0b5e6ac8a77a.  */\n+/* { dg-do run} */\n+/* { dg-options \"-ftrivial-auto-var-init=zero\" } */\n+/* { dg-require-effective-target c++17 } */\n+\n+int main()\n+{\n+ int i = 42;\n+ auto l = [=]() mutable { return i; };\n+ if (l() != i)\n+   __builtin_abort ();\n+}"}]}