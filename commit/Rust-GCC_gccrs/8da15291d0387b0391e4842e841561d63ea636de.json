{"sha": "8da15291d0387b0391e4842e841561d63ea636de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRhMTUyOTFkMDM4N2IwMzkxZTQ4NDJlODQxNTYxZDYzZWE2MzZkZQ==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2005-12-02T01:31:42Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2005-12-02T01:31:42Z"}, "message": "parser.c (cp_parser_make_typename_type): Call make_typename_type with tf_none instead of magic value 0.\n\n        * parser.c (cp_parser_make_typename_type): Call make_typename_type\n        with tf_none instead of magic value 0.\n        (cp_parser_explicit_instantiation): Call do_type_instantiation\n        with tf_error instead of magic value 1.\n        (cp_parser_elaborated_type_specifier): Call make_typename_type\n        with tf_error instead of magic value 1.\n        (cp_parser_class_name): Likewise.\n        (cp_parser_lookup_name): Likewise.\n\nFrom-SVN: r107855", "tree": {"sha": "e36fa951f2adada32792fa62b70b56b41215e112", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e36fa951f2adada32792fa62b70b56b41215e112"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8da15291d0387b0391e4842e841561d63ea636de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8da15291d0387b0391e4842e841561d63ea636de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8da15291d0387b0391e4842e841561d63ea636de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8da15291d0387b0391e4842e841561d63ea636de/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e45b3c75467600eafb89a989301d207da3f31650", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e45b3c75467600eafb89a989301d207da3f31650", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e45b3c75467600eafb89a989301d207da3f31650"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "209f403bcb8c107d59c72f043370a9646c35ec4a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8da15291d0387b0391e4842e841561d63ea636de/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8da15291d0387b0391e4842e841561d63ea636de/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8da15291d0387b0391e4842e841561d63ea636de", "patch": "@@ -1,3 +1,14 @@\n+2005-12-01  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* parser.c (cp_parser_make_typename_type): Call make_typename_type\n+\twith tf_none instead of magic value 0.\n+\t(cp_parser_explicit_instantiation): Call do_type_instantiation\n+\twith tf_error instead of magic value 1.\n+\t(cp_parser_elaborated_type_specifier): Call make_typename_type\n+\twith tf_error instead of magic value 1.\n+\t(cp_parser_class_name): Likewise.\n+\t(cp_parser_lookup_name): Likewise.\n+\n 2005-12-01  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* parser.c (cp_parser_declaration): Set token2.type to CPP_EOF,"}, {"sha": "e5b43b0d4af781ab5a81c9072cc4fd6fe1deefed", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8da15291d0387b0391e4842e841561d63ea636de/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8da15291d0387b0391e4842e841561d63ea636de/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=8da15291d0387b0391e4842e841561d63ea636de", "patch": "@@ -2417,7 +2417,7 @@ cp_parser_make_typename_type (cp_parser *parser, tree scope, tree id)\n   if (TREE_CODE (id) == IDENTIFIER_NODE)\n     {\n       result = make_typename_type (scope, id, typename_type,\n-\t\t\t\t   /*complain=*/0);\n+                                   /*complain=*/tf_none);\n       if (result == error_mark_node)\n \tcp_parser_diagnose_invalid_type_name (parser, scope, id);\n       return result;\n@@ -9243,7 +9243,8 @@ cp_parser_explicit_instantiation (cp_parser* parser)\n \t template instantiation.  */\n       pop_deferring_access_checks ();\n       if (type)\n-\tdo_type_instantiation (type, extension_specifier, /*complain=*/1);\n+\tdo_type_instantiation (type, extension_specifier,\n+                               /*complain=*/tf_error);\n     }\n   else\n     {\n@@ -9953,7 +9954,7 @@ cp_parser_elaborated_type_specifier (cp_parser* parser,\n \t       && tag_type == typename_type)\n \ttype = make_typename_type (parser->scope, decl,\n \t\t\t\t   typename_type,\n-\t\t\t\t   /*complain=*/1);\n+\t\t\t\t   /*complain=*/tf_error);\n       else\n \ttype = TREE_TYPE (decl);\n     }\n@@ -12588,7 +12589,8 @@ cp_parser_class_name (cp_parser *parser,\n   /* If this is a typename, create a TYPENAME_TYPE.  */\n   if (typename_p && decl != error_mark_node)\n     {\n-      decl = make_typename_type (scope, decl, typename_type, /*complain=*/1);\n+      decl = make_typename_type (scope, decl, typename_type,\n+                                 /*complain=*/tf_error);\n       if (decl != error_mark_node)\n \tdecl = TYPE_NAME (decl);\n     }\n@@ -14609,7 +14611,7 @@ cp_parser_lookup_name (cp_parser *parser, tree name,\n \t\t A::B' should be considered a type-name, even if `A'\n \t\t is dependent.  */\n \t      type = make_typename_type (parser->scope, name, tag_type,\n-\t\t\t\t\t /*complain=*/1);\n+\t\t\t\t\t /*complain=*/tf_error);\n \t      decl = TYPE_NAME (type);\n \t    }\n \t  else if (is_template\n@@ -14618,7 +14620,7 @@ cp_parser_lookup_name (cp_parser *parser, tree name,\n \t\t\t\t\t\t  CPP_CLOSE_PAREN)))\n \t    decl = make_unbound_class_template (parser->scope,\n \t\t\t\t\t\tname, NULL_TREE,\n-\t\t\t\t\t\t/*complain=*/1);\n+\t\t\t\t\t\t/*complain=*/tf_error);\n \t  else\n \t    decl = build_qualified_name (/*type=*/NULL_TREE,\n \t\t\t\t\t parser->scope, name,"}]}