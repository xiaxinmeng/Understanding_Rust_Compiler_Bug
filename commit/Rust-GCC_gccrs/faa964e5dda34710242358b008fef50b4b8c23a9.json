{"sha": "faa964e5dda34710242358b008fef50b4b8c23a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFhOTY0ZTVkZGEzNDcxMDI0MjM1OGIwMDhmZWY1MGI0YjhjMjNhOQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2002-06-22T14:26:53Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2002-06-22T14:26:53Z"}, "message": "re PR middle-end/6963 (Linux kernel miscompile due to clobbered MEM_SIZE)\n\n\tPR middle-end/6963\n\t* function.c (assign_stack_temp_for_type): Do not return\n\tthe same MEM rtx for multiple uses of a stack slot.\n\nFrom-SVN: r54912", "tree": {"sha": "c2fdc1b8aa713e2ea10864992b871f7eafaf874f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2fdc1b8aa713e2ea10864992b871f7eafaf874f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/faa964e5dda34710242358b008fef50b4b8c23a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faa964e5dda34710242358b008fef50b4b8c23a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faa964e5dda34710242358b008fef50b4b8c23a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faa964e5dda34710242358b008fef50b4b8c23a9/comments", "author": null, "committer": null, "parents": [{"sha": "7ae3e57c3a18499f14adc49ea8cb65890c254010", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ae3e57c3a18499f14adc49ea8cb65890c254010", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ae3e57c3a18499f14adc49ea8cb65890c254010"}], "stats": {"total": 30, "additions": 17, "deletions": 13}, "files": [{"sha": "261874de79468f07d31e71017f2fdf84bf031b38", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faa964e5dda34710242358b008fef50b4b8c23a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faa964e5dda34710242358b008fef50b4b8c23a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=faa964e5dda34710242358b008fef50b4b8c23a9", "patch": "@@ -1,3 +1,9 @@\n+2002-06-22  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\tPR middle-end/6963\n+\t* function.c (assign_stack_temp_for_type): Do not return\n+\tthe same MEM rtx for multiple uses of a stack slot.\n+\n 2002-06-22  David S. Miller  <davem@redhat.com>\n \n \tPR target/6841 target/6770 target/6719"}, {"sha": "b2008b184f5c02316697a48c528f5e2f85984889", "filename": "gcc/function.c", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faa964e5dda34710242358b008fef50b4b8c23a9/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faa964e5dda34710242358b008fef50b4b8c23a9/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=faa964e5dda34710242358b008fef50b4b8c23a9", "patch": "@@ -642,6 +642,7 @@ assign_stack_temp_for_type (mode, size, keep, type)\n {\n   unsigned int align;\n   struct temp_slot *p, *best_p = 0;\n+  rtx slot;\n \n   /* If SIZE is -1 it means that somebody tried to allocate a temporary\n      of a variable size.  */\n@@ -787,29 +788,26 @@ assign_stack_temp_for_type (mode, size, keep, type)\n       p->keep = keep;\n     }\n \n-  /* We may be reusing an old slot, so clear any MEM flags that may have been\n-     set from before.  */\n-  RTX_UNCHANGING_P (p->slot) = 0;\n-  MEM_IN_STRUCT_P (p->slot) = 0;\n-  MEM_SCALAR_P (p->slot) = 0;\n-  MEM_VOLATILE_P (p->slot) = 0;\n-  set_mem_alias_set (p->slot, 0);\n+\n+  /* Create a new MEM rtx to avoid clobbering MEM flags of old slots.  */\n+  slot = gen_rtx_MEM (mode, XEXP (p->slot, 0));\n+  stack_slot_list = gen_rtx_EXPR_LIST (VOIDmode, slot, stack_slot_list);\n \n   /* If we know the alias set for the memory that will be used, use\n      it.  If there's no TYPE, then we don't know anything about the\n      alias set for the memory.  */\n-  set_mem_alias_set (p->slot, type ? get_alias_set (type) : 0);\n-  set_mem_align (p->slot, align);\n+  set_mem_alias_set (slot, type ? get_alias_set (type) : 0);\n+  set_mem_align (slot, align);\n \n   /* If a type is specified, set the relevant flags.  */\n   if (type != 0)\n     {\n-      RTX_UNCHANGING_P (p->slot) = TYPE_READONLY (type);\n-      MEM_VOLATILE_P (p->slot) = TYPE_VOLATILE (type);\n-      MEM_SET_IN_STRUCT_P (p->slot, AGGREGATE_TYPE_P (type));\n+      RTX_UNCHANGING_P (slot) = TYPE_READONLY (type);\n+      MEM_VOLATILE_P (slot) = TYPE_VOLATILE (type);\n+      MEM_SET_IN_STRUCT_P (slot, AGGREGATE_TYPE_P (type));\n     }\n \n-  return p->slot;\n+  return slot;\n }\n \n /* Allocate a temporary stack slot and record it for possible later"}]}