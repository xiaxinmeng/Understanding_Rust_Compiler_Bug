{"sha": "487be9201c96d0a5c7c325339bc9c4916e933ed8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg3YmU5MjAxYzk2ZDBhNWM3YzMyNTMzOWJjOWM0OTE2ZTkzM2VkOA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-06-16T22:49:56Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-06-16T22:52:05Z"}, "message": "Correct documented option defaults.\n\ngcc/ChangeLog:\n\n\t* doc/invoke.texi (-Wmismatched-dealloc, -Wmismatched-new-delete):\n\tCorrect documented defaults.", "tree": {"sha": "e7bfd9bc3201121c9030c9676ff8f8909c186635", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7bfd9bc3201121c9030c9676ff8f8909c186635"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/487be9201c96d0a5c7c325339bc9c4916e933ed8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/487be9201c96d0a5c7c325339bc9c4916e933ed8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/487be9201c96d0a5c7c325339bc9c4916e933ed8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/487be9201c96d0a5c7c325339bc9c4916e933ed8/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6816a44dfe1b5fa9414490a18a4aa723b6f38f18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6816a44dfe1b5fa9414490a18a4aa723b6f38f18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6816a44dfe1b5fa9414490a18a4aa723b6f38f18"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "fe812cbd512149b4e646bcac7170130678c33b0a", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/487be9201c96d0a5c7c325339bc9c4916e933ed8/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/487be9201c96d0a5c7c325339bc9c4916e933ed8/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=487be9201c96d0a5c7c325339bc9c4916e933ed8", "patch": "@@ -255,7 +255,7 @@ in the following sections.\n -Wno-inherited-variadic-ctor  -Wno-init-list-lifetime @gol\n -Winvalid-imported-macros @gol\n -Wno-invalid-offsetof  -Wno-literal-suffix @gol\n--Wno-mismatched-new-delete -Wmismatched-tags @gol\n+-Wmismatched-new-delete -Wmismatched-tags @gol\n -Wmultiple-inheritance  -Wnamespaces  -Wnarrowing @gol\n -Wnoexcept  -Wnoexcept-type  -Wnon-virtual-dtor @gol\n -Wpessimizing-move  -Wno-placement-new  -Wplacement-new=@var{n} @gol\n@@ -3963,7 +3963,7 @@ The warning is inactive inside a system header file, such as the STL, so\n one can still use the STL.  One may also instantiate or specialize\n templates.\n \n-@item -Wno-mismatched-new-delete @r{(C++ and Objective-C++ only)}\n+@item -Wmismatched-new-delete @r{(C++ and Objective-C++ only)}\n @opindex Wmismatched-new-delete\n @opindex Wno-mismatched-new-delete\n Warn for mismatches between calls to @code{operator new} or @code{operator\n@@ -3995,7 +3995,7 @@ The related option @option{-Wmismatched-dealloc} diagnoses mismatches\n involving allocation and deallocation functions other than @code{operator\n new} and @code{operator delete}.\n \n-@option{-Wmismatched-new-delete} is enabled by default.\n+@option{-Wmismatched-new-delete} is included in @option{-Wall}.\n \n @item -Wmismatched-tags @r{(C++ and Objective-C++ only)}\n @opindex Wmismatched-tags\n@@ -5539,6 +5539,8 @@ Options} and @ref{Objective-C and Objective-C++ Dialect Options}.\n -Wmemset-elt-size @gol\n -Wmemset-transposed-args @gol\n -Wmisleading-indentation @r{(only for C/C++)} @gol\n+-Wmismatched-dealloc @gol\n+-Wmismatched-new-delete @r{(only for C/C++)} @gol\n -Wmissing-attributes @gol\n -Wmissing-braces @r{(only for C/ObjC)} @gol\n -Wmultistatement-macros  @gol\n@@ -6435,7 +6437,7 @@ Ignoring the warning can result in poorly optimized code.\n disable the warning, but this is not recommended and should be done only\n when non-existent profile data is justified.\n \n-@item -Wno-mismatched-dealloc\n+@item -Wmismatched-dealloc\n @opindex Wmismatched-dealloc\n @opindex Wno-mismatched-dealloc\n \n@@ -6468,7 +6470,7 @@ void f (void)\n In C++, the related option @option{-Wmismatched-new-delete} diagnoses\n mismatches involving either @code{operator new} or @code{operator delete}.\n \n-Option @option{-Wmismatched-dealloc} is enabled by default.\n+Option @option{-Wmismatched-dealloc} is included in @option{-Wall}.\n \n @item -Wmultistatement-macros\n @opindex Wmultistatement-macros\n@@ -7958,9 +7960,9 @@ Warnings controlled by the option can be disabled either by specifying\n Disable @option{-Wframe-larger-than=} warnings.  The option is equivalent\n to @option{-Wframe-larger-than=}@samp{SIZE_MAX} or larger.\n \n-@item -Wno-free-nonheap-object\n-@opindex Wno-free-nonheap-object\n+@item -Wfree-nonheap-object\n @opindex Wfree-nonheap-object\n+@opindex Wno-free-nonheap-object\n Warn when attempting to deallocate an object that was either not allocated\n on the heap, or by using a pointer that was not returned from a prior call\n to the corresponding allocation function.  For example, because the call\n@@ -7977,7 +7979,7 @@ void f (char *p)\n @}\n @end smallexample\n \n-@option{-Wfree-nonheap-object} is enabled by default.\n+@option{-Wfree-nonheap-object} is included in @option{-Wall}.\n \n @item -Wstack-usage=@var{byte-size}\n @opindex Wstack-usage"}]}