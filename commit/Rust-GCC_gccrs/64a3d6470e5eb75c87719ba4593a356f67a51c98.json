{"sha": "64a3d6470e5eb75c87719ba4593a356f67a51c98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRhM2Q2NDcwZTVlYjc1Yzg3NzE5YmE0NTkzYTM1NmY2N2E1MWM5OA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-03-16T13:53:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-03-16T13:53:09Z"}, "message": "re PR middle-end/26134 (fold *(float*)(&complex_float_var) into REALPART_EXPR<complex_float_var>)\n\n2011-03-16  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/26134\n\t* tree-ssa.c (maybe_rewrite_mem_ref_base): Handle rewriting\n\tcomplex part accesses to REALPART_EXPR and IMAGPART_EXPR.\n\t(non_rewritable_mem_ref_base): Handle complex type component\n\taccesses, constrain offsets for vector and complex extracts\n\tmore properly.\n\n\t* gcc.dg/tree-ssa/complex-6.c: New testcase.\n\nFrom-SVN: r171046", "tree": {"sha": "32a1004eb827fcb9616372fced22401fe1a5db3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32a1004eb827fcb9616372fced22401fe1a5db3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64a3d6470e5eb75c87719ba4593a356f67a51c98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64a3d6470e5eb75c87719ba4593a356f67a51c98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64a3d6470e5eb75c87719ba4593a356f67a51c98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64a3d6470e5eb75c87719ba4593a356f67a51c98/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ef13324ecab94740e5bb2f4c65e0600fe616e9ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef13324ecab94740e5bb2f4c65e0600fe616e9ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef13324ecab94740e5bb2f4c65e0600fe616e9ae"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "a535ac1e10e381c7893eca31ce8af0d3b45fd89f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64a3d6470e5eb75c87719ba4593a356f67a51c98/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64a3d6470e5eb75c87719ba4593a356f67a51c98/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=64a3d6470e5eb75c87719ba4593a356f67a51c98", "patch": "@@ -1,3 +1,12 @@\n+2011-03-16  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/26134\n+\t* tree-ssa.c (maybe_rewrite_mem_ref_base): Handle rewriting\n+\tcomplex part accesses to REALPART_EXPR and IMAGPART_EXPR.\n+\t(non_rewritable_mem_ref_base): Handle complex type component\n+\taccesses, constrain offsets for vector and complex extracts\n+\tmore properly.\n+\n 2011-03-16  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/48146"}, {"sha": "7b68766d717e6ebcc336b22e2ddb6c16b535bab1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64a3d6470e5eb75c87719ba4593a356f67a51c98/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64a3d6470e5eb75c87719ba4593a356f67a51c98/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=64a3d6470e5eb75c87719ba4593a356f67a51c98", "patch": "@@ -1,3 +1,8 @@\n+2011-03-16  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/26134\n+\t* gcc.dg/tree-ssa/complex-6.c: New testcase.\n+\n 2011-03-16  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/48146"}, {"sha": "01d1fd1195d10a9c0adfd46240088306400dce5d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/complex-6.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64a3d6470e5eb75c87719ba4593a356f67a51c98/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcomplex-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64a3d6470e5eb75c87719ba4593a356f67a51c98/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcomplex-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcomplex-6.c?ref=64a3d6470e5eb75c87719ba4593a356f67a51c98", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-optimized\" } */\n+\n+float\n+quantum_real(float _Complex a)\n+{\n+  float *p = (float *) &a;\n+  return p[0];\n+}\n+float\n+quantum_imag(float _Complex a)\n+{\n+  float *p = (float *) &a;\n+  return p[1];\n+}\n+float\n+quantum_foo(float _Complex a)\n+{\n+  float *p = (float *) &a;\n+  return p[2];\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"REALPART_EXPR\" 1 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"IMAGPART_EXPR\" 1 \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "e7e3edcf6f1f9db85b751671427b5898c7cb84a3", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64a3d6470e5eb75c87719ba4593a356f67a51c98/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64a3d6470e5eb75c87719ba4593a356f67a51c98/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=64a3d6470e5eb75c87719ba4593a356f67a51c98", "patch": "@@ -1855,6 +1855,14 @@ maybe_rewrite_mem_ref_base (tree *tp)\n \t\t\t\t\t bitsize_int (BITS_PER_UNIT),\n \t\t\t\t\t TREE_OPERAND (*tp, 1), 0));\n \t}\n+      else if (TREE_CODE (TREE_TYPE (sym)) == COMPLEX_TYPE\n+\t       && useless_type_conversion_p (TREE_TYPE (*tp),\n+\t\t\t\t\t     TREE_TYPE (TREE_TYPE (sym))))\n+\t{\n+\t  *tp = build1 (integer_zerop (TREE_OPERAND (*tp, 1))\n+\t\t\t? REALPART_EXPR : IMAGPART_EXPR,\n+\t\t\tTREE_TYPE (*tp), sym);\n+\t}\n       else if (integer_zerop (TREE_OPERAND (*tp, 1)))\n \t{\n \t  if (!useless_type_conversion_p (TREE_TYPE (*tp),\n@@ -1888,10 +1896,14 @@ non_rewritable_mem_ref_base (tree ref)\n       && TREE_CODE (TREE_OPERAND (base, 0)) == ADDR_EXPR)\n     {\n       tree decl = TREE_OPERAND (TREE_OPERAND (base, 0), 0);\n-      if (TREE_CODE (TREE_TYPE (decl)) == VECTOR_TYPE\n+      if ((TREE_CODE (TREE_TYPE (decl)) == VECTOR_TYPE\n+\t   || TREE_CODE (TREE_TYPE (decl)) == COMPLEX_TYPE)\n \t  && useless_type_conversion_p (TREE_TYPE (base),\n \t\t\t\t\tTREE_TYPE (TREE_TYPE (decl)))\n \t  && double_int_fits_in_uhwi_p (mem_ref_offset (base))\n+\t  && double_int_ucmp\n+\t       (tree_to_double_int (TYPE_SIZE_UNIT (TREE_TYPE (decl))),\n+\t\tmem_ref_offset (base)) == 1\n \t  && multiple_of_p (sizetype, TREE_OPERAND (base, 1),\n \t\t\t    TYPE_SIZE_UNIT (TREE_TYPE (base))))\n \treturn NULL_TREE;"}]}