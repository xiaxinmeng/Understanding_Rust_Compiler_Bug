{"sha": "73fb65f99815c09e599f268b6ddbdd1cc4530a54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNmYjY1Zjk5ODE1YzA5ZTU5OWYyNjhiNmRkYmRkMWNjNDUzMGE1NA==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2014-06-26T20:44:46Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2014-06-26T20:44:46Z"}, "message": "Fix a comment.\n\nFrom-SVN: r212054", "tree": {"sha": "f46ded1b961ca1957cbf09c7e265cd2a9fa9e3a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f46ded1b961ca1957cbf09c7e265cd2a9fa9e3a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73fb65f99815c09e599f268b6ddbdd1cc4530a54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73fb65f99815c09e599f268b6ddbdd1cc4530a54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73fb65f99815c09e599f268b6ddbdd1cc4530a54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73fb65f99815c09e599f268b6ddbdd1cc4530a54/comments", "author": null, "committer": null, "parents": [{"sha": "dd5e783701bbab8fd871ef8befbb9557ca205086", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd5e783701bbab8fd871ef8befbb9557ca205086", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd5e783701bbab8fd871ef8befbb9557ca205086"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "68a12ee8705aa1f22dba6fcbfa46cb6bc14fe2b2", "filename": "libstdc++-v3/testsuite/util/testsuite_allocator.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73fb65f99815c09e599f268b6ddbdd1cc4530a54/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73fb65f99815c09e599f268b6ddbdd1cc4530a54/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_allocator.h?ref=73fb65f99815c09e599f268b6ddbdd1cc4530a54", "patch": "@@ -91,7 +91,7 @@ namespace __gnu_test\n     struct check_consistent_alloc_value_type<T, Alloc, T>\n     { typedef T value_type; };\n \n-  // An allocator facade that intercepts allocate/deallocate/construct/detroy\n+  // An allocator facade that intercepts allocate/deallocate/construct/destroy\n   // calls and track them through the tracker_allocator_counter class. This\n   // class is templated on the target object type, but tracker isn't.\n   template<typename T, typename Alloc = std::allocator<T> >"}]}