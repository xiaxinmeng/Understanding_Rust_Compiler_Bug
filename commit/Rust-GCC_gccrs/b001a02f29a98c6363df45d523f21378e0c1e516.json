{"sha": "b001a02f29a98c6363df45d523f21378e0c1e516", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjAwMWEwMmYyOWE5OGM2MzYzZGY0NWQ1MjNmMjEzNzhlMGMxZTUxNg==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1995-03-02T03:33:25Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1995-03-02T03:33:25Z"}, "message": "Remove Feb 28's FUNCTION_NEEDS_STATIC_CHAIN changes.\n\nFrom-SVN: r9106", "tree": {"sha": "c4ea5bd9a29aec280cee77ce92d3c59232276d6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4ea5bd9a29aec280cee77ce92d3c59232276d6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b001a02f29a98c6363df45d523f21378e0c1e516", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b001a02f29a98c6363df45d523f21378e0c1e516", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b001a02f29a98c6363df45d523f21378e0c1e516", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b001a02f29a98c6363df45d523f21378e0c1e516/comments", "author": null, "committer": null, "parents": [{"sha": "874a07447a882ce3de66a718c9f945767ae06dd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/874a07447a882ce3de66a718c9f945767ae06dd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/874a07447a882ce3de66a718c9f945767ae06dd1"}], "stats": {"total": 27, "additions": 6, "deletions": 21}, "files": [{"sha": "f72102f3364885ae28a54f34f0d82ceb9bb02c82", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b001a02f29a98c6363df45d523f21378e0c1e516/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b001a02f29a98c6363df45d523f21378e0c1e516/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=b001a02f29a98c6363df45d523f21378e0c1e516", "patch": "@@ -4160,15 +4160,6 @@ expand_expr (exp, target, tmode, modifier)\n \n \t  /* Mark as non-local and addressable.  */\n \t  DECL_NONLOCAL (exp) = 1;\n-\n-\t  /* This is currently too late to be useful, since\n-\t     init_function_start needs to know whether a static chain\n-\t     is needed. However, it would be a useful optimization\n-\t     if we could defer setting up static chains and trampolines\n-\t     until we see that we actually need them due to references\n-\t     to non-local non-static variables.  */\n-\t  FUNCTION_NEEDS_STATIC_CHAIN (current_function_decl) = 1;\n-\n \t  mark_addressable (exp);\n \t  if (GET_CODE (DECL_RTL (exp)) != MEM)\n \t    abort ();\n@@ -6199,7 +6190,7 @@ expand_expr (exp, target, tmode, modifier)\n \n       /* Are we taking the address of a nested function?  */\n       if (TREE_CODE (TREE_OPERAND (exp, 0)) == FUNCTION_DECL\n-\t  && FUNCTION_NEEDS_STATIC_CHAIN (TREE_OPERAND (exp, 0)))\n+\t  && decl_function_context (TREE_OPERAND (exp, 0)) != 0)\n \t{\n \t  op0 = trampoline_address (TREE_OPERAND (exp, 0));\n \t  op0 = force_operand (op0, target);"}, {"sha": "4ee042b373b540e61f7a725a9ca77fcb0079d51b", "filename": "gcc/function.c", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b001a02f29a98c6363df45d523f21378e0c1e516/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b001a02f29a98c6363df45d523f21378e0c1e516/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=b001a02f29a98c6363df45d523f21378e0c1e516", "patch": "@@ -4246,18 +4246,12 @@ rtx\n lookup_static_chain (decl)\n      tree decl;\n {\n-  tree context, link;\n-\n-  if (TREE_CODE (decl) == FUNCTION_DECL\n-      ? ! FUNCTION_NEEDS_STATIC_CHAIN (decl)\n-      : ! FUNCTION_NEEDS_STATIC_CHAIN (current_function_decl))\n-    return 0;\n-  \n-  context = decl_function_context (decl);\n+  tree context = decl_function_context (decl);\n+  tree link;\n \n   if (context == 0)\n     return 0;\n-\n+  \n   /* We treat inline_function_decl as an alias for the current function\n      because that is the inline function whose vars, types, etc.\n      are being merged into the current function.\n@@ -4713,7 +4707,7 @@ init_function_start (subr, filename, line)\n   /* Nonzero if this is a nested function that uses a static chain.  */\n \n   current_function_needs_context\n-    = FUNCTION_NEEDS_STATIC_CHAIN (current_function_decl);\n+    = (decl_function_context (current_function_decl) != 0);\n \n   /* Set if a call to setjmp is seen.  */\n   current_function_calls_setjmp = 0;"}, {"sha": "cdbba0ce2a92943317e33b5e04607f1f980daa89", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b001a02f29a98c6363df45d523f21378e0c1e516/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b001a02f29a98c6363df45d523f21378e0c1e516/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=b001a02f29a98c6363df45d523f21378e0c1e516", "patch": "@@ -1969,7 +1969,7 @@ staticp (arg)\n     case FUNCTION_DECL:\n       /* Nested functions aren't static, since taking their address\n \t involves a trampoline.  */\n-      return ! FUNCTION_NEEDS_STATIC_CHAIN (arg);\n+       return decl_function_context (arg) == 0;\n     case VAR_DECL:\n       return TREE_STATIC (arg) || DECL_EXTERNAL (arg);\n "}]}