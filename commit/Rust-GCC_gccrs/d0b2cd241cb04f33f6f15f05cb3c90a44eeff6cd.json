{"sha": "d0b2cd241cb04f33f6f15f05cb3c90a44eeff6cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBiMmNkMjQxY2IwNGYzM2Y2ZjE1ZjA1Y2IzYzkwYTQ0ZWVmZjZjZA==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-07-22T11:35:28Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-07-22T11:37:10Z"}, "message": "Support dereference of pointers\n\nDereference expressions can also be pointer types not just references.\n\nFixes #588", "tree": {"sha": "ae953d2b584e42e0253c7040fed7043311dd96ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae953d2b584e42e0253c7040fed7043311dd96ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0b2cd241cb04f33f6f15f05cb3c90a44eeff6cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0b2cd241cb04f33f6f15f05cb3c90a44eeff6cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0b2cd241cb04f33f6f15f05cb3c90a44eeff6cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0b2cd241cb04f33f6f15f05cb3c90a44eeff6cd/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd825b9b5d2705023cd3faa20684b881d154a9ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd825b9b5d2705023cd3faa20684b881d154a9ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd825b9b5d2705023cd3faa20684b881d154a9ba"}], "stats": {"total": 29, "additions": 26, "deletions": 3}, "files": [{"sha": "166535acba0eed19f8d3adb93fd65fc63cc3a1a5", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.h", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b2cd241cb04f33f6f15f05cb3c90a44eeff6cd/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b2cd241cb04f33f6f15f05cb3c90a44eeff6cd/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h?ref=d0b2cd241cb04f33f6f15f05cb3c90a44eeff6cd", "patch": "@@ -1103,15 +1103,29 @@ class TypeCheckExpr : public TypeCheckBase\n   {\n     TyTy::BaseType *resolved_base\n       = TypeCheckExpr::Resolve (expr.get_expr ().get (), false);\n-    if (resolved_base->get_kind () != TyTy::TypeKind::REF)\n+\n+    bool is_valid_type\n+      = resolved_base->get_kind () == TyTy::TypeKind::REF\n+\t|| resolved_base->get_kind () == TyTy::TypeKind::POINTER;\n+    if (!is_valid_type)\n       {\n \trust_error_at (expr.get_locus (), \"expected reference type got %s\",\n \t\t       resolved_base->as_string ().c_str ());\n \treturn;\n       }\n \n-    TyTy::ReferenceType *ref_base = (TyTy::ReferenceType *) resolved_base;\n-    infered = ref_base->get_base ()->clone ();\n+    if (resolved_base->get_kind () == TyTy::TypeKind::REF)\n+      {\n+\tTyTy::ReferenceType *ref_base\n+\t  = static_cast<TyTy::ReferenceType *> (resolved_base);\n+\tinfered = ref_base->get_base ()->clone ();\n+      }\n+    else\n+      {\n+\tTyTy::PointerType *ref_base\n+\t  = static_cast<TyTy::PointerType *> (resolved_base);\n+\tinfered = ref_base->get_base ()->clone ();\n+      }\n   }\n \n private:"}, {"sha": "f283411abe2be1c2e86f8771d88e50a94f2aff66", "filename": "gcc/testsuite/rust/compile/torture/pointer1.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b2cd241cb04f33f6f15f05cb3c90a44eeff6cd/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fpointer1.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b2cd241cb04f33f6f15f05cb3c90a44eeff6cd/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fpointer1.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fpointer1.rs?ref=d0b2cd241cb04f33f6f15f05cb3c90a44eeff6cd", "patch": "@@ -0,0 +1,9 @@\n+pub fn main() {\n+    let mut num = 2;\n+    let r1: *const i32 = &num;\n+    let r2 = unsafe { *r1 } + unsafe { *r1 };\n+    let r3 = num;\n+    num = 4;\n+    let r4 = num + unsafe { *r1 } * r3;\n+    let _eightteen = r2 + r3 + r4;\n+}"}]}