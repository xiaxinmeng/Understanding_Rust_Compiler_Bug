{"sha": "f2a2c4b5730db5d407688a732210b4c933515c0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjJhMmM0YjU3MzBkYjVkNDA3Njg4YTczMjIxMGI0YzkzMzUxNWMwYw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2014-04-22T14:48:47Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2014-04-22T14:48:47Z"}, "message": "Improve sparc_init_modes readability\n\n        * config/sparc/sparc.c (sparc_init_modes): Hoist GET_MODE_SIZE\n        computation to the top of the loop.\n\nFrom-SVN: r209637", "tree": {"sha": "4f42846c59f1ba64745e207ca637d73280427f14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f42846c59f1ba64745e207ca637d73280427f14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2a2c4b5730db5d407688a732210b4c933515c0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2a2c4b5730db5d407688a732210b4c933515c0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2a2c4b5730db5d407688a732210b4c933515c0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2a2c4b5730db5d407688a732210b4c933515c0c/comments", "author": null, "committer": null, "parents": [{"sha": "53e5ace2e9b7a1c48d5ca0cd1d66215e89075ee8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53e5ace2e9b7a1c48d5ca0cd1d66215e89075ee8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53e5ace2e9b7a1c48d5ca0cd1d66215e89075ee8"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "eeaa5e44146eaf9416b30d86ca8f206884e1022e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2a2c4b5730db5d407688a732210b4c933515c0c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2a2c4b5730db5d407688a732210b4c933515c0c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2a2c4b5730db5d407688a732210b4c933515c0c", "patch": "@@ -1,3 +1,8 @@\n+2014-04-22  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/sparc/sparc.c (sparc_init_modes): Hoist GET_MODE_SIZE\n+\tcomputation to the top of the loop.\n+\n 2014-04-22  Renlin  <renlin.li@arm.com>\n \t    Jiong Wang  <jiong.wang@arm.com>\n "}, {"sha": "7f166091d4390e64b28df4e850f1ea27dbb2b03c", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2a2c4b5730db5d407688a732210b4c933515c0c/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2a2c4b5730db5d407688a732210b4c933515c0c/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=f2a2c4b5730db5d407688a732210b4c933515c0c", "patch": "@@ -4822,41 +4822,43 @@ sparc_init_modes (void)\n   for (i = 0; i < NUM_MACHINE_MODES; i++)\n     {\n       enum machine_mode m = (enum machine_mode) i;\n+      unsigned int size = GET_MODE_SIZE (m);\n+\n       switch (GET_MODE_CLASS (m))\n \t{\n \tcase MODE_INT:\n \tcase MODE_PARTIAL_INT:\n \tcase MODE_COMPLEX_INT:\n-\t  if (GET_MODE_SIZE (m) < 4)\n+\t  if (size < 4)\n \t    sparc_mode_class[i] = 1 << (int) H_MODE;\n-\t  else if (GET_MODE_SIZE (m) == 4)\n+\t  else if (size == 4)\n \t    sparc_mode_class[i] = 1 << (int) S_MODE;\n-\t  else if (GET_MODE_SIZE (m) == 8)\n+\t  else if (size == 8)\n \t    sparc_mode_class[i] = 1 << (int) D_MODE;\n-\t  else if (GET_MODE_SIZE (m) == 16)\n+\t  else if (size == 16)\n \t    sparc_mode_class[i] = 1 << (int) T_MODE;\n-\t  else if (GET_MODE_SIZE (m) == 32)\n+\t  else if (size == 32)\n \t    sparc_mode_class[i] = 1 << (int) O_MODE;\n \t  else\n \t    sparc_mode_class[i] = 0;\n \t  break;\n \tcase MODE_VECTOR_INT:\n-\t  if (GET_MODE_SIZE (m) == 4)\n+\t  if (size == 4)\n \t    sparc_mode_class[i] = 1 << (int) SF_MODE;\n-\t  else if (GET_MODE_SIZE (m) == 8)\n+\t  else if (size == 8)\n \t    sparc_mode_class[i] = 1 << (int) DF_MODE;\n \t  else\n \t    sparc_mode_class[i] = 0;\n \t  break;\n \tcase MODE_FLOAT:\n \tcase MODE_COMPLEX_FLOAT:\n-\t  if (GET_MODE_SIZE (m) == 4)\n+\t  if (size == 4)\n \t    sparc_mode_class[i] = 1 << (int) SF_MODE;\n-\t  else if (GET_MODE_SIZE (m) == 8)\n+\t  else if (size == 8)\n \t    sparc_mode_class[i] = 1 << (int) DF_MODE;\n-\t  else if (GET_MODE_SIZE (m) == 16)\n+\t  else if (size == 16)\n \t    sparc_mode_class[i] = 1 << (int) TF_MODE;\n-\t  else if (GET_MODE_SIZE (m) == 32)\n+\t  else if (size == 32)\n \t    sparc_mode_class[i] = 1 << (int) OF_MODE;\n \t  else\n \t    sparc_mode_class[i] = 0;"}]}