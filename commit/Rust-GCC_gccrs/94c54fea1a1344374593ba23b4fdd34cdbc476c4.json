{"sha": "94c54fea1a1344374593ba23b4fdd34cdbc476c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRjNTRmZWExYTEzNDQzNzQ1OTNiYTIzYjRmZGQzNGNkYmM0NzZjNA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2008-01-21T15:54:41Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-01-21T15:54:41Z"}, "message": "regmove.c (fixup_match_1): Update call crossed frequencies.\n\n2008-01-21  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* regmove.c (fixup_match_1): Update call crossed frequencies.\n\nFrom-SVN: r131695", "tree": {"sha": "6aa363b70aa406caaf7b43340f917a2cee8f5839", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6aa363b70aa406caaf7b43340f917a2cee8f5839"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94c54fea1a1344374593ba23b4fdd34cdbc476c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94c54fea1a1344374593ba23b4fdd34cdbc476c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94c54fea1a1344374593ba23b4fdd34cdbc476c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94c54fea1a1344374593ba23b4fdd34cdbc476c4/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c54e3854ad73ce0c5f0e70782c7d7ba184521272", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c54e3854ad73ce0c5f0e70782c7d7ba184521272", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c54e3854ad73ce0c5f0e70782c7d7ba184521272"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "4263dab1c0c2f30a5d1161e148b67c0a9ddee5ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94c54fea1a1344374593ba23b4fdd34cdbc476c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94c54fea1a1344374593ba23b4fdd34cdbc476c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94c54fea1a1344374593ba23b4fdd34cdbc476c4", "patch": "@@ -1,3 +1,7 @@\n+2008-01-21  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* regmove.c (fixup_match_1): Update call crossed frequencies.\n+\n 2008-01-21  Richard Guenther  <rguenther@suse.de>\n \n \tPR c/34885"}, {"sha": "5a2f9c92ed971a932ba5fc1a8b294f0f1fd06001", "filename": "gcc/regmove.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94c54fea1a1344374593ba23b4fdd34cdbc476c4/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94c54fea1a1344374593ba23b4fdd34cdbc476c4/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=94c54fea1a1344374593ba23b4fdd34cdbc476c4", "patch": "@@ -1695,7 +1695,7 @@ fixup_match_1 (rtx insn, rtx set, rtx src, rtx src_subreg, rtx dst,\n   rtx p;\n   rtx post_inc = 0, post_inc_set = 0, search_end = 0;\n   int success = 0;\n-  int num_calls = 0, s_num_calls = 0;\n+  int num_calls = 0, freq_calls = 0, s_num_calls = 0, s_freq_calls = 0;\n   enum rtx_code code = NOTE;\n   HOST_WIDE_INT insn_const = 0, newconst = 0;\n   rtx overlap = 0; /* need to move insn ? */\n@@ -1887,10 +1887,13 @@ fixup_match_1 (rtx insn, rtx set, rtx src, rtx src_subreg, rtx dst,\n \t    break;\n \n \t  num_calls++;\n+\t  freq_calls += REG_FREQ_FROM_BB  (BLOCK_FOR_INSN (p));\n \n \t  if (src_note)\n-\t    s_num_calls++;\n-\n+\t    {\n+\t      s_num_calls++;\n+\t      s_freq_calls += REG_FREQ_FROM_BB  (BLOCK_FOR_INSN (p));\n+\t    }\n \t}\n     }\n \n@@ -1939,7 +1942,7 @@ fixup_match_1 (rtx insn, rtx set, rtx src, rtx src_subreg, rtx dst,\n     {\n       rtx note = find_reg_note (insn, REG_EQUAL, NULL_RTX);\n       rtx q, set2 = NULL_RTX;\n-      int num_calls2 = 0, s_length2 = 0;\n+      int num_calls2 = 0, s_length2 = 0, freq_calls2 = 0;\n \n       if (note && CONSTANT_P (XEXP (note, 0)))\n \t{\n@@ -1968,14 +1971,18 @@ fixup_match_1 (rtx insn, rtx set, rtx src, rtx src_subreg, rtx dst,\n \t\t  break;\n \t\t}\n \t      if (CALL_P (p))\n-\t\tnum_calls2++;\n+\t\t{\n+\t\t  num_calls2++;\n+\t\t  freq_calls2 += REG_FREQ_FROM_BB  (BLOCK_FOR_INSN (p));\n+\t\t}\n \t    }\n \t  if (q && set2 && SET_DEST (set2) == src && CONSTANT_P (SET_SRC (set2))\n \t      && validate_change (insn, &SET_SRC (set), XEXP (note, 0), 0))\n \t    {\n \t      delete_insn (q);\n \t      INC_REG_N_SETS (REGNO (src), -1);\n \t      REG_N_CALLS_CROSSED (REGNO (src)) -= num_calls2;\n+\t      REG_FREQ_CALLS_CROSSED (REGNO (src)) -= freq_calls2;\n \t      REG_LIVE_LENGTH (REGNO (src)) -= s_length2;\n \t      insn_const = 0;\n \t    }\n@@ -2044,12 +2051,14 @@ fixup_match_1 (rtx insn, rtx set, rtx src, rtx src_subreg, rtx dst,\n       REG_NOTES (p) = src_note;\n \n       REG_N_CALLS_CROSSED (REGNO (src)) += s_num_calls;\n+      REG_FREQ_CALLS_CROSSED (REGNO (src)) += s_freq_calls;\n     }\n \n   INC_REG_N_SETS (REGNO (src), 1);\n   INC_REG_N_SETS (REGNO (dst), -1);\n \n   REG_N_CALLS_CROSSED (REGNO (dst)) -= num_calls;\n+  REG_FREQ_CALLS_CROSSED (REGNO (dst)) -= freq_calls;\n \n   REG_LIVE_LENGTH (REGNO (src)) += s_length;\n   if (REG_LIVE_LENGTH (REGNO (dst)) >= 0)"}]}