{"sha": "815839a3844ec00f5f8700eb377fde8842082e96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE1ODM5YTM4NDRlYzAwZjVmODcwMGViMzc3ZmRlODg0MjA4MmU5Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-10T12:52:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-10T12:52:31Z"}, "message": "[multiple changes]\n\n2013-10-10  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch4.adb (Process_Transient_Object): For any context other\n\tthan a simple return statement, insert the finalization action\n\tafter the context, not as an action on the context (which will\n\tget evaluated before it).\n\n2013-10-10  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* einfo.adb (Write_Field19_Name): Correct the\n\tstring name of attribute Default_Aspect_Value.\n\n2013-10-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_type.adb (Interface_Present_In_Ancestor): The progenitor\n\tin a type declaration may be an interface subtype.\n\n2013-10-10  Robert Dewar  <dewar@adacore.com>\n\n\t* sinfo.ads (Do_Range_Check): Add special note on handling of\n\trange checks for Succ and Pred.\n\n2013-10-10  Robert Dewar  <dewar@adacore.com>\n\n\t* erroutc.adb (Output_Msg_Text): Remove VMS special handling.\n\n2013-10-10  Robert Dewar  <dewar@adacore.com>\n\n\t* a-chahan.ads, a-chahan.adb (Is_Line_Terminator): New function\n\t(Is_Mark): New function.\n\t(Is_Other_Format): New function.\n\t(Is_Punctuation_Connector): New function.\n\t(Is_Space): New function.\n\nFrom-SVN: r203370", "tree": {"sha": "fac9cdc0f843ae4f46b205887928d87ec2d26bb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fac9cdc0f843ae4f46b205887928d87ec2d26bb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/815839a3844ec00f5f8700eb377fde8842082e96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/815839a3844ec00f5f8700eb377fde8842082e96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/815839a3844ec00f5f8700eb377fde8842082e96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/815839a3844ec00f5f8700eb377fde8842082e96/comments", "author": null, "committer": null, "parents": [{"sha": "82893775d23778168e4ce6be510d17641e27e586", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82893775d23778168e4ce6be510d17641e27e586", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82893775d23778168e4ce6be510d17641e27e586"}], "stats": {"total": 434, "additions": 134, "deletions": 300}, "files": [{"sha": "59c7e497c7304192a4d69c34f7576801b78754ce", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/815839a3844ec00f5f8700eb377fde8842082e96/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/815839a3844ec00f5f8700eb377fde8842082e96/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=815839a3844ec00f5f8700eb377fde8842082e96", "patch": "@@ -1,3 +1,37 @@\n+2013-10-10  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch4.adb (Process_Transient_Object): For any context other\n+\tthan a simple return statement, insert the finalization action\n+\tafter the context, not as an action on the context (which will\n+\tget evaluated before it).\n+\n+2013-10-10  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* einfo.adb (Write_Field19_Name): Correct the\n+\tstring name of attribute Default_Aspect_Value.\n+\n+2013-10-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_type.adb (Interface_Present_In_Ancestor): The progenitor\n+\tin a type declaration may be an interface subtype.\n+\n+2013-10-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sinfo.ads (Do_Range_Check): Add special note on handling of\n+\trange checks for Succ and Pred.\n+\n+2013-10-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* erroutc.adb (Output_Msg_Text): Remove VMS special handling.\n+\n+2013-10-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-chahan.ads, a-chahan.adb (Is_Line_Terminator): New function\n+\t(Is_Mark): New function.\n+\t(Is_Other_Format): New function.\n+\t(Is_Punctuation_Connector): New function.\n+\t(Is_Space): New function.\n+\n 2013-10-10  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_aggr.adb (Resolve_Array_Aggregate): Redo duplicate/missing"}, {"sha": "f95a7bb0eaf69681997dcd1aca8808003b2bf4e7", "filename": "gcc/ada/a-chahan.adb", "status": "modified", "additions": 53, "deletions": 6, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/815839a3844ec00f5f8700eb377fde8842082e96/gcc%2Fada%2Fa-chahan.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/815839a3844ec00f5f8700eb377fde8842082e96/gcc%2Fada%2Fa-chahan.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chahan.adb?ref=815839a3844ec00f5f8700eb377fde8842082e96", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -49,6 +49,7 @@ package body Ada.Characters.Handling is\n    Hex_Digit  : constant Character_Flags := 16;\n    Digit      : constant Character_Flags := 32;\n    Special    : constant Character_Flags := 64;\n+   Line_Term  : constant Character_Flags := 128;\n \n    Letter     : constant Character_Flags := Lower or Upper;\n    Alphanum   : constant Character_Flags := Letter or Digit;\n@@ -66,10 +67,10 @@ package body Ada.Characters.Handling is\n      BEL                         => Control,\n      BS                          => Control,\n      HT                          => Control,\n-     LF                          => Control,\n-     VT                          => Control,\n-     FF                          => Control,\n-     CR                          => Control,\n+     LF                          => Control + Line_Term,\n+     VT                          => Control + Line_Term,\n+     FF                          => Control + Line_Term,\n+     CR                          => Control + Line_Term,\n      SO                          => Control,\n      SI                          => Control,\n \n@@ -141,7 +142,7 @@ package body Ada.Characters.Handling is\n      BPH                         => Control,\n      NBH                         => Control,\n      Reserved_132                => Control,\n-     NEL                         => Control,\n+     NEL                         => Control + Line_Term,\n      SSA                         => Control,\n      ESA                         => Control,\n      HTS                         => Control,\n@@ -370,6 +371,15 @@ package body Ada.Characters.Handling is\n       return (Char_Map (Item) and Letter) /= 0;\n    end Is_Letter;\n \n+   ------------------------\n+   -- Is_Line_Terminator --\n+   ------------------------\n+\n+   function Is_Line_Terminator (Item : Character) return Boolean is\n+   begin\n+      return (Char_Map (Item) and Line_Term) /= 0;\n+   end Is_Line_Terminator;\n+\n    --------------\n    -- Is_Lower --\n    --------------\n@@ -379,6 +389,43 @@ package body Ada.Characters.Handling is\n       return (Char_Map (Item) and Lower) /= 0;\n    end Is_Lower;\n \n+   -------------\n+   -- Is_Mark --\n+   -------------\n+\n+   function Is_Mark (Item : Character) return Boolean is\n+      pragma Unreferenced (Item);\n+   begin\n+      return False;\n+   end Is_Mark;\n+\n+   ---------------------\n+   -- Is_Other_Format --\n+   ---------------------\n+\n+   function Is_Other_Format (Item : Character) return Boolean is\n+   begin\n+      return Item = Soft_Hyphen;\n+   end Is_Other_Format;\n+\n+   ------------------------------\n+   -- Is_Punctuation_Connector --\n+   ------------------------------\n+\n+   function Is_Punctuation_Connector (Item : Character) return Boolean is\n+   begin\n+      return Item = '_';\n+   end Is_Punctuation_Connector;\n+\n+   --------------\n+   -- Is_Space --\n+   --------------\n+\n+   function Is_Space (Item : Character) return Boolean is\n+   begin\n+      return Item = ' ' or else Item = No_Break_Space;\n+   end Is_Space;\n+\n    ----------------\n    -- Is_Special --\n    ----------------"}, {"sha": "ca52f94730c4d59f932eb112a715eeb6aa7a1934", "filename": "gcc/ada/a-chahan.ads", "status": "modified", "additions": 31, "deletions": 21, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/815839a3844ec00f5f8700eb377fde8842082e96/gcc%2Fada%2Fa-chahan.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/815839a3844ec00f5f8700eb377fde8842082e96/gcc%2Fada%2Fa-chahan.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chahan.ads?ref=815839a3844ec00f5f8700eb377fde8842082e96", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -42,18 +42,23 @@ package Ada.Characters.Handling is\n    -- Character Classification Functions --\n    ----------------------------------------\n \n-   function Is_Control           (Item : Character) return Boolean;\n-   function Is_Graphic           (Item : Character) return Boolean;\n-   function Is_Letter            (Item : Character) return Boolean;\n-   function Is_Lower             (Item : Character) return Boolean;\n-   function Is_Upper             (Item : Character) return Boolean;\n-   function Is_Basic             (Item : Character) return Boolean;\n-   function Is_Digit             (Item : Character) return Boolean;\n-   function Is_Decimal_Digit     (Item : Character) return Boolean\n+   function Is_Control               (Item : Character) return Boolean;\n+   function Is_Graphic               (Item : Character) return Boolean;\n+   function Is_Letter                (Item : Character) return Boolean;\n+   function Is_Lower                 (Item : Character) return Boolean;\n+   function Is_Upper                 (Item : Character) return Boolean;\n+   function Is_Basic                 (Item : Character) return Boolean;\n+   function Is_Digit                 (Item : Character) return Boolean;\n+   function Is_Decimal_Digit         (Item : Character) return Boolean\n      renames Is_Digit;\n-   function Is_Hexadecimal_Digit (Item : Character) return Boolean;\n-   function Is_Alphanumeric      (Item : Character) return Boolean;\n-   function Is_Special           (Item : Character) return Boolean;\n+   function Is_Hexadecimal_Digit     (Item : Character) return Boolean;\n+   function Is_Alphanumeric          (Item : Character) return Boolean;\n+   function Is_Special               (Item : Character) return Boolean;\n+   function Is_Line_Terminator       (Item : Character) return Boolean;\n+   function Is_Mark                  (Item : Character) return Boolean;\n+   function Is_Other_Format          (Item : Character) return Boolean;\n+   function Is_Punctuation_Connector (Item : Character) return Boolean;\n+   function Is_Space                 (Item : Character) return Boolean;\n \n    ---------------------------------------------------\n    -- Conversion Functions for Character and String --\n@@ -129,22 +134,27 @@ package Ada.Characters.Handling is\n      (Item : String) return Wide_String;\n \n private\n+   pragma Inline (Is_Alphanumeric);\n+   pragma Inline (Is_Basic);\n+   pragma Inline (Is_Character);\n    pragma Inline (Is_Control);\n+   pragma Inline (Is_Digit);\n    pragma Inline (Is_Graphic);\n+   pragma Inline (Is_Hexadecimal_Digit);\n+   pragma Inline (Is_ISO_646);\n    pragma Inline (Is_Letter);\n+   pragma Inline (Is_Line_Terminator);\n    pragma Inline (Is_Lower);\n-   pragma Inline (Is_Upper);\n-   pragma Inline (Is_Basic);\n-   pragma Inline (Is_Digit);\n-   pragma Inline (Is_Hexadecimal_Digit);\n-   pragma Inline (Is_Alphanumeric);\n+   pragma Inline (Is_Mark);\n+   pragma Inline (Is_Other_Format);\n+   pragma Inline (Is_Punctuation_Connector);\n+   pragma Inline (Is_Space);\n    pragma Inline (Is_Special);\n-   pragma Inline (To_Lower);\n-   pragma Inline (To_Upper);\n+   pragma Inline (Is_Upper);\n    pragma Inline (To_Basic);\n-   pragma Inline (Is_ISO_646);\n-   pragma Inline (Is_Character);\n    pragma Inline (To_Character);\n+   pragma Inline (To_Lower);\n+   pragma Inline (To_Upper);\n    pragma Inline (To_Wide_Character);\n \n end Ada.Characters.Handling;"}, {"sha": "8314834af681bc9518b4f51dbe6b012f2be4ce22", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/815839a3844ec00f5f8700eb377fde8842082e96/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/815839a3844ec00f5f8700eb377fde8842082e96/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=815839a3844ec00f5f8700eb377fde8842082e96", "patch": "@@ -8741,7 +8741,7 @@ package body Einfo is\n             Write_Str (\"Corresponding_Discriminant\");\n \n          when Scalar_Kind                                  =>\n-            Write_Str (\"Default_Value\");\n+            Write_Str (\"Default_Aspect_Value\");\n \n          when E_Array_Type                                 =>\n             Write_Str (\"Default_Component_Value\");"}, {"sha": "e2631f84e7f7e272ae2b57817582627df9cb2991", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 0, "deletions": 262, "changes": 262, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/815839a3844ec00f5f8700eb377fde8842082e96/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/815839a3844ec00f5f8700eb377fde8842082e96/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=815839a3844ec00f5f8700eb377fde8842082e96", "patch": "@@ -451,275 +451,13 @@ package body Erroutc is\n       Split    : Natural;\n       Start    : Natural;\n \n-      function Get_VMS_Warn_String (W : Character) return String;\n-      --  On VMS, given a warning character W, returns VMS command string\n-      --  that corresponds to that warning character\n-\n-      -------------------------\n-      -- Get_VMS_Warn_String --\n-      -------------------------\n-\n-      function Get_VMS_Warn_String (W : Character) return String is\n-         S, E : Natural;\n-         --  Start and end of VMS_QUALIFIER below\n-\n-         P : Natural;\n-         --  Scans through string\n-\n-         --  The following is a copy of the S_GCC_Warn string from the package\n-         --  VMS_Data. If we made that package part of the compiler sources\n-         --  we could just with it and avoid the duplication ???\n-\n-         V : constant String :=          \"/WARNINGS=\"                      &\n-                                            \"DEFAULT \"                     &\n-                                               \"!-gnatws,!-gnatwe \"        &\n-                                            \"ALL \"                         &\n-                                               \"-gnatwa \"                  &\n-                                            \"EVERY \"                       &\n-                                               \"-gnatw.e \"                 &\n-                                            \"OPTIONAL \"                    &\n-                                               \"-gnatwa \"                  &\n-                                            \"NOOPTIONAL \"                  &\n-                                               \"-gnatwA \"                  &\n-                                            \"NOALL \"                       &\n-                                               \"-gnatwA \"                  &\n-                                            \"ALL_GCC \"                     &\n-                                               \"-Wall \"                    &\n-                                            \"FAILING_ASSERTIONS \"          &\n-                                               \"-gnatw.a \"                 &\n-                                            \"NO_FAILING_ASSERTIONS \"       &\n-                                               \"-gnatw.A \"                 &\n-                                            \"BAD_FIXED_VALUES \"            &\n-                                               \"-gnatwb \"                  &\n-                                            \"NO_BAD_FIXED_VALUES \"         &\n-                                               \"-gnatwB \"                  &\n-                                            \"BIASED_REPRESENTATION \"       &\n-                                               \"-gnatw.b \"                 &\n-                                            \"NO_BIASED_REPRESENTATION \"    &\n-                                               \"-gnatw.B \"                 &\n-                                            \"CONDITIONALS \"                &\n-                                               \"-gnatwc \"                  &\n-                                            \"NOCONDITIONALS \"              &\n-                                               \"-gnatwC \"                  &\n-                                            \"MISSING_COMPONENT_CLAUSES \"   &\n-                                               \"-gnatw.c \"                 &\n-                                            \"NOMISSING_COMPONENT_CLAUSES \" &\n-                                               \"-gnatw.C \"                 &\n-                                            \"IMPLICIT_DEREFERENCE \"        &\n-                                               \"-gnatwd \"                  &\n-                                            \"NO_IMPLICIT_DEREFERENCE \"     &\n-                                               \"-gnatwD \"                  &\n-                                            \"TAG_WARNINGS \"                &\n-                                               \"-gnatw.d \"                 &\n-                                            \"NOTAG_WARNINGS \"              &\n-                                               \"-gnatw.D \"                 &\n-                                            \"ERRORS \"                      &\n-                                               \"-gnatwe \"                  &\n-                                            \"UNREFERENCED_FORMALS \"        &\n-                                               \"-gnatwf \"                  &\n-                                            \"NOUNREFERENCED_FORMALS \"      &\n-                                               \"-gnatwF \"                  &\n-                                            \"UNRECOGNIZED_PRAGMAS \"        &\n-                                               \"-gnatwg \"                  &\n-                                            \"NOUNRECOGNIZED_PRAGMAS \"      &\n-                                               \"-gnatwG \"                  &\n-                                            \"HIDING \"                      &\n-                                               \"-gnatwh \"                  &\n-                                            \"NOHIDING \"                    &\n-                                               \"-gnatwH \"                  &\n-                                            \"AVOIDGAPS \"                   &\n-                                               \"-gnatw.h \"                 &\n-                                            \"NOAVOIDGAPS \"                 &\n-                                               \"-gnatw.H \"                 &\n-                                            \"IMPLEMENTATION \"              &\n-                                               \"-gnatwi \"                  &\n-                                            \"NOIMPLEMENTATION \"            &\n-                                               \"-gnatwI \"                  &\n-                                            \"OBSOLESCENT \"                 &\n-                                               \"-gnatwj \"                  &\n-                                            \"NOOBSOLESCENT \"               &\n-                                               \"-gnatwJ \"                  &\n-                                            \"CONSTANT_VARIABLES \"          &\n-                                               \"-gnatwk \"                  &\n-                                            \"NOCONSTANT_VARIABLES \"        &\n-                                               \"-gnatwK \"                  &\n-                                            \"STANDARD_REDEFINITION \"       &\n-                                               \"-gnatw.k \"                 &\n-                                            \"NOSTANDARD_REDEFINITION \"     &\n-                                               \"-gnatw.K \"                 &\n-                                            \"ELABORATION \"                 &\n-                                               \"-gnatwl \"                  &\n-                                            \"NOELABORATION \"               &\n-                                               \"-gnatwL \"                  &\n-                                            \"MODIFIED_UNREF \"              &\n-                                               \"-gnatwm \"                  &\n-                                            \"NOMODIFIED_UNREF \"            &\n-                                               \"-gnatwM \"                  &\n-                                            \"SUSPICIOUS_MODULUS \"          &\n-                                               \"-gnatw.m \"                 &\n-                                            \"NOSUSPICIOUS_MODULUS \"        &\n-                                               \"-gnatw.M \"                 &\n-                                            \"NORMAL \"                      &\n-                                               \"-gnatwn \"                  &\n-                                            \"OVERLAYS \"                    &\n-                                               \"-gnatwo \"                  &\n-                                            \"NOOVERLAYS \"                  &\n-                                               \"-gnatwO \"                  &\n-                                            \"OUT_PARAM_UNREF \"             &\n-                                               \"-gnatw.o \"                 &\n-                                            \"NOOUT_PARAM_UNREF \"           &\n-                                               \"-gnatw.O \"                 &\n-                                            \"INEFFECTIVE_INLINE \"          &\n-                                               \"-gnatwp \"                  &\n-                                            \"NOINEFFECTIVE_INLINE \"        &\n-                                               \"-gnatwP \"                  &\n-                                            \"MISSING_PARENS \"              &\n-                                               \"-gnatwq \"                  &\n-                                            \"PARAMETER_ORDER \"             &\n-                                               \"-gnatw.p \"                 &\n-                                            \"NOPARAMETER_ORDER \"           &\n-                                               \"-gnatw.P \"                 &\n-                                            \"NOMISSING_PARENS \"            &\n-                                               \"-gnatwQ \"                  &\n-                                            \"REDUNDANT \"                   &\n-                                               \"-gnatwr \"                  &\n-                                            \"NOREDUNDANT \"                 &\n-                                               \"-gnatwR \"                  &\n-                                            \"OBJECT_RENAMES \"              &\n-                                               \"-gnatw.r \"                 &\n-                                            \"NOOBJECT_RENAMES \"            &\n-                                               \"-gnatw.R \"                 &\n-                                            \"SUPPRESS \"                    &\n-                                               \"-gnatws \"                  &\n-                                            \"OVERRIDING_SIZE \"             &\n-                                               \"-gnatw.s \"                 &\n-                                            \"NOOVERRIDING_SIZE \"           &\n-                                               \"-gnatw.S \"                 &\n-                                            \"DELETED_CODE \"                &\n-                                               \"-gnatwt \"                  &\n-                                            \"NODELETED_CODE \"              &\n-                                               \"-gnatwT \"                  &\n-                                            \"UNINITIALIZED \"               &\n-                                               \"-Wuninitialized \"          &\n-                                            \"UNUSED \"                      &\n-                                               \"-gnatwu \"                  &\n-                                            \"NOUNUSED \"                    &\n-                                               \"-gnatwU \"                  &\n-                                            \"UNORDERED_ENUMERATIONS \"      &\n-                                               \"-gnatw.u \"                 &\n-                                            \"NOUNORDERED_ENUMERATIONS \"    &\n-                                               \"-gnatw.U \"                 &\n-                                            \"VARIABLES_UNINITIALIZED \"     &\n-                                               \"-gnatwv \"                  &\n-                                            \"NOVARIABLES_UNINITIALIZED \"   &\n-                                               \"-gnatwV \"                  &\n-                                            \"REVERSE_BIT_ORDER \"           &\n-                                               \"-gnatw.v \"                 &\n-                                            \"NOREVERSE_BIT_ORDER \"         &\n-                                               \"-gnatw.V \"                 &\n-                                            \"LOWBOUND_ASSUMED \"            &\n-                                               \"-gnatww \"                  &\n-                                            \"NOLOWBOUND_ASSUMED \"          &\n-                                               \"-gnatwW \"                  &\n-                                            \"WARNINGS_OFF_PRAGMAS \"        &\n-                                               \"-gnatw.w \"                 &\n-                                            \"NO_WARNINGS_OFF_PRAGMAS \"     &\n-                                               \"-gnatw.W \"                 &\n-                                            \"IMPORT_EXPORT_PRAGMAS \"       &\n-                                               \"-gnatwx \"                  &\n-                                            \"NOIMPORT_EXPORT_PRAGMAS \"     &\n-                                               \"-gnatwX \"                  &\n-                                            \"LOCAL_RAISE_HANDLING \"        &\n-                                               \"-gnatw.x \"                 &\n-                                            \"NOLOCAL_RAISE_HANDLING \"      &\n-                                               \"-gnatw.X \"                 &\n-                                            \"ADA_2005_COMPATIBILITY \"      &\n-                                               \"-gnatwy \"                  &\n-                                            \"NOADA_2005_COMPATIBILITY \"    &\n-                                               \"-gnatwY \"                  &\n-                                            \"UNCHECKED_CONVERSIONS \"       &\n-                                               \"-gnatwz \"                  &\n-                                            \"NOUNCHECKED_CONVERSIONS \"     &\n-                                               \"-gnatwZ\";\n-\n-      --  Start of processing for Get_VMS_Warn_String\n-\n-      begin\n-         --  This function works by inspecting the string S_GCC_Warn in the\n-         --  package VMS_Data. We are looking for\n-\n-         --     space VMS_QUALIFIER space -gnatwq\n-\n-         --  where q is the lower case letter W if W is lower case, and the\n-         --  two character string .W if W is upper case. If we find a match\n-         --  we return VMS_QUALIFIER, otherwise we return empty (this should\n-         --  be an error, but no point in bombing over something so trivial).\n-\n-         P := 1;\n-\n-         --  Loop through entries in S_GCC_Warn\n-\n-         loop\n-            --  Scan to next blank\n-\n-            loop\n-               if P >= V'Last - 1 then\n-                  return \"\";\n-               end if;\n-\n-               exit when V (P) = ' ' and then V (P + 1) in 'A' .. 'Z';\n-               P := P + 1;\n-            end loop;\n-\n-            P := P + 1;\n-            S := P;\n-\n-            --  Scan to blank at end of VMS_QUALIFIER\n-\n-            loop\n-               if P >= V'Last then\n-                  return \"\";\n-               end if;\n-\n-               exit when V (P) = ' ';\n-               P := P + 1;\n-            end loop;\n-\n-            E := P - 1;\n-\n-            --  See if this entry matches, and if so, return it\n-\n-            if V (P + 1 .. P + 6) = \"-gnatw\"\n-              and then\n-                ((W in 'a' .. 'z' and then V (P + 7) = W)\n-                    or else\n-                 (V (P + 7) = '.' and then Fold_Upper (V (P + 8)) = W))\n-            then\n-               return V (S .. E);\n-            end if;\n-         end loop;\n-      end Get_VMS_Warn_String;\n-\n-   --  Start of processing for Output_Msg_Text\n-\n    begin\n       --  Add warning doc tag if needed\n \n       if Warn and then Warn_Chr /= ' ' then\n          if Warn_Chr = '?' then\n             Warn_Tag := new String'(\" [enabled by default]\");\n \n-         elsif OpenVMS_On_Target then\n-            declare\n-               Qual : constant String := Get_VMS_Warn_String (Warn_Chr);\n-            begin\n-               if Qual = \"\" then\n-                  Warn_Tag := new String'(Qual);\n-               else\n-                  Warn_Tag := new String'(\" [\" & Qual & ']');\n-               end if;\n-            end;\n-\n          elsif Warn_Chr in 'a' .. 'z' then\n             Warn_Tag := new String'(\" [-gnatw\" & Warn_Chr & ']');\n "}, {"sha": "8d6dfc4da0820abe0c9b885bb67b1ed9202002c9", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/815839a3844ec00f5f8700eb377fde8842082e96/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/815839a3844ec00f5f8700eb377fde8842082e96/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=815839a3844ec00f5f8700eb377fde8842082e96", "patch": "@@ -12402,15 +12402,7 @@ package body Exp_Ch4 is\n                  Name       => New_Reference_To (Temp_Id, Loc),\n                  Expression => Make_Null (Loc))));\n \n-         --  Use the Actions list of logical operators when inserting the\n-         --  finalization call. This ensures that all transient controlled\n-         --  objects are finalized after the operators are evaluated.\n-\n-         if Nkind_In (Context, N_And_Then, N_Or_Else) then\n-            Insert_Action (Context, Fin_Call);\n-         else\n-            Insert_Action_After (Context, Fin_Call);\n-         end if;\n+         Insert_Action_After (Context, Fin_Call);\n       end if;\n    end Process_Transient_Object;\n "}, {"sha": "9b9a7090eadebc5ecad0558947939610e919a276", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/815839a3844ec00f5f8700eb377fde8842082e96/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/815839a3844ec00f5f8700eb377fde8842082e96/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=815839a3844ec00f5f8700eb377fde8842082e96", "patch": "@@ -2611,8 +2611,13 @@ package body Sem_Type is\n \n             begin\n                AI := First (Interface_List (Parent (Target_Typ)));\n+\n+               --  The progenitor itself may be a subtype of an interface type.\n+\n                while Present (AI) loop\n-                  if Etype (AI) = Iface_Typ then\n+                  if Etype (AI) = Iface_Typ\n+                    or else Base_Type (Etype (AI)) = Iface_Typ\n+                  then\n                      return True;\n \n                   elsif Present (Interfaces (Etype (AI)))"}, {"sha": "9d7e4422cde81e0a5fb6879e9508920281c8921a", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/815839a3844ec00f5f8700eb377fde8842082e96/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/815839a3844ec00f5f8700eb377fde8842082e96/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=815839a3844ec00f5f8700eb377fde8842082e96", "patch": "@@ -934,6 +934,14 @@ package Sinfo is\n    --    listed above (e.g. in a return statement), an additional type\n    --    conversion node is introduced to represent the required check.\n \n+   --    A special case arises for the arguments of the Pred/Succ attributes.\n+   --    Here the range check needed is against First + 1 ..  Last (Pred) or\n+   --    First .. Last - 1 (Succ). Essentially these checks are what would be\n+   --    performed within the implicit body of the functions that correspond\n+   --    to these attributes. In these cases, the Do_Range check flag is set\n+   --    on the argument to the attribute function, and the back end must\n+   --    special case the appropriate range to check against.\n+\n    --  Do_Storage_Check (Flag17-Sem)\n    --    This flag is set in an N_Allocator node to indicate that a storage\n    --    check is required for the allocation, or in an N_Subprogram_Body node"}]}