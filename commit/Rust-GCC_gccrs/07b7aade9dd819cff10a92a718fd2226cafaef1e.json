{"sha": "07b7aade9dd819cff10a92a718fd2226cafaef1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdiN2FhZGU5ZGQ4MTljZmYxMGE5MmE3MThmZDIyMjZjYWZhZWYxZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-01-24T20:58:21Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-01-24T20:58:21Z"}, "message": "re PR middle-end/27416 (ICE on invalid firstprivate/lastprivate)\n\n\tPR middle-end/27416\n\t* gimplify.c (omp_check_private): New function.\n\t(gimplify_scan_omp_clauses): Use it for\n\tfirstprivate/lastprivate/reduction.\n\n\t* gcc.dg/gomp/pr27416.c: New test.\n\nFrom-SVN: r121133", "tree": {"sha": "e3b0b87469cd96d6afc98081bf8d71bc30adac60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e3b0b87469cd96d6afc98081bf8d71bc30adac60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07b7aade9dd819cff10a92a718fd2226cafaef1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07b7aade9dd819cff10a92a718fd2226cafaef1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07b7aade9dd819cff10a92a718fd2226cafaef1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07b7aade9dd819cff10a92a718fd2226cafaef1e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4288fea21277dfd56522378ce31ae2461a299303", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4288fea21277dfd56522378ce31ae2461a299303", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4288fea21277dfd56522378ce31ae2461a299303"}], "stats": {"total": 76, "additions": 76, "deletions": 0}, "files": [{"sha": "f9b788ce9ea82cd2e669910bd3bd037e6c918076", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b7aade9dd819cff10a92a718fd2226cafaef1e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b7aade9dd819cff10a92a718fd2226cafaef1e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=07b7aade9dd819cff10a92a718fd2226cafaef1e", "patch": "@@ -1,5 +1,10 @@\n 2007-01-24  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/27416\n+\t* gimplify.c (omp_check_private): New function.\n+\t(gimplify_scan_omp_clauses): Use it for\n+\tfirstprivate/lastprivate/reduction.\n+\n \tPR middle-end/30494\n \t* gimplify.c (omp_add_variable): Don't call omp_notice_variable\n \ton TYPE_SIZE_UNIT for GOVD_LOCAL VLAs."}, {"sha": "19323ae59c3a347238c9f09c9192acd65d8493fc", "filename": "gcc/gimplify.c", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b7aade9dd819cff10a92a718fd2226cafaef1e/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b7aade9dd819cff10a92a718fd2226cafaef1e/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=07b7aade9dd819cff10a92a718fd2226cafaef1e", "patch": "@@ -4667,6 +4667,31 @@ omp_is_private (struct gimplify_omp_ctx *ctx, tree decl)\n     return !is_global_var (decl);\n }\n \n+/* Return true if DECL is private within a parallel region\n+   that binds to the current construct's context or in parallel\n+   region's REDUCTION clause.  */\n+\n+static bool\n+omp_check_private (struct gimplify_omp_ctx *ctx, tree decl)\n+{\n+  splay_tree_node n;\n+\n+  do\n+    {\n+      ctx = ctx->outer_context;\n+      if (ctx == NULL)\n+\treturn !(is_global_var (decl)\n+\t\t /* References might be private, but might be shared too.  */\n+\t\t || lang_hooks.decls.omp_privatize_by_reference (decl));\n+\n+      n = splay_tree_lookup (ctx->variables, (splay_tree_key) decl);\n+      if (n != NULL)\n+\treturn (n->value & GOVD_SHARED) == 0;\n+    }\n+  while (!ctx->is_parallel);\n+  return false;\n+}\n+\n /* Scan the OpenMP clauses in *LIST_P, installing mappings into a new\n    and previous omp contexts.  */\n \n@@ -4685,6 +4710,7 @@ gimplify_scan_omp_clauses (tree *list_p, tree *pre_p, bool in_parallel,\n       enum gimplify_status gs;\n       bool remove = false;\n       bool notice_outer = true;\n+      const char *check_non_private = NULL;\n       unsigned int flags;\n       tree decl;\n \n@@ -4699,12 +4725,15 @@ gimplify_scan_omp_clauses (tree *list_p, tree *pre_p, bool in_parallel,\n \t  goto do_add;\n \tcase OMP_CLAUSE_FIRSTPRIVATE:\n \t  flags = GOVD_FIRSTPRIVATE | GOVD_EXPLICIT;\n+\t  check_non_private = \"firstprivate\";\n \t  goto do_add;\n \tcase OMP_CLAUSE_LASTPRIVATE:\n \t  flags = GOVD_LASTPRIVATE | GOVD_SEEN | GOVD_EXPLICIT;\n+\t  check_non_private = \"lastprivate\";\n \t  goto do_add;\n \tcase OMP_CLAUSE_REDUCTION:\n \t  flags = GOVD_REDUCTION | GOVD_SEEN | GOVD_EXPLICIT;\n+\t  check_non_private = \"reduction\";\n \t  goto do_add;\n \n \tdo_add:\n@@ -4754,6 +4783,14 @@ gimplify_scan_omp_clauses (tree *list_p, tree *pre_p, bool in_parallel,\n \tdo_notice:\n \t  if (outer_ctx)\n \t    omp_notice_variable (outer_ctx, decl, true);\n+\t  if (check_non_private\n+\t      && !in_parallel\n+\t      && omp_check_private (ctx, decl))\n+\t    {\n+\t      error (\"%s variable %qs is private in outer context\",\n+\t\t     check_non_private, IDENTIFIER_POINTER (DECL_NAME (decl)));\n+\t      remove = true;\n+\t    }\n \t  break;\n \n \tcase OMP_CLAUSE_IF:"}, {"sha": "3f42ce95963ea2c46f9982a082301a9f36256f6f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b7aade9dd819cff10a92a718fd2226cafaef1e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b7aade9dd819cff10a92a718fd2226cafaef1e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=07b7aade9dd819cff10a92a718fd2226cafaef1e", "patch": "@@ -1,5 +1,8 @@\n 2007-01-24  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/27416\n+\t* gcc.dg/gomp/pr27416.c: New test.\n+\n \tPR middle-end/30494\n \t* gcc.dg/gomp/pr30494.c: New test.\n \t* g++.dg/gomp/pr30494.C: New test."}, {"sha": "802402446a8e87a65fe7c199f0a1b6461e79b6e9", "filename": "gcc/testsuite/gcc.dg/gomp/pr27416.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b7aade9dd819cff10a92a718fd2226cafaef1e/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr27416.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b7aade9dd819cff10a92a718fd2226cafaef1e/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr27416.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr27416.c?ref=07b7aade9dd819cff10a92a718fd2226cafaef1e", "patch": "@@ -0,0 +1,31 @@\n+/* PR middle-end/27416 */\n+/* { dg-do compile } */\n+\n+void\n+foo (void)\n+{\n+  int i = 0, j = 0;\n+#pragma omp for firstprivate (j) /* { dg-error \"is private in outer context\" } */\n+  for (i = 0; i < 10; i++)\n+    j++;\n+}\n+\n+int\n+bar (void)\n+{\n+  int i, j;\n+#pragma omp for lastprivate (j)\t/* { dg-error \"is private in outer context\" } */\n+  for (i = 0; i < 10; i++)\n+    j = i;\n+  return j;\n+}\n+\n+int\n+baz (void)\n+{\n+  int i, j = 0;\n+#pragma omp for reduction (+:j)\t/* { dg-error \"is private in outer context\" } */\n+  for (i = 0; i < 10; i++)\n+    j++;\n+  return j;\n+}"}]}