{"sha": "c5a440040289c6063654a8b09f5d7cb25e3c8323", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVhNDQwMDQwMjg5YzYwNjM2NTRhOGIwOWY1ZDdjYjI1ZTNjODMyMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-04-25T21:49:22Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-04-25T21:49:22Z"}, "message": "re PR rtl-optimization/57003 (gcc breaks -O2 optimization with Wine(64) - links/info/bisect of commits included)\n\n\tPR rtl-optimization/57003\n\t* regcprop.c (copyprop_hardreg_forward_1): If ksvd.ignore_set_reg,\n\tcall note_stores with kill_clobbered_value callback again after\n\tkilling regs_invalidated_by_call.\n\n\t* gcc.target/i386/pr57003.c: New test.\n\nFrom-SVN: r198320", "tree": {"sha": "26dfbbf3487b5b84727e8c7e9d4a478c3149e1d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26dfbbf3487b5b84727e8c7e9d4a478c3149e1d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5a440040289c6063654a8b09f5d7cb25e3c8323", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5a440040289c6063654a8b09f5d7cb25e3c8323", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5a440040289c6063654a8b09f5d7cb25e3c8323", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5a440040289c6063654a8b09f5d7cb25e3c8323/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9c818d13d45ea00592462bdc31125bc3908f6d99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c818d13d45ea00592462bdc31125bc3908f6d99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c818d13d45ea00592462bdc31125bc3908f6d99"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "847b1e6128e1c6d1347eb8a630b6bff3954f284b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a440040289c6063654a8b09f5d7cb25e3c8323/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a440040289c6063654a8b09f5d7cb25e3c8323/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c5a440040289c6063654a8b09f5d7cb25e3c8323", "patch": "@@ -1,3 +1,10 @@\n+2013-04-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/57003\n+\t* regcprop.c (copyprop_hardreg_forward_1): If ksvd.ignore_set_reg,\n+\tcall note_stores with kill_clobbered_value callback again after\n+\tkilling regs_invalidated_by_call.\n+\n 2013-04-25  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/aarch64-simd.md"}, {"sha": "896902f30121d8ca2d1ed48bbe0adc62326b95d2", "filename": "gcc/regcprop.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a440040289c6063654a8b09f5d7cb25e3c8323/gcc%2Fregcprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a440040289c6063654a8b09f5d7cb25e3c8323/gcc%2Fregcprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregcprop.c?ref=c5a440040289c6063654a8b09f5d7cb25e3c8323", "patch": "@@ -1015,6 +1015,13 @@ copyprop_hardreg_forward_1 (basic_block bb, struct value_data *vd)\n \t  EXECUTE_IF_SET_IN_HARD_REG_SET (regs_invalidated_by_call, 0, regno, hrsi)\n \t    if (regno < set_regno || regno >= set_regno + set_nregs)\n \t      kill_value_regno (regno, 1, vd);\n+\n+\t  /* If SET was seen in CALL_INSN_FUNCTION_USAGE, and SET_SRC\n+\t     of the SET isn't in regs_invalidated_by_call hard reg set,\n+\t     but instead among CLOBBERs on the CALL_INSN, we could wrongly\n+\t     assume the value in it is still live.  */\n+\t  if (ksvd.ignore_set_reg)\n+\t    note_stores (PATTERN (insn), kill_clobbered_value, vd);\n \t}\n \n       /* Notice stores.  */"}, {"sha": "9cc5ce1f534a34ea8dbb8bacf38e0a0f8ea3f2cd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a440040289c6063654a8b09f5d7cb25e3c8323/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a440040289c6063654a8b09f5d7cb25e3c8323/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c5a440040289c6063654a8b09f5d7cb25e3c8323", "patch": "@@ -1,3 +1,8 @@\n+2013-04-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/57003\n+\t* gcc.target/i386/pr57003.c: New test.\n+\n 2013-04-25  Marek Polacek  <polacek@redhat.com>\n \n \tPR tree-optimization/57066"}, {"sha": "dfa6b8b50959cfe19b205ede633f85908ba368ba", "filename": "gcc/testsuite/gcc.target/i386/pr57003.c", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a440040289c6063654a8b09f5d7cb25e3c8323/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr57003.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a440040289c6063654a8b09f5d7cb25e3c8323/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr57003.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr57003.c?ref=c5a440040289c6063654a8b09f5d7cb25e3c8323", "patch": "@@ -0,0 +1,54 @@\n+/* PR rtl-optimization/57003 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+#define N 2001\n+unsigned short *b, *c, *d;\n+\n+__attribute__ ((noinline, noclone)) unsigned\n+bar (void)\n+{\n+  asm volatile (\"\" : : : \"memory\");\n+  return N;\n+}\n+\n+__attribute__ ((noinline, noclone)) unsigned short *\n+baz (unsigned long x)\n+{\n+  if (x != N * sizeof (unsigned short) + 20)\n+    __builtin_abort ();\n+  asm volatile (\"\" : : : \"memory\");\n+  return d;\n+}\n+\n+__attribute__ ((ms_abi, noinline, noclone))\n+foo (void)\n+{\n+  unsigned d;\n+  unsigned short *e;\n+  if ((d = bar ()))\n+    {\n+      e = baz (d * sizeof (unsigned short) + 20);\n+      __builtin_memcpy (e, b, d * sizeof (unsigned short));\n+      c = e;\n+    }\n+}\n+\n+int\n+main ()\n+{\n+  unsigned short a[2 * N];\n+  int i;\n+  for (i = 0; i < 2 * N; i++)\n+    a[i] = i + 1;\n+  b = a;\n+  d = a + N;\n+  asm volatile (\"\" : : : \"memory\");\n+  foo ();\n+  for (i = 0; i < N; i++)\n+    if (a[i] != i + 1 || a[i + N] != i + 1)\n+      __builtin_abort ();\n+  if (c != a + N)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}