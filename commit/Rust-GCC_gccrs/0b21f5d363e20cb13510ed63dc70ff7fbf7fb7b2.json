{"sha": "0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGIyMWY1ZDM2M2UyMGNiMTM1MTBlZDYzZGM3MGZmN2ZiZjdmYjdiMg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-10-22T07:27:21Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-10-22T07:27:21Z"}, "message": "re PR bootstrap/54820 (ada: cannot find -lstdc++ since 4.8.0 20121002)\n\n\tPR bootstrap/54820\n\t* Makefile.tpl (STAGE1_FLAGS_TO_PASS): New variable.\n\t(all-[+prefix+][+module+]): Pass stage1_args to sub-makes.\n\t(all-stage[+id+]-[+prefix+][+module+]): Likewise, if prev is false.\n\t(clean-stage[+id+]-[+prefix+][+module+]): Likewise, if prev is false.\n\t(host_modules): Set stage1_args to STAGE1_FLAGS_TO_PASS.\n\t* Makefile.in: Regenerate.\n\t* configure.ac (have_static_libs): New variable and associated check.\n\t(stage1-ldflags): Move to after stage1_libs and set to -static-libstdc++\n\t-static-libgcc if stage1_libs is empty and have_static_libs is yes.\n\t* configure: Regenerate.\nada/\n\t* gcc-interface/Make-lang.in (GCC_LINK): Remove hardcoded options.\n\nFrom-SVN: r192666", "tree": {"sha": "95326cac0bf6c125aa3122071cd544b8e7e98091", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95326cac0bf6c125aa3122071cd544b8e7e98091"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2/comments", "author": null, "committer": null, "parents": [{"sha": "562649ada4de8f4415602b3895e841e8a09ac105", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/562649ada4de8f4415602b3895e841e8a09ac105", "html_url": "https://github.com/Rust-GCC/gccrs/commit/562649ada4de8f4415602b3895e841e8a09ac105"}], "stats": {"total": 935, "additions": 435, "deletions": 500}, "files": [{"sha": "21abcf792ce386c52be8ae6946a7e11528d78903", "filename": "ChangeLog", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2", "patch": "@@ -1,6 +1,20 @@\n+2012-10-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR bootstrap/54820\n+\t* Makefile.tpl (STAGE1_FLAGS_TO_PASS): New variable.\n+\t(all-[+prefix+][+module+]): Pass stage1_args to sub-makes.\n+\t(all-stage[+id+]-[+prefix+][+module+]): Likewise, if prev is false.\n+\t(clean-stage[+id+]-[+prefix+][+module+]): Likewise, if prev is false.\n+\t(host_modules): Set stage1_args to STAGE1_FLAGS_TO_PASS.\n+\t* Makefile.in: Regenerate.\n+\t* configure.ac (have_static_libs): New variable and associated check.\n+\t(stage1-ldflags): Move to after stage1_libs and set to -static-libstdc++\n+\t-static-libgcc if stage1_libs is empty and have_static_libs is yes.\n+\t* configure: Regenerate.\n+\n 2012-10-10  Richard Biener  <rguenther@suse.de>\n \n-\t* MAINTAINERS: Adjust for changed surename.\n+\t* MAINTAINERS: Adjust for changed surname.\n \n 2012-10-04  Lawrence Crowl  <crowl@google.com>\n "}, {"sha": "321fec9cfad649796f1de57774374b7a103587da", "filename": "Makefile.in", "status": "modified", "additions": 262, "deletions": 463, "changes": 725, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2", "patch": "@@ -802,6 +802,12 @@ EXTRA_HOST_FLAGS = \\\n \n FLAGS_TO_PASS = $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)\n \n+# Flags to pass to stage1 or when not bootstrapping.\n+\n+STAGE1_FLAGS_TO_PASS = \\\n+\tLDFLAGS=\"$${LDFLAGS}\" \\\n+\tHOST_LIBS=\"$${HOST_LIBS}\"\n+\n # Flags to pass to stage2 and later makes.\n \n POSTSTAGE1_FLAGS_TO_PASS = \\\n@@ -2628,7 +2634,7 @@ all-build-libiberty: configure-build-libiberty\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(BUILD_EXPORTS)  \\\n \t(cd $(BUILD_SUBDIR)/libiberty && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_BUILD_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_BUILD_FLAGS)   \\\n \t\t$(TARGET-build-libiberty))\n @endif build-libiberty\n \n@@ -2684,7 +2690,7 @@ all-build-bison: configure-build-bison\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(BUILD_EXPORTS)  \\\n \t(cd $(BUILD_SUBDIR)/bison && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_BUILD_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_BUILD_FLAGS)   \\\n \t\t$(TARGET-build-bison))\n @endif build-bison\n \n@@ -2740,7 +2746,7 @@ all-build-flex: configure-build-flex\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(BUILD_EXPORTS)  \\\n \t(cd $(BUILD_SUBDIR)/flex && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_BUILD_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_BUILD_FLAGS)   \\\n \t\t$(TARGET-build-flex))\n @endif build-flex\n \n@@ -2796,7 +2802,7 @@ all-build-m4: configure-build-m4\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(BUILD_EXPORTS)  \\\n \t(cd $(BUILD_SUBDIR)/m4 && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_BUILD_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_BUILD_FLAGS)   \\\n \t\t$(TARGET-build-m4))\n @endif build-m4\n \n@@ -2852,7 +2858,7 @@ all-build-texinfo: configure-build-texinfo\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(BUILD_EXPORTS)  \\\n \t(cd $(BUILD_SUBDIR)/texinfo && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_BUILD_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_BUILD_FLAGS)   \\\n \t\t$(TARGET-build-texinfo))\n @endif build-texinfo\n \n@@ -2908,7 +2914,7 @@ all-build-fixincludes: configure-build-fixincludes\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(BUILD_EXPORTS)  \\\n \t(cd $(BUILD_SUBDIR)/fixincludes && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_BUILD_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_BUILD_FLAGS)   \\\n \t\t$(TARGET-build-fixincludes))\n @endif build-fixincludes\n \n@@ -3164,7 +3170,7 @@ all-bfd: configure-bfd\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/bfd && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-bfd))\n @endif bfd\n \n@@ -3192,7 +3198,8 @@ all-stage1-bfd: configure-stage1-bfd\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS)   \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-bfd)\n \n@@ -3207,7 +3214,7 @@ clean-stage1-bfd:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/bfd && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t clean\n+\t$(STAGE1_FLAGS_TO_PASS)  clean\n @endif bfd-bootstrap\n \n \n@@ -3248,9 +3255,7 @@ clean-stage2-bfd:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/bfd && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif bfd-bootstrap\n \n \n@@ -3291,9 +3296,7 @@ clean-stage3-bfd:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/bfd && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif bfd-bootstrap\n \n \n@@ -3334,9 +3337,7 @@ clean-stage4-bfd:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/bfd && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif bfd-bootstrap\n \n \n@@ -3377,9 +3378,7 @@ clean-stageprofile-bfd:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/bfd && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif bfd-bootstrap\n \n \n@@ -3420,9 +3419,7 @@ clean-stagefeedback-bfd:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/bfd && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif bfd-bootstrap\n \n \n@@ -4045,7 +4042,7 @@ all-opcodes: configure-opcodes\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/opcodes && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-opcodes))\n @endif opcodes\n \n@@ -4073,7 +4070,8 @@ all-stage1-opcodes: configure-stage1-opcodes\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS)   \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-opcodes)\n \n@@ -4088,7 +4086,7 @@ clean-stage1-opcodes:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/opcodes && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t clean\n+\t$(STAGE1_FLAGS_TO_PASS)  clean\n @endif opcodes-bootstrap\n \n \n@@ -4129,9 +4127,7 @@ clean-stage2-opcodes:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/opcodes && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif opcodes-bootstrap\n \n \n@@ -4172,9 +4168,7 @@ clean-stage3-opcodes:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/opcodes && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif opcodes-bootstrap\n \n \n@@ -4215,9 +4209,7 @@ clean-stage4-opcodes:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/opcodes && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif opcodes-bootstrap\n \n \n@@ -4258,9 +4250,7 @@ clean-stageprofile-opcodes:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/opcodes && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif opcodes-bootstrap\n \n \n@@ -4301,9 +4291,7 @@ clean-stagefeedback-opcodes:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/opcodes && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif opcodes-bootstrap\n \n \n@@ -4926,7 +4914,7 @@ all-binutils: configure-binutils\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/binutils && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-binutils))\n @endif binutils\n \n@@ -4954,7 +4942,8 @@ all-stage1-binutils: configure-stage1-binutils\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS)   \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-binutils)\n \n@@ -4969,7 +4958,7 @@ clean-stage1-binutils:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/binutils && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t clean\n+\t$(STAGE1_FLAGS_TO_PASS)  clean\n @endif binutils-bootstrap\n \n \n@@ -5010,9 +4999,7 @@ clean-stage2-binutils:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/binutils && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif binutils-bootstrap\n \n \n@@ -5053,9 +5040,7 @@ clean-stage3-binutils:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/binutils && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif binutils-bootstrap\n \n \n@@ -5096,9 +5081,7 @@ clean-stage4-binutils:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/binutils && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif binutils-bootstrap\n \n \n@@ -5139,9 +5122,7 @@ clean-stageprofile-binutils:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/binutils && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif binutils-bootstrap\n \n \n@@ -5182,9 +5163,7 @@ clean-stagefeedback-binutils:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/binutils && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif binutils-bootstrap\n \n \n@@ -5611,7 +5590,7 @@ all-bison: configure-bison\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/bison && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-bison))\n @endif bison\n \n@@ -6054,7 +6033,7 @@ all-cgen: configure-cgen\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/cgen && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-cgen))\n @endif cgen\n \n@@ -6494,7 +6473,7 @@ all-dejagnu: configure-dejagnu\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/dejagnu && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-dejagnu))\n @endif dejagnu\n \n@@ -6934,7 +6913,7 @@ all-etc: configure-etc\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/etc && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-etc))\n @endif etc\n \n@@ -7374,7 +7353,7 @@ all-fastjar: configure-fastjar\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/fastjar && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-fastjar))\n @endif fastjar\n \n@@ -7817,7 +7796,7 @@ all-fixincludes: configure-fixincludes\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/fixincludes && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-fixincludes))\n @endif fixincludes\n \n@@ -8241,7 +8220,7 @@ all-flex: configure-flex\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/flex && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-flex))\n @endif flex\n \n@@ -8880,7 +8859,7 @@ all-gas: configure-gas\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/gas && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-gas))\n @endif gas\n \n@@ -8908,7 +8887,8 @@ all-stage1-gas: configure-stage1-gas\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS)   \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-gas)\n \n@@ -8923,7 +8903,7 @@ clean-stage1-gas:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gas && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t clean\n+\t$(STAGE1_FLAGS_TO_PASS)  clean\n @endif gas-bootstrap\n \n \n@@ -8964,9 +8944,7 @@ clean-stage2-gas:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gas && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif gas-bootstrap\n \n \n@@ -9007,9 +8985,7 @@ clean-stage3-gas:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gas && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif gas-bootstrap\n \n \n@@ -9050,9 +9026,7 @@ clean-stage4-gas:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gas && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif gas-bootstrap\n \n \n@@ -9093,9 +9067,7 @@ clean-stageprofile-gas:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gas && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif gas-bootstrap\n \n \n@@ -9136,9 +9108,7 @@ clean-stagefeedback-gas:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gas && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif gas-bootstrap\n \n \n@@ -9761,7 +9731,7 @@ all-gcc: configure-gcc\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/gcc && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(EXTRA_GCC_FLAGS) \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS) $(EXTRA_GCC_FLAGS) \\\n \t\t$(TARGET-gcc))\n @endif gcc\n \n@@ -9789,7 +9759,8 @@ all-stage1-gcc: configure-stage1-gcc\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS)  $(EXTRA_GCC_FLAGS) \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS) $(EXTRA_GCC_FLAGS) \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-gcc)\n \n@@ -9804,7 +9775,7 @@ clean-stage1-gcc:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gcc && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(EXTRA_GCC_FLAGS) clean\n+\t$(STAGE1_FLAGS_TO_PASS) $(EXTRA_GCC_FLAGS) clean\n @endif gcc-bootstrap\n \n \n@@ -9845,9 +9816,7 @@ clean-stage2-gcc:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gcc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t$(EXTRA_GCC_FLAGS) clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) $(EXTRA_GCC_FLAGS) clean\n @endif gcc-bootstrap\n \n \n@@ -9888,9 +9857,7 @@ clean-stage3-gcc:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gcc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t$(EXTRA_GCC_FLAGS) clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) $(EXTRA_GCC_FLAGS) clean\n @endif gcc-bootstrap\n \n \n@@ -9931,9 +9898,7 @@ clean-stage4-gcc:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gcc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t$(EXTRA_GCC_FLAGS) clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) $(EXTRA_GCC_FLAGS) clean\n @endif gcc-bootstrap\n \n \n@@ -9974,9 +9939,7 @@ clean-stageprofile-gcc:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gcc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t$(EXTRA_GCC_FLAGS) clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) $(EXTRA_GCC_FLAGS) clean\n @endif gcc-bootstrap\n \n \n@@ -10017,9 +9980,7 @@ clean-stagefeedback-gcc:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gcc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t$(EXTRA_GCC_FLAGS) clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) $(EXTRA_GCC_FLAGS) clean\n @endif gcc-bootstrap\n \n \n@@ -10648,7 +10609,7 @@ all-gmp: configure-gmp\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/gmp && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-gmp))\n @endif gmp\n \n@@ -10676,7 +10637,8 @@ all-stage1-gmp: configure-stage1-gmp\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS)   \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-gmp)\n \n@@ -10691,7 +10653,7 @@ clean-stage1-gmp:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t clean\n+\t$(STAGE1_FLAGS_TO_PASS)  clean\n @endif gmp-bootstrap\n \n \n@@ -10732,9 +10694,7 @@ clean-stage2-gmp:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif gmp-bootstrap\n \n \n@@ -10775,9 +10735,7 @@ clean-stage3-gmp:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif gmp-bootstrap\n \n \n@@ -10818,9 +10776,7 @@ clean-stage4-gmp:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif gmp-bootstrap\n \n \n@@ -10861,9 +10817,7 @@ clean-stageprofile-gmp:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif gmp-bootstrap\n \n \n@@ -10904,9 +10858,7 @@ clean-stagefeedback-gmp:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gmp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif gmp-bootstrap\n \n \n@@ -11523,7 +11475,7 @@ all-mpfr: configure-mpfr\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/mpfr && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-mpfr))\n @endif mpfr\n \n@@ -11551,7 +11503,8 @@ all-stage1-mpfr: configure-stage1-mpfr\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS)   \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-mpfr)\n \n@@ -11566,7 +11519,7 @@ clean-stage1-mpfr:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t clean\n+\t$(STAGE1_FLAGS_TO_PASS)  clean\n @endif mpfr-bootstrap\n \n \n@@ -11607,9 +11560,7 @@ clean-stage2-mpfr:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif mpfr-bootstrap\n \n \n@@ -11650,9 +11601,7 @@ clean-stage3-mpfr:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif mpfr-bootstrap\n \n \n@@ -11693,9 +11642,7 @@ clean-stage4-mpfr:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif mpfr-bootstrap\n \n \n@@ -11736,9 +11683,7 @@ clean-stageprofile-mpfr:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif mpfr-bootstrap\n \n \n@@ -11779,9 +11724,7 @@ clean-stagefeedback-mpfr:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpfr && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif mpfr-bootstrap\n \n \n@@ -12398,7 +12341,7 @@ all-mpc: configure-mpc\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/mpc && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-mpc))\n @endif mpc\n \n@@ -12426,7 +12369,8 @@ all-stage1-mpc: configure-stage1-mpc\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS)   \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-mpc)\n \n@@ -12441,7 +12385,7 @@ clean-stage1-mpc:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t clean\n+\t$(STAGE1_FLAGS_TO_PASS)  clean\n @endif mpc-bootstrap\n \n \n@@ -12482,9 +12426,7 @@ clean-stage2-mpc:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif mpc-bootstrap\n \n \n@@ -12525,9 +12467,7 @@ clean-stage3-mpc:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif mpc-bootstrap\n \n \n@@ -12568,9 +12508,7 @@ clean-stage4-mpc:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif mpc-bootstrap\n \n \n@@ -12611,9 +12549,7 @@ clean-stageprofile-mpc:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif mpc-bootstrap\n \n \n@@ -12654,9 +12590,7 @@ clean-stagefeedback-mpc:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/mpc && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif mpc-bootstrap\n \n \n@@ -13273,7 +13207,7 @@ all-isl: configure-isl\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/isl && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) V=1 \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS) V=1 \\\n \t\t$(TARGET-isl))\n @endif isl\n \n@@ -13301,7 +13235,8 @@ all-stage1-isl: configure-stage1-isl\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS)  V=1 \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS) V=1 \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-isl)\n \n@@ -13316,7 +13251,7 @@ clean-stage1-isl:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\tV=1 clean\n+\t$(STAGE1_FLAGS_TO_PASS) V=1 clean\n @endif isl-bootstrap\n \n \n@@ -13357,9 +13292,7 @@ clean-stage2-isl:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\tV=1 clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 clean\n @endif isl-bootstrap\n \n \n@@ -13400,9 +13333,7 @@ clean-stage3-isl:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\tV=1 clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 clean\n @endif isl-bootstrap\n \n \n@@ -13443,9 +13374,7 @@ clean-stage4-isl:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\tV=1 clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 clean\n @endif isl-bootstrap\n \n \n@@ -13486,9 +13415,7 @@ clean-stageprofile-isl:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\tV=1 clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 clean\n @endif isl-bootstrap\n \n \n@@ -13529,9 +13456,7 @@ clean-stagefeedback-isl:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/isl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\tV=1 clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) V=1 clean\n @endif isl-bootstrap\n \n \n@@ -14148,7 +14073,7 @@ all-cloog: configure-cloog\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS) CPPFLAGS=\"$(HOST_GMPINC) $(HOST_ISLINC) $$CPPFLAGS\"; export CPPFLAGS; LDFLAGS=\"-L$$r/$(HOST_SUBDIR)/gmp/.libs -L$$r/$(HOST_SUBDIR)/isl/.libs $$LDFLAGS\"; export LDFLAGS;  \\\n \t(cd $(HOST_SUBDIR)/cloog && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) CPPFLAGS=\"$$CPPFLAGS\" LDFLAGS=\"$$LDFLAGS\" V=1 \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS) CPPFLAGS=\"$$CPPFLAGS\" LDFLAGS=\"$$LDFLAGS\" V=1 \\\n \t\t$(TARGET-cloog))\n @endif cloog\n \n@@ -14176,7 +14101,8 @@ all-stage1-cloog: configure-stage1-cloog\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS)  CPPFLAGS=\"$$CPPFLAGS\" LDFLAGS=\"$$LDFLAGS\" V=1 \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS) CPPFLAGS=\"$$CPPFLAGS\" LDFLAGS=\"$$LDFLAGS\" V=1 \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-cloog)\n \n@@ -14191,7 +14117,7 @@ clean-stage1-cloog:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/cloog && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\tCPPFLAGS=\"$$CPPFLAGS\" LDFLAGS=\"$$LDFLAGS\" V=1 clean\n+\t$(STAGE1_FLAGS_TO_PASS) CPPFLAGS=\"$$CPPFLAGS\" LDFLAGS=\"$$LDFLAGS\" V=1 clean\n @endif cloog-bootstrap\n \n \n@@ -14232,9 +14158,7 @@ clean-stage2-cloog:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/cloog && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\tCPPFLAGS=\"$$CPPFLAGS\" LDFLAGS=\"$$LDFLAGS\" V=1 clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) CPPFLAGS=\"$$CPPFLAGS\" LDFLAGS=\"$$LDFLAGS\" V=1 clean\n @endif cloog-bootstrap\n \n \n@@ -14275,9 +14199,7 @@ clean-stage3-cloog:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/cloog && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\tCPPFLAGS=\"$$CPPFLAGS\" LDFLAGS=\"$$LDFLAGS\" V=1 clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) CPPFLAGS=\"$$CPPFLAGS\" LDFLAGS=\"$$LDFLAGS\" V=1 clean\n @endif cloog-bootstrap\n \n \n@@ -14318,9 +14240,7 @@ clean-stage4-cloog:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/cloog && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\tCPPFLAGS=\"$$CPPFLAGS\" LDFLAGS=\"$$LDFLAGS\" V=1 clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) CPPFLAGS=\"$$CPPFLAGS\" LDFLAGS=\"$$LDFLAGS\" V=1 clean\n @endif cloog-bootstrap\n \n \n@@ -14361,9 +14281,7 @@ clean-stageprofile-cloog:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/cloog && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\tCPPFLAGS=\"$$CPPFLAGS\" LDFLAGS=\"$$LDFLAGS\" V=1 clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) CPPFLAGS=\"$$CPPFLAGS\" LDFLAGS=\"$$LDFLAGS\" V=1 clean\n @endif cloog-bootstrap\n \n \n@@ -14404,9 +14322,7 @@ clean-stagefeedback-cloog:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/cloog && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\tCPPFLAGS=\"$$CPPFLAGS\" LDFLAGS=\"$$LDFLAGS\" V=1 clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS) CPPFLAGS=\"$$CPPFLAGS\" LDFLAGS=\"$$LDFLAGS\" V=1 clean\n @endif cloog-bootstrap\n \n \n@@ -15023,7 +14939,7 @@ all-libelf: configure-libelf\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/libelf && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-libelf))\n @endif libelf\n \n@@ -15051,7 +14967,8 @@ all-stage1-libelf: configure-stage1-libelf\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS)   \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-libelf)\n \n@@ -15066,7 +14983,7 @@ clean-stage1-libelf:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libelf && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t clean\n+\t$(STAGE1_FLAGS_TO_PASS)  clean\n @endif libelf-bootstrap\n \n \n@@ -15107,9 +15024,7 @@ clean-stage2-libelf:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libelf && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libelf-bootstrap\n \n \n@@ -15150,9 +15065,7 @@ clean-stage3-libelf:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libelf && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libelf-bootstrap\n \n \n@@ -15193,9 +15106,7 @@ clean-stage4-libelf:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libelf && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libelf-bootstrap\n \n \n@@ -15236,9 +15147,7 @@ clean-stageprofile-libelf:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libelf && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libelf-bootstrap\n \n \n@@ -15279,9 +15188,7 @@ clean-stagefeedback-libelf:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libelf && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libelf-bootstrap\n \n \n@@ -15892,7 +15799,7 @@ all-gold: configure-gold\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/gold && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-gold))\n @endif gold\n \n@@ -15920,7 +15827,8 @@ all-stage1-gold: configure-stage1-gold\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS)   \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-gold)\n \n@@ -15935,7 +15843,7 @@ clean-stage1-gold:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gold && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t clean\n+\t$(STAGE1_FLAGS_TO_PASS)  clean\n @endif gold-bootstrap\n \n \n@@ -15976,9 +15884,7 @@ clean-stage2-gold:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gold && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif gold-bootstrap\n \n \n@@ -16019,9 +15925,7 @@ clean-stage3-gold:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gold && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif gold-bootstrap\n \n \n@@ -16062,9 +15966,7 @@ clean-stage4-gold:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gold && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif gold-bootstrap\n \n \n@@ -16105,9 +16007,7 @@ clean-stageprofile-gold:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gold && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif gold-bootstrap\n \n \n@@ -16148,9 +16048,7 @@ clean-stagefeedback-gold:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/gold && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif gold-bootstrap\n \n \n@@ -16577,7 +16475,7 @@ all-gprof: configure-gprof\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/gprof && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-gprof))\n @endif gprof\n \n@@ -17213,7 +17111,7 @@ all-intl: configure-intl\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/intl && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-intl))\n @endif intl\n \n@@ -17241,7 +17139,8 @@ all-stage1-intl: configure-stage1-intl\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS)   \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-intl)\n \n@@ -17256,7 +17155,7 @@ clean-stage1-intl:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/intl && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t clean\n+\t$(STAGE1_FLAGS_TO_PASS)  clean\n @endif intl-bootstrap\n \n \n@@ -17297,9 +17196,7 @@ clean-stage2-intl:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/intl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif intl-bootstrap\n \n \n@@ -17340,9 +17237,7 @@ clean-stage3-intl:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/intl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif intl-bootstrap\n \n \n@@ -17383,9 +17278,7 @@ clean-stage4-intl:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/intl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif intl-bootstrap\n \n \n@@ -17426,9 +17319,7 @@ clean-stageprofile-intl:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/intl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif intl-bootstrap\n \n \n@@ -17469,9 +17360,7 @@ clean-stagefeedback-intl:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/intl && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif intl-bootstrap\n \n \n@@ -17898,7 +17787,7 @@ all-tcl: configure-tcl\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/tcl && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-tcl))\n @endif tcl\n \n@@ -18323,7 +18212,7 @@ all-itcl: configure-itcl\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/itcl && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-itcl))\n @endif itcl\n \n@@ -18959,7 +18848,7 @@ all-ld: configure-ld\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/ld && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-ld))\n @endif ld\n \n@@ -18987,7 +18876,8 @@ all-stage1-ld: configure-stage1-ld\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS)   \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-ld)\n \n@@ -19002,7 +18892,7 @@ clean-stage1-ld:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/ld && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t clean\n+\t$(STAGE1_FLAGS_TO_PASS)  clean\n @endif ld-bootstrap\n \n \n@@ -19043,9 +18933,7 @@ clean-stage2-ld:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/ld && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif ld-bootstrap\n \n \n@@ -19086,9 +18974,7 @@ clean-stage3-ld:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/ld && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif ld-bootstrap\n \n \n@@ -19129,9 +19015,7 @@ clean-stage4-ld:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/ld && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif ld-bootstrap\n \n \n@@ -19172,9 +19056,7 @@ clean-stageprofile-ld:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/ld && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif ld-bootstrap\n \n \n@@ -19215,9 +19097,7 @@ clean-stagefeedback-ld:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/ld && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif ld-bootstrap\n \n \n@@ -19840,7 +19720,7 @@ all-libbacktrace: configure-libbacktrace\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/libbacktrace && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-libbacktrace))\n @endif libbacktrace\n \n@@ -19868,7 +19748,8 @@ all-stage1-libbacktrace: configure-stage1-libbacktrace\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS)   \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-libbacktrace)\n \n@@ -19883,7 +19764,7 @@ clean-stage1-libbacktrace:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libbacktrace && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t clean\n+\t$(STAGE1_FLAGS_TO_PASS)  clean\n @endif libbacktrace-bootstrap\n \n \n@@ -19924,9 +19805,7 @@ clean-stage2-libbacktrace:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libbacktrace && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libbacktrace-bootstrap\n \n \n@@ -19967,9 +19846,7 @@ clean-stage3-libbacktrace:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libbacktrace && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libbacktrace-bootstrap\n \n \n@@ -20010,9 +19887,7 @@ clean-stage4-libbacktrace:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libbacktrace && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libbacktrace-bootstrap\n \n \n@@ -20053,9 +19928,7 @@ clean-stageprofile-libbacktrace:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libbacktrace && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libbacktrace-bootstrap\n \n \n@@ -20096,9 +19969,7 @@ clean-stagefeedback-libbacktrace:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libbacktrace && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libbacktrace-bootstrap\n \n \n@@ -20721,7 +20592,7 @@ all-libcpp: configure-libcpp\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/libcpp && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-libcpp))\n @endif libcpp\n \n@@ -20749,7 +20620,8 @@ all-stage1-libcpp: configure-stage1-libcpp\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS)   \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-libcpp)\n \n@@ -20764,7 +20636,7 @@ clean-stage1-libcpp:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libcpp && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t clean\n+\t$(STAGE1_FLAGS_TO_PASS)  clean\n @endif libcpp-bootstrap\n \n \n@@ -20805,9 +20677,7 @@ clean-stage2-libcpp:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libcpp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libcpp-bootstrap\n \n \n@@ -20848,9 +20718,7 @@ clean-stage3-libcpp:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libcpp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libcpp-bootstrap\n \n \n@@ -20891,9 +20759,7 @@ clean-stage4-libcpp:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libcpp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libcpp-bootstrap\n \n \n@@ -20934,9 +20800,7 @@ clean-stageprofile-libcpp:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libcpp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libcpp-bootstrap\n \n \n@@ -20977,9 +20841,7 @@ clean-stagefeedback-libcpp:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libcpp && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libcpp-bootstrap\n \n \n@@ -21602,7 +21464,7 @@ all-libdecnumber: configure-libdecnumber\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/libdecnumber && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-libdecnumber))\n @endif libdecnumber\n \n@@ -21630,7 +21492,8 @@ all-stage1-libdecnumber: configure-stage1-libdecnumber\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS)   \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-libdecnumber)\n \n@@ -21645,7 +21508,7 @@ clean-stage1-libdecnumber:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libdecnumber && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t clean\n+\t$(STAGE1_FLAGS_TO_PASS)  clean\n @endif libdecnumber-bootstrap\n \n \n@@ -21686,9 +21549,7 @@ clean-stage2-libdecnumber:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libdecnumber && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libdecnumber-bootstrap\n \n \n@@ -21729,9 +21590,7 @@ clean-stage3-libdecnumber:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libdecnumber && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libdecnumber-bootstrap\n \n \n@@ -21772,9 +21631,7 @@ clean-stage4-libdecnumber:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libdecnumber && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libdecnumber-bootstrap\n \n \n@@ -21815,9 +21672,7 @@ clean-stageprofile-libdecnumber:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libdecnumber && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libdecnumber-bootstrap\n \n \n@@ -21858,9 +21713,7 @@ clean-stagefeedback-libdecnumber:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libdecnumber && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libdecnumber-bootstrap\n \n \n@@ -22287,7 +22140,7 @@ all-libgui: configure-libgui\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/libgui && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-libgui))\n @endif libgui\n \n@@ -22929,7 +22782,7 @@ all-libiberty: configure-libiberty\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/libiberty && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-libiberty))\n @endif libiberty\n \n@@ -22957,7 +22810,8 @@ all-stage1-libiberty: configure-stage1-libiberty\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS)   \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-libiberty)\n \n@@ -22972,7 +22826,7 @@ clean-stage1-libiberty:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libiberty && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t clean\n+\t$(STAGE1_FLAGS_TO_PASS)  clean\n @endif libiberty-bootstrap\n \n \n@@ -23013,9 +22867,7 @@ clean-stage2-libiberty:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libiberty && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libiberty-bootstrap\n \n \n@@ -23056,9 +22908,7 @@ clean-stage3-libiberty:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libiberty && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libiberty-bootstrap\n \n \n@@ -23099,9 +22949,7 @@ clean-stage4-libiberty:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libiberty && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libiberty-bootstrap\n \n \n@@ -23142,9 +22990,7 @@ clean-stageprofile-libiberty:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libiberty && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libiberty-bootstrap\n \n \n@@ -23185,9 +23031,7 @@ clean-stagefeedback-libiberty:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/libiberty && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif libiberty-bootstrap\n \n \n@@ -23614,7 +23458,7 @@ all-libiconv: configure-libiconv\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/libiconv && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-libiconv))\n @endif libiconv\n \n@@ -23991,7 +23835,7 @@ all-m4: configure-m4\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/m4 && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-m4))\n @endif m4\n \n@@ -24431,7 +24275,7 @@ all-readline: configure-readline\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/readline && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-readline))\n @endif readline\n \n@@ -24871,7 +24715,7 @@ all-sid: configure-sid\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/sid && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-sid))\n @endif sid\n \n@@ -25311,7 +25155,7 @@ all-sim: configure-sim\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/sim && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-sim))\n @endif sim\n \n@@ -25751,7 +25595,7 @@ all-texinfo: configure-texinfo\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/texinfo && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-texinfo))\n @endif texinfo\n \n@@ -26375,7 +26219,7 @@ all-zlib: configure-zlib\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/zlib && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-zlib))\n @endif zlib\n \n@@ -26403,7 +26247,8 @@ all-stage1-zlib: configure-stage1-zlib\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS)   \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-zlib)\n \n@@ -26418,7 +26263,7 @@ clean-stage1-zlib:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/zlib && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t clean\n+\t$(STAGE1_FLAGS_TO_PASS)  clean\n @endif zlib-bootstrap\n \n \n@@ -26459,9 +26304,7 @@ clean-stage2-zlib:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/zlib && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif zlib-bootstrap\n \n \n@@ -26502,9 +26345,7 @@ clean-stage3-zlib:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/zlib && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif zlib-bootstrap\n \n \n@@ -26545,9 +26386,7 @@ clean-stage4-zlib:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/zlib && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif zlib-bootstrap\n \n \n@@ -26588,9 +26427,7 @@ clean-stageprofile-zlib:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/zlib && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif zlib-bootstrap\n \n \n@@ -26631,9 +26468,7 @@ clean-stagefeedback-zlib:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/zlib && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif zlib-bootstrap\n \n \n@@ -27042,7 +26877,7 @@ all-gdb: configure-gdb\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/gdb && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-gdb))\n @endif gdb\n \n@@ -27482,7 +27317,7 @@ all-expect: configure-expect\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/expect && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-expect))\n @endif expect\n \n@@ -27922,7 +27757,7 @@ all-guile: configure-guile\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/guile && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-guile))\n @endif guile\n \n@@ -28362,7 +28197,7 @@ all-tk: configure-tk\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/tk && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-tk))\n @endif tk\n \n@@ -28802,7 +28637,7 @@ all-libtermcap: configure-libtermcap\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/libtermcap && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-libtermcap))\n @endif libtermcap\n \n@@ -29176,7 +29011,7 @@ all-utils: configure-utils\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/utils && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-utils))\n @endif utils\n \n@@ -29610,7 +29445,7 @@ all-gnattools: configure-gnattools\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/gnattools && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-gnattools))\n @endif gnattools\n \n@@ -30252,7 +30087,7 @@ all-lto-plugin: configure-lto-plugin\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(HOST_EXPORTS)  \\\n \t(cd $(HOST_SUBDIR)/lto-plugin && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS) $(STAGE1_FLAGS_TO_PASS)  \\\n \t\t$(TARGET-lto-plugin))\n @endif lto-plugin\n \n@@ -30280,7 +30115,8 @@ all-stage1-lto-plugin: configure-stage1-lto-plugin\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_HOST_FLAGS)   \\\n+\t\t$(EXTRA_HOST_FLAGS)  \\\n+\t\t$(STAGE1_FLAGS_TO_PASS)  \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-lto-plugin)\n \n@@ -30295,7 +30131,7 @@ clean-stage1-lto-plugin:\n \tfi; \\\n \tcd $(HOST_SUBDIR)/lto-plugin && \\\n \t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t clean\n+\t$(STAGE1_FLAGS_TO_PASS)  clean\n @endif lto-plugin-bootstrap\n \n \n@@ -30336,9 +30172,7 @@ clean-stage2-lto-plugin:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/lto-plugin && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif lto-plugin-bootstrap\n \n \n@@ -30379,9 +30213,7 @@ clean-stage3-lto-plugin:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/lto-plugin && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif lto-plugin-bootstrap\n \n \n@@ -30422,9 +30254,7 @@ clean-stage4-lto-plugin:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/lto-plugin && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif lto-plugin-bootstrap\n \n \n@@ -30465,9 +30295,7 @@ clean-stageprofile-lto-plugin:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/lto-plugin && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif lto-plugin-bootstrap\n \n \n@@ -30508,9 +30336,7 @@ clean-stagefeedback-lto-plugin:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(HOST_SUBDIR)/lto-plugin && \\\n-\t$(MAKE) $(EXTRA_HOST_FLAGS)  \\\n-\t\t$(POSTSTAGE1_FLAGS_TO_PASS)  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_HOST_FLAGS) $(POSTSTAGE1_FLAGS_TO_PASS)  clean\n @endif lto-plugin-bootstrap\n \n \n@@ -31226,7 +31052,7 @@ all-target-libstdc++-v3: configure-target-libstdc++-v3\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(RAW_CXX_TARGET_EXPORTS)  \\\n \t(cd $(TARGET_SUBDIR)/libstdc++-v3 && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS) 'CXX=$$(RAW_CXX_FOR_TARGET)' 'CXX_FOR_TARGET=$$(RAW_CXX_FOR_TARGET)'  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS) 'CXX=$$(RAW_CXX_FOR_TARGET)' 'CXX_FOR_TARGET=$$(RAW_CXX_FOR_TARGET)'   \\\n \t\t$(TARGET-target-libstdc++-v3))\n @endif target-libstdc++-v3\n \n@@ -31254,7 +31080,8 @@ all-stage1-target-libstdc++-v3: configure-stage1-target-libstdc++-v3\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_TARGET_FLAGS) 'CXX=$$(RAW_CXX_FOR_TARGET)' 'CXX_FOR_TARGET=$$(RAW_CXX_FOR_TARGET)'   \\\n+\t\t$(EXTRA_TARGET_FLAGS) 'CXX=$$(RAW_CXX_FOR_TARGET)' 'CXX_FOR_TARGET=$$(RAW_CXX_FOR_TARGET)'  \\\n+\t\t  \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-target-libstdc++-v3)\n \n@@ -31269,7 +31096,7 @@ clean-stage1-target-libstdc++-v3:\n \tfi; \\\n \tcd $(TARGET_SUBDIR)/libstdc++-v3 && \\\n \t$(MAKE) $(EXTRA_TARGET_FLAGS) 'CXX=$$(RAW_CXX_FOR_TARGET)' 'CXX_FOR_TARGET=$$(RAW_CXX_FOR_TARGET)'  \\\n-\t\t clean\n+\t  clean\n @endif target-libstdc++-v3-bootstrap\n \n \n@@ -31310,9 +31137,7 @@ clean-stage2-target-libstdc++-v3:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(TARGET_SUBDIR)/libstdc++-v3 && \\\n-\t$(MAKE) $(EXTRA_TARGET_FLAGS) 'CXX=$$(RAW_CXX_FOR_TARGET)' 'CXX_FOR_TARGET=$$(RAW_CXX_FOR_TARGET)'  \\\n-\t\t  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_TARGET_FLAGS) 'CXX=$$(RAW_CXX_FOR_TARGET)' 'CXX_FOR_TARGET=$$(RAW_CXX_FOR_TARGET)'   clean\n @endif target-libstdc++-v3-bootstrap\n \n \n@@ -31353,9 +31178,7 @@ clean-stage3-target-libstdc++-v3:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(TARGET_SUBDIR)/libstdc++-v3 && \\\n-\t$(MAKE) $(EXTRA_TARGET_FLAGS) 'CXX=$$(RAW_CXX_FOR_TARGET)' 'CXX_FOR_TARGET=$$(RAW_CXX_FOR_TARGET)'  \\\n-\t\t  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_TARGET_FLAGS) 'CXX=$$(RAW_CXX_FOR_TARGET)' 'CXX_FOR_TARGET=$$(RAW_CXX_FOR_TARGET)'   clean\n @endif target-libstdc++-v3-bootstrap\n \n \n@@ -31396,9 +31219,7 @@ clean-stage4-target-libstdc++-v3:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(TARGET_SUBDIR)/libstdc++-v3 && \\\n-\t$(MAKE) $(EXTRA_TARGET_FLAGS) 'CXX=$$(RAW_CXX_FOR_TARGET)' 'CXX_FOR_TARGET=$$(RAW_CXX_FOR_TARGET)'  \\\n-\t\t  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_TARGET_FLAGS) 'CXX=$$(RAW_CXX_FOR_TARGET)' 'CXX_FOR_TARGET=$$(RAW_CXX_FOR_TARGET)'   clean\n @endif target-libstdc++-v3-bootstrap\n \n \n@@ -31439,9 +31260,7 @@ clean-stageprofile-target-libstdc++-v3:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(TARGET_SUBDIR)/libstdc++-v3 && \\\n-\t$(MAKE) $(EXTRA_TARGET_FLAGS) 'CXX=$$(RAW_CXX_FOR_TARGET)' 'CXX_FOR_TARGET=$$(RAW_CXX_FOR_TARGET)'  \\\n-\t\t  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_TARGET_FLAGS) 'CXX=$$(RAW_CXX_FOR_TARGET)' 'CXX_FOR_TARGET=$$(RAW_CXX_FOR_TARGET)'   clean\n @endif target-libstdc++-v3-bootstrap\n \n \n@@ -31482,9 +31301,7 @@ clean-stagefeedback-target-libstdc++-v3:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(TARGET_SUBDIR)/libstdc++-v3 && \\\n-\t$(MAKE) $(EXTRA_TARGET_FLAGS) 'CXX=$$(RAW_CXX_FOR_TARGET)' 'CXX_FOR_TARGET=$$(RAW_CXX_FOR_TARGET)'  \\\n-\t\t  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_TARGET_FLAGS) 'CXX=$$(RAW_CXX_FOR_TARGET)' 'CXX_FOR_TARGET=$$(RAW_CXX_FOR_TARGET)'   clean\n @endif target-libstdc++-v3-bootstrap\n \n \n@@ -31941,7 +31758,7 @@ all-target-libmudflap: configure-target-libmudflap\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(NORMAL_TARGET_EXPORTS)  \\\n \t(cd $(TARGET_SUBDIR)/libmudflap && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n \t\t$(TARGET-target-libmudflap))\n @endif target-libmudflap\n \n@@ -32398,7 +32215,7 @@ all-target-libssp: configure-target-libssp\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(NORMAL_TARGET_EXPORTS)  \\\n \t(cd $(TARGET_SUBDIR)/libssp && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n \t\t$(TARGET-target-libssp))\n @endif target-libssp\n \n@@ -32855,7 +32672,7 @@ all-target-newlib: configure-target-newlib\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(NORMAL_TARGET_EXPORTS)  \\\n \t(cd $(TARGET_SUBDIR)/newlib && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n \t\t$(TARGET-target-newlib))\n @endif target-newlib\n \n@@ -33580,7 +33397,7 @@ all-target-libgcc: configure-target-libgcc\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(NORMAL_TARGET_EXPORTS)  \\\n \t(cd $(TARGET_SUBDIR)/libgcc && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n \t\t$(TARGET-target-libgcc))\n @endif target-libgcc\n \n@@ -33608,7 +33425,8 @@ all-stage1-target-libgcc: configure-stage1-target-libgcc\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_TARGET_FLAGS)   \\\n+\t\t$(EXTRA_TARGET_FLAGS)  \\\n+\t\t  \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-target-libgcc)\n \n@@ -33623,7 +33441,7 @@ clean-stage1-target-libgcc:\n \tfi; \\\n \tcd $(TARGET_SUBDIR)/libgcc && \\\n \t$(MAKE) $(EXTRA_TARGET_FLAGS)  \\\n-\t\t clean\n+\t  clean\n @endif target-libgcc-bootstrap\n \n \n@@ -33664,9 +33482,7 @@ clean-stage2-target-libgcc:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(TARGET_SUBDIR)/libgcc && \\\n-\t$(MAKE) $(EXTRA_TARGET_FLAGS)  \\\n-\t\t  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_TARGET_FLAGS)   clean\n @endif target-libgcc-bootstrap\n \n \n@@ -33707,9 +33523,7 @@ clean-stage3-target-libgcc:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(TARGET_SUBDIR)/libgcc && \\\n-\t$(MAKE) $(EXTRA_TARGET_FLAGS)  \\\n-\t\t  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_TARGET_FLAGS)   clean\n @endif target-libgcc-bootstrap\n \n \n@@ -33750,9 +33564,7 @@ clean-stage4-target-libgcc:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(TARGET_SUBDIR)/libgcc && \\\n-\t$(MAKE) $(EXTRA_TARGET_FLAGS)  \\\n-\t\t  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_TARGET_FLAGS)   clean\n @endif target-libgcc-bootstrap\n \n \n@@ -33793,9 +33605,7 @@ clean-stageprofile-target-libgcc:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(TARGET_SUBDIR)/libgcc && \\\n-\t$(MAKE) $(EXTRA_TARGET_FLAGS)  \\\n-\t\t  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_TARGET_FLAGS)   clean\n @endif target-libgcc-bootstrap\n \n \n@@ -33836,9 +33646,7 @@ clean-stagefeedback-target-libgcc:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(TARGET_SUBDIR)/libgcc && \\\n-\t$(MAKE) $(EXTRA_TARGET_FLAGS)  \\\n-\t\t  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_TARGET_FLAGS)   clean\n @endif target-libgcc-bootstrap\n \n \n@@ -34290,7 +34098,7 @@ all-target-libbacktrace: configure-target-libbacktrace\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(NORMAL_TARGET_EXPORTS)  \\\n \t(cd $(TARGET_SUBDIR)/libbacktrace && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n \t\t$(TARGET-target-libbacktrace))\n @endif target-libbacktrace\n \n@@ -34747,7 +34555,7 @@ all-target-libquadmath: configure-target-libquadmath\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(NORMAL_TARGET_EXPORTS)  \\\n \t(cd $(TARGET_SUBDIR)/libquadmath && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n \t\t$(TARGET-target-libquadmath))\n @endif target-libquadmath\n \n@@ -35204,7 +35012,7 @@ all-target-libgfortran: configure-target-libgfortran\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(NORMAL_TARGET_EXPORTS)  \\\n \t(cd $(TARGET_SUBDIR)/libgfortran && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n \t\t$(TARGET-target-libgfortran))\n @endif target-libgfortran\n \n@@ -35661,7 +35469,7 @@ all-target-libobjc: configure-target-libobjc\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(NORMAL_TARGET_EXPORTS)  \\\n \t(cd $(TARGET_SUBDIR)/libobjc && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n \t\t$(TARGET-target-libobjc))\n @endif target-libobjc\n \n@@ -36118,7 +35926,7 @@ all-target-libgo: configure-target-libgo\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(NORMAL_TARGET_EXPORTS)  \\\n \t(cd $(TARGET_SUBDIR)/libgo && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n \t\t$(TARGET-target-libgo))\n @endif target-libgo\n \n@@ -36575,7 +36383,7 @@ all-target-libtermcap: configure-target-libtermcap\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(NORMAL_TARGET_EXPORTS)  \\\n \t(cd $(TARGET_SUBDIR)/libtermcap && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n \t\t$(TARGET-target-libtermcap))\n @endif target-libtermcap\n \n@@ -36967,7 +36775,7 @@ all-target-winsup: configure-target-winsup\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(NORMAL_TARGET_EXPORTS)  \\\n \t(cd $(TARGET_SUBDIR)/winsup && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n \t\t$(TARGET-target-winsup))\n @endif target-winsup\n \n@@ -37424,7 +37232,7 @@ all-target-libgloss: configure-target-libgloss\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(NORMAL_TARGET_EXPORTS)  \\\n \t(cd $(TARGET_SUBDIR)/libgloss && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n \t\t$(TARGET-target-libgloss))\n @endif target-libgloss\n \n@@ -37876,7 +37684,7 @@ all-target-libffi: configure-target-libffi\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(NORMAL_TARGET_EXPORTS)  \\\n \t(cd $(TARGET_SUBDIR)/libffi && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n \t\t$(TARGET-target-libffi))\n @endif target-libffi\n \n@@ -38333,7 +38141,7 @@ all-target-libjava: configure-target-libjava\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(RAW_CXX_TARGET_EXPORTS)  \\\n \t(cd $(TARGET_SUBDIR)/libjava && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS) 'CXX=$$(RAW_CXX_FOR_TARGET)' 'CXX_FOR_TARGET=$$(RAW_CXX_FOR_TARGET)'  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS) 'CXX=$$(RAW_CXX_FOR_TARGET)' 'CXX_FOR_TARGET=$$(RAW_CXX_FOR_TARGET)'   \\\n \t\t$(TARGET-target-libjava))\n @endif target-libjava\n \n@@ -38790,7 +38598,7 @@ all-target-zlib: configure-target-zlib\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(NORMAL_TARGET_EXPORTS)  \\\n \t(cd $(TARGET_SUBDIR)/zlib && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n \t\t$(TARGET-target-zlib))\n @endif target-zlib\n \n@@ -39247,7 +39055,7 @@ all-target-boehm-gc: configure-target-boehm-gc\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(NORMAL_TARGET_EXPORTS)  \\\n \t(cd $(TARGET_SUBDIR)/boehm-gc && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n \t\t$(TARGET-target-boehm-gc))\n @endif target-boehm-gc\n \n@@ -39704,7 +39512,7 @@ all-target-rda: configure-target-rda\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(NORMAL_TARGET_EXPORTS)  \\\n \t(cd $(TARGET_SUBDIR)/rda && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n \t\t$(TARGET-target-rda))\n @endif target-rda\n \n@@ -40161,7 +39969,7 @@ all-target-libada: configure-target-libada\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(NORMAL_TARGET_EXPORTS)  \\\n \t(cd $(TARGET_SUBDIR)/libada && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n \t\t$(TARGET-target-libada))\n @endif target-libada\n \n@@ -40886,7 +40694,7 @@ all-target-libgomp: configure-target-libgomp\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(NORMAL_TARGET_EXPORTS)  \\\n \t(cd $(TARGET_SUBDIR)/libgomp && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n \t\t$(TARGET-target-libgomp))\n @endif target-libgomp\n \n@@ -40914,7 +40722,8 @@ all-stage1-target-libgomp: configure-stage1-target-libgomp\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t$(EXTRA_TARGET_FLAGS)   \\\n+\t\t$(EXTRA_TARGET_FLAGS)  \\\n+\t\t  \\\n \t\tTFLAGS=\"$(STAGE1_TFLAGS)\" \\\n \t\t$(TARGET-stage1-target-libgomp)\n \n@@ -40929,7 +40738,7 @@ clean-stage1-target-libgomp:\n \tfi; \\\n \tcd $(TARGET_SUBDIR)/libgomp && \\\n \t$(MAKE) $(EXTRA_TARGET_FLAGS)  \\\n-\t\t clean\n+\t  clean\n @endif target-libgomp-bootstrap\n \n \n@@ -40970,9 +40779,7 @@ clean-stage2-target-libgomp:\n \t  $(MAKE) stage2-start; \\\n \tfi; \\\n \tcd $(TARGET_SUBDIR)/libgomp && \\\n-\t$(MAKE) $(EXTRA_TARGET_FLAGS)  \\\n-\t\t  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_TARGET_FLAGS)   clean\n @endif target-libgomp-bootstrap\n \n \n@@ -41013,9 +40820,7 @@ clean-stage3-target-libgomp:\n \t  $(MAKE) stage3-start; \\\n \tfi; \\\n \tcd $(TARGET_SUBDIR)/libgomp && \\\n-\t$(MAKE) $(EXTRA_TARGET_FLAGS)  \\\n-\t\t  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_TARGET_FLAGS)   clean\n @endif target-libgomp-bootstrap\n \n \n@@ -41056,9 +40861,7 @@ clean-stage4-target-libgomp:\n \t  $(MAKE) stage4-start; \\\n \tfi; \\\n \tcd $(TARGET_SUBDIR)/libgomp && \\\n-\t$(MAKE) $(EXTRA_TARGET_FLAGS)  \\\n-\t\t  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_TARGET_FLAGS)   clean\n @endif target-libgomp-bootstrap\n \n \n@@ -41099,9 +40902,7 @@ clean-stageprofile-target-libgomp:\n \t  $(MAKE) stageprofile-start; \\\n \tfi; \\\n \tcd $(TARGET_SUBDIR)/libgomp && \\\n-\t$(MAKE) $(EXTRA_TARGET_FLAGS)  \\\n-\t\t  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_TARGET_FLAGS)   clean\n @endif target-libgomp-bootstrap\n \n \n@@ -41142,9 +40943,7 @@ clean-stagefeedback-target-libgomp:\n \t  $(MAKE) stagefeedback-start; \\\n \tfi; \\\n \tcd $(TARGET_SUBDIR)/libgomp && \\\n-\t$(MAKE) $(EXTRA_TARGET_FLAGS)  \\\n-\t\t  \\\n-\t\t clean\n+\t$(MAKE) $(EXTRA_TARGET_FLAGS)   clean\n @endif target-libgomp-bootstrap\n \n \n@@ -41601,7 +41400,7 @@ all-target-libitm: configure-target-libitm\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(NORMAL_TARGET_EXPORTS)  \\\n \t(cd $(TARGET_SUBDIR)/libitm && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n \t\t$(TARGET-target-libitm))\n @endif target-libitm\n \n@@ -42058,7 +41857,7 @@ all-target-libatomic: configure-target-libatomic\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t$(NORMAL_TARGET_EXPORTS)  \\\n \t(cd $(TARGET_SUBDIR)/libatomic && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)  \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n \t\t$(TARGET-target-libatomic))\n @endif target-libatomic\n "}, {"sha": "146666a4517c71fc7f36315c32362fd099d6161d", "filename": "Makefile.tpl", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2", "patch": "@@ -615,6 +615,12 @@ EXTRA_HOST_FLAGS = \\\n \n FLAGS_TO_PASS = $(BASE_FLAGS_TO_PASS) $(EXTRA_HOST_FLAGS)\n \n+# Flags to pass to stage1 or when not bootstrapping.\n+\n+STAGE1_FLAGS_TO_PASS = \\\n+\tLDFLAGS=\"$${LDFLAGS}\" \\\n+\tHOST_LIBS=\"$${HOST_LIBS}\"\n+\n # Flags to pass to stage2 and later makes.\n \n POSTSTAGE1_FLAGS_TO_PASS = \\\n@@ -1076,7 +1082,7 @@ all-[+prefix+][+module+]: configure-[+prefix+][+module+][+ IF bootstrap +][+ ELS\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n \t[+exports+] [+extra_exports+] \\\n \t(cd [+subdir+]/[+module+] && \\\n-\t  $(MAKE) $(BASE_FLAGS_TO_PASS) [+args+] [+extra_make_flags+] \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) [+args+] [+stage1_args+] [+extra_make_flags+] \\\n \t\t$(TARGET-[+prefix+][+module+]))\n @endif [+prefix+][+module+]\n \n@@ -1109,9 +1115,8 @@ all-stage[+id+]-[+prefix+][+module+]: configure-stage[+id+]-[+prefix+][+module+]\n \t\tCFLAGS_FOR_TARGET=\"$(CFLAGS_FOR_TARGET)\" \\\n \t\tCXXFLAGS_FOR_TARGET=\"$(CXXFLAGS_FOR_TARGET)\" \\\n \t\tLIBCFLAGS_FOR_TARGET=\"$(LIBCFLAGS_FOR_TARGET)\" \\\n-\t\t[+args+] [+\n-\t\tIF prev +][+poststage1_args+][+ ENDIF prev\n-\t\t+] [+extra_make_flags+] \\\n+\t\t[+args+] [+IF prev +][+poststage1_args+][+ ELSE prev +] \\\n+\t\t[+stage1_args+][+ ENDIF prev +] [+extra_make_flags+] \\\n \t\tTFLAGS=\"$(STAGE[+id+]_TFLAGS)\" \\\n \t\t$(TARGET-stage[+id+]-[+prefix+][+module+])\n \n@@ -1125,9 +1130,8 @@ clean-stage[+id+]-[+prefix+][+module+]:\n \t  $(MAKE) stage[+id+]-start; \\\n \tfi; \\\n \tcd [+subdir+]/[+module+] && \\\n-\t$(MAKE) [+args+] [+ IF prev +] \\\n-\t\t[+poststage1_args+] [+ ENDIF prev +] \\\n-\t\t[+extra_make_flags+] clean\n+\t$(MAKE) [+args+] [+ IF prev +][+poststage1_args+][+ ELSE prev +] \\\n+\t[+stage1_args+][+ ENDIF prev +] [+extra_make_flags+] clean\n @endif [+prefix+][+module+]-bootstrap\n \n [+ ENDFOR bootstrap_stage +]\n@@ -1162,6 +1166,7 @@ clean-stage[+id+]-[+prefix+][+module+]:\n        exports=\"$(HOST_EXPORTS)\"\n        poststage1_exports=\"$(POSTSTAGE1_HOST_EXPORTS)\"\n        args=\"$(EXTRA_HOST_FLAGS)\"\n+       stage1_args=\"$(STAGE1_FLAGS_TO_PASS)\"\n        poststage1_args=\"$(POSTSTAGE1_FLAGS_TO_PASS)\" +]\n \n .PHONY: check-[+module+] maybe-check-[+module+]"}, {"sha": "b2d28d5215454d3bb17c9f4c243c0359a4d8cb51", "filename": "configure", "status": "modified", "additions": 107, "deletions": 17, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2", "patch": "@@ -648,8 +648,8 @@ clooglibs\n islinc\n poststage1_ldflags\n poststage1_libs\n-stage1_libs\n stage1_ldflags\n+stage1_libs\n extra_isl_gmp_configure_flags\n extra_mpc_mpfr_configure_flags\n extra_mpc_gmp_configure_flags\n@@ -763,8 +763,8 @@ with_gmp\n with_gmp_include\n with_gmp_lib\n with_host_libstdcxx\n-with_stage1_ldflags\n with_stage1_libs\n+with_stage1_ldflags\n with_boot_libs\n with_boot_ldflags\n with_cloog\n@@ -1514,9 +1514,9 @@ Optional Packages:\n   --with-gmp-lib=PATH     specify directory for the installed GMP library\n   --with-host-libstdcxx=L use linker arguments L to link with libstdc++ when\n                           linking with PPL\n+  --with-stage1-libs=LIBS libraries for stage1\n   --with-stage1-ldflags=FLAGS\n                           linker flags for stage1\n-  --with-stage1-libs=LIBS libraries for stage1\n   --with-boot-libs=LIBS   libraries for stage2 and later\n   --with-boot-ldflags=FLAGS\n                           linker flags for stage2 and later\n@@ -1765,6 +1765,52 @@ fi\n \n } # ac_fn_cxx_try_compile\n \n+# ac_fn_cxx_try_link LINENO\n+# -------------------------\n+# Try to link conftest.$ac_ext, and return whether this succeeded.\n+ac_fn_cxx_try_link ()\n+{\n+  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n+  rm -f conftest.$ac_objext conftest$ac_exeext\n+  if { { ac_try=\"$ac_link\"\n+case \"(($ac_try\" in\n+  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n+  *) ac_try_echo=$ac_try;;\n+esac\n+eval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n+$as_echo \"$ac_try_echo\"; } >&5\n+  (eval \"$ac_link\") 2>conftest.err\n+  ac_status=$?\n+  if test -s conftest.err; then\n+    grep -v '^ *+' conftest.err >conftest.er1\n+    cat conftest.er1 >&5\n+    mv -f conftest.er1 conftest.err\n+  fi\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; } && {\n+\t test -z \"$ac_cxx_werror_flag\" ||\n+\t test ! -s conftest.err\n+       } && test -s conftest$ac_exeext && {\n+\t test \"$cross_compiling\" = yes ||\n+\t $as_test_x conftest$ac_exeext\n+       }; then :\n+  ac_retval=0\n+else\n+  $as_echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+\tac_retval=1\n+fi\n+  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information\n+  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would\n+  # interfere with the next link command; also delete a directory that is\n+  # left behind by Apple's compiler.  We do this before executing the actions.\n+  rm -rf conftest.dSYM conftest_ipa8_conftest.oo\n+  eval $as_lineno_stack; test \"x$as_lineno_stack\" = x && { as_lineno=; unset as_lineno;}\n+  return $ac_retval\n+\n+} # ac_fn_cxx_try_link\n+\n # ac_fn_c_try_link LINENO\n # -----------------------\n # Try to link conftest.$ac_ext, and return whether this succeeded.\n@@ -4829,6 +4875,44 @@ if test -z \"$LD\"; then\n   fi\n fi\n \n+# Check whether -static-libstdc++ -static-libgcc is supported.\n+have_static_libs=no\n+if test \"$GCC\" = yes; then\n+  saved_LDFLAGS=\"$LDFLAGS\"\n+\n+  LDFLAGS=\"$LDFLAGS -static-libstdc++ -static-libgcc\"\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether g++ accepts -static-libstdc++ -static-libgcc\" >&5\n+$as_echo_n \"checking whether g++ accepts -static-libstdc++ -static-libgcc... \" >&6; }\n+  ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+int main() {}\n+_ACEOF\n+if ac_fn_cxx_try_link \"$LINENO\"; then :\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }; have_static_libs=yes\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+  ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n+\n+  LDFLAGS=\"$saved_LDFLAGS\"\n+fi\n+\n \n \n \n@@ -5558,32 +5642,38 @@ case $with_host_libstdcxx in\n     ;;\n esac\n \n-# Linker flags to use for stage1 or when not boostrapping.\n+# Libraries to use for stage1 or when not bootstrapping.\n \n-# Check whether --with-stage1-ldflags was given.\n-if test \"${with_stage1_ldflags+set}\" = set; then :\n-  withval=$with_stage1_ldflags; if test \"$withval\" = \"no\" -o \"$withval\" = \"yes\"; then\n-   stage1_ldflags=\n+# Check whether --with-stage1-libs was given.\n+if test \"${with_stage1_libs+set}\" = set; then :\n+  withval=$with_stage1_libs; if test \"$withval\" = \"no\" -o \"$withval\" = \"yes\"; then\n+   stage1_libs=\n  else\n-   stage1_ldflags=$withval\n+   stage1_libs=$withval\n  fi\n else\n-  stage1_ldflags=\n+  stage1_libs=$with_host_libstdcxx\n fi\n \n \n \n-# Libraries to use for stage1 or when not bootstrapping.\n+# Linker flags to use for stage1 or when not bootstrapping.\n \n-# Check whether --with-stage1-libs was given.\n-if test \"${with_stage1_libs+set}\" = set; then :\n-  withval=$with_stage1_libs; if test \"$withval\" = \"no\" -o \"$withval\" = \"yes\"; then\n-   stage1_libs=\n+# Check whether --with-stage1-ldflags was given.\n+if test \"${with_stage1_ldflags+set}\" = set; then :\n+  withval=$with_stage1_ldflags; if test \"$withval\" = \"no\" -o \"$withval\" = \"yes\"; then\n+   stage1_ldflags=\n  else\n-   stage1_libs=$withval\n+   stage1_ldflags=$withval\n  fi\n else\n-  stage1_libs=$with_host_libstdcxx\n+  stage1_ldflags=\n+ # In stage 1, default to linking libstdc++ and libgcc statically with GCC\n+ # if supported.  But if the user explicitly specified the libraries to use,\n+ # trust that they are doing what they want.\n+ if test \"$stage1_libs\" = \"\" -a \"$have_static_libs\" = yes; then\n+   stage1_ldflags=\"-static-libstdc++ -static-libgcc\"\n+ fi\n fi\n \n "}, {"sha": "958eadd5e7818058a2d558da9599a9e65e6936eb", "filename": "configure.ac", "status": "modified", "additions": 33, "deletions": 11, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2", "patch": "@@ -1182,6 +1182,22 @@ if test -z \"$LD\"; then\n   fi\n fi\n \n+# Check whether -static-libstdc++ -static-libgcc is supported.\n+have_static_libs=no\n+if test \"$GCC\" = yes; then\n+  saved_LDFLAGS=\"$LDFLAGS\"\n+\n+  LDFLAGS=\"$LDFLAGS -static-libstdc++ -static-libgcc\"\n+  AC_MSG_CHECKING([whether g++ accepts -static-libstdc++ -static-libgcc])\n+  AC_LANG_PUSH(C++)\n+  AC_LINK_IFELSE([int main() {}],\n+    [AC_MSG_RESULT([yes]); have_static_libs=yes],\n+    [AC_MSG_RESULT([no])])\n+  AC_LANG_POP(C++)\n+\n+  LDFLAGS=\"$saved_LDFLAGS\"\n+fi\n+\n ACX_PROG_GNAT\n ACX_PROG_CMP_IGNORE_INITIAL\n \n@@ -1478,17 +1494,6 @@ case $with_host_libstdcxx in\n     ;;\n esac\n \n-# Linker flags to use for stage1 or when not boostrapping.\n-AC_ARG_WITH(stage1-ldflags,\n-[AS_HELP_STRING([--with-stage1-ldflags=FLAGS], [linker flags for stage1])],\n-[if test \"$withval\" = \"no\" -o \"$withval\" = \"yes\"; then\n-   stage1_ldflags=\n- else\n-   stage1_ldflags=$withval\n- fi],\n-[stage1_ldflags=])\n-AC_SUBST(stage1_ldflags)\n-\n # Libraries to use for stage1 or when not bootstrapping.\n AC_ARG_WITH(stage1-libs,\n [AS_HELP_STRING([--with-stage1-libs=LIBS], [libraries for stage1])],\n@@ -1500,6 +1505,23 @@ AC_ARG_WITH(stage1-libs,\n [stage1_libs=$with_host_libstdcxx])\n AC_SUBST(stage1_libs)\n \n+# Linker flags to use for stage1 or when not bootstrapping.\n+AC_ARG_WITH(stage1-ldflags,\n+[AS_HELP_STRING([--with-stage1-ldflags=FLAGS], [linker flags for stage1])],\n+[if test \"$withval\" = \"no\" -o \"$withval\" = \"yes\"; then\n+   stage1_ldflags=\n+ else\n+   stage1_ldflags=$withval\n+ fi],\n+[stage1_ldflags=\n+ # In stage 1, default to linking libstdc++ and libgcc statically with GCC\n+ # if supported.  But if the user explicitly specified the libraries to use,\n+ # trust that they are doing what they want.\n+ if test \"$stage1_libs\" = \"\" -a \"$have_static_libs\" = yes; then\n+   stage1_ldflags=\"-static-libstdc++ -static-libgcc\"\n+ fi])\n+AC_SUBST(stage1_ldflags)\n+\n # Libraries to use for stage2 and later builds.  This defaults to the\n # argument passed to --with-host-libstdcxx.\n AC_ARG_WITH(boot-libs,"}, {"sha": "93162909e49c70bf5a56fdc20b964a9a8899e4a6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2", "patch": "@@ -1,3 +1,8 @@\n+2012-10-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR bootstrap/54820\n+\t* gcc-interface/Make-lang.in (GCC_LINK): Remove hardcoded options.\n+\n 2012-10-15  Matthias Klose  <doko@ubuntu.com>\n \n \t* gcc-interface/Makefile.in: Match arm*-*-linux-*eabi* for"}, {"sha": "a2c868b861439e8d6a4e1ec9962b0a47846abe76", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=0b21f5d363e20cb13510ed63dc70ff7fbf7fb7b2", "patch": "@@ -172,7 +172,7 @@ endif\n # Strip -Werror during linking for the LTO bootstrap\n GCC_LINKERFLAGS = $(filter-out -Werror, $(ALL_LINKERFLAGS))\n \n-GCC_LINK=$(LINKER) $(GCC_LINKERFLAGS) -static-libgcc -static-libstdc++ $(LDFLAGS)\n+GCC_LINK=$(LINKER) $(GCC_LINKERFLAGS) $(LDFLAGS)\n \n # Lists of files for various purposes.\n "}]}