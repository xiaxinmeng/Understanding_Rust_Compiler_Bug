{"sha": "90922d36383f2d2f5d09f26046a48d71168a166b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA5MjJkMzYzODNmMmQyZjVkMDlmMjYwNDZhNDhkNzExNjhhMTY2Yg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2012-10-17T16:49:26Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2012-10-17T16:49:26Z"}, "message": "opth-gen.awk (TARGET_* generation): Always generate TARGET_<xxx> for Mask options, whether they use Var(...) or not.\n\n2012-10-17  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\t* opth-gen.awk (TARGET_* generation): Always generate TARGET_<xxx>\n\tfor Mask options, whether they use Var(...) or not.\n\n\t* config/linux-android.h (ANDROID_TARGET_OS_CPP_BUILTINS): Use\n\tTARGET_<xxx> instead of OPTION_<xxx>.\n\t* config/i386/i386.h (TARGET_64BIT): Likewise.\n\t(TARGET_MMX): Likewise.\n\t(TARGET_3DNOW): Likewise.\n\t(TARGET_3DNOW_A): Likewise.\n\t(TARGET_SSE): Likewise.\n\t(TARGET_SSE2): Likewise.\n\t(TARGET_SSE3): Likewise.\n\t(TARGET_SSSE3): Likewise.\n\t(TARGET_SSE4_1): Likewise.\n\t(TARGET_SSE4_2): Likewise.\n\t(TARGET_AVX): Likewise.\n\t(TARGET_AVX2): Likewise.\n\t(TARGET_FMA): Likewise.\n\t(TARGET_SSE4A): Likewise.\n\t(TARGET_FMA4): Likewise.\n\t(TARGET_XOP): Likewise.\n\t(TARGET_LWP): Likewise.\n\t(TARGET_ROUND): Likewise.\n\t(TARGET_ABM): Likewise.\n\t(TARGET_BMI): Likewise.\n\t(TARGET_BMI2): Likewise.\n\t(TARGET_LZCNT): Likewise.\n\t(TARGET_TBM): Likewise.\n\t(TARGET_POPCNT): Likewise.\n\t(TARGET_SAHF): Likewise.\n\t(TARGET_MOVBE): Likewise.\n\t(TARGET_CRC32): Likewise.\n\t(TARGET_AES): Likewise.\n\t(TARGET_PCLMUL): Likewise.\n\t(TARGET_CMPXCHG16B): Likewise.\n\t(TARGET_FSGSBASE): Likewise.\n\t(TARGET_RDRND): Likewise.\n\t(TARGET_F16C): Likewise.\n\t(TARGET_RTM     ): Likewise.\n\t(TARGET_HLE): Likewise.\n\t(TARGET_RDSEED): Likewise.\n\t(TARGET_PRFCHW): Likewise.\n\t(TARGET_ADX): Likewise.\n\t(TARGET_64BIT): Likewise.\n\t(TARGET_MMX): Likewise.\n\t(TARGET_3DNOW): Likewise.\n\t(TARGET_3DNOW_A): Likewise.\n\t(TARGET_SSE): Likewise.\n\t(TARGET_SSE2): Likewise.\n\t(TARGET_SSE3): Likewise.\n\t(TARGET_SSSE3): Likewise.\n\t(TARGET_SSE4_1): Likewise.\n\t(TARGET_SSE4_2): Likewise.\n\t(TARGET_AVX): Likewise.\n\t(TARGET_AVX2): Likewise.\n\t(TARGET_FMA): Likewise.\n\t(TARGET_SSE4A): Likewise.\n\t(TARGET_FMA4): Likewise.\n\t(TARGET_XOP): Likewise.\n\t(TARGET_LWP): Likewise.\n\t(TARGET_ROUND): Likewise.\n\t(TARGET_ABM): Likewise.\n\t(TARGET_BMI): Likewise.\n\t(TARGET_BMI2): Likewise.\n\t(TARGET_LZCNT): Likewise.\n\t(TARGET_TBM): Likewise.\n\t(TARGET_POPCNT): Likewise.\n\t(TARGET_SAHF): Likewise.\n\t(TARGET_MOVBE): Likewise.\n\t(TARGET_CRC32): Likewise.\n\t(TARGET_AES): Likewise.\n\t(TARGET_PCLMUL): Likewise.\n\t(TARGET_CMPXCHG16B): Likewise.\n\t(TARGET_FSGSBASE): Likewise.\n\t(TARGET_RDRND): Likewise.\n\t(TARGET_F16C): Likewise.\n\t(TARGET_RTM): Likewise.\n\t(TARGET_HLE): Likewise.\n\t(TARGET_RDSEED): Likewise.\n\t(TARGET_PRFCHW): Likewise.\n\t(TARGET_ADX): Likewise.\n\t(TARGET_LP64): Likewise.\n\t(TARGET_X32): Likewise.\n\t(TARGET_ISA_ROUND): Likewise.\n\t* config/i386/darwin.h (TARGET_64BIT): Likewise.\n\n\t* doc/options.texi (Mask): Update documentation to specify only\n\tTARGET_<xxx> is generated.\n\nFrom-SVN: r192537", "tree": {"sha": "2525bdc5dbe974859e5cf8110f38b96c7469cc7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2525bdc5dbe974859e5cf8110f38b96c7469cc7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90922d36383f2d2f5d09f26046a48d71168a166b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90922d36383f2d2f5d09f26046a48d71168a166b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90922d36383f2d2f5d09f26046a48d71168a166b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90922d36383f2d2f5d09f26046a48d71168a166b/comments", "author": null, "committer": null, "parents": [{"sha": "4208399956021cee8e42931d06c4b6182dfc4d3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4208399956021cee8e42931d06c4b6182dfc4d3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4208399956021cee8e42931d06c4b6182dfc4d3e"}], "stats": {"total": 197, "additions": 142, "deletions": 55}, "files": [{"sha": "992322e169293c578176ec2ab1da9cbaf02c08f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90922d36383f2d2f5d09f26046a48d71168a166b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90922d36383f2d2f5d09f26046a48d71168a166b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90922d36383f2d2f5d09f26046a48d71168a166b", "patch": "@@ -1,3 +1,94 @@\n+2012-10-17  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\t* opth-gen.awk (TARGET_* generation): Always generate TARGET_<xxx>\n+\tfor Mask options, whether they use Var(...) or not.\n+\n+\t* config/linux-android.h (ANDROID_TARGET_OS_CPP_BUILTINS): Use\n+\tTARGET_<xxx> instead of OPTION_<xxx>.\n+\t* config/i386/i386.h (TARGET_64BIT): Likewise.\n+\t(TARGET_MMX): Likewise.\n+\t(TARGET_3DNOW): Likewise.\n+\t(TARGET_3DNOW_A): Likewise.\n+\t(TARGET_SSE): Likewise.\n+\t(TARGET_SSE2): Likewise.\n+\t(TARGET_SSE3): Likewise.\n+\t(TARGET_SSSE3): Likewise.\n+\t(TARGET_SSE4_1): Likewise.\n+\t(TARGET_SSE4_2): Likewise.\n+\t(TARGET_AVX): Likewise.\n+\t(TARGET_AVX2): Likewise.\n+\t(TARGET_FMA): Likewise.\n+\t(TARGET_SSE4A): Likewise.\n+\t(TARGET_FMA4): Likewise.\n+\t(TARGET_XOP): Likewise.\n+\t(TARGET_LWP): Likewise.\n+\t(TARGET_ROUND): Likewise.\n+\t(TARGET_ABM): Likewise.\n+\t(TARGET_BMI): Likewise.\n+\t(TARGET_BMI2): Likewise.\n+\t(TARGET_LZCNT): Likewise.\n+\t(TARGET_TBM): Likewise.\n+\t(TARGET_POPCNT): Likewise.\n+\t(TARGET_SAHF): Likewise.\n+\t(TARGET_MOVBE): Likewise.\n+\t(TARGET_CRC32): Likewise.\n+\t(TARGET_AES): Likewise.\n+\t(TARGET_PCLMUL): Likewise.\n+\t(TARGET_CMPXCHG16B): Likewise.\n+\t(TARGET_FSGSBASE): Likewise.\n+\t(TARGET_RDRND): Likewise.\n+\t(TARGET_F16C): Likewise.\n+\t(TARGET_RTM     ): Likewise.\n+\t(TARGET_HLE): Likewise.\n+\t(TARGET_RDSEED): Likewise.\n+\t(TARGET_PRFCHW): Likewise.\n+\t(TARGET_ADX): Likewise.\n+\t(TARGET_64BIT): Likewise.\n+\t(TARGET_MMX): Likewise.\n+\t(TARGET_3DNOW): Likewise.\n+\t(TARGET_3DNOW_A): Likewise.\n+\t(TARGET_SSE): Likewise.\n+\t(TARGET_SSE2): Likewise.\n+\t(TARGET_SSE3): Likewise.\n+\t(TARGET_SSSE3): Likewise.\n+\t(TARGET_SSE4_1): Likewise.\n+\t(TARGET_SSE4_2): Likewise.\n+\t(TARGET_AVX): Likewise.\n+\t(TARGET_AVX2): Likewise.\n+\t(TARGET_FMA): Likewise.\n+\t(TARGET_SSE4A): Likewise.\n+\t(TARGET_FMA4): Likewise.\n+\t(TARGET_XOP): Likewise.\n+\t(TARGET_LWP): Likewise.\n+\t(TARGET_ROUND): Likewise.\n+\t(TARGET_ABM): Likewise.\n+\t(TARGET_BMI): Likewise.\n+\t(TARGET_BMI2): Likewise.\n+\t(TARGET_LZCNT): Likewise.\n+\t(TARGET_TBM): Likewise.\n+\t(TARGET_POPCNT): Likewise.\n+\t(TARGET_SAHF): Likewise.\n+\t(TARGET_MOVBE): Likewise.\n+\t(TARGET_CRC32): Likewise.\n+\t(TARGET_AES): Likewise.\n+\t(TARGET_PCLMUL): Likewise.\n+\t(TARGET_CMPXCHG16B): Likewise.\n+\t(TARGET_FSGSBASE): Likewise.\n+\t(TARGET_RDRND): Likewise.\n+\t(TARGET_F16C): Likewise.\n+\t(TARGET_RTM): Likewise.\n+\t(TARGET_HLE): Likewise.\n+\t(TARGET_RDSEED): Likewise.\n+\t(TARGET_PRFCHW): Likewise.\n+\t(TARGET_ADX): Likewise.\n+\t(TARGET_LP64): Likewise.\n+\t(TARGET_X32): Likewise.\n+\t(TARGET_ISA_ROUND): Likewise.\n+\t* config/i386/darwin.h (TARGET_64BIT): Likewise.\n+\n+\t* doc/options.texi (Mask): Update documentation to specify only\n+\tTARGET_<xxx> is generated.\n+\n 2012-10-17  Greta Yorsh  <Greta.Yorsh@arm.com>\n \n         * config/arm/arm.md (UNSPEC_PROLOGUE_USE): Rename this..."}, {"sha": "46f20b15e40a124194ba3c2df4a9fd7978cef854", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90922d36383f2d2f5d09f26046a48d71168a166b/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90922d36383f2d2f5d09f26046a48d71168a166b/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=90922d36383f2d2f5d09f26046a48d71168a166b", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for x86 running Darwin.\n-   Copyright (C) 2001, 2002, 2004, 2005, 2006, 2007, 2008, 2010, 2011\n+   Copyright (C) 2001, 2002, 2004, 2005, 2006, 2007, 2008, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n    Contributed by Apple Computer Inc.\n \n@@ -27,7 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n #define DARWIN_X86 1\n \n #undef  TARGET_64BIT\n-#define TARGET_64BIT OPTION_ISA_64BIT\n+#define TARGET_64BIT TARGET_ISA_64BIT\n \n #ifdef IN_LIBGCC2\n #undef TARGET_64BIT"}, {"sha": "16db3ca1056ce0fbc1713d4c4dd1982fdf60573b", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 43, "deletions": 43, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90922d36383f2d2f5d09f26046a48d71168a166b/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90922d36383f2d2f5d09f26046a48d71168a166b/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=90922d36383f2d2f5d09f26046a48d71168a166b", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GCC for IA-32.\n    Copyright (C) 1988, 1992, 1994, 1995, 1996, 1997, 1998, 1999, 2000,\n-   2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n+   2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -41,51 +41,51 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n /* Redefines for option macros.  */\n \n-#define TARGET_64BIT\tOPTION_ISA_64BIT\n-#define TARGET_MMX\tOPTION_ISA_MMX\n-#define TARGET_3DNOW\tOPTION_ISA_3DNOW\n-#define TARGET_3DNOW_A\tOPTION_ISA_3DNOW_A\n-#define TARGET_SSE\tOPTION_ISA_SSE\n-#define TARGET_SSE2\tOPTION_ISA_SSE2\n-#define TARGET_SSE3\tOPTION_ISA_SSE3\n-#define TARGET_SSSE3\tOPTION_ISA_SSSE3\n-#define TARGET_SSE4_1\tOPTION_ISA_SSE4_1\n-#define TARGET_SSE4_2\tOPTION_ISA_SSE4_2\n-#define TARGET_AVX\tOPTION_ISA_AVX\n-#define TARGET_AVX2\tOPTION_ISA_AVX2\n-#define TARGET_FMA\tOPTION_ISA_FMA\n-#define TARGET_SSE4A\tOPTION_ISA_SSE4A\n-#define TARGET_FMA4\tOPTION_ISA_FMA4\n-#define TARGET_XOP\tOPTION_ISA_XOP\n-#define TARGET_LWP\tOPTION_ISA_LWP\n-#define TARGET_ROUND\tOPTION_ISA_ROUND\n-#define TARGET_ABM\tOPTION_ISA_ABM\n-#define TARGET_BMI\tOPTION_ISA_BMI\n-#define TARGET_BMI2\tOPTION_ISA_BMI2\n-#define TARGET_LZCNT\tOPTION_ISA_LZCNT\n-#define TARGET_TBM\tOPTION_ISA_TBM\n-#define TARGET_POPCNT\tOPTION_ISA_POPCNT\n-#define TARGET_SAHF\tOPTION_ISA_SAHF\n-#define TARGET_MOVBE\tOPTION_ISA_MOVBE\n-#define TARGET_CRC32\tOPTION_ISA_CRC32\n-#define TARGET_AES\tOPTION_ISA_AES\n-#define TARGET_PCLMUL\tOPTION_ISA_PCLMUL\n-#define TARGET_CMPXCHG16B OPTION_ISA_CX16\n-#define TARGET_FSGSBASE\tOPTION_ISA_FSGSBASE\n-#define TARGET_RDRND\tOPTION_ISA_RDRND\n-#define TARGET_F16C\tOPTION_ISA_F16C\n-#define TARGET_RTM      OPTION_ISA_RTM\n-#define TARGET_HLE\tOPTION_ISA_HLE\n-#define TARGET_RDSEED\tOPTION_ISA_RDSEED\n-#define TARGET_PRFCHW\tOPTION_ISA_PRFCHW\n-#define TARGET_ADX\tOPTION_ISA_ADX\n-\n-#define TARGET_LP64\tOPTION_ABI_64\n-#define TARGET_X32\tOPTION_ABI_X32\n+#define TARGET_64BIT\tTARGET_ISA_64BIT\n+#define TARGET_MMX\tTARGET_ISA_MMX\n+#define TARGET_3DNOW\tTARGET_ISA_3DNOW\n+#define TARGET_3DNOW_A\tTARGET_ISA_3DNOW_A\n+#define TARGET_SSE\tTARGET_ISA_SSE\n+#define TARGET_SSE2\tTARGET_ISA_SSE2\n+#define TARGET_SSE3\tTARGET_ISA_SSE3\n+#define TARGET_SSSE3\tTARGET_ISA_SSSE3\n+#define TARGET_SSE4_1\tTARGET_ISA_SSE4_1\n+#define TARGET_SSE4_2\tTARGET_ISA_SSE4_2\n+#define TARGET_AVX\tTARGET_ISA_AVX\n+#define TARGET_AVX2\tTARGET_ISA_AVX2\n+#define TARGET_FMA\tTARGET_ISA_FMA\n+#define TARGET_SSE4A\tTARGET_ISA_SSE4A\n+#define TARGET_FMA4\tTARGET_ISA_FMA4\n+#define TARGET_XOP\tTARGET_ISA_XOP\n+#define TARGET_LWP\tTARGET_ISA_LWP\n+#define TARGET_ROUND\tTARGET_ISA_ROUND\n+#define TARGET_ABM\tTARGET_ISA_ABM\n+#define TARGET_BMI\tTARGET_ISA_BMI\n+#define TARGET_BMI2\tTARGET_ISA_BMI2\n+#define TARGET_LZCNT\tTARGET_ISA_LZCNT\n+#define TARGET_TBM\tTARGET_ISA_TBM\n+#define TARGET_POPCNT\tTARGET_ISA_POPCNT\n+#define TARGET_SAHF\tTARGET_ISA_SAHF\n+#define TARGET_MOVBE\tTARGET_ISA_MOVBE\n+#define TARGET_CRC32\tTARGET_ISA_CRC32\n+#define TARGET_AES\tTARGET_ISA_AES\n+#define TARGET_PCLMUL\tTARGET_ISA_PCLMUL\n+#define TARGET_CMPXCHG16B TARGET_ISA_CX16\n+#define TARGET_FSGSBASE\tTARGET_ISA_FSGSBASE\n+#define TARGET_RDRND\tTARGET_ISA_RDRND\n+#define TARGET_F16C\tTARGET_ISA_F16C\n+#define TARGET_RTM      TARGET_ISA_RTM\n+#define TARGET_HLE\tTARGET_ISA_HLE\n+#define TARGET_RDSEED\tTARGET_ISA_RDSEED\n+#define TARGET_PRFCHW\tTARGET_ISA_PRFCHW\n+#define TARGET_ADX\tTARGET_ISA_ADX\n+\n+#define TARGET_LP64\tTARGET_ABI_64\n+#define TARGET_X32\tTARGET_ABI_X32\n \n /* SSE4.1 defines round instructions */\n #define\tOPTION_MASK_ISA_ROUND\tOPTION_MASK_ISA_SSE4_1\n-#define\tOPTION_ISA_ROUND\t((ix86_isa_flags & OPTION_MASK_ISA_ROUND) != 0)\n+#define\tTARGET_ISA_ROUND\t((ix86_isa_flags & OPTION_MASK_ISA_ROUND) != 0)\n \n #include \"config/vxworks-dummy.h\"\n "}, {"sha": "e74e261d78072e025f4e94e02e7120fd6cdb3bbe", "filename": "gcc/config/linux-android.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90922d36383f2d2f5d09f26046a48d71168a166b/gcc%2Fconfig%2Flinux-android.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90922d36383f2d2f5d09f26046a48d71168a166b/gcc%2Fconfig%2Flinux-android.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux-android.h?ref=90922d36383f2d2f5d09f26046a48d71168a166b", "patch": "@@ -1,5 +1,5 @@\n /* Configuration file for Linux Android targets.\n-   Copyright (C) 2008, 2010\n+   Copyright (C) 2008, 2010, 2012\n    Free Software Foundation, Inc.\n    Contributed by Doug Kwan (dougkwan@google.com)\n    Rewritten by CodeSourcery, Inc.\n@@ -22,7 +22,7 @@\n \n #define ANDROID_TARGET_OS_CPP_BUILTINS()\t\t\t\\\n     do {\t\t\t\t\t\t\t\\\n-\tif (OPTION_ANDROID)\t\t\t\t\t\\\n+\tif (TARGET_ANDROID)\t\t\t\t\t\\\n \t  builtin_define (\"__ANDROID__\");\t\t\t\\\n     } while (0)\n "}, {"sha": "f6a31f8d4c7f182ad4f00ef3122fd82a6352ca77", "filename": "gcc/doc/options.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90922d36383f2d2f5d09f26046a48d71168a166b/gcc%2Fdoc%2Foptions.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90922d36383f2d2f5d09f26046a48d71168a166b/gcc%2Fdoc%2Foptions.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Foptions.texi?ref=90922d36383f2d2f5d09f26046a48d71168a166b", "patch": "@@ -343,8 +343,8 @@ for the option.  If the option is attached to @samp{target_flags},\n the script will set the macro @code{MASK_@var{name}} to the appropriate\n bitmask.  It will also declare a @code{TARGET_@var{name}} macro that has\n the value 1 when the option is active and 0 otherwise.  If you use @code{Var}\n-to attach the option to a different variable, the associated macros are\n-called @code{OPTION_MASK_@var{name}} and @code{OPTION_@var{name}} respectively.\n+to attach the option to a different variable, the bitmask macro with be\n+called @code{OPTION_MASK_@var{name}}.\n \n @item InverseMask(@var{othername})\n @itemx InverseMask(@var{othername}, @var{thisname})"}, {"sha": "e98a66f5b58207582e61095b2d4a11117a69d4ab", "filename": "gcc/opth-gen.awk", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90922d36383f2d2f5d09f26046a48d71168a166b/gcc%2Fopth-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90922d36383f2d2f5d09f26046a48d71168a166b/gcc%2Fopth-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopth-gen.awk?ref=90922d36383f2d2f5d09f26046a48d71168a166b", "patch": "@@ -375,15 +375,13 @@ for (i = 0; i < n_opts; i++) {\n \tif (name != \"\" && mask_macros[name] == 0) {\n \t\tmask_macros[name] = 1\n \t\tvname = var_name(flags[i])\n-\t\tmacro = \"OPTION_\"\n \t\tmask = \"OPTION_MASK_\"\n \t\tif (vname == \"\") {\n \t\t\tvname = \"target_flags\"\n-\t\t\tmacro = \"TARGET_\"\n \t\t\tmask = \"MASK_\"\n \t\t\textra_mask_macros[name] = 1\n \t\t}\n-\t\tprint \"#define \" macro name \\\n+\t\tprint \"#define TARGET_\" name \\\n \t\t      \" ((\" vname \" & \" mask name \") != 0)\"\n \t}\n }\n@@ -398,14 +396,12 @@ for (i = 0; i < n_opts; i++) {\n \topt = opt_args(\"InverseMask\", flags[i])\n \tif (opt ~ \",\") {\n \t\tvname = var_name(flags[i])\n-\t\tmacro = \"OPTION_\"\n \t\tmask = \"OPTION_MASK_\"\n \t\tif (vname == \"\") {\n \t\t\tvname = \"target_flags\"\n-\t\t\tmacro = \"TARGET_\"\n \t\t\tmask = \"MASK_\"\n \t\t}\n-\t\tprint \"#define \" macro nth_arg(1, opt) \\\n+\t\tprint \"#define TARGET_\" nth_arg(1, opt) \\\n \t\t      \" ((\" vname \" & \" mask nth_arg(0, opt) \") == 0)\"\n \t}\n }"}]}