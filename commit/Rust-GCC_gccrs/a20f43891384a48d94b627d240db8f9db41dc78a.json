{"sha": "a20f43891384a48d94b627d240db8f9db41dc78a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTIwZjQzODkxMzg0YTQ4ZDk0YjYyN2QyNDBkYjhmOWRiNDFkYzc4YQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T10:40:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T10:40:00Z"}, "message": "[multiple changes]\n\n2011-08-02  Ed Falis  <falis@adacore.com>\n\n\t* s-taprop-vxworks.adb, s-intman-vxworks.adb, s-intman-vxworks.ads:\n\tUpdate header.\n\n2011-08-02  Bob Duff  <duff@adacore.com>\n\n\t* opt.ads: Minor comment fix.\n\n2011-08-02  Bob Duff  <duff@adacore.com>\n\n\t* sem_ch12.adb (Analyze_Package_Instantiation,\n\tAnalyze_Subprogram_Instantiation): Turn off style checking while\n\tanalyzing an instance. Whatever style checks that apply to the generic\n\tunit should apply, so it makes no sense to apply them in an instance.\n\tThis was causing trouble when compiling an instance of a runtime\n\tunit that violates the -gnatyO switch.\n\t* stylesw.adb (Set_Style_Check_Options): \"when 'O' =>\" was missing from\n\tone of the two case statements, causing spurious errors.\n\n2011-08-02  Robert Dewar  <dewar@adacore.com>\n\n\t* uname.adb: Minor reformatting.\n\t* gnatcmd.adb: Minor reformatting.\n\t* exp_attr.adb: Minor reformatting.\n\nFrom-SVN: r177131", "tree": {"sha": "ca89a1e68901ab5ab8ebc2e757b9a41018ddf33a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca89a1e68901ab5ab8ebc2e757b9a41018ddf33a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a20f43891384a48d94b627d240db8f9db41dc78a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a20f43891384a48d94b627d240db8f9db41dc78a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a20f43891384a48d94b627d240db8f9db41dc78a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a20f43891384a48d94b627d240db8f9db41dc78a/comments", "author": null, "committer": null, "parents": [{"sha": "90878b1250d7ef591b61912449df3d14bdec05cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90878b1250d7ef591b61912449df3d14bdec05cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90878b1250d7ef591b61912449df3d14bdec05cd"}], "stats": {"total": 106, "additions": 82, "deletions": 24}, "files": [{"sha": "f9e1bda9c2115346c158589df46cd1cbcb7fcdd4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a20f43891384a48d94b627d240db8f9db41dc78a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a20f43891384a48d94b627d240db8f9db41dc78a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a20f43891384a48d94b627d240db8f9db41dc78a", "patch": "@@ -1,3 +1,29 @@\n+2011-08-02  Ed Falis  <falis@adacore.com>\n+\n+\t* s-taprop-vxworks.adb, s-intman-vxworks.adb, s-intman-vxworks.ads:\n+\tUpdate header.\n+\n+2011-08-02  Bob Duff  <duff@adacore.com>\n+\n+\t* opt.ads: Minor comment fix.\n+\n+2011-08-02  Bob Duff  <duff@adacore.com>\n+\n+\t* sem_ch12.adb (Analyze_Package_Instantiation,\n+\tAnalyze_Subprogram_Instantiation): Turn off style checking while\n+\tanalyzing an instance. Whatever style checks that apply to the generic\n+\tunit should apply, so it makes no sense to apply them in an instance.\n+\tThis was causing trouble when compiling an instance of a runtime\n+\tunit that violates the -gnatyO switch.\n+\t* stylesw.adb (Set_Style_Check_Options): \"when 'O' =>\" was missing from\n+\tone of the two case statements, causing spurious errors.\n+\n+2011-08-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* uname.adb: Minor reformatting.\n+\t* gnatcmd.adb: Minor reformatting.\n+\t* exp_attr.adb: Minor reformatting.\n+\n 2011-08-02  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch5.adb (Expand_N_Assignment_Statement): under restriction"}, {"sha": "8990e0b293b5660296f3a9caebaad959d1c494b2", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a20f43891384a48d94b627d240db8f9db41dc78a/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a20f43891384a48d94b627d240db8f9db41dc78a/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=a20f43891384a48d94b627d240db8f9db41dc78a", "patch": "@@ -5355,7 +5355,6 @@ package body Exp_Attr is\n            Attribute_Universal_Literal_String     |\n            Attribute_Wchar_T_Size                 |\n            Attribute_Word_Size                    =>\n-\n          raise Program_Error;\n \n       --  The Asm_Input and Asm_Output attributes are not expanded at this\n@@ -5364,9 +5363,7 @@ package body Exp_Attr is\n \n       when Attribute_Asm_Input                    |\n            Attribute_Asm_Output                   =>\n-\n          null;\n-\n       end case;\n \n    exception\n@@ -5523,6 +5520,14 @@ package body Exp_Attr is\n       --  in the run time used. In the case of a configurable run time, it\n       --  is normal that some subprograms are not there.\n \n+      --  I don't understand this routine at all, why is this not just a\n+      --  call to RTE_Available? And if for some reason we need a different\n+      --  routine with different semantics, why is not in Rtsfind ???\n+\n+      ------------------\n+      -- Is_Available --\n+      ------------------\n+\n       function Is_Available (Entity : RE_Id) return Boolean is\n       begin\n          --  Assume that the unit will always be available when using a\n@@ -5532,6 +5537,8 @@ package body Exp_Attr is\n            or else RTE_Available (Entity);\n       end Is_Available;\n \n+   --  Start of processing for Find_Stream_Subprogram\n+\n    begin\n       if Present (Ent) then\n          return Ent;\n@@ -5550,11 +5557,12 @@ package body Exp_Attr is\n       --  This is disabled for AAMP, to avoid creating dependences on files not\n       --  supported in the AAMP library (such as s-fileio.adb).\n \n-      --  In the case of using a configurable run time, it is very likely\n+      --  Note: In the case of using a configurable run time, it is very likely\n       --  that stream routines for string types are not present (they require\n       --  file system support). In this case, the specific stream routines for\n       --  strings are not used, relying on the regular stream mechanism\n-      --  instead.\n+      --  instead. That is why we include the test Is_Available when dealing\n+      --  with these cases.\n \n       if VM_Target /= JVM_Target\n         and then not AAMP_On_Target"}, {"sha": "8f22273725c75f947f1a71de8c696e2c141726ae", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a20f43891384a48d94b627d240db8f9db41dc78a/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a20f43891384a48d94b627d240db8f9db41dc78a/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=a20f43891384a48d94b627d240db8f9db41dc78a", "patch": "@@ -1356,9 +1356,7 @@ procedure GNATCmd is\n       New_Line;\n    end Non_VMS_Usage;\n \n-   -------------------------------------\n-   -- Start of processing for GNATCmd --\n-   -------------------------------------\n+--  Start of processing for GNATCmd\n \n begin\n    --  Initializations"}, {"sha": "3f3b87256996e36dafed0d8573882286b902b78d", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a20f43891384a48d94b627d240db8f9db41dc78a/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a20f43891384a48d94b627d240db8f9db41dc78a/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=a20f43891384a48d94b627d240db8f9db41dc78a", "patch": "@@ -1184,7 +1184,7 @@ package Opt is\n    Style_Check : Boolean := False;\n    --  GNAT\n    --  Set True to perform style checks. Activates checks carried out in\n-   --  package Style (see body of this package for details of checks) This\n+   --  package Style (see body of this package for details of checks). This\n    --  flag is set True by either the -gnatg or -gnaty switches.\n \n    Suppress_All_Inlining : Boolean := False;"}, {"sha": "f1576e9264428861546c3ec17cad34d74729b0d6", "filename": "gcc/ada/s-intman-vxworks.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a20f43891384a48d94b627d240db8f9db41dc78a/gcc%2Fada%2Fs-intman-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a20f43891384a48d94b627d240db8f9db41dc78a/gcc%2Fada%2Fs-intman-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-intman-vxworks.adb?ref=a20f43891384a48d94b627d240db8f9db41dc78a", "patch": "@@ -19,10 +19,10 @@\n -- additional permissions described in the GCC Runtime Library Exception,   --\n -- version 3.1, as published by the Free Software Foundation.               --\n --                                                                          --\n--- In particular,  you can freely  distribute your programs  built with the --\n--- GNAT Pro compiler, including any required library run-time units,  using --\n--- any licensing terms  of your choosing.  See the AdaCore Software License --\n--- for full details.                                                        --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n -- Extensive contributions were provided by Ada Core Technologies, Inc.     --"}, {"sha": "564c1391feac5ad49bc204fc44d81bd0c323de21", "filename": "gcc/ada/s-intman-vxworks.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a20f43891384a48d94b627d240db8f9db41dc78a/gcc%2Fada%2Fs-intman-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a20f43891384a48d94b627d240db8f9db41dc78a/gcc%2Fada%2Fs-intman-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-intman-vxworks.ads?ref=a20f43891384a48d94b627d240db8f9db41dc78a", "patch": "@@ -19,10 +19,10 @@\n -- additional permissions described in the GCC Runtime Library Exception,   --\n -- version 3.1, as published by the Free Software Foundation.               --\n --                                                                          --\n--- In particular,  you can freely  distribute your programs  built with the --\n--- GNAT Pro compiler, including any required library run-time units,  using --\n--- any licensing terms  of your choosing.  See the AdaCore Software License --\n--- for full details.                                                        --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n -- Extensive contributions were provided by Ada Core Technologies, Inc.     --"}, {"sha": "d51a2ebaa7b477cc248db29095d78157bd69efa0", "filename": "gcc/ada/s-taprop-vxworks.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a20f43891384a48d94b627d240db8f9db41dc78a/gcc%2Fada%2Fs-taprop-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a20f43891384a48d94b627d240db8f9db41dc78a/gcc%2Fada%2Fs-taprop-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-vxworks.adb?ref=a20f43891384a48d94b627d240db8f9db41dc78a", "patch": "@@ -19,10 +19,10 @@\n -- additional permissions described in the GCC Runtime Library Exception,   --\n -- version 3.1, as published by the Free Software Foundation.               --\n --                                                                          --\n--- In particular,  you can freely  distribute your programs  built with the --\n--- GNAT Pro compiler, including any required library run-time units,  using --\n--- any licensing terms  of your choosing.  See the AdaCore Software License --\n--- for full details.                                                        --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n --                                                                          --\n -- GNARL was developed by the GNARL team at Florida State University.       --\n -- Extensive contributions were provided by Ada Core Technologies, Inc.     --"}, {"sha": "218028f7ddfdb486f197aba41e4839dd6cf60b7a", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a20f43891384a48d94b627d240db8f9db41dc78a/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a20f43891384a48d94b627d240db8f9db41dc78a/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=a20f43891384a48d94b627d240db8f9db41dc78a", "patch": "@@ -2975,6 +2975,8 @@ package body Sem_Ch12 is\n          return False;\n       end Might_Inline_Subp;\n \n+      Save_Style_Check : constant Boolean := Style_Check;\n+\n    --  Start of processing for Analyze_Package_Instantiation\n \n    begin\n@@ -2987,6 +2989,12 @@ package body Sem_Ch12 is\n \n       Instantiation_Node := N;\n \n+      --  Turn off style checking in instances. If the check is enabled on the\n+      --  generic unit, a warning in an instance would just be noise. If not\n+      --  enabled on the generic, then a warning in an instance is just wrong.\n+\n+      Style_Check := False;\n+\n       --  Case of instantiation of a generic package\n \n       if Nkind (N) = N_Package_Instantiation then\n@@ -3571,6 +3579,8 @@ package body Sem_Ch12 is\n          Set_Defining_Identifier (N, Act_Decl_Id);\n       end if;\n \n+      Style_Check := Save_Style_Check;\n+\n    <<Leave>>\n       if Has_Aspects (N) then\n          Analyze_Aspect_Specifications (N, Act_Decl_Id);\n@@ -3585,6 +3595,8 @@ package body Sem_Ch12 is\n          if Env_Installed then\n             Restore_Env;\n          end if;\n+\n+         Style_Check := Save_Style_Check;\n    end Analyze_Package_Instantiation;\n \n    --------------------------\n@@ -4104,6 +4116,8 @@ package body Sem_Ch12 is\n          end if;\n       end Analyze_Instance_And_Renamings;\n \n+      Save_Style_Check : constant Boolean := Style_Check;\n+\n    --  Start of processing for Analyze_Subprogram_Instantiation\n \n    begin\n@@ -4117,6 +4131,13 @@ package body Sem_Ch12 is\n       --  Make node global for error reporting\n \n       Instantiation_Node := N;\n+\n+      --  Turn off style checking in instances. If the check is enabled on the\n+      --  generic unit, a warning in an instance would just be noise. If not\n+      --  enabled on the generic, then a warning in an instance is just wrong.\n+\n+      Style_Check := False;\n+\n       Preanalyze_Actuals (N);\n \n       Init_Env;\n@@ -4352,6 +4373,8 @@ package body Sem_Ch12 is\n          Generic_Renamings_HTable.Reset;\n       end if;\n \n+      Style_Check := Save_Style_Check;\n+\n    <<Leave>>\n       if Has_Aspects (N) then\n          Analyze_Aspect_Specifications (N, Act_Decl_Id);\n@@ -4366,6 +4389,8 @@ package body Sem_Ch12 is\n          if Env_Installed then\n             Restore_Env;\n          end if;\n+\n+         Style_Check := Save_Style_Check;\n    end Analyze_Subprogram_Instantiation;\n \n    -------------------------"}, {"sha": "7c9d462cc234e10b1b3c40f07a961bd79f0f85ac", "filename": "gcc/ada/stylesw.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a20f43891384a48d94b627d240db8f9db41dc78a/gcc%2Fada%2Fstylesw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a20f43891384a48d94b627d240db8f9db41dc78a/gcc%2Fada%2Fstylesw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstylesw.adb?ref=a20f43891384a48d94b627d240db8f9db41dc78a", "patch": "@@ -530,6 +530,9 @@ package body Stylesw is\n             when 'o' =>\n                Style_Check_Order_Subprograms     := False;\n \n+            when 'O' =>\n+               Style_Check_Missing_Overriding    := False;\n+\n             when 'p' =>\n                Style_Check_Pragma_Casing         := False;\n "}, {"sha": "eb514b75c2383be31dd599c3192c7ef338fd5a12", "filename": "gcc/ada/uname.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a20f43891384a48d94b627d240db8f9db41dc78a/gcc%2Fada%2Funame.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a20f43891384a48d94b627d240db8f9db41dc78a/gcc%2Fada%2Funame.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Funame.adb?ref=a20f43891384a48d94b627d240db8f9db41dc78a", "patch": "@@ -349,9 +349,7 @@ package body Uname is\n          return N;\n       end Get_Parent;\n \n-   -------------------------------------------\n-   -- Start of Processing for Get_Unit_Name --\n-   -------------------------------------------\n+   --  Start of processing for Get_Unit_Name\n \n    begin\n       Node := N;"}]}