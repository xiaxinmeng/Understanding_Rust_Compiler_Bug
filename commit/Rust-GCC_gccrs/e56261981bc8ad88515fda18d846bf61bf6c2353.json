{"sha": "e56261981bc8ad88515fda18d846bf61bf6c2353", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU2MjYxOTgxYmM4YWQ4ODUxNWZkYTE4ZDg0NmJmNjFiZjZjMjM1Mw==", "commit": {"author": {"name": "Ayal Zaks", "email": "zaks@il.ibm.com", "date": "2004-05-25T12:55:06Z"}, "committer": {"name": "Mostafa Hagog", "email": "hagog@gcc.gnu.org", "date": "2004-05-25T12:55:06Z"}, "message": "ddg.h, [...]: New files.\n\n\n \t* ddg.h, ddg.c, modulo-sched.c: New files.\n \t* cfglayout.c (duplicate_insn_chain): Remove \"static\" and push\n \tinternals to \"dupicate_insn\".\n \t(duplicate_insn): New function.\n \t* cfglayout.h (duplicate_insn_chain, duplicate_insn): New\n \tdeclarations.\n \t* common.opt (fmodulo-sched): New flag.\n \t* df.c (df_bb_regno_last_use_find, df_bb_regno_first_def_find):\n \tRemove static and forward declaration.\n \t(df_find_def, df_reg_used, df_bb_regno_last_def_find): New\n \tfunctions.\n \t* df.h (df_bb_regno_last_use_find, df_bb_regno_first_def_find,\n \tdf_bb_regno_last_def_find, df_find_def, df_reg_used): New\n \tdeclarations.\n \t* flags.h (flag_modulo_sched): New flag.\n \t* opts.c (common_handle_option): Handle modulo-sched flag.\n \t* params.def (max-sms-loop-number, sms-max-ii-factor,\n \tsms-dfa-history, sms-loop-average-count-threshold): New\n \tparameters.\n\t* params.h (MAX_SMS_LOOP_NUMBER, SMS_MAX_II_FACTOR,\n \tSMS_DFA_HISTORY, SMS_LOOP_AVERAGE_COUNT_THRESHOLD): New\n \tparameters.\n \t* passes.c (\"sms\", \"sms-vcg\"): New dumps.\n \t(rest_of_handle_sched): Call sms_schedule.\n \t* rtl.h (sms_schedule): New declaration.\n \t* timevar.def (TV_SMS): New.\n \t* toplev.c (flag_modulo_sched): Initialize.\n \t(f_options): Handle -fmodulo-sched option.\n \t* docs/invoke.texi: Document -fmodulo-sched & -dm options.\n \t* docs/passes.texi: Document new SMS pass.f toplev.c doc/invoke.texi doc/passes.texi\n\nCo-Authored-By: Mostafa Hagog <mustafa@il.ibm.com>\n\nFrom-SVN: r82235", "tree": {"sha": "ba0032753f675cc964af30f84d718202207f1c63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba0032753f675cc964af30f84d718202207f1c63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e56261981bc8ad88515fda18d846bf61bf6c2353", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e56261981bc8ad88515fda18d846bf61bf6c2353", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e56261981bc8ad88515fda18d846bf61bf6c2353", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e56261981bc8ad88515fda18d846bf61bf6c2353/comments", "author": null, "committer": null, "parents": [{"sha": "2f93eea8612d4ced2eeee52db5ce66bd75303455", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f93eea8612d4ced2eeee52db5ce66bd75303455", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f93eea8612d4ced2eeee52db5ce66bd75303455"}], "stats": {"total": 250, "additions": 223, "deletions": 27}, "files": [{"sha": "d7389f9dcbfc78be4ce513f1508ae744214b9190", "filename": "gcc/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e56261981bc8ad88515fda18d846bf61bf6c2353", "patch": "@@ -1,3 +1,38 @@\n+2004-05-25  Ayal Zaks  <zaks@il.ibm.com>\n+\tMostafa Hagog  <mustafa@il.ibm.com>\n+\n+\t* Makefile.in (modulo-sched.o, ddg.o): New.\n+\t* ddg.h, ddg.c, modulo-sched.c: New files.\n+\t* cfglayout.c (duplicate_insn_chain): Remove \"static\" and push\n+\tinternals to \"dupicate_insn\".\n+\t(duplicate_insn): New function.\n+\t* cfglayout.h (duplicate_insn_chain, duplicate_insn): New\n+\tdeclarations.\n+\t* common.opt (fmodulo-sched): New flag.\n+\t* df.c (df_bb_regno_last_use_find, df_bb_regno_first_def_find):\n+\tRemove static and forward declaration.\n+\t(df_find_def, df_reg_used, df_bb_regno_last_def_find): New\n+\tfunctions.\n+\t* df.h (df_bb_regno_last_use_find, df_bb_regno_first_def_find,\n+\tdf_bb_regno_last_def_find, df_find_def, df_reg_used): New\n+\tdeclarations.\n+\t* flags.h (flag_modulo_sched): New flag.\n+\t* opts.c (common_handle_option): Handle modulo-sched flag.\n+\t* params.def (max-sms-loop-number, sms-max-ii-factor,\n+\tsms-dfa-history, sms-loop-average-count-threshold): New\n+\tparameters.\n+\t* params.h (MAX_SMS_LOOP_NUMBER, SMS_MAX_II_FACTOR,\n+\tSMS_DFA_HISTORY, SMS_LOOP_AVERAGE_COUNT_THRESHOLD): New\n+\tparameters.\n+\t* passes.c (\"sms\", \"sms-vcg\"): New dumps.\n+\t(rest_of_handle_sched): Call sms_schedule.\n+\t* rtl.h (sms_schedule): New declaration.\n+\t* timevar.def (TV_SMS): New.\n+\t* toplev.c (flag_modulo_sched): Initialize.\n+\t(f_options): Handle -fmodulo-sched option.\n+\t* docs/invoke.texi: Document -fmodulo-sched & -dm options.\n+\t* docs/passes.texi: Document new SMS pass.\n+\n 2004-05-25  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* Makefile.in (OBJS): Add rtlhooks.o."}, {"sha": "bd6afbe1654146675b79331815ae80aec018b37d", "filename": "gcc/Makefile.in", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=e56261981bc8ad88515fda18d846bf61bf6c2353", "patch": "@@ -884,14 +884,16 @@ OBJS-common = \\\n  cfg.o cfganal.o cfgbuild.o cfgcleanup.o cfglayout.o cfgloop.o\t\t   \\\n  cfgloopanal.o cfgloopmanip.o loop-init.o loop-unswitch.o loop-unroll.o\t   \\\n  cfgrtl.o combine.o conflict.o convert.o coverage.o cse.o cselib.o \t   \\\n- dbxout.o debug.o df.o diagnostic.o dojump.o dominance.o loop-doloop.o\t   \\\n+ dbxout.o ddg.o\t\t\t\t\t\t\t\t   \\\n+ debug.o df.o diagnostic.o dojump.o dominance.o loop-doloop.o\t\t   \\\n  dwarf2asm.o dwarf2out.o emit-rtl.o except.o explow.o loop-iv.o\t\t   \\\n  expmed.o expr.o final.o flow.o fold-const.o function.o gcse.o\t\t   \\\n  genrtl.o ggc-common.o global.o graph.o gtype-desc.o\t\t\t   \\\n  haifa-sched.o hooks.o ifcvt.o insn-attrtab.o insn-emit.o insn-modes.o\t   \\\n  insn-extract.o insn-opinit.o insn-output.o insn-peep.o insn-recog.o\t   \\\n  integrate.o intl.o jump.o  langhooks.o lcm.o lists.o local-alloc.o  \t   \\\n- loop.o optabs.o options.o opts.o params.o postreload.o predict.o\t   \\\n+ loop.o modulo-sched.o\t\t\t\t\t\t\t   \\\n+ optabs.o options.o opts.o params.o postreload.o predict.o\t\t   \\\n  print-rtl.o print-tree.o value-prof.o var-tracking.o\t\t\t   \\\n  profile.o ra.o ra-build.o ra-colorize.o ra-debug.o ra-rewrite.o\t   \\\n  real.o recog.o reg-stack.o regclass.o regmove.o regrename.o\t\t   \\\n@@ -1997,6 +1999,15 @@ alias.o : alias.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) flags.h \\\n regmove.o : regmove.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) insn-config.h \\\n    $(RECOG_H) output.h $(REGS_H) hard-reg-set.h flags.h function.h \\\n    $(EXPR_H) $(BASIC_BLOCK_H) toplev.h $(TM_P_H) except.h reload.h\n+ddg.o : ddg.c ddg.h $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TARGET_H) \\\n+   toplev.h $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) regs.h function.h flags.h \\\n+   insn-config.h insn-attr.h except.h $(RECOG_H) sched-int.h \\\n+   cfglayout.h cfgloop.h $(EXPR_H)\n+modulo-sched.o : modulo-sched.c ddg.h cfgloop.h $(CONFIG_H) \\\n+   $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TARGET_H) \\\n+   toplev.h $(RTL_H) $(TM_P_H) $(BASIC_BLOCK_H) regs.h function.h flags.h \\\n+   insn-config.h insn-attr.h except.h $(RECOG_H) sched-int.h \\\n+   cfglayout.h cfgloop.h $(EXPR_H) params.h $(COVERAGE_H)\n haifa-sched.o : haifa-sched.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    sched-int.h $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h flags.h insn-config.h function.h \\\n    $(INSN_ATTR_H) toplev.h $(RECOG_H) except.h $(TM_P_H) $(TARGET_H)"}, {"sha": "899aa1a566518c01942cca65d7ecd8c33fbe62f7", "filename": "gcc/cfglayout.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fcfglayout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fcfglayout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfglayout.c?ref=e56261981bc8ad88515fda18d846bf61bf6c2353", "patch": "@@ -54,7 +54,6 @@ static void change_scope (rtx, tree, tree);\n \n void verify_insn_chain (void);\n static void fixup_fallthru_exit_predecessor (void);\n-static rtx duplicate_insn_chain (rtx, rtx);\n static tree insn_scope (rtx);\n static void update_unlikely_executed_notes (basic_block);\n \f\n@@ -973,7 +972,7 @@ cfg_layout_can_duplicate_bb_p (basic_block bb)\n   return true;\n }\n \n-static rtx\n+rtx\n duplicate_insn_chain (rtx from, rtx to)\n {\n   rtx insn, last;"}, {"sha": "c50072f50bc2e7c0a1276cd8819627f9ac8ef3be", "filename": "gcc/cfglayout.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fcfglayout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fcfglayout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfglayout.h?ref=e56261981bc8ad88515fda18d846bf61bf6c2353", "patch": "@@ -28,3 +28,4 @@ extern bool can_copy_bbs_p (basic_block *, unsigned);\n extern void copy_bbs (basic_block *, unsigned, basic_block *,\n \t\t      edge *, unsigned, edge *, struct loop *);\n extern bool scan_ahead_for_unlikely_executed_note (rtx);\n+extern rtx duplicate_insn_chain (rtx, rtx);"}, {"sha": "a89b2be37852c2a82bc741e1a0bc21fce7842f89", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=e56261981bc8ad88515fda18d846bf61bf6c2353", "patch": "@@ -466,6 +466,10 @@ fmessage-length=\n Common RejectNegative Joined UInteger\n -fmessage-length=<number>\tLimit diagnostics to <number> characters per line.  0 suppresses line-wrapping\n \n+fmodulo-sched\n+Common\n+Perform SMS based modulo scheduling before the first scheduling pass\n+\n fmove-all-movables\n Common\n Force all loop invariant computations out of loops"}, {"sha": "db3cf2130e8079f1baf467ffb4ae2cf69d0d9c1e", "filename": "gcc/df.c", "status": "modified", "additions": 55, "deletions": 6, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fdf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fdf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf.c?ref=e56261981bc8ad88515fda18d846bf61bf6c2353", "patch": "@@ -270,10 +270,6 @@ void df_refs_reg_replace (struct df *, bitmap, struct df_link *, rtx, rtx);\n \n static int df_def_dominates_all_uses_p (struct df *, struct ref *def);\n static int df_def_dominates_uses_p (struct df *, struct ref *def, bitmap);\n-static struct ref *df_bb_regno_last_use_find (struct df *, basic_block,\n-\t\t\t\t\t      unsigned int);\n-static struct ref *df_bb_regno_first_def_find (struct df *, basic_block,\n-\t\t\t\t\t       unsigned int);\n static struct ref *df_bb_insn_regno_last_use_find (struct df *, basic_block,\n \t\t\t\t\t\t   rtx, unsigned int);\n static struct ref *df_bb_insn_regno_first_def_find (struct df *, basic_block,\n@@ -2688,6 +2684,34 @@ df_insn_regno_def_p (struct df *df, basic_block bb ATTRIBUTE_UNUSED,\n   return 0;\n }\n \n+/* Finds the reference corresponding to the definition of REG in INSN.\n+   DF is the dataflow object.  */\n+\n+struct ref *\n+df_find_def (struct df *df, rtx insn, rtx reg)\n+{\n+  struct df_link *defs;\n+\n+  for (defs = DF_INSN_DEFS (df, insn); defs; defs = defs->next)\n+    if (rtx_equal_p (DF_REF_REG (defs->ref), reg))\n+      return defs->ref;\n+\n+  return NULL;\n+}\n+\n+/* Return 1 if REG is referenced in INSN, zero otherwise.  */ \n+\n+int\n+df_reg_used (struct df *df, rtx insn, rtx reg)\n+{\n+  struct df_link *uses;\n+\n+  for (uses = DF_INSN_USES (df, insn); uses; uses = uses->next)\n+    if (rtx_equal_p (DF_REF_REG (uses->ref), reg))\n+      return 1; \n+\n+  return 0;\n+}\n \n static int\n df_def_dominates_all_uses_p (struct df *df ATTRIBUTE_UNUSED, struct ref *def)\n@@ -2884,7 +2908,7 @@ df_bb_regs_lives_compare (struct df *df, basic_block bb, rtx reg1, rtx reg2)\n \n \n /* Return last use of REGNO within BB.  */\n-static struct ref *\n+struct ref *\n df_bb_regno_last_use_find (struct df *df, basic_block bb, unsigned int regno)\n {\n   struct df_link *link;\n@@ -2905,7 +2929,7 @@ df_bb_regno_last_use_find (struct df *df, basic_block bb, unsigned int regno)\n \n \n /* Return first def of REGNO within BB.  */\n-static struct ref *\n+struct ref *\n df_bb_regno_first_def_find (struct df *df, basic_block bb, unsigned int regno)\n {\n   struct df_link *link;\n@@ -2924,6 +2948,31 @@ df_bb_regno_first_def_find (struct df *df, basic_block bb, unsigned int regno)\n   return 0;\n }\n \n+/* Return last def of REGNO within BB.  */\n+struct ref *\n+df_bb_regno_last_def_find (struct df *df, basic_block bb, unsigned int regno)\n+{\n+  struct df_link *link;\n+  struct ref *last_def = NULL;\n+  int in_bb = 0;\n+\n+  /* This assumes that the reg-def list is ordered such that for any\n+     BB, the first def is found first.  However, since the BBs are not\n+     ordered, the first def in the chain is not necessarily the first\n+     def in the function.  */\n+  for (link = df->regs[regno].defs; link; link = link->next)\n+    {\n+      struct ref *def = link->ref;\n+      /* The first time in the desired block.  */ \n+      if (DF_REF_BB (def) == bb)\n+\t  in_bb = 1;\n+      /* The last def in the desired block.  */\n+      else if (in_bb)\n+        return last_def;\n+      last_def = def;\n+    }\n+  return last_def;\n+}\n \n /* Return first use of REGNO inside INSN within BB.  */\n static struct ref *"}, {"sha": "62ee1e28d0cff32e23c2cf57afb0271c5a9a725c", "filename": "gcc/df.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fdf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fdf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf.h?ref=e56261981bc8ad88515fda18d846bf61bf6c2353", "patch": "@@ -291,6 +291,15 @@ extern int df_bb_regs_lives_compare (struct df *, basic_block, rtx, rtx);\n \n extern rtx df_bb_single_def_use_insn_find (struct df *, basic_block, rtx,\n \t\t\t\t\t   rtx);\n+extern struct ref *df_bb_regno_last_use_find (struct df *, basic_block, unsigned int);\n+\n+extern struct ref *df_bb_regno_first_def_find (struct df *, basic_block, unsigned int);\n+\n+extern struct ref *df_bb_regno_last_def_find (struct df *, basic_block, unsigned int);\n+\n+extern struct ref *df_find_def (struct df *, rtx, rtx);\n+\n+extern int df_reg_used (struct df *, rtx, rtx);\n \n \n /* Functions for debugging from GDB.  */"}, {"sha": "fffb023e2a34659de43e4499169015ba326c24ff", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 24, "deletions": 15, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=e56261981bc8ad88515fda18d846bf61bf6c2353", "patch": "@@ -289,7 +289,7 @@ in the following sections.\n -floop-optimize -fcrossjumping  -fif-conversion  -fif-conversion2 @gol\n -finline-functions  -finline-limit=@var{n}  -fkeep-inline-functions @gol\n -fkeep-static-consts  -fmerge-constants  -fmerge-all-constants @gol\n--fmove-all-movables  -fnew-ra  -fno-branch-count-reg @gol\n+-fmodulo-sched -fmove-all-movables  -fnew-ra  -fno-branch-count-reg @gol\n -fno-default-inline  -fno-defer-pop @gol\n -fno-function-cse  -fno-guess-branch-probability @gol\n -fno-inline  -fno-math-errno  -fno-peephole  -fno-peephole2 @gol\n@@ -3278,7 +3278,7 @@ Annotate the assembler output with miscellaneous debugging information.\n Dump after computing branch probabilities, to @file{@var{file}.12.bp}.\n @item B\n @opindex dB\n-Dump after block reordering, to @file{@var{file}.31.bbro}.\n+Dump after block reordering, to @file{@var{file}.32.bbro}.\n @item c\n @opindex dc\n Dump after instruction combination, to the file @file{@var{file}.20.combine}.\n@@ -3288,15 +3288,15 @@ Dump after the first if conversion, to the file @file{@var{file}.14.ce1}.\n Also dump after the second if conversion, to the file @file{@var{file}.21.ce2}.\n @item d\n @opindex dd\n-Dump after branch target load optimization, to to @file{@var{file}.32.btl}.\n-Also dump after delayed branch scheduling, to @file{@var{file}.36.dbr}.\n+Dump after branch target load optimization, to to @file{@var{file}.33.btl}.\n+Also dump after delayed branch scheduling, to @file{@var{file}.37.dbr}.\n @item D\n @opindex dD\n Dump all macro definitions, at the end of preprocessing, in addition to\n normal output.\n @item E\n @opindex dE\n-Dump after the third if conversion, to @file{@var{file}.30.ce3}.\n+Dump after the third if conversion, to @file{@var{file}.31.ce3}.\n @item f\n @opindex df\n Dump after control and data flow analysis, to @file{@var{file}.11.cfg}.\n@@ -3306,7 +3306,7 @@ Also dump after life analysis, to @file{@var{file}.19.life}.\n Dump after purging @code{ADDRESSOF} codes, to @file{@var{file}.07.addressof}.\n @item g\n @opindex dg\n-Dump after global register allocation, to @file{@var{file}.25.greg}.\n+Dump after global register allocation, to @file{@var{file}.26.greg}.\n @item G\n @opindex dG\n Dump after GCSE, to @file{@var{file}.08.gcse}.\n@@ -3323,40 +3323,43 @@ Dump after sibling call optimizations, to @file{@var{file}.02.sibling}.\n Dump after the first jump optimization, to @file{@var{file}.04.jump}.\n @item k\n @opindex dk\n-Dump after conversion from registers to stack, to @file{@var{file}.34.stack}.\n+Dump after conversion from registers to stack, to @file{@var{file}.35.stack}.\n @item l\n @opindex dl\n-Dump after local register allocation, to @file{@var{file}.24.lreg}.\n+Dump after local register allocation, to @file{@var{file}.25.lreg}.\n @item L\n @opindex dL\n Dump after loop optimization passes, to @file{@var{file}.09.loop} and\n @file{@var{file}.16.loop2}.\n+@item m\n+@opindex dm\n+Dump after modulo scheduling, to @file{@var{file}.23.sms}. \n @item M\n @opindex dM\n Dump after performing the machine dependent reorganization pass, to\n-@file{@var{file}.35.mach}.\n+@file{@var{file}.36.mach}.\n @item n\n @opindex dn\n-Dump after register renumbering, to @file{@var{file}.29.rnreg}.\n+Dump after register renumbering, to @file{@var{file}.30.rnreg}.\n @item N\n @opindex dN\n Dump after the register move pass, to @file{@var{file}.22.regmove}.\n @item o\n @opindex do\n-Dump after post-reload optimizations, to @file{@var{file}.26.postreload}.\n+Dump after post-reload optimizations, to @file{@var{file}.27.postreload}.\n @item r\n @opindex dr\n Dump after RTL generation, to @file{@var{file}.01.rtl}.\n @item R\n @opindex dR\n-Dump after the second scheduling pass, to @file{@var{file}.33.sched2}.\n+Dump after the second scheduling pass, to @file{@var{file}.34.sched2}.\n @item s\n @opindex ds\n Dump after CSE (including the jump optimization that sometimes follows\n CSE), to @file{@var{file}.06.cse}.\n @item S\n @opindex dS\n-Dump after the first scheduling pass, to @file{@var{file}.23.sched}.\n+Dump after the first scheduling pass, to @file{@var{file}.24.sched}.\n @item t\n @opindex dt\n Dump after the second CSE pass (including the jump optimization that\n@@ -3376,10 +3379,10 @@ Dump after the value profile transformations, to @file{@var{file}.13.vpt}.\n Also dump after variable tracking, to @file{@var{file}.35.vartrack}.\n @item w\n @opindex dw\n-Dump after the second flow pass, to @file{@var{file}.27.flow2}.\n+Dump after the second flow pass, to @file{@var{file}.28.flow2}.\n @item z\n @opindex dz\n-Dump after the peephole pass, to @file{@var{file}.28.peephole2}.\n+Dump after the peephole pass, to @file{@var{file}.29.peephole2}.\n @item Z\n @opindex dZ\n Dump after constructing the web, to @file{@var{file}.17.web}.\n@@ -4004,6 +4007,12 @@ types.  Languages like C or C++ require each non-automatic variable to\n have distinct location, so using this option will result in non-conforming\n behavior.\n \n+@item -fmodulo-sched\n+@opindex fmodulo-sched\n+Perform swing modulo scheduling immediately before the first scheduling\n+pass.  This pass looks at innermost loops and reorders their\n+instructions by overlapping different iterations.\n+\n @item -fnew-ra\n @opindex fnew-ra\n Use a graph coloring register allocator.  Currently this option is meant"}, {"sha": "767ec138a13ee70cb1d6fbf47b5abd66b7c7780d", "filename": "gcc/doc/passes.texi", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fdoc%2Fpasses.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fdoc%2Fpasses.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fpasses.texi?ref=e56261981bc8ad88515fda18d846bf61bf6c2353", "patch": "@@ -580,6 +580,15 @@ specific ``mode'' and minimizes the number of mode changes required to\n satisfy all users.  What these modes are, and what they apply to are\n completely target-specific.  The source is located in @file{lcm.c}.\n \n+@cindex modulo scheduling\n+@cindex sms, swing, software pipelining\n+@item Modulo scheduling \n+\n+This pass looks at innermost loops and reorders their instructions \n+by overlapping different iterations.  Modulo scheduling is performed \n+immediately before instruction scheduling.\n+The pass is located in (@file{modulo-sched.c}).  \n+\n @item Instruction scheduling\n \n This pass looks for instructions whose output will not be available by"}, {"sha": "4de7696a59eafff4aee84fc94614338fea1646eb", "filename": "gcc/flags.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fflags.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fflags.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflags.h?ref=e56261981bc8ad88515fda18d846bf61bf6c2353", "patch": "@@ -424,6 +424,9 @@ extern int flag_gen_aux_info;\n \n extern int flag_shared_data;\n \n+/* Controls the activiation of SMS modulo scheduling. */\n+extern int flag_modulo_sched;\n+\n /* flag_schedule_insns means schedule insns within basic blocks (before\n    local_alloc).\n    flag_schedule_insns_after_reload means schedule insns after"}, {"sha": "cd9e8e3db72acce449c740112b146605026c450b", "filename": "gcc/opts.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=e56261981bc8ad88515fda18d846bf61bf6c2353", "patch": "@@ -1398,7 +1398,9 @@ common_handle_option (size_t scode, const char *arg,\n     case OPT_fsched_stalled_insns_dep_:\n       flag_sched_stalled_insns_dep = value;\n       break;\n-\n+    case OPT_fmodulo_sched:\n+      flag_modulo_sched = 1;\n+      break;\n     case OPT_fshared_data:\n       flag_shared_data = value;\n       break;"}, {"sha": "72095affd4f8c6bea14e754bf36cdb71167bd1f8", "filename": "gcc/params.def", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=e56261981bc8ad88515fda18d846bf61bf6c2353", "patch": "@@ -229,6 +229,29 @@ DEFPARAM(PARAM_MAX_UNSWITCH_LEVEL,\n \t\"The maximum number of unswitchings in a single loop\",\n \t3)\n \n+DEFPARAM(PARAM_MAX_SMS_LOOP_NUMBER,\n+\t \"max-sms-loop-number\",\n+\t \"Maximum number of loops to perform swing modulo scheduling on \\\n+\t  (mainly for debugging)\",\n+\t -1)\n+\n+/* This parameter is used to tune SMS MAX II calculations.  */\n+DEFPARAM(PARAM_SMS_MAX_II_FACTOR,\n+\t \"sms-max-ii-factor\",\n+\t \"A factor for tuning the upper bound that swing modulo scheduler uses \\\n+\t  for scheduling a loop\",\n+\t 100)\n+DEFPARAM(PARAM_SMS_DFA_HISTORY,\n+\t \"sms-dfa-history\",\n+\t \"The number of cycles the swing modulo scheduler considers when \\\n+\t  checking conflicts using DFA\",\n+\t 0)\n+DEFPARAM(PARAM_SMS_LOOP_AVERAGE_COUNT_THRESHOLD,\n+\t \"sms-loop-average-count-threshold\",\n+\t \"A threshold on the average loop count considered by the swing modulo \\\n+\t  scheduler\",\n+\t 0)\n+\n DEFPARAM(HOT_BB_COUNT_FRACTION,\n \t \"hot-bb-count-fraction\",\n \t \"Select fraction of the maximal count of repetitions of basic block in \\"}, {"sha": "3611294185a571dac9e5096171e1afc8d3fc6e2e", "filename": "gcc/params.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fparams.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fparams.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.h?ref=e56261981bc8ad88515fda18d846bf61bf6c2353", "patch": "@@ -110,6 +110,14 @@ typedef enum compiler_param\n   PARAM_VALUE (PARAM_GCSE_AFTER_RELOAD_CRITICAL_FRACTION)\n #define MAX_UNROLLED_INSNS \\\n   PARAM_VALUE (PARAM_MAX_UNROLLED_INSNS)\n+#define MAX_SMS_LOOP_NUMBER \\\n+  PARAM_VALUE (PARAM_MAX_SMS_LOOP_NUMBER)\n+#define SMS_MAX_II_FACTOR \\\n+  PARAM_VALUE (PARAM_SMS_MAX_II_FACTOR)\n+#define SMS_DFA_HISTORY \\\n+  PARAM_VALUE (PARAM_SMS_DFA_HISTORY)\n+#define SMS_LOOP_AVERAGE_COUNT_THRESHOLD \\\n+  PARAM_VALUE (PARAM_SMS_LOOP_AVERAGE_COUNT_THRESHOLD)\n #define GLOBAL_VAR_THRESHOLD \\\n   PARAM_VALUE (PARAM_GLOBAL_VAR_THRESHOLD)\n #define MAX_ALIASED_VOPS \\"}, {"sha": "dc19ea88326b4f4c8edebd959c6c85758fbc0fdb", "filename": "gcc/passes.c", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=e56261981bc8ad88515fda18d846bf61bf6c2353", "patch": "@@ -154,6 +154,7 @@ enum dump_file_index\n   DFI_combine,\n   DFI_ce2,\n   DFI_regmove,\n+  DFI_sms,\n   DFI_sched,\n   DFI_lreg,\n   DFI_greg,\n@@ -178,7 +179,7 @@ enum dump_file_index\n \n    Remaining -d letters:\n \n-\t\"   e        m   q         \"\n+\t\"   e            q         \"\n \t\"          K   O Q     WXY \"\n */\n \n@@ -207,6 +208,7 @@ static struct dump_file_info dump_file_tbl[DFI_MAX] =\n   { \"combine\",\t'c', 1, 0, 0 },\n   { \"ce2\",\t'C', 1, 0, 0 },\n   { \"regmove\",\t'N', 1, 0, 0 },\n+  { \"sms\",      'm', 0, 0, 0 },\n   { \"sched\",\t'S', 1, 0, 0 },\n   { \"lreg\",\t'l', 1, 0, 0 },\n   { \"greg\",\t'g', 1, 0, 0 },\n@@ -742,6 +744,29 @@ rest_of_handle_reorder_blocks (tree decl, rtx insns)\n static void\n rest_of_handle_sched (tree decl, rtx insns)\n {\n+  timevar_push (TV_SMS);\n+  if (optimize > 0 && flag_modulo_sched)\n+    {\n+\n+      /* Perform SMS module scheduling.  */\n+      open_dump_file (DFI_sms, decl);\n+\n+      /* We want to be able to create new pseudos.  */\n+      no_new_pseudos = 0;\n+      sms_schedule (dump_file);\n+      close_dump_file (DFI_sms, print_rtl, get_insns ());\n+\n+\n+      /* Update the life information, becuase we add pseudos.  */\n+      max_regno = max_reg_num ();\n+      allocate_reg_info (max_regno, FALSE, FALSE);\n+      update_life_info_in_dirty_blocks (UPDATE_LIFE_GLOBAL_RM_NOTES,\n+\t\t\t\t\t(PROP_DEATH_NOTES\n+\t\t\t\t\t | PROP_KILL_DEAD_CODE\n+\t\t\t\t\t | PROP_SCAN_DEAD_CODE));\n+      no_new_pseudos = 1;\n+    }\n+  timevar_pop (TV_SMS);\n   timevar_push (TV_SCHED);\n \n   /* Print function header into sched dump now"}, {"sha": "d7bfc92c7ec53837ee6099d3d394b57768e8d475", "filename": "gcc/rtl.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=e56261981bc8ad88515fda18d846bf61bf6c2353", "patch": "@@ -2461,6 +2461,10 @@ extern void simplify_using_condition (rtx, rtx *, struct bitmap_head_def *);\n /* In ra.c.  */\n extern void reg_alloc (void);\n \n+/* In modulo-sched.c.  */\n+#ifdef BUFSIZ\n+extern void sms_schedule (FILE *);\n+#endif\n \f\n struct rtl_hooks\n {"}, {"sha": "d02e2ab77e7300cc68909eb89cfbcf8cd2c28666", "filename": "gcc/timevar.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Ftimevar.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Ftimevar.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftimevar.def?ref=e56261981bc8ad88515fda18d846bf61bf6c2353", "patch": "@@ -109,6 +109,7 @@ DEFTIMEVAR (TV_COMBINE               , \"combiner\")\n DEFTIMEVAR (TV_IFCVT\t\t     , \"if-conversion\")\n DEFTIMEVAR (TV_REGMOVE               , \"regmove\")\n DEFTIMEVAR (TV_MODE_SWITCH           , \"mode switching\")\n+DEFTIMEVAR (TV_SMS\t\t     , \"sms modulo scheduling\")\n DEFTIMEVAR (TV_SCHED                 , \"scheduling\")\n DEFTIMEVAR (TV_LOCAL_ALLOC           , \"local alloc\")\n DEFTIMEVAR (TV_GLOBAL_ALLOC          , \"global alloc\")"}, {"sha": "db3d37215b7b1cd4639c3298b8ef5562b6c8807b", "filename": "gcc/toplev.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e56261981bc8ad88515fda18d846bf61bf6c2353/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=e56261981bc8ad88515fda18d846bf61bf6c2353", "patch": "@@ -707,6 +707,9 @@ int flag_schedule_speculative_load_dangerous = 0;\n int flag_sched_stalled_insns = 0;\n int flag_sched_stalled_insns_dep = 1;\n \n+/* The following flag controls the module scheduling activation. */\n+int flag_modulo_sched = 0;\n+\n int flag_single_precision_constant;\n \n /* flag_branch_on_count_reg means try to replace add-1,compare,branch tupple\n@@ -1007,6 +1010,7 @@ static const lang_independent_options f_options[] =\n   {\"sched-stalled-insns-dep\", &flag_sched_stalled_insns_dep, 1 },\n   {\"sched2-use-superblocks\", &flag_sched2_use_superblocks, 1 },\n   {\"sched2-use-traces\", &flag_sched2_use_traces, 1 },\n+  {\"modulo-sched\", &flag_modulo_sched, 1 },\n   {\"branch-count-reg\",&flag_branch_on_count_reg, 1 },\n   {\"pic\", &flag_pic, 1 },\n   {\"PIC\", &flag_pic, 2 },"}]}