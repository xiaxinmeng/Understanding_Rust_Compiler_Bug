{"sha": "338276300ec3b1b537ca687ea82abd777de15894", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM4Mjc2MzAwZWMzYjFiNTM3Y2E2ODdlYTgyYWJkNzc3ZGUxNTg5NA==", "commit": {"author": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2005-12-29T15:08:43Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2005-12-29T15:08:43Z"}, "message": "m68k.c (m68k_output_pic_call): Don't use bsr.l for !TARGET_68020.\n\n2005-12-29  Daniel Jacobowitz  <dan@codesourcery.com>\n\tPaul Brook  <paul@codesourcery.com>\n\n\t* config/m68k/m68k.c (m68k_output_pic_call): Don't use bsr.l for\n\t!TARGET_68020.\n\t* config/m68k/t-m68kelf (EXTRA_PARTS): Remove.\n\t(EXTRA_MULTILIB_PARTS): Set.\n\t* config/m68k/t-uclinux (EXTRA_PARTS): Remove.\n\t(EXTRA_MULTILIB_PARTS): Set.\n\nFrom-SVN: r109141", "tree": {"sha": "ad7e6742ee77d25c831d302b3381c78aab6ebd06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad7e6742ee77d25c831d302b3381c78aab6ebd06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/338276300ec3b1b537ca687ea82abd777de15894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/338276300ec3b1b537ca687ea82abd777de15894", "html_url": "https://github.com/Rust-GCC/gccrs/commit/338276300ec3b1b537ca687ea82abd777de15894", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/338276300ec3b1b537ca687ea82abd777de15894/comments", "author": null, "committer": null, "parents": [{"sha": "486fd3c90cedb06ebe160362a9e98d1166604b9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/486fd3c90cedb06ebe160362a9e98d1166604b9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/486fd3c90cedb06ebe160362a9e98d1166604b9c"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "61470bb5add1c6f97d0713e6dad7014ebdb9766b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338276300ec3b1b537ca687ea82abd777de15894/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338276300ec3b1b537ca687ea82abd777de15894/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=338276300ec3b1b537ca687ea82abd777de15894", "patch": "@@ -1,3 +1,13 @@\n+2005-12-29  Daniel Jacobowitz  <dan@codesourcery.com>\n+\tPaul Brook  <paul@codesourcery.com>\n+\n+\t* config/m68k/m68k.c (m68k_output_pic_call): Don't use bsr.l for\n+\t!TARGET_68020.\n+\t* config/m68k/t-m68kelf (EXTRA_PARTS): Remove.\n+\t(EXTRA_MULTILIB_PARTS): Set.\n+\t* config/m68k/t-uclinux (EXTRA_PARTS): Remove.\n+\t(EXTRA_MULTILIB_PARTS): Set.\n+\n 2005-12-29  Alan Modra  <amodra@bigpond.net.au>\n \n \tPR target/25572"}, {"sha": "fa3f0e038992be08a5e97e6b259ef8b58fd09dae", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338276300ec3b1b537ca687ea82abd777de15894/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338276300ec3b1b537ca687ea82abd777de15894/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=338276300ec3b1b537ca687ea82abd777de15894", "patch": "@@ -1057,15 +1057,14 @@ m68k_output_pic_call (rtx dest)\n \n   if (!(GET_CODE (dest) == MEM && GET_CODE (XEXP (dest, 0)) == SYMBOL_REF))\n     out = \"jsr %0\";\n-      /* We output a BSR instruction if we're using -fpic or we're building for\n-\t a target that supports long branches.  If we're building -fPIC on the\n-\t 68000, 68010 or ColdFire we generate one of two sequences:\n+      /* We output a BSR instruction if we're building for a target that\n+\t supports long branches.  Otherwise we generate one of two sequences:\n \t a shorter one that uses a GOT entry or a longer one that doesn't.\n \t We'll use the -Os command-line flag to decide which to generate.\n \t Both sequences take the same time to execute on the ColdFire.  */\n   else if (TARGET_PCREL)\n     out = \"bsr.l %o0\";\n-  else if (flag_pic == 1 || TARGET_68020)\n+  else if (TARGET_68020)\n #if defined(USE_GAS)\n     out = \"bsr.l %0@PLTPC\";\n #else"}, {"sha": "a1d57a04c2641d3de8a8060c9d022749a1ea23ea", "filename": "gcc/config/m68k/t-m68kelf", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338276300ec3b1b537ca687ea82abd777de15894/gcc%2Fconfig%2Fm68k%2Ft-m68kelf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338276300ec3b1b537ca687ea82abd777de15894/gcc%2Fconfig%2Fm68k%2Ft-m68kelf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ft-m68kelf?ref=338276300ec3b1b537ca687ea82abd777de15894", "patch": "@@ -24,6 +24,6 @@ LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib\n \n # from ../t-svr4\n-EXTRA_PARTS=crtbegin.o crtend.o\n+EXTRA_MULTILIB_PARTS=crtbegin.o crtend.o\n # no pic for now\n #CRTSTUFF_T_CFLAGS=-fpic"}, {"sha": "1fb7a42e59829dc11c403cdb5dffaefdab45289d", "filename": "gcc/config/m68k/t-uclinux", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338276300ec3b1b537ca687ea82abd777de15894/gcc%2Fconfig%2Fm68k%2Ft-uclinux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338276300ec3b1b537ca687ea82abd777de15894/gcc%2Fconfig%2Fm68k%2Ft-uclinux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ft-uclinux?ref=338276300ec3b1b537ca687ea82abd777de15894", "patch": "@@ -21,4 +21,4 @@ LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib\n \n # We don't use crtbegin.o and crtend.o\n-EXTRA_PARTS=\n+EXTRA_MULTILIB_PARTS="}, {"sha": "c95b8f80c377ba0a6509f6d732de6481fd4bded8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338276300ec3b1b537ca687ea82abd777de15894/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338276300ec3b1b537ca687ea82abd777de15894/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=338276300ec3b1b537ca687ea82abd777de15894", "patch": "@@ -130,6 +130,10 @@\n \n \t* gcc.target/i386/sse-17.c:  New.\n \n+2005-12-22  Paul Brook  <paul@codesourcery.com>\n+\n+\t* gcc.dg/weak/typeof-2.c: Skip assembly test on m68k.\n+\n 2005-12-22  Paul Brook  <paul@codesourcery.com>\n \n \t* gcc.dg/tree-ssa/loop-1.c: Look for jump/branch on m68k."}, {"sha": "9fbfaf0f1408e768483ed5667099f200078ecd99", "filename": "gcc/testsuite/gcc.dg/weak/typeof-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338276300ec3b1b537ca687ea82abd777de15894/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Ftypeof-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338276300ec3b1b537ca687ea82abd777de15894/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Ftypeof-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fweak%2Ftypeof-2.c?ref=338276300ec3b1b537ca687ea82abd777de15894", "patch": "@@ -37,4 +37,6 @@ int bar3 (int x)\n // { dg-final { if [string match s390*-*-* $target_triplet ] {return} } }\n // Likewise for CRIS targets.\n // { dg-final { if [string match cris-*-* $target_triplet ] {return} } }\n+// Likewise for m68k targets.\n+// { dg-final { if [string match m68k-*-* $target_triplet ] {return} } }\n // { dg-final { scan-assembler \"baz3.*baz3.*baz3.*baz3.*baz3.*baz3\" } }"}]}