{"sha": "28fe1c4032687045633a19b9a7746c4bc9f5474f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhmZTFjNDAzMjY4NzA0NTYzM2ExOWI5YTc3NDZjNGJjOWY1NDc0Zg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-05-06T22:37:27Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-05-06T22:37:27Z"}, "message": "re PR fortran/31201 (Too large unit number generates wrong code)\n\n2007-05-06  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/31201\n\t* gfortran.dg/large_unit_1.f90: New.\n\t* gfortran.dg/large_unit_2.f90: New.\n\t* gfortran.dg/iostat_4.f90: New\n\t* gfortran.dg/bounds_check_fail_1.f90: Updated.\n\nFrom-SVN: r124481", "tree": {"sha": "e5b92eb9d313d628362eb36f9ad8d3debff1d87e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5b92eb9d313d628362eb36f9ad8d3debff1d87e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28fe1c4032687045633a19b9a7746c4bc9f5474f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28fe1c4032687045633a19b9a7746c4bc9f5474f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28fe1c4032687045633a19b9a7746c4bc9f5474f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28fe1c4032687045633a19b9a7746c4bc9f5474f/comments", "author": null, "committer": null, "parents": [{"sha": "f96d606f3a2b4cb25486d8c7dac01be2d4963e00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f96d606f3a2b4cb25486d8c7dac01be2d4963e00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f96d606f3a2b4cb25486d8c7dac01be2d4963e00"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "36cec0d7f3256567362ef6f014f80290aeb3020d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28fe1c4032687045633a19b9a7746c4bc9f5474f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28fe1c4032687045633a19b9a7746c4bc9f5474f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=28fe1c4032687045633a19b9a7746c4bc9f5474f", "patch": "@@ -1,3 +1,11 @@\n+2007-05-06  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/31201\n+\t* gfortran.dg/large_unit_1.f90: New.\n+\t* gfortran.dg/large_unit_2.f90: New.\n+\t* gfortran.dg/iostat_4.f90: New\n+\t* gfortran.dg/bounds_check_fail_1.f90: Updated.\n+\n 2007-05-06  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/31540"}, {"sha": "8617456f1e0355ea7b6e0476e654ec79885b18e2", "filename": "gcc/testsuite/gfortran.dg/bounds_check_fail_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28fe1c4032687045633a19b9a7746c4bc9f5474f/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_fail_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28fe1c4032687045633a19b9a7746c4bc9f5474f/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_fail_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbounds_check_fail_1.f90?ref=28fe1c4032687045633a19b9a7746c4bc9f5474f", "patch": "@@ -4,4 +4,4 @@\n   integer x(1)\n   x(2) = x(1) ! { dg-warning \"out of bounds\" }\n   end\n-! { dg-output \"out of bounds for array 'x', upper bound of dimension 1 exceeded.*at line 5\" }\n+! { dg-output \"out of bounds for array 'x', upper bound of dimension 1 exceeded.\" }"}, {"sha": "34c25f962d40bf1122e0d9b9e54865b5fc3919d9", "filename": "gcc/testsuite/gfortran.dg/iostat_4.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28fe1c4032687045633a19b9a7746c4bc9f5474f/gcc%2Ftestsuite%2Fgfortran.dg%2Fiostat_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28fe1c4032687045633a19b9a7746c4bc9f5474f/gcc%2Ftestsuite%2Fgfortran.dg%2Fiostat_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fiostat_4.f90?ref=28fe1c4032687045633a19b9a7746c4bc9f5474f", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do run }\n+! PR31201 Too large unit number generates wrong code\n+! This tests initialization of the IOSTAT variable\n+  integer :: i\n+  character(len=50) :: str\n+  write (2_8*int(huge(0_4),kind=8)+9_8, iostat=i, iomsg=str) 555\n+  if (i.ne.5005) call abort\n+  if (str.ne.\"Unit number in I/O statement too large\") call abort\n+  end \n\\ No newline at end of file"}, {"sha": "60e2d1f17e89d0a9a5811c73ef756d64ea17bc74", "filename": "gcc/testsuite/gfortran.dg/large_unit_1.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28fe1c4032687045633a19b9a7746c4bc9f5474f/gcc%2Ftestsuite%2Fgfortran.dg%2Flarge_unit_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28fe1c4032687045633a19b9a7746c4bc9f5474f/gcc%2Ftestsuite%2Fgfortran.dg%2Flarge_unit_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Flarge_unit_1.f90?ref=28fe1c4032687045633a19b9a7746c4bc9f5474f", "patch": "@@ -0,0 +1,17 @@\n+! { dg-do run }\n+! { dg-shouldfail \"Unit number in I/O statement too large\" }\n+! PR31201  Unit number in I/O statement too large\n+! Test case from PR\n+      integer(kind=8)  :: k= 2_8**36 + 10\n+      integer(kind=4)  :: j= 10\n+      logical  ex,op\n+      INQUIRE(unit=k, exist=ex,opened=op)\n+      print *, ex, op\n+      IF (ex) THEN\n+         OPEN(unit=k)\n+         INQUIRE(unit=j, opened=op)\n+         IF (op) CALL ABORT()\n+      ENDIF\n+      print *, k\n+      close(k)\n+      end"}, {"sha": "5f3554cc5bbe090a5c92e9ca69a2cb5a2f3f41de", "filename": "gcc/testsuite/gfortran.dg/large_unit_2.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28fe1c4032687045633a19b9a7746c4bc9f5474f/gcc%2Ftestsuite%2Fgfortran.dg%2Flarge_unit_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28fe1c4032687045633a19b9a7746c4bc9f5474f/gcc%2Ftestsuite%2Fgfortran.dg%2Flarge_unit_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Flarge_unit_2.f90?ref=28fe1c4032687045633a19b9a7746c4bc9f5474f", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do run }\n+! PR31201 Too large unit number generates wrong code \n+! Test case by Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+      integer :: i\n+      logical :: l\n+      character(len=60) :: s\n+      open(2_8*huge(0)+20_8,file=\"foo\",iostat=i)\n+      if (i == 0) call abort\n+      open(2_8*huge(0)+20_8,file=\"foo\",err=99)\n+      call abort\n+ 99   inquire(unit=18,opened=l)\n+      if (l) call abort\n+      end"}]}