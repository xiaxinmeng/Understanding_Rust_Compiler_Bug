{"sha": "30f2c22def7392119f1ffaca30ef998b3b43f336", "node_id": "C_kwDOANBUbNoAKDMwZjJjMjJkZWY3MzkyMTE5ZjFmZmFjYTMwZWY5OThiM2I0M2YzMzY", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-01-18T23:28:22Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-01-20T03:42:17Z"}, "message": "c++: template-id with current inst qualifier [PR102300]\n\nThe patch for PR41723 properly changed one place to look into the current\ninstantiation; now we need to fix this place as well.\n\n\tPR c++/102300\n\ngcc/cp/ChangeLog:\n\n\t* parser.cc (cp_parser_template_name): Use dependent_scope_p.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/parse/no-typename1.C: Remove expected error.\n\t* g++.dg/template/nested7.C: New test.", "tree": {"sha": "9535dd5b2946c772b0e9d1fd93988362a4dac103", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9535dd5b2946c772b0e9d1fd93988362a4dac103"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30f2c22def7392119f1ffaca30ef998b3b43f336", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30f2c22def7392119f1ffaca30ef998b3b43f336", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30f2c22def7392119f1ffaca30ef998b3b43f336", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30f2c22def7392119f1ffaca30ef998b3b43f336/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64655e7bdbea6b922f1f759eb9f1730b5e57029f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64655e7bdbea6b922f1f759eb9f1730b5e57029f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64655e7bdbea6b922f1f759eb9f1730b5e57029f"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "ed219d79dc944b8785845a9f9c736fef7352d31d", "filename": "gcc/cp/parser.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f2c22def7392119f1ffaca30ef998b3b43f336/gcc%2Fcp%2Fparser.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f2c22def7392119f1ffaca30ef998b3b43f336/gcc%2Fcp%2Fparser.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.cc?ref=30f2c22def7392119f1ffaca30ef998b3b43f336", "patch": "@@ -18574,7 +18574,7 @@ cp_parser_template_name (cp_parser* parser,\n \t\t\t: parser->context->object_type);\n \t  if (scope && TYPE_P (scope)\n \t      && (!CLASS_TYPE_P (scope)\n-\t\t  || (check_dependency_p && dependent_type_p (scope))))\n+\t\t  || (check_dependency_p && dependent_scope_p (scope))))\n \t    {\n \t      /* We're optimizing away the call to cp_parser_lookup_name, but\n \t\t we still need to do this.  */\n@@ -18667,9 +18667,9 @@ cp_parser_template_name (cp_parser* parser,\n \t    found = true;\n \t}\n \n-      /* \"in a type-only context\" */\n+      /* \"that follows the keyword template\"...\"in a type-only context\" */\n       if (!found && scope\n-\t  && tag_type != none_type\n+\t  && (template_keyword_p || tag_type != none_type)\n \t  && dependentish_scope_p (scope)\n \t  && cp_parser_nth_token_starts_template_argument_list_p (parser, 1))\n \tfound = true;\n@@ -18680,7 +18680,7 @@ cp_parser_template_name (cp_parser* parser,\n \t  cp_parser_error (parser, \"expected template-name\");\n \t  return error_mark_node;\n \t}\n-      else if (decl == error_mark_node)\n+      else if (!DECL_P (decl) && !is_overloaded_fn (decl))\n \t/* Repeat the lookup at instantiation time.  */\n \tdecl = identifier;\n     }"}, {"sha": "f40ea0ec13c18d62640406b282257ae23a39a20e", "filename": "gcc/testsuite/g++.dg/parse/no-typename1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f2c22def7392119f1ffaca30ef998b3b43f336/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fno-typename1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f2c22def7392119f1ffaca30ef998b3b43f336/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fno-typename1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fno-typename1.C?ref=30f2c22def7392119f1ffaca30ef998b3b43f336", "patch": "@@ -6,6 +6,6 @@ template <typename T> struct A\n {\n     template <typename U> struct B\n     {\n-        A<T>::template B<U> foo(); // { dg-error \"\" \"\" { target c++17_down } }\n+        A<T>::template B<U> foo();\n     };\n };"}, {"sha": "3a5930c0f31469f26aa3a39bc7893053207b24da", "filename": "gcc/testsuite/g++.dg/template/nested7.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f2c22def7392119f1ffaca30ef998b3b43f336/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnested7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f2c22def7392119f1ffaca30ef998b3b43f336/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnested7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnested7.C?ref=30f2c22def7392119f1ffaca30ef998b3b43f336", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/102300\n+\n+template<typename T>\n+struct holder\n+{\n+  template<typename F> struct fn {};\n+\n+  struct t1 : fn<T> {};                      // pass\n+  struct t2 : holder<T >::fn<T> {};          // fail\n+  struct t3 : holder<T >::template fn<T> {}; // fail\n+  struct t4 : holder<T*>::template fn<T> {}; // pass\n+};"}]}