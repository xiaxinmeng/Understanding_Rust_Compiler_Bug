{"sha": "933522fbc3340705007b00b7ac3734db7002a8c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMzNTIyZmJjMzM0MDcwNTAwN2IwMGI3YWMzNzM0ZGI3MDAyYThjNw==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-05-04T21:31:30Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-05-04T21:31:30Z"}, "message": "2004-05-04  Michael Koch  <konqueror@gmx.de>\n\n\t* java/nio/ByteBuffer.java,\n\tjava/nio/CharBuffer.java,\n\tjava/nio/DoubleBuffer.java,\n\tjava/nio/FloatBuffer.java,\n\tjava/nio/IntBuffer.java,\n\tjava/nio/LongBuffer.java,\n\tjava/nio/ShortBuffer.java:\n\t(compareTo): Fixed bogus implementation in all buffer classes.\n\nFrom-SVN: r81489", "tree": {"sha": "7281d10d42a1f2c51d91d3923158d74d7a9511ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7281d10d42a1f2c51d91d3923158d74d7a9511ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/933522fbc3340705007b00b7ac3734db7002a8c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/933522fbc3340705007b00b7ac3734db7002a8c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/933522fbc3340705007b00b7ac3734db7002a8c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/933522fbc3340705007b00b7ac3734db7002a8c7/comments", "author": null, "committer": null, "parents": [{"sha": "6c89c39a4880297da031f52ade9b839c6e73ef48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c89c39a4880297da031f52ade9b839c6e73ef48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c89c39a4880297da031f52ade9b839c6e73ef48"}], "stats": {"total": 310, "additions": 143, "deletions": 167}, "files": [{"sha": "baf4d6ac74355cf0c039d22da6bcfb3157341822", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933522fbc3340705007b00b7ac3734db7002a8c7/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933522fbc3340705007b00b7ac3734db7002a8c7/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=933522fbc3340705007b00b7ac3734db7002a8c7", "patch": "@@ -1,3 +1,14 @@\n+2004-05-04  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/nio/ByteBuffer.java,\n+\tjava/nio/CharBuffer.java,\n+\tjava/nio/DoubleBuffer.java,\n+\tjava/nio/FloatBuffer.java,\n+\tjava/nio/IntBuffer.java,\n+\tjava/nio/LongBuffer.java,\n+\tjava/nio/ShortBuffer.java:\n+\t(compareTo): Fixed bogus implementation in all buffer classes.\n+\n 2004-05-04  Ingo Proetel  <proetel@aicas.com>\n \n \t* java/awt/image/ColorModel.java (getRGBdefault): Default ColorModel has"}, {"sha": "8b43da57910ed8dc49270638849b142ea43a8c48", "filename": "libjava/java/nio/ByteBuffer.java", "status": "modified", "additions": 18, "deletions": 23, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933522fbc3340705007b00b7ac3734db7002a8c7/libjava%2Fjava%2Fnio%2FByteBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933522fbc3340705007b00b7ac3734db7002a8c7/libjava%2Fjava%2Fnio%2FByteBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FByteBuffer.java?ref=933522fbc3340705007b00b7ac3734db7002a8c7", "patch": "@@ -293,32 +293,27 @@ public boolean equals (Object obj)\n    */\n   public int compareTo (Object obj)\n   {\n-    ByteBuffer a = (ByteBuffer) obj;\n+    ByteBuffer other = (ByteBuffer) obj;\n \n-    if (a.remaining () != remaining ())\n-      return 1;\n-\n-    if (! hasArray () ||\n-        ! a.hasArray ())\n-      {\n-        return 1;\n-      }\n-\n-    int r = remaining ();\n-    int i1 = position ();\n-    int i2 = a.position ();\n-\n-    for (int i = 0; i < r; i++)\n+    int num = Math.min(remaining(), other.remaining());\n+    int pos_this = position();\n+    int pos_other = other.position();\n+    \n+    for (int count = 0; count < num; count++)\n       {\n-        int t = (int) (get (i1) - a.get (i2));\n-\n-        if (t != 0)\n-          {\n-            return (int) t;\n-          }\n+        byte a = get(pos_this++);\n+\tbyte b = other.get(pos_other++);\n+      \t \n+\tif (a == b)\n+\t  continue;\n+      \t   \n+\tif (a < b)\n+\t  return -1;\n+      \t   \n+\treturn 1;\n       }\n-\n-    return 0;\n+      \n+    return remaining() - other.remaining();\n   }\n \n   /**"}, {"sha": "416ca8349886645d9e3792b1c6b528c2f452c7c0", "filename": "libjava/java/nio/CharBuffer.java", "status": "modified", "additions": 19, "deletions": 24, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933522fbc3340705007b00b7ac3734db7002a8c7/libjava%2Fjava%2Fnio%2FCharBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933522fbc3340705007b00b7ac3734db7002a8c7/libjava%2Fjava%2Fnio%2FCharBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FCharBuffer.java?ref=933522fbc3340705007b00b7ac3734db7002a8c7", "patch": "@@ -1,5 +1,5 @@\n /* CharBuffer.java -- \n-   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -310,32 +310,27 @@ public boolean equals (Object obj)\n    */\n   public int compareTo (Object obj)\n   {\n-    CharBuffer a = (CharBuffer) obj;\n+    CharBuffer other = (CharBuffer) obj;\n \n-    if (a.remaining () != remaining ())\n-      return 1;\n-\n-    if (! hasArray () ||\n-        ! a.hasArray ())\n-      {\n-        return 1;\n-      }\n-\n-    int r = remaining ();\n-    int i1 = position ();\n-    int i2 = a.position ();\n-\n-    for (int i = 0; i < r; i++)\n+    int num = Math.min(remaining(), other.remaining());\n+    int pos_this = position();\n+    int pos_other = other.position();\n+    \n+    for (int count = 0; count < num; count++)\n       {\n-        int t = (int) (get (i1) - a.get (i2));\n-\n-        if (t != 0)\n-          {\n-            return (int) t;\n-          }\n+\t char a = get(pos_this++);\n+\t char b = other.get(pos_other++);\n+      \t \n+\t if (a == b)\n+\t   continue;\n+      \t   \n+\t if (a < b)\n+\t   return -1;\n+      \t   \n+\t return 1;\n       }\n-\n-    return 0;\n+      \n+     return remaining() - other.remaining();\n   }\n \n   /**"}, {"sha": "1ad8baede02f084f347969f80c2f811281e7b45d", "filename": "libjava/java/nio/DoubleBuffer.java", "status": "modified", "additions": 19, "deletions": 24, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933522fbc3340705007b00b7ac3734db7002a8c7/libjava%2Fjava%2Fnio%2FDoubleBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933522fbc3340705007b00b7ac3734db7002a8c7/libjava%2Fjava%2Fnio%2FDoubleBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FDoubleBuffer.java?ref=933522fbc3340705007b00b7ac3734db7002a8c7", "patch": "@@ -1,5 +1,5 @@\n /* DoubleBuffer.java -- \n-   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -265,32 +265,27 @@ public boolean equals (Object obj)\n    */\n   public int compareTo (Object obj)\n   {\n-    DoubleBuffer a = (DoubleBuffer) obj;\n+    DoubleBuffer other = (DoubleBuffer) obj;\n \n-    if (a.remaining () != remaining ())\n-      return 1;\n-\n-    if (! hasArray () ||\n-        ! a.hasArray ())\n-      {\n-        return 1;\n-      }\n-\n-    int r = remaining ();\n-    int i1 = position ();\n-    int i2 = a.position ();\n-\n-    for (int i = 0; i < r; i++)\n+    int num = Math.min(remaining(), other.remaining());\n+    int pos_this = position();\n+    int pos_other = other.position();\n+    \n+    for (int count = 0; count < num; count++)\n       {\n-        int t = (int) (get (i1) - a.get (i2));\n-\n-        if (t != 0)\n-          {\n-            return (int) t;\n-          }\n+\tdouble a = get(pos_this++);\n+\tdouble b = other.get(pos_other++);\n+      \t \n+\tif (a == b)\n+\t  continue;\n+      \t   \n+\tif (a < b)\n+\t  return -1;\n+      \t   \n+\treturn 1;\n       }\n-\n-    return 0;\n+      \n+    return remaining() - other.remaining();\n   }\n \n   /**"}, {"sha": "ab87b7f898f49526c4932e8022341b09469b9c06", "filename": "libjava/java/nio/FloatBuffer.java", "status": "modified", "additions": 19, "deletions": 24, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933522fbc3340705007b00b7ac3734db7002a8c7/libjava%2Fjava%2Fnio%2FFloatBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933522fbc3340705007b00b7ac3734db7002a8c7/libjava%2Fjava%2Fnio%2FFloatBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FFloatBuffer.java?ref=933522fbc3340705007b00b7ac3734db7002a8c7", "patch": "@@ -1,5 +1,5 @@\n /* FloatBuffer.java -- \n-   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -265,32 +265,27 @@ public boolean equals (Object obj)\n    */\n   public int compareTo (Object obj)\n   {\n-    FloatBuffer a = (FloatBuffer) obj;\n+    FloatBuffer other = (FloatBuffer) obj;\n \n-    if (a.remaining () != remaining ())\n-      return 1;\n-\n-    if (! hasArray () ||\n-        ! a.hasArray ())\n-      {\n-        return 1;\n-      }\n-\n-    int r = remaining ();\n-    int i1 = position ();\n-    int i2 = a.position ();\n-\n-    for (int i = 0; i < r; i++)\n+    int num = Math.min(remaining(), other.remaining());\n+    int pos_this = position();\n+    int pos_other = other.position();\n+    \n+    for (int count = 0; count < num; count++)\n       {\n-        int t = (int) (get (i1) - a.get (i2));\n-\n-        if (t != 0)\n-          {\n-            return (int) t;\n-          }\n+\tfloat a = get(pos_this++);\n+\tfloat b = other.get(pos_other++);\n+      \t \n+\tif (a == b)\n+\t  continue;\n+      \t   \n+\tif (a < b)\n+\t  return -1;\n+      \t   \n+\treturn 1;\n       }\n-\n-    return 0;\n+      \n+    return remaining() - other.remaining();\n   }\n \n   /**"}, {"sha": "52d822aa81d1b9e02c9631bbf6a7f2f9bdb43d95", "filename": "libjava/java/nio/IntBuffer.java", "status": "modified", "additions": 19, "deletions": 24, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933522fbc3340705007b00b7ac3734db7002a8c7/libjava%2Fjava%2Fnio%2FIntBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933522fbc3340705007b00b7ac3734db7002a8c7/libjava%2Fjava%2Fnio%2FIntBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FIntBuffer.java?ref=933522fbc3340705007b00b7ac3734db7002a8c7", "patch": "@@ -1,5 +1,5 @@\n /* IntBuffer.java -- \n-   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -265,32 +265,27 @@ public boolean equals (Object obj)\n    */\n   public int compareTo (Object obj)\n   {\n-    IntBuffer a = (IntBuffer) obj;\n+    IntBuffer other = (IntBuffer) obj;\n \n-    if (a.remaining () != remaining ())\n-      return 1;\n-\n-    if (! hasArray () ||\n-        ! a.hasArray ())\n-      {\n-        return 1;\n-      }\n-\n-    int r = remaining ();\n-    int i1 = position ();\n-    int i2 = a.position ();\n-\n-    for (int i = 0; i < r; i++)\n+    int num = Math.min(remaining(), other.remaining());\n+    int pos_this = position();\n+    int pos_other = other.position();\n+    \n+    for (int count = 0; count < num; count++)\n       {\n-        int t = (int) (get (i1) - a.get (i2));\n-\n-        if (t != 0)\n-          {\n-            return (int) t;\n-          }\n+      \t int a = get(pos_this++);\n+      \t int b = other.get(pos_other++);\n+      \t \n+      \t if (a == b)\n+      \t   continue;\n+      \t   \n+      \t if (a < b)\n+      \t   return -1;\n+      \t   \n+      \t return 1;\n       }\n-\n-    return 0;\n+      \n+     return remaining() - other.remaining();\n   }\n \n   /**"}, {"sha": "1b420eb5ed47b9da56e610c505c944d2fbf465d2", "filename": "libjava/java/nio/LongBuffer.java", "status": "modified", "additions": 19, "deletions": 24, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933522fbc3340705007b00b7ac3734db7002a8c7/libjava%2Fjava%2Fnio%2FLongBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933522fbc3340705007b00b7ac3734db7002a8c7/libjava%2Fjava%2Fnio%2FLongBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FLongBuffer.java?ref=933522fbc3340705007b00b7ac3734db7002a8c7", "patch": "@@ -1,5 +1,5 @@\n /* LongBuffer.java -- \n-   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -265,32 +265,27 @@ public boolean equals (Object obj)\n    */\n   public int compareTo (Object obj)\n   {\n-    LongBuffer a = (LongBuffer) obj;\n+    LongBuffer other = (LongBuffer) obj;\n \n-    if (a.remaining () != remaining ())\n-      return 1;\n-\n-    if (! hasArray () ||\n-        ! a.hasArray ())\n-      {\n-        return 1;\n-      }\n-\n-    int r = remaining ();\n-    int i1 = position ();\n-    int i2 = a.position ();\n-\n-    for (int i = 0; i < r; i++)\n+    int num = Math.min(remaining(), other.remaining());\n+    int pos_this = position();\n+    int pos_other = other.position();\n+    \n+    for (int count = 0; count < num; count++)\n       {\n-        int t = (int) (get (i1) - a.get (i2));\n-\n-        if (t != 0)\n-          {\n-            return (int) t;\n-          }\n+\t long a = get(pos_this++);\n+\t long b = other.get(pos_other++);\n+      \t \n+\t if (a == b)\n+\t   continue;\n+      \t   \n+\t if (a < b)\n+\t   return -1;\n+      \t   \n+\t return 1;\n       }\n-\n-    return 0;\n+      \n+     return remaining() - other.remaining();\n   }\n \n   /**"}, {"sha": "9f542769faca177b1b38711cb7bbf79d88b6bc1a", "filename": "libjava/java/nio/ShortBuffer.java", "status": "modified", "additions": 19, "deletions": 24, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/933522fbc3340705007b00b7ac3734db7002a8c7/libjava%2Fjava%2Fnio%2FShortBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/933522fbc3340705007b00b7ac3734db7002a8c7/libjava%2Fjava%2Fnio%2FShortBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2FShortBuffer.java?ref=933522fbc3340705007b00b7ac3734db7002a8c7", "patch": "@@ -1,5 +1,5 @@\n /* ShortBuffer.java -- \n-   Copyright (C) 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2002, 2003, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -265,32 +265,27 @@ public boolean equals (Object obj)\n    */\n   public int compareTo (Object obj)\n   {\n-    ShortBuffer a = (ShortBuffer) obj;\n+    ShortBuffer other = (ShortBuffer) obj;\n \n-    if (a.remaining () != remaining ())\n-      return 1;\n-\n-    if (! hasArray () ||\n-        ! a.hasArray ())\n-      {\n-        return 1;\n-      }\n-\n-    int r = remaining ();\n-    int i1 = position ();\n-    int i2 = a.position ();\n-\n-    for (int i = 0; i < r; i++)\n+    int num = Math.min(remaining(), other.remaining());\n+    int pos_this = position();\n+    int pos_other = other.position();\n+    \n+    for (int count = 0; count < num; count++)\n       {\n-        int t = (int) (get (i1) - a.get (i2));\n-\n-        if (t != 0)\n-          {\n-            return (int) t;\n-          }\n+\t short a = get(pos_this++);\n+\t short b = other.get(pos_other++);\n+      \t \n+\t if (a == b)\n+\t   continue;\n+      \t   \n+\t if (a < b)\n+\t   return -1;\n+      \t   \n+\t return 1;\n       }\n-\n-    return 0;\n+      \n+     return remaining() - other.remaining();\n   }\n \n   /**"}]}