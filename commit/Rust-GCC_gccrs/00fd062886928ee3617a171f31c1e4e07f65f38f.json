{"sha": "00fd062886928ee3617a171f31c1e4e07f65f38f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBmZDA2Mjg4NjkyOGVlMzYxN2ExNzFmMzFjMWU0ZTA3ZjY1ZjM4Zg==", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@linux.ibm.com", "date": "2018-12-17T22:07:11Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@gcc.gnu.org", "date": "2018-12-17T22:07:11Z"}, "message": "re PR target/87870 (ppc64le generates poor code when loading constants into TImode vars)\n\ngcc/\n\tPR target/87870\n\t* config/rs6000/vsx.md (nW): New mode iterator.\n\t(vsx_mov<mode>_64bit): Use it.  Remove redundant GPR 0/-1 alternative.\n\tUpdate length attribute for (<??r>, <nW>)  alternative.\n\t(vsx_mov<mode>_32bit): Likewise.\n\ngcc/testsuite/\n\tPR target/87870\n\t* gcc.target/powerpc/pr87870.c: New test.\n\nFrom-SVN: r267221", "tree": {"sha": "f90406664298f3ae328a989d45ccbf0ad6ab540d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f90406664298f3ae328a989d45ccbf0ad6ab540d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00fd062886928ee3617a171f31c1e4e07f65f38f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00fd062886928ee3617a171f31c1e4e07f65f38f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00fd062886928ee3617a171f31c1e4e07f65f38f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00fd062886928ee3617a171f31c1e4e07f65f38f/comments", "author": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1e9d69235a88347d293dec7927e34dd38f6ee580", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e9d69235a88347d293dec7927e34dd38f6ee580", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e9d69235a88347d293dec7927e34dd38f6ee580"}], "stats": {"total": 73, "additions": 63, "deletions": 10}, "files": [{"sha": "625429c31c04889a8112eda7e14bf1610d80f20b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00fd062886928ee3617a171f31c1e4e07f65f38f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00fd062886928ee3617a171f31c1e4e07f65f38f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=00fd062886928ee3617a171f31c1e4e07f65f38f", "patch": "@@ -1,3 +1,11 @@\n+2018-12-17  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\tPR target/87870\n+\t* config/rs6000/vsx.md (nW): New mode iterator.\n+\t(vsx_mov<mode>_64bit): Use it.  Remove redundant GPR 0/-1 alternative.\n+\tUpdate length attribute for (<??r>, <nW>)  alternative.\n+\t(vsx_mov<mode>_32bit): Likewise.\n+\n 2018-12-17  Tom de Vries  <tdevries@suse.de>\n \n \t* config/nvptx/nvptx.c (PTX_VECTOR_LENGTH, PTX_WORKER_LENGTH,"}, {"sha": "65a9892ff9ff89336fe043556503143be40304f4", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00fd062886928ee3617a171f31c1e4e07f65f38f/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00fd062886928ee3617a171f31c1e4e07f65f38f/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=00fd062886928ee3617a171f31c1e4e07f65f38f", "patch": "@@ -183,6 +183,18 @@\n \t\t\t (TF\t\"??r\")\n \t\t\t (TI\t\"r\")])\n \n+;; A mode attribute used for 128-bit constant values.\n+(define_mode_attr nW\t[(V16QI\t\"W\")\n+\t\t\t (V8HI\t\"W\")\n+\t\t\t (V4SI\t\"W\")\n+\t\t\t (V4SF\t\"W\")\n+\t\t\t (V2DI\t\"W\")\n+\t\t\t (V2DF\t\"W\")\n+\t\t\t (V1TI\t\"W\")\n+\t\t\t (KF\t\"W\")\n+\t\t\t (TF\t\"W\")\n+\t\t\t (TI\t\"n\")])\n+\n ;; Same size integer type for floating point data\n (define_mode_attr VSi [(V4SF  \"v4si\")\n \t\t       (V2DF  \"v2di\")\n@@ -1193,17 +1205,17 @@\n \n ;;              VSX store  VSX load   VSX move  VSX->GPR   GPR->VSX    LQ (GPR)\n ;;              STQ (GPR)  GPR load   GPR store GPR move   XXSPLTIB    VSPLTISW\n-;;              VSX 0/-1   GPR 0/-1   VMX const GPR const  LVX (VMX)   STVX (VMX)\n+;;              VSX 0/-1   VMX const  GPR const LVX (VMX)  STVX (VMX)\n (define_insn \"vsx_mov<mode>_64bit\"\n   [(set (match_operand:VSX_M 0 \"nonimmediate_operand\"\n                \"=ZwO,      <VSa>,     <VSa>,     r,         we,        ?wQ,\n                 ?&r,       ??r,       ??Y,       <??r>,     wo,        v,\n-                ?<VSa>,    *r,        v,         ??r,       wZ,        v\")\n+                ?<VSa>,    v,         <??r>,     wZ,        v\")\n \n \t(match_operand:VSX_M 1 \"input_operand\" \n                \"<VSa>,     ZwO,       <VSa>,     we,        r,         r,\n                 wQ,        Y,         r,         r,         wE,        jwM,\n-                ?jwM,      jwM,       W,         W,         v,         wZ\"))]\n+                ?jwM,      W,         <nW>,      v,         wZ\"))]\n \n   \"TARGET_POWERPC64 && VECTOR_MEM_VSX_P (<MODE>mode)\n    && (register_operand (operands[0], <MODE>mode) \n@@ -1214,25 +1226,25 @@\n   [(set_attr \"type\"\n                \"vecstore,  vecload,   vecsimple, mffgpr,    mftgpr,    load,\n                 store,     load,      store,     *,         vecsimple, vecsimple,\n-                vecsimple, *,         *,         *,         vecstore,  vecload\")\n+                vecsimple, *,         *,         vecstore,  vecload\")\n \n    (set_attr \"length\"\n                \"4,         4,         4,         8,         4,         8,\n                 8,         8,         8,         8,         4,         4,\n-                4,         8,         20,        20,        4,         4\")])\n+                4,         20,        8,         4,         4\")])\n \n ;;              VSX store  VSX load   VSX move   GPR load   GPR store  GPR move\n-;;              XXSPLTIB   VSPLTISW   VSX 0/-1   GPR 0/-1   VMX const  GPR const\n+;;              XXSPLTIB   VSPLTISW   VSX 0/-1   VMX const  GPR const\n ;;              LVX (VMX)  STVX (VMX)\n (define_insn \"*vsx_mov<mode>_32bit\"\n   [(set (match_operand:VSX_M 0 \"nonimmediate_operand\"\n                \"=ZwO,      <VSa>,     <VSa>,     ??r,       ??Y,       <??r>,\n-                wo,        v,         ?<VSa>,    *r,        v,         ??r,\n+                wo,        v,         ?<VSa>,    v,         <??r>,\n                 wZ,        v\")\n \n \t(match_operand:VSX_M 1 \"input_operand\" \n                \"<VSa>,     ZwO,       <VSa>,     Y,         r,         r,\n-                wE,        jwM,       ?jwM,      jwM,       W,         W,\n+                wE,        jwM,       ?jwM,      W,         <nW>,\n                 v,         wZ\"))]\n \n   \"!TARGET_POWERPC64 && VECTOR_MEM_VSX_P (<MODE>mode)\n@@ -1243,12 +1255,12 @@\n }\n   [(set_attr \"type\"\n                \"vecstore,  vecload,   vecsimple, load,      store,    *,\n-                vecsimple, vecsimple, vecsimple, *,         *,        *,\n+                vecsimple, vecsimple, vecsimple, *,         *,\n                 vecstore,  vecload\")\n \n    (set_attr \"length\"\n                \"4,         4,         4,         16,        16,        16,\n-                4,         4,         4,         16,        20,        32,\n+                4,         4,         4,         20,        16,\n                 4,         4\")])\n \n ;; Explicit  load/store expanders for the builtin functions"}, {"sha": "77787b2c8c79959cef7a7f7af96a66b2a0269793", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00fd062886928ee3617a171f31c1e4e07f65f38f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00fd062886928ee3617a171f31c1e4e07f65f38f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=00fd062886928ee3617a171f31c1e4e07f65f38f", "patch": "@@ -1,3 +1,8 @@\n+2018-12-17  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\tPR target/87870\n+\t* gcc.target/powerpc/pr87870.c: New test.\n+\n 2018-12-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/88410"}, {"sha": "d2108ac338685132792a138a181629cc6c9ae91b", "filename": "gcc/testsuite/gcc.target/powerpc/pr87870.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00fd062886928ee3617a171f31c1e4e07f65f38f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr87870.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00fd062886928ee3617a171f31c1e4e07f65f38f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr87870.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr87870.c?ref=00fd062886928ee3617a171f31c1e4e07f65f38f", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile { target { powerpc*-*-* && lp64 } } } */\n+/* { dg-options \"-O2\" } */\n+\n+__int128\n+test0 (void)\n+{\n+  return 0;\n+}\n+\n+__int128\n+test1 (void)\n+{\n+  return 1;\n+}\n+\n+__int128\n+test2 (void)\n+{\n+  return -1;\n+}\n+\n+__int128\n+test3 (void)\n+{\n+  return ((__int128)0xdeadbeefcafebabe << 64) | 0xfacefeedbaaaaaad;\n+}\n+\n+/* { dg-final { scan-assembler-not {\\mld\\M} } } */"}]}