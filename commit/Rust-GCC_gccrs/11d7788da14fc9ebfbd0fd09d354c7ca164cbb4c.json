{"sha": "11d7788da14fc9ebfbd0fd09d354c7ca164cbb4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFkNzc4OGRhMTRmYzllYmZiZDBmZDA5ZDM1NGM3Y2ExNjRjYmI0Yw==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2010-01-18T23:14:01Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2010-01-18T23:14:01Z"}, "message": "Revert fix of PR c++/\n\ngcc/cp/ChangeLog:\n\t* error.c (dump_template_parms, count_non_default_template_args):\n\tRevert fix of PR c++/42634.\n\ngcc/testsuite/ChangeLog:\n\t* g++.dg/template/error45.C: reverted as part of reverting the\n\tfix of PR c++/42634.\n\nFrom-SVN: r156026", "tree": {"sha": "fa4e131e26a1ce6f2f7de411de613d597b36a2f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa4e131e26a1ce6f2f7de411de613d597b36a2f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11d7788da14fc9ebfbd0fd09d354c7ca164cbb4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11d7788da14fc9ebfbd0fd09d354c7ca164cbb4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11d7788da14fc9ebfbd0fd09d354c7ca164cbb4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11d7788da14fc9ebfbd0fd09d354c7ca164cbb4c/comments", "author": null, "committer": null, "parents": [{"sha": "b949bbc8e69f3f6f55dae3838f5e58cdd6aac704", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b949bbc8e69f3f6f55dae3838f5e58cdd6aac704", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b949bbc8e69f3f6f55dae3838f5e58cdd6aac704"}], "stats": {"total": 51, "additions": 14, "deletions": 37}, "files": [{"sha": "f9422b2dcd74755db3034783084d66d097912389", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11d7788da14fc9ebfbd0fd09d354c7ca164cbb4c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11d7788da14fc9ebfbd0fd09d354c7ca164cbb4c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=11d7788da14fc9ebfbd0fd09d354c7ca164cbb4c", "patch": "@@ -1,3 +1,8 @@\n+2010-01-19  Dodji Seketeli  <dodji@redhat.com>\n+\n+\t* error.c (dump_template_parms, count_non_default_template_args):\n+\tRevert fix of PR c++/42634.\n+\n 2010-01-18  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/42634"}, {"sha": "e0e5ae52ceb73f90b739655b92a4add6acd3141e", "filename": "gcc/cp/error.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11d7788da14fc9ebfbd0fd09d354c7ca164cbb4c/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11d7788da14fc9ebfbd0fd09d354c7ca164cbb4c/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=11d7788da14fc9ebfbd0fd09d354c7ca164cbb4c", "patch": "@@ -165,7 +165,8 @@ dump_template_argument (tree arg, int flags)\n static int\n count_non_default_template_args (tree args, tree params, int flags)\n {\n-  int n = TREE_VEC_LENGTH (args);\n+  tree inner_args = INNERMOST_TEMPLATE_ARGS (args);\n+  int n = TREE_VEC_LENGTH (inner_args);\n   int last;\n \n   if (params == NULL_TREE\n@@ -194,7 +195,7 @@ count_non_default_template_args (tree args, tree params, int flags)\n \t\t\t\t       NULL_TREE, false, true);\n \t  --processing_template_decl;\n \t}\n-      if (!cp_tree_equal (TREE_VEC_ELT (args, last), def))\n+      if (!cp_tree_equal (TREE_VEC_ELT (inner_args, last), def))\n         break;\n     }\n \n@@ -1491,9 +1492,9 @@ dump_template_parms (tree info, int primary, int flags)\n \t\t     ? DECL_INNERMOST_TEMPLATE_PARMS (TI_TEMPLATE (info))\n \t\t     : NULL_TREE);\n \n-      args = INNERMOST_TEMPLATE_ARGS (args);\n       len = count_non_default_template_args (args, params, flags);\n \n+      args = INNERMOST_TEMPLATE_ARGS (args);\n       for (ix = 0; ix != len; ix++)\n \t{\n \t  tree arg = TREE_VEC_ELT (args, ix);"}, {"sha": "e48b99384557f8baa266d8adf6280378794901f8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11d7788da14fc9ebfbd0fd09d354c7ca164cbb4c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11d7788da14fc9ebfbd0fd09d354c7ca164cbb4c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=11d7788da14fc9ebfbd0fd09d354c7ca164cbb4c", "patch": "@@ -1,3 +1,8 @@\n+2010-01-19  Dodji Seketeli  <dodji@redhat.com>\n+\n+\t* g++.dg/template/error45.C: reverted as part of reverting the\n+\tfix of PR c++/42634.\n+\n 2010-01-18  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/42634"}, {"sha": "f5332ee7144f00b09caa5d5ff529e5ee822cca58", "filename": "gcc/testsuite/g++.dg/template/error45.C", "status": "removed", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b949bbc8e69f3f6f55dae3838f5e58cdd6aac704/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror45.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b949bbc8e69f3f6f55dae3838f5e58cdd6aac704/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror45.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror45.C?ref=b949bbc8e69f3f6f55dae3838f5e58cdd6aac704", "patch": "@@ -1,34 +0,0 @@\n-// Origin PR c++/42634\n-// { dg-options \"-g -std=gnu++0x\" }\n-// { dg-do compile }\n-\n-template<typename T> T declval();\n-\n-template<typename T, typename... Args> struct is_constructible {\n-    template<typename T1, typename... Args1> static decltype(T1(declval<Args1>()...), char()) test();\n-    static const bool value = sizeof(test<T, Args...>()) == 1;\n-};\n-template<bool> struct enable_if {\n-        typedef void type;\n-};\n-template<class T1, class T2> struct pair {\n-    template<class U2,\n-             class = typename enable_if<is_constructible<T2,U2&&>::value>::type\n-             >\n-    pair(const T1&, U2&&) { }\n-};\n-struct string {\n-  string() : p(0) {}\n-  char* p;\n-};\n-\n-struct Foo {\n-  string s;\n-  int i;\n-};\n-\n-void f()\n-{\n-  pair<int, Foo>(1, Foo());\n-}\n-"}]}