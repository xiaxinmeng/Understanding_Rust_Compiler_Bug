{"sha": "2d8c9ad5c96e9a66b11deedb894822143202392e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ4YzlhZDVjOTZlOWE2NmIxMWRlZWRiODk0ODIyMTQzMjAyMzkyZQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-05-14T09:39:38Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-05-14T09:39:38Z"}, "message": "invoke.texi (-Ofast): Also enables -fstack-arrays.\n\n2011-05-14  Tobias Burnus  <burnus@net-b.de>\n\n        * doc/invoke.texi (-Ofast): Also enables -fstack-arrays.\n\n2011-05-14  Tobias Burnus  <burnus@net-b.de>\n\n        * options.c (gfc_init_options, gfc_post_options): Enable\n        -fstack-arrays by default if -Ofast is used.\n        * invoke.texi (-fstack-arrays): Document this.\n\nFrom-SVN: r173751", "tree": {"sha": "0ca13f95fa2e388e64eded9cec3391d4ed37605d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ca13f95fa2e388e64eded9cec3391d4ed37605d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d8c9ad5c96e9a66b11deedb894822143202392e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d8c9ad5c96e9a66b11deedb894822143202392e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d8c9ad5c96e9a66b11deedb894822143202392e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d8c9ad5c96e9a66b11deedb894822143202392e/comments", "author": null, "committer": null, "parents": [{"sha": "de8bd1420e94a63faef64c2ccac021fd89a11497", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de8bd1420e94a63faef64c2ccac021fd89a11497", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de8bd1420e94a63faef64c2ccac021fd89a11497"}], "stats": {"total": 47, "additions": 31, "deletions": 16}, "files": [{"sha": "8b383030924e16e90c0bf4b4b19f7499740c0f39", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d8c9ad5c96e9a66b11deedb894822143202392e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d8c9ad5c96e9a66b11deedb894822143202392e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d8c9ad5c96e9a66b11deedb894822143202392e", "patch": "@@ -1,3 +1,7 @@\n+2011-05-14  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* doc/invoke.texi (-Ofast): Also enables -fstack-arrays.\n+\n 2011-05-13  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-prop.c (ipa_cst_from_jfunc): New function."}, {"sha": "6ed289e3b159961ef2b2c16f4fa7154bfc19c46b", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d8c9ad5c96e9a66b11deedb894822143202392e/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d8c9ad5c96e9a66b11deedb894822143202392e/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=2d8c9ad5c96e9a66b11deedb894822143202392e", "patch": "@@ -6000,7 +6000,7 @@ Disregard strict standards compliance.  @option{-Ofast} enables all\n @option{-O3} optimizations.  It also enables optimizations that are not\n valid for all standard compliant programs.\n It turns on @option{-ffast-math} and the Fortran-specific\n-@option{-fno-protect-parens}.\n+@option{-fno-protect-parens} and @option{-fstack-arrays}.\n \n If you use multiple @option{-O} options, with or without level numbers,\n the last such option is the one that is effective."}, {"sha": "b4168316436bf7b06a0c42006ef313527a00cc2d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 19, "deletions": 13, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d8c9ad5c96e9a66b11deedb894822143202392e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d8c9ad5c96e9a66b11deedb894822143202392e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2d8c9ad5c96e9a66b11deedb894822143202392e", "patch": "@@ -1,21 +1,27 @@\n+2011-05-14  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* options.c (gfc_init_options, gfc_post_options): Enable\n+\t-fstack-arrays by default if -Ofast is used.\n+\t* invoke.texi (-fstack-arrays): Document this.\n+\n 2011-05-14  Janne Blomqvist  <jb@gcc.gnu.org>\n \n-        PR libfortran/48915\n-        * gfortran.h (gfc_option_t): Remove flag_dump_core.\n-        * gfortran.texi (GFORTRAN_ERROR_DUMPCORE): Remove section.\n-        (GFORTRAN_ERROR_BACKTRACE): Document that it's enabled by default.\n-        * intrinsic.texi (ABORT): Remove explanation of -fdump-core.\n-        * invoke.texi: Remove -fdump-core, document that -fbacktrace is\n-        enabled by default.\n-        * lang.opt: Remove -fdump-core.\n-        * options.c (gfc_init_options): Make backtrace default to enabled,\n-        remove dump_core.\n-        (gfc_handle_option): Remove OPT_fdump-core.\n-        * trans-decl.c: Pass a 0 to preserve ABI.\n+\tPR libfortran/48915\n+\t* gfortran.h (gfc_option_t): Remove flag_dump_core.\n+\t* gfortran.texi (GFORTRAN_ERROR_DUMPCORE): Remove section.\n+\t(GFORTRAN_ERROR_BACKTRACE): Document that it's enabled by default.\n+\t* intrinsic.texi (ABORT): Remove explanation of -fdump-core.\n+\t* invoke.texi: Remove -fdump-core, document that -fbacktrace is\n+\tenabled by default.\n+\t* lang.opt: Remove -fdump-core.\n+\t* options.c (gfc_init_options): Make backtrace default to enabled,\n+\tremove dump_core.\n+\t(gfc_handle_option): Remove OPT_fdump-core.\n+\t* trans-decl.c: Pass a 0 to preserve ABI.\n \n 2011-05-14  Janne Blomqvist  <jb@gcc.gnu.org>\n \n-        * gfortran.texi: Remove GFORTRAN_USE_STDERR documentation.\n+\t* gfortran.texi: Remove GFORTRAN_USE_STDERR documentation.\n \n 2011-05-13  Tobias Burnus  <burnus@net-b.de>\n "}, {"sha": "ab45072efadc0d2dc97ec26b5b92e56618424ab9", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d8c9ad5c96e9a66b11deedb894822143202392e/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d8c9ad5c96e9a66b11deedb894822143202392e/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=2d8c9ad5c96e9a66b11deedb894822143202392e", "patch": "@@ -1381,7 +1381,9 @@ The default value for @var{n} is 32768.\n Adding this option will make the fortran compiler put all local arrays,\n even those of unknown size onto stack memory.  If your program uses very\n large local arrays it's possible that you'll have to extend your runtime\n-limits for stack memory on some operating systems.\n+limits for stack memory on some operating systems. This flag is enabled\n+by default at optimization level @option{-Ofast}.\n+\n \n @item -fpack-derived\n @opindex @code{fpack-derived}"}, {"sha": "920b95f33fe4d1ec69206921826a7b77263ec813", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d8c9ad5c96e9a66b11deedb894822143202392e/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d8c9ad5c96e9a66b11deedb894822143202392e/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=2d8c9ad5c96e9a66b11deedb894822143202392e", "patch": "@@ -125,7 +125,7 @@ gfc_init_options (unsigned int decoded_options_count,\n \n   /* Default value of flag_max_stack_var_size is set in gfc_post_options.  */\n   gfc_option.flag_max_stack_var_size = -2;\n-  gfc_option.flag_stack_arrays = 0;\n+  gfc_option.flag_stack_arrays = -1;\n \n   gfc_option.flag_range_check = 1;\n   gfc_option.flag_pack_derived = 0;\n@@ -274,6 +274,9 @@ gfc_post_options (const char **pfilename)\n   if (gfc_option.flag_protect_parens == -1)\n     gfc_option.flag_protect_parens = !optimize_fast;\n \n+  if (gfc_option.flag_stack_arrays == -1)\n+    gfc_option.flag_stack_arrays = optimize_fast;\n+\n   /* By default, disable (re)allocation during assignment for -std=f95,\n      and enable it for F2003/F2008/GNU/Legacy. */\n   if (gfc_option.flag_realloc_lhs == -1)"}]}