{"sha": "4f3e333a872427dc34a7235dc31431fc5c6cfd88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGYzZTMzM2E4NzI0MjdkYzM0YTcyMzVkYzMxNDMxZmM1YzZjZmQ4OA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2017-08-01T11:15:52Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-08-01T11:15:52Z"}, "message": "re PR target/81641 (Assemble failure with named address spaces and -masm=intel)\n\n\tPR target/81641\n\t* config/i386/i386.c (ix86_print_operand_address_as): For -masm=intel\n\tprint \"ds:\" only for immediates in generic address space.\n\ntestsuite/ChangeLog:\n\n\tPR target/81641\n\t* gcc.target/i386/pr81641.c: New test.\n\nFrom-SVN: r250769", "tree": {"sha": "6fc7e85627329ff339a50b462201dc99ab49031b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fc7e85627329ff339a50b462201dc99ab49031b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f3e333a872427dc34a7235dc31431fc5c6cfd88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f3e333a872427dc34a7235dc31431fc5c6cfd88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f3e333a872427dc34a7235dc31431fc5c6cfd88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f3e333a872427dc34a7235dc31431fc5c6cfd88/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8bb5772c6cbb043e60229ecc68806d91efe079f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8bb5772c6cbb043e60229ecc68806d91efe079f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8bb5772c6cbb043e60229ecc68806d91efe079f"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "ca6353ad6fe8390e6cddde4b04745c814e9211f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f3e333a872427dc34a7235dc31431fc5c6cfd88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f3e333a872427dc34a7235dc31431fc5c6cfd88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f3e333a872427dc34a7235dc31431fc5c6cfd88", "patch": "@@ -1,3 +1,9 @@\n+2017-08-01  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/81641\n+\t* config/i386/i386.c (ix86_print_operand_address_as): For -masm=intel\n+\tprint \"ds:\" only for immediates in generic address space.\n+\n 2017-08-01  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/81639"}, {"sha": "494a18a2cd17c8c1f881dba552f3bcd04f3f5b31", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f3e333a872427dc34a7235dc31431fc5c6cfd88/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f3e333a872427dc34a7235dc31431fc5c6cfd88/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=4f3e333a872427dc34a7235dc31431fc5c6cfd88", "patch": "@@ -19446,7 +19446,7 @@ ix86_print_operand_address_as (FILE *file, rtx addr,\n       /* Displacement only requires special attention.  */\n       if (CONST_INT_P (disp))\n \t{\n-\t  if (ASSEMBLER_DIALECT == ASM_INTEL && parts.seg == ADDR_SPACE_GENERIC)\n+\t  if (ASSEMBLER_DIALECT == ASM_INTEL && ADDR_SPACE_GENERIC_P (as))\n \t    fputs (\"ds:\", file);\n \t  fprintf (file, HOST_WIDE_INT_PRINT_DEC, INTVAL (disp));\n \t}"}, {"sha": "c9ebc51c2c49293be4fe1bcfc459fd9ff92b8e9d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f3e333a872427dc34a7235dc31431fc5c6cfd88/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f3e333a872427dc34a7235dc31431fc5c6cfd88/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4f3e333a872427dc34a7235dc31431fc5c6cfd88", "patch": "@@ -1,3 +1,8 @@\n+2017-08-01  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/81641\n+\t* gcc.target/i386/pr81641.c: New test.\n+\n 2017-08-01  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/81639"}, {"sha": "15da9ac26ef40cf34312ea3bab1e940c50a488aa", "filename": "gcc/testsuite/gcc.target/i386/pr81641.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f3e333a872427dc34a7235dc31431fc5c6cfd88/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81641.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f3e333a872427dc34a7235dc31431fc5c6cfd88/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81641.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr81641.c?ref=4f3e333a872427dc34a7235dc31431fc5c6cfd88", "patch": "@@ -0,0 +1,11 @@\n+/* PR target/81641 */\n+/* { dg-do assemble } */\n+/* { dg-options \"-O -masm=intel\" } */\n+/* { dg-require-effective-target masm_intel } */\n+\n+int test(void)\n+{\n+  int __seg_fs *f = (int __seg_fs *)16;\n+  int __seg_gs *g = (int __seg_gs *)16;\n+  return *f + *g;\n+}"}]}