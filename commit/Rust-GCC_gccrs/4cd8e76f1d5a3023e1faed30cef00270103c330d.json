{"sha": "4cd8e76f1d5a3023e1faed30cef00270103c330d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNkOGU3NmYxZDVhMzAyM2UxZmFlZDMwY2VmMDAyNzAxMDNjMzMwZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-02-20T17:25:52Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-02-20T17:25:52Z"}, "message": "re PR middle-end/35265 (__builtin_popcount expansion bug)\n\n2008-02-20  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/35265\n\t* builtins.c (validate_arg): If we want an INTEGER_TYPE,\n\tbe happy with INTEGRAL_TYPE_P.\n\n\t* gcc.dg/builtins-66.c: New testcase.\n\nFrom-SVN: r132485", "tree": {"sha": "8859bcc1e459f16a199213b97b933e7436f588cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8859bcc1e459f16a199213b97b933e7436f588cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cd8e76f1d5a3023e1faed30cef00270103c330d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cd8e76f1d5a3023e1faed30cef00270103c330d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cd8e76f1d5a3023e1faed30cef00270103c330d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cd8e76f1d5a3023e1faed30cef00270103c330d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a99c05392be32119390de08703da62079ee5eac2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a99c05392be32119390de08703da62079ee5eac2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a99c05392be32119390de08703da62079ee5eac2"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "495a4769a5a5dee9428ec0a5c8c00d7818453120", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cd8e76f1d5a3023e1faed30cef00270103c330d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cd8e76f1d5a3023e1faed30cef00270103c330d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4cd8e76f1d5a3023e1faed30cef00270103c330d", "patch": "@@ -1,3 +1,9 @@\n+2008-02-20  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/35265\n+\t* builtins.c (validate_arg): If we want an INTEGER_TYPE,\n+\tbe happy with INTEGRAL_TYPE_P.\n+\n 2008-02-20  Richard Guenther  <rguenther@suse.de>\n \n \t* fold-const.c (split_tree): Associate floatig-point expressions"}, {"sha": "5e6ebf5d116c56da1d43ba213ef3ef7c1c577fda", "filename": "gcc/builtins.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cd8e76f1d5a3023e1faed30cef00270103c330d/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cd8e76f1d5a3023e1faed30cef00270103c330d/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=4cd8e76f1d5a3023e1faed30cef00270103c330d", "patch": "@@ -5192,6 +5192,7 @@ expand_builtin_fabs (tree exp, rtx target, rtx subtarget)\n     return NULL_RTX;\n \n   arg = CALL_EXPR_ARG (exp, 0);\n+  CALL_EXPR_ARG (exp, 0) = arg = builtin_save_expr (arg);\n   mode = TYPE_MODE (TREE_TYPE (arg));\n   op0 = expand_expr (arg, subtarget, VOIDmode, EXPAND_NORMAL);\n   return expand_abs (mode, op0, target, 0, safe_from_p (target, arg, 1));\n@@ -10749,6 +10750,8 @@ validate_arg (const_tree arg, enum tree_code code)\n     return false;\n   else if (code == POINTER_TYPE)\n     return POINTER_TYPE_P (TREE_TYPE (arg));\n+  else if (code == INTEGER_TYPE)\n+    return INTEGRAL_TYPE_P (TREE_TYPE (arg));\n   return code == TREE_CODE (TREE_TYPE (arg));\n }\n "}, {"sha": "04c799fe178e8a579439ee56f5822b0b90e8699d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cd8e76f1d5a3023e1faed30cef00270103c330d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cd8e76f1d5a3023e1faed30cef00270103c330d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4cd8e76f1d5a3023e1faed30cef00270103c330d", "patch": "@@ -1,3 +1,8 @@\n+2008-02-20  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/35265\n+\t* gcc.dg/builtins-66.c: New testcase.\n+\n 2008-02-20  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/fold-reassoc-1.c: New testcase."}, {"sha": "87bea3f4209fa4a04aaa5fb283b5af1363867870", "filename": "gcc/testsuite/gcc.dg/builtins-66.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cd8e76f1d5a3023e1faed30cef00270103c330d/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-66.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cd8e76f1d5a3023e1faed30cef00270103c330d/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-66.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-66.c?ref=4cd8e76f1d5a3023e1faed30cef00270103c330d", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+\n+enum { E0 = 0, E1 = 1, E2 = 2 } e;\n+\n+int\n+foo (void)\n+{\n+  return __builtin_popcount ((int) e);\n+}\n+\n+/* { dg-final { scan-assembler-not \"__builtin_popcount\" } } */"}]}