{"sha": "0d1cf53834bdcbe23c20c872036754c028caaa06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQxY2Y1MzgzNGJkY2JlMjNjMjBjODcyMDM2NzU0YzAyOGNhYWEwNg==", "commit": {"author": {"name": "Dominik Infuehr", "email": "dominik.infuehr@theobroma-systems.com", "date": "2017-10-30T18:35:32Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wilco@gcc.gnu.org", "date": "2017-10-30T18:35:32Z"}, "message": "Wrong type-attribute for stp and str\n\nFix the type attributes of the integer stores in aarch64_simd_mov.\n\n    gcc/\n\t* config/aarch64/aarch64-simd.md (*aarch64_simd_mov): Rename\n\tboth identically named patterns to (*aarch64_simd_mov<VD:mode>)\n\tand (*aarch64_simd_mov<VQ:mode>).\n\t(*aarch64_simd_mov<VD:mode>): Change type attribute to match\n\tpattern alternative.\n\t(*aarch64_simd_mov<VQ:mode>): Re-order and change type\n\tattributes to match pattern alternative.\n\nFrom-SVN: r254236", "tree": {"sha": "8f123a1aec882825e9ab0ddea37c4279e7a0b2b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f123a1aec882825e9ab0ddea37c4279e7a0b2b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d1cf53834bdcbe23c20c872036754c028caaa06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d1cf53834bdcbe23c20c872036754c028caaa06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d1cf53834bdcbe23c20c872036754c028caaa06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d1cf53834bdcbe23c20c872036754c028caaa06/comments", "author": null, "committer": null, "parents": [{"sha": "daff6cdf8ea49dd3a9fbb9120f4b5ef39fe78a9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daff6cdf8ea49dd3a9fbb9120f4b5ef39fe78a9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daff6cdf8ea49dd3a9fbb9120f4b5ef39fe78a9a"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "bfd68e9f755aa9b55cb4c3393cc4d7103fd7450a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d1cf53834bdcbe23c20c872036754c028caaa06/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d1cf53834bdcbe23c20c872036754c028caaa06/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d1cf53834bdcbe23c20c872036754c028caaa06", "patch": "@@ -1,3 +1,13 @@\n+2017-10-30  Dominik Infuehr  <dominik.infuehr@theobroma-systems.com>\n+\n+\t* config/aarch64/aarch64-simd.md (*aarch64_simd_mov): Rename\n+\tboth identically named patterns to (*aarch64_simd_mov<VD:mode>)\n+\tand (*aarch64_simd_mov<VQ:mode>).\n+\t(*aarch64_simd_mov<VD:mode>): Change type attribute to match\n+\tpattern alternative.\n+\t(*aarch64_simd_mov<VQ:mode>): Re-order and change type\n+\tattributes to match pattern alternative.\n+\n 2017-10-30  Steven Munroe  <munroesj@gcc.gnu.org>\n \n \t* config.gcc (powerpc*-*-*): Add emmintrin.h."}, {"sha": "447ee3afd1747fdac0c1b570789b0d4ec5037b7e", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d1cf53834bdcbe23c20c872036754c028caaa06/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d1cf53834bdcbe23c20c872036754c028caaa06/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=0d1cf53834bdcbe23c20c872036754c028caaa06", "patch": "@@ -102,7 +102,7 @@\n   [(set_attr \"type\" \"neon_dup<q>\")]\n )\n \n-(define_insn \"*aarch64_simd_mov<mode>\"\n+(define_insn \"*aarch64_simd_mov<VD:mode>\"\n   [(set (match_operand:VD 0 \"nonimmediate_operand\"\n \t\t\"=w, m,  m,  w, ?r, ?w, ?r, w\")\n \t(match_operand:VD 1 \"general_operand\"\n@@ -126,12 +126,12 @@\n      default: gcc_unreachable ();\n      }\n }\n-  [(set_attr \"type\" \"neon_load1_1reg<q>, neon_stp, neon_store1_1reg<q>,\\\n+  [(set_attr \"type\" \"neon_load1_1reg<q>, store_8, neon_store1_1reg<q>,\\\n \t\t     neon_logic<q>, neon_to_gp<q>, f_mcr,\\\n \t\t     mov_reg, neon_move<q>\")]\n )\n \n-(define_insn \"*aarch64_simd_mov<mode>\"\n+(define_insn \"*aarch64_simd_mov<VQ:mode>\"\n   [(set (match_operand:VQ 0 \"nonimmediate_operand\"\n \t\t\"=w, Umq,  m,  w, ?r, ?w, ?r, w\")\n \t(match_operand:VQ 1 \"general_operand\"\n@@ -160,8 +160,8 @@\n \tgcc_unreachable ();\n     }\n }\n-  [(set_attr \"type\" \"neon_load1_1reg<q>, neon_store1_1reg<q>,\\\n-\t\t     neon_stp, neon_logic<q>, multiple, multiple,\\\n+  [(set_attr \"type\" \"neon_load1_1reg<q>, store_16, neon_store1_1reg<q>,\\\n+\t\t     neon_logic<q>, multiple, multiple,\\\n \t\t     multiple, neon_move<q>\")\n    (set_attr \"length\" \"4,4,4,4,8,8,8,4\")]\n )"}]}