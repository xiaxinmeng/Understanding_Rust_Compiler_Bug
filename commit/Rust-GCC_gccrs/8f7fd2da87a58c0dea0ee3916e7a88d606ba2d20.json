{"sha": "8f7fd2da87a58c0dea0ee3916e7a88d606ba2d20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY3ZmQyZGE4N2E1OGMwZGVhMGVlMzkxNmU3YTg4ZDYwNmJhMmQyMA==", "commit": {"author": {"name": "Harsha Jagasia", "email": "harsha.jagasia@amd.com", "date": "2010-01-16T14:46:19Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-01-16T14:46:19Z"}, "message": "re PR target/42664 (ICE on compilation of polyhedron benchmarks with -mfma4)\n\nFix PR42664.\n\n2010-01-16  Harsha Jagasia  <harsha.jagasia@amd.com>\n\n\tPR target/42664\n\t* config/i386/i386.c (ix86_fixup_binary_operands):\n\tRevert FMA4 fixup of operands.\n\nFrom-SVN: r155964", "tree": {"sha": "b396a2032c143dee10145b9ba2a721964ab2d2be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b396a2032c143dee10145b9ba2a721964ab2d2be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f7fd2da87a58c0dea0ee3916e7a88d606ba2d20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f7fd2da87a58c0dea0ee3916e7a88d606ba2d20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f7fd2da87a58c0dea0ee3916e7a88d606ba2d20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f7fd2da87a58c0dea0ee3916e7a88d606ba2d20/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fdb618d66fb9222cf911a366230e74e32678fd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fdb618d66fb9222cf911a366230e74e32678fd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fdb618d66fb9222cf911a366230e74e32678fd9"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "3173213702e1790cd0c44815a02a05b9d36cbe84", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7fd2da87a58c0dea0ee3916e7a88d606ba2d20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7fd2da87a58c0dea0ee3916e7a88d606ba2d20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f7fd2da87a58c0dea0ee3916e7a88d606ba2d20", "patch": "@@ -1,3 +1,9 @@\n+2010-01-16  Harsha Jagasia  <harsha.jagasia@amd.com>\n+\n+\tPR target/42664\n+\t* config/i386/i386.c (ix86_fixup_binary_operands):\n+\tRevert FMA4 fixup of operands.\n+\n 2010-01-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \tPR gcc/42525"}, {"sha": "6b1c9b9c61f5d5d511a5174c2aaa8fd131b7fea6", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f7fd2da87a58c0dea0ee3916e7a88d606ba2d20/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f7fd2da87a58c0dea0ee3916e7a88d606ba2d20/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=8f7fd2da87a58c0dea0ee3916e7a88d606ba2d20", "patch": "@@ -13387,16 +13387,6 @@ ix86_fixup_binary_operands (enum rtx_code code, enum machine_mode mode,\n   if (MEM_P (src1) && !rtx_equal_p (dst, src1))\n     src1 = force_reg (mode, src1);\n \n-  /* In order for the multiply-add patterns to get matched, we need\n-     to aid combine by forcing all operands into registers to start.  */\n-  if (optimize && TARGET_FMA4)\n-    {\n-      if (MEM_P (src2))\n-\tsrc2 = force_reg (GET_MODE (src2), src2);\n-      else if (MEM_P (src1))\n-\tsrc1 = force_reg (GET_MODE (src1), src1);\n-    }\n-\n   operands[1] = src1;\n   operands[2] = src2;\n   return dst;"}]}