{"sha": "e3ba46bd52f9bd6db8788384dd186c9ba5963129", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNiYTQ2YmQ1MmY5YmQ2ZGI4Nzg4Mzg0ZGQxODZjOWJhNTk2MzEyOQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2019-03-19T17:45:34Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2019-03-19T17:45:34Z"}, "message": "PR tree-optimization/89644 - False-positive -Warray-bounds diagnostic on strncpy\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/89644\n\t* tree-ssa-strlen.c (handle_builtin_stxncpy): Consider unterminated\n\tarrays in determining sequence sizes in strncpy and stpncpy.\n\ngcc/testsuite/ChangeLog:\n\n\tPR tree-optimization/89644\n\t* gcc.dg/Wstringop-truncation-8.c: New test.\n\nFrom-SVN: r269807", "tree": {"sha": "5f4bc3c12380a6768864bf49672216e0763845a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f4bc3c12380a6768864bf49672216e0763845a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3ba46bd52f9bd6db8788384dd186c9ba5963129", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3ba46bd52f9bd6db8788384dd186c9ba5963129", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3ba46bd52f9bd6db8788384dd186c9ba5963129", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3ba46bd52f9bd6db8788384dd186c9ba5963129/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2214085affb80feb19e79882ee769e28c2a85a5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2214085affb80feb19e79882ee769e28c2a85a5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2214085affb80feb19e79882ee769e28c2a85a5a"}], "stats": {"total": 135, "additions": 127, "deletions": 8}, "files": [{"sha": "fe1f0640e7f8b041220569e14baffbf90a66502f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3ba46bd52f9bd6db8788384dd186c9ba5963129/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3ba46bd52f9bd6db8788384dd186c9ba5963129/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e3ba46bd52f9bd6db8788384dd186c9ba5963129", "patch": "@@ -1,3 +1,9 @@\n+2019-03-19  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/89644\n+\t* tree-ssa-strlen.c (handle_builtin_stxncpy): Consider unterminated\n+\tarrays in determining sequence sizes in strncpy and stpncpy.\n+\n 2019-03-19  Martin Liska  <mliska@suse.cz>\n \n \tPR middle-end/89737"}, {"sha": "cf01b2fea19eafae2bfb7f9329f31e3fcc381dbf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3ba46bd52f9bd6db8788384dd186c9ba5963129/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3ba46bd52f9bd6db8788384dd186c9ba5963129/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e3ba46bd52f9bd6db8788384dd186c9ba5963129", "patch": "@@ -1,3 +1,8 @@\n+2019-03-19  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/89644\n+\t* gcc.dg/Wstringop-truncation-8.c: New test.\n+\n 2019-03-19  Martin Liska  <mliska@suse.cz>\n \n \tPR middle-end/89737"}, {"sha": "1745da50a37a543d7de81de58551e1c574b831f1", "filename": "gcc/testsuite/gcc.dg/Wstringop-truncation-8.c", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3ba46bd52f9bd6db8788384dd186c9ba5963129/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-truncation-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3ba46bd52f9bd6db8788384dd186c9ba5963129/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-truncation-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-truncation-8.c?ref=e3ba46bd52f9bd6db8788384dd186c9ba5963129", "patch": "@@ -0,0 +1,94 @@\n+/* PR tree-optimization/89644 - False-positive -Warray-bounds diagnostic\n+   on strncpy\n+   { dg-do compile }\n+   { dg-options \"-O2 -Wall -ftrack-macro-expansion=0\" }  */\n+\n+#define NONSTR __attribute__ ((nonstring))\n+\n+typedef __SIZE_TYPE__ size_t;\n+\n+size_t strlen (const char*);\n+extern char* stpncpy (char*, const char*, size_t);\n+extern char* strncpy (char*, const char*, size_t);\n+\n+void sink (char*, ...);\n+\n+char f0 (char *s)\n+{\n+  char a[6] NONSTR = { 1, 2, 3, 4, 5, 6 };\n+  if (*s)\n+    strncpy (a, s, sizeof a);       /* { dg-bogus \"\\\\\\[-Warray-bounds\" } */\n+  return a[0];\n+}\n+\n+void f1 (char *s)\n+{\n+  char a[6] NONSTR = { 1, 2, 3, 4, 5, 6 };\n+  if (*s)\n+    strncpy (a, s, sizeof a);       /* { dg-bogus \"\\\\\\[-Warray-bounds\" } */\n+  sink (a);\n+}\n+\n+char f2 (void)\n+{\n+  char a[6] NONSTR = { 1, 2, 3, 4, 5, 6 };\n+  char b[6] NONSTR = { 6, 5, 4, 3, 2, 1 };\n+  strncpy (a, b + 1, 5);            /* { dg-bogus \"\\\\\\[-Warray-bounds\" } */\n+  return a[0];\n+}\n+\n+void f3 (void)\n+{\n+  char a[6] NONSTR = { 1, 2, 3, 4, 5, 6 };\n+  char b[6] NONSTR = { 6, 5, 4, 3, 2, 1 };\n+  strncpy (a, b + 2, 4);            /* { dg-bogus \"\\\\\\[-Warray-bounds\" } */\n+  sink (a);\n+}\n+\n+void f4 (NONSTR char *d)\n+{\n+  char b[6] NONSTR = { 6, 5, 4, 3, 2, 1 };\n+  strncpy (d, b + 3, 3);            /* { dg-bogus \"\\\\\\[-Warray-bounds\" } */\n+  sink (d);\n+}\n+\n+\n+char g0 (char *s)\n+{\n+  char a[6] NONSTR = { 1, 2, 3, 4, 5, 6 };\n+  if (*s)\n+    stpncpy (a, s, sizeof a);       /* { dg-bogus \"\\\\\\[-Warray-bounds\" } */\n+  return a[0];\n+}\n+\n+void g1 (char *s)\n+{\n+  char a[6] NONSTR = { 1, 2, 3, 4, 5, 6 };\n+  char *p = 0;\n+  if (*s)\n+    p = stpncpy (a, s, sizeof a);   /* { dg-bogus \"\\\\\\[-Warray-bounds\" } */\n+  sink (a, p);\n+}\n+\n+char g2 (void)\n+{\n+  char a[6] NONSTR = { 1, 2, 3, 4, 5, 6 };\n+  char b[6] NONSTR = { 6, 5, 4, 3, 2, 1 };\n+  stpncpy (a, b + 1, 5);            /* { dg-bogus \"\\\\\\[-Warray-bounds\" } */\n+  return a[0];\n+}\n+\n+void g3 (void)\n+{\n+  char a[6] NONSTR = { 1, 2, 3, 4, 5, 6 };\n+  char b[6] NONSTR = { 6, 5, 4, 3, 2, 1 };\n+  char *p = stpncpy (a, b + 2, 4);  /* { dg-bogus \"\\\\\\[-Warray-bounds\" } */\n+  sink (a, p);\n+}\n+\n+void g4 (NONSTR char *d)\n+{\n+  char b[6] NONSTR = { 6, 5, 4, 3, 2, 1 };\n+  char *p = stpncpy (d, b + 3, 3);  /* { dg-bogus \"\\\\\\[-Warray-bounds\" } */\n+  sink (d, p);\n+}"}, {"sha": "cf0f70d9d7f5035e239d730ee78fa6ba64b8d474", "filename": "gcc/tree-ssa-strlen.c", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3ba46bd52f9bd6db8788384dd186c9ba5963129/gcc%2Ftree-ssa-strlen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3ba46bd52f9bd6db8788384dd186c9ba5963129/gcc%2Ftree-ssa-strlen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-strlen.c?ref=e3ba46bd52f9bd6db8788384dd186c9ba5963129", "patch": "@@ -2206,13 +2206,21 @@ handle_builtin_stxncpy (built_in_function, gimple_stmt_iterator *gsi)\n   int didx = get_stridx (dst);\n   if (strinfo *sidst = didx > 0 ? get_strinfo (didx) : NULL)\n     {\n-      /* Compute the size of the destination string including the NUL.  */\n+      /* Compute the size of the destination string including the nul\n+\t if it is known to be nul-terminated.  */\n       if (sidst->nonzero_chars)\n \t{\n-\t  tree type = TREE_TYPE (sidst->nonzero_chars);\n-\t  dstsize = fold_build2 (PLUS_EXPR, type, sidst->nonzero_chars,\n-\t\t\t\t build_int_cst (type, 1));\n+\t  if (sidst->endptr)\n+\t    {\n+\t      /* String is known to be nul-terminated.  */\n+\t      tree type = TREE_TYPE (sidst->nonzero_chars);\n+\t      dstsize = fold_build2 (PLUS_EXPR, type, sidst->nonzero_chars,\n+\t\t\t\t     build_int_cst (type, 1));\n+\t    }\n+\t  else\n+\t    dstsize = sidst->nonzero_chars;\n \t}\n+\n       dst = sidst->ptr;\n     }\n \n@@ -2224,12 +2232,18 @@ handle_builtin_stxncpy (built_in_function, gimple_stmt_iterator *gsi)\n \t over the terminating nul so SISRC->DONT_INVALIDATE must be left\n \t clear.  */\n \n-      /* Compute the size of the source string including the NUL.  */\n+      /* Compute the size of the source string including the terminating\n+\t nul if its known to be nul-terminated.  */\n       if (sisrc->nonzero_chars)\n \t{\n-\t  tree type = TREE_TYPE (sisrc->nonzero_chars);\n-\t  srcsize = fold_build2 (PLUS_EXPR, type, sisrc->nonzero_chars,\n-\t\t\t\t build_int_cst (type, 1));\n+\t  if (sisrc->endptr)\n+\t    {\n+\t      tree type = TREE_TYPE (sisrc->nonzero_chars);\n+\t      srcsize = fold_build2 (PLUS_EXPR, type, sisrc->nonzero_chars,\n+\t\t\t\t     build_int_cst (type, 1));\n+\t    }\n+\t  else\n+\t    srcsize = sisrc->nonzero_chars;\n \t}\n \n \tsrc = sisrc->ptr;"}]}