{"sha": "b8f2b5d9acf05785e007cdf15ee4c14f1895c01a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhmMmI1ZDlhY2YwNTc4NWUwMDdjZGYxNWVlNGMxNGYxODk1YzAxYQ==", "commit": {"author": {"name": "Quentin Ochem", "email": "ochem@adacore.com", "date": "2008-07-31T13:26:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-07-31T13:26:20Z"}, "message": "2008-07-31  Quentin Ochem  <ochem@adacore.com>\n\n\t* s-stausa.ad? (Fill_Stack): Stack_Used_When_Filling is now stored\n\tanymore - just used internally.\n\tAdded handling of very small tasks - when the theoretical size is\n\talready full at the point of the call.\n\t(Report_Result): Fixed result computation, Stack_Used_When_Filling does\n\tnot need to be added to the result.\n\nFrom-SVN: r138405", "tree": {"sha": "3485dc576060bb6386e3168159f940540404e630", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3485dc576060bb6386e3168159f940540404e630"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8f2b5d9acf05785e007cdf15ee4c14f1895c01a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8f2b5d9acf05785e007cdf15ee4c14f1895c01a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8f2b5d9acf05785e007cdf15ee4c14f1895c01a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8f2b5d9acf05785e007cdf15ee4c14f1895c01a/comments", "author": {"login": "QuentinOchem", "id": 5612750, "node_id": "MDQ6VXNlcjU2MTI3NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5612750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuentinOchem", "html_url": "https://github.com/QuentinOchem", "followers_url": "https://api.github.com/users/QuentinOchem/followers", "following_url": "https://api.github.com/users/QuentinOchem/following{/other_user}", "gists_url": "https://api.github.com/users/QuentinOchem/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuentinOchem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuentinOchem/subscriptions", "organizations_url": "https://api.github.com/users/QuentinOchem/orgs", "repos_url": "https://api.github.com/users/QuentinOchem/repos", "events_url": "https://api.github.com/users/QuentinOchem/events{/privacy}", "received_events_url": "https://api.github.com/users/QuentinOchem/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9febb58f8cfe49e9d2440e3c4de7beff01669299", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9febb58f8cfe49e9d2440e3c4de7beff01669299", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9febb58f8cfe49e9d2440e3c4de7beff01669299"}], "stats": {"total": 62, "additions": 40, "deletions": 22}, "files": [{"sha": "d9b972d8b2899d9edb94eb9340501c2c8c2483f4", "filename": "gcc/ada/s-stausa.adb", "status": "modified", "additions": 40, "deletions": 18, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8f2b5d9acf05785e007cdf15ee4c14f1895c01a/gcc%2Fada%2Fs-stausa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8f2b5d9acf05785e007cdf15ee4c14f1895c01a/gcc%2Fada%2Fs-stausa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stausa.adb?ref=b8f2b5d9acf05785e007cdf15ee4c14f1895c01a", "patch": "@@ -258,20 +258,29 @@ package body System.Stack_Usage is\n       --  big, the more an \"instrumentation threshold at writing\" error is\n       --  likely to happen.\n \n-      Current_Stack_Level : aliased Integer;\n+      Stack_Used_When_Filling : Integer;\n+      Current_Stack_Level     : aliased Integer;\n \n    begin\n       --  Readjust the pattern size. When we arrive in this function, there is\n       --  already a given amount of stack used, that we won't analyze.\n \n-      Analyzer.Stack_Used_When_Filling :=\n+      Stack_Used_When_Filling :=\n         Stack_Size\n          (Analyzer.Bottom_Of_Stack,\n           To_Stack_Address (Current_Stack_Level'Address))\n           + Natural (Current_Stack_Level'Size);\n \n-      Analyzer.Pattern_Size :=\n-        Analyzer.Pattern_Size - Analyzer.Stack_Used_When_Filling;\n+      if Stack_Used_When_Filling > Analyzer.Pattern_Size then\n+         --  In this case, the known size of the stack is too small, we've\n+         --  already taken more than expected, so there's no possible\n+         --  computation\n+\n+         Analyzer.Pattern_Size := 0;\n+      else\n+         Analyzer.Pattern_Size :=\n+           Analyzer.Pattern_Size - Stack_Used_When_Filling;\n+      end if;\n \n       declare\n          Stack : aliased Stack_Slots\n@@ -282,10 +291,15 @@ package body System.Stack_Usage is\n \n          Analyzer.Stack_Overlay_Address := Stack'Address;\n \n-         Analyzer.Bottom_Pattern_Mark :=\n-           To_Stack_Address (Stack (Bottom_Slot_Index_In (Stack))'Address);\n-         Analyzer.Top_Pattern_Mark :=\n-           To_Stack_Address (Stack (Top_Slot_Index_In (Stack))'Address);\n+         if Analyzer.Pattern_Size /= 0 then\n+            Analyzer.Bottom_Pattern_Mark :=\n+              To_Stack_Address (Stack (Bottom_Slot_Index_In (Stack))'Address);\n+            Analyzer.Top_Pattern_Mark :=\n+              To_Stack_Address (Stack (Top_Slot_Index_In (Stack))'Address);\n+         else\n+            Analyzer.Bottom_Pattern_Mark := To_Stack_Address (Stack'Address);\n+            Analyzer.Bottom_Pattern_Mark := To_Stack_Address (Stack'Address);\n+         end if;\n \n          --  If Arr has been packed, the following assertion must be true (we\n          --  add the size of the element whose address is:\n@@ -539,20 +553,28 @@ package body System.Stack_Usage is\n    -------------------\n \n    procedure Report_Result (Analyzer : Stack_Analyzer) is\n-      Measure : constant Natural :=\n-                  Stack_Size\n-                    (Analyzer.Topmost_Touched_Mark,\n-                     Analyzer.Bottom_Of_Stack)\n-                  + Analyzer.Stack_Used_When_Filling;\n-\n-      Result  : constant Task_Result :=\n+      Result  : Task_Result :=\n                   (Task_Name      => Analyzer.Task_Name,\n                    Max_Size       => Analyzer.Stack_Size,\n-                   Min_Measure    => Measure,\n-                   Max_Measure    => Measure + Analyzer.Stack_Size\n-                                             - Analyzer.Pattern_Size);\n+                   Min_Measure    => 0,\n+                   Max_Measure    => 0);\n \n    begin\n+      if Analyzer.Pattern_Size = 0 then\n+         --  If we have that result, it means that we didn't do any computation\n+         --  at all. In other words, we used at least everything (and possibly\n+         --  more).\n+\n+         Result.Min_Measure := Analyzer.Stack_Size;\n+         Result.Max_Measure := Analyzer.Stack_Size;\n+      else\n+         Result.Min_Measure := Stack_Size\n+                    (Analyzer.Topmost_Touched_Mark,\n+                     Analyzer.Bottom_Of_Stack);\n+         Result.Max_Measure := Result.Min_Measure +\n+           (Analyzer.Stack_Size - Analyzer.Pattern_Size);\n+      end if;\n+\n       if Analyzer.Result_Id in Result_Array'Range then\n \n          --  If the result can be stored, then store it in Result_Array"}, {"sha": "2aa9dd70d2d0e47c29dff4fdfe463a33d52552ae", "filename": "gcc/ada/s-stausa.ads", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8f2b5d9acf05785e007cdf15ee4c14f1895c01a/gcc%2Fada%2Fs-stausa.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8f2b5d9acf05785e007cdf15ee4c14f1895c01a/gcc%2Fada%2Fs-stausa.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stausa.ads?ref=b8f2b5d9acf05785e007cdf15ee4c14f1895c01a", "patch": "@@ -304,10 +304,6 @@ private\n       Result_Id : Positive;\n       --  Id of the result. If less than value given to gnatbind -u corresponds\n       --  to the location in the result array of result for the current task.\n-\n-      Stack_Used_When_Filling : Natural := 0;\n-      --  Amount of stack that was already used when actually filling the\n-      --  memory, and therefore not analyzed.\n    end record;\n \n    Environment_Task_Analyzer : Stack_Analyzer;"}]}