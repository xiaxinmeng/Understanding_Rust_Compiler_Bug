{"sha": "62ede14d30f5d083f1ab23bcab6e0e3c9c649006", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJlZGUxNGQzMGY1ZDA4M2YxYWIyM2JjYWI2ZTBlM2M5YzY0OTAwNg==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-03-27T11:12:36Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-03-27T11:12:36Z"}, "message": "[Fortran] Fix ICE with deferred-rank arrays (PR93957)\n\n\tPR fortran/93957\n\t* trans-array.c (gfc_alloc_allocatable_for_assignment): Accept\n\tnonallocatable, nonpointer deferred-rank arrays.\n\n\tPR fortran/93957\n\t* gfortran.dg/assumed_rank_19.f90: New.", "tree": {"sha": "cdddcf9998d6109de5b1b6f0571e647bdf3df692", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cdddcf9998d6109de5b1b6f0571e647bdf3df692"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62ede14d30f5d083f1ab23bcab6e0e3c9c649006", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62ede14d30f5d083f1ab23bcab6e0e3c9c649006", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62ede14d30f5d083f1ab23bcab6e0e3c9c649006", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62ede14d30f5d083f1ab23bcab6e0e3c9c649006/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d689cf43b501a2f5c077389adbb6d2bfa530ca9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d689cf43b501a2f5c077389adbb6d2bfa530ca9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d689cf43b501a2f5c077389adbb6d2bfa530ca9"}], "stats": {"total": 54, "additions": 52, "deletions": 2}, "files": [{"sha": "02f0141bebfd5b098018ebed87b20d6da1cbff2c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ede14d30f5d083f1ab23bcab6e0e3c9c649006/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ede14d30f5d083f1ab23bcab6e0e3c9c649006/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=62ede14d30f5d083f1ab23bcab6e0e3c9c649006", "patch": "@@ -1,3 +1,9 @@\n+2020-03-27  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/93957\n+\t* trans-array.c (gfc_alloc_allocatable_for_assignment): Accept\n+\tnonallocatable, nonpointer deferred-rank arrays.\n+\n 2020-03-27  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/93363"}, {"sha": "9c928d04e0a390e289e2723b6a03f034e2834a0e", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ede14d30f5d083f1ab23bcab6e0e3c9c649006/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ede14d30f5d083f1ab23bcab6e0e3c9c649006/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=62ede14d30f5d083f1ab23bcab6e0e3c9c649006", "patch": "@@ -10672,7 +10672,8 @@ gfc_alloc_allocatable_for_assignment (gfc_loopinfo *loop,\n \n /* NULLIFY an allocatable/pointer array on function entry, free it on exit.\n    Do likewise, recursively if necessary, with the allocatable components of\n-   derived types.  */\n+   derived types.  This function is also called for assumed-rank arrays, which\n+   are always dummy arguments.  */\n \n void\n gfc_trans_deferred_array (gfc_symbol * sym, gfc_wrapped_block * block)\n@@ -10694,7 +10695,8 @@ gfc_trans_deferred_array (gfc_symbol * sym, gfc_wrapped_block * block)\n \n   /* Make sure the frontend gets these right.  */\n   gcc_assert (sym->attr.pointer || sym->attr.allocatable || sym_has_alloc_comp\n-\t      || has_finalizer);\n+\t      || has_finalizer\n+\t      || (sym->as->type == AS_ASSUMED_RANK && sym->attr.dummy));\n \n   gfc_save_backend_locus (&loc);\n   gfc_set_backend_locus (&sym->declared_at);"}, {"sha": "d5a1c8e1a8e7addd3e613710190e2c09c3829b21", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ede14d30f5d083f1ab23bcab6e0e3c9c649006/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ede14d30f5d083f1ab23bcab6e0e3c9c649006/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=62ede14d30f5d083f1ab23bcab6e0e3c9c649006", "patch": "@@ -1,3 +1,8 @@\n+2020-03-27  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/93957\n+\t* gfortran.dg/assumed_rank_19.f90: New.\n+\n 2020-03-27  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/93363"}, {"sha": "f77f6fb47daa61f4bafd3566dac044d3915a21b4", "filename": "gcc/testsuite/gfortran.dg/assumed_rank_19.f90", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62ede14d30f5d083f1ab23bcab6e0e3c9c649006/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_rank_19.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62ede14d30f5d083f1ab23bcab6e0e3c9c649006/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_rank_19.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassumed_rank_19.f90?ref=62ede14d30f5d083f1ab23bcab6e0e3c9c649006", "patch": "@@ -0,0 +1,37 @@\n+! { dg-do run }\n+!\n+! PR fortran/93957\n+!\n+! Contributed by Jos\u00e9 Rui Faustino de Sousa\n+\n+function f_ice(this) result(that) bind(c)\n+  use, intrinsic :: iso_c_binding, only: c_int\n+\n+  implicit none\n+  \n+  integer(kind=c_int), intent(in) :: this(..)\n+  integer(kind=c_int)             :: that\n+\n+  that = size(this)\n+  return\n+end function f_ice\n+\n+program ice_p\n+  use, intrinsic :: iso_c_binding, only: c_int\n+  implicit none\n+\n+  interface\n+    function f_ice(this) result(that) bind(c)\n+      use, intrinsic :: iso_c_binding, only: c_int\n+      integer(kind=c_int), intent(in) :: this(..)\n+      integer(kind=c_int)             :: that\n+    end function f_ice\n+  end interface\n+\n+  integer(kind=c_int), parameter :: n = 10\n+    \n+  integer(kind=c_int) :: intp(n)\n+\n+  if(size(intp)/=n)  stop 1\n+  if(f_ice(intp)/=n) stop 2\n+end program ice_p"}]}