{"sha": "27bfe54e975d12aac750f0702f716a4c1c0a81fe", "node_id": "C_kwDOANBUbNoAKDI3YmZlNTRlOTc1ZDEyYWFjNzUwZjA3MDJmNzE2YTRjMWMwYTgxZmU", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-10-11T00:17:00Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-10-11T00:17:00Z"}, "message": "Daily bump.", "tree": {"sha": "524ed9dd989ad27a38dcfd2bf128ff11b5144205", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/524ed9dd989ad27a38dcfd2bf128ff11b5144205"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27bfe54e975d12aac750f0702f716a4c1c0a81fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27bfe54e975d12aac750f0702f716a4c1c0a81fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27bfe54e975d12aac750f0702f716a4c1c0a81fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27bfe54e975d12aac750f0702f716a4c1c0a81fe/comments", "author": null, "committer": null, "parents": [{"sha": "7af6a8043eacab245366aa0ed18cee1ff0a4be74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7af6a8043eacab245366aa0ed18cee1ff0a4be74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7af6a8043eacab245366aa0ed18cee1ff0a4be74"}], "stats": {"total": 279, "additions": 278, "deletions": 1}, "files": [{"sha": "bc10014541bccc9465d518bc451f955737f449b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 146, "deletions": 0, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27bfe54e975d12aac750f0702f716a4c1c0a81fe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27bfe54e975d12aac750f0702f716a4c1c0a81fe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27bfe54e975d12aac750f0702f716a4c1c0a81fe", "patch": "@@ -1,3 +1,149 @@\n+2022-10-10  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* common.opt (-fabi-version=): Document 18.\n+\t* doc/invoke.texi (-fabi-version): Document 18.\n+\n+2022-10-10  Andrea Corallo  <andrea.corallo@arm.com>\n+\n+\tPR other/99723\n+\t* toplev.cc (toplev::main): Don't run self tests in case of\n+\tprevious error.\n+\n+2022-10-10  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* config/riscv/riscv-c.cc: Add newline to the end of file.\n+\n+2022-10-10  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* range-op-float.cc (class foperator_identity): Make members public.\n+\t(class foperator_equal): Same.\n+\t(class foperator_not_equal): Same.\n+\t(class foperator_lt): Same.\n+\t(class foperator_le): Same.\n+\t(class foperator_gt): Same.\n+\t(class foperator_ge): Same.\n+\t(class foperator_unordered): Same.\n+\t(class foperator_ordered): Same.\n+\n+2022-10-10  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* value-range.h (frange::maybe_isnan): New.\n+\n+2022-10-10  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* range-op-float.cc (foperator_not_equal::op1_range): Set NAN on\n+\tTRUE side for x != x.\n+\n+2022-10-10  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* range-op-float.cc (foperator_unordered::op1_range): Set NAN when\n+\toperands are equal and result is TRUE.\n+\n+2022-10-10  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* range.h (range_true): Return int_range<2>.\n+\t(range_false): Same.\n+\t(range_true_and_false): Same.\n+\n+2022-10-10  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* gimple-range-op.cc: Add op1_range entry for __builtin_signbit.\n+\n+2022-10-10  liuhongt  <hongtao.liu@intel.com>\n+\n+\tPR target/107185\n+\t* config/i386/i386.md (lrint<MODEF:mode><SWI48:mode>2): Swap\n+\tpredicate of operands[0] and operands[1].\n+\n+2022-10-10  Claudiu Zissulescu  <claziss@gmail.com>\n+\n+\t* common/config/arc/arc-common.cc (arc_option_optimization_table):\n+\tRemove Rcq and Rcw options.\n+\t* config/arc/arc.opt (mRcq): Ignore option, preserve it for\n+\tbackwards compatibility.\n+\t(mRcw): Likewise.\n+\t* doc/invoke.texi (mRcw, mRcq): Update document.\n+\n+2022-10-10  Claudiu Zissulescu  <claziss@gmail.com>\n+\n+\t* config/arc/arc.cc (arc_check_short_reg_p): New function.\n+\t(arc_address_cost): Replace satisfies_constraint_Rcq with the\n+\tabove new function.\n+\t(arc_output_addsi): Likewise.\n+\t(split_addsi): Likewise.\n+\t(split_subsi): Likewise.\n+\t* config/arc/arc.md (movqi_insn): Remove Rcq constraint.\n+\t(movhi_insn): Likewise.\n+\t(movsi_insn): Likewise.\n+\t(tst_movb): Likewise.\n+\t(tst): Likewise.\n+\t(tst_bitfield): Likewise.\n+\t(abssi2): Likewise.\n+\t(addsi3_mixed): Likewise.\n+\t(mulhisi3_reg): Likewise.\n+\t(umulhisi3_reg): Likewise.\n+\t(mulsi_600): Likewise.\n+\t(mul64): Likewise.\n+\t(subsi3_insn): Likewise.\n+\t(bicsi3_insn): Likewise.\n+\t(xorsi3): Likewise.\n+\t(negsi2): Likewise.\n+\t(one_cmplsi2): Likewise.\n+\t(lshrsi3_insn): Likewise.\n+\t(cmpsi_cc_insn_mixed): Likewise.\n+\t(cmpsi_cc_zn_insn): Likewise.\n+\t(btst): Likewise.\n+\t(cmpsi_cc_z_insn): Likewise.\n+\t(cmpsi_cc_c_insn): Likewise.\n+\t(indirect_jump): Likewise.\n+\t(casesi_jump): Likewise.\n+\t(call_i): Likewise.\n+\t(call_value_i): Likewise.\n+\t(bbit): Likewise.\n+\t(abssf2): Likewise.\n+\t(ashlsi2_cnt1): Likewise.\n+\t(lshrsi3_cnt1): Likewise.\n+\t(ashrsi3_cnt1): Likewise.\n+\t* config/arc/constraints.md (Rcq): Remove.\n+\n+2022-10-10  Claudiu Zissulescu  <claziss@gmail.com>\n+\n+\t* config/arc/arc.md (smaxsi3): Remove Rcw.\n+\t(sminsi3): Likewise.\n+\t(addsi3_mixed): Likewise.\n+\t(add_f_2): Likewise.\n+\t(subsi3_insn): Likewise.\n+\t(sub_f): Likewise.\n+\t(sub_n): Likewise.\n+\t(bset): Likewise.\n+\t(bxor): Likewise.\n+\t(bclr): Likewise.\n+\t(bset_insn): Likewise.\n+\t(bxor_insn): Likewise.\n+\t(bclr_insn): Likewise.\n+\t(bmsk_insn): Likewise.\n+\t(bicsi3_insn): Likewise.\n+\t(xorsi3): Likewise.\n+\t(negsi2): Likewise.\n+\t(lshrsi3_insn): Likewise.\n+\t(abssf2): Likewise.\n+\t(negsf2): Likewise.\n+\t* config/arc/constraints.md(Rcw): Remove it.\n+\n+2022-10-10  Claudiu Zissulescu  <claziss@gmail.com>\n+\n+\t* config/arc/arc.md(mulsi3_700): Remove Rcr.\n+\t(mulsi3_highpart): Likewise.\n+\t(umulsi3_highpart_i): Likewise.\n+\t(umulsi3_highpart_int): Likewise.\n+\t(macd): Likewise.\n+\t(macdu): Likewise.\n+\t* config/arc/constraints.md (Rcr): Remove it.\n+\n+2022-10-10  Claudiu Zissulescu  <claziss@gmail.com>\n+\n+\t* config/arc/arc.cc (arc_save_callee_enter): Use negative offsets.\n+\n 2022-10-09  Dimitar Dimitrov  <dimitar@dinux.eu>\n \n \tPR target/106562"}, {"sha": "ee52440e2ceb3c0e4fc3a2e0b2d8b3dbd84506b9", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27bfe54e975d12aac750f0702f716a4c1c0a81fe/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27bfe54e975d12aac750f0702f716a4c1c0a81fe/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=27bfe54e975d12aac750f0702f716a4c1c0a81fe", "patch": "@@ -1 +1 @@\n-20221010\n+20221011"}, {"sha": "f6176a7c74a9f26f3a3bcfe364170b9559a96520", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27bfe54e975d12aac750f0702f716a4c1c0a81fe/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27bfe54e975d12aac750f0702f716a4c1c0a81fe/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=27bfe54e975d12aac750f0702f716a4c1c0a81fe", "patch": "@@ -1,3 +1,20 @@\n+2022-10-10  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* c-opts.cc (c_common_post_options): Bump abi to 18.\n+\n+2022-10-10  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/106937\n+\t* c-pretty-print.cc (pp_c_specifier_qualifier_list): Print only GNU\n+\tattributes here.\n+\t(c_pretty_printer::direct_abstract_declarator): Print the standard [[]]\n+\tattributes here.\n+\t(pp_c_attributes): Remove.\n+\t(pp_c_attributes_display): Print the [[]] form if appropriate.  Use\n+\tget_attribute_name.  Don't print a trailing space when printing the\n+\t[[]] form.\n+\t* c-pretty-print.h (pp_c_attributes): Remove.\n+\n 2022-10-07  Qing Zhao  <qing.zhao@oracle.com>\n \n \t* c-attribs.cc (handle_strict_flex_array_attribute): New function."}, {"sha": "50e5f3eb7897a7d60a1b3fec0d9b460ae596d188", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27bfe54e975d12aac750f0702f716a4c1c0a81fe/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27bfe54e975d12aac750f0702f716a4c1c0a81fe/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=27bfe54e975d12aac750f0702f716a4c1c0a81fe", "patch": "@@ -1,3 +1,15 @@\n+2022-10-10  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* mangle.cc (write_prefix): Add VAR_DECL & FIELD_DECL to\n+\tsubstitution table under abi=18.  Note possible mismatch.\n+\n+2022-10-10  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/106937\n+\t* error.cc: Include \"attribs.h\".\n+\t(dump_type_prefix): Print only GNU attributes here.\n+\t(dump_type_suffix): Print standard attributes here.\n+\n 2022-10-08  Jason Merrill  <jason@redhat.com>\n \n \t* cp-tree.h (TARGET_EXPR_ELIDING_P): New."}, {"sha": "094a11dd29d5c13591e795e53913c8cda195bf5d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27bfe54e975d12aac750f0702f716a4c1c0a81fe/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27bfe54e975d12aac750f0702f716a4c1c0a81fe/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=27bfe54e975d12aac750f0702f716a4c1c0a81fe", "patch": "@@ -1,3 +1,9 @@\n+2022-10-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* trans-openmp.cc (gfc_trans_omp_assume): Use create_tmp_var_raw\n+\tinstead of gfc_create_var for TARGET_EXPR slot creation.  Create it\n+\twith boolean_type_node and convert.\n+\n 2022-10-08  Harald Anlauf  <anlauf@gmx.de>\n \t    Mikael Morin  <mikael@gcc.gnu.org>\n "}, {"sha": "723077352d9a0bbf6310738ab14972ed106308b4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27bfe54e975d12aac750f0702f716a4c1c0a81fe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27bfe54e975d12aac750f0702f716a4c1c0a81fe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=27bfe54e975d12aac750f0702f716a4c1c0a81fe", "patch": "@@ -1,3 +1,61 @@\n+2022-10-10  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* g++.dg/abi/lambda-ctx1-17.C: New.\n+\t* g++.dg/abi/lambda-ctx1-18.C: New.\n+\t* g++.dg/abi/lambda-ctx1-18vs17.C: New.\n+\t* g++.dg/abi/lambda-ctx1.h: New.\n+\t* g++.dg/abi/lambda-vis.C: Adjust expected mangles.\n+\t* g++.dg/abi/macro0.C: Adjust.\n+\n+2022-10-10  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/106937\n+\t* c-c++-common/pointer-to-fn1.c: New test.\n+\n+2022-10-10  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* gcc.target/riscv/rvv/base/riscv_vector.h: New.\n+\n+2022-10-10  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* gcc.target/riscv/rvv/base/user-1.c: Add dg-options and drop\n+\tdg-skip-if.\n+\n+2022-10-10  Kito Cheng  <kito.cheng@sifive.com>\n+\n+\t* gcc.target/riscv/rvv/base/pragma-1.c: Add newline to the end of file.\n+\t* gcc.target/riscv/rvv/base/pragma-2.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/pragma-3.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/user-1.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/user-2.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/user-3.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/user-4.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/user-5.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/user-6.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/vread_csr.c: Ditto.\n+\t* gcc.target/riscv/rvv/base/vwrite_csr.c: Ditto.\n+\n+2022-10-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/107153\n+\t* gcc.dg/autopar/pr107153.c: Require fgraphite effective target.\n+\n+2022-10-10  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* gcc.dg/tree-ssa/vrp-float-signbit-3.c: New test.\n+\n+2022-10-10  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/pr107185.c: New test.\n+\n+2022-10-10  Claudiu Zissulescu  <claziss@gmail.com>\n+\n+\t* gcc.target/arc/tmac-2.c: Update test.\n+\n+2022-10-10  Claudiu Zissulescu  <claziss@gmail.com>\n+\n+\t* gcc.target/arc/enter-dw2-1.c: New file.\n+\n 2022-10-09  Dimitar Dimitrov  <dimitar@dinux.eu>\n \n \tPR target/106562"}, {"sha": "7ab8d50dada5a399609a5457181ed1b7a5a29224", "filename": "libcpp/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27bfe54e975d12aac750f0702f716a4c1c0a81fe/libcpp%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27bfe54e975d12aac750f0702f716a4c1c0a81fe/libcpp%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2FChangeLog?ref=27bfe54e975d12aac750f0702f716a4c1c0a81fe", "patch": "@@ -1,3 +1,7 @@\n+2022-10-10  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* ro.po: New.\n+\n 2022-05-04  Joseph Myers  <joseph@codesourcery.com>\n \n \t* es.po: Update."}, {"sha": "ffe8058598f9d3bf4c24d15eac6df53df9ac3cb7", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27bfe54e975d12aac750f0702f716a4c1c0a81fe/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27bfe54e975d12aac750f0702f716a4c1c0a81fe/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=27bfe54e975d12aac750f0702f716a4c1c0a81fe", "patch": "@@ -1,3 +1,8 @@\n+2022-10-10  LIU Hao  <lh_mouse@126.com>\n+\n+\t* io/async.h (struct async_unit): Use `__gthread_t` instead\n+\tof `pthread_t`.\n+\n 2022-09-21  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* ieee/ieee_arithmetic.F90 (IEEE_SET_ROUNDING_MODE): Handle"}, {"sha": "58b011baac42d22502c83a9f291b5d0251851f65", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27bfe54e975d12aac750f0702f716a4c1c0a81fe/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27bfe54e975d12aac750f0702f716a4c1c0a81fe/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=27bfe54e975d12aac750f0702f716a4c1c0a81fe", "patch": "@@ -1,3 +1,32 @@\n+2022-10-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/type_traits (make_signed, make_unsigned): Remove\n+\tconstraints on primary template.\n+\t* testsuite/20_util/make_signed/requirements/typedefs_neg.cc:\n+\tUndo changes to expected error in C++20 mode.\n+\t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc:\n+\tLikewise.\n+\t* testsuite/24_iterators/range_access/range_access_cpp20_neg.cc:\n+\tLikewise.\n+\t* testsuite/20_util/make_signed/requirements/uninstantiated.cc:\n+\tNew test.\n+\t* testsuite/20_util/make_unsigned/requirements/uninstantiated.cc:\n+\tNew test.\n+\n+2022-10-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/type_traits (make_signed, make_unsigned): Add\n+\tspecializations for cv bool. Add requires-clause for C++20 to\n+\timprove diagnostics for non-integral, non-enum cases.\n+\t* testsuite/20_util/make_signed/requirements/typedefs_neg.cc:\n+\tCheck cv bool.\n+\t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc:\n+\tLikewise.\n+\t* testsuite/24_iterators/range_access/range_access_cpp20_neg.cc:\n+\tAdjust expected errors for C++20 and later.\n+\t* testsuite/lib/prune.exp: Prune \"in requirements  [with ...]\"\n+\tlines from diagnostics.\n+\n 2022-10-07  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* acinclude.m4 (GLIBCXX_ENABLE_HOSTED): Add libstdcxx-hosted"}]}