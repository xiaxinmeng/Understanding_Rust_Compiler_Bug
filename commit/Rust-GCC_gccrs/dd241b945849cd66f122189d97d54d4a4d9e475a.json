{"sha": "dd241b945849cd66f122189d97d54d4a4d9e475a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQyNDFiOTQ1ODQ5Y2Q2NmYxMjIxODlkOTdkNTRkNGE0ZDllNDc1YQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2019-08-20T09:50:43Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-20T09:50:43Z"}, "message": "[Ada] Unnesting: take inlining (-gnatn) into account\n\nThis affects only LLVM-based compilation.\n\n2019-08-20  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* exp_unst.adb (Unnest_Subprograms, Unnest_Subprogram): Take\n\tinlining (-gnatn) into account.\n\nFrom-SVN: r274743", "tree": {"sha": "2c97bd408135dc5e31d10f1fff27e7ba764975f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c97bd408135dc5e31d10f1fff27e7ba764975f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd241b945849cd66f122189d97d54d4a4d9e475a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd241b945849cd66f122189d97d54d4a4d9e475a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd241b945849cd66f122189d97d54d4a4d9e475a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd241b945849cd66f122189d97d54d4a4d9e475a/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b82f1618c4e8ca7dca229d1337e44873386561dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b82f1618c4e8ca7dca229d1337e44873386561dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b82f1618c4e8ca7dca229d1337e44873386561dc"}], "stats": {"total": 48, "additions": 41, "deletions": 7}, "files": [{"sha": "6273a551223ad80e37a5ff877d30373f876f75b7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd241b945849cd66f122189d97d54d4a4d9e475a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd241b945849cd66f122189d97d54d4a4d9e475a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=dd241b945849cd66f122189d97d54d4a4d9e475a", "patch": "@@ -1,3 +1,8 @@\n+2019-08-20  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* exp_unst.adb (Unnest_Subprograms, Unnest_Subprogram): Take\n+\tinlining (-gnatn) into account.\n+\n 2019-08-20  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch13.adb (Expand_N_Attribute_Definition_Clause, case"}, {"sha": "7cc9a6a4231a7274e5d6c132e088c65fed925c99", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 36, "deletions": 7, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd241b945849cd66f122189d97d54d4a4d9e475a/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd241b945849cd66f122189d97d54d4a4d9e475a/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=dd241b945849cd66f122189d97d54d4a4d9e475a", "patch": "@@ -53,13 +53,17 @@ package body Exp_Unst is\n    -- Local Subprograms --\n    -----------------------\n \n-   procedure Unnest_Subprogram (Subp : Entity_Id; Subp_Body : Node_Id);\n+   procedure Unnest_Subprogram\n+     (Subp : Entity_Id; Subp_Body : Node_Id; For_Inline : Boolean := False);\n    --  Subp is a library-level subprogram which has nested subprograms, and\n    --  Subp_Body is the corresponding N_Subprogram_Body node. This procedure\n    --  declares the AREC types and objects, adds assignments to the AREC record\n    --  as required, defines the xxxPTR types for uplevel referenced objects,\n    --  adds the ARECP parameter to all nested subprograms which need it, and\n-   --  modifies all uplevel references appropriately.\n+   --  modifies all uplevel references appropriately. If For_Inline is True,\n+   --  we're unnesting this subprogram because it's on the list of inlined\n+   --  subprograms and should unnest it despite it not being part of the main\n+   --  unit.\n \n    -----------\n    -- Calls --\n@@ -297,7 +301,8 @@ package body Exp_Unst is\n    -- Unnest_Subprogram --\n    -----------------------\n \n-   procedure Unnest_Subprogram (Subp : Entity_Id; Subp_Body : Node_Id) is\n+   procedure Unnest_Subprogram\n+     (Subp : Entity_Id; Subp_Body : Node_Id; For_Inline : Boolean := False) is\n       function AREC_Name (J : Pos; S : String) return Name_Id;\n       --  Returns name for string ARECjS, where j is the decimal value of j\n \n@@ -402,15 +407,18 @@ package body Exp_Unst is\n       --  to determine whether the main unit is generic (the scope stack is not\n       --  present when this is called on the main unit).\n \n-      if Ekind (Cunit_Entity (Main_Unit)) = E_Package_Body\n+      if not For_Inline\n+        and then Ekind (Cunit_Entity (Main_Unit)) = E_Package_Body\n         and then Is_Generic_Unit (Spec_Entity (Cunit_Entity (Main_Unit)))\n       then\n          return;\n-      end if;\n \n-      --  Only unnest when generating code for the main source unit\n+      --  Only unnest when generating code for the main source unit or if we're\n+      --  unnesting for inline.\n \n-      if not In_Extended_Main_Code_Unit (Subp_Body) then\n+      elsif not For_Inline\n+        and then not In_Extended_Main_Code_Unit (Subp_Body)\n+      then\n          return;\n       end if;\n \n@@ -2549,6 +2557,9 @@ package body Exp_Unst is\n          return OK;\n       end Search_Subprograms;\n \n+      Subp      : Entity_Id;\n+      Subp_Body : Node_Id;\n+\n    --  Start of processing for Unnest_Subprograms\n \n    begin\n@@ -2568,6 +2579,24 @@ package body Exp_Unst is\n       end if;\n \n       Do_Search (N);\n+\n+      --  Unnest any subprograms passed on the list of inlined subprograms\n+\n+      Subp := First_Inlined_Subprogram (N);\n+\n+      while Present (Subp) loop\n+         Subp_Body := Parent (Declaration_Node (Subp));\n+\n+         if Nkind (Subp_Body) = N_Subprogram_Declaration\n+           and then Present (Corresponding_Body (Subp_Body))\n+         then\n+            Subp_Body := Parent (Declaration_Node\n+                                   (Corresponding_Body (Subp_Body)));\n+            Unnest_Subprogram (Subp, Subp_Body, For_Inline => True);\n+         end if;\n+\n+         Next_Inlined_Subprogram (Subp);\n+      end loop;\n    end Unnest_Subprograms;\n \n end Exp_Unst;"}]}