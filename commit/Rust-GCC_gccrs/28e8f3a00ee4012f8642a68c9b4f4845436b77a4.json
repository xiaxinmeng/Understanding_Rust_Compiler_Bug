{"sha": "28e8f3a00ee4012f8642a68c9b4f4845436b77a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhlOGYzYTAwZWU0MDEyZjg2NDJhNjhjOWI0ZjQ4NDU0MzZiNzdhNA==", "commit": {"author": {"name": "Giovanni Bajo", "email": "giovannibajo@libero.it", "date": "2003-11-14T04:51:21Z"}, "committer": {"name": "Bernardo Innocenti", "email": "bernie@gcc.gnu.org", "date": "2003-11-14T04:51:21Z"}, "message": "re PR c++/2094 (unimplemented: use of `ptrmem_cst' in template type unification)\n\n        PR c++/2094\n        * pt.c (unify): Add support for PTRMEM_CST and\n        FIELD_DECL unification.\n\nFrom-SVN: r73577", "tree": {"sha": "9d20aac67ecb6453b7de3ccbfa5ec78667ee58df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d20aac67ecb6453b7de3ccbfa5ec78667ee58df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28e8f3a00ee4012f8642a68c9b4f4845436b77a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28e8f3a00ee4012f8642a68c9b4f4845436b77a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28e8f3a00ee4012f8642a68c9b4f4845436b77a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28e8f3a00ee4012f8642a68c9b4f4845436b77a4/comments", "author": {"login": "rasky", "id": 1014109, "node_id": "MDQ6VXNlcjEwMTQxMDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1014109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasky", "html_url": "https://github.com/rasky", "followers_url": "https://api.github.com/users/rasky/followers", "following_url": "https://api.github.com/users/rasky/following{/other_user}", "gists_url": "https://api.github.com/users/rasky/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasky/subscriptions", "organizations_url": "https://api.github.com/users/rasky/orgs", "repos_url": "https://api.github.com/users/rasky/repos", "events_url": "https://api.github.com/users/rasky/events{/privacy}", "received_events_url": "https://api.github.com/users/rasky/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0f8db53eaf3c743fd891c6a53c2020713d90d53c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f8db53eaf3c743fd891c6a53c2020713d90d53c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f8db53eaf3c743fd891c6a53c2020713d90d53c"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "7e036b3a19167588a1afa1979ae09bdc155a3ef3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28e8f3a00ee4012f8642a68c9b4f4845436b77a4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28e8f3a00ee4012f8642a68c9b4f4845436b77a4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=28e8f3a00ee4012f8642a68c9b4f4845436b77a4", "patch": "@@ -1,3 +1,9 @@\n+2003-11-14  Giovanni Bajo  <giovannibajo@libero.it>\n+\n+        PR c++/2094\n+        * pt.c (unify): Add support for PTRMEM_CST and\n+        FIELD_DECL unification.\n+\n 2003-11-13  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* decl.c (grokfndecl): Change OK to type tree."}, {"sha": "4afe974616dbe2f02ff8bf81105cbd2116557d9b", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28e8f3a00ee4012f8642a68c9b4f4845436b77a4/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28e8f3a00ee4012f8642a68c9b4f4845436b77a4/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=28e8f3a00ee4012f8642a68c9b4f4845436b77a4", "patch": "@@ -9617,6 +9617,27 @@ unify (tree tparms, tree targs, tree parm, tree arg, int strict)\n       TREE_VEC_ELT (targs, idx) = arg;\n       return 0;\n \n+    case PTRMEM_CST:\n+     {\n+        /* A pointer-to-member constant can be unified only with\n+         another constant.  */\n+      if (TREE_CODE (arg) != PTRMEM_CST)\n+        return 1;\n+\n+      /* Just unify the class member. It would be useless (and possibly\n+         wrong, depending on the strict flags) to unify also\n+         PTRMEM_CST_CLASS, because we want to be sure that both parm and\n+         arg refer to the same variable, even if through different\n+         classes. For instance:\n+\n+         struct A { int x; };\n+         struct B : A { };\n+\n+         Unification of &A::x and &B::x must succeed.  */\n+      return unify (tparms, targs, PTRMEM_CST_MEMBER (parm),\n+                    PTRMEM_CST_MEMBER (arg), strict);\n+     }\n+\n     case POINTER_TYPE:\n       {\n \tif (TREE_CODE (arg) != POINTER_TYPE)\n@@ -9805,6 +9826,7 @@ unify (tree tparms, tree targs, tree parm, tree arg, int strict)\n \treturn 1;\n       return 0;\n \n+    case FIELD_DECL:\n     case TEMPLATE_DECL:\n       /* Matched cases are handled by the ARG == PARM test above.  */\n       return 1;"}]}