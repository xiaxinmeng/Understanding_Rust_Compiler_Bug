{"sha": "793146e38d245814e821f34a180a63bf93810a7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkzMTQ2ZTM4ZDI0NTgxNGU4MjFmMzRhMTgwYTYzYmY5MzgxMGE3Yw==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2004-01-20T23:49:34Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2004-01-20T23:49:34Z"}, "message": "reorder struct exception hacks and only bypass glibc for proper C++ handling\n\nFrom-SVN: r76240", "tree": {"sha": "47b8e16637a98552cb0a528d681cf21b1d11a2da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47b8e16637a98552cb0a528d681cf21b1d11a2da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/793146e38d245814e821f34a180a63bf93810a7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/793146e38d245814e821f34a180a63bf93810a7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/793146e38d245814e821f34a180a63bf93810a7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/793146e38d245814e821f34a180a63bf93810a7c/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fdb33708b4393f5794a726497c71aadc5d9dfe65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdb33708b4393f5794a726497c71aadc5d9dfe65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdb33708b4393f5794a726497c71aadc5d9dfe65"}], "stats": {"total": 164, "additions": 88, "deletions": 76}, "files": [{"sha": "6ea200f754b2638c8278fc0b077149c5129d4197", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/793146e38d245814e821f34a180a63bf93810a7c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/793146e38d245814e821f34a180a63bf93810a7c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=793146e38d245814e821f34a180a63bf93810a7c", "patch": "@@ -1,3 +1,9 @@\n+2004-01-20  Bruce Korb  <bkorb@gnu.org>\n+\n+\t* fixinc/inclhack.def(math_exception): bypass only for glibc.\n+\t(matherr_decl): rename & relocate as exception_structure.\n+\tThis fix must precede the math_exception fix.\n+\n 2004-01-20  Roger Sayle  <roger@eyesopen.com>\n \n \t* fold-const.c (fold_convert): Rename to fold_convert_const."}, {"sha": "9c85fd6bbfb70d2362f8774500f1189fd4896d45", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 51, "deletions": 51, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/793146e38d245814e821f34a180a63bf93810a7c/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/793146e38d245814e821f34a180a63bf93810a7c/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=793146e38d245814e821f34a180a63bf93810a7c", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Tuesday December 23, 2003 at 01:59:31 PM MET\n+ * It has been AutoGen-ed  Tuesday January 20, 2004 at 03:43:24 PM PST\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT CVS-MERGE THIS FILE, EITHER Tue Dec 23 13:59:32 MET 2003\n+/* DO NOT CVS-MERGE THIS FILE, EITHER Tue Jan 20 15:43:24 PST 2004\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -1749,6 +1749,48 @@ static const char* apzEcd_CursorPatch[] = {\n     \"ecd_cursor\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Exception_Structure fix\n+ */\n+tSCC zException_StructureName[] =\n+     \"exception_structure\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zException_StructureList[] =\n+  \"|math.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzException_StructureMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zException_StructureSelect0[] =\n+       \"matherr\";\n+\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zException_StructureBypass0[] =\n+       \"matherr.*(struct exception|__MATH_EXCEPTION)\";\n+\n+#define    EXCEPTION_STRUCTURE_TEST_CT  2\n+static tTestDesc aException_StructureTests[] = {\n+  { TT_NEGREP,   zException_StructureBypass0, (regex_t*)NULL },\n+  { TT_EGREP,    zException_StructureSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Exception_Structure\n+ */\n+static const char* apzException_StructurePatch[] = {\n+    \"wrap\",\n+    \"struct exception;\\n\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Freebsd_Gcc3_Breakage fix\n@@ -3294,7 +3336,7 @@ tSCC zMath_ExceptionSelect0[] =\n  *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zMath_ExceptionBypass0[] =\n-       \"__cplusplus\";\n+       \"We have a problem when using C\\\\+\\\\+\";\n \n #define    MATH_EXCEPTION_TEST_CT  2\n static tTestDesc aMath_ExceptionTests[] = {\n@@ -4980,48 +5022,6 @@ void\\t(*signal(...))(...);\\n\\\n #endif\",\n     (char*)NULL };\n \n-/* * * * * * * * * * * * * * * * * * * * * * * * * *\n- *\n- *  Description of Sunos_Matherr_Decl fix\n- */\n-tSCC zSunos_Matherr_DeclName[] =\n-     \"sunos_matherr_decl\";\n-\n-/*\n- *  File name selection pattern\n- */\n-tSCC zSunos_Matherr_DeclList[] =\n-  \"|math.h|\";\n-/*\n- *  Machine/OS name selection pattern\n- */\n-#define apzSunos_Matherr_DeclMachs (const char**)NULL\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zSunos_Matherr_DeclSelect0[] =\n-       \"matherr\";\n-\n-/*\n- *  content bypass pattern - skip fix if pattern found\n- */\n-tSCC zSunos_Matherr_DeclBypass0[] =\n-       \"matherr.*(struct exception|__MATH_EXCEPTION)\";\n-\n-#define    SUNOS_MATHERR_DECL_TEST_CT  2\n-static tTestDesc aSunos_Matherr_DeclTests[] = {\n-  { TT_NEGREP,   zSunos_Matherr_DeclBypass0, (regex_t*)NULL },\n-  { TT_EGREP,    zSunos_Matherr_DeclSelect0, (regex_t*)NULL }, };\n-\n-/*\n- *  Fix Command Arguments for Sunos_Matherr_Decl\n- */\n-static const char* apzSunos_Matherr_DeclPatch[] = {\n-    \"wrap\",\n-    \"struct exception;\\n\",\n-    (char*)NULL };\n-\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Sunos_Strlen fix\n@@ -6577,6 +6577,7 @@ typedef enum {\n     DEC_INTERN_ASM_FIXIDX,\n     DJGPP_WCHAR_H_FIXIDX,\n     ECD_CURSOR_FIXIDX,\n+    EXCEPTION_STRUCTURE_FIXIDX,\n     FREEBSD_GCC3_BREAKAGE_FIXIDX,\n     GNU_TYPES_FIXIDX,\n     HP_INLINE_FIXIDX,\n@@ -6660,7 +6661,6 @@ typedef enum {\n     SUN_MALLOC_FIXIDX,\n     SUN_RUSERS_SEMI_FIXIDX,\n     SUN_SIGNAL_FIXIDX,\n-    SUNOS_MATHERR_DECL_FIXIDX,\n     SUNOS_STRLEN_FIXIDX,\n     SVR4__P_FIXIDX,\n     SVR4_DISABLE_OPT_FIXIDX,\n@@ -6909,6 +6909,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      ECD_CURSOR_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aEcd_CursorTests,   apzEcd_CursorPatch, 0 },\n \n+  {  zException_StructureName,    zException_StructureList,\n+     apzException_StructureMachs,\n+     EXCEPTION_STRUCTURE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aException_StructureTests,   apzException_StructurePatch, 0 },\n+\n   {  zFreebsd_Gcc3_BreakageName,    zFreebsd_Gcc3_BreakageList,\n      apzFreebsd_Gcc3_BreakageMachs,\n      FREEBSD_GCC3_BREAKAGE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -7324,11 +7329,6 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      SUN_SIGNAL_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aSun_SignalTests,   apzSun_SignalPatch, 0 },\n \n-  {  zSunos_Matherr_DeclName,    zSunos_Matherr_DeclList,\n-     apzSunos_Matherr_DeclMachs,\n-     SUNOS_MATHERR_DECL_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aSunos_Matherr_DeclTests,   apzSunos_Matherr_DeclPatch, 0 },\n-\n   {  zSunos_StrlenName,    zSunos_StrlenList,\n      apzSunos_StrlenMachs,\n      SUNOS_STRLEN_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "9459f8762583d1b4e332ef6533c80c035fb38d5f", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 31, "deletions": 25, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/793146e38d245814e821f34a180a63bf93810a7c/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/793146e38d245814e821f34a180a63bf93810a7c/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=793146e38d245814e821f34a180a63bf93810a7c", "patch": "@@ -1055,6 +1055,26 @@ fix = {\n };\n \n \n+/*\n+ *  math.h on SunOS 4 puts the declaration of matherr before the definition\n+ *  of struct exception, so the prototype (added by fixproto) causes havoc.\n+ *  This must appear before the math_exception fix.\n+ */\n+fix = {\n+    hackname  = exception_structure;\n+    files     = math.h;\n+\n+    /*  If matherr has a prototype already, the header needs no fix.  */\n+    bypass    = 'matherr.*(struct exception|__MATH_EXCEPTION)';\n+    select    = matherr;\n+\n+    c_fix     = wrap;\n+    c_fix_arg = \"struct exception;\\n\";\n+\n+    test_text = \"extern int matherr();\";\n+};\n+\n+\n /*\n  *  Between 8/24/1998 and 2/17/2001, FreeBSD system headers presume\n  *  neither the existence of GCC 3 nor its exact feature set yet break\n@@ -1856,19 +1876,24 @@ fix = {\n \n /*\n  *  Some math.h files define struct exception (it's in the System V\n- *  Interface Definition), which conflicts with\n- *  the class exception defined in the C++ file std/stdexcept.h.  We\n- *  redefine it to __math_exception.  This is not a great fix, but I\n- *  haven't been able to think of anything better.\n- *  Note that we have to put the #ifdef/#endif blocks at beginning\n+ *  Interface Definition), which conflicts with the class exception defined\n+ *  in the C++ file std/stdexcept.h.  We redefine it to __math_exception.\n+ *  This is not a great fix, but I haven't been able to think of anything\n+ *  better.  Note that we have to put the #ifdef/#endif blocks at beginning\n  *  and end of file, because fixproto runs after us and may insert\n  *  additional references to struct exception.\n  */\n fix = {\n     hackname  = math_exception;\n     files     = math.h;\n     select    = \"struct exception\";\n-    bypass    = '__cplusplus';\n+    /*\n+     * This should be bypassed on __cplusplus, but some supposedly C++ C++\n+     * aware headers, such as Solaris 8 and 9, don't wrap their struct\n+     * exception either.  So currently we bypass only for glibc, based on a\n+     * comment in the fixed glibc header.  Ick.\n+     */\n+    bypass    = 'We have a problem when using C\\+\\+';\n     c_fix     = wrap;\n \n     c_fix_arg = \"#ifdef __cplusplus\\n\"\n@@ -2808,25 +2833,6 @@ fix = {\n };\n \n \n-/*\n- *  math.h on SunOS 4 puts the declaration of matherr before the definition\n- *  of struct exception, so the prototype (added by fixproto) causes havoc.\n- */\n-fix = {\n-    hackname  = sunos_matherr_decl;\n-    files     = math.h;\n-\n-    /*  If matherr has a prototype already, the header needs no fix.  */\n-    bypass    = 'matherr.*(struct exception|__MATH_EXCEPTION)';\n-    select    = matherr;\n-\n-    c_fix     = wrap;\n-    c_fix_arg = \"struct exception;\\n\";\n-\n-    test_text = \"extern int matherr();\";\n-};\n-\n-\n /*\n  *  Correct the return type for strlen in strings.h in SunOS 4.\n  */"}]}