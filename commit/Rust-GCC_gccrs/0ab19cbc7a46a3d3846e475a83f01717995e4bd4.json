{"sha": "0ab19cbc7a46a3d3846e475a83f01717995e4bd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGFiMTljYmM3YTQ2YTNkMzg0NmU0NzVhODNmMDE3MTc5OTVlNGJkNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-12-11T16:51:16Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-12-11T16:51:16Z"}, "message": "re PR c++/55619 (Chromium build fails with: error: memory input is not directly addressable)\n\n\tPR c++/55619\n\t* semantics.c (finish_asm_stmt): Don't call decay_conversion\n\ton input operands that can be only in memory.\n\n\t* g++.dg/ext/asm12.C: New test.\n\nFrom-SVN: r194404", "tree": {"sha": "cdb0769934f4dfd04e4caf22be45d594366f0e23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cdb0769934f4dfd04e4caf22be45d594366f0e23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ab19cbc7a46a3d3846e475a83f01717995e4bd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ab19cbc7a46a3d3846e475a83f01717995e4bd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ab19cbc7a46a3d3846e475a83f01717995e4bd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ab19cbc7a46a3d3846e475a83f01717995e4bd4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cb56d8b09e0d1ad1dfdc111dd9b90b10e2164d9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb56d8b09e0d1ad1dfdc111dd9b90b10e2164d9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb56d8b09e0d1ad1dfdc111dd9b90b10e2164d9c"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "baa119dbca991467ad82b3b1cee23fc020d6fb09", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab19cbc7a46a3d3846e475a83f01717995e4bd4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab19cbc7a46a3d3846e475a83f01717995e4bd4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0ab19cbc7a46a3d3846e475a83f01717995e4bd4", "patch": "@@ -1,3 +1,9 @@\n+2012-12-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/55619\n+\t* semantics.c (finish_asm_stmt): Don't call decay_conversion\n+\ton input operands that can be only in memory.\n+\n 2012-12-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* Make-lang.in (cp/typeck.o): Add dependency on $(PARAMS_H)."}, {"sha": "ad33c658fba5134c0fbc323590794c69d505781d", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab19cbc7a46a3d3846e475a83f01717995e4bd4/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab19cbc7a46a3d3846e475a83f01717995e4bd4/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=0ab19cbc7a46a3d3846e475a83f01717995e4bd4", "patch": "@@ -1369,7 +1369,15 @@ finish_asm_stmt (int volatile_p, tree string, tree output_operands,\n       for (i = 0, t = input_operands; t; ++i, t = TREE_CHAIN (t))\n \t{\n \t  constraint = TREE_STRING_POINTER (TREE_VALUE (TREE_PURPOSE (t)));\n-\t  operand = decay_conversion (TREE_VALUE (t), tf_warning_or_error);\n+\t  bool constraint_parsed\n+\t    = parse_input_constraint (&constraint, i, ninputs, noutputs, 0,   \n+\t\t\t\t      oconstraints, &allows_mem, &allows_reg);\n+\t  /* If the operand is going to end up in memory, don't call\n+\t     decay_conversion.  */\n+\t  if (constraint_parsed && !allows_reg && allows_mem)\n+\t    operand = mark_lvalue_use (TREE_VALUE (t));\n+\t  else\n+\t    operand = decay_conversion (TREE_VALUE (t), tf_warning_or_error);\n \n \t  /* If the type of the operand hasn't been determined (e.g.,\n \t     because it involves an overloaded function), then issue\n@@ -1382,8 +1390,7 @@ finish_asm_stmt (int volatile_p, tree string, tree output_operands,\n \t      operand = error_mark_node;\n \t    }\n \n-\t  if (parse_input_constraint (&constraint, i, ninputs, noutputs, 0,\n-\t\t\t\t      oconstraints, &allows_mem, &allows_reg))\n+\t  if (constraint_parsed)\n \t    {\n \t      /* If the operand is going to end up in memory,\n \t\t mark it addressable.  */"}, {"sha": "c6c8bead6c4f902ef50f8e462bd62704e55206d4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab19cbc7a46a3d3846e475a83f01717995e4bd4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab19cbc7a46a3d3846e475a83f01717995e4bd4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0ab19cbc7a46a3d3846e475a83f01717995e4bd4", "patch": "@@ -1,5 +1,8 @@\n 2012-12-11  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/55619\n+\t* g++.dg/ext/asm12.C: New test.\n+\n \tPR tree-optimization/54570\n \t* gcc.dg/builtin-object-size-8.c: Xfail.\n \t* gcc.dg/builtin-object-size-13.c: New test."}, {"sha": "9823a8fd7e382ac033b27acf6a21685ce348e823", "filename": "gcc/testsuite/g++.dg/ext/asm12.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ab19cbc7a46a3d3846e475a83f01717995e4bd4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ab19cbc7a46a3d3846e475a83f01717995e4bd4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fasm12.C?ref=0ab19cbc7a46a3d3846e475a83f01717995e4bd4", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/55619\n+// { dg-do compile }\n+\n+typedef int V __attribute__ ((vector_size (4 * sizeof (int))));\n+\n+static const V C = { 0x201, 0, 0, 0 };\n+static const int D = 0x201;\n+\n+void\n+f ()\n+{\n+  __asm volatile (\"\" : : \"m\" (C));\n+  __asm volatile (\"\" : : \"m\" (D));\n+}"}]}