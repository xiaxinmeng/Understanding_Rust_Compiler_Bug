{"sha": "cd8fc5ee0ded4801780f1998cd9025011abad152", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q4ZmM1ZWUwZGVkNDgwMTc4MGYxOTk4Y2Q5MDI1MDExYWJhZDE1Mg==", "commit": {"author": {"name": "Alex Velenko", "email": "Alex.Velenko@arm.com", "date": "2014-12-08T18:10:39Z"}, "committer": {"name": "Alex Velenko", "email": "avelenko@gcc.gnu.org", "date": "2014-12-08T18:10:39Z"}, "message": "Bics instruction generation for aarch64\n\ngcc/\n\n\t* config/aarch64/aarch64.md (and_one_cmpl<mode>3_compare0_no_reuse):\n\tNew define_insn.\n\t* (and_one_cmpl_<SHIFT:optab><mode>3_compare0_no_reuse):\n\tLikewise.\n\ngcc/testsuite/\n\n\t* gcc.target/aarch64/bics_3.c : New testcase.\n\nFrom-SVN: r218486", "tree": {"sha": "0e0e7de33750cbf8afae5fa276f1b95b32801372", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e0e7de33750cbf8afae5fa276f1b95b32801372"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd8fc5ee0ded4801780f1998cd9025011abad152", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd8fc5ee0ded4801780f1998cd9025011abad152", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd8fc5ee0ded4801780f1998cd9025011abad152", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd8fc5ee0ded4801780f1998cd9025011abad152/comments", "author": null, "committer": null, "parents": [{"sha": "942f7f5af30171ea44db18d93ea9e7d30eddc676", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/942f7f5af30171ea44db18d93ea9e7d30eddc676", "html_url": "https://github.com/Rust-GCC/gccrs/commit/942f7f5af30171ea44db18d93ea9e7d30eddc676"}], "stats": {"total": 106, "additions": 106, "deletions": 0}, "files": [{"sha": "7591ec7ee1759af054b3f9c0b6afea51d0b2093a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd8fc5ee0ded4801780f1998cd9025011abad152/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd8fc5ee0ded4801780f1998cd9025011abad152/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd8fc5ee0ded4801780f1998cd9025011abad152", "patch": "@@ -1,3 +1,10 @@\n+2014-12-08  Alex Velenko  <Alex.Velenko@arm.com>\n+\n+\t* config/aarch64/aarch64.md (and_one_cmpl<mode>3_compare0_no_reuse):\n+\tNew define_insn.\n+\t* (and_one_cmpl_<SHIFT:optab><mode>3_compare0_no_reuse):\n+\tLikewise.\n+\n 2014-12-08  Felix Yang  <felix.yang@huawei.com>\n \t    Haijian Zhang  <z.zhanghaijian@huawei.com>\n \t    Jiji Jiang  <jiangjiji@huawei.com>"}, {"sha": "1bbcc7bd5676e9ebd0a190bc3f399cea91b51343", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd8fc5ee0ded4801780f1998cd9025011abad152/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd8fc5ee0ded4801780f1998cd9025011abad152/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=cd8fc5ee0ded4801780f1998cd9025011abad152", "patch": "@@ -3058,6 +3058,18 @@\n   [(set_attr \"type\" \"logics_reg\")]\n )\n \n+(define_insn \"*and_one_cmpl<mode>3_compare0_no_reuse\"\n+  [(set (reg:CC_NZ CC_REGNUM)\n+    (compare:CC_NZ\n+     (and:GPI (not:GPI\n+           (match_operand:GPI 0 \"register_operand\" \"r\"))\n+          (match_operand:GPI 1 \"register_operand\" \"r\"))\n+     (const_int 0)))]\n+  \"\"\n+  \"bics\\\\t<w>zr, %<w>1, %<w>0\"\n+  [(set_attr \"type\" \"logics_reg\")]\n+)\n+\n (define_insn \"*<LOGICAL:optab>_one_cmpl_<SHIFT:optab><mode>3\"\n   [(set (match_operand:GPI 0 \"register_operand\" \"=r\")\n \t(LOGICAL:GPI (not:GPI\n@@ -3107,6 +3119,20 @@\n   [(set_attr \"type\" \"logics_shift_imm\")]\n )\n \n+(define_insn \"*and_one_cmpl_<SHIFT:optab><mode>3_compare0_no_reuse\"\n+  [(set (reg:CC_NZ CC_REGNUM)\n+    (compare:CC_NZ\n+     (and:GPI (not:GPI\n+           (SHIFT:GPI\n+            (match_operand:GPI 0 \"register_operand\" \"r\")\n+            (match_operand:QI 1 \"aarch64_shift_imm_<mode>\" \"n\")))\n+          (match_operand:GPI 2 \"register_operand\" \"r\"))\n+     (const_int 0)))]\n+  \"\"\n+  \"bics\\\\t<w>zr, %<w>2, %<w>0, <SHIFT:shift> %1\"\n+  [(set_attr \"type\" \"logics_shift_imm\")]\n+)\n+\n (define_insn \"clz<mode>2\"\n   [(set (match_operand:GPI 0 \"register_operand\" \"=r\")\n \t(clz:GPI (match_operand:GPI 1 \"register_operand\" \"r\")))]"}, {"sha": "08289cca09106945cdbc251be2d3b37cd992397f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd8fc5ee0ded4801780f1998cd9025011abad152/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd8fc5ee0ded4801780f1998cd9025011abad152/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cd8fc5ee0ded4801780f1998cd9025011abad152", "patch": "@@ -1,3 +1,7 @@\n+2014-12-08  Alex Velenko  <Alex.Velenko@arm.com>\n+\n+\t* gcc.target/aarch64/bics_3.c : New testcase.\n+\n 2014-12-08  Felix Yang  <felix.yang@huawei.com>\n \t   Haijian Zhang  <z.zhanghaijian@huawei.com>\n \t   Jiji Jiang  <jiangjiji@huawei.com>"}, {"sha": "ecb53e9d8ba391398b783b3f78acbd0c22ee41e1", "filename": "gcc/testsuite/gcc.target/aarch64/bics_3.c", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd8fc5ee0ded4801780f1998cd9025011abad152/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbics_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd8fc5ee0ded4801780f1998cd9025011abad152/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbics_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbics_3.c?ref=cd8fc5ee0ded4801780f1998cd9025011abad152", "patch": "@@ -0,0 +1,69 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 --save-temps\" } */\n+\n+extern void abort (void);\n+\n+int __attribute__ ((noinline))\n+bics_si_test (int a, int b)\n+{\n+  if (a & ~b)\n+    return 1;\n+  else\n+    return 0;\n+}\n+\n+int __attribute__ ((noinline))\n+bics_si_test2 (int a, int b)\n+{\n+  if (a & ~ (b << 2))\n+    return 1;\n+  else\n+    return 0;\n+}\n+\n+typedef long long s64;\n+\n+int __attribute__ ((noinline))\n+bics_di_test (s64 a, s64 b)\n+{\n+  if (a & ~b)\n+    return 1;\n+  else\n+    return 0;\n+}\n+\n+int __attribute__ ((noinline))\n+bics_di_test2 (s64 a, s64 b)\n+{\n+  if (a & ~(b << 2))\n+    return 1;\n+  else\n+    return 0;\n+}\n+\n+int\n+main (void)\n+{\n+  int a = 5;\n+  int b = 5;\n+  int c = 20;\n+  s64 d = 5;\n+  s64 e = 5;\n+  s64 f = 20;\n+  if (bics_si_test (a, b))\n+    abort ();\n+  if (bics_si_test2 (c, b))\n+    abort ();\n+  if (bics_di_test (d, e))\n+    abort ();\n+  if (bics_di_test2 (f, e))\n+    abort ();\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler-times \"bics\\twzr, w\\[0-9\\]+, w\\[0-9\\]+\" 2 } } */\n+/* { dg-final { scan-assembler-times \"bics\\twzr, w\\[0-9\\]+, w\\[0-9\\]+, lsl 2\" 1 } } */\n+/* { dg-final { scan-assembler-times \"bics\\txzr, x\\[0-9\\]+, x\\[0-9\\]+\" 2 } } */\n+/* { dg-final { scan-assembler-times \"bics\\txzr, x\\[0-9\\]+, x\\[0-9\\]+, lsl 2\" 1 } } */\n+\n+/* { dg-final { cleanup-saved-temps } } */"}]}