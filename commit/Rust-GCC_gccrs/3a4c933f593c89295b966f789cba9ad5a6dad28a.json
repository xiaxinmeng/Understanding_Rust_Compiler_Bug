{"sha": "3a4c933f593c89295b966f789cba9ad5a6dad28a", "node_id": "C_kwDOANBUbNoAKDNhNGM5MzNmNTkzYzg5Mjk1Yjk2NmY3ODljYmE5YWQ1YTZkYWQyOGE", "commit": {"author": {"name": "Claire Dross", "email": "dross@adacore.com", "date": "2022-07-12T11:21:40Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-02T07:34:06Z"}, "message": "[Ada] Add loop variants to Ada.Strings.Search and Ada.Strings.Maps\n\nAdd loop variants to verify that loops terminate in string handling.\n\ngcc/ada/\n\n\t* libgnat/a-strmap.adb: Add variants to simple and while loops.\n\t* libgnat/a-strsea.adb: Idem.", "tree": {"sha": "3613db640fe0f26a9fc6c028e5d8d9454a18137a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3613db640fe0f26a9fc6c028e5d8d9454a18137a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a4c933f593c89295b966f789cba9ad5a6dad28a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a4c933f593c89295b966f789cba9ad5a6dad28a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a4c933f593c89295b966f789cba9ad5a6dad28a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a4c933f593c89295b966f789cba9ad5a6dad28a/comments", "author": {"login": "clairedross", "id": 8180017, "node_id": "MDQ6VXNlcjgxODAwMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/8180017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clairedross", "html_url": "https://github.com/clairedross", "followers_url": "https://api.github.com/users/clairedross/followers", "following_url": "https://api.github.com/users/clairedross/following{/other_user}", "gists_url": "https://api.github.com/users/clairedross/gists{/gist_id}", "starred_url": "https://api.github.com/users/clairedross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clairedross/subscriptions", "organizations_url": "https://api.github.com/users/clairedross/orgs", "repos_url": "https://api.github.com/users/clairedross/repos", "events_url": "https://api.github.com/users/clairedross/events{/privacy}", "received_events_url": "https://api.github.com/users/clairedross/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e973ea0151a1551947fcdcadaeb9406789324b06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e973ea0151a1551947fcdcadaeb9406789324b06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e973ea0151a1551947fcdcadaeb9406789324b06"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "e092db046caaa42741105eb0b253713721154778", "filename": "gcc/ada/libgnat/a-strmap.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a4c933f593c89295b966f789cba9ad5a6dad28a/gcc%2Fada%2Flibgnat%2Fa-strmap.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a4c933f593c89295b966f789cba9ad5a6dad28a/gcc%2Fada%2Flibgnat%2Fa-strmap.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-strmap.adb?ref=3a4c933f593c89295b966f789cba9ad5a6dad28a", "patch": "@@ -290,6 +290,7 @@ is\n          loop\n             pragma Loop_Invariant\n               (Seq1 (Seq1'First .. J) = Seq2 (Seq2'First .. J));\n+            pragma Loop_Variant (Increases => J);\n \n             if J = Positive'Last then\n                return;\n@@ -440,6 +441,7 @@ is\n               (Character'Pos (C) >= Character'Pos (C'Loop_Entry));\n             pragma Loop_Invariant\n               (for all Char in C'Loop_Entry .. C => not Set (Char));\n+            pragma Loop_Variant (Increases => C);\n             exit when C = Character'Last;\n             C := Character'Succ (C);\n          end loop;\n@@ -457,6 +459,7 @@ is\n             pragma Loop_Invariant\n               (for all Char in C'Loop_Entry .. C =>\n                  (if Char /= C then Set (Char)));\n+            pragma Loop_Variant (Increases => C);\n             exit when not Set (C) or else C = Character'Last;\n             C := Character'Succ (C);\n          end loop;\n@@ -491,6 +494,7 @@ is\n          pragma Loop_Invariant\n            (for all Span of Max_Ranges (1 .. Range_Num) =>\n               (for all Char in Span.Low .. Span.High => Set (Char)));\n+         pragma Loop_Variant (Increases => Range_Num);\n       end loop;\n \n       return Max_Ranges (1 .. Range_Num);"}, {"sha": "652c79716fed0b956f0d12c27c935ca18c2fa3a7", "filename": "gcc/ada/libgnat/a-strsea.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a4c933f593c89295b966f789cba9ad5a6dad28a/gcc%2Fada%2Flibgnat%2Fa-strsea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a4c933f593c89295b966f789cba9ad5a6dad28a/gcc%2Fada%2Flibgnat%2Fa-strsea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-strsea.adb?ref=3a4c933f593c89295b966f789cba9ad5a6dad28a", "patch": "@@ -113,6 +113,7 @@ package body Ada.Strings.Search with SPARK_Mode is\n \n             pragma Loop_Invariant (Num <= Ind - (Source'First - 1));\n             pragma Loop_Invariant (Ind >= Source'First);\n+            pragma Loop_Variant (Increases => Ind);\n          end loop;\n \n       --  Mapped case\n@@ -142,6 +143,7 @@ package body Ada.Strings.Search with SPARK_Mode is\n             null;\n             pragma Loop_Invariant (Num <= Ind - (Source'First - 1));\n             pragma Loop_Invariant (Ind >= Source'First);\n+            pragma Loop_Variant (Increases => Ind);\n          end loop;\n       end if;\n \n@@ -200,6 +202,7 @@ package body Ada.Strings.Search with SPARK_Mode is\n          null;\n          pragma Loop_Invariant (Num <= Ind - (Source'First - 1));\n          pragma Loop_Invariant (Ind >= Source'First);\n+         pragma Loop_Variant (Increases => Ind);\n       end loop;\n \n       return Num;"}]}