{"sha": "a05a80fc7ce5743e8bd6b2a312f169509c444af8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA1YTgwZmM3Y2U1NzQzZThiZDZiMmEzMTJmMTY5NTA5YzQ0NGFmOA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-03-20T15:54:41Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-03-20T15:54:41Z"}, "message": "builtins.c (fold_builtin_1): Update a call to targetm.fold_builtin.\n\n\t* builtins.c (fold_builtin_1): Update a call to\n\ttargetm.fold_builtin.\n\t* hooks.c (hook_tree_tree_bool_null): Rename to\n\thook_tree_tree_tree_bool_null.  Take one more argument of type\n\ttree.\n\t* hooks.h: Update the prototype of hook_tree_tree_bool_null.\n\t* target-def.h (TARGET_FOLD_BUILTIN): Define it as\n\thook_tree_tree_tree_bool_null.\n\t* target.h (gcc_target): Update the prototype of fold_builtin.\n\t* config/alpha/alpha.c (alpha_fold_builtin): Take decomposed\n\targuments of CALL_EXPR.\n\t* doc/tm.texi (TARGET_FOLD_BUILTIN): Update.  Mention the\n\tnew prototype.\n\nFrom-SVN: r96762", "tree": {"sha": "1504ede87f8c3e471149f7013b2d309d4798b67a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1504ede87f8c3e471149f7013b2d309d4798b67a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a05a80fc7ce5743e8bd6b2a312f169509c444af8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a05a80fc7ce5743e8bd6b2a312f169509c444af8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a05a80fc7ce5743e8bd6b2a312f169509c444af8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a05a80fc7ce5743e8bd6b2a312f169509c444af8/comments", "author": null, "committer": null, "parents": [{"sha": "1655dc9de3ca6e8ef09648bf8bc73600910643c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1655dc9de3ca6e8ef09648bf8bc73600910643c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1655dc9de3ca6e8ef09648bf8bc73600910643c5"}], "stats": {"total": 47, "additions": 32, "deletions": 15}, "files": [{"sha": "7efd3180139ea5ad1f033c366903afde54bdd25b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05a80fc7ce5743e8bd6b2a312f169509c444af8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05a80fc7ce5743e8bd6b2a312f169509c444af8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a05a80fc7ce5743e8bd6b2a312f169509c444af8", "patch": "@@ -1,3 +1,19 @@\n+2005-03-20  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* builtins.c (fold_builtin_1): Update a call to\n+\ttargetm.fold_builtin.\n+\t* hooks.c (hook_tree_tree_bool_null): Rename to\n+\thook_tree_tree_tree_bool_null.  Take one more argument of type\n+\ttree.\n+\t* hooks.h: Update the prototype of hook_tree_tree_bool_null.\n+\t* target-def.h (TARGET_FOLD_BUILTIN): Define it as\n+\thook_tree_tree_tree_bool_null.\n+\t* target.h (gcc_target): Update the prototype of fold_builtin.\n+\t* config/alpha/alpha.c (alpha_fold_builtin): Take decomposed\n+\targuments of CALL_EXPR.\n+\t* doc/tm.texi (TARGET_FOLD_BUILTIN): Update.  Mention the\n+\tnew prototype.\n+\n 2005-03-20  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraph.h (cgraph_node): Add prev_clone pointer."}, {"sha": "a2b08f6d749bcd68abf01353b1d1af7f25f8dccb", "filename": "gcc/builtins.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05a80fc7ce5743e8bd6b2a312f169509c444af8/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05a80fc7ce5743e8bd6b2a312f169509c444af8/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=a05a80fc7ce5743e8bd6b2a312f169509c444af8", "patch": "@@ -7947,7 +7947,7 @@ fold_builtin_1 (tree exp, bool ignore)\n   enum built_in_function fcode;\n \n   if (DECL_BUILT_IN_CLASS (fndecl) == BUILT_IN_MD)\n-    return targetm.fold_builtin (exp, ignore);\n+    return targetm.fold_builtin (fndecl, arglist, ignore);\n \n   fcode = DECL_FUNCTION_CODE (fndecl);\n   switch (fcode)"}, {"sha": "67575e62dacb9f4df7d46910eb5d0ddd109333b4", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05a80fc7ce5743e8bd6b2a312f169509c444af8/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05a80fc7ce5743e8bd6b2a312f169509c444af8/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=a05a80fc7ce5743e8bd6b2a312f169509c444af8", "patch": "@@ -6499,14 +6499,13 @@ alpha_fold_builtin_ctpop (unsigned HOST_WIDE_INT opint[], long op_const)\n /* Fold one of our builtin functions.  */\n \n static tree\n-alpha_fold_builtin (tree exp, bool ignore ATTRIBUTE_UNUSED)\n+alpha_fold_builtin (tree fndecl, tree arglist, bool ignore ATTRIBUTE_UNUSED)\n {\n-  tree fndecl = get_callee_fndecl (exp);\n   tree op[MAX_ARGS], t;\n   unsigned HOST_WIDE_INT opint[MAX_ARGS];\n   long op_const = 0, arity = 0;\n \n-  for (t = TREE_OPERAND (exp, 1); t ; t = TREE_CHAIN (t), ++arity)\n+  for (t = arglist; t ; t = TREE_CHAIN (t), ++arity)\n     {\n       tree arg = TREE_VALUE (t);\n       if (arg == error_mark_node)"}, {"sha": "799a0f854d3093fa301254d31733b6104817fb44", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05a80fc7ce5743e8bd6b2a312f169509c444af8/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05a80fc7ce5743e8bd6b2a312f169509c444af8/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=a05a80fc7ce5743e8bd6b2a312f169509c444af8", "patch": "@@ -9446,13 +9446,14 @@ ignored.  This function should return the result of the call to the\n built-in function.\n @end deftypefn\n \n-@deftypefn {Target Hook} tree TARGET_FOLD_BUILTIN (tree @var{exp}, bool @var{ignore})\n-\n-Expand a call to a machine specific built-in function that was set up by\n-@samp{TARGET_INIT_BUILTINS}.  @var{exp} is the expression for the\n-function call; the result is another tree containing a simplified\n-expression for the call's result.  If @var{ignore} is true the\n-value will be ignored.\n+@deftypefn {Target Hook} tree TARGET_FOLD_BUILTIN (tree @var{fndecl}, tree @var{arglist}, bool @var{ignore})\n+\n+Fold a call to a machine specific built-in function that was set up by\n+@samp{TARGET_INIT_BUILTINS}.  @var{fndecl} is the declaration of the\n+built-in function.  @var{arglist} is the list of arguments passed to\n+the built-in function.  The result is another tree containing a\n+simplified expression for the call's result.  If @var{ignore} is true\n+the value will be ignored.\n @end deftypefn\n \n @defmac MD_CAN_REDIRECT_BRANCH (@var{branch1}, @var{branch2})"}, {"sha": "274d427a9315b14836bbb3776dfad62d1c11f04a", "filename": "gcc/hooks.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05a80fc7ce5743e8bd6b2a312f169509c444af8/gcc%2Fhooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05a80fc7ce5743e8bd6b2a312f169509c444af8/gcc%2Fhooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhooks.c?ref=a05a80fc7ce5743e8bd6b2a312f169509c444af8", "patch": "@@ -243,7 +243,8 @@ hook_constcharptr_tree_null (tree t ATTRIBUTE_UNUSED)\n }\n \n tree\n-hook_tree_tree_bool_null (tree t ATTRIBUTE_UNUSED, bool ignore ATTRIBUTE_UNUSED)\n+hook_tree_tree_tree_bool_null (tree t0 ATTRIBUTE_UNUSED, tree t1 ATTRIBUTE_UNUSED,\n+\t\t\t       bool ignore ATTRIBUTE_UNUSED)\n {\n   return NULL;\n }"}, {"sha": "133ea2a1b80d8f0c0ecc11404902c409b077f8ec", "filename": "gcc/hooks.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05a80fc7ce5743e8bd6b2a312f169509c444af8/gcc%2Fhooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05a80fc7ce5743e8bd6b2a312f169509c444af8/gcc%2Fhooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhooks.h?ref=a05a80fc7ce5743e8bd6b2a312f169509c444af8", "patch": "@@ -64,5 +64,5 @@ extern rtx hook_rtx_rtx_null (rtx);\n extern rtx hook_rtx_tree_int_null (tree, int);\n extern tree hook_tree_tree_identity (tree a);\n extern const char *hook_constcharptr_tree_null (tree);\n-extern tree hook_tree_tree_bool_null (tree, bool);\n+extern tree hook_tree_tree_tree_bool_null (tree, tree, bool);\n #endif"}, {"sha": "bb989f943459b7b119b882806c981a8d44df03b3", "filename": "gcc/target-def.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05a80fc7ce5743e8bd6b2a312f169509c444af8/gcc%2Ftarget-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05a80fc7ce5743e8bd6b2a312f169509c444af8/gcc%2Ftarget-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-def.h?ref=a05a80fc7ce5743e8bd6b2a312f169509c444af8", "patch": "@@ -296,7 +296,7 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n /* In builtins.c.  */\n #define TARGET_INIT_BUILTINS hook_void_void\n #define TARGET_EXPAND_BUILTIN default_expand_builtin\n-#define TARGET_FOLD_BUILTIN hook_tree_tree_bool_null\n+#define TARGET_FOLD_BUILTIN hook_tree_tree_tree_bool_null\n \n /* In varasm.c.  */\n #ifndef TARGET_SECTION_TYPE_FLAGS"}, {"sha": "152cb7d358465aa0e8015d4f84230d46e58c56b1", "filename": "gcc/target.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05a80fc7ce5743e8bd6b2a312f169509c444af8/gcc%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05a80fc7ce5743e8bd6b2a312f169509c444af8/gcc%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.h?ref=a05a80fc7ce5743e8bd6b2a312f169509c444af8", "patch": "@@ -344,7 +344,7 @@ struct gcc_target\n \t\t\t  enum machine_mode mode, int ignore);\n \n   /* Fold a target-specific builtin.  */\n-  tree (* fold_builtin) (tree exp, bool ignore);\n+  tree (* fold_builtin) (tree fndecl, tree arglist, bool ignore);\n \n   /* For a vendor-specific fundamental TYPE, return a pointer to\n      a statically-allocated string containing the C++ mangling for"}]}