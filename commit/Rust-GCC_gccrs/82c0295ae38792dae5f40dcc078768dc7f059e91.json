{"sha": "82c0295ae38792dae5f40dcc078768dc7f059e91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJjMDI5NWFlMzg3OTJkYWU1ZjQwZGNjMDc4NzY4ZGM3ZjA1OWU5MQ==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2010-06-23T12:29:32Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2010-06-23T12:29:32Z"}, "message": "* config/spu/spu-protos.h (spu_expand_epilogue) Use bool.\n\n        * config/spu/spu.c (spu_scalar_mode_supported_p): Declare with bool.\n        (spu_vector_mode_supported_p, spu_handle_fndecl_attribute): Likewise.\n        (spu_handle_vector_attribute, spu_pass_by_reference): Likewise.\n        (spu_rtx_costs, spu_function_ok_for_sibcall): Likewise.\n\nFrom-SVN: r161274", "tree": {"sha": "5d62fd708bfb65cf9d90b8069e26de0a0c76bb6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d62fd708bfb65cf9d90b8069e26de0a0c76bb6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82c0295ae38792dae5f40dcc078768dc7f059e91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82c0295ae38792dae5f40dcc078768dc7f059e91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82c0295ae38792dae5f40dcc078768dc7f059e91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82c0295ae38792dae5f40dcc078768dc7f059e91/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1d57c04fd72d5ab77242be1877aec05d2674c467", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d57c04fd72d5ab77242be1877aec05d2674c467", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d57c04fd72d5ab77242be1877aec05d2674c467"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "3b5d4fede3259696963b7607e00ac2e1d357bcd2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c0295ae38792dae5f40dcc078768dc7f059e91/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c0295ae38792dae5f40dcc078768dc7f059e91/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=82c0295ae38792dae5f40dcc078768dc7f059e91", "patch": "@@ -1,3 +1,11 @@\n+2010-06-23  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\t* config/spu/spu-protos.h (spu_expand_epilogue) Use bool.\n+\t* config/spu/spu.c (spu_scalar_mode_supported_p): Declare with bool.\n+\t(spu_vector_mode_supported_p, spu_handle_fndecl_attribute): Likewise.\n+\t(spu_handle_vector_attribute, spu_pass_by_reference): Likewise.\n+\t(spu_rtx_costs, spu_function_ok_for_sibcall): Likewise.\n+\n 2010-06-23  Arnaud Charlet  <charlet@adacore.com\n \n \tPR ada/22220"}, {"sha": "6bf4f65fc1cdac156421277ee631f1ab28d7b444", "filename": "gcc/config/spu/spu-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c0295ae38792dae5f40dcc078768dc7f059e91/gcc%2Fconfig%2Fspu%2Fspu-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c0295ae38792dae5f40dcc078768dc7f059e91/gcc%2Fconfig%2Fspu%2Fspu-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu-protos.h?ref=82c0295ae38792dae5f40dcc078768dc7f059e91", "patch": "@@ -36,7 +36,7 @@ extern int spu_split_immediate (rtx * ops);\n extern int spu_saved_regs_size (void);\n extern int direct_return (void);\n extern void spu_expand_prologue (void);\n-extern void spu_expand_epilogue (unsigned char sibcall_p);\n+extern void spu_expand_epilogue (bool sibcall_p);\n extern rtx spu_return_addr (int count, rtx frame);\n \n #ifdef RTX_CODE"}, {"sha": "a756178c24c9c7e4eb37c89d2769e6dffb804950", "filename": "gcc/config/spu/spu.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c0295ae38792dae5f40dcc078768dc7f059e91/gcc%2Fconfig%2Fspu%2Fspu.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c0295ae38792dae5f40dcc078768dc7f059e91/gcc%2Fconfig%2Fspu%2Fspu.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.c?ref=82c0295ae38792dae5f40dcc078768dc7f059e91", "patch": "@@ -150,8 +150,8 @@ char regs_ever_allocated[FIRST_PSEUDO_REGISTER];\n /*  Prototypes and external defs.  */\n static void spu_init_builtins (void);\n static tree spu_builtin_decl (unsigned, bool);\n-static unsigned char spu_scalar_mode_supported_p (enum machine_mode mode);\n-static unsigned char spu_vector_mode_supported_p (enum machine_mode mode);\n+static bool spu_scalar_mode_supported_p (enum machine_mode mode);\n+static bool spu_vector_mode_supported_p (enum machine_mode mode);\n static bool spu_legitimate_address_p (enum machine_mode, rtx, bool);\n static bool spu_addr_space_legitimate_address_p (enum machine_mode, rtx,\n \t\t\t\t\t\t bool, addr_space_t);\n@@ -180,13 +180,13 @@ static void spu_sched_init (FILE *, int, int);\n static int spu_sched_reorder (FILE *, int, rtx *, int *, int);\n static tree spu_handle_fndecl_attribute (tree * node, tree name, tree args,\n \t\t\t\t\t int flags,\n-\t\t\t\t\t unsigned char *no_add_attrs);\n+\t\t\t\t\t bool *no_add_attrs);\n static tree spu_handle_vector_attribute (tree * node, tree name, tree args,\n \t\t\t\t\t int flags,\n-\t\t\t\t\t unsigned char *no_add_attrs);\n+\t\t\t\t\t bool *no_add_attrs);\n static int spu_naked_function_p (tree func);\n-static unsigned char spu_pass_by_reference (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n-\t\t\t\t\t    const_tree type, unsigned char named);\n+static bool spu_pass_by_reference (CUMULATIVE_ARGS *cum, enum machine_mode mode,\n+\t\t\t\t   const_tree type, bool named);\n static tree spu_build_builtin_va_list (void);\n static void spu_va_start (tree, rtx);\n static tree spu_gimplify_va_arg_expr (tree valist, tree type,\n@@ -196,9 +196,9 @@ static int mem_is_padded_component_ref (rtx x);\n static int reg_aligned_for_addr (rtx x);\n static bool spu_assemble_integer (rtx x, unsigned int size, int aligned_p);\n static void spu_asm_globalize_label (FILE * file, const char *name);\n-static unsigned char spu_rtx_costs (rtx x, int code, int outer_code,\n-\t\t\t\t    int *total, bool speed);\n-static unsigned char spu_function_ok_for_sibcall (tree decl, tree exp);\n+static bool spu_rtx_costs (rtx x, int code, int outer_code,\n+\t\t\t   int *total, bool speed);\n+static bool spu_function_ok_for_sibcall (tree decl, tree exp);\n static void spu_init_libfuncs (void);\n static bool spu_return_in_memory (const_tree type, const_tree fntype);\n static void fix_range (const char *);"}]}