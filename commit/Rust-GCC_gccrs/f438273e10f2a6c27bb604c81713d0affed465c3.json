{"sha": "f438273e10f2a6c27bb604c81713d0affed465c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQzODI3M2UxMGYyYTZjMjdiYjYwNGM4MTcxM2QwYWZmZWQ0NjVjMw==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2001-12-17T17:35:01Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2001-12-17T17:35:01Z"}, "message": "update_web_docs_old: Copy from update_web_docs.\n\n\t* update_web_docs_old: Copy from update_web_docs.  Add comment\n\tthat this is for GCC 3.0.x and earlier versions.\n\nFrom-SVN: r48112", "tree": {"sha": "568b29e1357c6f159c126add62505b493fcbe51a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/568b29e1357c6f159c126add62505b493fcbe51a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f438273e10f2a6c27bb604c81713d0affed465c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f438273e10f2a6c27bb604c81713d0affed465c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f438273e10f2a6c27bb604c81713d0affed465c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f438273e10f2a6c27bb604c81713d0affed465c3/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18c8746d1360487f7a1335e8b475313ca34d78bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c8746d1360487f7a1335e8b475313ca34d78bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18c8746d1360487f7a1335e8b475313ca34d78bf"}], "stats": {"total": 183, "additions": 183, "deletions": 0}, "files": [{"sha": "b206bc153eddd6d1fb8cdca51fc2ba618c9accf1", "filename": "maintainer-scripts/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f438273e10f2a6c27bb604c81713d0affed465c3/maintainer-scripts%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f438273e10f2a6c27bb604c81713d0affed465c3/maintainer-scripts%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2FChangeLog?ref=f438273e10f2a6c27bb604c81713d0affed465c3", "patch": "@@ -1,3 +1,8 @@\n+2001-12-17  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* update_web_docs_old: Copy from update_web_docs.  Add comment\n+\tthat this is for GCC 3.0.x and earlier versions.\n+\n 2001-11-19  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* gcc_release: Add /usr/local/bin to path when local."}, {"sha": "bb778261fb64fa29fa28db2f13f3e0c100232b6f", "filename": "maintainer-scripts/update_web_docs_old", "status": "added", "additions": 178, "deletions": 0, "changes": 178, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f438273e10f2a6c27bb604c81713d0affed465c3/maintainer-scripts%2Fupdate_web_docs_old", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f438273e10f2a6c27bb604c81713d0affed465c3/maintainer-scripts%2Fupdate_web_docs_old", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2Fupdate_web_docs_old?ref=f438273e10f2a6c27bb604c81713d0affed465c3", "patch": "@@ -0,0 +1,178 @@\n+#!/bin/sh -x\n+\n+# Generate HTML documentation from GCC Texinfo docs.\n+# This version is for GCC 3.0.x and earlier versions.\n+\n+# Run this from /tmp.\n+CVSROOT=/cvs/gcc\n+export CVSROOT\n+\n+PATH=/usr/local/bin:$PATH\n+\n+WWWBASE=/www/gcc/htdocs\n+WWWBASE_PREFORMATTED=/www/gcc/htdocs-preformatted\n+WWWPREPROCESS='/www/gcc/bin/preprocess -r'\n+\n+# Process options -rrelease and -ddirectory\n+RELEASE=\"\"\n+SUBDIR=\"\"\n+\n+while [ $# -gt 0 ]; do\n+  case $1 in\n+    -r*)\n+      if [ -n \"$RELEASE\" ]; then\n+        echo \"Multiple releases specified\" >&2\n+\texit 1\n+      fi\n+      RELEASE=\"${1#-r}\"\n+      if [ -z \"$RELEASE\" ]; then\n+\tshift\n+\tRELEASE=\"$1\"\n+\tif [ -z \"$RELEASE\" ]; then\n+\t  echo \"No release specified with -r\" >&2\n+\t  exit 1\n+\tfi\n+      fi\n+      ;;\n+    -d*)\n+      if [ -n \"$SUBDIR\" ]; then\n+        echo \"Multiple subdirectories specified\" >&2\n+\texit 1\n+      fi\n+      SUBDIR=\"${1#-d}\"\n+      if [ -z \"$SUBDIR\" ]; then\n+\tshift\n+\tSUBDIR=\"$1\"\n+\tif [ -z \"$SUBDIR\" ]; then\n+\t  echo \"No subdirectory specified with -d\" >&2\n+\t  exit 1\n+\tfi\n+      fi\n+      ;;\n+    *)\n+      echo \"Unknown argument \\\"$1\\\"\" >&2\n+      exit 1\n+      ;;\n+  esac\n+  shift\n+done\n+\n+if [ -n \"$RELEASE\" ] && [ -z \"$SUBDIR\" ]; then\n+  echo \"Release specified without subdirectory\" >&2\n+  exit 1\n+fi\n+\n+if [ -z \"$SUBDIR\" ]; then\n+  DOCSDIR=$WWWBASE/onlinedocs\n+else\n+  DOCSDIR=$WWWBASE/onlinedocs/$SUBDIR\n+fi\n+\n+if [ ! -d $DOCSDIR ]; then\n+  mkdir $DOCSDIR\n+fi\n+\n+if [ -z \"$RELEASE\" ]; then\n+  RELEASE=HEAD\n+  DO_THANKS_HTML=y\n+else\n+  DO_THANKS_HTML=n\n+fi\n+\n+WORKDIR=/tmp/gcc-doc-update.$$\n+\n+/bin/rm -rf $WORKDIR\n+/bin/mkdir $WORKDIR\n+cd $WORKDIR\n+\n+# Find all the texi files in the repository, except those in directories\n+# we do not care about (texinfo, etc).\n+find $CVSROOT/gcc -name \\*.texi,v -print | fgrep -v -f/home/gccadmin/scripts/doc_exclude | sed -e s#$CVSROOT/##g -e s#,v##g -e s#Attic/##g > FILES\n+\n+\n+# Checkout all the texi files.\n+cvs -Q co -r$RELEASE `cat FILES` gcc/gcc/doc/install.texi2html gcc/gcc/texinfo.tex gcc/gcc/doc/texinfo.tex gcc/gcc/doc/include/texinfo.tex\n+\n+# Find the directory to pass to -I; this is the one with texinfo.tex\n+# and fdl.texi.\n+texitexloc=`find . -name texinfo.tex`\n+includedir=${texitexloc%/*}\n+\n+# Now convert the relevant files from texi to HTML and PostScript.\n+for file in cpp chill cppinternals gcc gcj g77 gnat-style libiberty \\\n+    objc-features porting; do\n+  filename=`find . -name ${file}.texi`\n+  if [ \"${filename}\" ]; then\n+    /usr/local/bin/texi2html -glossary -menu -split_chapter -I ${includedir} ${filename}\n+    texi2dvi -I ${includedir} ${filename} </dev/null && dvips -o ${file}.ps ${file}.dvi\n+  fi\n+done\n+\n+# Then build a gzipped copy of each of the resulting .html and .ps files\n+for file in *.html *.ps; do\n+  cat $file | gzip --best > $file.gz\n+done\n+\n+# On the 15th of the month, wipe all the old files from the\n+# web server.\n+today=`date +%d`\n+if test $today = 15; then\n+  find $DOCSDIR -type f -maxdepth 1 -print | grep -v index.html | xargs rm\n+fi\n+\n+# And copy the resulting html files to the web server\n+for file in *.html *.ps; do\n+  cat $DOCSDIR/$file | \n+    sed -e '/^<!-- Created on/d' \\\n+        -e '/^by <I>GCC Administrator<\\/I> on/d' \\\n+        -e '/^%DVIPSSource:/d' > file1\n+  cat $file |\n+    sed -e '/^<!-- Created on/d' \\\n+        -e '/^by <I>GCC Administrator<\\/I> on/d' \\\n+        -e '/^%DVIPSSource:/d' > file2\n+  if cmp -s file1 file2; then\n+    :\n+  else\n+    cp $file ${file}.gz $DOCSDIR\n+  fi\n+done\n+\n+news_file=`grep \"News About GNU Fortran\" $DOCSDIR/g77_toc.html | sed -e '/HREF=.*[^.]/  s#^.*HREF=\"##g' | sed -e 's%#SEC.*%%g'`\n+bugs_file=`grep \"Known Causes of Trouble with GNU Fortran\" $DOCSDIR/g77_toc.html | sed -e '/HREF=.*[^.]/  s#^.*HREF=\"##g' | sed -e 's%#SEC.*%%g'`\n+contrib_file=`grep \"Contributors to GCC\" $DOCSDIR/gcc_toc.html | sed -e '/HREF=.*[^.]/  s#^.*HREF=\"##g' | sed -e 's%#SEC.*%%g'`\n+\n+cd $DOCSDIR\n+\n+rm -f g77_news.html\n+rm -f g77_bugs.html\n+rm -f g77_news.html.gz\n+rm -f g77_bugs.html.gz\n+ln $news_file g77_news.html\n+ln $bugs_file g77_bugs.html\n+ln ${news_file}.gz g77_news.html.gz\n+ln ${bugs_file}.gz g77_bugs.html.gz\n+\n+if [ \"$DO_THANKS_HTML\" = y ]; then\n+  cd $WWWBASE\n+  rm -f thanks.html\n+  rm -f thanks.html.gz\n+  ln onlinedocs/$contrib_file thanks.html\n+  ln onlinedocs/${contrib_file}.gz thanks.html.gz\n+fi\n+\n+# Finally, generate the installation documentation (but only for CVS HEAD).\n+if [ \"$RELEASE\" = \"HEAD\" ]; then\n+  SOURCEDIR=$WORKDIR/gcc/gcc/doc\n+  DESTDIR=$WWWBASE_PREFORMATTED/install\n+  export SOURCEDIR\n+  export DESTDIR\n+  $WORKDIR/gcc/gcc/doc/install.texi2html\n+\n+  # Preprocess the entire web site, not just the install docs!\n+  echo \"Invoking $WWWPREPROCESS\"\n+  $WWWPREPROCESS |grep -v '^  Warning: Keeping'\n+fi\n+\n+# Clean up behind us.\n+\n+rm -rf $WORKDIR"}]}