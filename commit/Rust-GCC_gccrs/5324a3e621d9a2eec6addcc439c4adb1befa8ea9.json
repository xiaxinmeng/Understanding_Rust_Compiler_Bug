{"sha": "5324a3e621d9a2eec6addcc439c4adb1befa8ea9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTMyNGEzZTYyMWQ5YTJlZWM2YWRkY2M0MzljNGFkYjFiZWZhOGVhOQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-07-22T15:27:30Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-07-22T15:43:25Z"}, "message": "c++: structural_comptypes addition\n\nI had to debug structural_comptypes, and its complex if conditions and\ntail calling of same_type_p made that hard.  I'd hope we can turn the\neqivalent of return boolean_fn () ? true : false; into a tail call of\nthe boolean.  We also were not dealing with TYPEOF_TYPE.\n\n\tgcc/cp/\n\t* typeck.c (structural_comptypes): [DECLTYPE_TYPE] break\n\tapart complex if.\n\t[UNDERLYING_TYPE]: Use an if.\n\t[TYPEOF_TYPE]: New.", "tree": {"sha": "e6113143051035c7b04d772f262e5f3f956236c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6113143051035c7b04d772f262e5f3f956236c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5324a3e621d9a2eec6addcc439c4adb1befa8ea9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5324a3e621d9a2eec6addcc439c4adb1befa8ea9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5324a3e621d9a2eec6addcc439c4adb1befa8ea9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5324a3e621d9a2eec6addcc439c4adb1befa8ea9/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f32c94fc72313798b3a9033c92ceb34f7b7febc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f32c94fc72313798b3a9033c92ceb34f7b7febc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f32c94fc72313798b3a9033c92ceb34f7b7febc"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "adc088ce1d7b3ef5116eb2f8fa45cdde6627d627", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5324a3e621d9a2eec6addcc439c4adb1befa8ea9/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5324a3e621d9a2eec6addcc439c4adb1befa8ea9/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=5324a3e621d9a2eec6addcc439c4adb1befa8ea9", "patch": "@@ -1452,19 +1452,25 @@ structural_comptypes (tree t1, tree t2, int strict)\n \n     case DECLTYPE_TYPE:\n       if (DECLTYPE_TYPE_ID_EXPR_OR_MEMBER_ACCESS_P (t1)\n-          != DECLTYPE_TYPE_ID_EXPR_OR_MEMBER_ACCESS_P (t2)\n-\t  || (DECLTYPE_FOR_LAMBDA_CAPTURE (t1)\n-\t      != DECLTYPE_FOR_LAMBDA_CAPTURE (t2))\n-\t  || (DECLTYPE_FOR_LAMBDA_PROXY (t1)\n-\t      != DECLTYPE_FOR_LAMBDA_PROXY (t2))\n-          || !cp_tree_equal (DECLTYPE_TYPE_EXPR (t1), \n-                             DECLTYPE_TYPE_EXPR (t2)))\n+          != DECLTYPE_TYPE_ID_EXPR_OR_MEMBER_ACCESS_P (t2))\n+\treturn false;\n+      if (DECLTYPE_FOR_LAMBDA_CAPTURE (t1) != DECLTYPE_FOR_LAMBDA_CAPTURE (t2))\n+\treturn false;\n+      if (DECLTYPE_FOR_LAMBDA_PROXY (t1) != DECLTYPE_FOR_LAMBDA_PROXY (t2))\n+\treturn false;\n+      if (!cp_tree_equal (DECLTYPE_TYPE_EXPR (t1), DECLTYPE_TYPE_EXPR (t2)))\n         return false;\n       break;\n \n     case UNDERLYING_TYPE:\n-      return same_type_p (UNDERLYING_TYPE_TYPE (t1), \n-\t\t\t  UNDERLYING_TYPE_TYPE (t2));\n+      if (!same_type_p (UNDERLYING_TYPE_TYPE (t1), UNDERLYING_TYPE_TYPE (t2)))\n+\treturn false;\n+      break;\n+\n+    case TYPEOF_TYPE:\n+      if (!cp_tree_equal (TYPEOF_TYPE_EXPR (t1), TYPEOF_TYPE_EXPR (t2)))\n+\treturn false;\n+      break;\n \n     default:\n       return false;"}]}