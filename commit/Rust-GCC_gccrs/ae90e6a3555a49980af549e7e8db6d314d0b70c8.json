{"sha": "ae90e6a3555a49980af549e7e8db6d314d0b70c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU5MGU2YTM1NTVhNDk5ODBhZjU0OWU3ZThkYjZkMzE0ZDBiNzBjOA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-01-17T23:03:50Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-01-17T23:03:50Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r202", "tree": {"sha": "55c5364cf46fdb47a98f24372966492f05023481", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55c5364cf46fdb47a98f24372966492f05023481"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae90e6a3555a49980af549e7e8db6d314d0b70c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae90e6a3555a49980af549e7e8db6d314d0b70c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae90e6a3555a49980af549e7e8db6d314d0b70c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae90e6a3555a49980af549e7e8db6d314d0b70c8/comments", "author": null, "committer": null, "parents": [{"sha": "51bbfa0c65bda8c617aea710627532754481f666", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51bbfa0c65bda8c617aea710627532754481f666", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51bbfa0c65bda8c617aea710627532754481f666"}], "stats": {"total": 90, "additions": 55, "deletions": 35}, "files": [{"sha": "11c872659a3565d0e1df5c5a8cc182ba77424d5f", "filename": "gcc/genattr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae90e6a3555a49980af549e7e8db6d314d0b70c8/gcc%2Fgenattr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae90e6a3555a49980af549e7e8db6d314d0b70c8/gcc%2Fgenattr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattr.c?ref=ae90e6a3555a49980af549e7e8db6d314d0b70c8", "patch": "@@ -1,5 +1,5 @@\n /* Generate attribute information (insn-attr.h) from machine description.\n-   Copyright (C) 1989 Free Software Foundation, Inc.\n+   Copyright (C) 1991 Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@nyu.edu)\n \n This file is part of GNU CC."}, {"sha": "ede60498c09eed9ec3a3e4a01d589add52736943", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 47, "deletions": 27, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae90e6a3555a49980af549e7e8db6d314d0b70c8/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae90e6a3555a49980af549e7e8db6d314d0b70c8/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=ae90e6a3555a49980af549e7e8db6d314d0b70c8", "patch": "@@ -1,5 +1,5 @@\n /* Generate code from machine description to compute values of attributes.\n-   Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n+   Copyright (C) 1992 Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@nyu.edu)\n \n This file is part of GNU CC.\n@@ -1072,12 +1072,12 @@ fill_attr (attr)\n     }\n }\n \f\n-/* Given an expression EXP, see if it is a COND that has a test that checks\n-   relative positions of insns (uses MATCH_DUP or PC).  If so, replace it\n-   with what is obtained by passing the expression to ADDRESS_FN.  If not\n-   but it is a COND, call this routine recursively on each value (including\n-   the default value).  Otherwise, return the value returned by NO_ADDRESS_FN\n-   applied to EXP.  */\n+/* Given an expression EXP, see if it is a COND or IF_THEN_ELSE that has a\n+   test that checks relative positions of insns (uses MATCH_DUP or PC).\n+   If so, replace it with what is obtained by passing the expression to\n+   ADDRESS_FN.  If not but it is a COND or IF_THEN_ELSE, call this routine\n+   recursively on each value (including the default value).  Otherwise,\n+   return the value returned by NO_ADDRESS_FN applied to EXP.  */\n \n static rtx\n substitute_address (exp, no_address_fn, address_fn)\n@@ -1088,32 +1088,52 @@ substitute_address (exp, no_address_fn, address_fn)\n   int i;\n   rtx newexp;\n \n-  if (GET_CODE (exp) != COND)\n-    return (*no_address_fn) (exp);\n+  if (GET_CODE (exp) == COND)\n+    {\n+      /* See if any tests use addresses.  */\n+      address_used = 0;\n+      for (i = 0; i < XVECLEN (exp, 0); i += 2)\n+\twalk_attr_value (XVECEXP (exp, 0, i));\n \n-  /* See if any tests use addresses.  */\n-  address_used = 0;\n-  for (i = 0; i < XVECLEN (exp, 0); i += 2)\n-    walk_attr_value (XVECEXP (exp, 0, i));\n+      if (address_used)\n+\treturn (*address_fn) (exp);\n \n-  if (address_used)\n-    return (*address_fn) (exp);\n+      /* Make a new copy of this COND, replacing each element.  */\n+      newexp = rtx_alloc (COND);\n+      XVEC (newexp, 0) = rtvec_alloc (XVECLEN (exp, 0));\n+      for (i = 0; i < XVECLEN (exp, 0); i += 2)\n+\t{\n+\t  XVECEXP (newexp, 0, i) = XVECEXP (exp, 0, i);\n+\t  XVECEXP (newexp, 0, i + 1)\n+\t    = substitute_address (XVECEXP (exp, 0, i + 1),\n+\t\t\t\t  no_address_fn, address_fn);\n+\t}\n \n-  /* Make a new copy of this COND, replacing each element.  */\n-  newexp = rtx_alloc (COND);\n-  XVEC (newexp, 0) = rtvec_alloc (XVECLEN (exp, 0));\n-  for (i = 0; i < XVECLEN (exp, 0); i += 2)\n-    {\n-      XVECEXP (newexp, 0, i) = XVECEXP (exp, 0, i);\n-      XVECEXP (newexp, 0, i + 1) = substitute_address (XVECEXP (exp, 0, i + 1),\n-\t\t\t\t\t\t       no_address_fn,\n-\t\t\t\t\t\t       address_fn);\n+      XEXP (newexp, 1) = substitute_address (XEXP (exp, 1),\n+\t\t\t\t\t     no_address_fn, address_fn);\n+\n+      return newexp;\n     }\n \n-  XEXP (newexp, 1) = substitute_address (XEXP (exp, 1),\n-\t\t\t\t\t no_address_fn, address_fn);\n+  else if (GET_CODE (exp) == IF_THEN_ELSE)\n+    {\n+      address_used = 0;\n+      walk_attr_value (XEXP (exp, 0));\n+      if (address_used)\n+\treturn (*address_fn) (exp);\n \n-  return newexp;\n+      newexp = rtx_alloc (IF_THEN_ELSE);\n+      XEXP (newexp, 0) = substitute_address (XEXP (exp, 0),\n+\t\t\t\t\t     no_address_fn, address_fn);\n+      XEXP (newexp, 1) = substitute_address (XEXP (exp, 1),\n+\t\t\t\t\t     no_address_fn, address_fn);\n+      XEXP (newexp, 2) = substitute_address (XEXP (exp, 2),\n+\t\t\t\t\t     no_address_fn, address_fn);\n+\n+      return newexp;\n+    }\n+\n+  return (*no_address_fn) (exp);\n }\n \f\n /* Make new attributes from the `length' attribute.  The following are made,"}, {"sha": "28ad673cbe8e98bef575ce62588f0459cf7e214a", "filename": "gcc/gencodes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae90e6a3555a49980af549e7e8db6d314d0b70c8/gcc%2Fgencodes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae90e6a3555a49980af549e7e8db6d314d0b70c8/gcc%2Fgencodes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgencodes.c?ref=ae90e6a3555a49980af549e7e8db6d314d0b70c8", "patch": "@@ -2,7 +2,7 @@\n \n    - some macros CODE_FOR_... giving the insn_code_number value\n    for each of the defined standard insn names.\n-   Copyright (C) 1987 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1991 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n "}, {"sha": "55f79fc587d02eed373a94b7b5f1232f158f94b6", "filename": "gcc/genconfig.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae90e6a3555a49980af549e7e8db6d314d0b70c8/gcc%2Fgenconfig.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae90e6a3555a49980af549e7e8db6d314d0b70c8/gcc%2Fgenconfig.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenconfig.c?ref=ae90e6a3555a49980af549e7e8db6d314d0b70c8", "patch": "@@ -1,7 +1,7 @@\n /* Generate from machine description:\n \n    - some #define configuration flags.\n-   Copyright (C) 1987 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1991 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n "}, {"sha": "849c585e1660ff32f2b9a5cd5a8c79d04ca06f27", "filename": "gcc/genemit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae90e6a3555a49980af549e7e8db6d314d0b70c8/gcc%2Fgenemit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae90e6a3555a49980af549e7e8db6d314d0b70c8/gcc%2Fgenemit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenemit.c?ref=ae90e6a3555a49980af549e7e8db6d314d0b70c8", "patch": "@@ -1,5 +1,5 @@\n /* Generate code from machine description to emit insns as rtl.\n-   Copyright (C) 1987-1991 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1988, 1992 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n "}, {"sha": "bab8bf9173acf39d7f5599a8a258396e3d329591", "filename": "gcc/genextract.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae90e6a3555a49980af549e7e8db6d314d0b70c8/gcc%2Fgenextract.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae90e6a3555a49980af549e7e8db6d314d0b70c8/gcc%2Fgenextract.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenextract.c?ref=ae90e6a3555a49980af549e7e8db6d314d0b70c8", "patch": "@@ -1,5 +1,5 @@\n /* Generate code from machine description to extract operands from insn as rtl.\n-   Copyright (C) 1987 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1991 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n "}, {"sha": "d4a220d3302749f85417136e3bbd6dc7fa5253a4", "filename": "gcc/genflags.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae90e6a3555a49980af549e7e8db6d314d0b70c8/gcc%2Fgenflags.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae90e6a3555a49980af549e7e8db6d314d0b70c8/gcc%2Fgenflags.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenflags.c?ref=ae90e6a3555a49980af549e7e8db6d314d0b70c8", "patch": "@@ -2,7 +2,7 @@\n \n    - some flags HAVE_... saying which simple standard instructions are\n    available for this machine.\n-   Copyright (C) 1987 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1991 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n "}, {"sha": "24b6c9fff9b5c7ddde86fa2d18b6cdab41227ccc", "filename": "gcc/genoutput.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae90e6a3555a49980af549e7e8db6d314d0b70c8/gcc%2Fgenoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae90e6a3555a49980af549e7e8db6d314d0b70c8/gcc%2Fgenoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenoutput.c?ref=ae90e6a3555a49980af549e7e8db6d314d0b70c8", "patch": "@@ -1,5 +1,5 @@\n /* Generate code from to output assembler insns as recognized from rtl.\n-   Copyright (C) 1987, 1988, 1991 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1988, 1992 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n "}, {"sha": "b60b142a9823cde9db5a3bac7ed8089e179f9f67", "filename": "gcc/genpeep.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae90e6a3555a49980af549e7e8db6d314d0b70c8/gcc%2Fgenpeep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae90e6a3555a49980af549e7e8db6d314d0b70c8/gcc%2Fgenpeep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpeep.c?ref=ae90e6a3555a49980af549e7e8db6d314d0b70c8", "patch": "@@ -1,5 +1,5 @@\n /* Generate code from machine description to perform peephole optimizations.\n-   Copyright (C) 1987, 1989 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1989, 1992 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n "}]}