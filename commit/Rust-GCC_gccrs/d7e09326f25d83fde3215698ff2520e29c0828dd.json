{"sha": "d7e09326f25d83fde3215698ff2520e29c0828dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdlMDkzMjZmMjVkODNmZGUzMjE1Njk4ZmYyNTIwZTI5YzA4MjhkZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-06T21:53:31Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-06T21:53:31Z"}, "message": "(save_for_inline_copying, expand_inline_function): Copy\nCALL_INSN_FUNCTION_USAGE field.\n\nFrom-SVN: r7248", "tree": {"sha": "11df0441dd9deb61f4c634d796f3bb94db6718a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11df0441dd9deb61f4c634d796f3bb94db6718a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7e09326f25d83fde3215698ff2520e29c0828dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7e09326f25d83fde3215698ff2520e29c0828dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7e09326f25d83fde3215698ff2520e29c0828dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7e09326f25d83fde3215698ff2520e29c0828dd/comments", "author": null, "committer": null, "parents": [{"sha": "f88b0a82c36eefd3b89399ce2b8f8ce1968da8c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f88b0a82c36eefd3b89399ce2b8f8ce1968da8c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f88b0a82c36eefd3b89399ce2b8f8ce1968da8c5"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "e0b6f7a4d01a488a38cb2e46ce5d34093212e8cd", "filename": "gcc/integrate.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7e09326f25d83fde3215698ff2520e29c0828dd/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7e09326f25d83fde3215698ff2520e29c0828dd/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=d7e09326f25d83fde3215698ff2520e29c0828dd", "patch": "@@ -548,12 +548,17 @@ save_for_inline_copying (fndecl)\n \t  break;\n \n \tcase INSN:\n-\tcase CALL_INSN:\n \tcase JUMP_INSN:\n+\tcase CALL_INSN:\n \t  copy = rtx_alloc (GET_CODE (insn));\n+\n+\t  if (GET_CODE (insn) == CALL_INSN)\n+\t    CALL_INSN_FUNCTION_USAGE (copy) =\n+\t           copy_for_inline (CALL_INSN_FUNCTION_USAGE (insn));\n+\n \t  PATTERN (copy) = copy_for_inline (PATTERN (insn));\n \t  INSN_CODE (copy) = -1;\n-\t  LOG_LINKS (copy) = NULL;\n+\t  LOG_LINKS (copy) = NULL_RTX;\n \t  RTX_INTEGRATED_P (copy) = RTX_INTEGRATED_P (insn);\n \t  break;\n \n@@ -1758,6 +1763,11 @@ expand_inline_function (fndecl, parms, target, ignore, type, structure_value_add\n \t  pattern = copy_rtx_and_substitute (PATTERN (insn), map);\n \t  copy = emit_call_insn (pattern);\n \n+\t  /* Because the USAGE information potentially contains objects other\n+\t     than hard registers, we need to copy it.  */\n+\t  CALL_INSN_FUNCTION_USAGE (copy) =\n+\t     copy_rtx_and_substitute (CALL_INSN_FUNCTION_USAGE (insn), map);\n+\n #ifdef HAVE_cc0\n \t  if (cc0_insn)\n \t    try_constants (cc0_insn, map);"}]}