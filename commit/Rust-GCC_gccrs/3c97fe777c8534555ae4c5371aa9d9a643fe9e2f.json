{"sha": "3c97fe777c8534555ae4c5371aa9d9a643fe9e2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M5N2ZlNzc3Yzg1MzQ1NTVhZTRjNTM3MWFhOWQ5YTY0M2ZlOWUyZg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2015-10-11T22:34:28Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2015-10-11T22:34:28Z"}, "message": "Test for __cxa_thread_atexit_impl when cross-compiling libstdc++ for GNU targets.\n\nI noticed that when testing glibc with a cross compiler I got\n\nUNSUPPORTED: nptl/tst-thread_local1\n\nbecause the libstdc++-v3 configuration for cross compiling defaulted\nto __cxa_thread_atexit_impl not being available.  This patch fixes\nGLIBCXX_CROSSCONFIG to run the same test (for the case covering\ntargets with glibc) for __cxa_thread_atexit_impl as for native\ncompilation, just as it runs most of the other tests done for native\ncompilation (for these targets, it's not possible to build libstdc++\nwithout already having built libc, so link tests are OK).\n\nTested with no regressions for cross to arm-none-linux-gnueabi.\n\n\t* crossconfig.m4 (GLIBCXX_CROSSCONFIG) <*-linux* | *-uclinux* |\n\t*-gnu* | *-kfreebsd*-gnu | *-knetbsd*-gnu | *-cygwin*>: Check for\n\t__cxa_thread_atexit_impl.\n\t* configure: Regenerate.\n\nFrom-SVN: r228695", "tree": {"sha": "50f20998f70802ec884331157bb342cfdf6b2bd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50f20998f70802ec884331157bb342cfdf6b2bd6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c97fe777c8534555ae4c5371aa9d9a643fe9e2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c97fe777c8534555ae4c5371aa9d9a643fe9e2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c97fe777c8534555ae4c5371aa9d9a643fe9e2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c97fe777c8534555ae4c5371aa9d9a643fe9e2f/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d52c212f455688e7a30de9addf45ea4a84174367", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d52c212f455688e7a30de9addf45ea4a84174367", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d52c212f455688e7a30de9addf45ea4a84174367"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "e3061efca4f5f3508df853e8a8cb232c46ba0e35", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c97fe777c8534555ae4c5371aa9d9a643fe9e2f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c97fe777c8534555ae4c5371aa9d9a643fe9e2f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3c97fe777c8534555ae4c5371aa9d9a643fe9e2f", "patch": "@@ -1,3 +1,10 @@\n+2015-10-11  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* crossconfig.m4 (GLIBCXX_CROSSCONFIG) <*-linux* | *-uclinux* |\n+\t*-gnu* | *-kfreebsd*-gnu | *-knetbsd*-gnu | *-cygwin*>: Check for\n+\t__cxa_thread_atexit_impl.\n+\t* configure: Regenerate.\n+\n 2015-10-09  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/experimental/erase_if.h: Move to ..."}, {"sha": "1eb6db4ec4cde4f0218089f01675bb82b51fbbbe", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c97fe777c8534555ae4c5371aa9d9a643fe9e2f/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c97fe777c8534555ae4c5371aa9d9a643fe9e2f/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=3c97fe777c8534555ae4c5371aa9d9a643fe9e2f", "patch": "@@ -58893,6 +58893,17 @@ $as_echo \"$gcc_cv_have_tls\" >&6; }\n $as_echo \"#define HAVE_TLS 1\" >>confdefs.h\n \n   fi\n+    for ac_func in __cxa_thread_atexit_impl\n+do :\n+  ac_fn_c_check_func \"$LINENO\" \"__cxa_thread_atexit_impl\" \"ac_cv_func___cxa_thread_atexit_impl\"\n+if test \"x$ac_cv_func___cxa_thread_atexit_impl\" = x\"\"yes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE___CXA_THREAD_ATEXIT_IMPL 1\n+_ACEOF\n+\n+fi\n+done\n+\n \n \n "}, {"sha": "ece12567794b7e61418bfb654318bf994dd99fc9", "filename": "libstdc++-v3/crossconfig.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c97fe777c8534555ae4c5371aa9d9a643fe9e2f/libstdc%2B%2B-v3%2Fcrossconfig.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c97fe777c8534555ae4c5371aa9d9a643fe9e2f/libstdc%2B%2B-v3%2Fcrossconfig.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fcrossconfig.m4?ref=3c97fe777c8534555ae4c5371aa9d9a643fe9e2f", "patch": "@@ -156,6 +156,7 @@ case \"${host}\" in\n     GLIBCXX_CHECK_STDLIB_SUPPORT\n     AC_DEFINE(_GLIBCXX_USE_RANDOM_TR1)\n     GCC_CHECK_TLS\n+    AC_CHECK_FUNCS(__cxa_thread_atexit_impl)\n     AM_ICONV\n     ;;\n   *-mingw32*)"}]}